// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[non_exhaustive]
#[derive(std::fmt::Debug)]
pub enum Error {
    AuthorizationErrorError(crate::error::AuthorizationErrorError),
    ConcurrentAccessError(crate::error::ConcurrentAccessError),
    EndpointDisabledError(crate::error::EndpointDisabledError),
    FilterPolicyLimitExceededError(crate::error::FilterPolicyLimitExceededError),
    InternalErrorError(crate::error::InternalErrorError),
    InvalidParameterError(crate::error::InvalidParameterError),
    InvalidParameterValueError(crate::error::InvalidParameterValueError),
    InvalidSecurityError(crate::error::InvalidSecurityError),
    KMSAccessDeniedError(crate::error::KMSAccessDeniedError),
    KMSDisabledError(crate::error::KMSDisabledError),
    KMSInvalidStateError(crate::error::KMSInvalidStateError),
    KMSNotFoundError(crate::error::KMSNotFoundError),
    KMSOptInRequired(crate::error::KMSOptInRequired),
    KMSThrottlingError(crate::error::KMSThrottlingError),
    NotFoundError(crate::error::NotFoundError),
    OptedOutError(crate::error::OptedOutError),
    PlatformApplicationDisabledError(crate::error::PlatformApplicationDisabledError),
    ResourceNotFoundError(crate::error::ResourceNotFoundError),
    StaleTagError(crate::error::StaleTagError),
    SubscriptionLimitExceededError(crate::error::SubscriptionLimitExceededError),
    TagLimitExceededError(crate::error::TagLimitExceededError),
    TagPolicyError(crate::error::TagPolicyError),
    ThrottledError(crate::error::ThrottledError),
    TopicLimitExceededError(crate::error::TopicLimitExceededError),
    UserErrorError(crate::error::UserErrorError),
    ValidationError(crate::error::ValidationError),
    VerificationError(crate::error::VerificationError),
    Unhandled(Box<dyn std::error::Error + Send + Sync + 'static>),
}
impl std::fmt::Display for Error {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        match self {
            Error::AuthorizationErrorError(inner) => inner.fmt(f),
            Error::ConcurrentAccessError(inner) => inner.fmt(f),
            Error::EndpointDisabledError(inner) => inner.fmt(f),
            Error::FilterPolicyLimitExceededError(inner) => inner.fmt(f),
            Error::InternalErrorError(inner) => inner.fmt(f),
            Error::InvalidParameterError(inner) => inner.fmt(f),
            Error::InvalidParameterValueError(inner) => inner.fmt(f),
            Error::InvalidSecurityError(inner) => inner.fmt(f),
            Error::KMSAccessDeniedError(inner) => inner.fmt(f),
            Error::KMSDisabledError(inner) => inner.fmt(f),
            Error::KMSInvalidStateError(inner) => inner.fmt(f),
            Error::KMSNotFoundError(inner) => inner.fmt(f),
            Error::KMSOptInRequired(inner) => inner.fmt(f),
            Error::KMSThrottlingError(inner) => inner.fmt(f),
            Error::NotFoundError(inner) => inner.fmt(f),
            Error::OptedOutError(inner) => inner.fmt(f),
            Error::PlatformApplicationDisabledError(inner) => inner.fmt(f),
            Error::ResourceNotFoundError(inner) => inner.fmt(f),
            Error::StaleTagError(inner) => inner.fmt(f),
            Error::SubscriptionLimitExceededError(inner) => inner.fmt(f),
            Error::TagLimitExceededError(inner) => inner.fmt(f),
            Error::TagPolicyError(inner) => inner.fmt(f),
            Error::ThrottledError(inner) => inner.fmt(f),
            Error::TopicLimitExceededError(inner) => inner.fmt(f),
            Error::UserErrorError(inner) => inner.fmt(f),
            Error::ValidationError(inner) => inner.fmt(f),
            Error::VerificationError(inner) => inner.fmt(f),
            Error::Unhandled(inner) => inner.fmt(f),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::AddPermissionError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::AddPermissionError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::AddPermissionErrorKind::AuthorizationErrorError(inner) => {
                    Error::AuthorizationErrorError(inner)
                }
                crate::error::AddPermissionErrorKind::InternalErrorError(inner) => {
                    Error::InternalErrorError(inner)
                }
                crate::error::AddPermissionErrorKind::InvalidParameterError(inner) => {
                    Error::InvalidParameterError(inner)
                }
                crate::error::AddPermissionErrorKind::NotFoundError(inner) => {
                    Error::NotFoundError(inner)
                }
                crate::error::AddPermissionErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::CheckIfPhoneNumberIsOptedOutError>>
    for Error
{
    fn from(
        err: smithy_http::result::SdkError<crate::error::CheckIfPhoneNumberIsOptedOutError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::CheckIfPhoneNumberIsOptedOutErrorKind::AuthorizationErrorError(
                    inner,
                ) => Error::AuthorizationErrorError(inner),
                crate::error::CheckIfPhoneNumberIsOptedOutErrorKind::InternalErrorError(inner) => {
                    Error::InternalErrorError(inner)
                }
                crate::error::CheckIfPhoneNumberIsOptedOutErrorKind::InvalidParameterError(
                    inner,
                ) => Error::InvalidParameterError(inner),
                crate::error::CheckIfPhoneNumberIsOptedOutErrorKind::ThrottledError(inner) => {
                    Error::ThrottledError(inner)
                }
                crate::error::CheckIfPhoneNumberIsOptedOutErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::ConfirmSubscriptionError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::ConfirmSubscriptionError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::ConfirmSubscriptionErrorKind::AuthorizationErrorError(inner) => {
                    Error::AuthorizationErrorError(inner)
                }
                crate::error::ConfirmSubscriptionErrorKind::FilterPolicyLimitExceededError(
                    inner,
                ) => Error::FilterPolicyLimitExceededError(inner),
                crate::error::ConfirmSubscriptionErrorKind::InternalErrorError(inner) => {
                    Error::InternalErrorError(inner)
                }
                crate::error::ConfirmSubscriptionErrorKind::InvalidParameterError(inner) => {
                    Error::InvalidParameterError(inner)
                }
                crate::error::ConfirmSubscriptionErrorKind::NotFoundError(inner) => {
                    Error::NotFoundError(inner)
                }
                crate::error::ConfirmSubscriptionErrorKind::SubscriptionLimitExceededError(
                    inner,
                ) => Error::SubscriptionLimitExceededError(inner),
                crate::error::ConfirmSubscriptionErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::CreatePlatformApplicationError>> for Error {
    fn from(
        err: smithy_http::result::SdkError<crate::error::CreatePlatformApplicationError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::CreatePlatformApplicationErrorKind::AuthorizationErrorError(
                    inner,
                ) => Error::AuthorizationErrorError(inner),
                crate::error::CreatePlatformApplicationErrorKind::InternalErrorError(inner) => {
                    Error::InternalErrorError(inner)
                }
                crate::error::CreatePlatformApplicationErrorKind::InvalidParameterError(inner) => {
                    Error::InvalidParameterError(inner)
                }
                crate::error::CreatePlatformApplicationErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::CreatePlatformEndpointError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::CreatePlatformEndpointError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::CreatePlatformEndpointErrorKind::AuthorizationErrorError(inner) => {
                    Error::AuthorizationErrorError(inner)
                }
                crate::error::CreatePlatformEndpointErrorKind::InternalErrorError(inner) => {
                    Error::InternalErrorError(inner)
                }
                crate::error::CreatePlatformEndpointErrorKind::InvalidParameterError(inner) => {
                    Error::InvalidParameterError(inner)
                }
                crate::error::CreatePlatformEndpointErrorKind::NotFoundError(inner) => {
                    Error::NotFoundError(inner)
                }
                crate::error::CreatePlatformEndpointErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::CreateSMSSandboxPhoneNumberError>> for Error {
    fn from(
        err: smithy_http::result::SdkError<crate::error::CreateSMSSandboxPhoneNumberError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::CreateSMSSandboxPhoneNumberErrorKind::AuthorizationErrorError(
                    inner,
                ) => Error::AuthorizationErrorError(inner),
                crate::error::CreateSMSSandboxPhoneNumberErrorKind::InternalErrorError(inner) => {
                    Error::InternalErrorError(inner)
                }
                crate::error::CreateSMSSandboxPhoneNumberErrorKind::InvalidParameterError(
                    inner,
                ) => Error::InvalidParameterError(inner),
                crate::error::CreateSMSSandboxPhoneNumberErrorKind::OptedOutError(inner) => {
                    Error::OptedOutError(inner)
                }
                crate::error::CreateSMSSandboxPhoneNumberErrorKind::ThrottledError(inner) => {
                    Error::ThrottledError(inner)
                }
                crate::error::CreateSMSSandboxPhoneNumberErrorKind::UserErrorError(inner) => {
                    Error::UserErrorError(inner)
                }
                crate::error::CreateSMSSandboxPhoneNumberErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::CreateTopicError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::CreateTopicError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::CreateTopicErrorKind::AuthorizationErrorError(inner) => {
                    Error::AuthorizationErrorError(inner)
                }
                crate::error::CreateTopicErrorKind::ConcurrentAccessError(inner) => {
                    Error::ConcurrentAccessError(inner)
                }
                crate::error::CreateTopicErrorKind::InternalErrorError(inner) => {
                    Error::InternalErrorError(inner)
                }
                crate::error::CreateTopicErrorKind::InvalidParameterError(inner) => {
                    Error::InvalidParameterError(inner)
                }
                crate::error::CreateTopicErrorKind::InvalidSecurityError(inner) => {
                    Error::InvalidSecurityError(inner)
                }
                crate::error::CreateTopicErrorKind::StaleTagError(inner) => {
                    Error::StaleTagError(inner)
                }
                crate::error::CreateTopicErrorKind::TagLimitExceededError(inner) => {
                    Error::TagLimitExceededError(inner)
                }
                crate::error::CreateTopicErrorKind::TagPolicyError(inner) => {
                    Error::TagPolicyError(inner)
                }
                crate::error::CreateTopicErrorKind::TopicLimitExceededError(inner) => {
                    Error::TopicLimitExceededError(inner)
                }
                crate::error::CreateTopicErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DeleteEndpointError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::DeleteEndpointError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::DeleteEndpointErrorKind::AuthorizationErrorError(inner) => {
                    Error::AuthorizationErrorError(inner)
                }
                crate::error::DeleteEndpointErrorKind::InternalErrorError(inner) => {
                    Error::InternalErrorError(inner)
                }
                crate::error::DeleteEndpointErrorKind::InvalidParameterError(inner) => {
                    Error::InvalidParameterError(inner)
                }
                crate::error::DeleteEndpointErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DeletePlatformApplicationError>> for Error {
    fn from(
        err: smithy_http::result::SdkError<crate::error::DeletePlatformApplicationError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::DeletePlatformApplicationErrorKind::AuthorizationErrorError(
                    inner,
                ) => Error::AuthorizationErrorError(inner),
                crate::error::DeletePlatformApplicationErrorKind::InternalErrorError(inner) => {
                    Error::InternalErrorError(inner)
                }
                crate::error::DeletePlatformApplicationErrorKind::InvalidParameterError(inner) => {
                    Error::InvalidParameterError(inner)
                }
                crate::error::DeletePlatformApplicationErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DeleteSMSSandboxPhoneNumberError>> for Error {
    fn from(
        err: smithy_http::result::SdkError<crate::error::DeleteSMSSandboxPhoneNumberError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::DeleteSMSSandboxPhoneNumberErrorKind::AuthorizationErrorError(
                    inner,
                ) => Error::AuthorizationErrorError(inner),
                crate::error::DeleteSMSSandboxPhoneNumberErrorKind::InternalErrorError(inner) => {
                    Error::InternalErrorError(inner)
                }
                crate::error::DeleteSMSSandboxPhoneNumberErrorKind::InvalidParameterError(
                    inner,
                ) => Error::InvalidParameterError(inner),
                crate::error::DeleteSMSSandboxPhoneNumberErrorKind::ResourceNotFoundError(
                    inner,
                ) => Error::ResourceNotFoundError(inner),
                crate::error::DeleteSMSSandboxPhoneNumberErrorKind::ThrottledError(inner) => {
                    Error::ThrottledError(inner)
                }
                crate::error::DeleteSMSSandboxPhoneNumberErrorKind::UserErrorError(inner) => {
                    Error::UserErrorError(inner)
                }
                crate::error::DeleteSMSSandboxPhoneNumberErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DeleteTopicError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::DeleteTopicError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::DeleteTopicErrorKind::AuthorizationErrorError(inner) => {
                    Error::AuthorizationErrorError(inner)
                }
                crate::error::DeleteTopicErrorKind::ConcurrentAccessError(inner) => {
                    Error::ConcurrentAccessError(inner)
                }
                crate::error::DeleteTopicErrorKind::InternalErrorError(inner) => {
                    Error::InternalErrorError(inner)
                }
                crate::error::DeleteTopicErrorKind::InvalidParameterError(inner) => {
                    Error::InvalidParameterError(inner)
                }
                crate::error::DeleteTopicErrorKind::NotFoundError(inner) => {
                    Error::NotFoundError(inner)
                }
                crate::error::DeleteTopicErrorKind::StaleTagError(inner) => {
                    Error::StaleTagError(inner)
                }
                crate::error::DeleteTopicErrorKind::TagPolicyError(inner) => {
                    Error::TagPolicyError(inner)
                }
                crate::error::DeleteTopicErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::GetEndpointAttributesError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::GetEndpointAttributesError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::GetEndpointAttributesErrorKind::AuthorizationErrorError(inner) => {
                    Error::AuthorizationErrorError(inner)
                }
                crate::error::GetEndpointAttributesErrorKind::InternalErrorError(inner) => {
                    Error::InternalErrorError(inner)
                }
                crate::error::GetEndpointAttributesErrorKind::InvalidParameterError(inner) => {
                    Error::InvalidParameterError(inner)
                }
                crate::error::GetEndpointAttributesErrorKind::NotFoundError(inner) => {
                    Error::NotFoundError(inner)
                }
                crate::error::GetEndpointAttributesErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::GetPlatformApplicationAttributesError>>
    for Error
{
    fn from(
        err: smithy_http::result::SdkError<crate::error::GetPlatformApplicationAttributesError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::GetPlatformApplicationAttributesErrorKind::AuthorizationErrorError(inner) => Error::AuthorizationErrorError(inner),
                crate::error::GetPlatformApplicationAttributesErrorKind::InternalErrorError(inner) => Error::InternalErrorError(inner),
                crate::error::GetPlatformApplicationAttributesErrorKind::InvalidParameterError(inner) => Error::InvalidParameterError(inner),
                crate::error::GetPlatformApplicationAttributesErrorKind::NotFoundError(inner) => Error::NotFoundError(inner),
                crate::error::GetPlatformApplicationAttributesErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::GetSMSAttributesError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::GetSMSAttributesError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::GetSMSAttributesErrorKind::AuthorizationErrorError(inner) => {
                    Error::AuthorizationErrorError(inner)
                }
                crate::error::GetSMSAttributesErrorKind::InternalErrorError(inner) => {
                    Error::InternalErrorError(inner)
                }
                crate::error::GetSMSAttributesErrorKind::InvalidParameterError(inner) => {
                    Error::InvalidParameterError(inner)
                }
                crate::error::GetSMSAttributesErrorKind::ThrottledError(inner) => {
                    Error::ThrottledError(inner)
                }
                crate::error::GetSMSAttributesErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::GetSMSSandboxAccountStatusError>> for Error {
    fn from(
        err: smithy_http::result::SdkError<crate::error::GetSMSSandboxAccountStatusError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::GetSMSSandboxAccountStatusErrorKind::AuthorizationErrorError(
                    inner,
                ) => Error::AuthorizationErrorError(inner),
                crate::error::GetSMSSandboxAccountStatusErrorKind::InternalErrorError(inner) => {
                    Error::InternalErrorError(inner)
                }
                crate::error::GetSMSSandboxAccountStatusErrorKind::ThrottledError(inner) => {
                    Error::ThrottledError(inner)
                }
                crate::error::GetSMSSandboxAccountStatusErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::GetSubscriptionAttributesError>> for Error {
    fn from(
        err: smithy_http::result::SdkError<crate::error::GetSubscriptionAttributesError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::GetSubscriptionAttributesErrorKind::AuthorizationErrorError(
                    inner,
                ) => Error::AuthorizationErrorError(inner),
                crate::error::GetSubscriptionAttributesErrorKind::InternalErrorError(inner) => {
                    Error::InternalErrorError(inner)
                }
                crate::error::GetSubscriptionAttributesErrorKind::InvalidParameterError(inner) => {
                    Error::InvalidParameterError(inner)
                }
                crate::error::GetSubscriptionAttributesErrorKind::NotFoundError(inner) => {
                    Error::NotFoundError(inner)
                }
                crate::error::GetSubscriptionAttributesErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::GetTopicAttributesError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::GetTopicAttributesError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::GetTopicAttributesErrorKind::AuthorizationErrorError(inner) => {
                    Error::AuthorizationErrorError(inner)
                }
                crate::error::GetTopicAttributesErrorKind::InternalErrorError(inner) => {
                    Error::InternalErrorError(inner)
                }
                crate::error::GetTopicAttributesErrorKind::InvalidParameterError(inner) => {
                    Error::InvalidParameterError(inner)
                }
                crate::error::GetTopicAttributesErrorKind::InvalidSecurityError(inner) => {
                    Error::InvalidSecurityError(inner)
                }
                crate::error::GetTopicAttributesErrorKind::NotFoundError(inner) => {
                    Error::NotFoundError(inner)
                }
                crate::error::GetTopicAttributesErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::ListEndpointsByPlatformApplicationError>>
    for Error
{
    fn from(
        err: smithy_http::result::SdkError<crate::error::ListEndpointsByPlatformApplicationError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::ListEndpointsByPlatformApplicationErrorKind::AuthorizationErrorError(inner) => Error::AuthorizationErrorError(inner),
                crate::error::ListEndpointsByPlatformApplicationErrorKind::InternalErrorError(inner) => Error::InternalErrorError(inner),
                crate::error::ListEndpointsByPlatformApplicationErrorKind::InvalidParameterError(inner) => Error::InvalidParameterError(inner),
                crate::error::ListEndpointsByPlatformApplicationErrorKind::NotFoundError(inner) => Error::NotFoundError(inner),
                crate::error::ListEndpointsByPlatformApplicationErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::ListOriginationNumbersError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::ListOriginationNumbersError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::ListOriginationNumbersErrorKind::AuthorizationErrorError(inner) => {
                    Error::AuthorizationErrorError(inner)
                }
                crate::error::ListOriginationNumbersErrorKind::InternalErrorError(inner) => {
                    Error::InternalErrorError(inner)
                }
                crate::error::ListOriginationNumbersErrorKind::InvalidParameterError(inner) => {
                    Error::InvalidParameterError(inner)
                }
                crate::error::ListOriginationNumbersErrorKind::ThrottledError(inner) => {
                    Error::ThrottledError(inner)
                }
                crate::error::ListOriginationNumbersErrorKind::ValidationError(inner) => {
                    Error::ValidationError(inner)
                }
                crate::error::ListOriginationNumbersErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::ListPhoneNumbersOptedOutError>> for Error {
    fn from(
        err: smithy_http::result::SdkError<crate::error::ListPhoneNumbersOptedOutError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::ListPhoneNumbersOptedOutErrorKind::AuthorizationErrorError(inner) => {
                    Error::AuthorizationErrorError(inner)
                }
                crate::error::ListPhoneNumbersOptedOutErrorKind::InternalErrorError(inner) => {
                    Error::InternalErrorError(inner)
                }
                crate::error::ListPhoneNumbersOptedOutErrorKind::InvalidParameterError(inner) => {
                    Error::InvalidParameterError(inner)
                }
                crate::error::ListPhoneNumbersOptedOutErrorKind::ThrottledError(inner) => {
                    Error::ThrottledError(inner)
                }
                crate::error::ListPhoneNumbersOptedOutErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::ListPlatformApplicationsError>> for Error {
    fn from(
        err: smithy_http::result::SdkError<crate::error::ListPlatformApplicationsError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::ListPlatformApplicationsErrorKind::AuthorizationErrorError(inner) => {
                    Error::AuthorizationErrorError(inner)
                }
                crate::error::ListPlatformApplicationsErrorKind::InternalErrorError(inner) => {
                    Error::InternalErrorError(inner)
                }
                crate::error::ListPlatformApplicationsErrorKind::InvalidParameterError(inner) => {
                    Error::InvalidParameterError(inner)
                }
                crate::error::ListPlatformApplicationsErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::ListSMSSandboxPhoneNumbersError>> for Error {
    fn from(
        err: smithy_http::result::SdkError<crate::error::ListSMSSandboxPhoneNumbersError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::ListSMSSandboxPhoneNumbersErrorKind::AuthorizationErrorError(
                    inner,
                ) => Error::AuthorizationErrorError(inner),
                crate::error::ListSMSSandboxPhoneNumbersErrorKind::InternalErrorError(inner) => {
                    Error::InternalErrorError(inner)
                }
                crate::error::ListSMSSandboxPhoneNumbersErrorKind::InvalidParameterError(inner) => {
                    Error::InvalidParameterError(inner)
                }
                crate::error::ListSMSSandboxPhoneNumbersErrorKind::ResourceNotFoundError(inner) => {
                    Error::ResourceNotFoundError(inner)
                }
                crate::error::ListSMSSandboxPhoneNumbersErrorKind::ThrottledError(inner) => {
                    Error::ThrottledError(inner)
                }
                crate::error::ListSMSSandboxPhoneNumbersErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::ListSubscriptionsError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::ListSubscriptionsError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::ListSubscriptionsErrorKind::AuthorizationErrorError(inner) => {
                    Error::AuthorizationErrorError(inner)
                }
                crate::error::ListSubscriptionsErrorKind::InternalErrorError(inner) => {
                    Error::InternalErrorError(inner)
                }
                crate::error::ListSubscriptionsErrorKind::InvalidParameterError(inner) => {
                    Error::InvalidParameterError(inner)
                }
                crate::error::ListSubscriptionsErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::ListSubscriptionsByTopicError>> for Error {
    fn from(
        err: smithy_http::result::SdkError<crate::error::ListSubscriptionsByTopicError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::ListSubscriptionsByTopicErrorKind::AuthorizationErrorError(inner) => {
                    Error::AuthorizationErrorError(inner)
                }
                crate::error::ListSubscriptionsByTopicErrorKind::InternalErrorError(inner) => {
                    Error::InternalErrorError(inner)
                }
                crate::error::ListSubscriptionsByTopicErrorKind::InvalidParameterError(inner) => {
                    Error::InvalidParameterError(inner)
                }
                crate::error::ListSubscriptionsByTopicErrorKind::NotFoundError(inner) => {
                    Error::NotFoundError(inner)
                }
                crate::error::ListSubscriptionsByTopicErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::ListTagsForResourceError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::ListTagsForResourceError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::ListTagsForResourceErrorKind::AuthorizationErrorError(inner) => {
                    Error::AuthorizationErrorError(inner)
                }
                crate::error::ListTagsForResourceErrorKind::ConcurrentAccessError(inner) => {
                    Error::ConcurrentAccessError(inner)
                }
                crate::error::ListTagsForResourceErrorKind::InvalidParameterError(inner) => {
                    Error::InvalidParameterError(inner)
                }
                crate::error::ListTagsForResourceErrorKind::ResourceNotFoundError(inner) => {
                    Error::ResourceNotFoundError(inner)
                }
                crate::error::ListTagsForResourceErrorKind::TagPolicyError(inner) => {
                    Error::TagPolicyError(inner)
                }
                crate::error::ListTagsForResourceErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::ListTopicsError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::ListTopicsError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::ListTopicsErrorKind::AuthorizationErrorError(inner) => {
                    Error::AuthorizationErrorError(inner)
                }
                crate::error::ListTopicsErrorKind::InternalErrorError(inner) => {
                    Error::InternalErrorError(inner)
                }
                crate::error::ListTopicsErrorKind::InvalidParameterError(inner) => {
                    Error::InvalidParameterError(inner)
                }
                crate::error::ListTopicsErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::OptInPhoneNumberError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::OptInPhoneNumberError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::OptInPhoneNumberErrorKind::AuthorizationErrorError(inner) => {
                    Error::AuthorizationErrorError(inner)
                }
                crate::error::OptInPhoneNumberErrorKind::InternalErrorError(inner) => {
                    Error::InternalErrorError(inner)
                }
                crate::error::OptInPhoneNumberErrorKind::InvalidParameterError(inner) => {
                    Error::InvalidParameterError(inner)
                }
                crate::error::OptInPhoneNumberErrorKind::ThrottledError(inner) => {
                    Error::ThrottledError(inner)
                }
                crate::error::OptInPhoneNumberErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::PublishError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::PublishError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::PublishErrorKind::AuthorizationErrorError(inner) => {
                    Error::AuthorizationErrorError(inner)
                }
                crate::error::PublishErrorKind::EndpointDisabledError(inner) => {
                    Error::EndpointDisabledError(inner)
                }
                crate::error::PublishErrorKind::InternalErrorError(inner) => {
                    Error::InternalErrorError(inner)
                }
                crate::error::PublishErrorKind::InvalidParameterError(inner) => {
                    Error::InvalidParameterError(inner)
                }
                crate::error::PublishErrorKind::InvalidParameterValueError(inner) => {
                    Error::InvalidParameterValueError(inner)
                }
                crate::error::PublishErrorKind::InvalidSecurityError(inner) => {
                    Error::InvalidSecurityError(inner)
                }
                crate::error::PublishErrorKind::KMSAccessDeniedError(inner) => {
                    Error::KMSAccessDeniedError(inner)
                }
                crate::error::PublishErrorKind::KMSDisabledError(inner) => {
                    Error::KMSDisabledError(inner)
                }
                crate::error::PublishErrorKind::KMSInvalidStateError(inner) => {
                    Error::KMSInvalidStateError(inner)
                }
                crate::error::PublishErrorKind::KMSNotFoundError(inner) => {
                    Error::KMSNotFoundError(inner)
                }
                crate::error::PublishErrorKind::KMSOptInRequired(inner) => {
                    Error::KMSOptInRequired(inner)
                }
                crate::error::PublishErrorKind::KMSThrottlingError(inner) => {
                    Error::KMSThrottlingError(inner)
                }
                crate::error::PublishErrorKind::NotFoundError(inner) => Error::NotFoundError(inner),
                crate::error::PublishErrorKind::PlatformApplicationDisabledError(inner) => {
                    Error::PlatformApplicationDisabledError(inner)
                }
                crate::error::PublishErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::RemovePermissionError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::RemovePermissionError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::RemovePermissionErrorKind::AuthorizationErrorError(inner) => {
                    Error::AuthorizationErrorError(inner)
                }
                crate::error::RemovePermissionErrorKind::InternalErrorError(inner) => {
                    Error::InternalErrorError(inner)
                }
                crate::error::RemovePermissionErrorKind::InvalidParameterError(inner) => {
                    Error::InvalidParameterError(inner)
                }
                crate::error::RemovePermissionErrorKind::NotFoundError(inner) => {
                    Error::NotFoundError(inner)
                }
                crate::error::RemovePermissionErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::SetEndpointAttributesError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::SetEndpointAttributesError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::SetEndpointAttributesErrorKind::AuthorizationErrorError(inner) => {
                    Error::AuthorizationErrorError(inner)
                }
                crate::error::SetEndpointAttributesErrorKind::InternalErrorError(inner) => {
                    Error::InternalErrorError(inner)
                }
                crate::error::SetEndpointAttributesErrorKind::InvalidParameterError(inner) => {
                    Error::InvalidParameterError(inner)
                }
                crate::error::SetEndpointAttributesErrorKind::NotFoundError(inner) => {
                    Error::NotFoundError(inner)
                }
                crate::error::SetEndpointAttributesErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::SetPlatformApplicationAttributesError>>
    for Error
{
    fn from(
        err: smithy_http::result::SdkError<crate::error::SetPlatformApplicationAttributesError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::SetPlatformApplicationAttributesErrorKind::AuthorizationErrorError(inner) => Error::AuthorizationErrorError(inner),
                crate::error::SetPlatformApplicationAttributesErrorKind::InternalErrorError(inner) => Error::InternalErrorError(inner),
                crate::error::SetPlatformApplicationAttributesErrorKind::InvalidParameterError(inner) => Error::InvalidParameterError(inner),
                crate::error::SetPlatformApplicationAttributesErrorKind::NotFoundError(inner) => Error::NotFoundError(inner),
                crate::error::SetPlatformApplicationAttributesErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::SetSMSAttributesError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::SetSMSAttributesError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::SetSMSAttributesErrorKind::AuthorizationErrorError(inner) => {
                    Error::AuthorizationErrorError(inner)
                }
                crate::error::SetSMSAttributesErrorKind::InternalErrorError(inner) => {
                    Error::InternalErrorError(inner)
                }
                crate::error::SetSMSAttributesErrorKind::InvalidParameterError(inner) => {
                    Error::InvalidParameterError(inner)
                }
                crate::error::SetSMSAttributesErrorKind::ThrottledError(inner) => {
                    Error::ThrottledError(inner)
                }
                crate::error::SetSMSAttributesErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::SetSubscriptionAttributesError>> for Error {
    fn from(
        err: smithy_http::result::SdkError<crate::error::SetSubscriptionAttributesError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::SetSubscriptionAttributesErrorKind::AuthorizationErrorError(inner) => Error::AuthorizationErrorError(inner),
                crate::error::SetSubscriptionAttributesErrorKind::FilterPolicyLimitExceededError(inner) => Error::FilterPolicyLimitExceededError(inner),
                crate::error::SetSubscriptionAttributesErrorKind::InternalErrorError(inner) => Error::InternalErrorError(inner),
                crate::error::SetSubscriptionAttributesErrorKind::InvalidParameterError(inner) => Error::InvalidParameterError(inner),
                crate::error::SetSubscriptionAttributesErrorKind::NotFoundError(inner) => Error::NotFoundError(inner),
                crate::error::SetSubscriptionAttributesErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::SetTopicAttributesError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::SetTopicAttributesError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::SetTopicAttributesErrorKind::AuthorizationErrorError(inner) => {
                    Error::AuthorizationErrorError(inner)
                }
                crate::error::SetTopicAttributesErrorKind::InternalErrorError(inner) => {
                    Error::InternalErrorError(inner)
                }
                crate::error::SetTopicAttributesErrorKind::InvalidParameterError(inner) => {
                    Error::InvalidParameterError(inner)
                }
                crate::error::SetTopicAttributesErrorKind::InvalidSecurityError(inner) => {
                    Error::InvalidSecurityError(inner)
                }
                crate::error::SetTopicAttributesErrorKind::NotFoundError(inner) => {
                    Error::NotFoundError(inner)
                }
                crate::error::SetTopicAttributesErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::SubscribeError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::SubscribeError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::SubscribeErrorKind::AuthorizationErrorError(inner) => {
                    Error::AuthorizationErrorError(inner)
                }
                crate::error::SubscribeErrorKind::FilterPolicyLimitExceededError(inner) => {
                    Error::FilterPolicyLimitExceededError(inner)
                }
                crate::error::SubscribeErrorKind::InternalErrorError(inner) => {
                    Error::InternalErrorError(inner)
                }
                crate::error::SubscribeErrorKind::InvalidParameterError(inner) => {
                    Error::InvalidParameterError(inner)
                }
                crate::error::SubscribeErrorKind::InvalidSecurityError(inner) => {
                    Error::InvalidSecurityError(inner)
                }
                crate::error::SubscribeErrorKind::NotFoundError(inner) => {
                    Error::NotFoundError(inner)
                }
                crate::error::SubscribeErrorKind::SubscriptionLimitExceededError(inner) => {
                    Error::SubscriptionLimitExceededError(inner)
                }
                crate::error::SubscribeErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::TagResourceError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::TagResourceError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::TagResourceErrorKind::AuthorizationErrorError(inner) => {
                    Error::AuthorizationErrorError(inner)
                }
                crate::error::TagResourceErrorKind::ConcurrentAccessError(inner) => {
                    Error::ConcurrentAccessError(inner)
                }
                crate::error::TagResourceErrorKind::InvalidParameterError(inner) => {
                    Error::InvalidParameterError(inner)
                }
                crate::error::TagResourceErrorKind::ResourceNotFoundError(inner) => {
                    Error::ResourceNotFoundError(inner)
                }
                crate::error::TagResourceErrorKind::StaleTagError(inner) => {
                    Error::StaleTagError(inner)
                }
                crate::error::TagResourceErrorKind::TagLimitExceededError(inner) => {
                    Error::TagLimitExceededError(inner)
                }
                crate::error::TagResourceErrorKind::TagPolicyError(inner) => {
                    Error::TagPolicyError(inner)
                }
                crate::error::TagResourceErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::UnsubscribeError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::UnsubscribeError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::UnsubscribeErrorKind::AuthorizationErrorError(inner) => {
                    Error::AuthorizationErrorError(inner)
                }
                crate::error::UnsubscribeErrorKind::InternalErrorError(inner) => {
                    Error::InternalErrorError(inner)
                }
                crate::error::UnsubscribeErrorKind::InvalidParameterError(inner) => {
                    Error::InvalidParameterError(inner)
                }
                crate::error::UnsubscribeErrorKind::InvalidSecurityError(inner) => {
                    Error::InvalidSecurityError(inner)
                }
                crate::error::UnsubscribeErrorKind::NotFoundError(inner) => {
                    Error::NotFoundError(inner)
                }
                crate::error::UnsubscribeErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::UntagResourceError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::UntagResourceError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::UntagResourceErrorKind::AuthorizationErrorError(inner) => {
                    Error::AuthorizationErrorError(inner)
                }
                crate::error::UntagResourceErrorKind::ConcurrentAccessError(inner) => {
                    Error::ConcurrentAccessError(inner)
                }
                crate::error::UntagResourceErrorKind::InvalidParameterError(inner) => {
                    Error::InvalidParameterError(inner)
                }
                crate::error::UntagResourceErrorKind::ResourceNotFoundError(inner) => {
                    Error::ResourceNotFoundError(inner)
                }
                crate::error::UntagResourceErrorKind::StaleTagError(inner) => {
                    Error::StaleTagError(inner)
                }
                crate::error::UntagResourceErrorKind::TagLimitExceededError(inner) => {
                    Error::TagLimitExceededError(inner)
                }
                crate::error::UntagResourceErrorKind::TagPolicyError(inner) => {
                    Error::TagPolicyError(inner)
                }
                crate::error::UntagResourceErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::VerifySMSSandboxPhoneNumberError>> for Error {
    fn from(
        err: smithy_http::result::SdkError<crate::error::VerifySMSSandboxPhoneNumberError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::VerifySMSSandboxPhoneNumberErrorKind::AuthorizationErrorError(
                    inner,
                ) => Error::AuthorizationErrorError(inner),
                crate::error::VerifySMSSandboxPhoneNumberErrorKind::InternalErrorError(inner) => {
                    Error::InternalErrorError(inner)
                }
                crate::error::VerifySMSSandboxPhoneNumberErrorKind::InvalidParameterError(
                    inner,
                ) => Error::InvalidParameterError(inner),
                crate::error::VerifySMSSandboxPhoneNumberErrorKind::ResourceNotFoundError(
                    inner,
                ) => Error::ResourceNotFoundError(inner),
                crate::error::VerifySMSSandboxPhoneNumberErrorKind::ThrottledError(inner) => {
                    Error::ThrottledError(inner)
                }
                crate::error::VerifySMSSandboxPhoneNumberErrorKind::VerificationError(inner) => {
                    Error::VerificationError(inner)
                }
                crate::error::VerifySMSSandboxPhoneNumberErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl std::error::Error for Error {}
