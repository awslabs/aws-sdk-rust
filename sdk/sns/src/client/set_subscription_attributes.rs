// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`SetSubscriptionAttributes`](crate::operation::set_subscription_attributes::builders::SetSubscriptionAttributesFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`subscription_arn(impl Into<String>)`](crate::operation::set_subscription_attributes::builders::SetSubscriptionAttributesFluentBuilder::subscription_arn) / [`set_subscription_arn(Option<String>)`](crate::operation::set_subscription_attributes::builders::SetSubscriptionAttributesFluentBuilder::set_subscription_arn):<br>required: **true**<br><p>The ARN of the subscription to modify.</p><br>
    ///   - [`attribute_name(impl Into<String>)`](crate::operation::set_subscription_attributes::builders::SetSubscriptionAttributesFluentBuilder::attribute_name) / [`set_attribute_name(Option<String>)`](crate::operation::set_subscription_attributes::builders::SetSubscriptionAttributesFluentBuilder::set_attribute_name):<br>required: **true**<br><p>A map of attributes with their corresponding values.</p>  <p>The following lists the names, descriptions, and values of the special request parameters that this action uses:</p>  <ul>   <li> <p> <code>DeliveryPolicy</code> – The policy that defines how Amazon SNS retries failed deliveries to HTTP/S endpoints.</p> </li>   <li> <p> <code>FilterPolicy</code> – The simple JSON object that lets your subscriber receive only a subset of messages, rather than receiving every message published to the topic.</p> </li>   <li> <p> <code>FilterPolicyScope</code> – This attribute lets you choose the filtering scope by using one of the following string value types:</p>    <ul>     <li> <p> <code>MessageAttributes</code> (default) – The filter is applied on the message attributes.</p> </li>     <li> <p> <code>MessageBody</code> – The filter is applied on the message body.</p> </li>    </ul> </li>   <li> <p> <code>RawMessageDelivery</code> – When set to <code>true</code>, enables raw message delivery to Amazon SQS or HTTP/S endpoints. This eliminates the need for the endpoints to process JSON formatting, which is otherwise created for Amazon SNS metadata.</p> </li>   <li> <p> <code>RedrivePolicy</code> – When specified, sends undeliverable messages to the specified Amazon SQS dead-letter queue. Messages that can't be delivered due to client errors (for example, when the subscribed endpoint is unreachable) or server errors (for example, when the service that powers the subscribed endpoint becomes unavailable) are held in the dead-letter queue for further analysis or reprocessing.</p> </li>  </ul>  <p>The following attribute applies only to Amazon Kinesis Data Firehose delivery stream subscriptions:</p>  <ul>   <li> <p> <code>SubscriptionRoleArn</code> – The ARN of the IAM role that has the following:</p>    <ul>     <li> <p>Permission to write to the Kinesis Data Firehose delivery stream</p> </li>     <li> <p>Amazon SNS listed as a trusted entity</p> </li>    </ul> <p>Specifying a valid ARN for this attribute is required for Kinesis Data Firehose delivery stream subscriptions. For more information, see <a href="https://docs.aws.amazon.com/sns/latest/dg/sns-firehose-as-subscriber.html">Fanout to Kinesis Data Firehose delivery streams</a> in the <i>Amazon SNS Developer Guide</i>.</p> </li>  </ul><br>
    ///   - [`attribute_value(impl Into<String>)`](crate::operation::set_subscription_attributes::builders::SetSubscriptionAttributesFluentBuilder::attribute_value) / [`set_attribute_value(Option<String>)`](crate::operation::set_subscription_attributes::builders::SetSubscriptionAttributesFluentBuilder::set_attribute_value):<br>required: **false**<br><p>The new value for the attribute in JSON format.</p><br>
    /// - On success, responds with [`SetSubscriptionAttributesOutput`](crate::operation::set_subscription_attributes::SetSubscriptionAttributesOutput)
    /// - On failure, responds with [`SdkError<SetSubscriptionAttributesError>`](crate::operation::set_subscription_attributes::SetSubscriptionAttributesError)
    pub fn set_subscription_attributes(&self) -> crate::operation::set_subscription_attributes::builders::SetSubscriptionAttributesFluentBuilder {
        crate::operation::set_subscription_attributes::builders::SetSubscriptionAttributesFluentBuilder::new(self.handle.clone())
    }
}
