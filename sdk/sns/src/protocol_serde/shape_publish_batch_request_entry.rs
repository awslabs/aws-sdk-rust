// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(unused_mut)]
pub fn ser_publish_batch_request_entry(
    mut writer: ::aws_smithy_query::QueryValueWriter,
    input: &crate::types::PublishBatchRequestEntry,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    #[allow(unused_mut)]
    let mut scope_1 = writer.prefix("Id");
    {
        scope_1.string(&input.id);
    }
    #[allow(unused_mut)]
    let mut scope_2 = writer.prefix("Message");
    {
        scope_2.string(&input.message);
    }
    #[allow(unused_mut)]
    let mut scope_3 = writer.prefix("Subject");
    if let Some(var_4) = &input.subject {
        scope_3.string(var_4);
    }
    #[allow(unused_mut)]
    let mut scope_5 = writer.prefix("MessageStructure");
    if let Some(var_6) = &input.message_structure {
        scope_5.string(var_6);
    }
    #[allow(unused_mut)]
    let mut scope_7 = writer.prefix("MessageAttributes");
    if let Some(var_8) = &input.message_attributes {
        let mut map_9 = scope_7.start_map(false, "Name", "Value");
        for (key_10, value_11) in var_8 {
            #[allow(unused_mut)]
            let mut entry_12 = map_9.entry(key_10);
            {
                crate::protocol_serde::shape_message_attribute_value::ser_message_attribute_value(entry_12, value_11)?;
            }
        }
        map_9.finish();
    }
    #[allow(unused_mut)]
    let mut scope_13 = writer.prefix("MessageDeduplicationId");
    if let Some(var_14) = &input.message_deduplication_id {
        scope_13.string(var_14);
    }
    #[allow(unused_mut)]
    let mut scope_15 = writer.prefix("MessageGroupId");
    if let Some(var_16) = &input.message_group_id {
        scope_15.string(var_16);
    }
    Ok(())
}
