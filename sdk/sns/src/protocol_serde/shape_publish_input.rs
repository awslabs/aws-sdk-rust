// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_publish_input_input(
    input: &crate::operation::publish::PublishInput,
) -> Result<::aws_smithy_types::body::SdkBody, ::aws_smithy_types::error::operation::SerializationError> {
    let mut out = String::new();
    #[allow(unused_mut)]
    let mut writer = ::aws_smithy_query::QueryWriter::new(&mut out, "Publish", "2010-03-31");
    #[allow(unused_mut)]
    let mut scope_1 = writer.prefix("TopicArn");
    if let Some(var_2) = &input.topic_arn {
        scope_1.string(var_2);
    }
    #[allow(unused_mut)]
    let mut scope_3 = writer.prefix("TargetArn");
    if let Some(var_4) = &input.target_arn {
        scope_3.string(var_4);
    }
    #[allow(unused_mut)]
    let mut scope_5 = writer.prefix("PhoneNumber");
    if let Some(var_6) = &input.phone_number {
        scope_5.string(var_6);
    }
    #[allow(unused_mut)]
    let mut scope_7 = writer.prefix("Message");
    if let Some(var_8) = &input.message {
        scope_7.string(var_8);
    }
    #[allow(unused_mut)]
    let mut scope_9 = writer.prefix("Subject");
    if let Some(var_10) = &input.subject {
        scope_9.string(var_10);
    }
    #[allow(unused_mut)]
    let mut scope_11 = writer.prefix("MessageStructure");
    if let Some(var_12) = &input.message_structure {
        scope_11.string(var_12);
    }
    #[allow(unused_mut)]
    let mut scope_13 = writer.prefix("MessageAttributes");
    if let Some(var_14) = &input.message_attributes {
        let mut map_15 = scope_13.start_map(false, "Name", "Value");
        for (key_16, value_17) in var_14 {
            #[allow(unused_mut)]
            let mut entry_18 = map_15.entry(key_16);
            {
                crate::protocol_serde::shape_message_attribute_value::ser_message_attribute_value(entry_18, value_17)?;
            }
        }
        map_15.finish();
    }
    #[allow(unused_mut)]
    let mut scope_19 = writer.prefix("MessageDeduplicationId");
    if let Some(var_20) = &input.message_deduplication_id {
        scope_19.string(var_20);
    }
    #[allow(unused_mut)]
    let mut scope_21 = writer.prefix("MessageGroupId");
    if let Some(var_22) = &input.message_group_id {
        scope_21.string(var_22);
    }
    writer.finish();
    Ok(::aws_smithy_types::body::SdkBody::from(out))
}
