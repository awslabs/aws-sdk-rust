// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`RegisterConnector`](crate::operation::register_connector::builders::RegisterConnectorFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`connector_label(impl Into<String>)`](crate::operation::register_connector::builders::RegisterConnectorFluentBuilder::connector_label) / [`set_connector_label(Option<String>)`](crate::operation::register_connector::builders::RegisterConnectorFluentBuilder::set_connector_label):<br>required: **false**<br><p> The name of the connector. The name is unique for each <code>ConnectorRegistration</code> in your Amazon Web Services account.</p><br>
    ///   - [`description(impl Into<String>)`](crate::operation::register_connector::builders::RegisterConnectorFluentBuilder::description) / [`set_description(Option<String>)`](crate::operation::register_connector::builders::RegisterConnectorFluentBuilder::set_description):<br>required: **false**<br><p>A description about the connector that's being registered.</p><br>
    ///   - [`connector_provisioning_type(ConnectorProvisioningType)`](crate::operation::register_connector::builders::RegisterConnectorFluentBuilder::connector_provisioning_type) / [`set_connector_provisioning_type(Option<ConnectorProvisioningType>)`](crate::operation::register_connector::builders::RegisterConnectorFluentBuilder::set_connector_provisioning_type):<br>required: **false**<br><p>The provisioning type of the connector. Currently the only supported value is LAMBDA. </p><br>
    ///   - [`connector_provisioning_config(ConnectorProvisioningConfig)`](crate::operation::register_connector::builders::RegisterConnectorFluentBuilder::connector_provisioning_config) / [`set_connector_provisioning_config(Option<ConnectorProvisioningConfig>)`](crate::operation::register_connector::builders::RegisterConnectorFluentBuilder::set_connector_provisioning_config):<br>required: **false**<br><p>The provisioning type of the connector. Currently the only supported value is LAMBDA.</p><br>
    ///   - [`client_token(impl Into<String>)`](crate::operation::register_connector::builders::RegisterConnectorFluentBuilder::client_token) / [`set_client_token(Option<String>)`](crate::operation::register_connector::builders::RegisterConnectorFluentBuilder::set_client_token):<br>required: **false**<br><p>The <code>clientToken</code> parameter is an idempotency token. It ensures that your <code>RegisterConnector</code> request completes only once. You choose the value to pass. For example, if you don't receive a response from your request, you can safely retry the request with the same <code>clientToken</code> parameter value.</p>  <p>If you omit a <code>clientToken</code> value, the Amazon Web Services SDK that you are using inserts a value for you. This way, the SDK can safely retry requests multiple times after a network error. You must provide your own value for other use cases.</p>  <p>If you specify input parameters that differ from your first request, an error occurs. If you use a different value for <code>clientToken</code>, Amazon AppFlow considers it a new call to <code>RegisterConnector</code>. The token is active for 8 hours.</p><br>
    /// - On success, responds with [`RegisterConnectorOutput`](crate::operation::register_connector::RegisterConnectorOutput) with field(s):
    ///   - [`connector_arn(Option<String>)`](crate::operation::register_connector::RegisterConnectorOutput::connector_arn): <p>The ARN of the connector being registered.</p>
    /// - On failure, responds with [`SdkError<RegisterConnectorError>`](crate::operation::register_connector::RegisterConnectorError)
    pub fn register_connector(&self) -> crate::operation::register_connector::builders::RegisterConnectorFluentBuilder {
        crate::operation::register_connector::builders::RegisterConnectorFluentBuilder::new(self.handle.clone())
    }
}
