// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeConnectors`](crate::client::fluent_builders::DescribeConnectors) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::DescribeConnectors::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`connector_types(Vec<ConnectorType>)`](crate::client::fluent_builders::DescribeConnectors::connector_types) / [`set_connector_types(Option<Vec<ConnectorType>>)`](crate::client::fluent_builders::DescribeConnectors::set_connector_types): <p> The type of connector, such as Salesforce, Amplitude, and so on. </p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::DescribeConnectors::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::DescribeConnectors::set_max_results): <p>The maximum number of items that should be returned in the result set. The default is 20.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::DescribeConnectors::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::DescribeConnectors::set_next_token): <p> The pagination token for the next page of data. </p>
    /// - On success, responds with [`DescribeConnectorsOutput`](crate::output::DescribeConnectorsOutput) with field(s):
    ///   - [`connector_configurations(Option<HashMap<ConnectorType, ConnectorConfiguration>>)`](crate::output::DescribeConnectorsOutput::connector_configurations): <p> The configuration that is applied to the connectors used in the flow. </p>
    ///   - [`connectors(Option<Vec<ConnectorDetail>>)`](crate::output::DescribeConnectorsOutput::connectors): <p>Information about the connectors supported in Amazon AppFlow.</p>
    ///   - [`next_token(Option<String>)`](crate::output::DescribeConnectorsOutput::next_token): <p> The pagination token for the next page of data. </p>
    /// - On failure, responds with [`SdkError<DescribeConnectorsError>`](crate::error::DescribeConnectorsError)
    pub fn describe_connectors(&self) -> crate::client::fluent_builders::DescribeConnectors {
        crate::client::fluent_builders::DescribeConnectors::new(self.handle.clone())
    }
}
