// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DeleteConnectorProfileInput {
    /// <p> The name of the connector profile. The name is unique for each <code>ConnectorProfile</code> in your account. </p>
    #[doc(hidden)]
    pub connector_profile_name: std::option::Option<std::string::String>,
    /// <p> Indicates whether Amazon AppFlow should delete the profile, even if it is currently in use in one or more flows. </p>
    #[doc(hidden)]
    pub force_delete: bool,
}
impl DeleteConnectorProfileInput {
    /// <p> The name of the connector profile. The name is unique for each <code>ConnectorProfile</code> in your account. </p>
    pub fn connector_profile_name(&self) -> std::option::Option<&str> {
        self.connector_profile_name.as_deref()
    }
    /// <p> Indicates whether Amazon AppFlow should delete the profile, even if it is currently in use in one or more flows. </p>
    pub fn force_delete(&self) -> bool {
        self.force_delete
    }
}
impl DeleteConnectorProfileInput {
    /// Creates a new builder-style object to manufacture [`DeleteConnectorProfileInput`](crate::operation::delete_connector_profile::DeleteConnectorProfileInput).
    pub fn builder(
    ) -> crate::operation::delete_connector_profile::builders::DeleteConnectorProfileInputBuilder
    {
        crate::operation::delete_connector_profile::builders::DeleteConnectorProfileInputBuilder::default()
    }
}

/// A builder for [`DeleteConnectorProfileInput`](crate::operation::delete_connector_profile::DeleteConnectorProfileInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DeleteConnectorProfileInputBuilder {
    pub(crate) connector_profile_name: std::option::Option<std::string::String>,
    pub(crate) force_delete: std::option::Option<bool>,
}
impl DeleteConnectorProfileInputBuilder {
    /// <p> The name of the connector profile. The name is unique for each <code>ConnectorProfile</code> in your account. </p>
    pub fn connector_profile_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.connector_profile_name = Some(input.into());
        self
    }
    /// <p> The name of the connector profile. The name is unique for each <code>ConnectorProfile</code> in your account. </p>
    pub fn set_connector_profile_name(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.connector_profile_name = input;
        self
    }
    /// <p> Indicates whether Amazon AppFlow should delete the profile, even if it is currently in use in one or more flows. </p>
    pub fn force_delete(mut self, input: bool) -> Self {
        self.force_delete = Some(input);
        self
    }
    /// <p> Indicates whether Amazon AppFlow should delete the profile, even if it is currently in use in one or more flows. </p>
    pub fn set_force_delete(mut self, input: std::option::Option<bool>) -> Self {
        self.force_delete = input;
        self
    }
    /// Consumes the builder and constructs a [`DeleteConnectorProfileInput`](crate::operation::delete_connector_profile::DeleteConnectorProfileInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::delete_connector_profile::DeleteConnectorProfileInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::delete_connector_profile::DeleteConnectorProfileInput {
                connector_profile_name: self.connector_profile_name,
                force_delete: self.force_delete.unwrap_or_default(),
            },
        )
    }
}
