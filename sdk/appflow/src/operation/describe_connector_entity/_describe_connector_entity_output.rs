// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DescribeConnectorEntityOutput {
    /// <p> Describes the fields for that connector entity. For example, for an <i>account</i> entity, the fields would be <i>account name</i>, <i>account ID</i>, and so on. </p>
    #[doc(hidden)]
    pub connector_entity_fields:
        std::option::Option<std::vec::Vec<crate::types::ConnectorEntityField>>,
    _request_id: Option<String>,
}
impl DescribeConnectorEntityOutput {
    /// <p> Describes the fields for that connector entity. For example, for an <i>account</i> entity, the fields would be <i>account name</i>, <i>account ID</i>, and so on. </p>
    pub fn connector_entity_fields(
        &self,
    ) -> std::option::Option<&[crate::types::ConnectorEntityField]> {
        self.connector_entity_fields.as_deref()
    }
}
impl aws_http::request_id::RequestId for DescribeConnectorEntityOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl DescribeConnectorEntityOutput {
    /// Creates a new builder-style object to manufacture [`DescribeConnectorEntityOutput`](crate::operation::describe_connector_entity::DescribeConnectorEntityOutput).
    pub fn builder(
    ) -> crate::operation::describe_connector_entity::builders::DescribeConnectorEntityOutputBuilder
    {
        crate::operation::describe_connector_entity::builders::DescribeConnectorEntityOutputBuilder::default()
    }
}

/// A builder for [`DescribeConnectorEntityOutput`](crate::operation::describe_connector_entity::DescribeConnectorEntityOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DescribeConnectorEntityOutputBuilder {
    pub(crate) connector_entity_fields:
        std::option::Option<std::vec::Vec<crate::types::ConnectorEntityField>>,
    _request_id: Option<String>,
}
impl DescribeConnectorEntityOutputBuilder {
    /// Appends an item to `connector_entity_fields`.
    ///
    /// To override the contents of this collection use [`set_connector_entity_fields`](Self::set_connector_entity_fields).
    ///
    /// <p> Describes the fields for that connector entity. For example, for an <i>account</i> entity, the fields would be <i>account name</i>, <i>account ID</i>, and so on. </p>
    pub fn connector_entity_fields(mut self, input: crate::types::ConnectorEntityField) -> Self {
        let mut v = self.connector_entity_fields.unwrap_or_default();
        v.push(input);
        self.connector_entity_fields = Some(v);
        self
    }
    /// <p> Describes the fields for that connector entity. For example, for an <i>account</i> entity, the fields would be <i>account name</i>, <i>account ID</i>, and so on. </p>
    pub fn set_connector_entity_fields(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::ConnectorEntityField>>,
    ) -> Self {
        self.connector_entity_fields = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`DescribeConnectorEntityOutput`](crate::operation::describe_connector_entity::DescribeConnectorEntityOutput).
    pub fn build(
        self,
    ) -> crate::operation::describe_connector_entity::DescribeConnectorEntityOutput {
        crate::operation::describe_connector_entity::DescribeConnectorEntityOutput {
            connector_entity_fields: self.connector_entity_fields,
            _request_id: self._request_id,
        }
    }
}
