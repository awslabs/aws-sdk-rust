// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DeleteFlowInput {
    /// <p> The specified name of the flow. Spaces are not allowed. Use underscores (_) or hyphens (-) only. </p>
    #[doc(hidden)]
    pub flow_name: std::option::Option<std::string::String>,
    /// <p> Indicates whether Amazon AppFlow should delete the flow, even if it is currently in use. </p>
    #[doc(hidden)]
    pub force_delete: bool,
}
impl DeleteFlowInput {
    /// <p> The specified name of the flow. Spaces are not allowed. Use underscores (_) or hyphens (-) only. </p>
    pub fn flow_name(&self) -> std::option::Option<&str> {
        self.flow_name.as_deref()
    }
    /// <p> Indicates whether Amazon AppFlow should delete the flow, even if it is currently in use. </p>
    pub fn force_delete(&self) -> bool {
        self.force_delete
    }
}
impl DeleteFlowInput {
    /// Creates a new builder-style object to manufacture [`DeleteFlowInput`](crate::operation::delete_flow::DeleteFlowInput).
    pub fn builder() -> crate::operation::delete_flow::builders::DeleteFlowInputBuilder {
        crate::operation::delete_flow::builders::DeleteFlowInputBuilder::default()
    }
}

/// A builder for [`DeleteFlowInput`](crate::operation::delete_flow::DeleteFlowInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DeleteFlowInputBuilder {
    pub(crate) flow_name: std::option::Option<std::string::String>,
    pub(crate) force_delete: std::option::Option<bool>,
}
impl DeleteFlowInputBuilder {
    /// <p> The specified name of the flow. Spaces are not allowed. Use underscores (_) or hyphens (-) only. </p>
    pub fn flow_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.flow_name = Some(input.into());
        self
    }
    /// <p> The specified name of the flow. Spaces are not allowed. Use underscores (_) or hyphens (-) only. </p>
    pub fn set_flow_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.flow_name = input;
        self
    }
    /// <p> Indicates whether Amazon AppFlow should delete the flow, even if it is currently in use. </p>
    pub fn force_delete(mut self, input: bool) -> Self {
        self.force_delete = Some(input);
        self
    }
    /// <p> Indicates whether Amazon AppFlow should delete the flow, even if it is currently in use. </p>
    pub fn set_force_delete(mut self, input: std::option::Option<bool>) -> Self {
        self.force_delete = input;
        self
    }
    /// Consumes the builder and constructs a [`DeleteFlowInput`](crate::operation::delete_flow::DeleteFlowInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::delete_flow::DeleteFlowInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(crate::operation::delete_flow::DeleteFlowInput {
            flow_name: self.flow_name,
            force_delete: self.force_delete.unwrap_or_default(),
        })
    }
}
