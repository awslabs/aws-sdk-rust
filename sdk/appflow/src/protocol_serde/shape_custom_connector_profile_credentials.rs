// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_custom_connector_profile_credentials(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::types::CustomConnectorProfileCredentials,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    {
        object.key("authenticationType").string(input.authentication_type.as_str());
    }
    if let Some(var_1) = &input.basic {
        #[allow(unused_mut)]
        let mut object_2 = object.key("basic").start_object();
        crate::protocol_serde::shape_basic_auth_credentials::ser_basic_auth_credentials(&mut object_2, var_1)?;
        object_2.finish();
    }
    if let Some(var_3) = &input.oauth2 {
        #[allow(unused_mut)]
        let mut object_4 = object.key("oauth2").start_object();
        crate::protocol_serde::shape_o_auth2_credentials::ser_o_auth2_credentials(&mut object_4, var_3)?;
        object_4.finish();
    }
    if let Some(var_5) = &input.api_key {
        #[allow(unused_mut)]
        let mut object_6 = object.key("apiKey").start_object();
        crate::protocol_serde::shape_api_key_credentials::ser_api_key_credentials(&mut object_6, var_5)?;
        object_6.finish();
    }
    if let Some(var_7) = &input.custom {
        #[allow(unused_mut)]
        let mut object_8 = object.key("custom").start_object();
        crate::protocol_serde::shape_custom_auth_credentials::ser_custom_auth_credentials(&mut object_8, var_7)?;
        object_8.finish();
    }
    Ok(())
}
