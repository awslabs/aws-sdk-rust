// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p> Specifies the private connection provisioning state. </p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct PrivateConnectionProvisioningState {
    /// <p> Specifies the private connection provisioning status. </p>
    #[doc(hidden)]
    pub status: std::option::Option<crate::types::PrivateConnectionProvisioningStatus>,
    /// <p> Specifies the private connection provisioning failure reason. </p>
    #[doc(hidden)]
    pub failure_message: std::option::Option<std::string::String>,
    /// <p> Specifies the private connection provisioning failure cause. </p>
    #[doc(hidden)]
    pub failure_cause: std::option::Option<crate::types::PrivateConnectionProvisioningFailureCause>,
}
impl PrivateConnectionProvisioningState {
    /// <p> Specifies the private connection provisioning status. </p>
    pub fn status(
        &self,
    ) -> std::option::Option<&crate::types::PrivateConnectionProvisioningStatus> {
        self.status.as_ref()
    }
    /// <p> Specifies the private connection provisioning failure reason. </p>
    pub fn failure_message(&self) -> std::option::Option<&str> {
        self.failure_message.as_deref()
    }
    /// <p> Specifies the private connection provisioning failure cause. </p>
    pub fn failure_cause(
        &self,
    ) -> std::option::Option<&crate::types::PrivateConnectionProvisioningFailureCause> {
        self.failure_cause.as_ref()
    }
}
impl PrivateConnectionProvisioningState {
    /// Creates a new builder-style object to manufacture [`PrivateConnectionProvisioningState`](crate::types::PrivateConnectionProvisioningState).
    pub fn builder() -> crate::types::builders::PrivateConnectionProvisioningStateBuilder {
        crate::types::builders::PrivateConnectionProvisioningStateBuilder::default()
    }
}

/// A builder for [`PrivateConnectionProvisioningState`](crate::types::PrivateConnectionProvisioningState).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct PrivateConnectionProvisioningStateBuilder {
    pub(crate) status: std::option::Option<crate::types::PrivateConnectionProvisioningStatus>,
    pub(crate) failure_message: std::option::Option<std::string::String>,
    pub(crate) failure_cause:
        std::option::Option<crate::types::PrivateConnectionProvisioningFailureCause>,
}
impl PrivateConnectionProvisioningStateBuilder {
    /// <p> Specifies the private connection provisioning status. </p>
    pub fn status(mut self, input: crate::types::PrivateConnectionProvisioningStatus) -> Self {
        self.status = Some(input);
        self
    }
    /// <p> Specifies the private connection provisioning status. </p>
    pub fn set_status(
        mut self,
        input: std::option::Option<crate::types::PrivateConnectionProvisioningStatus>,
    ) -> Self {
        self.status = input;
        self
    }
    /// <p> Specifies the private connection provisioning failure reason. </p>
    pub fn failure_message(mut self, input: impl Into<std::string::String>) -> Self {
        self.failure_message = Some(input.into());
        self
    }
    /// <p> Specifies the private connection provisioning failure reason. </p>
    pub fn set_failure_message(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.failure_message = input;
        self
    }
    /// <p> Specifies the private connection provisioning failure cause. </p>
    pub fn failure_cause(
        mut self,
        input: crate::types::PrivateConnectionProvisioningFailureCause,
    ) -> Self {
        self.failure_cause = Some(input);
        self
    }
    /// <p> Specifies the private connection provisioning failure cause. </p>
    pub fn set_failure_cause(
        mut self,
        input: std::option::Option<crate::types::PrivateConnectionProvisioningFailureCause>,
    ) -> Self {
        self.failure_cause = input;
        self
    }
    /// Consumes the builder and constructs a [`PrivateConnectionProvisioningState`](crate::types::PrivateConnectionProvisioningState).
    pub fn build(self) -> crate::types::PrivateConnectionProvisioningState {
        crate::types::PrivateConnectionProvisioningState {
            status: self.status,
            failure_message: self.failure_message,
            failure_cause: self.failure_cause,
        }
    }
}
