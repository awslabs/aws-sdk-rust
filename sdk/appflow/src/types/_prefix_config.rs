// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Specifies elements that Amazon AppFlow includes in the file and folder names in the flow destination.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct PrefixConfig {
    /// <p>Determines the format of the prefix, and whether it applies to the file name, file path, or both. </p>
    #[doc(hidden)]
    pub prefix_type: std::option::Option<crate::types::PrefixType>,
    /// <p>Determines the level of granularity for the date and time that's included in the prefix. </p>
    #[doc(hidden)]
    pub prefix_format: std::option::Option<crate::types::PrefixFormat>,
    /// <p>Specifies whether the destination file path includes either or both of the following elements:</p>
    /// <dl>
    /// <dt>
    /// EXECUTION_ID
    /// </dt>
    /// <dd>
    /// <p>The ID that Amazon AppFlow assigns to the flow run.</p>
    /// </dd>
    /// <dt>
    /// SCHEMA_VERSION
    /// </dt>
    /// <dd>
    /// <p>The version number of your data schema. Amazon AppFlow assigns this version number. The version number increases by one when you change any of the following settings in your flow configuration:</p>
    /// <ul>
    /// <li> <p>Source-to-destination field mappings</p> </li>
    /// <li> <p>Field data types</p> </li>
    /// <li> <p>Partition keys</p> </li>
    /// </ul>
    /// </dd>
    /// </dl>
    #[doc(hidden)]
    pub path_prefix_hierarchy: std::option::Option<std::vec::Vec<crate::types::PathPrefix>>,
}
impl PrefixConfig {
    /// <p>Determines the format of the prefix, and whether it applies to the file name, file path, or both. </p>
    pub fn prefix_type(&self) -> std::option::Option<&crate::types::PrefixType> {
        self.prefix_type.as_ref()
    }
    /// <p>Determines the level of granularity for the date and time that's included in the prefix. </p>
    pub fn prefix_format(&self) -> std::option::Option<&crate::types::PrefixFormat> {
        self.prefix_format.as_ref()
    }
    /// <p>Specifies whether the destination file path includes either or both of the following elements:</p>
    /// <dl>
    /// <dt>
    /// EXECUTION_ID
    /// </dt>
    /// <dd>
    /// <p>The ID that Amazon AppFlow assigns to the flow run.</p>
    /// </dd>
    /// <dt>
    /// SCHEMA_VERSION
    /// </dt>
    /// <dd>
    /// <p>The version number of your data schema. Amazon AppFlow assigns this version number. The version number increases by one when you change any of the following settings in your flow configuration:</p>
    /// <ul>
    /// <li> <p>Source-to-destination field mappings</p> </li>
    /// <li> <p>Field data types</p> </li>
    /// <li> <p>Partition keys</p> </li>
    /// </ul>
    /// </dd>
    /// </dl>
    pub fn path_prefix_hierarchy(&self) -> std::option::Option<&[crate::types::PathPrefix]> {
        self.path_prefix_hierarchy.as_deref()
    }
}
impl PrefixConfig {
    /// Creates a new builder-style object to manufacture [`PrefixConfig`](crate::types::PrefixConfig).
    pub fn builder() -> crate::types::builders::PrefixConfigBuilder {
        crate::types::builders::PrefixConfigBuilder::default()
    }
}

/// A builder for [`PrefixConfig`](crate::types::PrefixConfig).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct PrefixConfigBuilder {
    pub(crate) prefix_type: std::option::Option<crate::types::PrefixType>,
    pub(crate) prefix_format: std::option::Option<crate::types::PrefixFormat>,
    pub(crate) path_prefix_hierarchy: std::option::Option<std::vec::Vec<crate::types::PathPrefix>>,
}
impl PrefixConfigBuilder {
    /// <p>Determines the format of the prefix, and whether it applies to the file name, file path, or both. </p>
    pub fn prefix_type(mut self, input: crate::types::PrefixType) -> Self {
        self.prefix_type = Some(input);
        self
    }
    /// <p>Determines the format of the prefix, and whether it applies to the file name, file path, or both. </p>
    pub fn set_prefix_type(mut self, input: std::option::Option<crate::types::PrefixType>) -> Self {
        self.prefix_type = input;
        self
    }
    /// <p>Determines the level of granularity for the date and time that's included in the prefix. </p>
    pub fn prefix_format(mut self, input: crate::types::PrefixFormat) -> Self {
        self.prefix_format = Some(input);
        self
    }
    /// <p>Determines the level of granularity for the date and time that's included in the prefix. </p>
    pub fn set_prefix_format(
        mut self,
        input: std::option::Option<crate::types::PrefixFormat>,
    ) -> Self {
        self.prefix_format = input;
        self
    }
    /// Appends an item to `path_prefix_hierarchy`.
    ///
    /// To override the contents of this collection use [`set_path_prefix_hierarchy`](Self::set_path_prefix_hierarchy).
    ///
    /// <p>Specifies whether the destination file path includes either or both of the following elements:</p>
    /// <dl>
    /// <dt>
    /// EXECUTION_ID
    /// </dt>
    /// <dd>
    /// <p>The ID that Amazon AppFlow assigns to the flow run.</p>
    /// </dd>
    /// <dt>
    /// SCHEMA_VERSION
    /// </dt>
    /// <dd>
    /// <p>The version number of your data schema. Amazon AppFlow assigns this version number. The version number increases by one when you change any of the following settings in your flow configuration:</p>
    /// <ul>
    /// <li> <p>Source-to-destination field mappings</p> </li>
    /// <li> <p>Field data types</p> </li>
    /// <li> <p>Partition keys</p> </li>
    /// </ul>
    /// </dd>
    /// </dl>
    pub fn path_prefix_hierarchy(mut self, input: crate::types::PathPrefix) -> Self {
        let mut v = self.path_prefix_hierarchy.unwrap_or_default();
        v.push(input);
        self.path_prefix_hierarchy = Some(v);
        self
    }
    /// <p>Specifies whether the destination file path includes either or both of the following elements:</p>
    /// <dl>
    /// <dt>
    /// EXECUTION_ID
    /// </dt>
    /// <dd>
    /// <p>The ID that Amazon AppFlow assigns to the flow run.</p>
    /// </dd>
    /// <dt>
    /// SCHEMA_VERSION
    /// </dt>
    /// <dd>
    /// <p>The version number of your data schema. Amazon AppFlow assigns this version number. The version number increases by one when you change any of the following settings in your flow configuration:</p>
    /// <ul>
    /// <li> <p>Source-to-destination field mappings</p> </li>
    /// <li> <p>Field data types</p> </li>
    /// <li> <p>Partition keys</p> </li>
    /// </ul>
    /// </dd>
    /// </dl>
    pub fn set_path_prefix_hierarchy(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::PathPrefix>>,
    ) -> Self {
        self.path_prefix_hierarchy = input;
        self
    }
    /// Consumes the builder and constructs a [`PrefixConfig`](crate::types::PrefixConfig).
    pub fn build(self) -> crate::types::PrefixConfig {
        crate::types::PrefixConfig {
            prefix_type: self.prefix_type,
            prefix_format: self.prefix_format,
            path_prefix_hierarchy: self.path_prefix_hierarchy,
        }
    }
}
