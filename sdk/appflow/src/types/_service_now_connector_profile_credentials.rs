// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p> The connector-specific profile credentials required when using ServiceNow. </p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq)]
pub struct ServiceNowConnectorProfileCredentials {
    /// <p> The name of the user. </p>
    #[doc(hidden)]
    pub username: std::option::Option<std::string::String>,
    /// <p> The password that corresponds to the user name. </p>
    #[doc(hidden)]
    pub password: std::option::Option<std::string::String>,
}
impl ServiceNowConnectorProfileCredentials {
    /// <p> The name of the user. </p>
    pub fn username(&self) -> std::option::Option<&str> {
        self.username.as_deref()
    }
    /// <p> The password that corresponds to the user name. </p>
    pub fn password(&self) -> std::option::Option<&str> {
        self.password.as_deref()
    }
}
impl std::fmt::Debug for ServiceNowConnectorProfileCredentials {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        let mut formatter = f.debug_struct("ServiceNowConnectorProfileCredentials");
        formatter.field("username", &self.username);
        formatter.field("password", &"*** Sensitive Data Redacted ***");
        formatter.finish()
    }
}
impl ServiceNowConnectorProfileCredentials {
    /// Creates a new builder-style object to manufacture [`ServiceNowConnectorProfileCredentials`](crate::types::ServiceNowConnectorProfileCredentials).
    pub fn builder() -> crate::types::builders::ServiceNowConnectorProfileCredentialsBuilder {
        crate::types::builders::ServiceNowConnectorProfileCredentialsBuilder::default()
    }
}

/// A builder for [`ServiceNowConnectorProfileCredentials`](crate::types::ServiceNowConnectorProfileCredentials).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default)]
pub struct ServiceNowConnectorProfileCredentialsBuilder {
    pub(crate) username: std::option::Option<std::string::String>,
    pub(crate) password: std::option::Option<std::string::String>,
}
impl ServiceNowConnectorProfileCredentialsBuilder {
    /// <p> The name of the user. </p>
    pub fn username(mut self, input: impl Into<std::string::String>) -> Self {
        self.username = Some(input.into());
        self
    }
    /// <p> The name of the user. </p>
    pub fn set_username(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.username = input;
        self
    }
    /// <p> The password that corresponds to the user name. </p>
    pub fn password(mut self, input: impl Into<std::string::String>) -> Self {
        self.password = Some(input.into());
        self
    }
    /// <p> The password that corresponds to the user name. </p>
    pub fn set_password(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.password = input;
        self
    }
    /// Consumes the builder and constructs a [`ServiceNowConnectorProfileCredentials`](crate::types::ServiceNowConnectorProfileCredentials).
    pub fn build(self) -> crate::types::ServiceNowConnectorProfileCredentials {
        crate::types::ServiceNowConnectorProfileCredentials {
            username: self.username,
            password: self.password,
        }
    }
}
impl std::fmt::Debug for ServiceNowConnectorProfileCredentialsBuilder {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        let mut formatter = f.debug_struct("ServiceNowConnectorProfileCredentialsBuilder");
        formatter.field("username", &self.username);
        formatter.field("password", &"*** Sensitive Data Redacted ***");
        formatter.finish()
    }
}
