// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p> Defines the connector-specific configuration and credentials for the connector profile. </p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ConnectorProfileConfig {
    /// <p> The connector-specific properties of the profile configuration. </p>
    #[doc(hidden)]
    pub connector_profile_properties: std::option::Option<crate::types::ConnectorProfileProperties>,
    /// <p> The connector-specific credentials required by each connector. </p>
    #[doc(hidden)]
    pub connector_profile_credentials:
        std::option::Option<crate::types::ConnectorProfileCredentials>,
}
impl ConnectorProfileConfig {
    /// <p> The connector-specific properties of the profile configuration. </p>
    pub fn connector_profile_properties(
        &self,
    ) -> std::option::Option<&crate::types::ConnectorProfileProperties> {
        self.connector_profile_properties.as_ref()
    }
    /// <p> The connector-specific credentials required by each connector. </p>
    pub fn connector_profile_credentials(
        &self,
    ) -> std::option::Option<&crate::types::ConnectorProfileCredentials> {
        self.connector_profile_credentials.as_ref()
    }
}
impl ConnectorProfileConfig {
    /// Creates a new builder-style object to manufacture [`ConnectorProfileConfig`](crate::types::ConnectorProfileConfig).
    pub fn builder() -> crate::types::builders::ConnectorProfileConfigBuilder {
        crate::types::builders::ConnectorProfileConfigBuilder::default()
    }
}

/// A builder for [`ConnectorProfileConfig`](crate::types::ConnectorProfileConfig).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ConnectorProfileConfigBuilder {
    pub(crate) connector_profile_properties:
        std::option::Option<crate::types::ConnectorProfileProperties>,
    pub(crate) connector_profile_credentials:
        std::option::Option<crate::types::ConnectorProfileCredentials>,
}
impl ConnectorProfileConfigBuilder {
    /// <p> The connector-specific properties of the profile configuration. </p>
    pub fn connector_profile_properties(
        mut self,
        input: crate::types::ConnectorProfileProperties,
    ) -> Self {
        self.connector_profile_properties = Some(input);
        self
    }
    /// <p> The connector-specific properties of the profile configuration. </p>
    pub fn set_connector_profile_properties(
        mut self,
        input: std::option::Option<crate::types::ConnectorProfileProperties>,
    ) -> Self {
        self.connector_profile_properties = input;
        self
    }
    /// <p> The connector-specific credentials required by each connector. </p>
    pub fn connector_profile_credentials(
        mut self,
        input: crate::types::ConnectorProfileCredentials,
    ) -> Self {
        self.connector_profile_credentials = Some(input);
        self
    }
    /// <p> The connector-specific credentials required by each connector. </p>
    pub fn set_connector_profile_credentials(
        mut self,
        input: std::option::Option<crate::types::ConnectorProfileCredentials>,
    ) -> Self {
        self.connector_profile_credentials = input;
        self
    }
    /// Consumes the builder and constructs a [`ConnectorProfileConfig`](crate::types::ConnectorProfileConfig).
    pub fn build(self) -> crate::types::ConnectorProfileConfig {
        crate::types::ConnectorProfileConfig {
            connector_profile_properties: self.connector_profile_properties,
            connector_profile_credentials: self.connector_profile_credentials,
        }
    }
}
