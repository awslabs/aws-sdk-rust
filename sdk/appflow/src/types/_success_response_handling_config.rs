// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Determines how Amazon AppFlow handles the success response that it gets from the connector after placing data.</p>
/// <p>For example, this setting would determine where to write the response from the destination connector upon a successful insert operation.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct SuccessResponseHandlingConfig {
    /// <p>The Amazon S3 bucket prefix.</p>
    #[doc(hidden)]
    pub bucket_prefix: std::option::Option<std::string::String>,
    /// <p>The name of the Amazon S3 bucket.</p>
    #[doc(hidden)]
    pub bucket_name: std::option::Option<std::string::String>,
}
impl SuccessResponseHandlingConfig {
    /// <p>The Amazon S3 bucket prefix.</p>
    pub fn bucket_prefix(&self) -> std::option::Option<&str> {
        self.bucket_prefix.as_deref()
    }
    /// <p>The name of the Amazon S3 bucket.</p>
    pub fn bucket_name(&self) -> std::option::Option<&str> {
        self.bucket_name.as_deref()
    }
}
impl SuccessResponseHandlingConfig {
    /// Creates a new builder-style object to manufacture [`SuccessResponseHandlingConfig`](crate::types::SuccessResponseHandlingConfig).
    pub fn builder() -> crate::types::builders::SuccessResponseHandlingConfigBuilder {
        crate::types::builders::SuccessResponseHandlingConfigBuilder::default()
    }
}

/// A builder for [`SuccessResponseHandlingConfig`](crate::types::SuccessResponseHandlingConfig).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct SuccessResponseHandlingConfigBuilder {
    pub(crate) bucket_prefix: std::option::Option<std::string::String>,
    pub(crate) bucket_name: std::option::Option<std::string::String>,
}
impl SuccessResponseHandlingConfigBuilder {
    /// <p>The Amazon S3 bucket prefix.</p>
    pub fn bucket_prefix(mut self, input: impl Into<std::string::String>) -> Self {
        self.bucket_prefix = Some(input.into());
        self
    }
    /// <p>The Amazon S3 bucket prefix.</p>
    pub fn set_bucket_prefix(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.bucket_prefix = input;
        self
    }
    /// <p>The name of the Amazon S3 bucket.</p>
    pub fn bucket_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.bucket_name = Some(input.into());
        self
    }
    /// <p>The name of the Amazon S3 bucket.</p>
    pub fn set_bucket_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.bucket_name = input;
        self
    }
    /// Consumes the builder and constructs a [`SuccessResponseHandlingConfig`](crate::types::SuccessResponseHandlingConfig).
    pub fn build(self) -> crate::types::SuccessResponseHandlingConfig {
        crate::types::SuccessResponseHandlingConfig {
            bucket_prefix: self.bucket_prefix,
            bucket_name: self.bucket_name,
        }
    }
}
