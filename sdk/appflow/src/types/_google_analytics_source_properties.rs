// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p> The properties that are applied when Google Analytics is being used as a source. </p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GoogleAnalyticsSourceProperties {
    /// <p> The object specified in the Google Analytics flow source. </p>
    pub object: ::std::string::String,
}
impl GoogleAnalyticsSourceProperties {
    /// <p> The object specified in the Google Analytics flow source. </p>
    pub fn object(&self) -> &str {
        use std::ops::Deref;
        self.object.deref()
    }
}
impl GoogleAnalyticsSourceProperties {
    /// Creates a new builder-style object to manufacture [`GoogleAnalyticsSourceProperties`](crate::types::GoogleAnalyticsSourceProperties).
    pub fn builder() -> crate::types::builders::GoogleAnalyticsSourcePropertiesBuilder {
        crate::types::builders::GoogleAnalyticsSourcePropertiesBuilder::default()
    }
}

/// A builder for [`GoogleAnalyticsSourceProperties`](crate::types::GoogleAnalyticsSourceProperties).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct GoogleAnalyticsSourcePropertiesBuilder {
    pub(crate) object: ::std::option::Option<::std::string::String>,
}
impl GoogleAnalyticsSourcePropertiesBuilder {
    /// <p> The object specified in the Google Analytics flow source. </p>
    /// This field is required.
    pub fn object(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.object = ::std::option::Option::Some(input.into());
        self
    }
    /// <p> The object specified in the Google Analytics flow source. </p>
    pub fn set_object(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.object = input;
        self
    }
    /// <p> The object specified in the Google Analytics flow source. </p>
    pub fn get_object(&self) -> &::std::option::Option<::std::string::String> {
        &self.object
    }
    /// Consumes the builder and constructs a [`GoogleAnalyticsSourceProperties`](crate::types::GoogleAnalyticsSourceProperties).
    /// This method will fail if any of the following fields are not set:
    /// - [`object`](crate::types::builders::GoogleAnalyticsSourcePropertiesBuilder::object)
    pub fn build(self) -> ::std::result::Result<crate::types::GoogleAnalyticsSourceProperties, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::GoogleAnalyticsSourceProperties {
            object: self.object.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "object",
                    "object was not specified but it is required when building GoogleAnalyticsSourceProperties",
                )
            })?,
        })
    }
}
