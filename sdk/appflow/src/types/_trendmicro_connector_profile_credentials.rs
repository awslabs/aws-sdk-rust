// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p> The connector-specific profile credentials required when using Trend Micro. </p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq)]
pub struct TrendmicroConnectorProfileCredentials {
    /// <p> The Secret Access Key portion of the credentials. </p>
    pub api_secret_key: ::std::string::String,
}
impl TrendmicroConnectorProfileCredentials {
    /// <p> The Secret Access Key portion of the credentials. </p>
    pub fn api_secret_key(&self) -> &str {
        use std::ops::Deref;
        self.api_secret_key.deref()
    }
}
impl ::std::fmt::Debug for TrendmicroConnectorProfileCredentials {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("TrendmicroConnectorProfileCredentials");
        formatter.field("api_secret_key", &"*** Sensitive Data Redacted ***");
        formatter.finish()
    }
}
impl TrendmicroConnectorProfileCredentials {
    /// Creates a new builder-style object to manufacture [`TrendmicroConnectorProfileCredentials`](crate::types::TrendmicroConnectorProfileCredentials).
    pub fn builder() -> crate::types::builders::TrendmicroConnectorProfileCredentialsBuilder {
        crate::types::builders::TrendmicroConnectorProfileCredentialsBuilder::default()
    }
}

/// A builder for [`TrendmicroConnectorProfileCredentials`](crate::types::TrendmicroConnectorProfileCredentials).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default)]
pub struct TrendmicroConnectorProfileCredentialsBuilder {
    pub(crate) api_secret_key: ::std::option::Option<::std::string::String>,
}
impl TrendmicroConnectorProfileCredentialsBuilder {
    /// <p> The Secret Access Key portion of the credentials. </p>
    /// This field is required.
    pub fn api_secret_key(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.api_secret_key = ::std::option::Option::Some(input.into());
        self
    }
    /// <p> The Secret Access Key portion of the credentials. </p>
    pub fn set_api_secret_key(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.api_secret_key = input;
        self
    }
    /// <p> The Secret Access Key portion of the credentials. </p>
    pub fn get_api_secret_key(&self) -> &::std::option::Option<::std::string::String> {
        &self.api_secret_key
    }
    /// Consumes the builder and constructs a [`TrendmicroConnectorProfileCredentials`](crate::types::TrendmicroConnectorProfileCredentials).
    /// This method will fail if any of the following fields are not set:
    /// - [`api_secret_key`](crate::types::builders::TrendmicroConnectorProfileCredentialsBuilder::api_secret_key)
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::types::TrendmicroConnectorProfileCredentials, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::TrendmicroConnectorProfileCredentials {
            api_secret_key: self.api_secret_key.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "api_secret_key",
                    "api_secret_key was not specified but it is required when building TrendmicroConnectorProfileCredentials",
                )
            })?,
        })
    }
}
impl ::std::fmt::Debug for TrendmicroConnectorProfileCredentialsBuilder {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("TrendmicroConnectorProfileCredentialsBuilder");
        formatter.field("api_secret_key", &"*** Sensitive Data Redacted ***");
        formatter.finish()
    }
}
