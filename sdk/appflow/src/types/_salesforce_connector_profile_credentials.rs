// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p> The connector-specific profile credentials required when using Salesforce. </p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq)]
pub struct SalesforceConnectorProfileCredentials {
    /// <p> The credentials used to access protected Salesforce resources. </p>
    #[doc(hidden)]
    pub access_token: std::option::Option<std::string::String>,
    /// <p> The credentials used to acquire new access tokens. </p>
    #[doc(hidden)]
    pub refresh_token: std::option::Option<std::string::String>,
    /// <p> The OAuth requirement needed to request security tokens from the connector endpoint. </p>
    #[doc(hidden)]
    pub o_auth_request: std::option::Option<crate::types::ConnectorOAuthRequest>,
    /// <p> The secret manager ARN, which contains the client ID and client secret of the connected app. </p>
    #[doc(hidden)]
    pub client_credentials_arn: std::option::Option<std::string::String>,
}
impl SalesforceConnectorProfileCredentials {
    /// <p> The credentials used to access protected Salesforce resources. </p>
    pub fn access_token(&self) -> std::option::Option<&str> {
        self.access_token.as_deref()
    }
    /// <p> The credentials used to acquire new access tokens. </p>
    pub fn refresh_token(&self) -> std::option::Option<&str> {
        self.refresh_token.as_deref()
    }
    /// <p> The OAuth requirement needed to request security tokens from the connector endpoint. </p>
    pub fn o_auth_request(&self) -> std::option::Option<&crate::types::ConnectorOAuthRequest> {
        self.o_auth_request.as_ref()
    }
    /// <p> The secret manager ARN, which contains the client ID and client secret of the connected app. </p>
    pub fn client_credentials_arn(&self) -> std::option::Option<&str> {
        self.client_credentials_arn.as_deref()
    }
}
impl std::fmt::Debug for SalesforceConnectorProfileCredentials {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        let mut formatter = f.debug_struct("SalesforceConnectorProfileCredentials");
        formatter.field("access_token", &"*** Sensitive Data Redacted ***");
        formatter.field("refresh_token", &self.refresh_token);
        formatter.field("o_auth_request", &self.o_auth_request);
        formatter.field("client_credentials_arn", &"*** Sensitive Data Redacted ***");
        formatter.finish()
    }
}
impl SalesforceConnectorProfileCredentials {
    /// Creates a new builder-style object to manufacture [`SalesforceConnectorProfileCredentials`](crate::types::SalesforceConnectorProfileCredentials).
    pub fn builder() -> crate::types::builders::SalesforceConnectorProfileCredentialsBuilder {
        crate::types::builders::SalesforceConnectorProfileCredentialsBuilder::default()
    }
}

/// A builder for [`SalesforceConnectorProfileCredentials`](crate::types::SalesforceConnectorProfileCredentials).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default)]
pub struct SalesforceConnectorProfileCredentialsBuilder {
    pub(crate) access_token: std::option::Option<std::string::String>,
    pub(crate) refresh_token: std::option::Option<std::string::String>,
    pub(crate) o_auth_request: std::option::Option<crate::types::ConnectorOAuthRequest>,
    pub(crate) client_credentials_arn: std::option::Option<std::string::String>,
}
impl SalesforceConnectorProfileCredentialsBuilder {
    /// <p> The credentials used to access protected Salesforce resources. </p>
    pub fn access_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.access_token = Some(input.into());
        self
    }
    /// <p> The credentials used to access protected Salesforce resources. </p>
    pub fn set_access_token(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.access_token = input;
        self
    }
    /// <p> The credentials used to acquire new access tokens. </p>
    pub fn refresh_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.refresh_token = Some(input.into());
        self
    }
    /// <p> The credentials used to acquire new access tokens. </p>
    pub fn set_refresh_token(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.refresh_token = input;
        self
    }
    /// <p> The OAuth requirement needed to request security tokens from the connector endpoint. </p>
    pub fn o_auth_request(mut self, input: crate::types::ConnectorOAuthRequest) -> Self {
        self.o_auth_request = Some(input);
        self
    }
    /// <p> The OAuth requirement needed to request security tokens from the connector endpoint. </p>
    pub fn set_o_auth_request(
        mut self,
        input: std::option::Option<crate::types::ConnectorOAuthRequest>,
    ) -> Self {
        self.o_auth_request = input;
        self
    }
    /// <p> The secret manager ARN, which contains the client ID and client secret of the connected app. </p>
    pub fn client_credentials_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.client_credentials_arn = Some(input.into());
        self
    }
    /// <p> The secret manager ARN, which contains the client ID and client secret of the connected app. </p>
    pub fn set_client_credentials_arn(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.client_credentials_arn = input;
        self
    }
    /// Consumes the builder and constructs a [`SalesforceConnectorProfileCredentials`](crate::types::SalesforceConnectorProfileCredentials).
    pub fn build(self) -> crate::types::SalesforceConnectorProfileCredentials {
        crate::types::SalesforceConnectorProfileCredentials {
            access_token: self.access_token,
            refresh_token: self.refresh_token,
            o_auth_request: self.o_auth_request,
            client_credentials_arn: self.client_credentials_arn,
        }
    }
}
impl std::fmt::Debug for SalesforceConnectorProfileCredentialsBuilder {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        let mut formatter = f.debug_struct("SalesforceConnectorProfileCredentialsBuilder");
        formatter.field("access_token", &"*** Sensitive Data Redacted ***");
        formatter.field("refresh_token", &self.refresh_token);
        formatter.field("o_auth_request", &self.o_auth_request);
        formatter.field("client_credentials_arn", &"*** Sensitive Data Redacted ***");
        formatter.finish()
    }
}
