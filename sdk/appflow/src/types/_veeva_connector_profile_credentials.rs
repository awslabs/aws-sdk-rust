// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p> The connector-specific profile credentials required when using Veeva. </p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq)]
pub struct VeevaConnectorProfileCredentials {
    /// <p> The name of the user. </p>
    pub username: ::std::string::String,
    /// <p> The password that corresponds to the user name. </p>
    pub password: ::std::string::String,
}
impl VeevaConnectorProfileCredentials {
    /// <p> The name of the user. </p>
    pub fn username(&self) -> &str {
        use std::ops::Deref;
        self.username.deref()
    }
    /// <p> The password that corresponds to the user name. </p>
    pub fn password(&self) -> &str {
        use std::ops::Deref;
        self.password.deref()
    }
}
impl ::std::fmt::Debug for VeevaConnectorProfileCredentials {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("VeevaConnectorProfileCredentials");
        formatter.field("username", &self.username);
        formatter.field("password", &"*** Sensitive Data Redacted ***");
        formatter.finish()
    }
}
impl VeevaConnectorProfileCredentials {
    /// Creates a new builder-style object to manufacture [`VeevaConnectorProfileCredentials`](crate::types::VeevaConnectorProfileCredentials).
    pub fn builder() -> crate::types::builders::VeevaConnectorProfileCredentialsBuilder {
        crate::types::builders::VeevaConnectorProfileCredentialsBuilder::default()
    }
}

/// A builder for [`VeevaConnectorProfileCredentials`](crate::types::VeevaConnectorProfileCredentials).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default)]
pub struct VeevaConnectorProfileCredentialsBuilder {
    pub(crate) username: ::std::option::Option<::std::string::String>,
    pub(crate) password: ::std::option::Option<::std::string::String>,
}
impl VeevaConnectorProfileCredentialsBuilder {
    /// <p> The name of the user. </p>
    /// This field is required.
    pub fn username(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.username = ::std::option::Option::Some(input.into());
        self
    }
    /// <p> The name of the user. </p>
    pub fn set_username(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.username = input;
        self
    }
    /// <p> The name of the user. </p>
    pub fn get_username(&self) -> &::std::option::Option<::std::string::String> {
        &self.username
    }
    /// <p> The password that corresponds to the user name. </p>
    /// This field is required.
    pub fn password(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.password = ::std::option::Option::Some(input.into());
        self
    }
    /// <p> The password that corresponds to the user name. </p>
    pub fn set_password(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.password = input;
        self
    }
    /// <p> The password that corresponds to the user name. </p>
    pub fn get_password(&self) -> &::std::option::Option<::std::string::String> {
        &self.password
    }
    /// Consumes the builder and constructs a [`VeevaConnectorProfileCredentials`](crate::types::VeevaConnectorProfileCredentials).
    /// This method will fail if any of the following fields are not set:
    /// - [`username`](crate::types::builders::VeevaConnectorProfileCredentialsBuilder::username)
    /// - [`password`](crate::types::builders::VeevaConnectorProfileCredentialsBuilder::password)
    pub fn build(self) -> ::std::result::Result<crate::types::VeevaConnectorProfileCredentials, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::VeevaConnectorProfileCredentials {
            username: self.username.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "username",
                    "username was not specified but it is required when building VeevaConnectorProfileCredentials",
                )
            })?,
            password: self.password.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "password",
                    "password was not specified but it is required when building VeevaConnectorProfileCredentials",
                )
            })?,
        })
    }
}
impl ::std::fmt::Debug for VeevaConnectorProfileCredentialsBuilder {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("VeevaConnectorProfileCredentialsBuilder");
        formatter.field("username", &self.username);
        formatter.field("password", &"*** Sensitive Data Redacted ***");
        formatter.finish()
    }
}
