// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The properties that are applied when the custom connector is being used as a source.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct CustomConnectorSourceProperties {
    /// <p>The entity specified in the custom connector as a source in the flow.</p>
    pub entity_name: ::std::string::String,
    /// <p>Custom properties that are required to use the custom connector as a source.</p>
    pub custom_properties: ::std::option::Option<::std::collections::HashMap<::std::string::String, ::std::string::String>>,
    /// <p>The API of the connector application that Amazon AppFlow uses to transfer your data.</p>
    pub data_transfer_api: ::std::option::Option<crate::types::DataTransferApi>,
}
impl CustomConnectorSourceProperties {
    /// <p>The entity specified in the custom connector as a source in the flow.</p>
    pub fn entity_name(&self) -> &str {
        use std::ops::Deref;
        self.entity_name.deref()
    }
    /// <p>Custom properties that are required to use the custom connector as a source.</p>
    pub fn custom_properties(&self) -> ::std::option::Option<&::std::collections::HashMap<::std::string::String, ::std::string::String>> {
        self.custom_properties.as_ref()
    }
    /// <p>The API of the connector application that Amazon AppFlow uses to transfer your data.</p>
    pub fn data_transfer_api(&self) -> ::std::option::Option<&crate::types::DataTransferApi> {
        self.data_transfer_api.as_ref()
    }
}
impl CustomConnectorSourceProperties {
    /// Creates a new builder-style object to manufacture [`CustomConnectorSourceProperties`](crate::types::CustomConnectorSourceProperties).
    pub fn builder() -> crate::types::builders::CustomConnectorSourcePropertiesBuilder {
        crate::types::builders::CustomConnectorSourcePropertiesBuilder::default()
    }
}

/// A builder for [`CustomConnectorSourceProperties`](crate::types::CustomConnectorSourceProperties).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct CustomConnectorSourcePropertiesBuilder {
    pub(crate) entity_name: ::std::option::Option<::std::string::String>,
    pub(crate) custom_properties: ::std::option::Option<::std::collections::HashMap<::std::string::String, ::std::string::String>>,
    pub(crate) data_transfer_api: ::std::option::Option<crate::types::DataTransferApi>,
}
impl CustomConnectorSourcePropertiesBuilder {
    /// <p>The entity specified in the custom connector as a source in the flow.</p>
    /// This field is required.
    pub fn entity_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.entity_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The entity specified in the custom connector as a source in the flow.</p>
    pub fn set_entity_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.entity_name = input;
        self
    }
    /// <p>The entity specified in the custom connector as a source in the flow.</p>
    pub fn get_entity_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.entity_name
    }
    /// Adds a key-value pair to `custom_properties`.
    ///
    /// To override the contents of this collection use [`set_custom_properties`](Self::set_custom_properties).
    ///
    /// <p>Custom properties that are required to use the custom connector as a source.</p>
    pub fn custom_properties(
        mut self,
        k: impl ::std::convert::Into<::std::string::String>,
        v: impl ::std::convert::Into<::std::string::String>,
    ) -> Self {
        let mut hash_map = self.custom_properties.unwrap_or_default();
        hash_map.insert(k.into(), v.into());
        self.custom_properties = ::std::option::Option::Some(hash_map);
        self
    }
    /// <p>Custom properties that are required to use the custom connector as a source.</p>
    pub fn set_custom_properties(
        mut self,
        input: ::std::option::Option<::std::collections::HashMap<::std::string::String, ::std::string::String>>,
    ) -> Self {
        self.custom_properties = input;
        self
    }
    /// <p>Custom properties that are required to use the custom connector as a source.</p>
    pub fn get_custom_properties(&self) -> &::std::option::Option<::std::collections::HashMap<::std::string::String, ::std::string::String>> {
        &self.custom_properties
    }
    /// <p>The API of the connector application that Amazon AppFlow uses to transfer your data.</p>
    pub fn data_transfer_api(mut self, input: crate::types::DataTransferApi) -> Self {
        self.data_transfer_api = ::std::option::Option::Some(input);
        self
    }
    /// <p>The API of the connector application that Amazon AppFlow uses to transfer your data.</p>
    pub fn set_data_transfer_api(mut self, input: ::std::option::Option<crate::types::DataTransferApi>) -> Self {
        self.data_transfer_api = input;
        self
    }
    /// <p>The API of the connector application that Amazon AppFlow uses to transfer your data.</p>
    pub fn get_data_transfer_api(&self) -> &::std::option::Option<crate::types::DataTransferApi> {
        &self.data_transfer_api
    }
    /// Consumes the builder and constructs a [`CustomConnectorSourceProperties`](crate::types::CustomConnectorSourceProperties).
    /// This method will fail if any of the following fields are not set:
    /// - [`entity_name`](crate::types::builders::CustomConnectorSourcePropertiesBuilder::entity_name)
    pub fn build(self) -> ::std::result::Result<crate::types::CustomConnectorSourceProperties, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::CustomConnectorSourceProperties {
            entity_name: self.entity_name.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "entity_name",
                    "entity_name was not specified but it is required when building CustomConnectorSourceProperties",
                )
            })?,
            custom_properties: self.custom_properties,
            data_transfer_api: self.data_transfer_api,
        })
    }
}
