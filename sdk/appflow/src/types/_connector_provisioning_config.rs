// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains information about the configuration of the connector being registered.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ConnectorProvisioningConfig {
    /// <p>Contains information about the configuration of the lambda which is being registered as the connector.</p>
    #[doc(hidden)]
    pub lambda: std::option::Option<crate::types::LambdaConnectorProvisioningConfig>,
}
impl ConnectorProvisioningConfig {
    /// <p>Contains information about the configuration of the lambda which is being registered as the connector.</p>
    pub fn lambda(&self) -> std::option::Option<&crate::types::LambdaConnectorProvisioningConfig> {
        self.lambda.as_ref()
    }
}
impl ConnectorProvisioningConfig {
    /// Creates a new builder-style object to manufacture [`ConnectorProvisioningConfig`](crate::types::ConnectorProvisioningConfig).
    pub fn builder() -> crate::types::builders::ConnectorProvisioningConfigBuilder {
        crate::types::builders::ConnectorProvisioningConfigBuilder::default()
    }
}

/// A builder for [`ConnectorProvisioningConfig`](crate::types::ConnectorProvisioningConfig).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ConnectorProvisioningConfigBuilder {
    pub(crate) lambda: std::option::Option<crate::types::LambdaConnectorProvisioningConfig>,
}
impl ConnectorProvisioningConfigBuilder {
    /// <p>Contains information about the configuration of the lambda which is being registered as the connector.</p>
    pub fn lambda(mut self, input: crate::types::LambdaConnectorProvisioningConfig) -> Self {
        self.lambda = Some(input);
        self
    }
    /// <p>Contains information about the configuration of the lambda which is being registered as the connector.</p>
    pub fn set_lambda(
        mut self,
        input: std::option::Option<crate::types::LambdaConnectorProvisioningConfig>,
    ) -> Self {
        self.lambda = input;
        self
    }
    /// Consumes the builder and constructs a [`ConnectorProvisioningConfig`](crate::types::ConnectorProvisioningConfig).
    pub fn build(self) -> crate::types::ConnectorProvisioningConfig {
        crate::types::ConnectorProvisioningConfig {
            lambda: self.lambda,
        }
    }
}
