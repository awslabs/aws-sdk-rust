// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p> Provides details in the event of a failed flow, including the failure count and the related error messages. </p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ErrorInfo {
    /// <p> Specifies the failure count for the attempted flow. </p>
    #[doc(hidden)]
    pub put_failures_count: std::option::Option<i64>,
    /// <p> Specifies the error message that appears if a flow fails. </p>
    #[doc(hidden)]
    pub execution_message: std::option::Option<std::string::String>,
}
impl ErrorInfo {
    /// <p> Specifies the failure count for the attempted flow. </p>
    pub fn put_failures_count(&self) -> std::option::Option<i64> {
        self.put_failures_count
    }
    /// <p> Specifies the error message that appears if a flow fails. </p>
    pub fn execution_message(&self) -> std::option::Option<&str> {
        self.execution_message.as_deref()
    }
}
impl ErrorInfo {
    /// Creates a new builder-style object to manufacture [`ErrorInfo`](crate::types::ErrorInfo).
    pub fn builder() -> crate::types::builders::ErrorInfoBuilder {
        crate::types::builders::ErrorInfoBuilder::default()
    }
}

/// A builder for [`ErrorInfo`](crate::types::ErrorInfo).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ErrorInfoBuilder {
    pub(crate) put_failures_count: std::option::Option<i64>,
    pub(crate) execution_message: std::option::Option<std::string::String>,
}
impl ErrorInfoBuilder {
    /// <p> Specifies the failure count for the attempted flow. </p>
    pub fn put_failures_count(mut self, input: i64) -> Self {
        self.put_failures_count = Some(input);
        self
    }
    /// <p> Specifies the failure count for the attempted flow. </p>
    pub fn set_put_failures_count(mut self, input: std::option::Option<i64>) -> Self {
        self.put_failures_count = input;
        self
    }
    /// <p> Specifies the error message that appears if a flow fails. </p>
    pub fn execution_message(mut self, input: impl Into<std::string::String>) -> Self {
        self.execution_message = Some(input.into());
        self
    }
    /// <p> Specifies the error message that appears if a flow fails. </p>
    pub fn set_execution_message(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.execution_message = input;
        self
    }
    /// Consumes the builder and constructs a [`ErrorInfo`](crate::types::ErrorInfo).
    pub fn build(self) -> crate::types::ErrorInfo {
        crate::types::ErrorInfo {
            put_failures_count: self.put_failures_count,
            execution_message: self.execution_message,
        }
    }
}
