// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn serialize_structure_crate_input_create_connector_profile_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateConnectorProfileInput,
) {
    if let Some(var_1) = &input.connection_mode {
        object.key("connectionMode").string(var_1.as_str());
    }
    if let Some(var_2) = &input.connector_profile_config {
        let mut object_3 = object.key("connectorProfileConfig").start_object();
        crate::json_ser::serialize_structure_crate_model_connector_profile_config(
            &mut object_3,
            var_2,
        );
        object_3.finish();
    }
    if let Some(var_4) = &input.connector_profile_name {
        object.key("connectorProfileName").string(var_4);
    }
    if let Some(var_5) = &input.connector_type {
        object.key("connectorType").string(var_5.as_str());
    }
    if let Some(var_6) = &input.kms_arn {
        object.key("kmsArn").string(var_6);
    }
}

pub fn serialize_structure_crate_input_create_flow_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateFlowInput,
) {
    if let Some(var_7) = &input.description {
        object.key("description").string(var_7);
    }
    if let Some(var_8) = &input.destination_flow_config_list {
        let mut array_9 = object.key("destinationFlowConfigList").start_array();
        for item_10 in var_8 {
            {
                let mut object_11 = array_9.value().start_object();
                crate::json_ser::serialize_structure_crate_model_destination_flow_config(
                    &mut object_11,
                    item_10,
                );
                object_11.finish();
            }
        }
        array_9.finish();
    }
    if let Some(var_12) = &input.flow_name {
        object.key("flowName").string(var_12);
    }
    if let Some(var_13) = &input.kms_arn {
        object.key("kmsArn").string(var_13);
    }
    if let Some(var_14) = &input.source_flow_config {
        let mut object_15 = object.key("sourceFlowConfig").start_object();
        crate::json_ser::serialize_structure_crate_model_source_flow_config(&mut object_15, var_14);
        object_15.finish();
    }
    if let Some(var_16) = &input.tags {
        let mut object_17 = object.key("tags").start_object();
        for (key_18, value_19) in var_16 {
            {
                object_17.key(key_18).string(value_19);
            }
        }
        object_17.finish();
    }
    if let Some(var_20) = &input.tasks {
        let mut array_21 = object.key("tasks").start_array();
        for item_22 in var_20 {
            {
                let mut object_23 = array_21.value().start_object();
                crate::json_ser::serialize_structure_crate_model_task(&mut object_23, item_22);
                object_23.finish();
            }
        }
        array_21.finish();
    }
    if let Some(var_24) = &input.trigger_config {
        let mut object_25 = object.key("triggerConfig").start_object();
        crate::json_ser::serialize_structure_crate_model_trigger_config(&mut object_25, var_24);
        object_25.finish();
    }
}

pub fn serialize_structure_crate_input_delete_connector_profile_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DeleteConnectorProfileInput,
) {
    if let Some(var_26) = &input.connector_profile_name {
        object.key("connectorProfileName").string(var_26);
    }
    if input.force_delete {
        object.key("forceDelete").boolean(input.force_delete);
    }
}

pub fn serialize_structure_crate_input_delete_flow_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DeleteFlowInput,
) {
    if let Some(var_27) = &input.flow_name {
        object.key("flowName").string(var_27);
    }
    if input.force_delete {
        object.key("forceDelete").boolean(input.force_delete);
    }
}

pub fn serialize_structure_crate_input_describe_connector_entity_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DescribeConnectorEntityInput,
) {
    if let Some(var_28) = &input.connector_entity_name {
        object.key("connectorEntityName").string(var_28);
    }
    if let Some(var_29) = &input.connector_profile_name {
        object.key("connectorProfileName").string(var_29);
    }
    if let Some(var_30) = &input.connector_type {
        object.key("connectorType").string(var_30.as_str());
    }
}

pub fn serialize_structure_crate_input_describe_connector_profiles_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DescribeConnectorProfilesInput,
) {
    if let Some(var_31) = &input.connector_profile_names {
        let mut array_32 = object.key("connectorProfileNames").start_array();
        for item_33 in var_31 {
            {
                array_32.value().string(item_33);
            }
        }
        array_32.finish();
    }
    if let Some(var_34) = &input.connector_type {
        object.key("connectorType").string(var_34.as_str());
    }
    if let Some(var_35) = &input.max_results {
        object.key("maxResults").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_35).into()),
        );
    }
    if let Some(var_36) = &input.next_token {
        object.key("nextToken").string(var_36);
    }
}

pub fn serialize_structure_crate_input_describe_connectors_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DescribeConnectorsInput,
) {
    if let Some(var_37) = &input.connector_types {
        let mut array_38 = object.key("connectorTypes").start_array();
        for item_39 in var_37 {
            {
                array_38.value().string(item_39.as_str());
            }
        }
        array_38.finish();
    }
    if let Some(var_40) = &input.next_token {
        object.key("nextToken").string(var_40);
    }
}

pub fn serialize_structure_crate_input_describe_flow_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DescribeFlowInput,
) {
    if let Some(var_41) = &input.flow_name {
        object.key("flowName").string(var_41);
    }
}

pub fn serialize_structure_crate_input_describe_flow_execution_records_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DescribeFlowExecutionRecordsInput,
) {
    if let Some(var_42) = &input.flow_name {
        object.key("flowName").string(var_42);
    }
    if let Some(var_43) = &input.max_results {
        object.key("maxResults").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_43).into()),
        );
    }
    if let Some(var_44) = &input.next_token {
        object.key("nextToken").string(var_44);
    }
}

pub fn serialize_structure_crate_input_list_connector_entities_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::ListConnectorEntitiesInput,
) {
    if let Some(var_45) = &input.connector_profile_name {
        object.key("connectorProfileName").string(var_45);
    }
    if let Some(var_46) = &input.connector_type {
        object.key("connectorType").string(var_46.as_str());
    }
    if let Some(var_47) = &input.entities_path {
        object.key("entitiesPath").string(var_47);
    }
}

pub fn serialize_structure_crate_input_list_flows_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::ListFlowsInput,
) {
    if let Some(var_48) = &input.max_results {
        object.key("maxResults").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_48).into()),
        );
    }
    if let Some(var_49) = &input.next_token {
        object.key("nextToken").string(var_49);
    }
}

pub fn serialize_structure_crate_input_start_flow_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::StartFlowInput,
) {
    if let Some(var_50) = &input.flow_name {
        object.key("flowName").string(var_50);
    }
}

pub fn serialize_structure_crate_input_stop_flow_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::StopFlowInput,
) {
    if let Some(var_51) = &input.flow_name {
        object.key("flowName").string(var_51);
    }
}

pub fn serialize_structure_crate_input_tag_resource_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::TagResourceInput,
) {
    if let Some(var_52) = &input.tags {
        let mut object_53 = object.key("tags").start_object();
        for (key_54, value_55) in var_52 {
            {
                object_53.key(key_54).string(value_55);
            }
        }
        object_53.finish();
    }
}

pub fn serialize_structure_crate_input_update_connector_profile_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateConnectorProfileInput,
) {
    if let Some(var_56) = &input.connection_mode {
        object.key("connectionMode").string(var_56.as_str());
    }
    if let Some(var_57) = &input.connector_profile_config {
        let mut object_58 = object.key("connectorProfileConfig").start_object();
        crate::json_ser::serialize_structure_crate_model_connector_profile_config(
            &mut object_58,
            var_57,
        );
        object_58.finish();
    }
    if let Some(var_59) = &input.connector_profile_name {
        object.key("connectorProfileName").string(var_59);
    }
}

pub fn serialize_structure_crate_input_update_flow_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateFlowInput,
) {
    if let Some(var_60) = &input.description {
        object.key("description").string(var_60);
    }
    if let Some(var_61) = &input.destination_flow_config_list {
        let mut array_62 = object.key("destinationFlowConfigList").start_array();
        for item_63 in var_61 {
            {
                let mut object_64 = array_62.value().start_object();
                crate::json_ser::serialize_structure_crate_model_destination_flow_config(
                    &mut object_64,
                    item_63,
                );
                object_64.finish();
            }
        }
        array_62.finish();
    }
    if let Some(var_65) = &input.flow_name {
        object.key("flowName").string(var_65);
    }
    if let Some(var_66) = &input.source_flow_config {
        let mut object_67 = object.key("sourceFlowConfig").start_object();
        crate::json_ser::serialize_structure_crate_model_source_flow_config(&mut object_67, var_66);
        object_67.finish();
    }
    if let Some(var_68) = &input.tasks {
        let mut array_69 = object.key("tasks").start_array();
        for item_70 in var_68 {
            {
                let mut object_71 = array_69.value().start_object();
                crate::json_ser::serialize_structure_crate_model_task(&mut object_71, item_70);
                object_71.finish();
            }
        }
        array_69.finish();
    }
    if let Some(var_72) = &input.trigger_config {
        let mut object_73 = object.key("triggerConfig").start_object();
        crate::json_ser::serialize_structure_crate_model_trigger_config(&mut object_73, var_72);
        object_73.finish();
    }
}

pub fn serialize_structure_crate_model_connector_profile_config(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::ConnectorProfileConfig,
) {
    if let Some(var_74) = &input.connector_profile_properties {
        let mut object_75 = object.key("connectorProfileProperties").start_object();
        crate::json_ser::serialize_structure_crate_model_connector_profile_properties(
            &mut object_75,
            var_74,
        );
        object_75.finish();
    }
    if let Some(var_76) = &input.connector_profile_credentials {
        let mut object_77 = object.key("connectorProfileCredentials").start_object();
        crate::json_ser::serialize_structure_crate_model_connector_profile_credentials(
            &mut object_77,
            var_76,
        );
        object_77.finish();
    }
}

pub fn serialize_structure_crate_model_destination_flow_config(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::DestinationFlowConfig,
) {
    if let Some(var_78) = &input.connector_type {
        object.key("connectorType").string(var_78.as_str());
    }
    if let Some(var_79) = &input.connector_profile_name {
        object.key("connectorProfileName").string(var_79);
    }
    if let Some(var_80) = &input.destination_connector_properties {
        let mut object_81 = object.key("destinationConnectorProperties").start_object();
        crate::json_ser::serialize_structure_crate_model_destination_connector_properties(
            &mut object_81,
            var_80,
        );
        object_81.finish();
    }
}

pub fn serialize_structure_crate_model_source_flow_config(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::SourceFlowConfig,
) {
    if let Some(var_82) = &input.connector_type {
        object.key("connectorType").string(var_82.as_str());
    }
    if let Some(var_83) = &input.connector_profile_name {
        object.key("connectorProfileName").string(var_83);
    }
    if let Some(var_84) = &input.source_connector_properties {
        let mut object_85 = object.key("sourceConnectorProperties").start_object();
        crate::json_ser::serialize_structure_crate_model_source_connector_properties(
            &mut object_85,
            var_84,
        );
        object_85.finish();
    }
    if let Some(var_86) = &input.incremental_pull_config {
        let mut object_87 = object.key("incrementalPullConfig").start_object();
        crate::json_ser::serialize_structure_crate_model_incremental_pull_config(
            &mut object_87,
            var_86,
        );
        object_87.finish();
    }
}

pub fn serialize_structure_crate_model_task(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::Task,
) {
    if let Some(var_88) = &input.source_fields {
        let mut array_89 = object.key("sourceFields").start_array();
        for item_90 in var_88 {
            {
                array_89.value().string(item_90);
            }
        }
        array_89.finish();
    }
    if let Some(var_91) = &input.connector_operator {
        let mut object_92 = object.key("connectorOperator").start_object();
        crate::json_ser::serialize_structure_crate_model_connector_operator(&mut object_92, var_91);
        object_92.finish();
    }
    if let Some(var_93) = &input.destination_field {
        object.key("destinationField").string(var_93);
    }
    if let Some(var_94) = &input.task_type {
        object.key("taskType").string(var_94.as_str());
    }
    if let Some(var_95) = &input.task_properties {
        let mut object_96 = object.key("taskProperties").start_object();
        for (key_97, value_98) in var_95 {
            {
                object_96.key(key_97.as_str()).string(value_98);
            }
        }
        object_96.finish();
    }
}

pub fn serialize_structure_crate_model_trigger_config(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::TriggerConfig,
) {
    if let Some(var_99) = &input.trigger_type {
        object.key("triggerType").string(var_99.as_str());
    }
    if let Some(var_100) = &input.trigger_properties {
        let mut object_101 = object.key("triggerProperties").start_object();
        crate::json_ser::serialize_structure_crate_model_trigger_properties(
            &mut object_101,
            var_100,
        );
        object_101.finish();
    }
}

pub fn serialize_structure_crate_model_connector_profile_properties(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::ConnectorProfileProperties,
) {
    if let Some(var_102) = &input.amplitude {
        let mut object_103 = object.key("Amplitude").start_object();
        crate::json_ser::serialize_structure_crate_model_amplitude_connector_profile_properties(
            &mut object_103,
            var_102,
        );
        object_103.finish();
    }
    if let Some(var_104) = &input.datadog {
        let mut object_105 = object.key("Datadog").start_object();
        crate::json_ser::serialize_structure_crate_model_datadog_connector_profile_properties(
            &mut object_105,
            var_104,
        );
        object_105.finish();
    }
    if let Some(var_106) = &input.dynatrace {
        let mut object_107 = object.key("Dynatrace").start_object();
        crate::json_ser::serialize_structure_crate_model_dynatrace_connector_profile_properties(
            &mut object_107,
            var_106,
        );
        object_107.finish();
    }
    if let Some(var_108) = &input.google_analytics {
        let mut object_109 = object.key("GoogleAnalytics").start_object();
        crate::json_ser::serialize_structure_crate_model_google_analytics_connector_profile_properties(&mut object_109, var_108);
        object_109.finish();
    }
    if let Some(var_110) = &input.honeycode {
        let mut object_111 = object.key("Honeycode").start_object();
        crate::json_ser::serialize_structure_crate_model_honeycode_connector_profile_properties(
            &mut object_111,
            var_110,
        );
        object_111.finish();
    }
    if let Some(var_112) = &input.infor_nexus {
        let mut object_113 = object.key("InforNexus").start_object();
        crate::json_ser::serialize_structure_crate_model_infor_nexus_connector_profile_properties(
            &mut object_113,
            var_112,
        );
        object_113.finish();
    }
    if let Some(var_114) = &input.marketo {
        let mut object_115 = object.key("Marketo").start_object();
        crate::json_ser::serialize_structure_crate_model_marketo_connector_profile_properties(
            &mut object_115,
            var_114,
        );
        object_115.finish();
    }
    if let Some(var_116) = &input.redshift {
        let mut object_117 = object.key("Redshift").start_object();
        crate::json_ser::serialize_structure_crate_model_redshift_connector_profile_properties(
            &mut object_117,
            var_116,
        );
        object_117.finish();
    }
    if let Some(var_118) = &input.salesforce {
        let mut object_119 = object.key("Salesforce").start_object();
        crate::json_ser::serialize_structure_crate_model_salesforce_connector_profile_properties(
            &mut object_119,
            var_118,
        );
        object_119.finish();
    }
    if let Some(var_120) = &input.service_now {
        let mut object_121 = object.key("ServiceNow").start_object();
        crate::json_ser::serialize_structure_crate_model_service_now_connector_profile_properties(
            &mut object_121,
            var_120,
        );
        object_121.finish();
    }
    if let Some(var_122) = &input.singular {
        let mut object_123 = object.key("Singular").start_object();
        crate::json_ser::serialize_structure_crate_model_singular_connector_profile_properties(
            &mut object_123,
            var_122,
        );
        object_123.finish();
    }
    if let Some(var_124) = &input.slack {
        let mut object_125 = object.key("Slack").start_object();
        crate::json_ser::serialize_structure_crate_model_slack_connector_profile_properties(
            &mut object_125,
            var_124,
        );
        object_125.finish();
    }
    if let Some(var_126) = &input.snowflake {
        let mut object_127 = object.key("Snowflake").start_object();
        crate::json_ser::serialize_structure_crate_model_snowflake_connector_profile_properties(
            &mut object_127,
            var_126,
        );
        object_127.finish();
    }
    if let Some(var_128) = &input.trendmicro {
        let mut object_129 = object.key("Trendmicro").start_object();
        crate::json_ser::serialize_structure_crate_model_trendmicro_connector_profile_properties(
            &mut object_129,
            var_128,
        );
        object_129.finish();
    }
    if let Some(var_130) = &input.veeva {
        let mut object_131 = object.key("Veeva").start_object();
        crate::json_ser::serialize_structure_crate_model_veeva_connector_profile_properties(
            &mut object_131,
            var_130,
        );
        object_131.finish();
    }
    if let Some(var_132) = &input.zendesk {
        let mut object_133 = object.key("Zendesk").start_object();
        crate::json_ser::serialize_structure_crate_model_zendesk_connector_profile_properties(
            &mut object_133,
            var_132,
        );
        object_133.finish();
    }
    if let Some(var_134) = &input.sapo_data {
        let mut object_135 = object.key("SAPOData").start_object();
        crate::json_ser::serialize_structure_crate_model_sapo_data_connector_profile_properties(
            &mut object_135,
            var_134,
        );
        object_135.finish();
    }
}

pub fn serialize_structure_crate_model_connector_profile_credentials(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::ConnectorProfileCredentials,
) {
    if let Some(var_136) = &input.amplitude {
        let mut object_137 = object.key("Amplitude").start_object();
        crate::json_ser::serialize_structure_crate_model_amplitude_connector_profile_credentials(
            &mut object_137,
            var_136,
        );
        object_137.finish();
    }
    if let Some(var_138) = &input.datadog {
        let mut object_139 = object.key("Datadog").start_object();
        crate::json_ser::serialize_structure_crate_model_datadog_connector_profile_credentials(
            &mut object_139,
            var_138,
        );
        object_139.finish();
    }
    if let Some(var_140) = &input.dynatrace {
        let mut object_141 = object.key("Dynatrace").start_object();
        crate::json_ser::serialize_structure_crate_model_dynatrace_connector_profile_credentials(
            &mut object_141,
            var_140,
        );
        object_141.finish();
    }
    if let Some(var_142) = &input.google_analytics {
        let mut object_143 = object.key("GoogleAnalytics").start_object();
        crate::json_ser::serialize_structure_crate_model_google_analytics_connector_profile_credentials(&mut object_143, var_142);
        object_143.finish();
    }
    if let Some(var_144) = &input.honeycode {
        let mut object_145 = object.key("Honeycode").start_object();
        crate::json_ser::serialize_structure_crate_model_honeycode_connector_profile_credentials(
            &mut object_145,
            var_144,
        );
        object_145.finish();
    }
    if let Some(var_146) = &input.infor_nexus {
        let mut object_147 = object.key("InforNexus").start_object();
        crate::json_ser::serialize_structure_crate_model_infor_nexus_connector_profile_credentials(
            &mut object_147,
            var_146,
        );
        object_147.finish();
    }
    if let Some(var_148) = &input.marketo {
        let mut object_149 = object.key("Marketo").start_object();
        crate::json_ser::serialize_structure_crate_model_marketo_connector_profile_credentials(
            &mut object_149,
            var_148,
        );
        object_149.finish();
    }
    if let Some(var_150) = &input.redshift {
        let mut object_151 = object.key("Redshift").start_object();
        crate::json_ser::serialize_structure_crate_model_redshift_connector_profile_credentials(
            &mut object_151,
            var_150,
        );
        object_151.finish();
    }
    if let Some(var_152) = &input.salesforce {
        let mut object_153 = object.key("Salesforce").start_object();
        crate::json_ser::serialize_structure_crate_model_salesforce_connector_profile_credentials(
            &mut object_153,
            var_152,
        );
        object_153.finish();
    }
    if let Some(var_154) = &input.service_now {
        let mut object_155 = object.key("ServiceNow").start_object();
        crate::json_ser::serialize_structure_crate_model_service_now_connector_profile_credentials(
            &mut object_155,
            var_154,
        );
        object_155.finish();
    }
    if let Some(var_156) = &input.singular {
        let mut object_157 = object.key("Singular").start_object();
        crate::json_ser::serialize_structure_crate_model_singular_connector_profile_credentials(
            &mut object_157,
            var_156,
        );
        object_157.finish();
    }
    if let Some(var_158) = &input.slack {
        let mut object_159 = object.key("Slack").start_object();
        crate::json_ser::serialize_structure_crate_model_slack_connector_profile_credentials(
            &mut object_159,
            var_158,
        );
        object_159.finish();
    }
    if let Some(var_160) = &input.snowflake {
        let mut object_161 = object.key("Snowflake").start_object();
        crate::json_ser::serialize_structure_crate_model_snowflake_connector_profile_credentials(
            &mut object_161,
            var_160,
        );
        object_161.finish();
    }
    if let Some(var_162) = &input.trendmicro {
        let mut object_163 = object.key("Trendmicro").start_object();
        crate::json_ser::serialize_structure_crate_model_trendmicro_connector_profile_credentials(
            &mut object_163,
            var_162,
        );
        object_163.finish();
    }
    if let Some(var_164) = &input.veeva {
        let mut object_165 = object.key("Veeva").start_object();
        crate::json_ser::serialize_structure_crate_model_veeva_connector_profile_credentials(
            &mut object_165,
            var_164,
        );
        object_165.finish();
    }
    if let Some(var_166) = &input.zendesk {
        let mut object_167 = object.key("Zendesk").start_object();
        crate::json_ser::serialize_structure_crate_model_zendesk_connector_profile_credentials(
            &mut object_167,
            var_166,
        );
        object_167.finish();
    }
    if let Some(var_168) = &input.sapo_data {
        let mut object_169 = object.key("SAPOData").start_object();
        crate::json_ser::serialize_structure_crate_model_sapo_data_connector_profile_credentials(
            &mut object_169,
            var_168,
        );
        object_169.finish();
    }
}

pub fn serialize_structure_crate_model_destination_connector_properties(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::DestinationConnectorProperties,
) {
    if let Some(var_170) = &input.redshift {
        let mut object_171 = object.key("Redshift").start_object();
        crate::json_ser::serialize_structure_crate_model_redshift_destination_properties(
            &mut object_171,
            var_170,
        );
        object_171.finish();
    }
    if let Some(var_172) = &input.s3 {
        let mut object_173 = object.key("S3").start_object();
        crate::json_ser::serialize_structure_crate_model_s3_destination_properties(
            &mut object_173,
            var_172,
        );
        object_173.finish();
    }
    if let Some(var_174) = &input.salesforce {
        let mut object_175 = object.key("Salesforce").start_object();
        crate::json_ser::serialize_structure_crate_model_salesforce_destination_properties(
            &mut object_175,
            var_174,
        );
        object_175.finish();
    }
    if let Some(var_176) = &input.snowflake {
        let mut object_177 = object.key("Snowflake").start_object();
        crate::json_ser::serialize_structure_crate_model_snowflake_destination_properties(
            &mut object_177,
            var_176,
        );
        object_177.finish();
    }
    if let Some(var_178) = &input.event_bridge {
        let mut object_179 = object.key("EventBridge").start_object();
        crate::json_ser::serialize_structure_crate_model_event_bridge_destination_properties(
            &mut object_179,
            var_178,
        );
        object_179.finish();
    }
    if let Some(var_180) = &input.lookout_metrics {
        let mut object_181 = object.key("LookoutMetrics").start_object();
        crate::json_ser::serialize_structure_crate_model_lookout_metrics_destination_properties(
            &mut object_181,
            var_180,
        );
        object_181.finish();
    }
    if let Some(var_182) = &input.upsolver {
        let mut object_183 = object.key("Upsolver").start_object();
        crate::json_ser::serialize_structure_crate_model_upsolver_destination_properties(
            &mut object_183,
            var_182,
        );
        object_183.finish();
    }
    if let Some(var_184) = &input.honeycode {
        let mut object_185 = object.key("Honeycode").start_object();
        crate::json_ser::serialize_structure_crate_model_honeycode_destination_properties(
            &mut object_185,
            var_184,
        );
        object_185.finish();
    }
    if let Some(var_186) = &input.customer_profiles {
        let mut object_187 = object.key("CustomerProfiles").start_object();
        crate::json_ser::serialize_structure_crate_model_customer_profiles_destination_properties(
            &mut object_187,
            var_186,
        );
        object_187.finish();
    }
    if let Some(var_188) = &input.zendesk {
        let mut object_189 = object.key("Zendesk").start_object();
        crate::json_ser::serialize_structure_crate_model_zendesk_destination_properties(
            &mut object_189,
            var_188,
        );
        object_189.finish();
    }
}

pub fn serialize_structure_crate_model_source_connector_properties(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::SourceConnectorProperties,
) {
    if let Some(var_190) = &input.amplitude {
        let mut object_191 = object.key("Amplitude").start_object();
        crate::json_ser::serialize_structure_crate_model_amplitude_source_properties(
            &mut object_191,
            var_190,
        );
        object_191.finish();
    }
    if let Some(var_192) = &input.datadog {
        let mut object_193 = object.key("Datadog").start_object();
        crate::json_ser::serialize_structure_crate_model_datadog_source_properties(
            &mut object_193,
            var_192,
        );
        object_193.finish();
    }
    if let Some(var_194) = &input.dynatrace {
        let mut object_195 = object.key("Dynatrace").start_object();
        crate::json_ser::serialize_structure_crate_model_dynatrace_source_properties(
            &mut object_195,
            var_194,
        );
        object_195.finish();
    }
    if let Some(var_196) = &input.google_analytics {
        let mut object_197 = object.key("GoogleAnalytics").start_object();
        crate::json_ser::serialize_structure_crate_model_google_analytics_source_properties(
            &mut object_197,
            var_196,
        );
        object_197.finish();
    }
    if let Some(var_198) = &input.infor_nexus {
        let mut object_199 = object.key("InforNexus").start_object();
        crate::json_ser::serialize_structure_crate_model_infor_nexus_source_properties(
            &mut object_199,
            var_198,
        );
        object_199.finish();
    }
    if let Some(var_200) = &input.marketo {
        let mut object_201 = object.key("Marketo").start_object();
        crate::json_ser::serialize_structure_crate_model_marketo_source_properties(
            &mut object_201,
            var_200,
        );
        object_201.finish();
    }
    if let Some(var_202) = &input.s3 {
        let mut object_203 = object.key("S3").start_object();
        crate::json_ser::serialize_structure_crate_model_s3_source_properties(
            &mut object_203,
            var_202,
        );
        object_203.finish();
    }
    if let Some(var_204) = &input.salesforce {
        let mut object_205 = object.key("Salesforce").start_object();
        crate::json_ser::serialize_structure_crate_model_salesforce_source_properties(
            &mut object_205,
            var_204,
        );
        object_205.finish();
    }
    if let Some(var_206) = &input.service_now {
        let mut object_207 = object.key("ServiceNow").start_object();
        crate::json_ser::serialize_structure_crate_model_service_now_source_properties(
            &mut object_207,
            var_206,
        );
        object_207.finish();
    }
    if let Some(var_208) = &input.singular {
        let mut object_209 = object.key("Singular").start_object();
        crate::json_ser::serialize_structure_crate_model_singular_source_properties(
            &mut object_209,
            var_208,
        );
        object_209.finish();
    }
    if let Some(var_210) = &input.slack {
        let mut object_211 = object.key("Slack").start_object();
        crate::json_ser::serialize_structure_crate_model_slack_source_properties(
            &mut object_211,
            var_210,
        );
        object_211.finish();
    }
    if let Some(var_212) = &input.trendmicro {
        let mut object_213 = object.key("Trendmicro").start_object();
        crate::json_ser::serialize_structure_crate_model_trendmicro_source_properties(
            &mut object_213,
            var_212,
        );
        object_213.finish();
    }
    if let Some(var_214) = &input.veeva {
        let mut object_215 = object.key("Veeva").start_object();
        crate::json_ser::serialize_structure_crate_model_veeva_source_properties(
            &mut object_215,
            var_214,
        );
        object_215.finish();
    }
    if let Some(var_216) = &input.zendesk {
        let mut object_217 = object.key("Zendesk").start_object();
        crate::json_ser::serialize_structure_crate_model_zendesk_source_properties(
            &mut object_217,
            var_216,
        );
        object_217.finish();
    }
    if let Some(var_218) = &input.sapo_data {
        let mut object_219 = object.key("SAPOData").start_object();
        crate::json_ser::serialize_structure_crate_model_sapo_data_source_properties(
            &mut object_219,
            var_218,
        );
        object_219.finish();
    }
}

pub fn serialize_structure_crate_model_incremental_pull_config(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::IncrementalPullConfig,
) {
    if let Some(var_220) = &input.datetime_type_field_name {
        object.key("datetimeTypeFieldName").string(var_220);
    }
}

pub fn serialize_structure_crate_model_connector_operator(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::ConnectorOperator,
) {
    if let Some(var_221) = &input.amplitude {
        object.key("Amplitude").string(var_221.as_str());
    }
    if let Some(var_222) = &input.datadog {
        object.key("Datadog").string(var_222.as_str());
    }
    if let Some(var_223) = &input.dynatrace {
        object.key("Dynatrace").string(var_223.as_str());
    }
    if let Some(var_224) = &input.google_analytics {
        object.key("GoogleAnalytics").string(var_224.as_str());
    }
    if let Some(var_225) = &input.infor_nexus {
        object.key("InforNexus").string(var_225.as_str());
    }
    if let Some(var_226) = &input.marketo {
        object.key("Marketo").string(var_226.as_str());
    }
    if let Some(var_227) = &input.s3 {
        object.key("S3").string(var_227.as_str());
    }
    if let Some(var_228) = &input.salesforce {
        object.key("Salesforce").string(var_228.as_str());
    }
    if let Some(var_229) = &input.service_now {
        object.key("ServiceNow").string(var_229.as_str());
    }
    if let Some(var_230) = &input.singular {
        object.key("Singular").string(var_230.as_str());
    }
    if let Some(var_231) = &input.slack {
        object.key("Slack").string(var_231.as_str());
    }
    if let Some(var_232) = &input.trendmicro {
        object.key("Trendmicro").string(var_232.as_str());
    }
    if let Some(var_233) = &input.veeva {
        object.key("Veeva").string(var_233.as_str());
    }
    if let Some(var_234) = &input.zendesk {
        object.key("Zendesk").string(var_234.as_str());
    }
    if let Some(var_235) = &input.sapo_data {
        object.key("SAPOData").string(var_235.as_str());
    }
}

pub fn serialize_structure_crate_model_trigger_properties(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::TriggerProperties,
) {
    if let Some(var_236) = &input.scheduled {
        let mut object_237 = object.key("Scheduled").start_object();
        crate::json_ser::serialize_structure_crate_model_scheduled_trigger_properties(
            &mut object_237,
            var_236,
        );
        object_237.finish();
    }
}

pub fn serialize_structure_crate_model_amplitude_connector_profile_properties(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::AmplitudeConnectorProfileProperties,
) {
    let (_, _) = (object, input);
}

pub fn serialize_structure_crate_model_datadog_connector_profile_properties(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::DatadogConnectorProfileProperties,
) {
    if let Some(var_238) = &input.instance_url {
        object.key("instanceUrl").string(var_238);
    }
}

pub fn serialize_structure_crate_model_dynatrace_connector_profile_properties(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::DynatraceConnectorProfileProperties,
) {
    if let Some(var_239) = &input.instance_url {
        object.key("instanceUrl").string(var_239);
    }
}

pub fn serialize_structure_crate_model_google_analytics_connector_profile_properties(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::GoogleAnalyticsConnectorProfileProperties,
) {
    let (_, _) = (object, input);
}

pub fn serialize_structure_crate_model_honeycode_connector_profile_properties(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::HoneycodeConnectorProfileProperties,
) {
    let (_, _) = (object, input);
}

pub fn serialize_structure_crate_model_infor_nexus_connector_profile_properties(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::InforNexusConnectorProfileProperties,
) {
    if let Some(var_240) = &input.instance_url {
        object.key("instanceUrl").string(var_240);
    }
}

pub fn serialize_structure_crate_model_marketo_connector_profile_properties(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::MarketoConnectorProfileProperties,
) {
    if let Some(var_241) = &input.instance_url {
        object.key("instanceUrl").string(var_241);
    }
}

pub fn serialize_structure_crate_model_redshift_connector_profile_properties(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::RedshiftConnectorProfileProperties,
) {
    if let Some(var_242) = &input.database_url {
        object.key("databaseUrl").string(var_242);
    }
    if let Some(var_243) = &input.bucket_name {
        object.key("bucketName").string(var_243);
    }
    if let Some(var_244) = &input.bucket_prefix {
        object.key("bucketPrefix").string(var_244);
    }
    if let Some(var_245) = &input.role_arn {
        object.key("roleArn").string(var_245);
    }
}

pub fn serialize_structure_crate_model_salesforce_connector_profile_properties(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::SalesforceConnectorProfileProperties,
) {
    if let Some(var_246) = &input.instance_url {
        object.key("instanceUrl").string(var_246);
    }
    if input.is_sandbox_environment {
        object
            .key("isSandboxEnvironment")
            .boolean(input.is_sandbox_environment);
    }
}

pub fn serialize_structure_crate_model_service_now_connector_profile_properties(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::ServiceNowConnectorProfileProperties,
) {
    if let Some(var_247) = &input.instance_url {
        object.key("instanceUrl").string(var_247);
    }
}

pub fn serialize_structure_crate_model_singular_connector_profile_properties(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::SingularConnectorProfileProperties,
) {
    let (_, _) = (object, input);
}

pub fn serialize_structure_crate_model_slack_connector_profile_properties(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::SlackConnectorProfileProperties,
) {
    if let Some(var_248) = &input.instance_url {
        object.key("instanceUrl").string(var_248);
    }
}

pub fn serialize_structure_crate_model_snowflake_connector_profile_properties(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::SnowflakeConnectorProfileProperties,
) {
    if let Some(var_249) = &input.warehouse {
        object.key("warehouse").string(var_249);
    }
    if let Some(var_250) = &input.stage {
        object.key("stage").string(var_250);
    }
    if let Some(var_251) = &input.bucket_name {
        object.key("bucketName").string(var_251);
    }
    if let Some(var_252) = &input.bucket_prefix {
        object.key("bucketPrefix").string(var_252);
    }
    if let Some(var_253) = &input.private_link_service_name {
        object.key("privateLinkServiceName").string(var_253);
    }
    if let Some(var_254) = &input.account_name {
        object.key("accountName").string(var_254);
    }
    if let Some(var_255) = &input.region {
        object.key("region").string(var_255);
    }
}

pub fn serialize_structure_crate_model_trendmicro_connector_profile_properties(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::TrendmicroConnectorProfileProperties,
) {
    let (_, _) = (object, input);
}

pub fn serialize_structure_crate_model_veeva_connector_profile_properties(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::VeevaConnectorProfileProperties,
) {
    if let Some(var_256) = &input.instance_url {
        object.key("instanceUrl").string(var_256);
    }
}

pub fn serialize_structure_crate_model_zendesk_connector_profile_properties(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::ZendeskConnectorProfileProperties,
) {
    if let Some(var_257) = &input.instance_url {
        object.key("instanceUrl").string(var_257);
    }
}

pub fn serialize_structure_crate_model_sapo_data_connector_profile_properties(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::SapoDataConnectorProfileProperties,
) {
    if let Some(var_258) = &input.application_host_url {
        object.key("applicationHostUrl").string(var_258);
    }
    if let Some(var_259) = &input.application_service_path {
        object.key("applicationServicePath").string(var_259);
    }
    if let Some(var_260) = &input.port_number {
        object.key("portNumber").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_260).into()),
        );
    }
    if let Some(var_261) = &input.client_number {
        object.key("clientNumber").string(var_261);
    }
    if let Some(var_262) = &input.logon_language {
        object.key("logonLanguage").string(var_262);
    }
    if let Some(var_263) = &input.private_link_service_name {
        object.key("privateLinkServiceName").string(var_263);
    }
    if let Some(var_264) = &input.o_auth_properties {
        let mut object_265 = object.key("oAuthProperties").start_object();
        crate::json_ser::serialize_structure_crate_model_o_auth_properties(
            &mut object_265,
            var_264,
        );
        object_265.finish();
    }
}

pub fn serialize_structure_crate_model_amplitude_connector_profile_credentials(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::AmplitudeConnectorProfileCredentials,
) {
    if let Some(var_266) = &input.api_key {
        object.key("apiKey").string(var_266);
    }
    if let Some(var_267) = &input.secret_key {
        object.key("secretKey").string(var_267);
    }
}

pub fn serialize_structure_crate_model_datadog_connector_profile_credentials(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::DatadogConnectorProfileCredentials,
) {
    if let Some(var_268) = &input.api_key {
        object.key("apiKey").string(var_268);
    }
    if let Some(var_269) = &input.application_key {
        object.key("applicationKey").string(var_269);
    }
}

pub fn serialize_structure_crate_model_dynatrace_connector_profile_credentials(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::DynatraceConnectorProfileCredentials,
) {
    if let Some(var_270) = &input.api_token {
        object.key("apiToken").string(var_270);
    }
}

pub fn serialize_structure_crate_model_google_analytics_connector_profile_credentials(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::GoogleAnalyticsConnectorProfileCredentials,
) {
    if let Some(var_271) = &input.client_id {
        object.key("clientId").string(var_271);
    }
    if let Some(var_272) = &input.client_secret {
        object.key("clientSecret").string(var_272);
    }
    if let Some(var_273) = &input.access_token {
        object.key("accessToken").string(var_273);
    }
    if let Some(var_274) = &input.refresh_token {
        object.key("refreshToken").string(var_274);
    }
    if let Some(var_275) = &input.o_auth_request {
        let mut object_276 = object.key("oAuthRequest").start_object();
        crate::json_ser::serialize_structure_crate_model_connector_o_auth_request(
            &mut object_276,
            var_275,
        );
        object_276.finish();
    }
}

pub fn serialize_structure_crate_model_honeycode_connector_profile_credentials(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::HoneycodeConnectorProfileCredentials,
) {
    if let Some(var_277) = &input.access_token {
        object.key("accessToken").string(var_277);
    }
    if let Some(var_278) = &input.refresh_token {
        object.key("refreshToken").string(var_278);
    }
    if let Some(var_279) = &input.o_auth_request {
        let mut object_280 = object.key("oAuthRequest").start_object();
        crate::json_ser::serialize_structure_crate_model_connector_o_auth_request(
            &mut object_280,
            var_279,
        );
        object_280.finish();
    }
}

pub fn serialize_structure_crate_model_infor_nexus_connector_profile_credentials(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::InforNexusConnectorProfileCredentials,
) {
    if let Some(var_281) = &input.access_key_id {
        object.key("accessKeyId").string(var_281);
    }
    if let Some(var_282) = &input.user_id {
        object.key("userId").string(var_282);
    }
    if let Some(var_283) = &input.secret_access_key {
        object.key("secretAccessKey").string(var_283);
    }
    if let Some(var_284) = &input.datakey {
        object.key("datakey").string(var_284);
    }
}

pub fn serialize_structure_crate_model_marketo_connector_profile_credentials(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::MarketoConnectorProfileCredentials,
) {
    if let Some(var_285) = &input.client_id {
        object.key("clientId").string(var_285);
    }
    if let Some(var_286) = &input.client_secret {
        object.key("clientSecret").string(var_286);
    }
    if let Some(var_287) = &input.access_token {
        object.key("accessToken").string(var_287);
    }
    if let Some(var_288) = &input.o_auth_request {
        let mut object_289 = object.key("oAuthRequest").start_object();
        crate::json_ser::serialize_structure_crate_model_connector_o_auth_request(
            &mut object_289,
            var_288,
        );
        object_289.finish();
    }
}

pub fn serialize_structure_crate_model_redshift_connector_profile_credentials(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::RedshiftConnectorProfileCredentials,
) {
    if let Some(var_290) = &input.username {
        object.key("username").string(var_290);
    }
    if let Some(var_291) = &input.password {
        object.key("password").string(var_291);
    }
}

pub fn serialize_structure_crate_model_salesforce_connector_profile_credentials(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::SalesforceConnectorProfileCredentials,
) {
    if let Some(var_292) = &input.access_token {
        object.key("accessToken").string(var_292);
    }
    if let Some(var_293) = &input.refresh_token {
        object.key("refreshToken").string(var_293);
    }
    if let Some(var_294) = &input.o_auth_request {
        let mut object_295 = object.key("oAuthRequest").start_object();
        crate::json_ser::serialize_structure_crate_model_connector_o_auth_request(
            &mut object_295,
            var_294,
        );
        object_295.finish();
    }
    if let Some(var_296) = &input.client_credentials_arn {
        object.key("clientCredentialsArn").string(var_296);
    }
}

pub fn serialize_structure_crate_model_service_now_connector_profile_credentials(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::ServiceNowConnectorProfileCredentials,
) {
    if let Some(var_297) = &input.username {
        object.key("username").string(var_297);
    }
    if let Some(var_298) = &input.password {
        object.key("password").string(var_298);
    }
}

pub fn serialize_structure_crate_model_singular_connector_profile_credentials(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::SingularConnectorProfileCredentials,
) {
    if let Some(var_299) = &input.api_key {
        object.key("apiKey").string(var_299);
    }
}

pub fn serialize_structure_crate_model_slack_connector_profile_credentials(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::SlackConnectorProfileCredentials,
) {
    if let Some(var_300) = &input.client_id {
        object.key("clientId").string(var_300);
    }
    if let Some(var_301) = &input.client_secret {
        object.key("clientSecret").string(var_301);
    }
    if let Some(var_302) = &input.access_token {
        object.key("accessToken").string(var_302);
    }
    if let Some(var_303) = &input.o_auth_request {
        let mut object_304 = object.key("oAuthRequest").start_object();
        crate::json_ser::serialize_structure_crate_model_connector_o_auth_request(
            &mut object_304,
            var_303,
        );
        object_304.finish();
    }
}

pub fn serialize_structure_crate_model_snowflake_connector_profile_credentials(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::SnowflakeConnectorProfileCredentials,
) {
    if let Some(var_305) = &input.username {
        object.key("username").string(var_305);
    }
    if let Some(var_306) = &input.password {
        object.key("password").string(var_306);
    }
}

pub fn serialize_structure_crate_model_trendmicro_connector_profile_credentials(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::TrendmicroConnectorProfileCredentials,
) {
    if let Some(var_307) = &input.api_secret_key {
        object.key("apiSecretKey").string(var_307);
    }
}

pub fn serialize_structure_crate_model_veeva_connector_profile_credentials(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::VeevaConnectorProfileCredentials,
) {
    if let Some(var_308) = &input.username {
        object.key("username").string(var_308);
    }
    if let Some(var_309) = &input.password {
        object.key("password").string(var_309);
    }
}

pub fn serialize_structure_crate_model_zendesk_connector_profile_credentials(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::ZendeskConnectorProfileCredentials,
) {
    if let Some(var_310) = &input.client_id {
        object.key("clientId").string(var_310);
    }
    if let Some(var_311) = &input.client_secret {
        object.key("clientSecret").string(var_311);
    }
    if let Some(var_312) = &input.access_token {
        object.key("accessToken").string(var_312);
    }
    if let Some(var_313) = &input.o_auth_request {
        let mut object_314 = object.key("oAuthRequest").start_object();
        crate::json_ser::serialize_structure_crate_model_connector_o_auth_request(
            &mut object_314,
            var_313,
        );
        object_314.finish();
    }
}

pub fn serialize_structure_crate_model_sapo_data_connector_profile_credentials(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::SapoDataConnectorProfileCredentials,
) {
    if let Some(var_315) = &input.basic_auth_credentials {
        let mut object_316 = object.key("basicAuthCredentials").start_object();
        crate::json_ser::serialize_structure_crate_model_basic_auth_credentials(
            &mut object_316,
            var_315,
        );
        object_316.finish();
    }
    if let Some(var_317) = &input.o_auth_credentials {
        let mut object_318 = object.key("oAuthCredentials").start_object();
        crate::json_ser::serialize_structure_crate_model_o_auth_credentials(
            &mut object_318,
            var_317,
        );
        object_318.finish();
    }
}

pub fn serialize_structure_crate_model_redshift_destination_properties(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::RedshiftDestinationProperties,
) {
    if let Some(var_319) = &input.object {
        object.key("object").string(var_319);
    }
    if let Some(var_320) = &input.intermediate_bucket_name {
        object.key("intermediateBucketName").string(var_320);
    }
    if let Some(var_321) = &input.bucket_prefix {
        object.key("bucketPrefix").string(var_321);
    }
    if let Some(var_322) = &input.error_handling_config {
        let mut object_323 = object.key("errorHandlingConfig").start_object();
        crate::json_ser::serialize_structure_crate_model_error_handling_config(
            &mut object_323,
            var_322,
        );
        object_323.finish();
    }
}

pub fn serialize_structure_crate_model_s3_destination_properties(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::S3DestinationProperties,
) {
    if let Some(var_324) = &input.bucket_name {
        object.key("bucketName").string(var_324);
    }
    if let Some(var_325) = &input.bucket_prefix {
        object.key("bucketPrefix").string(var_325);
    }
    if let Some(var_326) = &input.s3_output_format_config {
        let mut object_327 = object.key("s3OutputFormatConfig").start_object();
        crate::json_ser::serialize_structure_crate_model_s3_output_format_config(
            &mut object_327,
            var_326,
        );
        object_327.finish();
    }
}

pub fn serialize_structure_crate_model_salesforce_destination_properties(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::SalesforceDestinationProperties,
) {
    if let Some(var_328) = &input.object {
        object.key("object").string(var_328);
    }
    if let Some(var_329) = &input.id_field_names {
        let mut array_330 = object.key("idFieldNames").start_array();
        for item_331 in var_329 {
            {
                array_330.value().string(item_331);
            }
        }
        array_330.finish();
    }
    if let Some(var_332) = &input.error_handling_config {
        let mut object_333 = object.key("errorHandlingConfig").start_object();
        crate::json_ser::serialize_structure_crate_model_error_handling_config(
            &mut object_333,
            var_332,
        );
        object_333.finish();
    }
    if let Some(var_334) = &input.write_operation_type {
        object.key("writeOperationType").string(var_334.as_str());
    }
}

pub fn serialize_structure_crate_model_snowflake_destination_properties(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::SnowflakeDestinationProperties,
) {
    if let Some(var_335) = &input.object {
        object.key("object").string(var_335);
    }
    if let Some(var_336) = &input.intermediate_bucket_name {
        object.key("intermediateBucketName").string(var_336);
    }
    if let Some(var_337) = &input.bucket_prefix {
        object.key("bucketPrefix").string(var_337);
    }
    if let Some(var_338) = &input.error_handling_config {
        let mut object_339 = object.key("errorHandlingConfig").start_object();
        crate::json_ser::serialize_structure_crate_model_error_handling_config(
            &mut object_339,
            var_338,
        );
        object_339.finish();
    }
}

pub fn serialize_structure_crate_model_event_bridge_destination_properties(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::EventBridgeDestinationProperties,
) {
    if let Some(var_340) = &input.object {
        object.key("object").string(var_340);
    }
    if let Some(var_341) = &input.error_handling_config {
        let mut object_342 = object.key("errorHandlingConfig").start_object();
        crate::json_ser::serialize_structure_crate_model_error_handling_config(
            &mut object_342,
            var_341,
        );
        object_342.finish();
    }
}

pub fn serialize_structure_crate_model_lookout_metrics_destination_properties(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::LookoutMetricsDestinationProperties,
) {
    let (_, _) = (object, input);
}

pub fn serialize_structure_crate_model_upsolver_destination_properties(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::UpsolverDestinationProperties,
) {
    if let Some(var_343) = &input.bucket_name {
        object.key("bucketName").string(var_343);
    }
    if let Some(var_344) = &input.bucket_prefix {
        object.key("bucketPrefix").string(var_344);
    }
    if let Some(var_345) = &input.s3_output_format_config {
        let mut object_346 = object.key("s3OutputFormatConfig").start_object();
        crate::json_ser::serialize_structure_crate_model_upsolver_s3_output_format_config(
            &mut object_346,
            var_345,
        );
        object_346.finish();
    }
}

pub fn serialize_structure_crate_model_honeycode_destination_properties(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::HoneycodeDestinationProperties,
) {
    if let Some(var_347) = &input.object {
        object.key("object").string(var_347);
    }
    if let Some(var_348) = &input.error_handling_config {
        let mut object_349 = object.key("errorHandlingConfig").start_object();
        crate::json_ser::serialize_structure_crate_model_error_handling_config(
            &mut object_349,
            var_348,
        );
        object_349.finish();
    }
}

pub fn serialize_structure_crate_model_customer_profiles_destination_properties(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::CustomerProfilesDestinationProperties,
) {
    if let Some(var_350) = &input.domain_name {
        object.key("domainName").string(var_350);
    }
    if let Some(var_351) = &input.object_type_name {
        object.key("objectTypeName").string(var_351);
    }
}

pub fn serialize_structure_crate_model_zendesk_destination_properties(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::ZendeskDestinationProperties,
) {
    if let Some(var_352) = &input.object {
        object.key("object").string(var_352);
    }
    if let Some(var_353) = &input.id_field_names {
        let mut array_354 = object.key("idFieldNames").start_array();
        for item_355 in var_353 {
            {
                array_354.value().string(item_355);
            }
        }
        array_354.finish();
    }
    if let Some(var_356) = &input.error_handling_config {
        let mut object_357 = object.key("errorHandlingConfig").start_object();
        crate::json_ser::serialize_structure_crate_model_error_handling_config(
            &mut object_357,
            var_356,
        );
        object_357.finish();
    }
    if let Some(var_358) = &input.write_operation_type {
        object.key("writeOperationType").string(var_358.as_str());
    }
}

pub fn serialize_structure_crate_model_amplitude_source_properties(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::AmplitudeSourceProperties,
) {
    if let Some(var_359) = &input.object {
        object.key("object").string(var_359);
    }
}

pub fn serialize_structure_crate_model_datadog_source_properties(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::DatadogSourceProperties,
) {
    if let Some(var_360) = &input.object {
        object.key("object").string(var_360);
    }
}

pub fn serialize_structure_crate_model_dynatrace_source_properties(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::DynatraceSourceProperties,
) {
    if let Some(var_361) = &input.object {
        object.key("object").string(var_361);
    }
}

pub fn serialize_structure_crate_model_google_analytics_source_properties(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::GoogleAnalyticsSourceProperties,
) {
    if let Some(var_362) = &input.object {
        object.key("object").string(var_362);
    }
}

pub fn serialize_structure_crate_model_infor_nexus_source_properties(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::InforNexusSourceProperties,
) {
    if let Some(var_363) = &input.object {
        object.key("object").string(var_363);
    }
}

pub fn serialize_structure_crate_model_marketo_source_properties(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::MarketoSourceProperties,
) {
    if let Some(var_364) = &input.object {
        object.key("object").string(var_364);
    }
}

pub fn serialize_structure_crate_model_s3_source_properties(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::S3SourceProperties,
) {
    if let Some(var_365) = &input.bucket_name {
        object.key("bucketName").string(var_365);
    }
    if let Some(var_366) = &input.bucket_prefix {
        object.key("bucketPrefix").string(var_366);
    }
    if let Some(var_367) = &input.s3_input_format_config {
        let mut object_368 = object.key("s3InputFormatConfig").start_object();
        crate::json_ser::serialize_structure_crate_model_s3_input_format_config(
            &mut object_368,
            var_367,
        );
        object_368.finish();
    }
}

pub fn serialize_structure_crate_model_salesforce_source_properties(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::SalesforceSourceProperties,
) {
    if let Some(var_369) = &input.object {
        object.key("object").string(var_369);
    }
    if input.enable_dynamic_field_update {
        object
            .key("enableDynamicFieldUpdate")
            .boolean(input.enable_dynamic_field_update);
    }
    if input.include_deleted_records {
        object
            .key("includeDeletedRecords")
            .boolean(input.include_deleted_records);
    }
}

pub fn serialize_structure_crate_model_service_now_source_properties(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::ServiceNowSourceProperties,
) {
    if let Some(var_370) = &input.object {
        object.key("object").string(var_370);
    }
}

pub fn serialize_structure_crate_model_singular_source_properties(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::SingularSourceProperties,
) {
    if let Some(var_371) = &input.object {
        object.key("object").string(var_371);
    }
}

pub fn serialize_structure_crate_model_slack_source_properties(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::SlackSourceProperties,
) {
    if let Some(var_372) = &input.object {
        object.key("object").string(var_372);
    }
}

pub fn serialize_structure_crate_model_trendmicro_source_properties(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::TrendmicroSourceProperties,
) {
    if let Some(var_373) = &input.object {
        object.key("object").string(var_373);
    }
}

pub fn serialize_structure_crate_model_veeva_source_properties(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::VeevaSourceProperties,
) {
    if let Some(var_374) = &input.object {
        object.key("object").string(var_374);
    }
    if let Some(var_375) = &input.document_type {
        object.key("documentType").string(var_375);
    }
    if input.include_source_files {
        object
            .key("includeSourceFiles")
            .boolean(input.include_source_files);
    }
    if input.include_renditions {
        object
            .key("includeRenditions")
            .boolean(input.include_renditions);
    }
    if input.include_all_versions {
        object
            .key("includeAllVersions")
            .boolean(input.include_all_versions);
    }
}

pub fn serialize_structure_crate_model_zendesk_source_properties(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::ZendeskSourceProperties,
) {
    if let Some(var_376) = &input.object {
        object.key("object").string(var_376);
    }
}

pub fn serialize_structure_crate_model_sapo_data_source_properties(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::SapoDataSourceProperties,
) {
    if let Some(var_377) = &input.object_path {
        object.key("objectPath").string(var_377);
    }
}

pub fn serialize_structure_crate_model_scheduled_trigger_properties(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::ScheduledTriggerProperties,
) {
    if let Some(var_378) = &input.schedule_expression {
        object.key("scheduleExpression").string(var_378);
    }
    if let Some(var_379) = &input.data_pull_mode {
        object.key("dataPullMode").string(var_379.as_str());
    }
    if let Some(var_380) = &input.schedule_start_time {
        object
            .key("scheduleStartTime")
            .instant(var_380, aws_smithy_types::instant::Format::EpochSeconds);
    }
    if let Some(var_381) = &input.schedule_end_time {
        object
            .key("scheduleEndTime")
            .instant(var_381, aws_smithy_types::instant::Format::EpochSeconds);
    }
    if let Some(var_382) = &input.timezone {
        object.key("timezone").string(var_382);
    }
    if let Some(var_383) = &input.schedule_offset {
        object.key("scheduleOffset").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_383).into()),
        );
    }
    if let Some(var_384) = &input.first_execution_from {
        object
            .key("firstExecutionFrom")
            .instant(var_384, aws_smithy_types::instant::Format::EpochSeconds);
    }
}

pub fn serialize_structure_crate_model_o_auth_properties(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::OAuthProperties,
) {
    if let Some(var_385) = &input.token_url {
        object.key("tokenUrl").string(var_385);
    }
    if let Some(var_386) = &input.auth_code_url {
        object.key("authCodeUrl").string(var_386);
    }
    if let Some(var_387) = &input.o_auth_scopes {
        let mut array_388 = object.key("oAuthScopes").start_array();
        for item_389 in var_387 {
            {
                array_388.value().string(item_389);
            }
        }
        array_388.finish();
    }
}

pub fn serialize_structure_crate_model_connector_o_auth_request(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::ConnectorOAuthRequest,
) {
    if let Some(var_390) = &input.auth_code {
        object.key("authCode").string(var_390);
    }
    if let Some(var_391) = &input.redirect_uri {
        object.key("redirectUri").string(var_391);
    }
}

pub fn serialize_structure_crate_model_basic_auth_credentials(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::BasicAuthCredentials,
) {
    if let Some(var_392) = &input.username {
        object.key("username").string(var_392);
    }
    if let Some(var_393) = &input.password {
        object.key("password").string(var_393);
    }
}

pub fn serialize_structure_crate_model_o_auth_credentials(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::OAuthCredentials,
) {
    if let Some(var_394) = &input.client_id {
        object.key("clientId").string(var_394);
    }
    if let Some(var_395) = &input.client_secret {
        object.key("clientSecret").string(var_395);
    }
    if let Some(var_396) = &input.access_token {
        object.key("accessToken").string(var_396);
    }
    if let Some(var_397) = &input.refresh_token {
        object.key("refreshToken").string(var_397);
    }
    if let Some(var_398) = &input.o_auth_request {
        let mut object_399 = object.key("oAuthRequest").start_object();
        crate::json_ser::serialize_structure_crate_model_connector_o_auth_request(
            &mut object_399,
            var_398,
        );
        object_399.finish();
    }
}

pub fn serialize_structure_crate_model_error_handling_config(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::ErrorHandlingConfig,
) {
    if input.fail_on_first_destination_error {
        object
            .key("failOnFirstDestinationError")
            .boolean(input.fail_on_first_destination_error);
    }
    if let Some(var_400) = &input.bucket_prefix {
        object.key("bucketPrefix").string(var_400);
    }
    if let Some(var_401) = &input.bucket_name {
        object.key("bucketName").string(var_401);
    }
}

pub fn serialize_structure_crate_model_s3_output_format_config(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::S3OutputFormatConfig,
) {
    if let Some(var_402) = &input.file_type {
        object.key("fileType").string(var_402.as_str());
    }
    if let Some(var_403) = &input.prefix_config {
        let mut object_404 = object.key("prefixConfig").start_object();
        crate::json_ser::serialize_structure_crate_model_prefix_config(&mut object_404, var_403);
        object_404.finish();
    }
    if let Some(var_405) = &input.aggregation_config {
        let mut object_406 = object.key("aggregationConfig").start_object();
        crate::json_ser::serialize_structure_crate_model_aggregation_config(
            &mut object_406,
            var_405,
        );
        object_406.finish();
    }
}

pub fn serialize_structure_crate_model_upsolver_s3_output_format_config(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::UpsolverS3OutputFormatConfig,
) {
    if let Some(var_407) = &input.file_type {
        object.key("fileType").string(var_407.as_str());
    }
    if let Some(var_408) = &input.prefix_config {
        let mut object_409 = object.key("prefixConfig").start_object();
        crate::json_ser::serialize_structure_crate_model_prefix_config(&mut object_409, var_408);
        object_409.finish();
    }
    if let Some(var_410) = &input.aggregation_config {
        let mut object_411 = object.key("aggregationConfig").start_object();
        crate::json_ser::serialize_structure_crate_model_aggregation_config(
            &mut object_411,
            var_410,
        );
        object_411.finish();
    }
}

pub fn serialize_structure_crate_model_s3_input_format_config(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::S3InputFormatConfig,
) {
    if let Some(var_412) = &input.s3_input_file_type {
        object.key("s3InputFileType").string(var_412.as_str());
    }
}

pub fn serialize_structure_crate_model_prefix_config(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::PrefixConfig,
) {
    if let Some(var_413) = &input.prefix_type {
        object.key("prefixType").string(var_413.as_str());
    }
    if let Some(var_414) = &input.prefix_format {
        object.key("prefixFormat").string(var_414.as_str());
    }
}

pub fn serialize_structure_crate_model_aggregation_config(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::AggregationConfig,
) {
    if let Some(var_415) = &input.aggregation_type {
        object.key("aggregationType").string(var_415.as_str());
    }
}
