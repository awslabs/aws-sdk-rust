// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_device_position_update(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::types::DevicePositionUpdate,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    {
        object.key("DeviceId").string(input.device_id.as_str());
    }
    {
        object
            .key("SampleTime")
            .date_time(&input.sample_time, ::aws_smithy_types::date_time::Format::DateTime)?;
    }
    {
        let mut array_1 = object.key("Position").start_array();
        for item_2 in &input.position {
            {
                array_1.value().number(
                    #[allow(clippy::useless_conversion)]
                    ::aws_smithy_types::Number::Float((*item_2).into()),
                );
            }
        }
        array_1.finish();
    }
    if let Some(var_3) = &input.accuracy {
        #[allow(unused_mut)]
        let mut object_4 = object.key("Accuracy").start_object();
        crate::protocol_serde::shape_positional_accuracy::ser_positional_accuracy(&mut object_4, var_3)?;
        object_4.finish();
    }
    if let Some(var_5) = &input.position_properties {
        #[allow(unused_mut)]
        let mut object_6 = object.key("PositionProperties").start_object();
        for (key_7, value_8) in var_5 {
            {
                object_6.key(key_7.as_str()).string(value_8.as_str());
            }
        }
        object_6.finish();
    }
    Ok(())
}
