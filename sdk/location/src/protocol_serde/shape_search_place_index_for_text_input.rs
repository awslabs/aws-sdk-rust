// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_search_place_index_for_text_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::search_place_index_for_text::SearchPlaceIndexForTextInput,
) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    if let Some(var_1) = &input.bias_position {
        let mut array_2 = object.key("BiasPosition").start_array();
        for item_3 in var_1 {
            {
                array_2.value().number(
                    #[allow(clippy::useless_conversion)]
                    aws_smithy_types::Number::Float((*item_3).into()),
                );
            }
        }
        array_2.finish();
    }
    if let Some(var_4) = &input.filter_b_box {
        let mut array_5 = object.key("FilterBBox").start_array();
        for item_6 in var_4 {
            {
                array_5.value().number(
                    #[allow(clippy::useless_conversion)]
                    aws_smithy_types::Number::Float((*item_6).into()),
                );
            }
        }
        array_5.finish();
    }
    if let Some(var_7) = &input.filter_countries {
        let mut array_8 = object.key("FilterCountries").start_array();
        for item_9 in var_7 {
            {
                array_8.value().string(item_9.as_str());
            }
        }
        array_8.finish();
    }
    if let Some(var_10) = &input.language {
        object.key("Language").string(var_10.as_str());
    }
    if input.max_results != 0 {
        object.key("MaxResults").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((input.max_results).into()),
        );
    }
    if let Some(var_11) = &input.text {
        object.key("Text").string(var_11.as_str());
    }
    Ok(())
}
