// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DeleteMapInput {
    /// <p>The name of the map resource to be deleted.</p>
    #[doc(hidden)]
    pub map_name: std::option::Option<std::string::String>,
}
impl DeleteMapInput {
    /// <p>The name of the map resource to be deleted.</p>
    pub fn map_name(&self) -> std::option::Option<&str> {
        self.map_name.as_deref()
    }
}
impl DeleteMapInput {
    /// Creates a new builder-style object to manufacture [`DeleteMapInput`](crate::operation::delete_map::DeleteMapInput).
    pub fn builder() -> crate::operation::delete_map::builders::DeleteMapInputBuilder {
        crate::operation::delete_map::builders::DeleteMapInputBuilder::default()
    }
}

/// A builder for [`DeleteMapInput`](crate::operation::delete_map::DeleteMapInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DeleteMapInputBuilder {
    pub(crate) map_name: std::option::Option<std::string::String>,
}
impl DeleteMapInputBuilder {
    /// <p>The name of the map resource to be deleted.</p>
    pub fn map_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.map_name = Some(input.into());
        self
    }
    /// <p>The name of the map resource to be deleted.</p>
    pub fn set_map_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.map_name = input;
        self
    }
    /// Consumes the builder and constructs a [`DeleteMapInput`](crate::operation::delete_map::DeleteMapInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::delete_map::DeleteMapInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(crate::operation::delete_map::DeleteMapInput {
            map_name: self.map_name,
        })
    }
}
