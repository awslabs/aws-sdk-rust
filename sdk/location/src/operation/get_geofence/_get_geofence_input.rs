// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GetGeofenceInput {
    /// <p>The geofence collection storing the target geofence.</p>
    #[doc(hidden)]
    pub collection_name: std::option::Option<std::string::String>,
    /// <p>The geofence you're retrieving details for.</p>
    #[doc(hidden)]
    pub geofence_id: std::option::Option<std::string::String>,
}
impl GetGeofenceInput {
    /// <p>The geofence collection storing the target geofence.</p>
    pub fn collection_name(&self) -> std::option::Option<&str> {
        self.collection_name.as_deref()
    }
    /// <p>The geofence you're retrieving details for.</p>
    pub fn geofence_id(&self) -> std::option::Option<&str> {
        self.geofence_id.as_deref()
    }
}
impl GetGeofenceInput {
    /// Creates a new builder-style object to manufacture [`GetGeofenceInput`](crate::operation::get_geofence::GetGeofenceInput).
    pub fn builder() -> crate::operation::get_geofence::builders::GetGeofenceInputBuilder {
        crate::operation::get_geofence::builders::GetGeofenceInputBuilder::default()
    }
}

/// A builder for [`GetGeofenceInput`](crate::operation::get_geofence::GetGeofenceInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct GetGeofenceInputBuilder {
    pub(crate) collection_name: std::option::Option<std::string::String>,
    pub(crate) geofence_id: std::option::Option<std::string::String>,
}
impl GetGeofenceInputBuilder {
    /// <p>The geofence collection storing the target geofence.</p>
    pub fn collection_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.collection_name = Some(input.into());
        self
    }
    /// <p>The geofence collection storing the target geofence.</p>
    pub fn set_collection_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.collection_name = input;
        self
    }
    /// <p>The geofence you're retrieving details for.</p>
    pub fn geofence_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.geofence_id = Some(input.into());
        self
    }
    /// <p>The geofence you're retrieving details for.</p>
    pub fn set_geofence_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.geofence_id = input;
        self
    }
    /// Consumes the builder and constructs a [`GetGeofenceInput`](crate::operation::get_geofence::GetGeofenceInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::get_geofence::GetGeofenceInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(crate::operation::get_geofence::GetGeofenceInput {
            collection_name: self.collection_name,
            geofence_id: self.geofence_id,
        })
    }
}
