// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GetMapSpritesInput {
    /// <p>The map resource associated with the sprite ﬁle.</p>
    #[doc(hidden)]
    pub map_name: std::option::Option<std::string::String>,
    /// <p>The name of the sprite ﬁle. Use the following ﬁle names for the sprite sheet:</p>
    /// <ul>
    /// <li> <p> <code>sprites.png</code> </p> </li>
    /// <li> <p> <code>sprites@2x.png</code> for high pixel density displays</p> </li>
    /// </ul>
    /// <p>For the JSON document containing image offsets. Use the following ﬁle names:</p>
    /// <ul>
    /// <li> <p> <code>sprites.json</code> </p> </li>
    /// <li> <p> <code>sprites@2x.json</code> for high pixel density displays</p> </li>
    /// </ul>
    #[doc(hidden)]
    pub file_name: std::option::Option<std::string::String>,
}
impl GetMapSpritesInput {
    /// <p>The map resource associated with the sprite ﬁle.</p>
    pub fn map_name(&self) -> std::option::Option<&str> {
        self.map_name.as_deref()
    }
    /// <p>The name of the sprite ﬁle. Use the following ﬁle names for the sprite sheet:</p>
    /// <ul>
    /// <li> <p> <code>sprites.png</code> </p> </li>
    /// <li> <p> <code>sprites@2x.png</code> for high pixel density displays</p> </li>
    /// </ul>
    /// <p>For the JSON document containing image offsets. Use the following ﬁle names:</p>
    /// <ul>
    /// <li> <p> <code>sprites.json</code> </p> </li>
    /// <li> <p> <code>sprites@2x.json</code> for high pixel density displays</p> </li>
    /// </ul>
    pub fn file_name(&self) -> std::option::Option<&str> {
        self.file_name.as_deref()
    }
}
impl GetMapSpritesInput {
    /// Creates a new builder-style object to manufacture [`GetMapSpritesInput`](crate::operation::get_map_sprites::GetMapSpritesInput).
    pub fn builder() -> crate::operation::get_map_sprites::builders::GetMapSpritesInputBuilder {
        crate::operation::get_map_sprites::builders::GetMapSpritesInputBuilder::default()
    }
}

/// A builder for [`GetMapSpritesInput`](crate::operation::get_map_sprites::GetMapSpritesInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct GetMapSpritesInputBuilder {
    pub(crate) map_name: std::option::Option<std::string::String>,
    pub(crate) file_name: std::option::Option<std::string::String>,
}
impl GetMapSpritesInputBuilder {
    /// <p>The map resource associated with the sprite ﬁle.</p>
    pub fn map_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.map_name = Some(input.into());
        self
    }
    /// <p>The map resource associated with the sprite ﬁle.</p>
    pub fn set_map_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.map_name = input;
        self
    }
    /// <p>The name of the sprite ﬁle. Use the following ﬁle names for the sprite sheet:</p>
    /// <ul>
    /// <li> <p> <code>sprites.png</code> </p> </li>
    /// <li> <p> <code>sprites@2x.png</code> for high pixel density displays</p> </li>
    /// </ul>
    /// <p>For the JSON document containing image offsets. Use the following ﬁle names:</p>
    /// <ul>
    /// <li> <p> <code>sprites.json</code> </p> </li>
    /// <li> <p> <code>sprites@2x.json</code> for high pixel density displays</p> </li>
    /// </ul>
    pub fn file_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.file_name = Some(input.into());
        self
    }
    /// <p>The name of the sprite ﬁle. Use the following ﬁle names for the sprite sheet:</p>
    /// <ul>
    /// <li> <p> <code>sprites.png</code> </p> </li>
    /// <li> <p> <code>sprites@2x.png</code> for high pixel density displays</p> </li>
    /// </ul>
    /// <p>For the JSON document containing image offsets. Use the following ﬁle names:</p>
    /// <ul>
    /// <li> <p> <code>sprites.json</code> </p> </li>
    /// <li> <p> <code>sprites@2x.json</code> for high pixel density displays</p> </li>
    /// </ul>
    pub fn set_file_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.file_name = input;
        self
    }
    /// Consumes the builder and constructs a [`GetMapSpritesInput`](crate::operation::get_map_sprites::GetMapSpritesInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::get_map_sprites::GetMapSpritesInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(crate::operation::get_map_sprites::GetMapSpritesInput {
            map_name: self.map_name,
            file_name: self.file_name,
        })
    }
}
