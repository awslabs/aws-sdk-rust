// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) mod shape_associate_tracker_consumer;

pub fn parse_http_error_metadata(
    response: &http::Response<bytes::Bytes>,
) -> Result<
    aws_smithy_types::error::metadata::Builder,
    aws_smithy_json::deserialize::error::DeserializeError,
> {
    crate::json_errors::parse_error_metadata(response.body(), response.headers())
}

pub(crate) mod shape_batch_delete_device_position_history;

pub(crate) mod shape_batch_delete_geofence;

pub(crate) mod shape_batch_evaluate_geofences;

pub(crate) mod shape_batch_get_device_position;

pub(crate) mod shape_batch_put_geofence;

pub(crate) mod shape_batch_update_device_position;

pub(crate) mod shape_calculate_route;

pub(crate) mod shape_calculate_route_matrix;

pub(crate) mod shape_create_geofence_collection;

pub(crate) mod shape_create_map;

pub(crate) mod shape_create_place_index;

pub(crate) mod shape_create_route_calculator;

pub(crate) mod shape_create_tracker;

pub(crate) mod shape_delete_geofence_collection;

pub(crate) mod shape_delete_map;

pub(crate) mod shape_delete_place_index;

pub(crate) mod shape_delete_route_calculator;

pub(crate) mod shape_delete_tracker;

pub(crate) mod shape_describe_geofence_collection;

pub(crate) mod shape_describe_map;

pub(crate) mod shape_describe_place_index;

pub(crate) mod shape_describe_route_calculator;

pub(crate) mod shape_describe_tracker;

pub(crate) mod shape_disassociate_tracker_consumer;

pub(crate) mod shape_get_device_position;

pub(crate) mod shape_get_device_position_history;

pub(crate) mod shape_get_geofence;

pub(crate) mod shape_get_map_glyphs;

pub(crate) mod shape_get_map_sprites;

pub(crate) mod shape_get_map_style_descriptor;

pub(crate) mod shape_get_map_tile;

pub(crate) mod shape_get_place;

pub(crate) mod shape_list_device_positions;

pub(crate) mod shape_list_geofence_collections;

pub(crate) mod shape_list_geofences;

pub(crate) mod shape_list_maps;

pub(crate) mod shape_list_place_indexes;

pub(crate) mod shape_list_route_calculators;

pub(crate) mod shape_list_tags_for_resource;

pub(crate) mod shape_list_tracker_consumers;

pub(crate) mod shape_list_trackers;

pub(crate) mod shape_put_geofence;

pub(crate) mod shape_search_place_index_for_position;

pub(crate) mod shape_search_place_index_for_suggestions;

pub(crate) mod shape_search_place_index_for_text;

pub(crate) mod shape_tag_resource;

pub(crate) mod shape_untag_resource;

pub(crate) mod shape_update_geofence_collection;

pub(crate) mod shape_update_map;

pub(crate) mod shape_update_place_index;

pub(crate) mod shape_update_route_calculator;

pub(crate) mod shape_update_tracker;

pub(crate) fn or_empty_doc(data: &[u8]) -> &[u8] {
    if data.is_empty() {
        b"{}"
    } else {
        data
    }
}

pub(crate) mod shape_access_denied_exception;

pub(crate) mod shape_associate_tracker_consumer_input;

pub(crate) mod shape_batch_delete_device_position_history_input;

pub(crate) mod shape_batch_delete_geofence_input;

pub(crate) mod shape_batch_evaluate_geofences_input;

pub(crate) mod shape_batch_get_device_position_input;

pub(crate) mod shape_batch_put_geofence_input;

pub(crate) mod shape_batch_update_device_position_input;

pub(crate) mod shape_calculate_route_input;

pub(crate) mod shape_calculate_route_matrix_input;

pub(crate) mod shape_conflict_exception;

pub(crate) mod shape_create_geofence_collection_input;

pub(crate) mod shape_create_map_input;

pub(crate) mod shape_create_place_index_input;

pub(crate) mod shape_create_route_calculator_input;

pub(crate) mod shape_create_tracker_input;

pub(crate) mod shape_get_device_position_history_input;

pub(crate) mod shape_get_map_glyphs_output;

pub(crate) mod shape_get_map_sprites_output;

pub(crate) mod shape_get_map_style_descriptor_output;

pub(crate) mod shape_get_map_tile_output;

pub(crate) mod shape_internal_server_exception;

pub(crate) mod shape_list_device_positions_input;

pub(crate) mod shape_list_geofence_collections_input;

pub(crate) mod shape_list_geofences_input;

pub(crate) mod shape_list_maps_input;

pub(crate) mod shape_list_place_indexes_input;

pub(crate) mod shape_list_route_calculators_input;

pub(crate) mod shape_list_tracker_consumers_input;

pub(crate) mod shape_list_trackers_input;

pub(crate) mod shape_put_geofence_input;

pub(crate) mod shape_resource_not_found_exception;

pub(crate) mod shape_search_place_index_for_position_input;

pub(crate) mod shape_search_place_index_for_suggestions_input;

pub(crate) mod shape_search_place_index_for_text_input;

pub(crate) mod shape_service_quota_exceeded_exception;

pub(crate) mod shape_tag_resource_input;

pub(crate) mod shape_throttling_exception;

pub(crate) mod shape_update_geofence_collection_input;

pub(crate) mod shape_update_map_input;

pub(crate) mod shape_update_place_index_input;

pub(crate) mod shape_update_route_calculator_input;

pub(crate) mod shape_update_tracker_input;

pub(crate) mod shape_validation_exception;

pub(crate) mod shape_arn_list;

pub(crate) mod shape_batch_delete_device_position_history_error_list;

pub(crate) mod shape_batch_delete_geofence_error_list;

pub(crate) mod shape_batch_evaluate_geofences_error_list;

pub(crate) mod shape_batch_get_device_position_error_list;

pub(crate) mod shape_batch_put_geofence_error_list;

pub(crate) mod shape_batch_put_geofence_request_entry;

pub(crate) mod shape_batch_put_geofence_success_list;

pub(crate) mod shape_batch_update_device_position_error_list;

pub(crate) mod shape_calculate_route_car_mode_options;

pub(crate) mod shape_calculate_route_matrix_summary;

pub(crate) mod shape_calculate_route_summary;

pub(crate) mod shape_calculate_route_truck_mode_options;

pub(crate) mod shape_data_source_configuration;

pub(crate) mod shape_device_position_list;

pub(crate) mod shape_device_position_update;

pub(crate) mod shape_geofence_geometry;

pub(crate) mod shape_leg_list;

pub(crate) mod shape_list_device_positions_response_entry_list;

pub(crate) mod shape_list_geofence_collections_response_entry_list;

pub(crate) mod shape_list_geofence_response_entry_list;

pub(crate) mod shape_list_maps_response_entry_list;

pub(crate) mod shape_list_place_indexes_response_entry_list;

pub(crate) mod shape_list_route_calculators_response_entry_list;

pub(crate) mod shape_list_trackers_response_entry_list;

pub(crate) mod shape_map_configuration;

pub(crate) mod shape_place;

pub(crate) mod shape_position;

pub(crate) mod shape_position_list;

pub(crate) mod shape_positional_accuracy;

pub(crate) mod shape_property_map;

pub(crate) mod shape_route_matrix;

pub(crate) mod shape_search_for_position_result_list;

pub(crate) mod shape_search_for_suggestions_result_list;

pub(crate) mod shape_search_for_text_result_list;

pub(crate) mod shape_search_place_index_for_position_summary;

pub(crate) mod shape_search_place_index_for_suggestions_summary;

pub(crate) mod shape_search_place_index_for_text_summary;

pub(crate) mod shape_tag_map;

pub(crate) mod shape_validation_exception_field_list;

pub(crate) mod shape_batch_delete_device_position_history_error;

pub(crate) mod shape_batch_delete_geofence_error;

pub(crate) mod shape_batch_evaluate_geofences_error;

pub(crate) mod shape_batch_get_device_position_error;

pub(crate) mod shape_batch_put_geofence_error;

pub(crate) mod shape_batch_put_geofence_success;

pub(crate) mod shape_batch_update_device_position_error;

pub(crate) mod shape_bounding_box;

pub(crate) mod shape_circle;

pub(crate) mod shape_country_code_list;

pub(crate) mod shape_device_position;

pub(crate) mod shape_leg;

pub(crate) mod shape_linear_rings;

pub(crate) mod shape_list_device_positions_response_entry;

pub(crate) mod shape_list_geofence_collections_response_entry;

pub(crate) mod shape_list_geofence_response_entry;

pub(crate) mod shape_list_maps_response_entry;

pub(crate) mod shape_list_place_indexes_response_entry;

pub(crate) mod shape_list_route_calculators_response_entry;

pub(crate) mod shape_list_trackers_response_entry;

pub(crate) mod shape_place_geometry;

pub(crate) mod shape_route_matrix_row;

pub(crate) mod shape_search_for_position_result;

pub(crate) mod shape_search_for_suggestions_result;

pub(crate) mod shape_search_for_text_result;

pub(crate) mod shape_time_zone;

pub(crate) mod shape_truck_dimensions;

pub(crate) mod shape_truck_weight;

pub(crate) mod shape_validation_exception_field;

pub(crate) mod shape_batch_item_error;

pub(crate) mod shape_leg_geometry;

pub(crate) mod shape_linear_ring;

pub(crate) mod shape_route_matrix_entry;

pub(crate) mod shape_step_list;

pub(crate) mod shape_line_string;

pub(crate) mod shape_route_matrix_entry_error;

pub(crate) mod shape_step;
