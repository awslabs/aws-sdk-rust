// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetGeofence`](crate::operation::get_geofence::builders::GetGeofenceFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`collection_name(impl Into<String>)`](crate::operation::get_geofence::builders::GetGeofenceFluentBuilder::collection_name) / [`set_collection_name(Option<String>)`](crate::operation::get_geofence::builders::GetGeofenceFluentBuilder::set_collection_name):<br>required: **true**<br><p>The geofence collection storing the target geofence.</p><br>
    ///   - [`geofence_id(impl Into<String>)`](crate::operation::get_geofence::builders::GetGeofenceFluentBuilder::geofence_id) / [`set_geofence_id(Option<String>)`](crate::operation::get_geofence::builders::GetGeofenceFluentBuilder::set_geofence_id):<br>required: **true**<br><p>The geofence you're retrieving details for.</p><br>
    /// - On success, responds with [`GetGeofenceOutput`](crate::operation::get_geofence::GetGeofenceOutput) with field(s):
    ///   - [`geofence_id(String)`](crate::operation::get_geofence::GetGeofenceOutput::geofence_id): <p>The geofence identifier.</p>
    ///   - [`geometry(Option<GeofenceGeometry>)`](crate::operation::get_geofence::GetGeofenceOutput::geometry): <p>Contains the geofence geometry details describing a polygon or a circle.</p>
    ///   - [`status(String)`](crate::operation::get_geofence::GetGeofenceOutput::status): <p>Identifies the state of the geofence. A geofence will hold one of the following states:</p>  <ul>   <li> <p> <code>ACTIVE</code> — The geofence has been indexed by the system. </p> </li>   <li> <p> <code>PENDING</code> — The geofence is being processed by the system.</p> </li>   <li> <p> <code>FAILED</code> — The geofence failed to be indexed by the system.</p> </li>   <li> <p> <code>DELETED</code> — The geofence has been deleted from the system index.</p> </li>   <li> <p> <code>DELETING</code> — The geofence is being deleted from the system index.</p> </li>  </ul>
    ///   - [`create_time(DateTime)`](crate::operation::get_geofence::GetGeofenceOutput::create_time): <p>The timestamp for when the geofence collection was created in <a href="https://www.iso.org/iso-8601-date-and-time-format.html">ISO 8601</a> format: <code>YYYY-MM-DDThh:mm:ss.sssZ</code> </p>
    ///   - [`update_time(DateTime)`](crate::operation::get_geofence::GetGeofenceOutput::update_time): <p>The timestamp for when the geofence collection was last updated in <a href="https://www.iso.org/iso-8601-date-and-time-format.html">ISO 8601</a> format: <code>YYYY-MM-DDThh:mm:ss.sssZ</code> </p>
    ///   - [`geofence_properties(Option<HashMap::<String, String>>)`](crate::operation::get_geofence::GetGeofenceOutput::geofence_properties): <p>User defined properties of the geofence. A property is a key-value pair stored with the geofence and added to any geofence event triggered with that geofence.</p>  <p>Format: <code>"key" : "value"</code> </p>
    /// - On failure, responds with [`SdkError<GetGeofenceError>`](crate::operation::get_geofence::GetGeofenceError)
    pub fn get_geofence(&self) -> crate::operation::get_geofence::builders::GetGeofenceFluentBuilder {
        crate::operation::get_geofence::builders::GetGeofenceFluentBuilder::new(self.handle.clone())
    }
}
