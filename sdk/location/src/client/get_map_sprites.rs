// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetMapSprites`](crate::operation::get_map_sprites::builders::GetMapSpritesFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`map_name(impl Into<String>)`](crate::operation::get_map_sprites::builders::GetMapSpritesFluentBuilder::map_name) / [`set_map_name(Option<String>)`](crate::operation::get_map_sprites::builders::GetMapSpritesFluentBuilder::set_map_name): <p>The map resource associated with the sprite ﬁle.</p>
    ///   - [`file_name(impl Into<String>)`](crate::operation::get_map_sprites::builders::GetMapSpritesFluentBuilder::file_name) / [`set_file_name(Option<String>)`](crate::operation::get_map_sprites::builders::GetMapSpritesFluentBuilder::set_file_name): <p>The name of the sprite ﬁle. Use the following ﬁle names for the sprite sheet:</p>  <ul>   <li> <p> <code>sprites.png</code> </p> </li>   <li> <p> <code>sprites@2x.png</code> for high pixel density displays</p> </li>  </ul>  <p>For the JSON document containing image offsets. Use the following ﬁle names:</p>  <ul>   <li> <p> <code>sprites.json</code> </p> </li>   <li> <p> <code>sprites@2x.json</code> for high pixel density displays</p> </li>  </ul>
    /// - On success, responds with [`GetMapSpritesOutput`](crate::operation::get_map_sprites::GetMapSpritesOutput) with field(s):
    ///   - [`blob(Option<Blob>)`](crate::operation::get_map_sprites::GetMapSpritesOutput::blob): <p>Contains the body of the sprite sheet or JSON offset ﬁle.</p>
    ///   - [`content_type(Option<String>)`](crate::operation::get_map_sprites::GetMapSpritesOutput::content_type): <p>The content type of the sprite sheet and offsets. For example, the sprite sheet content type is <code>image/png</code>, and the sprite offset JSON document is <code>application/json</code>. </p>
    /// - On failure, responds with [`SdkError<GetMapSpritesError>`](crate::operation::get_map_sprites::GetMapSpritesError)
    pub fn get_map_sprites(
        &self,
    ) -> crate::operation::get_map_sprites::builders::GetMapSpritesFluentBuilder {
        crate::operation::get_map_sprites::builders::GetMapSpritesFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
