// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListRouteCalculators`](crate::client::fluent_builders::ListRouteCalculators) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListRouteCalculators::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListRouteCalculators::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListRouteCalculators::set_max_results): <p>An optional maximum number of results returned in a single call.</p>  <p>Default Value: <code>100</code> </p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListRouteCalculators::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListRouteCalculators::set_next_token): <p>The pagination token specifying which page of results to return in the response. If no token is provided, the default page is the first page.</p>  <p>Default Value: <code>null</code> </p>
    /// - On success, responds with [`ListRouteCalculatorsOutput`](crate::output::ListRouteCalculatorsOutput) with field(s):
    ///   - [`entries(Option<Vec<ListRouteCalculatorsResponseEntry>>)`](crate::output::ListRouteCalculatorsOutput::entries): <p>Lists the route calculator resources that exist in your AWS account</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListRouteCalculatorsOutput::next_token): <p>A pagination token indicating there are additional pages available. You can use the token in a subsequent request to fetch the next set of results.</p>
    /// - On failure, responds with [`SdkError<ListRouteCalculatorsError>`](crate::error::ListRouteCalculatorsError)
    pub fn list_route_calculators(&self) -> crate::client::fluent_builders::ListRouteCalculators {
        crate::client::fluent_builders::ListRouteCalculators::new(self.handle.clone())
    }
}
