// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`SearchPlaceIndexForText`](crate::operation::search_place_index_for_text::builders::SearchPlaceIndexForTextFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`index_name(impl Into<String>)`](crate::operation::search_place_index_for_text::builders::SearchPlaceIndexForTextFluentBuilder::index_name) / [`set_index_name(Option<String>)`](crate::operation::search_place_index_for_text::builders::SearchPlaceIndexForTextFluentBuilder::set_index_name):<br>required: **true**<br><p>The name of the place index resource you want to use for the search.</p><br>
    ///   - [`text(impl Into<String>)`](crate::operation::search_place_index_for_text::builders::SearchPlaceIndexForTextFluentBuilder::text) / [`set_text(Option<String>)`](crate::operation::search_place_index_for_text::builders::SearchPlaceIndexForTextFluentBuilder::set_text):<br>required: **true**<br><p>The address, name, city, or region to be used in the search in free-form text format. For example, <code>123 Any Street</code>.</p><br>
    ///   - [`bias_position(f64)`](crate::operation::search_place_index_for_text::builders::SearchPlaceIndexForTextFluentBuilder::bias_position) / [`set_bias_position(Option<Vec::<f64>>)`](crate::operation::search_place_index_for_text::builders::SearchPlaceIndexForTextFluentBuilder::set_bias_position):<br>required: **false**<br><p>An optional parameter that indicates a preference for places that are closer to a specified position.</p>  <p> If provided, this parameter must contain a pair of numbers. The first number represents the X coordinate, or longitude; the second number represents the Y coordinate, or latitude.</p>  <p>For example, <code>[-123.1174, 49.2847]</code> represents the position with longitude <code>-123.1174</code> and latitude <code>49.2847</code>.</p> <note>   <p> <code>BiasPosition</code> and <code>FilterBBox</code> are mutually exclusive. Specifying both options results in an error. </p>  </note><br>
    ///   - [`filter_b_box(f64)`](crate::operation::search_place_index_for_text::builders::SearchPlaceIndexForTextFluentBuilder::filter_b_box) / [`set_filter_b_box(Option<Vec::<f64>>)`](crate::operation::search_place_index_for_text::builders::SearchPlaceIndexForTextFluentBuilder::set_filter_b_box):<br>required: **false**<br><p>An optional parameter that limits the search results by returning only places that are within the provided bounding box.</p>  <p> If provided, this parameter must contain a total of four consecutive numbers in two pairs. The first pair of numbers represents the X and Y coordinates (longitude and latitude, respectively) of the southwest corner of the bounding box; the second pair of numbers represents the X and Y coordinates (longitude and latitude, respectively) of the northeast corner of the bounding box.</p>  <p>For example, <code>[-12.7935, -37.4835, -12.0684, -36.9542]</code> represents a bounding box where the southwest corner has longitude <code>-12.7935</code> and latitude <code>-37.4835</code>, and the northeast corner has longitude <code>-12.0684</code> and latitude <code>-36.9542</code>.</p> <note>   <p> <code>FilterBBox</code> and <code>BiasPosition</code> are mutually exclusive. Specifying both options results in an error. </p>  </note><br>
    ///   - [`filter_countries(impl Into<String>)`](crate::operation::search_place_index_for_text::builders::SearchPlaceIndexForTextFluentBuilder::filter_countries) / [`set_filter_countries(Option<Vec::<String>>)`](crate::operation::search_place_index_for_text::builders::SearchPlaceIndexForTextFluentBuilder::set_filter_countries):<br>required: **false**<br><p>An optional parameter that limits the search results by returning only places that are in a specified list of countries.</p>  <ul>   <li> <p>Valid values include <a href="https://www.iso.org/iso-3166-country-codes.html">ISO 3166</a> 3-digit country codes. For example, Australia uses three upper-case characters: <code>AUS</code>.</p> </li>  </ul><br>
    ///   - [`max_results(i32)`](crate::operation::search_place_index_for_text::builders::SearchPlaceIndexForTextFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::search_place_index_for_text::builders::SearchPlaceIndexForTextFluentBuilder::set_max_results):<br>required: **false**<br><p>An optional parameter. The maximum number of results returned per request. </p>  <p>The default: <code>50</code> </p><br>
    ///   - [`language(impl Into<String>)`](crate::operation::search_place_index_for_text::builders::SearchPlaceIndexForTextFluentBuilder::language) / [`set_language(Option<String>)`](crate::operation::search_place_index_for_text::builders::SearchPlaceIndexForTextFluentBuilder::set_language):<br>required: **false**<br><p>The preferred language used to return results. The value must be a valid <a href="https://tools.ietf.org/search/bcp47">BCP 47</a> language tag, for example, <code>en</code> for English.</p>  <p>This setting affects the languages used in the results, but not the results themselves. If no language is specified, or not supported for a particular result, the partner automatically chooses a language for the result.</p>  <p>For an example, we'll use the Greek language. You search for <code>Athens, Greece</code>, with the <code>language</code> parameter set to <code>en</code>. The result found will most likely be returned as <code>Athens</code>.</p>  <p>If you set the <code>language</code> parameter to <code>el</code>, for Greek, then the result found will more likely be returned as <code>Αθήνα</code>.</p>  <p>If the data provider does not have a value for Greek, the result will be in a language that the provider does support.</p><br>
    ///   - [`filter_categories(impl Into<String>)`](crate::operation::search_place_index_for_text::builders::SearchPlaceIndexForTextFluentBuilder::filter_categories) / [`set_filter_categories(Option<Vec::<String>>)`](crate::operation::search_place_index_for_text::builders::SearchPlaceIndexForTextFluentBuilder::set_filter_categories):<br>required: **false**<br><p>A list of one or more Amazon Location categories to filter the returned places. If you include more than one category, the results will include results that match <i>any</i> of the categories listed.</p>  <p>For more information about using categories, including a list of Amazon Location categories, see <a href="https://docs.aws.amazon.com/location/latest/developerguide/category-filtering.html">Categories and filtering</a>, in the <i>Amazon Location Service Developer Guide</i>.</p><br>
    ///   - [`key(impl Into<String>)`](crate::operation::search_place_index_for_text::builders::SearchPlaceIndexForTextFluentBuilder::key) / [`set_key(Option<String>)`](crate::operation::search_place_index_for_text::builders::SearchPlaceIndexForTextFluentBuilder::set_key):<br>required: **false**<br><p>The optional <a href="https://docs.aws.amazon.com/location/latest/developerguide/using-apikeys.html">API key</a> to authorize the request.</p><br>
    /// - On success, responds with [`SearchPlaceIndexForTextOutput`](crate::operation::search_place_index_for_text::SearchPlaceIndexForTextOutput) with field(s):
    ///   - [`summary(Option<SearchPlaceIndexForTextSummary>)`](crate::operation::search_place_index_for_text::SearchPlaceIndexForTextOutput::summary): <p>Contains a summary of the request. Echoes the input values for <code>BiasPosition</code>, <code>FilterBBox</code>, <code>FilterCountries</code>, <code>Language</code>, <code>MaxResults</code>, and <code>Text</code>. Also includes the <code>DataSource</code> of the place index and the bounding box, <code>ResultBBox</code>, which surrounds the search results. </p>
    ///   - [`results(Vec::<SearchForTextResult>)`](crate::operation::search_place_index_for_text::SearchPlaceIndexForTextOutput::results): <p>A list of Places matching the input text. Each result contains additional information about the specific point of interest. </p>  <p>Not all response properties are included with all responses. Some properties may only be returned by specific data partners.</p>
    /// - On failure, responds with [`SdkError<SearchPlaceIndexForTextError>`](crate::operation::search_place_index_for_text::SearchPlaceIndexForTextError)
    pub fn search_place_index_for_text(&self) -> crate::operation::search_place_index_for_text::builders::SearchPlaceIndexForTextFluentBuilder {
        crate::operation::search_place_index_for_text::builders::SearchPlaceIndexForTextFluentBuilder::new(self.handle.clone())
    }
}
