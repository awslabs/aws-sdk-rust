// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateMap`](crate::client::fluent_builders::CreateMap) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`map_name(impl Into<String>)`](crate::client::fluent_builders::CreateMap::map_name) / [`set_map_name(Option<String>)`](crate::client::fluent_builders::CreateMap::set_map_name): <p>The name for the map resource.</p>  <p>Requirements:</p>  <ul>   <li> <p>Must contain only alphanumeric characters (A–Z, a–z, 0–9), hyphens (-), periods (.), and underscores (_). </p> </li>   <li> <p>Must be a unique map resource name. </p> </li>   <li> <p>No spaces allowed. For example, <code>ExampleMap</code>.</p> </li>  </ul>
    ///   - [`configuration(MapConfiguration)`](crate::client::fluent_builders::CreateMap::configuration) / [`set_configuration(Option<MapConfiguration>)`](crate::client::fluent_builders::CreateMap::set_configuration): <p>Specifies the <code>MapConfiguration</code>, including the map style, for the map resource that you create. The map style defines the look of maps and the data provider for your map resource.</p>
    ///   - [`pricing_plan(PricingPlan)`](crate::client::fluent_builders::CreateMap::pricing_plan) / [`set_pricing_plan(Option<PricingPlan>)`](crate::client::fluent_builders::CreateMap::set_pricing_plan): <p>No longer used. If included, the only allowed value is <code>RequestBasedUsage</code>.</p>
    ///   - [`description(impl Into<String>)`](crate::client::fluent_builders::CreateMap::description) / [`set_description(Option<String>)`](crate::client::fluent_builders::CreateMap::set_description): <p>An optional description for the map resource.</p>
    ///   - [`tags(HashMap<String, String>)`](crate::client::fluent_builders::CreateMap::tags) / [`set_tags(Option<HashMap<String, String>>)`](crate::client::fluent_builders::CreateMap::set_tags): <p>Applies one or more tags to the map resource. A tag is a key-value pair helps manage, identify, search, and filter your resources by labelling them.</p>  <p>Format: <code>"key" : "value"</code> </p>  <p>Restrictions:</p>  <ul>   <li> <p>Maximum 50 tags per resource</p> </li>   <li> <p>Each resource tag must be unique with a maximum of one value.</p> </li>   <li> <p>Maximum key length: 128 Unicode characters in UTF-8</p> </li>   <li> <p>Maximum value length: 256 Unicode characters in UTF-8</p> </li>   <li> <p>Can use alphanumeric characters (A–Z, a–z, 0–9), and the following characters: + - = . _ : / @. </p> </li>   <li> <p>Cannot use "aws:" as a prefix for a key.</p> </li>  </ul>
    /// - On success, responds with [`CreateMapOutput`](crate::output::CreateMapOutput) with field(s):
    ///   - [`map_name(Option<String>)`](crate::output::CreateMapOutput::map_name): <p>The name of the map resource.</p>
    ///   - [`map_arn(Option<String>)`](crate::output::CreateMapOutput::map_arn): <p>The Amazon Resource Name (ARN) for the map resource. Used to specify a resource across all AWS.</p>  <ul>   <li> <p>Format example: <code>arn:aws:geo:region:account-id:map/ExampleMap</code> </p> </li>  </ul>
    ///   - [`create_time(Option<DateTime>)`](crate::output::CreateMapOutput::create_time): <p>The timestamp for when the map resource was created in <a href="https://www.iso.org/iso-8601-date-and-time-format.html">ISO 8601</a> format: <code>YYYY-MM-DDThh:mm:ss.sssZ</code>.</p>
    /// - On failure, responds with [`SdkError<CreateMapError>`](crate::error::CreateMapError)
    pub fn create_map(&self) -> crate::client::fluent_builders::CreateMap {
        crate::client::fluent_builders::CreateMap::new(self.handle.clone())
    }
}
