// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListGeofenceCollections`](crate::client::fluent_builders::ListGeofenceCollections) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListGeofenceCollections::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListGeofenceCollections::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListGeofenceCollections::set_max_results): <p>An optional limit for the number of resources returned in a single call. </p>  <p>Default value: <code>100</code> </p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListGeofenceCollections::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListGeofenceCollections::set_next_token): <p>The pagination token specifying which page of results to return in the response. If no token is provided, the default page is the first page. </p>  <p>Default value: <code>null</code> </p>
    /// - On success, responds with [`ListGeofenceCollectionsOutput`](crate::output::ListGeofenceCollectionsOutput) with field(s):
    ///   - [`entries(Option<Vec<ListGeofenceCollectionsResponseEntry>>)`](crate::output::ListGeofenceCollectionsOutput::entries): <p>Lists the geofence collections that exist in your AWS account.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListGeofenceCollectionsOutput::next_token): <p>A pagination token indicating there are additional pages available. You can use the token in a following request to fetch the next set of results. </p>
    /// - On failure, responds with [`SdkError<ListGeofenceCollectionsError>`](crate::error::ListGeofenceCollectionsError)
    pub fn list_geofence_collections(
        &self,
    ) -> crate::client::fluent_builders::ListGeofenceCollections {
        crate::client::fluent_builders::ListGeofenceCollections::new(self.handle.clone())
    }
}
