// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListMaps`](crate::operation::list_maps::builders::ListMapsFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::list_maps::builders::ListMapsFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`max_results(i32)`](crate::operation::list_maps::builders::ListMapsFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::list_maps::builders::ListMapsFluentBuilder::set_max_results):<br>required: **false**<br><p>An optional limit for the number of resources returned in a single call. </p>  <p>Default value: <code>100</code> </p><br>
    ///   - [`next_token(impl Into<String>)`](crate::operation::list_maps::builders::ListMapsFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::list_maps::builders::ListMapsFluentBuilder::set_next_token):<br>required: **false**<br><p>The pagination token specifying which page of results to return in the response. If no token is provided, the default page is the first page.</p>  <p>Default value: <code>null</code> </p><br>
    /// - On success, responds with [`ListMapsOutput`](crate::operation::list_maps::ListMapsOutput) with field(s):
    ///   - [`entries(Vec::<ListMapsResponseEntry>)`](crate::operation::list_maps::ListMapsOutput::entries): <p>Contains a list of maps in your Amazon Web Services account</p>
    ///   - [`next_token(Option<String>)`](crate::operation::list_maps::ListMapsOutput::next_token): <p>A pagination token indicating there are additional pages available. You can use the token in a following request to fetch the next set of results. </p>
    /// - On failure, responds with [`SdkError<ListMapsError>`](crate::operation::list_maps::ListMapsError)
    pub fn list_maps(&self) -> crate::operation::list_maps::builders::ListMapsFluentBuilder {
        crate::operation::list_maps::builders::ListMapsFluentBuilder::new(self.handle.clone())
    }
}
