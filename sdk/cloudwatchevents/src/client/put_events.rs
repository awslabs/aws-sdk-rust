// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`PutEvents`](crate::operation::put_events::builders::PutEventsFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`entries(PutEventsRequestEntry)`](crate::operation::put_events::builders::PutEventsFluentBuilder::entries) / [`set_entries(Option<Vec::<PutEventsRequestEntry>>)`](crate::operation::put_events::builders::PutEventsFluentBuilder::set_entries):<br>required: **true**<br><p>The entry that defines an event in your system. You can specify several parameters for the entry such as the source and type of the event, resources associated with the event, and so on.</p><br>
    /// - On success, responds with [`PutEventsOutput`](crate::operation::put_events::PutEventsOutput) with field(s):
    ///   - [`failed_entry_count(i32)`](crate::operation::put_events::PutEventsOutput::failed_entry_count): <p>The number of failed entries.</p>
    ///   - [`entries(Option<Vec::<PutEventsResultEntry>>)`](crate::operation::put_events::PutEventsOutput::entries): <p>The successfully and unsuccessfully ingested events results. If the ingestion was successful, the entry has the event ID in it. Otherwise, you can use the error code and error message to identify the problem with the entry.</p>
    /// - On failure, responds with [`SdkError<PutEventsError>`](crate::operation::put_events::PutEventsError)
    pub fn put_events(&self) -> crate::operation::put_events::builders::PutEventsFluentBuilder {
        crate::operation::put_events::builders::PutEventsFluentBuilder::new(self.handle.clone())
    }
}
