// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DescribeConnectionOutput {
    /// <p>The ARN of the connection retrieved.</p>
    #[doc(hidden)]
    pub connection_arn: std::option::Option<std::string::String>,
    /// <p>The name of the connection retrieved.</p>
    #[doc(hidden)]
    pub name: std::option::Option<std::string::String>,
    /// <p>The description for the connection retrieved.</p>
    #[doc(hidden)]
    pub description: std::option::Option<std::string::String>,
    /// <p>The state of the connection retrieved.</p>
    #[doc(hidden)]
    pub connection_state: std::option::Option<crate::types::ConnectionState>,
    /// <p>The reason that the connection is in the current connection state.</p>
    #[doc(hidden)]
    pub state_reason: std::option::Option<std::string::String>,
    /// <p>The type of authorization specified for the connection.</p>
    #[doc(hidden)]
    pub authorization_type: std::option::Option<crate::types::ConnectionAuthorizationType>,
    /// <p>The ARN of the secret created from the authorization parameters specified for the connection.</p>
    #[doc(hidden)]
    pub secret_arn: std::option::Option<std::string::String>,
    /// <p>The parameters to use for authorization for the connection.</p>
    #[doc(hidden)]
    pub auth_parameters: std::option::Option<crate::types::ConnectionAuthResponseParameters>,
    /// <p>A time stamp for the time that the connection was created.</p>
    #[doc(hidden)]
    pub creation_time: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>A time stamp for the time that the connection was last modified.</p>
    #[doc(hidden)]
    pub last_modified_time: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>A time stamp for the time that the connection was last authorized.</p>
    #[doc(hidden)]
    pub last_authorized_time: std::option::Option<aws_smithy_types::DateTime>,
    _request_id: Option<String>,
}
impl DescribeConnectionOutput {
    /// <p>The ARN of the connection retrieved.</p>
    pub fn connection_arn(&self) -> std::option::Option<&str> {
        self.connection_arn.as_deref()
    }
    /// <p>The name of the connection retrieved.</p>
    pub fn name(&self) -> std::option::Option<&str> {
        self.name.as_deref()
    }
    /// <p>The description for the connection retrieved.</p>
    pub fn description(&self) -> std::option::Option<&str> {
        self.description.as_deref()
    }
    /// <p>The state of the connection retrieved.</p>
    pub fn connection_state(&self) -> std::option::Option<&crate::types::ConnectionState> {
        self.connection_state.as_ref()
    }
    /// <p>The reason that the connection is in the current connection state.</p>
    pub fn state_reason(&self) -> std::option::Option<&str> {
        self.state_reason.as_deref()
    }
    /// <p>The type of authorization specified for the connection.</p>
    pub fn authorization_type(
        &self,
    ) -> std::option::Option<&crate::types::ConnectionAuthorizationType> {
        self.authorization_type.as_ref()
    }
    /// <p>The ARN of the secret created from the authorization parameters specified for the connection.</p>
    pub fn secret_arn(&self) -> std::option::Option<&str> {
        self.secret_arn.as_deref()
    }
    /// <p>The parameters to use for authorization for the connection.</p>
    pub fn auth_parameters(
        &self,
    ) -> std::option::Option<&crate::types::ConnectionAuthResponseParameters> {
        self.auth_parameters.as_ref()
    }
    /// <p>A time stamp for the time that the connection was created.</p>
    pub fn creation_time(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.creation_time.as_ref()
    }
    /// <p>A time stamp for the time that the connection was last modified.</p>
    pub fn last_modified_time(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.last_modified_time.as_ref()
    }
    /// <p>A time stamp for the time that the connection was last authorized.</p>
    pub fn last_authorized_time(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.last_authorized_time.as_ref()
    }
}
impl aws_http::request_id::RequestId for DescribeConnectionOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl DescribeConnectionOutput {
    /// Creates a new builder-style object to manufacture [`DescribeConnectionOutput`](crate::operation::describe_connection::DescribeConnectionOutput).
    pub fn builder(
    ) -> crate::operation::describe_connection::builders::DescribeConnectionOutputBuilder {
        crate::operation::describe_connection::builders::DescribeConnectionOutputBuilder::default()
    }
}

/// A builder for [`DescribeConnectionOutput`](crate::operation::describe_connection::DescribeConnectionOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DescribeConnectionOutputBuilder {
    pub(crate) connection_arn: std::option::Option<std::string::String>,
    pub(crate) name: std::option::Option<std::string::String>,
    pub(crate) description: std::option::Option<std::string::String>,
    pub(crate) connection_state: std::option::Option<crate::types::ConnectionState>,
    pub(crate) state_reason: std::option::Option<std::string::String>,
    pub(crate) authorization_type: std::option::Option<crate::types::ConnectionAuthorizationType>,
    pub(crate) secret_arn: std::option::Option<std::string::String>,
    pub(crate) auth_parameters: std::option::Option<crate::types::ConnectionAuthResponseParameters>,
    pub(crate) creation_time: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) last_modified_time: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) last_authorized_time: std::option::Option<aws_smithy_types::DateTime>,
    _request_id: Option<String>,
}
impl DescribeConnectionOutputBuilder {
    /// <p>The ARN of the connection retrieved.</p>
    pub fn connection_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.connection_arn = Some(input.into());
        self
    }
    /// <p>The ARN of the connection retrieved.</p>
    pub fn set_connection_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.connection_arn = input;
        self
    }
    /// <p>The name of the connection retrieved.</p>
    pub fn name(mut self, input: impl Into<std::string::String>) -> Self {
        self.name = Some(input.into());
        self
    }
    /// <p>The name of the connection retrieved.</p>
    pub fn set_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>The description for the connection retrieved.</p>
    pub fn description(mut self, input: impl Into<std::string::String>) -> Self {
        self.description = Some(input.into());
        self
    }
    /// <p>The description for the connection retrieved.</p>
    pub fn set_description(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.description = input;
        self
    }
    /// <p>The state of the connection retrieved.</p>
    pub fn connection_state(mut self, input: crate::types::ConnectionState) -> Self {
        self.connection_state = Some(input);
        self
    }
    /// <p>The state of the connection retrieved.</p>
    pub fn set_connection_state(
        mut self,
        input: std::option::Option<crate::types::ConnectionState>,
    ) -> Self {
        self.connection_state = input;
        self
    }
    /// <p>The reason that the connection is in the current connection state.</p>
    pub fn state_reason(mut self, input: impl Into<std::string::String>) -> Self {
        self.state_reason = Some(input.into());
        self
    }
    /// <p>The reason that the connection is in the current connection state.</p>
    pub fn set_state_reason(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.state_reason = input;
        self
    }
    /// <p>The type of authorization specified for the connection.</p>
    pub fn authorization_type(mut self, input: crate::types::ConnectionAuthorizationType) -> Self {
        self.authorization_type = Some(input);
        self
    }
    /// <p>The type of authorization specified for the connection.</p>
    pub fn set_authorization_type(
        mut self,
        input: std::option::Option<crate::types::ConnectionAuthorizationType>,
    ) -> Self {
        self.authorization_type = input;
        self
    }
    /// <p>The ARN of the secret created from the authorization parameters specified for the connection.</p>
    pub fn secret_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.secret_arn = Some(input.into());
        self
    }
    /// <p>The ARN of the secret created from the authorization parameters specified for the connection.</p>
    pub fn set_secret_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.secret_arn = input;
        self
    }
    /// <p>The parameters to use for authorization for the connection.</p>
    pub fn auth_parameters(
        mut self,
        input: crate::types::ConnectionAuthResponseParameters,
    ) -> Self {
        self.auth_parameters = Some(input);
        self
    }
    /// <p>The parameters to use for authorization for the connection.</p>
    pub fn set_auth_parameters(
        mut self,
        input: std::option::Option<crate::types::ConnectionAuthResponseParameters>,
    ) -> Self {
        self.auth_parameters = input;
        self
    }
    /// <p>A time stamp for the time that the connection was created.</p>
    pub fn creation_time(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.creation_time = Some(input);
        self
    }
    /// <p>A time stamp for the time that the connection was created.</p>
    pub fn set_creation_time(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.creation_time = input;
        self
    }
    /// <p>A time stamp for the time that the connection was last modified.</p>
    pub fn last_modified_time(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.last_modified_time = Some(input);
        self
    }
    /// <p>A time stamp for the time that the connection was last modified.</p>
    pub fn set_last_modified_time(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.last_modified_time = input;
        self
    }
    /// <p>A time stamp for the time that the connection was last authorized.</p>
    pub fn last_authorized_time(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.last_authorized_time = Some(input);
        self
    }
    /// <p>A time stamp for the time that the connection was last authorized.</p>
    pub fn set_last_authorized_time(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.last_authorized_time = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`DescribeConnectionOutput`](crate::operation::describe_connection::DescribeConnectionOutput).
    pub fn build(self) -> crate::operation::describe_connection::DescribeConnectionOutput {
        crate::operation::describe_connection::DescribeConnectionOutput {
            connection_arn: self.connection_arn,
            name: self.name,
            description: self.description,
            connection_state: self.connection_state,
            state_reason: self.state_reason,
            authorization_type: self.authorization_type,
            secret_arn: self.secret_arn,
            auth_parameters: self.auth_parameters,
            creation_time: self.creation_time,
            last_modified_time: self.last_modified_time,
            last_authorized_time: self.last_authorized_time,
            _request_id: self._request_id,
        }
    }
}
