// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DeactivateEventSourceOutput {
    _request_id: Option<String>,
}
impl aws_http::request_id::RequestId for DeactivateEventSourceOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl DeactivateEventSourceOutput {
    /// Creates a new builder-style object to manufacture [`DeactivateEventSourceOutput`](crate::operation::deactivate_event_source::DeactivateEventSourceOutput).
    pub fn builder(
    ) -> crate::operation::deactivate_event_source::builders::DeactivateEventSourceOutputBuilder
    {
        crate::operation::deactivate_event_source::builders::DeactivateEventSourceOutputBuilder::default()
    }
}

/// A builder for [`DeactivateEventSourceOutput`](crate::operation::deactivate_event_source::DeactivateEventSourceOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DeactivateEventSourceOutputBuilder {
    _request_id: Option<String>,
}
impl DeactivateEventSourceOutputBuilder {
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`DeactivateEventSourceOutput`](crate::operation::deactivate_event_source::DeactivateEventSourceOutput).
    pub fn build(self) -> crate::operation::deactivate_event_source::DeactivateEventSourceOutput {
        crate::operation::deactivate_event_source::DeactivateEventSourceOutput {
            _request_id: self._request_id,
        }
    }
}
