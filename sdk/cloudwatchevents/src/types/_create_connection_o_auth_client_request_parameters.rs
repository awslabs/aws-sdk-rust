// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains the Basic authorization parameters to use for the connection.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct CreateConnectionOAuthClientRequestParameters {
    /// <p>The client ID to use for OAuth authorization for the connection.</p>
    #[doc(hidden)]
    pub client_id: std::option::Option<std::string::String>,
    /// <p>The client secret associated with the client ID to use for OAuth authorization for the connection.</p>
    #[doc(hidden)]
    pub client_secret: std::option::Option<std::string::String>,
}
impl CreateConnectionOAuthClientRequestParameters {
    /// <p>The client ID to use for OAuth authorization for the connection.</p>
    pub fn client_id(&self) -> std::option::Option<&str> {
        self.client_id.as_deref()
    }
    /// <p>The client secret associated with the client ID to use for OAuth authorization for the connection.</p>
    pub fn client_secret(&self) -> std::option::Option<&str> {
        self.client_secret.as_deref()
    }
}
impl CreateConnectionOAuthClientRequestParameters {
    /// Creates a new builder-style object to manufacture [`CreateConnectionOAuthClientRequestParameters`](crate::types::CreateConnectionOAuthClientRequestParameters).
    pub fn builder() -> crate::types::builders::CreateConnectionOAuthClientRequestParametersBuilder
    {
        crate::types::builders::CreateConnectionOAuthClientRequestParametersBuilder::default()
    }
}

/// A builder for [`CreateConnectionOAuthClientRequestParameters`](crate::types::CreateConnectionOAuthClientRequestParameters).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct CreateConnectionOAuthClientRequestParametersBuilder {
    pub(crate) client_id: std::option::Option<std::string::String>,
    pub(crate) client_secret: std::option::Option<std::string::String>,
}
impl CreateConnectionOAuthClientRequestParametersBuilder {
    /// <p>The client ID to use for OAuth authorization for the connection.</p>
    pub fn client_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.client_id = Some(input.into());
        self
    }
    /// <p>The client ID to use for OAuth authorization for the connection.</p>
    pub fn set_client_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.client_id = input;
        self
    }
    /// <p>The client secret associated with the client ID to use for OAuth authorization for the connection.</p>
    pub fn client_secret(mut self, input: impl Into<std::string::String>) -> Self {
        self.client_secret = Some(input.into());
        self
    }
    /// <p>The client secret associated with the client ID to use for OAuth authorization for the connection.</p>
    pub fn set_client_secret(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.client_secret = input;
        self
    }
    /// Consumes the builder and constructs a [`CreateConnectionOAuthClientRequestParameters`](crate::types::CreateConnectionOAuthClientRequestParameters).
    pub fn build(self) -> crate::types::CreateConnectionOAuthClientRequestParameters {
        crate::types::CreateConnectionOAuthClientRequestParameters {
            client_id: self.client_id,
            client_secret: self.client_secret,
        }
    }
}
