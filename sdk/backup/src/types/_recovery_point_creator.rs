// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains information about the backup plan and rule that Backup used to initiate the recovery point backup.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct RecoveryPointCreator {
    /// <p>Uniquely identifies a backup plan.</p>
    #[doc(hidden)]
    pub backup_plan_id: std::option::Option<std::string::String>,
    /// <p>An Amazon Resource Name (ARN) that uniquely identifies a backup plan; for example, <code>arn:aws:backup:us-east-1:123456789012:plan:8F81F553-3A74-4A3F-B93D-B3360DC80C50</code>.</p>
    #[doc(hidden)]
    pub backup_plan_arn: std::option::Option<std::string::String>,
    /// <p>Version IDs are unique, randomly generated, Unicode, UTF-8 encoded strings that are at most 1,024 bytes long. They cannot be edited.</p>
    #[doc(hidden)]
    pub backup_plan_version: std::option::Option<std::string::String>,
    /// <p>Uniquely identifies a rule used to schedule the backup of a selection of resources.</p>
    #[doc(hidden)]
    pub backup_rule_id: std::option::Option<std::string::String>,
}
impl RecoveryPointCreator {
    /// <p>Uniquely identifies a backup plan.</p>
    pub fn backup_plan_id(&self) -> std::option::Option<&str> {
        self.backup_plan_id.as_deref()
    }
    /// <p>An Amazon Resource Name (ARN) that uniquely identifies a backup plan; for example, <code>arn:aws:backup:us-east-1:123456789012:plan:8F81F553-3A74-4A3F-B93D-B3360DC80C50</code>.</p>
    pub fn backup_plan_arn(&self) -> std::option::Option<&str> {
        self.backup_plan_arn.as_deref()
    }
    /// <p>Version IDs are unique, randomly generated, Unicode, UTF-8 encoded strings that are at most 1,024 bytes long. They cannot be edited.</p>
    pub fn backup_plan_version(&self) -> std::option::Option<&str> {
        self.backup_plan_version.as_deref()
    }
    /// <p>Uniquely identifies a rule used to schedule the backup of a selection of resources.</p>
    pub fn backup_rule_id(&self) -> std::option::Option<&str> {
        self.backup_rule_id.as_deref()
    }
}
impl RecoveryPointCreator {
    /// Creates a new builder-style object to manufacture [`RecoveryPointCreator`](crate::types::RecoveryPointCreator).
    pub fn builder() -> crate::types::builders::RecoveryPointCreatorBuilder {
        crate::types::builders::RecoveryPointCreatorBuilder::default()
    }
}

/// A builder for [`RecoveryPointCreator`](crate::types::RecoveryPointCreator).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct RecoveryPointCreatorBuilder {
    pub(crate) backup_plan_id: std::option::Option<std::string::String>,
    pub(crate) backup_plan_arn: std::option::Option<std::string::String>,
    pub(crate) backup_plan_version: std::option::Option<std::string::String>,
    pub(crate) backup_rule_id: std::option::Option<std::string::String>,
}
impl RecoveryPointCreatorBuilder {
    /// <p>Uniquely identifies a backup plan.</p>
    pub fn backup_plan_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.backup_plan_id = Some(input.into());
        self
    }
    /// <p>Uniquely identifies a backup plan.</p>
    pub fn set_backup_plan_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.backup_plan_id = input;
        self
    }
    /// <p>An Amazon Resource Name (ARN) that uniquely identifies a backup plan; for example, <code>arn:aws:backup:us-east-1:123456789012:plan:8F81F553-3A74-4A3F-B93D-B3360DC80C50</code>.</p>
    pub fn backup_plan_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.backup_plan_arn = Some(input.into());
        self
    }
    /// <p>An Amazon Resource Name (ARN) that uniquely identifies a backup plan; for example, <code>arn:aws:backup:us-east-1:123456789012:plan:8F81F553-3A74-4A3F-B93D-B3360DC80C50</code>.</p>
    pub fn set_backup_plan_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.backup_plan_arn = input;
        self
    }
    /// <p>Version IDs are unique, randomly generated, Unicode, UTF-8 encoded strings that are at most 1,024 bytes long. They cannot be edited.</p>
    pub fn backup_plan_version(mut self, input: impl Into<std::string::String>) -> Self {
        self.backup_plan_version = Some(input.into());
        self
    }
    /// <p>Version IDs are unique, randomly generated, Unicode, UTF-8 encoded strings that are at most 1,024 bytes long. They cannot be edited.</p>
    pub fn set_backup_plan_version(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.backup_plan_version = input;
        self
    }
    /// <p>Uniquely identifies a rule used to schedule the backup of a selection of resources.</p>
    pub fn backup_rule_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.backup_rule_id = Some(input.into());
        self
    }
    /// <p>Uniquely identifies a rule used to schedule the backup of a selection of resources.</p>
    pub fn set_backup_rule_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.backup_rule_id = input;
        self
    }
    /// Consumes the builder and constructs a [`RecoveryPointCreator`](crate::types::RecoveryPointCreator).
    pub fn build(self) -> crate::types::RecoveryPointCreator {
        crate::types::RecoveryPointCreator {
            backup_plan_id: self.backup_plan_id,
            backup_plan_arn: self.backup_plan_arn,
            backup_plan_version: self.backup_plan_version,
            backup_rule_id: self.backup_rule_id,
        }
    }
}
