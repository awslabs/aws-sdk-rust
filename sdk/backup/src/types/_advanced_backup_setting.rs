// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The backup options for each resource type.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AdvancedBackupSetting {
    /// <p>Specifies an object containing resource type and backup options. The only supported resource type is Amazon EC2 instances with Windows Volume Shadow Copy Service (VSS). For a CloudFormation example, see the <a href="https://docs.aws.amazon.com/aws-backup/latest/devguide/integrate-cloudformation-with-aws-backup.html">sample CloudFormation template to enable Windows VSS</a> in the <i>Backup User Guide</i>.</p>
    /// <p>Valid values: <code>EC2</code>.</p>
    pub resource_type: ::std::option::Option<::std::string::String>,
    /// <p>Specifies the backup option for a selected resource. This option is available for Windows VSS backup jobs and S3 backups.</p>
    /// <p>Valid values:</p>
    /// <p>Set to <code>"WindowsVSS":"enabled"</code> to enable the <code>WindowsVSS</code> backup option and create a Windows VSS backup.</p>
    /// <p>Set to <code>"WindowsVSS":"disabled"</code> to create a regular backup. The <code>WindowsVSS</code> option is not enabled by default.</p>
    /// <p>For S3 backups, set to <code>"S3BackupACLs":"disabled"</code> to exclude ACLs from the backup, or <code>"S3BackupObjectTags":"disabled"</code> to exclude object tags from the backup. By default, both ACLs and object tags are included in S3 backups.</p>
    /// <p>If you specify an invalid option, you get an <code>InvalidParameterValueException</code> exception.</p>
    /// <p>For more information about Windows VSS backups, see <a href="https://docs.aws.amazon.com/aws-backup/latest/devguide/windows-backups.html">Creating a VSS-Enabled Windows Backup</a>.</p>
    pub backup_options: ::std::option::Option<::std::collections::HashMap<::std::string::String, ::std::string::String>>,
}
impl AdvancedBackupSetting {
    /// <p>Specifies an object containing resource type and backup options. The only supported resource type is Amazon EC2 instances with Windows Volume Shadow Copy Service (VSS). For a CloudFormation example, see the <a href="https://docs.aws.amazon.com/aws-backup/latest/devguide/integrate-cloudformation-with-aws-backup.html">sample CloudFormation template to enable Windows VSS</a> in the <i>Backup User Guide</i>.</p>
    /// <p>Valid values: <code>EC2</code>.</p>
    pub fn resource_type(&self) -> ::std::option::Option<&str> {
        self.resource_type.as_deref()
    }
    /// <p>Specifies the backup option for a selected resource. This option is available for Windows VSS backup jobs and S3 backups.</p>
    /// <p>Valid values:</p>
    /// <p>Set to <code>"WindowsVSS":"enabled"</code> to enable the <code>WindowsVSS</code> backup option and create a Windows VSS backup.</p>
    /// <p>Set to <code>"WindowsVSS":"disabled"</code> to create a regular backup. The <code>WindowsVSS</code> option is not enabled by default.</p>
    /// <p>For S3 backups, set to <code>"S3BackupACLs":"disabled"</code> to exclude ACLs from the backup, or <code>"S3BackupObjectTags":"disabled"</code> to exclude object tags from the backup. By default, both ACLs and object tags are included in S3 backups.</p>
    /// <p>If you specify an invalid option, you get an <code>InvalidParameterValueException</code> exception.</p>
    /// <p>For more information about Windows VSS backups, see <a href="https://docs.aws.amazon.com/aws-backup/latest/devguide/windows-backups.html">Creating a VSS-Enabled Windows Backup</a>.</p>
    pub fn backup_options(&self) -> ::std::option::Option<&::std::collections::HashMap<::std::string::String, ::std::string::String>> {
        self.backup_options.as_ref()
    }
}
impl AdvancedBackupSetting {
    /// Creates a new builder-style object to manufacture [`AdvancedBackupSetting`](crate::types::AdvancedBackupSetting).
    pub fn builder() -> crate::types::builders::AdvancedBackupSettingBuilder {
        crate::types::builders::AdvancedBackupSettingBuilder::default()
    }
}

/// A builder for [`AdvancedBackupSetting`](crate::types::AdvancedBackupSetting).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct AdvancedBackupSettingBuilder {
    pub(crate) resource_type: ::std::option::Option<::std::string::String>,
    pub(crate) backup_options: ::std::option::Option<::std::collections::HashMap<::std::string::String, ::std::string::String>>,
}
impl AdvancedBackupSettingBuilder {
    /// <p>Specifies an object containing resource type and backup options. The only supported resource type is Amazon EC2 instances with Windows Volume Shadow Copy Service (VSS). For a CloudFormation example, see the <a href="https://docs.aws.amazon.com/aws-backup/latest/devguide/integrate-cloudformation-with-aws-backup.html">sample CloudFormation template to enable Windows VSS</a> in the <i>Backup User Guide</i>.</p>
    /// <p>Valid values: <code>EC2</code>.</p>
    pub fn resource_type(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.resource_type = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Specifies an object containing resource type and backup options. The only supported resource type is Amazon EC2 instances with Windows Volume Shadow Copy Service (VSS). For a CloudFormation example, see the <a href="https://docs.aws.amazon.com/aws-backup/latest/devguide/integrate-cloudformation-with-aws-backup.html">sample CloudFormation template to enable Windows VSS</a> in the <i>Backup User Guide</i>.</p>
    /// <p>Valid values: <code>EC2</code>.</p>
    pub fn set_resource_type(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.resource_type = input;
        self
    }
    /// <p>Specifies an object containing resource type and backup options. The only supported resource type is Amazon EC2 instances with Windows Volume Shadow Copy Service (VSS). For a CloudFormation example, see the <a href="https://docs.aws.amazon.com/aws-backup/latest/devguide/integrate-cloudformation-with-aws-backup.html">sample CloudFormation template to enable Windows VSS</a> in the <i>Backup User Guide</i>.</p>
    /// <p>Valid values: <code>EC2</code>.</p>
    pub fn get_resource_type(&self) -> &::std::option::Option<::std::string::String> {
        &self.resource_type
    }
    /// Adds a key-value pair to `backup_options`.
    ///
    /// To override the contents of this collection use [`set_backup_options`](Self::set_backup_options).
    ///
    /// <p>Specifies the backup option for a selected resource. This option is available for Windows VSS backup jobs and S3 backups.</p>
    /// <p>Valid values:</p>
    /// <p>Set to <code>"WindowsVSS":"enabled"</code> to enable the <code>WindowsVSS</code> backup option and create a Windows VSS backup.</p>
    /// <p>Set to <code>"WindowsVSS":"disabled"</code> to create a regular backup. The <code>WindowsVSS</code> option is not enabled by default.</p>
    /// <p>For S3 backups, set to <code>"S3BackupACLs":"disabled"</code> to exclude ACLs from the backup, or <code>"S3BackupObjectTags":"disabled"</code> to exclude object tags from the backup. By default, both ACLs and object tags are included in S3 backups.</p>
    /// <p>If you specify an invalid option, you get an <code>InvalidParameterValueException</code> exception.</p>
    /// <p>For more information about Windows VSS backups, see <a href="https://docs.aws.amazon.com/aws-backup/latest/devguide/windows-backups.html">Creating a VSS-Enabled Windows Backup</a>.</p>
    pub fn backup_options(
        mut self,
        k: impl ::std::convert::Into<::std::string::String>,
        v: impl ::std::convert::Into<::std::string::String>,
    ) -> Self {
        let mut hash_map = self.backup_options.unwrap_or_default();
        hash_map.insert(k.into(), v.into());
        self.backup_options = ::std::option::Option::Some(hash_map);
        self
    }
    /// <p>Specifies the backup option for a selected resource. This option is available for Windows VSS backup jobs and S3 backups.</p>
    /// <p>Valid values:</p>
    /// <p>Set to <code>"WindowsVSS":"enabled"</code> to enable the <code>WindowsVSS</code> backup option and create a Windows VSS backup.</p>
    /// <p>Set to <code>"WindowsVSS":"disabled"</code> to create a regular backup. The <code>WindowsVSS</code> option is not enabled by default.</p>
    /// <p>For S3 backups, set to <code>"S3BackupACLs":"disabled"</code> to exclude ACLs from the backup, or <code>"S3BackupObjectTags":"disabled"</code> to exclude object tags from the backup. By default, both ACLs and object tags are included in S3 backups.</p>
    /// <p>If you specify an invalid option, you get an <code>InvalidParameterValueException</code> exception.</p>
    /// <p>For more information about Windows VSS backups, see <a href="https://docs.aws.amazon.com/aws-backup/latest/devguide/windows-backups.html">Creating a VSS-Enabled Windows Backup</a>.</p>
    pub fn set_backup_options(
        mut self,
        input: ::std::option::Option<::std::collections::HashMap<::std::string::String, ::std::string::String>>,
    ) -> Self {
        self.backup_options = input;
        self
    }
    /// <p>Specifies the backup option for a selected resource. This option is available for Windows VSS backup jobs and S3 backups.</p>
    /// <p>Valid values:</p>
    /// <p>Set to <code>"WindowsVSS":"enabled"</code> to enable the <code>WindowsVSS</code> backup option and create a Windows VSS backup.</p>
    /// <p>Set to <code>"WindowsVSS":"disabled"</code> to create a regular backup. The <code>WindowsVSS</code> option is not enabled by default.</p>
    /// <p>For S3 backups, set to <code>"S3BackupACLs":"disabled"</code> to exclude ACLs from the backup, or <code>"S3BackupObjectTags":"disabled"</code> to exclude object tags from the backup. By default, both ACLs and object tags are included in S3 backups.</p>
    /// <p>If you specify an invalid option, you get an <code>InvalidParameterValueException</code> exception.</p>
    /// <p>For more information about Windows VSS backups, see <a href="https://docs.aws.amazon.com/aws-backup/latest/devguide/windows-backups.html">Creating a VSS-Enabled Windows Backup</a>.</p>
    pub fn get_backup_options(&self) -> &::std::option::Option<::std::collections::HashMap<::std::string::String, ::std::string::String>> {
        &self.backup_options
    }
    /// Consumes the builder and constructs a [`AdvancedBackupSetting`](crate::types::AdvancedBackupSetting).
    pub fn build(self) -> crate::types::AdvancedBackupSetting {
        crate::types::AdvancedBackupSetting {
            resource_type: self.resource_type,
            backup_options: self.backup_options,
        }
    }
}
