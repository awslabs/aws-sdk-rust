// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn parse_http_error_metadata(
    response: &http::Response<bytes::Bytes>,
) -> Result<
    aws_smithy_types::error::metadata::Builder,
    aws_smithy_json::deserialize::error::DeserializeError,
> {
    crate::json_errors::parse_error_metadata(response.body(), response.headers())
}

pub(crate) mod shape_cancel_legal_hold;

pub(crate) mod shape_create_backup_plan;

pub(crate) mod shape_create_backup_selection;

pub(crate) mod shape_create_backup_vault;

pub(crate) mod shape_create_framework;

pub(crate) mod shape_create_legal_hold;

pub(crate) mod shape_create_report_plan;

pub(crate) mod shape_delete_backup_plan;

pub(crate) mod shape_delete_backup_selection;

pub(crate) mod shape_delete_backup_vault;

pub(crate) mod shape_delete_backup_vault_access_policy;

pub(crate) mod shape_delete_backup_vault_lock_configuration;

pub(crate) mod shape_delete_backup_vault_notifications;

pub(crate) mod shape_delete_framework;

pub(crate) mod shape_delete_recovery_point;

pub(crate) mod shape_delete_report_plan;

pub(crate) mod shape_describe_backup_job;

pub(crate) mod shape_describe_backup_vault;

pub(crate) mod shape_describe_copy_job;

pub(crate) mod shape_describe_framework;

pub(crate) mod shape_describe_global_settings;

pub(crate) mod shape_describe_protected_resource;

pub(crate) mod shape_describe_recovery_point;

pub(crate) mod shape_describe_region_settings;

pub(crate) mod shape_describe_report_job;

pub(crate) mod shape_describe_report_plan;

pub(crate) mod shape_describe_restore_job;

pub(crate) mod shape_disassociate_recovery_point;

pub(crate) mod shape_disassociate_recovery_point_from_parent;

pub(crate) mod shape_export_backup_plan_template;

pub(crate) mod shape_get_backup_plan;

pub(crate) mod shape_get_backup_plan_from_json;

pub(crate) mod shape_get_backup_plan_from_template;

pub(crate) mod shape_get_backup_selection;

pub(crate) mod shape_get_backup_vault_access_policy;

pub(crate) mod shape_get_backup_vault_notifications;

pub(crate) mod shape_get_legal_hold;

pub(crate) mod shape_get_recovery_point_restore_metadata;

pub(crate) mod shape_get_supported_resource_types;

pub(crate) mod shape_list_backup_jobs;

pub(crate) mod shape_list_backup_plan_templates;

pub(crate) mod shape_list_backup_plan_versions;

pub(crate) mod shape_list_backup_plans;

pub(crate) mod shape_list_backup_selections;

pub(crate) mod shape_list_backup_vaults;

pub(crate) mod shape_list_copy_jobs;

pub(crate) mod shape_list_frameworks;

pub(crate) mod shape_list_legal_holds;

pub(crate) mod shape_list_protected_resources;

pub(crate) mod shape_list_recovery_points_by_backup_vault;

pub(crate) mod shape_list_recovery_points_by_legal_hold;

pub(crate) mod shape_list_recovery_points_by_resource;

pub(crate) mod shape_list_report_jobs;

pub(crate) mod shape_list_report_plans;

pub(crate) mod shape_list_restore_jobs;

pub(crate) mod shape_list_tags;

pub(crate) mod shape_put_backup_vault_access_policy;

pub(crate) mod shape_put_backup_vault_lock_configuration;

pub(crate) mod shape_put_backup_vault_notifications;

pub(crate) mod shape_start_backup_job;

pub(crate) mod shape_start_copy_job;

pub(crate) mod shape_start_report_job;

pub(crate) mod shape_start_restore_job;

pub(crate) mod shape_stop_backup_job;

pub(crate) mod shape_tag_resource;

pub(crate) mod shape_untag_resource;

pub(crate) mod shape_update_backup_plan;

pub(crate) mod shape_update_framework;

pub(crate) mod shape_update_global_settings;

pub(crate) mod shape_update_recovery_point_lifecycle;

pub(crate) mod shape_update_region_settings;

pub(crate) mod shape_update_report_plan;

pub(crate) fn or_empty_doc(data: &[u8]) -> &[u8] {
    if data.is_empty() {
        b"{}"
    } else {
        data
    }
}

pub(crate) mod shape_already_exists_exception;

pub(crate) mod shape_conflict_exception;

pub(crate) mod shape_create_backup_plan_input;

pub(crate) mod shape_create_backup_selection_input;

pub(crate) mod shape_create_backup_vault_input;

pub(crate) mod shape_create_framework_input;

pub(crate) mod shape_create_legal_hold_input;

pub(crate) mod shape_create_report_plan_input;

pub(crate) mod shape_dependency_failure_exception;

pub(crate) mod shape_get_backup_plan_from_json_input;

pub(crate) mod shape_invalid_parameter_value_exception;

pub(crate) mod shape_invalid_request_exception;

pub(crate) mod shape_invalid_resource_state_exception;

pub(crate) mod shape_limit_exceeded_exception;

pub(crate) mod shape_missing_parameter_value_exception;

pub(crate) mod shape_put_backup_vault_access_policy_input;

pub(crate) mod shape_put_backup_vault_lock_configuration_input;

pub(crate) mod shape_put_backup_vault_notifications_input;

pub(crate) mod shape_resource_not_found_exception;

pub(crate) mod shape_service_unavailable_exception;

pub(crate) mod shape_start_backup_job_input;

pub(crate) mod shape_start_copy_job_input;

pub(crate) mod shape_start_report_job_input;

pub(crate) mod shape_start_restore_job_input;

pub(crate) mod shape_tag_resource_input;

pub(crate) mod shape_untag_resource_input;

pub(crate) mod shape_update_backup_plan_input;

pub(crate) mod shape_update_framework_input;

pub(crate) mod shape_update_global_settings_input;

pub(crate) mod shape_update_recovery_point_lifecycle_input;

pub(crate) mod shape_update_region_settings_input;

pub(crate) mod shape_update_report_plan_input;

pub(crate) mod shape_advanced_backup_settings;

pub(crate) mod shape_backup_job_child_jobs_in_state;

pub(crate) mod shape_backup_jobs_list;

pub(crate) mod shape_backup_options;

pub(crate) mod shape_backup_plan;

pub(crate) mod shape_backup_plan_input;

pub(crate) mod shape_backup_plan_templates_list;

pub(crate) mod shape_backup_plan_versions_list;

pub(crate) mod shape_backup_plans_list;

pub(crate) mod shape_backup_selection;

pub(crate) mod shape_backup_selections_list;

pub(crate) mod shape_backup_vault_events;

pub(crate) mod shape_backup_vault_list;

pub(crate) mod shape_calculated_lifecycle;

pub(crate) mod shape_copy_job;

pub(crate) mod shape_copy_jobs_list;

pub(crate) mod shape_framework_control;

pub(crate) mod shape_framework_controls;

pub(crate) mod shape_framework_list;

pub(crate) mod shape_global_settings;

pub(crate) mod shape_legal_holds_list;

pub(crate) mod shape_lifecycle;

pub(crate) mod shape_metadata;

pub(crate) mod shape_protected_resources_list;

pub(crate) mod shape_recovery_point_by_backup_vault_list;

pub(crate) mod shape_recovery_point_by_resource_list;

pub(crate) mod shape_recovery_point_creator;

pub(crate) mod shape_recovery_point_selection;

pub(crate) mod shape_recovery_points_list;

pub(crate) mod shape_report_delivery_channel;

pub(crate) mod shape_report_job;

pub(crate) mod shape_report_job_list;

pub(crate) mod shape_report_plan;

pub(crate) mod shape_report_plan_list;

pub(crate) mod shape_report_setting;

pub(crate) mod shape_resource_type_management_preference;

pub(crate) mod shape_resource_type_opt_in_preference;

pub(crate) mod shape_resource_types;

pub(crate) mod shape_restore_jobs_list;

pub(crate) mod shape_tags;

pub(crate) mod shape_advanced_backup_setting;

pub(crate) mod shape_backup_job;

pub(crate) mod shape_backup_plan_templates_list_member;

pub(crate) mod shape_backup_plans_list_member;

pub(crate) mod shape_backup_rule_input;

pub(crate) mod shape_backup_rules;

pub(crate) mod shape_backup_selections_list_member;

pub(crate) mod shape_backup_vault_list_member;

pub(crate) mod shape_condition;

pub(crate) mod shape_conditions;

pub(crate) mod shape_control_input_parameter;

pub(crate) mod shape_control_scope;

pub(crate) mod shape_copy_job_child_jobs_in_state;

pub(crate) mod shape_date_range;

pub(crate) mod shape_framework;

pub(crate) mod shape_legal_hold;

pub(crate) mod shape_list_of_tags;

pub(crate) mod shape_protected_resource;

pub(crate) mod shape_recovery_point_by_backup_vault;

pub(crate) mod shape_recovery_point_by_resource;

pub(crate) mod shape_recovery_point_member;

pub(crate) mod shape_report_destination;

pub(crate) mod shape_resource_arns;

pub(crate) mod shape_resource_identifiers;

pub(crate) mod shape_restore_jobs_list_member;

pub(crate) mod shape_vault_names;

pub(crate) mod shape_backup_rule;

pub(crate) mod shape_condition_parameter;

pub(crate) mod shape_condition_parameters;

pub(crate) mod shape_control_input_parameters;

pub(crate) mod shape_copy_action;

pub(crate) mod shape_format_list;

pub(crate) mod shape_string_list;

pub(crate) mod shape_compliance_resource_id_list;

pub(crate) mod shape_copy_actions;

pub(crate) mod shape_resource_type_list;

pub(crate) mod shape_string_map;
