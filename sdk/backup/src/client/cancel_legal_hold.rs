// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CancelLegalHold`](crate::client::fluent_builders::CancelLegalHold) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`legal_hold_id(impl Into<String>)`](crate::client::fluent_builders::CancelLegalHold::legal_hold_id) / [`set_legal_hold_id(Option<String>)`](crate::client::fluent_builders::CancelLegalHold::set_legal_hold_id): <p>Legal hold ID required to remove the specified legal hold on a recovery point.</p>
    ///   - [`cancel_description(impl Into<String>)`](crate::client::fluent_builders::CancelLegalHold::cancel_description) / [`set_cancel_description(Option<String>)`](crate::client::fluent_builders::CancelLegalHold::set_cancel_description): <p>String describing the reason for removing the legal hold.</p>
    ///   - [`retain_record_in_days(i64)`](crate::client::fluent_builders::CancelLegalHold::retain_record_in_days) / [`set_retain_record_in_days(Option<i64>)`](crate::client::fluent_builders::CancelLegalHold::set_retain_record_in_days): <p>The integer amount in days specifying amount of days after this API operation to remove legal hold.</p>
    /// - On success, responds with [`CancelLegalHoldOutput`](crate::output::CancelLegalHoldOutput)
    /// - On failure, responds with [`SdkError<CancelLegalHoldError>`](crate::error::CancelLegalHoldError)
    pub fn cancel_legal_hold(&self) -> crate::client::fluent_builders::CancelLegalHold {
        crate::client::fluent_builders::CancelLegalHold::new(self.handle.clone())
    }
}
