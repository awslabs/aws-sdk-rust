// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeFramework`](crate::operation::describe_framework::builders::DescribeFrameworkFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`framework_name(impl Into<String>)`](crate::operation::describe_framework::builders::DescribeFrameworkFluentBuilder::framework_name) / [`set_framework_name(Option<String>)`](crate::operation::describe_framework::builders::DescribeFrameworkFluentBuilder::set_framework_name):<br>required: **true**<br><p>The unique name of a framework.</p><br>
    /// - On success, responds with [`DescribeFrameworkOutput`](crate::operation::describe_framework::DescribeFrameworkOutput) with field(s):
    ///   - [`framework_name(Option<String>)`](crate::operation::describe_framework::DescribeFrameworkOutput::framework_name): <p>The unique name of a framework.</p>
    ///   - [`framework_arn(Option<String>)`](crate::operation::describe_framework::DescribeFrameworkOutput::framework_arn): <p>An Amazon Resource Name (ARN) that uniquely identifies a resource. The format of the ARN depends on the resource type.</p>
    ///   - [`framework_description(Option<String>)`](crate::operation::describe_framework::DescribeFrameworkOutput::framework_description): <p>An optional description of the framework.</p>
    ///   - [`framework_controls(Option<Vec::<FrameworkControl>>)`](crate::operation::describe_framework::DescribeFrameworkOutput::framework_controls): <p>A list of the controls that make up the framework. Each control in the list has a name, input parameters, and scope.</p>
    ///   - [`creation_time(Option<DateTime>)`](crate::operation::describe_framework::DescribeFrameworkOutput::creation_time): <p>The date and time that a framework is created, in ISO 8601 representation. The value of <code>CreationTime</code> is accurate to milliseconds. For example, 2020-07-10T15:00:00.000-08:00 represents the 10th of July 2020 at 3:00 PM 8 hours behind UTC.</p>
    ///   - [`deployment_status(Option<String>)`](crate::operation::describe_framework::DescribeFrameworkOutput::deployment_status): <p>The deployment status of a framework. The statuses are:</p>  <p> <code>CREATE_IN_PROGRESS | UPDATE_IN_PROGRESS | DELETE_IN_PROGRESS | COMPLETED | FAILED</code> </p>
    ///   - [`framework_status(Option<String>)`](crate::operation::describe_framework::DescribeFrameworkOutput::framework_status): <p>A framework consists of one or more controls. Each control governs a resource, such as backup plans, backup selections, backup vaults, or recovery points. You can also turn Config recording on or off for each resource. The statuses are:</p>  <ul>   <li> <p> <code>ACTIVE</code> when recording is turned on for all resources governed by the framework.</p> </li>   <li> <p> <code>PARTIALLY_ACTIVE</code> when recording is turned off for at least one resource governed by the framework.</p> </li>   <li> <p> <code>INACTIVE</code> when recording is turned off for all resources governed by the framework.</p> </li>   <li> <p> <code>UNAVAILABLE</code> when Backup is unable to validate recording status at this time.</p> </li>  </ul>
    ///   - [`idempotency_token(Option<String>)`](crate::operation::describe_framework::DescribeFrameworkOutput::idempotency_token): <p>A customer-chosen string that you can use to distinguish between otherwise identical calls to <code>DescribeFrameworkOutput</code>. Retrying a successful request with the same idempotency token results in a success message with no action taken.</p>
    /// - On failure, responds with [`SdkError<DescribeFrameworkError>`](crate::operation::describe_framework::DescribeFrameworkError)
    pub fn describe_framework(&self) -> crate::operation::describe_framework::builders::DescribeFrameworkFluentBuilder {
        crate::operation::describe_framework::builders::DescribeFrameworkFluentBuilder::new(self.handle.clone())
    }
}
