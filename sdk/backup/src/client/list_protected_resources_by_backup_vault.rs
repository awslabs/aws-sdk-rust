// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListProtectedResourcesByBackupVault`](crate::operation::list_protected_resources_by_backup_vault::builders::ListProtectedResourcesByBackupVaultFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::list_protected_resources_by_backup_vault::builders::ListProtectedResourcesByBackupVaultFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`backup_vault_name(impl Into<String>)`](crate::operation::list_protected_resources_by_backup_vault::builders::ListProtectedResourcesByBackupVaultFluentBuilder::backup_vault_name) / [`set_backup_vault_name(Option<String>)`](crate::operation::list_protected_resources_by_backup_vault::builders::ListProtectedResourcesByBackupVaultFluentBuilder::set_backup_vault_name):<br>required: **true**<br><p>This is the list of protected resources by backup vault within the vault(s) you specify by name.</p><br>
    ///   - [`backup_vault_account_id(impl Into<String>)`](crate::operation::list_protected_resources_by_backup_vault::builders::ListProtectedResourcesByBackupVaultFluentBuilder::backup_vault_account_id) / [`set_backup_vault_account_id(Option<String>)`](crate::operation::list_protected_resources_by_backup_vault::builders::ListProtectedResourcesByBackupVaultFluentBuilder::set_backup_vault_account_id):<br>required: **false**<br><p>This is the list of protected resources by backup vault within the vault(s) you specify by account ID.</p><br>
    ///   - [`next_token(impl Into<String>)`](crate::operation::list_protected_resources_by_backup_vault::builders::ListProtectedResourcesByBackupVaultFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::list_protected_resources_by_backup_vault::builders::ListProtectedResourcesByBackupVaultFluentBuilder::set_next_token):<br>required: **false**<br><p>The next item following a partial list of returned items. For example, if a request is made to return <code>maxResults</code> number of items, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the next token.</p><br>
    ///   - [`max_results(i32)`](crate::operation::list_protected_resources_by_backup_vault::builders::ListProtectedResourcesByBackupVaultFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::list_protected_resources_by_backup_vault::builders::ListProtectedResourcesByBackupVaultFluentBuilder::set_max_results):<br>required: **false**<br><p>The maximum number of items to be returned.</p><br>
    /// - On success, responds with [`ListProtectedResourcesByBackupVaultOutput`](crate::operation::list_protected_resources_by_backup_vault::ListProtectedResourcesByBackupVaultOutput) with field(s):
    ///   - [`results(Option<Vec::<ProtectedResource>>)`](crate::operation::list_protected_resources_by_backup_vault::ListProtectedResourcesByBackupVaultOutput::results): <p>These are the results returned for the request ListProtectedResourcesByBackupVault.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::list_protected_resources_by_backup_vault::ListProtectedResourcesByBackupVaultOutput::next_token): <p>The next item following a partial list of returned items. For example, if a request is made to return <code>maxResults</code> number of items, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the next token.</p>
    /// - On failure, responds with [`SdkError<ListProtectedResourcesByBackupVaultError>`](crate::operation::list_protected_resources_by_backup_vault::ListProtectedResourcesByBackupVaultError)
    pub fn list_protected_resources_by_backup_vault(
        &self,
    ) -> crate::operation::list_protected_resources_by_backup_vault::builders::ListProtectedResourcesByBackupVaultFluentBuilder {
        crate::operation::list_protected_resources_by_backup_vault::builders::ListProtectedResourcesByBackupVaultFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
