// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetSupportedResourceTypes`](crate::operation::get_supported_resource_types::builders::GetSupportedResourceTypesFluentBuilder) operation.
    ///
    /// - The fluent builder takes no input, just [`send`](crate::operation::get_supported_resource_types::builders::GetSupportedResourceTypesFluentBuilder::send) it.
    /// - On success, responds with [`GetSupportedResourceTypesOutput`](crate::operation::get_supported_resource_types::GetSupportedResourceTypesOutput) with field(s):
    ///   - [`resource_types(Option<Vec<String>>)`](crate::operation::get_supported_resource_types::GetSupportedResourceTypesOutput::resource_types): <p>Contains a string with the supported Amazon Web Services resource types:</p>  <ul>   <li> <p> <code>Aurora</code> for Amazon Aurora</p> </li>   <li> <p> <code>DynamoDB</code> for Amazon DynamoDB</p> </li>   <li> <p> <code>EBS</code> for Amazon Elastic Block Store</p> </li>   <li> <p> <code>EC2</code> for Amazon Elastic Compute Cloud</p> </li>   <li> <p> <code>EFS</code> for Amazon Elastic File System</p> </li>   <li> <p> <code>FSX</code> for Amazon FSx</p> </li>   <li> <p> <code>RDS</code> for Amazon Relational Database Service</p> </li>   <li> <p> <code>Storage Gateway</code> for Storage Gateway</p> </li>   <li> <p> <code>DocDB</code> for Amazon DocumentDB (with MongoDB compatibility)</p> </li>   <li> <p> <code>Neptune</code> for Amazon Neptune</p> </li>  </ul>
    /// - On failure, responds with [`SdkError<GetSupportedResourceTypesError>`](crate::operation::get_supported_resource_types::GetSupportedResourceTypesError)
    pub fn get_supported_resource_types(&self) -> crate::operation::get_supported_resource_types::builders::GetSupportedResourceTypesFluentBuilder{
        crate::operation::get_supported_resource_types::builders::GetSupportedResourceTypesFluentBuilder::new(self.handle.clone())
    }
}
