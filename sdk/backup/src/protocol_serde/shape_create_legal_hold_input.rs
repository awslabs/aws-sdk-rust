// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_create_legal_hold_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::create_legal_hold::CreateLegalHoldInput,
) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    if let Some(var_1) = &input.description {
        object.key("Description").string(var_1.as_str());
    }
    if let Some(var_2) = &input.idempotency_token {
        object.key("IdempotencyToken").string(var_2.as_str());
    }
    if let Some(var_3) = &input.recovery_point_selection {
        #[allow(unused_mut)]
        let mut object_4 = object.key("RecoveryPointSelection").start_object();
        crate::protocol_serde::shape_recovery_point_selection::ser_recovery_point_selection(
            &mut object_4,
            var_3,
        )?;
        object_4.finish();
    }
    if let Some(var_5) = &input.tags {
        #[allow(unused_mut)]
        let mut object_6 = object.key("Tags").start_object();
        for (key_7, value_8) in var_5 {
            {
                object_6.key(key_7.as_str()).string(value_8.as_str());
            }
        }
        object_6.finish();
    }
    if let Some(var_9) = &input.title {
        object.key("Title").string(var_9.as_str());
    }
    Ok(())
}
