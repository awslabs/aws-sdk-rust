// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_restore_testing_recovery_point_selection(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::types::RestoreTestingRecoveryPointSelection,
) -> ::std::result::Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.algorithm {
        object.key("Algorithm").string(var_1.as_str());
    }
    if let Some(var_2) = &input.exclude_vaults {
        let mut array_3 = object.key("ExcludeVaults").start_array();
        for item_4 in var_2 {
            {
                array_3.value().string(item_4.as_str());
            }
        }
        array_3.finish();
    }
    if let Some(var_5) = &input.include_vaults {
        let mut array_6 = object.key("IncludeVaults").start_array();
        for item_7 in var_5 {
            {
                array_6.value().string(item_7.as_str());
            }
        }
        array_6.finish();
    }
    if let Some(var_8) = &input.recovery_point_types {
        let mut array_9 = object.key("RecoveryPointTypes").start_array();
        for item_10 in var_8 {
            {
                array_9.value().string(item_10.as_str());
            }
        }
        array_9.finish();
    }
    if input.selection_window_days != 0 {
        object.key("SelectionWindowDays").number(
            #[allow(clippy::useless_conversion)]
            ::aws_smithy_types::Number::NegInt((input.selection_window_days).into()),
        );
    }
    Ok(())
}

pub(crate) fn de_restore_testing_recovery_point_selection<'a, I>(
    tokens: &mut ::std::iter::Peekable<I>,
) -> ::std::result::Result<Option<crate::types::RestoreTestingRecoveryPointSelection>, ::aws_smithy_json::deserialize::error::DeserializeError>
where
    I: Iterator<Item = Result<::aws_smithy_json::deserialize::Token<'a>, ::aws_smithy_json::deserialize::error::DeserializeError>>,
{
    match tokens.next().transpose()? {
        Some(::aws_smithy_json::deserialize::Token::ValueNull { .. }) => Ok(None),
        Some(::aws_smithy_json::deserialize::Token::StartObject { .. }) => {
            #[allow(unused_mut)]
            let mut builder = crate::types::builders::RestoreTestingRecoveryPointSelectionBuilder::default();
            loop {
                match tokens.next().transpose()? {
                    Some(::aws_smithy_json::deserialize::Token::EndObject { .. }) => break,
                    Some(::aws_smithy_json::deserialize::Token::ObjectKey { key, .. }) => {
                        match key.to_unescaped()?.as_ref() {
                            "Algorithm" => {
                                builder = builder.set_algorithm(
                                    ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                        .map(|s| {
                                            s.to_unescaped()
                                                .map(|u| crate::types::RestoreTestingRecoveryPointSelectionAlgorithm::from(u.as_ref()))
                                        })
                                        .transpose()?,
                                );
                            }
                            "ExcludeVaults" => {
                                builder = builder.set_exclude_vaults(crate::protocol_serde::shape_string_list::de_string_list(tokens)?);
                            }
                            "IncludeVaults" => {
                                builder = builder.set_include_vaults(crate::protocol_serde::shape_string_list::de_string_list(tokens)?);
                            }
                            "RecoveryPointTypes" => {
                                builder = builder.set_recovery_point_types(
                                    crate::protocol_serde::shape_restore_testing_recovery_point_type_list::de_restore_testing_recovery_point_type_list(tokens)?
                                );
                            }
                            "SelectionWindowDays" => {
                                builder = builder.set_selection_window_days(
                                    ::aws_smithy_json::deserialize::token::expect_number_or_null(tokens.next())?
                                        .map(i32::try_from)
                                        .transpose()?,
                                );
                            }
                            _ => ::aws_smithy_json::deserialize::token::skip_value(tokens)?,
                        }
                    }
                    other => {
                        return Err(::aws_smithy_json::deserialize::error::DeserializeError::custom(format!(
                            "expected object key or end object, found: {other:?}"
                        )))
                    }
                }
            }
            Ok(Some(builder.build()))
        }
        _ => Err(::aws_smithy_json::deserialize::error::DeserializeError::custom(
            "expected start object or null",
        )),
    }
}
