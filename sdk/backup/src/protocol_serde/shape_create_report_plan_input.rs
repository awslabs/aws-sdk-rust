// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_create_report_plan_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::create_report_plan::CreateReportPlanInput,
) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    if let Some(var_1) = &input.idempotency_token {
        object.key("IdempotencyToken").string(var_1.as_str());
    }
    if let Some(var_2) = &input.report_delivery_channel {
        #[allow(unused_mut)]
        let mut object_3 = object.key("ReportDeliveryChannel").start_object();
        crate::protocol_serde::shape_report_delivery_channel::ser_report_delivery_channel(
            &mut object_3,
            var_2,
        )?;
        object_3.finish();
    }
    if let Some(var_4) = &input.report_plan_description {
        object.key("ReportPlanDescription").string(var_4.as_str());
    }
    if let Some(var_5) = &input.report_plan_name {
        object.key("ReportPlanName").string(var_5.as_str());
    }
    if let Some(var_6) = &input.report_plan_tags {
        #[allow(unused_mut)]
        let mut object_7 = object.key("ReportPlanTags").start_object();
        for (key_8, value_9) in var_6 {
            {
                object_7.key(key_8.as_str()).string(value_9.as_str());
            }
        }
        object_7.finish();
    }
    if let Some(var_10) = &input.report_setting {
        #[allow(unused_mut)]
        let mut object_11 = object.key("ReportSetting").start_object();
        crate::protocol_serde::shape_report_setting::ser_report_setting(&mut object_11, var_10)?;
        object_11.finish();
    }
    Ok(())
}
