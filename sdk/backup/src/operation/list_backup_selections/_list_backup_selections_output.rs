// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ListBackupSelectionsOutput {
    /// <p>The next item following a partial list of returned items. For example, if a request is made to return <code>maxResults</code> number of items, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the next token.</p>
    #[doc(hidden)]
    pub next_token: std::option::Option<std::string::String>,
    /// <p>An array of backup selection list items containing metadata about each resource in the list.</p>
    #[doc(hidden)]
    pub backup_selections_list:
        std::option::Option<std::vec::Vec<crate::types::BackupSelectionsListMember>>,
    _request_id: Option<String>,
}
impl ListBackupSelectionsOutput {
    /// <p>The next item following a partial list of returned items. For example, if a request is made to return <code>maxResults</code> number of items, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the next token.</p>
    pub fn next_token(&self) -> std::option::Option<&str> {
        self.next_token.as_deref()
    }
    /// <p>An array of backup selection list items containing metadata about each resource in the list.</p>
    pub fn backup_selections_list(
        &self,
    ) -> std::option::Option<&[crate::types::BackupSelectionsListMember]> {
        self.backup_selections_list.as_deref()
    }
}
impl aws_http::request_id::RequestId for ListBackupSelectionsOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl ListBackupSelectionsOutput {
    /// Creates a new builder-style object to manufacture [`ListBackupSelectionsOutput`](crate::operation::list_backup_selections::ListBackupSelectionsOutput).
    pub fn builder(
    ) -> crate::operation::list_backup_selections::builders::ListBackupSelectionsOutputBuilder {
        crate::operation::list_backup_selections::builders::ListBackupSelectionsOutputBuilder::default()
    }
}

/// A builder for [`ListBackupSelectionsOutput`](crate::operation::list_backup_selections::ListBackupSelectionsOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ListBackupSelectionsOutputBuilder {
    pub(crate) next_token: std::option::Option<std::string::String>,
    pub(crate) backup_selections_list:
        std::option::Option<std::vec::Vec<crate::types::BackupSelectionsListMember>>,
    _request_id: Option<String>,
}
impl ListBackupSelectionsOutputBuilder {
    /// <p>The next item following a partial list of returned items. For example, if a request is made to return <code>maxResults</code> number of items, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the next token.</p>
    pub fn next_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.next_token = Some(input.into());
        self
    }
    /// <p>The next item following a partial list of returned items. For example, if a request is made to return <code>maxResults</code> number of items, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the next token.</p>
    pub fn set_next_token(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// Appends an item to `backup_selections_list`.
    ///
    /// To override the contents of this collection use [`set_backup_selections_list`](Self::set_backup_selections_list).
    ///
    /// <p>An array of backup selection list items containing metadata about each resource in the list.</p>
    pub fn backup_selections_list(
        mut self,
        input: crate::types::BackupSelectionsListMember,
    ) -> Self {
        let mut v = self.backup_selections_list.unwrap_or_default();
        v.push(input);
        self.backup_selections_list = Some(v);
        self
    }
    /// <p>An array of backup selection list items containing metadata about each resource in the list.</p>
    pub fn set_backup_selections_list(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::BackupSelectionsListMember>>,
    ) -> Self {
        self.backup_selections_list = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`ListBackupSelectionsOutput`](crate::operation::list_backup_selections::ListBackupSelectionsOutput).
    pub fn build(self) -> crate::operation::list_backup_selections::ListBackupSelectionsOutput {
        crate::operation::list_backup_selections::ListBackupSelectionsOutput {
            next_token: self.next_token,
            backup_selections_list: self.backup_selections_list,
            _request_id: self._request_id,
        }
    }
}
