// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct StartCopyJobOutput {
    /// <p>Uniquely identifies a copy job.</p>
    #[doc(hidden)]
    pub copy_job_id: std::option::Option<std::string::String>,
    /// <p>The date and time that a copy job is created, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.</p>
    #[doc(hidden)]
    pub creation_date: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>This is a returned boolean value indicating this is a parent (composite) copy job.</p>
    #[doc(hidden)]
    pub is_parent: bool,
    _request_id: Option<String>,
}
impl StartCopyJobOutput {
    /// <p>Uniquely identifies a copy job.</p>
    pub fn copy_job_id(&self) -> std::option::Option<&str> {
        self.copy_job_id.as_deref()
    }
    /// <p>The date and time that a copy job is created, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.</p>
    pub fn creation_date(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.creation_date.as_ref()
    }
    /// <p>This is a returned boolean value indicating this is a parent (composite) copy job.</p>
    pub fn is_parent(&self) -> bool {
        self.is_parent
    }
}
impl aws_http::request_id::RequestId for StartCopyJobOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl StartCopyJobOutput {
    /// Creates a new builder-style object to manufacture [`StartCopyJobOutput`](crate::operation::start_copy_job::StartCopyJobOutput).
    pub fn builder() -> crate::operation::start_copy_job::builders::StartCopyJobOutputBuilder {
        crate::operation::start_copy_job::builders::StartCopyJobOutputBuilder::default()
    }
}

/// A builder for [`StartCopyJobOutput`](crate::operation::start_copy_job::StartCopyJobOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct StartCopyJobOutputBuilder {
    pub(crate) copy_job_id: std::option::Option<std::string::String>,
    pub(crate) creation_date: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) is_parent: std::option::Option<bool>,
    _request_id: Option<String>,
}
impl StartCopyJobOutputBuilder {
    /// <p>Uniquely identifies a copy job.</p>
    pub fn copy_job_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.copy_job_id = Some(input.into());
        self
    }
    /// <p>Uniquely identifies a copy job.</p>
    pub fn set_copy_job_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.copy_job_id = input;
        self
    }
    /// <p>The date and time that a copy job is created, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.</p>
    pub fn creation_date(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.creation_date = Some(input);
        self
    }
    /// <p>The date and time that a copy job is created, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.</p>
    pub fn set_creation_date(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.creation_date = input;
        self
    }
    /// <p>This is a returned boolean value indicating this is a parent (composite) copy job.</p>
    pub fn is_parent(mut self, input: bool) -> Self {
        self.is_parent = Some(input);
        self
    }
    /// <p>This is a returned boolean value indicating this is a parent (composite) copy job.</p>
    pub fn set_is_parent(mut self, input: std::option::Option<bool>) -> Self {
        self.is_parent = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`StartCopyJobOutput`](crate::operation::start_copy_job::StartCopyJobOutput).
    pub fn build(self) -> crate::operation::start_copy_job::StartCopyJobOutput {
        crate::operation::start_copy_job::StartCopyJobOutput {
            copy_job_id: self.copy_job_id,
            creation_date: self.creation_date,
            is_parent: self.is_parent.unwrap_or_default(),
            _request_id: self._request_id,
        }
    }
}
