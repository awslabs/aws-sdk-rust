// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ListBackupVaultsOutput {
    /// <p>An array of backup vault list members containing vault metadata, including Amazon Resource Name (ARN), display name, creation date, number of saved recovery points, and encryption information if the resources saved in the backup vault are encrypted.</p>
    pub backup_vault_list: ::std::option::Option<::std::vec::Vec<crate::types::BackupVaultListMember>>,
    /// <p>The next item following a partial list of returned items. For example, if a request is made to return <code>maxResults</code> number of items, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the next token.</p>
    pub next_token: ::std::option::Option<::std::string::String>,
    _request_id: Option<String>,
}
impl ListBackupVaultsOutput {
    /// <p>An array of backup vault list members containing vault metadata, including Amazon Resource Name (ARN), display name, creation date, number of saved recovery points, and encryption information if the resources saved in the backup vault are encrypted.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.backup_vault_list.is_none()`.
    pub fn backup_vault_list(&self) -> &[crate::types::BackupVaultListMember] {
        self.backup_vault_list.as_deref().unwrap_or_default()
    }
    /// <p>The next item following a partial list of returned items. For example, if a request is made to return <code>maxResults</code> number of items, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the next token.</p>
    pub fn next_token(&self) -> ::std::option::Option<&str> {
        self.next_token.as_deref()
    }
}
impl ::aws_http::request_id::RequestId for ListBackupVaultsOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl ListBackupVaultsOutput {
    /// Creates a new builder-style object to manufacture [`ListBackupVaultsOutput`](crate::operation::list_backup_vaults::ListBackupVaultsOutput).
    pub fn builder() -> crate::operation::list_backup_vaults::builders::ListBackupVaultsOutputBuilder {
        crate::operation::list_backup_vaults::builders::ListBackupVaultsOutputBuilder::default()
    }
}

/// A builder for [`ListBackupVaultsOutput`](crate::operation::list_backup_vaults::ListBackupVaultsOutput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ListBackupVaultsOutputBuilder {
    pub(crate) backup_vault_list: ::std::option::Option<::std::vec::Vec<crate::types::BackupVaultListMember>>,
    pub(crate) next_token: ::std::option::Option<::std::string::String>,
    _request_id: Option<String>,
}
impl ListBackupVaultsOutputBuilder {
    /// Appends an item to `backup_vault_list`.
    ///
    /// To override the contents of this collection use [`set_backup_vault_list`](Self::set_backup_vault_list).
    ///
    /// <p>An array of backup vault list members containing vault metadata, including Amazon Resource Name (ARN), display name, creation date, number of saved recovery points, and encryption information if the resources saved in the backup vault are encrypted.</p>
    pub fn backup_vault_list(mut self, input: crate::types::BackupVaultListMember) -> Self {
        let mut v = self.backup_vault_list.unwrap_or_default();
        v.push(input);
        self.backup_vault_list = ::std::option::Option::Some(v);
        self
    }
    /// <p>An array of backup vault list members containing vault metadata, including Amazon Resource Name (ARN), display name, creation date, number of saved recovery points, and encryption information if the resources saved in the backup vault are encrypted.</p>
    pub fn set_backup_vault_list(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::BackupVaultListMember>>) -> Self {
        self.backup_vault_list = input;
        self
    }
    /// <p>An array of backup vault list members containing vault metadata, including Amazon Resource Name (ARN), display name, creation date, number of saved recovery points, and encryption information if the resources saved in the backup vault are encrypted.</p>
    pub fn get_backup_vault_list(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::BackupVaultListMember>> {
        &self.backup_vault_list
    }
    /// <p>The next item following a partial list of returned items. For example, if a request is made to return <code>maxResults</code> number of items, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the next token.</p>
    pub fn next_token(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.next_token = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The next item following a partial list of returned items. For example, if a request is made to return <code>maxResults</code> number of items, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the next token.</p>
    pub fn set_next_token(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// <p>The next item following a partial list of returned items. For example, if a request is made to return <code>maxResults</code> number of items, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the next token.</p>
    pub fn get_next_token(&self) -> &::std::option::Option<::std::string::String> {
        &self.next_token
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`ListBackupVaultsOutput`](crate::operation::list_backup_vaults::ListBackupVaultsOutput).
    pub fn build(self) -> crate::operation::list_backup_vaults::ListBackupVaultsOutput {
        crate::operation::list_backup_vaults::ListBackupVaultsOutput {
            backup_vault_list: self.backup_vault_list,
            next_token: self.next_token,
            _request_id: self._request_id,
        }
    }
}
