// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DescribeCopyJobOutput {
    /// <p>Contains detailed information about a copy job.</p>
    #[doc(hidden)]
    pub copy_job: std::option::Option<crate::types::CopyJob>,
    _request_id: Option<String>,
}
impl DescribeCopyJobOutput {
    /// <p>Contains detailed information about a copy job.</p>
    pub fn copy_job(&self) -> std::option::Option<&crate::types::CopyJob> {
        self.copy_job.as_ref()
    }
}
impl aws_http::request_id::RequestId for DescribeCopyJobOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl DescribeCopyJobOutput {
    /// Creates a new builder-style object to manufacture [`DescribeCopyJobOutput`](crate::operation::describe_copy_job::DescribeCopyJobOutput).
    pub fn builder() -> crate::operation::describe_copy_job::builders::DescribeCopyJobOutputBuilder
    {
        crate::operation::describe_copy_job::builders::DescribeCopyJobOutputBuilder::default()
    }
}

/// A builder for [`DescribeCopyJobOutput`](crate::operation::describe_copy_job::DescribeCopyJobOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DescribeCopyJobOutputBuilder {
    pub(crate) copy_job: std::option::Option<crate::types::CopyJob>,
    _request_id: Option<String>,
}
impl DescribeCopyJobOutputBuilder {
    /// <p>Contains detailed information about a copy job.</p>
    pub fn copy_job(mut self, input: crate::types::CopyJob) -> Self {
        self.copy_job = Some(input);
        self
    }
    /// <p>Contains detailed information about a copy job.</p>
    pub fn set_copy_job(mut self, input: std::option::Option<crate::types::CopyJob>) -> Self {
        self.copy_job = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`DescribeCopyJobOutput`](crate::operation::describe_copy_job::DescribeCopyJobOutput).
    pub fn build(self) -> crate::operation::describe_copy_job::DescribeCopyJobOutput {
        crate::operation::describe_copy_job::DescribeCopyJobOutput {
            copy_job: self.copy_job,
            _request_id: self._request_id,
        }
    }
}
