// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct CreateBackupSelectionInput {
    /// <p>Uniquely identifies the backup plan to be associated with the selection of resources.</p>
    #[doc(hidden)]
    pub backup_plan_id: std::option::Option<std::string::String>,
    /// <p>Specifies the body of a request to assign a set of resources to a backup plan.</p>
    #[doc(hidden)]
    pub backup_selection: std::option::Option<crate::types::BackupSelection>,
    /// <p>A unique string that identifies the request and allows failed requests to be retried without the risk of running the operation twice. This parameter is optional.</p>
    /// <p>If used, this parameter must contain 1 to 50 alphanumeric or '-_.' characters.</p>
    #[doc(hidden)]
    pub creator_request_id: std::option::Option<std::string::String>,
}
impl CreateBackupSelectionInput {
    /// <p>Uniquely identifies the backup plan to be associated with the selection of resources.</p>
    pub fn backup_plan_id(&self) -> std::option::Option<&str> {
        self.backup_plan_id.as_deref()
    }
    /// <p>Specifies the body of a request to assign a set of resources to a backup plan.</p>
    pub fn backup_selection(&self) -> std::option::Option<&crate::types::BackupSelection> {
        self.backup_selection.as_ref()
    }
    /// <p>A unique string that identifies the request and allows failed requests to be retried without the risk of running the operation twice. This parameter is optional.</p>
    /// <p>If used, this parameter must contain 1 to 50 alphanumeric or '-_.' characters.</p>
    pub fn creator_request_id(&self) -> std::option::Option<&str> {
        self.creator_request_id.as_deref()
    }
}
impl CreateBackupSelectionInput {
    /// Creates a new builder-style object to manufacture [`CreateBackupSelectionInput`](crate::operation::create_backup_selection::CreateBackupSelectionInput).
    pub fn builder(
    ) -> crate::operation::create_backup_selection::builders::CreateBackupSelectionInputBuilder
    {
        crate::operation::create_backup_selection::builders::CreateBackupSelectionInputBuilder::default()
    }
}

/// A builder for [`CreateBackupSelectionInput`](crate::operation::create_backup_selection::CreateBackupSelectionInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct CreateBackupSelectionInputBuilder {
    pub(crate) backup_plan_id: std::option::Option<std::string::String>,
    pub(crate) backup_selection: std::option::Option<crate::types::BackupSelection>,
    pub(crate) creator_request_id: std::option::Option<std::string::String>,
}
impl CreateBackupSelectionInputBuilder {
    /// <p>Uniquely identifies the backup plan to be associated with the selection of resources.</p>
    pub fn backup_plan_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.backup_plan_id = Some(input.into());
        self
    }
    /// <p>Uniquely identifies the backup plan to be associated with the selection of resources.</p>
    pub fn set_backup_plan_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.backup_plan_id = input;
        self
    }
    /// <p>Specifies the body of a request to assign a set of resources to a backup plan.</p>
    pub fn backup_selection(mut self, input: crate::types::BackupSelection) -> Self {
        self.backup_selection = Some(input);
        self
    }
    /// <p>Specifies the body of a request to assign a set of resources to a backup plan.</p>
    pub fn set_backup_selection(
        mut self,
        input: std::option::Option<crate::types::BackupSelection>,
    ) -> Self {
        self.backup_selection = input;
        self
    }
    /// <p>A unique string that identifies the request and allows failed requests to be retried without the risk of running the operation twice. This parameter is optional.</p>
    /// <p>If used, this parameter must contain 1 to 50 alphanumeric or '-_.' characters.</p>
    pub fn creator_request_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.creator_request_id = Some(input.into());
        self
    }
    /// <p>A unique string that identifies the request and allows failed requests to be retried without the risk of running the operation twice. This parameter is optional.</p>
    /// <p>If used, this parameter must contain 1 to 50 alphanumeric or '-_.' characters.</p>
    pub fn set_creator_request_id(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.creator_request_id = input;
        self
    }
    /// Consumes the builder and constructs a [`CreateBackupSelectionInput`](crate::operation::create_backup_selection::CreateBackupSelectionInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::create_backup_selection::CreateBackupSelectionInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::create_backup_selection::CreateBackupSelectionInput {
                backup_plan_id: self.backup_plan_id,
                backup_selection: self.backup_selection,
                creator_request_id: self.creator_request_id,
            },
        )
    }
}
