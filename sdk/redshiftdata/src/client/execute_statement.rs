// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ExecuteStatement`](crate::operation::execute_statement::builders::ExecuteStatementFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`sql(impl Into<String>)`](crate::operation::execute_statement::builders::ExecuteStatementFluentBuilder::sql) / [`set_sql(Option<String>)`](crate::operation::execute_statement::builders::ExecuteStatementFluentBuilder::set_sql): <p>The SQL statement text to run. </p>
    ///   - [`cluster_identifier(impl Into<String>)`](crate::operation::execute_statement::builders::ExecuteStatementFluentBuilder::cluster_identifier) / [`set_cluster_identifier(Option<String>)`](crate::operation::execute_statement::builders::ExecuteStatementFluentBuilder::set_cluster_identifier): <p>The cluster identifier. This parameter is required when connecting to a cluster and authenticating using either Secrets Manager or temporary credentials. </p>
    ///   - [`secret_arn(impl Into<String>)`](crate::operation::execute_statement::builders::ExecuteStatementFluentBuilder::secret_arn) / [`set_secret_arn(Option<String>)`](crate::operation::execute_statement::builders::ExecuteStatementFluentBuilder::set_secret_arn): <p>The name or ARN of the secret that enables access to the database. This parameter is required when authenticating using Secrets Manager. </p>
    ///   - [`db_user(impl Into<String>)`](crate::operation::execute_statement::builders::ExecuteStatementFluentBuilder::db_user) / [`set_db_user(Option<String>)`](crate::operation::execute_statement::builders::ExecuteStatementFluentBuilder::set_db_user): <p>The database user name. This parameter is required when connecting to a cluster and authenticating using temporary credentials. </p>
    ///   - [`database(impl Into<String>)`](crate::operation::execute_statement::builders::ExecuteStatementFluentBuilder::database) / [`set_database(Option<String>)`](crate::operation::execute_statement::builders::ExecuteStatementFluentBuilder::set_database): <p>The name of the database. This parameter is required when authenticating using either Secrets Manager or temporary credentials. </p>
    ///   - [`with_event(bool)`](crate::operation::execute_statement::builders::ExecuteStatementFluentBuilder::with_event) / [`set_with_event(Option<bool>)`](crate::operation::execute_statement::builders::ExecuteStatementFluentBuilder::set_with_event): <p>A value that indicates whether to send an event to the Amazon EventBridge event bus after the SQL statement runs. </p>
    ///   - [`statement_name(impl Into<String>)`](crate::operation::execute_statement::builders::ExecuteStatementFluentBuilder::statement_name) / [`set_statement_name(Option<String>)`](crate::operation::execute_statement::builders::ExecuteStatementFluentBuilder::set_statement_name): <p>The name of the SQL statement. You can name the SQL statement when you create it to identify the query. </p>
    ///   - [`parameters(Vec<SqlParameter>)`](crate::operation::execute_statement::builders::ExecuteStatementFluentBuilder::parameters) / [`set_parameters(Option<Vec<SqlParameter>>)`](crate::operation::execute_statement::builders::ExecuteStatementFluentBuilder::set_parameters): <p>The parameters for the SQL statement.</p>
    ///   - [`workgroup_name(impl Into<String>)`](crate::operation::execute_statement::builders::ExecuteStatementFluentBuilder::workgroup_name) / [`set_workgroup_name(Option<String>)`](crate::operation::execute_statement::builders::ExecuteStatementFluentBuilder::set_workgroup_name): <p>The serverless workgroup name. This parameter is required when connecting to a serverless workgroup and authenticating using either Secrets Manager or temporary credentials.</p>
    ///   - [`client_token(impl Into<String>)`](crate::operation::execute_statement::builders::ExecuteStatementFluentBuilder::client_token) / [`set_client_token(Option<String>)`](crate::operation::execute_statement::builders::ExecuteStatementFluentBuilder::set_client_token): <p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request.</p>
    /// - On success, responds with [`ExecuteStatementOutput`](crate::operation::execute_statement::ExecuteStatementOutput) with field(s):
    ///   - [`id(Option<String>)`](crate::operation::execute_statement::ExecuteStatementOutput::id): <p>The identifier of the SQL statement whose results are to be fetched. This value is a universally unique identifier (UUID) generated by Amazon Redshift Data API. </p>
    ///   - [`created_at(Option<DateTime>)`](crate::operation::execute_statement::ExecuteStatementOutput::created_at): <p>The date and time (UTC) the statement was created. </p>
    ///   - [`cluster_identifier(Option<String>)`](crate::operation::execute_statement::ExecuteStatementOutput::cluster_identifier): <p>The cluster identifier. This element is not returned when connecting to a serverless workgroup. </p>
    ///   - [`db_user(Option<String>)`](crate::operation::execute_statement::ExecuteStatementOutput::db_user): <p>The database user name.</p>
    ///   - [`database(Option<String>)`](crate::operation::execute_statement::ExecuteStatementOutput::database): <p>The name of the database.</p>
    ///   - [`secret_arn(Option<String>)`](crate::operation::execute_statement::ExecuteStatementOutput::secret_arn): <p>The name or ARN of the secret that enables access to the database. </p>
    ///   - [`workgroup_name(Option<String>)`](crate::operation::execute_statement::ExecuteStatementOutput::workgroup_name): <p>The serverless workgroup name. This element is not returned when connecting to a provisioned cluster.</p>
    /// - On failure, responds with [`SdkError<ExecuteStatementError>`](crate::operation::execute_statement::ExecuteStatementError)
    pub fn execute_statement(
        &self,
    ) -> crate::operation::execute_statement::builders::ExecuteStatementFluentBuilder {
        crate::operation::execute_statement::builders::ExecuteStatementFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
