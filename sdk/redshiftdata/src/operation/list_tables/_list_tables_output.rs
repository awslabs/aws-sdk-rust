// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ListTablesOutput {
    /// <p>The tables that match the request pattern. </p>
    #[doc(hidden)]
    pub tables: std::option::Option<std::vec::Vec<crate::types::TableMember>>,
    /// <p>A value that indicates the starting point for the next set of response records in a subsequent request. If a value is returned in a response, you can retrieve the next set of records by providing this returned NextToken value in the next NextToken parameter and retrying the command. If the NextToken field is empty, all response records have been retrieved for the request. </p>
    #[doc(hidden)]
    pub next_token: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl ListTablesOutput {
    /// <p>The tables that match the request pattern. </p>
    pub fn tables(&self) -> std::option::Option<&[crate::types::TableMember]> {
        self.tables.as_deref()
    }
    /// <p>A value that indicates the starting point for the next set of response records in a subsequent request. If a value is returned in a response, you can retrieve the next set of records by providing this returned NextToken value in the next NextToken parameter and retrying the command. If the NextToken field is empty, all response records have been retrieved for the request. </p>
    pub fn next_token(&self) -> std::option::Option<&str> {
        self.next_token.as_deref()
    }
}
impl aws_http::request_id::RequestId for ListTablesOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl ListTablesOutput {
    /// Creates a new builder-style object to manufacture [`ListTablesOutput`](crate::operation::list_tables::ListTablesOutput).
    pub fn builder() -> crate::operation::list_tables::builders::ListTablesOutputBuilder {
        crate::operation::list_tables::builders::ListTablesOutputBuilder::default()
    }
}

/// A builder for [`ListTablesOutput`](crate::operation::list_tables::ListTablesOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ListTablesOutputBuilder {
    pub(crate) tables: std::option::Option<std::vec::Vec<crate::types::TableMember>>,
    pub(crate) next_token: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl ListTablesOutputBuilder {
    /// Appends an item to `tables`.
    ///
    /// To override the contents of this collection use [`set_tables`](Self::set_tables).
    ///
    /// <p>The tables that match the request pattern. </p>
    pub fn tables(mut self, input: crate::types::TableMember) -> Self {
        let mut v = self.tables.unwrap_or_default();
        v.push(input);
        self.tables = Some(v);
        self
    }
    /// <p>The tables that match the request pattern. </p>
    pub fn set_tables(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::TableMember>>,
    ) -> Self {
        self.tables = input;
        self
    }
    /// <p>A value that indicates the starting point for the next set of response records in a subsequent request. If a value is returned in a response, you can retrieve the next set of records by providing this returned NextToken value in the next NextToken parameter and retrying the command. If the NextToken field is empty, all response records have been retrieved for the request. </p>
    pub fn next_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.next_token = Some(input.into());
        self
    }
    /// <p>A value that indicates the starting point for the next set of response records in a subsequent request. If a value is returned in a response, you can retrieve the next set of records by providing this returned NextToken value in the next NextToken parameter and retrying the command. If the NextToken field is empty, all response records have been retrieved for the request. </p>
    pub fn set_next_token(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`ListTablesOutput`](crate::operation::list_tables::ListTablesOutput).
    pub fn build(self) -> crate::operation::list_tables::ListTablesOutput {
        crate::operation::list_tables::ListTablesOutput {
            tables: self.tables,
            next_token: self.next_token,
            _request_id: self._request_id,
        }
    }
}
