// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GetStudioMemberInput {
    /// <p>The principal ID. This currently supports a IAM Identity Center UserId. </p>
    #[doc(hidden)]
    pub principal_id: std::option::Option<std::string::String>,
    /// <p>The studio ID. </p>
    #[doc(hidden)]
    pub studio_id: std::option::Option<std::string::String>,
}
impl GetStudioMemberInput {
    /// <p>The principal ID. This currently supports a IAM Identity Center UserId. </p>
    pub fn principal_id(&self) -> std::option::Option<&str> {
        self.principal_id.as_deref()
    }
    /// <p>The studio ID. </p>
    pub fn studio_id(&self) -> std::option::Option<&str> {
        self.studio_id.as_deref()
    }
}
impl GetStudioMemberInput {
    /// Creates a new builder-style object to manufacture [`GetStudioMemberInput`](crate::operation::get_studio_member::GetStudioMemberInput).
    pub fn builder() -> crate::operation::get_studio_member::builders::GetStudioMemberInputBuilder {
        crate::operation::get_studio_member::builders::GetStudioMemberInputBuilder::default()
    }
}

/// A builder for [`GetStudioMemberInput`](crate::operation::get_studio_member::GetStudioMemberInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct GetStudioMemberInputBuilder {
    pub(crate) principal_id: std::option::Option<std::string::String>,
    pub(crate) studio_id: std::option::Option<std::string::String>,
}
impl GetStudioMemberInputBuilder {
    /// <p>The principal ID. This currently supports a IAM Identity Center UserId. </p>
    pub fn principal_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.principal_id = Some(input.into());
        self
    }
    /// <p>The principal ID. This currently supports a IAM Identity Center UserId. </p>
    pub fn set_principal_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.principal_id = input;
        self
    }
    /// <p>The studio ID. </p>
    pub fn studio_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.studio_id = Some(input.into());
        self
    }
    /// <p>The studio ID. </p>
    pub fn set_studio_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.studio_id = input;
        self
    }
    /// Consumes the builder and constructs a [`GetStudioMemberInput`](crate::operation::get_studio_member::GetStudioMemberInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::get_studio_member::GetStudioMemberInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(crate::operation::get_studio_member::GetStudioMemberInput {
            principal_id: self.principal_id,
            studio_id: self.studio_id,
        })
    }
}
