// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GetLaunchProfileMemberOutput {
    /// <p>The member.</p>
    #[doc(hidden)]
    pub member: std::option::Option<crate::types::LaunchProfileMembership>,
    _request_id: Option<String>,
}
impl GetLaunchProfileMemberOutput {
    /// <p>The member.</p>
    pub fn member(&self) -> std::option::Option<&crate::types::LaunchProfileMembership> {
        self.member.as_ref()
    }
}
impl aws_http::request_id::RequestId for GetLaunchProfileMemberOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl GetLaunchProfileMemberOutput {
    /// Creates a new builder-style object to manufacture [`GetLaunchProfileMemberOutput`](crate::operation::get_launch_profile_member::GetLaunchProfileMemberOutput).
    pub fn builder(
    ) -> crate::operation::get_launch_profile_member::builders::GetLaunchProfileMemberOutputBuilder
    {
        crate::operation::get_launch_profile_member::builders::GetLaunchProfileMemberOutputBuilder::default()
    }
}

/// A builder for [`GetLaunchProfileMemberOutput`](crate::operation::get_launch_profile_member::GetLaunchProfileMemberOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct GetLaunchProfileMemberOutputBuilder {
    pub(crate) member: std::option::Option<crate::types::LaunchProfileMembership>,
    _request_id: Option<String>,
}
impl GetLaunchProfileMemberOutputBuilder {
    /// <p>The member.</p>
    pub fn member(mut self, input: crate::types::LaunchProfileMembership) -> Self {
        self.member = Some(input);
        self
    }
    /// <p>The member.</p>
    pub fn set_member(
        mut self,
        input: std::option::Option<crate::types::LaunchProfileMembership>,
    ) -> Self {
        self.member = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`GetLaunchProfileMemberOutput`](crate::operation::get_launch_profile_member::GetLaunchProfileMemberOutput).
    pub fn build(
        self,
    ) -> crate::operation::get_launch_profile_member::GetLaunchProfileMemberOutput {
        crate::operation::get_launch_profile_member::GetLaunchProfileMemberOutput {
            member: self.member,
            _request_id: self._request_id,
        }
    }
}
