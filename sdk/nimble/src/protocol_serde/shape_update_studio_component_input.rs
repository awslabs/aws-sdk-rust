// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_update_studio_component_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::update_studio_component::UpdateStudioComponentInput,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.configuration {
        #[allow(unused_mut)]
        let mut object_2 = object.key("configuration").start_object();
        crate::protocol_serde::shape_studio_component_configuration::ser_studio_component_configuration(&mut object_2, var_1)?;
        object_2.finish();
    }
    if let Some(var_3) = &input.description {
        object.key("description").string(var_3.as_str());
    }
    if let Some(var_4) = &input.ec2_security_group_ids {
        let mut array_5 = object.key("ec2SecurityGroupIds").start_array();
        for item_6 in var_4 {
            {
                array_5.value().string(item_6.as_str());
            }
        }
        array_5.finish();
    }
    if let Some(var_7) = &input.initialization_scripts {
        let mut array_8 = object.key("initializationScripts").start_array();
        for item_9 in var_7 {
            {
                #[allow(unused_mut)]
                let mut object_10 = array_8.value().start_object();
                crate::protocol_serde::shape_studio_component_initialization_script::ser_studio_component_initialization_script(
                    &mut object_10,
                    item_9,
                )?;
                object_10.finish();
            }
        }
        array_8.finish();
    }
    if let Some(var_11) = &input.name {
        object.key("name").string(var_11.as_str());
    }
    if let Some(var_12) = &input.runtime_role_arn {
        object.key("runtimeRoleArn").string(var_12.as_str());
    }
    if let Some(var_13) = &input.script_parameters {
        let mut array_14 = object.key("scriptParameters").start_array();
        for item_15 in var_13 {
            {
                #[allow(unused_mut)]
                let mut object_16 = array_14.value().start_object();
                crate::protocol_serde::shape_script_parameter_key_value::ser_script_parameter_key_value(&mut object_16, item_15)?;
                object_16.finish();
            }
        }
        array_14.finish();
    }
    if let Some(var_17) = &input.secure_initialization_role_arn {
        object.key("secureInitializationRoleArn").string(var_17.as_str());
    }
    if let Some(var_18) = &input.subtype {
        object.key("subtype").string(var_18.as_str());
    }
    if let Some(var_19) = &input.r#type {
        object.key("type").string(var_19.as_str());
    }
    Ok(())
}
