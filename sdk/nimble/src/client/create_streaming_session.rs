// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateStreamingSession`](crate::operation::create_streaming_session::builders::CreateStreamingSessionFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`client_token(impl Into<String>)`](crate::operation::create_streaming_session::builders::CreateStreamingSessionFluentBuilder::client_token) / [`set_client_token(Option<String>)`](crate::operation::create_streaming_session::builders::CreateStreamingSessionFluentBuilder::set_client_token): <p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If you donâ€™t specify a client token, the Amazon Web Services SDK automatically generates a client token and uses it for the request to ensure idempotency.</p>
    ///   - [`ec2_instance_type(StreamingInstanceType)`](crate::operation::create_streaming_session::builders::CreateStreamingSessionFluentBuilder::ec2_instance_type) / [`set_ec2_instance_type(Option<StreamingInstanceType>)`](crate::operation::create_streaming_session::builders::CreateStreamingSessionFluentBuilder::set_ec2_instance_type): <p>The EC2 Instance type used for the streaming session.</p>
    ///   - [`launch_profile_id(impl Into<String>)`](crate::operation::create_streaming_session::builders::CreateStreamingSessionFluentBuilder::launch_profile_id) / [`set_launch_profile_id(Option<String>)`](crate::operation::create_streaming_session::builders::CreateStreamingSessionFluentBuilder::set_launch_profile_id): <p>The ID of the launch profile used to control access from the streaming session.</p>
    ///   - [`owned_by(impl Into<String>)`](crate::operation::create_streaming_session::builders::CreateStreamingSessionFluentBuilder::owned_by) / [`set_owned_by(Option<String>)`](crate::operation::create_streaming_session::builders::CreateStreamingSessionFluentBuilder::set_owned_by): <p>The user ID of the user that owns the streaming session. The user that owns the session will be logging into the session and interacting with the virtual workstation.</p>
    ///   - [`streaming_image_id(impl Into<String>)`](crate::operation::create_streaming_session::builders::CreateStreamingSessionFluentBuilder::streaming_image_id) / [`set_streaming_image_id(Option<String>)`](crate::operation::create_streaming_session::builders::CreateStreamingSessionFluentBuilder::set_streaming_image_id): <p>The ID of the streaming image.</p>
    ///   - [`studio_id(impl Into<String>)`](crate::operation::create_streaming_session::builders::CreateStreamingSessionFluentBuilder::studio_id) / [`set_studio_id(Option<String>)`](crate::operation::create_streaming_session::builders::CreateStreamingSessionFluentBuilder::set_studio_id): <p>The studio ID. </p>
    ///   - [`tags(HashMap<String, String>)`](crate::operation::create_streaming_session::builders::CreateStreamingSessionFluentBuilder::tags) / [`set_tags(Option<HashMap<String, String>>)`](crate::operation::create_streaming_session::builders::CreateStreamingSessionFluentBuilder::set_tags): <p>A collection of labels, in the form of key-value pairs, that apply to this resource.</p>
    /// - On success, responds with [`CreateStreamingSessionOutput`](crate::operation::create_streaming_session::CreateStreamingSessionOutput) with field(s):
    ///   - [`session(Option<StreamingSession>)`](crate::operation::create_streaming_session::CreateStreamingSessionOutput::session): <p>The session.</p>
    /// - On failure, responds with [`SdkError<CreateStreamingSessionError>`](crate::operation::create_streaming_session::CreateStreamingSessionError)
    pub fn create_streaming_session(
        &self,
    ) -> crate::operation::create_streaming_session::builders::CreateStreamingSessionFluentBuilder
    {
        crate::operation::create_streaming_session::builders::CreateStreamingSessionFluentBuilder::new(self.handle.clone())
    }
}
