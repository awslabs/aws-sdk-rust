// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeleteLaunchProfile`](crate::operation::delete_launch_profile::builders::DeleteLaunchProfileFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`client_token(impl Into<String>)`](crate::operation::delete_launch_profile::builders::DeleteLaunchProfileFluentBuilder::client_token) / [`set_client_token(Option<String>)`](crate::operation::delete_launch_profile::builders::DeleteLaunchProfileFluentBuilder::set_client_token): <p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If you donâ€™t specify a client token, the Amazon Web Services SDK automatically generates a client token and uses it for the request to ensure idempotency.</p>
    ///   - [`launch_profile_id(impl Into<String>)`](crate::operation::delete_launch_profile::builders::DeleteLaunchProfileFluentBuilder::launch_profile_id) / [`set_launch_profile_id(Option<String>)`](crate::operation::delete_launch_profile::builders::DeleteLaunchProfileFluentBuilder::set_launch_profile_id): <p>The ID of the launch profile used to control access from the streaming session.</p>
    ///   - [`studio_id(impl Into<String>)`](crate::operation::delete_launch_profile::builders::DeleteLaunchProfileFluentBuilder::studio_id) / [`set_studio_id(Option<String>)`](crate::operation::delete_launch_profile::builders::DeleteLaunchProfileFluentBuilder::set_studio_id): <p>The studio ID. </p>
    /// - On success, responds with [`DeleteLaunchProfileOutput`](crate::operation::delete_launch_profile::DeleteLaunchProfileOutput) with field(s):
    ///   - [`launch_profile(Option<LaunchProfile>)`](crate::operation::delete_launch_profile::DeleteLaunchProfileOutput::launch_profile): <p>The launch profile.</p>
    /// - On failure, responds with [`SdkError<DeleteLaunchProfileError>`](crate::operation::delete_launch_profile::DeleteLaunchProfileError)
    pub fn delete_launch_profile(
        &self,
    ) -> crate::operation::delete_launch_profile::builders::DeleteLaunchProfileFluentBuilder {
        crate::operation::delete_launch_profile::builders::DeleteLaunchProfileFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
