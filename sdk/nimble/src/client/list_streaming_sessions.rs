// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListStreamingSessions`](crate::operation::list_streaming_sessions::builders::ListStreamingSessionsFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::list_streaming_sessions::builders::ListStreamingSessionsFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`created_by(impl Into<String>)`](crate::operation::list_streaming_sessions::builders::ListStreamingSessionsFluentBuilder::created_by) / [`set_created_by(Option<String>)`](crate::operation::list_streaming_sessions::builders::ListStreamingSessionsFluentBuilder::set_created_by):<br>required: **false**<br><p>Filters the request to streaming sessions created by the given user.</p><br>
    ///   - [`next_token(impl Into<String>)`](crate::operation::list_streaming_sessions::builders::ListStreamingSessionsFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::list_streaming_sessions::builders::ListStreamingSessionsFluentBuilder::set_next_token):<br>required: **false**<br><p>The token for the next set of results, or null if there are no more results.</p><br>
    ///   - [`owned_by(impl Into<String>)`](crate::operation::list_streaming_sessions::builders::ListStreamingSessionsFluentBuilder::owned_by) / [`set_owned_by(Option<String>)`](crate::operation::list_streaming_sessions::builders::ListStreamingSessionsFluentBuilder::set_owned_by):<br>required: **false**<br><p>Filters the request to streaming session owned by the given user</p><br>
    ///   - [`session_ids(impl Into<String>)`](crate::operation::list_streaming_sessions::builders::ListStreamingSessionsFluentBuilder::session_ids) / [`set_session_ids(Option<String>)`](crate::operation::list_streaming_sessions::builders::ListStreamingSessionsFluentBuilder::set_session_ids):<br>required: **false**<br><p>Filters the request to only the provided session IDs.</p><br>
    ///   - [`studio_id(impl Into<String>)`](crate::operation::list_streaming_sessions::builders::ListStreamingSessionsFluentBuilder::studio_id) / [`set_studio_id(Option<String>)`](crate::operation::list_streaming_sessions::builders::ListStreamingSessionsFluentBuilder::set_studio_id):<br>required: **true**<br><p>The studio ID. </p><br>
    /// - On success, responds with [`ListStreamingSessionsOutput`](crate::operation::list_streaming_sessions::ListStreamingSessionsOutput) with field(s):
    ///   - [`next_token(Option<String>)`](crate::operation::list_streaming_sessions::ListStreamingSessionsOutput::next_token): <p>The token for the next set of results, or null if there are no more results.</p>
    ///   - [`sessions(Option<Vec::<StreamingSession>>)`](crate::operation::list_streaming_sessions::ListStreamingSessionsOutput::sessions): <p>A collection of streaming sessions.</p>
    /// - On failure, responds with [`SdkError<ListStreamingSessionsError>`](crate::operation::list_streaming_sessions::ListStreamingSessionsError)
    pub fn list_streaming_sessions(&self) -> crate::operation::list_streaming_sessions::builders::ListStreamingSessionsFluentBuilder {
        crate::operation::list_streaming_sessions::builders::ListStreamingSessionsFluentBuilder::new(self.handle.clone())
    }
}
