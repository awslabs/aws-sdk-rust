// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn serialize_structure_crate_input_accept_eulas_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::AcceptEulasInput,
) {
    if let Some(var_1) = &input.eula_ids {
        let mut array_2 = object.key("eulaIds").start_array();
        for item_3 in var_1 {
            {
                array_2.value().string(item_3);
            }
        }
        array_2.finish();
    }
}

pub fn serialize_structure_crate_input_create_launch_profile_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateLaunchProfileInput,
) {
    if let Some(var_4) = &input.description {
        object.key("description").string(var_4);
    }
    if let Some(var_5) = &input.ec2_subnet_ids {
        let mut array_6 = object.key("ec2SubnetIds").start_array();
        for item_7 in var_5 {
            {
                array_6.value().string(item_7);
            }
        }
        array_6.finish();
    }
    if let Some(var_8) = &input.launch_profile_protocol_versions {
        let mut array_9 = object.key("launchProfileProtocolVersions").start_array();
        for item_10 in var_8 {
            {
                array_9.value().string(item_10);
            }
        }
        array_9.finish();
    }
    if let Some(var_11) = &input.name {
        object.key("name").string(var_11);
    }
    if let Some(var_12) = &input.stream_configuration {
        let mut object_13 = object.key("streamConfiguration").start_object();
        crate::json_ser::serialize_structure_crate_model_stream_configuration_create(
            &mut object_13,
            var_12,
        );
        object_13.finish();
    }
    if let Some(var_14) = &input.studio_component_ids {
        let mut array_15 = object.key("studioComponentIds").start_array();
        for item_16 in var_14 {
            {
                array_15.value().string(item_16);
            }
        }
        array_15.finish();
    }
    if let Some(var_17) = &input.tags {
        let mut object_18 = object.key("tags").start_object();
        for (key_19, value_20) in var_17 {
            {
                object_18.key(key_19).string(value_20);
            }
        }
        object_18.finish();
    }
}

pub fn serialize_structure_crate_input_create_streaming_image_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateStreamingImageInput,
) {
    if let Some(var_21) = &input.description {
        object.key("description").string(var_21);
    }
    if let Some(var_22) = &input.ec2_image_id {
        object.key("ec2ImageId").string(var_22);
    }
    if let Some(var_23) = &input.name {
        object.key("name").string(var_23);
    }
    if let Some(var_24) = &input.tags {
        let mut object_25 = object.key("tags").start_object();
        for (key_26, value_27) in var_24 {
            {
                object_25.key(key_26).string(value_27);
            }
        }
        object_25.finish();
    }
}

pub fn serialize_structure_crate_input_create_streaming_session_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateStreamingSessionInput,
) {
    if let Some(var_28) = &input.ec2_instance_type {
        object.key("ec2InstanceType").string(var_28.as_str());
    }
    if let Some(var_29) = &input.launch_profile_id {
        object.key("launchProfileId").string(var_29);
    }
    if let Some(var_30) = &input.owned_by {
        object.key("ownedBy").string(var_30);
    }
    if let Some(var_31) = &input.streaming_image_id {
        object.key("streamingImageId").string(var_31);
    }
    if let Some(var_32) = &input.tags {
        let mut object_33 = object.key("tags").start_object();
        for (key_34, value_35) in var_32 {
            {
                object_33.key(key_34).string(value_35);
            }
        }
        object_33.finish();
    }
}

pub fn serialize_structure_crate_input_create_streaming_session_stream_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateStreamingSessionStreamInput,
) {
    if input.expiration_in_seconds != 0 {
        object.key("expirationInSeconds").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((input.expiration_in_seconds).into()),
        );
    }
}

pub fn serialize_structure_crate_input_create_studio_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateStudioInput,
) {
    if let Some(var_36) = &input.admin_role_arn {
        object.key("adminRoleArn").string(var_36);
    }
    if let Some(var_37) = &input.display_name {
        object.key("displayName").string(var_37);
    }
    if let Some(var_38) = &input.studio_encryption_configuration {
        let mut object_39 = object.key("studioEncryptionConfiguration").start_object();
        crate::json_ser::serialize_structure_crate_model_studio_encryption_configuration(
            &mut object_39,
            var_38,
        );
        object_39.finish();
    }
    if let Some(var_40) = &input.studio_name {
        object.key("studioName").string(var_40);
    }
    if let Some(var_41) = &input.tags {
        let mut object_42 = object.key("tags").start_object();
        for (key_43, value_44) in var_41 {
            {
                object_42.key(key_43).string(value_44);
            }
        }
        object_42.finish();
    }
    if let Some(var_45) = &input.user_role_arn {
        object.key("userRoleArn").string(var_45);
    }
}

pub fn serialize_structure_crate_input_create_studio_component_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateStudioComponentInput,
) {
    if let Some(var_46) = &input.configuration {
        let mut object_47 = object.key("configuration").start_object();
        crate::json_ser::serialize_structure_crate_model_studio_component_configuration(
            &mut object_47,
            var_46,
        );
        object_47.finish();
    }
    if let Some(var_48) = &input.description {
        object.key("description").string(var_48);
    }
    if let Some(var_49) = &input.ec2_security_group_ids {
        let mut array_50 = object.key("ec2SecurityGroupIds").start_array();
        for item_51 in var_49 {
            {
                array_50.value().string(item_51);
            }
        }
        array_50.finish();
    }
    if let Some(var_52) = &input.initialization_scripts {
        let mut array_53 = object.key("initializationScripts").start_array();
        for item_54 in var_52 {
            {
                let mut object_55 = array_53.value().start_object();
                crate::json_ser::serialize_structure_crate_model_studio_component_initialization_script(&mut object_55, item_54);
                object_55.finish();
            }
        }
        array_53.finish();
    }
    if let Some(var_56) = &input.name {
        object.key("name").string(var_56);
    }
    if let Some(var_57) = &input.script_parameters {
        let mut array_58 = object.key("scriptParameters").start_array();
        for item_59 in var_57 {
            {
                let mut object_60 = array_58.value().start_object();
                crate::json_ser::serialize_structure_crate_model_script_parameter_key_value(
                    &mut object_60,
                    item_59,
                );
                object_60.finish();
            }
        }
        array_58.finish();
    }
    if let Some(var_61) = &input.subtype {
        object.key("subtype").string(var_61.as_str());
    }
    if let Some(var_62) = &input.tags {
        let mut object_63 = object.key("tags").start_object();
        for (key_64, value_65) in var_62 {
            {
                object_63.key(key_64).string(value_65);
            }
        }
        object_63.finish();
    }
    if let Some(var_66) = &input.r#type {
        object.key("type").string(var_66.as_str());
    }
}

pub fn serialize_structure_crate_input_put_launch_profile_members_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::PutLaunchProfileMembersInput,
) {
    if let Some(var_67) = &input.identity_store_id {
        object.key("identityStoreId").string(var_67);
    }
    if let Some(var_68) = &input.members {
        let mut array_69 = object.key("members").start_array();
        for item_70 in var_68 {
            {
                let mut object_71 = array_69.value().start_object();
                crate::json_ser::serialize_structure_crate_model_new_launch_profile_member(
                    &mut object_71,
                    item_70,
                );
                object_71.finish();
            }
        }
        array_69.finish();
    }
}

pub fn serialize_structure_crate_input_put_studio_members_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::PutStudioMembersInput,
) {
    if let Some(var_72) = &input.identity_store_id {
        object.key("identityStoreId").string(var_72);
    }
    if let Some(var_73) = &input.members {
        let mut array_74 = object.key("members").start_array();
        for item_75 in var_73 {
            {
                let mut object_76 = array_74.value().start_object();
                crate::json_ser::serialize_structure_crate_model_new_studio_member(
                    &mut object_76,
                    item_75,
                );
                object_76.finish();
            }
        }
        array_74.finish();
    }
}

pub fn serialize_structure_crate_input_tag_resource_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::TagResourceInput,
) {
    if let Some(var_77) = &input.tags {
        let mut object_78 = object.key("tags").start_object();
        for (key_79, value_80) in var_77 {
            {
                object_78.key(key_79).string(value_80);
            }
        }
        object_78.finish();
    }
}

pub fn serialize_structure_crate_input_update_launch_profile_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateLaunchProfileInput,
) {
    if let Some(var_81) = &input.description {
        object.key("description").string(var_81);
    }
    if let Some(var_82) = &input.launch_profile_protocol_versions {
        let mut array_83 = object.key("launchProfileProtocolVersions").start_array();
        for item_84 in var_82 {
            {
                array_83.value().string(item_84);
            }
        }
        array_83.finish();
    }
    if let Some(var_85) = &input.name {
        object.key("name").string(var_85);
    }
    if let Some(var_86) = &input.stream_configuration {
        let mut object_87 = object.key("streamConfiguration").start_object();
        crate::json_ser::serialize_structure_crate_model_stream_configuration_create(
            &mut object_87,
            var_86,
        );
        object_87.finish();
    }
    if let Some(var_88) = &input.studio_component_ids {
        let mut array_89 = object.key("studioComponentIds").start_array();
        for item_90 in var_88 {
            {
                array_89.value().string(item_90);
            }
        }
        array_89.finish();
    }
}

pub fn serialize_structure_crate_input_update_launch_profile_member_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateLaunchProfileMemberInput,
) {
    if let Some(var_91) = &input.persona {
        object.key("persona").string(var_91.as_str());
    }
}

pub fn serialize_structure_crate_input_update_streaming_image_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateStreamingImageInput,
) {
    if let Some(var_92) = &input.description {
        object.key("description").string(var_92);
    }
    if let Some(var_93) = &input.name {
        object.key("name").string(var_93);
    }
}

pub fn serialize_structure_crate_input_update_studio_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateStudioInput,
) {
    if let Some(var_94) = &input.admin_role_arn {
        object.key("adminRoleArn").string(var_94);
    }
    if let Some(var_95) = &input.display_name {
        object.key("displayName").string(var_95);
    }
    if let Some(var_96) = &input.user_role_arn {
        object.key("userRoleArn").string(var_96);
    }
}

pub fn serialize_structure_crate_input_update_studio_component_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateStudioComponentInput,
) {
    if let Some(var_97) = &input.configuration {
        let mut object_98 = object.key("configuration").start_object();
        crate::json_ser::serialize_structure_crate_model_studio_component_configuration(
            &mut object_98,
            var_97,
        );
        object_98.finish();
    }
    if let Some(var_99) = &input.description {
        object.key("description").string(var_99);
    }
    if let Some(var_100) = &input.ec2_security_group_ids {
        let mut array_101 = object.key("ec2SecurityGroupIds").start_array();
        for item_102 in var_100 {
            {
                array_101.value().string(item_102);
            }
        }
        array_101.finish();
    }
    if let Some(var_103) = &input.initialization_scripts {
        let mut array_104 = object.key("initializationScripts").start_array();
        for item_105 in var_103 {
            {
                let mut object_106 = array_104.value().start_object();
                crate::json_ser::serialize_structure_crate_model_studio_component_initialization_script(&mut object_106, item_105);
                object_106.finish();
            }
        }
        array_104.finish();
    }
    if let Some(var_107) = &input.name {
        object.key("name").string(var_107);
    }
    if let Some(var_108) = &input.script_parameters {
        let mut array_109 = object.key("scriptParameters").start_array();
        for item_110 in var_108 {
            {
                let mut object_111 = array_109.value().start_object();
                crate::json_ser::serialize_structure_crate_model_script_parameter_key_value(
                    &mut object_111,
                    item_110,
                );
                object_111.finish();
            }
        }
        array_109.finish();
    }
    if let Some(var_112) = &input.subtype {
        object.key("subtype").string(var_112.as_str());
    }
    if let Some(var_113) = &input.r#type {
        object.key("type").string(var_113.as_str());
    }
}

pub fn serialize_structure_crate_model_stream_configuration_create(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::StreamConfigurationCreate,
) {
    if let Some(var_114) = &input.clipboard_mode {
        object.key("clipboardMode").string(var_114.as_str());
    }
    if let Some(var_115) = &input.ec2_instance_types {
        let mut array_116 = object.key("ec2InstanceTypes").start_array();
        for item_117 in var_115 {
            {
                array_116.value().string(item_117.as_str());
            }
        }
        array_116.finish();
    }
    if input.max_session_length_in_minutes != 0 {
        object.key("maxSessionLengthInMinutes").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((input.max_session_length_in_minutes).into()),
        );
    }
    if let Some(var_118) = &input.streaming_image_ids {
        let mut array_119 = object.key("streamingImageIds").start_array();
        for item_120 in var_118 {
            {
                array_119.value().string(item_120);
            }
        }
        array_119.finish();
    }
}

pub fn serialize_structure_crate_model_studio_encryption_configuration(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::StudioEncryptionConfiguration,
) {
    if let Some(var_121) = &input.key_arn {
        object.key("keyArn").string(var_121);
    }
    if let Some(var_122) = &input.key_type {
        object.key("keyType").string(var_122.as_str());
    }
}

pub fn serialize_structure_crate_model_studio_component_configuration(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::StudioComponentConfiguration,
) {
    if let Some(var_123) = &input.active_directory_configuration {
        let mut object_124 = object.key("activeDirectoryConfiguration").start_object();
        crate::json_ser::serialize_structure_crate_model_active_directory_configuration(
            &mut object_124,
            var_123,
        );
        object_124.finish();
    }
    if let Some(var_125) = &input.compute_farm_configuration {
        let mut object_126 = object.key("computeFarmConfiguration").start_object();
        crate::json_ser::serialize_structure_crate_model_compute_farm_configuration(
            &mut object_126,
            var_125,
        );
        object_126.finish();
    }
    if let Some(var_127) = &input.license_service_configuration {
        let mut object_128 = object.key("licenseServiceConfiguration").start_object();
        crate::json_ser::serialize_structure_crate_model_license_service_configuration(
            &mut object_128,
            var_127,
        );
        object_128.finish();
    }
    if let Some(var_129) = &input.shared_file_system_configuration {
        let mut object_130 = object.key("sharedFileSystemConfiguration").start_object();
        crate::json_ser::serialize_structure_crate_model_shared_file_system_configuration(
            &mut object_130,
            var_129,
        );
        object_130.finish();
    }
}

pub fn serialize_structure_crate_model_studio_component_initialization_script(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::StudioComponentInitializationScript,
) {
    if let Some(var_131) = &input.launch_profile_protocol_version {
        object.key("launchProfileProtocolVersion").string(var_131);
    }
    if let Some(var_132) = &input.platform {
        object.key("platform").string(var_132.as_str());
    }
    if let Some(var_133) = &input.run_context {
        object.key("runContext").string(var_133.as_str());
    }
    if let Some(var_134) = &input.script {
        object.key("script").string(var_134);
    }
}

pub fn serialize_structure_crate_model_script_parameter_key_value(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::ScriptParameterKeyValue,
) {
    if let Some(var_135) = &input.key {
        object.key("key").string(var_135);
    }
    if let Some(var_136) = &input.value {
        object.key("value").string(var_136);
    }
}

pub fn serialize_structure_crate_model_new_launch_profile_member(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::NewLaunchProfileMember,
) {
    if let Some(var_137) = &input.persona {
        object.key("persona").string(var_137.as_str());
    }
    if let Some(var_138) = &input.principal_id {
        object.key("principalId").string(var_138);
    }
}

pub fn serialize_structure_crate_model_new_studio_member(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::NewStudioMember,
) {
    if let Some(var_139) = &input.persona {
        object.key("persona").string(var_139.as_str());
    }
    if let Some(var_140) = &input.principal_id {
        object.key("principalId").string(var_140);
    }
}

pub fn serialize_structure_crate_model_active_directory_configuration(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::ActiveDirectoryConfiguration,
) {
    if let Some(var_141) = &input.computer_attributes {
        let mut array_142 = object.key("computerAttributes").start_array();
        for item_143 in var_141 {
            {
                let mut object_144 = array_142.value().start_object();
                crate::json_ser::serialize_structure_crate_model_active_directory_computer_attribute(&mut object_144, item_143);
                object_144.finish();
            }
        }
        array_142.finish();
    }
    if let Some(var_145) = &input.directory_id {
        object.key("directoryId").string(var_145);
    }
    if let Some(var_146) = &input.organizational_unit_distinguished_name {
        object
            .key("organizationalUnitDistinguishedName")
            .string(var_146);
    }
}

pub fn serialize_structure_crate_model_compute_farm_configuration(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::ComputeFarmConfiguration,
) {
    if let Some(var_147) = &input.active_directory_user {
        object.key("activeDirectoryUser").string(var_147);
    }
    if let Some(var_148) = &input.endpoint {
        object.key("endpoint").string(var_148);
    }
}

pub fn serialize_structure_crate_model_license_service_configuration(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::LicenseServiceConfiguration,
) {
    if let Some(var_149) = &input.endpoint {
        object.key("endpoint").string(var_149);
    }
}

pub fn serialize_structure_crate_model_shared_file_system_configuration(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::SharedFileSystemConfiguration,
) {
    if let Some(var_150) = &input.endpoint {
        object.key("endpoint").string(var_150);
    }
    if let Some(var_151) = &input.file_system_id {
        object.key("fileSystemId").string(var_151);
    }
    if let Some(var_152) = &input.linux_mount_point {
        object.key("linuxMountPoint").string(var_152);
    }
    if let Some(var_153) = &input.share_name {
        object.key("shareName").string(var_153);
    }
    if let Some(var_154) = &input.windows_mount_drive {
        object.key("windowsMountDrive").string(var_154);
    }
}

pub fn serialize_structure_crate_model_active_directory_computer_attribute(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::ActiveDirectoryComputerAttribute,
) {
    if let Some(var_155) = &input.name {
        object.key("name").string(var_155);
    }
    if let Some(var_156) = &input.value {
        object.key("value").string(var_156);
    }
}
