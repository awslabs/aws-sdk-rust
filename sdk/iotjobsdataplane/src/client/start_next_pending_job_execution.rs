// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`StartNextPendingJobExecution`](crate::operation::start_next_pending_job_execution::builders::StartNextPendingJobExecutionFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`thing_name(impl Into<String>)`](crate::operation::start_next_pending_job_execution::builders::StartNextPendingJobExecutionFluentBuilder::thing_name) / [`set_thing_name(Option<String>)`](crate::operation::start_next_pending_job_execution::builders::StartNextPendingJobExecutionFluentBuilder::set_thing_name): <p>The name of the thing associated with the device.</p>
    ///   - [`status_details(HashMap<String, String>)`](crate::operation::start_next_pending_job_execution::builders::StartNextPendingJobExecutionFluentBuilder::status_details) / [`set_status_details(Option<HashMap<String, String>>)`](crate::operation::start_next_pending_job_execution::builders::StartNextPendingJobExecutionFluentBuilder::set_status_details): <p>A collection of name/value pairs that describe the status of the job execution. If not specified, the statusDetails are unchanged.</p>
    ///   - [`step_timeout_in_minutes(i64)`](crate::operation::start_next_pending_job_execution::builders::StartNextPendingJobExecutionFluentBuilder::step_timeout_in_minutes) / [`set_step_timeout_in_minutes(Option<i64>)`](crate::operation::start_next_pending_job_execution::builders::StartNextPendingJobExecutionFluentBuilder::set_step_timeout_in_minutes): <p>Specifies the amount of time this device has to finish execution of this job. If the job execution status is not set to a terminal state before this timer expires, or before the timer is reset (by calling <code>UpdateJobExecution</code>, setting the status to <code>IN_PROGRESS</code> and specifying a new timeout value in field <code>stepTimeoutInMinutes</code>) the job execution status will be automatically set to <code>TIMED_OUT</code>. Note that setting this timeout has no effect on that job execution timeout which may have been specified when the job was created (<code>CreateJob</code> using field <code>timeoutConfig</code>).</p>
    /// - On success, responds with [`StartNextPendingJobExecutionOutput`](crate::operation::start_next_pending_job_execution::StartNextPendingJobExecutionOutput) with field(s):
    ///   - [`execution(Option<JobExecution>)`](crate::operation::start_next_pending_job_execution::StartNextPendingJobExecutionOutput::execution): <p>A JobExecution object.</p>
    /// - On failure, responds with [`SdkError<StartNextPendingJobExecutionError>`](crate::operation::start_next_pending_job_execution::StartNextPendingJobExecutionError)
    pub fn start_next_pending_job_execution(&self) -> crate::operation::start_next_pending_job_execution::builders::StartNextPendingJobExecutionFluentBuilder{
        crate::operation::start_next_pending_job_execution::builders::StartNextPendingJobExecutionFluentBuilder::new(self.handle.clone())
    }
}
