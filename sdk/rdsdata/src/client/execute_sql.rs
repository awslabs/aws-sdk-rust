// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ExecuteSql`](crate::operation::execute_sql::builders::ExecuteSqlFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`db_cluster_or_instance_arn(impl Into<String>)`](crate::operation::execute_sql::builders::ExecuteSqlFluentBuilder::db_cluster_or_instance_arn) / [`set_db_cluster_or_instance_arn(Option<String>)`](crate::operation::execute_sql::builders::ExecuteSqlFluentBuilder::set_db_cluster_or_instance_arn):<br>required: **true**<br><p>The ARN of the Aurora Serverless DB cluster.</p><br>
    ///   - [`aws_secret_store_arn(impl Into<String>)`](crate::operation::execute_sql::builders::ExecuteSqlFluentBuilder::aws_secret_store_arn) / [`set_aws_secret_store_arn(Option<String>)`](crate::operation::execute_sql::builders::ExecuteSqlFluentBuilder::set_aws_secret_store_arn):<br>required: **true**<br><p>The Amazon Resource Name (ARN) of the secret that enables access to the DB cluster. Enter the database user name and password for the credentials in the secret.</p>  <p>For information about creating the secret, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/create_database_secret.html">Create a database secret</a>.</p><br>
    ///   - [`sql_statements(impl Into<String>)`](crate::operation::execute_sql::builders::ExecuteSqlFluentBuilder::sql_statements) / [`set_sql_statements(Option<String>)`](crate::operation::execute_sql::builders::ExecuteSqlFluentBuilder::set_sql_statements):<br>required: **true**<br><p>One or more SQL statements to run on the DB cluster.</p>  <p>You can separate SQL statements from each other with a semicolon (;). Any valid SQL statement is permitted, including data definition, data manipulation, and commit statements. </p><br>
    ///   - [`database(impl Into<String>)`](crate::operation::execute_sql::builders::ExecuteSqlFluentBuilder::database) / [`set_database(Option<String>)`](crate::operation::execute_sql::builders::ExecuteSqlFluentBuilder::set_database):<br>required: **false**<br><p>The name of the database.</p><br>
    ///   - [`schema(impl Into<String>)`](crate::operation::execute_sql::builders::ExecuteSqlFluentBuilder::schema) / [`set_schema(Option<String>)`](crate::operation::execute_sql::builders::ExecuteSqlFluentBuilder::set_schema):<br>required: **false**<br><p>The name of the database schema.</p><br>
    /// - On success, responds with [`ExecuteSqlOutput`](crate::operation::execute_sql::ExecuteSqlOutput) with field(s):
    ///   - [`sql_statement_results(Option<Vec::<SqlStatementResult>>)`](crate::operation::execute_sql::ExecuteSqlOutput::sql_statement_results): <p>The results of the SQL statement or statements.</p>
    /// - On failure, responds with [`SdkError<ExecuteSqlError>`](crate::operation::execute_sql::ExecuteSqlError)
    #[deprecated(note = "The ExecuteSql API is deprecated, please use the ExecuteStatement API.", since = "2019-03-21")]
    pub fn execute_sql(&self) -> crate::operation::execute_sql::builders::ExecuteSqlFluentBuilder {
        crate::operation::execute_sql::builders::ExecuteSqlFluentBuilder::new(self.handle.clone())
    }
}
