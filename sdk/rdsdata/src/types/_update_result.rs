// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The response elements represent the results of an update.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct UpdateResult {
    /// <p>Values for fields generated during the request.</p>
    pub generated_fields: ::std::option::Option<::std::vec::Vec<crate::types::Field>>,
}
impl UpdateResult {
    /// <p>Values for fields generated during the request.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.generated_fields.is_none()`.
    pub fn generated_fields(&self) -> &[crate::types::Field] {
        self.generated_fields.as_deref().unwrap_or_default()
    }
}
impl UpdateResult {
    /// Creates a new builder-style object to manufacture [`UpdateResult`](crate::types::UpdateResult).
    pub fn builder() -> crate::types::builders::UpdateResultBuilder {
        crate::types::builders::UpdateResultBuilder::default()
    }
}

/// A builder for [`UpdateResult`](crate::types::UpdateResult).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct UpdateResultBuilder {
    pub(crate) generated_fields: ::std::option::Option<::std::vec::Vec<crate::types::Field>>,
}
impl UpdateResultBuilder {
    /// Appends an item to `generated_fields`.
    ///
    /// To override the contents of this collection use [`set_generated_fields`](Self::set_generated_fields).
    ///
    /// <p>Values for fields generated during the request.</p>
    pub fn generated_fields(mut self, input: crate::types::Field) -> Self {
        let mut v = self.generated_fields.unwrap_or_default();
        v.push(input);
        self.generated_fields = ::std::option::Option::Some(v);
        self
    }
    /// <p>Values for fields generated during the request.</p>
    pub fn set_generated_fields(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::Field>>) -> Self {
        self.generated_fields = input;
        self
    }
    /// <p>Values for fields generated during the request.</p>
    pub fn get_generated_fields(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::Field>> {
        &self.generated_fields
    }
    /// Consumes the builder and constructs a [`UpdateResult`](crate::types::UpdateResult).
    pub fn build(self) -> crate::types::UpdateResult {
        crate::types::UpdateResult {
            generated_fields: self.generated_fields,
        }
    }
}
