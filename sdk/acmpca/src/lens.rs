// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) fn reflens_list_certificate_authorities_output_next_token(
    input: &crate::operation::list_certificate_authorities::ListCertificateAuthoritiesOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_permissions_output_next_token(
    input: &crate::operation::list_permissions::ListPermissionsOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_tags_output_next_token(
    input: &crate::operation::list_tags::ListTagsOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn lens_list_certificate_authorities_output_certificate_authorities(
    input: crate::operation::list_certificate_authorities::ListCertificateAuthoritiesOutput,
) -> std::option::Option<std::vec::Vec<crate::types::CertificateAuthority>> {
    let input = match input.certificate_authorities {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn lens_list_permissions_output_permissions(
    input: crate::operation::list_permissions::ListPermissionsOutput,
) -> std::option::Option<std::vec::Vec<crate::types::Permission>> {
    let input = match input.permissions {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn lens_list_tags_output_tags(
    input: crate::operation::list_tags::ListTagsOutput,
) -> std::option::Option<std::vec::Vec<crate::types::Tag>> {
    let input = match input.tags {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}
