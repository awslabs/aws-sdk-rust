// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ImportCertificateAuthorityCertificate`](crate::operation::import_certificate_authority_certificate::builders::ImportCertificateAuthorityCertificateFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`certificate_authority_arn(impl Into<String>)`](crate::operation::import_certificate_authority_certificate::builders::ImportCertificateAuthorityCertificateFluentBuilder::certificate_authority_arn) / [`set_certificate_authority_arn(Option<String>)`](crate::operation::import_certificate_authority_certificate::builders::ImportCertificateAuthorityCertificateFluentBuilder::set_certificate_authority_arn): <p>The Amazon Resource Name (ARN) that was returned when you called <a href="https://docs.aws.amazon.com/privateca/latest/APIReference/API_CreateCertificateAuthority.html">CreateCertificateAuthority</a>. This must be of the form: </p>  <p> <code>arn:aws:acm-pca:<i>region</i>:<i>account</i>:certificate-authority/<i>12345678-1234-1234-1234-123456789012</i> </code> </p>
    ///   - [`certificate(Blob)`](crate::operation::import_certificate_authority_certificate::builders::ImportCertificateAuthorityCertificateFluentBuilder::certificate) / [`set_certificate(Option<Blob>)`](crate::operation::import_certificate_authority_certificate::builders::ImportCertificateAuthorityCertificateFluentBuilder::set_certificate): <p>The PEM-encoded certificate for a private CA. This may be a self-signed certificate in the case of a root CA, or it may be signed by another CA that you control.</p>
    ///   - [`certificate_chain(Blob)`](crate::operation::import_certificate_authority_certificate::builders::ImportCertificateAuthorityCertificateFluentBuilder::certificate_chain) / [`set_certificate_chain(Option<Blob>)`](crate::operation::import_certificate_authority_certificate::builders::ImportCertificateAuthorityCertificateFluentBuilder::set_certificate_chain): <p>A PEM-encoded file that contains all of your certificates, other than the certificate you're importing, chaining up to your root CA. Your Amazon Web Services Private CA-hosted or on-premises root certificate is the last in the chain, and each certificate in the chain signs the one preceding. </p>  <p>This parameter must be supplied when you import a subordinate CA. When you import a root CA, there is no chain.</p>
    /// - On success, responds with [`ImportCertificateAuthorityCertificateOutput`](crate::operation::import_certificate_authority_certificate::ImportCertificateAuthorityCertificateOutput)
    /// - On failure, responds with [`SdkError<ImportCertificateAuthorityCertificateError>`](crate::operation::import_certificate_authority_certificate::ImportCertificateAuthorityCertificateError)
    pub fn import_certificate_authority_certificate(&self) -> crate::operation::import_certificate_authority_certificate::builders::ImportCertificateAuthorityCertificateFluentBuilder{
        crate::operation::import_certificate_authority_certificate::builders::ImportCertificateAuthorityCertificateFluentBuilder::new(self.handle.clone())
    }
}
