// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Input to get a milestone.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GetMilestoneInput {
    /// <p>The ID assigned to the workload. This ID is unique within an Amazon Web Services Region.</p>
    pub workload_id: ::std::option::Option<::std::string::String>,
    /// <p>The milestone number.</p>
    /// <p>A workload can have a maximum of 100 milestones.</p>
    pub milestone_number: ::std::option::Option<i32>,
}
impl GetMilestoneInput {
    /// <p>The ID assigned to the workload. This ID is unique within an Amazon Web Services Region.</p>
    pub fn workload_id(&self) -> ::std::option::Option<&str> {
        self.workload_id.as_deref()
    }
    /// <p>The milestone number.</p>
    /// <p>A workload can have a maximum of 100 milestones.</p>
    pub fn milestone_number(&self) -> ::std::option::Option<i32> {
        self.milestone_number
    }
}
impl GetMilestoneInput {
    /// Creates a new builder-style object to manufacture [`GetMilestoneInput`](crate::operation::get_milestone::GetMilestoneInput).
    pub fn builder() -> crate::operation::get_milestone::builders::GetMilestoneInputBuilder {
        crate::operation::get_milestone::builders::GetMilestoneInputBuilder::default()
    }
}

/// A builder for [`GetMilestoneInput`](crate::operation::get_milestone::GetMilestoneInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct GetMilestoneInputBuilder {
    pub(crate) workload_id: ::std::option::Option<::std::string::String>,
    pub(crate) milestone_number: ::std::option::Option<i32>,
}
impl GetMilestoneInputBuilder {
    /// <p>The ID assigned to the workload. This ID is unique within an Amazon Web Services Region.</p>
    /// This field is required.
    pub fn workload_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.workload_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID assigned to the workload. This ID is unique within an Amazon Web Services Region.</p>
    pub fn set_workload_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.workload_id = input;
        self
    }
    /// <p>The ID assigned to the workload. This ID is unique within an Amazon Web Services Region.</p>
    pub fn get_workload_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.workload_id
    }
    /// <p>The milestone number.</p>
    /// <p>A workload can have a maximum of 100 milestones.</p>
    /// This field is required.
    pub fn milestone_number(mut self, input: i32) -> Self {
        self.milestone_number = ::std::option::Option::Some(input);
        self
    }
    /// <p>The milestone number.</p>
    /// <p>A workload can have a maximum of 100 milestones.</p>
    pub fn set_milestone_number(mut self, input: ::std::option::Option<i32>) -> Self {
        self.milestone_number = input;
        self
    }
    /// <p>The milestone number.</p>
    /// <p>A workload can have a maximum of 100 milestones.</p>
    pub fn get_milestone_number(&self) -> &::std::option::Option<i32> {
        &self.milestone_number
    }
    /// Consumes the builder and constructs a [`GetMilestoneInput`](crate::operation::get_milestone::GetMilestoneInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::get_milestone::GetMilestoneInput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::operation::get_milestone::GetMilestoneInput {
            workload_id: self.workload_id,
            milestone_number: self.milestone_number,
        })
    }
}
