// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct UpdateGlobalSettingsInput {
    /// <p>The status of organization sharing settings.</p>
    pub organization_sharing_status: ::std::option::Option<crate::types::OrganizationSharingStatus>,
    /// <p>The status of discovery support settings.</p>
    pub discovery_integration_status: ::std::option::Option<crate::types::DiscoveryIntegrationStatus>,
    /// <p>The status of Jira integration settings.</p>
    pub jira_configuration: ::std::option::Option<crate::types::AccountJiraConfigurationInput>,
}
impl UpdateGlobalSettingsInput {
    /// <p>The status of organization sharing settings.</p>
    pub fn organization_sharing_status(&self) -> ::std::option::Option<&crate::types::OrganizationSharingStatus> {
        self.organization_sharing_status.as_ref()
    }
    /// <p>The status of discovery support settings.</p>
    pub fn discovery_integration_status(&self) -> ::std::option::Option<&crate::types::DiscoveryIntegrationStatus> {
        self.discovery_integration_status.as_ref()
    }
    /// <p>The status of Jira integration settings.</p>
    pub fn jira_configuration(&self) -> ::std::option::Option<&crate::types::AccountJiraConfigurationInput> {
        self.jira_configuration.as_ref()
    }
}
impl UpdateGlobalSettingsInput {
    /// Creates a new builder-style object to manufacture [`UpdateGlobalSettingsInput`](crate::operation::update_global_settings::UpdateGlobalSettingsInput).
    pub fn builder() -> crate::operation::update_global_settings::builders::UpdateGlobalSettingsInputBuilder {
        crate::operation::update_global_settings::builders::UpdateGlobalSettingsInputBuilder::default()
    }
}

/// A builder for [`UpdateGlobalSettingsInput`](crate::operation::update_global_settings::UpdateGlobalSettingsInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct UpdateGlobalSettingsInputBuilder {
    pub(crate) organization_sharing_status: ::std::option::Option<crate::types::OrganizationSharingStatus>,
    pub(crate) discovery_integration_status: ::std::option::Option<crate::types::DiscoveryIntegrationStatus>,
    pub(crate) jira_configuration: ::std::option::Option<crate::types::AccountJiraConfigurationInput>,
}
impl UpdateGlobalSettingsInputBuilder {
    /// <p>The status of organization sharing settings.</p>
    pub fn organization_sharing_status(mut self, input: crate::types::OrganizationSharingStatus) -> Self {
        self.organization_sharing_status = ::std::option::Option::Some(input);
        self
    }
    /// <p>The status of organization sharing settings.</p>
    pub fn set_organization_sharing_status(mut self, input: ::std::option::Option<crate::types::OrganizationSharingStatus>) -> Self {
        self.organization_sharing_status = input;
        self
    }
    /// <p>The status of organization sharing settings.</p>
    pub fn get_organization_sharing_status(&self) -> &::std::option::Option<crate::types::OrganizationSharingStatus> {
        &self.organization_sharing_status
    }
    /// <p>The status of discovery support settings.</p>
    pub fn discovery_integration_status(mut self, input: crate::types::DiscoveryIntegrationStatus) -> Self {
        self.discovery_integration_status = ::std::option::Option::Some(input);
        self
    }
    /// <p>The status of discovery support settings.</p>
    pub fn set_discovery_integration_status(mut self, input: ::std::option::Option<crate::types::DiscoveryIntegrationStatus>) -> Self {
        self.discovery_integration_status = input;
        self
    }
    /// <p>The status of discovery support settings.</p>
    pub fn get_discovery_integration_status(&self) -> &::std::option::Option<crate::types::DiscoveryIntegrationStatus> {
        &self.discovery_integration_status
    }
    /// <p>The status of Jira integration settings.</p>
    pub fn jira_configuration(mut self, input: crate::types::AccountJiraConfigurationInput) -> Self {
        self.jira_configuration = ::std::option::Option::Some(input);
        self
    }
    /// <p>The status of Jira integration settings.</p>
    pub fn set_jira_configuration(mut self, input: ::std::option::Option<crate::types::AccountJiraConfigurationInput>) -> Self {
        self.jira_configuration = input;
        self
    }
    /// <p>The status of Jira integration settings.</p>
    pub fn get_jira_configuration(&self) -> &::std::option::Option<crate::types::AccountJiraConfigurationInput> {
        &self.jira_configuration
    }
    /// Consumes the builder and constructs a [`UpdateGlobalSettingsInput`](crate::operation::update_global_settings::UpdateGlobalSettingsInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::update_global_settings::UpdateGlobalSettingsInput, ::aws_smithy_types::error::operation::BuildError>
    {
        ::std::result::Result::Ok(crate::operation::update_global_settings::UpdateGlobalSettingsInput {
            organization_sharing_status: self.organization_sharing_status,
            discovery_integration_status: self.discovery_integration_status,
            jira_configuration: self.jira_configuration,
        })
    }
}
