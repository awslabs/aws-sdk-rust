// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Input to get a workload.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GetWorkloadInput {
    /// <p>The ID assigned to the workload. This ID is unique within an Amazon Web Services Region.</p>
    #[doc(hidden)]
    pub workload_id: std::option::Option<std::string::String>,
}
impl GetWorkloadInput {
    /// <p>The ID assigned to the workload. This ID is unique within an Amazon Web Services Region.</p>
    pub fn workload_id(&self) -> std::option::Option<&str> {
        self.workload_id.as_deref()
    }
}
impl GetWorkloadInput {
    /// Creates a new builder-style object to manufacture [`GetWorkloadInput`](crate::operation::get_workload::GetWorkloadInput).
    pub fn builder() -> crate::operation::get_workload::builders::GetWorkloadInputBuilder {
        crate::operation::get_workload::builders::GetWorkloadInputBuilder::default()
    }
}

/// A builder for [`GetWorkloadInput`](crate::operation::get_workload::GetWorkloadInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct GetWorkloadInputBuilder {
    pub(crate) workload_id: std::option::Option<std::string::String>,
}
impl GetWorkloadInputBuilder {
    /// <p>The ID assigned to the workload. This ID is unique within an Amazon Web Services Region.</p>
    pub fn workload_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.workload_id = Some(input.into());
        self
    }
    /// <p>The ID assigned to the workload. This ID is unique within an Amazon Web Services Region.</p>
    pub fn set_workload_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.workload_id = input;
        self
    }
    /// Consumes the builder and constructs a [`GetWorkloadInput`](crate::operation::get_workload::GetWorkloadInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::get_workload::GetWorkloadInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(crate::operation::get_workload::GetWorkloadInput {
            workload_id: self.workload_id,
        })
    }
}
