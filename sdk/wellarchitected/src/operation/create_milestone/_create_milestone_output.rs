// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Output of a create milestone call.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct CreateMilestoneOutput {
    /// <p>The ID assigned to the workload. This ID is unique within an Amazon Web Services Region.</p>
    #[doc(hidden)]
    pub workload_id: std::option::Option<std::string::String>,
    /// <p>The milestone number.</p>
    /// <p>A workload can have a maximum of 100 milestones.</p>
    #[doc(hidden)]
    pub milestone_number: i32,
    _request_id: Option<String>,
}
impl CreateMilestoneOutput {
    /// <p>The ID assigned to the workload. This ID is unique within an Amazon Web Services Region.</p>
    pub fn workload_id(&self) -> std::option::Option<&str> {
        self.workload_id.as_deref()
    }
    /// <p>The milestone number.</p>
    /// <p>A workload can have a maximum of 100 milestones.</p>
    pub fn milestone_number(&self) -> i32 {
        self.milestone_number
    }
}
impl aws_http::request_id::RequestId for CreateMilestoneOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl CreateMilestoneOutput {
    /// Creates a new builder-style object to manufacture [`CreateMilestoneOutput`](crate::operation::create_milestone::CreateMilestoneOutput).
    pub fn builder() -> crate::operation::create_milestone::builders::CreateMilestoneOutputBuilder {
        crate::operation::create_milestone::builders::CreateMilestoneOutputBuilder::default()
    }
}

/// A builder for [`CreateMilestoneOutput`](crate::operation::create_milestone::CreateMilestoneOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct CreateMilestoneOutputBuilder {
    pub(crate) workload_id: std::option::Option<std::string::String>,
    pub(crate) milestone_number: std::option::Option<i32>,
    _request_id: Option<String>,
}
impl CreateMilestoneOutputBuilder {
    /// <p>The ID assigned to the workload. This ID is unique within an Amazon Web Services Region.</p>
    pub fn workload_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.workload_id = Some(input.into());
        self
    }
    /// <p>The ID assigned to the workload. This ID is unique within an Amazon Web Services Region.</p>
    pub fn set_workload_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.workload_id = input;
        self
    }
    /// <p>The milestone number.</p>
    /// <p>A workload can have a maximum of 100 milestones.</p>
    pub fn milestone_number(mut self, input: i32) -> Self {
        self.milestone_number = Some(input);
        self
    }
    /// <p>The milestone number.</p>
    /// <p>A workload can have a maximum of 100 milestones.</p>
    pub fn set_milestone_number(mut self, input: std::option::Option<i32>) -> Self {
        self.milestone_number = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`CreateMilestoneOutput`](crate::operation::create_milestone::CreateMilestoneOutput).
    pub fn build(self) -> crate::operation::create_milestone::CreateMilestoneOutput {
        crate::operation::create_milestone::CreateMilestoneOutput {
            workload_id: self.workload_id,
            milestone_number: self.milestone_number.unwrap_or_default(),
            _request_id: self._request_id,
        }
    }
}
