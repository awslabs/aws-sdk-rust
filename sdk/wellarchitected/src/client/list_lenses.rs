// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListLenses`](crate::operation::list_lenses::builders::ListLensesFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::list_lenses::builders::ListLensesFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`next_token(impl Into<String>)`](crate::operation::list_lenses::builders::ListLensesFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::list_lenses::builders::ListLensesFluentBuilder::set_next_token): <p>The token to use to retrieve the next set of results.</p>
    ///   - [`max_results(i32)`](crate::operation::list_lenses::builders::ListLensesFluentBuilder::max_results) / [`set_max_results(i32)`](crate::operation::list_lenses::builders::ListLensesFluentBuilder::set_max_results): <p>The maximum number of results to return for this request.</p>
    ///   - [`lens_type(LensType)`](crate::operation::list_lenses::builders::ListLensesFluentBuilder::lens_type) / [`set_lens_type(Option<LensType>)`](crate::operation::list_lenses::builders::ListLensesFluentBuilder::set_lens_type): <p>The type of lenses to be returned.</p>
    ///   - [`lens_status(LensStatusType)`](crate::operation::list_lenses::builders::ListLensesFluentBuilder::lens_status) / [`set_lens_status(Option<LensStatusType>)`](crate::operation::list_lenses::builders::ListLensesFluentBuilder::set_lens_status): <p>The status of lenses to be returned.</p>
    ///   - [`lens_name(impl Into<String>)`](crate::operation::list_lenses::builders::ListLensesFluentBuilder::lens_name) / [`set_lens_name(Option<String>)`](crate::operation::list_lenses::builders::ListLensesFluentBuilder::set_lens_name): <p>The full name of the lens.</p>
    /// - On success, responds with [`ListLensesOutput`](crate::operation::list_lenses::ListLensesOutput) with field(s):
    ///   - [`lens_summaries(Option<Vec<LensSummary>>)`](crate::operation::list_lenses::ListLensesOutput::lens_summaries): <p>List of lens summaries of available lenses.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::list_lenses::ListLensesOutput::next_token): <p>The token to use to retrieve the next set of results.</p>
    /// - On failure, responds with [`SdkError<ListLensesError>`](crate::operation::list_lenses::ListLensesError)
    pub fn list_lenses(&self) -> crate::operation::list_lenses::builders::ListLensesFluentBuilder {
        crate::operation::list_lenses::builders::ListLensesFluentBuilder::new(self.handle.clone())
    }
}
