// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DisassociateLenses`](crate::operation::disassociate_lenses::builders::DisassociateLensesFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`workload_id(impl Into<String>)`](crate::operation::disassociate_lenses::builders::DisassociateLensesFluentBuilder::workload_id) / [`set_workload_id(Option<String>)`](crate::operation::disassociate_lenses::builders::DisassociateLensesFluentBuilder::set_workload_id):<br>required: **true**<br><p>The ID assigned to the workload. This ID is unique within an Amazon Web Services Region.</p><br>
    ///   - [`lens_aliases(impl Into<String>)`](crate::operation::disassociate_lenses::builders::DisassociateLensesFluentBuilder::lens_aliases) / [`set_lens_aliases(Option<Vec::<String>>)`](crate::operation::disassociate_lenses::builders::DisassociateLensesFluentBuilder::set_lens_aliases):<br>required: **true**<br><p>List of lens aliases to associate or disassociate with a workload. Up to 10 lenses can be specified.</p>  <p>Identify a lens using its <code>LensSummary$LensAlias</code>.</p><br>
    /// - On success, responds with [`DisassociateLensesOutput`](crate::operation::disassociate_lenses::DisassociateLensesOutput)
    /// - On failure, responds with [`SdkError<DisassociateLensesError>`](crate::operation::disassociate_lenses::DisassociateLensesError)
    pub fn disassociate_lenses(&self) -> crate::operation::disassociate_lenses::builders::DisassociateLensesFluentBuilder {
        crate::operation::disassociate_lenses::builders::DisassociateLensesFluentBuilder::new(self.handle.clone())
    }
}
