// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListAnswers`](crate::operation::list_answers::builders::ListAnswersFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::list_answers::builders::ListAnswersFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`workload_id(impl Into<String>)`](crate::operation::list_answers::builders::ListAnswersFluentBuilder::workload_id) / [`set_workload_id(Option<String>)`](crate::operation::list_answers::builders::ListAnswersFluentBuilder::set_workload_id):<br>required: **true**<br><p>The ID assigned to the workload. This ID is unique within an Amazon Web Services Region.</p><br>
    ///   - [`lens_alias(impl Into<String>)`](crate::operation::list_answers::builders::ListAnswersFluentBuilder::lens_alias) / [`set_lens_alias(Option<String>)`](crate::operation::list_answers::builders::ListAnswersFluentBuilder::set_lens_alias):<br>required: **true**<br><p>The alias of the lens.</p>  <p>For Amazon Web Services official lenses, this is either the lens alias, such as <code>serverless</code>, or the lens ARN, such as <code>arn:aws:wellarchitected:us-east-1::lens/serverless</code>. Note that some operations (such as ExportLens and CreateLensShare) are not permitted on Amazon Web Services official lenses.</p>  <p>For custom lenses, this is the lens ARN, such as <code>arn:aws:wellarchitected:us-west-2:123456789012:lens/0123456789abcdef01234567890abcdef</code>. </p>  <p>Each lens is identified by its <code>LensSummary$LensAlias</code>.</p><br>
    ///   - [`pillar_id(impl Into<String>)`](crate::operation::list_answers::builders::ListAnswersFluentBuilder::pillar_id) / [`set_pillar_id(Option<String>)`](crate::operation::list_answers::builders::ListAnswersFluentBuilder::set_pillar_id):<br>required: **false**<br><p>The ID used to identify a pillar, for example, <code>security</code>.</p>  <p>A pillar is identified by its <code>PillarReviewSummary$PillarId</code>.</p><br>
    ///   - [`milestone_number(i32)`](crate::operation::list_answers::builders::ListAnswersFluentBuilder::milestone_number) / [`set_milestone_number(Option<i32>)`](crate::operation::list_answers::builders::ListAnswersFluentBuilder::set_milestone_number):<br>required: **false**<br><p>The milestone number.</p>  <p>A workload can have a maximum of 100 milestones.</p><br>
    ///   - [`next_token(impl Into<String>)`](crate::operation::list_answers::builders::ListAnswersFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::list_answers::builders::ListAnswersFluentBuilder::set_next_token):<br>required: **false**<br><p>The token to use to retrieve the next set of results.</p><br>
    ///   - [`max_results(i32)`](crate::operation::list_answers::builders::ListAnswersFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::list_answers::builders::ListAnswersFluentBuilder::set_max_results):<br>required: **false**<br><p>The maximum number of results to return for this request.</p><br>
    ///   - [`question_priority(QuestionPriority)`](crate::operation::list_answers::builders::ListAnswersFluentBuilder::question_priority) / [`set_question_priority(Option<QuestionPriority>)`](crate::operation::list_answers::builders::ListAnswersFluentBuilder::set_question_priority):<br>required: **false**<br><p>The priority of the question.</p><br>
    /// - On success, responds with [`ListAnswersOutput`](crate::operation::list_answers::ListAnswersOutput) with field(s):
    ///   - [`workload_id(Option<String>)`](crate::operation::list_answers::ListAnswersOutput::workload_id): <p>The ID assigned to the workload. This ID is unique within an Amazon Web Services Region.</p>
    ///   - [`milestone_number(Option<i32>)`](crate::operation::list_answers::ListAnswersOutput::milestone_number): <p>The milestone number.</p>  <p>A workload can have a maximum of 100 milestones.</p>
    ///   - [`lens_alias(Option<String>)`](crate::operation::list_answers::ListAnswersOutput::lens_alias): <p>The alias of the lens.</p>  <p>For Amazon Web Services official lenses, this is either the lens alias, such as <code>serverless</code>, or the lens ARN, such as <code>arn:aws:wellarchitected:us-east-1::lens/serverless</code>. Note that some operations (such as ExportLens and CreateLensShare) are not permitted on Amazon Web Services official lenses.</p>  <p>For custom lenses, this is the lens ARN, such as <code>arn:aws:wellarchitected:us-west-2:123456789012:lens/0123456789abcdef01234567890abcdef</code>. </p>  <p>Each lens is identified by its <code>LensSummary$LensAlias</code>.</p>
    ///   - [`lens_arn(Option<String>)`](crate::operation::list_answers::ListAnswersOutput::lens_arn): <p>The ARN for the lens.</p>
    ///   - [`answer_summaries(Option<Vec::<AnswerSummary>>)`](crate::operation::list_answers::ListAnswersOutput::answer_summaries): <p>List of answer summaries of lens review in a workload.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::list_answers::ListAnswersOutput::next_token): <p>The token to use to retrieve the next set of results.</p>
    /// - On failure, responds with [`SdkError<ListAnswersError>`](crate::operation::list_answers::ListAnswersError)
    pub fn list_answers(&self) -> crate::operation::list_answers::builders::ListAnswersFluentBuilder {
        crate::operation::list_answers::builders::ListAnswersFluentBuilder::new(self.handle.clone())
    }
}
