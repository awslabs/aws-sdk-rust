// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateReviewTemplateLensReview`](crate::operation::update_review_template_lens_review::builders::UpdateReviewTemplateLensReviewFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`template_arn(impl Into<String>)`](crate::operation::update_review_template_lens_review::builders::UpdateReviewTemplateLensReviewFluentBuilder::template_arn) / [`set_template_arn(Option<String>)`](crate::operation::update_review_template_lens_review::builders::UpdateReviewTemplateLensReviewFluentBuilder::set_template_arn):<br>required: **true**<br><p>The review template ARN.</p><br>
    ///   - [`lens_alias(impl Into<String>)`](crate::operation::update_review_template_lens_review::builders::UpdateReviewTemplateLensReviewFluentBuilder::lens_alias) / [`set_lens_alias(Option<String>)`](crate::operation::update_review_template_lens_review::builders::UpdateReviewTemplateLensReviewFluentBuilder::set_lens_alias):<br>required: **true**<br><p>The alias of the lens.</p>  <p>For Amazon Web Services official lenses, this is either the lens alias, such as <code>serverless</code>, or the lens ARN, such as <code>arn:aws:wellarchitected:us-east-1::lens/serverless</code>. Note that some operations (such as ExportLens and CreateLensShare) are not permitted on Amazon Web Services official lenses.</p>  <p>For custom lenses, this is the lens ARN, such as <code>arn:aws:wellarchitected:us-west-2:123456789012:lens/0123456789abcdef01234567890abcdef</code>. </p>  <p>Each lens is identified by its <code>LensSummary$LensAlias</code>.</p><br>
    ///   - [`lens_notes(impl Into<String>)`](crate::operation::update_review_template_lens_review::builders::UpdateReviewTemplateLensReviewFluentBuilder::lens_notes) / [`set_lens_notes(Option<String>)`](crate::operation::update_review_template_lens_review::builders::UpdateReviewTemplateLensReviewFluentBuilder::set_lens_notes):<br>required: **false**<br><p>The notes associated with the workload.</p>  <p>For a review template, these are the notes that will be associated with the workload when the template is applied.</p><br>
    ///   - [`pillar_notes(impl Into<String>, impl Into<String>)`](crate::operation::update_review_template_lens_review::builders::UpdateReviewTemplateLensReviewFluentBuilder::pillar_notes) / [`set_pillar_notes(Option<HashMap::<String, String>>)`](crate::operation::update_review_template_lens_review::builders::UpdateReviewTemplateLensReviewFluentBuilder::set_pillar_notes):<br>required: **false**<br><p>List of pillar notes of a lens review in a workload.</p>  <p>For a review template, these are the notes that will be associated with the workload when the template is applied.</p><br>
    /// - On success, responds with [`UpdateReviewTemplateLensReviewOutput`](crate::operation::update_review_template_lens_review::UpdateReviewTemplateLensReviewOutput) with field(s):
    ///   - [`template_arn(Option<String>)`](crate::operation::update_review_template_lens_review::UpdateReviewTemplateLensReviewOutput::template_arn): <p>The review template ARN.</p>
    ///   - [`lens_review(Option<ReviewTemplateLensReview>)`](crate::operation::update_review_template_lens_review::UpdateReviewTemplateLensReviewOutput::lens_review): <p>A lens review of a question.</p>
    /// - On failure, responds with [`SdkError<UpdateReviewTemplateLensReviewError>`](crate::operation::update_review_template_lens_review::UpdateReviewTemplateLensReviewError)
    pub fn update_review_template_lens_review(
        &self,
    ) -> crate::operation::update_review_template_lens_review::builders::UpdateReviewTemplateLensReviewFluentBuilder {
        crate::operation::update_review_template_lens_review::builders::UpdateReviewTemplateLensReviewFluentBuilder::new(self.handle.clone())
    }
}
