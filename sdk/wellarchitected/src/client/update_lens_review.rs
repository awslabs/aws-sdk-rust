// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateLensReview`](crate::operation::update_lens_review::builders::UpdateLensReviewFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`workload_id(impl Into<String>)`](crate::operation::update_lens_review::builders::UpdateLensReviewFluentBuilder::workload_id) / [`set_workload_id(Option<String>)`](crate::operation::update_lens_review::builders::UpdateLensReviewFluentBuilder::set_workload_id): <p>The ID assigned to the workload. This ID is unique within an Amazon Web Services Region.</p>
    ///   - [`lens_alias(impl Into<String>)`](crate::operation::update_lens_review::builders::UpdateLensReviewFluentBuilder::lens_alias) / [`set_lens_alias(Option<String>)`](crate::operation::update_lens_review::builders::UpdateLensReviewFluentBuilder::set_lens_alias): <p>The alias of the lens.</p>  <p>For Amazon Web Services official lenses, this is either the lens alias, such as <code>serverless</code>, or the lens ARN, such as <code>arn:aws:wellarchitected:us-west-2::lens/serverless</code>.</p>  <p>For custom lenses, this is the lens ARN, such as <code>arn:aws:wellarchitected:us-east-1:123456789012:lens/my-lens</code>. </p>  <p>Each lens is identified by its <code>LensSummary$LensAlias</code>.</p>
    ///   - [`lens_notes(impl Into<String>)`](crate::operation::update_lens_review::builders::UpdateLensReviewFluentBuilder::lens_notes) / [`set_lens_notes(Option<String>)`](crate::operation::update_lens_review::builders::UpdateLensReviewFluentBuilder::set_lens_notes): <p>The notes associated with the workload.</p>
    ///   - [`pillar_notes(HashMap<String, String>)`](crate::operation::update_lens_review::builders::UpdateLensReviewFluentBuilder::pillar_notes) / [`set_pillar_notes(Option<HashMap<String, String>>)`](crate::operation::update_lens_review::builders::UpdateLensReviewFluentBuilder::set_pillar_notes): <p>List of pillar notes of a lens review in a workload.</p>
    /// - On success, responds with [`UpdateLensReviewOutput`](crate::operation::update_lens_review::UpdateLensReviewOutput) with field(s):
    ///   - [`workload_id(Option<String>)`](crate::operation::update_lens_review::UpdateLensReviewOutput::workload_id): <p>The ID assigned to the workload. This ID is unique within an Amazon Web Services Region.</p>
    ///   - [`lens_review(Option<LensReview>)`](crate::operation::update_lens_review::UpdateLensReviewOutput::lens_review): <p>A lens review of a question.</p>
    /// - On failure, responds with [`SdkError<UpdateLensReviewError>`](crate::operation::update_lens_review::UpdateLensReviewError)
    pub fn update_lens_review(
        &self,
    ) -> crate::operation::update_lens_review::builders::UpdateLensReviewFluentBuilder {
        crate::operation::update_lens_review::builders::UpdateLensReviewFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
