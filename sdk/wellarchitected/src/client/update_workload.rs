// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateWorkload`](crate::client::fluent_builders::UpdateWorkload) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`workload_id(impl Into<String>)`](crate::client::fluent_builders::UpdateWorkload::workload_id) / [`set_workload_id(Option<String>)`](crate::client::fluent_builders::UpdateWorkload::set_workload_id): <p>The ID assigned to the workload. This ID is unique within an Amazon Web Services Region.</p>
    ///   - [`workload_name(impl Into<String>)`](crate::client::fluent_builders::UpdateWorkload::workload_name) / [`set_workload_name(Option<String>)`](crate::client::fluent_builders::UpdateWorkload::set_workload_name): <p>The name of the workload.</p>  <p>The name must be unique within an account within an Amazon Web Services Region. Spaces and capitalization are ignored when checking for uniqueness.</p>
    ///   - [`description(impl Into<String>)`](crate::client::fluent_builders::UpdateWorkload::description) / [`set_description(Option<String>)`](crate::client::fluent_builders::UpdateWorkload::set_description): <p>The description for the workload.</p>
    ///   - [`environment(WorkloadEnvironment)`](crate::client::fluent_builders::UpdateWorkload::environment) / [`set_environment(Option<WorkloadEnvironment>)`](crate::client::fluent_builders::UpdateWorkload::set_environment): <p>The environment for the workload.</p>
    ///   - [`account_ids(Vec<String>)`](crate::client::fluent_builders::UpdateWorkload::account_ids) / [`set_account_ids(Option<Vec<String>>)`](crate::client::fluent_builders::UpdateWorkload::set_account_ids): <p>The list of Amazon Web Services account IDs associated with the workload.</p>
    ///   - [`aws_regions(Vec<String>)`](crate::client::fluent_builders::UpdateWorkload::aws_regions) / [`set_aws_regions(Option<Vec<String>>)`](crate::client::fluent_builders::UpdateWorkload::set_aws_regions): <p>The list of Amazon Web Services Regions associated with the workload, for example, <code>us-east-2</code>, or <code>ca-central-1</code>.</p>
    ///   - [`non_aws_regions(Vec<String>)`](crate::client::fluent_builders::UpdateWorkload::non_aws_regions) / [`set_non_aws_regions(Option<Vec<String>>)`](crate::client::fluent_builders::UpdateWorkload::set_non_aws_regions): <p> The list of non-Amazon Web Services Regions associated with the workload.</p>
    ///   - [`pillar_priorities(Vec<String>)`](crate::client::fluent_builders::UpdateWorkload::pillar_priorities) / [`set_pillar_priorities(Option<Vec<String>>)`](crate::client::fluent_builders::UpdateWorkload::set_pillar_priorities): <p>The priorities of the pillars, which are used to order items in the improvement plan. Each pillar is represented by its <code>PillarReviewSummary$PillarId</code>.</p>
    ///   - [`architectural_design(impl Into<String>)`](crate::client::fluent_builders::UpdateWorkload::architectural_design) / [`set_architectural_design(Option<String>)`](crate::client::fluent_builders::UpdateWorkload::set_architectural_design): <p>The URL of the architectural design for the workload.</p>
    ///   - [`review_owner(impl Into<String>)`](crate::client::fluent_builders::UpdateWorkload::review_owner) / [`set_review_owner(Option<String>)`](crate::client::fluent_builders::UpdateWorkload::set_review_owner): <p>The review owner of the workload. The name, email address, or identifier for the primary group or individual that owns the workload review process.</p>
    ///   - [`is_review_owner_update_acknowledged(bool)`](crate::client::fluent_builders::UpdateWorkload::is_review_owner_update_acknowledged) / [`set_is_review_owner_update_acknowledged(bool)`](crate::client::fluent_builders::UpdateWorkload::set_is_review_owner_update_acknowledged): <p>Flag indicating whether the workload owner has acknowledged that the <i>Review owner</i> field is required.</p>  <p>If a <b>Review owner</b> is not added to the workload within 60 days of acknowledgement, access to the workload is restricted until an owner is added.</p>
    ///   - [`industry_type(impl Into<String>)`](crate::client::fluent_builders::UpdateWorkload::industry_type) / [`set_industry_type(Option<String>)`](crate::client::fluent_builders::UpdateWorkload::set_industry_type): <p>The industry type for the workload.</p>  <p>If specified, must be one of the following:</p>  <ul>   <li> <p> <code>Agriculture</code> </p> </li>   <li> <p> <code>Automobile</code> </p> </li>   <li> <p> <code>Defense</code> </p> </li>   <li> <p> <code>Design and Engineering</code> </p> </li>   <li> <p> <code>Digital Advertising</code> </p> </li>   <li> <p> <code>Education</code> </p> </li>   <li> <p> <code>Environmental Protection</code> </p> </li>   <li> <p> <code>Financial Services</code> </p> </li>   <li> <p> <code>Gaming</code> </p> </li>   <li> <p> <code>General Public Services</code> </p> </li>   <li> <p> <code>Healthcare</code> </p> </li>   <li> <p> <code>Hospitality</code> </p> </li>   <li> <p> <code>InfoTech</code> </p> </li>   <li> <p> <code>Justice and Public Safety</code> </p> </li>   <li> <p> <code>Life Sciences</code> </p> </li>   <li> <p> <code>Manufacturing</code> </p> </li>   <li> <p> <code>Media &amp; Entertainment</code> </p> </li>   <li> <p> <code>Mining &amp; Resources</code> </p> </li>   <li> <p> <code>Oil &amp; Gas</code> </p> </li>   <li> <p> <code>Power &amp; Utilities</code> </p> </li>   <li> <p> <code>Professional Services</code> </p> </li>   <li> <p> <code>Real Estate &amp; Construction</code> </p> </li>   <li> <p> <code>Retail &amp; Wholesale</code> </p> </li>   <li> <p> <code>Social Protection</code> </p> </li>   <li> <p> <code>Telecommunications</code> </p> </li>   <li> <p> <code>Travel, Transportation &amp; Logistics</code> </p> </li>   <li> <p> <code>Other</code> </p> </li>  </ul>
    ///   - [`industry(impl Into<String>)`](crate::client::fluent_builders::UpdateWorkload::industry) / [`set_industry(Option<String>)`](crate::client::fluent_builders::UpdateWorkload::set_industry): <p>The industry for the workload.</p>
    ///   - [`notes(impl Into<String>)`](crate::client::fluent_builders::UpdateWorkload::notes) / [`set_notes(Option<String>)`](crate::client::fluent_builders::UpdateWorkload::set_notes): <p>The notes associated with the workload.</p>
    ///   - [`improvement_status(WorkloadImprovementStatus)`](crate::client::fluent_builders::UpdateWorkload::improvement_status) / [`set_improvement_status(Option<WorkloadImprovementStatus>)`](crate::client::fluent_builders::UpdateWorkload::set_improvement_status): <p>The improvement status for a workload.</p>
    ///   - [`discovery_config(WorkloadDiscoveryConfig)`](crate::client::fluent_builders::UpdateWorkload::discovery_config) / [`set_discovery_config(Option<WorkloadDiscoveryConfig>)`](crate::client::fluent_builders::UpdateWorkload::set_discovery_config): <p>Well-Architected discovery configuration settings to associate to the workload.</p>
    ///   - [`applications(Vec<String>)`](crate::client::fluent_builders::UpdateWorkload::applications) / [`set_applications(Option<Vec<String>>)`](crate::client::fluent_builders::UpdateWorkload::set_applications): <p>List of AppRegistry application ARNs to associate to the workload.</p>
    /// - On success, responds with [`UpdateWorkloadOutput`](crate::output::UpdateWorkloadOutput) with field(s):
    ///   - [`workload(Option<Workload>)`](crate::output::UpdateWorkloadOutput::workload): <p>A workload return object.</p>
    /// - On failure, responds with [`SdkError<UpdateWorkloadError>`](crate::error::UpdateWorkloadError)
    pub fn update_workload(&self) -> crate::client::fluent_builders::UpdateWorkload {
        crate::client::fluent_builders::UpdateWorkload::new(self.handle.clone())
    }
}
