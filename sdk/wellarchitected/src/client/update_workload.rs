// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateWorkload`](crate::operation::update_workload::builders::UpdateWorkloadFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`workload_id(impl Into<String>)`](crate::operation::update_workload::builders::UpdateWorkloadFluentBuilder::workload_id) / [`set_workload_id(Option<String>)`](crate::operation::update_workload::builders::UpdateWorkloadFluentBuilder::set_workload_id):<br>required: **true**<br><p>The ID assigned to the workload. This ID is unique within an Amazon Web Services Region.</p><br>
    ///   - [`workload_name(impl Into<String>)`](crate::operation::update_workload::builders::UpdateWorkloadFluentBuilder::workload_name) / [`set_workload_name(Option<String>)`](crate::operation::update_workload::builders::UpdateWorkloadFluentBuilder::set_workload_name):<br>required: **false**<br><p>The name of the workload.</p> <p>The name must be unique within an account within an Amazon Web Services Region. Spaces and capitalization are ignored when checking for uniqueness.</p><br>
    ///   - [`description(impl Into<String>)`](crate::operation::update_workload::builders::UpdateWorkloadFluentBuilder::description) / [`set_description(Option<String>)`](crate::operation::update_workload::builders::UpdateWorkloadFluentBuilder::set_description):<br>required: **false**<br><p>The description for the workload.</p><br>
    ///   - [`environment(WorkloadEnvironment)`](crate::operation::update_workload::builders::UpdateWorkloadFluentBuilder::environment) / [`set_environment(Option<WorkloadEnvironment>)`](crate::operation::update_workload::builders::UpdateWorkloadFluentBuilder::set_environment):<br>required: **false**<br><p>The environment for the workload.</p><br>
    ///   - [`account_ids(impl Into<String>)`](crate::operation::update_workload::builders::UpdateWorkloadFluentBuilder::account_ids) / [`set_account_ids(Option<Vec::<String>>)`](crate::operation::update_workload::builders::UpdateWorkloadFluentBuilder::set_account_ids):<br>required: **false**<br><p>The list of Amazon Web Services account IDs associated with the workload.</p><br>
    ///   - [`aws_regions(impl Into<String>)`](crate::operation::update_workload::builders::UpdateWorkloadFluentBuilder::aws_regions) / [`set_aws_regions(Option<Vec::<String>>)`](crate::operation::update_workload::builders::UpdateWorkloadFluentBuilder::set_aws_regions):<br>required: **false**<br><p>The list of Amazon Web Services Regions associated with the workload, for example, <code>us-east-2</code>, or <code>ca-central-1</code>.</p><br>
    ///   - [`non_aws_regions(impl Into<String>)`](crate::operation::update_workload::builders::UpdateWorkloadFluentBuilder::non_aws_regions) / [`set_non_aws_regions(Option<Vec::<String>>)`](crate::operation::update_workload::builders::UpdateWorkloadFluentBuilder::set_non_aws_regions):<br>required: **false**<br><p>The list of non-Amazon Web Services Regions associated with the workload.</p><br>
    ///   - [`pillar_priorities(impl Into<String>)`](crate::operation::update_workload::builders::UpdateWorkloadFluentBuilder::pillar_priorities) / [`set_pillar_priorities(Option<Vec::<String>>)`](crate::operation::update_workload::builders::UpdateWorkloadFluentBuilder::set_pillar_priorities):<br>required: **false**<br><p>The priorities of the pillars, which are used to order items in the improvement plan. Each pillar is represented by its <code>PillarReviewSummary$PillarId</code>.</p><br>
    ///   - [`architectural_design(impl Into<String>)`](crate::operation::update_workload::builders::UpdateWorkloadFluentBuilder::architectural_design) / [`set_architectural_design(Option<String>)`](crate::operation::update_workload::builders::UpdateWorkloadFluentBuilder::set_architectural_design):<br>required: **false**<br><p>The URL of the architectural design for the workload.</p><br>
    ///   - [`review_owner(impl Into<String>)`](crate::operation::update_workload::builders::UpdateWorkloadFluentBuilder::review_owner) / [`set_review_owner(Option<String>)`](crate::operation::update_workload::builders::UpdateWorkloadFluentBuilder::set_review_owner):<br>required: **false**<br><p>The review owner of the workload. The name, email address, or identifier for the primary group or individual that owns the workload review process.</p><br>
    ///   - [`is_review_owner_update_acknowledged(bool)`](crate::operation::update_workload::builders::UpdateWorkloadFluentBuilder::is_review_owner_update_acknowledged) / [`set_is_review_owner_update_acknowledged(Option<bool>)`](crate::operation::update_workload::builders::UpdateWorkloadFluentBuilder::set_is_review_owner_update_acknowledged):<br>required: **false**<br><p>Flag indicating whether the workload owner has acknowledged that the <i>Review owner</i> field is required.</p> <p>If a <b>Review owner</b> is not added to the workload within 60 days of acknowledgement, access to the workload is restricted until an owner is added.</p><br>
    ///   - [`industry_type(impl Into<String>)`](crate::operation::update_workload::builders::UpdateWorkloadFluentBuilder::industry_type) / [`set_industry_type(Option<String>)`](crate::operation::update_workload::builders::UpdateWorkloadFluentBuilder::set_industry_type):<br>required: **false**<br><p>The industry type for the workload.</p> <p>If specified, must be one of the following:</p> <ul>  <li>   <p><code>Agriculture</code></p></li>  <li>   <p><code>Automobile</code></p></li>  <li>   <p><code>Defense</code></p></li>  <li>   <p><code>Design and Engineering</code></p></li>  <li>   <p><code>Digital Advertising</code></p></li>  <li>   <p><code>Education</code></p></li>  <li>   <p><code>Environmental Protection</code></p></li>  <li>   <p><code>Financial Services</code></p></li>  <li>   <p><code>Gaming</code></p></li>  <li>   <p><code>General Public Services</code></p></li>  <li>   <p><code>Healthcare</code></p></li>  <li>   <p><code>Hospitality</code></p></li>  <li>   <p><code>InfoTech</code></p></li>  <li>   <p><code>Justice and Public Safety</code></p></li>  <li>   <p><code>Life Sciences</code></p></li>  <li>   <p><code>Manufacturing</code></p></li>  <li>   <p><code>Media &amp; Entertainment</code></p></li>  <li>   <p><code>Mining &amp; Resources</code></p></li>  <li>   <p><code>Oil &amp; Gas</code></p></li>  <li>   <p><code>Power &amp; Utilities</code></p></li>  <li>   <p><code>Professional Services</code></p></li>  <li>   <p><code>Real Estate &amp; Construction</code></p></li>  <li>   <p><code>Retail &amp; Wholesale</code></p></li>  <li>   <p><code>Social Protection</code></p></li>  <li>   <p><code>Telecommunications</code></p></li>  <li>   <p><code>Travel, Transportation &amp; Logistics</code></p></li>  <li>   <p><code>Other</code></p></li> </ul><br>
    ///   - [`industry(impl Into<String>)`](crate::operation::update_workload::builders::UpdateWorkloadFluentBuilder::industry) / [`set_industry(Option<String>)`](crate::operation::update_workload::builders::UpdateWorkloadFluentBuilder::set_industry):<br>required: **false**<br><p>The industry for the workload.</p><br>
    ///   - [`notes(impl Into<String>)`](crate::operation::update_workload::builders::UpdateWorkloadFluentBuilder::notes) / [`set_notes(Option<String>)`](crate::operation::update_workload::builders::UpdateWorkloadFluentBuilder::set_notes):<br>required: **false**<br><p>The notes associated with the workload.</p> <p>For a review template, these are the notes that will be associated with the workload when the template is applied.</p><br>
    ///   - [`improvement_status(WorkloadImprovementStatus)`](crate::operation::update_workload::builders::UpdateWorkloadFluentBuilder::improvement_status) / [`set_improvement_status(Option<WorkloadImprovementStatus>)`](crate::operation::update_workload::builders::UpdateWorkloadFluentBuilder::set_improvement_status):<br>required: **false**<br><p>The improvement status for a workload.</p><br>
    ///   - [`discovery_config(WorkloadDiscoveryConfig)`](crate::operation::update_workload::builders::UpdateWorkloadFluentBuilder::discovery_config) / [`set_discovery_config(Option<WorkloadDiscoveryConfig>)`](crate::operation::update_workload::builders::UpdateWorkloadFluentBuilder::set_discovery_config):<br>required: **false**<br><p>Well-Architected discovery configuration settings to associate to the workload.</p><br>
    ///   - [`applications(impl Into<String>)`](crate::operation::update_workload::builders::UpdateWorkloadFluentBuilder::applications) / [`set_applications(Option<Vec::<String>>)`](crate::operation::update_workload::builders::UpdateWorkloadFluentBuilder::set_applications):<br>required: **false**<br><p>List of AppRegistry application ARNs to associate to the workload.</p><br>
    ///   - [`jira_configuration(WorkloadJiraConfigurationInput)`](crate::operation::update_workload::builders::UpdateWorkloadFluentBuilder::jira_configuration) / [`set_jira_configuration(Option<WorkloadJiraConfigurationInput>)`](crate::operation::update_workload::builders::UpdateWorkloadFluentBuilder::set_jira_configuration):<br>required: **false**<br><p>Configuration of the Jira integration.</p><br>
    /// - On success, responds with [`UpdateWorkloadOutput`](crate::operation::update_workload::UpdateWorkloadOutput) with field(s):
    ///   - [`workload(Option<Workload>)`](crate::operation::update_workload::UpdateWorkloadOutput::workload): <p>A workload return object.</p>
    /// - On failure, responds with [`SdkError<UpdateWorkloadError>`](crate::operation::update_workload::UpdateWorkloadError)
    pub fn update_workload(&self) -> crate::operation::update_workload::builders::UpdateWorkloadFluentBuilder {
        crate::operation::update_workload::builders::UpdateWorkloadFluentBuilder::new(self.handle.clone())
    }
}
