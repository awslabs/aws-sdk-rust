// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetReviewTemplateAnswer`](crate::operation::get_review_template_answer::builders::GetReviewTemplateAnswerFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`template_arn(impl Into<String>)`](crate::operation::get_review_template_answer::builders::GetReviewTemplateAnswerFluentBuilder::template_arn) / [`set_template_arn(Option<String>)`](crate::operation::get_review_template_answer::builders::GetReviewTemplateAnswerFluentBuilder::set_template_arn):<br>required: **true**<br><p>The review template ARN.</p><br>
    ///   - [`lens_alias(impl Into<String>)`](crate::operation::get_review_template_answer::builders::GetReviewTemplateAnswerFluentBuilder::lens_alias) / [`set_lens_alias(Option<String>)`](crate::operation::get_review_template_answer::builders::GetReviewTemplateAnswerFluentBuilder::set_lens_alias):<br>required: **true**<br><p>The alias of the lens.</p>  <p>For Amazon Web Services official lenses, this is either the lens alias, such as <code>serverless</code>, or the lens ARN, such as <code>arn:aws:wellarchitected:us-east-1::lens/serverless</code>. Note that some operations (such as ExportLens and CreateLensShare) are not permitted on Amazon Web Services official lenses.</p>  <p>For custom lenses, this is the lens ARN, such as <code>arn:aws:wellarchitected:us-west-2:123456789012:lens/0123456789abcdef01234567890abcdef</code>. </p>  <p>Each lens is identified by its <code>LensSummary$LensAlias</code>.</p><br>
    ///   - [`question_id(impl Into<String>)`](crate::operation::get_review_template_answer::builders::GetReviewTemplateAnswerFluentBuilder::question_id) / [`set_question_id(Option<String>)`](crate::operation::get_review_template_answer::builders::GetReviewTemplateAnswerFluentBuilder::set_question_id):<br>required: **true**<br><p>The ID of the question.</p><br>
    /// - On success, responds with [`GetReviewTemplateAnswerOutput`](crate::operation::get_review_template_answer::GetReviewTemplateAnswerOutput) with field(s):
    ///   - [`template_arn(Option<String>)`](crate::operation::get_review_template_answer::GetReviewTemplateAnswerOutput::template_arn): <p>The review template ARN.</p>
    ///   - [`lens_alias(Option<String>)`](crate::operation::get_review_template_answer::GetReviewTemplateAnswerOutput::lens_alias): <p>The alias of the lens.</p>  <p>For Amazon Web Services official lenses, this is either the lens alias, such as <code>serverless</code>, or the lens ARN, such as <code>arn:aws:wellarchitected:us-east-1::lens/serverless</code>. Note that some operations (such as ExportLens and CreateLensShare) are not permitted on Amazon Web Services official lenses.</p>  <p>For custom lenses, this is the lens ARN, such as <code>arn:aws:wellarchitected:us-west-2:123456789012:lens/0123456789abcdef01234567890abcdef</code>. </p>  <p>Each lens is identified by its <code>LensSummary$LensAlias</code>.</p>
    ///   - [`answer(Option<ReviewTemplateAnswer>)`](crate::operation::get_review_template_answer::GetReviewTemplateAnswerOutput::answer): <p>An answer of the question.</p>
    /// - On failure, responds with [`SdkError<GetReviewTemplateAnswerError>`](crate::operation::get_review_template_answer::GetReviewTemplateAnswerError)
    pub fn get_review_template_answer(&self) -> crate::operation::get_review_template_answer::builders::GetReviewTemplateAnswerFluentBuilder {
        crate::operation::get_review_template_answer::builders::GetReviewTemplateAnswerFluentBuilder::new(self.handle.clone())
    }
}
