// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateWorkloadShare`](crate::operation::update_workload_share::builders::UpdateWorkloadShareFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`share_id(impl Into<String>)`](crate::operation::update_workload_share::builders::UpdateWorkloadShareFluentBuilder::share_id) / [`set_share_id(Option<String>)`](crate::operation::update_workload_share::builders::UpdateWorkloadShareFluentBuilder::set_share_id):<br>required: **true**<br><p>The ID associated with the share.</p><br>
    ///   - [`workload_id(impl Into<String>)`](crate::operation::update_workload_share::builders::UpdateWorkloadShareFluentBuilder::workload_id) / [`set_workload_id(Option<String>)`](crate::operation::update_workload_share::builders::UpdateWorkloadShareFluentBuilder::set_workload_id):<br>required: **true**<br><p>The ID assigned to the workload. This ID is unique within an Amazon Web Services Region.</p><br>
    ///   - [`permission_type(PermissionType)`](crate::operation::update_workload_share::builders::UpdateWorkloadShareFluentBuilder::permission_type) / [`set_permission_type(Option<PermissionType>)`](crate::operation::update_workload_share::builders::UpdateWorkloadShareFluentBuilder::set_permission_type):<br>required: **true**<br><p>Permission granted on a share request.</p><br>
    /// - On success, responds with [`UpdateWorkloadShareOutput`](crate::operation::update_workload_share::UpdateWorkloadShareOutput) with field(s):
    ///   - [`workload_id(Option<String>)`](crate::operation::update_workload_share::UpdateWorkloadShareOutput::workload_id): <p>The ID assigned to the workload. This ID is unique within an Amazon Web Services Region.</p>
    ///   - [`workload_share(Option<WorkloadShare>)`](crate::operation::update_workload_share::UpdateWorkloadShareOutput::workload_share): <p>A workload share return object.</p>
    /// - On failure, responds with [`SdkError<UpdateWorkloadShareError>`](crate::operation::update_workload_share::UpdateWorkloadShareError)
    pub fn update_workload_share(&self) -> crate::operation::update_workload_share::builders::UpdateWorkloadShareFluentBuilder {
        crate::operation::update_workload_share::builders::UpdateWorkloadShareFluentBuilder::new(self.handle.clone())
    }
}
