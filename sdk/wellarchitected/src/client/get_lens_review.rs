// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetLensReview`](crate::client::fluent_builders::GetLensReview) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`workload_id(impl Into<String>)`](crate::client::fluent_builders::GetLensReview::workload_id) / [`set_workload_id(Option<String>)`](crate::client::fluent_builders::GetLensReview::set_workload_id): <p>The ID assigned to the workload. This ID is unique within an Amazon Web Services Region.</p>
    ///   - [`lens_alias(impl Into<String>)`](crate::client::fluent_builders::GetLensReview::lens_alias) / [`set_lens_alias(Option<String>)`](crate::client::fluent_builders::GetLensReview::set_lens_alias): <p>The alias of the lens.</p>  <p>For Amazon Web Services official lenses, this is either the lens alias, such as <code>serverless</code>, or the lens ARN, such as <code>arn:aws:wellarchitected:us-west-2::lens/serverless</code>.</p>  <p>For custom lenses, this is the lens ARN, such as <code>arn:aws:wellarchitected:us-east-1:123456789012:lens/my-lens</code>. </p>  <p>Each lens is identified by its <code>LensSummary$LensAlias</code>.</p>
    ///   - [`milestone_number(i32)`](crate::client::fluent_builders::GetLensReview::milestone_number) / [`set_milestone_number(i32)`](crate::client::fluent_builders::GetLensReview::set_milestone_number): <p>The milestone number.</p>  <p>A workload can have a maximum of 100 milestones.</p>
    /// - On success, responds with [`GetLensReviewOutput`](crate::output::GetLensReviewOutput) with field(s):
    ///   - [`workload_id(Option<String>)`](crate::output::GetLensReviewOutput::workload_id): <p>The ID assigned to the workload. This ID is unique within an Amazon Web Services Region.</p>
    ///   - [`milestone_number(i32)`](crate::output::GetLensReviewOutput::milestone_number): <p>The milestone number.</p>  <p>A workload can have a maximum of 100 milestones.</p>
    ///   - [`lens_review(Option<LensReview>)`](crate::output::GetLensReviewOutput::lens_review): <p>A lens review of a question.</p>
    /// - On failure, responds with [`SdkError<GetLensReviewError>`](crate::error::GetLensReviewError)
    pub fn get_lens_review(&self) -> crate::client::fluent_builders::GetLensReview {
        crate::client::fluent_builders::GetLensReview::new(self.handle.clone())
    }
}
