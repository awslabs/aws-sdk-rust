// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateJobQueue`](crate::operation::update_job_queue::builders::UpdateJobQueueFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`job_queue(impl Into<String>)`](crate::operation::update_job_queue::builders::UpdateJobQueueFluentBuilder::job_queue) / [`set_job_queue(Option<String>)`](crate::operation::update_job_queue::builders::UpdateJobQueueFluentBuilder::set_job_queue): <p>The name or the Amazon Resource Name (ARN) of the job queue.</p>
    ///   - [`state(JqState)`](crate::operation::update_job_queue::builders::UpdateJobQueueFluentBuilder::state) / [`set_state(Option<JqState>)`](crate::operation::update_job_queue::builders::UpdateJobQueueFluentBuilder::set_state): <p>Describes the queue's ability to accept new jobs. If the job queue state is <code>ENABLED</code>, it can accept jobs. If the job queue state is <code>DISABLED</code>, new jobs can't be added to the queue, but jobs already in the queue can finish.</p>
    ///   - [`scheduling_policy_arn(impl Into<String>)`](crate::operation::update_job_queue::builders::UpdateJobQueueFluentBuilder::scheduling_policy_arn) / [`set_scheduling_policy_arn(Option<String>)`](crate::operation::update_job_queue::builders::UpdateJobQueueFluentBuilder::set_scheduling_policy_arn): <p>Amazon Resource Name (ARN) of the fair share scheduling policy. Once a job queue is created, the fair share scheduling policy can be replaced but not removed. The format is <code>aws:<i>Partition</i>:batch:<i>Region</i>:<i>Account</i>:scheduling-policy/<i>Name</i> </code>. For example, <code>aws:aws:batch:us-west-2:123456789012:scheduling-policy/MySchedulingPolicy</code>.</p>
    ///   - [`priority(i32)`](crate::operation::update_job_queue::builders::UpdateJobQueueFluentBuilder::priority) / [`set_priority(Option<i32>)`](crate::operation::update_job_queue::builders::UpdateJobQueueFluentBuilder::set_priority): <p>The priority of the job queue. Job queues with a higher priority (or a higher integer value for the <code>priority</code> parameter) are evaluated first when associated with the same compute environment. Priority is determined in descending order. For example, a job queue with a priority value of <code>10</code> is given scheduling preference over a job queue with a priority value of <code>1</code>. All of the compute environments must be either EC2 (<code>EC2</code> or <code>SPOT</code>) or Fargate (<code>FARGATE</code> or <code>FARGATE_SPOT</code>). EC2 and Fargate compute environments can't be mixed.</p>
    ///   - [`compute_environment_order(Vec<ComputeEnvironmentOrder>)`](crate::operation::update_job_queue::builders::UpdateJobQueueFluentBuilder::compute_environment_order) / [`set_compute_environment_order(Option<Vec<ComputeEnvironmentOrder>>)`](crate::operation::update_job_queue::builders::UpdateJobQueueFluentBuilder::set_compute_environment_order): <p>Details the set of compute environments mapped to a job queue and their order relative to each other. This is one of the parameters used by the job scheduler to determine which compute environment runs a given job. Compute environments must be in the <code>VALID</code> state before you can associate them with a job queue. All of the compute environments must be either EC2 (<code>EC2</code> or <code>SPOT</code>) or Fargate (<code>FARGATE</code> or <code>FARGATE_SPOT</code>). EC2 and Fargate compute environments can't be mixed.</p> <note>   <p>All compute environments that are associated with a job queue must share the same architecture. Batch doesn't support mixing compute environment architecture types in a single job queue.</p>  </note>
    /// - On success, responds with [`UpdateJobQueueOutput`](crate::operation::update_job_queue::UpdateJobQueueOutput) with field(s):
    ///   - [`job_queue_name(Option<String>)`](crate::operation::update_job_queue::UpdateJobQueueOutput::job_queue_name): <p>The name of the job queue.</p>
    ///   - [`job_queue_arn(Option<String>)`](crate::operation::update_job_queue::UpdateJobQueueOutput::job_queue_arn): <p>The Amazon Resource Name (ARN) of the job queue.</p>
    /// - On failure, responds with [`SdkError<UpdateJobQueueError>`](crate::operation::update_job_queue::UpdateJobQueueError)
    pub fn update_job_queue(
        &self,
    ) -> crate::operation::update_job_queue::builders::UpdateJobQueueFluentBuilder {
        crate::operation::update_job_queue::builders::UpdateJobQueueFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
