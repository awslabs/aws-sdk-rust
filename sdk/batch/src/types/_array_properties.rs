// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>An object that represents an Batch array job.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ArrayProperties {
    /// <p>The size of the array job.</p>
    #[doc(hidden)]
    pub size: std::option::Option<i32>,
}
impl ArrayProperties {
    /// <p>The size of the array job.</p>
    pub fn size(&self) -> std::option::Option<i32> {
        self.size
    }
}
impl ArrayProperties {
    /// Creates a new builder-style object to manufacture [`ArrayProperties`](crate::types::ArrayProperties).
    pub fn builder() -> crate::types::builders::ArrayPropertiesBuilder {
        crate::types::builders::ArrayPropertiesBuilder::default()
    }
}

/// A builder for [`ArrayProperties`](crate::types::ArrayProperties).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ArrayPropertiesBuilder {
    pub(crate) size: std::option::Option<i32>,
}
impl ArrayPropertiesBuilder {
    /// <p>The size of the array job.</p>
    pub fn size(mut self, input: i32) -> Self {
        self.size = Some(input);
        self
    }
    /// <p>The size of the array job.</p>
    pub fn set_size(mut self, input: std::option::Option<i32>) -> Self {
        self.size = input;
        self
    }
    /// Consumes the builder and constructs a [`ArrayProperties`](crate::types::ArrayProperties).
    pub fn build(self) -> crate::types::ArrayProperties {
        crate::types::ArrayProperties { size: self.size }
    }
}
