// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>An object that contains overrides for the Kubernetes pod properties of a job.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct EksPodPropertiesOverride {
    /// <p>The overrides for the container that's used on the Amazon EKS pod.</p>
    #[doc(hidden)]
    pub containers: std::option::Option<std::vec::Vec<crate::types::EksContainerOverride>>,
}
impl EksPodPropertiesOverride {
    /// <p>The overrides for the container that's used on the Amazon EKS pod.</p>
    pub fn containers(&self) -> std::option::Option<&[crate::types::EksContainerOverride]> {
        self.containers.as_deref()
    }
}
impl EksPodPropertiesOverride {
    /// Creates a new builder-style object to manufacture [`EksPodPropertiesOverride`](crate::types::EksPodPropertiesOverride).
    pub fn builder() -> crate::types::builders::EksPodPropertiesOverrideBuilder {
        crate::types::builders::EksPodPropertiesOverrideBuilder::default()
    }
}

/// A builder for [`EksPodPropertiesOverride`](crate::types::EksPodPropertiesOverride).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct EksPodPropertiesOverrideBuilder {
    pub(crate) containers: std::option::Option<std::vec::Vec<crate::types::EksContainerOverride>>,
}
impl EksPodPropertiesOverrideBuilder {
    /// Appends an item to `containers`.
    ///
    /// To override the contents of this collection use [`set_containers`](Self::set_containers).
    ///
    /// <p>The overrides for the container that's used on the Amazon EKS pod.</p>
    pub fn containers(mut self, input: crate::types::EksContainerOverride) -> Self {
        let mut v = self.containers.unwrap_or_default();
        v.push(input);
        self.containers = Some(v);
        self
    }
    /// <p>The overrides for the container that's used on the Amazon EKS pod.</p>
    pub fn set_containers(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::EksContainerOverride>>,
    ) -> Self {
        self.containers = input;
        self
    }
    /// Consumes the builder and constructs a [`EksPodPropertiesOverride`](crate::types::EksPodPropertiesOverride).
    pub fn build(self) -> crate::types::EksPodPropertiesOverride {
        crate::types::EksPodPropertiesOverride {
            containers: self.containers,
        }
    }
}
