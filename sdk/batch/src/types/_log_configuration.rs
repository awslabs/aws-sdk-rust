// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Log configuration options to send to a custom log driver for the container.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct LogConfiguration {
    /// <p>The log driver to use for the container. The valid values that are listed for this parameter are log drivers that the Amazon ECS container agent can communicate with by default.</p>
    /// <p>The supported log drivers are <code>awslogs</code>, <code>fluentd</code>, <code>gelf</code>, <code>json-file</code>, <code>journald</code>, <code>logentries</code>, <code>syslog</code>, and <code>splunk</code>.</p> <note>
    /// <p>Jobs that are running on Fargate resources are restricted to the <code>awslogs</code> and <code>splunk</code> log drivers.</p>
    /// </note>
    /// <dl>
    /// <dt>
    /// awslogs
    /// </dt>
    /// <dd>
    /// <p>Specifies the Amazon CloudWatch Logs logging driver. For more information, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/using_awslogs.html">Using the awslogs log driver</a> in the <i>Batch User Guide</i> and <a href="https://docs.docker.com/config/containers/logging/awslogs/">Amazon CloudWatch Logs logging driver</a> in the Docker documentation.</p>
    /// </dd>
    /// <dt>
    /// fluentd
    /// </dt>
    /// <dd>
    /// <p>Specifies the Fluentd logging driver. For more information including usage and options, see <a href="https://docs.docker.com/config/containers/logging/fluentd/">Fluentd logging driver</a> in the <i>Docker documentation</i>.</p>
    /// </dd>
    /// <dt>
    /// gelf
    /// </dt>
    /// <dd>
    /// <p>Specifies the Graylog Extended Format (GELF) logging driver. For more information including usage and options, see <a href="https://docs.docker.com/config/containers/logging/gelf/">Graylog Extended Format logging driver</a> in the <i>Docker documentation</i>.</p>
    /// </dd>
    /// <dt>
    /// journald
    /// </dt>
    /// <dd>
    /// <p>Specifies the journald logging driver. For more information including usage and options, see <a href="https://docs.docker.com/config/containers/logging/journald/">Journald logging driver</a> in the <i>Docker documentation</i>.</p>
    /// </dd>
    /// <dt>
    /// json-file
    /// </dt>
    /// <dd>
    /// <p>Specifies the JSON file logging driver. For more information including usage and options, see <a href="https://docs.docker.com/config/containers/logging/json-file/">JSON File logging driver</a> in the <i>Docker documentation</i>.</p>
    /// </dd>
    /// <dt>
    /// splunk
    /// </dt>
    /// <dd>
    /// <p>Specifies the Splunk logging driver. For more information including usage and options, see <a href="https://docs.docker.com/config/containers/logging/splunk/">Splunk logging driver</a> in the <i>Docker documentation</i>.</p>
    /// </dd>
    /// <dt>
    /// syslog
    /// </dt>
    /// <dd>
    /// <p>Specifies the syslog logging driver. For more information including usage and options, see <a href="https://docs.docker.com/config/containers/logging/syslog/">Syslog logging driver</a> in the <i>Docker documentation</i>.</p>
    /// </dd>
    /// </dl> <note>
    /// <p>If you have a custom driver that's not listed earlier that you want to work with the Amazon ECS container agent, you can fork the Amazon ECS container agent project that's <a href="https://github.com/aws/amazon-ecs-agent">available on GitHub</a> and customize it to work with that driver. We encourage you to submit pull requests for changes that you want to have included. However, Amazon Web Services doesn't currently support running modified copies of this software.</p>
    /// </note>
    /// <p>This parameter requires version 1.18 of the Docker Remote API or greater on your container instance. To check the Docker Remote API version on your container instance, log in to your container instance and run the following command: <code>sudo docker version | grep "Server API version"</code> </p>
    #[doc(hidden)]
    pub log_driver: std::option::Option<crate::types::LogDriver>,
    /// <p>The configuration options to send to the log driver. This parameter requires version 1.19 of the Docker Remote API or greater on your container instance. To check the Docker Remote API version on your container instance, log in to your container instance and run the following command: <code>sudo docker version | grep "Server API version"</code> </p>
    #[doc(hidden)]
    pub options:
        std::option::Option<std::collections::HashMap<std::string::String, std::string::String>>,
    /// <p>The secrets to pass to the log configuration. For more information, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/specifying-sensitive-data.html">Specifying sensitive data</a> in the <i>Batch User Guide</i>.</p>
    #[doc(hidden)]
    pub secret_options: std::option::Option<std::vec::Vec<crate::types::Secret>>,
}
impl LogConfiguration {
    /// <p>The log driver to use for the container. The valid values that are listed for this parameter are log drivers that the Amazon ECS container agent can communicate with by default.</p>
    /// <p>The supported log drivers are <code>awslogs</code>, <code>fluentd</code>, <code>gelf</code>, <code>json-file</code>, <code>journald</code>, <code>logentries</code>, <code>syslog</code>, and <code>splunk</code>.</p> <note>
    /// <p>Jobs that are running on Fargate resources are restricted to the <code>awslogs</code> and <code>splunk</code> log drivers.</p>
    /// </note>
    /// <dl>
    /// <dt>
    /// awslogs
    /// </dt>
    /// <dd>
    /// <p>Specifies the Amazon CloudWatch Logs logging driver. For more information, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/using_awslogs.html">Using the awslogs log driver</a> in the <i>Batch User Guide</i> and <a href="https://docs.docker.com/config/containers/logging/awslogs/">Amazon CloudWatch Logs logging driver</a> in the Docker documentation.</p>
    /// </dd>
    /// <dt>
    /// fluentd
    /// </dt>
    /// <dd>
    /// <p>Specifies the Fluentd logging driver. For more information including usage and options, see <a href="https://docs.docker.com/config/containers/logging/fluentd/">Fluentd logging driver</a> in the <i>Docker documentation</i>.</p>
    /// </dd>
    /// <dt>
    /// gelf
    /// </dt>
    /// <dd>
    /// <p>Specifies the Graylog Extended Format (GELF) logging driver. For more information including usage and options, see <a href="https://docs.docker.com/config/containers/logging/gelf/">Graylog Extended Format logging driver</a> in the <i>Docker documentation</i>.</p>
    /// </dd>
    /// <dt>
    /// journald
    /// </dt>
    /// <dd>
    /// <p>Specifies the journald logging driver. For more information including usage and options, see <a href="https://docs.docker.com/config/containers/logging/journald/">Journald logging driver</a> in the <i>Docker documentation</i>.</p>
    /// </dd>
    /// <dt>
    /// json-file
    /// </dt>
    /// <dd>
    /// <p>Specifies the JSON file logging driver. For more information including usage and options, see <a href="https://docs.docker.com/config/containers/logging/json-file/">JSON File logging driver</a> in the <i>Docker documentation</i>.</p>
    /// </dd>
    /// <dt>
    /// splunk
    /// </dt>
    /// <dd>
    /// <p>Specifies the Splunk logging driver. For more information including usage and options, see <a href="https://docs.docker.com/config/containers/logging/splunk/">Splunk logging driver</a> in the <i>Docker documentation</i>.</p>
    /// </dd>
    /// <dt>
    /// syslog
    /// </dt>
    /// <dd>
    /// <p>Specifies the syslog logging driver. For more information including usage and options, see <a href="https://docs.docker.com/config/containers/logging/syslog/">Syslog logging driver</a> in the <i>Docker documentation</i>.</p>
    /// </dd>
    /// </dl> <note>
    /// <p>If you have a custom driver that's not listed earlier that you want to work with the Amazon ECS container agent, you can fork the Amazon ECS container agent project that's <a href="https://github.com/aws/amazon-ecs-agent">available on GitHub</a> and customize it to work with that driver. We encourage you to submit pull requests for changes that you want to have included. However, Amazon Web Services doesn't currently support running modified copies of this software.</p>
    /// </note>
    /// <p>This parameter requires version 1.18 of the Docker Remote API or greater on your container instance. To check the Docker Remote API version on your container instance, log in to your container instance and run the following command: <code>sudo docker version | grep "Server API version"</code> </p>
    pub fn log_driver(&self) -> std::option::Option<&crate::types::LogDriver> {
        self.log_driver.as_ref()
    }
    /// <p>The configuration options to send to the log driver. This parameter requires version 1.19 of the Docker Remote API or greater on your container instance. To check the Docker Remote API version on your container instance, log in to your container instance and run the following command: <code>sudo docker version | grep "Server API version"</code> </p>
    pub fn options(
        &self,
    ) -> std::option::Option<&std::collections::HashMap<std::string::String, std::string::String>>
    {
        self.options.as_ref()
    }
    /// <p>The secrets to pass to the log configuration. For more information, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/specifying-sensitive-data.html">Specifying sensitive data</a> in the <i>Batch User Guide</i>.</p>
    pub fn secret_options(&self) -> std::option::Option<&[crate::types::Secret]> {
        self.secret_options.as_deref()
    }
}
impl LogConfiguration {
    /// Creates a new builder-style object to manufacture [`LogConfiguration`](crate::types::LogConfiguration).
    pub fn builder() -> crate::types::builders::LogConfigurationBuilder {
        crate::types::builders::LogConfigurationBuilder::default()
    }
}

/// A builder for [`LogConfiguration`](crate::types::LogConfiguration).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct LogConfigurationBuilder {
    pub(crate) log_driver: std::option::Option<crate::types::LogDriver>,
    pub(crate) options:
        std::option::Option<std::collections::HashMap<std::string::String, std::string::String>>,
    pub(crate) secret_options: std::option::Option<std::vec::Vec<crate::types::Secret>>,
}
impl LogConfigurationBuilder {
    /// <p>The log driver to use for the container. The valid values that are listed for this parameter are log drivers that the Amazon ECS container agent can communicate with by default.</p>
    /// <p>The supported log drivers are <code>awslogs</code>, <code>fluentd</code>, <code>gelf</code>, <code>json-file</code>, <code>journald</code>, <code>logentries</code>, <code>syslog</code>, and <code>splunk</code>.</p> <note>
    /// <p>Jobs that are running on Fargate resources are restricted to the <code>awslogs</code> and <code>splunk</code> log drivers.</p>
    /// </note>
    /// <dl>
    /// <dt>
    /// awslogs
    /// </dt>
    /// <dd>
    /// <p>Specifies the Amazon CloudWatch Logs logging driver. For more information, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/using_awslogs.html">Using the awslogs log driver</a> in the <i>Batch User Guide</i> and <a href="https://docs.docker.com/config/containers/logging/awslogs/">Amazon CloudWatch Logs logging driver</a> in the Docker documentation.</p>
    /// </dd>
    /// <dt>
    /// fluentd
    /// </dt>
    /// <dd>
    /// <p>Specifies the Fluentd logging driver. For more information including usage and options, see <a href="https://docs.docker.com/config/containers/logging/fluentd/">Fluentd logging driver</a> in the <i>Docker documentation</i>.</p>
    /// </dd>
    /// <dt>
    /// gelf
    /// </dt>
    /// <dd>
    /// <p>Specifies the Graylog Extended Format (GELF) logging driver. For more information including usage and options, see <a href="https://docs.docker.com/config/containers/logging/gelf/">Graylog Extended Format logging driver</a> in the <i>Docker documentation</i>.</p>
    /// </dd>
    /// <dt>
    /// journald
    /// </dt>
    /// <dd>
    /// <p>Specifies the journald logging driver. For more information including usage and options, see <a href="https://docs.docker.com/config/containers/logging/journald/">Journald logging driver</a> in the <i>Docker documentation</i>.</p>
    /// </dd>
    /// <dt>
    /// json-file
    /// </dt>
    /// <dd>
    /// <p>Specifies the JSON file logging driver. For more information including usage and options, see <a href="https://docs.docker.com/config/containers/logging/json-file/">JSON File logging driver</a> in the <i>Docker documentation</i>.</p>
    /// </dd>
    /// <dt>
    /// splunk
    /// </dt>
    /// <dd>
    /// <p>Specifies the Splunk logging driver. For more information including usage and options, see <a href="https://docs.docker.com/config/containers/logging/splunk/">Splunk logging driver</a> in the <i>Docker documentation</i>.</p>
    /// </dd>
    /// <dt>
    /// syslog
    /// </dt>
    /// <dd>
    /// <p>Specifies the syslog logging driver. For more information including usage and options, see <a href="https://docs.docker.com/config/containers/logging/syslog/">Syslog logging driver</a> in the <i>Docker documentation</i>.</p>
    /// </dd>
    /// </dl> <note>
    /// <p>If you have a custom driver that's not listed earlier that you want to work with the Amazon ECS container agent, you can fork the Amazon ECS container agent project that's <a href="https://github.com/aws/amazon-ecs-agent">available on GitHub</a> and customize it to work with that driver. We encourage you to submit pull requests for changes that you want to have included. However, Amazon Web Services doesn't currently support running modified copies of this software.</p>
    /// </note>
    /// <p>This parameter requires version 1.18 of the Docker Remote API or greater on your container instance. To check the Docker Remote API version on your container instance, log in to your container instance and run the following command: <code>sudo docker version | grep "Server API version"</code> </p>
    pub fn log_driver(mut self, input: crate::types::LogDriver) -> Self {
        self.log_driver = Some(input);
        self
    }
    /// <p>The log driver to use for the container. The valid values that are listed for this parameter are log drivers that the Amazon ECS container agent can communicate with by default.</p>
    /// <p>The supported log drivers are <code>awslogs</code>, <code>fluentd</code>, <code>gelf</code>, <code>json-file</code>, <code>journald</code>, <code>logentries</code>, <code>syslog</code>, and <code>splunk</code>.</p> <note>
    /// <p>Jobs that are running on Fargate resources are restricted to the <code>awslogs</code> and <code>splunk</code> log drivers.</p>
    /// </note>
    /// <dl>
    /// <dt>
    /// awslogs
    /// </dt>
    /// <dd>
    /// <p>Specifies the Amazon CloudWatch Logs logging driver. For more information, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/using_awslogs.html">Using the awslogs log driver</a> in the <i>Batch User Guide</i> and <a href="https://docs.docker.com/config/containers/logging/awslogs/">Amazon CloudWatch Logs logging driver</a> in the Docker documentation.</p>
    /// </dd>
    /// <dt>
    /// fluentd
    /// </dt>
    /// <dd>
    /// <p>Specifies the Fluentd logging driver. For more information including usage and options, see <a href="https://docs.docker.com/config/containers/logging/fluentd/">Fluentd logging driver</a> in the <i>Docker documentation</i>.</p>
    /// </dd>
    /// <dt>
    /// gelf
    /// </dt>
    /// <dd>
    /// <p>Specifies the Graylog Extended Format (GELF) logging driver. For more information including usage and options, see <a href="https://docs.docker.com/config/containers/logging/gelf/">Graylog Extended Format logging driver</a> in the <i>Docker documentation</i>.</p>
    /// </dd>
    /// <dt>
    /// journald
    /// </dt>
    /// <dd>
    /// <p>Specifies the journald logging driver. For more information including usage and options, see <a href="https://docs.docker.com/config/containers/logging/journald/">Journald logging driver</a> in the <i>Docker documentation</i>.</p>
    /// </dd>
    /// <dt>
    /// json-file
    /// </dt>
    /// <dd>
    /// <p>Specifies the JSON file logging driver. For more information including usage and options, see <a href="https://docs.docker.com/config/containers/logging/json-file/">JSON File logging driver</a> in the <i>Docker documentation</i>.</p>
    /// </dd>
    /// <dt>
    /// splunk
    /// </dt>
    /// <dd>
    /// <p>Specifies the Splunk logging driver. For more information including usage and options, see <a href="https://docs.docker.com/config/containers/logging/splunk/">Splunk logging driver</a> in the <i>Docker documentation</i>.</p>
    /// </dd>
    /// <dt>
    /// syslog
    /// </dt>
    /// <dd>
    /// <p>Specifies the syslog logging driver. For more information including usage and options, see <a href="https://docs.docker.com/config/containers/logging/syslog/">Syslog logging driver</a> in the <i>Docker documentation</i>.</p>
    /// </dd>
    /// </dl> <note>
    /// <p>If you have a custom driver that's not listed earlier that you want to work with the Amazon ECS container agent, you can fork the Amazon ECS container agent project that's <a href="https://github.com/aws/amazon-ecs-agent">available on GitHub</a> and customize it to work with that driver. We encourage you to submit pull requests for changes that you want to have included. However, Amazon Web Services doesn't currently support running modified copies of this software.</p>
    /// </note>
    /// <p>This parameter requires version 1.18 of the Docker Remote API or greater on your container instance. To check the Docker Remote API version on your container instance, log in to your container instance and run the following command: <code>sudo docker version | grep "Server API version"</code> </p>
    pub fn set_log_driver(mut self, input: std::option::Option<crate::types::LogDriver>) -> Self {
        self.log_driver = input;
        self
    }
    /// Adds a key-value pair to `options`.
    ///
    /// To override the contents of this collection use [`set_options`](Self::set_options).
    ///
    /// <p>The configuration options to send to the log driver. This parameter requires version 1.19 of the Docker Remote API or greater on your container instance. To check the Docker Remote API version on your container instance, log in to your container instance and run the following command: <code>sudo docker version | grep "Server API version"</code> </p>
    pub fn options(
        mut self,
        k: impl Into<std::string::String>,
        v: impl Into<std::string::String>,
    ) -> Self {
        let mut hash_map = self.options.unwrap_or_default();
        hash_map.insert(k.into(), v.into());
        self.options = Some(hash_map);
        self
    }
    /// <p>The configuration options to send to the log driver. This parameter requires version 1.19 of the Docker Remote API or greater on your container instance. To check the Docker Remote API version on your container instance, log in to your container instance and run the following command: <code>sudo docker version | grep "Server API version"</code> </p>
    pub fn set_options(
        mut self,
        input: std::option::Option<
            std::collections::HashMap<std::string::String, std::string::String>,
        >,
    ) -> Self {
        self.options = input;
        self
    }
    /// Appends an item to `secret_options`.
    ///
    /// To override the contents of this collection use [`set_secret_options`](Self::set_secret_options).
    ///
    /// <p>The secrets to pass to the log configuration. For more information, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/specifying-sensitive-data.html">Specifying sensitive data</a> in the <i>Batch User Guide</i>.</p>
    pub fn secret_options(mut self, input: crate::types::Secret) -> Self {
        let mut v = self.secret_options.unwrap_or_default();
        v.push(input);
        self.secret_options = Some(v);
        self
    }
    /// <p>The secrets to pass to the log configuration. For more information, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/specifying-sensitive-data.html">Specifying sensitive data</a> in the <i>Batch User Guide</i>.</p>
    pub fn set_secret_options(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::Secret>>,
    ) -> Self {
        self.secret_options = input;
        self
    }
    /// Consumes the builder and constructs a [`LogConfiguration`](crate::types::LogConfiguration).
    pub fn build(self) -> crate::types::LogConfiguration {
        crate::types::LogConfiguration {
            log_driver: self.log_driver,
            options: self.options,
            secret_options: self.secret_options,
        }
    }
}
