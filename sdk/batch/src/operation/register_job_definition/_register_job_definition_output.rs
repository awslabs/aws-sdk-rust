// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct RegisterJobDefinitionOutput {
    /// <p>The name of the job definition.</p>
    pub job_definition_name: ::std::option::Option<::std::string::String>,
    /// <p>The Amazon Resource Name (ARN) of the job definition.</p>
    pub job_definition_arn: ::std::option::Option<::std::string::String>,
    /// <p>The revision of the job definition.</p>
    pub revision: ::std::option::Option<i32>,
    _request_id: Option<String>,
}
impl RegisterJobDefinitionOutput {
    /// <p>The name of the job definition.</p>
    pub fn job_definition_name(&self) -> ::std::option::Option<&str> {
        self.job_definition_name.as_deref()
    }
    /// <p>The Amazon Resource Name (ARN) of the job definition.</p>
    pub fn job_definition_arn(&self) -> ::std::option::Option<&str> {
        self.job_definition_arn.as_deref()
    }
    /// <p>The revision of the job definition.</p>
    pub fn revision(&self) -> ::std::option::Option<i32> {
        self.revision
    }
}
impl ::aws_http::request_id::RequestId for RegisterJobDefinitionOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl RegisterJobDefinitionOutput {
    /// Creates a new builder-style object to manufacture [`RegisterJobDefinitionOutput`](crate::operation::register_job_definition::RegisterJobDefinitionOutput).
    pub fn builder() -> crate::operation::register_job_definition::builders::RegisterJobDefinitionOutputBuilder {
        crate::operation::register_job_definition::builders::RegisterJobDefinitionOutputBuilder::default()
    }
}

/// A builder for [`RegisterJobDefinitionOutput`](crate::operation::register_job_definition::RegisterJobDefinitionOutput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct RegisterJobDefinitionOutputBuilder {
    pub(crate) job_definition_name: ::std::option::Option<::std::string::String>,
    pub(crate) job_definition_arn: ::std::option::Option<::std::string::String>,
    pub(crate) revision: ::std::option::Option<i32>,
    _request_id: Option<String>,
}
impl RegisterJobDefinitionOutputBuilder {
    /// <p>The name of the job definition.</p>
    /// This field is required.
    pub fn job_definition_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.job_definition_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the job definition.</p>
    pub fn set_job_definition_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.job_definition_name = input;
        self
    }
    /// <p>The name of the job definition.</p>
    pub fn get_job_definition_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.job_definition_name
    }
    /// <p>The Amazon Resource Name (ARN) of the job definition.</p>
    /// This field is required.
    pub fn job_definition_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.job_definition_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the job definition.</p>
    pub fn set_job_definition_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.job_definition_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the job definition.</p>
    pub fn get_job_definition_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.job_definition_arn
    }
    /// <p>The revision of the job definition.</p>
    /// This field is required.
    pub fn revision(mut self, input: i32) -> Self {
        self.revision = ::std::option::Option::Some(input);
        self
    }
    /// <p>The revision of the job definition.</p>
    pub fn set_revision(mut self, input: ::std::option::Option<i32>) -> Self {
        self.revision = input;
        self
    }
    /// <p>The revision of the job definition.</p>
    pub fn get_revision(&self) -> &::std::option::Option<i32> {
        &self.revision
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`RegisterJobDefinitionOutput`](crate::operation::register_job_definition::RegisterJobDefinitionOutput).
    pub fn build(self) -> crate::operation::register_job_definition::RegisterJobDefinitionOutput {
        crate::operation::register_job_definition::RegisterJobDefinitionOutput {
            job_definition_name: self.job_definition_name,
            job_definition_arn: self.job_definition_arn,
            revision: self.revision,
            _request_id: self._request_id,
        }
    }
}
