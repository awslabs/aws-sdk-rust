// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_update_compute_environment_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::update_compute_environment::UpdateComputeEnvironmentInput,
) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    if let Some(var_1) = &input.compute_environment {
        object.key("computeEnvironment").string(var_1.as_str());
    }
    if let Some(var_2) = &input.compute_resources {
        #[allow(unused_mut)]
        let mut object_3 = object.key("computeResources").start_object();
        crate::protocol_serde::shape_compute_resource_update::ser_compute_resource_update(
            &mut object_3,
            var_2,
        )?;
        object_3.finish();
    }
    if let Some(var_4) = &input.service_role {
        object.key("serviceRole").string(var_4.as_str());
    }
    if let Some(var_5) = &input.state {
        object.key("state").string(var_5.as_str());
    }
    if let Some(var_6) = &input.unmanagedv_cpus {
        object.key("unmanagedvCpus").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_6).into()),
        );
    }
    if let Some(var_7) = &input.update_policy {
        #[allow(unused_mut)]
        let mut object_8 = object.key("updatePolicy").start_object();
        crate::protocol_serde::shape_update_policy::ser_update_policy(&mut object_8, var_7)?;
        object_8.finish();
    }
    Ok(())
}
