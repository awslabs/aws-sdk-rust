// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListContactLists`](crate::client::fluent_builders::ListContactLists) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListContactLists::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`page_size(i32)`](crate::client::fluent_builders::ListContactLists::page_size) / [`set_page_size(Option<i32>)`](crate::client::fluent_builders::ListContactLists::set_page_size): <p>Maximum number of contact lists to return at once. Use this parameter to paginate results. If additional contact lists exist beyond the specified limit, the <code>NextToken</code> element is sent in the response. Use the <code>NextToken</code> value in subsequent requests to retrieve additional lists.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListContactLists::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListContactLists::set_next_token): <p>A string token indicating that there might be additional contact lists available to be listed. Use the token provided in the Response to use in the subsequent call to ListContactLists with the same parameters to retrieve the next page of contact lists.</p>
    /// - On success, responds with [`ListContactListsOutput`](crate::output::ListContactListsOutput) with field(s):
    ///   - [`contact_lists(Option<Vec<ContactList>>)`](crate::output::ListContactListsOutput::contact_lists): <p>The available contact lists.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListContactListsOutput::next_token): <p>A string token indicating that there might be additional contact lists available to be listed. Copy this token to a subsequent call to <code>ListContactLists</code> with the same parameters to retrieve the next page of contact lists.</p>
    /// - On failure, responds with [`SdkError<ListContactListsError>`](crate::error::ListContactListsError)
    pub fn list_contact_lists(&self) -> crate::client::fluent_builders::ListContactLists {
        crate::client::fluent_builders::ListContactLists::new(self.handle.clone())
    }
}
