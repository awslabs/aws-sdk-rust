// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`PutDedicatedIpPoolScalingAttributes`](crate::operation::put_dedicated_ip_pool_scaling_attributes::builders::PutDedicatedIpPoolScalingAttributesFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`pool_name(impl Into<String>)`](crate::operation::put_dedicated_ip_pool_scaling_attributes::builders::PutDedicatedIpPoolScalingAttributesFluentBuilder::pool_name) / [`set_pool_name(Option<String>)`](crate::operation::put_dedicated_ip_pool_scaling_attributes::builders::PutDedicatedIpPoolScalingAttributesFluentBuilder::set_pool_name):<br>required: **true**<br><p>The name of the dedicated IP pool.</p><br>
    ///   - [`scaling_mode(ScalingMode)`](crate::operation::put_dedicated_ip_pool_scaling_attributes::builders::PutDedicatedIpPoolScalingAttributesFluentBuilder::scaling_mode) / [`set_scaling_mode(Option<ScalingMode>)`](crate::operation::put_dedicated_ip_pool_scaling_attributes::builders::PutDedicatedIpPoolScalingAttributesFluentBuilder::set_scaling_mode):<br>required: **true**<br><p>The scaling mode to apply to the dedicated IP pool.</p> <note>   <p>Changing the scaling mode from <code>MANAGED</code> to <code>STANDARD</code> is not supported.</p>  </note><br>
    /// - On success, responds with [`PutDedicatedIpPoolScalingAttributesOutput`](crate::operation::put_dedicated_ip_pool_scaling_attributes::PutDedicatedIpPoolScalingAttributesOutput)
    /// - On failure, responds with [`SdkError<PutDedicatedIpPoolScalingAttributesError>`](crate::operation::put_dedicated_ip_pool_scaling_attributes::PutDedicatedIpPoolScalingAttributesError)
    pub fn put_dedicated_ip_pool_scaling_attributes(
        &self,
    ) -> crate::operation::put_dedicated_ip_pool_scaling_attributes::builders::PutDedicatedIpPoolScalingAttributesFluentBuilder {
        crate::operation::put_dedicated_ip_pool_scaling_attributes::builders::PutDedicatedIpPoolScalingAttributesFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
