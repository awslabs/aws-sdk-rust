// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[doc(inline)]
pub use aws_smithy_client::Builder;
#[derive(Debug)]
pub(crate) struct Handle {
    pub(crate) client: aws_smithy_client::Client<
        aws_smithy_client::erase::DynConnector,
        aws_smithy_client::erase::DynMiddleware<aws_smithy_client::erase::DynConnector>,
    >,
    pub(crate) conf: crate::Config,
}

/// Client for Amazon Simple Email Service
///
/// Client for invoking operations on Amazon Simple Email Service. Each operation on Amazon Simple Email Service is a method on this
/// this struct. `.send()` MUST be invoked on the generated operations to dispatch the request to the service.
///
/// # Examples
/// **Constructing a client and invoking an operation**
/// ```rust,no_run
/// # async fn docs() {
///     // create a shared configuration. This can be used & shared between multiple service clients.
///     let shared_config = aws_config::load_from_env().await;
///     let client = aws_sdk_sesv2::Client::new(&shared_config);
///     // invoke an operation
///     /* let rsp = client
///         .<operation_name>().
///         .<param>("some value")
///         .send().await; */
/// # }
/// ```
/// **Constructing a client with custom configuration**
/// ```rust,no_run
/// use aws_config::retry::RetryConfig;
/// # async fn docs() {
/// let shared_config = aws_config::load_from_env().await;
/// let config = aws_sdk_sesv2::config::Builder::from(&shared_config)
///   .retry_config(RetryConfig::disabled())
///   .build();
/// let client = aws_sdk_sesv2::Client::from_conf(config);
/// # }
#[derive(std::fmt::Debug)]
pub struct Client {
    handle: std::sync::Arc<Handle>,
}

impl std::clone::Clone for Client {
    fn clone(&self) -> Self {
        Self {
            handle: self.handle.clone(),
        }
    }
}

impl
    From<
        aws_smithy_client::Client<
            aws_smithy_client::erase::DynConnector,
            aws_smithy_client::erase::DynMiddleware<aws_smithy_client::erase::DynConnector>,
        >,
    > for Client
{
    fn from(
        client: aws_smithy_client::Client<
            aws_smithy_client::erase::DynConnector,
            aws_smithy_client::erase::DynMiddleware<aws_smithy_client::erase::DynConnector>,
        >,
    ) -> Self {
        Self::with_config(client, crate::Config::builder().build())
    }
}

impl Client {
    /// Creates a client with the given service configuration.
    pub fn with_config(
        client: aws_smithy_client::Client<
            aws_smithy_client::erase::DynConnector,
            aws_smithy_client::erase::DynMiddleware<aws_smithy_client::erase::DynConnector>,
        >,
        conf: crate::Config,
    ) -> Self {
        Self {
            handle: std::sync::Arc::new(Handle { client, conf }),
        }
    }

    /// Returns the client's configuration.
    pub fn conf(&self) -> &crate::Config {
        &self.handle.conf
    }
}
impl Client {
    /// Constructs a fluent builder for the [`BatchGetMetricData`](crate::client::fluent_builders::BatchGetMetricData) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`queries(Vec<BatchGetMetricDataQuery>)`](crate::client::fluent_builders::BatchGetMetricData::queries) / [`set_queries(Option<Vec<BatchGetMetricDataQuery>>)`](crate::client::fluent_builders::BatchGetMetricData::set_queries): <p>A list of queries for metrics to be retrieved.</p>
    /// - On success, responds with [`BatchGetMetricDataOutput`](crate::output::BatchGetMetricDataOutput) with field(s):
    ///   - [`results(Option<Vec<MetricDataResult>>)`](crate::output::BatchGetMetricDataOutput::results): <p>A list of successfully retrieved <code>MetricDataResult</code>.</p>
    ///   - [`errors(Option<Vec<MetricDataError>>)`](crate::output::BatchGetMetricDataOutput::errors): <p>A list of <code>MetricDataError</code> encountered while processing your metric data batch request.</p>
    /// - On failure, responds with [`SdkError<BatchGetMetricDataError>`](crate::error::BatchGetMetricDataError)
    pub fn batch_get_metric_data(&self) -> crate::client::fluent_builders::BatchGetMetricData {
        crate::client::fluent_builders::BatchGetMetricData::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`CreateConfigurationSet`](crate::client::fluent_builders::CreateConfigurationSet) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`configuration_set_name(impl Into<String>)`](crate::client::fluent_builders::CreateConfigurationSet::configuration_set_name) / [`set_configuration_set_name(Option<String>)`](crate::client::fluent_builders::CreateConfigurationSet::set_configuration_set_name): <p>The name of the configuration set. The name can contain up to 64 alphanumeric characters, including letters, numbers, hyphens (-) and underscores (_) only.</p>
    ///   - [`tracking_options(TrackingOptions)`](crate::client::fluent_builders::CreateConfigurationSet::tracking_options) / [`set_tracking_options(Option<TrackingOptions>)`](crate::client::fluent_builders::CreateConfigurationSet::set_tracking_options): <p>An object that defines the open and click tracking options for emails that you send using the configuration set.</p>
    ///   - [`delivery_options(DeliveryOptions)`](crate::client::fluent_builders::CreateConfigurationSet::delivery_options) / [`set_delivery_options(Option<DeliveryOptions>)`](crate::client::fluent_builders::CreateConfigurationSet::set_delivery_options): <p>An object that defines the dedicated IP pool that is used to send emails that you send using the configuration set.</p>
    ///   - [`reputation_options(ReputationOptions)`](crate::client::fluent_builders::CreateConfigurationSet::reputation_options) / [`set_reputation_options(Option<ReputationOptions>)`](crate::client::fluent_builders::CreateConfigurationSet::set_reputation_options): <p>An object that defines whether or not Amazon SES collects reputation metrics for the emails that you send that use the configuration set.</p>
    ///   - [`sending_options(SendingOptions)`](crate::client::fluent_builders::CreateConfigurationSet::sending_options) / [`set_sending_options(Option<SendingOptions>)`](crate::client::fluent_builders::CreateConfigurationSet::set_sending_options): <p>An object that defines whether or not Amazon SES can send email that you send using the configuration set.</p>
    ///   - [`tags(Vec<Tag>)`](crate::client::fluent_builders::CreateConfigurationSet::tags) / [`set_tags(Option<Vec<Tag>>)`](crate::client::fluent_builders::CreateConfigurationSet::set_tags): <p>An array of objects that define the tags (keys and values) to associate with the configuration set.</p>
    ///   - [`suppression_options(SuppressionOptions)`](crate::client::fluent_builders::CreateConfigurationSet::suppression_options) / [`set_suppression_options(Option<SuppressionOptions>)`](crate::client::fluent_builders::CreateConfigurationSet::set_suppression_options): <p>An object that contains information about the suppression list preferences for your account.</p>
    ///   - [`vdm_options(VdmOptions)`](crate::client::fluent_builders::CreateConfigurationSet::vdm_options) / [`set_vdm_options(Option<VdmOptions>)`](crate::client::fluent_builders::CreateConfigurationSet::set_vdm_options): <p>An object that defines the VDM options for emails that you send using the configuration set.</p>
    /// - On success, responds with [`CreateConfigurationSetOutput`](crate::output::CreateConfigurationSetOutput)

    /// - On failure, responds with [`SdkError<CreateConfigurationSetError>`](crate::error::CreateConfigurationSetError)
    pub fn create_configuration_set(
        &self,
    ) -> crate::client::fluent_builders::CreateConfigurationSet {
        crate::client::fluent_builders::CreateConfigurationSet::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`CreateConfigurationSetEventDestination`](crate::client::fluent_builders::CreateConfigurationSetEventDestination) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`configuration_set_name(impl Into<String>)`](crate::client::fluent_builders::CreateConfigurationSetEventDestination::configuration_set_name) / [`set_configuration_set_name(Option<String>)`](crate::client::fluent_builders::CreateConfigurationSetEventDestination::set_configuration_set_name): <p>The name of the configuration set .</p>
    ///   - [`event_destination_name(impl Into<String>)`](crate::client::fluent_builders::CreateConfigurationSetEventDestination::event_destination_name) / [`set_event_destination_name(Option<String>)`](crate::client::fluent_builders::CreateConfigurationSetEventDestination::set_event_destination_name): <p>A name that identifies the event destination within the configuration set.</p>
    ///   - [`event_destination(EventDestinationDefinition)`](crate::client::fluent_builders::CreateConfigurationSetEventDestination::event_destination) / [`set_event_destination(Option<EventDestinationDefinition>)`](crate::client::fluent_builders::CreateConfigurationSetEventDestination::set_event_destination): <p>An object that defines the event destination.</p>
    /// - On success, responds with [`CreateConfigurationSetEventDestinationOutput`](crate::output::CreateConfigurationSetEventDestinationOutput)

    /// - On failure, responds with [`SdkError<CreateConfigurationSetEventDestinationError>`](crate::error::CreateConfigurationSetEventDestinationError)
    pub fn create_configuration_set_event_destination(
        &self,
    ) -> crate::client::fluent_builders::CreateConfigurationSetEventDestination {
        crate::client::fluent_builders::CreateConfigurationSetEventDestination::new(
            self.handle.clone(),
        )
    }
    /// Constructs a fluent builder for the [`CreateContact`](crate::client::fluent_builders::CreateContact) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`contact_list_name(impl Into<String>)`](crate::client::fluent_builders::CreateContact::contact_list_name) / [`set_contact_list_name(Option<String>)`](crate::client::fluent_builders::CreateContact::set_contact_list_name): <p>The name of the contact list to which the contact should be added.</p>
    ///   - [`email_address(impl Into<String>)`](crate::client::fluent_builders::CreateContact::email_address) / [`set_email_address(Option<String>)`](crate::client::fluent_builders::CreateContact::set_email_address): <p>The contact's email address.</p>
    ///   - [`topic_preferences(Vec<TopicPreference>)`](crate::client::fluent_builders::CreateContact::topic_preferences) / [`set_topic_preferences(Option<Vec<TopicPreference>>)`](crate::client::fluent_builders::CreateContact::set_topic_preferences): <p>The contact's preferences for being opted-in to or opted-out of topics.</p>
    ///   - [`unsubscribe_all(bool)`](crate::client::fluent_builders::CreateContact::unsubscribe_all) / [`set_unsubscribe_all(bool)`](crate::client::fluent_builders::CreateContact::set_unsubscribe_all): <p>A boolean value status noting if the contact is unsubscribed from all contact list topics.</p>
    ///   - [`attributes_data(impl Into<String>)`](crate::client::fluent_builders::CreateContact::attributes_data) / [`set_attributes_data(Option<String>)`](crate::client::fluent_builders::CreateContact::set_attributes_data): <p>The attribute data attached to a contact.</p>
    /// - On success, responds with [`CreateContactOutput`](crate::output::CreateContactOutput)

    /// - On failure, responds with [`SdkError<CreateContactError>`](crate::error::CreateContactError)
    pub fn create_contact(&self) -> crate::client::fluent_builders::CreateContact {
        crate::client::fluent_builders::CreateContact::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`CreateContactList`](crate::client::fluent_builders::CreateContactList) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`contact_list_name(impl Into<String>)`](crate::client::fluent_builders::CreateContactList::contact_list_name) / [`set_contact_list_name(Option<String>)`](crate::client::fluent_builders::CreateContactList::set_contact_list_name): <p>The name of the contact list.</p>
    ///   - [`topics(Vec<Topic>)`](crate::client::fluent_builders::CreateContactList::topics) / [`set_topics(Option<Vec<Topic>>)`](crate::client::fluent_builders::CreateContactList::set_topics): <p>An interest group, theme, or label within a list. A contact list can have multiple topics.</p>
    ///   - [`description(impl Into<String>)`](crate::client::fluent_builders::CreateContactList::description) / [`set_description(Option<String>)`](crate::client::fluent_builders::CreateContactList::set_description): <p>A description of what the contact list is about.</p>
    ///   - [`tags(Vec<Tag>)`](crate::client::fluent_builders::CreateContactList::tags) / [`set_tags(Option<Vec<Tag>>)`](crate::client::fluent_builders::CreateContactList::set_tags): <p>The tags associated with a contact list.</p>
    /// - On success, responds with [`CreateContactListOutput`](crate::output::CreateContactListOutput)

    /// - On failure, responds with [`SdkError<CreateContactListError>`](crate::error::CreateContactListError)
    pub fn create_contact_list(&self) -> crate::client::fluent_builders::CreateContactList {
        crate::client::fluent_builders::CreateContactList::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`CreateCustomVerificationEmailTemplate`](crate::client::fluent_builders::CreateCustomVerificationEmailTemplate) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`template_name(impl Into<String>)`](crate::client::fluent_builders::CreateCustomVerificationEmailTemplate::template_name) / [`set_template_name(Option<String>)`](crate::client::fluent_builders::CreateCustomVerificationEmailTemplate::set_template_name): <p>The name of the custom verification email template.</p>
    ///   - [`from_email_address(impl Into<String>)`](crate::client::fluent_builders::CreateCustomVerificationEmailTemplate::from_email_address) / [`set_from_email_address(Option<String>)`](crate::client::fluent_builders::CreateCustomVerificationEmailTemplate::set_from_email_address): <p>The email address that the custom verification email is sent from.</p>
    ///   - [`template_subject(impl Into<String>)`](crate::client::fluent_builders::CreateCustomVerificationEmailTemplate::template_subject) / [`set_template_subject(Option<String>)`](crate::client::fluent_builders::CreateCustomVerificationEmailTemplate::set_template_subject): <p>The subject line of the custom verification email.</p>
    ///   - [`template_content(impl Into<String>)`](crate::client::fluent_builders::CreateCustomVerificationEmailTemplate::template_content) / [`set_template_content(Option<String>)`](crate::client::fluent_builders::CreateCustomVerificationEmailTemplate::set_template_content): <p>The content of the custom verification email. The total size of the email must be less than 10 MB. The message body may contain HTML, with some limitations. For more information, see <a href="https://docs.aws.amazon.com/ses/latest/dg/creating-identities.html#send-email-verify-address-custom-faq">Custom verification email frequently asked questions</a> in the <i>Amazon SES Developer Guide</i>.</p>
    ///   - [`success_redirection_url(impl Into<String>)`](crate::client::fluent_builders::CreateCustomVerificationEmailTemplate::success_redirection_url) / [`set_success_redirection_url(Option<String>)`](crate::client::fluent_builders::CreateCustomVerificationEmailTemplate::set_success_redirection_url): <p>The URL that the recipient of the verification email is sent to if his or her address is successfully verified.</p>
    ///   - [`failure_redirection_url(impl Into<String>)`](crate::client::fluent_builders::CreateCustomVerificationEmailTemplate::failure_redirection_url) / [`set_failure_redirection_url(Option<String>)`](crate::client::fluent_builders::CreateCustomVerificationEmailTemplate::set_failure_redirection_url): <p>The URL that the recipient of the verification email is sent to if his or her address is not successfully verified.</p>
    /// - On success, responds with [`CreateCustomVerificationEmailTemplateOutput`](crate::output::CreateCustomVerificationEmailTemplateOutput)

    /// - On failure, responds with [`SdkError<CreateCustomVerificationEmailTemplateError>`](crate::error::CreateCustomVerificationEmailTemplateError)
    pub fn create_custom_verification_email_template(
        &self,
    ) -> crate::client::fluent_builders::CreateCustomVerificationEmailTemplate {
        crate::client::fluent_builders::CreateCustomVerificationEmailTemplate::new(
            self.handle.clone(),
        )
    }
    /// Constructs a fluent builder for the [`CreateDedicatedIpPool`](crate::client::fluent_builders::CreateDedicatedIpPool) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`pool_name(impl Into<String>)`](crate::client::fluent_builders::CreateDedicatedIpPool::pool_name) / [`set_pool_name(Option<String>)`](crate::client::fluent_builders::CreateDedicatedIpPool::set_pool_name): <p>The name of the dedicated IP pool.</p>
    ///   - [`tags(Vec<Tag>)`](crate::client::fluent_builders::CreateDedicatedIpPool::tags) / [`set_tags(Option<Vec<Tag>>)`](crate::client::fluent_builders::CreateDedicatedIpPool::set_tags): <p>An object that defines the tags (keys and values) that you want to associate with the pool.</p>
    ///   - [`scaling_mode(ScalingMode)`](crate::client::fluent_builders::CreateDedicatedIpPool::scaling_mode) / [`set_scaling_mode(Option<ScalingMode>)`](crate::client::fluent_builders::CreateDedicatedIpPool::set_scaling_mode): <p>The type of scaling mode.</p>
    /// - On success, responds with [`CreateDedicatedIpPoolOutput`](crate::output::CreateDedicatedIpPoolOutput)

    /// - On failure, responds with [`SdkError<CreateDedicatedIpPoolError>`](crate::error::CreateDedicatedIpPoolError)
    pub fn create_dedicated_ip_pool(
        &self,
    ) -> crate::client::fluent_builders::CreateDedicatedIpPool {
        crate::client::fluent_builders::CreateDedicatedIpPool::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`CreateDeliverabilityTestReport`](crate::client::fluent_builders::CreateDeliverabilityTestReport) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`report_name(impl Into<String>)`](crate::client::fluent_builders::CreateDeliverabilityTestReport::report_name) / [`set_report_name(Option<String>)`](crate::client::fluent_builders::CreateDeliverabilityTestReport::set_report_name): <p>A unique name that helps you to identify the predictive inbox placement test when you retrieve the results.</p>
    ///   - [`from_email_address(impl Into<String>)`](crate::client::fluent_builders::CreateDeliverabilityTestReport::from_email_address) / [`set_from_email_address(Option<String>)`](crate::client::fluent_builders::CreateDeliverabilityTestReport::set_from_email_address): <p>The email address that the predictive inbox placement test email was sent from.</p>
    ///   - [`content(EmailContent)`](crate::client::fluent_builders::CreateDeliverabilityTestReport::content) / [`set_content(Option<EmailContent>)`](crate::client::fluent_builders::CreateDeliverabilityTestReport::set_content): <p>The HTML body of the message that you sent when you performed the predictive inbox placement test.</p>
    ///   - [`tags(Vec<Tag>)`](crate::client::fluent_builders::CreateDeliverabilityTestReport::tags) / [`set_tags(Option<Vec<Tag>>)`](crate::client::fluent_builders::CreateDeliverabilityTestReport::set_tags): <p>An array of objects that define the tags (keys and values) that you want to associate with the predictive inbox placement test.</p>
    /// - On success, responds with [`CreateDeliverabilityTestReportOutput`](crate::output::CreateDeliverabilityTestReportOutput) with field(s):
    ///   - [`report_id(Option<String>)`](crate::output::CreateDeliverabilityTestReportOutput::report_id): <p>A unique string that identifies the predictive inbox placement test.</p>
    ///   - [`deliverability_test_status(Option<DeliverabilityTestStatus>)`](crate::output::CreateDeliverabilityTestReportOutput::deliverability_test_status): <p>The status of the predictive inbox placement test. If the status is <code>IN_PROGRESS</code>, then the predictive inbox placement test is currently running. Predictive inbox placement tests are usually complete within 24 hours of creating the test. If the status is <code>COMPLETE</code>, then the test is finished, and you can use the <code>GetDeliverabilityTestReport</code> to view the results of the test.</p>
    /// - On failure, responds with [`SdkError<CreateDeliverabilityTestReportError>`](crate::error::CreateDeliverabilityTestReportError)
    pub fn create_deliverability_test_report(
        &self,
    ) -> crate::client::fluent_builders::CreateDeliverabilityTestReport {
        crate::client::fluent_builders::CreateDeliverabilityTestReport::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`CreateEmailIdentity`](crate::client::fluent_builders::CreateEmailIdentity) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`email_identity(impl Into<String>)`](crate::client::fluent_builders::CreateEmailIdentity::email_identity) / [`set_email_identity(Option<String>)`](crate::client::fluent_builders::CreateEmailIdentity::set_email_identity): <p>The email address or domain to verify.</p>
    ///   - [`tags(Vec<Tag>)`](crate::client::fluent_builders::CreateEmailIdentity::tags) / [`set_tags(Option<Vec<Tag>>)`](crate::client::fluent_builders::CreateEmailIdentity::set_tags): <p>An array of objects that define the tags (keys and values) to associate with the email identity.</p>
    ///   - [`dkim_signing_attributes(DkimSigningAttributes)`](crate::client::fluent_builders::CreateEmailIdentity::dkim_signing_attributes) / [`set_dkim_signing_attributes(Option<DkimSigningAttributes>)`](crate::client::fluent_builders::CreateEmailIdentity::set_dkim_signing_attributes): <p>If your request includes this object, Amazon SES configures the identity to use Bring Your Own DKIM (BYODKIM) for DKIM authentication purposes, or, configures the key length to be used for <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim.html">Easy DKIM</a>.</p>  <p>You can only specify this object if the email identity is a domain, as opposed to an address.</p>
    ///   - [`configuration_set_name(impl Into<String>)`](crate::client::fluent_builders::CreateEmailIdentity::configuration_set_name) / [`set_configuration_set_name(Option<String>)`](crate::client::fluent_builders::CreateEmailIdentity::set_configuration_set_name): <p>The configuration set to use by default when sending from this identity. Note that any configuration set defined in the email sending request takes precedence. </p>
    /// - On success, responds with [`CreateEmailIdentityOutput`](crate::output::CreateEmailIdentityOutput) with field(s):
    ///   - [`identity_type(Option<IdentityType>)`](crate::output::CreateEmailIdentityOutput::identity_type): <p>The email identity type. Note: the <code>MANAGED_DOMAIN</code> identity type is not supported.</p>
    ///   - [`verified_for_sending_status(bool)`](crate::output::CreateEmailIdentityOutput::verified_for_sending_status): <p>Specifies whether or not the identity is verified. You can only send email from verified email addresses or domains. For more information about verifying identities, see the <a href="https://docs.aws.amazon.com/pinpoint/latest/userguide/channels-email-manage-verify.html">Amazon Pinpoint User Guide</a>.</p>
    ///   - [`dkim_attributes(Option<DkimAttributes>)`](crate::output::CreateEmailIdentityOutput::dkim_attributes): <p>An object that contains information about the DKIM attributes for the identity.</p>
    /// - On failure, responds with [`SdkError<CreateEmailIdentityError>`](crate::error::CreateEmailIdentityError)
    pub fn create_email_identity(&self) -> crate::client::fluent_builders::CreateEmailIdentity {
        crate::client::fluent_builders::CreateEmailIdentity::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`CreateEmailIdentityPolicy`](crate::client::fluent_builders::CreateEmailIdentityPolicy) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`email_identity(impl Into<String>)`](crate::client::fluent_builders::CreateEmailIdentityPolicy::email_identity) / [`set_email_identity(Option<String>)`](crate::client::fluent_builders::CreateEmailIdentityPolicy::set_email_identity): <p>The email identity.</p>
    ///   - [`policy_name(impl Into<String>)`](crate::client::fluent_builders::CreateEmailIdentityPolicy::policy_name) / [`set_policy_name(Option<String>)`](crate::client::fluent_builders::CreateEmailIdentityPolicy::set_policy_name): <p>The name of the policy.</p>  <p>The policy name cannot exceed 64 characters and can only include alphanumeric characters, dashes, and underscores.</p>
    ///   - [`policy(impl Into<String>)`](crate::client::fluent_builders::CreateEmailIdentityPolicy::policy) / [`set_policy(Option<String>)`](crate::client::fluent_builders::CreateEmailIdentityPolicy::set_policy): <p>The text of the policy in JSON format. The policy cannot exceed 4 KB.</p>  <p>For information about the syntax of sending authorization policies, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization-policies.html">Amazon SES Developer Guide</a>.</p>
    /// - On success, responds with [`CreateEmailIdentityPolicyOutput`](crate::output::CreateEmailIdentityPolicyOutput)

    /// - On failure, responds with [`SdkError<CreateEmailIdentityPolicyError>`](crate::error::CreateEmailIdentityPolicyError)
    pub fn create_email_identity_policy(
        &self,
    ) -> crate::client::fluent_builders::CreateEmailIdentityPolicy {
        crate::client::fluent_builders::CreateEmailIdentityPolicy::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`CreateEmailTemplate`](crate::client::fluent_builders::CreateEmailTemplate) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`template_name(impl Into<String>)`](crate::client::fluent_builders::CreateEmailTemplate::template_name) / [`set_template_name(Option<String>)`](crate::client::fluent_builders::CreateEmailTemplate::set_template_name): <p>The name of the template.</p>
    ///   - [`template_content(EmailTemplateContent)`](crate::client::fluent_builders::CreateEmailTemplate::template_content) / [`set_template_content(Option<EmailTemplateContent>)`](crate::client::fluent_builders::CreateEmailTemplate::set_template_content): <p>The content of the email template, composed of a subject line, an HTML part, and a text-only part.</p>
    /// - On success, responds with [`CreateEmailTemplateOutput`](crate::output::CreateEmailTemplateOutput)

    /// - On failure, responds with [`SdkError<CreateEmailTemplateError>`](crate::error::CreateEmailTemplateError)
    pub fn create_email_template(&self) -> crate::client::fluent_builders::CreateEmailTemplate {
        crate::client::fluent_builders::CreateEmailTemplate::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`CreateImportJob`](crate::client::fluent_builders::CreateImportJob) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`import_destination(ImportDestination)`](crate::client::fluent_builders::CreateImportJob::import_destination) / [`set_import_destination(Option<ImportDestination>)`](crate::client::fluent_builders::CreateImportJob::set_import_destination): <p>The destination for the import job.</p>
    ///   - [`import_data_source(ImportDataSource)`](crate::client::fluent_builders::CreateImportJob::import_data_source) / [`set_import_data_source(Option<ImportDataSource>)`](crate::client::fluent_builders::CreateImportJob::set_import_data_source): <p>The data source for the import job.</p>
    /// - On success, responds with [`CreateImportJobOutput`](crate::output::CreateImportJobOutput) with field(s):
    ///   - [`job_id(Option<String>)`](crate::output::CreateImportJobOutput::job_id): <p>A string that represents the import job ID.</p>
    /// - On failure, responds with [`SdkError<CreateImportJobError>`](crate::error::CreateImportJobError)
    pub fn create_import_job(&self) -> crate::client::fluent_builders::CreateImportJob {
        crate::client::fluent_builders::CreateImportJob::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteConfigurationSet`](crate::client::fluent_builders::DeleteConfigurationSet) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`configuration_set_name(impl Into<String>)`](crate::client::fluent_builders::DeleteConfigurationSet::configuration_set_name) / [`set_configuration_set_name(Option<String>)`](crate::client::fluent_builders::DeleteConfigurationSet::set_configuration_set_name): <p>The name of the configuration set.</p>
    /// - On success, responds with [`DeleteConfigurationSetOutput`](crate::output::DeleteConfigurationSetOutput)

    /// - On failure, responds with [`SdkError<DeleteConfigurationSetError>`](crate::error::DeleteConfigurationSetError)
    pub fn delete_configuration_set(
        &self,
    ) -> crate::client::fluent_builders::DeleteConfigurationSet {
        crate::client::fluent_builders::DeleteConfigurationSet::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteConfigurationSetEventDestination`](crate::client::fluent_builders::DeleteConfigurationSetEventDestination) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`configuration_set_name(impl Into<String>)`](crate::client::fluent_builders::DeleteConfigurationSetEventDestination::configuration_set_name) / [`set_configuration_set_name(Option<String>)`](crate::client::fluent_builders::DeleteConfigurationSetEventDestination::set_configuration_set_name): <p>The name of the configuration set that contains the event destination to delete.</p>
    ///   - [`event_destination_name(impl Into<String>)`](crate::client::fluent_builders::DeleteConfigurationSetEventDestination::event_destination_name) / [`set_event_destination_name(Option<String>)`](crate::client::fluent_builders::DeleteConfigurationSetEventDestination::set_event_destination_name): <p>The name of the event destination to delete.</p>
    /// - On success, responds with [`DeleteConfigurationSetEventDestinationOutput`](crate::output::DeleteConfigurationSetEventDestinationOutput)

    /// - On failure, responds with [`SdkError<DeleteConfigurationSetEventDestinationError>`](crate::error::DeleteConfigurationSetEventDestinationError)
    pub fn delete_configuration_set_event_destination(
        &self,
    ) -> crate::client::fluent_builders::DeleteConfigurationSetEventDestination {
        crate::client::fluent_builders::DeleteConfigurationSetEventDestination::new(
            self.handle.clone(),
        )
    }
    /// Constructs a fluent builder for the [`DeleteContact`](crate::client::fluent_builders::DeleteContact) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`contact_list_name(impl Into<String>)`](crate::client::fluent_builders::DeleteContact::contact_list_name) / [`set_contact_list_name(Option<String>)`](crate::client::fluent_builders::DeleteContact::set_contact_list_name): <p>The name of the contact list from which the contact should be removed.</p>
    ///   - [`email_address(impl Into<String>)`](crate::client::fluent_builders::DeleteContact::email_address) / [`set_email_address(Option<String>)`](crate::client::fluent_builders::DeleteContact::set_email_address): <p>The contact's email address.</p>
    /// - On success, responds with [`DeleteContactOutput`](crate::output::DeleteContactOutput)

    /// - On failure, responds with [`SdkError<DeleteContactError>`](crate::error::DeleteContactError)
    pub fn delete_contact(&self) -> crate::client::fluent_builders::DeleteContact {
        crate::client::fluent_builders::DeleteContact::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteContactList`](crate::client::fluent_builders::DeleteContactList) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`contact_list_name(impl Into<String>)`](crate::client::fluent_builders::DeleteContactList::contact_list_name) / [`set_contact_list_name(Option<String>)`](crate::client::fluent_builders::DeleteContactList::set_contact_list_name): <p>The name of the contact list.</p>
    /// - On success, responds with [`DeleteContactListOutput`](crate::output::DeleteContactListOutput)

    /// - On failure, responds with [`SdkError<DeleteContactListError>`](crate::error::DeleteContactListError)
    pub fn delete_contact_list(&self) -> crate::client::fluent_builders::DeleteContactList {
        crate::client::fluent_builders::DeleteContactList::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteCustomVerificationEmailTemplate`](crate::client::fluent_builders::DeleteCustomVerificationEmailTemplate) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`template_name(impl Into<String>)`](crate::client::fluent_builders::DeleteCustomVerificationEmailTemplate::template_name) / [`set_template_name(Option<String>)`](crate::client::fluent_builders::DeleteCustomVerificationEmailTemplate::set_template_name): <p>The name of the custom verification email template that you want to delete.</p>
    /// - On success, responds with [`DeleteCustomVerificationEmailTemplateOutput`](crate::output::DeleteCustomVerificationEmailTemplateOutput)

    /// - On failure, responds with [`SdkError<DeleteCustomVerificationEmailTemplateError>`](crate::error::DeleteCustomVerificationEmailTemplateError)
    pub fn delete_custom_verification_email_template(
        &self,
    ) -> crate::client::fluent_builders::DeleteCustomVerificationEmailTemplate {
        crate::client::fluent_builders::DeleteCustomVerificationEmailTemplate::new(
            self.handle.clone(),
        )
    }
    /// Constructs a fluent builder for the [`DeleteDedicatedIpPool`](crate::client::fluent_builders::DeleteDedicatedIpPool) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`pool_name(impl Into<String>)`](crate::client::fluent_builders::DeleteDedicatedIpPool::pool_name) / [`set_pool_name(Option<String>)`](crate::client::fluent_builders::DeleteDedicatedIpPool::set_pool_name): <p>The name of the dedicated IP pool that you want to delete.</p>
    /// - On success, responds with [`DeleteDedicatedIpPoolOutput`](crate::output::DeleteDedicatedIpPoolOutput)

    /// - On failure, responds with [`SdkError<DeleteDedicatedIpPoolError>`](crate::error::DeleteDedicatedIpPoolError)
    pub fn delete_dedicated_ip_pool(
        &self,
    ) -> crate::client::fluent_builders::DeleteDedicatedIpPool {
        crate::client::fluent_builders::DeleteDedicatedIpPool::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteEmailIdentity`](crate::client::fluent_builders::DeleteEmailIdentity) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`email_identity(impl Into<String>)`](crate::client::fluent_builders::DeleteEmailIdentity::email_identity) / [`set_email_identity(Option<String>)`](crate::client::fluent_builders::DeleteEmailIdentity::set_email_identity): <p>The identity (that is, the email address or domain) to delete.</p>
    /// - On success, responds with [`DeleteEmailIdentityOutput`](crate::output::DeleteEmailIdentityOutput)

    /// - On failure, responds with [`SdkError<DeleteEmailIdentityError>`](crate::error::DeleteEmailIdentityError)
    pub fn delete_email_identity(&self) -> crate::client::fluent_builders::DeleteEmailIdentity {
        crate::client::fluent_builders::DeleteEmailIdentity::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteEmailIdentityPolicy`](crate::client::fluent_builders::DeleteEmailIdentityPolicy) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`email_identity(impl Into<String>)`](crate::client::fluent_builders::DeleteEmailIdentityPolicy::email_identity) / [`set_email_identity(Option<String>)`](crate::client::fluent_builders::DeleteEmailIdentityPolicy::set_email_identity): <p>The email identity.</p>
    ///   - [`policy_name(impl Into<String>)`](crate::client::fluent_builders::DeleteEmailIdentityPolicy::policy_name) / [`set_policy_name(Option<String>)`](crate::client::fluent_builders::DeleteEmailIdentityPolicy::set_policy_name): <p>The name of the policy.</p>  <p>The policy name cannot exceed 64 characters and can only include alphanumeric characters, dashes, and underscores.</p>
    /// - On success, responds with [`DeleteEmailIdentityPolicyOutput`](crate::output::DeleteEmailIdentityPolicyOutput)

    /// - On failure, responds with [`SdkError<DeleteEmailIdentityPolicyError>`](crate::error::DeleteEmailIdentityPolicyError)
    pub fn delete_email_identity_policy(
        &self,
    ) -> crate::client::fluent_builders::DeleteEmailIdentityPolicy {
        crate::client::fluent_builders::DeleteEmailIdentityPolicy::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteEmailTemplate`](crate::client::fluent_builders::DeleteEmailTemplate) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`template_name(impl Into<String>)`](crate::client::fluent_builders::DeleteEmailTemplate::template_name) / [`set_template_name(Option<String>)`](crate::client::fluent_builders::DeleteEmailTemplate::set_template_name): <p>The name of the template to be deleted.</p>
    /// - On success, responds with [`DeleteEmailTemplateOutput`](crate::output::DeleteEmailTemplateOutput)

    /// - On failure, responds with [`SdkError<DeleteEmailTemplateError>`](crate::error::DeleteEmailTemplateError)
    pub fn delete_email_template(&self) -> crate::client::fluent_builders::DeleteEmailTemplate {
        crate::client::fluent_builders::DeleteEmailTemplate::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteSuppressedDestination`](crate::client::fluent_builders::DeleteSuppressedDestination) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`email_address(impl Into<String>)`](crate::client::fluent_builders::DeleteSuppressedDestination::email_address) / [`set_email_address(Option<String>)`](crate::client::fluent_builders::DeleteSuppressedDestination::set_email_address): <p>The suppressed email destination to remove from the account suppression list.</p>
    /// - On success, responds with [`DeleteSuppressedDestinationOutput`](crate::output::DeleteSuppressedDestinationOutput)

    /// - On failure, responds with [`SdkError<DeleteSuppressedDestinationError>`](crate::error::DeleteSuppressedDestinationError)
    pub fn delete_suppressed_destination(
        &self,
    ) -> crate::client::fluent_builders::DeleteSuppressedDestination {
        crate::client::fluent_builders::DeleteSuppressedDestination::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetAccount`](crate::client::fluent_builders::GetAccount) operation.
    ///
    /// - The fluent builder takes no input, just [`send`](crate::client::fluent_builders::GetAccount::send) it.

    /// - On success, responds with [`GetAccountOutput`](crate::output::GetAccountOutput) with field(s):
    ///   - [`dedicated_ip_auto_warmup_enabled(bool)`](crate::output::GetAccountOutput::dedicated_ip_auto_warmup_enabled): <p>Indicates whether or not the automatic warm-up feature is enabled for dedicated IP addresses that are associated with your account.</p>
    ///   - [`enforcement_status(Option<String>)`](crate::output::GetAccountOutput::enforcement_status): <p>The reputation status of your Amazon SES account. The status can be one of the following:</p>  <ul>   <li> <p> <code>HEALTHY</code> – There are no reputation-related issues that currently impact your account.</p> </li>   <li> <p> <code>PROBATION</code> – We've identified potential issues with your Amazon SES account. We're placing your account under review while you work on correcting these issues.</p> </li>   <li> <p> <code>SHUTDOWN</code> – Your account's ability to send email is currently paused because of an issue with the email sent from your account. When you correct the issue, you can contact us and request that your account's ability to send email is resumed.</p> </li>  </ul>
    ///   - [`production_access_enabled(bool)`](crate::output::GetAccountOutput::production_access_enabled): <p>Indicates whether or not your account has production access in the current Amazon Web Services Region.</p>  <p>If the value is <code>false</code>, then your account is in the <i>sandbox</i>. When your account is in the sandbox, you can only send email to verified identities. Additionally, the maximum number of emails you can send in a 24-hour period (your sending quota) is 200, and the maximum number of emails you can send per second (your maximum sending rate) is 1.</p>  <p>If the value is <code>true</code>, then your account has production access. When your account has production access, you can send email to any address. The sending quota and maximum sending rate for your account vary based on your specific use case.</p>
    ///   - [`send_quota(Option<SendQuota>)`](crate::output::GetAccountOutput::send_quota): <p>An object that contains information about the per-day and per-second sending limits for your Amazon SES account in the current Amazon Web Services Region.</p>
    ///   - [`sending_enabled(bool)`](crate::output::GetAccountOutput::sending_enabled): <p>Indicates whether or not email sending is enabled for your Amazon SES account in the current Amazon Web Services Region.</p>
    ///   - [`suppression_attributes(Option<SuppressionAttributes>)`](crate::output::GetAccountOutput::suppression_attributes): <p>An object that contains information about the email address suppression preferences for your account in the current Amazon Web Services Region.</p>
    ///   - [`details(Option<AccountDetails>)`](crate::output::GetAccountOutput::details): <p>An object that defines your account details.</p>
    ///   - [`vdm_attributes(Option<VdmAttributes>)`](crate::output::GetAccountOutput::vdm_attributes): <p>The VDM attributes that apply to your Amazon SES account.</p>
    /// - On failure, responds with [`SdkError<GetAccountError>`](crate::error::GetAccountError)
    pub fn get_account(&self) -> crate::client::fluent_builders::GetAccount {
        crate::client::fluent_builders::GetAccount::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetBlacklistReports`](crate::client::fluent_builders::GetBlacklistReports) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`blacklist_item_names(Vec<String>)`](crate::client::fluent_builders::GetBlacklistReports::blacklist_item_names) / [`set_blacklist_item_names(Option<Vec<String>>)`](crate::client::fluent_builders::GetBlacklistReports::set_blacklist_item_names): <p>A list of IP addresses that you want to retrieve blacklist information about. You can only specify the dedicated IP addresses that you use to send email using Amazon SES or Amazon Pinpoint.</p>
    /// - On success, responds with [`GetBlacklistReportsOutput`](crate::output::GetBlacklistReportsOutput) with field(s):
    ///   - [`blacklist_report(Option<HashMap<String, Vec<BlacklistEntry>>>)`](crate::output::GetBlacklistReportsOutput::blacklist_report): <p>An object that contains information about a blacklist that one of your dedicated IP addresses appears on.</p>
    /// - On failure, responds with [`SdkError<GetBlacklistReportsError>`](crate::error::GetBlacklistReportsError)
    pub fn get_blacklist_reports(&self) -> crate::client::fluent_builders::GetBlacklistReports {
        crate::client::fluent_builders::GetBlacklistReports::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetConfigurationSet`](crate::client::fluent_builders::GetConfigurationSet) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`configuration_set_name(impl Into<String>)`](crate::client::fluent_builders::GetConfigurationSet::configuration_set_name) / [`set_configuration_set_name(Option<String>)`](crate::client::fluent_builders::GetConfigurationSet::set_configuration_set_name): <p>The name of the configuration set.</p>
    /// - On success, responds with [`GetConfigurationSetOutput`](crate::output::GetConfigurationSetOutput) with field(s):
    ///   - [`configuration_set_name(Option<String>)`](crate::output::GetConfigurationSetOutput::configuration_set_name): <p>The name of the configuration set.</p>
    ///   - [`tracking_options(Option<TrackingOptions>)`](crate::output::GetConfigurationSetOutput::tracking_options): <p>An object that defines the open and click tracking options for emails that you send using the configuration set.</p>
    ///   - [`delivery_options(Option<DeliveryOptions>)`](crate::output::GetConfigurationSetOutput::delivery_options): <p>An object that defines the dedicated IP pool that is used to send emails that you send using the configuration set.</p>
    ///   - [`reputation_options(Option<ReputationOptions>)`](crate::output::GetConfigurationSetOutput::reputation_options): <p>An object that defines whether or not Amazon SES collects reputation metrics for the emails that you send that use the configuration set.</p>
    ///   - [`sending_options(Option<SendingOptions>)`](crate::output::GetConfigurationSetOutput::sending_options): <p>An object that defines whether or not Amazon SES can send email that you send using the configuration set.</p>
    ///   - [`tags(Option<Vec<Tag>>)`](crate::output::GetConfigurationSetOutput::tags): <p>An array of objects that define the tags (keys and values) that are associated with the configuration set.</p>
    ///   - [`suppression_options(Option<SuppressionOptions>)`](crate::output::GetConfigurationSetOutput::suppression_options): <p>An object that contains information about the suppression list preferences for your account.</p>
    ///   - [`vdm_options(Option<VdmOptions>)`](crate::output::GetConfigurationSetOutput::vdm_options): <p>An object that contains information about the VDM preferences for your configuration set.</p>
    /// - On failure, responds with [`SdkError<GetConfigurationSetError>`](crate::error::GetConfigurationSetError)
    pub fn get_configuration_set(&self) -> crate::client::fluent_builders::GetConfigurationSet {
        crate::client::fluent_builders::GetConfigurationSet::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetConfigurationSetEventDestinations`](crate::client::fluent_builders::GetConfigurationSetEventDestinations) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`configuration_set_name(impl Into<String>)`](crate::client::fluent_builders::GetConfigurationSetEventDestinations::configuration_set_name) / [`set_configuration_set_name(Option<String>)`](crate::client::fluent_builders::GetConfigurationSetEventDestinations::set_configuration_set_name): <p>The name of the configuration set that contains the event destination.</p>
    /// - On success, responds with [`GetConfigurationSetEventDestinationsOutput`](crate::output::GetConfigurationSetEventDestinationsOutput) with field(s):
    ///   - [`event_destinations(Option<Vec<EventDestination>>)`](crate::output::GetConfigurationSetEventDestinationsOutput::event_destinations): <p>An array that includes all of the events destinations that have been configured for the configuration set.</p>
    /// - On failure, responds with [`SdkError<GetConfigurationSetEventDestinationsError>`](crate::error::GetConfigurationSetEventDestinationsError)
    pub fn get_configuration_set_event_destinations(
        &self,
    ) -> crate::client::fluent_builders::GetConfigurationSetEventDestinations {
        crate::client::fluent_builders::GetConfigurationSetEventDestinations::new(
            self.handle.clone(),
        )
    }
    /// Constructs a fluent builder for the [`GetContact`](crate::client::fluent_builders::GetContact) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`contact_list_name(impl Into<String>)`](crate::client::fluent_builders::GetContact::contact_list_name) / [`set_contact_list_name(Option<String>)`](crate::client::fluent_builders::GetContact::set_contact_list_name): <p>The name of the contact list to which the contact belongs.</p>
    ///   - [`email_address(impl Into<String>)`](crate::client::fluent_builders::GetContact::email_address) / [`set_email_address(Option<String>)`](crate::client::fluent_builders::GetContact::set_email_address): <p>The contact's email addres.</p>
    /// - On success, responds with [`GetContactOutput`](crate::output::GetContactOutput) with field(s):
    ///   - [`contact_list_name(Option<String>)`](crate::output::GetContactOutput::contact_list_name): <p>The name of the contact list to which the contact belongs.</p>
    ///   - [`email_address(Option<String>)`](crate::output::GetContactOutput::email_address): <p>The contact's email addres.</p>
    ///   - [`topic_preferences(Option<Vec<TopicPreference>>)`](crate::output::GetContactOutput::topic_preferences): <p>The contact's preference for being opted-in to or opted-out of a topic.&gt;</p>
    ///   - [`topic_default_preferences(Option<Vec<TopicPreference>>)`](crate::output::GetContactOutput::topic_default_preferences): <p>The default topic preferences applied to the contact.</p>
    ///   - [`unsubscribe_all(bool)`](crate::output::GetContactOutput::unsubscribe_all): <p>A boolean value status noting if the contact is unsubscribed from all contact list topics.</p>
    ///   - [`attributes_data(Option<String>)`](crate::output::GetContactOutput::attributes_data): <p>The attribute data attached to a contact.</p>
    ///   - [`created_timestamp(Option<DateTime>)`](crate::output::GetContactOutput::created_timestamp): <p>A timestamp noting when the contact was created.</p>
    ///   - [`last_updated_timestamp(Option<DateTime>)`](crate::output::GetContactOutput::last_updated_timestamp): <p>A timestamp noting the last time the contact's information was updated.</p>
    /// - On failure, responds with [`SdkError<GetContactError>`](crate::error::GetContactError)
    pub fn get_contact(&self) -> crate::client::fluent_builders::GetContact {
        crate::client::fluent_builders::GetContact::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetContactList`](crate::client::fluent_builders::GetContactList) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`contact_list_name(impl Into<String>)`](crate::client::fluent_builders::GetContactList::contact_list_name) / [`set_contact_list_name(Option<String>)`](crate::client::fluent_builders::GetContactList::set_contact_list_name): <p>The name of the contact list.</p>
    /// - On success, responds with [`GetContactListOutput`](crate::output::GetContactListOutput) with field(s):
    ///   - [`contact_list_name(Option<String>)`](crate::output::GetContactListOutput::contact_list_name): <p>The name of the contact list.</p>
    ///   - [`topics(Option<Vec<Topic>>)`](crate::output::GetContactListOutput::topics): <p>An interest group, theme, or label within a list. A contact list can have multiple topics.</p>
    ///   - [`description(Option<String>)`](crate::output::GetContactListOutput::description): <p>A description of what the contact list is about.</p>
    ///   - [`created_timestamp(Option<DateTime>)`](crate::output::GetContactListOutput::created_timestamp): <p>A timestamp noting when the contact list was created.</p>
    ///   - [`last_updated_timestamp(Option<DateTime>)`](crate::output::GetContactListOutput::last_updated_timestamp): <p>A timestamp noting the last time the contact list was updated.</p>
    ///   - [`tags(Option<Vec<Tag>>)`](crate::output::GetContactListOutput::tags): <p>The tags associated with a contact list.</p>
    /// - On failure, responds with [`SdkError<GetContactListError>`](crate::error::GetContactListError)
    pub fn get_contact_list(&self) -> crate::client::fluent_builders::GetContactList {
        crate::client::fluent_builders::GetContactList::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetCustomVerificationEmailTemplate`](crate::client::fluent_builders::GetCustomVerificationEmailTemplate) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`template_name(impl Into<String>)`](crate::client::fluent_builders::GetCustomVerificationEmailTemplate::template_name) / [`set_template_name(Option<String>)`](crate::client::fluent_builders::GetCustomVerificationEmailTemplate::set_template_name): <p>The name of the custom verification email template that you want to retrieve.</p>
    /// - On success, responds with [`GetCustomVerificationEmailTemplateOutput`](crate::output::GetCustomVerificationEmailTemplateOutput) with field(s):
    ///   - [`template_name(Option<String>)`](crate::output::GetCustomVerificationEmailTemplateOutput::template_name): <p>The name of the custom verification email template.</p>
    ///   - [`from_email_address(Option<String>)`](crate::output::GetCustomVerificationEmailTemplateOutput::from_email_address): <p>The email address that the custom verification email is sent from.</p>
    ///   - [`template_subject(Option<String>)`](crate::output::GetCustomVerificationEmailTemplateOutput::template_subject): <p>The subject line of the custom verification email.</p>
    ///   - [`template_content(Option<String>)`](crate::output::GetCustomVerificationEmailTemplateOutput::template_content): <p>The content of the custom verification email.</p>
    ///   - [`success_redirection_url(Option<String>)`](crate::output::GetCustomVerificationEmailTemplateOutput::success_redirection_url): <p>The URL that the recipient of the verification email is sent to if his or her address is successfully verified.</p>
    ///   - [`failure_redirection_url(Option<String>)`](crate::output::GetCustomVerificationEmailTemplateOutput::failure_redirection_url): <p>The URL that the recipient of the verification email is sent to if his or her address is not successfully verified.</p>
    /// - On failure, responds with [`SdkError<GetCustomVerificationEmailTemplateError>`](crate::error::GetCustomVerificationEmailTemplateError)
    pub fn get_custom_verification_email_template(
        &self,
    ) -> crate::client::fluent_builders::GetCustomVerificationEmailTemplate {
        crate::client::fluent_builders::GetCustomVerificationEmailTemplate::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetDedicatedIp`](crate::client::fluent_builders::GetDedicatedIp) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`ip(impl Into<String>)`](crate::client::fluent_builders::GetDedicatedIp::ip) / [`set_ip(Option<String>)`](crate::client::fluent_builders::GetDedicatedIp::set_ip): <p>The IP address that you want to obtain more information about. The value you specify has to be a dedicated IP address that's assocaited with your Amazon Web Services account.</p>
    /// - On success, responds with [`GetDedicatedIpOutput`](crate::output::GetDedicatedIpOutput) with field(s):
    ///   - [`dedicated_ip(Option<DedicatedIp>)`](crate::output::GetDedicatedIpOutput::dedicated_ip): <p>An object that contains information about a dedicated IP address.</p>
    /// - On failure, responds with [`SdkError<GetDedicatedIpError>`](crate::error::GetDedicatedIpError)
    pub fn get_dedicated_ip(&self) -> crate::client::fluent_builders::GetDedicatedIp {
        crate::client::fluent_builders::GetDedicatedIp::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetDedicatedIpPool`](crate::client::fluent_builders::GetDedicatedIpPool) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`pool_name(impl Into<String>)`](crate::client::fluent_builders::GetDedicatedIpPool::pool_name) / [`set_pool_name(Option<String>)`](crate::client::fluent_builders::GetDedicatedIpPool::set_pool_name): <p>The name of the dedicated IP pool to retrieve.</p>
    /// - On success, responds with [`GetDedicatedIpPoolOutput`](crate::output::GetDedicatedIpPoolOutput) with field(s):
    ///   - [`dedicated_ip_pool(Option<DedicatedIpPool>)`](crate::output::GetDedicatedIpPoolOutput::dedicated_ip_pool): <p>An object that contains information about a dedicated IP pool.</p>
    /// - On failure, responds with [`SdkError<GetDedicatedIpPoolError>`](crate::error::GetDedicatedIpPoolError)
    pub fn get_dedicated_ip_pool(&self) -> crate::client::fluent_builders::GetDedicatedIpPool {
        crate::client::fluent_builders::GetDedicatedIpPool::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetDedicatedIps`](crate::client::fluent_builders::GetDedicatedIps) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::GetDedicatedIps::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`pool_name(impl Into<String>)`](crate::client::fluent_builders::GetDedicatedIps::pool_name) / [`set_pool_name(Option<String>)`](crate::client::fluent_builders::GetDedicatedIps::set_pool_name): <p>The name of the IP pool that the dedicated IP address is associated with.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::GetDedicatedIps::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::GetDedicatedIps::set_next_token): <p>A token returned from a previous call to <code>GetDedicatedIps</code> to indicate the position of the dedicated IP pool in the list of IP pools.</p>
    ///   - [`page_size(i32)`](crate::client::fluent_builders::GetDedicatedIps::page_size) / [`set_page_size(Option<i32>)`](crate::client::fluent_builders::GetDedicatedIps::set_page_size): <p>The number of results to show in a single call to <code>GetDedicatedIpsRequest</code>. If the number of results is larger than the number you specified in this parameter, then the response includes a <code>NextToken</code> element, which you can use to obtain additional results.</p>
    /// - On success, responds with [`GetDedicatedIpsOutput`](crate::output::GetDedicatedIpsOutput) with field(s):
    ///   - [`dedicated_ips(Option<Vec<DedicatedIp>>)`](crate::output::GetDedicatedIpsOutput::dedicated_ips): <p>A list of dedicated IP addresses that are associated with your Amazon Web Services account.</p>
    ///   - [`next_token(Option<String>)`](crate::output::GetDedicatedIpsOutput::next_token): <p>A token that indicates that there are additional dedicated IP addresses to list. To view additional addresses, issue another request to <code>GetDedicatedIps</code>, passing this token in the <code>NextToken</code> parameter.</p>
    /// - On failure, responds with [`SdkError<GetDedicatedIpsError>`](crate::error::GetDedicatedIpsError)
    pub fn get_dedicated_ips(&self) -> crate::client::fluent_builders::GetDedicatedIps {
        crate::client::fluent_builders::GetDedicatedIps::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetDeliverabilityDashboardOptions`](crate::client::fluent_builders::GetDeliverabilityDashboardOptions) operation.
    ///
    /// - The fluent builder takes no input, just [`send`](crate::client::fluent_builders::GetDeliverabilityDashboardOptions::send) it.

    /// - On success, responds with [`GetDeliverabilityDashboardOptionsOutput`](crate::output::GetDeliverabilityDashboardOptionsOutput) with field(s):
    ///   - [`dashboard_enabled(bool)`](crate::output::GetDeliverabilityDashboardOptionsOutput::dashboard_enabled): <p>Specifies whether the Deliverability dashboard is enabled. If this value is <code>true</code>, the dashboard is enabled.</p>
    ///   - [`subscription_expiry_date(Option<DateTime>)`](crate::output::GetDeliverabilityDashboardOptionsOutput::subscription_expiry_date): <p>The date when your current subscription to the Deliverability dashboard is scheduled to expire, if your subscription is scheduled to expire at the end of the current calendar month. This value is null if you have an active subscription that isn’t due to expire at the end of the month.</p>
    ///   - [`account_status(Option<DeliverabilityDashboardAccountStatus>)`](crate::output::GetDeliverabilityDashboardOptionsOutput::account_status): <p>The current status of your Deliverability dashboard subscription. If this value is <code>PENDING_EXPIRATION</code>, your subscription is scheduled to expire at the end of the current calendar month.</p>
    ///   - [`active_subscribed_domains(Option<Vec<DomainDeliverabilityTrackingOption>>)`](crate::output::GetDeliverabilityDashboardOptionsOutput::active_subscribed_domains): <p>An array of objects, one for each verified domain that you use to send email and currently has an active Deliverability dashboard subscription that isn’t scheduled to expire at the end of the current calendar month.</p>
    ///   - [`pending_expiration_subscribed_domains(Option<Vec<DomainDeliverabilityTrackingOption>>)`](crate::output::GetDeliverabilityDashboardOptionsOutput::pending_expiration_subscribed_domains): <p>An array of objects, one for each verified domain that you use to send email and currently has an active Deliverability dashboard subscription that's scheduled to expire at the end of the current calendar month.</p>
    /// - On failure, responds with [`SdkError<GetDeliverabilityDashboardOptionsError>`](crate::error::GetDeliverabilityDashboardOptionsError)
    pub fn get_deliverability_dashboard_options(
        &self,
    ) -> crate::client::fluent_builders::GetDeliverabilityDashboardOptions {
        crate::client::fluent_builders::GetDeliverabilityDashboardOptions::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetDeliverabilityTestReport`](crate::client::fluent_builders::GetDeliverabilityTestReport) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`report_id(impl Into<String>)`](crate::client::fluent_builders::GetDeliverabilityTestReport::report_id) / [`set_report_id(Option<String>)`](crate::client::fluent_builders::GetDeliverabilityTestReport::set_report_id): <p>A unique string that identifies the predictive inbox placement test.</p>
    /// - On success, responds with [`GetDeliverabilityTestReportOutput`](crate::output::GetDeliverabilityTestReportOutput) with field(s):
    ///   - [`deliverability_test_report(Option<DeliverabilityTestReport>)`](crate::output::GetDeliverabilityTestReportOutput::deliverability_test_report): <p>An object that contains the results of the predictive inbox placement test.</p>
    ///   - [`overall_placement(Option<PlacementStatistics>)`](crate::output::GetDeliverabilityTestReportOutput::overall_placement): <p>An object that specifies how many test messages that were sent during the predictive inbox placement test were delivered to recipients' inboxes, how many were sent to recipients' spam folders, and how many weren't delivered.</p>
    ///   - [`isp_placements(Option<Vec<IspPlacement>>)`](crate::output::GetDeliverabilityTestReportOutput::isp_placements): <p>An object that describes how the test email was handled by several email providers, including Gmail, Hotmail, Yahoo, AOL, and others.</p>
    ///   - [`message(Option<String>)`](crate::output::GetDeliverabilityTestReportOutput::message): <p>An object that contains the message that you sent when you performed this predictive inbox placement test.</p>
    ///   - [`tags(Option<Vec<Tag>>)`](crate::output::GetDeliverabilityTestReportOutput::tags): <p>An array of objects that define the tags (keys and values) that are associated with the predictive inbox placement test.</p>
    /// - On failure, responds with [`SdkError<GetDeliverabilityTestReportError>`](crate::error::GetDeliverabilityTestReportError)
    pub fn get_deliverability_test_report(
        &self,
    ) -> crate::client::fluent_builders::GetDeliverabilityTestReport {
        crate::client::fluent_builders::GetDeliverabilityTestReport::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetDomainDeliverabilityCampaign`](crate::client::fluent_builders::GetDomainDeliverabilityCampaign) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`campaign_id(impl Into<String>)`](crate::client::fluent_builders::GetDomainDeliverabilityCampaign::campaign_id) / [`set_campaign_id(Option<String>)`](crate::client::fluent_builders::GetDomainDeliverabilityCampaign::set_campaign_id): <p>The unique identifier for the campaign. The Deliverability dashboard automatically generates and assigns this identifier to a campaign.</p>
    /// - On success, responds with [`GetDomainDeliverabilityCampaignOutput`](crate::output::GetDomainDeliverabilityCampaignOutput) with field(s):
    ///   - [`domain_deliverability_campaign(Option<DomainDeliverabilityCampaign>)`](crate::output::GetDomainDeliverabilityCampaignOutput::domain_deliverability_campaign): <p>An object that contains the deliverability data for the campaign.</p>
    /// - On failure, responds with [`SdkError<GetDomainDeliverabilityCampaignError>`](crate::error::GetDomainDeliverabilityCampaignError)
    pub fn get_domain_deliverability_campaign(
        &self,
    ) -> crate::client::fluent_builders::GetDomainDeliverabilityCampaign {
        crate::client::fluent_builders::GetDomainDeliverabilityCampaign::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetDomainStatisticsReport`](crate::client::fluent_builders::GetDomainStatisticsReport) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`domain(impl Into<String>)`](crate::client::fluent_builders::GetDomainStatisticsReport::domain) / [`set_domain(Option<String>)`](crate::client::fluent_builders::GetDomainStatisticsReport::set_domain): <p>The domain that you want to obtain deliverability metrics for.</p>
    ///   - [`start_date(DateTime)`](crate::client::fluent_builders::GetDomainStatisticsReport::start_date) / [`set_start_date(Option<DateTime>)`](crate::client::fluent_builders::GetDomainStatisticsReport::set_start_date): <p>The first day (in Unix time) that you want to obtain domain deliverability metrics for.</p>
    ///   - [`end_date(DateTime)`](crate::client::fluent_builders::GetDomainStatisticsReport::end_date) / [`set_end_date(Option<DateTime>)`](crate::client::fluent_builders::GetDomainStatisticsReport::set_end_date): <p>The last day (in Unix time) that you want to obtain domain deliverability metrics for. The <code>EndDate</code> that you specify has to be less than or equal to 30 days after the <code>StartDate</code>.</p>
    /// - On success, responds with [`GetDomainStatisticsReportOutput`](crate::output::GetDomainStatisticsReportOutput) with field(s):
    ///   - [`overall_volume(Option<OverallVolume>)`](crate::output::GetDomainStatisticsReportOutput::overall_volume): <p>An object that contains deliverability metrics for the domain that you specified. The data in this object is a summary of all of the data that was collected from the <code>StartDate</code> to the <code>EndDate</code>.</p>
    ///   - [`daily_volumes(Option<Vec<DailyVolume>>)`](crate::output::GetDomainStatisticsReportOutput::daily_volumes): <p>An object that contains deliverability metrics for the domain that you specified. This object contains data for each day, starting on the <code>StartDate</code> and ending on the <code>EndDate</code>.</p>
    /// - On failure, responds with [`SdkError<GetDomainStatisticsReportError>`](crate::error::GetDomainStatisticsReportError)
    pub fn get_domain_statistics_report(
        &self,
    ) -> crate::client::fluent_builders::GetDomainStatisticsReport {
        crate::client::fluent_builders::GetDomainStatisticsReport::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetEmailIdentity`](crate::client::fluent_builders::GetEmailIdentity) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`email_identity(impl Into<String>)`](crate::client::fluent_builders::GetEmailIdentity::email_identity) / [`set_email_identity(Option<String>)`](crate::client::fluent_builders::GetEmailIdentity::set_email_identity): <p>The email identity.</p>
    /// - On success, responds with [`GetEmailIdentityOutput`](crate::output::GetEmailIdentityOutput) with field(s):
    ///   - [`identity_type(Option<IdentityType>)`](crate::output::GetEmailIdentityOutput::identity_type): <p>The email identity type. Note: the <code>MANAGED_DOMAIN</code> identity type is not supported.</p>
    ///   - [`feedback_forwarding_status(bool)`](crate::output::GetEmailIdentityOutput::feedback_forwarding_status): <p>The feedback forwarding configuration for the identity.</p>  <p>If the value is <code>true</code>, you receive email notifications when bounce or complaint events occur. These notifications are sent to the address that you specified in the <code>Return-Path</code> header of the original email.</p>  <p>You're required to have a method of tracking bounces and complaints. If you haven't set up another mechanism for receiving bounce or complaint notifications (for example, by setting up an event destination), you receive an email notification when these events occur (even if this setting is disabled).</p>
    ///   - [`verified_for_sending_status(bool)`](crate::output::GetEmailIdentityOutput::verified_for_sending_status): <p>Specifies whether or not the identity is verified. You can only send email from verified email addresses or domains. For more information about verifying identities, see the <a href="https://docs.aws.amazon.com/pinpoint/latest/userguide/channels-email-manage-verify.html">Amazon Pinpoint User Guide</a>.</p>
    ///   - [`dkim_attributes(Option<DkimAttributes>)`](crate::output::GetEmailIdentityOutput::dkim_attributes): <p>An object that contains information about the DKIM attributes for the identity.</p>
    ///   - [`mail_from_attributes(Option<MailFromAttributes>)`](crate::output::GetEmailIdentityOutput::mail_from_attributes): <p>An object that contains information about the Mail-From attributes for the email identity.</p>
    ///   - [`policies(Option<HashMap<String, String>>)`](crate::output::GetEmailIdentityOutput::policies): <p>A map of policy names to policies.</p>
    ///   - [`tags(Option<Vec<Tag>>)`](crate::output::GetEmailIdentityOutput::tags): <p>An array of objects that define the tags (keys and values) that are associated with the email identity.</p>
    ///   - [`configuration_set_name(Option<String>)`](crate::output::GetEmailIdentityOutput::configuration_set_name): <p>The configuration set used by default when sending from this identity.</p>
    ///   - [`verification_status(Option<VerificationStatus>)`](crate::output::GetEmailIdentityOutput::verification_status): <p>The verification status of the identity. The status can be one of the following:</p>  <ul>   <li> <p> <code>PENDING</code> – The verification process was initiated, but Amazon SES hasn't yet been able to verify the identity.</p> </li>   <li> <p> <code>SUCCESS</code> – The verification process completed successfully.</p> </li>   <li> <p> <code>FAILED</code> – The verification process failed.</p> </li>   <li> <p> <code>TEMPORARY_FAILURE</code> – A temporary issue is preventing Amazon SES from determining the verification status of the identity.</p> </li>   <li> <p> <code>NOT_STARTED</code> – The verification process hasn't been initiated for the identity.</p> </li>  </ul>
    /// - On failure, responds with [`SdkError<GetEmailIdentityError>`](crate::error::GetEmailIdentityError)
    pub fn get_email_identity(&self) -> crate::client::fluent_builders::GetEmailIdentity {
        crate::client::fluent_builders::GetEmailIdentity::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetEmailIdentityPolicies`](crate::client::fluent_builders::GetEmailIdentityPolicies) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`email_identity(impl Into<String>)`](crate::client::fluent_builders::GetEmailIdentityPolicies::email_identity) / [`set_email_identity(Option<String>)`](crate::client::fluent_builders::GetEmailIdentityPolicies::set_email_identity): <p>The email identity.</p>
    /// - On success, responds with [`GetEmailIdentityPoliciesOutput`](crate::output::GetEmailIdentityPoliciesOutput) with field(s):
    ///   - [`policies(Option<HashMap<String, String>>)`](crate::output::GetEmailIdentityPoliciesOutput::policies): <p>A map of policy names to policies.</p>
    /// - On failure, responds with [`SdkError<GetEmailIdentityPoliciesError>`](crate::error::GetEmailIdentityPoliciesError)
    pub fn get_email_identity_policies(
        &self,
    ) -> crate::client::fluent_builders::GetEmailIdentityPolicies {
        crate::client::fluent_builders::GetEmailIdentityPolicies::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetEmailTemplate`](crate::client::fluent_builders::GetEmailTemplate) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`template_name(impl Into<String>)`](crate::client::fluent_builders::GetEmailTemplate::template_name) / [`set_template_name(Option<String>)`](crate::client::fluent_builders::GetEmailTemplate::set_template_name): <p>The name of the template.</p>
    /// - On success, responds with [`GetEmailTemplateOutput`](crate::output::GetEmailTemplateOutput) with field(s):
    ///   - [`template_name(Option<String>)`](crate::output::GetEmailTemplateOutput::template_name): <p>The name of the template.</p>
    ///   - [`template_content(Option<EmailTemplateContent>)`](crate::output::GetEmailTemplateOutput::template_content): <p>The content of the email template, composed of a subject line, an HTML part, and a text-only part.</p>
    /// - On failure, responds with [`SdkError<GetEmailTemplateError>`](crate::error::GetEmailTemplateError)
    pub fn get_email_template(&self) -> crate::client::fluent_builders::GetEmailTemplate {
        crate::client::fluent_builders::GetEmailTemplate::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetImportJob`](crate::client::fluent_builders::GetImportJob) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`job_id(impl Into<String>)`](crate::client::fluent_builders::GetImportJob::job_id) / [`set_job_id(Option<String>)`](crate::client::fluent_builders::GetImportJob::set_job_id): <p>The ID of the import job.</p>
    /// - On success, responds with [`GetImportJobOutput`](crate::output::GetImportJobOutput) with field(s):
    ///   - [`job_id(Option<String>)`](crate::output::GetImportJobOutput::job_id): <p>A string that represents the import job ID.</p>
    ///   - [`import_destination(Option<ImportDestination>)`](crate::output::GetImportJobOutput::import_destination): <p>The destination of the import job.</p>
    ///   - [`import_data_source(Option<ImportDataSource>)`](crate::output::GetImportJobOutput::import_data_source): <p>The data source of the import job.</p>
    ///   - [`failure_info(Option<FailureInfo>)`](crate::output::GetImportJobOutput::failure_info): <p>The failure details about an import job.</p>
    ///   - [`job_status(Option<JobStatus>)`](crate::output::GetImportJobOutput::job_status): <p>The status of the import job.</p>
    ///   - [`created_timestamp(Option<DateTime>)`](crate::output::GetImportJobOutput::created_timestamp): <p>The time stamp of when the import job was created.</p>
    ///   - [`completed_timestamp(Option<DateTime>)`](crate::output::GetImportJobOutput::completed_timestamp): <p>The time stamp of when the import job was completed.</p>
    ///   - [`processed_records_count(Option<i32>)`](crate::output::GetImportJobOutput::processed_records_count): <p>The current number of records processed.</p>
    ///   - [`failed_records_count(Option<i32>)`](crate::output::GetImportJobOutput::failed_records_count): <p>The number of records that failed processing because of invalid input or other reasons.</p>
    /// - On failure, responds with [`SdkError<GetImportJobError>`](crate::error::GetImportJobError)
    pub fn get_import_job(&self) -> crate::client::fluent_builders::GetImportJob {
        crate::client::fluent_builders::GetImportJob::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetSuppressedDestination`](crate::client::fluent_builders::GetSuppressedDestination) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`email_address(impl Into<String>)`](crate::client::fluent_builders::GetSuppressedDestination::email_address) / [`set_email_address(Option<String>)`](crate::client::fluent_builders::GetSuppressedDestination::set_email_address): <p>The email address that's on the account suppression list.</p>
    /// - On success, responds with [`GetSuppressedDestinationOutput`](crate::output::GetSuppressedDestinationOutput) with field(s):
    ///   - [`suppressed_destination(Option<SuppressedDestination>)`](crate::output::GetSuppressedDestinationOutput::suppressed_destination): <p>An object containing information about the suppressed email address.</p>
    /// - On failure, responds with [`SdkError<GetSuppressedDestinationError>`](crate::error::GetSuppressedDestinationError)
    pub fn get_suppressed_destination(
        &self,
    ) -> crate::client::fluent_builders::GetSuppressedDestination {
        crate::client::fluent_builders::GetSuppressedDestination::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListConfigurationSets`](crate::client::fluent_builders::ListConfigurationSets) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListConfigurationSets::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListConfigurationSets::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListConfigurationSets::set_next_token): <p>A token returned from a previous call to <code>ListConfigurationSets</code> to indicate the position in the list of configuration sets.</p>
    ///   - [`page_size(i32)`](crate::client::fluent_builders::ListConfigurationSets::page_size) / [`set_page_size(Option<i32>)`](crate::client::fluent_builders::ListConfigurationSets::set_page_size): <p>The number of results to show in a single call to <code>ListConfigurationSets</code>. If the number of results is larger than the number you specified in this parameter, then the response includes a <code>NextToken</code> element, which you can use to obtain additional results.</p>
    /// - On success, responds with [`ListConfigurationSetsOutput`](crate::output::ListConfigurationSetsOutput) with field(s):
    ///   - [`configuration_sets(Option<Vec<String>>)`](crate::output::ListConfigurationSetsOutput::configuration_sets): <p>An array that contains all of the configuration sets in your Amazon SES account in the current Amazon Web Services Region.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListConfigurationSetsOutput::next_token): <p>A token that indicates that there are additional configuration sets to list. To view additional configuration sets, issue another request to <code>ListConfigurationSets</code>, and pass this token in the <code>NextToken</code> parameter.</p>
    /// - On failure, responds with [`SdkError<ListConfigurationSetsError>`](crate::error::ListConfigurationSetsError)
    pub fn list_configuration_sets(&self) -> crate::client::fluent_builders::ListConfigurationSets {
        crate::client::fluent_builders::ListConfigurationSets::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListContactLists`](crate::client::fluent_builders::ListContactLists) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListContactLists::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`page_size(i32)`](crate::client::fluent_builders::ListContactLists::page_size) / [`set_page_size(Option<i32>)`](crate::client::fluent_builders::ListContactLists::set_page_size): <p>Maximum number of contact lists to return at once. Use this parameter to paginate results. If additional contact lists exist beyond the specified limit, the <code>NextToken</code> element is sent in the response. Use the <code>NextToken</code> value in subsequent requests to retrieve additional lists.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListContactLists::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListContactLists::set_next_token): <p>A string token indicating that there might be additional contact lists available to be listed. Use the token provided in the Response to use in the subsequent call to ListContactLists with the same parameters to retrieve the next page of contact lists.</p>
    /// - On success, responds with [`ListContactListsOutput`](crate::output::ListContactListsOutput) with field(s):
    ///   - [`contact_lists(Option<Vec<ContactList>>)`](crate::output::ListContactListsOutput::contact_lists): <p>The available contact lists.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListContactListsOutput::next_token): <p>A string token indicating that there might be additional contact lists available to be listed. Copy this token to a subsequent call to <code>ListContactLists</code> with the same parameters to retrieve the next page of contact lists.</p>
    /// - On failure, responds with [`SdkError<ListContactListsError>`](crate::error::ListContactListsError)
    pub fn list_contact_lists(&self) -> crate::client::fluent_builders::ListContactLists {
        crate::client::fluent_builders::ListContactLists::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListContacts`](crate::client::fluent_builders::ListContacts) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListContacts::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`contact_list_name(impl Into<String>)`](crate::client::fluent_builders::ListContacts::contact_list_name) / [`set_contact_list_name(Option<String>)`](crate::client::fluent_builders::ListContacts::set_contact_list_name): <p>The name of the contact list.</p>
    ///   - [`filter(ListContactsFilter)`](crate::client::fluent_builders::ListContacts::filter) / [`set_filter(Option<ListContactsFilter>)`](crate::client::fluent_builders::ListContacts::set_filter): <p>A filter that can be applied to a list of contacts.</p>
    ///   - [`page_size(i32)`](crate::client::fluent_builders::ListContacts::page_size) / [`set_page_size(Option<i32>)`](crate::client::fluent_builders::ListContacts::set_page_size): <p>The number of contacts that may be returned at once, which is dependent on if there are more or less contacts than the value of the PageSize. Use this parameter to paginate results. If additional contacts exist beyond the specified limit, the <code>NextToken</code> element is sent in the response. Use the <code>NextToken</code> value in subsequent requests to retrieve additional contacts.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListContacts::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListContacts::set_next_token): <p>A string token indicating that there might be additional contacts available to be listed. Use the token provided in the Response to use in the subsequent call to ListContacts with the same parameters to retrieve the next page of contacts.</p>
    /// - On success, responds with [`ListContactsOutput`](crate::output::ListContactsOutput) with field(s):
    ///   - [`contacts(Option<Vec<Contact>>)`](crate::output::ListContactsOutput::contacts): <p>The contacts present in a specific contact list.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListContactsOutput::next_token): <p>A string token indicating that there might be additional contacts available to be listed. Copy this token to a subsequent call to <code>ListContacts</code> with the same parameters to retrieve the next page of contacts.</p>
    /// - On failure, responds with [`SdkError<ListContactsError>`](crate::error::ListContactsError)
    pub fn list_contacts(&self) -> crate::client::fluent_builders::ListContacts {
        crate::client::fluent_builders::ListContacts::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListCustomVerificationEmailTemplates`](crate::client::fluent_builders::ListCustomVerificationEmailTemplates) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListCustomVerificationEmailTemplates::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListCustomVerificationEmailTemplates::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListCustomVerificationEmailTemplates::set_next_token): <p>A token returned from a previous call to <code>ListCustomVerificationEmailTemplates</code> to indicate the position in the list of custom verification email templates.</p>
    ///   - [`page_size(i32)`](crate::client::fluent_builders::ListCustomVerificationEmailTemplates::page_size) / [`set_page_size(Option<i32>)`](crate::client::fluent_builders::ListCustomVerificationEmailTemplates::set_page_size): <p>The number of results to show in a single call to <code>ListCustomVerificationEmailTemplates</code>. If the number of results is larger than the number you specified in this parameter, then the response includes a <code>NextToken</code> element, which you can use to obtain additional results.</p>  <p>The value you specify has to be at least 1, and can be no more than 50.</p>
    /// - On success, responds with [`ListCustomVerificationEmailTemplatesOutput`](crate::output::ListCustomVerificationEmailTemplatesOutput) with field(s):
    ///   - [`custom_verification_email_templates(Option<Vec<CustomVerificationEmailTemplateMetadata>>)`](crate::output::ListCustomVerificationEmailTemplatesOutput::custom_verification_email_templates): <p>A list of the custom verification email templates that exist in your account.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListCustomVerificationEmailTemplatesOutput::next_token): <p>A token indicating that there are additional custom verification email templates available to be listed. Pass this token to a subsequent call to <code>ListCustomVerificationEmailTemplates</code> to retrieve the next 50 custom verification email templates.</p>
    /// - On failure, responds with [`SdkError<ListCustomVerificationEmailTemplatesError>`](crate::error::ListCustomVerificationEmailTemplatesError)
    pub fn list_custom_verification_email_templates(
        &self,
    ) -> crate::client::fluent_builders::ListCustomVerificationEmailTemplates {
        crate::client::fluent_builders::ListCustomVerificationEmailTemplates::new(
            self.handle.clone(),
        )
    }
    /// Constructs a fluent builder for the [`ListDedicatedIpPools`](crate::client::fluent_builders::ListDedicatedIpPools) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListDedicatedIpPools::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListDedicatedIpPools::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListDedicatedIpPools::set_next_token): <p>A token returned from a previous call to <code>ListDedicatedIpPools</code> to indicate the position in the list of dedicated IP pools.</p>
    ///   - [`page_size(i32)`](crate::client::fluent_builders::ListDedicatedIpPools::page_size) / [`set_page_size(Option<i32>)`](crate::client::fluent_builders::ListDedicatedIpPools::set_page_size): <p>The number of results to show in a single call to <code>ListDedicatedIpPools</code>. If the number of results is larger than the number you specified in this parameter, then the response includes a <code>NextToken</code> element, which you can use to obtain additional results.</p>
    /// - On success, responds with [`ListDedicatedIpPoolsOutput`](crate::output::ListDedicatedIpPoolsOutput) with field(s):
    ///   - [`dedicated_ip_pools(Option<Vec<String>>)`](crate::output::ListDedicatedIpPoolsOutput::dedicated_ip_pools): <p>A list of all of the dedicated IP pools that are associated with your Amazon Web Services account in the current Region.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListDedicatedIpPoolsOutput::next_token): <p>A token that indicates that there are additional IP pools to list. To view additional IP pools, issue another request to <code>ListDedicatedIpPools</code>, passing this token in the <code>NextToken</code> parameter.</p>
    /// - On failure, responds with [`SdkError<ListDedicatedIpPoolsError>`](crate::error::ListDedicatedIpPoolsError)
    pub fn list_dedicated_ip_pools(&self) -> crate::client::fluent_builders::ListDedicatedIpPools {
        crate::client::fluent_builders::ListDedicatedIpPools::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListDeliverabilityTestReports`](crate::client::fluent_builders::ListDeliverabilityTestReports) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListDeliverabilityTestReports::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListDeliverabilityTestReports::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListDeliverabilityTestReports::set_next_token): <p>A token returned from a previous call to <code>ListDeliverabilityTestReports</code> to indicate the position in the list of predictive inbox placement tests.</p>
    ///   - [`page_size(i32)`](crate::client::fluent_builders::ListDeliverabilityTestReports::page_size) / [`set_page_size(Option<i32>)`](crate::client::fluent_builders::ListDeliverabilityTestReports::set_page_size): <p>The number of results to show in a single call to <code>ListDeliverabilityTestReports</code>. If the number of results is larger than the number you specified in this parameter, then the response includes a <code>NextToken</code> element, which you can use to obtain additional results.</p>  <p>The value you specify has to be at least 0, and can be no more than 1000.</p>
    /// - On success, responds with [`ListDeliverabilityTestReportsOutput`](crate::output::ListDeliverabilityTestReportsOutput) with field(s):
    ///   - [`deliverability_test_reports(Option<Vec<DeliverabilityTestReport>>)`](crate::output::ListDeliverabilityTestReportsOutput::deliverability_test_reports): <p>An object that contains a lists of predictive inbox placement tests that you've performed.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListDeliverabilityTestReportsOutput::next_token): <p>A token that indicates that there are additional predictive inbox placement tests to list. To view additional predictive inbox placement tests, issue another request to <code>ListDeliverabilityTestReports</code>, and pass this token in the <code>NextToken</code> parameter.</p>
    /// - On failure, responds with [`SdkError<ListDeliverabilityTestReportsError>`](crate::error::ListDeliverabilityTestReportsError)
    pub fn list_deliverability_test_reports(
        &self,
    ) -> crate::client::fluent_builders::ListDeliverabilityTestReports {
        crate::client::fluent_builders::ListDeliverabilityTestReports::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListDomainDeliverabilityCampaigns`](crate::client::fluent_builders::ListDomainDeliverabilityCampaigns) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListDomainDeliverabilityCampaigns::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`start_date(DateTime)`](crate::client::fluent_builders::ListDomainDeliverabilityCampaigns::start_date) / [`set_start_date(Option<DateTime>)`](crate::client::fluent_builders::ListDomainDeliverabilityCampaigns::set_start_date): <p>The first day that you want to obtain deliverability data for.</p>
    ///   - [`end_date(DateTime)`](crate::client::fluent_builders::ListDomainDeliverabilityCampaigns::end_date) / [`set_end_date(Option<DateTime>)`](crate::client::fluent_builders::ListDomainDeliverabilityCampaigns::set_end_date): <p>The last day that you want to obtain deliverability data for. This value has to be less than or equal to 30 days after the value of the <code>StartDate</code> parameter.</p>
    ///   - [`subscribed_domain(impl Into<String>)`](crate::client::fluent_builders::ListDomainDeliverabilityCampaigns::subscribed_domain) / [`set_subscribed_domain(Option<String>)`](crate::client::fluent_builders::ListDomainDeliverabilityCampaigns::set_subscribed_domain): <p>The domain to obtain deliverability data for.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListDomainDeliverabilityCampaigns::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListDomainDeliverabilityCampaigns::set_next_token): <p>A token that’s returned from a previous call to the <code>ListDomainDeliverabilityCampaigns</code> operation. This token indicates the position of a campaign in the list of campaigns.</p>
    ///   - [`page_size(i32)`](crate::client::fluent_builders::ListDomainDeliverabilityCampaigns::page_size) / [`set_page_size(Option<i32>)`](crate::client::fluent_builders::ListDomainDeliverabilityCampaigns::set_page_size): <p>The maximum number of results to include in response to a single call to the <code>ListDomainDeliverabilityCampaigns</code> operation. If the number of results is larger than the number that you specify in this parameter, the response includes a <code>NextToken</code> element, which you can use to obtain additional results.</p>
    /// - On success, responds with [`ListDomainDeliverabilityCampaignsOutput`](crate::output::ListDomainDeliverabilityCampaignsOutput) with field(s):
    ///   - [`domain_deliverability_campaigns(Option<Vec<DomainDeliverabilityCampaign>>)`](crate::output::ListDomainDeliverabilityCampaignsOutput::domain_deliverability_campaigns): <p>An array of responses, one for each campaign that used the domain to send email during the specified time range.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListDomainDeliverabilityCampaignsOutput::next_token): <p>A token that’s returned from a previous call to the <code>ListDomainDeliverabilityCampaigns</code> operation. This token indicates the position of the campaign in the list of campaigns.</p>
    /// - On failure, responds with [`SdkError<ListDomainDeliverabilityCampaignsError>`](crate::error::ListDomainDeliverabilityCampaignsError)
    pub fn list_domain_deliverability_campaigns(
        &self,
    ) -> crate::client::fluent_builders::ListDomainDeliverabilityCampaigns {
        crate::client::fluent_builders::ListDomainDeliverabilityCampaigns::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListEmailIdentities`](crate::client::fluent_builders::ListEmailIdentities) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListEmailIdentities::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListEmailIdentities::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListEmailIdentities::set_next_token): <p>A token returned from a previous call to <code>ListEmailIdentities</code> to indicate the position in the list of identities.</p>
    ///   - [`page_size(i32)`](crate::client::fluent_builders::ListEmailIdentities::page_size) / [`set_page_size(Option<i32>)`](crate::client::fluent_builders::ListEmailIdentities::set_page_size): <p>The number of results to show in a single call to <code>ListEmailIdentities</code>. If the number of results is larger than the number you specified in this parameter, then the response includes a <code>NextToken</code> element, which you can use to obtain additional results.</p>  <p>The value you specify has to be at least 0, and can be no more than 1000.</p>
    /// - On success, responds with [`ListEmailIdentitiesOutput`](crate::output::ListEmailIdentitiesOutput) with field(s):
    ///   - [`email_identities(Option<Vec<IdentityInfo>>)`](crate::output::ListEmailIdentitiesOutput::email_identities): <p>An array that includes all of the email identities associated with your Amazon Web Services account.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListEmailIdentitiesOutput::next_token): <p>A token that indicates that there are additional configuration sets to list. To view additional configuration sets, issue another request to <code>ListEmailIdentities</code>, and pass this token in the <code>NextToken</code> parameter.</p>
    /// - On failure, responds with [`SdkError<ListEmailIdentitiesError>`](crate::error::ListEmailIdentitiesError)
    pub fn list_email_identities(&self) -> crate::client::fluent_builders::ListEmailIdentities {
        crate::client::fluent_builders::ListEmailIdentities::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListEmailTemplates`](crate::client::fluent_builders::ListEmailTemplates) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListEmailTemplates::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListEmailTemplates::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListEmailTemplates::set_next_token): <p>A token returned from a previous call to <code>ListEmailTemplates</code> to indicate the position in the list of email templates.</p>
    ///   - [`page_size(i32)`](crate::client::fluent_builders::ListEmailTemplates::page_size) / [`set_page_size(Option<i32>)`](crate::client::fluent_builders::ListEmailTemplates::set_page_size): <p>The number of results to show in a single call to <code>ListEmailTemplates</code>. If the number of results is larger than the number you specified in this parameter, then the response includes a <code>NextToken</code> element, which you can use to obtain additional results.</p>  <p>The value you specify has to be at least 1, and can be no more than 10.</p>
    /// - On success, responds with [`ListEmailTemplatesOutput`](crate::output::ListEmailTemplatesOutput) with field(s):
    ///   - [`templates_metadata(Option<Vec<EmailTemplateMetadata>>)`](crate::output::ListEmailTemplatesOutput::templates_metadata): <p>An array the contains the name and creation time stamp for each template in your Amazon SES account.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListEmailTemplatesOutput::next_token): <p>A token indicating that there are additional email templates available to be listed. Pass this token to a subsequent <code>ListEmailTemplates</code> call to retrieve the next 10 email templates.</p>
    /// - On failure, responds with [`SdkError<ListEmailTemplatesError>`](crate::error::ListEmailTemplatesError)
    pub fn list_email_templates(&self) -> crate::client::fluent_builders::ListEmailTemplates {
        crate::client::fluent_builders::ListEmailTemplates::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListImportJobs`](crate::client::fluent_builders::ListImportJobs) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListImportJobs::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`import_destination_type(ImportDestinationType)`](crate::client::fluent_builders::ListImportJobs::import_destination_type) / [`set_import_destination_type(Option<ImportDestinationType>)`](crate::client::fluent_builders::ListImportJobs::set_import_destination_type): <p>The destination of the import job, which can be used to list import jobs that have a certain <code>ImportDestinationType</code>.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListImportJobs::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListImportJobs::set_next_token): <p>A string token indicating that there might be additional import jobs available to be listed. Copy this token to a subsequent call to <code>ListImportJobs</code> with the same parameters to retrieve the next page of import jobs.</p>
    ///   - [`page_size(i32)`](crate::client::fluent_builders::ListImportJobs::page_size) / [`set_page_size(Option<i32>)`](crate::client::fluent_builders::ListImportJobs::set_page_size): <p>Maximum number of import jobs to return at once. Use this parameter to paginate results. If additional import jobs exist beyond the specified limit, the <code>NextToken</code> element is sent in the response. Use the <code>NextToken</code> value in subsequent requests to retrieve additional addresses.</p>
    /// - On success, responds with [`ListImportJobsOutput`](crate::output::ListImportJobsOutput) with field(s):
    ///   - [`import_jobs(Option<Vec<ImportJobSummary>>)`](crate::output::ListImportJobsOutput::import_jobs): <p>A list of the import job summaries.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListImportJobsOutput::next_token): <p>A string token indicating that there might be additional import jobs available to be listed. Copy this token to a subsequent call to <code>ListImportJobs</code> with the same parameters to retrieve the next page of import jobs.</p>
    /// - On failure, responds with [`SdkError<ListImportJobsError>`](crate::error::ListImportJobsError)
    pub fn list_import_jobs(&self) -> crate::client::fluent_builders::ListImportJobs {
        crate::client::fluent_builders::ListImportJobs::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListRecommendations`](crate::client::fluent_builders::ListRecommendations) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListRecommendations::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`filter(HashMap<ListRecommendationsFilterKey, String>)`](crate::client::fluent_builders::ListRecommendations::filter) / [`set_filter(Option<HashMap<ListRecommendationsFilterKey, String>>)`](crate::client::fluent_builders::ListRecommendations::set_filter): <p>Filters applied when retrieving recommendations. Can eiter be an individual filter, or combinations of <code>STATUS</code> and <code>IMPACT</code> or <code>STATUS</code> and <code>TYPE</code> </p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListRecommendations::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListRecommendations::set_next_token): <p>A token returned from a previous call to <code>ListRecommendations</code> to indicate the position in the list of recommendations.</p>
    ///   - [`page_size(i32)`](crate::client::fluent_builders::ListRecommendations::page_size) / [`set_page_size(Option<i32>)`](crate::client::fluent_builders::ListRecommendations::set_page_size): <p>The number of results to show in a single call to <code>ListRecommendations</code>. If the number of results is larger than the number you specified in this parameter, then the response includes a <code>NextToken</code> element, which you can use to obtain additional results.</p>  <p>The value you specify has to be at least 1, and can be no more than 100.</p>
    /// - On success, responds with [`ListRecommendationsOutput`](crate::output::ListRecommendationsOutput) with field(s):
    ///   - [`recommendations(Option<Vec<Recommendation>>)`](crate::output::ListRecommendationsOutput::recommendations): <p>The recommendations applicable to your account.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListRecommendationsOutput::next_token): <p>A string token indicating that there might be additional recommendations available to be listed. Use the token provided in the <code>ListRecommendationsResponse</code> to use in the subsequent call to <code>ListRecommendations</code> with the same parameters to retrieve the next page of recommendations.</p>
    /// - On failure, responds with [`SdkError<ListRecommendationsError>`](crate::error::ListRecommendationsError)
    pub fn list_recommendations(&self) -> crate::client::fluent_builders::ListRecommendations {
        crate::client::fluent_builders::ListRecommendations::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListSuppressedDestinations`](crate::client::fluent_builders::ListSuppressedDestinations) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListSuppressedDestinations::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`reasons(Vec<SuppressionListReason>)`](crate::client::fluent_builders::ListSuppressedDestinations::reasons) / [`set_reasons(Option<Vec<SuppressionListReason>>)`](crate::client::fluent_builders::ListSuppressedDestinations::set_reasons): <p>The factors that caused the email address to be added to .</p>
    ///   - [`start_date(DateTime)`](crate::client::fluent_builders::ListSuppressedDestinations::start_date) / [`set_start_date(Option<DateTime>)`](crate::client::fluent_builders::ListSuppressedDestinations::set_start_date): <p>Used to filter the list of suppressed email destinations so that it only includes addresses that were added to the list after a specific date.</p>
    ///   - [`end_date(DateTime)`](crate::client::fluent_builders::ListSuppressedDestinations::end_date) / [`set_end_date(Option<DateTime>)`](crate::client::fluent_builders::ListSuppressedDestinations::set_end_date): <p>Used to filter the list of suppressed email destinations so that it only includes addresses that were added to the list before a specific date.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListSuppressedDestinations::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListSuppressedDestinations::set_next_token): <p>A token returned from a previous call to <code>ListSuppressedDestinations</code> to indicate the position in the list of suppressed email addresses.</p>
    ///   - [`page_size(i32)`](crate::client::fluent_builders::ListSuppressedDestinations::page_size) / [`set_page_size(Option<i32>)`](crate::client::fluent_builders::ListSuppressedDestinations::set_page_size): <p>The number of results to show in a single call to <code>ListSuppressedDestinations</code>. If the number of results is larger than the number you specified in this parameter, then the response includes a <code>NextToken</code> element, which you can use to obtain additional results.</p>
    /// - On success, responds with [`ListSuppressedDestinationsOutput`](crate::output::ListSuppressedDestinationsOutput) with field(s):
    ///   - [`suppressed_destination_summaries(Option<Vec<SuppressedDestinationSummary>>)`](crate::output::ListSuppressedDestinationsOutput::suppressed_destination_summaries): <p>A list of summaries, each containing a summary for a suppressed email destination.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListSuppressedDestinationsOutput::next_token): <p>A token that indicates that there are additional email addresses on the suppression list for your account. To view additional suppressed addresses, issue another request to <code>ListSuppressedDestinations</code>, and pass this token in the <code>NextToken</code> parameter.</p>
    /// - On failure, responds with [`SdkError<ListSuppressedDestinationsError>`](crate::error::ListSuppressedDestinationsError)
    pub fn list_suppressed_destinations(
        &self,
    ) -> crate::client::fluent_builders::ListSuppressedDestinations {
        crate::client::fluent_builders::ListSuppressedDestinations::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListTagsForResource`](crate::client::fluent_builders::ListTagsForResource) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`resource_arn(impl Into<String>)`](crate::client::fluent_builders::ListTagsForResource::resource_arn) / [`set_resource_arn(Option<String>)`](crate::client::fluent_builders::ListTagsForResource::set_resource_arn): <p>The Amazon Resource Name (ARN) of the resource that you want to retrieve tag information for.</p>
    /// - On success, responds with [`ListTagsForResourceOutput`](crate::output::ListTagsForResourceOutput) with field(s):
    ///   - [`tags(Option<Vec<Tag>>)`](crate::output::ListTagsForResourceOutput::tags): <p>An array that lists all the tags that are associated with the resource. Each tag consists of a required tag key (<code>Key</code>) and an associated tag value (<code>Value</code>)</p>
    /// - On failure, responds with [`SdkError<ListTagsForResourceError>`](crate::error::ListTagsForResourceError)
    pub fn list_tags_for_resource(&self) -> crate::client::fluent_builders::ListTagsForResource {
        crate::client::fluent_builders::ListTagsForResource::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`PutAccountDedicatedIpWarmupAttributes`](crate::client::fluent_builders::PutAccountDedicatedIpWarmupAttributes) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`auto_warmup_enabled(bool)`](crate::client::fluent_builders::PutAccountDedicatedIpWarmupAttributes::auto_warmup_enabled) / [`set_auto_warmup_enabled(bool)`](crate::client::fluent_builders::PutAccountDedicatedIpWarmupAttributes::set_auto_warmup_enabled): <p>Enables or disables the automatic warm-up feature for dedicated IP addresses that are associated with your Amazon SES account in the current Amazon Web Services Region. Set to <code>true</code> to enable the automatic warm-up feature, or set to <code>false</code> to disable it.</p>
    /// - On success, responds with [`PutAccountDedicatedIpWarmupAttributesOutput`](crate::output::PutAccountDedicatedIpWarmupAttributesOutput)

    /// - On failure, responds with [`SdkError<PutAccountDedicatedIpWarmupAttributesError>`](crate::error::PutAccountDedicatedIpWarmupAttributesError)
    pub fn put_account_dedicated_ip_warmup_attributes(
        &self,
    ) -> crate::client::fluent_builders::PutAccountDedicatedIpWarmupAttributes {
        crate::client::fluent_builders::PutAccountDedicatedIpWarmupAttributes::new(
            self.handle.clone(),
        )
    }
    /// Constructs a fluent builder for the [`PutAccountDetails`](crate::client::fluent_builders::PutAccountDetails) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`mail_type(MailType)`](crate::client::fluent_builders::PutAccountDetails::mail_type) / [`set_mail_type(Option<MailType>)`](crate::client::fluent_builders::PutAccountDetails::set_mail_type): <p>The type of email your account will send.</p>
    ///   - [`website_url(impl Into<String>)`](crate::client::fluent_builders::PutAccountDetails::website_url) / [`set_website_url(Option<String>)`](crate::client::fluent_builders::PutAccountDetails::set_website_url): <p>The URL of your website. This information helps us better understand the type of content that you plan to send.</p>
    ///   - [`contact_language(ContactLanguage)`](crate::client::fluent_builders::PutAccountDetails::contact_language) / [`set_contact_language(Option<ContactLanguage>)`](crate::client::fluent_builders::PutAccountDetails::set_contact_language): <p>The language you would prefer to be contacted with.</p>
    ///   - [`use_case_description(impl Into<String>)`](crate::client::fluent_builders::PutAccountDetails::use_case_description) / [`set_use_case_description(Option<String>)`](crate::client::fluent_builders::PutAccountDetails::set_use_case_description): <p>A description of the types of email that you plan to send.</p>
    ///   - [`additional_contact_email_addresses(Vec<String>)`](crate::client::fluent_builders::PutAccountDetails::additional_contact_email_addresses) / [`set_additional_contact_email_addresses(Option<Vec<String>>)`](crate::client::fluent_builders::PutAccountDetails::set_additional_contact_email_addresses): <p>Additional email addresses that you would like to be notified regarding Amazon SES matters.</p>
    ///   - [`production_access_enabled(bool)`](crate::client::fluent_builders::PutAccountDetails::production_access_enabled) / [`set_production_access_enabled(Option<bool>)`](crate::client::fluent_builders::PutAccountDetails::set_production_access_enabled): <p>Indicates whether or not your account should have production access in the current Amazon Web Services Region.</p>  <p>If the value is <code>false</code>, then your account is in the <i>sandbox</i>. When your account is in the sandbox, you can only send email to verified identities. Additionally, the maximum number of emails you can send in a 24-hour period (your sending quota) is 200, and the maximum number of emails you can send per second (your maximum sending rate) is 1.</p>  <p>If the value is <code>true</code>, then your account has production access. When your account has production access, you can send email to any address. The sending quota and maximum sending rate for your account vary based on your specific use case.</p>
    /// - On success, responds with [`PutAccountDetailsOutput`](crate::output::PutAccountDetailsOutput)

    /// - On failure, responds with [`SdkError<PutAccountDetailsError>`](crate::error::PutAccountDetailsError)
    pub fn put_account_details(&self) -> crate::client::fluent_builders::PutAccountDetails {
        crate::client::fluent_builders::PutAccountDetails::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`PutAccountSendingAttributes`](crate::client::fluent_builders::PutAccountSendingAttributes) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`sending_enabled(bool)`](crate::client::fluent_builders::PutAccountSendingAttributes::sending_enabled) / [`set_sending_enabled(bool)`](crate::client::fluent_builders::PutAccountSendingAttributes::set_sending_enabled): <p>Enables or disables your account's ability to send email. Set to <code>true</code> to enable email sending, or set to <code>false</code> to disable email sending.</p> <note>   <p>If Amazon Web Services paused your account's ability to send email, you can't use this operation to resume your account's ability to send email.</p>  </note>
    /// - On success, responds with [`PutAccountSendingAttributesOutput`](crate::output::PutAccountSendingAttributesOutput)

    /// - On failure, responds with [`SdkError<PutAccountSendingAttributesError>`](crate::error::PutAccountSendingAttributesError)
    pub fn put_account_sending_attributes(
        &self,
    ) -> crate::client::fluent_builders::PutAccountSendingAttributes {
        crate::client::fluent_builders::PutAccountSendingAttributes::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`PutAccountSuppressionAttributes`](crate::client::fluent_builders::PutAccountSuppressionAttributes) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`suppressed_reasons(Vec<SuppressionListReason>)`](crate::client::fluent_builders::PutAccountSuppressionAttributes::suppressed_reasons) / [`set_suppressed_reasons(Option<Vec<SuppressionListReason>>)`](crate::client::fluent_builders::PutAccountSuppressionAttributes::set_suppressed_reasons): <p>A list that contains the reasons that email addresses will be automatically added to the suppression list for your account. This list can contain any or all of the following:</p>  <ul>   <li> <p> <code>COMPLAINT</code> – Amazon SES adds an email address to the suppression list for your account when a message sent to that address results in a complaint.</p> </li>   <li> <p> <code>BOUNCE</code> – Amazon SES adds an email address to the suppression list for your account when a message sent to that address results in a hard bounce.</p> </li>  </ul>
    /// - On success, responds with [`PutAccountSuppressionAttributesOutput`](crate::output::PutAccountSuppressionAttributesOutput)

    /// - On failure, responds with [`SdkError<PutAccountSuppressionAttributesError>`](crate::error::PutAccountSuppressionAttributesError)
    pub fn put_account_suppression_attributes(
        &self,
    ) -> crate::client::fluent_builders::PutAccountSuppressionAttributes {
        crate::client::fluent_builders::PutAccountSuppressionAttributes::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`PutAccountVdmAttributes`](crate::client::fluent_builders::PutAccountVdmAttributes) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`vdm_attributes(VdmAttributes)`](crate::client::fluent_builders::PutAccountVdmAttributes::vdm_attributes) / [`set_vdm_attributes(Option<VdmAttributes>)`](crate::client::fluent_builders::PutAccountVdmAttributes::set_vdm_attributes): <p>The VDM attributes that you wish to apply to your Amazon SES account.</p>
    /// - On success, responds with [`PutAccountVdmAttributesOutput`](crate::output::PutAccountVdmAttributesOutput)

    /// - On failure, responds with [`SdkError<PutAccountVdmAttributesError>`](crate::error::PutAccountVdmAttributesError)
    pub fn put_account_vdm_attributes(
        &self,
    ) -> crate::client::fluent_builders::PutAccountVdmAttributes {
        crate::client::fluent_builders::PutAccountVdmAttributes::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`PutConfigurationSetDeliveryOptions`](crate::client::fluent_builders::PutConfigurationSetDeliveryOptions) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`configuration_set_name(impl Into<String>)`](crate::client::fluent_builders::PutConfigurationSetDeliveryOptions::configuration_set_name) / [`set_configuration_set_name(Option<String>)`](crate::client::fluent_builders::PutConfigurationSetDeliveryOptions::set_configuration_set_name): <p>The name of the configuration set to associate with a dedicated IP pool.</p>
    ///   - [`tls_policy(TlsPolicy)`](crate::client::fluent_builders::PutConfigurationSetDeliveryOptions::tls_policy) / [`set_tls_policy(Option<TlsPolicy>)`](crate::client::fluent_builders::PutConfigurationSetDeliveryOptions::set_tls_policy): <p>Specifies whether messages that use the configuration set are required to use Transport Layer Security (TLS). If the value is <code>Require</code>, messages are only delivered if a TLS connection can be established. If the value is <code>Optional</code>, messages can be delivered in plain text if a TLS connection can't be established.</p>
    ///   - [`sending_pool_name(impl Into<String>)`](crate::client::fluent_builders::PutConfigurationSetDeliveryOptions::sending_pool_name) / [`set_sending_pool_name(Option<String>)`](crate::client::fluent_builders::PutConfigurationSetDeliveryOptions::set_sending_pool_name): <p>The name of the dedicated IP pool to associate with the configuration set.</p>
    /// - On success, responds with [`PutConfigurationSetDeliveryOptionsOutput`](crate::output::PutConfigurationSetDeliveryOptionsOutput)

    /// - On failure, responds with [`SdkError<PutConfigurationSetDeliveryOptionsError>`](crate::error::PutConfigurationSetDeliveryOptionsError)
    pub fn put_configuration_set_delivery_options(
        &self,
    ) -> crate::client::fluent_builders::PutConfigurationSetDeliveryOptions {
        crate::client::fluent_builders::PutConfigurationSetDeliveryOptions::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`PutConfigurationSetReputationOptions`](crate::client::fluent_builders::PutConfigurationSetReputationOptions) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`configuration_set_name(impl Into<String>)`](crate::client::fluent_builders::PutConfigurationSetReputationOptions::configuration_set_name) / [`set_configuration_set_name(Option<String>)`](crate::client::fluent_builders::PutConfigurationSetReputationOptions::set_configuration_set_name): <p>The name of the configuration set.</p>
    ///   - [`reputation_metrics_enabled(bool)`](crate::client::fluent_builders::PutConfigurationSetReputationOptions::reputation_metrics_enabled) / [`set_reputation_metrics_enabled(bool)`](crate::client::fluent_builders::PutConfigurationSetReputationOptions::set_reputation_metrics_enabled): <p>If <code>true</code>, tracking of reputation metrics is enabled for the configuration set. If <code>false</code>, tracking of reputation metrics is disabled for the configuration set.</p>
    /// - On success, responds with [`PutConfigurationSetReputationOptionsOutput`](crate::output::PutConfigurationSetReputationOptionsOutput)

    /// - On failure, responds with [`SdkError<PutConfigurationSetReputationOptionsError>`](crate::error::PutConfigurationSetReputationOptionsError)
    pub fn put_configuration_set_reputation_options(
        &self,
    ) -> crate::client::fluent_builders::PutConfigurationSetReputationOptions {
        crate::client::fluent_builders::PutConfigurationSetReputationOptions::new(
            self.handle.clone(),
        )
    }
    /// Constructs a fluent builder for the [`PutConfigurationSetSendingOptions`](crate::client::fluent_builders::PutConfigurationSetSendingOptions) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`configuration_set_name(impl Into<String>)`](crate::client::fluent_builders::PutConfigurationSetSendingOptions::configuration_set_name) / [`set_configuration_set_name(Option<String>)`](crate::client::fluent_builders::PutConfigurationSetSendingOptions::set_configuration_set_name): <p>The name of the configuration set to enable or disable email sending for.</p>
    ///   - [`sending_enabled(bool)`](crate::client::fluent_builders::PutConfigurationSetSendingOptions::sending_enabled) / [`set_sending_enabled(bool)`](crate::client::fluent_builders::PutConfigurationSetSendingOptions::set_sending_enabled): <p>If <code>true</code>, email sending is enabled for the configuration set. If <code>false</code>, email sending is disabled for the configuration set.</p>
    /// - On success, responds with [`PutConfigurationSetSendingOptionsOutput`](crate::output::PutConfigurationSetSendingOptionsOutput)

    /// - On failure, responds with [`SdkError<PutConfigurationSetSendingOptionsError>`](crate::error::PutConfigurationSetSendingOptionsError)
    pub fn put_configuration_set_sending_options(
        &self,
    ) -> crate::client::fluent_builders::PutConfigurationSetSendingOptions {
        crate::client::fluent_builders::PutConfigurationSetSendingOptions::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`PutConfigurationSetSuppressionOptions`](crate::client::fluent_builders::PutConfigurationSetSuppressionOptions) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`configuration_set_name(impl Into<String>)`](crate::client::fluent_builders::PutConfigurationSetSuppressionOptions::configuration_set_name) / [`set_configuration_set_name(Option<String>)`](crate::client::fluent_builders::PutConfigurationSetSuppressionOptions::set_configuration_set_name): <p>The name of the configuration set to change the suppression list preferences for.</p>
    ///   - [`suppressed_reasons(Vec<SuppressionListReason>)`](crate::client::fluent_builders::PutConfigurationSetSuppressionOptions::suppressed_reasons) / [`set_suppressed_reasons(Option<Vec<SuppressionListReason>>)`](crate::client::fluent_builders::PutConfigurationSetSuppressionOptions::set_suppressed_reasons): <p>A list that contains the reasons that email addresses are automatically added to the suppression list for your account. This list can contain any or all of the following:</p>  <ul>   <li> <p> <code>COMPLAINT</code> – Amazon SES adds an email address to the suppression list for your account when a message sent to that address results in a complaint.</p> </li>   <li> <p> <code>BOUNCE</code> – Amazon SES adds an email address to the suppression list for your account when a message sent to that address results in a hard bounce.</p> </li>  </ul>
    /// - On success, responds with [`PutConfigurationSetSuppressionOptionsOutput`](crate::output::PutConfigurationSetSuppressionOptionsOutput)

    /// - On failure, responds with [`SdkError<PutConfigurationSetSuppressionOptionsError>`](crate::error::PutConfigurationSetSuppressionOptionsError)
    pub fn put_configuration_set_suppression_options(
        &self,
    ) -> crate::client::fluent_builders::PutConfigurationSetSuppressionOptions {
        crate::client::fluent_builders::PutConfigurationSetSuppressionOptions::new(
            self.handle.clone(),
        )
    }
    /// Constructs a fluent builder for the [`PutConfigurationSetTrackingOptions`](crate::client::fluent_builders::PutConfigurationSetTrackingOptions) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`configuration_set_name(impl Into<String>)`](crate::client::fluent_builders::PutConfigurationSetTrackingOptions::configuration_set_name) / [`set_configuration_set_name(Option<String>)`](crate::client::fluent_builders::PutConfigurationSetTrackingOptions::set_configuration_set_name): <p>The name of the configuration set.</p>
    ///   - [`custom_redirect_domain(impl Into<String>)`](crate::client::fluent_builders::PutConfigurationSetTrackingOptions::custom_redirect_domain) / [`set_custom_redirect_domain(Option<String>)`](crate::client::fluent_builders::PutConfigurationSetTrackingOptions::set_custom_redirect_domain): <p>The domain to use to track open and click events.</p>
    /// - On success, responds with [`PutConfigurationSetTrackingOptionsOutput`](crate::output::PutConfigurationSetTrackingOptionsOutput)

    /// - On failure, responds with [`SdkError<PutConfigurationSetTrackingOptionsError>`](crate::error::PutConfigurationSetTrackingOptionsError)
    pub fn put_configuration_set_tracking_options(
        &self,
    ) -> crate::client::fluent_builders::PutConfigurationSetTrackingOptions {
        crate::client::fluent_builders::PutConfigurationSetTrackingOptions::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`PutConfigurationSetVdmOptions`](crate::client::fluent_builders::PutConfigurationSetVdmOptions) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`configuration_set_name(impl Into<String>)`](crate::client::fluent_builders::PutConfigurationSetVdmOptions::configuration_set_name) / [`set_configuration_set_name(Option<String>)`](crate::client::fluent_builders::PutConfigurationSetVdmOptions::set_configuration_set_name): <p>The name of the configuration set.</p>
    ///   - [`vdm_options(VdmOptions)`](crate::client::fluent_builders::PutConfigurationSetVdmOptions::vdm_options) / [`set_vdm_options(Option<VdmOptions>)`](crate::client::fluent_builders::PutConfigurationSetVdmOptions::set_vdm_options): <p>The VDM options to apply to the configuration set.</p>
    /// - On success, responds with [`PutConfigurationSetVdmOptionsOutput`](crate::output::PutConfigurationSetVdmOptionsOutput)

    /// - On failure, responds with [`SdkError<PutConfigurationSetVdmOptionsError>`](crate::error::PutConfigurationSetVdmOptionsError)
    pub fn put_configuration_set_vdm_options(
        &self,
    ) -> crate::client::fluent_builders::PutConfigurationSetVdmOptions {
        crate::client::fluent_builders::PutConfigurationSetVdmOptions::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`PutDedicatedIpInPool`](crate::client::fluent_builders::PutDedicatedIpInPool) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`ip(impl Into<String>)`](crate::client::fluent_builders::PutDedicatedIpInPool::ip) / [`set_ip(Option<String>)`](crate::client::fluent_builders::PutDedicatedIpInPool::set_ip): <p>The IP address that you want to move to the dedicated IP pool. The value you specify has to be a dedicated IP address that's associated with your Amazon Web Services account.</p>
    ///   - [`destination_pool_name(impl Into<String>)`](crate::client::fluent_builders::PutDedicatedIpInPool::destination_pool_name) / [`set_destination_pool_name(Option<String>)`](crate::client::fluent_builders::PutDedicatedIpInPool::set_destination_pool_name): <p>The name of the IP pool that you want to add the dedicated IP address to. You have to specify an IP pool that already exists.</p>
    /// - On success, responds with [`PutDedicatedIpInPoolOutput`](crate::output::PutDedicatedIpInPoolOutput)

    /// - On failure, responds with [`SdkError<PutDedicatedIpInPoolError>`](crate::error::PutDedicatedIpInPoolError)
    pub fn put_dedicated_ip_in_pool(&self) -> crate::client::fluent_builders::PutDedicatedIpInPool {
        crate::client::fluent_builders::PutDedicatedIpInPool::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`PutDedicatedIpWarmupAttributes`](crate::client::fluent_builders::PutDedicatedIpWarmupAttributes) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`ip(impl Into<String>)`](crate::client::fluent_builders::PutDedicatedIpWarmupAttributes::ip) / [`set_ip(Option<String>)`](crate::client::fluent_builders::PutDedicatedIpWarmupAttributes::set_ip): <p>The dedicated IP address that you want to update the warm-up attributes for.</p>
    ///   - [`warmup_percentage(i32)`](crate::client::fluent_builders::PutDedicatedIpWarmupAttributes::warmup_percentage) / [`set_warmup_percentage(Option<i32>)`](crate::client::fluent_builders::PutDedicatedIpWarmupAttributes::set_warmup_percentage): <p>The warm-up percentage that you want to associate with the dedicated IP address.</p>
    /// - On success, responds with [`PutDedicatedIpWarmupAttributesOutput`](crate::output::PutDedicatedIpWarmupAttributesOutput)

    /// - On failure, responds with [`SdkError<PutDedicatedIpWarmupAttributesError>`](crate::error::PutDedicatedIpWarmupAttributesError)
    pub fn put_dedicated_ip_warmup_attributes(
        &self,
    ) -> crate::client::fluent_builders::PutDedicatedIpWarmupAttributes {
        crate::client::fluent_builders::PutDedicatedIpWarmupAttributes::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`PutDeliverabilityDashboardOption`](crate::client::fluent_builders::PutDeliverabilityDashboardOption) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`dashboard_enabled(bool)`](crate::client::fluent_builders::PutDeliverabilityDashboardOption::dashboard_enabled) / [`set_dashboard_enabled(bool)`](crate::client::fluent_builders::PutDeliverabilityDashboardOption::set_dashboard_enabled): <p>Specifies whether to enable the Deliverability dashboard. To enable the dashboard, set this value to <code>true</code>.</p>
    ///   - [`subscribed_domains(Vec<DomainDeliverabilityTrackingOption>)`](crate::client::fluent_builders::PutDeliverabilityDashboardOption::subscribed_domains) / [`set_subscribed_domains(Option<Vec<DomainDeliverabilityTrackingOption>>)`](crate::client::fluent_builders::PutDeliverabilityDashboardOption::set_subscribed_domains): <p>An array of objects, one for each verified domain that you use to send email and enabled the Deliverability dashboard for.</p>
    /// - On success, responds with [`PutDeliverabilityDashboardOptionOutput`](crate::output::PutDeliverabilityDashboardOptionOutput)

    /// - On failure, responds with [`SdkError<PutDeliverabilityDashboardOptionError>`](crate::error::PutDeliverabilityDashboardOptionError)
    pub fn put_deliverability_dashboard_option(
        &self,
    ) -> crate::client::fluent_builders::PutDeliverabilityDashboardOption {
        crate::client::fluent_builders::PutDeliverabilityDashboardOption::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`PutEmailIdentityConfigurationSetAttributes`](crate::client::fluent_builders::PutEmailIdentityConfigurationSetAttributes) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`email_identity(impl Into<String>)`](crate::client::fluent_builders::PutEmailIdentityConfigurationSetAttributes::email_identity) / [`set_email_identity(Option<String>)`](crate::client::fluent_builders::PutEmailIdentityConfigurationSetAttributes::set_email_identity): <p>The email address or domain to associate with a configuration set.</p>
    ///   - [`configuration_set_name(impl Into<String>)`](crate::client::fluent_builders::PutEmailIdentityConfigurationSetAttributes::configuration_set_name) / [`set_configuration_set_name(Option<String>)`](crate::client::fluent_builders::PutEmailIdentityConfigurationSetAttributes::set_configuration_set_name): <p>The configuration set to associate with an email identity.</p>
    /// - On success, responds with [`PutEmailIdentityConfigurationSetAttributesOutput`](crate::output::PutEmailIdentityConfigurationSetAttributesOutput)

    /// - On failure, responds with [`SdkError<PutEmailIdentityConfigurationSetAttributesError>`](crate::error::PutEmailIdentityConfigurationSetAttributesError)
    pub fn put_email_identity_configuration_set_attributes(
        &self,
    ) -> crate::client::fluent_builders::PutEmailIdentityConfigurationSetAttributes {
        crate::client::fluent_builders::PutEmailIdentityConfigurationSetAttributes::new(
            self.handle.clone(),
        )
    }
    /// Constructs a fluent builder for the [`PutEmailIdentityDkimAttributes`](crate::client::fluent_builders::PutEmailIdentityDkimAttributes) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`email_identity(impl Into<String>)`](crate::client::fluent_builders::PutEmailIdentityDkimAttributes::email_identity) / [`set_email_identity(Option<String>)`](crate::client::fluent_builders::PutEmailIdentityDkimAttributes::set_email_identity): <p>The email identity.</p>
    ///   - [`signing_enabled(bool)`](crate::client::fluent_builders::PutEmailIdentityDkimAttributes::signing_enabled) / [`set_signing_enabled(bool)`](crate::client::fluent_builders::PutEmailIdentityDkimAttributes::set_signing_enabled): <p>Sets the DKIM signing configuration for the identity.</p>  <p>When you set this value <code>true</code>, then the messages that are sent from the identity are signed using DKIM. If you set this value to <code>false</code>, your messages are sent without DKIM signing.</p>
    /// - On success, responds with [`PutEmailIdentityDkimAttributesOutput`](crate::output::PutEmailIdentityDkimAttributesOutput)

    /// - On failure, responds with [`SdkError<PutEmailIdentityDkimAttributesError>`](crate::error::PutEmailIdentityDkimAttributesError)
    pub fn put_email_identity_dkim_attributes(
        &self,
    ) -> crate::client::fluent_builders::PutEmailIdentityDkimAttributes {
        crate::client::fluent_builders::PutEmailIdentityDkimAttributes::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`PutEmailIdentityDkimSigningAttributes`](crate::client::fluent_builders::PutEmailIdentityDkimSigningAttributes) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`email_identity(impl Into<String>)`](crate::client::fluent_builders::PutEmailIdentityDkimSigningAttributes::email_identity) / [`set_email_identity(Option<String>)`](crate::client::fluent_builders::PutEmailIdentityDkimSigningAttributes::set_email_identity): <p>The email identity.</p>
    ///   - [`signing_attributes_origin(DkimSigningAttributesOrigin)`](crate::client::fluent_builders::PutEmailIdentityDkimSigningAttributes::signing_attributes_origin) / [`set_signing_attributes_origin(Option<DkimSigningAttributesOrigin>)`](crate::client::fluent_builders::PutEmailIdentityDkimSigningAttributes::set_signing_attributes_origin): <p>The method to use to configure DKIM for the identity. There are the following possible values:</p>  <ul>   <li> <p> <code>AWS_SES</code> – Configure DKIM for the identity by using <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim.html">Easy DKIM</a>.</p> </li>   <li> <p> <code>EXTERNAL</code> – Configure DKIM for the identity by using Bring Your Own DKIM (BYODKIM).</p> </li>  </ul>
    ///   - [`signing_attributes(DkimSigningAttributes)`](crate::client::fluent_builders::PutEmailIdentityDkimSigningAttributes::signing_attributes) / [`set_signing_attributes(Option<DkimSigningAttributes>)`](crate::client::fluent_builders::PutEmailIdentityDkimSigningAttributes::set_signing_attributes): <p>An object that contains information about the private key and selector that you want to use to configure DKIM for the identity for Bring Your Own DKIM (BYODKIM) for the identity, or, configures the key length to be used for <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim.html">Easy DKIM</a>.</p>
    /// - On success, responds with [`PutEmailIdentityDkimSigningAttributesOutput`](crate::output::PutEmailIdentityDkimSigningAttributesOutput) with field(s):
    ///   - [`dkim_status(Option<DkimStatus>)`](crate::output::PutEmailIdentityDkimSigningAttributesOutput::dkim_status): <p>The DKIM authentication status of the identity. Amazon SES determines the authentication status by searching for specific records in the DNS configuration for your domain. If you used <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim.html">Easy DKIM</a> to set up DKIM authentication, Amazon SES tries to find three unique CNAME records in the DNS configuration for your domain.</p>  <p>If you provided a public key to perform DKIM authentication, Amazon SES tries to find a TXT record that uses the selector that you specified. The value of the TXT record must be a public key that's paired with the private key that you specified in the process of creating the identity.</p>  <p>The status can be one of the following:</p>  <ul>   <li> <p> <code>PENDING</code> – The verification process was initiated, but Amazon SES hasn't yet detected the DKIM records in the DNS configuration for the domain.</p> </li>   <li> <p> <code>SUCCESS</code> – The verification process completed successfully.</p> </li>   <li> <p> <code>FAILED</code> – The verification process failed. This typically occurs when Amazon SES fails to find the DKIM records in the DNS configuration of the domain.</p> </li>   <li> <p> <code>TEMPORARY_FAILURE</code> – A temporary issue is preventing Amazon SES from determining the DKIM authentication status of the domain.</p> </li>   <li> <p> <code>NOT_STARTED</code> – The DKIM verification process hasn't been initiated for the domain.</p> </li>  </ul>
    ///   - [`dkim_tokens(Option<Vec<String>>)`](crate::output::PutEmailIdentityDkimSigningAttributesOutput::dkim_tokens): <p>If you used <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim.html">Easy DKIM</a> to configure DKIM authentication for the domain, then this object contains a set of unique strings that you use to create a set of CNAME records that you add to the DNS configuration for your domain. When Amazon SES detects these records in the DNS configuration for your domain, the DKIM authentication process is complete.</p>  <p>If you configured DKIM authentication for the domain by providing your own public-private key pair, then this object contains the selector that's associated with your public key.</p>  <p>Regardless of the DKIM authentication method you use, Amazon SES searches for the appropriate records in the DNS configuration of the domain for up to 72 hours.</p>
    /// - On failure, responds with [`SdkError<PutEmailIdentityDkimSigningAttributesError>`](crate::error::PutEmailIdentityDkimSigningAttributesError)
    pub fn put_email_identity_dkim_signing_attributes(
        &self,
    ) -> crate::client::fluent_builders::PutEmailIdentityDkimSigningAttributes {
        crate::client::fluent_builders::PutEmailIdentityDkimSigningAttributes::new(
            self.handle.clone(),
        )
    }
    /// Constructs a fluent builder for the [`PutEmailIdentityFeedbackAttributes`](crate::client::fluent_builders::PutEmailIdentityFeedbackAttributes) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`email_identity(impl Into<String>)`](crate::client::fluent_builders::PutEmailIdentityFeedbackAttributes::email_identity) / [`set_email_identity(Option<String>)`](crate::client::fluent_builders::PutEmailIdentityFeedbackAttributes::set_email_identity): <p>The email identity.</p>
    ///   - [`email_forwarding_enabled(bool)`](crate::client::fluent_builders::PutEmailIdentityFeedbackAttributes::email_forwarding_enabled) / [`set_email_forwarding_enabled(bool)`](crate::client::fluent_builders::PutEmailIdentityFeedbackAttributes::set_email_forwarding_enabled): <p>Sets the feedback forwarding configuration for the identity.</p>  <p>If the value is <code>true</code>, you receive email notifications when bounce or complaint events occur. These notifications are sent to the address that you specified in the <code>Return-Path</code> header of the original email.</p>  <p>You're required to have a method of tracking bounces and complaints. If you haven't set up another mechanism for receiving bounce or complaint notifications (for example, by setting up an event destination), you receive an email notification when these events occur (even if this setting is disabled).</p>
    /// - On success, responds with [`PutEmailIdentityFeedbackAttributesOutput`](crate::output::PutEmailIdentityFeedbackAttributesOutput)

    /// - On failure, responds with [`SdkError<PutEmailIdentityFeedbackAttributesError>`](crate::error::PutEmailIdentityFeedbackAttributesError)
    pub fn put_email_identity_feedback_attributes(
        &self,
    ) -> crate::client::fluent_builders::PutEmailIdentityFeedbackAttributes {
        crate::client::fluent_builders::PutEmailIdentityFeedbackAttributes::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`PutEmailIdentityMailFromAttributes`](crate::client::fluent_builders::PutEmailIdentityMailFromAttributes) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`email_identity(impl Into<String>)`](crate::client::fluent_builders::PutEmailIdentityMailFromAttributes::email_identity) / [`set_email_identity(Option<String>)`](crate::client::fluent_builders::PutEmailIdentityMailFromAttributes::set_email_identity): <p>The verified email identity.</p>
    ///   - [`mail_from_domain(impl Into<String>)`](crate::client::fluent_builders::PutEmailIdentityMailFromAttributes::mail_from_domain) / [`set_mail_from_domain(Option<String>)`](crate::client::fluent_builders::PutEmailIdentityMailFromAttributes::set_mail_from_domain): <p> The custom MAIL FROM domain that you want the verified identity to use. The MAIL FROM domain must meet the following criteria:</p>  <ul>   <li> <p>It has to be a subdomain of the verified identity.</p> </li>   <li> <p>It can't be used to receive email.</p> </li>   <li> <p>It can't be used in a "From" address if the MAIL FROM domain is a destination for feedback forwarding emails.</p> </li>  </ul>
    ///   - [`behavior_on_mx_failure(BehaviorOnMxFailure)`](crate::client::fluent_builders::PutEmailIdentityMailFromAttributes::behavior_on_mx_failure) / [`set_behavior_on_mx_failure(Option<BehaviorOnMxFailure>)`](crate::client::fluent_builders::PutEmailIdentityMailFromAttributes::set_behavior_on_mx_failure): <p>The action to take if the required MX record isn't found when you send an email. When you set this value to <code>UseDefaultValue</code>, the mail is sent using <i>amazonses.com</i> as the MAIL FROM domain. When you set this value to <code>RejectMessage</code>, the Amazon SES API v2 returns a <code>MailFromDomainNotVerified</code> error, and doesn't attempt to deliver the email.</p>  <p>These behaviors are taken when the custom MAIL FROM domain configuration is in the <code>Pending</code>, <code>Failed</code>, and <code>TemporaryFailure</code> states.</p>
    /// - On success, responds with [`PutEmailIdentityMailFromAttributesOutput`](crate::output::PutEmailIdentityMailFromAttributesOutput)

    /// - On failure, responds with [`SdkError<PutEmailIdentityMailFromAttributesError>`](crate::error::PutEmailIdentityMailFromAttributesError)
    pub fn put_email_identity_mail_from_attributes(
        &self,
    ) -> crate::client::fluent_builders::PutEmailIdentityMailFromAttributes {
        crate::client::fluent_builders::PutEmailIdentityMailFromAttributes::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`PutSuppressedDestination`](crate::client::fluent_builders::PutSuppressedDestination) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`email_address(impl Into<String>)`](crate::client::fluent_builders::PutSuppressedDestination::email_address) / [`set_email_address(Option<String>)`](crate::client::fluent_builders::PutSuppressedDestination::set_email_address): <p>The email address that should be added to the suppression list for your account.</p>
    ///   - [`reason(SuppressionListReason)`](crate::client::fluent_builders::PutSuppressedDestination::reason) / [`set_reason(Option<SuppressionListReason>)`](crate::client::fluent_builders::PutSuppressedDestination::set_reason): <p>The factors that should cause the email address to be added to the suppression list for your account.</p>
    /// - On success, responds with [`PutSuppressedDestinationOutput`](crate::output::PutSuppressedDestinationOutput)

    /// - On failure, responds with [`SdkError<PutSuppressedDestinationError>`](crate::error::PutSuppressedDestinationError)
    pub fn put_suppressed_destination(
        &self,
    ) -> crate::client::fluent_builders::PutSuppressedDestination {
        crate::client::fluent_builders::PutSuppressedDestination::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`SendBulkEmail`](crate::client::fluent_builders::SendBulkEmail) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`from_email_address(impl Into<String>)`](crate::client::fluent_builders::SendBulkEmail::from_email_address) / [`set_from_email_address(Option<String>)`](crate::client::fluent_builders::SendBulkEmail::set_from_email_address): <p>The email address to use as the "From" address for the email. The address that you specify has to be verified.</p>
    ///   - [`from_email_address_identity_arn(impl Into<String>)`](crate::client::fluent_builders::SendBulkEmail::from_email_address_identity_arn) / [`set_from_email_address_identity_arn(Option<String>)`](crate::client::fluent_builders::SendBulkEmail::set_from_email_address_identity_arn): <p>This parameter is used only for sending authorization. It is the ARN of the identity that is associated with the sending authorization policy that permits you to use the email address specified in the <code>FromEmailAddress</code> parameter.</p>  <p>For example, if the owner of example.com (which has ARN arn:aws:ses:us-east-1:123456789012:identity/example.com) attaches a policy to it that authorizes you to use sender@example.com, then you would specify the <code>FromEmailAddressIdentityArn</code> to be arn:aws:ses:us-east-1:123456789012:identity/example.com, and the <code>FromEmailAddress</code> to be sender@example.com.</p>  <p>For more information about sending authorization, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html">Amazon SES Developer Guide</a>.</p>
    ///   - [`reply_to_addresses(Vec<String>)`](crate::client::fluent_builders::SendBulkEmail::reply_to_addresses) / [`set_reply_to_addresses(Option<Vec<String>>)`](crate::client::fluent_builders::SendBulkEmail::set_reply_to_addresses): <p>The "Reply-to" email addresses for the message. When the recipient replies to the message, each Reply-to address receives the reply.</p>
    ///   - [`feedback_forwarding_email_address(impl Into<String>)`](crate::client::fluent_builders::SendBulkEmail::feedback_forwarding_email_address) / [`set_feedback_forwarding_email_address(Option<String>)`](crate::client::fluent_builders::SendBulkEmail::set_feedback_forwarding_email_address): <p>The address that you want bounce and complaint notifications to be sent to.</p>
    ///   - [`feedback_forwarding_email_address_identity_arn(impl Into<String>)`](crate::client::fluent_builders::SendBulkEmail::feedback_forwarding_email_address_identity_arn) / [`set_feedback_forwarding_email_address_identity_arn(Option<String>)`](crate::client::fluent_builders::SendBulkEmail::set_feedback_forwarding_email_address_identity_arn): <p>This parameter is used only for sending authorization. It is the ARN of the identity that is associated with the sending authorization policy that permits you to use the email address specified in the <code>FeedbackForwardingEmailAddress</code> parameter.</p>  <p>For example, if the owner of example.com (which has ARN arn:aws:ses:us-east-1:123456789012:identity/example.com) attaches a policy to it that authorizes you to use feedback@example.com, then you would specify the <code>FeedbackForwardingEmailAddressIdentityArn</code> to be arn:aws:ses:us-east-1:123456789012:identity/example.com, and the <code>FeedbackForwardingEmailAddress</code> to be feedback@example.com.</p>  <p>For more information about sending authorization, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html">Amazon SES Developer Guide</a>.</p>
    ///   - [`default_email_tags(Vec<MessageTag>)`](crate::client::fluent_builders::SendBulkEmail::default_email_tags) / [`set_default_email_tags(Option<Vec<MessageTag>>)`](crate::client::fluent_builders::SendBulkEmail::set_default_email_tags): <p>A list of tags, in the form of name/value pairs, to apply to an email that you send using the <code>SendEmail</code> operation. Tags correspond to characteristics of the email that you define, so that you can publish email sending events.</p>
    ///   - [`default_content(BulkEmailContent)`](crate::client::fluent_builders::SendBulkEmail::default_content) / [`set_default_content(Option<BulkEmailContent>)`](crate::client::fluent_builders::SendBulkEmail::set_default_content): <p>An object that contains the body of the message. You can specify a template message.</p>
    ///   - [`bulk_email_entries(Vec<BulkEmailEntry>)`](crate::client::fluent_builders::SendBulkEmail::bulk_email_entries) / [`set_bulk_email_entries(Option<Vec<BulkEmailEntry>>)`](crate::client::fluent_builders::SendBulkEmail::set_bulk_email_entries): <p>The list of bulk email entry objects.</p>
    ///   - [`configuration_set_name(impl Into<String>)`](crate::client::fluent_builders::SendBulkEmail::configuration_set_name) / [`set_configuration_set_name(Option<String>)`](crate::client::fluent_builders::SendBulkEmail::set_configuration_set_name): <p>The name of the configuration set to use when sending the email.</p>
    /// - On success, responds with [`SendBulkEmailOutput`](crate::output::SendBulkEmailOutput) with field(s):
    ///   - [`bulk_email_entry_results(Option<Vec<BulkEmailEntryResult>>)`](crate::output::SendBulkEmailOutput::bulk_email_entry_results): <p>One object per intended recipient. Check each response object and retry any messages with a failure status.</p>
    /// - On failure, responds with [`SdkError<SendBulkEmailError>`](crate::error::SendBulkEmailError)
    pub fn send_bulk_email(&self) -> crate::client::fluent_builders::SendBulkEmail {
        crate::client::fluent_builders::SendBulkEmail::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`SendCustomVerificationEmail`](crate::client::fluent_builders::SendCustomVerificationEmail) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`email_address(impl Into<String>)`](crate::client::fluent_builders::SendCustomVerificationEmail::email_address) / [`set_email_address(Option<String>)`](crate::client::fluent_builders::SendCustomVerificationEmail::set_email_address): <p>The email address to verify.</p>
    ///   - [`template_name(impl Into<String>)`](crate::client::fluent_builders::SendCustomVerificationEmail::template_name) / [`set_template_name(Option<String>)`](crate::client::fluent_builders::SendCustomVerificationEmail::set_template_name): <p>The name of the custom verification email template to use when sending the verification email.</p>
    ///   - [`configuration_set_name(impl Into<String>)`](crate::client::fluent_builders::SendCustomVerificationEmail::configuration_set_name) / [`set_configuration_set_name(Option<String>)`](crate::client::fluent_builders::SendCustomVerificationEmail::set_configuration_set_name): <p>Name of a configuration set to use when sending the verification email.</p>
    /// - On success, responds with [`SendCustomVerificationEmailOutput`](crate::output::SendCustomVerificationEmailOutput) with field(s):
    ///   - [`message_id(Option<String>)`](crate::output::SendCustomVerificationEmailOutput::message_id): <p>The unique message identifier returned from the <code>SendCustomVerificationEmail</code> operation.</p>
    /// - On failure, responds with [`SdkError<SendCustomVerificationEmailError>`](crate::error::SendCustomVerificationEmailError)
    pub fn send_custom_verification_email(
        &self,
    ) -> crate::client::fluent_builders::SendCustomVerificationEmail {
        crate::client::fluent_builders::SendCustomVerificationEmail::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`SendEmail`](crate::client::fluent_builders::SendEmail) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`from_email_address(impl Into<String>)`](crate::client::fluent_builders::SendEmail::from_email_address) / [`set_from_email_address(Option<String>)`](crate::client::fluent_builders::SendEmail::set_from_email_address): <p>The email address to use as the "From" address for the email. The address that you specify has to be verified. </p>
    ///   - [`from_email_address_identity_arn(impl Into<String>)`](crate::client::fluent_builders::SendEmail::from_email_address_identity_arn) / [`set_from_email_address_identity_arn(Option<String>)`](crate::client::fluent_builders::SendEmail::set_from_email_address_identity_arn): <p>This parameter is used only for sending authorization. It is the ARN of the identity that is associated with the sending authorization policy that permits you to use the email address specified in the <code>FromEmailAddress</code> parameter.</p>  <p>For example, if the owner of example.com (which has ARN arn:aws:ses:us-east-1:123456789012:identity/example.com) attaches a policy to it that authorizes you to use sender@example.com, then you would specify the <code>FromEmailAddressIdentityArn</code> to be arn:aws:ses:us-east-1:123456789012:identity/example.com, and the <code>FromEmailAddress</code> to be sender@example.com.</p>  <p>For more information about sending authorization, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html">Amazon SES Developer Guide</a>.</p>  <p>For Raw emails, the <code>FromEmailAddressIdentityArn</code> value overrides the X-SES-SOURCE-ARN and X-SES-FROM-ARN headers specified in raw email message content.</p>
    ///   - [`destination(Destination)`](crate::client::fluent_builders::SendEmail::destination) / [`set_destination(Option<Destination>)`](crate::client::fluent_builders::SendEmail::set_destination): <p>An object that contains the recipients of the email message.</p>
    ///   - [`reply_to_addresses(Vec<String>)`](crate::client::fluent_builders::SendEmail::reply_to_addresses) / [`set_reply_to_addresses(Option<Vec<String>>)`](crate::client::fluent_builders::SendEmail::set_reply_to_addresses): <p>The "Reply-to" email addresses for the message. When the recipient replies to the message, each Reply-to address receives the reply.</p>
    ///   - [`feedback_forwarding_email_address(impl Into<String>)`](crate::client::fluent_builders::SendEmail::feedback_forwarding_email_address) / [`set_feedback_forwarding_email_address(Option<String>)`](crate::client::fluent_builders::SendEmail::set_feedback_forwarding_email_address): <p>The address that you want bounce and complaint notifications to be sent to.</p>
    ///   - [`feedback_forwarding_email_address_identity_arn(impl Into<String>)`](crate::client::fluent_builders::SendEmail::feedback_forwarding_email_address_identity_arn) / [`set_feedback_forwarding_email_address_identity_arn(Option<String>)`](crate::client::fluent_builders::SendEmail::set_feedback_forwarding_email_address_identity_arn): <p>This parameter is used only for sending authorization. It is the ARN of the identity that is associated with the sending authorization policy that permits you to use the email address specified in the <code>FeedbackForwardingEmailAddress</code> parameter.</p>  <p>For example, if the owner of example.com (which has ARN arn:aws:ses:us-east-1:123456789012:identity/example.com) attaches a policy to it that authorizes you to use feedback@example.com, then you would specify the <code>FeedbackForwardingEmailAddressIdentityArn</code> to be arn:aws:ses:us-east-1:123456789012:identity/example.com, and the <code>FeedbackForwardingEmailAddress</code> to be feedback@example.com.</p>  <p>For more information about sending authorization, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html">Amazon SES Developer Guide</a>.</p>
    ///   - [`content(EmailContent)`](crate::client::fluent_builders::SendEmail::content) / [`set_content(Option<EmailContent>)`](crate::client::fluent_builders::SendEmail::set_content): <p>An object that contains the body of the message. You can send either a Simple message Raw message or a template Message.</p>
    ///   - [`email_tags(Vec<MessageTag>)`](crate::client::fluent_builders::SendEmail::email_tags) / [`set_email_tags(Option<Vec<MessageTag>>)`](crate::client::fluent_builders::SendEmail::set_email_tags): <p>A list of tags, in the form of name/value pairs, to apply to an email that you send using the <code>SendEmail</code> operation. Tags correspond to characteristics of the email that you define, so that you can publish email sending events. </p>
    ///   - [`configuration_set_name(impl Into<String>)`](crate::client::fluent_builders::SendEmail::configuration_set_name) / [`set_configuration_set_name(Option<String>)`](crate::client::fluent_builders::SendEmail::set_configuration_set_name): <p>The name of the configuration set to use when sending the email.</p>
    ///   - [`list_management_options(ListManagementOptions)`](crate::client::fluent_builders::SendEmail::list_management_options) / [`set_list_management_options(Option<ListManagementOptions>)`](crate::client::fluent_builders::SendEmail::set_list_management_options): <p>An object used to specify a list or topic to which an email belongs, which will be used when a contact chooses to unsubscribe.</p>
    /// - On success, responds with [`SendEmailOutput`](crate::output::SendEmailOutput) with field(s):
    ///   - [`message_id(Option<String>)`](crate::output::SendEmailOutput::message_id): <p>A unique identifier for the message that is generated when the message is accepted.</p> <note>   <p>It's possible for Amazon SES to accept a message without sending it. This can happen when the message that you're trying to send has an attachment contains a virus, or when you send a templated email that contains invalid personalization content, for example.</p>  </note>
    /// - On failure, responds with [`SdkError<SendEmailError>`](crate::error::SendEmailError)
    pub fn send_email(&self) -> crate::client::fluent_builders::SendEmail {
        crate::client::fluent_builders::SendEmail::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`TagResource`](crate::client::fluent_builders::TagResource) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`resource_arn(impl Into<String>)`](crate::client::fluent_builders::TagResource::resource_arn) / [`set_resource_arn(Option<String>)`](crate::client::fluent_builders::TagResource::set_resource_arn): <p>The Amazon Resource Name (ARN) of the resource that you want to add one or more tags to.</p>
    ///   - [`tags(Vec<Tag>)`](crate::client::fluent_builders::TagResource::tags) / [`set_tags(Option<Vec<Tag>>)`](crate::client::fluent_builders::TagResource::set_tags): <p>A list of the tags that you want to add to the resource. A tag consists of a required tag key (<code>Key</code>) and an associated tag value (<code>Value</code>). The maximum length of a tag key is 128 characters. The maximum length of a tag value is 256 characters.</p>
    /// - On success, responds with [`TagResourceOutput`](crate::output::TagResourceOutput)

    /// - On failure, responds with [`SdkError<TagResourceError>`](crate::error::TagResourceError)
    pub fn tag_resource(&self) -> crate::client::fluent_builders::TagResource {
        crate::client::fluent_builders::TagResource::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`TestRenderEmailTemplate`](crate::client::fluent_builders::TestRenderEmailTemplate) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`template_name(impl Into<String>)`](crate::client::fluent_builders::TestRenderEmailTemplate::template_name) / [`set_template_name(Option<String>)`](crate::client::fluent_builders::TestRenderEmailTemplate::set_template_name): <p>The name of the template.</p>
    ///   - [`template_data(impl Into<String>)`](crate::client::fluent_builders::TestRenderEmailTemplate::template_data) / [`set_template_data(Option<String>)`](crate::client::fluent_builders::TestRenderEmailTemplate::set_template_data): <p>A list of replacement values to apply to the template. This parameter is a JSON object, typically consisting of key-value pairs in which the keys correspond to replacement tags in the email template.</p>
    /// - On success, responds with [`TestRenderEmailTemplateOutput`](crate::output::TestRenderEmailTemplateOutput) with field(s):
    ///   - [`rendered_template(Option<String>)`](crate::output::TestRenderEmailTemplateOutput::rendered_template): <p>The complete MIME message rendered by applying the data in the <code>TemplateData</code> parameter to the template specified in the TemplateName parameter.</p>
    /// - On failure, responds with [`SdkError<TestRenderEmailTemplateError>`](crate::error::TestRenderEmailTemplateError)
    pub fn test_render_email_template(
        &self,
    ) -> crate::client::fluent_builders::TestRenderEmailTemplate {
        crate::client::fluent_builders::TestRenderEmailTemplate::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`UntagResource`](crate::client::fluent_builders::UntagResource) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`resource_arn(impl Into<String>)`](crate::client::fluent_builders::UntagResource::resource_arn) / [`set_resource_arn(Option<String>)`](crate::client::fluent_builders::UntagResource::set_resource_arn): <p>The Amazon Resource Name (ARN) of the resource that you want to remove one or more tags from.</p>
    ///   - [`tag_keys(Vec<String>)`](crate::client::fluent_builders::UntagResource::tag_keys) / [`set_tag_keys(Option<Vec<String>>)`](crate::client::fluent_builders::UntagResource::set_tag_keys): <p>The tags (tag keys) that you want to remove from the resource. When you specify a tag key, the action removes both that key and its associated tag value.</p>  <p>To remove more than one tag from the resource, append the <code>TagKeys</code> parameter and argument for each additional tag to remove, separated by an ampersand. For example: <code>/v2/email/tags?ResourceArn=ResourceArn&amp;TagKeys=Key1&amp;TagKeys=Key2</code> </p>
    /// - On success, responds with [`UntagResourceOutput`](crate::output::UntagResourceOutput)

    /// - On failure, responds with [`SdkError<UntagResourceError>`](crate::error::UntagResourceError)
    pub fn untag_resource(&self) -> crate::client::fluent_builders::UntagResource {
        crate::client::fluent_builders::UntagResource::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`UpdateConfigurationSetEventDestination`](crate::client::fluent_builders::UpdateConfigurationSetEventDestination) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`configuration_set_name(impl Into<String>)`](crate::client::fluent_builders::UpdateConfigurationSetEventDestination::configuration_set_name) / [`set_configuration_set_name(Option<String>)`](crate::client::fluent_builders::UpdateConfigurationSetEventDestination::set_configuration_set_name): <p>The name of the configuration set that contains the event destination to modify.</p>
    ///   - [`event_destination_name(impl Into<String>)`](crate::client::fluent_builders::UpdateConfigurationSetEventDestination::event_destination_name) / [`set_event_destination_name(Option<String>)`](crate::client::fluent_builders::UpdateConfigurationSetEventDestination::set_event_destination_name): <p>The name of the event destination.</p>
    ///   - [`event_destination(EventDestinationDefinition)`](crate::client::fluent_builders::UpdateConfigurationSetEventDestination::event_destination) / [`set_event_destination(Option<EventDestinationDefinition>)`](crate::client::fluent_builders::UpdateConfigurationSetEventDestination::set_event_destination): <p>An object that defines the event destination.</p>
    /// - On success, responds with [`UpdateConfigurationSetEventDestinationOutput`](crate::output::UpdateConfigurationSetEventDestinationOutput)

    /// - On failure, responds with [`SdkError<UpdateConfigurationSetEventDestinationError>`](crate::error::UpdateConfigurationSetEventDestinationError)
    pub fn update_configuration_set_event_destination(
        &self,
    ) -> crate::client::fluent_builders::UpdateConfigurationSetEventDestination {
        crate::client::fluent_builders::UpdateConfigurationSetEventDestination::new(
            self.handle.clone(),
        )
    }
    /// Constructs a fluent builder for the [`UpdateContact`](crate::client::fluent_builders::UpdateContact) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`contact_list_name(impl Into<String>)`](crate::client::fluent_builders::UpdateContact::contact_list_name) / [`set_contact_list_name(Option<String>)`](crate::client::fluent_builders::UpdateContact::set_contact_list_name): <p>The name of the contact list.</p>
    ///   - [`email_address(impl Into<String>)`](crate::client::fluent_builders::UpdateContact::email_address) / [`set_email_address(Option<String>)`](crate::client::fluent_builders::UpdateContact::set_email_address): <p>The contact's email addres.</p>
    ///   - [`topic_preferences(Vec<TopicPreference>)`](crate::client::fluent_builders::UpdateContact::topic_preferences) / [`set_topic_preferences(Option<Vec<TopicPreference>>)`](crate::client::fluent_builders::UpdateContact::set_topic_preferences): <p>The contact's preference for being opted-in to or opted-out of a topic.</p>
    ///   - [`unsubscribe_all(bool)`](crate::client::fluent_builders::UpdateContact::unsubscribe_all) / [`set_unsubscribe_all(bool)`](crate::client::fluent_builders::UpdateContact::set_unsubscribe_all): <p>A boolean value status noting if the contact is unsubscribed from all contact list topics.</p>
    ///   - [`attributes_data(impl Into<String>)`](crate::client::fluent_builders::UpdateContact::attributes_data) / [`set_attributes_data(Option<String>)`](crate::client::fluent_builders::UpdateContact::set_attributes_data): <p>The attribute data attached to a contact.</p>
    /// - On success, responds with [`UpdateContactOutput`](crate::output::UpdateContactOutput)

    /// - On failure, responds with [`SdkError<UpdateContactError>`](crate::error::UpdateContactError)
    pub fn update_contact(&self) -> crate::client::fluent_builders::UpdateContact {
        crate::client::fluent_builders::UpdateContact::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`UpdateContactList`](crate::client::fluent_builders::UpdateContactList) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`contact_list_name(impl Into<String>)`](crate::client::fluent_builders::UpdateContactList::contact_list_name) / [`set_contact_list_name(Option<String>)`](crate::client::fluent_builders::UpdateContactList::set_contact_list_name): <p>The name of the contact list.</p>
    ///   - [`topics(Vec<Topic>)`](crate::client::fluent_builders::UpdateContactList::topics) / [`set_topics(Option<Vec<Topic>>)`](crate::client::fluent_builders::UpdateContactList::set_topics): <p>An interest group, theme, or label within a list. A contact list can have multiple topics.</p>
    ///   - [`description(impl Into<String>)`](crate::client::fluent_builders::UpdateContactList::description) / [`set_description(Option<String>)`](crate::client::fluent_builders::UpdateContactList::set_description): <p>A description of what the contact list is about.</p>
    /// - On success, responds with [`UpdateContactListOutput`](crate::output::UpdateContactListOutput)

    /// - On failure, responds with [`SdkError<UpdateContactListError>`](crate::error::UpdateContactListError)
    pub fn update_contact_list(&self) -> crate::client::fluent_builders::UpdateContactList {
        crate::client::fluent_builders::UpdateContactList::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`UpdateCustomVerificationEmailTemplate`](crate::client::fluent_builders::UpdateCustomVerificationEmailTemplate) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`template_name(impl Into<String>)`](crate::client::fluent_builders::UpdateCustomVerificationEmailTemplate::template_name) / [`set_template_name(Option<String>)`](crate::client::fluent_builders::UpdateCustomVerificationEmailTemplate::set_template_name): <p>The name of the custom verification email template that you want to update.</p>
    ///   - [`from_email_address(impl Into<String>)`](crate::client::fluent_builders::UpdateCustomVerificationEmailTemplate::from_email_address) / [`set_from_email_address(Option<String>)`](crate::client::fluent_builders::UpdateCustomVerificationEmailTemplate::set_from_email_address): <p>The email address that the custom verification email is sent from.</p>
    ///   - [`template_subject(impl Into<String>)`](crate::client::fluent_builders::UpdateCustomVerificationEmailTemplate::template_subject) / [`set_template_subject(Option<String>)`](crate::client::fluent_builders::UpdateCustomVerificationEmailTemplate::set_template_subject): <p>The subject line of the custom verification email.</p>
    ///   - [`template_content(impl Into<String>)`](crate::client::fluent_builders::UpdateCustomVerificationEmailTemplate::template_content) / [`set_template_content(Option<String>)`](crate::client::fluent_builders::UpdateCustomVerificationEmailTemplate::set_template_content): <p>The content of the custom verification email. The total size of the email must be less than 10 MB. The message body may contain HTML, with some limitations. For more information, see <a href="https://docs.aws.amazon.com/ses/latest/dg/creating-identities.html#send-email-verify-address-custom-faq">Custom verification email frequently asked questions</a> in the <i>Amazon SES Developer Guide</i>.</p>
    ///   - [`success_redirection_url(impl Into<String>)`](crate::client::fluent_builders::UpdateCustomVerificationEmailTemplate::success_redirection_url) / [`set_success_redirection_url(Option<String>)`](crate::client::fluent_builders::UpdateCustomVerificationEmailTemplate::set_success_redirection_url): <p>The URL that the recipient of the verification email is sent to if his or her address is successfully verified.</p>
    ///   - [`failure_redirection_url(impl Into<String>)`](crate::client::fluent_builders::UpdateCustomVerificationEmailTemplate::failure_redirection_url) / [`set_failure_redirection_url(Option<String>)`](crate::client::fluent_builders::UpdateCustomVerificationEmailTemplate::set_failure_redirection_url): <p>The URL that the recipient of the verification email is sent to if his or her address is not successfully verified.</p>
    /// - On success, responds with [`UpdateCustomVerificationEmailTemplateOutput`](crate::output::UpdateCustomVerificationEmailTemplateOutput)

    /// - On failure, responds with [`SdkError<UpdateCustomVerificationEmailTemplateError>`](crate::error::UpdateCustomVerificationEmailTemplateError)
    pub fn update_custom_verification_email_template(
        &self,
    ) -> crate::client::fluent_builders::UpdateCustomVerificationEmailTemplate {
        crate::client::fluent_builders::UpdateCustomVerificationEmailTemplate::new(
            self.handle.clone(),
        )
    }
    /// Constructs a fluent builder for the [`UpdateEmailIdentityPolicy`](crate::client::fluent_builders::UpdateEmailIdentityPolicy) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`email_identity(impl Into<String>)`](crate::client::fluent_builders::UpdateEmailIdentityPolicy::email_identity) / [`set_email_identity(Option<String>)`](crate::client::fluent_builders::UpdateEmailIdentityPolicy::set_email_identity): <p>The email identity.</p>
    ///   - [`policy_name(impl Into<String>)`](crate::client::fluent_builders::UpdateEmailIdentityPolicy::policy_name) / [`set_policy_name(Option<String>)`](crate::client::fluent_builders::UpdateEmailIdentityPolicy::set_policy_name): <p>The name of the policy.</p>  <p>The policy name cannot exceed 64 characters and can only include alphanumeric characters, dashes, and underscores.</p>
    ///   - [`policy(impl Into<String>)`](crate::client::fluent_builders::UpdateEmailIdentityPolicy::policy) / [`set_policy(Option<String>)`](crate::client::fluent_builders::UpdateEmailIdentityPolicy::set_policy): <p>The text of the policy in JSON format. The policy cannot exceed 4 KB.</p>  <p> For information about the syntax of sending authorization policies, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization-policies.html">Amazon SES Developer Guide</a>.</p>
    /// - On success, responds with [`UpdateEmailIdentityPolicyOutput`](crate::output::UpdateEmailIdentityPolicyOutput)

    /// - On failure, responds with [`SdkError<UpdateEmailIdentityPolicyError>`](crate::error::UpdateEmailIdentityPolicyError)
    pub fn update_email_identity_policy(
        &self,
    ) -> crate::client::fluent_builders::UpdateEmailIdentityPolicy {
        crate::client::fluent_builders::UpdateEmailIdentityPolicy::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`UpdateEmailTemplate`](crate::client::fluent_builders::UpdateEmailTemplate) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`template_name(impl Into<String>)`](crate::client::fluent_builders::UpdateEmailTemplate::template_name) / [`set_template_name(Option<String>)`](crate::client::fluent_builders::UpdateEmailTemplate::set_template_name): <p>The name of the template.</p>
    ///   - [`template_content(EmailTemplateContent)`](crate::client::fluent_builders::UpdateEmailTemplate::template_content) / [`set_template_content(Option<EmailTemplateContent>)`](crate::client::fluent_builders::UpdateEmailTemplate::set_template_content): <p>The content of the email template, composed of a subject line, an HTML part, and a text-only part.</p>
    /// - On success, responds with [`UpdateEmailTemplateOutput`](crate::output::UpdateEmailTemplateOutput)

    /// - On failure, responds with [`SdkError<UpdateEmailTemplateError>`](crate::error::UpdateEmailTemplateError)
    pub fn update_email_template(&self) -> crate::client::fluent_builders::UpdateEmailTemplate {
        crate::client::fluent_builders::UpdateEmailTemplate::new(self.handle.clone())
    }
}

impl Client {
    /// Creates a new client from an [SDK Config](aws_types::sdk_config::SdkConfig).
    ///
    /// # Panics
    ///
    /// - This method will panic if the `sdk_config` is missing an async sleep implementation. If you experience this panic, set
    ///     the `sleep_impl` on the Config passed into this function to fix it.
    /// - This method will panic if the `sdk_config` is missing an HTTP connector. If you experience this panic, set the
    ///     `http_connector` on the Config passed into this function to fix it.
    pub fn new(sdk_config: &aws_types::sdk_config::SdkConfig) -> Self {
        Self::from_conf(sdk_config.into())
    }

    /// Creates a new client from the service [`Config`](crate::Config).
    ///
    /// # Panics
    ///
    /// - This method will panic if the `conf` is missing an async sleep implementation. If you experience this panic, set
    ///     the `sleep_impl` on the Config passed into this function to fix it.
    /// - This method will panic if the `conf` is missing an HTTP connector. If you experience this panic, set the
    ///     `http_connector` on the Config passed into this function to fix it.
    pub fn from_conf(conf: crate::Config) -> Self {
        let retry_config = conf
            .retry_config()
            .cloned()
            .unwrap_or_else(aws_smithy_types::retry::RetryConfig::disabled);
        let timeout_config = conf
            .timeout_config()
            .cloned()
            .unwrap_or_else(aws_smithy_types::timeout::TimeoutConfig::disabled);
        let sleep_impl = conf.sleep_impl();
        if (retry_config.has_retry() || timeout_config.has_timeouts()) && sleep_impl.is_none() {
            panic!("An async sleep implementation is required for retries or timeouts to work. \
                                    Set the `sleep_impl` on the Config passed into this function to fix this panic.");
        }

        let connector = conf.http_connector().and_then(|c| {
            let timeout_config = conf
                .timeout_config()
                .cloned()
                .unwrap_or_else(aws_smithy_types::timeout::TimeoutConfig::disabled);
            let connector_settings =
                aws_smithy_client::http_connector::ConnectorSettings::from_timeout_config(
                    &timeout_config,
                );
            c.connector(&connector_settings, conf.sleep_impl())
        });

        let builder = aws_smithy_client::Builder::new();

        let builder = match connector {
            // Use provided connector
            Some(c) => builder.connector(c),
            None => {
                #[cfg(any(feature = "rustls", feature = "native-tls"))]
                {
                    // Use default connector based on enabled features
                    builder.dyn_https_connector(
                        aws_smithy_client::http_connector::ConnectorSettings::from_timeout_config(
                            &timeout_config,
                        ),
                    )
                }
                #[cfg(not(any(feature = "rustls", feature = "native-tls")))]
                {
                    panic!("No HTTP connector was available. Enable the `rustls` or `native-tls` crate feature or set a connector to fix this.");
                }
            }
        };
        let mut builder = builder
            .middleware(aws_smithy_client::erase::DynMiddleware::new(
                crate::middleware::DefaultMiddleware::new(),
            ))
            .retry_config(retry_config.into())
            .operation_timeout_config(timeout_config.into());
        builder.set_sleep_impl(sleep_impl);
        let client = builder.build();

        Self {
            handle: std::sync::Arc::new(Handle { client, conf }),
        }
    }
}

/// Utilities to ergonomically construct a request to the service.
///
/// Fluent builders are created through the [`Client`](crate::client::Client) by calling
/// one if its operation methods. After parameters are set using the builder methods,
/// the `send` method can be called to initiate the request.
pub mod fluent_builders;
