// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The contact's preference for being opted-in to or opted-out of a topic.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct TopicPreference {
    /// <p>The name of the topic.</p>
    pub topic_name: ::std::string::String,
    /// <p>The contact's subscription status to a topic which is either <code>OPT_IN</code> or <code>OPT_OUT</code>.</p>
    pub subscription_status: crate::types::SubscriptionStatus,
}
impl TopicPreference {
    /// <p>The name of the topic.</p>
    pub fn topic_name(&self) -> &str {
        use std::ops::Deref;
        self.topic_name.deref()
    }
    /// <p>The contact's subscription status to a topic which is either <code>OPT_IN</code> or <code>OPT_OUT</code>.</p>
    pub fn subscription_status(&self) -> &crate::types::SubscriptionStatus {
        &self.subscription_status
    }
}
impl TopicPreference {
    /// Creates a new builder-style object to manufacture [`TopicPreference`](crate::types::TopicPreference).
    pub fn builder() -> crate::types::builders::TopicPreferenceBuilder {
        crate::types::builders::TopicPreferenceBuilder::default()
    }
}

/// A builder for [`TopicPreference`](crate::types::TopicPreference).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct TopicPreferenceBuilder {
    pub(crate) topic_name: ::std::option::Option<::std::string::String>,
    pub(crate) subscription_status: ::std::option::Option<crate::types::SubscriptionStatus>,
}
impl TopicPreferenceBuilder {
    /// <p>The name of the topic.</p>
    /// This field is required.
    pub fn topic_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.topic_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the topic.</p>
    pub fn set_topic_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.topic_name = input;
        self
    }
    /// <p>The name of the topic.</p>
    pub fn get_topic_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.topic_name
    }
    /// <p>The contact's subscription status to a topic which is either <code>OPT_IN</code> or <code>OPT_OUT</code>.</p>
    /// This field is required.
    pub fn subscription_status(mut self, input: crate::types::SubscriptionStatus) -> Self {
        self.subscription_status = ::std::option::Option::Some(input);
        self
    }
    /// <p>The contact's subscription status to a topic which is either <code>OPT_IN</code> or <code>OPT_OUT</code>.</p>
    pub fn set_subscription_status(mut self, input: ::std::option::Option<crate::types::SubscriptionStatus>) -> Self {
        self.subscription_status = input;
        self
    }
    /// <p>The contact's subscription status to a topic which is either <code>OPT_IN</code> or <code>OPT_OUT</code>.</p>
    pub fn get_subscription_status(&self) -> &::std::option::Option<crate::types::SubscriptionStatus> {
        &self.subscription_status
    }
    /// Consumes the builder and constructs a [`TopicPreference`](crate::types::TopicPreference).
    /// This method will fail if any of the following fields are not set:
    /// - [`topic_name`](crate::types::builders::TopicPreferenceBuilder::topic_name)
    /// - [`subscription_status`](crate::types::builders::TopicPreferenceBuilder::subscription_status)
    pub fn build(self) -> ::std::result::Result<crate::types::TopicPreference, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::TopicPreference {
            topic_name: self.topic_name.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "topic_name",
                    "topic_name was not specified but it is required when building TopicPreference",
                )
            })?,
            subscription_status: self.subscription_status.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "subscription_status",
                    "subscription_status was not specified but it is required when building TopicPreference",
                )
            })?,
        })
    }
}
