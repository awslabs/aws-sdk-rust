// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>An object that defines the VDM settings that apply to emails that you send using the configuration set.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct VdmOptions {
    /// <p>Specifies additional settings for your VDM configuration as applicable to the Dashboard.</p>
    #[doc(hidden)]
    pub dashboard_options: std::option::Option<crate::types::DashboardOptions>,
    /// <p>Specifies additional settings for your VDM configuration as applicable to the Guardian.</p>
    #[doc(hidden)]
    pub guardian_options: std::option::Option<crate::types::GuardianOptions>,
}
impl VdmOptions {
    /// <p>Specifies additional settings for your VDM configuration as applicable to the Dashboard.</p>
    pub fn dashboard_options(&self) -> std::option::Option<&crate::types::DashboardOptions> {
        self.dashboard_options.as_ref()
    }
    /// <p>Specifies additional settings for your VDM configuration as applicable to the Guardian.</p>
    pub fn guardian_options(&self) -> std::option::Option<&crate::types::GuardianOptions> {
        self.guardian_options.as_ref()
    }
}
impl VdmOptions {
    /// Creates a new builder-style object to manufacture [`VdmOptions`](crate::types::VdmOptions).
    pub fn builder() -> crate::types::builders::VdmOptionsBuilder {
        crate::types::builders::VdmOptionsBuilder::default()
    }
}

/// A builder for [`VdmOptions`](crate::types::VdmOptions).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct VdmOptionsBuilder {
    pub(crate) dashboard_options: std::option::Option<crate::types::DashboardOptions>,
    pub(crate) guardian_options: std::option::Option<crate::types::GuardianOptions>,
}
impl VdmOptionsBuilder {
    /// <p>Specifies additional settings for your VDM configuration as applicable to the Dashboard.</p>
    pub fn dashboard_options(mut self, input: crate::types::DashboardOptions) -> Self {
        self.dashboard_options = Some(input);
        self
    }
    /// <p>Specifies additional settings for your VDM configuration as applicable to the Dashboard.</p>
    pub fn set_dashboard_options(
        mut self,
        input: std::option::Option<crate::types::DashboardOptions>,
    ) -> Self {
        self.dashboard_options = input;
        self
    }
    /// <p>Specifies additional settings for your VDM configuration as applicable to the Guardian.</p>
    pub fn guardian_options(mut self, input: crate::types::GuardianOptions) -> Self {
        self.guardian_options = Some(input);
        self
    }
    /// <p>Specifies additional settings for your VDM configuration as applicable to the Guardian.</p>
    pub fn set_guardian_options(
        mut self,
        input: std::option::Option<crate::types::GuardianOptions>,
    ) -> Self {
        self.guardian_options = input;
        self
    }
    /// Consumes the builder and constructs a [`VdmOptions`](crate::types::VdmOptions).
    pub fn build(self) -> crate::types::VdmOptions {
        crate::types::VdmOptions {
            dashboard_options: self.dashboard_options,
            guardian_options: self.guardian_options,
        }
    }
}
