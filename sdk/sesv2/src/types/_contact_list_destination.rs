// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>An object that contains details about the action of a contact list.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ContactListDestination {
    /// <p>The name of the contact list.</p>
    pub contact_list_name: ::std::string::String,
    /// <p>&gt;The type of action to perform on the addresses. The following are the possible values:</p>
    /// <ul>
    /// <li> <p>PUT: add the addresses to the contact list. If the record already exists, it will override it with the new value.</p> </li>
    /// <li> <p>DELETE: remove the addresses from the contact list.</p> </li>
    /// </ul>
    pub contact_list_import_action: crate::types::ContactListImportAction,
}
impl ContactListDestination {
    /// <p>The name of the contact list.</p>
    pub fn contact_list_name(&self) -> &str {
        use std::ops::Deref;
        self.contact_list_name.deref()
    }
    /// <p>&gt;The type of action to perform on the addresses. The following are the possible values:</p>
    /// <ul>
    /// <li> <p>PUT: add the addresses to the contact list. If the record already exists, it will override it with the new value.</p> </li>
    /// <li> <p>DELETE: remove the addresses from the contact list.</p> </li>
    /// </ul>
    pub fn contact_list_import_action(&self) -> &crate::types::ContactListImportAction {
        &self.contact_list_import_action
    }
}
impl ContactListDestination {
    /// Creates a new builder-style object to manufacture [`ContactListDestination`](crate::types::ContactListDestination).
    pub fn builder() -> crate::types::builders::ContactListDestinationBuilder {
        crate::types::builders::ContactListDestinationBuilder::default()
    }
}

/// A builder for [`ContactListDestination`](crate::types::ContactListDestination).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ContactListDestinationBuilder {
    pub(crate) contact_list_name: ::std::option::Option<::std::string::String>,
    pub(crate) contact_list_import_action: ::std::option::Option<crate::types::ContactListImportAction>,
}
impl ContactListDestinationBuilder {
    /// <p>The name of the contact list.</p>
    /// This field is required.
    pub fn contact_list_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.contact_list_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the contact list.</p>
    pub fn set_contact_list_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.contact_list_name = input;
        self
    }
    /// <p>The name of the contact list.</p>
    pub fn get_contact_list_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.contact_list_name
    }
    /// <p>&gt;The type of action to perform on the addresses. The following are the possible values:</p>
    /// <ul>
    /// <li> <p>PUT: add the addresses to the contact list. If the record already exists, it will override it with the new value.</p> </li>
    /// <li> <p>DELETE: remove the addresses from the contact list.</p> </li>
    /// </ul>
    /// This field is required.
    pub fn contact_list_import_action(mut self, input: crate::types::ContactListImportAction) -> Self {
        self.contact_list_import_action = ::std::option::Option::Some(input);
        self
    }
    /// <p>&gt;The type of action to perform on the addresses. The following are the possible values:</p>
    /// <ul>
    /// <li> <p>PUT: add the addresses to the contact list. If the record already exists, it will override it with the new value.</p> </li>
    /// <li> <p>DELETE: remove the addresses from the contact list.</p> </li>
    /// </ul>
    pub fn set_contact_list_import_action(mut self, input: ::std::option::Option<crate::types::ContactListImportAction>) -> Self {
        self.contact_list_import_action = input;
        self
    }
    /// <p>&gt;The type of action to perform on the addresses. The following are the possible values:</p>
    /// <ul>
    /// <li> <p>PUT: add the addresses to the contact list. If the record already exists, it will override it with the new value.</p> </li>
    /// <li> <p>DELETE: remove the addresses from the contact list.</p> </li>
    /// </ul>
    pub fn get_contact_list_import_action(&self) -> &::std::option::Option<crate::types::ContactListImportAction> {
        &self.contact_list_import_action
    }
    /// Consumes the builder and constructs a [`ContactListDestination`](crate::types::ContactListDestination).
    /// This method will fail if any of the following fields are not set:
    /// - [`contact_list_name`](crate::types::builders::ContactListDestinationBuilder::contact_list_name)
    /// - [`contact_list_import_action`](crate::types::builders::ContactListDestinationBuilder::contact_list_import_action)
    pub fn build(self) -> ::std::result::Result<crate::types::ContactListDestination, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::ContactListDestination {
            contact_list_name: self.contact_list_name.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "contact_list_name",
                    "contact_list_name was not specified but it is required when building ContactListDestination",
                )
            })?,
            contact_list_import_action: self.contact_list_import_action.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "contact_list_import_action",
                    "contact_list_import_action was not specified but it is required when building ContactListDestination",
                )
            })?,
        })
    }
}
