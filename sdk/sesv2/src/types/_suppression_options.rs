// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>An object that contains information about the suppression list preferences for your account.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct SuppressionOptions {
    /// <p>A list that contains the reasons that email addresses are automatically added to the suppression list for your account. This list can contain any or all of the following:</p>
    /// <ul>
    /// <li> <p> <code>COMPLAINT</code> – Amazon SES adds an email address to the suppression list for your account when a message sent to that address results in a complaint.</p> </li>
    /// <li> <p> <code>BOUNCE</code> – Amazon SES adds an email address to the suppression list for your account when a message sent to that address results in a hard bounce.</p> </li>
    /// </ul>
    #[doc(hidden)]
    pub suppressed_reasons: std::option::Option<std::vec::Vec<crate::types::SuppressionListReason>>,
}
impl SuppressionOptions {
    /// <p>A list that contains the reasons that email addresses are automatically added to the suppression list for your account. This list can contain any or all of the following:</p>
    /// <ul>
    /// <li> <p> <code>COMPLAINT</code> – Amazon SES adds an email address to the suppression list for your account when a message sent to that address results in a complaint.</p> </li>
    /// <li> <p> <code>BOUNCE</code> – Amazon SES adds an email address to the suppression list for your account when a message sent to that address results in a hard bounce.</p> </li>
    /// </ul>
    pub fn suppressed_reasons(
        &self,
    ) -> std::option::Option<&[crate::types::SuppressionListReason]> {
        self.suppressed_reasons.as_deref()
    }
}
impl SuppressionOptions {
    /// Creates a new builder-style object to manufacture [`SuppressionOptions`](crate::types::SuppressionOptions).
    pub fn builder() -> crate::types::builders::SuppressionOptionsBuilder {
        crate::types::builders::SuppressionOptionsBuilder::default()
    }
}

/// A builder for [`SuppressionOptions`](crate::types::SuppressionOptions).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct SuppressionOptionsBuilder {
    pub(crate) suppressed_reasons:
        std::option::Option<std::vec::Vec<crate::types::SuppressionListReason>>,
}
impl SuppressionOptionsBuilder {
    /// Appends an item to `suppressed_reasons`.
    ///
    /// To override the contents of this collection use [`set_suppressed_reasons`](Self::set_suppressed_reasons).
    ///
    /// <p>A list that contains the reasons that email addresses are automatically added to the suppression list for your account. This list can contain any or all of the following:</p>
    /// <ul>
    /// <li> <p> <code>COMPLAINT</code> – Amazon SES adds an email address to the suppression list for your account when a message sent to that address results in a complaint.</p> </li>
    /// <li> <p> <code>BOUNCE</code> – Amazon SES adds an email address to the suppression list for your account when a message sent to that address results in a hard bounce.</p> </li>
    /// </ul>
    pub fn suppressed_reasons(mut self, input: crate::types::SuppressionListReason) -> Self {
        let mut v = self.suppressed_reasons.unwrap_or_default();
        v.push(input);
        self.suppressed_reasons = Some(v);
        self
    }
    /// <p>A list that contains the reasons that email addresses are automatically added to the suppression list for your account. This list can contain any or all of the following:</p>
    /// <ul>
    /// <li> <p> <code>COMPLAINT</code> – Amazon SES adds an email address to the suppression list for your account when a message sent to that address results in a complaint.</p> </li>
    /// <li> <p> <code>BOUNCE</code> – Amazon SES adds an email address to the suppression list for your account when a message sent to that address results in a hard bounce.</p> </li>
    /// </ul>
    pub fn set_suppressed_reasons(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::SuppressionListReason>>,
    ) -> Self {
        self.suppressed_reasons = input;
        self
    }
    /// Consumes the builder and constructs a [`SuppressionOptions`](crate::types::SuppressionOptions).
    pub fn build(self) -> crate::types::SuppressionOptions {
        crate::types::SuppressionOptions {
            suppressed_reasons: self.suppressed_reasons,
        }
    }
}
