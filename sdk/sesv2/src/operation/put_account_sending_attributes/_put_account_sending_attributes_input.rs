// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A request to change the ability of your account to send email.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct PutAccountSendingAttributesInput {
    /// <p>Enables or disables your account's ability to send email. Set to <code>true</code> to enable email sending, or set to <code>false</code> to disable email sending.</p> <note>
    /// <p>If Amazon Web Services paused your account's ability to send email, you can't use this operation to resume your account's ability to send email.</p>
    /// </note>
    pub sending_enabled: ::std::option::Option<bool>,
}
impl PutAccountSendingAttributesInput {
    /// <p>Enables or disables your account's ability to send email. Set to <code>true</code> to enable email sending, or set to <code>false</code> to disable email sending.</p> <note>
    /// <p>If Amazon Web Services paused your account's ability to send email, you can't use this operation to resume your account's ability to send email.</p>
    /// </note>
    pub fn sending_enabled(&self) -> ::std::option::Option<bool> {
        self.sending_enabled
    }
}
impl PutAccountSendingAttributesInput {
    /// Creates a new builder-style object to manufacture [`PutAccountSendingAttributesInput`](crate::operation::put_account_sending_attributes::PutAccountSendingAttributesInput).
    pub fn builder() -> crate::operation::put_account_sending_attributes::builders::PutAccountSendingAttributesInputBuilder {
        crate::operation::put_account_sending_attributes::builders::PutAccountSendingAttributesInputBuilder::default()
    }
}

/// A builder for [`PutAccountSendingAttributesInput`](crate::operation::put_account_sending_attributes::PutAccountSendingAttributesInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct PutAccountSendingAttributesInputBuilder {
    pub(crate) sending_enabled: ::std::option::Option<bool>,
}
impl PutAccountSendingAttributesInputBuilder {
    /// <p>Enables or disables your account's ability to send email. Set to <code>true</code> to enable email sending, or set to <code>false</code> to disable email sending.</p> <note>
    /// <p>If Amazon Web Services paused your account's ability to send email, you can't use this operation to resume your account's ability to send email.</p>
    /// </note>
    pub fn sending_enabled(mut self, input: bool) -> Self {
        self.sending_enabled = ::std::option::Option::Some(input);
        self
    }
    /// <p>Enables or disables your account's ability to send email. Set to <code>true</code> to enable email sending, or set to <code>false</code> to disable email sending.</p> <note>
    /// <p>If Amazon Web Services paused your account's ability to send email, you can't use this operation to resume your account's ability to send email.</p>
    /// </note>
    pub fn set_sending_enabled(mut self, input: ::std::option::Option<bool>) -> Self {
        self.sending_enabled = input;
        self
    }
    /// <p>Enables or disables your account's ability to send email. Set to <code>true</code> to enable email sending, or set to <code>false</code> to disable email sending.</p> <note>
    /// <p>If Amazon Web Services paused your account's ability to send email, you can't use this operation to resume your account's ability to send email.</p>
    /// </note>
    pub fn get_sending_enabled(&self) -> &::std::option::Option<bool> {
        &self.sending_enabled
    }
    /// Consumes the builder and constructs a [`PutAccountSendingAttributesInput`](crate::operation::put_account_sending_attributes::PutAccountSendingAttributesInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::put_account_sending_attributes::PutAccountSendingAttributesInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::put_account_sending_attributes::PutAccountSendingAttributesInput {
            sending_enabled: self.sending_enabled,
        })
    }
}
