// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ListContactListsOutput {
    /// <p>The available contact lists.</p>
    #[doc(hidden)]
    pub contact_lists: std::option::Option<std::vec::Vec<crate::types::ContactList>>,
    /// <p>A string token indicating that there might be additional contact lists available to be listed. Copy this token to a subsequent call to <code>ListContactLists</code> with the same parameters to retrieve the next page of contact lists.</p>
    #[doc(hidden)]
    pub next_token: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl ListContactListsOutput {
    /// <p>The available contact lists.</p>
    pub fn contact_lists(&self) -> std::option::Option<&[crate::types::ContactList]> {
        self.contact_lists.as_deref()
    }
    /// <p>A string token indicating that there might be additional contact lists available to be listed. Copy this token to a subsequent call to <code>ListContactLists</code> with the same parameters to retrieve the next page of contact lists.</p>
    pub fn next_token(&self) -> std::option::Option<&str> {
        self.next_token.as_deref()
    }
}
impl aws_http::request_id::RequestId for ListContactListsOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl ListContactListsOutput {
    /// Creates a new builder-style object to manufacture [`ListContactListsOutput`](crate::operation::list_contact_lists::ListContactListsOutput).
    pub fn builder() -> crate::operation::list_contact_lists::builders::ListContactListsOutputBuilder
    {
        crate::operation::list_contact_lists::builders::ListContactListsOutputBuilder::default()
    }
}

/// A builder for [`ListContactListsOutput`](crate::operation::list_contact_lists::ListContactListsOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ListContactListsOutputBuilder {
    pub(crate) contact_lists: std::option::Option<std::vec::Vec<crate::types::ContactList>>,
    pub(crate) next_token: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl ListContactListsOutputBuilder {
    /// Appends an item to `contact_lists`.
    ///
    /// To override the contents of this collection use [`set_contact_lists`](Self::set_contact_lists).
    ///
    /// <p>The available contact lists.</p>
    pub fn contact_lists(mut self, input: crate::types::ContactList) -> Self {
        let mut v = self.contact_lists.unwrap_or_default();
        v.push(input);
        self.contact_lists = Some(v);
        self
    }
    /// <p>The available contact lists.</p>
    pub fn set_contact_lists(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::ContactList>>,
    ) -> Self {
        self.contact_lists = input;
        self
    }
    /// <p>A string token indicating that there might be additional contact lists available to be listed. Copy this token to a subsequent call to <code>ListContactLists</code> with the same parameters to retrieve the next page of contact lists.</p>
    pub fn next_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.next_token = Some(input.into());
        self
    }
    /// <p>A string token indicating that there might be additional contact lists available to be listed. Copy this token to a subsequent call to <code>ListContactLists</code> with the same parameters to retrieve the next page of contact lists.</p>
    pub fn set_next_token(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`ListContactListsOutput`](crate::operation::list_contact_lists::ListContactListsOutput).
    pub fn build(self) -> crate::operation::list_contact_lists::ListContactListsOutput {
        crate::operation::list_contact_lists::ListContactListsOutput {
            contact_lists: self.contact_lists,
            next_token: self.next_token,
            _request_id: self._request_id,
        }
    }
}
