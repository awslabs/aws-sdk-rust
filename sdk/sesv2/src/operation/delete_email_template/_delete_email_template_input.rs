// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Represents a request to delete an email template. For more information, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-personalized-email-api.html">Amazon SES Developer Guide</a>.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DeleteEmailTemplateInput {
    /// <p>The name of the template to be deleted.</p>
    #[doc(hidden)]
    pub template_name: std::option::Option<std::string::String>,
}
impl DeleteEmailTemplateInput {
    /// <p>The name of the template to be deleted.</p>
    pub fn template_name(&self) -> std::option::Option<&str> {
        self.template_name.as_deref()
    }
}
impl DeleteEmailTemplateInput {
    /// Creates a new builder-style object to manufacture [`DeleteEmailTemplateInput`](crate::operation::delete_email_template::DeleteEmailTemplateInput).
    pub fn builder(
    ) -> crate::operation::delete_email_template::builders::DeleteEmailTemplateInputBuilder {
        crate::operation::delete_email_template::builders::DeleteEmailTemplateInputBuilder::default(
        )
    }
}

/// A builder for [`DeleteEmailTemplateInput`](crate::operation::delete_email_template::DeleteEmailTemplateInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DeleteEmailTemplateInputBuilder {
    pub(crate) template_name: std::option::Option<std::string::String>,
}
impl DeleteEmailTemplateInputBuilder {
    /// <p>The name of the template to be deleted.</p>
    pub fn template_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.template_name = Some(input.into());
        self
    }
    /// <p>The name of the template to be deleted.</p>
    pub fn set_template_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.template_name = input;
        self
    }
    /// Consumes the builder and constructs a [`DeleteEmailTemplateInput`](crate::operation::delete_email_template::DeleteEmailTemplateInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::delete_email_template::DeleteEmailTemplateInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::delete_email_template::DeleteEmailTemplateInput {
                template_name: self.template_name,
            },
        )
    }
}
