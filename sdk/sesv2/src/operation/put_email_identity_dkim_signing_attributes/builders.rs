// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub use crate::operation::put_email_identity_dkim_signing_attributes::_put_email_identity_dkim_signing_attributes_output::PutEmailIdentityDkimSigningAttributesOutputBuilder;

pub use crate::operation::put_email_identity_dkim_signing_attributes::_put_email_identity_dkim_signing_attributes_input::PutEmailIdentityDkimSigningAttributesInputBuilder;

impl crate::operation::put_email_identity_dkim_signing_attributes::builders::PutEmailIdentityDkimSigningAttributesInputBuilder {
    /// Sends a request with this input using the given client.
    pub async fn send_with(
        self,
        client: &crate::Client,
    ) -> ::std::result::Result<
        crate::operation::put_email_identity_dkim_signing_attributes::PutEmailIdentityDkimSigningAttributesOutput,
        ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::put_email_identity_dkim_signing_attributes::PutEmailIdentityDkimSigningAttributesError,
            ::aws_smithy_runtime_api::client::orchestrator::HttpResponse,
        >,
    > {
        let mut fluent_builder = client.put_email_identity_dkim_signing_attributes();
        fluent_builder.inner = self;
        fluent_builder.send().await
    }
}
/// Fluent builder constructing a request to `PutEmailIdentityDkimSigningAttributes`.
///
/// <p>Used to configure or change the DKIM authentication settings for an email domain identity. You can use this operation to do any of the following:</p>
/// <ul>
/// <li>
/// <p>Update the signing attributes for an identity that uses Bring Your Own DKIM (BYODKIM).</p></li>
/// <li>
/// <p>Update the key length that should be used for Easy DKIM.</p></li>
/// <li>
/// <p>Change from using no DKIM authentication to using Easy DKIM.</p></li>
/// <li>
/// <p>Change from using no DKIM authentication to using BYODKIM.</p></li>
/// <li>
/// <p>Change from using Easy DKIM to using BYODKIM.</p></li>
/// <li>
/// <p>Change from using BYODKIM to using Easy DKIM.</p></li>
/// </ul>
#[derive(::std::clone::Clone, ::std::fmt::Debug)]
pub struct PutEmailIdentityDkimSigningAttributesFluentBuilder {
    handle: ::std::sync::Arc<crate::client::Handle>,
    inner: crate::operation::put_email_identity_dkim_signing_attributes::builders::PutEmailIdentityDkimSigningAttributesInputBuilder,
    config_override: ::std::option::Option<crate::config::Builder>,
}
impl
    crate::client::customize::internal::CustomizableSend<
        crate::operation::put_email_identity_dkim_signing_attributes::PutEmailIdentityDkimSigningAttributesOutput,
        crate::operation::put_email_identity_dkim_signing_attributes::PutEmailIdentityDkimSigningAttributesError,
    > for PutEmailIdentityDkimSigningAttributesFluentBuilder
{
    fn send(
        self,
        config_override: crate::config::Builder,
    ) -> crate::client::customize::internal::BoxFuture<
        crate::client::customize::internal::SendResult<
            crate::operation::put_email_identity_dkim_signing_attributes::PutEmailIdentityDkimSigningAttributesOutput,
            crate::operation::put_email_identity_dkim_signing_attributes::PutEmailIdentityDkimSigningAttributesError,
        >,
    > {
        ::std::boxed::Box::pin(async move { self.config_override(config_override).send().await })
    }
}
impl PutEmailIdentityDkimSigningAttributesFluentBuilder {
    /// Creates a new `PutEmailIdentityDkimSigningAttributes`.
    pub(crate) fn new(handle: ::std::sync::Arc<crate::client::Handle>) -> Self {
        Self {
            handle,
            inner: ::std::default::Default::default(),
            config_override: ::std::option::Option::None,
        }
    }
    /// Access the PutEmailIdentityDkimSigningAttributes as a reference.
    pub fn as_input(
        &self,
    ) -> &crate::operation::put_email_identity_dkim_signing_attributes::builders::PutEmailIdentityDkimSigningAttributesInputBuilder {
        &self.inner
    }
    /// Sends the request and returns the response.
    ///
    /// If an error occurs, an `SdkError` will be returned with additional details that
    /// can be matched against.
    ///
    /// By default, any retryable failures will be retried twice. Retry behavior
    /// is configurable with the [RetryConfig](aws_smithy_types::retry::RetryConfig), which can be
    /// set when configuring the client.
    pub async fn send(
        self,
    ) -> ::std::result::Result<
        crate::operation::put_email_identity_dkim_signing_attributes::PutEmailIdentityDkimSigningAttributesOutput,
        ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::put_email_identity_dkim_signing_attributes::PutEmailIdentityDkimSigningAttributesError,
            ::aws_smithy_runtime_api::client::orchestrator::HttpResponse,
        >,
    > {
        let input = self
            .inner
            .build()
            .map_err(::aws_smithy_runtime_api::client::result::SdkError::construction_failure)?;
        let runtime_plugins =
            crate::operation::put_email_identity_dkim_signing_attributes::PutEmailIdentityDkimSigningAttributes::operation_runtime_plugins(
                self.handle.runtime_plugins.clone(),
                &self.handle.conf,
                self.config_override,
            );
        crate::operation::put_email_identity_dkim_signing_attributes::PutEmailIdentityDkimSigningAttributes::orchestrate(&runtime_plugins, input)
            .await
    }

    /// Consumes this builder, creating a customizable operation that can be modified before being sent.
    pub fn customize(
        self,
    ) -> crate::client::customize::CustomizableOperation<
        crate::operation::put_email_identity_dkim_signing_attributes::PutEmailIdentityDkimSigningAttributesOutput,
        crate::operation::put_email_identity_dkim_signing_attributes::PutEmailIdentityDkimSigningAttributesError,
        Self,
    > {
        crate::client::customize::CustomizableOperation::new(self)
    }
    pub(crate) fn config_override(mut self, config_override: impl ::std::convert::Into<crate::config::Builder>) -> Self {
        self.set_config_override(::std::option::Option::Some(config_override.into()));
        self
    }

    pub(crate) fn set_config_override(&mut self, config_override: ::std::option::Option<crate::config::Builder>) -> &mut Self {
        self.config_override = config_override;
        self
    }
    /// <p>The email identity.</p>
    pub fn email_identity(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.inner = self.inner.email_identity(input.into());
        self
    }
    /// <p>The email identity.</p>
    pub fn set_email_identity(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.inner = self.inner.set_email_identity(input);
        self
    }
    /// <p>The email identity.</p>
    pub fn get_email_identity(&self) -> &::std::option::Option<::std::string::String> {
        self.inner.get_email_identity()
    }
    /// <p>The method to use to configure DKIM for the identity. There are the following possible values:</p>
    /// <ul>
    /// <li>
    /// <p><code>AWS_SES</code> – Configure DKIM for the identity by using <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim.html">Easy DKIM</a>.</p></li>
    /// <li>
    /// <p><code>EXTERNAL</code> – Configure DKIM for the identity by using Bring Your Own DKIM (BYODKIM).</p></li>
    /// </ul>
    pub fn signing_attributes_origin(mut self, input: crate::types::DkimSigningAttributesOrigin) -> Self {
        self.inner = self.inner.signing_attributes_origin(input);
        self
    }
    /// <p>The method to use to configure DKIM for the identity. There are the following possible values:</p>
    /// <ul>
    /// <li>
    /// <p><code>AWS_SES</code> – Configure DKIM for the identity by using <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim.html">Easy DKIM</a>.</p></li>
    /// <li>
    /// <p><code>EXTERNAL</code> – Configure DKIM for the identity by using Bring Your Own DKIM (BYODKIM).</p></li>
    /// </ul>
    pub fn set_signing_attributes_origin(mut self, input: ::std::option::Option<crate::types::DkimSigningAttributesOrigin>) -> Self {
        self.inner = self.inner.set_signing_attributes_origin(input);
        self
    }
    /// <p>The method to use to configure DKIM for the identity. There are the following possible values:</p>
    /// <ul>
    /// <li>
    /// <p><code>AWS_SES</code> – Configure DKIM for the identity by using <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim.html">Easy DKIM</a>.</p></li>
    /// <li>
    /// <p><code>EXTERNAL</code> – Configure DKIM for the identity by using Bring Your Own DKIM (BYODKIM).</p></li>
    /// </ul>
    pub fn get_signing_attributes_origin(&self) -> &::std::option::Option<crate::types::DkimSigningAttributesOrigin> {
        self.inner.get_signing_attributes_origin()
    }
    /// <p>An object that contains information about the private key and selector that you want to use to configure DKIM for the identity for Bring Your Own DKIM (BYODKIM) for the identity, or, configures the key length to be used for <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim.html">Easy DKIM</a>.</p>
    pub fn signing_attributes(mut self, input: crate::types::DkimSigningAttributes) -> Self {
        self.inner = self.inner.signing_attributes(input);
        self
    }
    /// <p>An object that contains information about the private key and selector that you want to use to configure DKIM for the identity for Bring Your Own DKIM (BYODKIM) for the identity, or, configures the key length to be used for <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim.html">Easy DKIM</a>.</p>
    pub fn set_signing_attributes(mut self, input: ::std::option::Option<crate::types::DkimSigningAttributes>) -> Self {
        self.inner = self.inner.set_signing_attributes(input);
        self
    }
    /// <p>An object that contains information about the private key and selector that you want to use to configure DKIM for the identity for Bring Your Own DKIM (BYODKIM) for the identity, or, configures the key length to be used for <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim.html">Easy DKIM</a>.</p>
    pub fn get_signing_attributes(&self) -> &::std::option::Option<crate::types::DkimSigningAttributes> {
        self.inner.get_signing_attributes()
    }
}
