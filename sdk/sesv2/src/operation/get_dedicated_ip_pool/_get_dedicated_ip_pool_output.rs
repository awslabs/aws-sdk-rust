// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The following element is returned by the service.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GetDedicatedIpPoolOutput {
    /// <p>An object that contains information about a dedicated IP pool.</p>
    #[doc(hidden)]
    pub dedicated_ip_pool: std::option::Option<crate::types::DedicatedIpPool>,
    _request_id: Option<String>,
}
impl GetDedicatedIpPoolOutput {
    /// <p>An object that contains information about a dedicated IP pool.</p>
    pub fn dedicated_ip_pool(&self) -> std::option::Option<&crate::types::DedicatedIpPool> {
        self.dedicated_ip_pool.as_ref()
    }
}
impl aws_http::request_id::RequestId for GetDedicatedIpPoolOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl GetDedicatedIpPoolOutput {
    /// Creates a new builder-style object to manufacture [`GetDedicatedIpPoolOutput`](crate::operation::get_dedicated_ip_pool::GetDedicatedIpPoolOutput).
    pub fn builder(
    ) -> crate::operation::get_dedicated_ip_pool::builders::GetDedicatedIpPoolOutputBuilder {
        crate::operation::get_dedicated_ip_pool::builders::GetDedicatedIpPoolOutputBuilder::default(
        )
    }
}

/// A builder for [`GetDedicatedIpPoolOutput`](crate::operation::get_dedicated_ip_pool::GetDedicatedIpPoolOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct GetDedicatedIpPoolOutputBuilder {
    pub(crate) dedicated_ip_pool: std::option::Option<crate::types::DedicatedIpPool>,
    _request_id: Option<String>,
}
impl GetDedicatedIpPoolOutputBuilder {
    /// <p>An object that contains information about a dedicated IP pool.</p>
    pub fn dedicated_ip_pool(mut self, input: crate::types::DedicatedIpPool) -> Self {
        self.dedicated_ip_pool = Some(input);
        self
    }
    /// <p>An object that contains information about a dedicated IP pool.</p>
    pub fn set_dedicated_ip_pool(
        mut self,
        input: std::option::Option<crate::types::DedicatedIpPool>,
    ) -> Self {
        self.dedicated_ip_pool = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`GetDedicatedIpPoolOutput`](crate::operation::get_dedicated_ip_pool::GetDedicatedIpPoolOutput).
    pub fn build(self) -> crate::operation::get_dedicated_ip_pool::GetDedicatedIpPoolOutput {
        crate::operation::get_dedicated_ip_pool::GetDedicatedIpPoolOutput {
            dedicated_ip_pool: self.dedicated_ip_pool,
            _request_id: self._request_id,
        }
    }
}
