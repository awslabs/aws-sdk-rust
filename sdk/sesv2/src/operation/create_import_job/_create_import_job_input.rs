// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Represents a request to create an import job from a data source for a data destination.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct CreateImportJobInput {
    /// <p>The destination for the import job.</p>
    pub import_destination: ::std::option::Option<crate::types::ImportDestination>,
    /// <p>The data source for the import job.</p>
    pub import_data_source: ::std::option::Option<crate::types::ImportDataSource>,
}
impl CreateImportJobInput {
    /// <p>The destination for the import job.</p>
    pub fn import_destination(&self) -> ::std::option::Option<&crate::types::ImportDestination> {
        self.import_destination.as_ref()
    }
    /// <p>The data source for the import job.</p>
    pub fn import_data_source(&self) -> ::std::option::Option<&crate::types::ImportDataSource> {
        self.import_data_source.as_ref()
    }
}
impl CreateImportJobInput {
    /// Creates a new builder-style object to manufacture [`CreateImportJobInput`](crate::operation::create_import_job::CreateImportJobInput).
    pub fn builder() -> crate::operation::create_import_job::builders::CreateImportJobInputBuilder {
        crate::operation::create_import_job::builders::CreateImportJobInputBuilder::default()
    }
}

/// A builder for [`CreateImportJobInput`](crate::operation::create_import_job::CreateImportJobInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct CreateImportJobInputBuilder {
    pub(crate) import_destination: ::std::option::Option<crate::types::ImportDestination>,
    pub(crate) import_data_source: ::std::option::Option<crate::types::ImportDataSource>,
}
impl CreateImportJobInputBuilder {
    /// <p>The destination for the import job.</p>
    /// This field is required.
    pub fn import_destination(mut self, input: crate::types::ImportDestination) -> Self {
        self.import_destination = ::std::option::Option::Some(input);
        self
    }
    /// <p>The destination for the import job.</p>
    pub fn set_import_destination(mut self, input: ::std::option::Option<crate::types::ImportDestination>) -> Self {
        self.import_destination = input;
        self
    }
    /// <p>The destination for the import job.</p>
    pub fn get_import_destination(&self) -> &::std::option::Option<crate::types::ImportDestination> {
        &self.import_destination
    }
    /// <p>The data source for the import job.</p>
    /// This field is required.
    pub fn import_data_source(mut self, input: crate::types::ImportDataSource) -> Self {
        self.import_data_source = ::std::option::Option::Some(input);
        self
    }
    /// <p>The data source for the import job.</p>
    pub fn set_import_data_source(mut self, input: ::std::option::Option<crate::types::ImportDataSource>) -> Self {
        self.import_data_source = input;
        self
    }
    /// <p>The data source for the import job.</p>
    pub fn get_import_data_source(&self) -> &::std::option::Option<crate::types::ImportDataSource> {
        &self.import_data_source
    }
    /// Consumes the builder and constructs a [`CreateImportJobInput`](crate::operation::create_import_job::CreateImportJobInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::create_import_job::CreateImportJobInput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::operation::create_import_job::CreateImportJobInput {
            import_destination: self.import_destination,
            import_data_source: self.import_data_source,
        })
    }
}
