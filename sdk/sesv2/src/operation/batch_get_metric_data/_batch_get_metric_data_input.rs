// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Represents a request to retrieve a batch of metric data.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct BatchGetMetricDataInput {
    /// <p>A list of queries for metrics to be retrieved.</p>
    #[doc(hidden)]
    pub queries: std::option::Option<std::vec::Vec<crate::types::BatchGetMetricDataQuery>>,
}
impl BatchGetMetricDataInput {
    /// <p>A list of queries for metrics to be retrieved.</p>
    pub fn queries(&self) -> std::option::Option<&[crate::types::BatchGetMetricDataQuery]> {
        self.queries.as_deref()
    }
}
impl BatchGetMetricDataInput {
    /// Creates a new builder-style object to manufacture [`BatchGetMetricDataInput`](crate::operation::batch_get_metric_data::BatchGetMetricDataInput).
    pub fn builder(
    ) -> crate::operation::batch_get_metric_data::builders::BatchGetMetricDataInputBuilder {
        crate::operation::batch_get_metric_data::builders::BatchGetMetricDataInputBuilder::default()
    }
}

/// A builder for [`BatchGetMetricDataInput`](crate::operation::batch_get_metric_data::BatchGetMetricDataInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct BatchGetMetricDataInputBuilder {
    pub(crate) queries: std::option::Option<std::vec::Vec<crate::types::BatchGetMetricDataQuery>>,
}
impl BatchGetMetricDataInputBuilder {
    /// Appends an item to `queries`.
    ///
    /// To override the contents of this collection use [`set_queries`](Self::set_queries).
    ///
    /// <p>A list of queries for metrics to be retrieved.</p>
    pub fn queries(mut self, input: crate::types::BatchGetMetricDataQuery) -> Self {
        let mut v = self.queries.unwrap_or_default();
        v.push(input);
        self.queries = Some(v);
        self
    }
    /// <p>A list of queries for metrics to be retrieved.</p>
    pub fn set_queries(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::BatchGetMetricDataQuery>>,
    ) -> Self {
        self.queries = input;
        self
    }
    /// Consumes the builder and constructs a [`BatchGetMetricDataInput`](crate::operation::batch_get_metric_data::BatchGetMetricDataInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::batch_get_metric_data::BatchGetMetricDataInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::batch_get_metric_data::BatchGetMetricDataInput {
                queries: self.queries,
            },
        )
    }
}
