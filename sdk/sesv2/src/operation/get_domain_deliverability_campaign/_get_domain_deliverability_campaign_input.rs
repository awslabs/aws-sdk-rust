// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Retrieve all the deliverability data for a specific campaign. This data is available for a campaign only if the campaign sent email by using a domain that the Deliverability dashboard is enabled for (<code>PutDeliverabilityDashboardOption</code> operation).</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GetDomainDeliverabilityCampaignInput {
    /// <p>The unique identifier for the campaign. The Deliverability dashboard automatically generates and assigns this identifier to a campaign.</p>
    #[doc(hidden)]
    pub campaign_id: std::option::Option<std::string::String>,
}
impl GetDomainDeliverabilityCampaignInput {
    /// <p>The unique identifier for the campaign. The Deliverability dashboard automatically generates and assigns this identifier to a campaign.</p>
    pub fn campaign_id(&self) -> std::option::Option<&str> {
        self.campaign_id.as_deref()
    }
}
impl GetDomainDeliverabilityCampaignInput {
    /// Creates a new builder-style object to manufacture [`GetDomainDeliverabilityCampaignInput`](crate::operation::get_domain_deliverability_campaign::GetDomainDeliverabilityCampaignInput).
    pub fn builder() -> crate::operation::get_domain_deliverability_campaign::builders::GetDomainDeliverabilityCampaignInputBuilder{
        crate::operation::get_domain_deliverability_campaign::builders::GetDomainDeliverabilityCampaignInputBuilder::default()
    }
}

/// A builder for [`GetDomainDeliverabilityCampaignInput`](crate::operation::get_domain_deliverability_campaign::GetDomainDeliverabilityCampaignInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct GetDomainDeliverabilityCampaignInputBuilder {
    pub(crate) campaign_id: std::option::Option<std::string::String>,
}
impl GetDomainDeliverabilityCampaignInputBuilder {
    /// <p>The unique identifier for the campaign. The Deliverability dashboard automatically generates and assigns this identifier to a campaign.</p>
    pub fn campaign_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.campaign_id = Some(input.into());
        self
    }
    /// <p>The unique identifier for the campaign. The Deliverability dashboard automatically generates and assigns this identifier to a campaign.</p>
    pub fn set_campaign_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.campaign_id = input;
        self
    }
    /// Consumes the builder and constructs a [`GetDomainDeliverabilityCampaignInput`](crate::operation::get_domain_deliverability_campaign::GetDomainDeliverabilityCampaignInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::get_domain_deliverability_campaign::GetDomainDeliverabilityCampaignInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::get_domain_deliverability_campaign::GetDomainDeliverabilityCampaignInput {
                campaign_id: self.campaign_id
                ,
            }
        )
    }
}
