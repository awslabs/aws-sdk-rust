// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Represents a request to update an email template. For more information, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-personalized-email-api.html">Amazon SES Developer Guide</a>.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct UpdateEmailTemplateInput {
    /// <p>The name of the template.</p>
    #[doc(hidden)]
    pub template_name: std::option::Option<std::string::String>,
    /// <p>The content of the email template, composed of a subject line, an HTML part, and a text-only part.</p>
    #[doc(hidden)]
    pub template_content: std::option::Option<crate::types::EmailTemplateContent>,
}
impl UpdateEmailTemplateInput {
    /// <p>The name of the template.</p>
    pub fn template_name(&self) -> std::option::Option<&str> {
        self.template_name.as_deref()
    }
    /// <p>The content of the email template, composed of a subject line, an HTML part, and a text-only part.</p>
    pub fn template_content(&self) -> std::option::Option<&crate::types::EmailTemplateContent> {
        self.template_content.as_ref()
    }
}
impl UpdateEmailTemplateInput {
    /// Creates a new builder-style object to manufacture [`UpdateEmailTemplateInput`](crate::operation::update_email_template::UpdateEmailTemplateInput).
    pub fn builder(
    ) -> crate::operation::update_email_template::builders::UpdateEmailTemplateInputBuilder {
        crate::operation::update_email_template::builders::UpdateEmailTemplateInputBuilder::default(
        )
    }
}

/// A builder for [`UpdateEmailTemplateInput`](crate::operation::update_email_template::UpdateEmailTemplateInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct UpdateEmailTemplateInputBuilder {
    pub(crate) template_name: std::option::Option<std::string::String>,
    pub(crate) template_content: std::option::Option<crate::types::EmailTemplateContent>,
}
impl UpdateEmailTemplateInputBuilder {
    /// <p>The name of the template.</p>
    pub fn template_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.template_name = Some(input.into());
        self
    }
    /// <p>The name of the template.</p>
    pub fn set_template_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.template_name = input;
        self
    }
    /// <p>The content of the email template, composed of a subject line, an HTML part, and a text-only part.</p>
    pub fn template_content(mut self, input: crate::types::EmailTemplateContent) -> Self {
        self.template_content = Some(input);
        self
    }
    /// <p>The content of the email template, composed of a subject line, an HTML part, and a text-only part.</p>
    pub fn set_template_content(
        mut self,
        input: std::option::Option<crate::types::EmailTemplateContent>,
    ) -> Self {
        self.template_content = input;
        self
    }
    /// Consumes the builder and constructs a [`UpdateEmailTemplateInput`](crate::operation::update_email_template::UpdateEmailTemplateInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::update_email_template::UpdateEmailTemplateInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::update_email_template::UpdateEmailTemplateInput {
                template_name: self.template_name,
                template_content: self.template_content,
            },
        )
    }
}
