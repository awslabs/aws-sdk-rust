// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_message_insights_filters(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::types::MessageInsightsFilters,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.from_email_address {
        let mut array_2 = object.key("FromEmailAddress").start_array();
        for item_3 in var_1 {
            {
                array_2.value().string(item_3.as_str());
            }
        }
        array_2.finish();
    }
    if let Some(var_4) = &input.destination {
        let mut array_5 = object.key("Destination").start_array();
        for item_6 in var_4 {
            {
                array_5.value().string(item_6.as_str());
            }
        }
        array_5.finish();
    }
    if let Some(var_7) = &input.subject {
        let mut array_8 = object.key("Subject").start_array();
        for item_9 in var_7 {
            {
                array_8.value().string(item_9.as_str());
            }
        }
        array_8.finish();
    }
    if let Some(var_10) = &input.isp {
        let mut array_11 = object.key("Isp").start_array();
        for item_12 in var_10 {
            {
                array_11.value().string(item_12.as_str());
            }
        }
        array_11.finish();
    }
    if let Some(var_13) = &input.last_delivery_event {
        let mut array_14 = object.key("LastDeliveryEvent").start_array();
        for item_15 in var_13 {
            {
                array_14.value().string(item_15.as_str());
            }
        }
        array_14.finish();
    }
    if let Some(var_16) = &input.last_engagement_event {
        let mut array_17 = object.key("LastEngagementEvent").start_array();
        for item_18 in var_16 {
            {
                array_17.value().string(item_18.as_str());
            }
        }
        array_17.finish();
    }
    Ok(())
}

pub(crate) fn de_message_insights_filters<'a, I>(
    tokens: &mut ::std::iter::Peekable<I>,
) -> Result<Option<crate::types::MessageInsightsFilters>, ::aws_smithy_json::deserialize::error::DeserializeError>
where
    I: Iterator<Item = Result<::aws_smithy_json::deserialize::Token<'a>, ::aws_smithy_json::deserialize::error::DeserializeError>>,
{
    match tokens.next().transpose()? {
        Some(::aws_smithy_json::deserialize::Token::ValueNull { .. }) => Ok(None),
        Some(::aws_smithy_json::deserialize::Token::StartObject { .. }) => {
            #[allow(unused_mut)]
            let mut builder = crate::types::builders::MessageInsightsFiltersBuilder::default();
            loop {
                match tokens.next().transpose()? {
                    Some(::aws_smithy_json::deserialize::Token::EndObject { .. }) => break,
                    Some(::aws_smithy_json::deserialize::Token::ObjectKey { key, .. }) => match key.to_unescaped()?.as_ref() {
                        "FromEmailAddress" => {
                            builder = builder.set_from_email_address(
                                crate::protocol_serde::shape_email_address_filter_list::de_email_address_filter_list(tokens)?,
                            );
                        }
                        "Destination" => {
                            builder = builder.set_destination(crate::protocol_serde::shape_email_address_filter_list::de_email_address_filter_list(
                                tokens,
                            )?);
                        }
                        "Subject" => {
                            builder = builder.set_subject(crate::protocol_serde::shape_email_subject_filter_list::de_email_subject_filter_list(
                                tokens,
                            )?);
                        }
                        "Isp" => {
                            builder = builder.set_isp(crate::protocol_serde::shape_isp_filter_list::de_isp_filter_list(tokens)?);
                        }
                        "LastDeliveryEvent" => {
                            builder = builder.set_last_delivery_event(
                                crate::protocol_serde::shape_last_delivery_event_list::de_last_delivery_event_list(tokens)?,
                            );
                        }
                        "LastEngagementEvent" => {
                            builder = builder.set_last_engagement_event(
                                crate::protocol_serde::shape_last_engagement_event_list::de_last_engagement_event_list(tokens)?,
                            );
                        }
                        _ => ::aws_smithy_json::deserialize::token::skip_value(tokens)?,
                    },
                    other => {
                        return Err(::aws_smithy_json::deserialize::error::DeserializeError::custom(format!(
                            "expected object key or end object, found: {:?}",
                            other
                        )))
                    }
                }
            }
            Ok(Some(builder.build()))
        }
        _ => Err(::aws_smithy_json::deserialize::error::DeserializeError::custom(
            "expected start object or null",
        )),
    }
}
