// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_send_bulk_email_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::send_bulk_email::SendBulkEmailInput,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.bulk_email_entries {
        let mut array_2 = object.key("BulkEmailEntries").start_array();
        for item_3 in var_1 {
            {
                #[allow(unused_mut)]
                let mut object_4 = array_2.value().start_object();
                crate::protocol_serde::shape_bulk_email_entry::ser_bulk_email_entry(&mut object_4, item_3)?;
                object_4.finish();
            }
        }
        array_2.finish();
    }
    if let Some(var_5) = &input.configuration_set_name {
        object.key("ConfigurationSetName").string(var_5.as_str());
    }
    if let Some(var_6) = &input.default_content {
        #[allow(unused_mut)]
        let mut object_7 = object.key("DefaultContent").start_object();
        crate::protocol_serde::shape_bulk_email_content::ser_bulk_email_content(&mut object_7, var_6)?;
        object_7.finish();
    }
    if let Some(var_8) = &input.default_email_tags {
        let mut array_9 = object.key("DefaultEmailTags").start_array();
        for item_10 in var_8 {
            {
                #[allow(unused_mut)]
                let mut object_11 = array_9.value().start_object();
                crate::protocol_serde::shape_message_tag::ser_message_tag(&mut object_11, item_10)?;
                object_11.finish();
            }
        }
        array_9.finish();
    }
    if let Some(var_12) = &input.feedback_forwarding_email_address {
        object.key("FeedbackForwardingEmailAddress").string(var_12.as_str());
    }
    if let Some(var_13) = &input.feedback_forwarding_email_address_identity_arn {
        object.key("FeedbackForwardingEmailAddressIdentityArn").string(var_13.as_str());
    }
    if let Some(var_14) = &input.from_email_address {
        object.key("FromEmailAddress").string(var_14.as_str());
    }
    if let Some(var_15) = &input.from_email_address_identity_arn {
        object.key("FromEmailAddressIdentityArn").string(var_15.as_str());
    }
    if let Some(var_16) = &input.reply_to_addresses {
        let mut array_17 = object.key("ReplyToAddresses").start_array();
        for item_18 in var_16 {
            {
                array_17.value().string(item_18.as_str());
            }
        }
        array_17.finish();
    }
    Ok(())
}
