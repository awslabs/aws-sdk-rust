// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_recommendation_job_input_config(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::types::RecommendationJobInputConfig,
) -> ::std::result::Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.model_package_version_arn {
        object.key("ModelPackageVersionArn").string(var_1.as_str());
    }
    if let Some(var_2) = &input.model_name {
        object.key("ModelName").string(var_2.as_str());
    }
    if let Some(var_3) = &input.job_duration_in_seconds {
        object.key("JobDurationInSeconds").number(
            #[allow(clippy::useless_conversion)]
            ::aws_smithy_types::Number::NegInt((*var_3).into()),
        );
    }
    if let Some(var_4) = &input.traffic_pattern {
        #[allow(unused_mut)]
        let mut object_5 = object.key("TrafficPattern").start_object();
        crate::protocol_serde::shape_traffic_pattern::ser_traffic_pattern(&mut object_5, var_4)?;
        object_5.finish();
    }
    if let Some(var_6) = &input.resource_limit {
        #[allow(unused_mut)]
        let mut object_7 = object.key("ResourceLimit").start_object();
        crate::protocol_serde::shape_recommendation_job_resource_limit::ser_recommendation_job_resource_limit(&mut object_7, var_6)?;
        object_7.finish();
    }
    if let Some(var_8) = &input.endpoint_configurations {
        let mut array_9 = object.key("EndpointConfigurations").start_array();
        for item_10 in var_8 {
            {
                #[allow(unused_mut)]
                let mut object_11 = array_9.value().start_object();
                crate::protocol_serde::shape_endpoint_input_configuration::ser_endpoint_input_configuration(&mut object_11, item_10)?;
                object_11.finish();
            }
        }
        array_9.finish();
    }
    if let Some(var_12) = &input.volume_kms_key_id {
        object.key("VolumeKmsKeyId").string(var_12.as_str());
    }
    if let Some(var_13) = &input.container_config {
        #[allow(unused_mut)]
        let mut object_14 = object.key("ContainerConfig").start_object();
        crate::protocol_serde::shape_recommendation_job_container_config::ser_recommendation_job_container_config(&mut object_14, var_13)?;
        object_14.finish();
    }
    if let Some(var_15) = &input.endpoints {
        let mut array_16 = object.key("Endpoints").start_array();
        for item_17 in var_15 {
            {
                #[allow(unused_mut)]
                let mut object_18 = array_16.value().start_object();
                crate::protocol_serde::shape_endpoint_info::ser_endpoint_info(&mut object_18, item_17)?;
                object_18.finish();
            }
        }
        array_16.finish();
    }
    if let Some(var_19) = &input.vpc_config {
        #[allow(unused_mut)]
        let mut object_20 = object.key("VpcConfig").start_object();
        crate::protocol_serde::shape_recommendation_job_vpc_config::ser_recommendation_job_vpc_config(&mut object_20, var_19)?;
        object_20.finish();
    }
    Ok(())
}

pub(crate) fn de_recommendation_job_input_config<'a, I>(
    tokens: &mut ::std::iter::Peekable<I>,
) -> ::std::result::Result<Option<crate::types::RecommendationJobInputConfig>, ::aws_smithy_json::deserialize::error::DeserializeError>
where
    I: Iterator<Item = Result<::aws_smithy_json::deserialize::Token<'a>, ::aws_smithy_json::deserialize::error::DeserializeError>>,
{
    match tokens.next().transpose()? {
        Some(::aws_smithy_json::deserialize::Token::ValueNull { .. }) => Ok(None),
        Some(::aws_smithy_json::deserialize::Token::StartObject { .. }) => {
            #[allow(unused_mut)]
            let mut builder = crate::types::builders::RecommendationJobInputConfigBuilder::default();
            loop {
                match tokens.next().transpose()? {
                    Some(::aws_smithy_json::deserialize::Token::EndObject { .. }) => break,
                    Some(::aws_smithy_json::deserialize::Token::ObjectKey { key, .. }) => match key.to_unescaped()?.as_ref() {
                        "ModelPackageVersionArn" => {
                            builder = builder.set_model_package_version_arn(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                            );
                        }
                        "ModelName" => {
                            builder = builder.set_model_name(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                            );
                        }
                        "JobDurationInSeconds" => {
                            builder = builder.set_job_duration_in_seconds(
                                ::aws_smithy_json::deserialize::token::expect_number_or_null(tokens.next())?
                                    .map(i32::try_from)
                                    .transpose()?,
                            );
                        }
                        "TrafficPattern" => {
                            builder = builder.set_traffic_pattern(crate::protocol_serde::shape_traffic_pattern::de_traffic_pattern(tokens)?);
                        }
                        "ResourceLimit" => {
                            builder = builder.set_resource_limit(
                                crate::protocol_serde::shape_recommendation_job_resource_limit::de_recommendation_job_resource_limit(tokens)?,
                            );
                        }
                        "EndpointConfigurations" => {
                            builder = builder.set_endpoint_configurations(
                                crate::protocol_serde::shape_endpoint_input_configurations::de_endpoint_input_configurations(tokens)?,
                            );
                        }
                        "VolumeKmsKeyId" => {
                            builder = builder.set_volume_kms_key_id(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                            );
                        }
                        "ContainerConfig" => {
                            builder = builder.set_container_config(
                                crate::protocol_serde::shape_recommendation_job_container_config::de_recommendation_job_container_config(tokens)?,
                            );
                        }
                        "Endpoints" => {
                            builder = builder.set_endpoints(crate::protocol_serde::shape_endpoints::de_endpoints(tokens)?);
                        }
                        "VpcConfig" => {
                            builder = builder.set_vpc_config(
                                crate::protocol_serde::shape_recommendation_job_vpc_config::de_recommendation_job_vpc_config(tokens)?,
                            );
                        }
                        _ => ::aws_smithy_json::deserialize::token::skip_value(tokens)?,
                    },
                    other => {
                        return Err(::aws_smithy_json::deserialize::error::DeserializeError::custom(format!(
                            "expected object key or end object, found: {other:?}"
                        )))
                    }
                }
            }
            Ok(Some(builder.build()))
        }
        _ => Err(::aws_smithy_json::deserialize::error::DeserializeError::custom(
            "expected start object or null",
        )),
    }
}
