// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_canvas_app_settings(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::types::CanvasAppSettings,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.time_series_forecasting_settings {
        #[allow(unused_mut)]
        let mut object_2 = object.key("TimeSeriesForecastingSettings").start_object();
        crate::protocol_serde::shape_time_series_forecasting_settings::ser_time_series_forecasting_settings(&mut object_2, var_1)?;
        object_2.finish();
    }
    if let Some(var_3) = &input.model_register_settings {
        #[allow(unused_mut)]
        let mut object_4 = object.key("ModelRegisterSettings").start_object();
        crate::protocol_serde::shape_model_register_settings::ser_model_register_settings(&mut object_4, var_3)?;
        object_4.finish();
    }
    if let Some(var_5) = &input.workspace_settings {
        #[allow(unused_mut)]
        let mut object_6 = object.key("WorkspaceSettings").start_object();
        crate::protocol_serde::shape_workspace_settings::ser_workspace_settings(&mut object_6, var_5)?;
        object_6.finish();
    }
    if let Some(var_7) = &input.identity_provider_o_auth_settings {
        let mut array_8 = object.key("IdentityProviderOAuthSettings").start_array();
        for item_9 in var_7 {
            {
                #[allow(unused_mut)]
                let mut object_10 = array_8.value().start_object();
                crate::protocol_serde::shape_identity_provider_o_auth_setting::ser_identity_provider_o_auth_setting(&mut object_10, item_9)?;
                object_10.finish();
            }
        }
        array_8.finish();
    }
    if let Some(var_11) = &input.kendra_settings {
        #[allow(unused_mut)]
        let mut object_12 = object.key("KendraSettings").start_object();
        crate::protocol_serde::shape_kendra_settings::ser_kendra_settings(&mut object_12, var_11)?;
        object_12.finish();
    }
    if let Some(var_13) = &input.direct_deploy_settings {
        #[allow(unused_mut)]
        let mut object_14 = object.key("DirectDeploySettings").start_object();
        crate::protocol_serde::shape_direct_deploy_settings::ser_direct_deploy_settings(&mut object_14, var_13)?;
        object_14.finish();
    }
    Ok(())
}

pub(crate) fn de_canvas_app_settings<'a, I>(
    tokens: &mut ::std::iter::Peekable<I>,
) -> Result<Option<crate::types::CanvasAppSettings>, ::aws_smithy_json::deserialize::error::DeserializeError>
where
    I: Iterator<Item = Result<::aws_smithy_json::deserialize::Token<'a>, ::aws_smithy_json::deserialize::error::DeserializeError>>,
{
    match tokens.next().transpose()? {
        Some(::aws_smithy_json::deserialize::Token::ValueNull { .. }) => Ok(None),
        Some(::aws_smithy_json::deserialize::Token::StartObject { .. }) => {
            #[allow(unused_mut)]
            let mut builder = crate::types::builders::CanvasAppSettingsBuilder::default();
            loop {
                match tokens.next().transpose()? {
                    Some(::aws_smithy_json::deserialize::Token::EndObject { .. }) => break,
                    Some(::aws_smithy_json::deserialize::Token::ObjectKey { key, .. }) => match key.to_unescaped()?.as_ref() {
                        "TimeSeriesForecastingSettings" => {
                            builder = builder.set_time_series_forecasting_settings(
                                crate::protocol_serde::shape_time_series_forecasting_settings::de_time_series_forecasting_settings(tokens)?,
                            );
                        }
                        "ModelRegisterSettings" => {
                            builder = builder.set_model_register_settings(
                                crate::protocol_serde::shape_model_register_settings::de_model_register_settings(tokens)?,
                            );
                        }
                        "WorkspaceSettings" => {
                            builder = builder.set_workspace_settings(crate::protocol_serde::shape_workspace_settings::de_workspace_settings(tokens)?);
                        }
                        "IdentityProviderOAuthSettings" => {
                            builder = builder.set_identity_provider_o_auth_settings(
                                crate::protocol_serde::shape_identity_provider_o_auth_settings::de_identity_provider_o_auth_settings(tokens)?,
                            );
                        }
                        "KendraSettings" => {
                            builder = builder.set_kendra_settings(crate::protocol_serde::shape_kendra_settings::de_kendra_settings(tokens)?);
                        }
                        "DirectDeploySettings" => {
                            builder = builder
                                .set_direct_deploy_settings(crate::protocol_serde::shape_direct_deploy_settings::de_direct_deploy_settings(tokens)?);
                        }
                        _ => ::aws_smithy_json::deserialize::token::skip_value(tokens)?,
                    },
                    other => {
                        return Err(::aws_smithy_json::deserialize::error::DeserializeError::custom(format!(
                            "expected object key or end object, found: {:?}",
                            other
                        )))
                    }
                }
            }
            Ok(Some(builder.build()))
        }
        _ => Err(::aws_smithy_json::deserialize::error::DeserializeError::custom(
            "expected start object or null",
        )),
    }
}
