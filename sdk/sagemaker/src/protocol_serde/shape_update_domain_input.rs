// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_update_domain_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::update_domain::UpdateDomainInput,
) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    if let Some(var_1) = &input.domain_id {
        object.key("DomainId").string(var_1.as_str());
    }
    if let Some(var_2) = &input.default_user_settings {
        #[allow(unused_mut)]
        let mut object_3 = object.key("DefaultUserSettings").start_object();
        crate::protocol_serde::shape_user_settings::ser_user_settings(&mut object_3, var_2)?;
        object_3.finish();
    }
    if let Some(var_4) = &input.domain_settings_for_update {
        #[allow(unused_mut)]
        let mut object_5 = object.key("DomainSettingsForUpdate").start_object();
        crate::protocol_serde::shape_domain_settings_for_update::ser_domain_settings_for_update(
            &mut object_5,
            var_4,
        )?;
        object_5.finish();
    }
    if let Some(var_6) = &input.default_space_settings {
        #[allow(unused_mut)]
        let mut object_7 = object.key("DefaultSpaceSettings").start_object();
        crate::protocol_serde::shape_default_space_settings::ser_default_space_settings(
            &mut object_7,
            var_6,
        )?;
        object_7.finish();
    }
    if let Some(var_8) = &input.app_security_group_management {
        object
            .key("AppSecurityGroupManagement")
            .string(var_8.as_str());
    }
    Ok(())
}
