// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_update_inference_experiment_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::update_inference_experiment::UpdateInferenceExperimentInput,
) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    if let Some(var_1) = &input.name {
        object.key("Name").string(var_1.as_str());
    }
    if let Some(var_2) = &input.schedule {
        #[allow(unused_mut)]
        let mut object_3 = object.key("Schedule").start_object();
        crate::protocol_serde::shape_inference_experiment_schedule::ser_inference_experiment_schedule(&mut object_3, var_2)?;
        object_3.finish();
    }
    if let Some(var_4) = &input.description {
        object.key("Description").string(var_4.as_str());
    }
    if let Some(var_5) = &input.model_variants {
        let mut array_6 = object.key("ModelVariants").start_array();
        for item_7 in var_5 {
            {
                #[allow(unused_mut)]
                let mut object_8 = array_6.value().start_object();
                crate::protocol_serde::shape_model_variant_config::ser_model_variant_config(
                    &mut object_8,
                    item_7,
                )?;
                object_8.finish();
            }
        }
        array_6.finish();
    }
    if let Some(var_9) = &input.data_storage_config {
        #[allow(unused_mut)]
        let mut object_10 = object.key("DataStorageConfig").start_object();
        crate::protocol_serde::shape_inference_experiment_data_storage_config::ser_inference_experiment_data_storage_config(&mut object_10, var_9)?;
        object_10.finish();
    }
    if let Some(var_11) = &input.shadow_mode_config {
        #[allow(unused_mut)]
        let mut object_12 = object.key("ShadowModeConfig").start_object();
        crate::protocol_serde::shape_shadow_mode_config::ser_shadow_mode_config(
            &mut object_12,
            var_11,
        )?;
        object_12.finish();
    }
    Ok(())
}
