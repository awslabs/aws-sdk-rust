// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) fn de_hyper_parameter_tuning_job_search_entity<'a, I>(
    tokens: &mut std::iter::Peekable<I>,
) -> Result<
    Option<crate::types::HyperParameterTuningJobSearchEntity>,
    aws_smithy_json::deserialize::error::DeserializeError,
>
where
    I: Iterator<
        Item = Result<
            aws_smithy_json::deserialize::Token<'a>,
            aws_smithy_json::deserialize::error::DeserializeError,
        >,
    >,
{
    match tokens.next().transpose()? {
        Some(aws_smithy_json::deserialize::Token::ValueNull { .. }) => Ok(None),
        Some(aws_smithy_json::deserialize::Token::StartObject { .. }) => {
            #[allow(unused_mut)]
            let mut builder =
                crate::types::builders::HyperParameterTuningJobSearchEntityBuilder::default();
            loop {
                match tokens.next().transpose()? {
                    Some(aws_smithy_json::deserialize::Token::EndObject { .. }) => break,
                    Some(aws_smithy_json::deserialize::Token::ObjectKey { key, .. }) => {
                        match key.to_unescaped()?.as_ref() {
                            "HyperParameterTuningJobName" => {
                                builder = builder.set_hyper_parameter_tuning_job_name(
                                    aws_smithy_json::deserialize::token::expect_string_or_null(
                                        tokens.next(),
                                    )?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                                );
                            }
                            "HyperParameterTuningJobArn" => {
                                builder = builder.set_hyper_parameter_tuning_job_arn(
                                    aws_smithy_json::deserialize::token::expect_string_or_null(
                                        tokens.next(),
                                    )?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                                );
                            }
                            "HyperParameterTuningJobConfig" => {
                                builder = builder.set_hyper_parameter_tuning_job_config(
                                    crate::protocol_serde::shape_hyper_parameter_tuning_job_config::de_hyper_parameter_tuning_job_config(tokens)?
                                );
                            }
                            "TrainingJobDefinition" => {
                                builder = builder.set_training_job_definition(
                                    crate::protocol_serde::shape_hyper_parameter_training_job_definition::de_hyper_parameter_training_job_definition(tokens)?
                                );
                            }
                            "TrainingJobDefinitions" => {
                                builder = builder.set_training_job_definitions(
                                    crate::protocol_serde::shape_hyper_parameter_training_job_definitions::de_hyper_parameter_training_job_definitions(tokens)?
                                );
                            }
                            "HyperParameterTuningJobStatus" => {
                                builder = builder.set_hyper_parameter_tuning_job_status(
                                    aws_smithy_json::deserialize::token::expect_string_or_null(
                                        tokens.next(),
                                    )?
                                    .map(|s| {
                                        s.to_unescaped().map(|u| {
                                            crate::types::HyperParameterTuningJobStatus::from(
                                                u.as_ref(),
                                            )
                                        })
                                    })
                                    .transpose()?,
                                );
                            }
                            "CreationTime" => {
                                builder = builder.set_creation_time(
                                    aws_smithy_json::deserialize::token::expect_timestamp_or_null(
                                        tokens.next(),
                                        aws_smithy_types::date_time::Format::EpochSeconds,
                                    )?,
                                );
                            }
                            "HyperParameterTuningEndTime" => {
                                builder = builder.set_hyper_parameter_tuning_end_time(
                                    aws_smithy_json::deserialize::token::expect_timestamp_or_null(
                                        tokens.next(),
                                        aws_smithy_types::date_time::Format::EpochSeconds,
                                    )?,
                                );
                            }
                            "LastModifiedTime" => {
                                builder = builder.set_last_modified_time(
                                    aws_smithy_json::deserialize::token::expect_timestamp_or_null(
                                        tokens.next(),
                                        aws_smithy_types::date_time::Format::EpochSeconds,
                                    )?,
                                );
                            }
                            "TrainingJobStatusCounters" => {
                                builder = builder.set_training_job_status_counters(
                                    crate::protocol_serde::shape_training_job_status_counters::de_training_job_status_counters(tokens)?
                                );
                            }
                            "ObjectiveStatusCounters" => {
                                builder = builder.set_objective_status_counters(
                                    crate::protocol_serde::shape_objective_status_counters::de_objective_status_counters(tokens)?
                                );
                            }
                            "BestTrainingJob" => {
                                builder = builder.set_best_training_job(
                                    crate::protocol_serde::shape_hyper_parameter_training_job_summary::de_hyper_parameter_training_job_summary(tokens)?
                                );
                            }
                            "OverallBestTrainingJob" => {
                                builder = builder.set_overall_best_training_job(
                                    crate::protocol_serde::shape_hyper_parameter_training_job_summary::de_hyper_parameter_training_job_summary(tokens)?
                                );
                            }
                            "WarmStartConfig" => {
                                builder = builder.set_warm_start_config(
                                    crate::protocol_serde::shape_hyper_parameter_tuning_job_warm_start_config::de_hyper_parameter_tuning_job_warm_start_config(tokens)?
                                );
                            }
                            "FailureReason" => {
                                builder = builder.set_failure_reason(
                                    aws_smithy_json::deserialize::token::expect_string_or_null(
                                        tokens.next(),
                                    )?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                                );
                            }
                            "Tags" => {
                                builder = builder.set_tags(
                                    crate::protocol_serde::shape_tag_list::de_tag_list(tokens)?,
                                );
                            }
                            _ => aws_smithy_json::deserialize::token::skip_value(tokens)?,
                        }
                    }
                    other => {
                        return Err(
                            aws_smithy_json::deserialize::error::DeserializeError::custom(format!(
                                "expected object key or end object, found: {:?}",
                                other
                            )),
                        )
                    }
                }
            }
            Ok(Some(builder.build()))
        }
        _ => Err(
            aws_smithy_json::deserialize::error::DeserializeError::custom(
                "expected start object or null",
            ),
        ),
    }
}
