// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_query_filters(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::types::QueryFilters,
) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    if let Some(var_1) = &input.types {
        let mut array_2 = object.key("Types").start_array();
        for item_3 in var_1 {
            {
                array_2.value().string(item_3.as_str());
            }
        }
        array_2.finish();
    }
    if let Some(var_4) = &input.lineage_types {
        let mut array_5 = object.key("LineageTypes").start_array();
        for item_6 in var_4 {
            {
                array_5.value().string(item_6.as_str());
            }
        }
        array_5.finish();
    }
    if let Some(var_7) = &input.created_before {
        object
            .key("CreatedBefore")
            .date_time(var_7, aws_smithy_types::date_time::Format::EpochSeconds)?;
    }
    if let Some(var_8) = &input.created_after {
        object
            .key("CreatedAfter")
            .date_time(var_8, aws_smithy_types::date_time::Format::EpochSeconds)?;
    }
    if let Some(var_9) = &input.modified_before {
        object
            .key("ModifiedBefore")
            .date_time(var_9, aws_smithy_types::date_time::Format::EpochSeconds)?;
    }
    if let Some(var_10) = &input.modified_after {
        object
            .key("ModifiedAfter")
            .date_time(var_10, aws_smithy_types::date_time::Format::EpochSeconds)?;
    }
    if let Some(var_11) = &input.properties {
        #[allow(unused_mut)]
        let mut object_12 = object.key("Properties").start_object();
        for (key_13, value_14) in var_11 {
            {
                object_12.key(key_13.as_str()).string(value_14.as_str());
            }
        }
        object_12.finish();
    }
    Ok(())
}
