// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_update_training_job_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::update_training_job::UpdateTrainingJobInput,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.training_job_name {
        object.key("TrainingJobName").string(var_1.as_str());
    }
    if let Some(var_2) = &input.profiler_config {
        #[allow(unused_mut)]
        let mut object_3 = object.key("ProfilerConfig").start_object();
        crate::protocol_serde::shape_profiler_config_for_update::ser_profiler_config_for_update(&mut object_3, var_2)?;
        object_3.finish();
    }
    if let Some(var_4) = &input.profiler_rule_configurations {
        let mut array_5 = object.key("ProfilerRuleConfigurations").start_array();
        for item_6 in var_4 {
            {
                #[allow(unused_mut)]
                let mut object_7 = array_5.value().start_object();
                crate::protocol_serde::shape_profiler_rule_configuration::ser_profiler_rule_configuration(&mut object_7, item_6)?;
                object_7.finish();
            }
        }
        array_5.finish();
    }
    if let Some(var_8) = &input.resource_config {
        #[allow(unused_mut)]
        let mut object_9 = object.key("ResourceConfig").start_object();
        crate::protocol_serde::shape_resource_config_for_update::ser_resource_config_for_update(&mut object_9, var_8)?;
        object_9.finish();
    }
    Ok(())
}
