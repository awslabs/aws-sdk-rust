// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_list_feature_groups_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::list_feature_groups::ListFeatureGroupsInput,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.name_contains {
        object.key("NameContains").string(var_1.as_str());
    }
    if let Some(var_2) = &input.feature_group_status_equals {
        object.key("FeatureGroupStatusEquals").string(var_2.as_str());
    }
    if let Some(var_3) = &input.offline_store_status_equals {
        object.key("OfflineStoreStatusEquals").string(var_3.as_str());
    }
    if let Some(var_4) = &input.creation_time_after {
        object
            .key("CreationTimeAfter")
            .date_time(var_4, ::aws_smithy_types::date_time::Format::EpochSeconds)?;
    }
    if let Some(var_5) = &input.creation_time_before {
        object
            .key("CreationTimeBefore")
            .date_time(var_5, ::aws_smithy_types::date_time::Format::EpochSeconds)?;
    }
    if let Some(var_6) = &input.sort_order {
        object.key("SortOrder").string(var_6.as_str());
    }
    if let Some(var_7) = &input.sort_by {
        object.key("SortBy").string(var_7.as_str());
    }
    if let Some(var_8) = &input.max_results {
        object.key("MaxResults").number(
            #[allow(clippy::useless_conversion)]
            ::aws_smithy_types::Number::NegInt((*var_8).into()),
        );
    }
    if let Some(var_9) = &input.next_token {
        object.key("NextToken").string(var_9.as_str());
    }
    Ok(())
}
