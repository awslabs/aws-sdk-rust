// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The model on the edge device.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct EdgeModel {
    /// <p>The name of the model.</p>
    pub model_name: ::std::option::Option<::std::string::String>,
    /// <p>The model version.</p>
    pub model_version: ::std::option::Option<::std::string::String>,
    /// <p>The timestamp of the last data sample taken.</p>
    pub latest_sample_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>The timestamp of the last inference that was made.</p>
    pub latest_inference: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl EdgeModel {
    /// <p>The name of the model.</p>
    pub fn model_name(&self) -> ::std::option::Option<&str> {
        self.model_name.as_deref()
    }
    /// <p>The model version.</p>
    pub fn model_version(&self) -> ::std::option::Option<&str> {
        self.model_version.as_deref()
    }
    /// <p>The timestamp of the last data sample taken.</p>
    pub fn latest_sample_time(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.latest_sample_time.as_ref()
    }
    /// <p>The timestamp of the last inference that was made.</p>
    pub fn latest_inference(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.latest_inference.as_ref()
    }
}
impl EdgeModel {
    /// Creates a new builder-style object to manufacture [`EdgeModel`](crate::types::EdgeModel).
    pub fn builder() -> crate::types::builders::EdgeModelBuilder {
        crate::types::builders::EdgeModelBuilder::default()
    }
}

/// A builder for [`EdgeModel`](crate::types::EdgeModel).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct EdgeModelBuilder {
    pub(crate) model_name: ::std::option::Option<::std::string::String>,
    pub(crate) model_version: ::std::option::Option<::std::string::String>,
    pub(crate) latest_sample_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) latest_inference: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl EdgeModelBuilder {
    /// <p>The name of the model.</p>
    /// This field is required.
    pub fn model_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.model_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the model.</p>
    pub fn set_model_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.model_name = input;
        self
    }
    /// <p>The name of the model.</p>
    pub fn get_model_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.model_name
    }
    /// <p>The model version.</p>
    /// This field is required.
    pub fn model_version(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.model_version = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The model version.</p>
    pub fn set_model_version(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.model_version = input;
        self
    }
    /// <p>The model version.</p>
    pub fn get_model_version(&self) -> &::std::option::Option<::std::string::String> {
        &self.model_version
    }
    /// <p>The timestamp of the last data sample taken.</p>
    pub fn latest_sample_time(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.latest_sample_time = ::std::option::Option::Some(input);
        self
    }
    /// <p>The timestamp of the last data sample taken.</p>
    pub fn set_latest_sample_time(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.latest_sample_time = input;
        self
    }
    /// <p>The timestamp of the last data sample taken.</p>
    pub fn get_latest_sample_time(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.latest_sample_time
    }
    /// <p>The timestamp of the last inference that was made.</p>
    pub fn latest_inference(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.latest_inference = ::std::option::Option::Some(input);
        self
    }
    /// <p>The timestamp of the last inference that was made.</p>
    pub fn set_latest_inference(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.latest_inference = input;
        self
    }
    /// <p>The timestamp of the last inference that was made.</p>
    pub fn get_latest_inference(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.latest_inference
    }
    /// Consumes the builder and constructs a [`EdgeModel`](crate::types::EdgeModel).
    pub fn build(self) -> crate::types::EdgeModel {
        crate::types::EdgeModel {
            model_name: self.model_name,
            model_version: self.model_version,
            latest_sample_time: self.latest_sample_time,
            latest_inference: self.latest_inference,
        }
    }
}
