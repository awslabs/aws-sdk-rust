// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The Amazon S3 location of the input data objects.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct LabelingJobS3DataSource {
    /// <p>The Amazon S3 location of the manifest file that describes the input data objects. </p>
    /// <p>The input manifest file referenced in <code>ManifestS3Uri</code> must contain one of the following keys: <code>source-ref</code> or <code>source</code>. The value of the keys are interpreted as follows:</p>
    /// <ul>
    /// <li> <p> <code>source-ref</code>: The source of the object is the Amazon S3 object specified in the value. Use this value when the object is a binary object, such as an image.</p> </li>
    /// <li> <p> <code>source</code>: The source of the object is the value. Use this value when the object is a text value.</p> </li>
    /// </ul>
    /// <p>If you are a new user of Ground Truth, it is recommended you review <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/sms-input-data-input-manifest.html">Use an Input Manifest File </a> in the Amazon SageMaker Developer Guide to learn how to create an input manifest file.</p>
    #[doc(hidden)]
    pub manifest_s3_uri: std::option::Option<std::string::String>,
}
impl LabelingJobS3DataSource {
    /// <p>The Amazon S3 location of the manifest file that describes the input data objects. </p>
    /// <p>The input manifest file referenced in <code>ManifestS3Uri</code> must contain one of the following keys: <code>source-ref</code> or <code>source</code>. The value of the keys are interpreted as follows:</p>
    /// <ul>
    /// <li> <p> <code>source-ref</code>: The source of the object is the Amazon S3 object specified in the value. Use this value when the object is a binary object, such as an image.</p> </li>
    /// <li> <p> <code>source</code>: The source of the object is the value. Use this value when the object is a text value.</p> </li>
    /// </ul>
    /// <p>If you are a new user of Ground Truth, it is recommended you review <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/sms-input-data-input-manifest.html">Use an Input Manifest File </a> in the Amazon SageMaker Developer Guide to learn how to create an input manifest file.</p>
    pub fn manifest_s3_uri(&self) -> std::option::Option<&str> {
        self.manifest_s3_uri.as_deref()
    }
}
impl LabelingJobS3DataSource {
    /// Creates a new builder-style object to manufacture [`LabelingJobS3DataSource`](crate::types::LabelingJobS3DataSource).
    pub fn builder() -> crate::types::builders::LabelingJobS3DataSourceBuilder {
        crate::types::builders::LabelingJobS3DataSourceBuilder::default()
    }
}

/// A builder for [`LabelingJobS3DataSource`](crate::types::LabelingJobS3DataSource).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct LabelingJobS3DataSourceBuilder {
    pub(crate) manifest_s3_uri: std::option::Option<std::string::String>,
}
impl LabelingJobS3DataSourceBuilder {
    /// <p>The Amazon S3 location of the manifest file that describes the input data objects. </p>
    /// <p>The input manifest file referenced in <code>ManifestS3Uri</code> must contain one of the following keys: <code>source-ref</code> or <code>source</code>. The value of the keys are interpreted as follows:</p>
    /// <ul>
    /// <li> <p> <code>source-ref</code>: The source of the object is the Amazon S3 object specified in the value. Use this value when the object is a binary object, such as an image.</p> </li>
    /// <li> <p> <code>source</code>: The source of the object is the value. Use this value when the object is a text value.</p> </li>
    /// </ul>
    /// <p>If you are a new user of Ground Truth, it is recommended you review <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/sms-input-data-input-manifest.html">Use an Input Manifest File </a> in the Amazon SageMaker Developer Guide to learn how to create an input manifest file.</p>
    pub fn manifest_s3_uri(mut self, input: impl Into<std::string::String>) -> Self {
        self.manifest_s3_uri = Some(input.into());
        self
    }
    /// <p>The Amazon S3 location of the manifest file that describes the input data objects. </p>
    /// <p>The input manifest file referenced in <code>ManifestS3Uri</code> must contain one of the following keys: <code>source-ref</code> or <code>source</code>. The value of the keys are interpreted as follows:</p>
    /// <ul>
    /// <li> <p> <code>source-ref</code>: The source of the object is the Amazon S3 object specified in the value. Use this value when the object is a binary object, such as an image.</p> </li>
    /// <li> <p> <code>source</code>: The source of the object is the value. Use this value when the object is a text value.</p> </li>
    /// </ul>
    /// <p>If you are a new user of Ground Truth, it is recommended you review <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/sms-input-data-input-manifest.html">Use an Input Manifest File </a> in the Amazon SageMaker Developer Guide to learn how to create an input manifest file.</p>
    pub fn set_manifest_s3_uri(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.manifest_s3_uri = input;
        self
    }
    /// Consumes the builder and constructs a [`LabelingJobS3DataSource`](crate::types::LabelingJobS3DataSource).
    pub fn build(self) -> crate::types::LabelingJobS3DataSource {
        crate::types::LabelingJobS3DataSource {
            manifest_s3_uri: self.manifest_s3_uri,
        }
    }
}
