// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The output object for a monitoring job.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct MonitoringOutput {
    /// <p>The Amazon S3 storage location where the results of a monitoring job are saved.</p>
    pub s3_output: ::std::option::Option<crate::types::MonitoringS3Output>,
}
impl MonitoringOutput {
    /// <p>The Amazon S3 storage location where the results of a monitoring job are saved.</p>
    pub fn s3_output(&self) -> ::std::option::Option<&crate::types::MonitoringS3Output> {
        self.s3_output.as_ref()
    }
}
impl MonitoringOutput {
    /// Creates a new builder-style object to manufacture [`MonitoringOutput`](crate::types::MonitoringOutput).
    pub fn builder() -> crate::types::builders::MonitoringOutputBuilder {
        crate::types::builders::MonitoringOutputBuilder::default()
    }
}

/// A builder for [`MonitoringOutput`](crate::types::MonitoringOutput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct MonitoringOutputBuilder {
    pub(crate) s3_output: ::std::option::Option<crate::types::MonitoringS3Output>,
}
impl MonitoringOutputBuilder {
    /// <p>The Amazon S3 storage location where the results of a monitoring job are saved.</p>
    /// This field is required.
    pub fn s3_output(mut self, input: crate::types::MonitoringS3Output) -> Self {
        self.s3_output = ::std::option::Option::Some(input);
        self
    }
    /// <p>The Amazon S3 storage location where the results of a monitoring job are saved.</p>
    pub fn set_s3_output(mut self, input: ::std::option::Option<crate::types::MonitoringS3Output>) -> Self {
        self.s3_output = input;
        self
    }
    /// <p>The Amazon S3 storage location where the results of a monitoring job are saved.</p>
    pub fn get_s3_output(&self) -> &::std::option::Option<crate::types::MonitoringS3Output> {
        &self.s3_output
    }
    /// Consumes the builder and constructs a [`MonitoringOutput`](crate::types::MonitoringOutput).
    pub fn build(self) -> crate::types::MonitoringOutput {
        crate::types::MonitoringOutput { s3_output: self.s3_output }
    }
}
