// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The specification of a Jupyter kernel.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct KernelSpec {
    /// <p>The name of the Jupyter kernel in the image. This value is case sensitive.</p>
    pub name: ::std::option::Option<::std::string::String>,
    /// <p>The display name of the kernel.</p>
    pub display_name: ::std::option::Option<::std::string::String>,
}
impl KernelSpec {
    /// <p>The name of the Jupyter kernel in the image. This value is case sensitive.</p>
    pub fn name(&self) -> ::std::option::Option<&str> {
        self.name.as_deref()
    }
    /// <p>The display name of the kernel.</p>
    pub fn display_name(&self) -> ::std::option::Option<&str> {
        self.display_name.as_deref()
    }
}
impl KernelSpec {
    /// Creates a new builder-style object to manufacture [`KernelSpec`](crate::types::KernelSpec).
    pub fn builder() -> crate::types::builders::KernelSpecBuilder {
        crate::types::builders::KernelSpecBuilder::default()
    }
}

/// A builder for [`KernelSpec`](crate::types::KernelSpec).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct KernelSpecBuilder {
    pub(crate) name: ::std::option::Option<::std::string::String>,
    pub(crate) display_name: ::std::option::Option<::std::string::String>,
}
impl KernelSpecBuilder {
    /// <p>The name of the Jupyter kernel in the image. This value is case sensitive.</p>
    /// This field is required.
    pub fn name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the Jupyter kernel in the image. This value is case sensitive.</p>
    pub fn set_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>The name of the Jupyter kernel in the image. This value is case sensitive.</p>
    pub fn get_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.name
    }
    /// <p>The display name of the kernel.</p>
    pub fn display_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.display_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The display name of the kernel.</p>
    pub fn set_display_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.display_name = input;
        self
    }
    /// <p>The display name of the kernel.</p>
    pub fn get_display_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.display_name
    }
    /// Consumes the builder and constructs a [`KernelSpec`](crate::types::KernelSpec).
    pub fn build(self) -> crate::types::KernelSpec {
        crate::types::KernelSpec {
            name: self.name,
            display_name: self.display_name,
        }
    }
}
