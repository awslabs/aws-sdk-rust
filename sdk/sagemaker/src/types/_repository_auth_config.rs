// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Specifies an authentication configuration for the private docker registry where your model image is hosted. Specify a value for this property only if you specified <code>Vpc</code> as the value for the <code>RepositoryAccessMode</code> field of the <code>ImageConfig</code> object that you passed to a call to <code>CreateModel</code> and the private Docker registry where the model image is hosted requires authentication.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct RepositoryAuthConfig {
    /// <p>The Amazon Resource Name (ARN) of an Amazon Web Services Lambda function that provides credentials to authenticate to the private Docker registry where your model image is hosted. For information about how to create an Amazon Web Services Lambda function, see <a href="https://docs.aws.amazon.com/lambda/latest/dg/getting-started-create-function.html">Create a Lambda function with the console</a> in the <i>Amazon Web Services Lambda Developer Guide</i>.</p>
    #[doc(hidden)]
    pub repository_credentials_provider_arn: std::option::Option<std::string::String>,
}
impl RepositoryAuthConfig {
    /// <p>The Amazon Resource Name (ARN) of an Amazon Web Services Lambda function that provides credentials to authenticate to the private Docker registry where your model image is hosted. For information about how to create an Amazon Web Services Lambda function, see <a href="https://docs.aws.amazon.com/lambda/latest/dg/getting-started-create-function.html">Create a Lambda function with the console</a> in the <i>Amazon Web Services Lambda Developer Guide</i>.</p>
    pub fn repository_credentials_provider_arn(&self) -> std::option::Option<&str> {
        self.repository_credentials_provider_arn.as_deref()
    }
}
impl RepositoryAuthConfig {
    /// Creates a new builder-style object to manufacture [`RepositoryAuthConfig`](crate::types::RepositoryAuthConfig).
    pub fn builder() -> crate::types::builders::RepositoryAuthConfigBuilder {
        crate::types::builders::RepositoryAuthConfigBuilder::default()
    }
}

/// A builder for [`RepositoryAuthConfig`](crate::types::RepositoryAuthConfig).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct RepositoryAuthConfigBuilder {
    pub(crate) repository_credentials_provider_arn: std::option::Option<std::string::String>,
}
impl RepositoryAuthConfigBuilder {
    /// <p>The Amazon Resource Name (ARN) of an Amazon Web Services Lambda function that provides credentials to authenticate to the private Docker registry where your model image is hosted. For information about how to create an Amazon Web Services Lambda function, see <a href="https://docs.aws.amazon.com/lambda/latest/dg/getting-started-create-function.html">Create a Lambda function with the console</a> in the <i>Amazon Web Services Lambda Developer Guide</i>.</p>
    pub fn repository_credentials_provider_arn(
        mut self,
        input: impl Into<std::string::String>,
    ) -> Self {
        self.repository_credentials_provider_arn = Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of an Amazon Web Services Lambda function that provides credentials to authenticate to the private Docker registry where your model image is hosted. For information about how to create an Amazon Web Services Lambda function, see <a href="https://docs.aws.amazon.com/lambda/latest/dg/getting-started-create-function.html">Create a Lambda function with the console</a> in the <i>Amazon Web Services Lambda Developer Guide</i>.</p>
    pub fn set_repository_credentials_provider_arn(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.repository_credentials_provider_arn = input;
        self
    }
    /// Consumes the builder and constructs a [`RepositoryAuthConfig`](crate::types::RepositoryAuthConfig).
    pub fn build(self) -> crate::types::RepositoryAuthConfig {
        crate::types::RepositoryAuthConfig {
            repository_credentials_provider_arn: self.repository_credentials_provider_arn,
        }
    }
}
