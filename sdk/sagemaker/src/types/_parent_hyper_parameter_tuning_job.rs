// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A previously completed or stopped hyperparameter tuning job to be used as a starting point for a new hyperparameter tuning job.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ParentHyperParameterTuningJob {
    /// <p>The name of the hyperparameter tuning job to be used as a starting point for a new hyperparameter tuning job.</p>
    #[doc(hidden)]
    pub hyper_parameter_tuning_job_name: std::option::Option<std::string::String>,
}
impl ParentHyperParameterTuningJob {
    /// <p>The name of the hyperparameter tuning job to be used as a starting point for a new hyperparameter tuning job.</p>
    pub fn hyper_parameter_tuning_job_name(&self) -> std::option::Option<&str> {
        self.hyper_parameter_tuning_job_name.as_deref()
    }
}
impl ParentHyperParameterTuningJob {
    /// Creates a new builder-style object to manufacture [`ParentHyperParameterTuningJob`](crate::types::ParentHyperParameterTuningJob).
    pub fn builder() -> crate::types::builders::ParentHyperParameterTuningJobBuilder {
        crate::types::builders::ParentHyperParameterTuningJobBuilder::default()
    }
}

/// A builder for [`ParentHyperParameterTuningJob`](crate::types::ParentHyperParameterTuningJob).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ParentHyperParameterTuningJobBuilder {
    pub(crate) hyper_parameter_tuning_job_name: std::option::Option<std::string::String>,
}
impl ParentHyperParameterTuningJobBuilder {
    /// <p>The name of the hyperparameter tuning job to be used as a starting point for a new hyperparameter tuning job.</p>
    pub fn hyper_parameter_tuning_job_name(
        mut self,
        input: impl Into<std::string::String>,
    ) -> Self {
        self.hyper_parameter_tuning_job_name = Some(input.into());
        self
    }
    /// <p>The name of the hyperparameter tuning job to be used as a starting point for a new hyperparameter tuning job.</p>
    pub fn set_hyper_parameter_tuning_job_name(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.hyper_parameter_tuning_job_name = input;
        self
    }
    /// Consumes the builder and constructs a [`ParentHyperParameterTuningJob`](crate::types::ParentHyperParameterTuningJob).
    pub fn build(self) -> crate::types::ParentHyperParameterTuningJob {
        crate::types::ParentHyperParameterTuningJob {
            hyper_parameter_tuning_job_name: self.hyper_parameter_tuning_job_name,
        }
    }
}
