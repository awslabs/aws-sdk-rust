// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Lists a summary of the properties of an artifact. An artifact represents a URI addressable object or data. Some examples are a dataset and a model.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ArtifactSummary {
    /// <p>The Amazon Resource Name (ARN) of the artifact.</p>
    #[doc(hidden)]
    pub artifact_arn: std::option::Option<std::string::String>,
    /// <p>The name of the artifact.</p>
    #[doc(hidden)]
    pub artifact_name: std::option::Option<std::string::String>,
    /// <p>The source of the artifact.</p>
    #[doc(hidden)]
    pub source: std::option::Option<crate::types::ArtifactSource>,
    /// <p>The type of the artifact.</p>
    #[doc(hidden)]
    pub artifact_type: std::option::Option<std::string::String>,
    /// <p>When the artifact was created.</p>
    #[doc(hidden)]
    pub creation_time: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>When the artifact was last modified.</p>
    #[doc(hidden)]
    pub last_modified_time: std::option::Option<aws_smithy_types::DateTime>,
}
impl ArtifactSummary {
    /// <p>The Amazon Resource Name (ARN) of the artifact.</p>
    pub fn artifact_arn(&self) -> std::option::Option<&str> {
        self.artifact_arn.as_deref()
    }
    /// <p>The name of the artifact.</p>
    pub fn artifact_name(&self) -> std::option::Option<&str> {
        self.artifact_name.as_deref()
    }
    /// <p>The source of the artifact.</p>
    pub fn source(&self) -> std::option::Option<&crate::types::ArtifactSource> {
        self.source.as_ref()
    }
    /// <p>The type of the artifact.</p>
    pub fn artifact_type(&self) -> std::option::Option<&str> {
        self.artifact_type.as_deref()
    }
    /// <p>When the artifact was created.</p>
    pub fn creation_time(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.creation_time.as_ref()
    }
    /// <p>When the artifact was last modified.</p>
    pub fn last_modified_time(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.last_modified_time.as_ref()
    }
}
impl ArtifactSummary {
    /// Creates a new builder-style object to manufacture [`ArtifactSummary`](crate::types::ArtifactSummary).
    pub fn builder() -> crate::types::builders::ArtifactSummaryBuilder {
        crate::types::builders::ArtifactSummaryBuilder::default()
    }
}

/// A builder for [`ArtifactSummary`](crate::types::ArtifactSummary).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ArtifactSummaryBuilder {
    pub(crate) artifact_arn: std::option::Option<std::string::String>,
    pub(crate) artifact_name: std::option::Option<std::string::String>,
    pub(crate) source: std::option::Option<crate::types::ArtifactSource>,
    pub(crate) artifact_type: std::option::Option<std::string::String>,
    pub(crate) creation_time: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) last_modified_time: std::option::Option<aws_smithy_types::DateTime>,
}
impl ArtifactSummaryBuilder {
    /// <p>The Amazon Resource Name (ARN) of the artifact.</p>
    pub fn artifact_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.artifact_arn = Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the artifact.</p>
    pub fn set_artifact_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.artifact_arn = input;
        self
    }
    /// <p>The name of the artifact.</p>
    pub fn artifact_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.artifact_name = Some(input.into());
        self
    }
    /// <p>The name of the artifact.</p>
    pub fn set_artifact_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.artifact_name = input;
        self
    }
    /// <p>The source of the artifact.</p>
    pub fn source(mut self, input: crate::types::ArtifactSource) -> Self {
        self.source = Some(input);
        self
    }
    /// <p>The source of the artifact.</p>
    pub fn set_source(mut self, input: std::option::Option<crate::types::ArtifactSource>) -> Self {
        self.source = input;
        self
    }
    /// <p>The type of the artifact.</p>
    pub fn artifact_type(mut self, input: impl Into<std::string::String>) -> Self {
        self.artifact_type = Some(input.into());
        self
    }
    /// <p>The type of the artifact.</p>
    pub fn set_artifact_type(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.artifact_type = input;
        self
    }
    /// <p>When the artifact was created.</p>
    pub fn creation_time(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.creation_time = Some(input);
        self
    }
    /// <p>When the artifact was created.</p>
    pub fn set_creation_time(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.creation_time = input;
        self
    }
    /// <p>When the artifact was last modified.</p>
    pub fn last_modified_time(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.last_modified_time = Some(input);
        self
    }
    /// <p>When the artifact was last modified.</p>
    pub fn set_last_modified_time(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.last_modified_time = input;
        self
    }
    /// Consumes the builder and constructs a [`ArtifactSummary`](crate::types::ArtifactSummary).
    pub fn build(self) -> crate::types::ArtifactSummary {
        crate::types::ArtifactSummary {
            artifact_arn: self.artifact_arn,
            artifact_name: self.artifact_name,
            source: self.source,
            artifact_type: self.artifact_type,
            creation_time: self.creation_time,
            last_modified_time: self.last_modified_time,
        }
    }
}
