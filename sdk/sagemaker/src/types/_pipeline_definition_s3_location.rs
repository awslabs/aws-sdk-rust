// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The location of the pipeline definition stored in Amazon S3.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct PipelineDefinitionS3Location {
    /// <p>Name of the S3 bucket.</p>
    #[doc(hidden)]
    pub bucket: std::option::Option<std::string::String>,
    /// <p>The object key (or key name) uniquely identifies the object in an S3 bucket. </p>
    #[doc(hidden)]
    pub object_key: std::option::Option<std::string::String>,
    /// <p>Version Id of the pipeline definition file. If not specified, Amazon SageMaker will retrieve the latest version.</p>
    #[doc(hidden)]
    pub version_id: std::option::Option<std::string::String>,
}
impl PipelineDefinitionS3Location {
    /// <p>Name of the S3 bucket.</p>
    pub fn bucket(&self) -> std::option::Option<&str> {
        self.bucket.as_deref()
    }
    /// <p>The object key (or key name) uniquely identifies the object in an S3 bucket. </p>
    pub fn object_key(&self) -> std::option::Option<&str> {
        self.object_key.as_deref()
    }
    /// <p>Version Id of the pipeline definition file. If not specified, Amazon SageMaker will retrieve the latest version.</p>
    pub fn version_id(&self) -> std::option::Option<&str> {
        self.version_id.as_deref()
    }
}
impl PipelineDefinitionS3Location {
    /// Creates a new builder-style object to manufacture [`PipelineDefinitionS3Location`](crate::types::PipelineDefinitionS3Location).
    pub fn builder() -> crate::types::builders::PipelineDefinitionS3LocationBuilder {
        crate::types::builders::PipelineDefinitionS3LocationBuilder::default()
    }
}

/// A builder for [`PipelineDefinitionS3Location`](crate::types::PipelineDefinitionS3Location).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct PipelineDefinitionS3LocationBuilder {
    pub(crate) bucket: std::option::Option<std::string::String>,
    pub(crate) object_key: std::option::Option<std::string::String>,
    pub(crate) version_id: std::option::Option<std::string::String>,
}
impl PipelineDefinitionS3LocationBuilder {
    /// <p>Name of the S3 bucket.</p>
    pub fn bucket(mut self, input: impl Into<std::string::String>) -> Self {
        self.bucket = Some(input.into());
        self
    }
    /// <p>Name of the S3 bucket.</p>
    pub fn set_bucket(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.bucket = input;
        self
    }
    /// <p>The object key (or key name) uniquely identifies the object in an S3 bucket. </p>
    pub fn object_key(mut self, input: impl Into<std::string::String>) -> Self {
        self.object_key = Some(input.into());
        self
    }
    /// <p>The object key (or key name) uniquely identifies the object in an S3 bucket. </p>
    pub fn set_object_key(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.object_key = input;
        self
    }
    /// <p>Version Id of the pipeline definition file. If not specified, Amazon SageMaker will retrieve the latest version.</p>
    pub fn version_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.version_id = Some(input.into());
        self
    }
    /// <p>Version Id of the pipeline definition file. If not specified, Amazon SageMaker will retrieve the latest version.</p>
    pub fn set_version_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.version_id = input;
        self
    }
    /// Consumes the builder and constructs a [`PipelineDefinitionS3Location`](crate::types::PipelineDefinitionS3Location).
    pub fn build(self) -> crate::types::PipelineDefinitionS3Location {
        crate::types::PipelineDefinitionS3Location {
            bucket: self.bucket,
            object_key: self.object_key,
            version_id: self.version_id,
        }
    }
}
