// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains information summarizing an edge deployment plan.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct EdgeDeploymentPlanSummary {
    /// <p>The ARN of the edge deployment plan.</p>
    pub edge_deployment_plan_arn: ::std::option::Option<::std::string::String>,
    /// <p>The name of the edge deployment plan.</p>
    pub edge_deployment_plan_name: ::std::option::Option<::std::string::String>,
    /// <p>The name of the device fleet used for the deployment. </p>
    pub device_fleet_name: ::std::option::Option<::std::string::String>,
    /// <p>The number of edge devices with the successful deployment.</p>
    pub edge_deployment_success: ::std::option::Option<i32>,
    /// <p>The number of edge devices yet to pick up the deployment, or in progress.</p>
    pub edge_deployment_pending: ::std::option::Option<i32>,
    /// <p>The number of edge devices that failed the deployment.</p>
    pub edge_deployment_failed: ::std::option::Option<i32>,
    /// <p>The time when the edge deployment plan was created.</p>
    pub creation_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>The time when the edge deployment plan was last updated.</p>
    pub last_modified_time: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl EdgeDeploymentPlanSummary {
    /// <p>The ARN of the edge deployment plan.</p>
    pub fn edge_deployment_plan_arn(&self) -> ::std::option::Option<&str> {
        self.edge_deployment_plan_arn.as_deref()
    }
    /// <p>The name of the edge deployment plan.</p>
    pub fn edge_deployment_plan_name(&self) -> ::std::option::Option<&str> {
        self.edge_deployment_plan_name.as_deref()
    }
    /// <p>The name of the device fleet used for the deployment. </p>
    pub fn device_fleet_name(&self) -> ::std::option::Option<&str> {
        self.device_fleet_name.as_deref()
    }
    /// <p>The number of edge devices with the successful deployment.</p>
    pub fn edge_deployment_success(&self) -> ::std::option::Option<i32> {
        self.edge_deployment_success
    }
    /// <p>The number of edge devices yet to pick up the deployment, or in progress.</p>
    pub fn edge_deployment_pending(&self) -> ::std::option::Option<i32> {
        self.edge_deployment_pending
    }
    /// <p>The number of edge devices that failed the deployment.</p>
    pub fn edge_deployment_failed(&self) -> ::std::option::Option<i32> {
        self.edge_deployment_failed
    }
    /// <p>The time when the edge deployment plan was created.</p>
    pub fn creation_time(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.creation_time.as_ref()
    }
    /// <p>The time when the edge deployment plan was last updated.</p>
    pub fn last_modified_time(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.last_modified_time.as_ref()
    }
}
impl EdgeDeploymentPlanSummary {
    /// Creates a new builder-style object to manufacture [`EdgeDeploymentPlanSummary`](crate::types::EdgeDeploymentPlanSummary).
    pub fn builder() -> crate::types::builders::EdgeDeploymentPlanSummaryBuilder {
        crate::types::builders::EdgeDeploymentPlanSummaryBuilder::default()
    }
}

/// A builder for [`EdgeDeploymentPlanSummary`](crate::types::EdgeDeploymentPlanSummary).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct EdgeDeploymentPlanSummaryBuilder {
    pub(crate) edge_deployment_plan_arn: ::std::option::Option<::std::string::String>,
    pub(crate) edge_deployment_plan_name: ::std::option::Option<::std::string::String>,
    pub(crate) device_fleet_name: ::std::option::Option<::std::string::String>,
    pub(crate) edge_deployment_success: ::std::option::Option<i32>,
    pub(crate) edge_deployment_pending: ::std::option::Option<i32>,
    pub(crate) edge_deployment_failed: ::std::option::Option<i32>,
    pub(crate) creation_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) last_modified_time: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl EdgeDeploymentPlanSummaryBuilder {
    /// <p>The ARN of the edge deployment plan.</p>
    /// This field is required.
    pub fn edge_deployment_plan_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.edge_deployment_plan_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ARN of the edge deployment plan.</p>
    pub fn set_edge_deployment_plan_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.edge_deployment_plan_arn = input;
        self
    }
    /// <p>The ARN of the edge deployment plan.</p>
    pub fn get_edge_deployment_plan_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.edge_deployment_plan_arn
    }
    /// <p>The name of the edge deployment plan.</p>
    /// This field is required.
    pub fn edge_deployment_plan_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.edge_deployment_plan_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the edge deployment plan.</p>
    pub fn set_edge_deployment_plan_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.edge_deployment_plan_name = input;
        self
    }
    /// <p>The name of the edge deployment plan.</p>
    pub fn get_edge_deployment_plan_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.edge_deployment_plan_name
    }
    /// <p>The name of the device fleet used for the deployment. </p>
    /// This field is required.
    pub fn device_fleet_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.device_fleet_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the device fleet used for the deployment. </p>
    pub fn set_device_fleet_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.device_fleet_name = input;
        self
    }
    /// <p>The name of the device fleet used for the deployment. </p>
    pub fn get_device_fleet_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.device_fleet_name
    }
    /// <p>The number of edge devices with the successful deployment.</p>
    /// This field is required.
    pub fn edge_deployment_success(mut self, input: i32) -> Self {
        self.edge_deployment_success = ::std::option::Option::Some(input);
        self
    }
    /// <p>The number of edge devices with the successful deployment.</p>
    pub fn set_edge_deployment_success(mut self, input: ::std::option::Option<i32>) -> Self {
        self.edge_deployment_success = input;
        self
    }
    /// <p>The number of edge devices with the successful deployment.</p>
    pub fn get_edge_deployment_success(&self) -> &::std::option::Option<i32> {
        &self.edge_deployment_success
    }
    /// <p>The number of edge devices yet to pick up the deployment, or in progress.</p>
    /// This field is required.
    pub fn edge_deployment_pending(mut self, input: i32) -> Self {
        self.edge_deployment_pending = ::std::option::Option::Some(input);
        self
    }
    /// <p>The number of edge devices yet to pick up the deployment, or in progress.</p>
    pub fn set_edge_deployment_pending(mut self, input: ::std::option::Option<i32>) -> Self {
        self.edge_deployment_pending = input;
        self
    }
    /// <p>The number of edge devices yet to pick up the deployment, or in progress.</p>
    pub fn get_edge_deployment_pending(&self) -> &::std::option::Option<i32> {
        &self.edge_deployment_pending
    }
    /// <p>The number of edge devices that failed the deployment.</p>
    /// This field is required.
    pub fn edge_deployment_failed(mut self, input: i32) -> Self {
        self.edge_deployment_failed = ::std::option::Option::Some(input);
        self
    }
    /// <p>The number of edge devices that failed the deployment.</p>
    pub fn set_edge_deployment_failed(mut self, input: ::std::option::Option<i32>) -> Self {
        self.edge_deployment_failed = input;
        self
    }
    /// <p>The number of edge devices that failed the deployment.</p>
    pub fn get_edge_deployment_failed(&self) -> &::std::option::Option<i32> {
        &self.edge_deployment_failed
    }
    /// <p>The time when the edge deployment plan was created.</p>
    pub fn creation_time(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.creation_time = ::std::option::Option::Some(input);
        self
    }
    /// <p>The time when the edge deployment plan was created.</p>
    pub fn set_creation_time(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.creation_time = input;
        self
    }
    /// <p>The time when the edge deployment plan was created.</p>
    pub fn get_creation_time(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.creation_time
    }
    /// <p>The time when the edge deployment plan was last updated.</p>
    pub fn last_modified_time(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.last_modified_time = ::std::option::Option::Some(input);
        self
    }
    /// <p>The time when the edge deployment plan was last updated.</p>
    pub fn set_last_modified_time(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.last_modified_time = input;
        self
    }
    /// <p>The time when the edge deployment plan was last updated.</p>
    pub fn get_last_modified_time(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.last_modified_time
    }
    /// Consumes the builder and constructs a [`EdgeDeploymentPlanSummary`](crate::types::EdgeDeploymentPlanSummary).
    pub fn build(self) -> crate::types::EdgeDeploymentPlanSummary {
        crate::types::EdgeDeploymentPlanSummary {
            edge_deployment_plan_arn: self.edge_deployment_plan_arn,
            edge_deployment_plan_name: self.edge_deployment_plan_name,
            device_fleet_name: self.device_fleet_name,
            edge_deployment_success: self.edge_deployment_success,
            edge_deployment_pending: self.edge_deployment_pending,
            edge_deployment_failed: self.edge_deployment_failed,
            creation_time: self.creation_time,
            last_modified_time: self.last_modified_time,
        }
    }
}
