// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Specifies the validation and image scan statuses of the algorithm.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AlgorithmStatusDetails {
    /// <p>The status of algorithm validation.</p>
    #[doc(hidden)]
    pub validation_statuses: std::option::Option<std::vec::Vec<crate::types::AlgorithmStatusItem>>,
    /// <p>The status of the scan of the algorithm's Docker image container.</p>
    #[doc(hidden)]
    pub image_scan_statuses: std::option::Option<std::vec::Vec<crate::types::AlgorithmStatusItem>>,
}
impl AlgorithmStatusDetails {
    /// <p>The status of algorithm validation.</p>
    pub fn validation_statuses(&self) -> std::option::Option<&[crate::types::AlgorithmStatusItem]> {
        self.validation_statuses.as_deref()
    }
    /// <p>The status of the scan of the algorithm's Docker image container.</p>
    pub fn image_scan_statuses(&self) -> std::option::Option<&[crate::types::AlgorithmStatusItem]> {
        self.image_scan_statuses.as_deref()
    }
}
impl AlgorithmStatusDetails {
    /// Creates a new builder-style object to manufacture [`AlgorithmStatusDetails`](crate::types::AlgorithmStatusDetails).
    pub fn builder() -> crate::types::builders::AlgorithmStatusDetailsBuilder {
        crate::types::builders::AlgorithmStatusDetailsBuilder::default()
    }
}

/// A builder for [`AlgorithmStatusDetails`](crate::types::AlgorithmStatusDetails).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AlgorithmStatusDetailsBuilder {
    pub(crate) validation_statuses:
        std::option::Option<std::vec::Vec<crate::types::AlgorithmStatusItem>>,
    pub(crate) image_scan_statuses:
        std::option::Option<std::vec::Vec<crate::types::AlgorithmStatusItem>>,
}
impl AlgorithmStatusDetailsBuilder {
    /// Appends an item to `validation_statuses`.
    ///
    /// To override the contents of this collection use [`set_validation_statuses`](Self::set_validation_statuses).
    ///
    /// <p>The status of algorithm validation.</p>
    pub fn validation_statuses(mut self, input: crate::types::AlgorithmStatusItem) -> Self {
        let mut v = self.validation_statuses.unwrap_or_default();
        v.push(input);
        self.validation_statuses = Some(v);
        self
    }
    /// <p>The status of algorithm validation.</p>
    pub fn set_validation_statuses(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::AlgorithmStatusItem>>,
    ) -> Self {
        self.validation_statuses = input;
        self
    }
    /// Appends an item to `image_scan_statuses`.
    ///
    /// To override the contents of this collection use [`set_image_scan_statuses`](Self::set_image_scan_statuses).
    ///
    /// <p>The status of the scan of the algorithm's Docker image container.</p>
    pub fn image_scan_statuses(mut self, input: crate::types::AlgorithmStatusItem) -> Self {
        let mut v = self.image_scan_statuses.unwrap_or_default();
        v.push(input);
        self.image_scan_statuses = Some(v);
        self
    }
    /// <p>The status of the scan of the algorithm's Docker image container.</p>
    pub fn set_image_scan_statuses(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::AlgorithmStatusItem>>,
    ) -> Self {
        self.image_scan_statuses = input;
        self
    }
    /// Consumes the builder and constructs a [`AlgorithmStatusDetails`](crate::types::AlgorithmStatusDetails).
    pub fn build(self) -> crate::types::AlgorithmStatusDetails {
        crate::types::AlgorithmStatusDetails {
            validation_statuses: self.validation_statuses,
            image_scan_statuses: self.image_scan_statuses,
        }
    }
}
