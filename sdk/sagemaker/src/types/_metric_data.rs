// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The name, value, and date and time of a metric that was emitted to Amazon CloudWatch.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct MetricData {
    /// <p>The name of the metric.</p>
    #[doc(hidden)]
    pub metric_name: std::option::Option<std::string::String>,
    /// <p>The value of the metric.</p>
    #[doc(hidden)]
    pub value: f32,
    /// <p>The date and time that the algorithm emitted the metric.</p>
    #[doc(hidden)]
    pub timestamp: std::option::Option<aws_smithy_types::DateTime>,
}
impl MetricData {
    /// <p>The name of the metric.</p>
    pub fn metric_name(&self) -> std::option::Option<&str> {
        self.metric_name.as_deref()
    }
    /// <p>The value of the metric.</p>
    pub fn value(&self) -> f32 {
        self.value
    }
    /// <p>The date and time that the algorithm emitted the metric.</p>
    pub fn timestamp(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.timestamp.as_ref()
    }
}
impl MetricData {
    /// Creates a new builder-style object to manufacture [`MetricData`](crate::types::MetricData).
    pub fn builder() -> crate::types::builders::MetricDataBuilder {
        crate::types::builders::MetricDataBuilder::default()
    }
}

/// A builder for [`MetricData`](crate::types::MetricData).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct MetricDataBuilder {
    pub(crate) metric_name: std::option::Option<std::string::String>,
    pub(crate) value: std::option::Option<f32>,
    pub(crate) timestamp: std::option::Option<aws_smithy_types::DateTime>,
}
impl MetricDataBuilder {
    /// <p>The name of the metric.</p>
    pub fn metric_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.metric_name = Some(input.into());
        self
    }
    /// <p>The name of the metric.</p>
    pub fn set_metric_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.metric_name = input;
        self
    }
    /// <p>The value of the metric.</p>
    pub fn value(mut self, input: f32) -> Self {
        self.value = Some(input);
        self
    }
    /// <p>The value of the metric.</p>
    pub fn set_value(mut self, input: std::option::Option<f32>) -> Self {
        self.value = input;
        self
    }
    /// <p>The date and time that the algorithm emitted the metric.</p>
    pub fn timestamp(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.timestamp = Some(input);
        self
    }
    /// <p>The date and time that the algorithm emitted the metric.</p>
    pub fn set_timestamp(mut self, input: std::option::Option<aws_smithy_types::DateTime>) -> Self {
        self.timestamp = input;
        self
    }
    /// Consumes the builder and constructs a [`MetricData`](crate::types::MetricData).
    pub fn build(self) -> crate::types::MetricData {
        crate::types::MetricData {
            metric_name: self.metric_name,
            value: self.value.unwrap_or_default(),
            timestamp: self.timestamp,
        }
    }
}
