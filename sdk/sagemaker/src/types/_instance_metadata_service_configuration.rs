// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information on the IMDS configuration of the notebook instance</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct InstanceMetadataServiceConfiguration {
    /// <p>Indicates the minimum IMDS version that the notebook instance supports. When passed as part of <code>CreateNotebookInstance</code>, if no value is selected, then it defaults to IMDSv1. This means that both IMDSv1 and IMDSv2 are supported. If passed as part of <code>UpdateNotebookInstance</code>, there is no default.</p>
    pub minimum_instance_metadata_service_version: ::std::option::Option<::std::string::String>,
}
impl InstanceMetadataServiceConfiguration {
    /// <p>Indicates the minimum IMDS version that the notebook instance supports. When passed as part of <code>CreateNotebookInstance</code>, if no value is selected, then it defaults to IMDSv1. This means that both IMDSv1 and IMDSv2 are supported. If passed as part of <code>UpdateNotebookInstance</code>, there is no default.</p>
    pub fn minimum_instance_metadata_service_version(&self) -> ::std::option::Option<&str> {
        self.minimum_instance_metadata_service_version.as_deref()
    }
}
impl InstanceMetadataServiceConfiguration {
    /// Creates a new builder-style object to manufacture [`InstanceMetadataServiceConfiguration`](crate::types::InstanceMetadataServiceConfiguration).
    pub fn builder() -> crate::types::builders::InstanceMetadataServiceConfigurationBuilder {
        crate::types::builders::InstanceMetadataServiceConfigurationBuilder::default()
    }
}

/// A builder for [`InstanceMetadataServiceConfiguration`](crate::types::InstanceMetadataServiceConfiguration).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct InstanceMetadataServiceConfigurationBuilder {
    pub(crate) minimum_instance_metadata_service_version: ::std::option::Option<::std::string::String>,
}
impl InstanceMetadataServiceConfigurationBuilder {
    /// <p>Indicates the minimum IMDS version that the notebook instance supports. When passed as part of <code>CreateNotebookInstance</code>, if no value is selected, then it defaults to IMDSv1. This means that both IMDSv1 and IMDSv2 are supported. If passed as part of <code>UpdateNotebookInstance</code>, there is no default.</p>
    /// This field is required.
    pub fn minimum_instance_metadata_service_version(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.minimum_instance_metadata_service_version = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Indicates the minimum IMDS version that the notebook instance supports. When passed as part of <code>CreateNotebookInstance</code>, if no value is selected, then it defaults to IMDSv1. This means that both IMDSv1 and IMDSv2 are supported. If passed as part of <code>UpdateNotebookInstance</code>, there is no default.</p>
    pub fn set_minimum_instance_metadata_service_version(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.minimum_instance_metadata_service_version = input;
        self
    }
    /// <p>Indicates the minimum IMDS version that the notebook instance supports. When passed as part of <code>CreateNotebookInstance</code>, if no value is selected, then it defaults to IMDSv1. This means that both IMDSv1 and IMDSv2 are supported. If passed as part of <code>UpdateNotebookInstance</code>, there is no default.</p>
    pub fn get_minimum_instance_metadata_service_version(&self) -> &::std::option::Option<::std::string::String> {
        &self.minimum_instance_metadata_service_version
    }
    /// Consumes the builder and constructs a [`InstanceMetadataServiceConfiguration`](crate::types::InstanceMetadataServiceConfiguration).
    pub fn build(self) -> crate::types::InstanceMetadataServiceConfiguration {
        crate::types::InstanceMetadataServiceConfiguration {
            minimum_instance_metadata_service_version: self.minimum_instance_metadata_service_version,
        }
    }
}
