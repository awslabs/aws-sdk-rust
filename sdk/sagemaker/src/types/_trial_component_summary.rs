// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A summary of the properties of a trial component. To get all the properties, call the <code>DescribeTrialComponent</code> API and provide the <code>TrialComponentName</code>.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct TrialComponentSummary {
    /// <p>The name of the trial component.</p>
    #[doc(hidden)]
    pub trial_component_name: std::option::Option<std::string::String>,
    /// <p>The Amazon Resource Name (ARN) of the trial component.</p>
    #[doc(hidden)]
    pub trial_component_arn: std::option::Option<std::string::String>,
    /// <p>The name of the component as displayed. If <code>DisplayName</code> isn't specified, <code>TrialComponentName</code> is displayed.</p>
    #[doc(hidden)]
    pub display_name: std::option::Option<std::string::String>,
    /// <p>The Amazon Resource Name (ARN) and job type of the source of a trial component.</p>
    #[doc(hidden)]
    pub trial_component_source: std::option::Option<crate::types::TrialComponentSource>,
    /// <p>The status of the component. States include:</p>
    /// <ul>
    /// <li> <p>InProgress</p> </li>
    /// <li> <p>Completed</p> </li>
    /// <li> <p>Failed</p> </li>
    /// </ul>
    #[doc(hidden)]
    pub status: std::option::Option<crate::types::TrialComponentStatus>,
    /// <p>When the component started.</p>
    #[doc(hidden)]
    pub start_time: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>When the component ended.</p>
    #[doc(hidden)]
    pub end_time: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>When the component was created.</p>
    #[doc(hidden)]
    pub creation_time: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>Who created the trial component.</p>
    #[doc(hidden)]
    pub created_by: std::option::Option<crate::types::UserContext>,
    /// <p>When the component was last modified.</p>
    #[doc(hidden)]
    pub last_modified_time: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>Who last modified the component.</p>
    #[doc(hidden)]
    pub last_modified_by: std::option::Option<crate::types::UserContext>,
}
impl TrialComponentSummary {
    /// <p>The name of the trial component.</p>
    pub fn trial_component_name(&self) -> std::option::Option<&str> {
        self.trial_component_name.as_deref()
    }
    /// <p>The Amazon Resource Name (ARN) of the trial component.</p>
    pub fn trial_component_arn(&self) -> std::option::Option<&str> {
        self.trial_component_arn.as_deref()
    }
    /// <p>The name of the component as displayed. If <code>DisplayName</code> isn't specified, <code>TrialComponentName</code> is displayed.</p>
    pub fn display_name(&self) -> std::option::Option<&str> {
        self.display_name.as_deref()
    }
    /// <p>The Amazon Resource Name (ARN) and job type of the source of a trial component.</p>
    pub fn trial_component_source(
        &self,
    ) -> std::option::Option<&crate::types::TrialComponentSource> {
        self.trial_component_source.as_ref()
    }
    /// <p>The status of the component. States include:</p>
    /// <ul>
    /// <li> <p>InProgress</p> </li>
    /// <li> <p>Completed</p> </li>
    /// <li> <p>Failed</p> </li>
    /// </ul>
    pub fn status(&self) -> std::option::Option<&crate::types::TrialComponentStatus> {
        self.status.as_ref()
    }
    /// <p>When the component started.</p>
    pub fn start_time(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.start_time.as_ref()
    }
    /// <p>When the component ended.</p>
    pub fn end_time(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.end_time.as_ref()
    }
    /// <p>When the component was created.</p>
    pub fn creation_time(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.creation_time.as_ref()
    }
    /// <p>Who created the trial component.</p>
    pub fn created_by(&self) -> std::option::Option<&crate::types::UserContext> {
        self.created_by.as_ref()
    }
    /// <p>When the component was last modified.</p>
    pub fn last_modified_time(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.last_modified_time.as_ref()
    }
    /// <p>Who last modified the component.</p>
    pub fn last_modified_by(&self) -> std::option::Option<&crate::types::UserContext> {
        self.last_modified_by.as_ref()
    }
}
impl TrialComponentSummary {
    /// Creates a new builder-style object to manufacture [`TrialComponentSummary`](crate::types::TrialComponentSummary).
    pub fn builder() -> crate::types::builders::TrialComponentSummaryBuilder {
        crate::types::builders::TrialComponentSummaryBuilder::default()
    }
}

/// A builder for [`TrialComponentSummary`](crate::types::TrialComponentSummary).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct TrialComponentSummaryBuilder {
    pub(crate) trial_component_name: std::option::Option<std::string::String>,
    pub(crate) trial_component_arn: std::option::Option<std::string::String>,
    pub(crate) display_name: std::option::Option<std::string::String>,
    pub(crate) trial_component_source: std::option::Option<crate::types::TrialComponentSource>,
    pub(crate) status: std::option::Option<crate::types::TrialComponentStatus>,
    pub(crate) start_time: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) end_time: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) creation_time: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) created_by: std::option::Option<crate::types::UserContext>,
    pub(crate) last_modified_time: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) last_modified_by: std::option::Option<crate::types::UserContext>,
}
impl TrialComponentSummaryBuilder {
    /// <p>The name of the trial component.</p>
    pub fn trial_component_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.trial_component_name = Some(input.into());
        self
    }
    /// <p>The name of the trial component.</p>
    pub fn set_trial_component_name(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.trial_component_name = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the trial component.</p>
    pub fn trial_component_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.trial_component_arn = Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the trial component.</p>
    pub fn set_trial_component_arn(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.trial_component_arn = input;
        self
    }
    /// <p>The name of the component as displayed. If <code>DisplayName</code> isn't specified, <code>TrialComponentName</code> is displayed.</p>
    pub fn display_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.display_name = Some(input.into());
        self
    }
    /// <p>The name of the component as displayed. If <code>DisplayName</code> isn't specified, <code>TrialComponentName</code> is displayed.</p>
    pub fn set_display_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.display_name = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) and job type of the source of a trial component.</p>
    pub fn trial_component_source(mut self, input: crate::types::TrialComponentSource) -> Self {
        self.trial_component_source = Some(input);
        self
    }
    /// <p>The Amazon Resource Name (ARN) and job type of the source of a trial component.</p>
    pub fn set_trial_component_source(
        mut self,
        input: std::option::Option<crate::types::TrialComponentSource>,
    ) -> Self {
        self.trial_component_source = input;
        self
    }
    /// <p>The status of the component. States include:</p>
    /// <ul>
    /// <li> <p>InProgress</p> </li>
    /// <li> <p>Completed</p> </li>
    /// <li> <p>Failed</p> </li>
    /// </ul>
    pub fn status(mut self, input: crate::types::TrialComponentStatus) -> Self {
        self.status = Some(input);
        self
    }
    /// <p>The status of the component. States include:</p>
    /// <ul>
    /// <li> <p>InProgress</p> </li>
    /// <li> <p>Completed</p> </li>
    /// <li> <p>Failed</p> </li>
    /// </ul>
    pub fn set_status(
        mut self,
        input: std::option::Option<crate::types::TrialComponentStatus>,
    ) -> Self {
        self.status = input;
        self
    }
    /// <p>When the component started.</p>
    pub fn start_time(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.start_time = Some(input);
        self
    }
    /// <p>When the component started.</p>
    pub fn set_start_time(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.start_time = input;
        self
    }
    /// <p>When the component ended.</p>
    pub fn end_time(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.end_time = Some(input);
        self
    }
    /// <p>When the component ended.</p>
    pub fn set_end_time(mut self, input: std::option::Option<aws_smithy_types::DateTime>) -> Self {
        self.end_time = input;
        self
    }
    /// <p>When the component was created.</p>
    pub fn creation_time(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.creation_time = Some(input);
        self
    }
    /// <p>When the component was created.</p>
    pub fn set_creation_time(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.creation_time = input;
        self
    }
    /// <p>Who created the trial component.</p>
    pub fn created_by(mut self, input: crate::types::UserContext) -> Self {
        self.created_by = Some(input);
        self
    }
    /// <p>Who created the trial component.</p>
    pub fn set_created_by(mut self, input: std::option::Option<crate::types::UserContext>) -> Self {
        self.created_by = input;
        self
    }
    /// <p>When the component was last modified.</p>
    pub fn last_modified_time(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.last_modified_time = Some(input);
        self
    }
    /// <p>When the component was last modified.</p>
    pub fn set_last_modified_time(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.last_modified_time = input;
        self
    }
    /// <p>Who last modified the component.</p>
    pub fn last_modified_by(mut self, input: crate::types::UserContext) -> Self {
        self.last_modified_by = Some(input);
        self
    }
    /// <p>Who last modified the component.</p>
    pub fn set_last_modified_by(
        mut self,
        input: std::option::Option<crate::types::UserContext>,
    ) -> Self {
        self.last_modified_by = input;
        self
    }
    /// Consumes the builder and constructs a [`TrialComponentSummary`](crate::types::TrialComponentSummary).
    pub fn build(self) -> crate::types::TrialComponentSummary {
        crate::types::TrialComponentSummary {
            trial_component_name: self.trial_component_name,
            trial_component_arn: self.trial_component_arn,
            display_name: self.display_name,
            trial_component_source: self.trial_component_source,
            status: self.status,
            start_time: self.start_time,
            end_time: self.end_time,
            creation_time: self.creation_time,
            created_by: self.created_by,
            last_modified_time: self.last_modified_time,
            last_modified_by: self.last_modified_by,
        }
    }
}
