// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A summary of the properties of a trial. To get the complete set of properties, call the <code>DescribeTrial</code> API and provide the <code>TrialName</code>.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct TrialSummary {
    /// <p>The Amazon Resource Name (ARN) of the trial.</p>
    #[doc(hidden)]
    pub trial_arn: std::option::Option<std::string::String>,
    /// <p>The name of the trial.</p>
    #[doc(hidden)]
    pub trial_name: std::option::Option<std::string::String>,
    /// <p>The name of the trial as displayed. If <code>DisplayName</code> isn't specified, <code>TrialName</code> is displayed.</p>
    #[doc(hidden)]
    pub display_name: std::option::Option<std::string::String>,
    /// <p>The source of the trial.</p>
    #[doc(hidden)]
    pub trial_source: std::option::Option<crate::types::TrialSource>,
    /// <p>When the trial was created.</p>
    #[doc(hidden)]
    pub creation_time: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>When the trial was last modified.</p>
    #[doc(hidden)]
    pub last_modified_time: std::option::Option<aws_smithy_types::DateTime>,
}
impl TrialSummary {
    /// <p>The Amazon Resource Name (ARN) of the trial.</p>
    pub fn trial_arn(&self) -> std::option::Option<&str> {
        self.trial_arn.as_deref()
    }
    /// <p>The name of the trial.</p>
    pub fn trial_name(&self) -> std::option::Option<&str> {
        self.trial_name.as_deref()
    }
    /// <p>The name of the trial as displayed. If <code>DisplayName</code> isn't specified, <code>TrialName</code> is displayed.</p>
    pub fn display_name(&self) -> std::option::Option<&str> {
        self.display_name.as_deref()
    }
    /// <p>The source of the trial.</p>
    pub fn trial_source(&self) -> std::option::Option<&crate::types::TrialSource> {
        self.trial_source.as_ref()
    }
    /// <p>When the trial was created.</p>
    pub fn creation_time(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.creation_time.as_ref()
    }
    /// <p>When the trial was last modified.</p>
    pub fn last_modified_time(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.last_modified_time.as_ref()
    }
}
impl TrialSummary {
    /// Creates a new builder-style object to manufacture [`TrialSummary`](crate::types::TrialSummary).
    pub fn builder() -> crate::types::builders::TrialSummaryBuilder {
        crate::types::builders::TrialSummaryBuilder::default()
    }
}

/// A builder for [`TrialSummary`](crate::types::TrialSummary).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct TrialSummaryBuilder {
    pub(crate) trial_arn: std::option::Option<std::string::String>,
    pub(crate) trial_name: std::option::Option<std::string::String>,
    pub(crate) display_name: std::option::Option<std::string::String>,
    pub(crate) trial_source: std::option::Option<crate::types::TrialSource>,
    pub(crate) creation_time: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) last_modified_time: std::option::Option<aws_smithy_types::DateTime>,
}
impl TrialSummaryBuilder {
    /// <p>The Amazon Resource Name (ARN) of the trial.</p>
    pub fn trial_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.trial_arn = Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the trial.</p>
    pub fn set_trial_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.trial_arn = input;
        self
    }
    /// <p>The name of the trial.</p>
    pub fn trial_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.trial_name = Some(input.into());
        self
    }
    /// <p>The name of the trial.</p>
    pub fn set_trial_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.trial_name = input;
        self
    }
    /// <p>The name of the trial as displayed. If <code>DisplayName</code> isn't specified, <code>TrialName</code> is displayed.</p>
    pub fn display_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.display_name = Some(input.into());
        self
    }
    /// <p>The name of the trial as displayed. If <code>DisplayName</code> isn't specified, <code>TrialName</code> is displayed.</p>
    pub fn set_display_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.display_name = input;
        self
    }
    /// <p>The source of the trial.</p>
    pub fn trial_source(mut self, input: crate::types::TrialSource) -> Self {
        self.trial_source = Some(input);
        self
    }
    /// <p>The source of the trial.</p>
    pub fn set_trial_source(
        mut self,
        input: std::option::Option<crate::types::TrialSource>,
    ) -> Self {
        self.trial_source = input;
        self
    }
    /// <p>When the trial was created.</p>
    pub fn creation_time(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.creation_time = Some(input);
        self
    }
    /// <p>When the trial was created.</p>
    pub fn set_creation_time(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.creation_time = input;
        self
    }
    /// <p>When the trial was last modified.</p>
    pub fn last_modified_time(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.last_modified_time = Some(input);
        self
    }
    /// <p>When the trial was last modified.</p>
    pub fn set_last_modified_time(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.last_modified_time = input;
        self
    }
    /// Consumes the builder and constructs a [`TrialSummary`](crate::types::TrialSummary).
    pub fn build(self) -> crate::types::TrialSummary {
        crate::types::TrialSummary {
            trial_arn: self.trial_arn,
            trial_name: self.trial_name,
            display_name: self.display_name,
            trial_source: self.trial_source,
            creation_time: self.creation_time,
            last_modified_time: self.last_modified_time,
        }
    }
}
