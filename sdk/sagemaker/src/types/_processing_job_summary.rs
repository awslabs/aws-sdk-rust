// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Summary of information about a processing job.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ProcessingJobSummary {
    /// <p>The name of the processing job.</p>
    #[doc(hidden)]
    pub processing_job_name: std::option::Option<std::string::String>,
    /// <p>The Amazon Resource Name (ARN) of the processing job..</p>
    #[doc(hidden)]
    pub processing_job_arn: std::option::Option<std::string::String>,
    /// <p>The time at which the processing job was created.</p>
    #[doc(hidden)]
    pub creation_time: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>The time at which the processing job completed.</p>
    #[doc(hidden)]
    pub processing_end_time: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>A timestamp that indicates the last time the processing job was modified.</p>
    #[doc(hidden)]
    pub last_modified_time: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>The status of the processing job.</p>
    #[doc(hidden)]
    pub processing_job_status: std::option::Option<crate::types::ProcessingJobStatus>,
    /// <p>A string, up to one KB in size, that contains the reason a processing job failed, if it failed.</p>
    #[doc(hidden)]
    pub failure_reason: std::option::Option<std::string::String>,
    /// <p>An optional string, up to one KB in size, that contains metadata from the processing container when the processing job exits.</p>
    #[doc(hidden)]
    pub exit_message: std::option::Option<std::string::String>,
}
impl ProcessingJobSummary {
    /// <p>The name of the processing job.</p>
    pub fn processing_job_name(&self) -> std::option::Option<&str> {
        self.processing_job_name.as_deref()
    }
    /// <p>The Amazon Resource Name (ARN) of the processing job..</p>
    pub fn processing_job_arn(&self) -> std::option::Option<&str> {
        self.processing_job_arn.as_deref()
    }
    /// <p>The time at which the processing job was created.</p>
    pub fn creation_time(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.creation_time.as_ref()
    }
    /// <p>The time at which the processing job completed.</p>
    pub fn processing_end_time(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.processing_end_time.as_ref()
    }
    /// <p>A timestamp that indicates the last time the processing job was modified.</p>
    pub fn last_modified_time(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.last_modified_time.as_ref()
    }
    /// <p>The status of the processing job.</p>
    pub fn processing_job_status(&self) -> std::option::Option<&crate::types::ProcessingJobStatus> {
        self.processing_job_status.as_ref()
    }
    /// <p>A string, up to one KB in size, that contains the reason a processing job failed, if it failed.</p>
    pub fn failure_reason(&self) -> std::option::Option<&str> {
        self.failure_reason.as_deref()
    }
    /// <p>An optional string, up to one KB in size, that contains metadata from the processing container when the processing job exits.</p>
    pub fn exit_message(&self) -> std::option::Option<&str> {
        self.exit_message.as_deref()
    }
}
impl ProcessingJobSummary {
    /// Creates a new builder-style object to manufacture [`ProcessingJobSummary`](crate::types::ProcessingJobSummary).
    pub fn builder() -> crate::types::builders::ProcessingJobSummaryBuilder {
        crate::types::builders::ProcessingJobSummaryBuilder::default()
    }
}

/// A builder for [`ProcessingJobSummary`](crate::types::ProcessingJobSummary).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ProcessingJobSummaryBuilder {
    pub(crate) processing_job_name: std::option::Option<std::string::String>,
    pub(crate) processing_job_arn: std::option::Option<std::string::String>,
    pub(crate) creation_time: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) processing_end_time: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) last_modified_time: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) processing_job_status: std::option::Option<crate::types::ProcessingJobStatus>,
    pub(crate) failure_reason: std::option::Option<std::string::String>,
    pub(crate) exit_message: std::option::Option<std::string::String>,
}
impl ProcessingJobSummaryBuilder {
    /// <p>The name of the processing job.</p>
    pub fn processing_job_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.processing_job_name = Some(input.into());
        self
    }
    /// <p>The name of the processing job.</p>
    pub fn set_processing_job_name(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.processing_job_name = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the processing job..</p>
    pub fn processing_job_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.processing_job_arn = Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the processing job..</p>
    pub fn set_processing_job_arn(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.processing_job_arn = input;
        self
    }
    /// <p>The time at which the processing job was created.</p>
    pub fn creation_time(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.creation_time = Some(input);
        self
    }
    /// <p>The time at which the processing job was created.</p>
    pub fn set_creation_time(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.creation_time = input;
        self
    }
    /// <p>The time at which the processing job completed.</p>
    pub fn processing_end_time(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.processing_end_time = Some(input);
        self
    }
    /// <p>The time at which the processing job completed.</p>
    pub fn set_processing_end_time(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.processing_end_time = input;
        self
    }
    /// <p>A timestamp that indicates the last time the processing job was modified.</p>
    pub fn last_modified_time(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.last_modified_time = Some(input);
        self
    }
    /// <p>A timestamp that indicates the last time the processing job was modified.</p>
    pub fn set_last_modified_time(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.last_modified_time = input;
        self
    }
    /// <p>The status of the processing job.</p>
    pub fn processing_job_status(mut self, input: crate::types::ProcessingJobStatus) -> Self {
        self.processing_job_status = Some(input);
        self
    }
    /// <p>The status of the processing job.</p>
    pub fn set_processing_job_status(
        mut self,
        input: std::option::Option<crate::types::ProcessingJobStatus>,
    ) -> Self {
        self.processing_job_status = input;
        self
    }
    /// <p>A string, up to one KB in size, that contains the reason a processing job failed, if it failed.</p>
    pub fn failure_reason(mut self, input: impl Into<std::string::String>) -> Self {
        self.failure_reason = Some(input.into());
        self
    }
    /// <p>A string, up to one KB in size, that contains the reason a processing job failed, if it failed.</p>
    pub fn set_failure_reason(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.failure_reason = input;
        self
    }
    /// <p>An optional string, up to one KB in size, that contains metadata from the processing container when the processing job exits.</p>
    pub fn exit_message(mut self, input: impl Into<std::string::String>) -> Self {
        self.exit_message = Some(input.into());
        self
    }
    /// <p>An optional string, up to one KB in size, that contains metadata from the processing container when the processing job exits.</p>
    pub fn set_exit_message(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.exit_message = input;
        self
    }
    /// Consumes the builder and constructs a [`ProcessingJobSummary`](crate::types::ProcessingJobSummary).
    pub fn build(self) -> crate::types::ProcessingJobSummary {
        crate::types::ProcessingJobSummary {
            processing_job_name: self.processing_job_name,
            processing_job_arn: self.processing_job_arn,
            creation_time: self.creation_time,
            processing_end_time: self.processing_end_time,
            last_modified_time: self.last_modified_time,
            processing_job_status: self.processing_job_status,
            failure_reason: self.failure_reason,
            exit_message: self.exit_message,
        }
    }
}
