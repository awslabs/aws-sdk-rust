// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The user profile details.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct UserProfileDetails {
    /// <p>The domain ID.</p>
    #[doc(hidden)]
    pub domain_id: std::option::Option<std::string::String>,
    /// <p>The user profile name.</p>
    #[doc(hidden)]
    pub user_profile_name: std::option::Option<std::string::String>,
    /// <p>The status.</p>
    #[doc(hidden)]
    pub status: std::option::Option<crate::types::UserProfileStatus>,
    /// <p>The creation time.</p>
    #[doc(hidden)]
    pub creation_time: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>The last modified time.</p>
    #[doc(hidden)]
    pub last_modified_time: std::option::Option<aws_smithy_types::DateTime>,
}
impl UserProfileDetails {
    /// <p>The domain ID.</p>
    pub fn domain_id(&self) -> std::option::Option<&str> {
        self.domain_id.as_deref()
    }
    /// <p>The user profile name.</p>
    pub fn user_profile_name(&self) -> std::option::Option<&str> {
        self.user_profile_name.as_deref()
    }
    /// <p>The status.</p>
    pub fn status(&self) -> std::option::Option<&crate::types::UserProfileStatus> {
        self.status.as_ref()
    }
    /// <p>The creation time.</p>
    pub fn creation_time(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.creation_time.as_ref()
    }
    /// <p>The last modified time.</p>
    pub fn last_modified_time(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.last_modified_time.as_ref()
    }
}
impl UserProfileDetails {
    /// Creates a new builder-style object to manufacture [`UserProfileDetails`](crate::types::UserProfileDetails).
    pub fn builder() -> crate::types::builders::UserProfileDetailsBuilder {
        crate::types::builders::UserProfileDetailsBuilder::default()
    }
}

/// A builder for [`UserProfileDetails`](crate::types::UserProfileDetails).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct UserProfileDetailsBuilder {
    pub(crate) domain_id: std::option::Option<std::string::String>,
    pub(crate) user_profile_name: std::option::Option<std::string::String>,
    pub(crate) status: std::option::Option<crate::types::UserProfileStatus>,
    pub(crate) creation_time: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) last_modified_time: std::option::Option<aws_smithy_types::DateTime>,
}
impl UserProfileDetailsBuilder {
    /// <p>The domain ID.</p>
    pub fn domain_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.domain_id = Some(input.into());
        self
    }
    /// <p>The domain ID.</p>
    pub fn set_domain_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.domain_id = input;
        self
    }
    /// <p>The user profile name.</p>
    pub fn user_profile_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.user_profile_name = Some(input.into());
        self
    }
    /// <p>The user profile name.</p>
    pub fn set_user_profile_name(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.user_profile_name = input;
        self
    }
    /// <p>The status.</p>
    pub fn status(mut self, input: crate::types::UserProfileStatus) -> Self {
        self.status = Some(input);
        self
    }
    /// <p>The status.</p>
    pub fn set_status(
        mut self,
        input: std::option::Option<crate::types::UserProfileStatus>,
    ) -> Self {
        self.status = input;
        self
    }
    /// <p>The creation time.</p>
    pub fn creation_time(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.creation_time = Some(input);
        self
    }
    /// <p>The creation time.</p>
    pub fn set_creation_time(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.creation_time = input;
        self
    }
    /// <p>The last modified time.</p>
    pub fn last_modified_time(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.last_modified_time = Some(input);
        self
    }
    /// <p>The last modified time.</p>
    pub fn set_last_modified_time(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.last_modified_time = input;
        self
    }
    /// Consumes the builder and constructs a [`UserProfileDetails`](crate::types::UserProfileDetails).
    pub fn build(self) -> crate::types::UserProfileDetails {
        crate::types::UserProfileDetails {
            domain_id: self.domain_id,
            user_profile_name: self.user_profile_name,
            status: self.status,
            creation_time: self.creation_time,
            last_modified_time: self.last_modified_time,
        }
    }
}
