// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The output of a SageMaker Edge Manager deployable resource.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct EdgePresetDeploymentOutput {
    /// <p>The deployment type created by SageMaker Edge Manager. Currently only supports Amazon Web Services IoT Greengrass Version 2 components.</p>
    pub r#type: ::std::option::Option<crate::types::EdgePresetDeploymentType>,
    /// <p>The Amazon Resource Name (ARN) of the generated deployable resource.</p>
    pub artifact: ::std::option::Option<::std::string::String>,
    /// <p>The status of the deployable resource.</p>
    pub status: ::std::option::Option<crate::types::EdgePresetDeploymentStatus>,
    /// <p>Returns a message describing the status of the deployed resource.</p>
    pub status_message: ::std::option::Option<::std::string::String>,
}
impl EdgePresetDeploymentOutput {
    /// <p>The deployment type created by SageMaker Edge Manager. Currently only supports Amazon Web Services IoT Greengrass Version 2 components.</p>
    pub fn r#type(&self) -> ::std::option::Option<&crate::types::EdgePresetDeploymentType> {
        self.r#type.as_ref()
    }
    /// <p>The Amazon Resource Name (ARN) of the generated deployable resource.</p>
    pub fn artifact(&self) -> ::std::option::Option<&str> {
        self.artifact.as_deref()
    }
    /// <p>The status of the deployable resource.</p>
    pub fn status(&self) -> ::std::option::Option<&crate::types::EdgePresetDeploymentStatus> {
        self.status.as_ref()
    }
    /// <p>Returns a message describing the status of the deployed resource.</p>
    pub fn status_message(&self) -> ::std::option::Option<&str> {
        self.status_message.as_deref()
    }
}
impl EdgePresetDeploymentOutput {
    /// Creates a new builder-style object to manufacture [`EdgePresetDeploymentOutput`](crate::types::EdgePresetDeploymentOutput).
    pub fn builder() -> crate::types::builders::EdgePresetDeploymentOutputBuilder {
        crate::types::builders::EdgePresetDeploymentOutputBuilder::default()
    }
}

/// A builder for [`EdgePresetDeploymentOutput`](crate::types::EdgePresetDeploymentOutput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct EdgePresetDeploymentOutputBuilder {
    pub(crate) r#type: ::std::option::Option<crate::types::EdgePresetDeploymentType>,
    pub(crate) artifact: ::std::option::Option<::std::string::String>,
    pub(crate) status: ::std::option::Option<crate::types::EdgePresetDeploymentStatus>,
    pub(crate) status_message: ::std::option::Option<::std::string::String>,
}
impl EdgePresetDeploymentOutputBuilder {
    /// <p>The deployment type created by SageMaker Edge Manager. Currently only supports Amazon Web Services IoT Greengrass Version 2 components.</p>
    /// This field is required.
    pub fn r#type(mut self, input: crate::types::EdgePresetDeploymentType) -> Self {
        self.r#type = ::std::option::Option::Some(input);
        self
    }
    /// <p>The deployment type created by SageMaker Edge Manager. Currently only supports Amazon Web Services IoT Greengrass Version 2 components.</p>
    pub fn set_type(mut self, input: ::std::option::Option<crate::types::EdgePresetDeploymentType>) -> Self {
        self.r#type = input;
        self
    }
    /// <p>The deployment type created by SageMaker Edge Manager. Currently only supports Amazon Web Services IoT Greengrass Version 2 components.</p>
    pub fn get_type(&self) -> &::std::option::Option<crate::types::EdgePresetDeploymentType> {
        &self.r#type
    }
    /// <p>The Amazon Resource Name (ARN) of the generated deployable resource.</p>
    pub fn artifact(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.artifact = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the generated deployable resource.</p>
    pub fn set_artifact(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.artifact = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the generated deployable resource.</p>
    pub fn get_artifact(&self) -> &::std::option::Option<::std::string::String> {
        &self.artifact
    }
    /// <p>The status of the deployable resource.</p>
    pub fn status(mut self, input: crate::types::EdgePresetDeploymentStatus) -> Self {
        self.status = ::std::option::Option::Some(input);
        self
    }
    /// <p>The status of the deployable resource.</p>
    pub fn set_status(mut self, input: ::std::option::Option<crate::types::EdgePresetDeploymentStatus>) -> Self {
        self.status = input;
        self
    }
    /// <p>The status of the deployable resource.</p>
    pub fn get_status(&self) -> &::std::option::Option<crate::types::EdgePresetDeploymentStatus> {
        &self.status
    }
    /// <p>Returns a message describing the status of the deployed resource.</p>
    pub fn status_message(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.status_message = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Returns a message describing the status of the deployed resource.</p>
    pub fn set_status_message(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.status_message = input;
        self
    }
    /// <p>Returns a message describing the status of the deployed resource.</p>
    pub fn get_status_message(&self) -> &::std::option::Option<::std::string::String> {
        &self.status_message
    }
    /// Consumes the builder and constructs a [`EdgePresetDeploymentOutput`](crate::types::EdgePresetDeploymentOutput).
    pub fn build(self) -> crate::types::EdgePresetDeploymentOutput {
        crate::types::EdgePresetDeploymentOutput {
            r#type: self.r#type,
            artifact: self.artifact,
            status: self.status,
            status_message: self.status_message,
        }
    }
}
