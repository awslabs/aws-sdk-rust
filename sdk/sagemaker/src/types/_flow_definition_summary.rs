// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains summary information about the flow definition.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct FlowDefinitionSummary {
    /// <p>The name of the flow definition.</p>
    pub flow_definition_name: ::std::option::Option<::std::string::String>,
    /// <p>The Amazon Resource Name (ARN) of the flow definition.</p>
    pub flow_definition_arn: ::std::option::Option<::std::string::String>,
    /// <p>The status of the flow definition. Valid values:</p>
    pub flow_definition_status: ::std::option::Option<crate::types::FlowDefinitionStatus>,
    /// <p>The timestamp when SageMaker created the flow definition.</p>
    pub creation_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>The reason why the flow definition creation failed. A failure reason is returned only when the flow definition status is <code>Failed</code>.</p>
    pub failure_reason: ::std::option::Option<::std::string::String>,
}
impl FlowDefinitionSummary {
    /// <p>The name of the flow definition.</p>
    pub fn flow_definition_name(&self) -> ::std::option::Option<&str> {
        self.flow_definition_name.as_deref()
    }
    /// <p>The Amazon Resource Name (ARN) of the flow definition.</p>
    pub fn flow_definition_arn(&self) -> ::std::option::Option<&str> {
        self.flow_definition_arn.as_deref()
    }
    /// <p>The status of the flow definition. Valid values:</p>
    pub fn flow_definition_status(&self) -> ::std::option::Option<&crate::types::FlowDefinitionStatus> {
        self.flow_definition_status.as_ref()
    }
    /// <p>The timestamp when SageMaker created the flow definition.</p>
    pub fn creation_time(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.creation_time.as_ref()
    }
    /// <p>The reason why the flow definition creation failed. A failure reason is returned only when the flow definition status is <code>Failed</code>.</p>
    pub fn failure_reason(&self) -> ::std::option::Option<&str> {
        self.failure_reason.as_deref()
    }
}
impl FlowDefinitionSummary {
    /// Creates a new builder-style object to manufacture [`FlowDefinitionSummary`](crate::types::FlowDefinitionSummary).
    pub fn builder() -> crate::types::builders::FlowDefinitionSummaryBuilder {
        crate::types::builders::FlowDefinitionSummaryBuilder::default()
    }
}

/// A builder for [`FlowDefinitionSummary`](crate::types::FlowDefinitionSummary).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct FlowDefinitionSummaryBuilder {
    pub(crate) flow_definition_name: ::std::option::Option<::std::string::String>,
    pub(crate) flow_definition_arn: ::std::option::Option<::std::string::String>,
    pub(crate) flow_definition_status: ::std::option::Option<crate::types::FlowDefinitionStatus>,
    pub(crate) creation_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) failure_reason: ::std::option::Option<::std::string::String>,
}
impl FlowDefinitionSummaryBuilder {
    /// <p>The name of the flow definition.</p>
    /// This field is required.
    pub fn flow_definition_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.flow_definition_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the flow definition.</p>
    pub fn set_flow_definition_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.flow_definition_name = input;
        self
    }
    /// <p>The name of the flow definition.</p>
    pub fn get_flow_definition_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.flow_definition_name
    }
    /// <p>The Amazon Resource Name (ARN) of the flow definition.</p>
    /// This field is required.
    pub fn flow_definition_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.flow_definition_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the flow definition.</p>
    pub fn set_flow_definition_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.flow_definition_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the flow definition.</p>
    pub fn get_flow_definition_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.flow_definition_arn
    }
    /// <p>The status of the flow definition. Valid values:</p>
    /// This field is required.
    pub fn flow_definition_status(mut self, input: crate::types::FlowDefinitionStatus) -> Self {
        self.flow_definition_status = ::std::option::Option::Some(input);
        self
    }
    /// <p>The status of the flow definition. Valid values:</p>
    pub fn set_flow_definition_status(mut self, input: ::std::option::Option<crate::types::FlowDefinitionStatus>) -> Self {
        self.flow_definition_status = input;
        self
    }
    /// <p>The status of the flow definition. Valid values:</p>
    pub fn get_flow_definition_status(&self) -> &::std::option::Option<crate::types::FlowDefinitionStatus> {
        &self.flow_definition_status
    }
    /// <p>The timestamp when SageMaker created the flow definition.</p>
    /// This field is required.
    pub fn creation_time(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.creation_time = ::std::option::Option::Some(input);
        self
    }
    /// <p>The timestamp when SageMaker created the flow definition.</p>
    pub fn set_creation_time(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.creation_time = input;
        self
    }
    /// <p>The timestamp when SageMaker created the flow definition.</p>
    pub fn get_creation_time(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.creation_time
    }
    /// <p>The reason why the flow definition creation failed. A failure reason is returned only when the flow definition status is <code>Failed</code>.</p>
    pub fn failure_reason(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.failure_reason = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The reason why the flow definition creation failed. A failure reason is returned only when the flow definition status is <code>Failed</code>.</p>
    pub fn set_failure_reason(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.failure_reason = input;
        self
    }
    /// <p>The reason why the flow definition creation failed. A failure reason is returned only when the flow definition status is <code>Failed</code>.</p>
    pub fn get_failure_reason(&self) -> &::std::option::Option<::std::string::String> {
        &self.failure_reason
    }
    /// Consumes the builder and constructs a [`FlowDefinitionSummary`](crate::types::FlowDefinitionSummary).
    pub fn build(self) -> crate::types::FlowDefinitionSummary {
        crate::types::FlowDefinitionSummary {
            flow_definition_name: self.flow_definition_name,
            flow_definition_arn: self.flow_definition_arn,
            flow_definition_status: self.flow_definition_status,
            creation_time: self.creation_time,
            failure_reason: self.failure_reason,
        }
    }
}
