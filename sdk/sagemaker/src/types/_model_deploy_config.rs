// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Specifies how to generate the endpoint name for an automatic one-click Autopilot model deployment.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ModelDeployConfig {
    /// <p>Set to <code>True</code> to automatically generate an endpoint name for a one-click Autopilot model deployment; set to <code>False</code> otherwise. The default value is <code>False</code>.</p> <note>
    /// <p>If you set <code>AutoGenerateEndpointName</code> to <code>True</code>, do not specify the <code>EndpointName</code>; otherwise a 400 error is thrown.</p>
    /// </note>
    #[doc(hidden)]
    pub auto_generate_endpoint_name: bool,
    /// <p>Specifies the endpoint name to use for a one-click Autopilot model deployment if the endpoint name is not generated automatically.</p> <note>
    /// <p>Specify the <code>EndpointName</code> if and only if you set <code>AutoGenerateEndpointName</code> to <code>False</code>; otherwise a 400 error is thrown.</p>
    /// </note>
    #[doc(hidden)]
    pub endpoint_name: std::option::Option<std::string::String>,
}
impl ModelDeployConfig {
    /// <p>Set to <code>True</code> to automatically generate an endpoint name for a one-click Autopilot model deployment; set to <code>False</code> otherwise. The default value is <code>False</code>.</p> <note>
    /// <p>If you set <code>AutoGenerateEndpointName</code> to <code>True</code>, do not specify the <code>EndpointName</code>; otherwise a 400 error is thrown.</p>
    /// </note>
    pub fn auto_generate_endpoint_name(&self) -> bool {
        self.auto_generate_endpoint_name
    }
    /// <p>Specifies the endpoint name to use for a one-click Autopilot model deployment if the endpoint name is not generated automatically.</p> <note>
    /// <p>Specify the <code>EndpointName</code> if and only if you set <code>AutoGenerateEndpointName</code> to <code>False</code>; otherwise a 400 error is thrown.</p>
    /// </note>
    pub fn endpoint_name(&self) -> std::option::Option<&str> {
        self.endpoint_name.as_deref()
    }
}
impl ModelDeployConfig {
    /// Creates a new builder-style object to manufacture [`ModelDeployConfig`](crate::types::ModelDeployConfig).
    pub fn builder() -> crate::types::builders::ModelDeployConfigBuilder {
        crate::types::builders::ModelDeployConfigBuilder::default()
    }
}

/// A builder for [`ModelDeployConfig`](crate::types::ModelDeployConfig).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ModelDeployConfigBuilder {
    pub(crate) auto_generate_endpoint_name: std::option::Option<bool>,
    pub(crate) endpoint_name: std::option::Option<std::string::String>,
}
impl ModelDeployConfigBuilder {
    /// <p>Set to <code>True</code> to automatically generate an endpoint name for a one-click Autopilot model deployment; set to <code>False</code> otherwise. The default value is <code>False</code>.</p> <note>
    /// <p>If you set <code>AutoGenerateEndpointName</code> to <code>True</code>, do not specify the <code>EndpointName</code>; otherwise a 400 error is thrown.</p>
    /// </note>
    pub fn auto_generate_endpoint_name(mut self, input: bool) -> Self {
        self.auto_generate_endpoint_name = Some(input);
        self
    }
    /// <p>Set to <code>True</code> to automatically generate an endpoint name for a one-click Autopilot model deployment; set to <code>False</code> otherwise. The default value is <code>False</code>.</p> <note>
    /// <p>If you set <code>AutoGenerateEndpointName</code> to <code>True</code>, do not specify the <code>EndpointName</code>; otherwise a 400 error is thrown.</p>
    /// </note>
    pub fn set_auto_generate_endpoint_name(mut self, input: std::option::Option<bool>) -> Self {
        self.auto_generate_endpoint_name = input;
        self
    }
    /// <p>Specifies the endpoint name to use for a one-click Autopilot model deployment if the endpoint name is not generated automatically.</p> <note>
    /// <p>Specify the <code>EndpointName</code> if and only if you set <code>AutoGenerateEndpointName</code> to <code>False</code>; otherwise a 400 error is thrown.</p>
    /// </note>
    pub fn endpoint_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.endpoint_name = Some(input.into());
        self
    }
    /// <p>Specifies the endpoint name to use for a one-click Autopilot model deployment if the endpoint name is not generated automatically.</p> <note>
    /// <p>Specify the <code>EndpointName</code> if and only if you set <code>AutoGenerateEndpointName</code> to <code>False</code>; otherwise a 400 error is thrown.</p>
    /// </note>
    pub fn set_endpoint_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.endpoint_name = input;
        self
    }
    /// Consumes the builder and constructs a [`ModelDeployConfig`](crate::types::ModelDeployConfig).
    pub fn build(self) -> crate::types::ModelDeployConfig {
        crate::types::ModelDeployConfig {
            auto_generate_endpoint_name: self.auto_generate_endpoint_name.unwrap_or_default(),
            endpoint_name: self.endpoint_name,
        }
    }
}
