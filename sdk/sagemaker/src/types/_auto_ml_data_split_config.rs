// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>This structure specifies how to split the data into train and validation datasets. The validation and training datasets must contain the same headers. The validation dataset must be less than 2 GB in size.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AutoMlDataSplitConfig {
    /// <p>The validation fraction (optional) is a float that specifies the portion of the training dataset to be used for validation. The default value is 0.2, and values must be greater than 0 and less than 1. We recommend setting this value to be less than 0.5.</p>
    #[doc(hidden)]
    pub validation_fraction: std::option::Option<f32>,
}
impl AutoMlDataSplitConfig {
    /// <p>The validation fraction (optional) is a float that specifies the portion of the training dataset to be used for validation. The default value is 0.2, and values must be greater than 0 and less than 1. We recommend setting this value to be less than 0.5.</p>
    pub fn validation_fraction(&self) -> std::option::Option<f32> {
        self.validation_fraction
    }
}
impl AutoMlDataSplitConfig {
    /// Creates a new builder-style object to manufacture [`AutoMlDataSplitConfig`](crate::types::AutoMlDataSplitConfig).
    pub fn builder() -> crate::types::builders::AutoMlDataSplitConfigBuilder {
        crate::types::builders::AutoMlDataSplitConfigBuilder::default()
    }
}

/// A builder for [`AutoMlDataSplitConfig`](crate::types::AutoMlDataSplitConfig).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AutoMlDataSplitConfigBuilder {
    pub(crate) validation_fraction: std::option::Option<f32>,
}
impl AutoMlDataSplitConfigBuilder {
    /// <p>The validation fraction (optional) is a float that specifies the portion of the training dataset to be used for validation. The default value is 0.2, and values must be greater than 0 and less than 1. We recommend setting this value to be less than 0.5.</p>
    pub fn validation_fraction(mut self, input: f32) -> Self {
        self.validation_fraction = Some(input);
        self
    }
    /// <p>The validation fraction (optional) is a float that specifies the portion of the training dataset to be used for validation. The default value is 0.2, and values must be greater than 0 and less than 1. We recommend setting this value to be less than 0.5.</p>
    pub fn set_validation_fraction(mut self, input: std::option::Option<f32>) -> Self {
        self.validation_fraction = input;
        self
    }
    /// Consumes the builder and constructs a [`AutoMlDataSplitConfig`](crate::types::AutoMlDataSplitConfig).
    pub fn build(self) -> crate::types::AutoMlDataSplitConfig {
        crate::types::AutoMlDataSplitConfig {
            validation_fraction: self.validation_fraction,
        }
    }
}
