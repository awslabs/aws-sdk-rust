// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Represents an amount of money in United States dollars.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct Usd {
    /// <p>The whole number of dollars in the amount.</p>
    #[doc(hidden)]
    pub dollars: i32,
    /// <p>The fractional portion, in cents, of the amount. </p>
    #[doc(hidden)]
    pub cents: i32,
    /// <p>Fractions of a cent, in tenths.</p>
    #[doc(hidden)]
    pub tenth_fractions_of_a_cent: i32,
}
impl Usd {
    /// <p>The whole number of dollars in the amount.</p>
    pub fn dollars(&self) -> i32 {
        self.dollars
    }
    /// <p>The fractional portion, in cents, of the amount. </p>
    pub fn cents(&self) -> i32 {
        self.cents
    }
    /// <p>Fractions of a cent, in tenths.</p>
    pub fn tenth_fractions_of_a_cent(&self) -> i32 {
        self.tenth_fractions_of_a_cent
    }
}
impl Usd {
    /// Creates a new builder-style object to manufacture [`Usd`](crate::types::Usd).
    pub fn builder() -> crate::types::builders::UsdBuilder {
        crate::types::builders::UsdBuilder::default()
    }
}

/// A builder for [`Usd`](crate::types::Usd).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct UsdBuilder {
    pub(crate) dollars: std::option::Option<i32>,
    pub(crate) cents: std::option::Option<i32>,
    pub(crate) tenth_fractions_of_a_cent: std::option::Option<i32>,
}
impl UsdBuilder {
    /// <p>The whole number of dollars in the amount.</p>
    pub fn dollars(mut self, input: i32) -> Self {
        self.dollars = Some(input);
        self
    }
    /// <p>The whole number of dollars in the amount.</p>
    pub fn set_dollars(mut self, input: std::option::Option<i32>) -> Self {
        self.dollars = input;
        self
    }
    /// <p>The fractional portion, in cents, of the amount. </p>
    pub fn cents(mut self, input: i32) -> Self {
        self.cents = Some(input);
        self
    }
    /// <p>The fractional portion, in cents, of the amount. </p>
    pub fn set_cents(mut self, input: std::option::Option<i32>) -> Self {
        self.cents = input;
        self
    }
    /// <p>Fractions of a cent, in tenths.</p>
    pub fn tenth_fractions_of_a_cent(mut self, input: i32) -> Self {
        self.tenth_fractions_of_a_cent = Some(input);
        self
    }
    /// <p>Fractions of a cent, in tenths.</p>
    pub fn set_tenth_fractions_of_a_cent(mut self, input: std::option::Option<i32>) -> Self {
        self.tenth_fractions_of_a_cent = input;
        self
    }
    /// Consumes the builder and constructs a [`Usd`](crate::types::Usd).
    pub fn build(self) -> crate::types::Usd {
        crate::types::Usd {
            dollars: self.dollars.unwrap_or_default(),
            cents: self.cents.unwrap_or_default(),
            tenth_fractions_of_a_cent: self.tenth_fractions_of_a_cent.unwrap_or_default(),
        }
    }
}
