// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Identifies the resources to deploy for a monitoring job.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct MonitoringResources {
    /// <p>The configuration for the cluster resources used to run the processing job.</p>
    #[doc(hidden)]
    pub cluster_config: std::option::Option<crate::types::MonitoringClusterConfig>,
}
impl MonitoringResources {
    /// <p>The configuration for the cluster resources used to run the processing job.</p>
    pub fn cluster_config(&self) -> std::option::Option<&crate::types::MonitoringClusterConfig> {
        self.cluster_config.as_ref()
    }
}
impl MonitoringResources {
    /// Creates a new builder-style object to manufacture [`MonitoringResources`](crate::types::MonitoringResources).
    pub fn builder() -> crate::types::builders::MonitoringResourcesBuilder {
        crate::types::builders::MonitoringResourcesBuilder::default()
    }
}

/// A builder for [`MonitoringResources`](crate::types::MonitoringResources).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct MonitoringResourcesBuilder {
    pub(crate) cluster_config: std::option::Option<crate::types::MonitoringClusterConfig>,
}
impl MonitoringResourcesBuilder {
    /// <p>The configuration for the cluster resources used to run the processing job.</p>
    pub fn cluster_config(mut self, input: crate::types::MonitoringClusterConfig) -> Self {
        self.cluster_config = Some(input);
        self
    }
    /// <p>The configuration for the cluster resources used to run the processing job.</p>
    pub fn set_cluster_config(
        mut self,
        input: std::option::Option<crate::types::MonitoringClusterConfig>,
    ) -> Self {
        self.cluster_config = input;
        self
    }
    /// Consumes the builder and constructs a [`MonitoringResources`](crate::types::MonitoringResources).
    pub fn build(self) -> crate::types::MonitoringResources {
        crate::types::MonitoringResources {
            cluster_config: self.cluster_config,
        }
    }
}
