// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Provides summary information about an algorithm.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AlgorithmSummary {
    /// <p>The name of the algorithm that is described by the summary.</p>
    #[doc(hidden)]
    pub algorithm_name: std::option::Option<std::string::String>,
    /// <p>The Amazon Resource Name (ARN) of the algorithm.</p>
    #[doc(hidden)]
    pub algorithm_arn: std::option::Option<std::string::String>,
    /// <p>A brief description of the algorithm.</p>
    #[doc(hidden)]
    pub algorithm_description: std::option::Option<std::string::String>,
    /// <p>A timestamp that shows when the algorithm was created.</p>
    #[doc(hidden)]
    pub creation_time: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>The overall status of the algorithm.</p>
    #[doc(hidden)]
    pub algorithm_status: std::option::Option<crate::types::AlgorithmStatus>,
}
impl AlgorithmSummary {
    /// <p>The name of the algorithm that is described by the summary.</p>
    pub fn algorithm_name(&self) -> std::option::Option<&str> {
        self.algorithm_name.as_deref()
    }
    /// <p>The Amazon Resource Name (ARN) of the algorithm.</p>
    pub fn algorithm_arn(&self) -> std::option::Option<&str> {
        self.algorithm_arn.as_deref()
    }
    /// <p>A brief description of the algorithm.</p>
    pub fn algorithm_description(&self) -> std::option::Option<&str> {
        self.algorithm_description.as_deref()
    }
    /// <p>A timestamp that shows when the algorithm was created.</p>
    pub fn creation_time(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.creation_time.as_ref()
    }
    /// <p>The overall status of the algorithm.</p>
    pub fn algorithm_status(&self) -> std::option::Option<&crate::types::AlgorithmStatus> {
        self.algorithm_status.as_ref()
    }
}
impl AlgorithmSummary {
    /// Creates a new builder-style object to manufacture [`AlgorithmSummary`](crate::types::AlgorithmSummary).
    pub fn builder() -> crate::types::builders::AlgorithmSummaryBuilder {
        crate::types::builders::AlgorithmSummaryBuilder::default()
    }
}

/// A builder for [`AlgorithmSummary`](crate::types::AlgorithmSummary).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AlgorithmSummaryBuilder {
    pub(crate) algorithm_name: std::option::Option<std::string::String>,
    pub(crate) algorithm_arn: std::option::Option<std::string::String>,
    pub(crate) algorithm_description: std::option::Option<std::string::String>,
    pub(crate) creation_time: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) algorithm_status: std::option::Option<crate::types::AlgorithmStatus>,
}
impl AlgorithmSummaryBuilder {
    /// <p>The name of the algorithm that is described by the summary.</p>
    pub fn algorithm_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.algorithm_name = Some(input.into());
        self
    }
    /// <p>The name of the algorithm that is described by the summary.</p>
    pub fn set_algorithm_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.algorithm_name = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the algorithm.</p>
    pub fn algorithm_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.algorithm_arn = Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the algorithm.</p>
    pub fn set_algorithm_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.algorithm_arn = input;
        self
    }
    /// <p>A brief description of the algorithm.</p>
    pub fn algorithm_description(mut self, input: impl Into<std::string::String>) -> Self {
        self.algorithm_description = Some(input.into());
        self
    }
    /// <p>A brief description of the algorithm.</p>
    pub fn set_algorithm_description(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.algorithm_description = input;
        self
    }
    /// <p>A timestamp that shows when the algorithm was created.</p>
    pub fn creation_time(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.creation_time = Some(input);
        self
    }
    /// <p>A timestamp that shows when the algorithm was created.</p>
    pub fn set_creation_time(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.creation_time = input;
        self
    }
    /// <p>The overall status of the algorithm.</p>
    pub fn algorithm_status(mut self, input: crate::types::AlgorithmStatus) -> Self {
        self.algorithm_status = Some(input);
        self
    }
    /// <p>The overall status of the algorithm.</p>
    pub fn set_algorithm_status(
        mut self,
        input: std::option::Option<crate::types::AlgorithmStatus>,
    ) -> Self {
        self.algorithm_status = input;
        self
    }
    /// Consumes the builder and constructs a [`AlgorithmSummary`](crate::types::AlgorithmSummary).
    pub fn build(self) -> crate::types::AlgorithmSummary {
        crate::types::AlgorithmSummary {
            algorithm_name: self.algorithm_name,
            algorithm_arn: self.algorithm_arn,
            algorithm_description: self.algorithm_description,
            creation_time: self.creation_time,
            algorithm_status: self.algorithm_status,
        }
    }
}
