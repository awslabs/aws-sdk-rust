// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Defines the possible values for an integer hyperparameter.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct IntegerParameterRangeSpecification {
    /// <p>The minimum integer value allowed.</p>
    #[doc(hidden)]
    pub min_value: std::option::Option<std::string::String>,
    /// <p>The maximum integer value allowed.</p>
    #[doc(hidden)]
    pub max_value: std::option::Option<std::string::String>,
}
impl IntegerParameterRangeSpecification {
    /// <p>The minimum integer value allowed.</p>
    pub fn min_value(&self) -> std::option::Option<&str> {
        self.min_value.as_deref()
    }
    /// <p>The maximum integer value allowed.</p>
    pub fn max_value(&self) -> std::option::Option<&str> {
        self.max_value.as_deref()
    }
}
impl IntegerParameterRangeSpecification {
    /// Creates a new builder-style object to manufacture [`IntegerParameterRangeSpecification`](crate::types::IntegerParameterRangeSpecification).
    pub fn builder() -> crate::types::builders::IntegerParameterRangeSpecificationBuilder {
        crate::types::builders::IntegerParameterRangeSpecificationBuilder::default()
    }
}

/// A builder for [`IntegerParameterRangeSpecification`](crate::types::IntegerParameterRangeSpecification).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct IntegerParameterRangeSpecificationBuilder {
    pub(crate) min_value: std::option::Option<std::string::String>,
    pub(crate) max_value: std::option::Option<std::string::String>,
}
impl IntegerParameterRangeSpecificationBuilder {
    /// <p>The minimum integer value allowed.</p>
    pub fn min_value(mut self, input: impl Into<std::string::String>) -> Self {
        self.min_value = Some(input.into());
        self
    }
    /// <p>The minimum integer value allowed.</p>
    pub fn set_min_value(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.min_value = input;
        self
    }
    /// <p>The maximum integer value allowed.</p>
    pub fn max_value(mut self, input: impl Into<std::string::String>) -> Self {
        self.max_value = Some(input.into());
        self
    }
    /// <p>The maximum integer value allowed.</p>
    pub fn set_max_value(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.max_value = input;
        self
    }
    /// Consumes the builder and constructs a [`IntegerParameterRangeSpecification`](crate::types::IntegerParameterRangeSpecification).
    pub fn build(self) -> crate::types::IntegerParameterRangeSpecification {
        crate::types::IntegerParameterRangeSpecification {
            min_value: self.min_value,
            max_value: self.max_value,
        }
    }
}
