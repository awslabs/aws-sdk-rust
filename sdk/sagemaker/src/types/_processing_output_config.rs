// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Configuration for uploading output from the processing container.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ProcessingOutputConfig {
    /// <p>An array of outputs configuring the data to upload from the processing container.</p>
    pub outputs: ::std::option::Option<::std::vec::Vec<crate::types::ProcessingOutput>>,
    /// <p>The Amazon Web Services Key Management Service (Amazon Web Services KMS) key that Amazon SageMaker uses to encrypt the processing job output. <code>KmsKeyId</code> can be an ID of a KMS key, ARN of a KMS key, alias of a KMS key, or alias of a KMS key. The <code>KmsKeyId</code> is applied to all outputs.</p>
    pub kms_key_id: ::std::option::Option<::std::string::String>,
}
impl ProcessingOutputConfig {
    /// <p>An array of outputs configuring the data to upload from the processing container.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.outputs.is_none()`.
    pub fn outputs(&self) -> &[crate::types::ProcessingOutput] {
        self.outputs.as_deref().unwrap_or_default()
    }
    /// <p>The Amazon Web Services Key Management Service (Amazon Web Services KMS) key that Amazon SageMaker uses to encrypt the processing job output. <code>KmsKeyId</code> can be an ID of a KMS key, ARN of a KMS key, alias of a KMS key, or alias of a KMS key. The <code>KmsKeyId</code> is applied to all outputs.</p>
    pub fn kms_key_id(&self) -> ::std::option::Option<&str> {
        self.kms_key_id.as_deref()
    }
}
impl ProcessingOutputConfig {
    /// Creates a new builder-style object to manufacture [`ProcessingOutputConfig`](crate::types::ProcessingOutputConfig).
    pub fn builder() -> crate::types::builders::ProcessingOutputConfigBuilder {
        crate::types::builders::ProcessingOutputConfigBuilder::default()
    }
}

/// A builder for [`ProcessingOutputConfig`](crate::types::ProcessingOutputConfig).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ProcessingOutputConfigBuilder {
    pub(crate) outputs: ::std::option::Option<::std::vec::Vec<crate::types::ProcessingOutput>>,
    pub(crate) kms_key_id: ::std::option::Option<::std::string::String>,
}
impl ProcessingOutputConfigBuilder {
    /// Appends an item to `outputs`.
    ///
    /// To override the contents of this collection use [`set_outputs`](Self::set_outputs).
    ///
    /// <p>An array of outputs configuring the data to upload from the processing container.</p>
    pub fn outputs(mut self, input: crate::types::ProcessingOutput) -> Self {
        let mut v = self.outputs.unwrap_or_default();
        v.push(input);
        self.outputs = ::std::option::Option::Some(v);
        self
    }
    /// <p>An array of outputs configuring the data to upload from the processing container.</p>
    pub fn set_outputs(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::ProcessingOutput>>) -> Self {
        self.outputs = input;
        self
    }
    /// <p>An array of outputs configuring the data to upload from the processing container.</p>
    pub fn get_outputs(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::ProcessingOutput>> {
        &self.outputs
    }
    /// <p>The Amazon Web Services Key Management Service (Amazon Web Services KMS) key that Amazon SageMaker uses to encrypt the processing job output. <code>KmsKeyId</code> can be an ID of a KMS key, ARN of a KMS key, alias of a KMS key, or alias of a KMS key. The <code>KmsKeyId</code> is applied to all outputs.</p>
    pub fn kms_key_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.kms_key_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Web Services Key Management Service (Amazon Web Services KMS) key that Amazon SageMaker uses to encrypt the processing job output. <code>KmsKeyId</code> can be an ID of a KMS key, ARN of a KMS key, alias of a KMS key, or alias of a KMS key. The <code>KmsKeyId</code> is applied to all outputs.</p>
    pub fn set_kms_key_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.kms_key_id = input;
        self
    }
    /// <p>The Amazon Web Services Key Management Service (Amazon Web Services KMS) key that Amazon SageMaker uses to encrypt the processing job output. <code>KmsKeyId</code> can be an ID of a KMS key, ARN of a KMS key, alias of a KMS key, or alias of a KMS key. The <code>KmsKeyId</code> is applied to all outputs.</p>
    pub fn get_kms_key_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.kms_key_id
    }
    /// Consumes the builder and constructs a [`ProcessingOutputConfig`](crate::types::ProcessingOutputConfig).
    pub fn build(self) -> crate::types::ProcessingOutputConfig {
        crate::types::ProcessingOutputConfig {
            outputs: self.outputs,
            kms_key_id: self.kms_key_id,
        }
    }
}
