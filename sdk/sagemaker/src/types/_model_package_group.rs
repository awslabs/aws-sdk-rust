// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A group of versioned models in the model registry.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ModelPackageGroup {
    /// <p>The name of the model group.</p>
    #[doc(hidden)]
    pub model_package_group_name: std::option::Option<std::string::String>,
    /// <p>The Amazon Resource Name (ARN) of the model group.</p>
    #[doc(hidden)]
    pub model_package_group_arn: std::option::Option<std::string::String>,
    /// <p>The description for the model group.</p>
    #[doc(hidden)]
    pub model_package_group_description: std::option::Option<std::string::String>,
    /// <p>The time that the model group was created.</p>
    #[doc(hidden)]
    pub creation_time: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>Information about the user who created or modified an experiment, trial, trial component, lineage group, project, or model card.</p>
    #[doc(hidden)]
    pub created_by: std::option::Option<crate::types::UserContext>,
    /// <p>The status of the model group. This can be one of the following values.</p>
    /// <ul>
    /// <li> <p> <code>PENDING</code> - The model group is pending being created.</p> </li>
    /// <li> <p> <code>IN_PROGRESS</code> - The model group is in the process of being created.</p> </li>
    /// <li> <p> <code>COMPLETED</code> - The model group was successfully created.</p> </li>
    /// <li> <p> <code>FAILED</code> - The model group failed.</p> </li>
    /// <li> <p> <code>DELETING</code> - The model group is in the process of being deleted.</p> </li>
    /// <li> <p> <code>DELETE_FAILED</code> - SageMaker failed to delete the model group.</p> </li>
    /// </ul>
    #[doc(hidden)]
    pub model_package_group_status: std::option::Option<crate::types::ModelPackageGroupStatus>,
    /// <p>A list of the tags associated with the model group. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging Amazon Web Services resources</a> in the <i>Amazon Web Services General Reference Guide</i>.</p>
    #[doc(hidden)]
    pub tags: std::option::Option<std::vec::Vec<crate::types::Tag>>,
}
impl ModelPackageGroup {
    /// <p>The name of the model group.</p>
    pub fn model_package_group_name(&self) -> std::option::Option<&str> {
        self.model_package_group_name.as_deref()
    }
    /// <p>The Amazon Resource Name (ARN) of the model group.</p>
    pub fn model_package_group_arn(&self) -> std::option::Option<&str> {
        self.model_package_group_arn.as_deref()
    }
    /// <p>The description for the model group.</p>
    pub fn model_package_group_description(&self) -> std::option::Option<&str> {
        self.model_package_group_description.as_deref()
    }
    /// <p>The time that the model group was created.</p>
    pub fn creation_time(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.creation_time.as_ref()
    }
    /// <p>Information about the user who created or modified an experiment, trial, trial component, lineage group, project, or model card.</p>
    pub fn created_by(&self) -> std::option::Option<&crate::types::UserContext> {
        self.created_by.as_ref()
    }
    /// <p>The status of the model group. This can be one of the following values.</p>
    /// <ul>
    /// <li> <p> <code>PENDING</code> - The model group is pending being created.</p> </li>
    /// <li> <p> <code>IN_PROGRESS</code> - The model group is in the process of being created.</p> </li>
    /// <li> <p> <code>COMPLETED</code> - The model group was successfully created.</p> </li>
    /// <li> <p> <code>FAILED</code> - The model group failed.</p> </li>
    /// <li> <p> <code>DELETING</code> - The model group is in the process of being deleted.</p> </li>
    /// <li> <p> <code>DELETE_FAILED</code> - SageMaker failed to delete the model group.</p> </li>
    /// </ul>
    pub fn model_package_group_status(
        &self,
    ) -> std::option::Option<&crate::types::ModelPackageGroupStatus> {
        self.model_package_group_status.as_ref()
    }
    /// <p>A list of the tags associated with the model group. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging Amazon Web Services resources</a> in the <i>Amazon Web Services General Reference Guide</i>.</p>
    pub fn tags(&self) -> std::option::Option<&[crate::types::Tag]> {
        self.tags.as_deref()
    }
}
impl ModelPackageGroup {
    /// Creates a new builder-style object to manufacture [`ModelPackageGroup`](crate::types::ModelPackageGroup).
    pub fn builder() -> crate::types::builders::ModelPackageGroupBuilder {
        crate::types::builders::ModelPackageGroupBuilder::default()
    }
}

/// A builder for [`ModelPackageGroup`](crate::types::ModelPackageGroup).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ModelPackageGroupBuilder {
    pub(crate) model_package_group_name: std::option::Option<std::string::String>,
    pub(crate) model_package_group_arn: std::option::Option<std::string::String>,
    pub(crate) model_package_group_description: std::option::Option<std::string::String>,
    pub(crate) creation_time: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) created_by: std::option::Option<crate::types::UserContext>,
    pub(crate) model_package_group_status:
        std::option::Option<crate::types::ModelPackageGroupStatus>,
    pub(crate) tags: std::option::Option<std::vec::Vec<crate::types::Tag>>,
}
impl ModelPackageGroupBuilder {
    /// <p>The name of the model group.</p>
    pub fn model_package_group_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.model_package_group_name = Some(input.into());
        self
    }
    /// <p>The name of the model group.</p>
    pub fn set_model_package_group_name(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.model_package_group_name = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the model group.</p>
    pub fn model_package_group_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.model_package_group_arn = Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the model group.</p>
    pub fn set_model_package_group_arn(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.model_package_group_arn = input;
        self
    }
    /// <p>The description for the model group.</p>
    pub fn model_package_group_description(
        mut self,
        input: impl Into<std::string::String>,
    ) -> Self {
        self.model_package_group_description = Some(input.into());
        self
    }
    /// <p>The description for the model group.</p>
    pub fn set_model_package_group_description(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.model_package_group_description = input;
        self
    }
    /// <p>The time that the model group was created.</p>
    pub fn creation_time(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.creation_time = Some(input);
        self
    }
    /// <p>The time that the model group was created.</p>
    pub fn set_creation_time(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.creation_time = input;
        self
    }
    /// <p>Information about the user who created or modified an experiment, trial, trial component, lineage group, project, or model card.</p>
    pub fn created_by(mut self, input: crate::types::UserContext) -> Self {
        self.created_by = Some(input);
        self
    }
    /// <p>Information about the user who created or modified an experiment, trial, trial component, lineage group, project, or model card.</p>
    pub fn set_created_by(mut self, input: std::option::Option<crate::types::UserContext>) -> Self {
        self.created_by = input;
        self
    }
    /// <p>The status of the model group. This can be one of the following values.</p>
    /// <ul>
    /// <li> <p> <code>PENDING</code> - The model group is pending being created.</p> </li>
    /// <li> <p> <code>IN_PROGRESS</code> - The model group is in the process of being created.</p> </li>
    /// <li> <p> <code>COMPLETED</code> - The model group was successfully created.</p> </li>
    /// <li> <p> <code>FAILED</code> - The model group failed.</p> </li>
    /// <li> <p> <code>DELETING</code> - The model group is in the process of being deleted.</p> </li>
    /// <li> <p> <code>DELETE_FAILED</code> - SageMaker failed to delete the model group.</p> </li>
    /// </ul>
    pub fn model_package_group_status(
        mut self,
        input: crate::types::ModelPackageGroupStatus,
    ) -> Self {
        self.model_package_group_status = Some(input);
        self
    }
    /// <p>The status of the model group. This can be one of the following values.</p>
    /// <ul>
    /// <li> <p> <code>PENDING</code> - The model group is pending being created.</p> </li>
    /// <li> <p> <code>IN_PROGRESS</code> - The model group is in the process of being created.</p> </li>
    /// <li> <p> <code>COMPLETED</code> - The model group was successfully created.</p> </li>
    /// <li> <p> <code>FAILED</code> - The model group failed.</p> </li>
    /// <li> <p> <code>DELETING</code> - The model group is in the process of being deleted.</p> </li>
    /// <li> <p> <code>DELETE_FAILED</code> - SageMaker failed to delete the model group.</p> </li>
    /// </ul>
    pub fn set_model_package_group_status(
        mut self,
        input: std::option::Option<crate::types::ModelPackageGroupStatus>,
    ) -> Self {
        self.model_package_group_status = input;
        self
    }
    /// Appends an item to `tags`.
    ///
    /// To override the contents of this collection use [`set_tags`](Self::set_tags).
    ///
    /// <p>A list of the tags associated with the model group. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging Amazon Web Services resources</a> in the <i>Amazon Web Services General Reference Guide</i>.</p>
    pub fn tags(mut self, input: crate::types::Tag) -> Self {
        let mut v = self.tags.unwrap_or_default();
        v.push(input);
        self.tags = Some(v);
        self
    }
    /// <p>A list of the tags associated with the model group. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging Amazon Web Services resources</a> in the <i>Amazon Web Services General Reference Guide</i>.</p>
    pub fn set_tags(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::Tag>>,
    ) -> Self {
        self.tags = input;
        self
    }
    /// Consumes the builder and constructs a [`ModelPackageGroup`](crate::types::ModelPackageGroup).
    pub fn build(self) -> crate::types::ModelPackageGroup {
        crate::types::ModelPackageGroup {
            model_package_group_name: self.model_package_group_name,
            model_package_group_arn: self.model_package_group_arn,
            model_package_group_description: self.model_package_group_description,
            creation_time: self.creation_time,
            created_by: self.created_by,
            model_package_group_status: self.model_package_group_status,
            tags: self.tags,
        }
    }
}
