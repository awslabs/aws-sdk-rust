// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Defines the possible values for a continuous hyperparameter.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ContinuousParameterRangeSpecification {
    /// <p>The minimum floating-point value allowed.</p>
    #[doc(hidden)]
    pub min_value: std::option::Option<std::string::String>,
    /// <p>The maximum floating-point value allowed.</p>
    #[doc(hidden)]
    pub max_value: std::option::Option<std::string::String>,
}
impl ContinuousParameterRangeSpecification {
    /// <p>The minimum floating-point value allowed.</p>
    pub fn min_value(&self) -> std::option::Option<&str> {
        self.min_value.as_deref()
    }
    /// <p>The maximum floating-point value allowed.</p>
    pub fn max_value(&self) -> std::option::Option<&str> {
        self.max_value.as_deref()
    }
}
impl ContinuousParameterRangeSpecification {
    /// Creates a new builder-style object to manufacture [`ContinuousParameterRangeSpecification`](crate::types::ContinuousParameterRangeSpecification).
    pub fn builder() -> crate::types::builders::ContinuousParameterRangeSpecificationBuilder {
        crate::types::builders::ContinuousParameterRangeSpecificationBuilder::default()
    }
}

/// A builder for [`ContinuousParameterRangeSpecification`](crate::types::ContinuousParameterRangeSpecification).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ContinuousParameterRangeSpecificationBuilder {
    pub(crate) min_value: std::option::Option<std::string::String>,
    pub(crate) max_value: std::option::Option<std::string::String>,
}
impl ContinuousParameterRangeSpecificationBuilder {
    /// <p>The minimum floating-point value allowed.</p>
    pub fn min_value(mut self, input: impl Into<std::string::String>) -> Self {
        self.min_value = Some(input.into());
        self
    }
    /// <p>The minimum floating-point value allowed.</p>
    pub fn set_min_value(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.min_value = input;
        self
    }
    /// <p>The maximum floating-point value allowed.</p>
    pub fn max_value(mut self, input: impl Into<std::string::String>) -> Self {
        self.max_value = Some(input.into());
        self
    }
    /// <p>The maximum floating-point value allowed.</p>
    pub fn set_max_value(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.max_value = input;
        self
    }
    /// Consumes the builder and constructs a [`ContinuousParameterRangeSpecification`](crate::types::ContinuousParameterRangeSpecification).
    pub fn build(self) -> crate::types::ContinuousParameterRangeSpecification {
        crate::types::ContinuousParameterRangeSpecification {
            min_value: self.min_value,
            max_value: self.max_value,
        }
    }
}
