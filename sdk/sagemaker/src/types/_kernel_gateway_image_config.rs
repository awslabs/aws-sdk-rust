// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The configuration for the file system and kernels in a SageMaker image running as a KernelGateway app.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct KernelGatewayImageConfig {
    /// <p>The specification of the Jupyter kernels in the image.</p>
    #[doc(hidden)]
    pub kernel_specs: std::option::Option<std::vec::Vec<crate::types::KernelSpec>>,
    /// <p>The Amazon Elastic File System (EFS) storage configuration for a SageMaker image.</p>
    #[doc(hidden)]
    pub file_system_config: std::option::Option<crate::types::FileSystemConfig>,
}
impl KernelGatewayImageConfig {
    /// <p>The specification of the Jupyter kernels in the image.</p>
    pub fn kernel_specs(&self) -> std::option::Option<&[crate::types::KernelSpec]> {
        self.kernel_specs.as_deref()
    }
    /// <p>The Amazon Elastic File System (EFS) storage configuration for a SageMaker image.</p>
    pub fn file_system_config(&self) -> std::option::Option<&crate::types::FileSystemConfig> {
        self.file_system_config.as_ref()
    }
}
impl KernelGatewayImageConfig {
    /// Creates a new builder-style object to manufacture [`KernelGatewayImageConfig`](crate::types::KernelGatewayImageConfig).
    pub fn builder() -> crate::types::builders::KernelGatewayImageConfigBuilder {
        crate::types::builders::KernelGatewayImageConfigBuilder::default()
    }
}

/// A builder for [`KernelGatewayImageConfig`](crate::types::KernelGatewayImageConfig).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct KernelGatewayImageConfigBuilder {
    pub(crate) kernel_specs: std::option::Option<std::vec::Vec<crate::types::KernelSpec>>,
    pub(crate) file_system_config: std::option::Option<crate::types::FileSystemConfig>,
}
impl KernelGatewayImageConfigBuilder {
    /// Appends an item to `kernel_specs`.
    ///
    /// To override the contents of this collection use [`set_kernel_specs`](Self::set_kernel_specs).
    ///
    /// <p>The specification of the Jupyter kernels in the image.</p>
    pub fn kernel_specs(mut self, input: crate::types::KernelSpec) -> Self {
        let mut v = self.kernel_specs.unwrap_or_default();
        v.push(input);
        self.kernel_specs = Some(v);
        self
    }
    /// <p>The specification of the Jupyter kernels in the image.</p>
    pub fn set_kernel_specs(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::KernelSpec>>,
    ) -> Self {
        self.kernel_specs = input;
        self
    }
    /// <p>The Amazon Elastic File System (EFS) storage configuration for a SageMaker image.</p>
    pub fn file_system_config(mut self, input: crate::types::FileSystemConfig) -> Self {
        self.file_system_config = Some(input);
        self
    }
    /// <p>The Amazon Elastic File System (EFS) storage configuration for a SageMaker image.</p>
    pub fn set_file_system_config(
        mut self,
        input: std::option::Option<crate::types::FileSystemConfig>,
    ) -> Self {
        self.file_system_config = input;
        self
    }
    /// Consumes the builder and constructs a [`KernelGatewayImageConfig`](crate::types::KernelGatewayImageConfig).
    pub fn build(self) -> crate::types::KernelGatewayImageConfig {
        crate::types::KernelGatewayImageConfig {
            kernel_specs: self.kernel_specs,
            file_system_config: self.file_system_config,
        }
    }
}
