// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// When writing a match expression against `ProcessingInstanceType`, it is important to ensure
/// your code is forward-compatible. That is, if a match arm handles a case for a
/// feature that is supported by the service but has not been represented as an enum
/// variant in a current version of SDK, your code should continue to work when you
/// upgrade SDK to a future version in which the enum does include a variant for that
/// feature.
///
/// Here is an example of how you can make a match expression forward-compatible:
///
/// ```text
/// # let processinginstancetype = unimplemented!();
/// match processinginstancetype {
///     ProcessingInstanceType::MlC42Xlarge => { /* ... */ },
///     ProcessingInstanceType::MlC44Xlarge => { /* ... */ },
///     ProcessingInstanceType::MlC48Xlarge => { /* ... */ },
///     ProcessingInstanceType::MlC4Xlarge => { /* ... */ },
///     ProcessingInstanceType::MlC518Xlarge => { /* ... */ },
///     ProcessingInstanceType::MlC52Xlarge => { /* ... */ },
///     ProcessingInstanceType::MlC54Xlarge => { /* ... */ },
///     ProcessingInstanceType::MlC59Xlarge => { /* ... */ },
///     ProcessingInstanceType::MlC5Xlarge => { /* ... */ },
///     ProcessingInstanceType::MlC6I12Xlarge => { /* ... */ },
///     ProcessingInstanceType::MlC6I16Xlarge => { /* ... */ },
///     ProcessingInstanceType::MlC6I24Xlarge => { /* ... */ },
///     ProcessingInstanceType::MlC6I2Xlarge => { /* ... */ },
///     ProcessingInstanceType::MlC6I32Xlarge => { /* ... */ },
///     ProcessingInstanceType::MlC6I4Xlarge => { /* ... */ },
///     ProcessingInstanceType::MlC6I8Xlarge => { /* ... */ },
///     ProcessingInstanceType::MlC6IXlarge => { /* ... */ },
///     ProcessingInstanceType::MlC7I12Xlarge => { /* ... */ },
///     ProcessingInstanceType::MlC7I16Xlarge => { /* ... */ },
///     ProcessingInstanceType::MlC7I24Xlarge => { /* ... */ },
///     ProcessingInstanceType::MlC7I2Xlarge => { /* ... */ },
///     ProcessingInstanceType::MlC7I48Xlarge => { /* ... */ },
///     ProcessingInstanceType::MlC7I4Xlarge => { /* ... */ },
///     ProcessingInstanceType::MlC7I8Xlarge => { /* ... */ },
///     ProcessingInstanceType::MlC7ILarge => { /* ... */ },
///     ProcessingInstanceType::MlC7IXlarge => { /* ... */ },
///     ProcessingInstanceType::MlG4Dn12Xlarge => { /* ... */ },
///     ProcessingInstanceType::MlG4Dn16Xlarge => { /* ... */ },
///     ProcessingInstanceType::MlG4Dn2Xlarge => { /* ... */ },
///     ProcessingInstanceType::MlG4Dn4Xlarge => { /* ... */ },
///     ProcessingInstanceType::MlG4Dn8Xlarge => { /* ... */ },
///     ProcessingInstanceType::MlG4DnXlarge => { /* ... */ },
///     ProcessingInstanceType::MlG512Xlarge => { /* ... */ },
///     ProcessingInstanceType::MlG516Xlarge => { /* ... */ },
///     ProcessingInstanceType::MlG524Xlarge => { /* ... */ },
///     ProcessingInstanceType::MlG52Xlarge => { /* ... */ },
///     ProcessingInstanceType::MlG548Xlarge => { /* ... */ },
///     ProcessingInstanceType::MlG54Xlarge => { /* ... */ },
///     ProcessingInstanceType::MlG58Xlarge => { /* ... */ },
///     ProcessingInstanceType::MlG5Xlarge => { /* ... */ },
///     ProcessingInstanceType::MlG612Xlarge => { /* ... */ },
///     ProcessingInstanceType::MlG616Xlarge => { /* ... */ },
///     ProcessingInstanceType::MlG624Xlarge => { /* ... */ },
///     ProcessingInstanceType::MlG62Xlarge => { /* ... */ },
///     ProcessingInstanceType::MlG648Xlarge => { /* ... */ },
///     ProcessingInstanceType::MlG64Xlarge => { /* ... */ },
///     ProcessingInstanceType::MlG68Xlarge => { /* ... */ },
///     ProcessingInstanceType::MlG6Xlarge => { /* ... */ },
///     ProcessingInstanceType::MlG6E12Xlarge => { /* ... */ },
///     ProcessingInstanceType::MlG6E16Xlarge => { /* ... */ },
///     ProcessingInstanceType::MlG6E24Xlarge => { /* ... */ },
///     ProcessingInstanceType::MlG6E2Xlarge => { /* ... */ },
///     ProcessingInstanceType::MlG6E48Xlarge => { /* ... */ },
///     ProcessingInstanceType::MlG6E4Xlarge => { /* ... */ },
///     ProcessingInstanceType::MlG6E8Xlarge => { /* ... */ },
///     ProcessingInstanceType::MlG6EXlarge => { /* ... */ },
///     ProcessingInstanceType::MlM410Xlarge => { /* ... */ },
///     ProcessingInstanceType::MlM416Xlarge => { /* ... */ },
///     ProcessingInstanceType::MlM42Xlarge => { /* ... */ },
///     ProcessingInstanceType::MlM44Xlarge => { /* ... */ },
///     ProcessingInstanceType::MlM4Xlarge => { /* ... */ },
///     ProcessingInstanceType::MlM512Xlarge => { /* ... */ },
///     ProcessingInstanceType::MlM524Xlarge => { /* ... */ },
///     ProcessingInstanceType::MlM52Xlarge => { /* ... */ },
///     ProcessingInstanceType::MlM54Xlarge => { /* ... */ },
///     ProcessingInstanceType::MlM5Large => { /* ... */ },
///     ProcessingInstanceType::MlM5Xlarge => { /* ... */ },
///     ProcessingInstanceType::MlM6I12Xlarge => { /* ... */ },
///     ProcessingInstanceType::MlM6I16Xlarge => { /* ... */ },
///     ProcessingInstanceType::MlM6I24Xlarge => { /* ... */ },
///     ProcessingInstanceType::MlM6I2Xlarge => { /* ... */ },
///     ProcessingInstanceType::MlM6I32Xlarge => { /* ... */ },
///     ProcessingInstanceType::MlM6I4Xlarge => { /* ... */ },
///     ProcessingInstanceType::MlM6I8Xlarge => { /* ... */ },
///     ProcessingInstanceType::MlM6ILarge => { /* ... */ },
///     ProcessingInstanceType::MlM6IXlarge => { /* ... */ },
///     ProcessingInstanceType::MlM7I12Xlarge => { /* ... */ },
///     ProcessingInstanceType::MlM7I16Xlarge => { /* ... */ },
///     ProcessingInstanceType::MlM7I24Xlarge => { /* ... */ },
///     ProcessingInstanceType::MlM7I2Xlarge => { /* ... */ },
///     ProcessingInstanceType::MlM7I48Xlarge => { /* ... */ },
///     ProcessingInstanceType::MlM7I4Xlarge => { /* ... */ },
///     ProcessingInstanceType::MlM7I8Xlarge => { /* ... */ },
///     ProcessingInstanceType::MlM7ILarge => { /* ... */ },
///     ProcessingInstanceType::MlM7IXlarge => { /* ... */ },
///     ProcessingInstanceType::MlP216Xlarge => { /* ... */ },
///     ProcessingInstanceType::MlP28Xlarge => { /* ... */ },
///     ProcessingInstanceType::MlP2Xlarge => { /* ... */ },
///     ProcessingInstanceType::MlP316Xlarge => { /* ... */ },
///     ProcessingInstanceType::MlP32Xlarge => { /* ... */ },
///     ProcessingInstanceType::MlP38Xlarge => { /* ... */ },
///     ProcessingInstanceType::MlP54Xlarge => { /* ... */ },
///     ProcessingInstanceType::MlR512Xlarge => { /* ... */ },
///     ProcessingInstanceType::MlR516Xlarge => { /* ... */ },
///     ProcessingInstanceType::MlR524Xlarge => { /* ... */ },
///     ProcessingInstanceType::MlR52Xlarge => { /* ... */ },
///     ProcessingInstanceType::MlR54Xlarge => { /* ... */ },
///     ProcessingInstanceType::MlR58Xlarge => { /* ... */ },
///     ProcessingInstanceType::MlR5Large => { /* ... */ },
///     ProcessingInstanceType::MlR5Xlarge => { /* ... */ },
///     ProcessingInstanceType::MlR5D12Xlarge => { /* ... */ },
///     ProcessingInstanceType::MlR5D16Xlarge => { /* ... */ },
///     ProcessingInstanceType::MlR5D24Xlarge => { /* ... */ },
///     ProcessingInstanceType::MlR5D2Xlarge => { /* ... */ },
///     ProcessingInstanceType::MlR5D4Xlarge => { /* ... */ },
///     ProcessingInstanceType::MlR5D8Xlarge => { /* ... */ },
///     ProcessingInstanceType::MlR5DLarge => { /* ... */ },
///     ProcessingInstanceType::MlR5DXlarge => { /* ... */ },
///     ProcessingInstanceType::MlR7I12Xlarge => { /* ... */ },
///     ProcessingInstanceType::MlR7I16Xlarge => { /* ... */ },
///     ProcessingInstanceType::MlR7I24Xlarge => { /* ... */ },
///     ProcessingInstanceType::MlR7I2Xlarge => { /* ... */ },
///     ProcessingInstanceType::MlR7I48Xlarge => { /* ... */ },
///     ProcessingInstanceType::MlR7I4Xlarge => { /* ... */ },
///     ProcessingInstanceType::MlR7I8Xlarge => { /* ... */ },
///     ProcessingInstanceType::MlR7ILarge => { /* ... */ },
///     ProcessingInstanceType::MlR7IXlarge => { /* ... */ },
///     ProcessingInstanceType::MlT32Xlarge => { /* ... */ },
///     ProcessingInstanceType::MlT3Large => { /* ... */ },
///     ProcessingInstanceType::MlT3Medium => { /* ... */ },
///     ProcessingInstanceType::MlT3Xlarge => { /* ... */ },
///     other @ _ if other.as_str() == "NewFeature" => { /* handles a case for `NewFeature` */ },
///     _ => { /* ... */ },
/// }
/// ```
/// The above code demonstrates that when `processinginstancetype` represents
/// `NewFeature`, the execution path will lead to the second last match arm,
/// even though the enum does not contain a variant `ProcessingInstanceType::NewFeature`
/// in the current version of SDK. The reason is that the variable `other`,
/// created by the `@` operator, is bound to
/// `ProcessingInstanceType::Unknown(UnknownVariantValue("NewFeature".to_owned()))`
/// and calling `as_str` on it yields `"NewFeature"`.
/// This match expression is forward-compatible when executed with a newer
/// version of SDK where the variant `ProcessingInstanceType::NewFeature` is defined.
/// Specifically, when `processinginstancetype` represents `NewFeature`,
/// the execution path will hit the second last match arm as before by virtue of
/// calling `as_str` on `ProcessingInstanceType::NewFeature` also yielding `"NewFeature"`.
///
/// Explicitly matching on the `Unknown` variant should
/// be avoided for two reasons:
/// - The inner data `UnknownVariantValue` is opaque, and no further information can be extracted.
/// - It might inadvertently shadow other intended match arms.
///
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(
    ::std::clone::Clone, ::std::cmp::Eq, ::std::cmp::Ord, ::std::cmp::PartialEq, ::std::cmp::PartialOrd, ::std::fmt::Debug, ::std::hash::Hash,
)]
pub enum ProcessingInstanceType {
    #[allow(missing_docs)] // documentation missing in model
    MlC42Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlC44Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlC48Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlC4Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlC518Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlC52Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlC54Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlC59Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlC5Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlC6I12Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlC6I16Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlC6I24Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlC6I2Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlC6I32Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlC6I4Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlC6I8Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlC6IXlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlC7I12Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlC7I16Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlC7I24Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlC7I2Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlC7I48Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlC7I4Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlC7I8Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlC7ILarge,
    #[allow(missing_docs)] // documentation missing in model
    MlC7IXlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlG4Dn12Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlG4Dn16Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlG4Dn2Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlG4Dn4Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlG4Dn8Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlG4DnXlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlG512Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlG516Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlG524Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlG52Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlG548Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlG54Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlG58Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlG5Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlG612Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlG616Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlG624Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlG62Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlG648Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlG64Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlG68Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlG6Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlG6E12Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlG6E16Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlG6E24Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlG6E2Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlG6E48Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlG6E4Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlG6E8Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlG6EXlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlM410Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlM416Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlM42Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlM44Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlM4Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlM512Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlM524Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlM52Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlM54Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlM5Large,
    #[allow(missing_docs)] // documentation missing in model
    MlM5Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlM6I12Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlM6I16Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlM6I24Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlM6I2Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlM6I32Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlM6I4Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlM6I8Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlM6ILarge,
    #[allow(missing_docs)] // documentation missing in model
    MlM6IXlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlM7I12Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlM7I16Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlM7I24Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlM7I2Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlM7I48Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlM7I4Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlM7I8Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlM7ILarge,
    #[allow(missing_docs)] // documentation missing in model
    MlM7IXlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlP216Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlP28Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlP2Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlP316Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlP32Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlP38Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlP54Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlR512Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlR516Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlR524Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlR52Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlR54Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlR58Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlR5Large,
    #[allow(missing_docs)] // documentation missing in model
    MlR5Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlR5D12Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlR5D16Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlR5D24Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlR5D2Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlR5D4Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlR5D8Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlR5DLarge,
    #[allow(missing_docs)] // documentation missing in model
    MlR5DXlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlR7I12Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlR7I16Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlR7I24Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlR7I2Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlR7I48Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlR7I4Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlR7I8Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlR7ILarge,
    #[allow(missing_docs)] // documentation missing in model
    MlR7IXlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlT32Xlarge,
    #[allow(missing_docs)] // documentation missing in model
    MlT3Large,
    #[allow(missing_docs)] // documentation missing in model
    MlT3Medium,
    #[allow(missing_docs)] // documentation missing in model
    MlT3Xlarge,
    /// `Unknown` contains new variants that have been added since this code was generated.
    #[deprecated(note = "Don't directly match on `Unknown`. See the docs on this enum for the correct way to handle unknown variants.")]
    Unknown(crate::primitives::sealed_enum_unknown::UnknownVariantValue),
}
impl ::std::convert::From<&str> for ProcessingInstanceType {
    fn from(s: &str) -> Self {
        match s {
            "ml.c4.2xlarge" => ProcessingInstanceType::MlC42Xlarge,
            "ml.c4.4xlarge" => ProcessingInstanceType::MlC44Xlarge,
            "ml.c4.8xlarge" => ProcessingInstanceType::MlC48Xlarge,
            "ml.c4.xlarge" => ProcessingInstanceType::MlC4Xlarge,
            "ml.c5.18xlarge" => ProcessingInstanceType::MlC518Xlarge,
            "ml.c5.2xlarge" => ProcessingInstanceType::MlC52Xlarge,
            "ml.c5.4xlarge" => ProcessingInstanceType::MlC54Xlarge,
            "ml.c5.9xlarge" => ProcessingInstanceType::MlC59Xlarge,
            "ml.c5.xlarge" => ProcessingInstanceType::MlC5Xlarge,
            "ml.c6i.12xlarge" => ProcessingInstanceType::MlC6I12Xlarge,
            "ml.c6i.16xlarge" => ProcessingInstanceType::MlC6I16Xlarge,
            "ml.c6i.24xlarge" => ProcessingInstanceType::MlC6I24Xlarge,
            "ml.c6i.2xlarge" => ProcessingInstanceType::MlC6I2Xlarge,
            "ml.c6i.32xlarge" => ProcessingInstanceType::MlC6I32Xlarge,
            "ml.c6i.4xlarge" => ProcessingInstanceType::MlC6I4Xlarge,
            "ml.c6i.8xlarge" => ProcessingInstanceType::MlC6I8Xlarge,
            "ml.c6i.xlarge" => ProcessingInstanceType::MlC6IXlarge,
            "ml.c7i.12xlarge" => ProcessingInstanceType::MlC7I12Xlarge,
            "ml.c7i.16xlarge" => ProcessingInstanceType::MlC7I16Xlarge,
            "ml.c7i.24xlarge" => ProcessingInstanceType::MlC7I24Xlarge,
            "ml.c7i.2xlarge" => ProcessingInstanceType::MlC7I2Xlarge,
            "ml.c7i.48xlarge" => ProcessingInstanceType::MlC7I48Xlarge,
            "ml.c7i.4xlarge" => ProcessingInstanceType::MlC7I4Xlarge,
            "ml.c7i.8xlarge" => ProcessingInstanceType::MlC7I8Xlarge,
            "ml.c7i.large" => ProcessingInstanceType::MlC7ILarge,
            "ml.c7i.xlarge" => ProcessingInstanceType::MlC7IXlarge,
            "ml.g4dn.12xlarge" => ProcessingInstanceType::MlG4Dn12Xlarge,
            "ml.g4dn.16xlarge" => ProcessingInstanceType::MlG4Dn16Xlarge,
            "ml.g4dn.2xlarge" => ProcessingInstanceType::MlG4Dn2Xlarge,
            "ml.g4dn.4xlarge" => ProcessingInstanceType::MlG4Dn4Xlarge,
            "ml.g4dn.8xlarge" => ProcessingInstanceType::MlG4Dn8Xlarge,
            "ml.g4dn.xlarge" => ProcessingInstanceType::MlG4DnXlarge,
            "ml.g5.12xlarge" => ProcessingInstanceType::MlG512Xlarge,
            "ml.g5.16xlarge" => ProcessingInstanceType::MlG516Xlarge,
            "ml.g5.24xlarge" => ProcessingInstanceType::MlG524Xlarge,
            "ml.g5.2xlarge" => ProcessingInstanceType::MlG52Xlarge,
            "ml.g5.48xlarge" => ProcessingInstanceType::MlG548Xlarge,
            "ml.g5.4xlarge" => ProcessingInstanceType::MlG54Xlarge,
            "ml.g5.8xlarge" => ProcessingInstanceType::MlG58Xlarge,
            "ml.g5.xlarge" => ProcessingInstanceType::MlG5Xlarge,
            "ml.g6.12xlarge" => ProcessingInstanceType::MlG612Xlarge,
            "ml.g6.16xlarge" => ProcessingInstanceType::MlG616Xlarge,
            "ml.g6.24xlarge" => ProcessingInstanceType::MlG624Xlarge,
            "ml.g6.2xlarge" => ProcessingInstanceType::MlG62Xlarge,
            "ml.g6.48xlarge" => ProcessingInstanceType::MlG648Xlarge,
            "ml.g6.4xlarge" => ProcessingInstanceType::MlG64Xlarge,
            "ml.g6.8xlarge" => ProcessingInstanceType::MlG68Xlarge,
            "ml.g6.xlarge" => ProcessingInstanceType::MlG6Xlarge,
            "ml.g6e.12xlarge" => ProcessingInstanceType::MlG6E12Xlarge,
            "ml.g6e.16xlarge" => ProcessingInstanceType::MlG6E16Xlarge,
            "ml.g6e.24xlarge" => ProcessingInstanceType::MlG6E24Xlarge,
            "ml.g6e.2xlarge" => ProcessingInstanceType::MlG6E2Xlarge,
            "ml.g6e.48xlarge" => ProcessingInstanceType::MlG6E48Xlarge,
            "ml.g6e.4xlarge" => ProcessingInstanceType::MlG6E4Xlarge,
            "ml.g6e.8xlarge" => ProcessingInstanceType::MlG6E8Xlarge,
            "ml.g6e.xlarge" => ProcessingInstanceType::MlG6EXlarge,
            "ml.m4.10xlarge" => ProcessingInstanceType::MlM410Xlarge,
            "ml.m4.16xlarge" => ProcessingInstanceType::MlM416Xlarge,
            "ml.m4.2xlarge" => ProcessingInstanceType::MlM42Xlarge,
            "ml.m4.4xlarge" => ProcessingInstanceType::MlM44Xlarge,
            "ml.m4.xlarge" => ProcessingInstanceType::MlM4Xlarge,
            "ml.m5.12xlarge" => ProcessingInstanceType::MlM512Xlarge,
            "ml.m5.24xlarge" => ProcessingInstanceType::MlM524Xlarge,
            "ml.m5.2xlarge" => ProcessingInstanceType::MlM52Xlarge,
            "ml.m5.4xlarge" => ProcessingInstanceType::MlM54Xlarge,
            "ml.m5.large" => ProcessingInstanceType::MlM5Large,
            "ml.m5.xlarge" => ProcessingInstanceType::MlM5Xlarge,
            "ml.m6i.12xlarge" => ProcessingInstanceType::MlM6I12Xlarge,
            "ml.m6i.16xlarge" => ProcessingInstanceType::MlM6I16Xlarge,
            "ml.m6i.24xlarge" => ProcessingInstanceType::MlM6I24Xlarge,
            "ml.m6i.2xlarge" => ProcessingInstanceType::MlM6I2Xlarge,
            "ml.m6i.32xlarge" => ProcessingInstanceType::MlM6I32Xlarge,
            "ml.m6i.4xlarge" => ProcessingInstanceType::MlM6I4Xlarge,
            "ml.m6i.8xlarge" => ProcessingInstanceType::MlM6I8Xlarge,
            "ml.m6i.large" => ProcessingInstanceType::MlM6ILarge,
            "ml.m6i.xlarge" => ProcessingInstanceType::MlM6IXlarge,
            "ml.m7i.12xlarge" => ProcessingInstanceType::MlM7I12Xlarge,
            "ml.m7i.16xlarge" => ProcessingInstanceType::MlM7I16Xlarge,
            "ml.m7i.24xlarge" => ProcessingInstanceType::MlM7I24Xlarge,
            "ml.m7i.2xlarge" => ProcessingInstanceType::MlM7I2Xlarge,
            "ml.m7i.48xlarge" => ProcessingInstanceType::MlM7I48Xlarge,
            "ml.m7i.4xlarge" => ProcessingInstanceType::MlM7I4Xlarge,
            "ml.m7i.8xlarge" => ProcessingInstanceType::MlM7I8Xlarge,
            "ml.m7i.large" => ProcessingInstanceType::MlM7ILarge,
            "ml.m7i.xlarge" => ProcessingInstanceType::MlM7IXlarge,
            "ml.p2.16xlarge" => ProcessingInstanceType::MlP216Xlarge,
            "ml.p2.8xlarge" => ProcessingInstanceType::MlP28Xlarge,
            "ml.p2.xlarge" => ProcessingInstanceType::MlP2Xlarge,
            "ml.p3.16xlarge" => ProcessingInstanceType::MlP316Xlarge,
            "ml.p3.2xlarge" => ProcessingInstanceType::MlP32Xlarge,
            "ml.p3.8xlarge" => ProcessingInstanceType::MlP38Xlarge,
            "ml.p5.4xlarge" => ProcessingInstanceType::MlP54Xlarge,
            "ml.r5.12xlarge" => ProcessingInstanceType::MlR512Xlarge,
            "ml.r5.16xlarge" => ProcessingInstanceType::MlR516Xlarge,
            "ml.r5.24xlarge" => ProcessingInstanceType::MlR524Xlarge,
            "ml.r5.2xlarge" => ProcessingInstanceType::MlR52Xlarge,
            "ml.r5.4xlarge" => ProcessingInstanceType::MlR54Xlarge,
            "ml.r5.8xlarge" => ProcessingInstanceType::MlR58Xlarge,
            "ml.r5.large" => ProcessingInstanceType::MlR5Large,
            "ml.r5.xlarge" => ProcessingInstanceType::MlR5Xlarge,
            "ml.r5d.12xlarge" => ProcessingInstanceType::MlR5D12Xlarge,
            "ml.r5d.16xlarge" => ProcessingInstanceType::MlR5D16Xlarge,
            "ml.r5d.24xlarge" => ProcessingInstanceType::MlR5D24Xlarge,
            "ml.r5d.2xlarge" => ProcessingInstanceType::MlR5D2Xlarge,
            "ml.r5d.4xlarge" => ProcessingInstanceType::MlR5D4Xlarge,
            "ml.r5d.8xlarge" => ProcessingInstanceType::MlR5D8Xlarge,
            "ml.r5d.large" => ProcessingInstanceType::MlR5DLarge,
            "ml.r5d.xlarge" => ProcessingInstanceType::MlR5DXlarge,
            "ml.r7i.12xlarge" => ProcessingInstanceType::MlR7I12Xlarge,
            "ml.r7i.16xlarge" => ProcessingInstanceType::MlR7I16Xlarge,
            "ml.r7i.24xlarge" => ProcessingInstanceType::MlR7I24Xlarge,
            "ml.r7i.2xlarge" => ProcessingInstanceType::MlR7I2Xlarge,
            "ml.r7i.48xlarge" => ProcessingInstanceType::MlR7I48Xlarge,
            "ml.r7i.4xlarge" => ProcessingInstanceType::MlR7I4Xlarge,
            "ml.r7i.8xlarge" => ProcessingInstanceType::MlR7I8Xlarge,
            "ml.r7i.large" => ProcessingInstanceType::MlR7ILarge,
            "ml.r7i.xlarge" => ProcessingInstanceType::MlR7IXlarge,
            "ml.t3.2xlarge" => ProcessingInstanceType::MlT32Xlarge,
            "ml.t3.large" => ProcessingInstanceType::MlT3Large,
            "ml.t3.medium" => ProcessingInstanceType::MlT3Medium,
            "ml.t3.xlarge" => ProcessingInstanceType::MlT3Xlarge,
            other => ProcessingInstanceType::Unknown(crate::primitives::sealed_enum_unknown::UnknownVariantValue(other.to_owned())),
        }
    }
}
impl ::std::str::FromStr for ProcessingInstanceType {
    type Err = ::std::convert::Infallible;

    fn from_str(s: &str) -> ::std::result::Result<Self, <Self as ::std::str::FromStr>::Err> {
        ::std::result::Result::Ok(ProcessingInstanceType::from(s))
    }
}
impl ProcessingInstanceType {
    /// Returns the `&str` value of the enum member.
    pub fn as_str(&self) -> &str {
        match self {
            ProcessingInstanceType::MlC42Xlarge => "ml.c4.2xlarge",
            ProcessingInstanceType::MlC44Xlarge => "ml.c4.4xlarge",
            ProcessingInstanceType::MlC48Xlarge => "ml.c4.8xlarge",
            ProcessingInstanceType::MlC4Xlarge => "ml.c4.xlarge",
            ProcessingInstanceType::MlC518Xlarge => "ml.c5.18xlarge",
            ProcessingInstanceType::MlC52Xlarge => "ml.c5.2xlarge",
            ProcessingInstanceType::MlC54Xlarge => "ml.c5.4xlarge",
            ProcessingInstanceType::MlC59Xlarge => "ml.c5.9xlarge",
            ProcessingInstanceType::MlC5Xlarge => "ml.c5.xlarge",
            ProcessingInstanceType::MlC6I12Xlarge => "ml.c6i.12xlarge",
            ProcessingInstanceType::MlC6I16Xlarge => "ml.c6i.16xlarge",
            ProcessingInstanceType::MlC6I24Xlarge => "ml.c6i.24xlarge",
            ProcessingInstanceType::MlC6I2Xlarge => "ml.c6i.2xlarge",
            ProcessingInstanceType::MlC6I32Xlarge => "ml.c6i.32xlarge",
            ProcessingInstanceType::MlC6I4Xlarge => "ml.c6i.4xlarge",
            ProcessingInstanceType::MlC6I8Xlarge => "ml.c6i.8xlarge",
            ProcessingInstanceType::MlC6IXlarge => "ml.c6i.xlarge",
            ProcessingInstanceType::MlC7I12Xlarge => "ml.c7i.12xlarge",
            ProcessingInstanceType::MlC7I16Xlarge => "ml.c7i.16xlarge",
            ProcessingInstanceType::MlC7I24Xlarge => "ml.c7i.24xlarge",
            ProcessingInstanceType::MlC7I2Xlarge => "ml.c7i.2xlarge",
            ProcessingInstanceType::MlC7I48Xlarge => "ml.c7i.48xlarge",
            ProcessingInstanceType::MlC7I4Xlarge => "ml.c7i.4xlarge",
            ProcessingInstanceType::MlC7I8Xlarge => "ml.c7i.8xlarge",
            ProcessingInstanceType::MlC7ILarge => "ml.c7i.large",
            ProcessingInstanceType::MlC7IXlarge => "ml.c7i.xlarge",
            ProcessingInstanceType::MlG4Dn12Xlarge => "ml.g4dn.12xlarge",
            ProcessingInstanceType::MlG4Dn16Xlarge => "ml.g4dn.16xlarge",
            ProcessingInstanceType::MlG4Dn2Xlarge => "ml.g4dn.2xlarge",
            ProcessingInstanceType::MlG4Dn4Xlarge => "ml.g4dn.4xlarge",
            ProcessingInstanceType::MlG4Dn8Xlarge => "ml.g4dn.8xlarge",
            ProcessingInstanceType::MlG4DnXlarge => "ml.g4dn.xlarge",
            ProcessingInstanceType::MlG512Xlarge => "ml.g5.12xlarge",
            ProcessingInstanceType::MlG516Xlarge => "ml.g5.16xlarge",
            ProcessingInstanceType::MlG524Xlarge => "ml.g5.24xlarge",
            ProcessingInstanceType::MlG52Xlarge => "ml.g5.2xlarge",
            ProcessingInstanceType::MlG548Xlarge => "ml.g5.48xlarge",
            ProcessingInstanceType::MlG54Xlarge => "ml.g5.4xlarge",
            ProcessingInstanceType::MlG58Xlarge => "ml.g5.8xlarge",
            ProcessingInstanceType::MlG5Xlarge => "ml.g5.xlarge",
            ProcessingInstanceType::MlG612Xlarge => "ml.g6.12xlarge",
            ProcessingInstanceType::MlG616Xlarge => "ml.g6.16xlarge",
            ProcessingInstanceType::MlG624Xlarge => "ml.g6.24xlarge",
            ProcessingInstanceType::MlG62Xlarge => "ml.g6.2xlarge",
            ProcessingInstanceType::MlG648Xlarge => "ml.g6.48xlarge",
            ProcessingInstanceType::MlG64Xlarge => "ml.g6.4xlarge",
            ProcessingInstanceType::MlG68Xlarge => "ml.g6.8xlarge",
            ProcessingInstanceType::MlG6Xlarge => "ml.g6.xlarge",
            ProcessingInstanceType::MlG6E12Xlarge => "ml.g6e.12xlarge",
            ProcessingInstanceType::MlG6E16Xlarge => "ml.g6e.16xlarge",
            ProcessingInstanceType::MlG6E24Xlarge => "ml.g6e.24xlarge",
            ProcessingInstanceType::MlG6E2Xlarge => "ml.g6e.2xlarge",
            ProcessingInstanceType::MlG6E48Xlarge => "ml.g6e.48xlarge",
            ProcessingInstanceType::MlG6E4Xlarge => "ml.g6e.4xlarge",
            ProcessingInstanceType::MlG6E8Xlarge => "ml.g6e.8xlarge",
            ProcessingInstanceType::MlG6EXlarge => "ml.g6e.xlarge",
            ProcessingInstanceType::MlM410Xlarge => "ml.m4.10xlarge",
            ProcessingInstanceType::MlM416Xlarge => "ml.m4.16xlarge",
            ProcessingInstanceType::MlM42Xlarge => "ml.m4.2xlarge",
            ProcessingInstanceType::MlM44Xlarge => "ml.m4.4xlarge",
            ProcessingInstanceType::MlM4Xlarge => "ml.m4.xlarge",
            ProcessingInstanceType::MlM512Xlarge => "ml.m5.12xlarge",
            ProcessingInstanceType::MlM524Xlarge => "ml.m5.24xlarge",
            ProcessingInstanceType::MlM52Xlarge => "ml.m5.2xlarge",
            ProcessingInstanceType::MlM54Xlarge => "ml.m5.4xlarge",
            ProcessingInstanceType::MlM5Large => "ml.m5.large",
            ProcessingInstanceType::MlM5Xlarge => "ml.m5.xlarge",
            ProcessingInstanceType::MlM6I12Xlarge => "ml.m6i.12xlarge",
            ProcessingInstanceType::MlM6I16Xlarge => "ml.m6i.16xlarge",
            ProcessingInstanceType::MlM6I24Xlarge => "ml.m6i.24xlarge",
            ProcessingInstanceType::MlM6I2Xlarge => "ml.m6i.2xlarge",
            ProcessingInstanceType::MlM6I32Xlarge => "ml.m6i.32xlarge",
            ProcessingInstanceType::MlM6I4Xlarge => "ml.m6i.4xlarge",
            ProcessingInstanceType::MlM6I8Xlarge => "ml.m6i.8xlarge",
            ProcessingInstanceType::MlM6ILarge => "ml.m6i.large",
            ProcessingInstanceType::MlM6IXlarge => "ml.m6i.xlarge",
            ProcessingInstanceType::MlM7I12Xlarge => "ml.m7i.12xlarge",
            ProcessingInstanceType::MlM7I16Xlarge => "ml.m7i.16xlarge",
            ProcessingInstanceType::MlM7I24Xlarge => "ml.m7i.24xlarge",
            ProcessingInstanceType::MlM7I2Xlarge => "ml.m7i.2xlarge",
            ProcessingInstanceType::MlM7I48Xlarge => "ml.m7i.48xlarge",
            ProcessingInstanceType::MlM7I4Xlarge => "ml.m7i.4xlarge",
            ProcessingInstanceType::MlM7I8Xlarge => "ml.m7i.8xlarge",
            ProcessingInstanceType::MlM7ILarge => "ml.m7i.large",
            ProcessingInstanceType::MlM7IXlarge => "ml.m7i.xlarge",
            ProcessingInstanceType::MlP216Xlarge => "ml.p2.16xlarge",
            ProcessingInstanceType::MlP28Xlarge => "ml.p2.8xlarge",
            ProcessingInstanceType::MlP2Xlarge => "ml.p2.xlarge",
            ProcessingInstanceType::MlP316Xlarge => "ml.p3.16xlarge",
            ProcessingInstanceType::MlP32Xlarge => "ml.p3.2xlarge",
            ProcessingInstanceType::MlP38Xlarge => "ml.p3.8xlarge",
            ProcessingInstanceType::MlP54Xlarge => "ml.p5.4xlarge",
            ProcessingInstanceType::MlR512Xlarge => "ml.r5.12xlarge",
            ProcessingInstanceType::MlR516Xlarge => "ml.r5.16xlarge",
            ProcessingInstanceType::MlR524Xlarge => "ml.r5.24xlarge",
            ProcessingInstanceType::MlR52Xlarge => "ml.r5.2xlarge",
            ProcessingInstanceType::MlR54Xlarge => "ml.r5.4xlarge",
            ProcessingInstanceType::MlR58Xlarge => "ml.r5.8xlarge",
            ProcessingInstanceType::MlR5Large => "ml.r5.large",
            ProcessingInstanceType::MlR5Xlarge => "ml.r5.xlarge",
            ProcessingInstanceType::MlR5D12Xlarge => "ml.r5d.12xlarge",
            ProcessingInstanceType::MlR5D16Xlarge => "ml.r5d.16xlarge",
            ProcessingInstanceType::MlR5D24Xlarge => "ml.r5d.24xlarge",
            ProcessingInstanceType::MlR5D2Xlarge => "ml.r5d.2xlarge",
            ProcessingInstanceType::MlR5D4Xlarge => "ml.r5d.4xlarge",
            ProcessingInstanceType::MlR5D8Xlarge => "ml.r5d.8xlarge",
            ProcessingInstanceType::MlR5DLarge => "ml.r5d.large",
            ProcessingInstanceType::MlR5DXlarge => "ml.r5d.xlarge",
            ProcessingInstanceType::MlR7I12Xlarge => "ml.r7i.12xlarge",
            ProcessingInstanceType::MlR7I16Xlarge => "ml.r7i.16xlarge",
            ProcessingInstanceType::MlR7I24Xlarge => "ml.r7i.24xlarge",
            ProcessingInstanceType::MlR7I2Xlarge => "ml.r7i.2xlarge",
            ProcessingInstanceType::MlR7I48Xlarge => "ml.r7i.48xlarge",
            ProcessingInstanceType::MlR7I4Xlarge => "ml.r7i.4xlarge",
            ProcessingInstanceType::MlR7I8Xlarge => "ml.r7i.8xlarge",
            ProcessingInstanceType::MlR7ILarge => "ml.r7i.large",
            ProcessingInstanceType::MlR7IXlarge => "ml.r7i.xlarge",
            ProcessingInstanceType::MlT32Xlarge => "ml.t3.2xlarge",
            ProcessingInstanceType::MlT3Large => "ml.t3.large",
            ProcessingInstanceType::MlT3Medium => "ml.t3.medium",
            ProcessingInstanceType::MlT3Xlarge => "ml.t3.xlarge",
            ProcessingInstanceType::Unknown(value) => value.as_str(),
        }
    }
    /// Returns all the `&str` representations of the enum members.
    pub const fn values() -> &'static [&'static str] {
        &[
            "ml.c4.2xlarge",
            "ml.c4.4xlarge",
            "ml.c4.8xlarge",
            "ml.c4.xlarge",
            "ml.c5.18xlarge",
            "ml.c5.2xlarge",
            "ml.c5.4xlarge",
            "ml.c5.9xlarge",
            "ml.c5.xlarge",
            "ml.c6i.12xlarge",
            "ml.c6i.16xlarge",
            "ml.c6i.24xlarge",
            "ml.c6i.2xlarge",
            "ml.c6i.32xlarge",
            "ml.c6i.4xlarge",
            "ml.c6i.8xlarge",
            "ml.c6i.xlarge",
            "ml.c7i.12xlarge",
            "ml.c7i.16xlarge",
            "ml.c7i.24xlarge",
            "ml.c7i.2xlarge",
            "ml.c7i.48xlarge",
            "ml.c7i.4xlarge",
            "ml.c7i.8xlarge",
            "ml.c7i.large",
            "ml.c7i.xlarge",
            "ml.g4dn.12xlarge",
            "ml.g4dn.16xlarge",
            "ml.g4dn.2xlarge",
            "ml.g4dn.4xlarge",
            "ml.g4dn.8xlarge",
            "ml.g4dn.xlarge",
            "ml.g5.12xlarge",
            "ml.g5.16xlarge",
            "ml.g5.24xlarge",
            "ml.g5.2xlarge",
            "ml.g5.48xlarge",
            "ml.g5.4xlarge",
            "ml.g5.8xlarge",
            "ml.g5.xlarge",
            "ml.g6.12xlarge",
            "ml.g6.16xlarge",
            "ml.g6.24xlarge",
            "ml.g6.2xlarge",
            "ml.g6.48xlarge",
            "ml.g6.4xlarge",
            "ml.g6.8xlarge",
            "ml.g6.xlarge",
            "ml.g6e.12xlarge",
            "ml.g6e.16xlarge",
            "ml.g6e.24xlarge",
            "ml.g6e.2xlarge",
            "ml.g6e.48xlarge",
            "ml.g6e.4xlarge",
            "ml.g6e.8xlarge",
            "ml.g6e.xlarge",
            "ml.m4.10xlarge",
            "ml.m4.16xlarge",
            "ml.m4.2xlarge",
            "ml.m4.4xlarge",
            "ml.m4.xlarge",
            "ml.m5.12xlarge",
            "ml.m5.24xlarge",
            "ml.m5.2xlarge",
            "ml.m5.4xlarge",
            "ml.m5.large",
            "ml.m5.xlarge",
            "ml.m6i.12xlarge",
            "ml.m6i.16xlarge",
            "ml.m6i.24xlarge",
            "ml.m6i.2xlarge",
            "ml.m6i.32xlarge",
            "ml.m6i.4xlarge",
            "ml.m6i.8xlarge",
            "ml.m6i.large",
            "ml.m6i.xlarge",
            "ml.m7i.12xlarge",
            "ml.m7i.16xlarge",
            "ml.m7i.24xlarge",
            "ml.m7i.2xlarge",
            "ml.m7i.48xlarge",
            "ml.m7i.4xlarge",
            "ml.m7i.8xlarge",
            "ml.m7i.large",
            "ml.m7i.xlarge",
            "ml.p2.16xlarge",
            "ml.p2.8xlarge",
            "ml.p2.xlarge",
            "ml.p3.16xlarge",
            "ml.p3.2xlarge",
            "ml.p3.8xlarge",
            "ml.p5.4xlarge",
            "ml.r5.12xlarge",
            "ml.r5.16xlarge",
            "ml.r5.24xlarge",
            "ml.r5.2xlarge",
            "ml.r5.4xlarge",
            "ml.r5.8xlarge",
            "ml.r5.large",
            "ml.r5.xlarge",
            "ml.r5d.12xlarge",
            "ml.r5d.16xlarge",
            "ml.r5d.24xlarge",
            "ml.r5d.2xlarge",
            "ml.r5d.4xlarge",
            "ml.r5d.8xlarge",
            "ml.r5d.large",
            "ml.r5d.xlarge",
            "ml.r7i.12xlarge",
            "ml.r7i.16xlarge",
            "ml.r7i.24xlarge",
            "ml.r7i.2xlarge",
            "ml.r7i.48xlarge",
            "ml.r7i.4xlarge",
            "ml.r7i.8xlarge",
            "ml.r7i.large",
            "ml.r7i.xlarge",
            "ml.t3.2xlarge",
            "ml.t3.large",
            "ml.t3.medium",
            "ml.t3.xlarge",
        ]
    }
}
impl ::std::convert::AsRef<str> for ProcessingInstanceType {
    fn as_ref(&self) -> &str {
        self.as_str()
    }
}
impl ProcessingInstanceType {
    /// Parses the enum value while disallowing unknown variants.
    ///
    /// Unknown variants will result in an error.
    pub fn try_parse(value: &str) -> ::std::result::Result<Self, crate::error::UnknownVariantError> {
        match Self::from(value) {
            #[allow(deprecated)]
            Self::Unknown(_) => ::std::result::Result::Err(crate::error::UnknownVariantError::new(value)),
            known => Ok(known),
        }
    }
}
impl ::std::fmt::Display for ProcessingInstanceType {
    fn fmt(&self, f: &mut ::std::fmt::Formatter) -> ::std::fmt::Result {
        match self {
            ProcessingInstanceType::MlC42Xlarge => write!(f, "ml.c4.2xlarge"),
            ProcessingInstanceType::MlC44Xlarge => write!(f, "ml.c4.4xlarge"),
            ProcessingInstanceType::MlC48Xlarge => write!(f, "ml.c4.8xlarge"),
            ProcessingInstanceType::MlC4Xlarge => write!(f, "ml.c4.xlarge"),
            ProcessingInstanceType::MlC518Xlarge => write!(f, "ml.c5.18xlarge"),
            ProcessingInstanceType::MlC52Xlarge => write!(f, "ml.c5.2xlarge"),
            ProcessingInstanceType::MlC54Xlarge => write!(f, "ml.c5.4xlarge"),
            ProcessingInstanceType::MlC59Xlarge => write!(f, "ml.c5.9xlarge"),
            ProcessingInstanceType::MlC5Xlarge => write!(f, "ml.c5.xlarge"),
            ProcessingInstanceType::MlC6I12Xlarge => write!(f, "ml.c6i.12xlarge"),
            ProcessingInstanceType::MlC6I16Xlarge => write!(f, "ml.c6i.16xlarge"),
            ProcessingInstanceType::MlC6I24Xlarge => write!(f, "ml.c6i.24xlarge"),
            ProcessingInstanceType::MlC6I2Xlarge => write!(f, "ml.c6i.2xlarge"),
            ProcessingInstanceType::MlC6I32Xlarge => write!(f, "ml.c6i.32xlarge"),
            ProcessingInstanceType::MlC6I4Xlarge => write!(f, "ml.c6i.4xlarge"),
            ProcessingInstanceType::MlC6I8Xlarge => write!(f, "ml.c6i.8xlarge"),
            ProcessingInstanceType::MlC6IXlarge => write!(f, "ml.c6i.xlarge"),
            ProcessingInstanceType::MlC7I12Xlarge => write!(f, "ml.c7i.12xlarge"),
            ProcessingInstanceType::MlC7I16Xlarge => write!(f, "ml.c7i.16xlarge"),
            ProcessingInstanceType::MlC7I24Xlarge => write!(f, "ml.c7i.24xlarge"),
            ProcessingInstanceType::MlC7I2Xlarge => write!(f, "ml.c7i.2xlarge"),
            ProcessingInstanceType::MlC7I48Xlarge => write!(f, "ml.c7i.48xlarge"),
            ProcessingInstanceType::MlC7I4Xlarge => write!(f, "ml.c7i.4xlarge"),
            ProcessingInstanceType::MlC7I8Xlarge => write!(f, "ml.c7i.8xlarge"),
            ProcessingInstanceType::MlC7ILarge => write!(f, "ml.c7i.large"),
            ProcessingInstanceType::MlC7IXlarge => write!(f, "ml.c7i.xlarge"),
            ProcessingInstanceType::MlG4Dn12Xlarge => write!(f, "ml.g4dn.12xlarge"),
            ProcessingInstanceType::MlG4Dn16Xlarge => write!(f, "ml.g4dn.16xlarge"),
            ProcessingInstanceType::MlG4Dn2Xlarge => write!(f, "ml.g4dn.2xlarge"),
            ProcessingInstanceType::MlG4Dn4Xlarge => write!(f, "ml.g4dn.4xlarge"),
            ProcessingInstanceType::MlG4Dn8Xlarge => write!(f, "ml.g4dn.8xlarge"),
            ProcessingInstanceType::MlG4DnXlarge => write!(f, "ml.g4dn.xlarge"),
            ProcessingInstanceType::MlG512Xlarge => write!(f, "ml.g5.12xlarge"),
            ProcessingInstanceType::MlG516Xlarge => write!(f, "ml.g5.16xlarge"),
            ProcessingInstanceType::MlG524Xlarge => write!(f, "ml.g5.24xlarge"),
            ProcessingInstanceType::MlG52Xlarge => write!(f, "ml.g5.2xlarge"),
            ProcessingInstanceType::MlG548Xlarge => write!(f, "ml.g5.48xlarge"),
            ProcessingInstanceType::MlG54Xlarge => write!(f, "ml.g5.4xlarge"),
            ProcessingInstanceType::MlG58Xlarge => write!(f, "ml.g5.8xlarge"),
            ProcessingInstanceType::MlG5Xlarge => write!(f, "ml.g5.xlarge"),
            ProcessingInstanceType::MlG612Xlarge => write!(f, "ml.g6.12xlarge"),
            ProcessingInstanceType::MlG616Xlarge => write!(f, "ml.g6.16xlarge"),
            ProcessingInstanceType::MlG624Xlarge => write!(f, "ml.g6.24xlarge"),
            ProcessingInstanceType::MlG62Xlarge => write!(f, "ml.g6.2xlarge"),
            ProcessingInstanceType::MlG648Xlarge => write!(f, "ml.g6.48xlarge"),
            ProcessingInstanceType::MlG64Xlarge => write!(f, "ml.g6.4xlarge"),
            ProcessingInstanceType::MlG68Xlarge => write!(f, "ml.g6.8xlarge"),
            ProcessingInstanceType::MlG6Xlarge => write!(f, "ml.g6.xlarge"),
            ProcessingInstanceType::MlG6E12Xlarge => write!(f, "ml.g6e.12xlarge"),
            ProcessingInstanceType::MlG6E16Xlarge => write!(f, "ml.g6e.16xlarge"),
            ProcessingInstanceType::MlG6E24Xlarge => write!(f, "ml.g6e.24xlarge"),
            ProcessingInstanceType::MlG6E2Xlarge => write!(f, "ml.g6e.2xlarge"),
            ProcessingInstanceType::MlG6E48Xlarge => write!(f, "ml.g6e.48xlarge"),
            ProcessingInstanceType::MlG6E4Xlarge => write!(f, "ml.g6e.4xlarge"),
            ProcessingInstanceType::MlG6E8Xlarge => write!(f, "ml.g6e.8xlarge"),
            ProcessingInstanceType::MlG6EXlarge => write!(f, "ml.g6e.xlarge"),
            ProcessingInstanceType::MlM410Xlarge => write!(f, "ml.m4.10xlarge"),
            ProcessingInstanceType::MlM416Xlarge => write!(f, "ml.m4.16xlarge"),
            ProcessingInstanceType::MlM42Xlarge => write!(f, "ml.m4.2xlarge"),
            ProcessingInstanceType::MlM44Xlarge => write!(f, "ml.m4.4xlarge"),
            ProcessingInstanceType::MlM4Xlarge => write!(f, "ml.m4.xlarge"),
            ProcessingInstanceType::MlM512Xlarge => write!(f, "ml.m5.12xlarge"),
            ProcessingInstanceType::MlM524Xlarge => write!(f, "ml.m5.24xlarge"),
            ProcessingInstanceType::MlM52Xlarge => write!(f, "ml.m5.2xlarge"),
            ProcessingInstanceType::MlM54Xlarge => write!(f, "ml.m5.4xlarge"),
            ProcessingInstanceType::MlM5Large => write!(f, "ml.m5.large"),
            ProcessingInstanceType::MlM5Xlarge => write!(f, "ml.m5.xlarge"),
            ProcessingInstanceType::MlM6I12Xlarge => write!(f, "ml.m6i.12xlarge"),
            ProcessingInstanceType::MlM6I16Xlarge => write!(f, "ml.m6i.16xlarge"),
            ProcessingInstanceType::MlM6I24Xlarge => write!(f, "ml.m6i.24xlarge"),
            ProcessingInstanceType::MlM6I2Xlarge => write!(f, "ml.m6i.2xlarge"),
            ProcessingInstanceType::MlM6I32Xlarge => write!(f, "ml.m6i.32xlarge"),
            ProcessingInstanceType::MlM6I4Xlarge => write!(f, "ml.m6i.4xlarge"),
            ProcessingInstanceType::MlM6I8Xlarge => write!(f, "ml.m6i.8xlarge"),
            ProcessingInstanceType::MlM6ILarge => write!(f, "ml.m6i.large"),
            ProcessingInstanceType::MlM6IXlarge => write!(f, "ml.m6i.xlarge"),
            ProcessingInstanceType::MlM7I12Xlarge => write!(f, "ml.m7i.12xlarge"),
            ProcessingInstanceType::MlM7I16Xlarge => write!(f, "ml.m7i.16xlarge"),
            ProcessingInstanceType::MlM7I24Xlarge => write!(f, "ml.m7i.24xlarge"),
            ProcessingInstanceType::MlM7I2Xlarge => write!(f, "ml.m7i.2xlarge"),
            ProcessingInstanceType::MlM7I48Xlarge => write!(f, "ml.m7i.48xlarge"),
            ProcessingInstanceType::MlM7I4Xlarge => write!(f, "ml.m7i.4xlarge"),
            ProcessingInstanceType::MlM7I8Xlarge => write!(f, "ml.m7i.8xlarge"),
            ProcessingInstanceType::MlM7ILarge => write!(f, "ml.m7i.large"),
            ProcessingInstanceType::MlM7IXlarge => write!(f, "ml.m7i.xlarge"),
            ProcessingInstanceType::MlP216Xlarge => write!(f, "ml.p2.16xlarge"),
            ProcessingInstanceType::MlP28Xlarge => write!(f, "ml.p2.8xlarge"),
            ProcessingInstanceType::MlP2Xlarge => write!(f, "ml.p2.xlarge"),
            ProcessingInstanceType::MlP316Xlarge => write!(f, "ml.p3.16xlarge"),
            ProcessingInstanceType::MlP32Xlarge => write!(f, "ml.p3.2xlarge"),
            ProcessingInstanceType::MlP38Xlarge => write!(f, "ml.p3.8xlarge"),
            ProcessingInstanceType::MlP54Xlarge => write!(f, "ml.p5.4xlarge"),
            ProcessingInstanceType::MlR512Xlarge => write!(f, "ml.r5.12xlarge"),
            ProcessingInstanceType::MlR516Xlarge => write!(f, "ml.r5.16xlarge"),
            ProcessingInstanceType::MlR524Xlarge => write!(f, "ml.r5.24xlarge"),
            ProcessingInstanceType::MlR52Xlarge => write!(f, "ml.r5.2xlarge"),
            ProcessingInstanceType::MlR54Xlarge => write!(f, "ml.r5.4xlarge"),
            ProcessingInstanceType::MlR58Xlarge => write!(f, "ml.r5.8xlarge"),
            ProcessingInstanceType::MlR5Large => write!(f, "ml.r5.large"),
            ProcessingInstanceType::MlR5Xlarge => write!(f, "ml.r5.xlarge"),
            ProcessingInstanceType::MlR5D12Xlarge => write!(f, "ml.r5d.12xlarge"),
            ProcessingInstanceType::MlR5D16Xlarge => write!(f, "ml.r5d.16xlarge"),
            ProcessingInstanceType::MlR5D24Xlarge => write!(f, "ml.r5d.24xlarge"),
            ProcessingInstanceType::MlR5D2Xlarge => write!(f, "ml.r5d.2xlarge"),
            ProcessingInstanceType::MlR5D4Xlarge => write!(f, "ml.r5d.4xlarge"),
            ProcessingInstanceType::MlR5D8Xlarge => write!(f, "ml.r5d.8xlarge"),
            ProcessingInstanceType::MlR5DLarge => write!(f, "ml.r5d.large"),
            ProcessingInstanceType::MlR5DXlarge => write!(f, "ml.r5d.xlarge"),
            ProcessingInstanceType::MlR7I12Xlarge => write!(f, "ml.r7i.12xlarge"),
            ProcessingInstanceType::MlR7I16Xlarge => write!(f, "ml.r7i.16xlarge"),
            ProcessingInstanceType::MlR7I24Xlarge => write!(f, "ml.r7i.24xlarge"),
            ProcessingInstanceType::MlR7I2Xlarge => write!(f, "ml.r7i.2xlarge"),
            ProcessingInstanceType::MlR7I48Xlarge => write!(f, "ml.r7i.48xlarge"),
            ProcessingInstanceType::MlR7I4Xlarge => write!(f, "ml.r7i.4xlarge"),
            ProcessingInstanceType::MlR7I8Xlarge => write!(f, "ml.r7i.8xlarge"),
            ProcessingInstanceType::MlR7ILarge => write!(f, "ml.r7i.large"),
            ProcessingInstanceType::MlR7IXlarge => write!(f, "ml.r7i.xlarge"),
            ProcessingInstanceType::MlT32Xlarge => write!(f, "ml.t3.2xlarge"),
            ProcessingInstanceType::MlT3Large => write!(f, "ml.t3.large"),
            ProcessingInstanceType::MlT3Medium => write!(f, "ml.t3.medium"),
            ProcessingInstanceType::MlT3Xlarge => write!(f, "ml.t3.xlarge"),
            ProcessingInstanceType::Unknown(value) => write!(f, "{value}"),
        }
    }
}
