// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Configures the behavior of the client used by SageMaker to interact with the model container during asynchronous inference.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AsyncInferenceClientConfig {
    /// <p>The maximum number of concurrent requests sent by the SageMaker client to the model container. If no value is provided, SageMaker chooses an optimal value.</p>
    #[doc(hidden)]
    pub max_concurrent_invocations_per_instance: std::option::Option<i32>,
}
impl AsyncInferenceClientConfig {
    /// <p>The maximum number of concurrent requests sent by the SageMaker client to the model container. If no value is provided, SageMaker chooses an optimal value.</p>
    pub fn max_concurrent_invocations_per_instance(&self) -> std::option::Option<i32> {
        self.max_concurrent_invocations_per_instance
    }
}
impl AsyncInferenceClientConfig {
    /// Creates a new builder-style object to manufacture [`AsyncInferenceClientConfig`](crate::types::AsyncInferenceClientConfig).
    pub fn builder() -> crate::types::builders::AsyncInferenceClientConfigBuilder {
        crate::types::builders::AsyncInferenceClientConfigBuilder::default()
    }
}

/// A builder for [`AsyncInferenceClientConfig`](crate::types::AsyncInferenceClientConfig).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AsyncInferenceClientConfigBuilder {
    pub(crate) max_concurrent_invocations_per_instance: std::option::Option<i32>,
}
impl AsyncInferenceClientConfigBuilder {
    /// <p>The maximum number of concurrent requests sent by the SageMaker client to the model container. If no value is provided, SageMaker chooses an optimal value.</p>
    pub fn max_concurrent_invocations_per_instance(mut self, input: i32) -> Self {
        self.max_concurrent_invocations_per_instance = Some(input);
        self
    }
    /// <p>The maximum number of concurrent requests sent by the SageMaker client to the model container. If no value is provided, SageMaker chooses an optimal value.</p>
    pub fn set_max_concurrent_invocations_per_instance(
        mut self,
        input: std::option::Option<i32>,
    ) -> Self {
        self.max_concurrent_invocations_per_instance = input;
        self
    }
    /// Consumes the builder and constructs a [`AsyncInferenceClientConfig`](crate::types::AsyncInferenceClientConfig).
    pub fn build(self) -> crate::types::AsyncInferenceClientConfig {
        crate::types::AsyncInferenceClientConfig {
            max_concurrent_invocations_per_instance: self.max_concurrent_invocations_per_instance,
        }
    }
}
