// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The resolved attributes specific to the text generation problem type.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct TextGenerationResolvedAttributes {
    /// <p>The name of the base model to fine-tune.</p>
    pub base_model_name: ::std::option::Option<::std::string::String>,
}
impl TextGenerationResolvedAttributes {
    /// <p>The name of the base model to fine-tune.</p>
    pub fn base_model_name(&self) -> ::std::option::Option<&str> {
        self.base_model_name.as_deref()
    }
}
impl TextGenerationResolvedAttributes {
    /// Creates a new builder-style object to manufacture [`TextGenerationResolvedAttributes`](crate::types::TextGenerationResolvedAttributes).
    pub fn builder() -> crate::types::builders::TextGenerationResolvedAttributesBuilder {
        crate::types::builders::TextGenerationResolvedAttributesBuilder::default()
    }
}

/// A builder for [`TextGenerationResolvedAttributes`](crate::types::TextGenerationResolvedAttributes).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct TextGenerationResolvedAttributesBuilder {
    pub(crate) base_model_name: ::std::option::Option<::std::string::String>,
}
impl TextGenerationResolvedAttributesBuilder {
    /// <p>The name of the base model to fine-tune.</p>
    pub fn base_model_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.base_model_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the base model to fine-tune.</p>
    pub fn set_base_model_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.base_model_name = input;
        self
    }
    /// <p>The name of the base model to fine-tune.</p>
    pub fn get_base_model_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.base_model_name
    }
    /// Consumes the builder and constructs a [`TextGenerationResolvedAttributes`](crate::types::TextGenerationResolvedAttributes).
    pub fn build(self) -> crate::types::TextGenerationResolvedAttributes {
        crate::types::TextGenerationResolvedAttributes {
            base_model_name: self.base_model_name,
        }
    }
}
