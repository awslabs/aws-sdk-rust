// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Metadata for a Condition step.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ConditionStepMetadata {
    /// <p>The outcome of the Condition step evaluation.</p>
    #[doc(hidden)]
    pub outcome: std::option::Option<crate::types::ConditionOutcome>,
}
impl ConditionStepMetadata {
    /// <p>The outcome of the Condition step evaluation.</p>
    pub fn outcome(&self) -> std::option::Option<&crate::types::ConditionOutcome> {
        self.outcome.as_ref()
    }
}
impl ConditionStepMetadata {
    /// Creates a new builder-style object to manufacture [`ConditionStepMetadata`](crate::types::ConditionStepMetadata).
    pub fn builder() -> crate::types::builders::ConditionStepMetadataBuilder {
        crate::types::builders::ConditionStepMetadataBuilder::default()
    }
}

/// A builder for [`ConditionStepMetadata`](crate::types::ConditionStepMetadata).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ConditionStepMetadataBuilder {
    pub(crate) outcome: std::option::Option<crate::types::ConditionOutcome>,
}
impl ConditionStepMetadataBuilder {
    /// <p>The outcome of the Condition step evaluation.</p>
    pub fn outcome(mut self, input: crate::types::ConditionOutcome) -> Self {
        self.outcome = Some(input);
        self
    }
    /// <p>The outcome of the Condition step evaluation.</p>
    pub fn set_outcome(
        mut self,
        input: std::option::Option<crate::types::ConditionOutcome>,
    ) -> Self {
        self.outcome = input;
        self
    }
    /// Consumes the builder and constructs a [`ConditionStepMetadata`](crate::types::ConditionStepMetadata).
    pub fn build(self) -> crate::types::ConditionStepMetadata {
        crate::types::ConditionStepMetadata {
            outcome: self.outcome,
        }
    }
}
