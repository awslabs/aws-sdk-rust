// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The configuration of an <code>OfflineStore</code>.</p>
/// <p>Provide an <code>OfflineStoreConfig</code> in a request to <code>CreateFeatureGroup</code> to create an <code>OfflineStore</code>.</p>
/// <p>To encrypt an <code>OfflineStore</code> using at rest data encryption, specify Amazon Web Services Key Management Service (KMS) key ID, or <code>KMSKeyId</code>, in <code>S3StorageConfig</code>.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct OfflineStoreConfig {
    /// <p>The Amazon Simple Storage (Amazon S3) location of <code>OfflineStore</code>.</p>
    pub s3_storage_config: ::std::option::Option<crate::types::S3StorageConfig>,
    /// <p>Set to <code>True</code> to disable the automatic creation of an Amazon Web Services Glue table when configuring an <code>OfflineStore</code>. If set to <code>False</code>, Feature Store will name the <code>OfflineStore</code> Glue table following <a href="https://docs.aws.amazon.com/athena/latest/ug/tables-databases-columns-names.html">Athena's naming recommendations</a>.</p>
    /// <p>The default value is <code>False</code>.</p>
    pub disable_glue_table_creation: ::std::option::Option<bool>,
    /// <p>The meta data of the Glue table that is autogenerated when an <code>OfflineStore</code> is created. </p>
    pub data_catalog_config: ::std::option::Option<crate::types::DataCatalogConfig>,
    /// <p>Format for the offline store table. Supported formats are Glue (Default) and <a href="https://iceberg.apache.org/">Apache Iceberg</a>.</p>
    pub table_format: ::std::option::Option<crate::types::TableFormat>,
}
impl OfflineStoreConfig {
    /// <p>The Amazon Simple Storage (Amazon S3) location of <code>OfflineStore</code>.</p>
    pub fn s3_storage_config(&self) -> ::std::option::Option<&crate::types::S3StorageConfig> {
        self.s3_storage_config.as_ref()
    }
    /// <p>Set to <code>True</code> to disable the automatic creation of an Amazon Web Services Glue table when configuring an <code>OfflineStore</code>. If set to <code>False</code>, Feature Store will name the <code>OfflineStore</code> Glue table following <a href="https://docs.aws.amazon.com/athena/latest/ug/tables-databases-columns-names.html">Athena's naming recommendations</a>.</p>
    /// <p>The default value is <code>False</code>.</p>
    pub fn disable_glue_table_creation(&self) -> ::std::option::Option<bool> {
        self.disable_glue_table_creation
    }
    /// <p>The meta data of the Glue table that is autogenerated when an <code>OfflineStore</code> is created. </p>
    pub fn data_catalog_config(&self) -> ::std::option::Option<&crate::types::DataCatalogConfig> {
        self.data_catalog_config.as_ref()
    }
    /// <p>Format for the offline store table. Supported formats are Glue (Default) and <a href="https://iceberg.apache.org/">Apache Iceberg</a>.</p>
    pub fn table_format(&self) -> ::std::option::Option<&crate::types::TableFormat> {
        self.table_format.as_ref()
    }
}
impl OfflineStoreConfig {
    /// Creates a new builder-style object to manufacture [`OfflineStoreConfig`](crate::types::OfflineStoreConfig).
    pub fn builder() -> crate::types::builders::OfflineStoreConfigBuilder {
        crate::types::builders::OfflineStoreConfigBuilder::default()
    }
}

/// A builder for [`OfflineStoreConfig`](crate::types::OfflineStoreConfig).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct OfflineStoreConfigBuilder {
    pub(crate) s3_storage_config: ::std::option::Option<crate::types::S3StorageConfig>,
    pub(crate) disable_glue_table_creation: ::std::option::Option<bool>,
    pub(crate) data_catalog_config: ::std::option::Option<crate::types::DataCatalogConfig>,
    pub(crate) table_format: ::std::option::Option<crate::types::TableFormat>,
}
impl OfflineStoreConfigBuilder {
    /// <p>The Amazon Simple Storage (Amazon S3) location of <code>OfflineStore</code>.</p>
    /// This field is required.
    pub fn s3_storage_config(mut self, input: crate::types::S3StorageConfig) -> Self {
        self.s3_storage_config = ::std::option::Option::Some(input);
        self
    }
    /// <p>The Amazon Simple Storage (Amazon S3) location of <code>OfflineStore</code>.</p>
    pub fn set_s3_storage_config(mut self, input: ::std::option::Option<crate::types::S3StorageConfig>) -> Self {
        self.s3_storage_config = input;
        self
    }
    /// <p>The Amazon Simple Storage (Amazon S3) location of <code>OfflineStore</code>.</p>
    pub fn get_s3_storage_config(&self) -> &::std::option::Option<crate::types::S3StorageConfig> {
        &self.s3_storage_config
    }
    /// <p>Set to <code>True</code> to disable the automatic creation of an Amazon Web Services Glue table when configuring an <code>OfflineStore</code>. If set to <code>False</code>, Feature Store will name the <code>OfflineStore</code> Glue table following <a href="https://docs.aws.amazon.com/athena/latest/ug/tables-databases-columns-names.html">Athena's naming recommendations</a>.</p>
    /// <p>The default value is <code>False</code>.</p>
    pub fn disable_glue_table_creation(mut self, input: bool) -> Self {
        self.disable_glue_table_creation = ::std::option::Option::Some(input);
        self
    }
    /// <p>Set to <code>True</code> to disable the automatic creation of an Amazon Web Services Glue table when configuring an <code>OfflineStore</code>. If set to <code>False</code>, Feature Store will name the <code>OfflineStore</code> Glue table following <a href="https://docs.aws.amazon.com/athena/latest/ug/tables-databases-columns-names.html">Athena's naming recommendations</a>.</p>
    /// <p>The default value is <code>False</code>.</p>
    pub fn set_disable_glue_table_creation(mut self, input: ::std::option::Option<bool>) -> Self {
        self.disable_glue_table_creation = input;
        self
    }
    /// <p>Set to <code>True</code> to disable the automatic creation of an Amazon Web Services Glue table when configuring an <code>OfflineStore</code>. If set to <code>False</code>, Feature Store will name the <code>OfflineStore</code> Glue table following <a href="https://docs.aws.amazon.com/athena/latest/ug/tables-databases-columns-names.html">Athena's naming recommendations</a>.</p>
    /// <p>The default value is <code>False</code>.</p>
    pub fn get_disable_glue_table_creation(&self) -> &::std::option::Option<bool> {
        &self.disable_glue_table_creation
    }
    /// <p>The meta data of the Glue table that is autogenerated when an <code>OfflineStore</code> is created. </p>
    pub fn data_catalog_config(mut self, input: crate::types::DataCatalogConfig) -> Self {
        self.data_catalog_config = ::std::option::Option::Some(input);
        self
    }
    /// <p>The meta data of the Glue table that is autogenerated when an <code>OfflineStore</code> is created. </p>
    pub fn set_data_catalog_config(mut self, input: ::std::option::Option<crate::types::DataCatalogConfig>) -> Self {
        self.data_catalog_config = input;
        self
    }
    /// <p>The meta data of the Glue table that is autogenerated when an <code>OfflineStore</code> is created. </p>
    pub fn get_data_catalog_config(&self) -> &::std::option::Option<crate::types::DataCatalogConfig> {
        &self.data_catalog_config
    }
    /// <p>Format for the offline store table. Supported formats are Glue (Default) and <a href="https://iceberg.apache.org/">Apache Iceberg</a>.</p>
    pub fn table_format(mut self, input: crate::types::TableFormat) -> Self {
        self.table_format = ::std::option::Option::Some(input);
        self
    }
    /// <p>Format for the offline store table. Supported formats are Glue (Default) and <a href="https://iceberg.apache.org/">Apache Iceberg</a>.</p>
    pub fn set_table_format(mut self, input: ::std::option::Option<crate::types::TableFormat>) -> Self {
        self.table_format = input;
        self
    }
    /// <p>Format for the offline store table. Supported formats are Glue (Default) and <a href="https://iceberg.apache.org/">Apache Iceberg</a>.</p>
    pub fn get_table_format(&self) -> &::std::option::Option<crate::types::TableFormat> {
        &self.table_format
    }
    /// Consumes the builder and constructs a [`OfflineStoreConfig`](crate::types::OfflineStoreConfig).
    pub fn build(self) -> crate::types::OfflineStoreConfig {
        crate::types::OfflineStoreConfig {
            s3_storage_config: self.s3_storage_config,
            disable_glue_table_creation: self.disable_glue_table_creation,
            data_catalog_config: self.data_catalog_config,
            table_format: self.table_format,
        }
    }
}
