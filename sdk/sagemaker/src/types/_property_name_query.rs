// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Part of the <code>SuggestionQuery</code> type. Specifies a hint for retrieving property names that begin with the specified text.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct PropertyNameQuery {
    /// <p>Text that begins a property's name.</p>
    #[doc(hidden)]
    pub property_name_hint: std::option::Option<std::string::String>,
}
impl PropertyNameQuery {
    /// <p>Text that begins a property's name.</p>
    pub fn property_name_hint(&self) -> std::option::Option<&str> {
        self.property_name_hint.as_deref()
    }
}
impl PropertyNameQuery {
    /// Creates a new builder-style object to manufacture [`PropertyNameQuery`](crate::types::PropertyNameQuery).
    pub fn builder() -> crate::types::builders::PropertyNameQueryBuilder {
        crate::types::builders::PropertyNameQueryBuilder::default()
    }
}

/// A builder for [`PropertyNameQuery`](crate::types::PropertyNameQuery).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct PropertyNameQueryBuilder {
    pub(crate) property_name_hint: std::option::Option<std::string::String>,
}
impl PropertyNameQueryBuilder {
    /// <p>Text that begins a property's name.</p>
    pub fn property_name_hint(mut self, input: impl Into<std::string::String>) -> Self {
        self.property_name_hint = Some(input.into());
        self
    }
    /// <p>Text that begins a property's name.</p>
    pub fn set_property_name_hint(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.property_name_hint = input;
        self
    }
    /// Consumes the builder and constructs a [`PropertyNameQuery`](crate::types::PropertyNameQuery).
    pub fn build(self) -> crate::types::PropertyNameQuery {
        crate::types::PropertyNameQuery {
            property_name_hint: self.property_name_hint,
        }
    }
}
