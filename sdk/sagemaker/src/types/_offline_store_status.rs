// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The status of <code>OfflineStore</code>.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct OfflineStoreStatus {
    /// <p>An <code>OfflineStore</code> status.</p>
    #[doc(hidden)]
    pub status: std::option::Option<crate::types::OfflineStoreStatusValue>,
    /// <p>The justification for why the OfflineStoreStatus is Blocked (if applicable).</p>
    #[doc(hidden)]
    pub blocked_reason: std::option::Option<std::string::String>,
}
impl OfflineStoreStatus {
    /// <p>An <code>OfflineStore</code> status.</p>
    pub fn status(&self) -> std::option::Option<&crate::types::OfflineStoreStatusValue> {
        self.status.as_ref()
    }
    /// <p>The justification for why the OfflineStoreStatus is Blocked (if applicable).</p>
    pub fn blocked_reason(&self) -> std::option::Option<&str> {
        self.blocked_reason.as_deref()
    }
}
impl OfflineStoreStatus {
    /// Creates a new builder-style object to manufacture [`OfflineStoreStatus`](crate::types::OfflineStoreStatus).
    pub fn builder() -> crate::types::builders::OfflineStoreStatusBuilder {
        crate::types::builders::OfflineStoreStatusBuilder::default()
    }
}

/// A builder for [`OfflineStoreStatus`](crate::types::OfflineStoreStatus).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct OfflineStoreStatusBuilder {
    pub(crate) status: std::option::Option<crate::types::OfflineStoreStatusValue>,
    pub(crate) blocked_reason: std::option::Option<std::string::String>,
}
impl OfflineStoreStatusBuilder {
    /// <p>An <code>OfflineStore</code> status.</p>
    pub fn status(mut self, input: crate::types::OfflineStoreStatusValue) -> Self {
        self.status = Some(input);
        self
    }
    /// <p>An <code>OfflineStore</code> status.</p>
    pub fn set_status(
        mut self,
        input: std::option::Option<crate::types::OfflineStoreStatusValue>,
    ) -> Self {
        self.status = input;
        self
    }
    /// <p>The justification for why the OfflineStoreStatus is Blocked (if applicable).</p>
    pub fn blocked_reason(mut self, input: impl Into<std::string::String>) -> Self {
        self.blocked_reason = Some(input.into());
        self
    }
    /// <p>The justification for why the OfflineStoreStatus is Blocked (if applicable).</p>
    pub fn set_blocked_reason(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.blocked_reason = input;
        self
    }
    /// Consumes the builder and constructs a [`OfflineStoreStatus`](crate::types::OfflineStoreStatus).
    pub fn build(self) -> crate::types::OfflineStoreStatus {
        crate::types::OfflineStoreStatus {
            status: self.status,
            blocked_reason: self.blocked_reason,
        }
    }
}
