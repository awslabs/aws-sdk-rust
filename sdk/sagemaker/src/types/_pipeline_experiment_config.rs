// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Specifies the names of the experiment and trial created by a pipeline.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct PipelineExperimentConfig {
    /// <p>The name of the experiment.</p>
    #[doc(hidden)]
    pub experiment_name: std::option::Option<std::string::String>,
    /// <p>The name of the trial.</p>
    #[doc(hidden)]
    pub trial_name: std::option::Option<std::string::String>,
}
impl PipelineExperimentConfig {
    /// <p>The name of the experiment.</p>
    pub fn experiment_name(&self) -> std::option::Option<&str> {
        self.experiment_name.as_deref()
    }
    /// <p>The name of the trial.</p>
    pub fn trial_name(&self) -> std::option::Option<&str> {
        self.trial_name.as_deref()
    }
}
impl PipelineExperimentConfig {
    /// Creates a new builder-style object to manufacture [`PipelineExperimentConfig`](crate::types::PipelineExperimentConfig).
    pub fn builder() -> crate::types::builders::PipelineExperimentConfigBuilder {
        crate::types::builders::PipelineExperimentConfigBuilder::default()
    }
}

/// A builder for [`PipelineExperimentConfig`](crate::types::PipelineExperimentConfig).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct PipelineExperimentConfigBuilder {
    pub(crate) experiment_name: std::option::Option<std::string::String>,
    pub(crate) trial_name: std::option::Option<std::string::String>,
}
impl PipelineExperimentConfigBuilder {
    /// <p>The name of the experiment.</p>
    pub fn experiment_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.experiment_name = Some(input.into());
        self
    }
    /// <p>The name of the experiment.</p>
    pub fn set_experiment_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.experiment_name = input;
        self
    }
    /// <p>The name of the trial.</p>
    pub fn trial_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.trial_name = Some(input.into());
        self
    }
    /// <p>The name of the trial.</p>
    pub fn set_trial_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.trial_name = input;
        self
    }
    /// Consumes the builder and constructs a [`PipelineExperimentConfig`](crate::types::PipelineExperimentConfig).
    pub fn build(self) -> crate::types::PipelineExperimentConfig {
        crate::types::PipelineExperimentConfig {
            experiment_name: self.experiment_name,
            trial_name: self.trial_name,
        }
    }
}
