// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>An Amazon SNS data source used for streaming labeling jobs.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct LabelingJobSnsDataSource {
    /// <p>The Amazon SNS input topic Amazon Resource Name (ARN). Specify the ARN of the input topic you will use to send new data objects to a streaming labeling job.</p>
    pub sns_topic_arn: ::std::option::Option<::std::string::String>,
}
impl LabelingJobSnsDataSource {
    /// <p>The Amazon SNS input topic Amazon Resource Name (ARN). Specify the ARN of the input topic you will use to send new data objects to a streaming labeling job.</p>
    pub fn sns_topic_arn(&self) -> ::std::option::Option<&str> {
        self.sns_topic_arn.as_deref()
    }
}
impl LabelingJobSnsDataSource {
    /// Creates a new builder-style object to manufacture [`LabelingJobSnsDataSource`](crate::types::LabelingJobSnsDataSource).
    pub fn builder() -> crate::types::builders::LabelingJobSnsDataSourceBuilder {
        crate::types::builders::LabelingJobSnsDataSourceBuilder::default()
    }
}

/// A builder for [`LabelingJobSnsDataSource`](crate::types::LabelingJobSnsDataSource).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct LabelingJobSnsDataSourceBuilder {
    pub(crate) sns_topic_arn: ::std::option::Option<::std::string::String>,
}
impl LabelingJobSnsDataSourceBuilder {
    /// <p>The Amazon SNS input topic Amazon Resource Name (ARN). Specify the ARN of the input topic you will use to send new data objects to a streaming labeling job.</p>
    /// This field is required.
    pub fn sns_topic_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.sns_topic_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon SNS input topic Amazon Resource Name (ARN). Specify the ARN of the input topic you will use to send new data objects to a streaming labeling job.</p>
    pub fn set_sns_topic_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.sns_topic_arn = input;
        self
    }
    /// <p>The Amazon SNS input topic Amazon Resource Name (ARN). Specify the ARN of the input topic you will use to send new data objects to a streaming labeling job.</p>
    pub fn get_sns_topic_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.sns_topic_arn
    }
    /// Consumes the builder and constructs a [`LabelingJobSnsDataSource`](crate::types::LabelingJobSnsDataSource).
    pub fn build(self) -> crate::types::LabelingJobSnsDataSource {
        crate::types::LabelingJobSnsDataSource {
            sns_topic_arn: self.sns_topic_arn,
        }
    }
}
