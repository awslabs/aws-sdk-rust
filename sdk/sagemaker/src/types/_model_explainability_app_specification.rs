// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Docker container image configuration object for the model explainability job.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ModelExplainabilityAppSpecification {
    /// <p>The container image to be run by the model explainability job.</p>
    #[doc(hidden)]
    pub image_uri: std::option::Option<std::string::String>,
    /// <p>JSON formatted S3 file that defines explainability parameters. For more information on this JSON configuration file, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/clarify-config-json-monitor-model-explainability-parameters.html">Configure model explainability parameters</a>.</p>
    #[doc(hidden)]
    pub config_uri: std::option::Option<std::string::String>,
    /// <p>Sets the environment variables in the Docker container.</p>
    #[doc(hidden)]
    pub environment:
        std::option::Option<std::collections::HashMap<std::string::String, std::string::String>>,
}
impl ModelExplainabilityAppSpecification {
    /// <p>The container image to be run by the model explainability job.</p>
    pub fn image_uri(&self) -> std::option::Option<&str> {
        self.image_uri.as_deref()
    }
    /// <p>JSON formatted S3 file that defines explainability parameters. For more information on this JSON configuration file, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/clarify-config-json-monitor-model-explainability-parameters.html">Configure model explainability parameters</a>.</p>
    pub fn config_uri(&self) -> std::option::Option<&str> {
        self.config_uri.as_deref()
    }
    /// <p>Sets the environment variables in the Docker container.</p>
    pub fn environment(
        &self,
    ) -> std::option::Option<&std::collections::HashMap<std::string::String, std::string::String>>
    {
        self.environment.as_ref()
    }
}
impl ModelExplainabilityAppSpecification {
    /// Creates a new builder-style object to manufacture [`ModelExplainabilityAppSpecification`](crate::types::ModelExplainabilityAppSpecification).
    pub fn builder() -> crate::types::builders::ModelExplainabilityAppSpecificationBuilder {
        crate::types::builders::ModelExplainabilityAppSpecificationBuilder::default()
    }
}

/// A builder for [`ModelExplainabilityAppSpecification`](crate::types::ModelExplainabilityAppSpecification).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ModelExplainabilityAppSpecificationBuilder {
    pub(crate) image_uri: std::option::Option<std::string::String>,
    pub(crate) config_uri: std::option::Option<std::string::String>,
    pub(crate) environment:
        std::option::Option<std::collections::HashMap<std::string::String, std::string::String>>,
}
impl ModelExplainabilityAppSpecificationBuilder {
    /// <p>The container image to be run by the model explainability job.</p>
    pub fn image_uri(mut self, input: impl Into<std::string::String>) -> Self {
        self.image_uri = Some(input.into());
        self
    }
    /// <p>The container image to be run by the model explainability job.</p>
    pub fn set_image_uri(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.image_uri = input;
        self
    }
    /// <p>JSON formatted S3 file that defines explainability parameters. For more information on this JSON configuration file, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/clarify-config-json-monitor-model-explainability-parameters.html">Configure model explainability parameters</a>.</p>
    pub fn config_uri(mut self, input: impl Into<std::string::String>) -> Self {
        self.config_uri = Some(input.into());
        self
    }
    /// <p>JSON formatted S3 file that defines explainability parameters. For more information on this JSON configuration file, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/clarify-config-json-monitor-model-explainability-parameters.html">Configure model explainability parameters</a>.</p>
    pub fn set_config_uri(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.config_uri = input;
        self
    }
    /// Adds a key-value pair to `environment`.
    ///
    /// To override the contents of this collection use [`set_environment`](Self::set_environment).
    ///
    /// <p>Sets the environment variables in the Docker container.</p>
    pub fn environment(
        mut self,
        k: impl Into<std::string::String>,
        v: impl Into<std::string::String>,
    ) -> Self {
        let mut hash_map = self.environment.unwrap_or_default();
        hash_map.insert(k.into(), v.into());
        self.environment = Some(hash_map);
        self
    }
    /// <p>Sets the environment variables in the Docker container.</p>
    pub fn set_environment(
        mut self,
        input: std::option::Option<
            std::collections::HashMap<std::string::String, std::string::String>,
        >,
    ) -> Self {
        self.environment = input;
        self
    }
    /// Consumes the builder and constructs a [`ModelExplainabilityAppSpecification`](crate::types::ModelExplainabilityAppSpecification).
    pub fn build(self) -> crate::types::ModelExplainabilityAppSpecification {
        crate::types::ModelExplainabilityAppSpecification {
            image_uri: self.image_uri,
            config_uri: self.config_uri,
            environment: self.environment,
        }
    }
}
