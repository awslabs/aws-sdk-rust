// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Specifies summary information about the space settings.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct SpaceSettingsSummary {
    /// <p>The type of app created within the space.</p>
    pub app_type: ::std::option::Option<crate::types::AppType>,
    /// <p>The storage settings for a space.</p>
    pub space_storage_settings: ::std::option::Option<crate::types::SpaceStorageSettings>,
}
impl SpaceSettingsSummary {
    /// <p>The type of app created within the space.</p>
    pub fn app_type(&self) -> ::std::option::Option<&crate::types::AppType> {
        self.app_type.as_ref()
    }
    /// <p>The storage settings for a space.</p>
    pub fn space_storage_settings(&self) -> ::std::option::Option<&crate::types::SpaceStorageSettings> {
        self.space_storage_settings.as_ref()
    }
}
impl SpaceSettingsSummary {
    /// Creates a new builder-style object to manufacture [`SpaceSettingsSummary`](crate::types::SpaceSettingsSummary).
    pub fn builder() -> crate::types::builders::SpaceSettingsSummaryBuilder {
        crate::types::builders::SpaceSettingsSummaryBuilder::default()
    }
}

/// A builder for [`SpaceSettingsSummary`](crate::types::SpaceSettingsSummary).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct SpaceSettingsSummaryBuilder {
    pub(crate) app_type: ::std::option::Option<crate::types::AppType>,
    pub(crate) space_storage_settings: ::std::option::Option<crate::types::SpaceStorageSettings>,
}
impl SpaceSettingsSummaryBuilder {
    /// <p>The type of app created within the space.</p>
    pub fn app_type(mut self, input: crate::types::AppType) -> Self {
        self.app_type = ::std::option::Option::Some(input);
        self
    }
    /// <p>The type of app created within the space.</p>
    pub fn set_app_type(mut self, input: ::std::option::Option<crate::types::AppType>) -> Self {
        self.app_type = input;
        self
    }
    /// <p>The type of app created within the space.</p>
    pub fn get_app_type(&self) -> &::std::option::Option<crate::types::AppType> {
        &self.app_type
    }
    /// <p>The storage settings for a space.</p>
    pub fn space_storage_settings(mut self, input: crate::types::SpaceStorageSettings) -> Self {
        self.space_storage_settings = ::std::option::Option::Some(input);
        self
    }
    /// <p>The storage settings for a space.</p>
    pub fn set_space_storage_settings(mut self, input: ::std::option::Option<crate::types::SpaceStorageSettings>) -> Self {
        self.space_storage_settings = input;
        self
    }
    /// <p>The storage settings for a space.</p>
    pub fn get_space_storage_settings(&self) -> &::std::option::Option<crate::types::SpaceStorageSettings> {
        &self.space_storage_settings
    }
    /// Consumes the builder and constructs a [`SpaceSettingsSummary`](crate::types::SpaceSettingsSummary).
    pub fn build(self) -> crate::types::SpaceSettingsSummary {
        crate::types::SpaceSettingsSummary {
            app_type: self.app_type,
            space_storage_settings: self.space_storage_settings,
        }
    }
}
