// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The collection of settings used by an AutoML job V2 for the text classification problem type.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct TextClassificationJobConfig {
    /// <p>How long a job is allowed to run, or how many candidates a job is allowed to generate.</p>
    pub completion_criteria: ::std::option::Option<crate::types::AutoMlJobCompletionCriteria>,
    /// <p>The name of the column used to provide the sentences to be classified. It should not be the same as the target column.</p>
    pub content_column: ::std::option::Option<::std::string::String>,
    /// <p>The name of the column used to provide the class labels. It should not be same as the content column.</p>
    pub target_label_column: ::std::option::Option<::std::string::String>,
}
impl TextClassificationJobConfig {
    /// <p>How long a job is allowed to run, or how many candidates a job is allowed to generate.</p>
    pub fn completion_criteria(&self) -> ::std::option::Option<&crate::types::AutoMlJobCompletionCriteria> {
        self.completion_criteria.as_ref()
    }
    /// <p>The name of the column used to provide the sentences to be classified. It should not be the same as the target column.</p>
    pub fn content_column(&self) -> ::std::option::Option<&str> {
        self.content_column.as_deref()
    }
    /// <p>The name of the column used to provide the class labels. It should not be same as the content column.</p>
    pub fn target_label_column(&self) -> ::std::option::Option<&str> {
        self.target_label_column.as_deref()
    }
}
impl TextClassificationJobConfig {
    /// Creates a new builder-style object to manufacture [`TextClassificationJobConfig`](crate::types::TextClassificationJobConfig).
    pub fn builder() -> crate::types::builders::TextClassificationJobConfigBuilder {
        crate::types::builders::TextClassificationJobConfigBuilder::default()
    }
}

/// A builder for [`TextClassificationJobConfig`](crate::types::TextClassificationJobConfig).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct TextClassificationJobConfigBuilder {
    pub(crate) completion_criteria: ::std::option::Option<crate::types::AutoMlJobCompletionCriteria>,
    pub(crate) content_column: ::std::option::Option<::std::string::String>,
    pub(crate) target_label_column: ::std::option::Option<::std::string::String>,
}
impl TextClassificationJobConfigBuilder {
    /// <p>How long a job is allowed to run, or how many candidates a job is allowed to generate.</p>
    pub fn completion_criteria(mut self, input: crate::types::AutoMlJobCompletionCriteria) -> Self {
        self.completion_criteria = ::std::option::Option::Some(input);
        self
    }
    /// <p>How long a job is allowed to run, or how many candidates a job is allowed to generate.</p>
    pub fn set_completion_criteria(mut self, input: ::std::option::Option<crate::types::AutoMlJobCompletionCriteria>) -> Self {
        self.completion_criteria = input;
        self
    }
    /// <p>How long a job is allowed to run, or how many candidates a job is allowed to generate.</p>
    pub fn get_completion_criteria(&self) -> &::std::option::Option<crate::types::AutoMlJobCompletionCriteria> {
        &self.completion_criteria
    }
    /// <p>The name of the column used to provide the sentences to be classified. It should not be the same as the target column.</p>
    /// This field is required.
    pub fn content_column(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.content_column = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the column used to provide the sentences to be classified. It should not be the same as the target column.</p>
    pub fn set_content_column(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.content_column = input;
        self
    }
    /// <p>The name of the column used to provide the sentences to be classified. It should not be the same as the target column.</p>
    pub fn get_content_column(&self) -> &::std::option::Option<::std::string::String> {
        &self.content_column
    }
    /// <p>The name of the column used to provide the class labels. It should not be same as the content column.</p>
    /// This field is required.
    pub fn target_label_column(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.target_label_column = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the column used to provide the class labels. It should not be same as the content column.</p>
    pub fn set_target_label_column(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.target_label_column = input;
        self
    }
    /// <p>The name of the column used to provide the class labels. It should not be same as the content column.</p>
    pub fn get_target_label_column(&self) -> &::std::option::Option<::std::string::String> {
        &self.target_label_column
    }
    /// Consumes the builder and constructs a [`TextClassificationJobConfig`](crate::types::TextClassificationJobConfig).
    pub fn build(self) -> crate::types::TextClassificationJobConfig {
        crate::types::TextClassificationJobConfig {
            completion_criteria: self.completion_criteria,
            content_column: self.content_column,
            target_label_column: self.target_label_column,
        }
    }
}
