// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Detailed information about the source of a trial component. Either <code>ProcessingJob</code> or <code>TrainingJob</code> is returned.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct TrialComponentSourceDetail {
    /// <p>The Amazon Resource Name (ARN) of the source.</p>
    #[doc(hidden)]
    pub source_arn: std::option::Option<std::string::String>,
    /// <p>Information about a training job that's the source of a trial component.</p>
    #[doc(hidden)]
    pub training_job: std::option::Option<crate::types::TrainingJob>,
    /// <p>Information about a processing job that's the source of a trial component.</p>
    #[doc(hidden)]
    pub processing_job: std::option::Option<crate::types::ProcessingJob>,
    /// <p>Information about a transform job that's the source of a trial component.</p>
    #[doc(hidden)]
    pub transform_job: std::option::Option<crate::types::TransformJob>,
}
impl TrialComponentSourceDetail {
    /// <p>The Amazon Resource Name (ARN) of the source.</p>
    pub fn source_arn(&self) -> std::option::Option<&str> {
        self.source_arn.as_deref()
    }
    /// <p>Information about a training job that's the source of a trial component.</p>
    pub fn training_job(&self) -> std::option::Option<&crate::types::TrainingJob> {
        self.training_job.as_ref()
    }
    /// <p>Information about a processing job that's the source of a trial component.</p>
    pub fn processing_job(&self) -> std::option::Option<&crate::types::ProcessingJob> {
        self.processing_job.as_ref()
    }
    /// <p>Information about a transform job that's the source of a trial component.</p>
    pub fn transform_job(&self) -> std::option::Option<&crate::types::TransformJob> {
        self.transform_job.as_ref()
    }
}
impl TrialComponentSourceDetail {
    /// Creates a new builder-style object to manufacture [`TrialComponentSourceDetail`](crate::types::TrialComponentSourceDetail).
    pub fn builder() -> crate::types::builders::TrialComponentSourceDetailBuilder {
        crate::types::builders::TrialComponentSourceDetailBuilder::default()
    }
}

/// A builder for [`TrialComponentSourceDetail`](crate::types::TrialComponentSourceDetail).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct TrialComponentSourceDetailBuilder {
    pub(crate) source_arn: std::option::Option<std::string::String>,
    pub(crate) training_job: std::option::Option<crate::types::TrainingJob>,
    pub(crate) processing_job: std::option::Option<crate::types::ProcessingJob>,
    pub(crate) transform_job: std::option::Option<crate::types::TransformJob>,
}
impl TrialComponentSourceDetailBuilder {
    /// <p>The Amazon Resource Name (ARN) of the source.</p>
    pub fn source_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.source_arn = Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the source.</p>
    pub fn set_source_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.source_arn = input;
        self
    }
    /// <p>Information about a training job that's the source of a trial component.</p>
    pub fn training_job(mut self, input: crate::types::TrainingJob) -> Self {
        self.training_job = Some(input);
        self
    }
    /// <p>Information about a training job that's the source of a trial component.</p>
    pub fn set_training_job(
        mut self,
        input: std::option::Option<crate::types::TrainingJob>,
    ) -> Self {
        self.training_job = input;
        self
    }
    /// <p>Information about a processing job that's the source of a trial component.</p>
    pub fn processing_job(mut self, input: crate::types::ProcessingJob) -> Self {
        self.processing_job = Some(input);
        self
    }
    /// <p>Information about a processing job that's the source of a trial component.</p>
    pub fn set_processing_job(
        mut self,
        input: std::option::Option<crate::types::ProcessingJob>,
    ) -> Self {
        self.processing_job = input;
        self
    }
    /// <p>Information about a transform job that's the source of a trial component.</p>
    pub fn transform_job(mut self, input: crate::types::TransformJob) -> Self {
        self.transform_job = Some(input);
        self
    }
    /// <p>Information about a transform job that's the source of a trial component.</p>
    pub fn set_transform_job(
        mut self,
        input: std::option::Option<crate::types::TransformJob>,
    ) -> Self {
        self.transform_job = input;
        self
    }
    /// Consumes the builder and constructs a [`TrialComponentSourceDetail`](crate::types::TrialComponentSourceDetail).
    pub fn build(self) -> crate::types::TrialComponentSourceDetail {
        crate::types::TrialComponentSourceDetail {
            source_arn: self.source_arn,
            training_job: self.training_job,
            processing_job: self.processing_job,
            transform_job: self.transform_job,
        }
    }
}
