// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p> A resource catalog containing all of the resources of a specific resource type within a resource owner account. For an example on sharing the Amazon SageMaker Feature Store <code>DefaultFeatureGroupCatalog</code>, see <a href="https://docs.aws.amazon.com/sagemaker/latest/APIReference/feature-store-cross-account-discoverability-share-sagemaker-catalog.html">Share Amazon SageMaker Catalog resource type</a> in the Amazon SageMaker Developer Guide. </p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ResourceCatalog {
    /// <p> The Amazon Resource Name (ARN) of the <code>ResourceCatalog</code>. </p>
    pub resource_catalog_arn: ::std::option::Option<::std::string::String>,
    /// <p> The name of the <code>ResourceCatalog</code>. </p>
    pub resource_catalog_name: ::std::option::Option<::std::string::String>,
    /// <p> A free form description of the <code>ResourceCatalog</code>. </p>
    pub description: ::std::option::Option<::std::string::String>,
    /// <p> The time the <code>ResourceCatalog</code> was created. </p>
    pub creation_time: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl ResourceCatalog {
    /// <p> The Amazon Resource Name (ARN) of the <code>ResourceCatalog</code>. </p>
    pub fn resource_catalog_arn(&self) -> ::std::option::Option<&str> {
        self.resource_catalog_arn.as_deref()
    }
    /// <p> The name of the <code>ResourceCatalog</code>. </p>
    pub fn resource_catalog_name(&self) -> ::std::option::Option<&str> {
        self.resource_catalog_name.as_deref()
    }
    /// <p> A free form description of the <code>ResourceCatalog</code>. </p>
    pub fn description(&self) -> ::std::option::Option<&str> {
        self.description.as_deref()
    }
    /// <p> The time the <code>ResourceCatalog</code> was created. </p>
    pub fn creation_time(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.creation_time.as_ref()
    }
}
impl ResourceCatalog {
    /// Creates a new builder-style object to manufacture [`ResourceCatalog`](crate::types::ResourceCatalog).
    pub fn builder() -> crate::types::builders::ResourceCatalogBuilder {
        crate::types::builders::ResourceCatalogBuilder::default()
    }
}

/// A builder for [`ResourceCatalog`](crate::types::ResourceCatalog).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ResourceCatalogBuilder {
    pub(crate) resource_catalog_arn: ::std::option::Option<::std::string::String>,
    pub(crate) resource_catalog_name: ::std::option::Option<::std::string::String>,
    pub(crate) description: ::std::option::Option<::std::string::String>,
    pub(crate) creation_time: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl ResourceCatalogBuilder {
    /// <p> The Amazon Resource Name (ARN) of the <code>ResourceCatalog</code>. </p>
    /// This field is required.
    pub fn resource_catalog_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.resource_catalog_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p> The Amazon Resource Name (ARN) of the <code>ResourceCatalog</code>. </p>
    pub fn set_resource_catalog_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.resource_catalog_arn = input;
        self
    }
    /// <p> The Amazon Resource Name (ARN) of the <code>ResourceCatalog</code>. </p>
    pub fn get_resource_catalog_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.resource_catalog_arn
    }
    /// <p> The name of the <code>ResourceCatalog</code>. </p>
    /// This field is required.
    pub fn resource_catalog_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.resource_catalog_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p> The name of the <code>ResourceCatalog</code>. </p>
    pub fn set_resource_catalog_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.resource_catalog_name = input;
        self
    }
    /// <p> The name of the <code>ResourceCatalog</code>. </p>
    pub fn get_resource_catalog_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.resource_catalog_name
    }
    /// <p> A free form description of the <code>ResourceCatalog</code>. </p>
    /// This field is required.
    pub fn description(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.description = ::std::option::Option::Some(input.into());
        self
    }
    /// <p> A free form description of the <code>ResourceCatalog</code>. </p>
    pub fn set_description(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.description = input;
        self
    }
    /// <p> A free form description of the <code>ResourceCatalog</code>. </p>
    pub fn get_description(&self) -> &::std::option::Option<::std::string::String> {
        &self.description
    }
    /// <p> The time the <code>ResourceCatalog</code> was created. </p>
    /// This field is required.
    pub fn creation_time(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.creation_time = ::std::option::Option::Some(input);
        self
    }
    /// <p> The time the <code>ResourceCatalog</code> was created. </p>
    pub fn set_creation_time(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.creation_time = input;
        self
    }
    /// <p> The time the <code>ResourceCatalog</code> was created. </p>
    pub fn get_creation_time(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.creation_time
    }
    /// Consumes the builder and constructs a [`ResourceCatalog`](crate::types::ResourceCatalog).
    pub fn build(self) -> crate::types::ResourceCatalog {
        crate::types::ResourceCatalog {
            resource_catalog_arn: self.resource_catalog_arn,
            resource_catalog_name: self.resource_catalog_name,
            description: self.description,
            creation_time: self.creation_time,
        }
    }
}
