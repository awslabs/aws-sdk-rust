// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Lists a summary of the properties of a context. A context provides a logical grouping of other entities.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ContextSummary {
    /// <p>The Amazon Resource Name (ARN) of the context.</p>
    #[doc(hidden)]
    pub context_arn: std::option::Option<std::string::String>,
    /// <p>The name of the context.</p>
    #[doc(hidden)]
    pub context_name: std::option::Option<std::string::String>,
    /// <p>The source of the context.</p>
    #[doc(hidden)]
    pub source: std::option::Option<crate::types::ContextSource>,
    /// <p>The type of the context.</p>
    #[doc(hidden)]
    pub context_type: std::option::Option<std::string::String>,
    /// <p>When the context was created.</p>
    #[doc(hidden)]
    pub creation_time: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>When the context was last modified.</p>
    #[doc(hidden)]
    pub last_modified_time: std::option::Option<aws_smithy_types::DateTime>,
}
impl ContextSummary {
    /// <p>The Amazon Resource Name (ARN) of the context.</p>
    pub fn context_arn(&self) -> std::option::Option<&str> {
        self.context_arn.as_deref()
    }
    /// <p>The name of the context.</p>
    pub fn context_name(&self) -> std::option::Option<&str> {
        self.context_name.as_deref()
    }
    /// <p>The source of the context.</p>
    pub fn source(&self) -> std::option::Option<&crate::types::ContextSource> {
        self.source.as_ref()
    }
    /// <p>The type of the context.</p>
    pub fn context_type(&self) -> std::option::Option<&str> {
        self.context_type.as_deref()
    }
    /// <p>When the context was created.</p>
    pub fn creation_time(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.creation_time.as_ref()
    }
    /// <p>When the context was last modified.</p>
    pub fn last_modified_time(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.last_modified_time.as_ref()
    }
}
impl ContextSummary {
    /// Creates a new builder-style object to manufacture [`ContextSummary`](crate::types::ContextSummary).
    pub fn builder() -> crate::types::builders::ContextSummaryBuilder {
        crate::types::builders::ContextSummaryBuilder::default()
    }
}

/// A builder for [`ContextSummary`](crate::types::ContextSummary).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ContextSummaryBuilder {
    pub(crate) context_arn: std::option::Option<std::string::String>,
    pub(crate) context_name: std::option::Option<std::string::String>,
    pub(crate) source: std::option::Option<crate::types::ContextSource>,
    pub(crate) context_type: std::option::Option<std::string::String>,
    pub(crate) creation_time: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) last_modified_time: std::option::Option<aws_smithy_types::DateTime>,
}
impl ContextSummaryBuilder {
    /// <p>The Amazon Resource Name (ARN) of the context.</p>
    pub fn context_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.context_arn = Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the context.</p>
    pub fn set_context_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.context_arn = input;
        self
    }
    /// <p>The name of the context.</p>
    pub fn context_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.context_name = Some(input.into());
        self
    }
    /// <p>The name of the context.</p>
    pub fn set_context_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.context_name = input;
        self
    }
    /// <p>The source of the context.</p>
    pub fn source(mut self, input: crate::types::ContextSource) -> Self {
        self.source = Some(input);
        self
    }
    /// <p>The source of the context.</p>
    pub fn set_source(mut self, input: std::option::Option<crate::types::ContextSource>) -> Self {
        self.source = input;
        self
    }
    /// <p>The type of the context.</p>
    pub fn context_type(mut self, input: impl Into<std::string::String>) -> Self {
        self.context_type = Some(input.into());
        self
    }
    /// <p>The type of the context.</p>
    pub fn set_context_type(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.context_type = input;
        self
    }
    /// <p>When the context was created.</p>
    pub fn creation_time(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.creation_time = Some(input);
        self
    }
    /// <p>When the context was created.</p>
    pub fn set_creation_time(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.creation_time = input;
        self
    }
    /// <p>When the context was last modified.</p>
    pub fn last_modified_time(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.last_modified_time = Some(input);
        self
    }
    /// <p>When the context was last modified.</p>
    pub fn set_last_modified_time(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.last_modified_time = input;
        self
    }
    /// Consumes the builder and constructs a [`ContextSummary`](crate::types::ContextSummary).
    pub fn build(self) -> crate::types::ContextSummary {
        crate::types::ContextSummary {
            context_arn: self.context_arn,
            context_name: self.context_name,
            source: self.source,
            context_type: self.context_type,
            creation_time: self.creation_time,
            last_modified_time: self.last_modified_time,
        }
    }
}
