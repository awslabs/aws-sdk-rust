// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Container for user interface template information.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct UiTemplateInfo {
    /// <p>The URL for the user interface template.</p>
    #[doc(hidden)]
    pub url: std::option::Option<std::string::String>,
    /// <p>The SHA-256 digest of the contents of the template.</p>
    #[doc(hidden)]
    pub content_sha256: std::option::Option<std::string::String>,
}
impl UiTemplateInfo {
    /// <p>The URL for the user interface template.</p>
    pub fn url(&self) -> std::option::Option<&str> {
        self.url.as_deref()
    }
    /// <p>The SHA-256 digest of the contents of the template.</p>
    pub fn content_sha256(&self) -> std::option::Option<&str> {
        self.content_sha256.as_deref()
    }
}
impl UiTemplateInfo {
    /// Creates a new builder-style object to manufacture [`UiTemplateInfo`](crate::types::UiTemplateInfo).
    pub fn builder() -> crate::types::builders::UiTemplateInfoBuilder {
        crate::types::builders::UiTemplateInfoBuilder::default()
    }
}

/// A builder for [`UiTemplateInfo`](crate::types::UiTemplateInfo).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct UiTemplateInfoBuilder {
    pub(crate) url: std::option::Option<std::string::String>,
    pub(crate) content_sha256: std::option::Option<std::string::String>,
}
impl UiTemplateInfoBuilder {
    /// <p>The URL for the user interface template.</p>
    pub fn url(mut self, input: impl Into<std::string::String>) -> Self {
        self.url = Some(input.into());
        self
    }
    /// <p>The URL for the user interface template.</p>
    pub fn set_url(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.url = input;
        self
    }
    /// <p>The SHA-256 digest of the contents of the template.</p>
    pub fn content_sha256(mut self, input: impl Into<std::string::String>) -> Self {
        self.content_sha256 = Some(input.into());
        self
    }
    /// <p>The SHA-256 digest of the contents of the template.</p>
    pub fn set_content_sha256(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.content_sha256 = input;
        self
    }
    /// Consumes the builder and constructs a [`UiTemplateInfo`](crate::types::UiTemplateInfo).
    pub fn build(self) -> crate::types::UiTemplateInfo {
        crate::types::UiTemplateInfo {
            url: self.url,
            content_sha256: self.content_sha256,
        }
    }
}
