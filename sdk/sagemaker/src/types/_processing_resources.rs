// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Identifies the resources, ML compute instances, and ML storage volumes to deploy for a processing job. In distributed training, you specify more than one instance.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ProcessingResources {
    /// <p>The configuration for the resources in a cluster used to run the processing job.</p>
    #[doc(hidden)]
    pub cluster_config: std::option::Option<crate::types::ProcessingClusterConfig>,
}
impl ProcessingResources {
    /// <p>The configuration for the resources in a cluster used to run the processing job.</p>
    pub fn cluster_config(&self) -> std::option::Option<&crate::types::ProcessingClusterConfig> {
        self.cluster_config.as_ref()
    }
}
impl ProcessingResources {
    /// Creates a new builder-style object to manufacture [`ProcessingResources`](crate::types::ProcessingResources).
    pub fn builder() -> crate::types::builders::ProcessingResourcesBuilder {
        crate::types::builders::ProcessingResourcesBuilder::default()
    }
}

/// A builder for [`ProcessingResources`](crate::types::ProcessingResources).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ProcessingResourcesBuilder {
    pub(crate) cluster_config: std::option::Option<crate::types::ProcessingClusterConfig>,
}
impl ProcessingResourcesBuilder {
    /// <p>The configuration for the resources in a cluster used to run the processing job.</p>
    pub fn cluster_config(mut self, input: crate::types::ProcessingClusterConfig) -> Self {
        self.cluster_config = Some(input);
        self
    }
    /// <p>The configuration for the resources in a cluster used to run the processing job.</p>
    pub fn set_cluster_config(
        mut self,
        input: std::option::Option<crate::types::ProcessingClusterConfig>,
    ) -> Self {
        self.cluster_config = input;
        self
    }
    /// Consumes the builder and constructs a [`ProcessingResources`](crate::types::ProcessingResources).
    pub fn build(self) -> crate::types::ProcessingResources {
        crate::types::ProcessingResources {
            cluster_config: self.cluster_config,
        }
    }
}
