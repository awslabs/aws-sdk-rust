// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The lifecycle configuration for a SageMaker HyperPod cluster.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ClusterLifeCycleConfig {
    /// <p>An Amazon S3 bucket path where your lifecycle scripts are stored.</p><important>
    /// <p>Make sure that the S3 bucket path starts with <code>s3://sagemaker-</code>. The <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/sagemaker-hyperpod-prerequisites.html#sagemaker-hyperpod-prerequisites-iam-role-for-hyperpod">IAM role for SageMaker HyperPod</a> has the managed <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/security-iam-awsmanpol-cluster.html"> <code>AmazonSageMakerClusterInstanceRolePolicy</code> </a> attached, which allows access to S3 buckets with the specific prefix <code>sagemaker-</code>.</p>
    /// </important>
    pub source_s3_uri: ::std::option::Option<::std::string::String>,
    /// <p>The file name of the entrypoint script of lifecycle scripts under <code>SourceS3Uri</code>. This entrypoint script runs during cluster creation.</p>
    pub on_create: ::std::option::Option<::std::string::String>,
}
impl ClusterLifeCycleConfig {
    /// <p>An Amazon S3 bucket path where your lifecycle scripts are stored.</p><important>
    /// <p>Make sure that the S3 bucket path starts with <code>s3://sagemaker-</code>. The <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/sagemaker-hyperpod-prerequisites.html#sagemaker-hyperpod-prerequisites-iam-role-for-hyperpod">IAM role for SageMaker HyperPod</a> has the managed <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/security-iam-awsmanpol-cluster.html"> <code>AmazonSageMakerClusterInstanceRolePolicy</code> </a> attached, which allows access to S3 buckets with the specific prefix <code>sagemaker-</code>.</p>
    /// </important>
    pub fn source_s3_uri(&self) -> ::std::option::Option<&str> {
        self.source_s3_uri.as_deref()
    }
    /// <p>The file name of the entrypoint script of lifecycle scripts under <code>SourceS3Uri</code>. This entrypoint script runs during cluster creation.</p>
    pub fn on_create(&self) -> ::std::option::Option<&str> {
        self.on_create.as_deref()
    }
}
impl ClusterLifeCycleConfig {
    /// Creates a new builder-style object to manufacture [`ClusterLifeCycleConfig`](crate::types::ClusterLifeCycleConfig).
    pub fn builder() -> crate::types::builders::ClusterLifeCycleConfigBuilder {
        crate::types::builders::ClusterLifeCycleConfigBuilder::default()
    }
}

/// A builder for [`ClusterLifeCycleConfig`](crate::types::ClusterLifeCycleConfig).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ClusterLifeCycleConfigBuilder {
    pub(crate) source_s3_uri: ::std::option::Option<::std::string::String>,
    pub(crate) on_create: ::std::option::Option<::std::string::String>,
}
impl ClusterLifeCycleConfigBuilder {
    /// <p>An Amazon S3 bucket path where your lifecycle scripts are stored.</p><important>
    /// <p>Make sure that the S3 bucket path starts with <code>s3://sagemaker-</code>. The <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/sagemaker-hyperpod-prerequisites.html#sagemaker-hyperpod-prerequisites-iam-role-for-hyperpod">IAM role for SageMaker HyperPod</a> has the managed <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/security-iam-awsmanpol-cluster.html"> <code>AmazonSageMakerClusterInstanceRolePolicy</code> </a> attached, which allows access to S3 buckets with the specific prefix <code>sagemaker-</code>.</p>
    /// </important>
    /// This field is required.
    pub fn source_s3_uri(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.source_s3_uri = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>An Amazon S3 bucket path where your lifecycle scripts are stored.</p><important>
    /// <p>Make sure that the S3 bucket path starts with <code>s3://sagemaker-</code>. The <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/sagemaker-hyperpod-prerequisites.html#sagemaker-hyperpod-prerequisites-iam-role-for-hyperpod">IAM role for SageMaker HyperPod</a> has the managed <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/security-iam-awsmanpol-cluster.html"> <code>AmazonSageMakerClusterInstanceRolePolicy</code> </a> attached, which allows access to S3 buckets with the specific prefix <code>sagemaker-</code>.</p>
    /// </important>
    pub fn set_source_s3_uri(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.source_s3_uri = input;
        self
    }
    /// <p>An Amazon S3 bucket path where your lifecycle scripts are stored.</p><important>
    /// <p>Make sure that the S3 bucket path starts with <code>s3://sagemaker-</code>. The <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/sagemaker-hyperpod-prerequisites.html#sagemaker-hyperpod-prerequisites-iam-role-for-hyperpod">IAM role for SageMaker HyperPod</a> has the managed <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/security-iam-awsmanpol-cluster.html"> <code>AmazonSageMakerClusterInstanceRolePolicy</code> </a> attached, which allows access to S3 buckets with the specific prefix <code>sagemaker-</code>.</p>
    /// </important>
    pub fn get_source_s3_uri(&self) -> &::std::option::Option<::std::string::String> {
        &self.source_s3_uri
    }
    /// <p>The file name of the entrypoint script of lifecycle scripts under <code>SourceS3Uri</code>. This entrypoint script runs during cluster creation.</p>
    /// This field is required.
    pub fn on_create(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.on_create = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The file name of the entrypoint script of lifecycle scripts under <code>SourceS3Uri</code>. This entrypoint script runs during cluster creation.</p>
    pub fn set_on_create(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.on_create = input;
        self
    }
    /// <p>The file name of the entrypoint script of lifecycle scripts under <code>SourceS3Uri</code>. This entrypoint script runs during cluster creation.</p>
    pub fn get_on_create(&self) -> &::std::option::Option<::std::string::String> {
        &self.on_create
    }
    /// Consumes the builder and constructs a [`ClusterLifeCycleConfig`](crate::types::ClusterLifeCycleConfig).
    pub fn build(self) -> crate::types::ClusterLifeCycleConfig {
        crate::types::ClusterLifeCycleConfig {
            source_s3_uri: self.source_s3_uri,
            on_create: self.on_create,
        }
    }
}
