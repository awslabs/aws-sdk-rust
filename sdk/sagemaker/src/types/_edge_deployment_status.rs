// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains information summarizing the deployment stage results.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct EdgeDeploymentStatus {
    /// <p>The general status of the current stage.</p>
    #[doc(hidden)]
    pub stage_status: std::option::Option<crate::types::StageStatus>,
    /// <p>The number of edge devices with the successful deployment in the current stage.</p>
    #[doc(hidden)]
    pub edge_deployment_success_in_stage: i32,
    /// <p>The number of edge devices yet to pick up the deployment in current stage, or in progress.</p>
    #[doc(hidden)]
    pub edge_deployment_pending_in_stage: i32,
    /// <p>The number of edge devices that failed the deployment in current stage.</p>
    #[doc(hidden)]
    pub edge_deployment_failed_in_stage: i32,
    /// <p>A detailed message about deployment status in current stage.</p>
    #[doc(hidden)]
    pub edge_deployment_status_message: std::option::Option<std::string::String>,
    /// <p>The time when the deployment API started.</p>
    #[doc(hidden)]
    pub edge_deployment_stage_start_time: std::option::Option<aws_smithy_types::DateTime>,
}
impl EdgeDeploymentStatus {
    /// <p>The general status of the current stage.</p>
    pub fn stage_status(&self) -> std::option::Option<&crate::types::StageStatus> {
        self.stage_status.as_ref()
    }
    /// <p>The number of edge devices with the successful deployment in the current stage.</p>
    pub fn edge_deployment_success_in_stage(&self) -> i32 {
        self.edge_deployment_success_in_stage
    }
    /// <p>The number of edge devices yet to pick up the deployment in current stage, or in progress.</p>
    pub fn edge_deployment_pending_in_stage(&self) -> i32 {
        self.edge_deployment_pending_in_stage
    }
    /// <p>The number of edge devices that failed the deployment in current stage.</p>
    pub fn edge_deployment_failed_in_stage(&self) -> i32 {
        self.edge_deployment_failed_in_stage
    }
    /// <p>A detailed message about deployment status in current stage.</p>
    pub fn edge_deployment_status_message(&self) -> std::option::Option<&str> {
        self.edge_deployment_status_message.as_deref()
    }
    /// <p>The time when the deployment API started.</p>
    pub fn edge_deployment_stage_start_time(
        &self,
    ) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.edge_deployment_stage_start_time.as_ref()
    }
}
impl EdgeDeploymentStatus {
    /// Creates a new builder-style object to manufacture [`EdgeDeploymentStatus`](crate::types::EdgeDeploymentStatus).
    pub fn builder() -> crate::types::builders::EdgeDeploymentStatusBuilder {
        crate::types::builders::EdgeDeploymentStatusBuilder::default()
    }
}

/// A builder for [`EdgeDeploymentStatus`](crate::types::EdgeDeploymentStatus).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct EdgeDeploymentStatusBuilder {
    pub(crate) stage_status: std::option::Option<crate::types::StageStatus>,
    pub(crate) edge_deployment_success_in_stage: std::option::Option<i32>,
    pub(crate) edge_deployment_pending_in_stage: std::option::Option<i32>,
    pub(crate) edge_deployment_failed_in_stage: std::option::Option<i32>,
    pub(crate) edge_deployment_status_message: std::option::Option<std::string::String>,
    pub(crate) edge_deployment_stage_start_time: std::option::Option<aws_smithy_types::DateTime>,
}
impl EdgeDeploymentStatusBuilder {
    /// <p>The general status of the current stage.</p>
    pub fn stage_status(mut self, input: crate::types::StageStatus) -> Self {
        self.stage_status = Some(input);
        self
    }
    /// <p>The general status of the current stage.</p>
    pub fn set_stage_status(
        mut self,
        input: std::option::Option<crate::types::StageStatus>,
    ) -> Self {
        self.stage_status = input;
        self
    }
    /// <p>The number of edge devices with the successful deployment in the current stage.</p>
    pub fn edge_deployment_success_in_stage(mut self, input: i32) -> Self {
        self.edge_deployment_success_in_stage = Some(input);
        self
    }
    /// <p>The number of edge devices with the successful deployment in the current stage.</p>
    pub fn set_edge_deployment_success_in_stage(mut self, input: std::option::Option<i32>) -> Self {
        self.edge_deployment_success_in_stage = input;
        self
    }
    /// <p>The number of edge devices yet to pick up the deployment in current stage, or in progress.</p>
    pub fn edge_deployment_pending_in_stage(mut self, input: i32) -> Self {
        self.edge_deployment_pending_in_stage = Some(input);
        self
    }
    /// <p>The number of edge devices yet to pick up the deployment in current stage, or in progress.</p>
    pub fn set_edge_deployment_pending_in_stage(mut self, input: std::option::Option<i32>) -> Self {
        self.edge_deployment_pending_in_stage = input;
        self
    }
    /// <p>The number of edge devices that failed the deployment in current stage.</p>
    pub fn edge_deployment_failed_in_stage(mut self, input: i32) -> Self {
        self.edge_deployment_failed_in_stage = Some(input);
        self
    }
    /// <p>The number of edge devices that failed the deployment in current stage.</p>
    pub fn set_edge_deployment_failed_in_stage(mut self, input: std::option::Option<i32>) -> Self {
        self.edge_deployment_failed_in_stage = input;
        self
    }
    /// <p>A detailed message about deployment status in current stage.</p>
    pub fn edge_deployment_status_message(mut self, input: impl Into<std::string::String>) -> Self {
        self.edge_deployment_status_message = Some(input.into());
        self
    }
    /// <p>A detailed message about deployment status in current stage.</p>
    pub fn set_edge_deployment_status_message(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.edge_deployment_status_message = input;
        self
    }
    /// <p>The time when the deployment API started.</p>
    pub fn edge_deployment_stage_start_time(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.edge_deployment_stage_start_time = Some(input);
        self
    }
    /// <p>The time when the deployment API started.</p>
    pub fn set_edge_deployment_stage_start_time(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.edge_deployment_stage_start_time = input;
        self
    }
    /// Consumes the builder and constructs a [`EdgeDeploymentStatus`](crate::types::EdgeDeploymentStatus).
    pub fn build(self) -> crate::types::EdgeDeploymentStatus {
        crate::types::EdgeDeploymentStatus {
            stage_status: self.stage_status,
            edge_deployment_success_in_stage: self
                .edge_deployment_success_in_stage
                .unwrap_or_default(),
            edge_deployment_pending_in_stage: self
                .edge_deployment_pending_in_stage
                .unwrap_or_default(),
            edge_deployment_failed_in_stage: self
                .edge_deployment_failed_in_stage
                .unwrap_or_default(),
            edge_deployment_status_message: self.edge_deployment_status_message,
            edge_deployment_stage_start_time: self.edge_deployment_stage_start_time,
        }
    }
}
