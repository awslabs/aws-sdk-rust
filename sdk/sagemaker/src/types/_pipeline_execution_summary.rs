// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A pipeline execution summary.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct PipelineExecutionSummary {
    /// <p>The Amazon Resource Name (ARN) of the pipeline execution.</p>
    #[doc(hidden)]
    pub pipeline_execution_arn: std::option::Option<std::string::String>,
    /// <p>The start time of the pipeline execution.</p>
    #[doc(hidden)]
    pub start_time: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>The status of the pipeline execution.</p>
    #[doc(hidden)]
    pub pipeline_execution_status: std::option::Option<crate::types::PipelineExecutionStatus>,
    /// <p>The description of the pipeline execution.</p>
    #[doc(hidden)]
    pub pipeline_execution_description: std::option::Option<std::string::String>,
    /// <p>The display name of the pipeline execution.</p>
    #[doc(hidden)]
    pub pipeline_execution_display_name: std::option::Option<std::string::String>,
    /// <p>A message generated by SageMaker Pipelines describing why the pipeline execution failed.</p>
    #[doc(hidden)]
    pub pipeline_execution_failure_reason: std::option::Option<std::string::String>,
}
impl PipelineExecutionSummary {
    /// <p>The Amazon Resource Name (ARN) of the pipeline execution.</p>
    pub fn pipeline_execution_arn(&self) -> std::option::Option<&str> {
        self.pipeline_execution_arn.as_deref()
    }
    /// <p>The start time of the pipeline execution.</p>
    pub fn start_time(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.start_time.as_ref()
    }
    /// <p>The status of the pipeline execution.</p>
    pub fn pipeline_execution_status(
        &self,
    ) -> std::option::Option<&crate::types::PipelineExecutionStatus> {
        self.pipeline_execution_status.as_ref()
    }
    /// <p>The description of the pipeline execution.</p>
    pub fn pipeline_execution_description(&self) -> std::option::Option<&str> {
        self.pipeline_execution_description.as_deref()
    }
    /// <p>The display name of the pipeline execution.</p>
    pub fn pipeline_execution_display_name(&self) -> std::option::Option<&str> {
        self.pipeline_execution_display_name.as_deref()
    }
    /// <p>A message generated by SageMaker Pipelines describing why the pipeline execution failed.</p>
    pub fn pipeline_execution_failure_reason(&self) -> std::option::Option<&str> {
        self.pipeline_execution_failure_reason.as_deref()
    }
}
impl PipelineExecutionSummary {
    /// Creates a new builder-style object to manufacture [`PipelineExecutionSummary`](crate::types::PipelineExecutionSummary).
    pub fn builder() -> crate::types::builders::PipelineExecutionSummaryBuilder {
        crate::types::builders::PipelineExecutionSummaryBuilder::default()
    }
}

/// A builder for [`PipelineExecutionSummary`](crate::types::PipelineExecutionSummary).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct PipelineExecutionSummaryBuilder {
    pub(crate) pipeline_execution_arn: std::option::Option<std::string::String>,
    pub(crate) start_time: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) pipeline_execution_status:
        std::option::Option<crate::types::PipelineExecutionStatus>,
    pub(crate) pipeline_execution_description: std::option::Option<std::string::String>,
    pub(crate) pipeline_execution_display_name: std::option::Option<std::string::String>,
    pub(crate) pipeline_execution_failure_reason: std::option::Option<std::string::String>,
}
impl PipelineExecutionSummaryBuilder {
    /// <p>The Amazon Resource Name (ARN) of the pipeline execution.</p>
    pub fn pipeline_execution_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.pipeline_execution_arn = Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the pipeline execution.</p>
    pub fn set_pipeline_execution_arn(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.pipeline_execution_arn = input;
        self
    }
    /// <p>The start time of the pipeline execution.</p>
    pub fn start_time(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.start_time = Some(input);
        self
    }
    /// <p>The start time of the pipeline execution.</p>
    pub fn set_start_time(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.start_time = input;
        self
    }
    /// <p>The status of the pipeline execution.</p>
    pub fn pipeline_execution_status(
        mut self,
        input: crate::types::PipelineExecutionStatus,
    ) -> Self {
        self.pipeline_execution_status = Some(input);
        self
    }
    /// <p>The status of the pipeline execution.</p>
    pub fn set_pipeline_execution_status(
        mut self,
        input: std::option::Option<crate::types::PipelineExecutionStatus>,
    ) -> Self {
        self.pipeline_execution_status = input;
        self
    }
    /// <p>The description of the pipeline execution.</p>
    pub fn pipeline_execution_description(mut self, input: impl Into<std::string::String>) -> Self {
        self.pipeline_execution_description = Some(input.into());
        self
    }
    /// <p>The description of the pipeline execution.</p>
    pub fn set_pipeline_execution_description(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.pipeline_execution_description = input;
        self
    }
    /// <p>The display name of the pipeline execution.</p>
    pub fn pipeline_execution_display_name(
        mut self,
        input: impl Into<std::string::String>,
    ) -> Self {
        self.pipeline_execution_display_name = Some(input.into());
        self
    }
    /// <p>The display name of the pipeline execution.</p>
    pub fn set_pipeline_execution_display_name(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.pipeline_execution_display_name = input;
        self
    }
    /// <p>A message generated by SageMaker Pipelines describing why the pipeline execution failed.</p>
    pub fn pipeline_execution_failure_reason(
        mut self,
        input: impl Into<std::string::String>,
    ) -> Self {
        self.pipeline_execution_failure_reason = Some(input.into());
        self
    }
    /// <p>A message generated by SageMaker Pipelines describing why the pipeline execution failed.</p>
    pub fn set_pipeline_execution_failure_reason(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.pipeline_execution_failure_reason = input;
        self
    }
    /// Consumes the builder and constructs a [`PipelineExecutionSummary`](crate::types::PipelineExecutionSummary).
    pub fn build(self) -> crate::types::PipelineExecutionSummary {
        crate::types::PipelineExecutionSummary {
            pipeline_execution_arn: self.pipeline_execution_arn,
            start_time: self.start_time,
            pipeline_execution_status: self.pipeline_execution_status,
            pipeline_execution_description: self.pipeline_execution_description,
            pipeline_execution_display_name: self.pipeline_execution_display_name,
            pipeline_execution_failure_reason: self.pipeline_execution_failure_reason,
        }
    }
}
