// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The input for the model quality monitoring job. Currently endpoints are supported for input for model quality monitoring jobs.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ModelQualityJobInput {
    /// <p>Input object for the endpoint</p>
    pub endpoint_input: ::std::option::Option<crate::types::EndpointInput>,
    /// <p>Input object for the batch transform job.</p>
    pub batch_transform_input: ::std::option::Option<crate::types::BatchTransformInput>,
    /// <p>The ground truth label provided for the model.</p>
    pub ground_truth_s3_input: ::std::option::Option<crate::types::MonitoringGroundTruthS3Input>,
}
impl ModelQualityJobInput {
    /// <p>Input object for the endpoint</p>
    pub fn endpoint_input(&self) -> ::std::option::Option<&crate::types::EndpointInput> {
        self.endpoint_input.as_ref()
    }
    /// <p>Input object for the batch transform job.</p>
    pub fn batch_transform_input(&self) -> ::std::option::Option<&crate::types::BatchTransformInput> {
        self.batch_transform_input.as_ref()
    }
    /// <p>The ground truth label provided for the model.</p>
    pub fn ground_truth_s3_input(&self) -> ::std::option::Option<&crate::types::MonitoringGroundTruthS3Input> {
        self.ground_truth_s3_input.as_ref()
    }
}
impl ModelQualityJobInput {
    /// Creates a new builder-style object to manufacture [`ModelQualityJobInput`](crate::types::ModelQualityJobInput).
    pub fn builder() -> crate::types::builders::ModelQualityJobInputBuilder {
        crate::types::builders::ModelQualityJobInputBuilder::default()
    }
}

/// A builder for [`ModelQualityJobInput`](crate::types::ModelQualityJobInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ModelQualityJobInputBuilder {
    pub(crate) endpoint_input: ::std::option::Option<crate::types::EndpointInput>,
    pub(crate) batch_transform_input: ::std::option::Option<crate::types::BatchTransformInput>,
    pub(crate) ground_truth_s3_input: ::std::option::Option<crate::types::MonitoringGroundTruthS3Input>,
}
impl ModelQualityJobInputBuilder {
    /// <p>Input object for the endpoint</p>
    pub fn endpoint_input(mut self, input: crate::types::EndpointInput) -> Self {
        self.endpoint_input = ::std::option::Option::Some(input);
        self
    }
    /// <p>Input object for the endpoint</p>
    pub fn set_endpoint_input(mut self, input: ::std::option::Option<crate::types::EndpointInput>) -> Self {
        self.endpoint_input = input;
        self
    }
    /// <p>Input object for the endpoint</p>
    pub fn get_endpoint_input(&self) -> &::std::option::Option<crate::types::EndpointInput> {
        &self.endpoint_input
    }
    /// <p>Input object for the batch transform job.</p>
    pub fn batch_transform_input(mut self, input: crate::types::BatchTransformInput) -> Self {
        self.batch_transform_input = ::std::option::Option::Some(input);
        self
    }
    /// <p>Input object for the batch transform job.</p>
    pub fn set_batch_transform_input(mut self, input: ::std::option::Option<crate::types::BatchTransformInput>) -> Self {
        self.batch_transform_input = input;
        self
    }
    /// <p>Input object for the batch transform job.</p>
    pub fn get_batch_transform_input(&self) -> &::std::option::Option<crate::types::BatchTransformInput> {
        &self.batch_transform_input
    }
    /// <p>The ground truth label provided for the model.</p>
    /// This field is required.
    pub fn ground_truth_s3_input(mut self, input: crate::types::MonitoringGroundTruthS3Input) -> Self {
        self.ground_truth_s3_input = ::std::option::Option::Some(input);
        self
    }
    /// <p>The ground truth label provided for the model.</p>
    pub fn set_ground_truth_s3_input(mut self, input: ::std::option::Option<crate::types::MonitoringGroundTruthS3Input>) -> Self {
        self.ground_truth_s3_input = input;
        self
    }
    /// <p>The ground truth label provided for the model.</p>
    pub fn get_ground_truth_s3_input(&self) -> &::std::option::Option<crate::types::MonitoringGroundTruthS3Input> {
        &self.ground_truth_s3_input
    }
    /// Consumes the builder and constructs a [`ModelQualityJobInput`](crate::types::ModelQualityJobInput).
    pub fn build(self) -> crate::types::ModelQualityJobInput {
        crate::types::ModelQualityJobInput {
            endpoint_input: self.endpoint_input,
            batch_transform_input: self.batch_transform_input,
            ground_truth_s3_input: self.ground_truth_s3_input,
        }
    }
}
