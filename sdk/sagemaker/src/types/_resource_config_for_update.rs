// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The <code>ResourceConfig</code> to update <code>KeepAlivePeriodInSeconds</code>. Other fields in the <code>ResourceConfig</code> cannot be updated.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ResourceConfigForUpdate {
    /// <p>The <code>KeepAlivePeriodInSeconds</code> value specified in the <code>ResourceConfig</code> to update.</p>
    pub keep_alive_period_in_seconds: ::std::option::Option<i32>,
}
impl ResourceConfigForUpdate {
    /// <p>The <code>KeepAlivePeriodInSeconds</code> value specified in the <code>ResourceConfig</code> to update.</p>
    pub fn keep_alive_period_in_seconds(&self) -> ::std::option::Option<i32> {
        self.keep_alive_period_in_seconds
    }
}
impl ResourceConfigForUpdate {
    /// Creates a new builder-style object to manufacture [`ResourceConfigForUpdate`](crate::types::ResourceConfigForUpdate).
    pub fn builder() -> crate::types::builders::ResourceConfigForUpdateBuilder {
        crate::types::builders::ResourceConfigForUpdateBuilder::default()
    }
}

/// A builder for [`ResourceConfigForUpdate`](crate::types::ResourceConfigForUpdate).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ResourceConfigForUpdateBuilder {
    pub(crate) keep_alive_period_in_seconds: ::std::option::Option<i32>,
}
impl ResourceConfigForUpdateBuilder {
    /// <p>The <code>KeepAlivePeriodInSeconds</code> value specified in the <code>ResourceConfig</code> to update.</p>
    /// This field is required.
    pub fn keep_alive_period_in_seconds(mut self, input: i32) -> Self {
        self.keep_alive_period_in_seconds = ::std::option::Option::Some(input);
        self
    }
    /// <p>The <code>KeepAlivePeriodInSeconds</code> value specified in the <code>ResourceConfig</code> to update.</p>
    pub fn set_keep_alive_period_in_seconds(mut self, input: ::std::option::Option<i32>) -> Self {
        self.keep_alive_period_in_seconds = input;
        self
    }
    /// <p>The <code>KeepAlivePeriodInSeconds</code> value specified in the <code>ResourceConfig</code> to update.</p>
    pub fn get_keep_alive_period_in_seconds(&self) -> &::std::option::Option<i32> {
        &self.keep_alive_period_in_seconds
    }
    /// Consumes the builder and constructs a [`ResourceConfigForUpdate`](crate::types::ResourceConfigForUpdate).
    pub fn build(self) -> crate::types::ResourceConfigForUpdate {
        crate::types::ResourceConfigForUpdate {
            keep_alive_period_in_seconds: self.keep_alive_period_in_seconds,
        }
    }
}
