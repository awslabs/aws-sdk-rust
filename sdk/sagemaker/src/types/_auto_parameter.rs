// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The name and an example value of the hyperparameter that you want to use in Autotune. If Automatic model tuning (AMT) determines that your hyperparameter is eligible for Autotune, an optimal hyperparameter range is selected for you.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AutoParameter {
    /// <p>The name of the hyperparameter to optimize using Autotune.</p>
    pub name: ::std::option::Option<::std::string::String>,
    /// <p>An example value of the hyperparameter to optimize using Autotune.</p>
    pub value_hint: ::std::option::Option<::std::string::String>,
}
impl AutoParameter {
    /// <p>The name of the hyperparameter to optimize using Autotune.</p>
    pub fn name(&self) -> ::std::option::Option<&str> {
        self.name.as_deref()
    }
    /// <p>An example value of the hyperparameter to optimize using Autotune.</p>
    pub fn value_hint(&self) -> ::std::option::Option<&str> {
        self.value_hint.as_deref()
    }
}
impl AutoParameter {
    /// Creates a new builder-style object to manufacture [`AutoParameter`](crate::types::AutoParameter).
    pub fn builder() -> crate::types::builders::AutoParameterBuilder {
        crate::types::builders::AutoParameterBuilder::default()
    }
}

/// A builder for [`AutoParameter`](crate::types::AutoParameter).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct AutoParameterBuilder {
    pub(crate) name: ::std::option::Option<::std::string::String>,
    pub(crate) value_hint: ::std::option::Option<::std::string::String>,
}
impl AutoParameterBuilder {
    /// <p>The name of the hyperparameter to optimize using Autotune.</p>
    /// This field is required.
    pub fn name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the hyperparameter to optimize using Autotune.</p>
    pub fn set_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>The name of the hyperparameter to optimize using Autotune.</p>
    pub fn get_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.name
    }
    /// <p>An example value of the hyperparameter to optimize using Autotune.</p>
    /// This field is required.
    pub fn value_hint(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.value_hint = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>An example value of the hyperparameter to optimize using Autotune.</p>
    pub fn set_value_hint(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.value_hint = input;
        self
    }
    /// <p>An example value of the hyperparameter to optimize using Autotune.</p>
    pub fn get_value_hint(&self) -> &::std::option::Option<::std::string::String> {
        &self.value_hint
    }
    /// Consumes the builder and constructs a [`AutoParameter`](crate::types::AutoParameter).
    pub fn build(self) -> crate::types::AutoParameter {
        crate::types::AutoParameter {
            name: self.name,
            value_hint: self.value_hint,
        }
    }
}
