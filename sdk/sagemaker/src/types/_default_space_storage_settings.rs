// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The default storage settings for a space.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DefaultSpaceStorageSettings {
    /// <p>The default EBS storage settings for a space.</p>
    pub default_ebs_storage_settings: ::std::option::Option<crate::types::DefaultEbsStorageSettings>,
}
impl DefaultSpaceStorageSettings {
    /// <p>The default EBS storage settings for a space.</p>
    pub fn default_ebs_storage_settings(&self) -> ::std::option::Option<&crate::types::DefaultEbsStorageSettings> {
        self.default_ebs_storage_settings.as_ref()
    }
}
impl DefaultSpaceStorageSettings {
    /// Creates a new builder-style object to manufacture [`DefaultSpaceStorageSettings`](crate::types::DefaultSpaceStorageSettings).
    pub fn builder() -> crate::types::builders::DefaultSpaceStorageSettingsBuilder {
        crate::types::builders::DefaultSpaceStorageSettingsBuilder::default()
    }
}

/// A builder for [`DefaultSpaceStorageSettings`](crate::types::DefaultSpaceStorageSettings).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DefaultSpaceStorageSettingsBuilder {
    pub(crate) default_ebs_storage_settings: ::std::option::Option<crate::types::DefaultEbsStorageSettings>,
}
impl DefaultSpaceStorageSettingsBuilder {
    /// <p>The default EBS storage settings for a space.</p>
    pub fn default_ebs_storage_settings(mut self, input: crate::types::DefaultEbsStorageSettings) -> Self {
        self.default_ebs_storage_settings = ::std::option::Option::Some(input);
        self
    }
    /// <p>The default EBS storage settings for a space.</p>
    pub fn set_default_ebs_storage_settings(mut self, input: ::std::option::Option<crate::types::DefaultEbsStorageSettings>) -> Self {
        self.default_ebs_storage_settings = input;
        self
    }
    /// <p>The default EBS storage settings for a space.</p>
    pub fn get_default_ebs_storage_settings(&self) -> &::std::option::Option<crate::types::DefaultEbsStorageSettings> {
        &self.default_ebs_storage_settings
    }
    /// Consumes the builder and constructs a [`DefaultSpaceStorageSettings`](crate::types::DefaultSpaceStorageSettings).
    pub fn build(self) -> crate::types::DefaultSpaceStorageSettings {
        crate::types::DefaultSpaceStorageSettings {
            default_ebs_storage_settings: self.default_ebs_storage_settings,
        }
    }
}
