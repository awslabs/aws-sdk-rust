// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Summary information about a model group.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ModelPackageGroupSummary {
    /// <p>The name of the model group.</p>
    pub model_package_group_name: ::std::option::Option<::std::string::String>,
    /// <p>The Amazon Resource Name (ARN) of the model group.</p>
    pub model_package_group_arn: ::std::option::Option<::std::string::String>,
    /// <p>A description of the model group.</p>
    pub model_package_group_description: ::std::option::Option<::std::string::String>,
    /// <p>The time that the model group was created.</p>
    pub creation_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>The status of the model group.</p>
    pub model_package_group_status: ::std::option::Option<crate::types::ModelPackageGroupStatus>,
}
impl ModelPackageGroupSummary {
    /// <p>The name of the model group.</p>
    pub fn model_package_group_name(&self) -> ::std::option::Option<&str> {
        self.model_package_group_name.as_deref()
    }
    /// <p>The Amazon Resource Name (ARN) of the model group.</p>
    pub fn model_package_group_arn(&self) -> ::std::option::Option<&str> {
        self.model_package_group_arn.as_deref()
    }
    /// <p>A description of the model group.</p>
    pub fn model_package_group_description(&self) -> ::std::option::Option<&str> {
        self.model_package_group_description.as_deref()
    }
    /// <p>The time that the model group was created.</p>
    pub fn creation_time(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.creation_time.as_ref()
    }
    /// <p>The status of the model group.</p>
    pub fn model_package_group_status(&self) -> ::std::option::Option<&crate::types::ModelPackageGroupStatus> {
        self.model_package_group_status.as_ref()
    }
}
impl ModelPackageGroupSummary {
    /// Creates a new builder-style object to manufacture [`ModelPackageGroupSummary`](crate::types::ModelPackageGroupSummary).
    pub fn builder() -> crate::types::builders::ModelPackageGroupSummaryBuilder {
        crate::types::builders::ModelPackageGroupSummaryBuilder::default()
    }
}

/// A builder for [`ModelPackageGroupSummary`](crate::types::ModelPackageGroupSummary).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ModelPackageGroupSummaryBuilder {
    pub(crate) model_package_group_name: ::std::option::Option<::std::string::String>,
    pub(crate) model_package_group_arn: ::std::option::Option<::std::string::String>,
    pub(crate) model_package_group_description: ::std::option::Option<::std::string::String>,
    pub(crate) creation_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) model_package_group_status: ::std::option::Option<crate::types::ModelPackageGroupStatus>,
}
impl ModelPackageGroupSummaryBuilder {
    /// <p>The name of the model group.</p>
    /// This field is required.
    pub fn model_package_group_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.model_package_group_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the model group.</p>
    pub fn set_model_package_group_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.model_package_group_name = input;
        self
    }
    /// <p>The name of the model group.</p>
    pub fn get_model_package_group_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.model_package_group_name
    }
    /// <p>The Amazon Resource Name (ARN) of the model group.</p>
    /// This field is required.
    pub fn model_package_group_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.model_package_group_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the model group.</p>
    pub fn set_model_package_group_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.model_package_group_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the model group.</p>
    pub fn get_model_package_group_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.model_package_group_arn
    }
    /// <p>A description of the model group.</p>
    pub fn model_package_group_description(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.model_package_group_description = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>A description of the model group.</p>
    pub fn set_model_package_group_description(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.model_package_group_description = input;
        self
    }
    /// <p>A description of the model group.</p>
    pub fn get_model_package_group_description(&self) -> &::std::option::Option<::std::string::String> {
        &self.model_package_group_description
    }
    /// <p>The time that the model group was created.</p>
    /// This field is required.
    pub fn creation_time(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.creation_time = ::std::option::Option::Some(input);
        self
    }
    /// <p>The time that the model group was created.</p>
    pub fn set_creation_time(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.creation_time = input;
        self
    }
    /// <p>The time that the model group was created.</p>
    pub fn get_creation_time(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.creation_time
    }
    /// <p>The status of the model group.</p>
    /// This field is required.
    pub fn model_package_group_status(mut self, input: crate::types::ModelPackageGroupStatus) -> Self {
        self.model_package_group_status = ::std::option::Option::Some(input);
        self
    }
    /// <p>The status of the model group.</p>
    pub fn set_model_package_group_status(mut self, input: ::std::option::Option<crate::types::ModelPackageGroupStatus>) -> Self {
        self.model_package_group_status = input;
        self
    }
    /// <p>The status of the model group.</p>
    pub fn get_model_package_group_status(&self) -> &::std::option::Option<crate::types::ModelPackageGroupStatus> {
        &self.model_package_group_status
    }
    /// Consumes the builder and constructs a [`ModelPackageGroupSummary`](crate::types::ModelPackageGroupSummary).
    pub fn build(self) -> crate::types::ModelPackageGroupSummary {
        crate::types::ModelPackageGroupSummary {
            model_package_group_name: self.model_package_group_name,
            model_package_group_arn: self.model_package_group_arn,
            model_package_group_description: self.model_package_group_description,
            creation_time: self.creation_time,
            model_package_group_status: self.model_package_group_status,
        }
    }
}
