// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Provides information about the location of input data.</p>
/// <p>You must specify at least one of the following: <code>S3DataSource</code> or <code>SnsDataSource</code>.</p>
/// <p>Use <code>SnsDataSource</code> to specify an SNS input topic for a streaming labeling job. If you do not specify and SNS input topic ARN, Ground Truth will create a one-time labeling job.</p>
/// <p>Use <code>S3DataSource</code> to specify an input manifest file for both streaming and one-time labeling jobs. Adding an <code>S3DataSource</code> is optional if you use <code>SnsDataSource</code> to create a streaming labeling job.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct LabelingJobDataSource {
    /// <p>The Amazon S3 location of the input data objects.</p>
    #[doc(hidden)]
    pub s3_data_source: std::option::Option<crate::types::LabelingJobS3DataSource>,
    /// <p>An Amazon SNS data source used for streaming labeling jobs. To learn more, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/sms-streaming-labeling-job.html#sms-streaming-how-it-works-send-data">Send Data to a Streaming Labeling Job</a>. </p>
    #[doc(hidden)]
    pub sns_data_source: std::option::Option<crate::types::LabelingJobSnsDataSource>,
}
impl LabelingJobDataSource {
    /// <p>The Amazon S3 location of the input data objects.</p>
    pub fn s3_data_source(&self) -> std::option::Option<&crate::types::LabelingJobS3DataSource> {
        self.s3_data_source.as_ref()
    }
    /// <p>An Amazon SNS data source used for streaming labeling jobs. To learn more, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/sms-streaming-labeling-job.html#sms-streaming-how-it-works-send-data">Send Data to a Streaming Labeling Job</a>. </p>
    pub fn sns_data_source(&self) -> std::option::Option<&crate::types::LabelingJobSnsDataSource> {
        self.sns_data_source.as_ref()
    }
}
impl LabelingJobDataSource {
    /// Creates a new builder-style object to manufacture [`LabelingJobDataSource`](crate::types::LabelingJobDataSource).
    pub fn builder() -> crate::types::builders::LabelingJobDataSourceBuilder {
        crate::types::builders::LabelingJobDataSourceBuilder::default()
    }
}

/// A builder for [`LabelingJobDataSource`](crate::types::LabelingJobDataSource).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct LabelingJobDataSourceBuilder {
    pub(crate) s3_data_source: std::option::Option<crate::types::LabelingJobS3DataSource>,
    pub(crate) sns_data_source: std::option::Option<crate::types::LabelingJobSnsDataSource>,
}
impl LabelingJobDataSourceBuilder {
    /// <p>The Amazon S3 location of the input data objects.</p>
    pub fn s3_data_source(mut self, input: crate::types::LabelingJobS3DataSource) -> Self {
        self.s3_data_source = Some(input);
        self
    }
    /// <p>The Amazon S3 location of the input data objects.</p>
    pub fn set_s3_data_source(
        mut self,
        input: std::option::Option<crate::types::LabelingJobS3DataSource>,
    ) -> Self {
        self.s3_data_source = input;
        self
    }
    /// <p>An Amazon SNS data source used for streaming labeling jobs. To learn more, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/sms-streaming-labeling-job.html#sms-streaming-how-it-works-send-data">Send Data to a Streaming Labeling Job</a>. </p>
    pub fn sns_data_source(mut self, input: crate::types::LabelingJobSnsDataSource) -> Self {
        self.sns_data_source = Some(input);
        self
    }
    /// <p>An Amazon SNS data source used for streaming labeling jobs. To learn more, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/sms-streaming-labeling-job.html#sms-streaming-how-it-works-send-data">Send Data to a Streaming Labeling Job</a>. </p>
    pub fn set_sns_data_source(
        mut self,
        input: std::option::Option<crate::types::LabelingJobSnsDataSource>,
    ) -> Self {
        self.sns_data_source = input;
        self
    }
    /// Consumes the builder and constructs a [`LabelingJobDataSource`](crate::types::LabelingJobDataSource).
    pub fn build(self) -> crate::types::LabelingJobDataSource {
        crate::types::LabelingJobDataSource {
            s3_data_source: self.s3_data_source,
            sns_data_source: self.sns_data_source,
        }
    }
}
