// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Details about a customer endpoint that was compared in an Inference Recommender job.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct EndpointInfo {
    /// <p>The name of a customer's endpoint.</p>
    #[doc(hidden)]
    pub endpoint_name: std::option::Option<std::string::String>,
}
impl EndpointInfo {
    /// <p>The name of a customer's endpoint.</p>
    pub fn endpoint_name(&self) -> std::option::Option<&str> {
        self.endpoint_name.as_deref()
    }
}
impl EndpointInfo {
    /// Creates a new builder-style object to manufacture [`EndpointInfo`](crate::types::EndpointInfo).
    pub fn builder() -> crate::types::builders::EndpointInfoBuilder {
        crate::types::builders::EndpointInfoBuilder::default()
    }
}

/// A builder for [`EndpointInfo`](crate::types::EndpointInfo).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct EndpointInfoBuilder {
    pub(crate) endpoint_name: std::option::Option<std::string::String>,
}
impl EndpointInfoBuilder {
    /// <p>The name of a customer's endpoint.</p>
    pub fn endpoint_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.endpoint_name = Some(input.into());
        self
    }
    /// <p>The name of a customer's endpoint.</p>
    pub fn set_endpoint_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.endpoint_name = input;
        self
    }
    /// Consumes the builder and constructs a [`EndpointInfo`](crate::types::EndpointInfo).
    pub fn build(self) -> crate::types::EndpointInfo {
        crate::types::EndpointInfo {
            endpoint_name: self.endpoint_name,
        }
    }
}
