// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A custom SageMaker image. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/studio-byoi.html">Bring your own SageMaker image</a>.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct CustomImage {
    /// <p>The name of the CustomImage. Must be unique to your account.</p>
    #[doc(hidden)]
    pub image_name: std::option::Option<std::string::String>,
    /// <p>The version number of the CustomImage.</p>
    #[doc(hidden)]
    pub image_version_number: std::option::Option<i32>,
    /// <p>The name of the AppImageConfig.</p>
    #[doc(hidden)]
    pub app_image_config_name: std::option::Option<std::string::String>,
}
impl CustomImage {
    /// <p>The name of the CustomImage. Must be unique to your account.</p>
    pub fn image_name(&self) -> std::option::Option<&str> {
        self.image_name.as_deref()
    }
    /// <p>The version number of the CustomImage.</p>
    pub fn image_version_number(&self) -> std::option::Option<i32> {
        self.image_version_number
    }
    /// <p>The name of the AppImageConfig.</p>
    pub fn app_image_config_name(&self) -> std::option::Option<&str> {
        self.app_image_config_name.as_deref()
    }
}
impl CustomImage {
    /// Creates a new builder-style object to manufacture [`CustomImage`](crate::types::CustomImage).
    pub fn builder() -> crate::types::builders::CustomImageBuilder {
        crate::types::builders::CustomImageBuilder::default()
    }
}

/// A builder for [`CustomImage`](crate::types::CustomImage).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct CustomImageBuilder {
    pub(crate) image_name: std::option::Option<std::string::String>,
    pub(crate) image_version_number: std::option::Option<i32>,
    pub(crate) app_image_config_name: std::option::Option<std::string::String>,
}
impl CustomImageBuilder {
    /// <p>The name of the CustomImage. Must be unique to your account.</p>
    pub fn image_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.image_name = Some(input.into());
        self
    }
    /// <p>The name of the CustomImage. Must be unique to your account.</p>
    pub fn set_image_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.image_name = input;
        self
    }
    /// <p>The version number of the CustomImage.</p>
    pub fn image_version_number(mut self, input: i32) -> Self {
        self.image_version_number = Some(input);
        self
    }
    /// <p>The version number of the CustomImage.</p>
    pub fn set_image_version_number(mut self, input: std::option::Option<i32>) -> Self {
        self.image_version_number = input;
        self
    }
    /// <p>The name of the AppImageConfig.</p>
    pub fn app_image_config_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.app_image_config_name = Some(input.into());
        self
    }
    /// <p>The name of the AppImageConfig.</p>
    pub fn set_app_image_config_name(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.app_image_config_name = input;
        self
    }
    /// Consumes the builder and constructs a [`CustomImage`](crate::types::CustomImage).
    pub fn build(self) -> crate::types::CustomImage {
        crate::types::CustomImage {
            image_name: self.image_name,
            image_version_number: self.image_version_number,
            app_image_config_name: self.app_image_config_name,
        }
    }
}
