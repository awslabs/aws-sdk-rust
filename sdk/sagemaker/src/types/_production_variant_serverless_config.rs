// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Specifies the serverless configuration for an endpoint variant.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ProductionVariantServerlessConfig {
    /// <p>The memory size of your serverless endpoint. Valid values are in 1 GB increments: 1024 MB, 2048 MB, 3072 MB, 4096 MB, 5120 MB, or 6144 MB.</p>
    #[doc(hidden)]
    pub memory_size_in_mb: std::option::Option<i32>,
    /// <p>The maximum number of concurrent invocations your serverless endpoint can process.</p>
    #[doc(hidden)]
    pub max_concurrency: std::option::Option<i32>,
}
impl ProductionVariantServerlessConfig {
    /// <p>The memory size of your serverless endpoint. Valid values are in 1 GB increments: 1024 MB, 2048 MB, 3072 MB, 4096 MB, 5120 MB, or 6144 MB.</p>
    pub fn memory_size_in_mb(&self) -> std::option::Option<i32> {
        self.memory_size_in_mb
    }
    /// <p>The maximum number of concurrent invocations your serverless endpoint can process.</p>
    pub fn max_concurrency(&self) -> std::option::Option<i32> {
        self.max_concurrency
    }
}
impl ProductionVariantServerlessConfig {
    /// Creates a new builder-style object to manufacture [`ProductionVariantServerlessConfig`](crate::types::ProductionVariantServerlessConfig).
    pub fn builder() -> crate::types::builders::ProductionVariantServerlessConfigBuilder {
        crate::types::builders::ProductionVariantServerlessConfigBuilder::default()
    }
}

/// A builder for [`ProductionVariantServerlessConfig`](crate::types::ProductionVariantServerlessConfig).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ProductionVariantServerlessConfigBuilder {
    pub(crate) memory_size_in_mb: std::option::Option<i32>,
    pub(crate) max_concurrency: std::option::Option<i32>,
}
impl ProductionVariantServerlessConfigBuilder {
    /// <p>The memory size of your serverless endpoint. Valid values are in 1 GB increments: 1024 MB, 2048 MB, 3072 MB, 4096 MB, 5120 MB, or 6144 MB.</p>
    pub fn memory_size_in_mb(mut self, input: i32) -> Self {
        self.memory_size_in_mb = Some(input);
        self
    }
    /// <p>The memory size of your serverless endpoint. Valid values are in 1 GB increments: 1024 MB, 2048 MB, 3072 MB, 4096 MB, 5120 MB, or 6144 MB.</p>
    pub fn set_memory_size_in_mb(mut self, input: std::option::Option<i32>) -> Self {
        self.memory_size_in_mb = input;
        self
    }
    /// <p>The maximum number of concurrent invocations your serverless endpoint can process.</p>
    pub fn max_concurrency(mut self, input: i32) -> Self {
        self.max_concurrency = Some(input);
        self
    }
    /// <p>The maximum number of concurrent invocations your serverless endpoint can process.</p>
    pub fn set_max_concurrency(mut self, input: std::option::Option<i32>) -> Self {
        self.max_concurrency = input;
        self
    }
    /// Consumes the builder and constructs a [`ProductionVariantServerlessConfig`](crate::types::ProductionVariantServerlessConfig).
    pub fn build(self) -> crate::types::ProductionVariantServerlessConfig {
        crate::types::ProductionVariantServerlessConfig {
            memory_size_in_mb: self.memory_size_in_mb,
            max_concurrency: self.max_concurrency,
        }
    }
}
