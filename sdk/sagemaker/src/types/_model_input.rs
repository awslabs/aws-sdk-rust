// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Input object for the model.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ModelInput {
    /// <p>The input configuration object for the model.</p>
    #[doc(hidden)]
    pub data_input_config: std::option::Option<std::string::String>,
}
impl ModelInput {
    /// <p>The input configuration object for the model.</p>
    pub fn data_input_config(&self) -> std::option::Option<&str> {
        self.data_input_config.as_deref()
    }
}
impl ModelInput {
    /// Creates a new builder-style object to manufacture [`ModelInput`](crate::types::ModelInput).
    pub fn builder() -> crate::types::builders::ModelInputBuilder {
        crate::types::builders::ModelInputBuilder::default()
    }
}

/// A builder for [`ModelInput`](crate::types::ModelInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ModelInputBuilder {
    pub(crate) data_input_config: std::option::Option<std::string::String>,
}
impl ModelInputBuilder {
    /// <p>The input configuration object for the model.</p>
    pub fn data_input_config(mut self, input: impl Into<std::string::String>) -> Self {
        self.data_input_config = Some(input.into());
        self
    }
    /// <p>The input configuration object for the model.</p>
    pub fn set_data_input_config(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.data_input_config = input;
        self
    }
    /// Consumes the builder and constructs a [`ModelInput`](crate::types::ModelInput).
    pub fn build(self) -> crate::types::ModelInput {
        crate::types::ModelInput {
            data_input_config: self.data_input_config,
        }
    }
}
