// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ListPipelineExecutionsInput {
    /// <p>The name or Amazon Resource Name (ARN) of the pipeline.</p>
    pub pipeline_name: ::std::option::Option<::std::string::String>,
    /// <p>A filter that returns the pipeline executions that were created after a specified time.</p>
    pub created_after: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>A filter that returns the pipeline executions that were created before a specified time.</p>
    pub created_before: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>The field by which to sort results. The default is <code>CreatedTime</code>.</p>
    pub sort_by: ::std::option::Option<crate::types::SortPipelineExecutionsBy>,
    /// <p>The sort order for results.</p>
    pub sort_order: ::std::option::Option<crate::types::SortOrder>,
    /// <p>If the result of the previous <code>ListPipelineExecutions</code> request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of pipeline executions, use the token in the next request.</p>
    pub next_token: ::std::option::Option<::std::string::String>,
    /// <p>The maximum number of pipeline executions to return in the response.</p>
    pub max_results: ::std::option::Option<i32>,
}
impl ListPipelineExecutionsInput {
    /// <p>The name or Amazon Resource Name (ARN) of the pipeline.</p>
    pub fn pipeline_name(&self) -> ::std::option::Option<&str> {
        self.pipeline_name.as_deref()
    }
    /// <p>A filter that returns the pipeline executions that were created after a specified time.</p>
    pub fn created_after(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.created_after.as_ref()
    }
    /// <p>A filter that returns the pipeline executions that were created before a specified time.</p>
    pub fn created_before(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.created_before.as_ref()
    }
    /// <p>The field by which to sort results. The default is <code>CreatedTime</code>.</p>
    pub fn sort_by(&self) -> ::std::option::Option<&crate::types::SortPipelineExecutionsBy> {
        self.sort_by.as_ref()
    }
    /// <p>The sort order for results.</p>
    pub fn sort_order(&self) -> ::std::option::Option<&crate::types::SortOrder> {
        self.sort_order.as_ref()
    }
    /// <p>If the result of the previous <code>ListPipelineExecutions</code> request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of pipeline executions, use the token in the next request.</p>
    pub fn next_token(&self) -> ::std::option::Option<&str> {
        self.next_token.as_deref()
    }
    /// <p>The maximum number of pipeline executions to return in the response.</p>
    pub fn max_results(&self) -> ::std::option::Option<i32> {
        self.max_results
    }
}
impl ListPipelineExecutionsInput {
    /// Creates a new builder-style object to manufacture [`ListPipelineExecutionsInput`](crate::operation::list_pipeline_executions::ListPipelineExecutionsInput).
    pub fn builder() -> crate::operation::list_pipeline_executions::builders::ListPipelineExecutionsInputBuilder {
        crate::operation::list_pipeline_executions::builders::ListPipelineExecutionsInputBuilder::default()
    }
}

/// A builder for [`ListPipelineExecutionsInput`](crate::operation::list_pipeline_executions::ListPipelineExecutionsInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ListPipelineExecutionsInputBuilder {
    pub(crate) pipeline_name: ::std::option::Option<::std::string::String>,
    pub(crate) created_after: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) created_before: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) sort_by: ::std::option::Option<crate::types::SortPipelineExecutionsBy>,
    pub(crate) sort_order: ::std::option::Option<crate::types::SortOrder>,
    pub(crate) next_token: ::std::option::Option<::std::string::String>,
    pub(crate) max_results: ::std::option::Option<i32>,
}
impl ListPipelineExecutionsInputBuilder {
    /// <p>The name or Amazon Resource Name (ARN) of the pipeline.</p>
    /// This field is required.
    pub fn pipeline_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.pipeline_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name or Amazon Resource Name (ARN) of the pipeline.</p>
    pub fn set_pipeline_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.pipeline_name = input;
        self
    }
    /// <p>The name or Amazon Resource Name (ARN) of the pipeline.</p>
    pub fn get_pipeline_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.pipeline_name
    }
    /// <p>A filter that returns the pipeline executions that were created after a specified time.</p>
    pub fn created_after(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.created_after = ::std::option::Option::Some(input);
        self
    }
    /// <p>A filter that returns the pipeline executions that were created after a specified time.</p>
    pub fn set_created_after(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.created_after = input;
        self
    }
    /// <p>A filter that returns the pipeline executions that were created after a specified time.</p>
    pub fn get_created_after(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.created_after
    }
    /// <p>A filter that returns the pipeline executions that were created before a specified time.</p>
    pub fn created_before(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.created_before = ::std::option::Option::Some(input);
        self
    }
    /// <p>A filter that returns the pipeline executions that were created before a specified time.</p>
    pub fn set_created_before(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.created_before = input;
        self
    }
    /// <p>A filter that returns the pipeline executions that were created before a specified time.</p>
    pub fn get_created_before(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.created_before
    }
    /// <p>The field by which to sort results. The default is <code>CreatedTime</code>.</p>
    pub fn sort_by(mut self, input: crate::types::SortPipelineExecutionsBy) -> Self {
        self.sort_by = ::std::option::Option::Some(input);
        self
    }
    /// <p>The field by which to sort results. The default is <code>CreatedTime</code>.</p>
    pub fn set_sort_by(mut self, input: ::std::option::Option<crate::types::SortPipelineExecutionsBy>) -> Self {
        self.sort_by = input;
        self
    }
    /// <p>The field by which to sort results. The default is <code>CreatedTime</code>.</p>
    pub fn get_sort_by(&self) -> &::std::option::Option<crate::types::SortPipelineExecutionsBy> {
        &self.sort_by
    }
    /// <p>The sort order for results.</p>
    pub fn sort_order(mut self, input: crate::types::SortOrder) -> Self {
        self.sort_order = ::std::option::Option::Some(input);
        self
    }
    /// <p>The sort order for results.</p>
    pub fn set_sort_order(mut self, input: ::std::option::Option<crate::types::SortOrder>) -> Self {
        self.sort_order = input;
        self
    }
    /// <p>The sort order for results.</p>
    pub fn get_sort_order(&self) -> &::std::option::Option<crate::types::SortOrder> {
        &self.sort_order
    }
    /// <p>If the result of the previous <code>ListPipelineExecutions</code> request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of pipeline executions, use the token in the next request.</p>
    pub fn next_token(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.next_token = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>If the result of the previous <code>ListPipelineExecutions</code> request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of pipeline executions, use the token in the next request.</p>
    pub fn set_next_token(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// <p>If the result of the previous <code>ListPipelineExecutions</code> request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of pipeline executions, use the token in the next request.</p>
    pub fn get_next_token(&self) -> &::std::option::Option<::std::string::String> {
        &self.next_token
    }
    /// <p>The maximum number of pipeline executions to return in the response.</p>
    pub fn max_results(mut self, input: i32) -> Self {
        self.max_results = ::std::option::Option::Some(input);
        self
    }
    /// <p>The maximum number of pipeline executions to return in the response.</p>
    pub fn set_max_results(mut self, input: ::std::option::Option<i32>) -> Self {
        self.max_results = input;
        self
    }
    /// <p>The maximum number of pipeline executions to return in the response.</p>
    pub fn get_max_results(&self) -> &::std::option::Option<i32> {
        &self.max_results
    }
    /// Consumes the builder and constructs a [`ListPipelineExecutionsInput`](crate::operation::list_pipeline_executions::ListPipelineExecutionsInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::list_pipeline_executions::ListPipelineExecutionsInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::list_pipeline_executions::ListPipelineExecutionsInput {
            pipeline_name: self.pipeline_name,
            created_after: self.created_after,
            created_before: self.created_before,
            sort_by: self.sort_by,
            sort_order: self.sort_order,
            next_token: self.next_token,
            max_results: self.max_results,
        })
    }
}
