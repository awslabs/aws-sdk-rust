// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DeleteEdgeDeploymentStageInput {
    /// <p>The name of the edge deployment plan from which the stage will be deleted.</p>
    pub edge_deployment_plan_name: ::std::option::Option<::std::string::String>,
    /// <p>The name of the stage.</p>
    pub stage_name: ::std::option::Option<::std::string::String>,
}
impl DeleteEdgeDeploymentStageInput {
    /// <p>The name of the edge deployment plan from which the stage will be deleted.</p>
    pub fn edge_deployment_plan_name(&self) -> ::std::option::Option<&str> {
        self.edge_deployment_plan_name.as_deref()
    }
    /// <p>The name of the stage.</p>
    pub fn stage_name(&self) -> ::std::option::Option<&str> {
        self.stage_name.as_deref()
    }
}
impl DeleteEdgeDeploymentStageInput {
    /// Creates a new builder-style object to manufacture [`DeleteEdgeDeploymentStageInput`](crate::operation::delete_edge_deployment_stage::DeleteEdgeDeploymentStageInput).
    pub fn builder() -> crate::operation::delete_edge_deployment_stage::builders::DeleteEdgeDeploymentStageInputBuilder {
        crate::operation::delete_edge_deployment_stage::builders::DeleteEdgeDeploymentStageInputBuilder::default()
    }
}

/// A builder for [`DeleteEdgeDeploymentStageInput`](crate::operation::delete_edge_deployment_stage::DeleteEdgeDeploymentStageInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DeleteEdgeDeploymentStageInputBuilder {
    pub(crate) edge_deployment_plan_name: ::std::option::Option<::std::string::String>,
    pub(crate) stage_name: ::std::option::Option<::std::string::String>,
}
impl DeleteEdgeDeploymentStageInputBuilder {
    /// <p>The name of the edge deployment plan from which the stage will be deleted.</p>
    /// This field is required.
    pub fn edge_deployment_plan_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.edge_deployment_plan_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the edge deployment plan from which the stage will be deleted.</p>
    pub fn set_edge_deployment_plan_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.edge_deployment_plan_name = input;
        self
    }
    /// <p>The name of the edge deployment plan from which the stage will be deleted.</p>
    pub fn get_edge_deployment_plan_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.edge_deployment_plan_name
    }
    /// <p>The name of the stage.</p>
    /// This field is required.
    pub fn stage_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.stage_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the stage.</p>
    pub fn set_stage_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.stage_name = input;
        self
    }
    /// <p>The name of the stage.</p>
    pub fn get_stage_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.stage_name
    }
    /// Consumes the builder and constructs a [`DeleteEdgeDeploymentStageInput`](crate::operation::delete_edge_deployment_stage::DeleteEdgeDeploymentStageInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::delete_edge_deployment_stage::DeleteEdgeDeploymentStageInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::delete_edge_deployment_stage::DeleteEdgeDeploymentStageInput {
            edge_deployment_plan_name: self.edge_deployment_plan_name,
            stage_name: self.stage_name,
        })
    }
}
