// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DescribeFlowDefinitionOutput {
    /// <p>The Amazon Resource Name (ARN) of the flow defintion.</p>
    pub flow_definition_arn: ::std::option::Option<::std::string::String>,
    /// <p>The Amazon Resource Name (ARN) of the flow definition.</p>
    pub flow_definition_name: ::std::option::Option<::std::string::String>,
    /// <p>The status of the flow definition. Valid values are listed below.</p>
    pub flow_definition_status: ::std::option::Option<crate::types::FlowDefinitionStatus>,
    /// <p>The timestamp when the flow definition was created.</p>
    pub creation_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>Container for configuring the source of human task requests. Used to specify if Amazon Rekognition or Amazon Textract is used as an integration source.</p>
    pub human_loop_request_source: ::std::option::Option<crate::types::HumanLoopRequestSource>,
    /// <p>An object containing information about what triggers a human review workflow.</p>
    pub human_loop_activation_config: ::std::option::Option<crate::types::HumanLoopActivationConfig>,
    /// <p>An object containing information about who works on the task, the workforce task price, and other task details.</p>
    pub human_loop_config: ::std::option::Option<crate::types::HumanLoopConfig>,
    /// <p>An object containing information about the output file.</p>
    pub output_config: ::std::option::Option<crate::types::FlowDefinitionOutputConfig>,
    /// <p>The Amazon Resource Name (ARN) of the Amazon Web Services Identity and Access Management (IAM) execution role for the flow definition.</p>
    pub role_arn: ::std::option::Option<::std::string::String>,
    /// <p>The reason your flow definition failed.</p>
    pub failure_reason: ::std::option::Option<::std::string::String>,
    _request_id: Option<String>,
}
impl DescribeFlowDefinitionOutput {
    /// <p>The Amazon Resource Name (ARN) of the flow defintion.</p>
    pub fn flow_definition_arn(&self) -> ::std::option::Option<&str> {
        self.flow_definition_arn.as_deref()
    }
    /// <p>The Amazon Resource Name (ARN) of the flow definition.</p>
    pub fn flow_definition_name(&self) -> ::std::option::Option<&str> {
        self.flow_definition_name.as_deref()
    }
    /// <p>The status of the flow definition. Valid values are listed below.</p>
    pub fn flow_definition_status(&self) -> ::std::option::Option<&crate::types::FlowDefinitionStatus> {
        self.flow_definition_status.as_ref()
    }
    /// <p>The timestamp when the flow definition was created.</p>
    pub fn creation_time(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.creation_time.as_ref()
    }
    /// <p>Container for configuring the source of human task requests. Used to specify if Amazon Rekognition or Amazon Textract is used as an integration source.</p>
    pub fn human_loop_request_source(&self) -> ::std::option::Option<&crate::types::HumanLoopRequestSource> {
        self.human_loop_request_source.as_ref()
    }
    /// <p>An object containing information about what triggers a human review workflow.</p>
    pub fn human_loop_activation_config(&self) -> ::std::option::Option<&crate::types::HumanLoopActivationConfig> {
        self.human_loop_activation_config.as_ref()
    }
    /// <p>An object containing information about who works on the task, the workforce task price, and other task details.</p>
    pub fn human_loop_config(&self) -> ::std::option::Option<&crate::types::HumanLoopConfig> {
        self.human_loop_config.as_ref()
    }
    /// <p>An object containing information about the output file.</p>
    pub fn output_config(&self) -> ::std::option::Option<&crate::types::FlowDefinitionOutputConfig> {
        self.output_config.as_ref()
    }
    /// <p>The Amazon Resource Name (ARN) of the Amazon Web Services Identity and Access Management (IAM) execution role for the flow definition.</p>
    pub fn role_arn(&self) -> ::std::option::Option<&str> {
        self.role_arn.as_deref()
    }
    /// <p>The reason your flow definition failed.</p>
    pub fn failure_reason(&self) -> ::std::option::Option<&str> {
        self.failure_reason.as_deref()
    }
}
impl ::aws_http::request_id::RequestId for DescribeFlowDefinitionOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl DescribeFlowDefinitionOutput {
    /// Creates a new builder-style object to manufacture [`DescribeFlowDefinitionOutput`](crate::operation::describe_flow_definition::DescribeFlowDefinitionOutput).
    pub fn builder() -> crate::operation::describe_flow_definition::builders::DescribeFlowDefinitionOutputBuilder {
        crate::operation::describe_flow_definition::builders::DescribeFlowDefinitionOutputBuilder::default()
    }
}

/// A builder for [`DescribeFlowDefinitionOutput`](crate::operation::describe_flow_definition::DescribeFlowDefinitionOutput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DescribeFlowDefinitionOutputBuilder {
    pub(crate) flow_definition_arn: ::std::option::Option<::std::string::String>,
    pub(crate) flow_definition_name: ::std::option::Option<::std::string::String>,
    pub(crate) flow_definition_status: ::std::option::Option<crate::types::FlowDefinitionStatus>,
    pub(crate) creation_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) human_loop_request_source: ::std::option::Option<crate::types::HumanLoopRequestSource>,
    pub(crate) human_loop_activation_config: ::std::option::Option<crate::types::HumanLoopActivationConfig>,
    pub(crate) human_loop_config: ::std::option::Option<crate::types::HumanLoopConfig>,
    pub(crate) output_config: ::std::option::Option<crate::types::FlowDefinitionOutputConfig>,
    pub(crate) role_arn: ::std::option::Option<::std::string::String>,
    pub(crate) failure_reason: ::std::option::Option<::std::string::String>,
    _request_id: Option<String>,
}
impl DescribeFlowDefinitionOutputBuilder {
    /// <p>The Amazon Resource Name (ARN) of the flow defintion.</p>
    /// This field is required.
    pub fn flow_definition_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.flow_definition_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the flow defintion.</p>
    pub fn set_flow_definition_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.flow_definition_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the flow defintion.</p>
    pub fn get_flow_definition_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.flow_definition_arn
    }
    /// <p>The Amazon Resource Name (ARN) of the flow definition.</p>
    /// This field is required.
    pub fn flow_definition_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.flow_definition_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the flow definition.</p>
    pub fn set_flow_definition_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.flow_definition_name = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the flow definition.</p>
    pub fn get_flow_definition_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.flow_definition_name
    }
    /// <p>The status of the flow definition. Valid values are listed below.</p>
    /// This field is required.
    pub fn flow_definition_status(mut self, input: crate::types::FlowDefinitionStatus) -> Self {
        self.flow_definition_status = ::std::option::Option::Some(input);
        self
    }
    /// <p>The status of the flow definition. Valid values are listed below.</p>
    pub fn set_flow_definition_status(mut self, input: ::std::option::Option<crate::types::FlowDefinitionStatus>) -> Self {
        self.flow_definition_status = input;
        self
    }
    /// <p>The status of the flow definition. Valid values are listed below.</p>
    pub fn get_flow_definition_status(&self) -> &::std::option::Option<crate::types::FlowDefinitionStatus> {
        &self.flow_definition_status
    }
    /// <p>The timestamp when the flow definition was created.</p>
    /// This field is required.
    pub fn creation_time(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.creation_time = ::std::option::Option::Some(input);
        self
    }
    /// <p>The timestamp when the flow definition was created.</p>
    pub fn set_creation_time(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.creation_time = input;
        self
    }
    /// <p>The timestamp when the flow definition was created.</p>
    pub fn get_creation_time(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.creation_time
    }
    /// <p>Container for configuring the source of human task requests. Used to specify if Amazon Rekognition or Amazon Textract is used as an integration source.</p>
    pub fn human_loop_request_source(mut self, input: crate::types::HumanLoopRequestSource) -> Self {
        self.human_loop_request_source = ::std::option::Option::Some(input);
        self
    }
    /// <p>Container for configuring the source of human task requests. Used to specify if Amazon Rekognition or Amazon Textract is used as an integration source.</p>
    pub fn set_human_loop_request_source(mut self, input: ::std::option::Option<crate::types::HumanLoopRequestSource>) -> Self {
        self.human_loop_request_source = input;
        self
    }
    /// <p>Container for configuring the source of human task requests. Used to specify if Amazon Rekognition or Amazon Textract is used as an integration source.</p>
    pub fn get_human_loop_request_source(&self) -> &::std::option::Option<crate::types::HumanLoopRequestSource> {
        &self.human_loop_request_source
    }
    /// <p>An object containing information about what triggers a human review workflow.</p>
    pub fn human_loop_activation_config(mut self, input: crate::types::HumanLoopActivationConfig) -> Self {
        self.human_loop_activation_config = ::std::option::Option::Some(input);
        self
    }
    /// <p>An object containing information about what triggers a human review workflow.</p>
    pub fn set_human_loop_activation_config(mut self, input: ::std::option::Option<crate::types::HumanLoopActivationConfig>) -> Self {
        self.human_loop_activation_config = input;
        self
    }
    /// <p>An object containing information about what triggers a human review workflow.</p>
    pub fn get_human_loop_activation_config(&self) -> &::std::option::Option<crate::types::HumanLoopActivationConfig> {
        &self.human_loop_activation_config
    }
    /// <p>An object containing information about who works on the task, the workforce task price, and other task details.</p>
    /// This field is required.
    pub fn human_loop_config(mut self, input: crate::types::HumanLoopConfig) -> Self {
        self.human_loop_config = ::std::option::Option::Some(input);
        self
    }
    /// <p>An object containing information about who works on the task, the workforce task price, and other task details.</p>
    pub fn set_human_loop_config(mut self, input: ::std::option::Option<crate::types::HumanLoopConfig>) -> Self {
        self.human_loop_config = input;
        self
    }
    /// <p>An object containing information about who works on the task, the workforce task price, and other task details.</p>
    pub fn get_human_loop_config(&self) -> &::std::option::Option<crate::types::HumanLoopConfig> {
        &self.human_loop_config
    }
    /// <p>An object containing information about the output file.</p>
    /// This field is required.
    pub fn output_config(mut self, input: crate::types::FlowDefinitionOutputConfig) -> Self {
        self.output_config = ::std::option::Option::Some(input);
        self
    }
    /// <p>An object containing information about the output file.</p>
    pub fn set_output_config(mut self, input: ::std::option::Option<crate::types::FlowDefinitionOutputConfig>) -> Self {
        self.output_config = input;
        self
    }
    /// <p>An object containing information about the output file.</p>
    pub fn get_output_config(&self) -> &::std::option::Option<crate::types::FlowDefinitionOutputConfig> {
        &self.output_config
    }
    /// <p>The Amazon Resource Name (ARN) of the Amazon Web Services Identity and Access Management (IAM) execution role for the flow definition.</p>
    /// This field is required.
    pub fn role_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.role_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the Amazon Web Services Identity and Access Management (IAM) execution role for the flow definition.</p>
    pub fn set_role_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.role_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the Amazon Web Services Identity and Access Management (IAM) execution role for the flow definition.</p>
    pub fn get_role_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.role_arn
    }
    /// <p>The reason your flow definition failed.</p>
    pub fn failure_reason(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.failure_reason = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The reason your flow definition failed.</p>
    pub fn set_failure_reason(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.failure_reason = input;
        self
    }
    /// <p>The reason your flow definition failed.</p>
    pub fn get_failure_reason(&self) -> &::std::option::Option<::std::string::String> {
        &self.failure_reason
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`DescribeFlowDefinitionOutput`](crate::operation::describe_flow_definition::DescribeFlowDefinitionOutput).
    pub fn build(self) -> crate::operation::describe_flow_definition::DescribeFlowDefinitionOutput {
        crate::operation::describe_flow_definition::DescribeFlowDefinitionOutput {
            flow_definition_arn: self.flow_definition_arn,
            flow_definition_name: self.flow_definition_name,
            flow_definition_status: self.flow_definition_status,
            creation_time: self.creation_time,
            human_loop_request_source: self.human_loop_request_source,
            human_loop_activation_config: self.human_loop_activation_config,
            human_loop_config: self.human_loop_config,
            output_config: self.output_config,
            role_arn: self.role_arn,
            failure_reason: self.failure_reason,
            _request_id: self._request_id,
        }
    }
}
