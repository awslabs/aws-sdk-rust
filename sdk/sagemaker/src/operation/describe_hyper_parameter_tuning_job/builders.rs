// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub use crate::operation::describe_hyper_parameter_tuning_job::_describe_hyper_parameter_tuning_job_output::DescribeHyperParameterTuningJobOutputBuilder;

pub use crate::operation::describe_hyper_parameter_tuning_job::_describe_hyper_parameter_tuning_job_input::DescribeHyperParameterTuningJobInputBuilder;

/// Fluent builder constructing a request to `DescribeHyperParameterTuningJob`.
///
/// <p>Gets a description of a hyperparameter tuning job.</p>
#[derive(std::clone::Clone, std::fmt::Debug)]
pub struct DescribeHyperParameterTuningJobFluentBuilder {
                handle: std::sync::Arc<crate::client::Handle>,
                inner: crate::operation::describe_hyper_parameter_tuning_job::builders::DescribeHyperParameterTuningJobInputBuilder
            }
impl DescribeHyperParameterTuningJobFluentBuilder {
    /// Creates a new `DescribeHyperParameterTuningJob`.
    pub(crate) fn new(handle: std::sync::Arc<crate::client::Handle>) -> Self {
        Self {
            handle,
            inner: Default::default(),
        }
    }

    /// Consume this builder, creating a customizable operation that can be modified before being
    /// sent. The operation's inner [http::Request] can be modified as well.
                    pub async fn customize(self) -> std::result::Result<
                        crate::client::customize::CustomizableOperation<crate::operation::describe_hyper_parameter_tuning_job::DescribeHyperParameterTuningJob, aws_http::retry::AwsResponseRetryClassifier,>,
                        aws_smithy_http::result::SdkError<crate::operation::describe_hyper_parameter_tuning_job::DescribeHyperParameterTuningJobError>
    >{
        let handle = self.handle.clone();
        let operation = self
            .inner
            .build()
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?
            .make_operation(&handle.conf)
            .await
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?;
        Ok(crate::client::customize::CustomizableOperation { handle, operation })
    }

    /// Sends the request and returns the response.
    ///
    /// If an error occurs, an `SdkError` will be returned with additional details that
    /// can be matched against.
    ///
    /// By default, any retryable failures will be retried twice. Retry behavior
    /// is configurable with the [RetryConfig](aws_smithy_types::retry::RetryConfig), which can be
    /// set when configuring the client.
                    pub async fn send(self) -> std::result::Result<crate::operation::describe_hyper_parameter_tuning_job::DescribeHyperParameterTuningJobOutput, aws_smithy_http::result::SdkError<crate::operation::describe_hyper_parameter_tuning_job::DescribeHyperParameterTuningJobError>>
                     {
        let op = self
            .inner
            .build()
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?
            .make_operation(&self.handle.conf)
            .await
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?;
        self.handle.client.call(op).await
    }
    /// <p>The name of the tuning job.</p>
    pub fn hyper_parameter_tuning_job_name(
        mut self,
        input: impl Into<std::string::String>,
    ) -> Self {
        self.inner = self.inner.hyper_parameter_tuning_job_name(input.into());
        self
    }
    /// <p>The name of the tuning job.</p>
    pub fn set_hyper_parameter_tuning_job_name(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.inner = self.inner.set_hyper_parameter_tuning_job_name(input);
        self
    }
}
