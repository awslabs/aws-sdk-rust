// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ListModelsInput {
    /// <p>Sorts the list of results. The default is <code>CreationTime</code>.</p>
    #[doc(hidden)]
    pub sort_by: std::option::Option<crate::types::ModelSortKey>,
    /// <p>The sort order for results. The default is <code>Descending</code>.</p>
    #[doc(hidden)]
    pub sort_order: std::option::Option<crate::types::OrderKey>,
    /// <p>If the response to a previous <code>ListModels</code> request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of models, use the token in the next request.</p>
    #[doc(hidden)]
    pub next_token: std::option::Option<std::string::String>,
    /// <p>The maximum number of models to return in the response.</p>
    #[doc(hidden)]
    pub max_results: std::option::Option<i32>,
    /// <p>A string in the model name. This filter returns only models whose name contains the specified string.</p>
    #[doc(hidden)]
    pub name_contains: std::option::Option<std::string::String>,
    /// <p>A filter that returns only models created before the specified time (timestamp).</p>
    #[doc(hidden)]
    pub creation_time_before: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>A filter that returns only models with a creation time greater than or equal to the specified time (timestamp).</p>
    #[doc(hidden)]
    pub creation_time_after: std::option::Option<aws_smithy_types::DateTime>,
}
impl ListModelsInput {
    /// <p>Sorts the list of results. The default is <code>CreationTime</code>.</p>
    pub fn sort_by(&self) -> std::option::Option<&crate::types::ModelSortKey> {
        self.sort_by.as_ref()
    }
    /// <p>The sort order for results. The default is <code>Descending</code>.</p>
    pub fn sort_order(&self) -> std::option::Option<&crate::types::OrderKey> {
        self.sort_order.as_ref()
    }
    /// <p>If the response to a previous <code>ListModels</code> request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of models, use the token in the next request.</p>
    pub fn next_token(&self) -> std::option::Option<&str> {
        self.next_token.as_deref()
    }
    /// <p>The maximum number of models to return in the response.</p>
    pub fn max_results(&self) -> std::option::Option<i32> {
        self.max_results
    }
    /// <p>A string in the model name. This filter returns only models whose name contains the specified string.</p>
    pub fn name_contains(&self) -> std::option::Option<&str> {
        self.name_contains.as_deref()
    }
    /// <p>A filter that returns only models created before the specified time (timestamp).</p>
    pub fn creation_time_before(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.creation_time_before.as_ref()
    }
    /// <p>A filter that returns only models with a creation time greater than or equal to the specified time (timestamp).</p>
    pub fn creation_time_after(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.creation_time_after.as_ref()
    }
}
impl ListModelsInput {
    /// Creates a new builder-style object to manufacture [`ListModelsInput`](crate::operation::list_models::ListModelsInput).
    pub fn builder() -> crate::operation::list_models::builders::ListModelsInputBuilder {
        crate::operation::list_models::builders::ListModelsInputBuilder::default()
    }
}

/// A builder for [`ListModelsInput`](crate::operation::list_models::ListModelsInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ListModelsInputBuilder {
    pub(crate) sort_by: std::option::Option<crate::types::ModelSortKey>,
    pub(crate) sort_order: std::option::Option<crate::types::OrderKey>,
    pub(crate) next_token: std::option::Option<std::string::String>,
    pub(crate) max_results: std::option::Option<i32>,
    pub(crate) name_contains: std::option::Option<std::string::String>,
    pub(crate) creation_time_before: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) creation_time_after: std::option::Option<aws_smithy_types::DateTime>,
}
impl ListModelsInputBuilder {
    /// <p>Sorts the list of results. The default is <code>CreationTime</code>.</p>
    pub fn sort_by(mut self, input: crate::types::ModelSortKey) -> Self {
        self.sort_by = Some(input);
        self
    }
    /// <p>Sorts the list of results. The default is <code>CreationTime</code>.</p>
    pub fn set_sort_by(mut self, input: std::option::Option<crate::types::ModelSortKey>) -> Self {
        self.sort_by = input;
        self
    }
    /// <p>The sort order for results. The default is <code>Descending</code>.</p>
    pub fn sort_order(mut self, input: crate::types::OrderKey) -> Self {
        self.sort_order = Some(input);
        self
    }
    /// <p>The sort order for results. The default is <code>Descending</code>.</p>
    pub fn set_sort_order(mut self, input: std::option::Option<crate::types::OrderKey>) -> Self {
        self.sort_order = input;
        self
    }
    /// <p>If the response to a previous <code>ListModels</code> request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of models, use the token in the next request.</p>
    pub fn next_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.next_token = Some(input.into());
        self
    }
    /// <p>If the response to a previous <code>ListModels</code> request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of models, use the token in the next request.</p>
    pub fn set_next_token(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// <p>The maximum number of models to return in the response.</p>
    pub fn max_results(mut self, input: i32) -> Self {
        self.max_results = Some(input);
        self
    }
    /// <p>The maximum number of models to return in the response.</p>
    pub fn set_max_results(mut self, input: std::option::Option<i32>) -> Self {
        self.max_results = input;
        self
    }
    /// <p>A string in the model name. This filter returns only models whose name contains the specified string.</p>
    pub fn name_contains(mut self, input: impl Into<std::string::String>) -> Self {
        self.name_contains = Some(input.into());
        self
    }
    /// <p>A string in the model name. This filter returns only models whose name contains the specified string.</p>
    pub fn set_name_contains(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.name_contains = input;
        self
    }
    /// <p>A filter that returns only models created before the specified time (timestamp).</p>
    pub fn creation_time_before(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.creation_time_before = Some(input);
        self
    }
    /// <p>A filter that returns only models created before the specified time (timestamp).</p>
    pub fn set_creation_time_before(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.creation_time_before = input;
        self
    }
    /// <p>A filter that returns only models with a creation time greater than or equal to the specified time (timestamp).</p>
    pub fn creation_time_after(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.creation_time_after = Some(input);
        self
    }
    /// <p>A filter that returns only models with a creation time greater than or equal to the specified time (timestamp).</p>
    pub fn set_creation_time_after(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.creation_time_after = input;
        self
    }
    /// Consumes the builder and constructs a [`ListModelsInput`](crate::operation::list_models::ListModelsInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::list_models::ListModelsInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(crate::operation::list_models::ListModelsInput {
            sort_by: self.sort_by,
            sort_order: self.sort_order,
            next_token: self.next_token,
            max_results: self.max_results,
            name_contains: self.name_contains,
            creation_time_before: self.creation_time_before,
            creation_time_after: self.creation_time_after,
        })
    }
}
