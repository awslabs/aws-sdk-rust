// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DescribeDomainInput {
    /// <p>The domain ID.</p>
    #[doc(hidden)]
    pub domain_id: std::option::Option<std::string::String>,
}
impl DescribeDomainInput {
    /// <p>The domain ID.</p>
    pub fn domain_id(&self) -> std::option::Option<&str> {
        self.domain_id.as_deref()
    }
}
impl DescribeDomainInput {
    /// Creates a new builder-style object to manufacture [`DescribeDomainInput`](crate::operation::describe_domain::DescribeDomainInput).
    pub fn builder() -> crate::operation::describe_domain::builders::DescribeDomainInputBuilder {
        crate::operation::describe_domain::builders::DescribeDomainInputBuilder::default()
    }
}

/// A builder for [`DescribeDomainInput`](crate::operation::describe_domain::DescribeDomainInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DescribeDomainInputBuilder {
    pub(crate) domain_id: std::option::Option<std::string::String>,
}
impl DescribeDomainInputBuilder {
    /// <p>The domain ID.</p>
    pub fn domain_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.domain_id = Some(input.into());
        self
    }
    /// <p>The domain ID.</p>
    pub fn set_domain_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.domain_id = input;
        self
    }
    /// Consumes the builder and constructs a [`DescribeDomainInput`](crate::operation::describe_domain::DescribeDomainInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::describe_domain::DescribeDomainInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(crate::operation::describe_domain::DescribeDomainInput {
            domain_id: self.domain_id,
        })
    }
}
