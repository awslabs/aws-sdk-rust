// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct UpdateEndpointWeightsAndCapacitiesInput {
    /// <p>The name of an existing SageMaker endpoint.</p>
    pub endpoint_name: ::std::option::Option<::std::string::String>,
    /// <p>An object that provides new capacity and weight values for a variant.</p>
    pub desired_weights_and_capacities: ::std::option::Option<::std::vec::Vec<crate::types::DesiredWeightAndCapacity>>,
}
impl UpdateEndpointWeightsAndCapacitiesInput {
    /// <p>The name of an existing SageMaker endpoint.</p>
    pub fn endpoint_name(&self) -> ::std::option::Option<&str> {
        self.endpoint_name.as_deref()
    }
    /// <p>An object that provides new capacity and weight values for a variant.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.desired_weights_and_capacities.is_none()`.
    pub fn desired_weights_and_capacities(&self) -> &[crate::types::DesiredWeightAndCapacity] {
        self.desired_weights_and_capacities.as_deref().unwrap_or_default()
    }
}
impl UpdateEndpointWeightsAndCapacitiesInput {
    /// Creates a new builder-style object to manufacture [`UpdateEndpointWeightsAndCapacitiesInput`](crate::operation::update_endpoint_weights_and_capacities::UpdateEndpointWeightsAndCapacitiesInput).
    pub fn builder() -> crate::operation::update_endpoint_weights_and_capacities::builders::UpdateEndpointWeightsAndCapacitiesInputBuilder {
        crate::operation::update_endpoint_weights_and_capacities::builders::UpdateEndpointWeightsAndCapacitiesInputBuilder::default()
    }
}

/// A builder for [`UpdateEndpointWeightsAndCapacitiesInput`](crate::operation::update_endpoint_weights_and_capacities::UpdateEndpointWeightsAndCapacitiesInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct UpdateEndpointWeightsAndCapacitiesInputBuilder {
    pub(crate) endpoint_name: ::std::option::Option<::std::string::String>,
    pub(crate) desired_weights_and_capacities: ::std::option::Option<::std::vec::Vec<crate::types::DesiredWeightAndCapacity>>,
}
impl UpdateEndpointWeightsAndCapacitiesInputBuilder {
    /// <p>The name of an existing SageMaker endpoint.</p>
    /// This field is required.
    pub fn endpoint_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.endpoint_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of an existing SageMaker endpoint.</p>
    pub fn set_endpoint_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.endpoint_name = input;
        self
    }
    /// <p>The name of an existing SageMaker endpoint.</p>
    pub fn get_endpoint_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.endpoint_name
    }
    /// Appends an item to `desired_weights_and_capacities`.
    ///
    /// To override the contents of this collection use [`set_desired_weights_and_capacities`](Self::set_desired_weights_and_capacities).
    ///
    /// <p>An object that provides new capacity and weight values for a variant.</p>
    pub fn desired_weights_and_capacities(mut self, input: crate::types::DesiredWeightAndCapacity) -> Self {
        let mut v = self.desired_weights_and_capacities.unwrap_or_default();
        v.push(input);
        self.desired_weights_and_capacities = ::std::option::Option::Some(v);
        self
    }
    /// <p>An object that provides new capacity and weight values for a variant.</p>
    pub fn set_desired_weights_and_capacities(
        mut self,
        input: ::std::option::Option<::std::vec::Vec<crate::types::DesiredWeightAndCapacity>>,
    ) -> Self {
        self.desired_weights_and_capacities = input;
        self
    }
    /// <p>An object that provides new capacity and weight values for a variant.</p>
    pub fn get_desired_weights_and_capacities(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::DesiredWeightAndCapacity>> {
        &self.desired_weights_and_capacities
    }
    /// Consumes the builder and constructs a [`UpdateEndpointWeightsAndCapacitiesInput`](crate::operation::update_endpoint_weights_and_capacities::UpdateEndpointWeightsAndCapacitiesInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::update_endpoint_weights_and_capacities::UpdateEndpointWeightsAndCapacitiesInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(
            crate::operation::update_endpoint_weights_and_capacities::UpdateEndpointWeightsAndCapacitiesInput {
                endpoint_name: self.endpoint_name,
                desired_weights_and_capacities: self.desired_weights_and_capacities,
            },
        )
    }
}
