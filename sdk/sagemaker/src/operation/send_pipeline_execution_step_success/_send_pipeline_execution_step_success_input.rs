// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct SendPipelineExecutionStepSuccessInput {
    /// <p>The pipeline generated token from the Amazon SQS queue.</p>
    #[doc(hidden)]
    pub callback_token: std::option::Option<std::string::String>,
    /// <p>A list of the output parameters of the callback step.</p>
    #[doc(hidden)]
    pub output_parameters: std::option::Option<std::vec::Vec<crate::types::OutputParameter>>,
    /// <p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the operation. An idempotent operation completes no more than one time.</p>
    #[doc(hidden)]
    pub client_request_token: std::option::Option<std::string::String>,
}
impl SendPipelineExecutionStepSuccessInput {
    /// <p>The pipeline generated token from the Amazon SQS queue.</p>
    pub fn callback_token(&self) -> std::option::Option<&str> {
        self.callback_token.as_deref()
    }
    /// <p>A list of the output parameters of the callback step.</p>
    pub fn output_parameters(&self) -> std::option::Option<&[crate::types::OutputParameter]> {
        self.output_parameters.as_deref()
    }
    /// <p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the operation. An idempotent operation completes no more than one time.</p>
    pub fn client_request_token(&self) -> std::option::Option<&str> {
        self.client_request_token.as_deref()
    }
}
impl SendPipelineExecutionStepSuccessInput {
    /// Creates a new builder-style object to manufacture [`SendPipelineExecutionStepSuccessInput`](crate::operation::send_pipeline_execution_step_success::SendPipelineExecutionStepSuccessInput).
    pub fn builder() -> crate::operation::send_pipeline_execution_step_success::builders::SendPipelineExecutionStepSuccessInputBuilder{
        crate::operation::send_pipeline_execution_step_success::builders::SendPipelineExecutionStepSuccessInputBuilder::default()
    }
}

/// A builder for [`SendPipelineExecutionStepSuccessInput`](crate::operation::send_pipeline_execution_step_success::SendPipelineExecutionStepSuccessInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct SendPipelineExecutionStepSuccessInputBuilder {
    pub(crate) callback_token: std::option::Option<std::string::String>,
    pub(crate) output_parameters: std::option::Option<std::vec::Vec<crate::types::OutputParameter>>,
    pub(crate) client_request_token: std::option::Option<std::string::String>,
}
impl SendPipelineExecutionStepSuccessInputBuilder {
    /// <p>The pipeline generated token from the Amazon SQS queue.</p>
    pub fn callback_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.callback_token = Some(input.into());
        self
    }
    /// <p>The pipeline generated token from the Amazon SQS queue.</p>
    pub fn set_callback_token(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.callback_token = input;
        self
    }
    /// Appends an item to `output_parameters`.
    ///
    /// To override the contents of this collection use [`set_output_parameters`](Self::set_output_parameters).
    ///
    /// <p>A list of the output parameters of the callback step.</p>
    pub fn output_parameters(mut self, input: crate::types::OutputParameter) -> Self {
        let mut v = self.output_parameters.unwrap_or_default();
        v.push(input);
        self.output_parameters = Some(v);
        self
    }
    /// <p>A list of the output parameters of the callback step.</p>
    pub fn set_output_parameters(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::OutputParameter>>,
    ) -> Self {
        self.output_parameters = input;
        self
    }
    /// <p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the operation. An idempotent operation completes no more than one time.</p>
    pub fn client_request_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.client_request_token = Some(input.into());
        self
    }
    /// <p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the operation. An idempotent operation completes no more than one time.</p>
    pub fn set_client_request_token(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.client_request_token = input;
        self
    }
    /// Consumes the builder and constructs a [`SendPipelineExecutionStepSuccessInput`](crate::operation::send_pipeline_execution_step_success::SendPipelineExecutionStepSuccessInput).
    pub fn build(self) -> Result<crate::operation::send_pipeline_execution_step_success::SendPipelineExecutionStepSuccessInput, aws_smithy_http::operation::error::BuildError>{
        Ok(
            crate::operation::send_pipeline_execution_step_success::SendPipelineExecutionStepSuccessInput {
                callback_token: self.callback_token
                ,
                output_parameters: self.output_parameters
                ,
                client_request_token: self.client_request_token
                ,
            }
        )
    }
}
