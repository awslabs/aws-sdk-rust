// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct CreatePresignedNotebookInstanceUrlInput {
    /// <p>The name of the notebook instance.</p>
    #[doc(hidden)]
    pub notebook_instance_name: std::option::Option<std::string::String>,
    /// <p>The duration of the session, in seconds. The default is 12 hours.</p>
    #[doc(hidden)]
    pub session_expiration_duration_in_seconds: std::option::Option<i32>,
}
impl CreatePresignedNotebookInstanceUrlInput {
    /// <p>The name of the notebook instance.</p>
    pub fn notebook_instance_name(&self) -> std::option::Option<&str> {
        self.notebook_instance_name.as_deref()
    }
    /// <p>The duration of the session, in seconds. The default is 12 hours.</p>
    pub fn session_expiration_duration_in_seconds(&self) -> std::option::Option<i32> {
        self.session_expiration_duration_in_seconds
    }
}
impl CreatePresignedNotebookInstanceUrlInput {
    /// Creates a new builder-style object to manufacture [`CreatePresignedNotebookInstanceUrlInput`](crate::operation::create_presigned_notebook_instance_url::CreatePresignedNotebookInstanceUrlInput).
    pub fn builder() -> crate::operation::create_presigned_notebook_instance_url::builders::CreatePresignedNotebookInstanceUrlInputBuilder{
        crate::operation::create_presigned_notebook_instance_url::builders::CreatePresignedNotebookInstanceUrlInputBuilder::default()
    }
}

/// A builder for [`CreatePresignedNotebookInstanceUrlInput`](crate::operation::create_presigned_notebook_instance_url::CreatePresignedNotebookInstanceUrlInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct CreatePresignedNotebookInstanceUrlInputBuilder {
    pub(crate) notebook_instance_name: std::option::Option<std::string::String>,
    pub(crate) session_expiration_duration_in_seconds: std::option::Option<i32>,
}
impl CreatePresignedNotebookInstanceUrlInputBuilder {
    /// <p>The name of the notebook instance.</p>
    pub fn notebook_instance_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.notebook_instance_name = Some(input.into());
        self
    }
    /// <p>The name of the notebook instance.</p>
    pub fn set_notebook_instance_name(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.notebook_instance_name = input;
        self
    }
    /// <p>The duration of the session, in seconds. The default is 12 hours.</p>
    pub fn session_expiration_duration_in_seconds(mut self, input: i32) -> Self {
        self.session_expiration_duration_in_seconds = Some(input);
        self
    }
    /// <p>The duration of the session, in seconds. The default is 12 hours.</p>
    pub fn set_session_expiration_duration_in_seconds(
        mut self,
        input: std::option::Option<i32>,
    ) -> Self {
        self.session_expiration_duration_in_seconds = input;
        self
    }
    /// Consumes the builder and constructs a [`CreatePresignedNotebookInstanceUrlInput`](crate::operation::create_presigned_notebook_instance_url::CreatePresignedNotebookInstanceUrlInput).
    pub fn build(self) -> Result<crate::operation::create_presigned_notebook_instance_url::CreatePresignedNotebookInstanceUrlInput, aws_smithy_http::operation::error::BuildError>{
        Ok(
            crate::operation::create_presigned_notebook_instance_url::CreatePresignedNotebookInstanceUrlInput {
                notebook_instance_name: self.notebook_instance_name
                ,
                session_expiration_duration_in_seconds: self.session_expiration_duration_in_seconds
                ,
            }
        )
    }
}
