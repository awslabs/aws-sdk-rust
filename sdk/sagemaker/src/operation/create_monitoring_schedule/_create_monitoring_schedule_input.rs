// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct CreateMonitoringScheduleInput {
    /// <p>The name of the monitoring schedule. The name must be unique within an Amazon Web Services Region within an Amazon Web Services account.</p>
    #[doc(hidden)]
    pub monitoring_schedule_name: std::option::Option<std::string::String>,
    /// <p>The configuration object that specifies the monitoring schedule and defines the monitoring job.</p>
    #[doc(hidden)]
    pub monitoring_schedule_config: std::option::Option<crate::types::MonitoringScheduleConfig>,
    /// <p>(Optional) An array of key-value pairs. For more information, see <a href=" https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html#allocation-whatURL">Using Cost Allocation Tags</a> in the <i>Amazon Web Services Billing and Cost Management User Guide</i>.</p>
    #[doc(hidden)]
    pub tags: std::option::Option<std::vec::Vec<crate::types::Tag>>,
}
impl CreateMonitoringScheduleInput {
    /// <p>The name of the monitoring schedule. The name must be unique within an Amazon Web Services Region within an Amazon Web Services account.</p>
    pub fn monitoring_schedule_name(&self) -> std::option::Option<&str> {
        self.monitoring_schedule_name.as_deref()
    }
    /// <p>The configuration object that specifies the monitoring schedule and defines the monitoring job.</p>
    pub fn monitoring_schedule_config(
        &self,
    ) -> std::option::Option<&crate::types::MonitoringScheduleConfig> {
        self.monitoring_schedule_config.as_ref()
    }
    /// <p>(Optional) An array of key-value pairs. For more information, see <a href=" https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html#allocation-whatURL">Using Cost Allocation Tags</a> in the <i>Amazon Web Services Billing and Cost Management User Guide</i>.</p>
    pub fn tags(&self) -> std::option::Option<&[crate::types::Tag]> {
        self.tags.as_deref()
    }
}
impl CreateMonitoringScheduleInput {
    /// Creates a new builder-style object to manufacture [`CreateMonitoringScheduleInput`](crate::operation::create_monitoring_schedule::CreateMonitoringScheduleInput).
    pub fn builder(
    ) -> crate::operation::create_monitoring_schedule::builders::CreateMonitoringScheduleInputBuilder
    {
        crate::operation::create_monitoring_schedule::builders::CreateMonitoringScheduleInputBuilder::default()
    }
}

/// A builder for [`CreateMonitoringScheduleInput`](crate::operation::create_monitoring_schedule::CreateMonitoringScheduleInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct CreateMonitoringScheduleInputBuilder {
    pub(crate) monitoring_schedule_name: std::option::Option<std::string::String>,
    pub(crate) monitoring_schedule_config:
        std::option::Option<crate::types::MonitoringScheduleConfig>,
    pub(crate) tags: std::option::Option<std::vec::Vec<crate::types::Tag>>,
}
impl CreateMonitoringScheduleInputBuilder {
    /// <p>The name of the monitoring schedule. The name must be unique within an Amazon Web Services Region within an Amazon Web Services account.</p>
    pub fn monitoring_schedule_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.monitoring_schedule_name = Some(input.into());
        self
    }
    /// <p>The name of the monitoring schedule. The name must be unique within an Amazon Web Services Region within an Amazon Web Services account.</p>
    pub fn set_monitoring_schedule_name(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.monitoring_schedule_name = input;
        self
    }
    /// <p>The configuration object that specifies the monitoring schedule and defines the monitoring job.</p>
    pub fn monitoring_schedule_config(
        mut self,
        input: crate::types::MonitoringScheduleConfig,
    ) -> Self {
        self.monitoring_schedule_config = Some(input);
        self
    }
    /// <p>The configuration object that specifies the monitoring schedule and defines the monitoring job.</p>
    pub fn set_monitoring_schedule_config(
        mut self,
        input: std::option::Option<crate::types::MonitoringScheduleConfig>,
    ) -> Self {
        self.monitoring_schedule_config = input;
        self
    }
    /// Appends an item to `tags`.
    ///
    /// To override the contents of this collection use [`set_tags`](Self::set_tags).
    ///
    /// <p>(Optional) An array of key-value pairs. For more information, see <a href=" https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html#allocation-whatURL">Using Cost Allocation Tags</a> in the <i>Amazon Web Services Billing and Cost Management User Guide</i>.</p>
    pub fn tags(mut self, input: crate::types::Tag) -> Self {
        let mut v = self.tags.unwrap_or_default();
        v.push(input);
        self.tags = Some(v);
        self
    }
    /// <p>(Optional) An array of key-value pairs. For more information, see <a href=" https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html#allocation-whatURL">Using Cost Allocation Tags</a> in the <i>Amazon Web Services Billing and Cost Management User Guide</i>.</p>
    pub fn set_tags(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::Tag>>,
    ) -> Self {
        self.tags = input;
        self
    }
    /// Consumes the builder and constructs a [`CreateMonitoringScheduleInput`](crate::operation::create_monitoring_schedule::CreateMonitoringScheduleInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::create_monitoring_schedule::CreateMonitoringScheduleInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::create_monitoring_schedule::CreateMonitoringScheduleInput {
                monitoring_schedule_name: self.monitoring_schedule_name,
                monitoring_schedule_config: self.monitoring_schedule_config,
                tags: self.tags,
            },
        )
    }
}
