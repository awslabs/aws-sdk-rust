// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct UpdateTrialInput {
    /// <p>The name of the trial to update.</p>
    #[doc(hidden)]
    pub trial_name: std::option::Option<std::string::String>,
    /// <p>The name of the trial as displayed. The name doesn't need to be unique. If <code>DisplayName</code> isn't specified, <code>TrialName</code> is displayed.</p>
    #[doc(hidden)]
    pub display_name: std::option::Option<std::string::String>,
}
impl UpdateTrialInput {
    /// <p>The name of the trial to update.</p>
    pub fn trial_name(&self) -> std::option::Option<&str> {
        self.trial_name.as_deref()
    }
    /// <p>The name of the trial as displayed. The name doesn't need to be unique. If <code>DisplayName</code> isn't specified, <code>TrialName</code> is displayed.</p>
    pub fn display_name(&self) -> std::option::Option<&str> {
        self.display_name.as_deref()
    }
}
impl UpdateTrialInput {
    /// Creates a new builder-style object to manufacture [`UpdateTrialInput`](crate::operation::update_trial::UpdateTrialInput).
    pub fn builder() -> crate::operation::update_trial::builders::UpdateTrialInputBuilder {
        crate::operation::update_trial::builders::UpdateTrialInputBuilder::default()
    }
}

/// A builder for [`UpdateTrialInput`](crate::operation::update_trial::UpdateTrialInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct UpdateTrialInputBuilder {
    pub(crate) trial_name: std::option::Option<std::string::String>,
    pub(crate) display_name: std::option::Option<std::string::String>,
}
impl UpdateTrialInputBuilder {
    /// <p>The name of the trial to update.</p>
    pub fn trial_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.trial_name = Some(input.into());
        self
    }
    /// <p>The name of the trial to update.</p>
    pub fn set_trial_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.trial_name = input;
        self
    }
    /// <p>The name of the trial as displayed. The name doesn't need to be unique. If <code>DisplayName</code> isn't specified, <code>TrialName</code> is displayed.</p>
    pub fn display_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.display_name = Some(input.into());
        self
    }
    /// <p>The name of the trial as displayed. The name doesn't need to be unique. If <code>DisplayName</code> isn't specified, <code>TrialName</code> is displayed.</p>
    pub fn set_display_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.display_name = input;
        self
    }
    /// Consumes the builder and constructs a [`UpdateTrialInput`](crate::operation::update_trial::UpdateTrialInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::update_trial::UpdateTrialInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(crate::operation::update_trial::UpdateTrialInput {
            trial_name: self.trial_name,
            display_name: self.display_name,
        })
    }
}
