// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DescribeModelCardExportJobOutput {
    /// <p>The name of the model card export job to describe.</p>
    pub model_card_export_job_name: ::std::option::Option<::std::string::String>,
    /// <p>The Amazon Resource Name (ARN) of the model card export job.</p>
    pub model_card_export_job_arn: ::std::option::Option<::std::string::String>,
    /// <p>The completion status of the model card export job.</p>
    /// <ul>
    /// <li> <p> <code>InProgress</code>: The model card export job is in progress.</p> </li>
    /// <li> <p> <code>Completed</code>: The model card export job is complete.</p> </li>
    /// <li> <p> <code>Failed</code>: The model card export job failed. To see the reason for the failure, see the <code>FailureReason</code> field in the response to a <code>DescribeModelCardExportJob</code> call.</p> </li>
    /// </ul>
    pub status: ::std::option::Option<crate::types::ModelCardExportJobStatus>,
    /// <p>The name or Amazon Resource Name (ARN) of the model card that the model export job exports.</p>
    pub model_card_name: ::std::option::Option<::std::string::String>,
    /// <p>The version of the model card that the model export job exports.</p>
    pub model_card_version: ::std::option::Option<i32>,
    /// <p>The export output details for the model card.</p>
    pub output_config: ::std::option::Option<crate::types::ModelCardExportOutputConfig>,
    /// <p>The date and time that the model export job was created.</p>
    pub created_at: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>The date and time that the model export job was last modified.</p>
    pub last_modified_at: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>The failure reason if the model export job fails.</p>
    pub failure_reason: ::std::option::Option<::std::string::String>,
    /// <p>The exported model card artifacts.</p>
    pub export_artifacts: ::std::option::Option<crate::types::ModelCardExportArtifacts>,
    _request_id: Option<String>,
}
impl DescribeModelCardExportJobOutput {
    /// <p>The name of the model card export job to describe.</p>
    pub fn model_card_export_job_name(&self) -> ::std::option::Option<&str> {
        self.model_card_export_job_name.as_deref()
    }
    /// <p>The Amazon Resource Name (ARN) of the model card export job.</p>
    pub fn model_card_export_job_arn(&self) -> ::std::option::Option<&str> {
        self.model_card_export_job_arn.as_deref()
    }
    /// <p>The completion status of the model card export job.</p>
    /// <ul>
    /// <li> <p> <code>InProgress</code>: The model card export job is in progress.</p> </li>
    /// <li> <p> <code>Completed</code>: The model card export job is complete.</p> </li>
    /// <li> <p> <code>Failed</code>: The model card export job failed. To see the reason for the failure, see the <code>FailureReason</code> field in the response to a <code>DescribeModelCardExportJob</code> call.</p> </li>
    /// </ul>
    pub fn status(&self) -> ::std::option::Option<&crate::types::ModelCardExportJobStatus> {
        self.status.as_ref()
    }
    /// <p>The name or Amazon Resource Name (ARN) of the model card that the model export job exports.</p>
    pub fn model_card_name(&self) -> ::std::option::Option<&str> {
        self.model_card_name.as_deref()
    }
    /// <p>The version of the model card that the model export job exports.</p>
    pub fn model_card_version(&self) -> ::std::option::Option<i32> {
        self.model_card_version
    }
    /// <p>The export output details for the model card.</p>
    pub fn output_config(&self) -> ::std::option::Option<&crate::types::ModelCardExportOutputConfig> {
        self.output_config.as_ref()
    }
    /// <p>The date and time that the model export job was created.</p>
    pub fn created_at(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.created_at.as_ref()
    }
    /// <p>The date and time that the model export job was last modified.</p>
    pub fn last_modified_at(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.last_modified_at.as_ref()
    }
    /// <p>The failure reason if the model export job fails.</p>
    pub fn failure_reason(&self) -> ::std::option::Option<&str> {
        self.failure_reason.as_deref()
    }
    /// <p>The exported model card artifacts.</p>
    pub fn export_artifacts(&self) -> ::std::option::Option<&crate::types::ModelCardExportArtifacts> {
        self.export_artifacts.as_ref()
    }
}
impl ::aws_http::request_id::RequestId for DescribeModelCardExportJobOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl DescribeModelCardExportJobOutput {
    /// Creates a new builder-style object to manufacture [`DescribeModelCardExportJobOutput`](crate::operation::describe_model_card_export_job::DescribeModelCardExportJobOutput).
    pub fn builder() -> crate::operation::describe_model_card_export_job::builders::DescribeModelCardExportJobOutputBuilder {
        crate::operation::describe_model_card_export_job::builders::DescribeModelCardExportJobOutputBuilder::default()
    }
}

/// A builder for [`DescribeModelCardExportJobOutput`](crate::operation::describe_model_card_export_job::DescribeModelCardExportJobOutput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DescribeModelCardExportJobOutputBuilder {
    pub(crate) model_card_export_job_name: ::std::option::Option<::std::string::String>,
    pub(crate) model_card_export_job_arn: ::std::option::Option<::std::string::String>,
    pub(crate) status: ::std::option::Option<crate::types::ModelCardExportJobStatus>,
    pub(crate) model_card_name: ::std::option::Option<::std::string::String>,
    pub(crate) model_card_version: ::std::option::Option<i32>,
    pub(crate) output_config: ::std::option::Option<crate::types::ModelCardExportOutputConfig>,
    pub(crate) created_at: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) last_modified_at: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) failure_reason: ::std::option::Option<::std::string::String>,
    pub(crate) export_artifacts: ::std::option::Option<crate::types::ModelCardExportArtifacts>,
    _request_id: Option<String>,
}
impl DescribeModelCardExportJobOutputBuilder {
    /// <p>The name of the model card export job to describe.</p>
    /// This field is required.
    pub fn model_card_export_job_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.model_card_export_job_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the model card export job to describe.</p>
    pub fn set_model_card_export_job_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.model_card_export_job_name = input;
        self
    }
    /// <p>The name of the model card export job to describe.</p>
    pub fn get_model_card_export_job_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.model_card_export_job_name
    }
    /// <p>The Amazon Resource Name (ARN) of the model card export job.</p>
    /// This field is required.
    pub fn model_card_export_job_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.model_card_export_job_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the model card export job.</p>
    pub fn set_model_card_export_job_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.model_card_export_job_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the model card export job.</p>
    pub fn get_model_card_export_job_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.model_card_export_job_arn
    }
    /// <p>The completion status of the model card export job.</p>
    /// <ul>
    /// <li> <p> <code>InProgress</code>: The model card export job is in progress.</p> </li>
    /// <li> <p> <code>Completed</code>: The model card export job is complete.</p> </li>
    /// <li> <p> <code>Failed</code>: The model card export job failed. To see the reason for the failure, see the <code>FailureReason</code> field in the response to a <code>DescribeModelCardExportJob</code> call.</p> </li>
    /// </ul>
    /// This field is required.
    pub fn status(mut self, input: crate::types::ModelCardExportJobStatus) -> Self {
        self.status = ::std::option::Option::Some(input);
        self
    }
    /// <p>The completion status of the model card export job.</p>
    /// <ul>
    /// <li> <p> <code>InProgress</code>: The model card export job is in progress.</p> </li>
    /// <li> <p> <code>Completed</code>: The model card export job is complete.</p> </li>
    /// <li> <p> <code>Failed</code>: The model card export job failed. To see the reason for the failure, see the <code>FailureReason</code> field in the response to a <code>DescribeModelCardExportJob</code> call.</p> </li>
    /// </ul>
    pub fn set_status(mut self, input: ::std::option::Option<crate::types::ModelCardExportJobStatus>) -> Self {
        self.status = input;
        self
    }
    /// <p>The completion status of the model card export job.</p>
    /// <ul>
    /// <li> <p> <code>InProgress</code>: The model card export job is in progress.</p> </li>
    /// <li> <p> <code>Completed</code>: The model card export job is complete.</p> </li>
    /// <li> <p> <code>Failed</code>: The model card export job failed. To see the reason for the failure, see the <code>FailureReason</code> field in the response to a <code>DescribeModelCardExportJob</code> call.</p> </li>
    /// </ul>
    pub fn get_status(&self) -> &::std::option::Option<crate::types::ModelCardExportJobStatus> {
        &self.status
    }
    /// <p>The name or Amazon Resource Name (ARN) of the model card that the model export job exports.</p>
    /// This field is required.
    pub fn model_card_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.model_card_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name or Amazon Resource Name (ARN) of the model card that the model export job exports.</p>
    pub fn set_model_card_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.model_card_name = input;
        self
    }
    /// <p>The name or Amazon Resource Name (ARN) of the model card that the model export job exports.</p>
    pub fn get_model_card_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.model_card_name
    }
    /// <p>The version of the model card that the model export job exports.</p>
    /// This field is required.
    pub fn model_card_version(mut self, input: i32) -> Self {
        self.model_card_version = ::std::option::Option::Some(input);
        self
    }
    /// <p>The version of the model card that the model export job exports.</p>
    pub fn set_model_card_version(mut self, input: ::std::option::Option<i32>) -> Self {
        self.model_card_version = input;
        self
    }
    /// <p>The version of the model card that the model export job exports.</p>
    pub fn get_model_card_version(&self) -> &::std::option::Option<i32> {
        &self.model_card_version
    }
    /// <p>The export output details for the model card.</p>
    /// This field is required.
    pub fn output_config(mut self, input: crate::types::ModelCardExportOutputConfig) -> Self {
        self.output_config = ::std::option::Option::Some(input);
        self
    }
    /// <p>The export output details for the model card.</p>
    pub fn set_output_config(mut self, input: ::std::option::Option<crate::types::ModelCardExportOutputConfig>) -> Self {
        self.output_config = input;
        self
    }
    /// <p>The export output details for the model card.</p>
    pub fn get_output_config(&self) -> &::std::option::Option<crate::types::ModelCardExportOutputConfig> {
        &self.output_config
    }
    /// <p>The date and time that the model export job was created.</p>
    /// This field is required.
    pub fn created_at(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.created_at = ::std::option::Option::Some(input);
        self
    }
    /// <p>The date and time that the model export job was created.</p>
    pub fn set_created_at(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.created_at = input;
        self
    }
    /// <p>The date and time that the model export job was created.</p>
    pub fn get_created_at(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.created_at
    }
    /// <p>The date and time that the model export job was last modified.</p>
    /// This field is required.
    pub fn last_modified_at(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.last_modified_at = ::std::option::Option::Some(input);
        self
    }
    /// <p>The date and time that the model export job was last modified.</p>
    pub fn set_last_modified_at(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.last_modified_at = input;
        self
    }
    /// <p>The date and time that the model export job was last modified.</p>
    pub fn get_last_modified_at(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.last_modified_at
    }
    /// <p>The failure reason if the model export job fails.</p>
    pub fn failure_reason(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.failure_reason = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The failure reason if the model export job fails.</p>
    pub fn set_failure_reason(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.failure_reason = input;
        self
    }
    /// <p>The failure reason if the model export job fails.</p>
    pub fn get_failure_reason(&self) -> &::std::option::Option<::std::string::String> {
        &self.failure_reason
    }
    /// <p>The exported model card artifacts.</p>
    pub fn export_artifacts(mut self, input: crate::types::ModelCardExportArtifacts) -> Self {
        self.export_artifacts = ::std::option::Option::Some(input);
        self
    }
    /// <p>The exported model card artifacts.</p>
    pub fn set_export_artifacts(mut self, input: ::std::option::Option<crate::types::ModelCardExportArtifacts>) -> Self {
        self.export_artifacts = input;
        self
    }
    /// <p>The exported model card artifacts.</p>
    pub fn get_export_artifacts(&self) -> &::std::option::Option<crate::types::ModelCardExportArtifacts> {
        &self.export_artifacts
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`DescribeModelCardExportJobOutput`](crate::operation::describe_model_card_export_job::DescribeModelCardExportJobOutput).
    pub fn build(self) -> crate::operation::describe_model_card_export_job::DescribeModelCardExportJobOutput {
        crate::operation::describe_model_card_export_job::DescribeModelCardExportJobOutput {
            model_card_export_job_name: self.model_card_export_job_name,
            model_card_export_job_arn: self.model_card_export_job_arn,
            status: self.status,
            model_card_name: self.model_card_name,
            model_card_version: self.model_card_version,
            output_config: self.output_config,
            created_at: self.created_at,
            last_modified_at: self.last_modified_at,
            failure_reason: self.failure_reason,
            export_artifacts: self.export_artifacts,
            _request_id: self._request_id,
        }
    }
}
