// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct CreateInferenceRecommendationsJobInput {
    /// <p>A name for the recommendation job. The name must be unique within the Amazon Web Services Region and within your Amazon Web Services account.</p>
    #[doc(hidden)]
    pub job_name: std::option::Option<std::string::String>,
    /// <p>Defines the type of recommendation job. Specify <code>Default</code> to initiate an instance recommendation and <code>Advanced</code> to initiate a load test. If left unspecified, Amazon SageMaker Inference Recommender will run an instance recommendation (<code>DEFAULT</code>) job.</p>
    #[doc(hidden)]
    pub job_type: std::option::Option<crate::types::RecommendationJobType>,
    /// <p>The Amazon Resource Name (ARN) of an IAM role that enables Amazon SageMaker to perform tasks on your behalf.</p>
    #[doc(hidden)]
    pub role_arn: std::option::Option<std::string::String>,
    /// <p>Provides information about the versioned model package Amazon Resource Name (ARN), the traffic pattern, and endpoint configurations.</p>
    #[doc(hidden)]
    pub input_config: std::option::Option<crate::types::RecommendationJobInputConfig>,
    /// <p>Description of the recommendation job.</p>
    #[doc(hidden)]
    pub job_description: std::option::Option<std::string::String>,
    /// <p>A set of conditions for stopping a recommendation job. If any of the conditions are met, the job is automatically stopped.</p>
    #[doc(hidden)]
    pub stopping_conditions: std::option::Option<crate::types::RecommendationJobStoppingConditions>,
    /// <p>Provides information about the output artifacts and the KMS key to use for Amazon S3 server-side encryption.</p>
    #[doc(hidden)]
    pub output_config: std::option::Option<crate::types::RecommendationJobOutputConfig>,
    /// <p>The metadata that you apply to Amazon Web Services resources to help you categorize and organize them. Each tag consists of a key and a value, both of which you define. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging Amazon Web Services Resources</a> in the Amazon Web Services General Reference.</p>
    #[doc(hidden)]
    pub tags: std::option::Option<std::vec::Vec<crate::types::Tag>>,
}
impl CreateInferenceRecommendationsJobInput {
    /// <p>A name for the recommendation job. The name must be unique within the Amazon Web Services Region and within your Amazon Web Services account.</p>
    pub fn job_name(&self) -> std::option::Option<&str> {
        self.job_name.as_deref()
    }
    /// <p>Defines the type of recommendation job. Specify <code>Default</code> to initiate an instance recommendation and <code>Advanced</code> to initiate a load test. If left unspecified, Amazon SageMaker Inference Recommender will run an instance recommendation (<code>DEFAULT</code>) job.</p>
    pub fn job_type(&self) -> std::option::Option<&crate::types::RecommendationJobType> {
        self.job_type.as_ref()
    }
    /// <p>The Amazon Resource Name (ARN) of an IAM role that enables Amazon SageMaker to perform tasks on your behalf.</p>
    pub fn role_arn(&self) -> std::option::Option<&str> {
        self.role_arn.as_deref()
    }
    /// <p>Provides information about the versioned model package Amazon Resource Name (ARN), the traffic pattern, and endpoint configurations.</p>
    pub fn input_config(&self) -> std::option::Option<&crate::types::RecommendationJobInputConfig> {
        self.input_config.as_ref()
    }
    /// <p>Description of the recommendation job.</p>
    pub fn job_description(&self) -> std::option::Option<&str> {
        self.job_description.as_deref()
    }
    /// <p>A set of conditions for stopping a recommendation job. If any of the conditions are met, the job is automatically stopped.</p>
    pub fn stopping_conditions(
        &self,
    ) -> std::option::Option<&crate::types::RecommendationJobStoppingConditions> {
        self.stopping_conditions.as_ref()
    }
    /// <p>Provides information about the output artifacts and the KMS key to use for Amazon S3 server-side encryption.</p>
    pub fn output_config(
        &self,
    ) -> std::option::Option<&crate::types::RecommendationJobOutputConfig> {
        self.output_config.as_ref()
    }
    /// <p>The metadata that you apply to Amazon Web Services resources to help you categorize and organize them. Each tag consists of a key and a value, both of which you define. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging Amazon Web Services Resources</a> in the Amazon Web Services General Reference.</p>
    pub fn tags(&self) -> std::option::Option<&[crate::types::Tag]> {
        self.tags.as_deref()
    }
}
impl CreateInferenceRecommendationsJobInput {
    /// Creates a new builder-style object to manufacture [`CreateInferenceRecommendationsJobInput`](crate::operation::create_inference_recommendations_job::CreateInferenceRecommendationsJobInput).
    pub fn builder() -> crate::operation::create_inference_recommendations_job::builders::CreateInferenceRecommendationsJobInputBuilder{
        crate::operation::create_inference_recommendations_job::builders::CreateInferenceRecommendationsJobInputBuilder::default()
    }
}

/// A builder for [`CreateInferenceRecommendationsJobInput`](crate::operation::create_inference_recommendations_job::CreateInferenceRecommendationsJobInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct CreateInferenceRecommendationsJobInputBuilder {
    pub(crate) job_name: std::option::Option<std::string::String>,
    pub(crate) job_type: std::option::Option<crate::types::RecommendationJobType>,
    pub(crate) role_arn: std::option::Option<std::string::String>,
    pub(crate) input_config: std::option::Option<crate::types::RecommendationJobInputConfig>,
    pub(crate) job_description: std::option::Option<std::string::String>,
    pub(crate) stopping_conditions:
        std::option::Option<crate::types::RecommendationJobStoppingConditions>,
    pub(crate) output_config: std::option::Option<crate::types::RecommendationJobOutputConfig>,
    pub(crate) tags: std::option::Option<std::vec::Vec<crate::types::Tag>>,
}
impl CreateInferenceRecommendationsJobInputBuilder {
    /// <p>A name for the recommendation job. The name must be unique within the Amazon Web Services Region and within your Amazon Web Services account.</p>
    pub fn job_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.job_name = Some(input.into());
        self
    }
    /// <p>A name for the recommendation job. The name must be unique within the Amazon Web Services Region and within your Amazon Web Services account.</p>
    pub fn set_job_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.job_name = input;
        self
    }
    /// <p>Defines the type of recommendation job. Specify <code>Default</code> to initiate an instance recommendation and <code>Advanced</code> to initiate a load test. If left unspecified, Amazon SageMaker Inference Recommender will run an instance recommendation (<code>DEFAULT</code>) job.</p>
    pub fn job_type(mut self, input: crate::types::RecommendationJobType) -> Self {
        self.job_type = Some(input);
        self
    }
    /// <p>Defines the type of recommendation job. Specify <code>Default</code> to initiate an instance recommendation and <code>Advanced</code> to initiate a load test. If left unspecified, Amazon SageMaker Inference Recommender will run an instance recommendation (<code>DEFAULT</code>) job.</p>
    pub fn set_job_type(
        mut self,
        input: std::option::Option<crate::types::RecommendationJobType>,
    ) -> Self {
        self.job_type = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of an IAM role that enables Amazon SageMaker to perform tasks on your behalf.</p>
    pub fn role_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.role_arn = Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of an IAM role that enables Amazon SageMaker to perform tasks on your behalf.</p>
    pub fn set_role_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.role_arn = input;
        self
    }
    /// <p>Provides information about the versioned model package Amazon Resource Name (ARN), the traffic pattern, and endpoint configurations.</p>
    pub fn input_config(mut self, input: crate::types::RecommendationJobInputConfig) -> Self {
        self.input_config = Some(input);
        self
    }
    /// <p>Provides information about the versioned model package Amazon Resource Name (ARN), the traffic pattern, and endpoint configurations.</p>
    pub fn set_input_config(
        mut self,
        input: std::option::Option<crate::types::RecommendationJobInputConfig>,
    ) -> Self {
        self.input_config = input;
        self
    }
    /// <p>Description of the recommendation job.</p>
    pub fn job_description(mut self, input: impl Into<std::string::String>) -> Self {
        self.job_description = Some(input.into());
        self
    }
    /// <p>Description of the recommendation job.</p>
    pub fn set_job_description(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.job_description = input;
        self
    }
    /// <p>A set of conditions for stopping a recommendation job. If any of the conditions are met, the job is automatically stopped.</p>
    pub fn stopping_conditions(
        mut self,
        input: crate::types::RecommendationJobStoppingConditions,
    ) -> Self {
        self.stopping_conditions = Some(input);
        self
    }
    /// <p>A set of conditions for stopping a recommendation job. If any of the conditions are met, the job is automatically stopped.</p>
    pub fn set_stopping_conditions(
        mut self,
        input: std::option::Option<crate::types::RecommendationJobStoppingConditions>,
    ) -> Self {
        self.stopping_conditions = input;
        self
    }
    /// <p>Provides information about the output artifacts and the KMS key to use for Amazon S3 server-side encryption.</p>
    pub fn output_config(mut self, input: crate::types::RecommendationJobOutputConfig) -> Self {
        self.output_config = Some(input);
        self
    }
    /// <p>Provides information about the output artifacts and the KMS key to use for Amazon S3 server-side encryption.</p>
    pub fn set_output_config(
        mut self,
        input: std::option::Option<crate::types::RecommendationJobOutputConfig>,
    ) -> Self {
        self.output_config = input;
        self
    }
    /// Appends an item to `tags`.
    ///
    /// To override the contents of this collection use [`set_tags`](Self::set_tags).
    ///
    /// <p>The metadata that you apply to Amazon Web Services resources to help you categorize and organize them. Each tag consists of a key and a value, both of which you define. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging Amazon Web Services Resources</a> in the Amazon Web Services General Reference.</p>
    pub fn tags(mut self, input: crate::types::Tag) -> Self {
        let mut v = self.tags.unwrap_or_default();
        v.push(input);
        self.tags = Some(v);
        self
    }
    /// <p>The metadata that you apply to Amazon Web Services resources to help you categorize and organize them. Each tag consists of a key and a value, both of which you define. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging Amazon Web Services Resources</a> in the Amazon Web Services General Reference.</p>
    pub fn set_tags(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::Tag>>,
    ) -> Self {
        self.tags = input;
        self
    }
    /// Consumes the builder and constructs a [`CreateInferenceRecommendationsJobInput`](crate::operation::create_inference_recommendations_job::CreateInferenceRecommendationsJobInput).
    pub fn build(self) -> Result<crate::operation::create_inference_recommendations_job::CreateInferenceRecommendationsJobInput, aws_smithy_http::operation::error::BuildError>{
        Ok(
            crate::operation::create_inference_recommendations_job::CreateInferenceRecommendationsJobInput {
                job_name: self.job_name
                ,
                job_type: self.job_type
                ,
                role_arn: self.role_arn
                ,
                input_config: self.input_config
                ,
                job_description: self.job_description
                ,
                stopping_conditions: self.stopping_conditions
                ,
                output_config: self.output_config
                ,
                tags: self.tags
                ,
            }
        )
    }
}
