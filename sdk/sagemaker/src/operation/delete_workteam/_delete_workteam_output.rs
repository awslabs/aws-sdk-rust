// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DeleteWorkteamOutput {
    /// <p>Returns <code>true</code> if the work team was successfully deleted; otherwise, returns <code>false</code>.</p>
    #[doc(hidden)]
    pub success: bool,
    _request_id: Option<String>,
}
impl DeleteWorkteamOutput {
    /// <p>Returns <code>true</code> if the work team was successfully deleted; otherwise, returns <code>false</code>.</p>
    pub fn success(&self) -> bool {
        self.success
    }
}
impl aws_http::request_id::RequestId for DeleteWorkteamOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl DeleteWorkteamOutput {
    /// Creates a new builder-style object to manufacture [`DeleteWorkteamOutput`](crate::operation::delete_workteam::DeleteWorkteamOutput).
    pub fn builder() -> crate::operation::delete_workteam::builders::DeleteWorkteamOutputBuilder {
        crate::operation::delete_workteam::builders::DeleteWorkteamOutputBuilder::default()
    }
}

/// A builder for [`DeleteWorkteamOutput`](crate::operation::delete_workteam::DeleteWorkteamOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DeleteWorkteamOutputBuilder {
    pub(crate) success: std::option::Option<bool>,
    _request_id: Option<String>,
}
impl DeleteWorkteamOutputBuilder {
    /// <p>Returns <code>true</code> if the work team was successfully deleted; otherwise, returns <code>false</code>.</p>
    pub fn success(mut self, input: bool) -> Self {
        self.success = Some(input);
        self
    }
    /// <p>Returns <code>true</code> if the work team was successfully deleted; otherwise, returns <code>false</code>.</p>
    pub fn set_success(mut self, input: std::option::Option<bool>) -> Self {
        self.success = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`DeleteWorkteamOutput`](crate::operation::delete_workteam::DeleteWorkteamOutput).
    pub fn build(self) -> crate::operation::delete_workteam::DeleteWorkteamOutput {
        crate::operation::delete_workteam::DeleteWorkteamOutput {
            success: self.success.unwrap_or_default(),
            _request_id: self._request_id,
        }
    }
}
