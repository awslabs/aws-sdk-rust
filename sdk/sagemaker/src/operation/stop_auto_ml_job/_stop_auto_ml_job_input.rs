// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct StopAutoMlJobInput {
    /// <p>The name of the object you are requesting.</p>
    #[doc(hidden)]
    pub auto_ml_job_name: std::option::Option<std::string::String>,
}
impl StopAutoMlJobInput {
    /// <p>The name of the object you are requesting.</p>
    pub fn auto_ml_job_name(&self) -> std::option::Option<&str> {
        self.auto_ml_job_name.as_deref()
    }
}
impl StopAutoMlJobInput {
    /// Creates a new builder-style object to manufacture [`StopAutoMlJobInput`](crate::operation::stop_auto_ml_job::StopAutoMlJobInput).
    pub fn builder() -> crate::operation::stop_auto_ml_job::builders::StopAutoMlJobInputBuilder {
        crate::operation::stop_auto_ml_job::builders::StopAutoMlJobInputBuilder::default()
    }
}

/// A builder for [`StopAutoMlJobInput`](crate::operation::stop_auto_ml_job::StopAutoMlJobInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct StopAutoMlJobInputBuilder {
    pub(crate) auto_ml_job_name: std::option::Option<std::string::String>,
}
impl StopAutoMlJobInputBuilder {
    /// <p>The name of the object you are requesting.</p>
    pub fn auto_ml_job_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.auto_ml_job_name = Some(input.into());
        self
    }
    /// <p>The name of the object you are requesting.</p>
    pub fn set_auto_ml_job_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.auto_ml_job_name = input;
        self
    }
    /// Consumes the builder and constructs a [`StopAutoMlJobInput`](crate::operation::stop_auto_ml_job::StopAutoMlJobInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::stop_auto_ml_job::StopAutoMlJobInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(crate::operation::stop_auto_ml_job::StopAutoMlJobInput {
            auto_ml_job_name: self.auto_ml_job_name,
        })
    }
}
