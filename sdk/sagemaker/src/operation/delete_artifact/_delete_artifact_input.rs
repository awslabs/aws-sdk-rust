// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DeleteArtifactInput {
    /// <p>The Amazon Resource Name (ARN) of the artifact to delete.</p>
    pub artifact_arn: ::std::option::Option<::std::string::String>,
    /// <p>The URI of the source.</p>
    pub source: ::std::option::Option<crate::types::ArtifactSource>,
}
impl DeleteArtifactInput {
    /// <p>The Amazon Resource Name (ARN) of the artifact to delete.</p>
    pub fn artifact_arn(&self) -> ::std::option::Option<&str> {
        self.artifact_arn.as_deref()
    }
    /// <p>The URI of the source.</p>
    pub fn source(&self) -> ::std::option::Option<&crate::types::ArtifactSource> {
        self.source.as_ref()
    }
}
impl DeleteArtifactInput {
    /// Creates a new builder-style object to manufacture [`DeleteArtifactInput`](crate::operation::delete_artifact::DeleteArtifactInput).
    pub fn builder() -> crate::operation::delete_artifact::builders::DeleteArtifactInputBuilder {
        crate::operation::delete_artifact::builders::DeleteArtifactInputBuilder::default()
    }
}

/// A builder for [`DeleteArtifactInput`](crate::operation::delete_artifact::DeleteArtifactInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DeleteArtifactInputBuilder {
    pub(crate) artifact_arn: ::std::option::Option<::std::string::String>,
    pub(crate) source: ::std::option::Option<crate::types::ArtifactSource>,
}
impl DeleteArtifactInputBuilder {
    /// <p>The Amazon Resource Name (ARN) of the artifact to delete.</p>
    pub fn artifact_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.artifact_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the artifact to delete.</p>
    pub fn set_artifact_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.artifact_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the artifact to delete.</p>
    pub fn get_artifact_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.artifact_arn
    }
    /// <p>The URI of the source.</p>
    pub fn source(mut self, input: crate::types::ArtifactSource) -> Self {
        self.source = ::std::option::Option::Some(input);
        self
    }
    /// <p>The URI of the source.</p>
    pub fn set_source(mut self, input: ::std::option::Option<crate::types::ArtifactSource>) -> Self {
        self.source = input;
        self
    }
    /// <p>The URI of the source.</p>
    pub fn get_source(&self) -> &::std::option::Option<crate::types::ArtifactSource> {
        &self.source
    }
    /// Consumes the builder and constructs a [`DeleteArtifactInput`](crate::operation::delete_artifact::DeleteArtifactInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::delete_artifact::DeleteArtifactInput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::operation::delete_artifact::DeleteArtifactInput {
            artifact_arn: self.artifact_arn,
            source: self.source,
        })
    }
}
