// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DescribeCodeRepositoryOutput {
    /// <p>The name of the Git repository.</p>
    pub code_repository_name: ::std::option::Option<::std::string::String>,
    /// <p>The Amazon Resource Name (ARN) of the Git repository.</p>
    pub code_repository_arn: ::std::option::Option<::std::string::String>,
    /// <p>The date and time that the repository was created.</p>
    pub creation_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>The date and time that the repository was last changed.</p>
    pub last_modified_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>Configuration details about the repository, including the URL where the repository is located, the default branch, and the Amazon Resource Name (ARN) of the Amazon Web Services Secrets Manager secret that contains the credentials used to access the repository.</p>
    pub git_config: ::std::option::Option<crate::types::GitConfig>,
    _request_id: Option<String>,
}
impl DescribeCodeRepositoryOutput {
    /// <p>The name of the Git repository.</p>
    pub fn code_repository_name(&self) -> ::std::option::Option<&str> {
        self.code_repository_name.as_deref()
    }
    /// <p>The Amazon Resource Name (ARN) of the Git repository.</p>
    pub fn code_repository_arn(&self) -> ::std::option::Option<&str> {
        self.code_repository_arn.as_deref()
    }
    /// <p>The date and time that the repository was created.</p>
    pub fn creation_time(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.creation_time.as_ref()
    }
    /// <p>The date and time that the repository was last changed.</p>
    pub fn last_modified_time(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.last_modified_time.as_ref()
    }
    /// <p>Configuration details about the repository, including the URL where the repository is located, the default branch, and the Amazon Resource Name (ARN) of the Amazon Web Services Secrets Manager secret that contains the credentials used to access the repository.</p>
    pub fn git_config(&self) -> ::std::option::Option<&crate::types::GitConfig> {
        self.git_config.as_ref()
    }
}
impl ::aws_http::request_id::RequestId for DescribeCodeRepositoryOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl DescribeCodeRepositoryOutput {
    /// Creates a new builder-style object to manufacture [`DescribeCodeRepositoryOutput`](crate::operation::describe_code_repository::DescribeCodeRepositoryOutput).
    pub fn builder() -> crate::operation::describe_code_repository::builders::DescribeCodeRepositoryOutputBuilder {
        crate::operation::describe_code_repository::builders::DescribeCodeRepositoryOutputBuilder::default()
    }
}

/// A builder for [`DescribeCodeRepositoryOutput`](crate::operation::describe_code_repository::DescribeCodeRepositoryOutput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DescribeCodeRepositoryOutputBuilder {
    pub(crate) code_repository_name: ::std::option::Option<::std::string::String>,
    pub(crate) code_repository_arn: ::std::option::Option<::std::string::String>,
    pub(crate) creation_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) last_modified_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) git_config: ::std::option::Option<crate::types::GitConfig>,
    _request_id: Option<String>,
}
impl DescribeCodeRepositoryOutputBuilder {
    /// <p>The name of the Git repository.</p>
    /// This field is required.
    pub fn code_repository_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.code_repository_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the Git repository.</p>
    pub fn set_code_repository_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.code_repository_name = input;
        self
    }
    /// <p>The name of the Git repository.</p>
    pub fn get_code_repository_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.code_repository_name
    }
    /// <p>The Amazon Resource Name (ARN) of the Git repository.</p>
    /// This field is required.
    pub fn code_repository_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.code_repository_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the Git repository.</p>
    pub fn set_code_repository_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.code_repository_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the Git repository.</p>
    pub fn get_code_repository_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.code_repository_arn
    }
    /// <p>The date and time that the repository was created.</p>
    /// This field is required.
    pub fn creation_time(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.creation_time = ::std::option::Option::Some(input);
        self
    }
    /// <p>The date and time that the repository was created.</p>
    pub fn set_creation_time(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.creation_time = input;
        self
    }
    /// <p>The date and time that the repository was created.</p>
    pub fn get_creation_time(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.creation_time
    }
    /// <p>The date and time that the repository was last changed.</p>
    /// This field is required.
    pub fn last_modified_time(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.last_modified_time = ::std::option::Option::Some(input);
        self
    }
    /// <p>The date and time that the repository was last changed.</p>
    pub fn set_last_modified_time(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.last_modified_time = input;
        self
    }
    /// <p>The date and time that the repository was last changed.</p>
    pub fn get_last_modified_time(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.last_modified_time
    }
    /// <p>Configuration details about the repository, including the URL where the repository is located, the default branch, and the Amazon Resource Name (ARN) of the Amazon Web Services Secrets Manager secret that contains the credentials used to access the repository.</p>
    pub fn git_config(mut self, input: crate::types::GitConfig) -> Self {
        self.git_config = ::std::option::Option::Some(input);
        self
    }
    /// <p>Configuration details about the repository, including the URL where the repository is located, the default branch, and the Amazon Resource Name (ARN) of the Amazon Web Services Secrets Manager secret that contains the credentials used to access the repository.</p>
    pub fn set_git_config(mut self, input: ::std::option::Option<crate::types::GitConfig>) -> Self {
        self.git_config = input;
        self
    }
    /// <p>Configuration details about the repository, including the URL where the repository is located, the default branch, and the Amazon Resource Name (ARN) of the Amazon Web Services Secrets Manager secret that contains the credentials used to access the repository.</p>
    pub fn get_git_config(&self) -> &::std::option::Option<crate::types::GitConfig> {
        &self.git_config
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`DescribeCodeRepositoryOutput`](crate::operation::describe_code_repository::DescribeCodeRepositoryOutput).
    pub fn build(self) -> crate::operation::describe_code_repository::DescribeCodeRepositoryOutput {
        crate::operation::describe_code_repository::DescribeCodeRepositoryOutput {
            code_repository_name: self.code_repository_name,
            code_repository_arn: self.code_repository_arn,
            creation_time: self.creation_time,
            last_modified_time: self.last_modified_time,
            git_config: self.git_config,
            _request_id: self._request_id,
        }
    }
}
