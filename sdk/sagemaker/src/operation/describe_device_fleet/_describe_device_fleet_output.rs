// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DescribeDeviceFleetOutput {
    /// <p>The name of the fleet.</p>
    pub device_fleet_name: ::std::option::Option<::std::string::String>,
    /// <p>The The Amazon Resource Name (ARN) of the fleet.</p>
    pub device_fleet_arn: ::std::option::Option<::std::string::String>,
    /// <p>The output configuration for storing sampled data.</p>
    pub output_config: ::std::option::Option<crate::types::EdgeOutputConfig>,
    /// <p>A description of the fleet.</p>
    pub description: ::std::option::Option<::std::string::String>,
    /// <p>Timestamp of when the device fleet was created.</p>
    pub creation_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>Timestamp of when the device fleet was last updated.</p>
    pub last_modified_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>The Amazon Resource Name (ARN) that has access to Amazon Web Services Internet of Things (IoT).</p>
    pub role_arn: ::std::option::Option<::std::string::String>,
    /// <p>The Amazon Resource Name (ARN) alias created in Amazon Web Services Internet of Things (IoT).</p>
    pub iot_role_alias: ::std::option::Option<::std::string::String>,
    _request_id: Option<String>,
}
impl DescribeDeviceFleetOutput {
    /// <p>The name of the fleet.</p>
    pub fn device_fleet_name(&self) -> ::std::option::Option<&str> {
        self.device_fleet_name.as_deref()
    }
    /// <p>The The Amazon Resource Name (ARN) of the fleet.</p>
    pub fn device_fleet_arn(&self) -> ::std::option::Option<&str> {
        self.device_fleet_arn.as_deref()
    }
    /// <p>The output configuration for storing sampled data.</p>
    pub fn output_config(&self) -> ::std::option::Option<&crate::types::EdgeOutputConfig> {
        self.output_config.as_ref()
    }
    /// <p>A description of the fleet.</p>
    pub fn description(&self) -> ::std::option::Option<&str> {
        self.description.as_deref()
    }
    /// <p>Timestamp of when the device fleet was created.</p>
    pub fn creation_time(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.creation_time.as_ref()
    }
    /// <p>Timestamp of when the device fleet was last updated.</p>
    pub fn last_modified_time(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.last_modified_time.as_ref()
    }
    /// <p>The Amazon Resource Name (ARN) that has access to Amazon Web Services Internet of Things (IoT).</p>
    pub fn role_arn(&self) -> ::std::option::Option<&str> {
        self.role_arn.as_deref()
    }
    /// <p>The Amazon Resource Name (ARN) alias created in Amazon Web Services Internet of Things (IoT).</p>
    pub fn iot_role_alias(&self) -> ::std::option::Option<&str> {
        self.iot_role_alias.as_deref()
    }
}
impl ::aws_http::request_id::RequestId for DescribeDeviceFleetOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl DescribeDeviceFleetOutput {
    /// Creates a new builder-style object to manufacture [`DescribeDeviceFleetOutput`](crate::operation::describe_device_fleet::DescribeDeviceFleetOutput).
    pub fn builder() -> crate::operation::describe_device_fleet::builders::DescribeDeviceFleetOutputBuilder {
        crate::operation::describe_device_fleet::builders::DescribeDeviceFleetOutputBuilder::default()
    }
}

/// A builder for [`DescribeDeviceFleetOutput`](crate::operation::describe_device_fleet::DescribeDeviceFleetOutput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DescribeDeviceFleetOutputBuilder {
    pub(crate) device_fleet_name: ::std::option::Option<::std::string::String>,
    pub(crate) device_fleet_arn: ::std::option::Option<::std::string::String>,
    pub(crate) output_config: ::std::option::Option<crate::types::EdgeOutputConfig>,
    pub(crate) description: ::std::option::Option<::std::string::String>,
    pub(crate) creation_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) last_modified_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) role_arn: ::std::option::Option<::std::string::String>,
    pub(crate) iot_role_alias: ::std::option::Option<::std::string::String>,
    _request_id: Option<String>,
}
impl DescribeDeviceFleetOutputBuilder {
    /// <p>The name of the fleet.</p>
    /// This field is required.
    pub fn device_fleet_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.device_fleet_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the fleet.</p>
    pub fn set_device_fleet_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.device_fleet_name = input;
        self
    }
    /// <p>The name of the fleet.</p>
    pub fn get_device_fleet_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.device_fleet_name
    }
    /// <p>The The Amazon Resource Name (ARN) of the fleet.</p>
    /// This field is required.
    pub fn device_fleet_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.device_fleet_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The The Amazon Resource Name (ARN) of the fleet.</p>
    pub fn set_device_fleet_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.device_fleet_arn = input;
        self
    }
    /// <p>The The Amazon Resource Name (ARN) of the fleet.</p>
    pub fn get_device_fleet_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.device_fleet_arn
    }
    /// <p>The output configuration for storing sampled data.</p>
    /// This field is required.
    pub fn output_config(mut self, input: crate::types::EdgeOutputConfig) -> Self {
        self.output_config = ::std::option::Option::Some(input);
        self
    }
    /// <p>The output configuration for storing sampled data.</p>
    pub fn set_output_config(mut self, input: ::std::option::Option<crate::types::EdgeOutputConfig>) -> Self {
        self.output_config = input;
        self
    }
    /// <p>The output configuration for storing sampled data.</p>
    pub fn get_output_config(&self) -> &::std::option::Option<crate::types::EdgeOutputConfig> {
        &self.output_config
    }
    /// <p>A description of the fleet.</p>
    pub fn description(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.description = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>A description of the fleet.</p>
    pub fn set_description(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.description = input;
        self
    }
    /// <p>A description of the fleet.</p>
    pub fn get_description(&self) -> &::std::option::Option<::std::string::String> {
        &self.description
    }
    /// <p>Timestamp of when the device fleet was created.</p>
    /// This field is required.
    pub fn creation_time(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.creation_time = ::std::option::Option::Some(input);
        self
    }
    /// <p>Timestamp of when the device fleet was created.</p>
    pub fn set_creation_time(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.creation_time = input;
        self
    }
    /// <p>Timestamp of when the device fleet was created.</p>
    pub fn get_creation_time(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.creation_time
    }
    /// <p>Timestamp of when the device fleet was last updated.</p>
    /// This field is required.
    pub fn last_modified_time(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.last_modified_time = ::std::option::Option::Some(input);
        self
    }
    /// <p>Timestamp of when the device fleet was last updated.</p>
    pub fn set_last_modified_time(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.last_modified_time = input;
        self
    }
    /// <p>Timestamp of when the device fleet was last updated.</p>
    pub fn get_last_modified_time(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.last_modified_time
    }
    /// <p>The Amazon Resource Name (ARN) that has access to Amazon Web Services Internet of Things (IoT).</p>
    pub fn role_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.role_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) that has access to Amazon Web Services Internet of Things (IoT).</p>
    pub fn set_role_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.role_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) that has access to Amazon Web Services Internet of Things (IoT).</p>
    pub fn get_role_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.role_arn
    }
    /// <p>The Amazon Resource Name (ARN) alias created in Amazon Web Services Internet of Things (IoT).</p>
    pub fn iot_role_alias(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.iot_role_alias = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) alias created in Amazon Web Services Internet of Things (IoT).</p>
    pub fn set_iot_role_alias(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.iot_role_alias = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) alias created in Amazon Web Services Internet of Things (IoT).</p>
    pub fn get_iot_role_alias(&self) -> &::std::option::Option<::std::string::String> {
        &self.iot_role_alias
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`DescribeDeviceFleetOutput`](crate::operation::describe_device_fleet::DescribeDeviceFleetOutput).
    pub fn build(self) -> crate::operation::describe_device_fleet::DescribeDeviceFleetOutput {
        crate::operation::describe_device_fleet::DescribeDeviceFleetOutput {
            device_fleet_name: self.device_fleet_name,
            device_fleet_arn: self.device_fleet_arn,
            output_config: self.output_config,
            description: self.description,
            creation_time: self.creation_time,
            last_modified_time: self.last_modified_time,
            role_arn: self.role_arn,
            iot_role_alias: self.iot_role_alias,
            _request_id: self._request_id,
        }
    }
}
