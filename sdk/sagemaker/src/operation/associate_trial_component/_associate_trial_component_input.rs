// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AssociateTrialComponentInput {
    /// <p>The name of the component to associated with the trial.</p>
    #[doc(hidden)]
    pub trial_component_name: std::option::Option<std::string::String>,
    /// <p>The name of the trial to associate with.</p>
    #[doc(hidden)]
    pub trial_name: std::option::Option<std::string::String>,
}
impl AssociateTrialComponentInput {
    /// <p>The name of the component to associated with the trial.</p>
    pub fn trial_component_name(&self) -> std::option::Option<&str> {
        self.trial_component_name.as_deref()
    }
    /// <p>The name of the trial to associate with.</p>
    pub fn trial_name(&self) -> std::option::Option<&str> {
        self.trial_name.as_deref()
    }
}
impl AssociateTrialComponentInput {
    /// Creates a new builder-style object to manufacture [`AssociateTrialComponentInput`](crate::operation::associate_trial_component::AssociateTrialComponentInput).
    pub fn builder(
    ) -> crate::operation::associate_trial_component::builders::AssociateTrialComponentInputBuilder
    {
        crate::operation::associate_trial_component::builders::AssociateTrialComponentInputBuilder::default()
    }
}

/// A builder for [`AssociateTrialComponentInput`](crate::operation::associate_trial_component::AssociateTrialComponentInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AssociateTrialComponentInputBuilder {
    pub(crate) trial_component_name: std::option::Option<std::string::String>,
    pub(crate) trial_name: std::option::Option<std::string::String>,
}
impl AssociateTrialComponentInputBuilder {
    /// <p>The name of the component to associated with the trial.</p>
    pub fn trial_component_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.trial_component_name = Some(input.into());
        self
    }
    /// <p>The name of the component to associated with the trial.</p>
    pub fn set_trial_component_name(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.trial_component_name = input;
        self
    }
    /// <p>The name of the trial to associate with.</p>
    pub fn trial_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.trial_name = Some(input.into());
        self
    }
    /// <p>The name of the trial to associate with.</p>
    pub fn set_trial_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.trial_name = input;
        self
    }
    /// Consumes the builder and constructs a [`AssociateTrialComponentInput`](crate::operation::associate_trial_component::AssociateTrialComponentInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::associate_trial_component::AssociateTrialComponentInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::associate_trial_component::AssociateTrialComponentInput {
                trial_component_name: self.trial_component_name,
                trial_name: self.trial_name,
            },
        )
    }
}
