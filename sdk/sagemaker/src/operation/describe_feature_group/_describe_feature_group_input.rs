// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DescribeFeatureGroupInput {
    /// <p>The name of the <code>FeatureGroup</code> you want described. </p>
    #[doc(hidden)]
    pub feature_group_name: std::option::Option<std::string::String>,
    /// <p>A token to resume pagination of the list of <code>Features</code> (<code>FeatureDefinitions</code>). 2,500 <code>Features</code> are returned by default.</p>
    #[doc(hidden)]
    pub next_token: std::option::Option<std::string::String>,
}
impl DescribeFeatureGroupInput {
    /// <p>The name of the <code>FeatureGroup</code> you want described. </p>
    pub fn feature_group_name(&self) -> std::option::Option<&str> {
        self.feature_group_name.as_deref()
    }
    /// <p>A token to resume pagination of the list of <code>Features</code> (<code>FeatureDefinitions</code>). 2,500 <code>Features</code> are returned by default.</p>
    pub fn next_token(&self) -> std::option::Option<&str> {
        self.next_token.as_deref()
    }
}
impl DescribeFeatureGroupInput {
    /// Creates a new builder-style object to manufacture [`DescribeFeatureGroupInput`](crate::operation::describe_feature_group::DescribeFeatureGroupInput).
    pub fn builder(
    ) -> crate::operation::describe_feature_group::builders::DescribeFeatureGroupInputBuilder {
        crate::operation::describe_feature_group::builders::DescribeFeatureGroupInputBuilder::default()
    }
}

/// A builder for [`DescribeFeatureGroupInput`](crate::operation::describe_feature_group::DescribeFeatureGroupInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DescribeFeatureGroupInputBuilder {
    pub(crate) feature_group_name: std::option::Option<std::string::String>,
    pub(crate) next_token: std::option::Option<std::string::String>,
}
impl DescribeFeatureGroupInputBuilder {
    /// <p>The name of the <code>FeatureGroup</code> you want described. </p>
    pub fn feature_group_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.feature_group_name = Some(input.into());
        self
    }
    /// <p>The name of the <code>FeatureGroup</code> you want described. </p>
    pub fn set_feature_group_name(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.feature_group_name = input;
        self
    }
    /// <p>A token to resume pagination of the list of <code>Features</code> (<code>FeatureDefinitions</code>). 2,500 <code>Features</code> are returned by default.</p>
    pub fn next_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.next_token = Some(input.into());
        self
    }
    /// <p>A token to resume pagination of the list of <code>Features</code> (<code>FeatureDefinitions</code>). 2,500 <code>Features</code> are returned by default.</p>
    pub fn set_next_token(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// Consumes the builder and constructs a [`DescribeFeatureGroupInput`](crate::operation::describe_feature_group::DescribeFeatureGroupInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::describe_feature_group::DescribeFeatureGroupInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::describe_feature_group::DescribeFeatureGroupInput {
                feature_group_name: self.feature_group_name,
                next_token: self.next_token,
            },
        )
    }
}
