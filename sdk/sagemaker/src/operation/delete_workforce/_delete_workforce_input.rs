// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DeleteWorkforceInput {
    /// <p>The name of the workforce.</p>
    pub workforce_name: ::std::option::Option<::std::string::String>,
}
impl DeleteWorkforceInput {
    /// <p>The name of the workforce.</p>
    pub fn workforce_name(&self) -> ::std::option::Option<&str> {
        self.workforce_name.as_deref()
    }
}
impl DeleteWorkforceInput {
    /// Creates a new builder-style object to manufacture [`DeleteWorkforceInput`](crate::operation::delete_workforce::DeleteWorkforceInput).
    pub fn builder() -> crate::operation::delete_workforce::builders::DeleteWorkforceInputBuilder {
        crate::operation::delete_workforce::builders::DeleteWorkforceInputBuilder::default()
    }
}

/// A builder for [`DeleteWorkforceInput`](crate::operation::delete_workforce::DeleteWorkforceInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DeleteWorkforceInputBuilder {
    pub(crate) workforce_name: ::std::option::Option<::std::string::String>,
}
impl DeleteWorkforceInputBuilder {
    /// <p>The name of the workforce.</p>
    /// This field is required.
    pub fn workforce_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.workforce_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the workforce.</p>
    pub fn set_workforce_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.workforce_name = input;
        self
    }
    /// <p>The name of the workforce.</p>
    pub fn get_workforce_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.workforce_name
    }
    /// Consumes the builder and constructs a [`DeleteWorkforceInput`](crate::operation::delete_workforce::DeleteWorkforceInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::delete_workforce::DeleteWorkforceInput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::operation::delete_workforce::DeleteWorkforceInput {
            workforce_name: self.workforce_name,
        })
    }
}
