// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct UpdateEndpointInput {
    /// <p>The name of the endpoint whose configuration you want to update.</p>
    #[doc(hidden)]
    pub endpoint_name: std::option::Option<std::string::String>,
    /// <p>The name of the new endpoint configuration.</p>
    #[doc(hidden)]
    pub endpoint_config_name: std::option::Option<std::string::String>,
    /// <p>When updating endpoint resources, enables or disables the retention of <a href="https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_VariantProperty.html">variant properties</a>, such as the instance count or the variant weight. To retain the variant properties of an endpoint when updating it, set <code>RetainAllVariantProperties</code> to <code>true</code>. To use the variant properties specified in a new <code>EndpointConfig</code> call when updating an endpoint, set <code>RetainAllVariantProperties</code> to <code>false</code>. The default is <code>false</code>.</p>
    #[doc(hidden)]
    pub retain_all_variant_properties: bool,
    /// <p>When you are updating endpoint resources with <code>UpdateEndpointInput$RetainAllVariantProperties</code>, whose value is set to <code>true</code>, <code>ExcludeRetainedVariantProperties</code> specifies the list of type <code>VariantProperty</code> to override with the values provided by <code>EndpointConfig</code>. If you don't specify a value for <code>ExcludeRetainedVariantProperties</code>, no variant properties are overridden. </p>
    #[doc(hidden)]
    pub exclude_retained_variant_properties:
        std::option::Option<std::vec::Vec<crate::types::VariantProperty>>,
    /// <p>The deployment configuration for an endpoint, which contains the desired deployment strategy and rollback configurations.</p>
    #[doc(hidden)]
    pub deployment_config: std::option::Option<crate::types::DeploymentConfig>,
    /// <p>Specifies whether to reuse the last deployment configuration. The default value is false (the configuration is not reused).</p>
    #[doc(hidden)]
    pub retain_deployment_config: bool,
}
impl UpdateEndpointInput {
    /// <p>The name of the endpoint whose configuration you want to update.</p>
    pub fn endpoint_name(&self) -> std::option::Option<&str> {
        self.endpoint_name.as_deref()
    }
    /// <p>The name of the new endpoint configuration.</p>
    pub fn endpoint_config_name(&self) -> std::option::Option<&str> {
        self.endpoint_config_name.as_deref()
    }
    /// <p>When updating endpoint resources, enables or disables the retention of <a href="https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_VariantProperty.html">variant properties</a>, such as the instance count or the variant weight. To retain the variant properties of an endpoint when updating it, set <code>RetainAllVariantProperties</code> to <code>true</code>. To use the variant properties specified in a new <code>EndpointConfig</code> call when updating an endpoint, set <code>RetainAllVariantProperties</code> to <code>false</code>. The default is <code>false</code>.</p>
    pub fn retain_all_variant_properties(&self) -> bool {
        self.retain_all_variant_properties
    }
    /// <p>When you are updating endpoint resources with <code>UpdateEndpointInput$RetainAllVariantProperties</code>, whose value is set to <code>true</code>, <code>ExcludeRetainedVariantProperties</code> specifies the list of type <code>VariantProperty</code> to override with the values provided by <code>EndpointConfig</code>. If you don't specify a value for <code>ExcludeRetainedVariantProperties</code>, no variant properties are overridden. </p>
    pub fn exclude_retained_variant_properties(
        &self,
    ) -> std::option::Option<&[crate::types::VariantProperty]> {
        self.exclude_retained_variant_properties.as_deref()
    }
    /// <p>The deployment configuration for an endpoint, which contains the desired deployment strategy and rollback configurations.</p>
    pub fn deployment_config(&self) -> std::option::Option<&crate::types::DeploymentConfig> {
        self.deployment_config.as_ref()
    }
    /// <p>Specifies whether to reuse the last deployment configuration. The default value is false (the configuration is not reused).</p>
    pub fn retain_deployment_config(&self) -> bool {
        self.retain_deployment_config
    }
}
impl UpdateEndpointInput {
    /// Creates a new builder-style object to manufacture [`UpdateEndpointInput`](crate::operation::update_endpoint::UpdateEndpointInput).
    pub fn builder() -> crate::operation::update_endpoint::builders::UpdateEndpointInputBuilder {
        crate::operation::update_endpoint::builders::UpdateEndpointInputBuilder::default()
    }
}

/// A builder for [`UpdateEndpointInput`](crate::operation::update_endpoint::UpdateEndpointInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct UpdateEndpointInputBuilder {
    pub(crate) endpoint_name: std::option::Option<std::string::String>,
    pub(crate) endpoint_config_name: std::option::Option<std::string::String>,
    pub(crate) retain_all_variant_properties: std::option::Option<bool>,
    pub(crate) exclude_retained_variant_properties:
        std::option::Option<std::vec::Vec<crate::types::VariantProperty>>,
    pub(crate) deployment_config: std::option::Option<crate::types::DeploymentConfig>,
    pub(crate) retain_deployment_config: std::option::Option<bool>,
}
impl UpdateEndpointInputBuilder {
    /// <p>The name of the endpoint whose configuration you want to update.</p>
    pub fn endpoint_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.endpoint_name = Some(input.into());
        self
    }
    /// <p>The name of the endpoint whose configuration you want to update.</p>
    pub fn set_endpoint_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.endpoint_name = input;
        self
    }
    /// <p>The name of the new endpoint configuration.</p>
    pub fn endpoint_config_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.endpoint_config_name = Some(input.into());
        self
    }
    /// <p>The name of the new endpoint configuration.</p>
    pub fn set_endpoint_config_name(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.endpoint_config_name = input;
        self
    }
    /// <p>When updating endpoint resources, enables or disables the retention of <a href="https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_VariantProperty.html">variant properties</a>, such as the instance count or the variant weight. To retain the variant properties of an endpoint when updating it, set <code>RetainAllVariantProperties</code> to <code>true</code>. To use the variant properties specified in a new <code>EndpointConfig</code> call when updating an endpoint, set <code>RetainAllVariantProperties</code> to <code>false</code>. The default is <code>false</code>.</p>
    pub fn retain_all_variant_properties(mut self, input: bool) -> Self {
        self.retain_all_variant_properties = Some(input);
        self
    }
    /// <p>When updating endpoint resources, enables or disables the retention of <a href="https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_VariantProperty.html">variant properties</a>, such as the instance count or the variant weight. To retain the variant properties of an endpoint when updating it, set <code>RetainAllVariantProperties</code> to <code>true</code>. To use the variant properties specified in a new <code>EndpointConfig</code> call when updating an endpoint, set <code>RetainAllVariantProperties</code> to <code>false</code>. The default is <code>false</code>.</p>
    pub fn set_retain_all_variant_properties(mut self, input: std::option::Option<bool>) -> Self {
        self.retain_all_variant_properties = input;
        self
    }
    /// Appends an item to `exclude_retained_variant_properties`.
    ///
    /// To override the contents of this collection use [`set_exclude_retained_variant_properties`](Self::set_exclude_retained_variant_properties).
    ///
    /// <p>When you are updating endpoint resources with <code>UpdateEndpointInput$RetainAllVariantProperties</code>, whose value is set to <code>true</code>, <code>ExcludeRetainedVariantProperties</code> specifies the list of type <code>VariantProperty</code> to override with the values provided by <code>EndpointConfig</code>. If you don't specify a value for <code>ExcludeRetainedVariantProperties</code>, no variant properties are overridden. </p>
    pub fn exclude_retained_variant_properties(
        mut self,
        input: crate::types::VariantProperty,
    ) -> Self {
        let mut v = self.exclude_retained_variant_properties.unwrap_or_default();
        v.push(input);
        self.exclude_retained_variant_properties = Some(v);
        self
    }
    /// <p>When you are updating endpoint resources with <code>UpdateEndpointInput$RetainAllVariantProperties</code>, whose value is set to <code>true</code>, <code>ExcludeRetainedVariantProperties</code> specifies the list of type <code>VariantProperty</code> to override with the values provided by <code>EndpointConfig</code>. If you don't specify a value for <code>ExcludeRetainedVariantProperties</code>, no variant properties are overridden. </p>
    pub fn set_exclude_retained_variant_properties(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::VariantProperty>>,
    ) -> Self {
        self.exclude_retained_variant_properties = input;
        self
    }
    /// <p>The deployment configuration for an endpoint, which contains the desired deployment strategy and rollback configurations.</p>
    pub fn deployment_config(mut self, input: crate::types::DeploymentConfig) -> Self {
        self.deployment_config = Some(input);
        self
    }
    /// <p>The deployment configuration for an endpoint, which contains the desired deployment strategy and rollback configurations.</p>
    pub fn set_deployment_config(
        mut self,
        input: std::option::Option<crate::types::DeploymentConfig>,
    ) -> Self {
        self.deployment_config = input;
        self
    }
    /// <p>Specifies whether to reuse the last deployment configuration. The default value is false (the configuration is not reused).</p>
    pub fn retain_deployment_config(mut self, input: bool) -> Self {
        self.retain_deployment_config = Some(input);
        self
    }
    /// <p>Specifies whether to reuse the last deployment configuration. The default value is false (the configuration is not reused).</p>
    pub fn set_retain_deployment_config(mut self, input: std::option::Option<bool>) -> Self {
        self.retain_deployment_config = input;
        self
    }
    /// Consumes the builder and constructs a [`UpdateEndpointInput`](crate::operation::update_endpoint::UpdateEndpointInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::update_endpoint::UpdateEndpointInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(crate::operation::update_endpoint::UpdateEndpointInput {
            endpoint_name: self.endpoint_name,
            endpoint_config_name: self.endpoint_config_name,
            retain_all_variant_properties: self.retain_all_variant_properties.unwrap_or_default(),
            exclude_retained_variant_properties: self.exclude_retained_variant_properties,
            deployment_config: self.deployment_config,
            retain_deployment_config: self.retain_deployment_config.unwrap_or_default(),
        })
    }
}
