// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeMonitoringSchedule`](crate::operation::describe_monitoring_schedule::builders::DescribeMonitoringScheduleFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`monitoring_schedule_name(impl Into<String>)`](crate::operation::describe_monitoring_schedule::builders::DescribeMonitoringScheduleFluentBuilder::monitoring_schedule_name) / [`set_monitoring_schedule_name(Option<String>)`](crate::operation::describe_monitoring_schedule::builders::DescribeMonitoringScheduleFluentBuilder::set_monitoring_schedule_name):<br>required: **true**<br><p>Name of a previously created monitoring schedule.</p><br>
    /// - On success, responds with [`DescribeMonitoringScheduleOutput`](crate::operation::describe_monitoring_schedule::DescribeMonitoringScheduleOutput) with field(s):
    ///   - [`monitoring_schedule_arn(Option<String>)`](crate::operation::describe_monitoring_schedule::DescribeMonitoringScheduleOutput::monitoring_schedule_arn): <p>The Amazon Resource Name (ARN) of the monitoring schedule.</p>
    ///   - [`monitoring_schedule_name(Option<String>)`](crate::operation::describe_monitoring_schedule::DescribeMonitoringScheduleOutput::monitoring_schedule_name): <p>Name of the monitoring schedule.</p>
    ///   - [`monitoring_schedule_status(Option<ScheduleStatus>)`](crate::operation::describe_monitoring_schedule::DescribeMonitoringScheduleOutput::monitoring_schedule_status): <p>The status of an monitoring job.</p>
    ///   - [`monitoring_type(Option<MonitoringType>)`](crate::operation::describe_monitoring_schedule::DescribeMonitoringScheduleOutput::monitoring_type): <p>The type of the monitoring job that this schedule runs. This is one of the following values.</p>  <ul>   <li> <p> <code>DATA_QUALITY</code> - The schedule is for a data quality monitoring job.</p> </li>   <li> <p> <code>MODEL_QUALITY</code> - The schedule is for a model quality monitoring job.</p> </li>   <li> <p> <code>MODEL_BIAS</code> - The schedule is for a bias monitoring job.</p> </li>   <li> <p> <code>MODEL_EXPLAINABILITY</code> - The schedule is for an explainability monitoring job.</p> </li>  </ul>
    ///   - [`failure_reason(Option<String>)`](crate::operation::describe_monitoring_schedule::DescribeMonitoringScheduleOutput::failure_reason): <p>A string, up to one KB in size, that contains the reason a monitoring job failed, if it failed.</p>
    ///   - [`creation_time(Option<DateTime>)`](crate::operation::describe_monitoring_schedule::DescribeMonitoringScheduleOutput::creation_time): <p>The time at which the monitoring job was created.</p>
    ///   - [`last_modified_time(Option<DateTime>)`](crate::operation::describe_monitoring_schedule::DescribeMonitoringScheduleOutput::last_modified_time): <p>The time at which the monitoring job was last modified.</p>
    ///   - [`monitoring_schedule_config(Option<MonitoringScheduleConfig>)`](crate::operation::describe_monitoring_schedule::DescribeMonitoringScheduleOutput::monitoring_schedule_config): <p>The configuration object that specifies the monitoring schedule and defines the monitoring job.</p>
    ///   - [`endpoint_name(Option<String>)`](crate::operation::describe_monitoring_schedule::DescribeMonitoringScheduleOutput::endpoint_name): <p> The name of the endpoint for the monitoring job.</p>
    ///   - [`last_monitoring_execution_summary(Option<MonitoringExecutionSummary>)`](crate::operation::describe_monitoring_schedule::DescribeMonitoringScheduleOutput::last_monitoring_execution_summary): <p>Describes metadata on the last execution to run, if there was one.</p>
    /// - On failure, responds with [`SdkError<DescribeMonitoringScheduleError>`](crate::operation::describe_monitoring_schedule::DescribeMonitoringScheduleError)
    pub fn describe_monitoring_schedule(&self) -> crate::operation::describe_monitoring_schedule::builders::DescribeMonitoringScheduleFluentBuilder {
        crate::operation::describe_monitoring_schedule::builders::DescribeMonitoringScheduleFluentBuilder::new(self.handle.clone())
    }
}
