// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListSpaces`](crate::operation::list_spaces::builders::ListSpacesFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::list_spaces::builders::ListSpacesFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`next_token(impl Into<String>)`](crate::operation::list_spaces::builders::ListSpacesFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::list_spaces::builders::ListSpacesFluentBuilder::set_next_token): <p>If the previous response was truncated, you will receive this token. Use it in your next request to receive the next set of results.</p>
    ///   - [`max_results(i32)`](crate::operation::list_spaces::builders::ListSpacesFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::list_spaces::builders::ListSpacesFluentBuilder::set_max_results): <p>Returns a list up to a specified limit.</p>
    ///   - [`sort_order(SortOrder)`](crate::operation::list_spaces::builders::ListSpacesFluentBuilder::sort_order) / [`set_sort_order(Option<SortOrder>)`](crate::operation::list_spaces::builders::ListSpacesFluentBuilder::set_sort_order): <p>The sort order for the results. The default is <code>Ascending</code>.</p>
    ///   - [`sort_by(SpaceSortKey)`](crate::operation::list_spaces::builders::ListSpacesFluentBuilder::sort_by) / [`set_sort_by(Option<SpaceSortKey>)`](crate::operation::list_spaces::builders::ListSpacesFluentBuilder::set_sort_by): <p>The parameter by which to sort the results. The default is <code>CreationTime</code>.</p>
    ///   - [`domain_id_equals(impl Into<String>)`](crate::operation::list_spaces::builders::ListSpacesFluentBuilder::domain_id_equals) / [`set_domain_id_equals(Option<String>)`](crate::operation::list_spaces::builders::ListSpacesFluentBuilder::set_domain_id_equals): <p>A parameter to search for the Domain ID.</p>
    ///   - [`space_name_contains(impl Into<String>)`](crate::operation::list_spaces::builders::ListSpacesFluentBuilder::space_name_contains) / [`set_space_name_contains(Option<String>)`](crate::operation::list_spaces::builders::ListSpacesFluentBuilder::set_space_name_contains): <p>A parameter by which to filter the results.</p>
    /// - On success, responds with [`ListSpacesOutput`](crate::operation::list_spaces::ListSpacesOutput) with field(s):
    ///   - [`spaces(Option<Vec<SpaceDetails>>)`](crate::operation::list_spaces::ListSpacesOutput::spaces): <p>The list of spaces.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::list_spaces::ListSpacesOutput::next_token): <p>If the previous response was truncated, you will receive this token. Use it in your next request to receive the next set of results.</p>
    /// - On failure, responds with [`SdkError<ListSpacesError>`](crate::operation::list_spaces::ListSpacesError)
    pub fn list_spaces(&self) -> crate::operation::list_spaces::builders::ListSpacesFluentBuilder {
        crate::operation::list_spaces::builders::ListSpacesFluentBuilder::new(self.handle.clone())
    }
}
