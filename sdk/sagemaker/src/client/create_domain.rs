// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateDomain`](crate::operation::create_domain::builders::CreateDomainFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`domain_name(impl Into<String>)`](crate::operation::create_domain::builders::CreateDomainFluentBuilder::domain_name) / [`set_domain_name(Option<String>)`](crate::operation::create_domain::builders::CreateDomainFluentBuilder::set_domain_name):<br>required: **true**<br><p>A name for the domain.</p><br>
    ///   - [`auth_mode(AuthMode)`](crate::operation::create_domain::builders::CreateDomainFluentBuilder::auth_mode) / [`set_auth_mode(Option<AuthMode>)`](crate::operation::create_domain::builders::CreateDomainFluentBuilder::set_auth_mode):<br>required: **true**<br><p>The mode of authentication that members use to access the domain.</p><br>
    ///   - [`default_user_settings(UserSettings)`](crate::operation::create_domain::builders::CreateDomainFluentBuilder::default_user_settings) / [`set_default_user_settings(Option<UserSettings>)`](crate::operation::create_domain::builders::CreateDomainFluentBuilder::set_default_user_settings):<br>required: **true**<br><p>The default settings to use to create a user profile when <code>UserSettings</code> isn't specified in the call to the <code>CreateUserProfile</code> API.</p>  <p> <code>SecurityGroups</code> is aggregated when specified in both calls. For all other settings in <code>UserSettings</code>, the values specified in <code>CreateUserProfile</code> take precedence over those specified in <code>CreateDomain</code>.</p><br>
    ///   - [`subnet_ids(impl Into<String>)`](crate::operation::create_domain::builders::CreateDomainFluentBuilder::subnet_ids) / [`set_subnet_ids(Option<Vec::<String>>)`](crate::operation::create_domain::builders::CreateDomainFluentBuilder::set_subnet_ids):<br>required: **true**<br><p>The VPC subnets that Studio uses for communication.</p><br>
    ///   - [`vpc_id(impl Into<String>)`](crate::operation::create_domain::builders::CreateDomainFluentBuilder::vpc_id) / [`set_vpc_id(Option<String>)`](crate::operation::create_domain::builders::CreateDomainFluentBuilder::set_vpc_id):<br>required: **true**<br><p>The ID of the Amazon Virtual Private Cloud (VPC) that Studio uses for communication.</p><br>
    ///   - [`tags(Tag)`](crate::operation::create_domain::builders::CreateDomainFluentBuilder::tags) / [`set_tags(Option<Vec::<Tag>>)`](crate::operation::create_domain::builders::CreateDomainFluentBuilder::set_tags):<br>required: **false**<br><p>Tags to associated with the Domain. Each tag consists of a key and an optional value. Tag keys must be unique per resource. Tags are searchable using the <code>Search</code> API.</p>  <p>Tags that you specify for the Domain are also added to all Apps that the Domain launches.</p><br>
    ///   - [`app_network_access_type(AppNetworkAccessType)`](crate::operation::create_domain::builders::CreateDomainFluentBuilder::app_network_access_type) / [`set_app_network_access_type(Option<AppNetworkAccessType>)`](crate::operation::create_domain::builders::CreateDomainFluentBuilder::set_app_network_access_type):<br>required: **false**<br><p>Specifies the VPC used for non-EFS traffic. The default value is <code>PublicInternetOnly</code>.</p>  <ul>   <li> <p> <code>PublicInternetOnly</code> - Non-EFS traffic is through a VPC managed by Amazon SageMaker, which allows direct internet access</p> </li>   <li> <p> <code>VpcOnly</code> - All Studio traffic is through the specified VPC and subnets</p> </li>  </ul><br>
    ///   - [`home_efs_file_system_kms_key_id(impl Into<String>)`](crate::operation::create_domain::builders::CreateDomainFluentBuilder::home_efs_file_system_kms_key_id) / [`set_home_efs_file_system_kms_key_id(Option<String>)`](crate::operation::create_domain::builders::CreateDomainFluentBuilder::set_home_efs_file_system_kms_key_id):<br>required: **false**<br><p>Use <code>KmsKeyId</code>.</p><br>
    ///   - [`kms_key_id(impl Into<String>)`](crate::operation::create_domain::builders::CreateDomainFluentBuilder::kms_key_id) / [`set_kms_key_id(Option<String>)`](crate::operation::create_domain::builders::CreateDomainFluentBuilder::set_kms_key_id):<br>required: **false**<br><p>SageMaker uses Amazon Web Services KMS to encrypt the EFS volume attached to the domain with an Amazon Web Services managed key by default. For more control, specify a customer managed key.</p><br>
    ///   - [`app_security_group_management(AppSecurityGroupManagement)`](crate::operation::create_domain::builders::CreateDomainFluentBuilder::app_security_group_management) / [`set_app_security_group_management(Option<AppSecurityGroupManagement>)`](crate::operation::create_domain::builders::CreateDomainFluentBuilder::set_app_security_group_management):<br>required: **false**<br><p>The entity that creates and manages the required security groups for inter-app communication in <code>VPCOnly</code> mode. Required when <code>CreateDomain.AppNetworkAccessType</code> is <code>VPCOnly</code> and <code>DomainSettings.RStudioServerProDomainSettings.DomainExecutionRoleArn</code> is provided. If setting up the domain for use with RStudio, this value must be set to <code>Service</code>.</p><br>
    ///   - [`domain_settings(DomainSettings)`](crate::operation::create_domain::builders::CreateDomainFluentBuilder::domain_settings) / [`set_domain_settings(Option<DomainSettings>)`](crate::operation::create_domain::builders::CreateDomainFluentBuilder::set_domain_settings):<br>required: **false**<br><p>A collection of <code>Domain</code> settings.</p><br>
    ///   - [`default_space_settings(DefaultSpaceSettings)`](crate::operation::create_domain::builders::CreateDomainFluentBuilder::default_space_settings) / [`set_default_space_settings(Option<DefaultSpaceSettings>)`](crate::operation::create_domain::builders::CreateDomainFluentBuilder::set_default_space_settings):<br>required: **false**<br><p>The default settings used to create a space.</p><br>
    /// - On success, responds with [`CreateDomainOutput`](crate::operation::create_domain::CreateDomainOutput) with field(s):
    ///   - [`domain_arn(Option<String>)`](crate::operation::create_domain::CreateDomainOutput::domain_arn): <p>The Amazon Resource Name (ARN) of the created domain.</p>
    ///   - [`url(Option<String>)`](crate::operation::create_domain::CreateDomainOutput::url): <p>The URL to the created domain.</p>
    /// - On failure, responds with [`SdkError<CreateDomainError>`](crate::operation::create_domain::CreateDomainError)
    pub fn create_domain(&self) -> crate::operation::create_domain::builders::CreateDomainFluentBuilder {
        crate::operation::create_domain::builders::CreateDomainFluentBuilder::new(self.handle.clone())
    }
}
