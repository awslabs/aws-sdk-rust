// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateMonitoringAlert`](crate::client::fluent_builders::UpdateMonitoringAlert) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`monitoring_schedule_name(impl Into<String>)`](crate::client::fluent_builders::UpdateMonitoringAlert::monitoring_schedule_name) / [`set_monitoring_schedule_name(Option<String>)`](crate::client::fluent_builders::UpdateMonitoringAlert::set_monitoring_schedule_name): <p>The name of a monitoring schedule.</p>
    ///   - [`monitoring_alert_name(impl Into<String>)`](crate::client::fluent_builders::UpdateMonitoringAlert::monitoring_alert_name) / [`set_monitoring_alert_name(Option<String>)`](crate::client::fluent_builders::UpdateMonitoringAlert::set_monitoring_alert_name): <p>The name of a monitoring alert.</p>
    ///   - [`datapoints_to_alert(i32)`](crate::client::fluent_builders::UpdateMonitoringAlert::datapoints_to_alert) / [`set_datapoints_to_alert(Option<i32>)`](crate::client::fluent_builders::UpdateMonitoringAlert::set_datapoints_to_alert): <p>Within <code>EvaluationPeriod</code>, how many execution failures will raise an alert.</p>
    ///   - [`evaluation_period(i32)`](crate::client::fluent_builders::UpdateMonitoringAlert::evaluation_period) / [`set_evaluation_period(Option<i32>)`](crate::client::fluent_builders::UpdateMonitoringAlert::set_evaluation_period): <p>The number of most recent monitoring executions to consider when evaluating alert status.</p>
    /// - On success, responds with [`UpdateMonitoringAlertOutput`](crate::output::UpdateMonitoringAlertOutput) with field(s):
    ///   - [`monitoring_schedule_arn(Option<String>)`](crate::output::UpdateMonitoringAlertOutput::monitoring_schedule_arn): <p>The Amazon Resource Name (ARN) of the monitoring schedule.</p>
    ///   - [`monitoring_alert_name(Option<String>)`](crate::output::UpdateMonitoringAlertOutput::monitoring_alert_name): <p>The name of a monitoring alert.</p>
    /// - On failure, responds with [`SdkError<UpdateMonitoringAlertError>`](crate::error::UpdateMonitoringAlertError)
    pub fn update_monitoring_alert(&self) -> crate::client::fluent_builders::UpdateMonitoringAlert {
        crate::client::fluent_builders::UpdateMonitoringAlert::new(self.handle.clone())
    }
}
