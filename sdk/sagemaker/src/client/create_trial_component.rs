// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateTrialComponent`](crate::client::fluent_builders::CreateTrialComponent) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`trial_component_name(impl Into<String>)`](crate::client::fluent_builders::CreateTrialComponent::trial_component_name) / [`set_trial_component_name(Option<String>)`](crate::client::fluent_builders::CreateTrialComponent::set_trial_component_name): <p>The name of the component. The name must be unique in your Amazon Web Services account and is not case-sensitive.</p>
    ///   - [`display_name(impl Into<String>)`](crate::client::fluent_builders::CreateTrialComponent::display_name) / [`set_display_name(Option<String>)`](crate::client::fluent_builders::CreateTrialComponent::set_display_name): <p>The name of the component as displayed. The name doesn't need to be unique. If <code>DisplayName</code> isn't specified, <code>TrialComponentName</code> is displayed.</p>
    ///   - [`status(TrialComponentStatus)`](crate::client::fluent_builders::CreateTrialComponent::status) / [`set_status(Option<TrialComponentStatus>)`](crate::client::fluent_builders::CreateTrialComponent::set_status): <p>The status of the component. States include:</p>  <ul>   <li> <p>InProgress</p> </li>   <li> <p>Completed</p> </li>   <li> <p>Failed</p> </li>  </ul>
    ///   - [`start_time(DateTime)`](crate::client::fluent_builders::CreateTrialComponent::start_time) / [`set_start_time(Option<DateTime>)`](crate::client::fluent_builders::CreateTrialComponent::set_start_time): <p>When the component started.</p>
    ///   - [`end_time(DateTime)`](crate::client::fluent_builders::CreateTrialComponent::end_time) / [`set_end_time(Option<DateTime>)`](crate::client::fluent_builders::CreateTrialComponent::set_end_time): <p>When the component ended.</p>
    ///   - [`parameters(HashMap<String, TrialComponentParameterValue>)`](crate::client::fluent_builders::CreateTrialComponent::parameters) / [`set_parameters(Option<HashMap<String, TrialComponentParameterValue>>)`](crate::client::fluent_builders::CreateTrialComponent::set_parameters): <p>The hyperparameters for the component.</p>
    ///   - [`input_artifacts(HashMap<String, TrialComponentArtifact>)`](crate::client::fluent_builders::CreateTrialComponent::input_artifacts) / [`set_input_artifacts(Option<HashMap<String, TrialComponentArtifact>>)`](crate::client::fluent_builders::CreateTrialComponent::set_input_artifacts): <p>The input artifacts for the component. Examples of input artifacts are datasets, algorithms, hyperparameters, source code, and instance types.</p>
    ///   - [`output_artifacts(HashMap<String, TrialComponentArtifact>)`](crate::client::fluent_builders::CreateTrialComponent::output_artifacts) / [`set_output_artifacts(Option<HashMap<String, TrialComponentArtifact>>)`](crate::client::fluent_builders::CreateTrialComponent::set_output_artifacts): <p>The output artifacts for the component. Examples of output artifacts are metrics, snapshots, logs, and images.</p>
    ///   - [`metadata_properties(MetadataProperties)`](crate::client::fluent_builders::CreateTrialComponent::metadata_properties) / [`set_metadata_properties(Option<MetadataProperties>)`](crate::client::fluent_builders::CreateTrialComponent::set_metadata_properties): <p>Metadata properties of the tracking entity, trial, or trial component.</p>
    ///   - [`tags(Vec<Tag>)`](crate::client::fluent_builders::CreateTrialComponent::tags) / [`set_tags(Option<Vec<Tag>>)`](crate::client::fluent_builders::CreateTrialComponent::set_tags): <p>A list of tags to associate with the component. You can use <code>Search</code> API to search on the tags.</p>
    /// - On success, responds with [`CreateTrialComponentOutput`](crate::output::CreateTrialComponentOutput) with field(s):
    ///   - [`trial_component_arn(Option<String>)`](crate::output::CreateTrialComponentOutput::trial_component_arn): <p>The Amazon Resource Name (ARN) of the trial component.</p>
    /// - On failure, responds with [`SdkError<CreateTrialComponentError>`](crate::error::CreateTrialComponentError)
    pub fn create_trial_component(&self) -> crate::client::fluent_builders::CreateTrialComponent {
        crate::client::fluent_builders::CreateTrialComponent::new(self.handle.clone())
    }
}
