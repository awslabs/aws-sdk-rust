// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateModelBiasJobDefinition`](crate::operation::create_model_bias_job_definition::builders::CreateModelBiasJobDefinitionFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`job_definition_name(impl Into<String>)`](crate::operation::create_model_bias_job_definition::builders::CreateModelBiasJobDefinitionFluentBuilder::job_definition_name) / [`set_job_definition_name(Option<String>)`](crate::operation::create_model_bias_job_definition::builders::CreateModelBiasJobDefinitionFluentBuilder::set_job_definition_name):<br>required: **true**<br><p>The name of the bias job definition. The name must be unique within an Amazon Web Services Region in the Amazon Web Services account.</p><br>
    ///   - [`model_bias_baseline_config(ModelBiasBaselineConfig)`](crate::operation::create_model_bias_job_definition::builders::CreateModelBiasJobDefinitionFluentBuilder::model_bias_baseline_config) / [`set_model_bias_baseline_config(Option<ModelBiasBaselineConfig>)`](crate::operation::create_model_bias_job_definition::builders::CreateModelBiasJobDefinitionFluentBuilder::set_model_bias_baseline_config):<br>required: **false**<br><p>The baseline configuration for a model bias job.</p><br>
    ///   - [`model_bias_app_specification(ModelBiasAppSpecification)`](crate::operation::create_model_bias_job_definition::builders::CreateModelBiasJobDefinitionFluentBuilder::model_bias_app_specification) / [`set_model_bias_app_specification(Option<ModelBiasAppSpecification>)`](crate::operation::create_model_bias_job_definition::builders::CreateModelBiasJobDefinitionFluentBuilder::set_model_bias_app_specification):<br>required: **true**<br><p>Configures the model bias job to run a specified Docker container image.</p><br>
    ///   - [`model_bias_job_input(ModelBiasJobInput)`](crate::operation::create_model_bias_job_definition::builders::CreateModelBiasJobDefinitionFluentBuilder::model_bias_job_input) / [`set_model_bias_job_input(Option<ModelBiasJobInput>)`](crate::operation::create_model_bias_job_definition::builders::CreateModelBiasJobDefinitionFluentBuilder::set_model_bias_job_input):<br>required: **true**<br><p>Inputs for the model bias job.</p><br>
    ///   - [`model_bias_job_output_config(MonitoringOutputConfig)`](crate::operation::create_model_bias_job_definition::builders::CreateModelBiasJobDefinitionFluentBuilder::model_bias_job_output_config) / [`set_model_bias_job_output_config(Option<MonitoringOutputConfig>)`](crate::operation::create_model_bias_job_definition::builders::CreateModelBiasJobDefinitionFluentBuilder::set_model_bias_job_output_config):<br>required: **true**<br><p>The output configuration for monitoring jobs.</p><br>
    ///   - [`job_resources(MonitoringResources)`](crate::operation::create_model_bias_job_definition::builders::CreateModelBiasJobDefinitionFluentBuilder::job_resources) / [`set_job_resources(Option<MonitoringResources>)`](crate::operation::create_model_bias_job_definition::builders::CreateModelBiasJobDefinitionFluentBuilder::set_job_resources):<br>required: **true**<br><p>Identifies the resources to deploy for a monitoring job.</p><br>
    ///   - [`network_config(MonitoringNetworkConfig)`](crate::operation::create_model_bias_job_definition::builders::CreateModelBiasJobDefinitionFluentBuilder::network_config) / [`set_network_config(Option<MonitoringNetworkConfig>)`](crate::operation::create_model_bias_job_definition::builders::CreateModelBiasJobDefinitionFluentBuilder::set_network_config):<br>required: **false**<br><p>Networking options for a model bias job.</p><br>
    ///   - [`role_arn(impl Into<String>)`](crate::operation::create_model_bias_job_definition::builders::CreateModelBiasJobDefinitionFluentBuilder::role_arn) / [`set_role_arn(Option<String>)`](crate::operation::create_model_bias_job_definition::builders::CreateModelBiasJobDefinitionFluentBuilder::set_role_arn):<br>required: **true**<br><p>The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to perform tasks on your behalf.</p><br>
    ///   - [`stopping_condition(MonitoringStoppingCondition)`](crate::operation::create_model_bias_job_definition::builders::CreateModelBiasJobDefinitionFluentBuilder::stopping_condition) / [`set_stopping_condition(Option<MonitoringStoppingCondition>)`](crate::operation::create_model_bias_job_definition::builders::CreateModelBiasJobDefinitionFluentBuilder::set_stopping_condition):<br>required: **false**<br><p>A time limit for how long the monitoring job is allowed to run before stopping.</p><br>
    ///   - [`tags(Tag)`](crate::operation::create_model_bias_job_definition::builders::CreateModelBiasJobDefinitionFluentBuilder::tags) / [`set_tags(Option<Vec::<Tag>>)`](crate::operation::create_model_bias_job_definition::builders::CreateModelBiasJobDefinitionFluentBuilder::set_tags):<br>required: **false**<br><p>(Optional) An array of key-value pairs. For more information, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html#allocation-whatURL"> Using Cost Allocation Tags</a> in the <i>Amazon Web Services Billing and Cost Management User Guide</i>.</p><br>
    /// - On success, responds with [`CreateModelBiasJobDefinitionOutput`](crate::operation::create_model_bias_job_definition::CreateModelBiasJobDefinitionOutput) with field(s):
    ///   - [`job_definition_arn(Option<String>)`](crate::operation::create_model_bias_job_definition::CreateModelBiasJobDefinitionOutput::job_definition_arn): <p>The Amazon Resource Name (ARN) of the model bias job.</p>
    /// - On failure, responds with [`SdkError<CreateModelBiasJobDefinitionError>`](crate::operation::create_model_bias_job_definition::CreateModelBiasJobDefinitionError)
    pub fn create_model_bias_job_definition(
        &self,
    ) -> crate::operation::create_model_bias_job_definition::builders::CreateModelBiasJobDefinitionFluentBuilder {
        crate::operation::create_model_bias_job_definition::builders::CreateModelBiasJobDefinitionFluentBuilder::new(self.handle.clone())
    }
}
