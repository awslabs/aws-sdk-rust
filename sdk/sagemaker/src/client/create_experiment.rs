// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateExperiment`](crate::client::fluent_builders::CreateExperiment) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`experiment_name(impl Into<String>)`](crate::client::fluent_builders::CreateExperiment::experiment_name) / [`set_experiment_name(Option<String>)`](crate::client::fluent_builders::CreateExperiment::set_experiment_name): <p>The name of the experiment. The name must be unique in your Amazon Web Services account and is not case-sensitive.</p>
    ///   - [`display_name(impl Into<String>)`](crate::client::fluent_builders::CreateExperiment::display_name) / [`set_display_name(Option<String>)`](crate::client::fluent_builders::CreateExperiment::set_display_name): <p>The name of the experiment as displayed. The name doesn't need to be unique. If you don't specify <code>DisplayName</code>, the value in <code>ExperimentName</code> is displayed.</p>
    ///   - [`description(impl Into<String>)`](crate::client::fluent_builders::CreateExperiment::description) / [`set_description(Option<String>)`](crate::client::fluent_builders::CreateExperiment::set_description): <p>The description of the experiment.</p>
    ///   - [`tags(Vec<Tag>)`](crate::client::fluent_builders::CreateExperiment::tags) / [`set_tags(Option<Vec<Tag>>)`](crate::client::fluent_builders::CreateExperiment::set_tags): <p>A list of tags to associate with the experiment. You can use <code>Search</code> API to search on the tags.</p>
    /// - On success, responds with [`CreateExperimentOutput`](crate::output::CreateExperimentOutput) with field(s):
    ///   - [`experiment_arn(Option<String>)`](crate::output::CreateExperimentOutput::experiment_arn): <p>The Amazon Resource Name (ARN) of the experiment.</p>
    /// - On failure, responds with [`SdkError<CreateExperimentError>`](crate::error::CreateExperimentError)
    pub fn create_experiment(&self) -> crate::client::fluent_builders::CreateExperiment {
        crate::client::fluent_builders::CreateExperiment::new(self.handle.clone())
    }
}
