// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateNotebookInstanceLifecycleConfig`](crate::client::fluent_builders::CreateNotebookInstanceLifecycleConfig) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`notebook_instance_lifecycle_config_name(impl Into<String>)`](crate::client::fluent_builders::CreateNotebookInstanceLifecycleConfig::notebook_instance_lifecycle_config_name) / [`set_notebook_instance_lifecycle_config_name(Option<String>)`](crate::client::fluent_builders::CreateNotebookInstanceLifecycleConfig::set_notebook_instance_lifecycle_config_name): <p>The name of the lifecycle configuration.</p>
    ///   - [`on_create(Vec<NotebookInstanceLifecycleHook>)`](crate::client::fluent_builders::CreateNotebookInstanceLifecycleConfig::on_create) / [`set_on_create(Option<Vec<NotebookInstanceLifecycleHook>>)`](crate::client::fluent_builders::CreateNotebookInstanceLifecycleConfig::set_on_create): <p>A shell script that runs only once, when you create a notebook instance. The shell script must be a base64-encoded string.</p>
    ///   - [`on_start(Vec<NotebookInstanceLifecycleHook>)`](crate::client::fluent_builders::CreateNotebookInstanceLifecycleConfig::on_start) / [`set_on_start(Option<Vec<NotebookInstanceLifecycleHook>>)`](crate::client::fluent_builders::CreateNotebookInstanceLifecycleConfig::set_on_start): <p>A shell script that runs every time you start a notebook instance, including when you create the notebook instance. The shell script must be a base64-encoded string.</p>
    /// - On success, responds with [`CreateNotebookInstanceLifecycleConfigOutput`](crate::output::CreateNotebookInstanceLifecycleConfigOutput) with field(s):
    ///   - [`notebook_instance_lifecycle_config_arn(Option<String>)`](crate::output::CreateNotebookInstanceLifecycleConfigOutput::notebook_instance_lifecycle_config_arn): <p>The Amazon Resource Name (ARN) of the lifecycle configuration.</p>
    /// - On failure, responds with [`SdkError<CreateNotebookInstanceLifecycleConfigError>`](crate::error::CreateNotebookInstanceLifecycleConfigError)
    pub fn create_notebook_instance_lifecycle_config(
        &self,
    ) -> crate::client::fluent_builders::CreateNotebookInstanceLifecycleConfig {
        crate::client::fluent_builders::CreateNotebookInstanceLifecycleConfig::new(
            self.handle.clone(),
        )
    }
}
