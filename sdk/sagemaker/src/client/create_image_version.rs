// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateImageVersion`](crate::operation::create_image_version::builders::CreateImageVersionFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`base_image(impl Into<String>)`](crate::operation::create_image_version::builders::CreateImageVersionFluentBuilder::base_image) / [`set_base_image(Option<String>)`](crate::operation::create_image_version::builders::CreateImageVersionFluentBuilder::set_base_image):<br>required: **true**<br><p>The registry path of the container image to use as the starting point for this version. The path is an Amazon Elastic Container Registry (ECR) URI in the following format:</p>  <p> <code>   <acct-id>    .dkr.ecr.    <region>     .amazonaws.com/     <repo-name[:tag] or [@digest]></repo-name[:tag]>    </region>   </acct-id></code> </p><br>
    ///   - [`client_token(impl Into<String>)`](crate::operation::create_image_version::builders::CreateImageVersionFluentBuilder::client_token) / [`set_client_token(Option<String>)`](crate::operation::create_image_version::builders::CreateImageVersionFluentBuilder::set_client_token):<br>required: **true**<br><p>A unique ID. If not specified, the Amazon Web Services CLI and Amazon Web Services SDKs, such as the SDK for Python (Boto3), add a unique value to the call.</p><br>
    ///   - [`image_name(impl Into<String>)`](crate::operation::create_image_version::builders::CreateImageVersionFluentBuilder::image_name) / [`set_image_name(Option<String>)`](crate::operation::create_image_version::builders::CreateImageVersionFluentBuilder::set_image_name):<br>required: **true**<br><p>The <code>ImageName</code> of the <code>Image</code> to create a version of.</p><br>
    ///   - [`aliases(impl Into<String>)`](crate::operation::create_image_version::builders::CreateImageVersionFluentBuilder::aliases) / [`set_aliases(Option<Vec::<String>>)`](crate::operation::create_image_version::builders::CreateImageVersionFluentBuilder::set_aliases):<br>required: **false**<br><p>A list of aliases created with the image version.</p><br>
    ///   - [`vendor_guidance(VendorGuidance)`](crate::operation::create_image_version::builders::CreateImageVersionFluentBuilder::vendor_guidance) / [`set_vendor_guidance(Option<VendorGuidance>)`](crate::operation::create_image_version::builders::CreateImageVersionFluentBuilder::set_vendor_guidance):<br>required: **false**<br><p>The stability of the image version, specified by the maintainer.</p>  <ul>   <li> <p> <code>NOT_PROVIDED</code>: The maintainers did not provide a status for image version stability.</p> </li>   <li> <p> <code>STABLE</code>: The image version is stable.</p> </li>   <li> <p> <code>TO_BE_ARCHIVED</code>: The image version is set to be archived. Custom image versions that are set to be archived are automatically archived after three months.</p> </li>   <li> <p> <code>ARCHIVED</code>: The image version is archived. Archived image versions are not searchable and are no longer actively supported. </p> </li>  </ul><br>
    ///   - [`job_type(JobType)`](crate::operation::create_image_version::builders::CreateImageVersionFluentBuilder::job_type) / [`set_job_type(Option<JobType>)`](crate::operation::create_image_version::builders::CreateImageVersionFluentBuilder::set_job_type):<br>required: **false**<br><p>Indicates SageMaker job type compatibility.</p>  <ul>   <li> <p> <code>TRAINING</code>: The image version is compatible with SageMaker training jobs.</p> </li>   <li> <p> <code>INFERENCE</code>: The image version is compatible with SageMaker inference jobs.</p> </li>   <li> <p> <code>NOTEBOOK_KERNEL</code>: The image version is compatible with SageMaker notebook kernels.</p> </li>  </ul><br>
    ///   - [`ml_framework(impl Into<String>)`](crate::operation::create_image_version::builders::CreateImageVersionFluentBuilder::ml_framework) / [`set_ml_framework(Option<String>)`](crate::operation::create_image_version::builders::CreateImageVersionFluentBuilder::set_ml_framework):<br>required: **false**<br><p>The machine learning framework vended in the image version.</p><br>
    ///   - [`programming_lang(impl Into<String>)`](crate::operation::create_image_version::builders::CreateImageVersionFluentBuilder::programming_lang) / [`set_programming_lang(Option<String>)`](crate::operation::create_image_version::builders::CreateImageVersionFluentBuilder::set_programming_lang):<br>required: **false**<br><p>The supported programming language and its version.</p><br>
    ///   - [`processor(Processor)`](crate::operation::create_image_version::builders::CreateImageVersionFluentBuilder::processor) / [`set_processor(Option<Processor>)`](crate::operation::create_image_version::builders::CreateImageVersionFluentBuilder::set_processor):<br>required: **false**<br><p>Indicates CPU or GPU compatibility.</p>  <ul>   <li> <p> <code>CPU</code>: The image version is compatible with CPU.</p> </li>   <li> <p> <code>GPU</code>: The image version is compatible with GPU.</p> </li>  </ul><br>
    ///   - [`horovod(bool)`](crate::operation::create_image_version::builders::CreateImageVersionFluentBuilder::horovod) / [`set_horovod(Option<bool>)`](crate::operation::create_image_version::builders::CreateImageVersionFluentBuilder::set_horovod):<br>required: **false**<br><p>Indicates Horovod compatibility.</p><br>
    ///   - [`release_notes(impl Into<String>)`](crate::operation::create_image_version::builders::CreateImageVersionFluentBuilder::release_notes) / [`set_release_notes(Option<String>)`](crate::operation::create_image_version::builders::CreateImageVersionFluentBuilder::set_release_notes):<br>required: **false**<br><p>The maintainer description of the image version.</p><br>
    /// - On success, responds with [`CreateImageVersionOutput`](crate::operation::create_image_version::CreateImageVersionOutput) with field(s):
    ///   - [`image_version_arn(Option<String>)`](crate::operation::create_image_version::CreateImageVersionOutput::image_version_arn): <p>The ARN of the image version.</p>
    /// - On failure, responds with [`SdkError<CreateImageVersionError>`](crate::operation::create_image_version::CreateImageVersionError)
    pub fn create_image_version(&self) -> crate::operation::create_image_version::builders::CreateImageVersionFluentBuilder {
        crate::operation::create_image_version::builders::CreateImageVersionFluentBuilder::new(self.handle.clone())
    }
}
