// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeTransformJob`](crate::operation::describe_transform_job::builders::DescribeTransformJobFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`transform_job_name(impl Into<String>)`](crate::operation::describe_transform_job::builders::DescribeTransformJobFluentBuilder::transform_job_name) / [`set_transform_job_name(Option<String>)`](crate::operation::describe_transform_job::builders::DescribeTransformJobFluentBuilder::set_transform_job_name):<br>required: **true**<br><p>The name of the transform job that you want to view details of.</p><br>
    /// - On success, responds with [`DescribeTransformJobOutput`](crate::operation::describe_transform_job::DescribeTransformJobOutput) with field(s):
    ///   - [`transform_job_name(Option<String>)`](crate::operation::describe_transform_job::DescribeTransformJobOutput::transform_job_name): <p>The name of the transform job.</p>
    ///   - [`transform_job_arn(Option<String>)`](crate::operation::describe_transform_job::DescribeTransformJobOutput::transform_job_arn): <p>The Amazon Resource Name (ARN) of the transform job.</p>
    ///   - [`transform_job_status(Option<TransformJobStatus>)`](crate::operation::describe_transform_job::DescribeTransformJobOutput::transform_job_status): <p>The status of the transform job. If the transform job failed, the reason is returned in the <code>FailureReason</code> field.</p>
    ///   - [`failure_reason(Option<String>)`](crate::operation::describe_transform_job::DescribeTransformJobOutput::failure_reason): <p>If the transform job failed, <code>FailureReason</code> describes why it failed. A transform job creates a log file, which includes error messages, and stores it as an Amazon S3 object. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/logging-cloudwatch.html">Log Amazon SageMaker Events with Amazon CloudWatch</a>.</p>
    ///   - [`model_name(Option<String>)`](crate::operation::describe_transform_job::DescribeTransformJobOutput::model_name): <p>The name of the model used in the transform job.</p>
    ///   - [`max_concurrent_transforms(Option<i32>)`](crate::operation::describe_transform_job::DescribeTransformJobOutput::max_concurrent_transforms): <p>The maximum number of parallel requests on each instance node that can be launched in a transform job. The default value is 1.</p>
    ///   - [`model_client_config(Option<ModelClientConfig>)`](crate::operation::describe_transform_job::DescribeTransformJobOutput::model_client_config): <p>The timeout and maximum number of retries for processing a transform job invocation.</p>
    ///   - [`max_payload_in_mb(Option<i32>)`](crate::operation::describe_transform_job::DescribeTransformJobOutput::max_payload_in_mb): <p>The maximum payload size, in MB, used in the transform job.</p>
    ///   - [`batch_strategy(Option<BatchStrategy>)`](crate::operation::describe_transform_job::DescribeTransformJobOutput::batch_strategy): <p>Specifies the number of records to include in a mini-batch for an HTTP inference request. A <i>record</i> <i></i> is a single unit of input data that inference can be made on. For example, a single line in a CSV file is a record. </p>  <p>To enable the batch strategy, you must set <code>SplitType</code> to <code>Line</code>, <code>RecordIO</code>, or <code>TFRecord</code>.</p>
    ///   - [`environment(Option<HashMap::<String, String>>)`](crate::operation::describe_transform_job::DescribeTransformJobOutput::environment): <p>The environment variables to set in the Docker container. We support up to 16 key and values entries in the map.</p>
    ///   - [`transform_input(Option<TransformInput>)`](crate::operation::describe_transform_job::DescribeTransformJobOutput::transform_input): <p>Describes the dataset to be transformed and the Amazon S3 location where it is stored.</p>
    ///   - [`transform_output(Option<TransformOutput>)`](crate::operation::describe_transform_job::DescribeTransformJobOutput::transform_output): <p>Identifies the Amazon S3 location where you want Amazon SageMaker to save the results from the transform job.</p>
    ///   - [`data_capture_config(Option<BatchDataCaptureConfig>)`](crate::operation::describe_transform_job::DescribeTransformJobOutput::data_capture_config): <p>Configuration to control how SageMaker captures inference data.</p>
    ///   - [`transform_resources(Option<TransformResources>)`](crate::operation::describe_transform_job::DescribeTransformJobOutput::transform_resources): <p>Describes the resources, including ML instance types and ML instance count, to use for the transform job.</p>
    ///   - [`creation_time(Option<DateTime>)`](crate::operation::describe_transform_job::DescribeTransformJobOutput::creation_time): <p>A timestamp that shows when the transform Job was created.</p>
    ///   - [`transform_start_time(Option<DateTime>)`](crate::operation::describe_transform_job::DescribeTransformJobOutput::transform_start_time): <p>Indicates when the transform job starts on ML instances. You are billed for the time interval between this time and the value of <code>TransformEndTime</code>.</p>
    ///   - [`transform_end_time(Option<DateTime>)`](crate::operation::describe_transform_job::DescribeTransformJobOutput::transform_end_time): <p>Indicates when the transform job has been completed, or has stopped or failed. You are billed for the time interval between this time and the value of <code>TransformStartTime</code>.</p>
    ///   - [`labeling_job_arn(Option<String>)`](crate::operation::describe_transform_job::DescribeTransformJobOutput::labeling_job_arn): <p>The Amazon Resource Name (ARN) of the Amazon SageMaker Ground Truth labeling job that created the transform or training job.</p>
    ///   - [`auto_ml_job_arn(Option<String>)`](crate::operation::describe_transform_job::DescribeTransformJobOutput::auto_ml_job_arn): <p>The Amazon Resource Name (ARN) of the AutoML transform job.</p>
    ///   - [`data_processing(Option<DataProcessing>)`](crate::operation::describe_transform_job::DescribeTransformJobOutput::data_processing): <p>The data structure used to specify the data to be used for inference in a batch transform job and to associate the data that is relevant to the prediction results in the output. The input filter provided allows you to exclude input data that is not needed for inference in a batch transform job. The output filter provided allows you to include input data relevant to interpreting the predictions in the output from the job. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/batch-transform-data-processing.html">Associate Prediction Results with their Corresponding Input Records</a>.</p>
    ///   - [`experiment_config(Option<ExperimentConfig>)`](crate::operation::describe_transform_job::DescribeTransformJobOutput::experiment_config): <p>Associates a SageMaker job as a trial component with an experiment and trial. Specified when you call the following APIs:</p>  <ul>   <li> <p> <a href="https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_CreateProcessingJob.html">CreateProcessingJob</a> </p> </li>   <li> <p> <a href="https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_CreateTrainingJob.html">CreateTrainingJob</a> </p> </li>   <li> <p> <a href="https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_CreateTransformJob.html">CreateTransformJob</a> </p> </li>  </ul>
    /// - On failure, responds with [`SdkError<DescribeTransformJobError>`](crate::operation::describe_transform_job::DescribeTransformJobError)
    pub fn describe_transform_job(&self) -> crate::operation::describe_transform_job::builders::DescribeTransformJobFluentBuilder {
        crate::operation::describe_transform_job::builders::DescribeTransformJobFluentBuilder::new(self.handle.clone())
    }
}
