// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`Search`](crate::operation::search::builders::SearchFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::search::builders::SearchFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`resource(ResourceType)`](crate::operation::search::builders::SearchFluentBuilder::resource) / [`set_resource(Option<ResourceType>)`](crate::operation::search::builders::SearchFluentBuilder::set_resource): <p>The name of the Amazon SageMaker resource to search for.</p>
    ///   - [`search_expression(SearchExpression)`](crate::operation::search::builders::SearchFluentBuilder::search_expression) / [`set_search_expression(Option<SearchExpression>)`](crate::operation::search::builders::SearchFluentBuilder::set_search_expression): <p>A Boolean conditional statement. Resources must satisfy this condition to be included in search results. You must provide at least one subexpression, filter, or nested filter. The maximum number of recursive <code>SubExpressions</code>, <code>NestedFilters</code>, and <code>Filters</code> that can be included in a <code>SearchExpression</code> object is 50.</p>
    ///   - [`sort_by(impl Into<String>)`](crate::operation::search::builders::SearchFluentBuilder::sort_by) / [`set_sort_by(Option<String>)`](crate::operation::search::builders::SearchFluentBuilder::set_sort_by): <p>The name of the resource property used to sort the <code>SearchResults</code>. The default is <code>LastModifiedTime</code>.</p>
    ///   - [`sort_order(SearchSortOrder)`](crate::operation::search::builders::SearchFluentBuilder::sort_order) / [`set_sort_order(Option<SearchSortOrder>)`](crate::operation::search::builders::SearchFluentBuilder::set_sort_order): <p>How <code>SearchResults</code> are ordered. Valid values are <code>Ascending</code> or <code>Descending</code>. The default is <code>Descending</code>.</p>
    ///   - [`next_token(impl Into<String>)`](crate::operation::search::builders::SearchFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::search::builders::SearchFluentBuilder::set_next_token): <p>If more than <code>MaxResults</code> resources match the specified <code>SearchExpression</code>, the response includes a <code>NextToken</code>. The <code>NextToken</code> can be passed to the next <code>SearchRequest</code> to continue retrieving results.</p>
    ///   - [`max_results(i32)`](crate::operation::search::builders::SearchFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::search::builders::SearchFluentBuilder::set_max_results): <p>The maximum number of results to return.</p>
    /// - On success, responds with [`SearchOutput`](crate::operation::search::SearchOutput) with field(s):
    ///   - [`results(Option<Vec<SearchRecord>>)`](crate::operation::search::SearchOutput::results): <p>A list of <code>SearchRecord</code> objects.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::search::SearchOutput::next_token): <p>If the result of the previous <code>Search</code> request was truncated, the response includes a NextToken. To retrieve the next set of results, use the token in the next request.</p>
    /// - On failure, responds with [`SdkError<SearchError>`](crate::operation::search::SearchError)
    pub fn search(&self) -> crate::operation::search::builders::SearchFluentBuilder {
        crate::operation::search::builders::SearchFluentBuilder::new(self.handle.clone())
    }
}
