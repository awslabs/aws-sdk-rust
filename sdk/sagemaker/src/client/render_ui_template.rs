// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`RenderUiTemplate`](crate::client::fluent_builders::RenderUiTemplate) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`ui_template(UiTemplate)`](crate::client::fluent_builders::RenderUiTemplate::ui_template) / [`set_ui_template(Option<UiTemplate>)`](crate::client::fluent_builders::RenderUiTemplate::set_ui_template): <p>A <code>Template</code> object containing the worker UI template to render.</p>
    ///   - [`task(RenderableTask)`](crate::client::fluent_builders::RenderUiTemplate::task) / [`set_task(Option<RenderableTask>)`](crate::client::fluent_builders::RenderUiTemplate::set_task): <p>A <code>RenderableTask</code> object containing a representative task to render.</p>
    ///   - [`role_arn(impl Into<String>)`](crate::client::fluent_builders::RenderUiTemplate::role_arn) / [`set_role_arn(Option<String>)`](crate::client::fluent_builders::RenderUiTemplate::set_role_arn): <p>The Amazon Resource Name (ARN) that has access to the S3 objects that are used by the template.</p>
    ///   - [`human_task_ui_arn(impl Into<String>)`](crate::client::fluent_builders::RenderUiTemplate::human_task_ui_arn) / [`set_human_task_ui_arn(Option<String>)`](crate::client::fluent_builders::RenderUiTemplate::set_human_task_ui_arn): <p>The <code>HumanTaskUiArn</code> of the worker UI that you want to render. Do not provide a <code>HumanTaskUiArn</code> if you use the <code>UiTemplate</code> parameter.</p>  <p>See a list of available Human Ui Amazon Resource Names (ARNs) in <code>UiConfig</code>.</p>
    /// - On success, responds with [`RenderUiTemplateOutput`](crate::output::RenderUiTemplateOutput) with field(s):
    ///   - [`rendered_content(Option<String>)`](crate::output::RenderUiTemplateOutput::rendered_content): <p>A Liquid template that renders the HTML for the worker UI.</p>
    ///   - [`errors(Option<Vec<RenderingError>>)`](crate::output::RenderUiTemplateOutput::errors): <p>A list of one or more <code>RenderingError</code> objects if any were encountered while rendering the template. If there were no errors, the list is empty.</p>
    /// - On failure, responds with [`SdkError<RenderUiTemplateError>`](crate::error::RenderUiTemplateError)
    pub fn render_ui_template(&self) -> crate::client::fluent_builders::RenderUiTemplate {
        crate::client::fluent_builders::RenderUiTemplate::new(self.handle.clone())
    }
}
