// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateAlgorithm`](crate::operation::create_algorithm::builders::CreateAlgorithmFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`algorithm_name(impl Into<String>)`](crate::operation::create_algorithm::builders::CreateAlgorithmFluentBuilder::algorithm_name) / [`set_algorithm_name(Option<String>)`](crate::operation::create_algorithm::builders::CreateAlgorithmFluentBuilder::set_algorithm_name): <p>The name of the algorithm.</p>
    ///   - [`algorithm_description(impl Into<String>)`](crate::operation::create_algorithm::builders::CreateAlgorithmFluentBuilder::algorithm_description) / [`set_algorithm_description(Option<String>)`](crate::operation::create_algorithm::builders::CreateAlgorithmFluentBuilder::set_algorithm_description): <p>A description of the algorithm.</p>
    ///   - [`training_specification(TrainingSpecification)`](crate::operation::create_algorithm::builders::CreateAlgorithmFluentBuilder::training_specification) / [`set_training_specification(Option<TrainingSpecification>)`](crate::operation::create_algorithm::builders::CreateAlgorithmFluentBuilder::set_training_specification): <p>Specifies details about training jobs run by this algorithm, including the following:</p>  <ul>   <li> <p>The Amazon ECR path of the container and the version digest of the algorithm.</p> </li>   <li> <p>The hyperparameters that the algorithm supports.</p> </li>   <li> <p>The instance types that the algorithm supports for training.</p> </li>   <li> <p>Whether the algorithm supports distributed training.</p> </li>   <li> <p>The metrics that the algorithm emits to Amazon CloudWatch.</p> </li>   <li> <p>Which metrics that the algorithm emits can be used as the objective metric for hyperparameter tuning jobs.</p> </li>   <li> <p>The input channels that the algorithm supports for training data. For example, an algorithm might support <code>train</code>, <code>validation</code>, and <code>test</code> channels.</p> </li>  </ul>
    ///   - [`inference_specification(InferenceSpecification)`](crate::operation::create_algorithm::builders::CreateAlgorithmFluentBuilder::inference_specification) / [`set_inference_specification(Option<InferenceSpecification>)`](crate::operation::create_algorithm::builders::CreateAlgorithmFluentBuilder::set_inference_specification): <p>Specifies details about inference jobs that the algorithm runs, including the following:</p>  <ul>   <li> <p>The Amazon ECR paths of containers that contain the inference code and model artifacts.</p> </li>   <li> <p>The instance types that the algorithm supports for transform jobs and real-time endpoints used for inference.</p> </li>   <li> <p>The input and output content formats that the algorithm supports for inference.</p> </li>  </ul>
    ///   - [`validation_specification(AlgorithmValidationSpecification)`](crate::operation::create_algorithm::builders::CreateAlgorithmFluentBuilder::validation_specification) / [`set_validation_specification(Option<AlgorithmValidationSpecification>)`](crate::operation::create_algorithm::builders::CreateAlgorithmFluentBuilder::set_validation_specification): <p>Specifies configurations for one or more training jobs and that SageMaker runs to test the algorithm's training code and, optionally, one or more batch transform jobs that SageMaker runs to test the algorithm's inference code.</p>
    ///   - [`certify_for_marketplace(bool)`](crate::operation::create_algorithm::builders::CreateAlgorithmFluentBuilder::certify_for_marketplace) / [`set_certify_for_marketplace(bool)`](crate::operation::create_algorithm::builders::CreateAlgorithmFluentBuilder::set_certify_for_marketplace): <p>Whether to certify the algorithm so that it can be listed in Amazon Web Services Marketplace.</p>
    ///   - [`tags(Vec<Tag>)`](crate::operation::create_algorithm::builders::CreateAlgorithmFluentBuilder::tags) / [`set_tags(Option<Vec<Tag>>)`](crate::operation::create_algorithm::builders::CreateAlgorithmFluentBuilder::set_tags): <p>An array of key-value pairs. You can use tags to categorize your Amazon Web Services resources in different ways, for example, by purpose, owner, or environment. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging Amazon Web Services Resources</a>.</p>
    /// - On success, responds with [`CreateAlgorithmOutput`](crate::operation::create_algorithm::CreateAlgorithmOutput) with field(s):
    ///   - [`algorithm_arn(Option<String>)`](crate::operation::create_algorithm::CreateAlgorithmOutput::algorithm_arn): <p>The Amazon Resource Name (ARN) of the new algorithm.</p>
    /// - On failure, responds with [`SdkError<CreateAlgorithmError>`](crate::operation::create_algorithm::CreateAlgorithmError)
    pub fn create_algorithm(
        &self,
    ) -> crate::operation::create_algorithm::builders::CreateAlgorithmFluentBuilder {
        crate::operation::create_algorithm::builders::CreateAlgorithmFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
