// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeDomain`](crate::operation::describe_domain::builders::DescribeDomainFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`domain_id(impl Into<String>)`](crate::operation::describe_domain::builders::DescribeDomainFluentBuilder::domain_id) / [`set_domain_id(Option<String>)`](crate::operation::describe_domain::builders::DescribeDomainFluentBuilder::set_domain_id):<br>required: **true**<br><p>The domain ID.</p><br>
    /// - On success, responds with [`DescribeDomainOutput`](crate::operation::describe_domain::DescribeDomainOutput) with field(s):
    ///   - [`domain_arn(Option<String>)`](crate::operation::describe_domain::DescribeDomainOutput::domain_arn): <p>The domain's Amazon Resource Name (ARN).</p>
    ///   - [`domain_id(Option<String>)`](crate::operation::describe_domain::DescribeDomainOutput::domain_id): <p>The domain ID.</p>
    ///   - [`domain_name(Option<String>)`](crate::operation::describe_domain::DescribeDomainOutput::domain_name): <p>The domain name.</p>
    ///   - [`home_efs_file_system_id(Option<String>)`](crate::operation::describe_domain::DescribeDomainOutput::home_efs_file_system_id): <p>The ID of the Amazon Elastic File System (EFS) managed by this Domain.</p>
    ///   - [`single_sign_on_managed_application_instance_id(Option<String>)`](crate::operation::describe_domain::DescribeDomainOutput::single_sign_on_managed_application_instance_id): <p>The IAM Identity Center managed application instance ID.</p>
    ///   - [`status(Option<DomainStatus>)`](crate::operation::describe_domain::DescribeDomainOutput::status): <p>The status.</p>
    ///   - [`creation_time(Option<DateTime>)`](crate::operation::describe_domain::DescribeDomainOutput::creation_time): <p>The creation time.</p>
    ///   - [`last_modified_time(Option<DateTime>)`](crate::operation::describe_domain::DescribeDomainOutput::last_modified_time): <p>The last modified time.</p>
    ///   - [`failure_reason(Option<String>)`](crate::operation::describe_domain::DescribeDomainOutput::failure_reason): <p>The failure reason.</p>
    ///   - [`auth_mode(Option<AuthMode>)`](crate::operation::describe_domain::DescribeDomainOutput::auth_mode): <p>The domain's authentication mode.</p>
    ///   - [`default_user_settings(Option<UserSettings>)`](crate::operation::describe_domain::DescribeDomainOutput::default_user_settings): <p>Settings which are applied to UserProfiles in this domain if settings are not explicitly specified in a given UserProfile. </p>
    ///   - [`app_network_access_type(Option<AppNetworkAccessType>)`](crate::operation::describe_domain::DescribeDomainOutput::app_network_access_type): <p>Specifies the VPC used for non-EFS traffic. The default value is <code>PublicInternetOnly</code>.</p>  <ul>   <li> <p> <code>PublicInternetOnly</code> - Non-EFS traffic is through a VPC managed by Amazon SageMaker, which allows direct internet access</p> </li>   <li> <p> <code>VpcOnly</code> - All Studio traffic is through the specified VPC and subnets</p> </li>  </ul>
    ///   - [`home_efs_file_system_kms_key_id(Option<String>)`](crate::operation::describe_domain::DescribeDomainOutput::home_efs_file_system_kms_key_id): <p>Use <code>KmsKeyId</code>.</p>
    ///   - [`subnet_ids(Option<Vec::<String>>)`](crate::operation::describe_domain::DescribeDomainOutput::subnet_ids): <p>The VPC subnets that Studio uses for communication.</p>
    ///   - [`url(Option<String>)`](crate::operation::describe_domain::DescribeDomainOutput::url): <p>The domain's URL.</p>
    ///   - [`vpc_id(Option<String>)`](crate::operation::describe_domain::DescribeDomainOutput::vpc_id): <p>The ID of the Amazon Virtual Private Cloud (VPC) that Studio uses for communication.</p>
    ///   - [`kms_key_id(Option<String>)`](crate::operation::describe_domain::DescribeDomainOutput::kms_key_id): <p>The Amazon Web Services KMS customer managed key used to encrypt the EFS volume attached to the domain.</p>
    ///   - [`domain_settings(Option<DomainSettings>)`](crate::operation::describe_domain::DescribeDomainOutput::domain_settings): <p>A collection of <code>Domain</code> settings.</p>
    ///   - [`app_security_group_management(Option<AppSecurityGroupManagement>)`](crate::operation::describe_domain::DescribeDomainOutput::app_security_group_management): <p>The entity that creates and manages the required security groups for inter-app communication in <code>VPCOnly</code> mode. Required when <code>CreateDomain.AppNetworkAccessType</code> is <code>VPCOnly</code> and <code>DomainSettings.RStudioServerProDomainSettings.DomainExecutionRoleArn</code> is provided.</p>
    ///   - [`security_group_id_for_domain_boundary(Option<String>)`](crate::operation::describe_domain::DescribeDomainOutput::security_group_id_for_domain_boundary): <p>The ID of the security group that authorizes traffic between the <code>RSessionGateway</code> apps and the <code>RStudioServerPro</code> app.</p>
    ///   - [`default_space_settings(Option<DefaultSpaceSettings>)`](crate::operation::describe_domain::DescribeDomainOutput::default_space_settings): <p>The default settings used to create a space.</p>
    /// - On failure, responds with [`SdkError<DescribeDomainError>`](crate::operation::describe_domain::DescribeDomainError)
    pub fn describe_domain(&self) -> crate::operation::describe_domain::builders::DescribeDomainFluentBuilder {
        crate::operation::describe_domain::builders::DescribeDomainFluentBuilder::new(self.handle.clone())
    }
}
