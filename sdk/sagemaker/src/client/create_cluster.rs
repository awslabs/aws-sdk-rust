// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateCluster`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`cluster_name(impl Into<String>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::cluster_name) / [`set_cluster_name(Option<String>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::set_cluster_name):<br>required: **true**<br><p>The name for the new SageMaker HyperPod cluster.</p><br>
    ///   - [`instance_groups(ClusterInstanceGroupSpecification)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::instance_groups) / [`set_instance_groups(Option<Vec::<ClusterInstanceGroupSpecification>>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::set_instance_groups):<br>required: **true**<br><p>The instance groups to be created in the SageMaker HyperPod cluster.</p><br>
    ///   - [`vpc_config(VpcConfig)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::vpc_config) / [`set_vpc_config(Option<VpcConfig>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::set_vpc_config):<br>required: **false**<br><p>Specifies an Amazon Virtual Private Cloud (VPC) that your SageMaker jobs, hosted models, and compute resources have access to. You can control access to and from your resources by configuring a VPC. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/infrastructure-give-access.html">Give SageMaker Access to Resources in your Amazon VPC</a>.</p><br>
    ///   - [`tags(Tag)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::tags) / [`set_tags(Option<Vec::<Tag>>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::set_tags):<br>required: **false**<br><p>Custom tags for managing the SageMaker HyperPod cluster as an Amazon Web Services resource. You can add tags to your cluster in the same way you add them in other Amazon Web Services services that support tagging. To learn more about tagging Amazon Web Services resources in general, see <a href="https://docs.aws.amazon.com/tag-editor/latest/userguide/tagging.html">Tagging Amazon Web Services Resources User Guide</a>.</p><br>
    ///   - [`orchestrator(ClusterOrchestrator)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::orchestrator) / [`set_orchestrator(Option<ClusterOrchestrator>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::set_orchestrator):<br>required: **false**<br><p>The type of orchestrator to use for the SageMaker HyperPod cluster. Currently, the only supported value is <code>"eks"</code>, which is to use an Amazon Elastic Kubernetes Service (EKS) cluster as the orchestrator.</p><br>
    ///   - [`node_recovery(ClusterNodeRecovery)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::node_recovery) / [`set_node_recovery(Option<ClusterNodeRecovery>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::set_node_recovery):<br>required: **false**<br><p>The node recovery mode for the SageMaker HyperPod cluster. When set to <code>Automatic</code>, SageMaker HyperPod will automatically reboot or replace faulty nodes when issues are detected. When set to <code>None</code>, cluster administrators will need to manually manage any faulty cluster instances.</p><br>
    /// - On success, responds with [`CreateClusterOutput`](crate::operation::create_cluster::CreateClusterOutput) with field(s):
    ///   - [`cluster_arn(Option<String>)`](crate::operation::create_cluster::CreateClusterOutput::cluster_arn): <p>The Amazon Resource Name (ARN) of the cluster.</p>
    /// - On failure, responds with [`SdkError<CreateClusterError>`](crate::operation::create_cluster::CreateClusterError)
    pub fn create_cluster(&self) -> crate::operation::create_cluster::builders::CreateClusterFluentBuilder {
        crate::operation::create_cluster::builders::CreateClusterFluentBuilder::new(self.handle.clone())
    }
}
