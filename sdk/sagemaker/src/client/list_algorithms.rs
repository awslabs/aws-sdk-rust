// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListAlgorithms`](crate::client::fluent_builders::ListAlgorithms) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListAlgorithms::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`creation_time_after(DateTime)`](crate::client::fluent_builders::ListAlgorithms::creation_time_after) / [`set_creation_time_after(Option<DateTime>)`](crate::client::fluent_builders::ListAlgorithms::set_creation_time_after): <p>A filter that returns only algorithms created after the specified time (timestamp).</p>
    ///   - [`creation_time_before(DateTime)`](crate::client::fluent_builders::ListAlgorithms::creation_time_before) / [`set_creation_time_before(Option<DateTime>)`](crate::client::fluent_builders::ListAlgorithms::set_creation_time_before): <p>A filter that returns only algorithms created before the specified time (timestamp).</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListAlgorithms::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListAlgorithms::set_max_results): <p>The maximum number of algorithms to return in the response.</p>
    ///   - [`name_contains(impl Into<String>)`](crate::client::fluent_builders::ListAlgorithms::name_contains) / [`set_name_contains(Option<String>)`](crate::client::fluent_builders::ListAlgorithms::set_name_contains): <p>A string in the algorithm name. This filter returns only algorithms whose name contains the specified string.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListAlgorithms::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListAlgorithms::set_next_token): <p>If the response to a previous <code>ListAlgorithms</code> request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of algorithms, use the token in the next request.</p>
    ///   - [`sort_by(AlgorithmSortBy)`](crate::client::fluent_builders::ListAlgorithms::sort_by) / [`set_sort_by(Option<AlgorithmSortBy>)`](crate::client::fluent_builders::ListAlgorithms::set_sort_by): <p>The parameter by which to sort the results. The default is <code>CreationTime</code>.</p>
    ///   - [`sort_order(SortOrder)`](crate::client::fluent_builders::ListAlgorithms::sort_order) / [`set_sort_order(Option<SortOrder>)`](crate::client::fluent_builders::ListAlgorithms::set_sort_order): <p>The sort order for the results. The default is <code>Ascending</code>.</p>
    /// - On success, responds with [`ListAlgorithmsOutput`](crate::output::ListAlgorithmsOutput) with field(s):
    ///   - [`algorithm_summary_list(Option<Vec<AlgorithmSummary>>)`](crate::output::ListAlgorithmsOutput::algorithm_summary_list): <p>&gt;An array of <code>AlgorithmSummary</code> objects, each of which lists an algorithm.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListAlgorithmsOutput::next_token): <p>If the response is truncated, SageMaker returns this token. To retrieve the next set of algorithms, use it in the subsequent request.</p>
    /// - On failure, responds with [`SdkError<ListAlgorithmsError>`](crate::error::ListAlgorithmsError)
    pub fn list_algorithms(&self) -> crate::client::fluent_builders::ListAlgorithms {
        crate::client::fluent_builders::ListAlgorithms::new(self.handle.clone())
    }
}
