// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetScalingConfigurationRecommendation`](crate::operation::get_scaling_configuration_recommendation::builders::GetScalingConfigurationRecommendationFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`inference_recommendations_job_name(impl Into<String>)`](crate::operation::get_scaling_configuration_recommendation::builders::GetScalingConfigurationRecommendationFluentBuilder::inference_recommendations_job_name) / [`set_inference_recommendations_job_name(Option<String>)`](crate::operation::get_scaling_configuration_recommendation::builders::GetScalingConfigurationRecommendationFluentBuilder::set_inference_recommendations_job_name):<br>required: **true**<br><p>The name of a previously completed Inference Recommender job.</p><br>
    ///   - [`recommendation_id(impl Into<String>)`](crate::operation::get_scaling_configuration_recommendation::builders::GetScalingConfigurationRecommendationFluentBuilder::recommendation_id) / [`set_recommendation_id(Option<String>)`](crate::operation::get_scaling_configuration_recommendation::builders::GetScalingConfigurationRecommendationFluentBuilder::set_recommendation_id):<br>required: **false**<br><p>The recommendation ID of a previously completed inference recommendation. This ID should come from one of the recommendations returned by the job specified in the <code>InferenceRecommendationsJobName</code> field.</p>  <p>Specify either this field or the <code>EndpointName</code> field.</p><br>
    ///   - [`endpoint_name(impl Into<String>)`](crate::operation::get_scaling_configuration_recommendation::builders::GetScalingConfigurationRecommendationFluentBuilder::endpoint_name) / [`set_endpoint_name(Option<String>)`](crate::operation::get_scaling_configuration_recommendation::builders::GetScalingConfigurationRecommendationFluentBuilder::set_endpoint_name):<br>required: **false**<br><p>The name of an endpoint benchmarked during a previously completed inference recommendation job. This name should come from one of the recommendations returned by the job specified in the <code>InferenceRecommendationsJobName</code> field.</p>  <p>Specify either this field or the <code>RecommendationId</code> field.</p><br>
    ///   - [`target_cpu_utilization_per_core(i32)`](crate::operation::get_scaling_configuration_recommendation::builders::GetScalingConfigurationRecommendationFluentBuilder::target_cpu_utilization_per_core) / [`set_target_cpu_utilization_per_core(Option<i32>)`](crate::operation::get_scaling_configuration_recommendation::builders::GetScalingConfigurationRecommendationFluentBuilder::set_target_cpu_utilization_per_core):<br>required: **false**<br><p>The percentage of how much utilization you want an instance to use before autoscaling. The default value is 50%.</p><br>
    ///   - [`scaling_policy_objective(ScalingPolicyObjective)`](crate::operation::get_scaling_configuration_recommendation::builders::GetScalingConfigurationRecommendationFluentBuilder::scaling_policy_objective) / [`set_scaling_policy_objective(Option<ScalingPolicyObjective>)`](crate::operation::get_scaling_configuration_recommendation::builders::GetScalingConfigurationRecommendationFluentBuilder::set_scaling_policy_objective):<br>required: **false**<br><p>An object where you specify the anticipated traffic pattern for an endpoint.</p><br>
    /// - On success, responds with [`GetScalingConfigurationRecommendationOutput`](crate::operation::get_scaling_configuration_recommendation::GetScalingConfigurationRecommendationOutput) with field(s):
    ///   - [`inference_recommendations_job_name(Option<String>)`](crate::operation::get_scaling_configuration_recommendation::GetScalingConfigurationRecommendationOutput::inference_recommendations_job_name): <p>The name of a previously completed Inference Recommender job.</p>
    ///   - [`recommendation_id(Option<String>)`](crate::operation::get_scaling_configuration_recommendation::GetScalingConfigurationRecommendationOutput::recommendation_id): <p>The recommendation ID of a previously completed inference recommendation.</p>
    ///   - [`endpoint_name(Option<String>)`](crate::operation::get_scaling_configuration_recommendation::GetScalingConfigurationRecommendationOutput::endpoint_name): <p>The name of an endpoint benchmarked during a previously completed Inference Recommender job.</p>
    ///   - [`target_cpu_utilization_per_core(Option<i32>)`](crate::operation::get_scaling_configuration_recommendation::GetScalingConfigurationRecommendationOutput::target_cpu_utilization_per_core): <p>The percentage of how much utilization you want an instance to use before autoscaling, which you specified in the request. The default value is 50%.</p>
    ///   - [`scaling_policy_objective(Option<ScalingPolicyObjective>)`](crate::operation::get_scaling_configuration_recommendation::GetScalingConfigurationRecommendationOutput::scaling_policy_objective): <p>An object representing the anticipated traffic pattern for an endpoint that you specified in the request.</p>
    ///   - [`metric(Option<ScalingPolicyMetric>)`](crate::operation::get_scaling_configuration_recommendation::GetScalingConfigurationRecommendationOutput::metric): <p>An object with a list of metrics that were benchmarked during the previously completed Inference Recommender job.</p>
    ///   - [`dynamic_scaling_configuration(Option<DynamicScalingConfiguration>)`](crate::operation::get_scaling_configuration_recommendation::GetScalingConfigurationRecommendationOutput::dynamic_scaling_configuration): <p>An object with the recommended values for you to specify when creating an autoscaling policy.</p>
    /// - On failure, responds with [`SdkError<GetScalingConfigurationRecommendationError>`](crate::operation::get_scaling_configuration_recommendation::GetScalingConfigurationRecommendationError)
    pub fn get_scaling_configuration_recommendation(
        &self,
    ) -> crate::operation::get_scaling_configuration_recommendation::builders::GetScalingConfigurationRecommendationFluentBuilder {
        crate::operation::get_scaling_configuration_recommendation::builders::GetScalingConfigurationRecommendationFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
