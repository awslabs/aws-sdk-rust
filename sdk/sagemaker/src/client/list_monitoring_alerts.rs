// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListMonitoringAlerts`](crate::client::fluent_builders::ListMonitoringAlerts) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListMonitoringAlerts::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`monitoring_schedule_name(impl Into<String>)`](crate::client::fluent_builders::ListMonitoringAlerts::monitoring_schedule_name) / [`set_monitoring_schedule_name(Option<String>)`](crate::client::fluent_builders::ListMonitoringAlerts::set_monitoring_schedule_name): <p>The name of a monitoring schedule.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListMonitoringAlerts::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListMonitoringAlerts::set_next_token): <p>If the result of the previous <code>ListMonitoringAlerts</code> request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of alerts in the history, use the token in the next request.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListMonitoringAlerts::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListMonitoringAlerts::set_max_results): <p>The maximum number of results to display. The default is 100.</p>
    /// - On success, responds with [`ListMonitoringAlertsOutput`](crate::output::ListMonitoringAlertsOutput) with field(s):
    ///   - [`monitoring_alert_summaries(Option<Vec<MonitoringAlertSummary>>)`](crate::output::ListMonitoringAlertsOutput::monitoring_alert_summaries): <p>A JSON array where each element is a summary for a monitoring alert.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListMonitoringAlertsOutput::next_token): <p>If the response is truncated, SageMaker returns this token. To retrieve the next set of alerts, use it in the subsequent request.</p>
    /// - On failure, responds with [`SdkError<ListMonitoringAlertsError>`](crate::error::ListMonitoringAlertsError)
    pub fn list_monitoring_alerts(&self) -> crate::client::fluent_builders::ListMonitoringAlerts {
        crate::client::fluent_builders::ListMonitoringAlerts::new(self.handle.clone())
    }
}
