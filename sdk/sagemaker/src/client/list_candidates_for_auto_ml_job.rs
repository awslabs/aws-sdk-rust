// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListCandidatesForAutoMLJob`](crate::client::fluent_builders::ListCandidatesForAutoMLJob) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListCandidatesForAutoMLJob::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`auto_ml_job_name(impl Into<String>)`](crate::client::fluent_builders::ListCandidatesForAutoMLJob::auto_ml_job_name) / [`set_auto_ml_job_name(Option<String>)`](crate::client::fluent_builders::ListCandidatesForAutoMLJob::set_auto_ml_job_name): <p>List the candidates created for the job by providing the job's name.</p>
    ///   - [`status_equals(CandidateStatus)`](crate::client::fluent_builders::ListCandidatesForAutoMLJob::status_equals) / [`set_status_equals(Option<CandidateStatus>)`](crate::client::fluent_builders::ListCandidatesForAutoMLJob::set_status_equals): <p>List the candidates for the job and filter by status.</p>
    ///   - [`candidate_name_equals(impl Into<String>)`](crate::client::fluent_builders::ListCandidatesForAutoMLJob::candidate_name_equals) / [`set_candidate_name_equals(Option<String>)`](crate::client::fluent_builders::ListCandidatesForAutoMLJob::set_candidate_name_equals): <p>List the candidates for the job and filter by candidate name.</p>
    ///   - [`sort_order(AutoMlSortOrder)`](crate::client::fluent_builders::ListCandidatesForAutoMLJob::sort_order) / [`set_sort_order(Option<AutoMlSortOrder>)`](crate::client::fluent_builders::ListCandidatesForAutoMLJob::set_sort_order): <p>The sort order for the results. The default is <code>Ascending</code>.</p>
    ///   - [`sort_by(CandidateSortBy)`](crate::client::fluent_builders::ListCandidatesForAutoMLJob::sort_by) / [`set_sort_by(Option<CandidateSortBy>)`](crate::client::fluent_builders::ListCandidatesForAutoMLJob::set_sort_by): <p>The parameter by which to sort the results. The default is <code>Descending</code>.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListCandidatesForAutoMLJob::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListCandidatesForAutoMLJob::set_max_results): <p>List the job's candidates up to a specified limit.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListCandidatesForAutoMLJob::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListCandidatesForAutoMLJob::set_next_token): <p>If the previous response was truncated, you receive this token. Use it in your next request to receive the next set of results.</p>
    /// - On success, responds with [`ListCandidatesForAutoMlJobOutput`](crate::output::ListCandidatesForAutoMlJobOutput) with field(s):
    ///   - [`candidates(Option<Vec<AutoMlCandidate>>)`](crate::output::ListCandidatesForAutoMlJobOutput::candidates): <p>Summaries about the <code>AutoMLCandidates</code>.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListCandidatesForAutoMlJobOutput::next_token): <p>If the previous response was truncated, you receive this token. Use it in your next request to receive the next set of results.</p>
    /// - On failure, responds with [`SdkError<ListCandidatesForAutoMLJobError>`](crate::error::ListCandidatesForAutoMLJobError)
    pub fn list_candidates_for_auto_ml_job(
        &self,
    ) -> crate::client::fluent_builders::ListCandidatesForAutoMLJob {
        crate::client::fluent_builders::ListCandidatesForAutoMLJob::new(self.handle.clone())
    }
}
