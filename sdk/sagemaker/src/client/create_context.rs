// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateContext`](crate::client::fluent_builders::CreateContext) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`context_name(impl Into<String>)`](crate::client::fluent_builders::CreateContext::context_name) / [`set_context_name(Option<String>)`](crate::client::fluent_builders::CreateContext::set_context_name): <p>The name of the context. Must be unique to your account in an Amazon Web Services Region.</p>
    ///   - [`source(ContextSource)`](crate::client::fluent_builders::CreateContext::source) / [`set_source(Option<ContextSource>)`](crate::client::fluent_builders::CreateContext::set_source): <p>The source type, ID, and URI.</p>
    ///   - [`context_type(impl Into<String>)`](crate::client::fluent_builders::CreateContext::context_type) / [`set_context_type(Option<String>)`](crate::client::fluent_builders::CreateContext::set_context_type): <p>The context type.</p>
    ///   - [`description(impl Into<String>)`](crate::client::fluent_builders::CreateContext::description) / [`set_description(Option<String>)`](crate::client::fluent_builders::CreateContext::set_description): <p>The description of the context.</p>
    ///   - [`properties(HashMap<String, String>)`](crate::client::fluent_builders::CreateContext::properties) / [`set_properties(Option<HashMap<String, String>>)`](crate::client::fluent_builders::CreateContext::set_properties): <p>A list of properties to add to the context.</p>
    ///   - [`tags(Vec<Tag>)`](crate::client::fluent_builders::CreateContext::tags) / [`set_tags(Option<Vec<Tag>>)`](crate::client::fluent_builders::CreateContext::set_tags): <p>A list of tags to apply to the context.</p>
    /// - On success, responds with [`CreateContextOutput`](crate::output::CreateContextOutput) with field(s):
    ///   - [`context_arn(Option<String>)`](crate::output::CreateContextOutput::context_arn): <p>The Amazon Resource Name (ARN) of the context.</p>
    /// - On failure, responds with [`SdkError<CreateContextError>`](crate::error::CreateContextError)
    pub fn create_context(&self) -> crate::client::fluent_builders::CreateContext {
        crate::client::fluent_builders::CreateContext::new(self.handle.clone())
    }
}
