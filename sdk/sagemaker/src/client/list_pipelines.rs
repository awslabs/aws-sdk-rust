// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListPipelines`](crate::operation::list_pipelines::builders::ListPipelinesFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::list_pipelines::builders::ListPipelinesFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`pipeline_name_prefix(impl Into<String>)`](crate::operation::list_pipelines::builders::ListPipelinesFluentBuilder::pipeline_name_prefix) / [`set_pipeline_name_prefix(Option<String>)`](crate::operation::list_pipelines::builders::ListPipelinesFluentBuilder::set_pipeline_name_prefix): <p>The prefix of the pipeline name.</p>
    ///   - [`created_after(DateTime)`](crate::operation::list_pipelines::builders::ListPipelinesFluentBuilder::created_after) / [`set_created_after(Option<DateTime>)`](crate::operation::list_pipelines::builders::ListPipelinesFluentBuilder::set_created_after): <p>A filter that returns the pipelines that were created after a specified time.</p>
    ///   - [`created_before(DateTime)`](crate::operation::list_pipelines::builders::ListPipelinesFluentBuilder::created_before) / [`set_created_before(Option<DateTime>)`](crate::operation::list_pipelines::builders::ListPipelinesFluentBuilder::set_created_before): <p>A filter that returns the pipelines that were created before a specified time.</p>
    ///   - [`sort_by(SortPipelinesBy)`](crate::operation::list_pipelines::builders::ListPipelinesFluentBuilder::sort_by) / [`set_sort_by(Option<SortPipelinesBy>)`](crate::operation::list_pipelines::builders::ListPipelinesFluentBuilder::set_sort_by): <p>The field by which to sort results. The default is <code>CreatedTime</code>.</p>
    ///   - [`sort_order(SortOrder)`](crate::operation::list_pipelines::builders::ListPipelinesFluentBuilder::sort_order) / [`set_sort_order(Option<SortOrder>)`](crate::operation::list_pipelines::builders::ListPipelinesFluentBuilder::set_sort_order): <p>The sort order for results.</p>
    ///   - [`next_token(impl Into<String>)`](crate::operation::list_pipelines::builders::ListPipelinesFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::list_pipelines::builders::ListPipelinesFluentBuilder::set_next_token): <p>If the result of the previous <code>ListPipelines</code> request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of pipelines, use the token in the next request.</p>
    ///   - [`max_results(i32)`](crate::operation::list_pipelines::builders::ListPipelinesFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::list_pipelines::builders::ListPipelinesFluentBuilder::set_max_results): <p>The maximum number of pipelines to return in the response.</p>
    /// - On success, responds with [`ListPipelinesOutput`](crate::operation::list_pipelines::ListPipelinesOutput) with field(s):
    ///   - [`pipeline_summaries(Option<Vec<PipelineSummary>>)`](crate::operation::list_pipelines::ListPipelinesOutput::pipeline_summaries): <p>Contains a sorted list of <code>PipelineSummary</code> objects matching the specified filters. Each <code>PipelineSummary</code> consists of PipelineArn, PipelineName, ExperimentName, PipelineDescription, CreationTime, LastModifiedTime, LastRunTime, and RoleArn. This list can be empty. </p>
    ///   - [`next_token(Option<String>)`](crate::operation::list_pipelines::ListPipelinesOutput::next_token): <p>If the result of the previous <code>ListPipelines</code> request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of pipelines, use the token in the next request.</p>
    /// - On failure, responds with [`SdkError<ListPipelinesError>`](crate::operation::list_pipelines::ListPipelinesError)
    pub fn list_pipelines(
        &self,
    ) -> crate::operation::list_pipelines::builders::ListPipelinesFluentBuilder {
        crate::operation::list_pipelines::builders::ListPipelinesFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
