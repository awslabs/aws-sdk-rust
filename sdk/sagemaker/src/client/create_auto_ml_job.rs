// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateAutoMLJob`](crate::operation::create_auto_ml_job::builders::CreateAutoMLJobFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`auto_ml_job_name(impl Into<String>)`](crate::operation::create_auto_ml_job::builders::CreateAutoMLJobFluentBuilder::auto_ml_job_name) / [`set_auto_ml_job_name(Option<String>)`](crate::operation::create_auto_ml_job::builders::CreateAutoMLJobFluentBuilder::set_auto_ml_job_name):<br>required: **true**<br><p>Identifies an Autopilot job. The name must be unique to your account and is case insensitive.</p><br>
    ///   - [`input_data_config(AutoMlChannel)`](crate::operation::create_auto_ml_job::builders::CreateAutoMLJobFluentBuilder::input_data_config) / [`set_input_data_config(Option<Vec::<AutoMlChannel>>)`](crate::operation::create_auto_ml_job::builders::CreateAutoMLJobFluentBuilder::set_input_data_config):<br>required: **true**<br><p>An array of channel objects that describes the input data and its location. Each channel is a named input source. Similar to <code>InputDataConfig</code> supported by <a href="https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_HyperParameterTrainingJobDefinition.html">HyperParameterTrainingJobDefinition</a>. Format(s) supported: CSV, Parquet. A minimum of 500 rows is required for the training dataset. There is not a minimum number of rows required for the validation dataset.</p><br>
    ///   - [`output_data_config(AutoMlOutputDataConfig)`](crate::operation::create_auto_ml_job::builders::CreateAutoMLJobFluentBuilder::output_data_config) / [`set_output_data_config(Option<AutoMlOutputDataConfig>)`](crate::operation::create_auto_ml_job::builders::CreateAutoMLJobFluentBuilder::set_output_data_config):<br>required: **true**<br><p>Provides information about encryption and the Amazon S3 output path needed to store artifacts from an AutoML job. Format(s) supported: CSV.</p><br>
    ///   - [`problem_type(ProblemType)`](crate::operation::create_auto_ml_job::builders::CreateAutoMLJobFluentBuilder::problem_type) / [`set_problem_type(Option<ProblemType>)`](crate::operation::create_auto_ml_job::builders::CreateAutoMLJobFluentBuilder::set_problem_type):<br>required: **false**<br><p>Defines the type of supervised learning problem available for the candidates. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/autopilot-datasets-problem-types.html#autopilot-problem-types"> Amazon SageMaker Autopilot problem types</a>.</p><br>
    ///   - [`auto_ml_job_objective(AutoMlJobObjective)`](crate::operation::create_auto_ml_job::builders::CreateAutoMLJobFluentBuilder::auto_ml_job_objective) / [`set_auto_ml_job_objective(Option<AutoMlJobObjective>)`](crate::operation::create_auto_ml_job::builders::CreateAutoMLJobFluentBuilder::set_auto_ml_job_objective):<br>required: **false**<br><p>Specifies a metric to minimize or maximize as the objective of a job. If not specified, the default objective metric depends on the problem type. See <a href="https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_AutoMLJobObjective.html">AutoMLJobObjective</a> for the default values.</p><br>
    ///   - [`auto_ml_job_config(AutoMlJobConfig)`](crate::operation::create_auto_ml_job::builders::CreateAutoMLJobFluentBuilder::auto_ml_job_config) / [`set_auto_ml_job_config(Option<AutoMlJobConfig>)`](crate::operation::create_auto_ml_job::builders::CreateAutoMLJobFluentBuilder::set_auto_ml_job_config):<br>required: **false**<br><p>A collection of settings used to configure an AutoML job.</p><br>
    ///   - [`role_arn(impl Into<String>)`](crate::operation::create_auto_ml_job::builders::CreateAutoMLJobFluentBuilder::role_arn) / [`set_role_arn(Option<String>)`](crate::operation::create_auto_ml_job::builders::CreateAutoMLJobFluentBuilder::set_role_arn):<br>required: **true**<br><p>The ARN of the role that is used to access the data.</p><br>
    ///   - [`generate_candidate_definitions_only(bool)`](crate::operation::create_auto_ml_job::builders::CreateAutoMLJobFluentBuilder::generate_candidate_definitions_only) / [`set_generate_candidate_definitions_only(Option<bool>)`](crate::operation::create_auto_ml_job::builders::CreateAutoMLJobFluentBuilder::set_generate_candidate_definitions_only):<br>required: **false**<br><p>Generates possible candidates without training the models. A candidate is a combination of data preprocessors, algorithms, and algorithm parameter settings.</p><br>
    ///   - [`tags(Tag)`](crate::operation::create_auto_ml_job::builders::CreateAutoMLJobFluentBuilder::tags) / [`set_tags(Option<Vec::<Tag>>)`](crate::operation::create_auto_ml_job::builders::CreateAutoMLJobFluentBuilder::set_tags):<br>required: **false**<br><p>An array of key-value pairs. You can use tags to categorize your Amazon Web Services resources in different ways, for example, by purpose, owner, or environment. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging Amazon Web ServicesResources</a>. Tag keys must be unique per resource.</p><br>
    ///   - [`model_deploy_config(ModelDeployConfig)`](crate::operation::create_auto_ml_job::builders::CreateAutoMLJobFluentBuilder::model_deploy_config) / [`set_model_deploy_config(Option<ModelDeployConfig>)`](crate::operation::create_auto_ml_job::builders::CreateAutoMLJobFluentBuilder::set_model_deploy_config):<br>required: **false**<br><p>Specifies how to generate the endpoint name for an automatic one-click Autopilot model deployment.</p><br>
    /// - On success, responds with [`CreateAutoMlJobOutput`](crate::operation::create_auto_ml_job::CreateAutoMlJobOutput) with field(s):
    ///   - [`auto_ml_job_arn(Option<String>)`](crate::operation::create_auto_ml_job::CreateAutoMlJobOutput::auto_ml_job_arn): <p>The unique ARN assigned to the AutoML job when it is created.</p>
    /// - On failure, responds with [`SdkError<CreateAutoMLJobError>`](crate::operation::create_auto_ml_job::CreateAutoMLJobError)
    pub fn create_auto_ml_job(&self) -> crate::operation::create_auto_ml_job::builders::CreateAutoMLJobFluentBuilder {
        crate::operation::create_auto_ml_job::builders::CreateAutoMLJobFluentBuilder::new(self.handle.clone())
    }
}
