// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_start_call_analytics_job_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::start_call_analytics_job::StartCallAnalyticsJobInput,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.call_analytics_job_name {
        object.key("CallAnalyticsJobName").string(var_1.as_str());
    }
    if let Some(var_2) = &input.media {
        #[allow(unused_mut)]
        let mut object_3 = object.key("Media").start_object();
        crate::protocol_serde::shape_media::ser_media(&mut object_3, var_2)?;
        object_3.finish();
    }
    if let Some(var_4) = &input.output_location {
        object.key("OutputLocation").string(var_4.as_str());
    }
    if let Some(var_5) = &input.output_encryption_kms_key_id {
        object.key("OutputEncryptionKMSKeyId").string(var_5.as_str());
    }
    if let Some(var_6) = &input.data_access_role_arn {
        object.key("DataAccessRoleArn").string(var_6.as_str());
    }
    if let Some(var_7) = &input.settings {
        #[allow(unused_mut)]
        let mut object_8 = object.key("Settings").start_object();
        crate::protocol_serde::shape_call_analytics_job_settings::ser_call_analytics_job_settings(&mut object_8, var_7)?;
        object_8.finish();
    }
    if let Some(var_9) = &input.channel_definitions {
        let mut array_10 = object.key("ChannelDefinitions").start_array();
        for item_11 in var_9 {
            {
                #[allow(unused_mut)]
                let mut object_12 = array_10.value().start_object();
                crate::protocol_serde::shape_channel_definition::ser_channel_definition(&mut object_12, item_11)?;
                object_12.finish();
            }
        }
        array_10.finish();
    }
    Ok(())
}
