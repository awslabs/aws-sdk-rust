// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Provides information on the speech contained in a discreet utterance when multi-language identification is enabled in your request. This utterance represents a block of speech consisting of one language, preceded or followed by a block of speech in a different language.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct LanguageCodeItem {
    /// <p>Provides the language code for each language identified in your media.</p>
    #[doc(hidden)]
    pub language_code: std::option::Option<crate::types::LanguageCode>,
    /// <p>Provides the total time, in seconds, each identified language is spoken in your media.</p>
    #[doc(hidden)]
    pub duration_in_seconds: std::option::Option<f32>,
}
impl LanguageCodeItem {
    /// <p>Provides the language code for each language identified in your media.</p>
    pub fn language_code(&self) -> std::option::Option<&crate::types::LanguageCode> {
        self.language_code.as_ref()
    }
    /// <p>Provides the total time, in seconds, each identified language is spoken in your media.</p>
    pub fn duration_in_seconds(&self) -> std::option::Option<f32> {
        self.duration_in_seconds
    }
}
impl LanguageCodeItem {
    /// Creates a new builder-style object to manufacture [`LanguageCodeItem`](crate::types::LanguageCodeItem).
    pub fn builder() -> crate::types::builders::LanguageCodeItemBuilder {
        crate::types::builders::LanguageCodeItemBuilder::default()
    }
}

/// A builder for [`LanguageCodeItem`](crate::types::LanguageCodeItem).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct LanguageCodeItemBuilder {
    pub(crate) language_code: std::option::Option<crate::types::LanguageCode>,
    pub(crate) duration_in_seconds: std::option::Option<f32>,
}
impl LanguageCodeItemBuilder {
    /// <p>Provides the language code for each language identified in your media.</p>
    pub fn language_code(mut self, input: crate::types::LanguageCode) -> Self {
        self.language_code = Some(input);
        self
    }
    /// <p>Provides the language code for each language identified in your media.</p>
    pub fn set_language_code(
        mut self,
        input: std::option::Option<crate::types::LanguageCode>,
    ) -> Self {
        self.language_code = input;
        self
    }
    /// <p>Provides the total time, in seconds, each identified language is spoken in your media.</p>
    pub fn duration_in_seconds(mut self, input: f32) -> Self {
        self.duration_in_seconds = Some(input);
        self
    }
    /// <p>Provides the total time, in seconds, each identified language is spoken in your media.</p>
    pub fn set_duration_in_seconds(mut self, input: std::option::Option<f32>) -> Self {
        self.duration_in_seconds = input;
        self
    }
    /// Consumes the builder and constructs a [`LanguageCodeItem`](crate::types::LanguageCodeItem).
    pub fn build(self) -> crate::types::LanguageCodeItem {
        crate::types::LanguageCodeItem {
            language_code: self.language_code,
            duration_in_seconds: self.duration_in_seconds,
        }
    }
}
