// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateLanguageModel`](crate::operation::create_language_model::builders::CreateLanguageModelFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`language_code(ClmLanguageCode)`](crate::operation::create_language_model::builders::CreateLanguageModelFluentBuilder::language_code) / [`set_language_code(Option<ClmLanguageCode>)`](crate::operation::create_language_model::builders::CreateLanguageModelFluentBuilder::set_language_code):<br>required: **true**<br><p>The language code that represents the language of your model. Each custom language model must contain terms in only one language, and the language you select for your custom language model must match the language of your training and tuning data.</p>  <p>For a list of supported languages and their associated language codes, refer to the <a href="https://docs.aws.amazon.com/transcribe/latest/dg/supported-languages.html">Supported languages</a> table. Note that US English (<code>en-US</code>) is the only language supported with Amazon Transcribe Medical.</p>  <p>A custom language model can only be used to transcribe files in the same language as the model. For example, if you create a custom language model using US English (<code>en-US</code>), you can only apply this model to files that contain English audio.</p><br>
    ///   - [`base_model_name(BaseModelName)`](crate::operation::create_language_model::builders::CreateLanguageModelFluentBuilder::base_model_name) / [`set_base_model_name(Option<BaseModelName>)`](crate::operation::create_language_model::builders::CreateLanguageModelFluentBuilder::set_base_model_name):<br>required: **true**<br><p>The Amazon Transcribe standard language model, or base model, used to create your custom language model. Amazon Transcribe offers two options for base models: Wideband and Narrowband.</p>  <p>If the audio you want to transcribe has a sample rate of 16,000 Hz or greater, choose <code>WideBand</code>. To transcribe audio with a sample rate less than 16,000 Hz, choose <code>NarrowBand</code>.</p><br>
    ///   - [`model_name(impl Into<String>)`](crate::operation::create_language_model::builders::CreateLanguageModelFluentBuilder::model_name) / [`set_model_name(Option<String>)`](crate::operation::create_language_model::builders::CreateLanguageModelFluentBuilder::set_model_name):<br>required: **true**<br><p>A unique name, chosen by you, for your custom language model.</p>  <p>This name is case sensitive, cannot contain spaces, and must be unique within an Amazon Web Services account. If you try to create a new custom language model with the same name as an existing custom language model, you get a <code>ConflictException</code> error.</p><br>
    ///   - [`input_data_config(InputDataConfig)`](crate::operation::create_language_model::builders::CreateLanguageModelFluentBuilder::input_data_config) / [`set_input_data_config(Option<InputDataConfig>)`](crate::operation::create_language_model::builders::CreateLanguageModelFluentBuilder::set_input_data_config):<br>required: **true**<br><p>Contains the Amazon S3 location of the training data you want to use to create a new custom language model, and permissions to access this location.</p>  <p>When using <code>InputDataConfig</code>, you must include these sub-parameters: <code>S3Uri</code>, which is the Amazon S3 location of your training data, and <code>DataAccessRoleArn</code>, which is the Amazon Resource Name (ARN) of the role that has permission to access your specified Amazon S3 location. You can optionally include <code>TuningDataS3Uri</code>, which is the Amazon S3 location of your tuning data. If you specify different Amazon S3 locations for training and tuning data, the ARN you use must have permissions to access both locations.</p><br>
    ///   - [`tags(Tag)`](crate::operation::create_language_model::builders::CreateLanguageModelFluentBuilder::tags) / [`set_tags(Option<Vec::<Tag>>)`](crate::operation::create_language_model::builders::CreateLanguageModelFluentBuilder::set_tags):<br>required: **false**<br><p>Adds one or more custom tags, each in the form of a key:value pair, to a new custom language model at the time you create this new model.</p>  <p>To learn more about using tags with Amazon Transcribe, refer to <a href="https://docs.aws.amazon.com/transcribe/latest/dg/tagging.html">Tagging resources</a>.</p><br>
    /// - On success, responds with [`CreateLanguageModelOutput`](crate::operation::create_language_model::CreateLanguageModelOutput) with field(s):
    ///   - [`language_code(Option<ClmLanguageCode>)`](crate::operation::create_language_model::CreateLanguageModelOutput::language_code): <p>The language code you selected for your custom language model.</p>
    ///   - [`base_model_name(Option<BaseModelName>)`](crate::operation::create_language_model::CreateLanguageModelOutput::base_model_name): <p>The Amazon Transcribe standard language model, or base model, you specified when creating your custom language model.</p>
    ///   - [`model_name(Option<String>)`](crate::operation::create_language_model::CreateLanguageModelOutput::model_name): <p>The name of your custom language model.</p>
    ///   - [`input_data_config(Option<InputDataConfig>)`](crate::operation::create_language_model::CreateLanguageModelOutput::input_data_config): <p>Lists your data access role ARN (Amazon Resource Name) and the Amazon S3 locations you provided for your training (<code>S3Uri</code>) and tuning (<code>TuningDataS3Uri</code>) data.</p>
    ///   - [`model_status(Option<ModelStatus>)`](crate::operation::create_language_model::CreateLanguageModelOutput::model_status): <p>The status of your custom language model. When the status displays as <code>COMPLETED</code>, your model is ready to use.</p>
    /// - On failure, responds with [`SdkError<CreateLanguageModelError>`](crate::operation::create_language_model::CreateLanguageModelError)
    pub fn create_language_model(&self) -> crate::operation::create_language_model::builders::CreateLanguageModelFluentBuilder {
        crate::operation::create_language_model::builders::CreateLanguageModelFluentBuilder::new(self.handle.clone())
    }
}
