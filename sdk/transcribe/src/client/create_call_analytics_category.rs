// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateCallAnalyticsCategory`](crate::operation::create_call_analytics_category::builders::CreateCallAnalyticsCategoryFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`category_name(impl Into<String>)`](crate::operation::create_call_analytics_category::builders::CreateCallAnalyticsCategoryFluentBuilder::category_name) / [`set_category_name(Option<String>)`](crate::operation::create_call_analytics_category::builders::CreateCallAnalyticsCategoryFluentBuilder::set_category_name):<br>required: **true**<br><p>A unique name, chosen by you, for your Call Analytics category. It's helpful to use a detailed naming system that will make sense to you in the future. For example, it's better to use <code>sentiment-positive-last30seconds</code> for a category over a generic name like <code>test-category</code>.</p>  <p>Category names are case sensitive.</p><br>
    ///   - [`rules(Rule)`](crate::operation::create_call_analytics_category::builders::CreateCallAnalyticsCategoryFluentBuilder::rules) / [`set_rules(Option<Vec::<Rule>>)`](crate::operation::create_call_analytics_category::builders::CreateCallAnalyticsCategoryFluentBuilder::set_rules):<br>required: **true**<br><p>Rules define a Call Analytics category. When creating a new category, you must create between 1 and 20 rules for that category. For each rule, you specify a filter you want applied to the attributes of a call. For example, you can choose a sentiment filter that detects if a customer's sentiment was positive during the last 30 seconds of the call.</p><br>
    ///   - [`input_type(InputType)`](crate::operation::create_call_analytics_category::builders::CreateCallAnalyticsCategoryFluentBuilder::input_type) / [`set_input_type(Option<InputType>)`](crate::operation::create_call_analytics_category::builders::CreateCallAnalyticsCategoryFluentBuilder::set_input_type):<br>required: **false**<br><p>Choose whether you want to create a real-time or a post-call category for your Call Analytics transcription.</p>  <p>Specifying <code>POST_CALL</code> assigns your category to post-call transcriptions; categories with this input type cannot be applied to streaming (real-time) transcriptions.</p>  <p>Specifying <code>REAL_TIME</code> assigns your category to streaming transcriptions; categories with this input type cannot be applied to post-call transcriptions.</p>  <p>If you do not include <code>InputType</code>, your category is created as a post-call category by default.</p><br>
    /// - On success, responds with [`CreateCallAnalyticsCategoryOutput`](crate::operation::create_call_analytics_category::CreateCallAnalyticsCategoryOutput) with field(s):
    ///   - [`category_properties(Option<CategoryProperties>)`](crate::operation::create_call_analytics_category::CreateCallAnalyticsCategoryOutput::category_properties): <p>Provides you with the properties of your new category, including its associated rules.</p>
    /// - On failure, responds with [`SdkError<CreateCallAnalyticsCategoryError>`](crate::operation::create_call_analytics_category::CreateCallAnalyticsCategoryError)
    pub fn create_call_analytics_category(
        &self,
    ) -> crate::operation::create_call_analytics_category::builders::CreateCallAnalyticsCategoryFluentBuilder {
        crate::operation::create_call_analytics_category::builders::CreateCallAnalyticsCategoryFluentBuilder::new(self.handle.clone())
    }
}
