// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`SignalApplicationInstanceNodeInstances`](crate::operation::signal_application_instance_node_instances::builders::SignalApplicationInstanceNodeInstancesFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_instance_id(impl Into<String>)`](crate::operation::signal_application_instance_node_instances::builders::SignalApplicationInstanceNodeInstancesFluentBuilder::application_instance_id) / [`set_application_instance_id(Option<String>)`](crate::operation::signal_application_instance_node_instances::builders::SignalApplicationInstanceNodeInstancesFluentBuilder::set_application_instance_id): <p>An application instance ID.</p>
    ///   - [`node_signals(Vec<NodeSignal>)`](crate::operation::signal_application_instance_node_instances::builders::SignalApplicationInstanceNodeInstancesFluentBuilder::node_signals) / [`set_node_signals(Option<Vec<NodeSignal>>)`](crate::operation::signal_application_instance_node_instances::builders::SignalApplicationInstanceNodeInstancesFluentBuilder::set_node_signals): <p>A list of signals.</p>
    /// - On success, responds with [`SignalApplicationInstanceNodeInstancesOutput`](crate::operation::signal_application_instance_node_instances::SignalApplicationInstanceNodeInstancesOutput) with field(s):
    ///   - [`application_instance_id(Option<String>)`](crate::operation::signal_application_instance_node_instances::SignalApplicationInstanceNodeInstancesOutput::application_instance_id): <p>An application instance ID.</p>
    /// - On failure, responds with [`SdkError<SignalApplicationInstanceNodeInstancesError>`](crate::operation::signal_application_instance_node_instances::SignalApplicationInstanceNodeInstancesError)
    pub fn signal_application_instance_node_instances(&self) -> crate::operation::signal_application_instance_node_instances::builders::SignalApplicationInstanceNodeInstancesFluentBuilder{
        crate::operation::signal_application_instance_node_instances::builders::SignalApplicationInstanceNodeInstancesFluentBuilder::new(self.handle.clone())
    }
}
