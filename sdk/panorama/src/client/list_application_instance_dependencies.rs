// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListApplicationInstanceDependencies`](crate::client::fluent_builders::ListApplicationInstanceDependencies) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListApplicationInstanceDependencies::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_instance_id(impl Into<String>)`](crate::client::fluent_builders::ListApplicationInstanceDependencies::application_instance_id) / [`set_application_instance_id(Option<String>)`](crate::client::fluent_builders::ListApplicationInstanceDependencies::set_application_instance_id): <p>The application instance's ID.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListApplicationInstanceDependencies::max_results) / [`set_max_results(i32)`](crate::client::fluent_builders::ListApplicationInstanceDependencies::set_max_results): <p>The maximum number of application instance dependencies to return in one page of results.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListApplicationInstanceDependencies::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListApplicationInstanceDependencies::set_next_token): <p>Specify the pagination token from a previous request to retrieve the next page of results.</p>
    /// - On success, responds with [`ListApplicationInstanceDependenciesOutput`](crate::output::ListApplicationInstanceDependenciesOutput) with field(s):
    ///   - [`package_objects(Option<Vec<PackageObject>>)`](crate::output::ListApplicationInstanceDependenciesOutput::package_objects): <p>A list of package objects.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListApplicationInstanceDependenciesOutput::next_token): <p>A pagination token that's included if more results are available.</p>
    /// - On failure, responds with [`SdkError<ListApplicationInstanceDependenciesError>`](crate::error::ListApplicationInstanceDependenciesError)
    pub fn list_application_instance_dependencies(
        &self,
    ) -> crate::client::fluent_builders::ListApplicationInstanceDependencies {
        crate::client::fluent_builders::ListApplicationInstanceDependencies::new(
            self.handle.clone(),
        )
    }
}
