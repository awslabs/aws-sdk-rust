// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListDevices`](crate::client::fluent_builders::ListDevices) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListDevices::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListDevices::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListDevices::set_next_token): <p>Specify the pagination token from a previous request to retrieve the next page of results.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListDevices::max_results) / [`set_max_results(i32)`](crate::client::fluent_builders::ListDevices::set_max_results): <p>The maximum number of devices to return in one page of results.</p>
    ///   - [`sort_by(ListDevicesSortBy)`](crate::client::fluent_builders::ListDevices::sort_by) / [`set_sort_by(Option<ListDevicesSortBy>)`](crate::client::fluent_builders::ListDevices::set_sort_by): <p>The target column to be sorted on. Default column sort is CREATED_TIME.</p>
    ///   - [`sort_order(SortOrder)`](crate::client::fluent_builders::ListDevices::sort_order) / [`set_sort_order(Option<SortOrder>)`](crate::client::fluent_builders::ListDevices::set_sort_order): <p>The sorting order for the returned list. SortOrder is DESCENDING by default based on CREATED_TIME. Otherwise, SortOrder is ASCENDING.</p>
    ///   - [`name_filter(impl Into<String>)`](crate::client::fluent_builders::ListDevices::name_filter) / [`set_name_filter(Option<String>)`](crate::client::fluent_builders::ListDevices::set_name_filter): <p>Filter based on device's name. Prefixes supported.</p>
    ///   - [`device_aggregated_status_filter(DeviceAggregatedStatus)`](crate::client::fluent_builders::ListDevices::device_aggregated_status_filter) / [`set_device_aggregated_status_filter(Option<DeviceAggregatedStatus>)`](crate::client::fluent_builders::ListDevices::set_device_aggregated_status_filter): <p>Filter based on a device's status.</p>
    /// - On success, responds with [`ListDevicesOutput`](crate::output::ListDevicesOutput) with field(s):
    ///   - [`devices(Option<Vec<Device>>)`](crate::output::ListDevicesOutput::devices): <p>A list of devices.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListDevicesOutput::next_token): <p>A pagination token that's included if more results are available.</p>
    /// - On failure, responds with [`SdkError<ListDevicesError>`](crate::error::ListDevicesError)
    pub fn list_devices(&self) -> crate::client::fluent_builders::ListDevices {
        crate::client::fluent_builders::ListDevices::new(self.handle.clone())
    }
}
