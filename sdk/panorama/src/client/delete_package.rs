// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeletePackage`](crate::operation::delete_package::builders::DeletePackageFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`package_id(impl Into<String>)`](crate::operation::delete_package::builders::DeletePackageFluentBuilder::package_id) / [`set_package_id(Option<String>)`](crate::operation::delete_package::builders::DeletePackageFluentBuilder::set_package_id):<br>required: **true**<br><p>The package's ID.</p><br>
    ///   - [`force_delete(bool)`](crate::operation::delete_package::builders::DeletePackageFluentBuilder::force_delete) / [`set_force_delete(Option<bool>)`](crate::operation::delete_package::builders::DeletePackageFluentBuilder::set_force_delete):<br>required: **false**<br><p>Delete the package even if it has artifacts stored in its access point. Deletes the package's artifacts from Amazon S3.</p><br>
    /// - On success, responds with [`DeletePackageOutput`](crate::operation::delete_package::DeletePackageOutput)
    /// - On failure, responds with [`SdkError<DeletePackageError>`](crate::operation::delete_package::DeletePackageError)
    pub fn delete_package(&self) -> crate::operation::delete_package::builders::DeletePackageFluentBuilder {
        crate::operation::delete_package::builders::DeletePackageFluentBuilder::new(self.handle.clone())
    }
}
