// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_create_package_import_job_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::create_package_import_job::CreatePackageImportJobInput,
) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    if let Some(var_1) = &input.client_token {
        object.key("ClientToken").string(var_1.as_str());
    }
    if let Some(var_2) = &input.input_config {
        #[allow(unused_mut)]
        let mut object_3 = object.key("InputConfig").start_object();
        crate::protocol_serde::shape_package_import_job_input_config::ser_package_import_job_input_config(&mut object_3, var_2)?;
        object_3.finish();
    }
    if let Some(var_4) = &input.job_tags {
        let mut array_5 = object.key("JobTags").start_array();
        for item_6 in var_4 {
            {
                #[allow(unused_mut)]
                let mut object_7 = array_5.value().start_object();
                crate::protocol_serde::shape_job_resource_tags::ser_job_resource_tags(
                    &mut object_7,
                    item_6,
                )?;
                object_7.finish();
            }
        }
        array_5.finish();
    }
    if let Some(var_8) = &input.job_type {
        object.key("JobType").string(var_8.as_str());
    }
    if let Some(var_9) = &input.output_config {
        #[allow(unused_mut)]
        let mut object_10 = object.key("OutputConfig").start_object();
        crate::protocol_serde::shape_package_import_job_output_config::ser_package_import_job_output_config(&mut object_10, var_9)?;
        object_10.finish();
    }
    Ok(())
}
