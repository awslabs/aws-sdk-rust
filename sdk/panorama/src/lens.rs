// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) fn reflens_list_application_instance_dependencies_output_next_token(
    input: &crate::operation::list_application_instance_dependencies::ListApplicationInstanceDependenciesOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_application_instance_node_instances_output_next_token(
    input: &crate::operation::list_application_instance_node_instances::ListApplicationInstanceNodeInstancesOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_application_instances_output_next_token(
    input: &crate::operation::list_application_instances::ListApplicationInstancesOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_devices_output_next_token(
    input: &crate::operation::list_devices::ListDevicesOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_devices_jobs_output_next_token(
    input: &crate::operation::list_devices_jobs::ListDevicesJobsOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_node_from_template_jobs_output_next_token(
    input: &crate::operation::list_node_from_template_jobs::ListNodeFromTemplateJobsOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_nodes_output_next_token(
    input: &crate::operation::list_nodes::ListNodesOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_package_import_jobs_output_next_token(
    input: &crate::operation::list_package_import_jobs::ListPackageImportJobsOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_packages_output_next_token(
    input: &crate::operation::list_packages::ListPackagesOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}
