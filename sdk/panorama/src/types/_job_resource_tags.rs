// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Tags for a job.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct JobResourceTags {
    /// <p>The job's type.</p>
    pub resource_type: crate::types::JobResourceType,
    /// <p>The job's tags.</p>
    pub tags: ::std::collections::HashMap<::std::string::String, ::std::string::String>,
}
impl JobResourceTags {
    /// <p>The job's type.</p>
    pub fn resource_type(&self) -> &crate::types::JobResourceType {
        &self.resource_type
    }
    /// <p>The job's tags.</p>
    pub fn tags(&self) -> &::std::collections::HashMap<::std::string::String, ::std::string::String> {
        &self.tags
    }
}
impl JobResourceTags {
    /// Creates a new builder-style object to manufacture [`JobResourceTags`](crate::types::JobResourceTags).
    pub fn builder() -> crate::types::builders::JobResourceTagsBuilder {
        crate::types::builders::JobResourceTagsBuilder::default()
    }
}

/// A builder for [`JobResourceTags`](crate::types::JobResourceTags).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct JobResourceTagsBuilder {
    pub(crate) resource_type: ::std::option::Option<crate::types::JobResourceType>,
    pub(crate) tags: ::std::option::Option<::std::collections::HashMap<::std::string::String, ::std::string::String>>,
}
impl JobResourceTagsBuilder {
    /// <p>The job's type.</p>
    /// This field is required.
    pub fn resource_type(mut self, input: crate::types::JobResourceType) -> Self {
        self.resource_type = ::std::option::Option::Some(input);
        self
    }
    /// <p>The job's type.</p>
    pub fn set_resource_type(mut self, input: ::std::option::Option<crate::types::JobResourceType>) -> Self {
        self.resource_type = input;
        self
    }
    /// <p>The job's type.</p>
    pub fn get_resource_type(&self) -> &::std::option::Option<crate::types::JobResourceType> {
        &self.resource_type
    }
    /// Adds a key-value pair to `tags`.
    ///
    /// To override the contents of this collection use [`set_tags`](Self::set_tags).
    ///
    /// <p>The job's tags.</p>
    pub fn tags(mut self, k: impl ::std::convert::Into<::std::string::String>, v: impl ::std::convert::Into<::std::string::String>) -> Self {
        let mut hash_map = self.tags.unwrap_or_default();
        hash_map.insert(k.into(), v.into());
        self.tags = ::std::option::Option::Some(hash_map);
        self
    }
    /// <p>The job's tags.</p>
    pub fn set_tags(mut self, input: ::std::option::Option<::std::collections::HashMap<::std::string::String, ::std::string::String>>) -> Self {
        self.tags = input;
        self
    }
    /// <p>The job's tags.</p>
    pub fn get_tags(&self) -> &::std::option::Option<::std::collections::HashMap<::std::string::String, ::std::string::String>> {
        &self.tags
    }
    /// Consumes the builder and constructs a [`JobResourceTags`](crate::types::JobResourceTags).
    /// This method will fail if any of the following fields are not set:
    /// - [`resource_type`](crate::types::builders::JobResourceTagsBuilder::resource_type)
    /// - [`tags`](crate::types::builders::JobResourceTagsBuilder::tags)
    pub fn build(self) -> ::std::result::Result<crate::types::JobResourceTags, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::JobResourceTags {
            resource_type: self.resource_type.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "resource_type",
                    "resource_type was not specified but it is required when building JobResourceTags",
                )
            })?,
            tags: self.tags.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "tags",
                    "tags was not specified but it is required when building JobResourceTags",
                )
            })?,
        })
    }
}
