// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Returns information about the latest device job.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct LatestDeviceJob {
    /// <p>The target version of the device software.</p>
    #[doc(hidden)]
    pub image_version: std::option::Option<std::string::String>,
    /// <p>Status of the latest device job.</p>
    #[doc(hidden)]
    pub status: std::option::Option<crate::types::UpdateProgress>,
    /// <p>The job's type.</p>
    #[doc(hidden)]
    pub job_type: std::option::Option<crate::types::JobType>,
}
impl LatestDeviceJob {
    /// <p>The target version of the device software.</p>
    pub fn image_version(&self) -> std::option::Option<&str> {
        self.image_version.as_deref()
    }
    /// <p>Status of the latest device job.</p>
    pub fn status(&self) -> std::option::Option<&crate::types::UpdateProgress> {
        self.status.as_ref()
    }
    /// <p>The job's type.</p>
    pub fn job_type(&self) -> std::option::Option<&crate::types::JobType> {
        self.job_type.as_ref()
    }
}
impl LatestDeviceJob {
    /// Creates a new builder-style object to manufacture [`LatestDeviceJob`](crate::types::LatestDeviceJob).
    pub fn builder() -> crate::types::builders::LatestDeviceJobBuilder {
        crate::types::builders::LatestDeviceJobBuilder::default()
    }
}

/// A builder for [`LatestDeviceJob`](crate::types::LatestDeviceJob).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct LatestDeviceJobBuilder {
    pub(crate) image_version: std::option::Option<std::string::String>,
    pub(crate) status: std::option::Option<crate::types::UpdateProgress>,
    pub(crate) job_type: std::option::Option<crate::types::JobType>,
}
impl LatestDeviceJobBuilder {
    /// <p>The target version of the device software.</p>
    pub fn image_version(mut self, input: impl Into<std::string::String>) -> Self {
        self.image_version = Some(input.into());
        self
    }
    /// <p>The target version of the device software.</p>
    pub fn set_image_version(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.image_version = input;
        self
    }
    /// <p>Status of the latest device job.</p>
    pub fn status(mut self, input: crate::types::UpdateProgress) -> Self {
        self.status = Some(input);
        self
    }
    /// <p>Status of the latest device job.</p>
    pub fn set_status(mut self, input: std::option::Option<crate::types::UpdateProgress>) -> Self {
        self.status = input;
        self
    }
    /// <p>The job's type.</p>
    pub fn job_type(mut self, input: crate::types::JobType) -> Self {
        self.job_type = Some(input);
        self
    }
    /// <p>The job's type.</p>
    pub fn set_job_type(mut self, input: std::option::Option<crate::types::JobType>) -> Self {
        self.job_type = input;
        self
    }
    /// Consumes the builder and constructs a [`LatestDeviceJob`](crate::types::LatestDeviceJob).
    pub fn build(self) -> crate::types::LatestDeviceJob {
        crate::types::LatestDeviceJob {
            image_version: self.image_version,
            status: self.status,
            job_type: self.job_type,
        }
    }
}
