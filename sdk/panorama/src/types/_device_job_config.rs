// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A job's configuration.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DeviceJobConfig {
    /// <p>A configuration for an over-the-air (OTA) upgrade. Required for OTA jobs.</p>
    #[doc(hidden)]
    pub ota_job_config: std::option::Option<crate::types::OtaJobConfig>,
}
impl DeviceJobConfig {
    /// <p>A configuration for an over-the-air (OTA) upgrade. Required for OTA jobs.</p>
    pub fn ota_job_config(&self) -> std::option::Option<&crate::types::OtaJobConfig> {
        self.ota_job_config.as_ref()
    }
}
impl DeviceJobConfig {
    /// Creates a new builder-style object to manufacture [`DeviceJobConfig`](crate::types::DeviceJobConfig).
    pub fn builder() -> crate::types::builders::DeviceJobConfigBuilder {
        crate::types::builders::DeviceJobConfigBuilder::default()
    }
}

/// A builder for [`DeviceJobConfig`](crate::types::DeviceJobConfig).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DeviceJobConfigBuilder {
    pub(crate) ota_job_config: std::option::Option<crate::types::OtaJobConfig>,
}
impl DeviceJobConfigBuilder {
    /// <p>A configuration for an over-the-air (OTA) upgrade. Required for OTA jobs.</p>
    pub fn ota_job_config(mut self, input: crate::types::OtaJobConfig) -> Self {
        self.ota_job_config = Some(input);
        self
    }
    /// <p>A configuration for an over-the-air (OTA) upgrade. Required for OTA jobs.</p>
    pub fn set_ota_job_config(
        mut self,
        input: std::option::Option<crate::types::OtaJobConfig>,
    ) -> Self {
        self.ota_job_config = input;
        self
    }
    /// Consumes the builder and constructs a [`DeviceJobConfig`](crate::types::DeviceJobConfig).
    pub fn build(self) -> crate::types::DeviceJobConfig {
        crate::types::DeviceJobConfig {
            ota_job_config: self.ota_job_config,
        }
    }
}
