// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A node interface.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct NodeInterface {
    /// <p>The node interface's inputs.</p>
    pub inputs: ::std::vec::Vec<crate::types::NodeInputPort>,
    /// <p>The node interface's outputs.</p>
    pub outputs: ::std::vec::Vec<crate::types::NodeOutputPort>,
}
impl NodeInterface {
    /// <p>The node interface's inputs.</p>
    pub fn inputs(&self) -> &[crate::types::NodeInputPort] {
        use std::ops::Deref;
        self.inputs.deref()
    }
    /// <p>The node interface's outputs.</p>
    pub fn outputs(&self) -> &[crate::types::NodeOutputPort] {
        use std::ops::Deref;
        self.outputs.deref()
    }
}
impl NodeInterface {
    /// Creates a new builder-style object to manufacture [`NodeInterface`](crate::types::NodeInterface).
    pub fn builder() -> crate::types::builders::NodeInterfaceBuilder {
        crate::types::builders::NodeInterfaceBuilder::default()
    }
}

/// A builder for [`NodeInterface`](crate::types::NodeInterface).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct NodeInterfaceBuilder {
    pub(crate) inputs: ::std::option::Option<::std::vec::Vec<crate::types::NodeInputPort>>,
    pub(crate) outputs: ::std::option::Option<::std::vec::Vec<crate::types::NodeOutputPort>>,
}
impl NodeInterfaceBuilder {
    /// Appends an item to `inputs`.
    ///
    /// To override the contents of this collection use [`set_inputs`](Self::set_inputs).
    ///
    /// <p>The node interface's inputs.</p>
    pub fn inputs(mut self, input: crate::types::NodeInputPort) -> Self {
        let mut v = self.inputs.unwrap_or_default();
        v.push(input);
        self.inputs = ::std::option::Option::Some(v);
        self
    }
    /// <p>The node interface's inputs.</p>
    pub fn set_inputs(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::NodeInputPort>>) -> Self {
        self.inputs = input;
        self
    }
    /// <p>The node interface's inputs.</p>
    pub fn get_inputs(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::NodeInputPort>> {
        &self.inputs
    }
    /// Appends an item to `outputs`.
    ///
    /// To override the contents of this collection use [`set_outputs`](Self::set_outputs).
    ///
    /// <p>The node interface's outputs.</p>
    pub fn outputs(mut self, input: crate::types::NodeOutputPort) -> Self {
        let mut v = self.outputs.unwrap_or_default();
        v.push(input);
        self.outputs = ::std::option::Option::Some(v);
        self
    }
    /// <p>The node interface's outputs.</p>
    pub fn set_outputs(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::NodeOutputPort>>) -> Self {
        self.outputs = input;
        self
    }
    /// <p>The node interface's outputs.</p>
    pub fn get_outputs(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::NodeOutputPort>> {
        &self.outputs
    }
    /// Consumes the builder and constructs a [`NodeInterface`](crate::types::NodeInterface).
    /// This method will fail if any of the following fields are not set:
    /// - [`inputs`](crate::types::builders::NodeInterfaceBuilder::inputs)
    /// - [`outputs`](crate::types::builders::NodeInterfaceBuilder::outputs)
    pub fn build(self) -> ::std::result::Result<crate::types::NodeInterface, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::NodeInterface {
            inputs: self.inputs.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "inputs",
                    "inputs was not specified but it is required when building NodeInterface",
                )
            })?,
            outputs: self.outputs.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "outputs",
                    "outputs was not specified but it is required when building NodeInterface",
                )
            })?,
        })
    }
}
