// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListImportFileTask`](crate::operation::list_import_file_task::builders::ListImportFileTaskFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::list_import_file_task::builders::ListImportFileTaskFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`next_token(impl Into<String>)`](crate::operation::list_import_file_task::builders::ListImportFileTaskFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::list_import_file_task::builders::ListImportFileTaskFluentBuilder::set_next_token):<br>required: **false**<br><p> The token from a previous call that you use to retrieve the next set of results. For example, if a previous call to this action returned 100 items, but you set <code>maxResults</code> to 10. You'll receive a set of 10 results along with a token. You then use the returned token to retrieve the next set of 10. </p><br>
    ///   - [`max_results(i32)`](crate::operation::list_import_file_task::builders::ListImportFileTaskFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::list_import_file_task::builders::ListImportFileTaskFluentBuilder::set_max_results):<br>required: **false**<br><p> The total number of items to return. The maximum value is 100. </p><br>
    /// - On success, responds with [`ListImportFileTaskOutput`](crate::operation::list_import_file_task::ListImportFileTaskOutput) with field(s):
    ///   - [`task_infos(Option<Vec::<ImportFileTaskInformation>>)`](crate::operation::list_import_file_task::ListImportFileTaskOutput::task_infos): <p> Lists information about the files you import.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::list_import_file_task::ListImportFileTaskOutput::next_token): <p> The token you use to retrieve the next set of results, or null if there are no more results. </p>
    /// - On failure, responds with [`SdkError<ListImportFileTaskError>`](crate::operation::list_import_file_task::ListImportFileTaskError)
    pub fn list_import_file_task(&self) -> crate::operation::list_import_file_task::builders::ListImportFileTaskFluentBuilder {
        crate::operation::list_import_file_task::builders::ListImportFileTaskFluentBuilder::new(self.handle.clone())
    }
}
