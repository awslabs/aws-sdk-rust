// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetImportFileTask`](crate::client::fluent_builders::GetImportFileTask) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`id(impl Into<String>)`](crate::client::fluent_builders::GetImportFileTask::id) / [`set_id(Option<String>)`](crate::client::fluent_builders::GetImportFileTask::set_id): <p> The ID of the import file task. This ID is returned in the response of <code>StartImportFileTask</code>. </p>
    /// - On success, responds with [`GetImportFileTaskOutput`](crate::output::GetImportFileTaskOutput) with field(s):
    ///   - [`id(Option<String>)`](crate::output::GetImportFileTaskOutput::id): <p> The import file task <code>id</code> returned in the response of <code>StartImportFileTask</code>. </p>
    ///   - [`status(Option<ImportFileTaskStatus>)`](crate::output::GetImportFileTaskOutput::status): <p> Status of import file task. </p>
    ///   - [`start_time(Option<DateTime>)`](crate::output::GetImportFileTaskOutput::start_time): <p> Start time of the import task. </p>
    ///   - [`input_s3_bucket(Option<String>)`](crate::output::GetImportFileTaskOutput::input_s3_bucket): <p> The S3 bucket where import file is located. </p>
    ///   - [`input_s3_key(Option<String>)`](crate::output::GetImportFileTaskOutput::input_s3_key): <p> The Amazon S3 key name of the import file. </p>
    ///   - [`status_report_s3_bucket(Option<String>)`](crate::output::GetImportFileTaskOutput::status_report_s3_bucket): <p> The S3 bucket name for status report of import task. </p>
    ///   - [`status_report_s3_key(Option<String>)`](crate::output::GetImportFileTaskOutput::status_report_s3_key): <p> The Amazon S3 key name for status report of import task. The report contains details about whether each record imported successfully or why it did not.</p>
    ///   - [`completion_time(Option<DateTime>)`](crate::output::GetImportFileTaskOutput::completion_time): <p> The time that the import task completed. </p>
    ///   - [`number_of_records_success(Option<i32>)`](crate::output::GetImportFileTaskOutput::number_of_records_success): <p> The number of records successfully imported. </p>
    ///   - [`number_of_records_failed(Option<i32>)`](crate::output::GetImportFileTaskOutput::number_of_records_failed): <p> The number of records that failed to be imported. </p>
    ///   - [`import_name(Option<String>)`](crate::output::GetImportFileTaskOutput::import_name): <p> The name of the import task given in <code>StartImportFileTask</code>. </p>
    /// - On failure, responds with [`SdkError<GetImportFileTaskError>`](crate::error::GetImportFileTaskError)
    pub fn get_import_file_task(&self) -> crate::client::fluent_builders::GetImportFileTask {
        crate::client::fluent_builders::GetImportFileTask::new(self.handle.clone())
    }
}
