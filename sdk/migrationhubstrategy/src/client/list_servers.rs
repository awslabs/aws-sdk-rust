// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListServers`](crate::operation::list_servers::builders::ListServersFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::list_servers::builders::ListServersFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`server_criteria(ServerCriteria)`](crate::operation::list_servers::builders::ListServersFluentBuilder::server_criteria) / [`set_server_criteria(Option<ServerCriteria>)`](crate::operation::list_servers::builders::ListServersFluentBuilder::set_server_criteria): <p> Criteria for filtering servers. </p>
    ///   - [`filter_value(impl Into<String>)`](crate::operation::list_servers::builders::ListServersFluentBuilder::filter_value) / [`set_filter_value(Option<String>)`](crate::operation::list_servers::builders::ListServersFluentBuilder::set_filter_value): <p> Specifies the filter value, which is based on the type of server criteria. For example, if <code>serverCriteria</code> is <code>OS_NAME</code>, and the <code>filterValue</code> is equal to <code>WindowsServer</code>, then <code>ListServers</code> returns all of the servers matching the OS name <code>WindowsServer</code>. </p>
    ///   - [`sort(SortOrder)`](crate::operation::list_servers::builders::ListServersFluentBuilder::sort) / [`set_sort(Option<SortOrder>)`](crate::operation::list_servers::builders::ListServersFluentBuilder::set_sort): <p> Specifies whether to sort by ascending (<code>ASC</code>) or descending (<code>DESC</code>) order. </p>
    ///   - [`group_id_filter(Vec<Group>)`](crate::operation::list_servers::builders::ListServersFluentBuilder::group_id_filter) / [`set_group_id_filter(Option<Vec<Group>>)`](crate::operation::list_servers::builders::ListServersFluentBuilder::set_group_id_filter): <p> Specifies the group ID to filter on. </p>
    ///   - [`next_token(impl Into<String>)`](crate::operation::list_servers::builders::ListServersFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::list_servers::builders::ListServersFluentBuilder::set_next_token): <p> The token from a previous call that you use to retrieve the next set of results. For example, if a previous call to this action returned 100 items, but you set <code>maxResults</code> to 10. You'll receive a set of 10 results along with a token. You then use the returned token to retrieve the next set of 10. </p>
    ///   - [`max_results(i32)`](crate::operation::list_servers::builders::ListServersFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::list_servers::builders::ListServersFluentBuilder::set_max_results): <p> The maximum number of items to include in the response. The maximum value is 100. </p>
    /// - On success, responds with [`ListServersOutput`](crate::operation::list_servers::ListServersOutput) with field(s):
    ///   - [`server_infos(Option<Vec<ServerDetail>>)`](crate::operation::list_servers::ListServersOutput::server_infos): <p> The list of servers with detailed information about each server. </p>
    ///   - [`next_token(Option<String>)`](crate::operation::list_servers::ListServersOutput::next_token): <p> The token you use to retrieve the next set of results, or null if there are no more results. </p>
    /// - On failure, responds with [`SdkError<ListServersError>`](crate::operation::list_servers::ListServersError)
    pub fn list_servers(
        &self,
    ) -> crate::operation::list_servers::builders::ListServersFluentBuilder {
        crate::operation::list_servers::builders::ListServersFluentBuilder::new(self.handle.clone())
    }
}
