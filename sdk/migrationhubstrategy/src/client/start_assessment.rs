// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`StartAssessment`](crate::operation::start_assessment::builders::StartAssessmentFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`s3bucket_for_analysis_data(impl Into<String>)`](crate::operation::start_assessment::builders::StartAssessmentFluentBuilder::s3bucket_for_analysis_data) / [`set_s3bucket_for_analysis_data(Option<String>)`](crate::operation::start_assessment::builders::StartAssessmentFluentBuilder::set_s3bucket_for_analysis_data):<br>required: **false**<br><p> The S3 bucket used by the collectors to send analysis data to the service. The bucket name must begin with <code>migrationhub-strategy-</code>. </p><br>
    ///   - [`s3bucket_for_report_data(impl Into<String>)`](crate::operation::start_assessment::builders::StartAssessmentFluentBuilder::s3bucket_for_report_data) / [`set_s3bucket_for_report_data(Option<String>)`](crate::operation::start_assessment::builders::StartAssessmentFluentBuilder::set_s3bucket_for_report_data):<br>required: **false**<br><p> The S3 bucket where all the reports generated by the service are stored. The bucket name must begin with <code>migrationhub-strategy-</code>. </p><br>
    ///   - [`assessment_targets(AssessmentTarget)`](crate::operation::start_assessment::builders::StartAssessmentFluentBuilder::assessment_targets) / [`set_assessment_targets(Option<Vec::<AssessmentTarget>>)`](crate::operation::start_assessment::builders::StartAssessmentFluentBuilder::set_assessment_targets):<br>required: **false**<br><p>List of criteria for assessment.</p><br>
    ///   - [`assessment_data_source_type(AssessmentDataSourceType)`](crate::operation::start_assessment::builders::StartAssessmentFluentBuilder::assessment_data_source_type) / [`set_assessment_data_source_type(Option<AssessmentDataSourceType>)`](crate::operation::start_assessment::builders::StartAssessmentFluentBuilder::set_assessment_data_source_type):<br>required: **false**<br>The data source type of an assessment to be started.<br>
    /// - On success, responds with [`StartAssessmentOutput`](crate::operation::start_assessment::StartAssessmentOutput) with field(s):
    ///   - [`assessment_id(Option<String>)`](crate::operation::start_assessment::StartAssessmentOutput::assessment_id): <p> The ID of the assessment. </p>
    /// - On failure, responds with [`SdkError<StartAssessmentError>`](crate::operation::start_assessment::StartAssessmentError)
    pub fn start_assessment(&self) -> crate::operation::start_assessment::builders::StartAssessmentFluentBuilder {
        crate::operation::start_assessment::builders::StartAssessmentFluentBuilder::new(self.handle.clone())
    }
}
