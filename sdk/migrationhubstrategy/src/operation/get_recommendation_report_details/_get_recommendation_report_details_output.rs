// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GetRecommendationReportDetailsOutput {
    /// <p> The ID of the recommendation report generation task. See the response of <code>StartRecommendationReportGeneration</code>. </p>
    #[doc(hidden)]
    pub id: std::option::Option<std::string::String>,
    /// <p> Detailed information about the recommendation report. </p>
    #[doc(hidden)]
    pub recommendation_report_details:
        std::option::Option<crate::types::RecommendationReportDetails>,
    _request_id: Option<String>,
}
impl GetRecommendationReportDetailsOutput {
    /// <p> The ID of the recommendation report generation task. See the response of <code>StartRecommendationReportGeneration</code>. </p>
    pub fn id(&self) -> std::option::Option<&str> {
        self.id.as_deref()
    }
    /// <p> Detailed information about the recommendation report. </p>
    pub fn recommendation_report_details(
        &self,
    ) -> std::option::Option<&crate::types::RecommendationReportDetails> {
        self.recommendation_report_details.as_ref()
    }
}
impl aws_http::request_id::RequestId for GetRecommendationReportDetailsOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl GetRecommendationReportDetailsOutput {
    /// Creates a new builder-style object to manufacture [`GetRecommendationReportDetailsOutput`](crate::operation::get_recommendation_report_details::GetRecommendationReportDetailsOutput).
    pub fn builder() -> crate::operation::get_recommendation_report_details::builders::GetRecommendationReportDetailsOutputBuilder{
        crate::operation::get_recommendation_report_details::builders::GetRecommendationReportDetailsOutputBuilder::default()
    }
}

/// A builder for [`GetRecommendationReportDetailsOutput`](crate::operation::get_recommendation_report_details::GetRecommendationReportDetailsOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct GetRecommendationReportDetailsOutputBuilder {
    pub(crate) id: std::option::Option<std::string::String>,
    pub(crate) recommendation_report_details:
        std::option::Option<crate::types::RecommendationReportDetails>,
    _request_id: Option<String>,
}
impl GetRecommendationReportDetailsOutputBuilder {
    /// <p> The ID of the recommendation report generation task. See the response of <code>StartRecommendationReportGeneration</code>. </p>
    pub fn id(mut self, input: impl Into<std::string::String>) -> Self {
        self.id = Some(input.into());
        self
    }
    /// <p> The ID of the recommendation report generation task. See the response of <code>StartRecommendationReportGeneration</code>. </p>
    pub fn set_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.id = input;
        self
    }
    /// <p> Detailed information about the recommendation report. </p>
    pub fn recommendation_report_details(
        mut self,
        input: crate::types::RecommendationReportDetails,
    ) -> Self {
        self.recommendation_report_details = Some(input);
        self
    }
    /// <p> Detailed information about the recommendation report. </p>
    pub fn set_recommendation_report_details(
        mut self,
        input: std::option::Option<crate::types::RecommendationReportDetails>,
    ) -> Self {
        self.recommendation_report_details = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`GetRecommendationReportDetailsOutput`](crate::operation::get_recommendation_report_details::GetRecommendationReportDetailsOutput).
    pub fn build(
        self,
    ) -> crate::operation::get_recommendation_report_details::GetRecommendationReportDetailsOutput
    {
        crate::operation::get_recommendation_report_details::GetRecommendationReportDetailsOutput {
            id: self.id,
            recommendation_report_details: self.recommendation_report_details,
            _request_id: self._request_id,
        }
    }
}
