// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p> Information of the transformation tool that can be used to migrate and modernize the application. </p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct TransformationTool {
    /// <p> Name of the tool. </p>
    #[doc(hidden)]
    pub name: std::option::Option<crate::types::TransformationToolName>,
    /// <p> Description of the tool. </p>
    #[doc(hidden)]
    pub description: std::option::Option<std::string::String>,
    /// <p> URL for installing the tool. </p>
    #[doc(hidden)]
    pub tranformation_tool_installation_link: std::option::Option<std::string::String>,
}
impl TransformationTool {
    /// <p> Name of the tool. </p>
    pub fn name(&self) -> std::option::Option<&crate::types::TransformationToolName> {
        self.name.as_ref()
    }
    /// <p> Description of the tool. </p>
    pub fn description(&self) -> std::option::Option<&str> {
        self.description.as_deref()
    }
    /// <p> URL for installing the tool. </p>
    pub fn tranformation_tool_installation_link(&self) -> std::option::Option<&str> {
        self.tranformation_tool_installation_link.as_deref()
    }
}
impl TransformationTool {
    /// Creates a new builder-style object to manufacture [`TransformationTool`](crate::types::TransformationTool).
    pub fn builder() -> crate::types::builders::TransformationToolBuilder {
        crate::types::builders::TransformationToolBuilder::default()
    }
}

/// A builder for [`TransformationTool`](crate::types::TransformationTool).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct TransformationToolBuilder {
    pub(crate) name: std::option::Option<crate::types::TransformationToolName>,
    pub(crate) description: std::option::Option<std::string::String>,
    pub(crate) tranformation_tool_installation_link: std::option::Option<std::string::String>,
}
impl TransformationToolBuilder {
    /// <p> Name of the tool. </p>
    pub fn name(mut self, input: crate::types::TransformationToolName) -> Self {
        self.name = Some(input);
        self
    }
    /// <p> Name of the tool. </p>
    pub fn set_name(
        mut self,
        input: std::option::Option<crate::types::TransformationToolName>,
    ) -> Self {
        self.name = input;
        self
    }
    /// <p> Description of the tool. </p>
    pub fn description(mut self, input: impl Into<std::string::String>) -> Self {
        self.description = Some(input.into());
        self
    }
    /// <p> Description of the tool. </p>
    pub fn set_description(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.description = input;
        self
    }
    /// <p> URL for installing the tool. </p>
    pub fn tranformation_tool_installation_link(
        mut self,
        input: impl Into<std::string::String>,
    ) -> Self {
        self.tranformation_tool_installation_link = Some(input.into());
        self
    }
    /// <p> URL for installing the tool. </p>
    pub fn set_tranformation_tool_installation_link(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.tranformation_tool_installation_link = input;
        self
    }
    /// Consumes the builder and constructs a [`TransformationTool`](crate::types::TransformationTool).
    pub fn build(self) -> crate::types::TransformationTool {
        crate::types::TransformationTool {
            name: self.name,
            description: self.description,
            tranformation_tool_installation_link: self.tranformation_tool_installation_link,
        }
    }
}
