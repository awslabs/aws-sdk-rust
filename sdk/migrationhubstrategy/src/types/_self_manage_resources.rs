// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p> Self-managed resources. </p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct SelfManageResources {
    /// <p> Self-managed resources target destination. </p>
    #[doc(hidden)]
    pub target_destination:
        std::option::Option<std::vec::Vec<crate::types::SelfManageTargetDestination>>,
}
impl SelfManageResources {
    /// <p> Self-managed resources target destination. </p>
    pub fn target_destination(
        &self,
    ) -> std::option::Option<&[crate::types::SelfManageTargetDestination]> {
        self.target_destination.as_deref()
    }
}
impl SelfManageResources {
    /// Creates a new builder-style object to manufacture [`SelfManageResources`](crate::types::SelfManageResources).
    pub fn builder() -> crate::types::builders::SelfManageResourcesBuilder {
        crate::types::builders::SelfManageResourcesBuilder::default()
    }
}

/// A builder for [`SelfManageResources`](crate::types::SelfManageResources).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct SelfManageResourcesBuilder {
    pub(crate) target_destination:
        std::option::Option<std::vec::Vec<crate::types::SelfManageTargetDestination>>,
}
impl SelfManageResourcesBuilder {
    /// Appends an item to `target_destination`.
    ///
    /// To override the contents of this collection use [`set_target_destination`](Self::set_target_destination).
    ///
    /// <p> Self-managed resources target destination. </p>
    pub fn target_destination(mut self, input: crate::types::SelfManageTargetDestination) -> Self {
        let mut v = self.target_destination.unwrap_or_default();
        v.push(input);
        self.target_destination = Some(v);
        self
    }
    /// <p> Self-managed resources target destination. </p>
    pub fn set_target_destination(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::SelfManageTargetDestination>>,
    ) -> Self {
        self.target_destination = input;
        self
    }
    /// Consumes the builder and constructs a [`SelfManageResources`](crate::types::SelfManageResources).
    pub fn build(self) -> crate::types::SelfManageResources {
        crate::types::SelfManageResources {
            target_destination: self.target_destination,
        }
    }
}
