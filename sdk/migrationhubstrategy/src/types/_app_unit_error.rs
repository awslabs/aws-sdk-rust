// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Error in the analysis of the application unit.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AppUnitError {
    /// <p>The category of the error.</p>
    #[doc(hidden)]
    pub app_unit_error_category: std::option::Option<crate::types::AppUnitErrorCategory>,
}
impl AppUnitError {
    /// <p>The category of the error.</p>
    pub fn app_unit_error_category(
        &self,
    ) -> std::option::Option<&crate::types::AppUnitErrorCategory> {
        self.app_unit_error_category.as_ref()
    }
}
impl AppUnitError {
    /// Creates a new builder-style object to manufacture [`AppUnitError`](crate::types::AppUnitError).
    pub fn builder() -> crate::types::builders::AppUnitErrorBuilder {
        crate::types::builders::AppUnitErrorBuilder::default()
    }
}

/// A builder for [`AppUnitError`](crate::types::AppUnitError).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AppUnitErrorBuilder {
    pub(crate) app_unit_error_category: std::option::Option<crate::types::AppUnitErrorCategory>,
}
impl AppUnitErrorBuilder {
    /// <p>The category of the error.</p>
    pub fn app_unit_error_category(mut self, input: crate::types::AppUnitErrorCategory) -> Self {
        self.app_unit_error_category = Some(input);
        self
    }
    /// <p>The category of the error.</p>
    pub fn set_app_unit_error_category(
        mut self,
        input: std::option::Option<crate::types::AppUnitErrorCategory>,
    ) -> Self {
        self.app_unit_error_category = input;
        self
    }
    /// Consumes the builder and constructs a [`AppUnitError`](crate::types::AppUnitError).
    pub fn build(self) -> crate::types::AppUnitError {
        crate::types::AppUnitError {
            app_unit_error_category: self.app_unit_error_category,
        }
    }
}
