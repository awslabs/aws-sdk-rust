// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_start_import_file_task_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::start_import_file_task::StartImportFileTaskInput,
) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    if let Some(var_1) = &input.s3_bucket {
        object.key("S3Bucket").string(var_1.as_str());
    }
    if let Some(var_2) = &input.data_source_type {
        object.key("dataSourceType").string(var_2.as_str());
    }
    if let Some(var_3) = &input.group_id {
        let mut array_4 = object.key("groupId").start_array();
        for item_5 in var_3 {
            {
                #[allow(unused_mut)]
                let mut object_6 = array_4.value().start_object();
                crate::protocol_serde::shape_group::ser_group(&mut object_6, item_5)?;
                object_6.finish();
            }
        }
        array_4.finish();
    }
    if let Some(var_7) = &input.name {
        object.key("name").string(var_7.as_str());
    }
    if let Some(var_8) = &input.s3bucket_for_report_data {
        object.key("s3bucketForReportData").string(var_8.as_str());
    }
    if let Some(var_9) = &input.s3key {
        object.key("s3key").string(var_9.as_str());
    }
    Ok(())
}
