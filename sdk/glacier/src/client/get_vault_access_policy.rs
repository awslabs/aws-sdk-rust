// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetVaultAccessPolicy`](crate::client::fluent_builders::GetVaultAccessPolicy) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`account_id(impl Into<String>)`](crate::client::fluent_builders::GetVaultAccessPolicy::account_id) / [`set_account_id(Option<String>)`](crate::client::fluent_builders::GetVaultAccessPolicy::set_account_id): <p>The <code>AccountId</code> value is the AWS account ID of the account that owns the vault. You can either specify an AWS account ID or optionally a single '<code>-</code>' (hyphen), in which case Amazon S3 Glacier uses the AWS account ID associated with the credentials used to sign the request. If you use an account ID, do not include any hyphens ('-') in the ID.</p>
    ///   - [`vault_name(impl Into<String>)`](crate::client::fluent_builders::GetVaultAccessPolicy::vault_name) / [`set_vault_name(Option<String>)`](crate::client::fluent_builders::GetVaultAccessPolicy::set_vault_name): <p>The name of the vault.</p>
    /// - On success, responds with [`GetVaultAccessPolicyOutput`](crate::output::GetVaultAccessPolicyOutput) with field(s):
    ///   - [`policy(Option<VaultAccessPolicy>)`](crate::output::GetVaultAccessPolicyOutput::policy): <p>Contains the returned vault access policy as a JSON string.</p>
    /// - On failure, responds with [`SdkError<GetVaultAccessPolicyError>`](crate::error::GetVaultAccessPolicyError)
    pub fn get_vault_access_policy(&self) -> crate::client::fluent_builders::GetVaultAccessPolicy {
        crate::client::fluent_builders::GetVaultAccessPolicy::new(self.handle.clone())
    }
}
