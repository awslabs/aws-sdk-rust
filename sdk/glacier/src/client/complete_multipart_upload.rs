// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CompleteMultipartUpload`](crate::client::fluent_builders::CompleteMultipartUpload) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`account_id(impl Into<String>)`](crate::client::fluent_builders::CompleteMultipartUpload::account_id) / [`set_account_id(Option<String>)`](crate::client::fluent_builders::CompleteMultipartUpload::set_account_id): <p>The <code>AccountId</code> value is the AWS account ID of the account that owns the vault. You can either specify an AWS account ID or optionally a single '<code>-</code>' (hyphen), in which case Amazon S3 Glacier uses the AWS account ID associated with the credentials used to sign the request. If you use an account ID, do not include any hyphens ('-') in the ID.</p>
    ///   - [`vault_name(impl Into<String>)`](crate::client::fluent_builders::CompleteMultipartUpload::vault_name) / [`set_vault_name(Option<String>)`](crate::client::fluent_builders::CompleteMultipartUpload::set_vault_name): <p>The name of the vault.</p>
    ///   - [`upload_id(impl Into<String>)`](crate::client::fluent_builders::CompleteMultipartUpload::upload_id) / [`set_upload_id(Option<String>)`](crate::client::fluent_builders::CompleteMultipartUpload::set_upload_id): <p>The upload ID of the multipart upload.</p>
    ///   - [`archive_size(impl Into<String>)`](crate::client::fluent_builders::CompleteMultipartUpload::archive_size) / [`set_archive_size(Option<String>)`](crate::client::fluent_builders::CompleteMultipartUpload::set_archive_size): <p>The total size, in bytes, of the entire archive. This value should be the sum of all the sizes of the individual parts that you uploaded.</p>
    ///   - [`checksum(impl Into<String>)`](crate::client::fluent_builders::CompleteMultipartUpload::checksum) / [`set_checksum(Option<String>)`](crate::client::fluent_builders::CompleteMultipartUpload::set_checksum): <p>The SHA256 tree hash of the entire archive. It is the tree hash of SHA256 tree hash of the individual parts. If the value you specify in the request does not match the SHA256 tree hash of the final assembled archive as computed by Amazon S3 Glacier (Glacier), Glacier returns an error and the request fails.</p>
    /// - On success, responds with [`CompleteMultipartUploadOutput`](crate::output::CompleteMultipartUploadOutput) with field(s):
    ///   - [`location(Option<String>)`](crate::output::CompleteMultipartUploadOutput::location): <p>The relative URI path of the newly added archive resource.</p>
    ///   - [`checksum(Option<String>)`](crate::output::CompleteMultipartUploadOutput::checksum): <p>The checksum of the archive computed by Amazon S3 Glacier.</p>
    ///   - [`archive_id(Option<String>)`](crate::output::CompleteMultipartUploadOutput::archive_id): <p>The ID of the archive. This value is also included as part of the location.</p>
    /// - On failure, responds with [`SdkError<CompleteMultipartUploadError>`](crate::error::CompleteMultipartUploadError)
    pub fn complete_multipart_upload(
        &self,
    ) -> crate::client::fluent_builders::CompleteMultipartUpload {
        crate::client::fluent_builders::CompleteMultipartUpload::new(self.handle.clone())
    }
}
