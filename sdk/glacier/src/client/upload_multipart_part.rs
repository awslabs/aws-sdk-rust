// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UploadMultipartPart`](crate::client::fluent_builders::UploadMultipartPart) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`account_id(impl Into<String>)`](crate::client::fluent_builders::UploadMultipartPart::account_id) / [`set_account_id(Option<String>)`](crate::client::fluent_builders::UploadMultipartPart::set_account_id): <p>The <code>AccountId</code> value is the AWS account ID of the account that owns the vault. You can either specify an AWS account ID or optionally a single '<code>-</code>' (hyphen), in which case Amazon S3 Glacier uses the AWS account ID associated with the credentials used to sign the request. If you use an account ID, do not include any hyphens ('-') in the ID. </p>
    ///   - [`vault_name(impl Into<String>)`](crate::client::fluent_builders::UploadMultipartPart::vault_name) / [`set_vault_name(Option<String>)`](crate::client::fluent_builders::UploadMultipartPart::set_vault_name): <p>The name of the vault.</p>
    ///   - [`upload_id(impl Into<String>)`](crate::client::fluent_builders::UploadMultipartPart::upload_id) / [`set_upload_id(Option<String>)`](crate::client::fluent_builders::UploadMultipartPart::set_upload_id): <p>The upload ID of the multipart upload.</p>
    ///   - [`checksum(impl Into<String>)`](crate::client::fluent_builders::UploadMultipartPart::checksum) / [`set_checksum(Option<String>)`](crate::client::fluent_builders::UploadMultipartPart::set_checksum): <p>The SHA256 tree hash of the data being uploaded.</p>
    ///   - [`range(impl Into<String>)`](crate::client::fluent_builders::UploadMultipartPart::range) / [`set_range(Option<String>)`](crate::client::fluent_builders::UploadMultipartPart::set_range): <p>Identifies the range of bytes in the assembled archive that will be uploaded in this part. Amazon S3 Glacier uses this information to assemble the archive in the proper sequence. The format of this header follows RFC 2616. An example header is Content-Range:bytes 0-4194303/*.</p>
    ///   - [`body(ByteStream)`](crate::client::fluent_builders::UploadMultipartPart::body) / [`set_body(ByteStream)`](crate::client::fluent_builders::UploadMultipartPart::set_body): <p>The data to upload.</p>
    /// - On success, responds with [`UploadMultipartPartOutput`](crate::output::UploadMultipartPartOutput) with field(s):
    ///   - [`checksum(Option<String>)`](crate::output::UploadMultipartPartOutput::checksum): <p>The SHA256 tree hash that Amazon S3 Glacier computed for the uploaded part.</p>
    /// - On failure, responds with [`SdkError<UploadMultipartPartError>`](crate::error::UploadMultipartPartError)
    pub fn upload_multipart_part(&self) -> crate::client::fluent_builders::UploadMultipartPart {
        crate::client::fluent_builders::UploadMultipartPart::new(self.handle.clone())
    }
}
