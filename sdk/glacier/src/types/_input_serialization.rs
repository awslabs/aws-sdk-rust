// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Describes how the archive is serialized.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct InputSerialization {
    /// <p>Describes the serialization of a CSV-encoded object.</p>
    #[doc(hidden)]
    pub csv: std::option::Option<crate::types::CsvInput>,
}
impl InputSerialization {
    /// <p>Describes the serialization of a CSV-encoded object.</p>
    pub fn csv(&self) -> std::option::Option<&crate::types::CsvInput> {
        self.csv.as_ref()
    }
}
impl InputSerialization {
    /// Creates a new builder-style object to manufacture [`InputSerialization`](crate::types::InputSerialization).
    pub fn builder() -> crate::types::builders::InputSerializationBuilder {
        crate::types::builders::InputSerializationBuilder::default()
    }
}

/// A builder for [`InputSerialization`](crate::types::InputSerialization).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct InputSerializationBuilder {
    pub(crate) csv: std::option::Option<crate::types::CsvInput>,
}
impl InputSerializationBuilder {
    /// <p>Describes the serialization of a CSV-encoded object.</p>
    pub fn csv(mut self, input: crate::types::CsvInput) -> Self {
        self.csv = Some(input);
        self
    }
    /// <p>Describes the serialization of a CSV-encoded object.</p>
    pub fn set_csv(mut self, input: std::option::Option<crate::types::CsvInput>) -> Self {
        self.csv = input;
        self
    }
    /// Consumes the builder and constructs a [`InputSerialization`](crate::types::InputSerialization).
    pub fn build(self) -> crate::types::InputSerialization {
        crate::types::InputSerialization { csv: self.csv }
    }
}
