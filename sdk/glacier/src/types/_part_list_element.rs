// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A list of the part sizes of the multipart upload.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct PartListElement {
    /// <p>The byte range of a part, inclusive of the upper value of the range.</p>
    #[doc(hidden)]
    pub range_in_bytes: std::option::Option<std::string::String>,
    /// <p>The SHA256 tree hash value that Amazon S3 Glacier calculated for the part. This field is never <code>null</code>.</p>
    #[doc(hidden)]
    pub sha256_tree_hash: std::option::Option<std::string::String>,
}
impl PartListElement {
    /// <p>The byte range of a part, inclusive of the upper value of the range.</p>
    pub fn range_in_bytes(&self) -> std::option::Option<&str> {
        self.range_in_bytes.as_deref()
    }
    /// <p>The SHA256 tree hash value that Amazon S3 Glacier calculated for the part. This field is never <code>null</code>.</p>
    pub fn sha256_tree_hash(&self) -> std::option::Option<&str> {
        self.sha256_tree_hash.as_deref()
    }
}
impl PartListElement {
    /// Creates a new builder-style object to manufacture [`PartListElement`](crate::types::PartListElement).
    pub fn builder() -> crate::types::builders::PartListElementBuilder {
        crate::types::builders::PartListElementBuilder::default()
    }
}

/// A builder for [`PartListElement`](crate::types::PartListElement).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct PartListElementBuilder {
    pub(crate) range_in_bytes: std::option::Option<std::string::String>,
    pub(crate) sha256_tree_hash: std::option::Option<std::string::String>,
}
impl PartListElementBuilder {
    /// <p>The byte range of a part, inclusive of the upper value of the range.</p>
    pub fn range_in_bytes(mut self, input: impl Into<std::string::String>) -> Self {
        self.range_in_bytes = Some(input.into());
        self
    }
    /// <p>The byte range of a part, inclusive of the upper value of the range.</p>
    pub fn set_range_in_bytes(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.range_in_bytes = input;
        self
    }
    /// <p>The SHA256 tree hash value that Amazon S3 Glacier calculated for the part. This field is never <code>null</code>.</p>
    pub fn sha256_tree_hash(mut self, input: impl Into<std::string::String>) -> Self {
        self.sha256_tree_hash = Some(input.into());
        self
    }
    /// <p>The SHA256 tree hash value that Amazon S3 Glacier calculated for the part. This field is never <code>null</code>.</p>
    pub fn set_sha256_tree_hash(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.sha256_tree_hash = input;
        self
    }
    /// Consumes the builder and constructs a [`PartListElement`](crate::types::PartListElement).
    pub fn build(self) -> crate::types::PartListElement {
        crate::types::PartListElement {
            range_in_bytes: self.range_in_bytes,
            sha256_tree_hash: self.sha256_tree_hash,
        }
    }
}
