// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn parse_http_error_metadata(
    response: &http::Response<bytes::Bytes>,
) -> Result<
    aws_smithy_types::error::metadata::Builder,
    aws_smithy_json::deserialize::error::DeserializeError,
> {
    crate::json_errors::parse_error_metadata(response.body(), response.headers())
}

pub(crate) mod shape_abort_multipart_upload;

pub(crate) mod shape_abort_vault_lock;

pub(crate) mod shape_add_tags_to_vault;

pub(crate) mod shape_complete_multipart_upload;

pub(crate) mod shape_complete_vault_lock;

pub(crate) mod shape_create_vault;

pub(crate) mod shape_delete_archive;

pub(crate) mod shape_delete_vault;

pub(crate) mod shape_delete_vault_access_policy;

pub(crate) mod shape_delete_vault_notifications;

pub(crate) mod shape_describe_job;

pub(crate) mod shape_describe_vault;

pub(crate) mod shape_get_data_retrieval_policy;

pub(crate) mod shape_get_job_output;

pub(crate) mod shape_get_vault_access_policy;

pub(crate) mod shape_get_vault_lock;

pub(crate) mod shape_get_vault_notifications;

pub(crate) mod shape_initiate_job;

pub fn rest_json_unsetpayload() -> std::vec::Vec<u8> {
    b"{}"[..].into()
}

pub(crate) mod shape_initiate_job_input;

pub(crate) mod shape_initiate_multipart_upload;

pub(crate) mod shape_initiate_vault_lock;

pub(crate) mod shape_initiate_vault_lock_input;

pub(crate) mod shape_list_jobs;

pub(crate) mod shape_list_multipart_uploads;

pub(crate) mod shape_list_parts;

pub(crate) mod shape_list_provisioned_capacity;

pub(crate) mod shape_list_tags_for_vault;

pub(crate) mod shape_list_vaults;

pub(crate) mod shape_purchase_provisioned_capacity;

pub(crate) mod shape_remove_tags_from_vault;

pub(crate) mod shape_set_data_retrieval_policy;

pub(crate) mod shape_set_vault_access_policy;

pub(crate) mod shape_set_vault_access_policy_input;

pub(crate) mod shape_set_vault_notifications;

pub(crate) mod shape_set_vault_notifications_input;

pub(crate) mod shape_upload_archive;

pub(crate) mod shape_upload_archive_input;

pub(crate) mod shape_upload_multipart_part;

pub(crate) mod shape_upload_multipart_part_input;

pub(crate) mod shape_add_tags_to_vault_input;

pub(crate) mod shape_complete_multipart_upload_output;

pub(crate) mod shape_create_vault_output;

pub(crate) fn or_empty_doc(data: &[u8]) -> &[u8] {
    if data.is_empty() {
        b"{}"
    } else {
        data
    }
}

pub(crate) mod shape_get_job_output_output;

pub(crate) mod shape_get_vault_access_policy_output;

pub(crate) mod shape_get_vault_notifications_output;

pub(crate) mod shape_initiate_job_output;

pub(crate) mod shape_initiate_multipart_upload_output;

pub(crate) mod shape_initiate_vault_lock_output;

pub(crate) mod shape_insufficient_capacity_exception;

pub(crate) mod shape_invalid_parameter_value_exception;

pub(crate) mod shape_limit_exceeded_exception;

pub(crate) mod shape_missing_parameter_value_exception;

pub(crate) mod shape_policy_enforced_exception;

pub(crate) mod shape_purchase_provisioned_capacity_output;

pub(crate) mod shape_remove_tags_from_vault_input;

pub(crate) mod shape_request_timeout_exception;

pub(crate) mod shape_resource_not_found_exception;

pub(crate) mod shape_service_unavailable_exception;

pub(crate) mod shape_set_data_retrieval_policy_input;

pub(crate) mod shape_upload_archive_output;

pub(crate) mod shape_upload_multipart_part_output;

pub(crate) mod shape_data_retrieval_policy;

pub(crate) mod shape_inventory_retrieval_job_description;

pub(crate) mod shape_job_list;

pub(crate) mod shape_job_parameters;

pub(crate) mod shape_output_location;

pub(crate) mod shape_part_list;

pub(crate) mod shape_provisioned_capacity_list;

pub(crate) mod shape_select_parameters;

pub(crate) mod shape_tag_map;

pub(crate) mod shape_uploads_list;

pub(crate) mod shape_vault_access_policy;

pub(crate) mod shape_vault_list;

pub(crate) mod shape_vault_lock_policy;

pub(crate) mod shape_vault_notification_config;

pub(crate) mod shape_data_retrieval_rule;

pub(crate) mod shape_data_retrieval_rules_list;

pub(crate) mod shape_describe_vault_output;

pub(crate) mod shape_glacier_job_description;

pub(crate) mod shape_input_serialization;

pub(crate) mod shape_inventory_retrieval_job_input;

pub(crate) mod shape_output_serialization;

pub(crate) mod shape_part_list_element;

pub(crate) mod shape_provisioned_capacity_description;

pub(crate) mod shape_s3_location;

pub(crate) mod shape_upload_list_element;

pub(crate) mod shape_access_control_policy_list;

pub(crate) mod shape_csv_input;

pub(crate) mod shape_csv_output;

pub(crate) mod shape_encryption;

pub(crate) mod shape_hashmap;

pub(crate) mod shape_notification_event_list;

pub(crate) mod shape_grant;

pub(crate) mod shape_grantee;
