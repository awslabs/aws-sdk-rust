// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The input values for <code>CompleteVaultLock</code>.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct CompleteVaultLockInput {
    /// <p>The <code>AccountId</code> value is the AWS account ID. This value must match the AWS account ID associated with the credentials used to sign the request. You can either specify an AWS account ID or optionally a single '<code>-</code>' (hyphen), in which case Amazon Glacier uses the AWS account ID associated with the credentials used to sign the request. If you specify your account ID, do not include any hyphens ('-') in the ID.</p>
    #[doc(hidden)]
    pub account_id: std::option::Option<std::string::String>,
    /// <p>The name of the vault.</p>
    #[doc(hidden)]
    pub vault_name: std::option::Option<std::string::String>,
    /// <p>The <code>lockId</code> value is the lock ID obtained from a <code>InitiateVaultLock</code> request.</p>
    #[doc(hidden)]
    pub lock_id: std::option::Option<std::string::String>,
}
impl CompleteVaultLockInput {
    /// <p>The <code>AccountId</code> value is the AWS account ID. This value must match the AWS account ID associated with the credentials used to sign the request. You can either specify an AWS account ID or optionally a single '<code>-</code>' (hyphen), in which case Amazon Glacier uses the AWS account ID associated with the credentials used to sign the request. If you specify your account ID, do not include any hyphens ('-') in the ID.</p>
    pub fn account_id(&self) -> std::option::Option<&str> {
        self.account_id.as_deref()
    }
    /// <p>The name of the vault.</p>
    pub fn vault_name(&self) -> std::option::Option<&str> {
        self.vault_name.as_deref()
    }
    /// <p>The <code>lockId</code> value is the lock ID obtained from a <code>InitiateVaultLock</code> request.</p>
    pub fn lock_id(&self) -> std::option::Option<&str> {
        self.lock_id.as_deref()
    }
}
impl CompleteVaultLockInput {
    /// Creates a new builder-style object to manufacture [`CompleteVaultLockInput`](crate::operation::complete_vault_lock::CompleteVaultLockInput).
    pub fn builder(
    ) -> crate::operation::complete_vault_lock::builders::CompleteVaultLockInputBuilder {
        crate::operation::complete_vault_lock::builders::CompleteVaultLockInputBuilder::default()
    }
}

/// A builder for [`CompleteVaultLockInput`](crate::operation::complete_vault_lock::CompleteVaultLockInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct CompleteVaultLockInputBuilder {
    pub(crate) account_id: std::option::Option<std::string::String>,
    pub(crate) vault_name: std::option::Option<std::string::String>,
    pub(crate) lock_id: std::option::Option<std::string::String>,
}
impl CompleteVaultLockInputBuilder {
    /// <p>The <code>AccountId</code> value is the AWS account ID. This value must match the AWS account ID associated with the credentials used to sign the request. You can either specify an AWS account ID or optionally a single '<code>-</code>' (hyphen), in which case Amazon Glacier uses the AWS account ID associated with the credentials used to sign the request. If you specify your account ID, do not include any hyphens ('-') in the ID.</p>
    pub fn account_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.account_id = Some(input.into());
        self
    }
    /// <p>The <code>AccountId</code> value is the AWS account ID. This value must match the AWS account ID associated with the credentials used to sign the request. You can either specify an AWS account ID or optionally a single '<code>-</code>' (hyphen), in which case Amazon Glacier uses the AWS account ID associated with the credentials used to sign the request. If you specify your account ID, do not include any hyphens ('-') in the ID.</p>
    pub fn set_account_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.account_id = input;
        self
    }
    /// <p>The name of the vault.</p>
    pub fn vault_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.vault_name = Some(input.into());
        self
    }
    /// <p>The name of the vault.</p>
    pub fn set_vault_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.vault_name = input;
        self
    }
    /// <p>The <code>lockId</code> value is the lock ID obtained from a <code>InitiateVaultLock</code> request.</p>
    pub fn lock_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.lock_id = Some(input.into());
        self
    }
    /// <p>The <code>lockId</code> value is the lock ID obtained from a <code>InitiateVaultLock</code> request.</p>
    pub fn set_lock_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.lock_id = input;
        self
    }
    /// Consumes the builder and constructs a [`CompleteVaultLockInput`](crate::operation::complete_vault_lock::CompleteVaultLockInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::complete_vault_lock::CompleteVaultLockInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::complete_vault_lock::CompleteVaultLockInput {
                account_id: self.account_id,
                vault_name: self.vault_name,
                lock_id: self.lock_id,
            },
        )
    }
}
