// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Provides options for deleting an archive from an Amazon S3 Glacier vault.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DeleteArchiveInput {
    /// <p>The <code>AccountId</code> value is the AWS account ID of the account that owns the vault. You can either specify an AWS account ID or optionally a single '<code>-</code>' (hyphen), in which case Amazon S3 Glacier uses the AWS account ID associated with the credentials used to sign the request. If you use an account ID, do not include any hyphens ('-') in the ID.</p>
    #[doc(hidden)]
    pub account_id: std::option::Option<std::string::String>,
    /// <p>The name of the vault.</p>
    #[doc(hidden)]
    pub vault_name: std::option::Option<std::string::String>,
    /// <p>The ID of the archive to delete.</p>
    #[doc(hidden)]
    pub archive_id: std::option::Option<std::string::String>,
}
impl DeleteArchiveInput {
    /// <p>The <code>AccountId</code> value is the AWS account ID of the account that owns the vault. You can either specify an AWS account ID or optionally a single '<code>-</code>' (hyphen), in which case Amazon S3 Glacier uses the AWS account ID associated with the credentials used to sign the request. If you use an account ID, do not include any hyphens ('-') in the ID.</p>
    pub fn account_id(&self) -> std::option::Option<&str> {
        self.account_id.as_deref()
    }
    /// <p>The name of the vault.</p>
    pub fn vault_name(&self) -> std::option::Option<&str> {
        self.vault_name.as_deref()
    }
    /// <p>The ID of the archive to delete.</p>
    pub fn archive_id(&self) -> std::option::Option<&str> {
        self.archive_id.as_deref()
    }
}
impl DeleteArchiveInput {
    /// Creates a new builder-style object to manufacture [`DeleteArchiveInput`](crate::operation::delete_archive::DeleteArchiveInput).
    pub fn builder() -> crate::operation::delete_archive::builders::DeleteArchiveInputBuilder {
        crate::operation::delete_archive::builders::DeleteArchiveInputBuilder::default()
    }
}

/// A builder for [`DeleteArchiveInput`](crate::operation::delete_archive::DeleteArchiveInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DeleteArchiveInputBuilder {
    pub(crate) account_id: std::option::Option<std::string::String>,
    pub(crate) vault_name: std::option::Option<std::string::String>,
    pub(crate) archive_id: std::option::Option<std::string::String>,
}
impl DeleteArchiveInputBuilder {
    /// <p>The <code>AccountId</code> value is the AWS account ID of the account that owns the vault. You can either specify an AWS account ID or optionally a single '<code>-</code>' (hyphen), in which case Amazon S3 Glacier uses the AWS account ID associated with the credentials used to sign the request. If you use an account ID, do not include any hyphens ('-') in the ID.</p>
    pub fn account_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.account_id = Some(input.into());
        self
    }
    /// <p>The <code>AccountId</code> value is the AWS account ID of the account that owns the vault. You can either specify an AWS account ID or optionally a single '<code>-</code>' (hyphen), in which case Amazon S3 Glacier uses the AWS account ID associated with the credentials used to sign the request. If you use an account ID, do not include any hyphens ('-') in the ID.</p>
    pub fn set_account_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.account_id = input;
        self
    }
    /// <p>The name of the vault.</p>
    pub fn vault_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.vault_name = Some(input.into());
        self
    }
    /// <p>The name of the vault.</p>
    pub fn set_vault_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.vault_name = input;
        self
    }
    /// <p>The ID of the archive to delete.</p>
    pub fn archive_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.archive_id = Some(input.into());
        self
    }
    /// <p>The ID of the archive to delete.</p>
    pub fn set_archive_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.archive_id = input;
        self
    }
    /// Consumes the builder and constructs a [`DeleteArchiveInput`](crate::operation::delete_archive::DeleteArchiveInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::delete_archive::DeleteArchiveInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(crate::operation::delete_archive::DeleteArchiveInput {
            account_id: self.account_id,
            vault_name: self.vault_name,
            archive_id: self.archive_id,
        })
    }
}
