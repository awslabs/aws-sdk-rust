// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains the Amazon S3 Glacier response to your request.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GetVaultNotificationsOutput {
    /// <p>Returns the notification configuration set on the vault.</p>
    #[doc(hidden)]
    pub vault_notification_config: std::option::Option<crate::types::VaultNotificationConfig>,
    _request_id: Option<String>,
}
impl GetVaultNotificationsOutput {
    /// <p>Returns the notification configuration set on the vault.</p>
    pub fn vault_notification_config(
        &self,
    ) -> std::option::Option<&crate::types::VaultNotificationConfig> {
        self.vault_notification_config.as_ref()
    }
}
impl aws_http::request_id::RequestId for GetVaultNotificationsOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl GetVaultNotificationsOutput {
    /// Creates a new builder-style object to manufacture [`GetVaultNotificationsOutput`](crate::operation::get_vault_notifications::GetVaultNotificationsOutput).
    pub fn builder(
    ) -> crate::operation::get_vault_notifications::builders::GetVaultNotificationsOutputBuilder
    {
        crate::operation::get_vault_notifications::builders::GetVaultNotificationsOutputBuilder::default()
    }
}

/// A builder for [`GetVaultNotificationsOutput`](crate::operation::get_vault_notifications::GetVaultNotificationsOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct GetVaultNotificationsOutputBuilder {
    pub(crate) vault_notification_config:
        std::option::Option<crate::types::VaultNotificationConfig>,
    _request_id: Option<String>,
}
impl GetVaultNotificationsOutputBuilder {
    /// <p>Returns the notification configuration set on the vault.</p>
    pub fn vault_notification_config(
        mut self,
        input: crate::types::VaultNotificationConfig,
    ) -> Self {
        self.vault_notification_config = Some(input);
        self
    }
    /// <p>Returns the notification configuration set on the vault.</p>
    pub fn set_vault_notification_config(
        mut self,
        input: std::option::Option<crate::types::VaultNotificationConfig>,
    ) -> Self {
        self.vault_notification_config = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`GetVaultNotificationsOutput`](crate::operation::get_vault_notifications::GetVaultNotificationsOutput).
    pub fn build(self) -> crate::operation::get_vault_notifications::GetVaultNotificationsOutput {
        crate::operation::get_vault_notifications::GetVaultNotificationsOutput {
            vault_notification_config: self.vault_notification_config,
            _request_id: self._request_id,
        }
    }
}
