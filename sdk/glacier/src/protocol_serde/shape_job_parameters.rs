// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_job_parameters(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::types::JobParameters,
) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    if let Some(var_1) = &input.format {
        object.key("Format").string(var_1.as_str());
    }
    if let Some(var_2) = &input.r#type {
        object.key("Type").string(var_2.as_str());
    }
    if let Some(var_3) = &input.archive_id {
        object.key("ArchiveId").string(var_3.as_str());
    }
    if let Some(var_4) = &input.description {
        object.key("Description").string(var_4.as_str());
    }
    if let Some(var_5) = &input.sns_topic {
        object.key("SNSTopic").string(var_5.as_str());
    }
    if let Some(var_6) = &input.retrieval_byte_range {
        object.key("RetrievalByteRange").string(var_6.as_str());
    }
    if let Some(var_7) = &input.tier {
        object.key("Tier").string(var_7.as_str());
    }
    if let Some(var_8) = &input.inventory_retrieval_parameters {
        #[allow(unused_mut)]
        let mut object_9 = object.key("InventoryRetrievalParameters").start_object();
        crate::protocol_serde::shape_inventory_retrieval_job_input::ser_inventory_retrieval_job_input(&mut object_9, var_8)?;
        object_9.finish();
    }
    if let Some(var_10) = &input.select_parameters {
        #[allow(unused_mut)]
        let mut object_11 = object.key("SelectParameters").start_object();
        crate::protocol_serde::shape_select_parameters::ser_select_parameters(
            &mut object_11,
            var_10,
        )?;
        object_11.finish();
    }
    if let Some(var_12) = &input.output_location {
        #[allow(unused_mut)]
        let mut object_13 = object.key("OutputLocation").start_object();
        crate::protocol_serde::shape_output_location::ser_output_location(&mut object_13, var_12)?;
        object_13.finish();
    }
    Ok(())
}
