// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The configuration for a service network endpoint.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ServiceNetworkEndpoint {
    /// <p>The identifier of the VPC endpoint.</p>
    pub vpc_endpoint_id: ::std::option::Option<::std::string::String>,
    /// <p>The type of the VPC endpoint.</p>
    pub vpc_endpoint_type: ::std::option::Option<crate::types::VpcEndpointType>,
}
impl ServiceNetworkEndpoint {
    /// <p>The identifier of the VPC endpoint.</p>
    pub fn vpc_endpoint_id(&self) -> ::std::option::Option<&str> {
        self.vpc_endpoint_id.as_deref()
    }
    /// <p>The type of the VPC endpoint.</p>
    pub fn vpc_endpoint_type(&self) -> ::std::option::Option<&crate::types::VpcEndpointType> {
        self.vpc_endpoint_type.as_ref()
    }
}
impl ServiceNetworkEndpoint {
    /// Creates a new builder-style object to manufacture [`ServiceNetworkEndpoint`](crate::types::ServiceNetworkEndpoint).
    pub fn builder() -> crate::types::builders::ServiceNetworkEndpointBuilder {
        crate::types::builders::ServiceNetworkEndpointBuilder::default()
    }
}

/// A builder for [`ServiceNetworkEndpoint`](crate::types::ServiceNetworkEndpoint).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct ServiceNetworkEndpointBuilder {
    pub(crate) vpc_endpoint_id: ::std::option::Option<::std::string::String>,
    pub(crate) vpc_endpoint_type: ::std::option::Option<crate::types::VpcEndpointType>,
}
impl ServiceNetworkEndpointBuilder {
    /// <p>The identifier of the VPC endpoint.</p>
    pub fn vpc_endpoint_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.vpc_endpoint_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The identifier of the VPC endpoint.</p>
    pub fn set_vpc_endpoint_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.vpc_endpoint_id = input;
        self
    }
    /// <p>The identifier of the VPC endpoint.</p>
    pub fn get_vpc_endpoint_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.vpc_endpoint_id
    }
    /// <p>The type of the VPC endpoint.</p>
    pub fn vpc_endpoint_type(mut self, input: crate::types::VpcEndpointType) -> Self {
        self.vpc_endpoint_type = ::std::option::Option::Some(input);
        self
    }
    /// <p>The type of the VPC endpoint.</p>
    pub fn set_vpc_endpoint_type(mut self, input: ::std::option::Option<crate::types::VpcEndpointType>) -> Self {
        self.vpc_endpoint_type = input;
        self
    }
    /// <p>The type of the VPC endpoint.</p>
    pub fn get_vpc_endpoint_type(&self) -> &::std::option::Option<crate::types::VpcEndpointType> {
        &self.vpc_endpoint_type
    }
    /// Consumes the builder and constructs a [`ServiceNetworkEndpoint`](crate::types::ServiceNetworkEndpoint).
    pub fn build(self) -> crate::types::ServiceNetworkEndpoint {
        crate::types::ServiceNetworkEndpoint {
            vpc_endpoint_id: self.vpc_endpoint_id,
            vpc_endpoint_type: self.vpc_endpoint_type,
        }
    }
}
