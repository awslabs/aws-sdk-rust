// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The configuration for Zero-ETL access from the ODB network.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ZeroEtlAccess {
    /// <p>The status of the Zero-ETL access.</p>
    pub status: ::std::option::Option<crate::types::ManagedResourceStatus>,
    /// <p>The CIDR block for the Zero-ETL access.</p>
    pub cidr: ::std::option::Option<::std::string::String>,
}
impl ZeroEtlAccess {
    /// <p>The status of the Zero-ETL access.</p>
    pub fn status(&self) -> ::std::option::Option<&crate::types::ManagedResourceStatus> {
        self.status.as_ref()
    }
    /// <p>The CIDR block for the Zero-ETL access.</p>
    pub fn cidr(&self) -> ::std::option::Option<&str> {
        self.cidr.as_deref()
    }
}
impl ZeroEtlAccess {
    /// Creates a new builder-style object to manufacture [`ZeroEtlAccess`](crate::types::ZeroEtlAccess).
    pub fn builder() -> crate::types::builders::ZeroEtlAccessBuilder {
        crate::types::builders::ZeroEtlAccessBuilder::default()
    }
}

/// A builder for [`ZeroEtlAccess`](crate::types::ZeroEtlAccess).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct ZeroEtlAccessBuilder {
    pub(crate) status: ::std::option::Option<crate::types::ManagedResourceStatus>,
    pub(crate) cidr: ::std::option::Option<::std::string::String>,
}
impl ZeroEtlAccessBuilder {
    /// <p>The status of the Zero-ETL access.</p>
    pub fn status(mut self, input: crate::types::ManagedResourceStatus) -> Self {
        self.status = ::std::option::Option::Some(input);
        self
    }
    /// <p>The status of the Zero-ETL access.</p>
    pub fn set_status(mut self, input: ::std::option::Option<crate::types::ManagedResourceStatus>) -> Self {
        self.status = input;
        self
    }
    /// <p>The status of the Zero-ETL access.</p>
    pub fn get_status(&self) -> &::std::option::Option<crate::types::ManagedResourceStatus> {
        &self.status
    }
    /// <p>The CIDR block for the Zero-ETL access.</p>
    pub fn cidr(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.cidr = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The CIDR block for the Zero-ETL access.</p>
    pub fn set_cidr(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.cidr = input;
        self
    }
    /// <p>The CIDR block for the Zero-ETL access.</p>
    pub fn get_cidr(&self) -> &::std::option::Option<::std::string::String> {
        &self.cidr
    }
    /// Consumes the builder and constructs a [`ZeroEtlAccess`](crate::types::ZeroEtlAccess).
    pub fn build(self) -> crate::types::ZeroEtlAccess {
        crate::types::ZeroEtlAccess {
            status: self.status,
            cidr: self.cidr,
        }
    }
}
