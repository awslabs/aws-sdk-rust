// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(clippy::unnecessary_wraps)]
pub fn de_get_recommendation_http_error(
    _response_status: u16,
    _response_headers: &::aws_smithy_runtime_api::http::Headers,
    _response_body: &[u8],
) -> std::result::Result<crate::operation::get_recommendation::GetRecommendationOutput, crate::operation::get_recommendation::GetRecommendationError>
{
    #[allow(unused_mut)]
    let mut generic_builder = crate::protocol_serde::parse_http_error_metadata(_response_status, _response_headers, _response_body)
        .map_err(crate::operation::get_recommendation::GetRecommendationError::unhandled)?;
    generic_builder = ::aws_types::request_id::apply_request_id(generic_builder, _response_headers);
    let generic = generic_builder.build();
    let error_code = match generic.code() {
        Some(code) => code,
        None => return Err(crate::operation::get_recommendation::GetRecommendationError::unhandled(generic)),
    };

    let _error_message = generic.message().map(|msg| msg.to_owned());
    Err(match error_code {
        "AccessDeniedException" => crate::operation::get_recommendation::GetRecommendationError::AccessDeniedException({
            #[allow(unused_mut)]
            let mut tmp = {
                #[allow(unused_mut)]
                let mut output = crate::types::error::builders::AccessDeniedExceptionBuilder::default();
                output = crate::protocol_serde::shape_access_denied_exception::de_access_denied_exception_json_err(_response_body, output)
                    .map_err(crate::operation::get_recommendation::GetRecommendationError::unhandled)?;
                let output = output.meta(generic);
                crate::serde_util::access_denied_exception_correct_errors(output)
                    .build()
                    .map_err(crate::operation::get_recommendation::GetRecommendationError::unhandled)?
            };
            tmp
        }),
        "InternalServerException" => crate::operation::get_recommendation::GetRecommendationError::InternalServerException({
            #[allow(unused_mut)]
            let mut tmp = {
                #[allow(unused_mut)]
                let mut output = crate::types::error::builders::InternalServerExceptionBuilder::default();
                output = crate::protocol_serde::shape_internal_server_exception::de_internal_server_exception_json_err(_response_body, output)
                    .map_err(crate::operation::get_recommendation::GetRecommendationError::unhandled)?;
                let output = output.meta(generic);
                crate::serde_util::internal_server_exception_correct_errors(output)
                    .build()
                    .map_err(crate::operation::get_recommendation::GetRecommendationError::unhandled)?
            };
            tmp
        }),
        "ResourceNotFoundException" => crate::operation::get_recommendation::GetRecommendationError::ResourceNotFoundException({
            #[allow(unused_mut)]
            let mut tmp = {
                #[allow(unused_mut)]
                let mut output = crate::types::error::builders::ResourceNotFoundExceptionBuilder::default();
                output = crate::protocol_serde::shape_resource_not_found_exception::de_resource_not_found_exception_json_err(_response_body, output)
                    .map_err(crate::operation::get_recommendation::GetRecommendationError::unhandled)?;
                let output = output.meta(generic);
                crate::serde_util::resource_not_found_exception_correct_errors(output)
                    .build()
                    .map_err(crate::operation::get_recommendation::GetRecommendationError::unhandled)?
            };
            tmp
        }),
        "ThrottlingException" => crate::operation::get_recommendation::GetRecommendationError::ThrottlingException({
            #[allow(unused_mut)]
            let mut tmp = {
                #[allow(unused_mut)]
                let mut output = crate::types::error::builders::ThrottlingExceptionBuilder::default();
                output = crate::protocol_serde::shape_throttling_exception::de_throttling_exception_json_err(_response_body, output)
                    .map_err(crate::operation::get_recommendation::GetRecommendationError::unhandled)?;
                let output = output.meta(generic);
                output.build()
            };
            if tmp.message.is_none() {
                tmp.message = _error_message;
            }
            tmp
        }),
        "ValidationException" => crate::operation::get_recommendation::GetRecommendationError::ValidationException({
            #[allow(unused_mut)]
            let mut tmp = {
                #[allow(unused_mut)]
                let mut output = crate::types::error::builders::ValidationExceptionBuilder::default();
                output = crate::protocol_serde::shape_validation_exception::de_validation_exception_json_err(_response_body, output)
                    .map_err(crate::operation::get_recommendation::GetRecommendationError::unhandled)?;
                let output = output.meta(generic);
                crate::serde_util::validation_exception_correct_errors(output)
                    .build()
                    .map_err(crate::operation::get_recommendation::GetRecommendationError::unhandled)?
            };
            tmp
        }),
        _ => crate::operation::get_recommendation::GetRecommendationError::generic(generic),
    })
}

#[allow(clippy::unnecessary_wraps)]
pub fn de_get_recommendation_http_response(
    _response_status: u16,
    _response_headers: &::aws_smithy_runtime_api::http::Headers,
    _response_body: &[u8],
) -> std::result::Result<crate::operation::get_recommendation::GetRecommendationOutput, crate::operation::get_recommendation::GetRecommendationError>
{
    Ok({
        #[allow(unused_mut)]
        let mut output = crate::operation::get_recommendation::builders::GetRecommendationOutputBuilder::default();
        output = crate::protocol_serde::shape_get_recommendation::de_get_recommendation(_response_body, output)
            .map_err(crate::operation::get_recommendation::GetRecommendationError::unhandled)?;
        output._set_request_id(::aws_types::request_id::RequestId::request_id(_response_headers).map(str::to_string));
        output.build()
    })
}

pub fn ser_get_recommendation_input(
    input: &crate::operation::get_recommendation::GetRecommendationInput,
) -> ::std::result::Result<::aws_smithy_types::body::SdkBody, ::aws_smithy_types::error::operation::SerializationError> {
    let mut out = String::new();
    let mut object = ::aws_smithy_json::serialize::JsonObjectWriter::new(&mut out);
    crate::protocol_serde::shape_get_recommendation_input::ser_get_recommendation_input_input(&mut object, input)?;
    object.finish();
    Ok(::aws_smithy_types::body::SdkBody::from(out))
}

pub(crate) fn de_get_recommendation(
    value: &[u8],
    mut builder: crate::operation::get_recommendation::builders::GetRecommendationOutputBuilder,
) -> ::std::result::Result<
    crate::operation::get_recommendation::builders::GetRecommendationOutputBuilder,
    ::aws_smithy_json::deserialize::error::DeserializeError,
> {
    let mut tokens_owned = ::aws_smithy_json::deserialize::json_token_iter(crate::protocol_serde::or_empty_doc(value)).peekable();
    let tokens = &mut tokens_owned;
    ::aws_smithy_json::deserialize::token::expect_start_object(tokens.next())?;
    loop {
        match tokens.next().transpose()? {
            Some(::aws_smithy_json::deserialize::Token::EndObject { .. }) => break,
            Some(::aws_smithy_json::deserialize::Token::ObjectKey { key, .. }) => match key.to_unescaped()?.as_ref() {
                "recommendationId" => {
                    builder = builder.set_recommendation_id(
                        ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                            .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                            .transpose()?,
                    );
                }
                "resourceId" => {
                    builder = builder.set_resource_id(
                        ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                            .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                            .transpose()?,
                    );
                }
                "resourceArn" => {
                    builder = builder.set_resource_arn(
                        ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                            .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                            .transpose()?,
                    );
                }
                "accountId" => {
                    builder = builder.set_account_id(
                        ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                            .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                            .transpose()?,
                    );
                }
                "currencyCode" => {
                    builder = builder.set_currency_code(
                        ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                            .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                            .transpose()?,
                    );
                }
                "recommendationLookbackPeriodInDays" => {
                    builder = builder.set_recommendation_lookback_period_in_days(
                        ::aws_smithy_json::deserialize::token::expect_number_or_null(tokens.next())?
                            .map(i32::try_from)
                            .transpose()?,
                    );
                }
                "costCalculationLookbackPeriodInDays" => {
                    builder = builder.set_cost_calculation_lookback_period_in_days(
                        ::aws_smithy_json::deserialize::token::expect_number_or_null(tokens.next())?
                            .map(i32::try_from)
                            .transpose()?,
                    );
                }
                "estimatedSavingsPercentage" => {
                    builder = builder.set_estimated_savings_percentage(
                        ::aws_smithy_json::deserialize::token::expect_number_or_null(tokens.next())?.map(|v| v.to_f64_lossy()),
                    );
                }
                "estimatedSavingsOverCostCalculationLookbackPeriod" => {
                    builder = builder.set_estimated_savings_over_cost_calculation_lookback_period(
                        ::aws_smithy_json::deserialize::token::expect_number_or_null(tokens.next())?.map(|v| v.to_f64_lossy()),
                    );
                }
                "currentResourceType" => {
                    builder = builder.set_current_resource_type(
                        ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                            .map(|s| s.to_unescaped().map(|u| crate::types::ResourceType::from(u.as_ref())))
                            .transpose()?,
                    );
                }
                "recommendedResourceType" => {
                    builder = builder.set_recommended_resource_type(
                        ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                            .map(|s| s.to_unescaped().map(|u| crate::types::ResourceType::from(u.as_ref())))
                            .transpose()?,
                    );
                }
                "region" => {
                    builder = builder.set_region(
                        ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                            .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                            .transpose()?,
                    );
                }
                "source" => {
                    builder = builder.set_source(
                        ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                            .map(|s| s.to_unescaped().map(|u| crate::types::Source::from(u.as_ref())))
                            .transpose()?,
                    );
                }
                "lastRefreshTimestamp" => {
                    builder = builder.set_last_refresh_timestamp(::aws_smithy_json::deserialize::token::expect_timestamp_or_null(
                        tokens.next(),
                        ::aws_smithy_types::date_time::Format::EpochSeconds,
                    )?);
                }
                "estimatedMonthlySavings" => {
                    builder = builder.set_estimated_monthly_savings(
                        ::aws_smithy_json::deserialize::token::expect_number_or_null(tokens.next())?.map(|v| v.to_f64_lossy()),
                    );
                }
                "estimatedMonthlyCost" => {
                    builder = builder.set_estimated_monthly_cost(
                        ::aws_smithy_json::deserialize::token::expect_number_or_null(tokens.next())?.map(|v| v.to_f64_lossy()),
                    );
                }
                "implementationEffort" => {
                    builder = builder.set_implementation_effort(
                        ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                            .map(|s| s.to_unescaped().map(|u| crate::types::ImplementationEffort::from(u.as_ref())))
                            .transpose()?,
                    );
                }
                "restartNeeded" => {
                    builder = builder.set_restart_needed(::aws_smithy_json::deserialize::token::expect_bool_or_null(tokens.next())?);
                }
                "actionType" => {
                    builder = builder.set_action_type(
                        ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                            .map(|s| s.to_unescaped().map(|u| crate::types::ActionType::from(u.as_ref())))
                            .transpose()?,
                    );
                }
                "rollbackPossible" => {
                    builder = builder.set_rollback_possible(::aws_smithy_json::deserialize::token::expect_bool_or_null(tokens.next())?);
                }
                "currentResourceDetails" => {
                    builder = builder.set_current_resource_details(crate::protocol_serde::shape_resource_details::de_resource_details(tokens)?);
                }
                "recommendedResourceDetails" => {
                    builder = builder.set_recommended_resource_details(crate::protocol_serde::shape_resource_details::de_resource_details(tokens)?);
                }
                "tags" => {
                    builder = builder.set_tags(crate::protocol_serde::shape_tag_list::de_tag_list(tokens)?);
                }
                _ => ::aws_smithy_json::deserialize::token::skip_value(tokens)?,
            },
            other => {
                return Err(::aws_smithy_json::deserialize::error::DeserializeError::custom(format!(
                    "expected object key or end object, found: {other:?}"
                )))
            }
        }
    }
    if tokens.next().is_some() {
        return Err(::aws_smithy_json::deserialize::error::DeserializeError::custom(
            "found more JSON tokens after completing parsing",
        ));
    }
    Ok(builder)
}
