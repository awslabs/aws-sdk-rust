// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct UpdateWorkerFleetOutput {
    /// Full ARN of the worker fleet.
    #[doc(hidden)]
    pub arn: std::option::Option<std::string::String>,
    /// Filters access by the worker fleet's identifier
    #[doc(hidden)]
    pub id: std::option::Option<std::string::String>,
    /// Human friendly name of the resource.
    #[doc(hidden)]
    pub name: std::option::Option<std::string::String>,
    /// Timestamp at which the resource was last updated.
    #[doc(hidden)]
    pub updated_at: std::option::Option<aws_smithy_types::DateTime>,
    /// JSON blob containing additional fixed properties regarding the worker fleet
    #[doc(hidden)]
    pub additional_fixed_properties: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl UpdateWorkerFleetOutput {
    /// Full ARN of the worker fleet.
    pub fn arn(&self) -> std::option::Option<&str> {
        self.arn.as_deref()
    }
    /// Filters access by the worker fleet's identifier
    pub fn id(&self) -> std::option::Option<&str> {
        self.id.as_deref()
    }
    /// Human friendly name of the resource.
    pub fn name(&self) -> std::option::Option<&str> {
        self.name.as_deref()
    }
    /// Timestamp at which the resource was last updated.
    pub fn updated_at(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.updated_at.as_ref()
    }
    /// JSON blob containing additional fixed properties regarding the worker fleet
    pub fn additional_fixed_properties(&self) -> std::option::Option<&str> {
        self.additional_fixed_properties.as_deref()
    }
}
impl aws_http::request_id::RequestId for UpdateWorkerFleetOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl UpdateWorkerFleetOutput {
    /// Creates a new builder-style object to manufacture [`UpdateWorkerFleetOutput`](crate::operation::update_worker_fleet::UpdateWorkerFleetOutput).
    pub fn builder(
    ) -> crate::operation::update_worker_fleet::builders::UpdateWorkerFleetOutputBuilder {
        crate::operation::update_worker_fleet::builders::UpdateWorkerFleetOutputBuilder::default()
    }
}

/// A builder for [`UpdateWorkerFleetOutput`](crate::operation::update_worker_fleet::UpdateWorkerFleetOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct UpdateWorkerFleetOutputBuilder {
    pub(crate) arn: std::option::Option<std::string::String>,
    pub(crate) id: std::option::Option<std::string::String>,
    pub(crate) name: std::option::Option<std::string::String>,
    pub(crate) updated_at: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) additional_fixed_properties: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl UpdateWorkerFleetOutputBuilder {
    /// Full ARN of the worker fleet.
    pub fn arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.arn = Some(input.into());
        self
    }
    /// Full ARN of the worker fleet.
    pub fn set_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.arn = input;
        self
    }
    /// Filters access by the worker fleet's identifier
    pub fn id(mut self, input: impl Into<std::string::String>) -> Self {
        self.id = Some(input.into());
        self
    }
    /// Filters access by the worker fleet's identifier
    pub fn set_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.id = input;
        self
    }
    /// Human friendly name of the resource.
    pub fn name(mut self, input: impl Into<std::string::String>) -> Self {
        self.name = Some(input.into());
        self
    }
    /// Human friendly name of the resource.
    pub fn set_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// Timestamp at which the resource was last updated.
    pub fn updated_at(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.updated_at = Some(input);
        self
    }
    /// Timestamp at which the resource was last updated.
    pub fn set_updated_at(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.updated_at = input;
        self
    }
    /// JSON blob containing additional fixed properties regarding the worker fleet
    pub fn additional_fixed_properties(mut self, input: impl Into<std::string::String>) -> Self {
        self.additional_fixed_properties = Some(input.into());
        self
    }
    /// JSON blob containing additional fixed properties regarding the worker fleet
    pub fn set_additional_fixed_properties(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.additional_fixed_properties = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`UpdateWorkerFleetOutput`](crate::operation::update_worker_fleet::UpdateWorkerFleetOutput).
    pub fn build(self) -> crate::operation::update_worker_fleet::UpdateWorkerFleetOutput {
        crate::operation::update_worker_fleet::UpdateWorkerFleetOutput {
            arn: self.arn,
            id: self.id,
            name: self.name,
            updated_at: self.updated_at,
            additional_fixed_properties: self.additional_fixed_properties,
            _request_id: self._request_id,
        }
    }
}
