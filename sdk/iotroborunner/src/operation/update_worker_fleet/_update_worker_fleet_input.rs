// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct UpdateWorkerFleetInput {
    /// Full ARN of the worker fleet.
    pub id: ::std::option::Option<::std::string::String>,
    /// Human friendly name of the resource.
    pub name: ::std::option::Option<::std::string::String>,
    /// JSON blob containing additional fixed properties regarding the worker fleet
    pub additional_fixed_properties: ::std::option::Option<::std::string::String>,
}
impl UpdateWorkerFleetInput {
    /// Full ARN of the worker fleet.
    pub fn id(&self) -> ::std::option::Option<&str> {
        self.id.as_deref()
    }
    /// Human friendly name of the resource.
    pub fn name(&self) -> ::std::option::Option<&str> {
        self.name.as_deref()
    }
    /// JSON blob containing additional fixed properties regarding the worker fleet
    pub fn additional_fixed_properties(&self) -> ::std::option::Option<&str> {
        self.additional_fixed_properties.as_deref()
    }
}
impl UpdateWorkerFleetInput {
    /// Creates a new builder-style object to manufacture [`UpdateWorkerFleetInput`](crate::operation::update_worker_fleet::UpdateWorkerFleetInput).
    pub fn builder() -> crate::operation::update_worker_fleet::builders::UpdateWorkerFleetInputBuilder {
        crate::operation::update_worker_fleet::builders::UpdateWorkerFleetInputBuilder::default()
    }
}

/// A builder for [`UpdateWorkerFleetInput`](crate::operation::update_worker_fleet::UpdateWorkerFleetInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct UpdateWorkerFleetInputBuilder {
    pub(crate) id: ::std::option::Option<::std::string::String>,
    pub(crate) name: ::std::option::Option<::std::string::String>,
    pub(crate) additional_fixed_properties: ::std::option::Option<::std::string::String>,
}
impl UpdateWorkerFleetInputBuilder {
    /// Full ARN of the worker fleet.
    /// This field is required.
    pub fn id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.id = ::std::option::Option::Some(input.into());
        self
    }
    /// Full ARN of the worker fleet.
    pub fn set_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.id = input;
        self
    }
    /// Full ARN of the worker fleet.
    pub fn get_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.id
    }
    /// Human friendly name of the resource.
    pub fn name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.name = ::std::option::Option::Some(input.into());
        self
    }
    /// Human friendly name of the resource.
    pub fn set_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// Human friendly name of the resource.
    pub fn get_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.name
    }
    /// JSON blob containing additional fixed properties regarding the worker fleet
    pub fn additional_fixed_properties(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.additional_fixed_properties = ::std::option::Option::Some(input.into());
        self
    }
    /// JSON blob containing additional fixed properties regarding the worker fleet
    pub fn set_additional_fixed_properties(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.additional_fixed_properties = input;
        self
    }
    /// JSON blob containing additional fixed properties regarding the worker fleet
    pub fn get_additional_fixed_properties(&self) -> &::std::option::Option<::std::string::String> {
        &self.additional_fixed_properties
    }
    /// Consumes the builder and constructs a [`UpdateWorkerFleetInput`](crate::operation::update_worker_fleet::UpdateWorkerFleetInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::update_worker_fleet::UpdateWorkerFleetInput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::operation::update_worker_fleet::UpdateWorkerFleetInput {
            id: self.id,
            name: self.name,
            additional_fixed_properties: self.additional_fixed_properties,
        })
    }
}
