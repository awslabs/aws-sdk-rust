// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ListSitesInput {
    /// Maximum number of results to retrieve in a single ListSites call.
    #[doc(hidden)]
    pub max_results: std::option::Option<i32>,
    /// Pagination token returned when another page of data exists. Provide it in your next call to the API to receive the next page.
    #[doc(hidden)]
    pub next_token: std::option::Option<std::string::String>,
}
impl ListSitesInput {
    /// Maximum number of results to retrieve in a single ListSites call.
    pub fn max_results(&self) -> std::option::Option<i32> {
        self.max_results
    }
    /// Pagination token returned when another page of data exists. Provide it in your next call to the API to receive the next page.
    pub fn next_token(&self) -> std::option::Option<&str> {
        self.next_token.as_deref()
    }
}
impl ListSitesInput {
    /// Creates a new builder-style object to manufacture [`ListSitesInput`](crate::operation::list_sites::ListSitesInput).
    pub fn builder() -> crate::operation::list_sites::builders::ListSitesInputBuilder {
        crate::operation::list_sites::builders::ListSitesInputBuilder::default()
    }
}

/// A builder for [`ListSitesInput`](crate::operation::list_sites::ListSitesInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ListSitesInputBuilder {
    pub(crate) max_results: std::option::Option<i32>,
    pub(crate) next_token: std::option::Option<std::string::String>,
}
impl ListSitesInputBuilder {
    /// Maximum number of results to retrieve in a single ListSites call.
    pub fn max_results(mut self, input: i32) -> Self {
        self.max_results = Some(input);
        self
    }
    /// Maximum number of results to retrieve in a single ListSites call.
    pub fn set_max_results(mut self, input: std::option::Option<i32>) -> Self {
        self.max_results = input;
        self
    }
    /// Pagination token returned when another page of data exists. Provide it in your next call to the API to receive the next page.
    pub fn next_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.next_token = Some(input.into());
        self
    }
    /// Pagination token returned when another page of data exists. Provide it in your next call to the API to receive the next page.
    pub fn set_next_token(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// Consumes the builder and constructs a [`ListSitesInput`](crate::operation::list_sites::ListSitesInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::list_sites::ListSitesInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(crate::operation::list_sites::ListSitesInput {
            max_results: self.max_results,
            next_token: self.next_token,
        })
    }
}
