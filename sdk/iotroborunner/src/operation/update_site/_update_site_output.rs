// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct UpdateSiteOutput {
    /// Site ARN.
    #[doc(hidden)]
    pub arn: std::option::Option<std::string::String>,
    /// Filters access by the site's identifier
    #[doc(hidden)]
    pub id: std::option::Option<std::string::String>,
    /// Human friendly name of the resource.
    #[doc(hidden)]
    pub name: std::option::Option<std::string::String>,
    /// A valid ISO 3166-1 alpha-2 code for the country in which the site resides. e.g., US.
    #[doc(hidden)]
    pub country_code: std::option::Option<std::string::String>,
    /// A high-level description of the site.
    #[doc(hidden)]
    pub description: std::option::Option<std::string::String>,
    /// Timestamp at which the resource was last updated.
    #[doc(hidden)]
    pub updated_at: std::option::Option<aws_smithy_types::DateTime>,
    _request_id: Option<String>,
}
impl UpdateSiteOutput {
    /// Site ARN.
    pub fn arn(&self) -> std::option::Option<&str> {
        self.arn.as_deref()
    }
    /// Filters access by the site's identifier
    pub fn id(&self) -> std::option::Option<&str> {
        self.id.as_deref()
    }
    /// Human friendly name of the resource.
    pub fn name(&self) -> std::option::Option<&str> {
        self.name.as_deref()
    }
    /// A valid ISO 3166-1 alpha-2 code for the country in which the site resides. e.g., US.
    pub fn country_code(&self) -> std::option::Option<&str> {
        self.country_code.as_deref()
    }
    /// A high-level description of the site.
    pub fn description(&self) -> std::option::Option<&str> {
        self.description.as_deref()
    }
    /// Timestamp at which the resource was last updated.
    pub fn updated_at(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.updated_at.as_ref()
    }
}
impl aws_http::request_id::RequestId for UpdateSiteOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl UpdateSiteOutput {
    /// Creates a new builder-style object to manufacture [`UpdateSiteOutput`](crate::operation::update_site::UpdateSiteOutput).
    pub fn builder() -> crate::operation::update_site::builders::UpdateSiteOutputBuilder {
        crate::operation::update_site::builders::UpdateSiteOutputBuilder::default()
    }
}

/// A builder for [`UpdateSiteOutput`](crate::operation::update_site::UpdateSiteOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct UpdateSiteOutputBuilder {
    pub(crate) arn: std::option::Option<std::string::String>,
    pub(crate) id: std::option::Option<std::string::String>,
    pub(crate) name: std::option::Option<std::string::String>,
    pub(crate) country_code: std::option::Option<std::string::String>,
    pub(crate) description: std::option::Option<std::string::String>,
    pub(crate) updated_at: std::option::Option<aws_smithy_types::DateTime>,
    _request_id: Option<String>,
}
impl UpdateSiteOutputBuilder {
    /// Site ARN.
    pub fn arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.arn = Some(input.into());
        self
    }
    /// Site ARN.
    pub fn set_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.arn = input;
        self
    }
    /// Filters access by the site's identifier
    pub fn id(mut self, input: impl Into<std::string::String>) -> Self {
        self.id = Some(input.into());
        self
    }
    /// Filters access by the site's identifier
    pub fn set_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.id = input;
        self
    }
    /// Human friendly name of the resource.
    pub fn name(mut self, input: impl Into<std::string::String>) -> Self {
        self.name = Some(input.into());
        self
    }
    /// Human friendly name of the resource.
    pub fn set_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// A valid ISO 3166-1 alpha-2 code for the country in which the site resides. e.g., US.
    pub fn country_code(mut self, input: impl Into<std::string::String>) -> Self {
        self.country_code = Some(input.into());
        self
    }
    /// A valid ISO 3166-1 alpha-2 code for the country in which the site resides. e.g., US.
    pub fn set_country_code(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.country_code = input;
        self
    }
    /// A high-level description of the site.
    pub fn description(mut self, input: impl Into<std::string::String>) -> Self {
        self.description = Some(input.into());
        self
    }
    /// A high-level description of the site.
    pub fn set_description(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.description = input;
        self
    }
    /// Timestamp at which the resource was last updated.
    pub fn updated_at(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.updated_at = Some(input);
        self
    }
    /// Timestamp at which the resource was last updated.
    pub fn set_updated_at(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.updated_at = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`UpdateSiteOutput`](crate::operation::update_site::UpdateSiteOutput).
    pub fn build(self) -> crate::operation::update_site::UpdateSiteOutput {
        crate::operation::update_site::UpdateSiteOutput {
            arn: self.arn,
            id: self.id,
            name: self.name,
            country_code: self.country_code,
            description: self.description,
            updated_at: self.updated_at,
            _request_id: self._request_id,
        }
    }
}
