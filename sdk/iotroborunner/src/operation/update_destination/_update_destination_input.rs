// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct UpdateDestinationInput {
    /// Destination ARN.
    #[doc(hidden)]
    pub id: std::option::Option<std::string::String>,
    /// Human friendly name of the resource.
    #[doc(hidden)]
    pub name: std::option::Option<std::string::String>,
    /// State of the destination.
    #[doc(hidden)]
    pub state: std::option::Option<crate::types::DestinationState>,
    /// JSON document containing additional fixed properties regarding the destination
    #[doc(hidden)]
    pub additional_fixed_properties: std::option::Option<std::string::String>,
}
impl UpdateDestinationInput {
    /// Destination ARN.
    pub fn id(&self) -> std::option::Option<&str> {
        self.id.as_deref()
    }
    /// Human friendly name of the resource.
    pub fn name(&self) -> std::option::Option<&str> {
        self.name.as_deref()
    }
    /// State of the destination.
    pub fn state(&self) -> std::option::Option<&crate::types::DestinationState> {
        self.state.as_ref()
    }
    /// JSON document containing additional fixed properties regarding the destination
    pub fn additional_fixed_properties(&self) -> std::option::Option<&str> {
        self.additional_fixed_properties.as_deref()
    }
}
impl UpdateDestinationInput {
    /// Creates a new builder-style object to manufacture [`UpdateDestinationInput`](crate::operation::update_destination::UpdateDestinationInput).
    pub fn builder() -> crate::operation::update_destination::builders::UpdateDestinationInputBuilder
    {
        crate::operation::update_destination::builders::UpdateDestinationInputBuilder::default()
    }
}

/// A builder for [`UpdateDestinationInput`](crate::operation::update_destination::UpdateDestinationInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct UpdateDestinationInputBuilder {
    pub(crate) id: std::option::Option<std::string::String>,
    pub(crate) name: std::option::Option<std::string::String>,
    pub(crate) state: std::option::Option<crate::types::DestinationState>,
    pub(crate) additional_fixed_properties: std::option::Option<std::string::String>,
}
impl UpdateDestinationInputBuilder {
    /// Destination ARN.
    pub fn id(mut self, input: impl Into<std::string::String>) -> Self {
        self.id = Some(input.into());
        self
    }
    /// Destination ARN.
    pub fn set_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.id = input;
        self
    }
    /// Human friendly name of the resource.
    pub fn name(mut self, input: impl Into<std::string::String>) -> Self {
        self.name = Some(input.into());
        self
    }
    /// Human friendly name of the resource.
    pub fn set_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// State of the destination.
    pub fn state(mut self, input: crate::types::DestinationState) -> Self {
        self.state = Some(input);
        self
    }
    /// State of the destination.
    pub fn set_state(mut self, input: std::option::Option<crate::types::DestinationState>) -> Self {
        self.state = input;
        self
    }
    /// JSON document containing additional fixed properties regarding the destination
    pub fn additional_fixed_properties(mut self, input: impl Into<std::string::String>) -> Self {
        self.additional_fixed_properties = Some(input.into());
        self
    }
    /// JSON document containing additional fixed properties regarding the destination
    pub fn set_additional_fixed_properties(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.additional_fixed_properties = input;
        self
    }
    /// Consumes the builder and constructs a [`UpdateDestinationInput`](crate::operation::update_destination::UpdateDestinationInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::update_destination::UpdateDestinationInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::update_destination::UpdateDestinationInput {
                id: self.id,
                name: self.name,
                state: self.state,
                additional_fixed_properties: self.additional_fixed_properties,
            },
        )
    }
}
