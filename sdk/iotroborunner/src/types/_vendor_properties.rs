// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Properties of the worker that are provided by the vendor FMS.
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct VendorProperties {
    /// The worker ID defined by the vendor FMS.
    pub vendor_worker_id: ::std::string::String,
    /// The worker IP address defined by the vendor FMS.
    pub vendor_worker_ip_address: ::std::option::Option<::std::string::String>,
    /// JSON blob containing unstructured vendor properties that are transient and may change during regular operation.
    pub vendor_additional_transient_properties: ::std::option::Option<::std::string::String>,
    /// JSON blob containing unstructured vendor properties that are fixed and won't change during regular operation.
    pub vendor_additional_fixed_properties: ::std::option::Option<::std::string::String>,
}
impl VendorProperties {
    /// The worker ID defined by the vendor FMS.
    pub fn vendor_worker_id(&self) -> &str {
        use std::ops::Deref;
        self.vendor_worker_id.deref()
    }
    /// The worker IP address defined by the vendor FMS.
    pub fn vendor_worker_ip_address(&self) -> ::std::option::Option<&str> {
        self.vendor_worker_ip_address.as_deref()
    }
    /// JSON blob containing unstructured vendor properties that are transient and may change during regular operation.
    pub fn vendor_additional_transient_properties(&self) -> ::std::option::Option<&str> {
        self.vendor_additional_transient_properties.as_deref()
    }
    /// JSON blob containing unstructured vendor properties that are fixed and won't change during regular operation.
    pub fn vendor_additional_fixed_properties(&self) -> ::std::option::Option<&str> {
        self.vendor_additional_fixed_properties.as_deref()
    }
}
impl VendorProperties {
    /// Creates a new builder-style object to manufacture [`VendorProperties`](crate::types::VendorProperties).
    pub fn builder() -> crate::types::builders::VendorPropertiesBuilder {
        crate::types::builders::VendorPropertiesBuilder::default()
    }
}

/// A builder for [`VendorProperties`](crate::types::VendorProperties).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct VendorPropertiesBuilder {
    pub(crate) vendor_worker_id: ::std::option::Option<::std::string::String>,
    pub(crate) vendor_worker_ip_address: ::std::option::Option<::std::string::String>,
    pub(crate) vendor_additional_transient_properties: ::std::option::Option<::std::string::String>,
    pub(crate) vendor_additional_fixed_properties: ::std::option::Option<::std::string::String>,
}
impl VendorPropertiesBuilder {
    /// The worker ID defined by the vendor FMS.
    /// This field is required.
    pub fn vendor_worker_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.vendor_worker_id = ::std::option::Option::Some(input.into());
        self
    }
    /// The worker ID defined by the vendor FMS.
    pub fn set_vendor_worker_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.vendor_worker_id = input;
        self
    }
    /// The worker ID defined by the vendor FMS.
    pub fn get_vendor_worker_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.vendor_worker_id
    }
    /// The worker IP address defined by the vendor FMS.
    pub fn vendor_worker_ip_address(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.vendor_worker_ip_address = ::std::option::Option::Some(input.into());
        self
    }
    /// The worker IP address defined by the vendor FMS.
    pub fn set_vendor_worker_ip_address(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.vendor_worker_ip_address = input;
        self
    }
    /// The worker IP address defined by the vendor FMS.
    pub fn get_vendor_worker_ip_address(&self) -> &::std::option::Option<::std::string::String> {
        &self.vendor_worker_ip_address
    }
    /// JSON blob containing unstructured vendor properties that are transient and may change during regular operation.
    pub fn vendor_additional_transient_properties(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.vendor_additional_transient_properties = ::std::option::Option::Some(input.into());
        self
    }
    /// JSON blob containing unstructured vendor properties that are transient and may change during regular operation.
    pub fn set_vendor_additional_transient_properties(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.vendor_additional_transient_properties = input;
        self
    }
    /// JSON blob containing unstructured vendor properties that are transient and may change during regular operation.
    pub fn get_vendor_additional_transient_properties(&self) -> &::std::option::Option<::std::string::String> {
        &self.vendor_additional_transient_properties
    }
    /// JSON blob containing unstructured vendor properties that are fixed and won't change during regular operation.
    pub fn vendor_additional_fixed_properties(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.vendor_additional_fixed_properties = ::std::option::Option::Some(input.into());
        self
    }
    /// JSON blob containing unstructured vendor properties that are fixed and won't change during regular operation.
    pub fn set_vendor_additional_fixed_properties(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.vendor_additional_fixed_properties = input;
        self
    }
    /// JSON blob containing unstructured vendor properties that are fixed and won't change during regular operation.
    pub fn get_vendor_additional_fixed_properties(&self) -> &::std::option::Option<::std::string::String> {
        &self.vendor_additional_fixed_properties
    }
    /// Consumes the builder and constructs a [`VendorProperties`](crate::types::VendorProperties).
    /// This method will fail if any of the following fields are not set:
    /// - [`vendor_worker_id`](crate::types::builders::VendorPropertiesBuilder::vendor_worker_id)
    pub fn build(self) -> ::std::result::Result<crate::types::VendorProperties, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::VendorProperties {
            vendor_worker_id: self.vendor_worker_id.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "vendor_worker_id",
                    "vendor_worker_id was not specified but it is required when building VendorProperties",
                )
            })?,
            vendor_worker_ip_address: self.vendor_worker_ip_address,
            vendor_additional_transient_properties: self.vendor_additional_transient_properties,
            vendor_additional_fixed_properties: self.vendor_additional_fixed_properties,
        })
    }
}
