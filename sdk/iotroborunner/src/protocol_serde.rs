// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) mod shape_create_destination;

pub fn parse_http_error_metadata(
    response: &http::Response<bytes::Bytes>,
) -> Result<
    aws_smithy_types::error::metadata::Builder,
    aws_smithy_json::deserialize::error::DeserializeError,
> {
    crate::json_errors::parse_error_metadata(response.body(), response.headers())
}

pub(crate) mod shape_create_site;

pub(crate) mod shape_create_worker;

pub(crate) mod shape_create_worker_fleet;

pub(crate) mod shape_delete_destination;

pub(crate) mod shape_delete_site;

pub(crate) mod shape_delete_worker;

pub(crate) mod shape_delete_worker_fleet;

pub(crate) mod shape_get_destination;

pub(crate) mod shape_get_site;

pub(crate) mod shape_get_worker;

pub(crate) mod shape_get_worker_fleet;

pub(crate) mod shape_list_destinations;

pub(crate) mod shape_list_sites;

pub(crate) mod shape_list_worker_fleets;

pub(crate) mod shape_list_workers;

pub(crate) mod shape_update_destination;

pub(crate) mod shape_update_site;

pub(crate) mod shape_update_worker;

pub(crate) mod shape_update_worker_fleet;

pub(crate) fn or_empty_doc(data: &[u8]) -> &[u8] {
    if data.is_empty() {
        b"{}"
    } else {
        data
    }
}

pub(crate) mod shape_access_denied_exception;

pub(crate) mod shape_conflict_exception;

pub(crate) mod shape_create_destination_input;

pub(crate) mod shape_create_site_input;

pub(crate) mod shape_create_worker_fleet_input;

pub(crate) mod shape_create_worker_input;

pub(crate) mod shape_delete_destination_input;

pub(crate) mod shape_delete_site_input;

pub(crate) mod shape_delete_worker_fleet_input;

pub(crate) mod shape_delete_worker_input;

pub(crate) mod shape_internal_server_exception;

pub(crate) mod shape_resource_not_found_exception;

pub(crate) mod shape_service_quota_exceeded_exception;

pub(crate) mod shape_throttling_exception;

pub(crate) mod shape_update_destination_input;

pub(crate) mod shape_update_site_input;

pub(crate) mod shape_update_worker_fleet_input;

pub(crate) mod shape_update_worker_input;

pub(crate) mod shape_validation_exception;

pub(crate) mod shape_destinations;

pub(crate) mod shape_orientation;

pub(crate) mod shape_position_coordinates;

pub(crate) mod shape_sites;

pub(crate) mod shape_vendor_properties;

pub(crate) mod shape_worker_fleets;

pub(crate) mod shape_workers;

pub(crate) mod shape_cartesian_coordinates;

pub(crate) mod shape_destination;

pub(crate) mod shape_site;

pub(crate) mod shape_worker;

pub(crate) mod shape_worker_fleet;
