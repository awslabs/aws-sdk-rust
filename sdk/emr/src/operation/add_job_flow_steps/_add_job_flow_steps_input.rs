// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p> The input argument to the <code>AddJobFlowSteps</code> operation. </p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AddJobFlowStepsInput {
    /// <p>A string that uniquely identifies the job flow. This identifier is returned by <code>RunJobFlow</code> and can also be obtained from <code>ListClusters</code>. </p>
    pub job_flow_id: ::std::option::Option<::std::string::String>,
    /// <p> A list of <code>StepConfig</code> to be executed by the job flow. </p>
    pub steps: ::std::option::Option<::std::vec::Vec<crate::types::StepConfig>>,
    /// <p>The Amazon Resource Name (ARN) of the runtime role for a step on the cluster. The runtime role can be a cross-account IAM role. The runtime role ARN is a combination of account ID, role name, and role type using the following format: <code>arn:partition:service:region:account:resource</code>. </p>
    /// <p>For example, <code>arn:aws:IAM::1234567890:role/ReadOnly</code> is a correctly formatted runtime role ARN.</p>
    pub execution_role_arn: ::std::option::Option<::std::string::String>,
}
impl AddJobFlowStepsInput {
    /// <p>A string that uniquely identifies the job flow. This identifier is returned by <code>RunJobFlow</code> and can also be obtained from <code>ListClusters</code>. </p>
    pub fn job_flow_id(&self) -> ::std::option::Option<&str> {
        self.job_flow_id.as_deref()
    }
    /// <p> A list of <code>StepConfig</code> to be executed by the job flow. </p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.steps.is_none()`.
    pub fn steps(&self) -> &[crate::types::StepConfig] {
        self.steps.as_deref().unwrap_or_default()
    }
    /// <p>The Amazon Resource Name (ARN) of the runtime role for a step on the cluster. The runtime role can be a cross-account IAM role. The runtime role ARN is a combination of account ID, role name, and role type using the following format: <code>arn:partition:service:region:account:resource</code>. </p>
    /// <p>For example, <code>arn:aws:IAM::1234567890:role/ReadOnly</code> is a correctly formatted runtime role ARN.</p>
    pub fn execution_role_arn(&self) -> ::std::option::Option<&str> {
        self.execution_role_arn.as_deref()
    }
}
impl AddJobFlowStepsInput {
    /// Creates a new builder-style object to manufacture [`AddJobFlowStepsInput`](crate::operation::add_job_flow_steps::AddJobFlowStepsInput).
    pub fn builder() -> crate::operation::add_job_flow_steps::builders::AddJobFlowStepsInputBuilder {
        crate::operation::add_job_flow_steps::builders::AddJobFlowStepsInputBuilder::default()
    }
}

/// A builder for [`AddJobFlowStepsInput`](crate::operation::add_job_flow_steps::AddJobFlowStepsInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct AddJobFlowStepsInputBuilder {
    pub(crate) job_flow_id: ::std::option::Option<::std::string::String>,
    pub(crate) steps: ::std::option::Option<::std::vec::Vec<crate::types::StepConfig>>,
    pub(crate) execution_role_arn: ::std::option::Option<::std::string::String>,
}
impl AddJobFlowStepsInputBuilder {
    /// <p>A string that uniquely identifies the job flow. This identifier is returned by <code>RunJobFlow</code> and can also be obtained from <code>ListClusters</code>. </p>
    /// This field is required.
    pub fn job_flow_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.job_flow_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>A string that uniquely identifies the job flow. This identifier is returned by <code>RunJobFlow</code> and can also be obtained from <code>ListClusters</code>. </p>
    pub fn set_job_flow_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.job_flow_id = input;
        self
    }
    /// <p>A string that uniquely identifies the job flow. This identifier is returned by <code>RunJobFlow</code> and can also be obtained from <code>ListClusters</code>. </p>
    pub fn get_job_flow_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.job_flow_id
    }
    /// Appends an item to `steps`.
    ///
    /// To override the contents of this collection use [`set_steps`](Self::set_steps).
    ///
    /// <p> A list of <code>StepConfig</code> to be executed by the job flow. </p>
    pub fn steps(mut self, input: crate::types::StepConfig) -> Self {
        let mut v = self.steps.unwrap_or_default();
        v.push(input);
        self.steps = ::std::option::Option::Some(v);
        self
    }
    /// <p> A list of <code>StepConfig</code> to be executed by the job flow. </p>
    pub fn set_steps(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::StepConfig>>) -> Self {
        self.steps = input;
        self
    }
    /// <p> A list of <code>StepConfig</code> to be executed by the job flow. </p>
    pub fn get_steps(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::StepConfig>> {
        &self.steps
    }
    /// <p>The Amazon Resource Name (ARN) of the runtime role for a step on the cluster. The runtime role can be a cross-account IAM role. The runtime role ARN is a combination of account ID, role name, and role type using the following format: <code>arn:partition:service:region:account:resource</code>. </p>
    /// <p>For example, <code>arn:aws:IAM::1234567890:role/ReadOnly</code> is a correctly formatted runtime role ARN.</p>
    pub fn execution_role_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.execution_role_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the runtime role for a step on the cluster. The runtime role can be a cross-account IAM role. The runtime role ARN is a combination of account ID, role name, and role type using the following format: <code>arn:partition:service:region:account:resource</code>. </p>
    /// <p>For example, <code>arn:aws:IAM::1234567890:role/ReadOnly</code> is a correctly formatted runtime role ARN.</p>
    pub fn set_execution_role_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.execution_role_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the runtime role for a step on the cluster. The runtime role can be a cross-account IAM role. The runtime role ARN is a combination of account ID, role name, and role type using the following format: <code>arn:partition:service:region:account:resource</code>. </p>
    /// <p>For example, <code>arn:aws:IAM::1234567890:role/ReadOnly</code> is a correctly formatted runtime role ARN.</p>
    pub fn get_execution_role_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.execution_role_arn
    }
    /// Consumes the builder and constructs a [`AddJobFlowStepsInput`](crate::operation::add_job_flow_steps::AddJobFlowStepsInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::add_job_flow_steps::AddJobFlowStepsInput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::operation::add_job_flow_steps::AddJobFlowStepsInput {
            job_flow_id: self.job_flow_id,
            steps: self.steps,
            execution_role_arn: self.execution_role_arn,
        })
    }
}
