// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ListSecurityConfigurationsOutput {
    /// <p>The creation date and time, and name, of each security configuration.</p>
    #[doc(hidden)]
    pub security_configurations:
        std::option::Option<std::vec::Vec<crate::types::SecurityConfigurationSummary>>,
    /// <p>A pagination token that indicates the next set of results to retrieve. Include the marker in the next ListSecurityConfiguration call to retrieve the next page of results, if required.</p>
    #[doc(hidden)]
    pub marker: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl ListSecurityConfigurationsOutput {
    /// <p>The creation date and time, and name, of each security configuration.</p>
    pub fn security_configurations(
        &self,
    ) -> std::option::Option<&[crate::types::SecurityConfigurationSummary]> {
        self.security_configurations.as_deref()
    }
    /// <p>A pagination token that indicates the next set of results to retrieve. Include the marker in the next ListSecurityConfiguration call to retrieve the next page of results, if required.</p>
    pub fn marker(&self) -> std::option::Option<&str> {
        self.marker.as_deref()
    }
}
impl aws_http::request_id::RequestId for ListSecurityConfigurationsOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl ListSecurityConfigurationsOutput {
    /// Creates a new builder-style object to manufacture [`ListSecurityConfigurationsOutput`](crate::operation::list_security_configurations::ListSecurityConfigurationsOutput).
    pub fn builder() -> crate::operation::list_security_configurations::builders::ListSecurityConfigurationsOutputBuilder{
        crate::operation::list_security_configurations::builders::ListSecurityConfigurationsOutputBuilder::default()
    }
}

/// A builder for [`ListSecurityConfigurationsOutput`](crate::operation::list_security_configurations::ListSecurityConfigurationsOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ListSecurityConfigurationsOutputBuilder {
    pub(crate) security_configurations:
        std::option::Option<std::vec::Vec<crate::types::SecurityConfigurationSummary>>,
    pub(crate) marker: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl ListSecurityConfigurationsOutputBuilder {
    /// Appends an item to `security_configurations`.
    ///
    /// To override the contents of this collection use [`set_security_configurations`](Self::set_security_configurations).
    ///
    /// <p>The creation date and time, and name, of each security configuration.</p>
    pub fn security_configurations(
        mut self,
        input: crate::types::SecurityConfigurationSummary,
    ) -> Self {
        let mut v = self.security_configurations.unwrap_or_default();
        v.push(input);
        self.security_configurations = Some(v);
        self
    }
    /// <p>The creation date and time, and name, of each security configuration.</p>
    pub fn set_security_configurations(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::SecurityConfigurationSummary>>,
    ) -> Self {
        self.security_configurations = input;
        self
    }
    /// <p>A pagination token that indicates the next set of results to retrieve. Include the marker in the next ListSecurityConfiguration call to retrieve the next page of results, if required.</p>
    pub fn marker(mut self, input: impl Into<std::string::String>) -> Self {
        self.marker = Some(input.into());
        self
    }
    /// <p>A pagination token that indicates the next set of results to retrieve. Include the marker in the next ListSecurityConfiguration call to retrieve the next page of results, if required.</p>
    pub fn set_marker(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.marker = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`ListSecurityConfigurationsOutput`](crate::operation::list_security_configurations::ListSecurityConfigurationsOutput).
    pub fn build(
        self,
    ) -> crate::operation::list_security_configurations::ListSecurityConfigurationsOutput {
        crate::operation::list_security_configurations::ListSecurityConfigurationsOutput {
            security_configurations: self.security_configurations,
            marker: self.marker,
            _request_id: self._request_id,
        }
    }
}
