// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GetClusterSessionCredentialsOutput {
    /// <p>The credentials that you can use to connect to cluster endpoints that support username-based and password-based authentication.</p>
    #[doc(hidden)]
    pub credentials: std::option::Option<crate::types::Credentials>,
    /// <p>The time when the credentials that are returned by the <code>GetClusterSessionCredentials</code> API expire.</p>
    #[doc(hidden)]
    pub expires_at: std::option::Option<aws_smithy_types::DateTime>,
    _request_id: Option<String>,
}
impl GetClusterSessionCredentialsOutput {
    /// <p>The credentials that you can use to connect to cluster endpoints that support username-based and password-based authentication.</p>
    pub fn credentials(&self) -> std::option::Option<&crate::types::Credentials> {
        self.credentials.as_ref()
    }
    /// <p>The time when the credentials that are returned by the <code>GetClusterSessionCredentials</code> API expire.</p>
    pub fn expires_at(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.expires_at.as_ref()
    }
}
impl aws_http::request_id::RequestId for GetClusterSessionCredentialsOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl GetClusterSessionCredentialsOutput {
    /// Creates a new builder-style object to manufacture [`GetClusterSessionCredentialsOutput`](crate::operation::get_cluster_session_credentials::GetClusterSessionCredentialsOutput).
    pub fn builder() -> crate::operation::get_cluster_session_credentials::builders::GetClusterSessionCredentialsOutputBuilder{
        crate::operation::get_cluster_session_credentials::builders::GetClusterSessionCredentialsOutputBuilder::default()
    }
}

/// A builder for [`GetClusterSessionCredentialsOutput`](crate::operation::get_cluster_session_credentials::GetClusterSessionCredentialsOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct GetClusterSessionCredentialsOutputBuilder {
    pub(crate) credentials: std::option::Option<crate::types::Credentials>,
    pub(crate) expires_at: std::option::Option<aws_smithy_types::DateTime>,
    _request_id: Option<String>,
}
impl GetClusterSessionCredentialsOutputBuilder {
    /// <p>The credentials that you can use to connect to cluster endpoints that support username-based and password-based authentication.</p>
    pub fn credentials(mut self, input: crate::types::Credentials) -> Self {
        self.credentials = Some(input);
        self
    }
    /// <p>The credentials that you can use to connect to cluster endpoints that support username-based and password-based authentication.</p>
    pub fn set_credentials(
        mut self,
        input: std::option::Option<crate::types::Credentials>,
    ) -> Self {
        self.credentials = input;
        self
    }
    /// <p>The time when the credentials that are returned by the <code>GetClusterSessionCredentials</code> API expire.</p>
    pub fn expires_at(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.expires_at = Some(input);
        self
    }
    /// <p>The time when the credentials that are returned by the <code>GetClusterSessionCredentials</code> API expire.</p>
    pub fn set_expires_at(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.expires_at = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`GetClusterSessionCredentialsOutput`](crate::operation::get_cluster_session_credentials::GetClusterSessionCredentialsOutput).
    pub fn build(
        self,
    ) -> crate::operation::get_cluster_session_credentials::GetClusterSessionCredentialsOutput {
        crate::operation::get_cluster_session_credentials::GetClusterSessionCredentialsOutput {
            credentials: self.credentials,
            expires_at: self.expires_at,
            _request_id: self._request_id,
        }
    }
}
