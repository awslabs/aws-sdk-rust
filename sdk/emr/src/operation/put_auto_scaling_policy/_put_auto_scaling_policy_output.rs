// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct PutAutoScalingPolicyOutput {
    /// <p>Specifies the ID of a cluster. The instance group to which the automatic scaling policy is applied is within this cluster.</p>
    #[doc(hidden)]
    pub cluster_id: std::option::Option<std::string::String>,
    /// <p>Specifies the ID of the instance group to which the scaling policy is applied.</p>
    #[doc(hidden)]
    pub instance_group_id: std::option::Option<std::string::String>,
    /// <p>The automatic scaling policy definition.</p>
    #[doc(hidden)]
    pub auto_scaling_policy: std::option::Option<crate::types::AutoScalingPolicyDescription>,
    /// <p>The Amazon Resource Name (ARN) of the cluster.</p>
    #[doc(hidden)]
    pub cluster_arn: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl PutAutoScalingPolicyOutput {
    /// <p>Specifies the ID of a cluster. The instance group to which the automatic scaling policy is applied is within this cluster.</p>
    pub fn cluster_id(&self) -> std::option::Option<&str> {
        self.cluster_id.as_deref()
    }
    /// <p>Specifies the ID of the instance group to which the scaling policy is applied.</p>
    pub fn instance_group_id(&self) -> std::option::Option<&str> {
        self.instance_group_id.as_deref()
    }
    /// <p>The automatic scaling policy definition.</p>
    pub fn auto_scaling_policy(
        &self,
    ) -> std::option::Option<&crate::types::AutoScalingPolicyDescription> {
        self.auto_scaling_policy.as_ref()
    }
    /// <p>The Amazon Resource Name (ARN) of the cluster.</p>
    pub fn cluster_arn(&self) -> std::option::Option<&str> {
        self.cluster_arn.as_deref()
    }
}
impl aws_http::request_id::RequestId for PutAutoScalingPolicyOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl PutAutoScalingPolicyOutput {
    /// Creates a new builder-style object to manufacture [`PutAutoScalingPolicyOutput`](crate::operation::put_auto_scaling_policy::PutAutoScalingPolicyOutput).
    pub fn builder(
    ) -> crate::operation::put_auto_scaling_policy::builders::PutAutoScalingPolicyOutputBuilder
    {
        crate::operation::put_auto_scaling_policy::builders::PutAutoScalingPolicyOutputBuilder::default()
    }
}

/// A builder for [`PutAutoScalingPolicyOutput`](crate::operation::put_auto_scaling_policy::PutAutoScalingPolicyOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct PutAutoScalingPolicyOutputBuilder {
    pub(crate) cluster_id: std::option::Option<std::string::String>,
    pub(crate) instance_group_id: std::option::Option<std::string::String>,
    pub(crate) auto_scaling_policy: std::option::Option<crate::types::AutoScalingPolicyDescription>,
    pub(crate) cluster_arn: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl PutAutoScalingPolicyOutputBuilder {
    /// <p>Specifies the ID of a cluster. The instance group to which the automatic scaling policy is applied is within this cluster.</p>
    pub fn cluster_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.cluster_id = Some(input.into());
        self
    }
    /// <p>Specifies the ID of a cluster. The instance group to which the automatic scaling policy is applied is within this cluster.</p>
    pub fn set_cluster_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.cluster_id = input;
        self
    }
    /// <p>Specifies the ID of the instance group to which the scaling policy is applied.</p>
    pub fn instance_group_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.instance_group_id = Some(input.into());
        self
    }
    /// <p>Specifies the ID of the instance group to which the scaling policy is applied.</p>
    pub fn set_instance_group_id(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.instance_group_id = input;
        self
    }
    /// <p>The automatic scaling policy definition.</p>
    pub fn auto_scaling_policy(
        mut self,
        input: crate::types::AutoScalingPolicyDescription,
    ) -> Self {
        self.auto_scaling_policy = Some(input);
        self
    }
    /// <p>The automatic scaling policy definition.</p>
    pub fn set_auto_scaling_policy(
        mut self,
        input: std::option::Option<crate::types::AutoScalingPolicyDescription>,
    ) -> Self {
        self.auto_scaling_policy = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the cluster.</p>
    pub fn cluster_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.cluster_arn = Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the cluster.</p>
    pub fn set_cluster_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.cluster_arn = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`PutAutoScalingPolicyOutput`](crate::operation::put_auto_scaling_policy::PutAutoScalingPolicyOutput).
    pub fn build(self) -> crate::operation::put_auto_scaling_policy::PutAutoScalingPolicyOutput {
        crate::operation::put_auto_scaling_policy::PutAutoScalingPolicyOutput {
            cluster_id: self.cluster_id,
            instance_group_id: self.instance_group_id,
            auto_scaling_policy: self.auto_scaling_policy,
            cluster_arn: self.cluster_arn,
            _request_id: self._request_id,
        }
    }
}
