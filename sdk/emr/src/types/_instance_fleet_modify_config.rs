// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Configuration parameters for an instance fleet modification request.</p> <note>
/// <p>The instance fleet configuration is available only in Amazon EMR versions 4.8.0 and later, excluding 5.0.x versions.</p>
/// </note>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct InstanceFleetModifyConfig {
    /// <p>A unique identifier for the instance fleet.</p>
    #[doc(hidden)]
    pub instance_fleet_id: std::option::Option<std::string::String>,
    /// <p>The target capacity of On-Demand units for the instance fleet. For more information see <code>InstanceFleetConfig$TargetOnDemandCapacity</code>.</p>
    #[doc(hidden)]
    pub target_on_demand_capacity: std::option::Option<i32>,
    /// <p>The target capacity of Spot units for the instance fleet. For more information, see <code>InstanceFleetConfig$TargetSpotCapacity</code>.</p>
    #[doc(hidden)]
    pub target_spot_capacity: std::option::Option<i32>,
}
impl InstanceFleetModifyConfig {
    /// <p>A unique identifier for the instance fleet.</p>
    pub fn instance_fleet_id(&self) -> std::option::Option<&str> {
        self.instance_fleet_id.as_deref()
    }
    /// <p>The target capacity of On-Demand units for the instance fleet. For more information see <code>InstanceFleetConfig$TargetOnDemandCapacity</code>.</p>
    pub fn target_on_demand_capacity(&self) -> std::option::Option<i32> {
        self.target_on_demand_capacity
    }
    /// <p>The target capacity of Spot units for the instance fleet. For more information, see <code>InstanceFleetConfig$TargetSpotCapacity</code>.</p>
    pub fn target_spot_capacity(&self) -> std::option::Option<i32> {
        self.target_spot_capacity
    }
}
impl InstanceFleetModifyConfig {
    /// Creates a new builder-style object to manufacture [`InstanceFleetModifyConfig`](crate::types::InstanceFleetModifyConfig).
    pub fn builder() -> crate::types::builders::InstanceFleetModifyConfigBuilder {
        crate::types::builders::InstanceFleetModifyConfigBuilder::default()
    }
}

/// A builder for [`InstanceFleetModifyConfig`](crate::types::InstanceFleetModifyConfig).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct InstanceFleetModifyConfigBuilder {
    pub(crate) instance_fleet_id: std::option::Option<std::string::String>,
    pub(crate) target_on_demand_capacity: std::option::Option<i32>,
    pub(crate) target_spot_capacity: std::option::Option<i32>,
}
impl InstanceFleetModifyConfigBuilder {
    /// <p>A unique identifier for the instance fleet.</p>
    pub fn instance_fleet_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.instance_fleet_id = Some(input.into());
        self
    }
    /// <p>A unique identifier for the instance fleet.</p>
    pub fn set_instance_fleet_id(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.instance_fleet_id = input;
        self
    }
    /// <p>The target capacity of On-Demand units for the instance fleet. For more information see <code>InstanceFleetConfig$TargetOnDemandCapacity</code>.</p>
    pub fn target_on_demand_capacity(mut self, input: i32) -> Self {
        self.target_on_demand_capacity = Some(input);
        self
    }
    /// <p>The target capacity of On-Demand units for the instance fleet. For more information see <code>InstanceFleetConfig$TargetOnDemandCapacity</code>.</p>
    pub fn set_target_on_demand_capacity(mut self, input: std::option::Option<i32>) -> Self {
        self.target_on_demand_capacity = input;
        self
    }
    /// <p>The target capacity of Spot units for the instance fleet. For more information, see <code>InstanceFleetConfig$TargetSpotCapacity</code>.</p>
    pub fn target_spot_capacity(mut self, input: i32) -> Self {
        self.target_spot_capacity = Some(input);
        self
    }
    /// <p>The target capacity of Spot units for the instance fleet. For more information, see <code>InstanceFleetConfig$TargetSpotCapacity</code>.</p>
    pub fn set_target_spot_capacity(mut self, input: std::option::Option<i32>) -> Self {
        self.target_spot_capacity = input;
        self
    }
    /// Consumes the builder and constructs a [`InstanceFleetModifyConfig`](crate::types::InstanceFleetModifyConfig).
    pub fn build(self) -> crate::types::InstanceFleetModifyConfig {
        crate::types::InstanceFleetModifyConfig {
            instance_fleet_id: self.instance_fleet_id,
            target_on_demand_capacity: self.target_on_demand_capacity,
            target_spot_capacity: self.target_spot_capacity,
        }
    }
}
