// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A list of port ranges that are permitted to allow inbound traffic from all public IP addresses. To specify a single port, use the same value for <code>MinRange</code> and <code>MaxRange</code>.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct PortRange {
    /// <p>The smallest port number in a specified range of port numbers.</p>
    pub min_range: ::std::option::Option<i32>,
    /// <p>The smallest port number in a specified range of port numbers.</p>
    pub max_range: ::std::option::Option<i32>,
}
impl PortRange {
    /// <p>The smallest port number in a specified range of port numbers.</p>
    pub fn min_range(&self) -> ::std::option::Option<i32> {
        self.min_range
    }
    /// <p>The smallest port number in a specified range of port numbers.</p>
    pub fn max_range(&self) -> ::std::option::Option<i32> {
        self.max_range
    }
}
impl PortRange {
    /// Creates a new builder-style object to manufacture [`PortRange`](crate::types::PortRange).
    pub fn builder() -> crate::types::builders::PortRangeBuilder {
        crate::types::builders::PortRangeBuilder::default()
    }
}

/// A builder for [`PortRange`](crate::types::PortRange).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct PortRangeBuilder {
    pub(crate) min_range: ::std::option::Option<i32>,
    pub(crate) max_range: ::std::option::Option<i32>,
}
impl PortRangeBuilder {
    /// <p>The smallest port number in a specified range of port numbers.</p>
    /// This field is required.
    pub fn min_range(mut self, input: i32) -> Self {
        self.min_range = ::std::option::Option::Some(input);
        self
    }
    /// <p>The smallest port number in a specified range of port numbers.</p>
    pub fn set_min_range(mut self, input: ::std::option::Option<i32>) -> Self {
        self.min_range = input;
        self
    }
    /// <p>The smallest port number in a specified range of port numbers.</p>
    pub fn get_min_range(&self) -> &::std::option::Option<i32> {
        &self.min_range
    }
    /// <p>The smallest port number in a specified range of port numbers.</p>
    pub fn max_range(mut self, input: i32) -> Self {
        self.max_range = ::std::option::Option::Some(input);
        self
    }
    /// <p>The smallest port number in a specified range of port numbers.</p>
    pub fn set_max_range(mut self, input: ::std::option::Option<i32>) -> Self {
        self.max_range = input;
        self
    }
    /// <p>The smallest port number in a specified range of port numbers.</p>
    pub fn get_max_range(&self) -> &::std::option::Option<i32> {
        &self.max_range
    }
    /// Consumes the builder and constructs a [`PortRange`](crate::types::PortRange).
    pub fn build(self) -> crate::types::PortRange {
        crate::types::PortRange {
            min_range: self.min_range,
            max_range: self.max_range,
        }
    }
}
