// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Provides historical timestamps for the instance fleet, including the time of creation, the time it became ready to run jobs, and the time of termination.</p> <note>
/// <p>The instance fleet configuration is available only in Amazon EMR versions 4.8.0 and later, excluding 5.0.x versions.</p>
/// </note>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct InstanceFleetTimeline {
    /// <p>The time and date the instance fleet was created.</p>
    #[doc(hidden)]
    pub creation_date_time: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>The time and date the instance fleet was ready to run jobs.</p>
    #[doc(hidden)]
    pub ready_date_time: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>The time and date the instance fleet terminated.</p>
    #[doc(hidden)]
    pub end_date_time: std::option::Option<aws_smithy_types::DateTime>,
}
impl InstanceFleetTimeline {
    /// <p>The time and date the instance fleet was created.</p>
    pub fn creation_date_time(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.creation_date_time.as_ref()
    }
    /// <p>The time and date the instance fleet was ready to run jobs.</p>
    pub fn ready_date_time(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.ready_date_time.as_ref()
    }
    /// <p>The time and date the instance fleet terminated.</p>
    pub fn end_date_time(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.end_date_time.as_ref()
    }
}
impl InstanceFleetTimeline {
    /// Creates a new builder-style object to manufacture [`InstanceFleetTimeline`](crate::types::InstanceFleetTimeline).
    pub fn builder() -> crate::types::builders::InstanceFleetTimelineBuilder {
        crate::types::builders::InstanceFleetTimelineBuilder::default()
    }
}

/// A builder for [`InstanceFleetTimeline`](crate::types::InstanceFleetTimeline).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct InstanceFleetTimelineBuilder {
    pub(crate) creation_date_time: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) ready_date_time: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) end_date_time: std::option::Option<aws_smithy_types::DateTime>,
}
impl InstanceFleetTimelineBuilder {
    /// <p>The time and date the instance fleet was created.</p>
    pub fn creation_date_time(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.creation_date_time = Some(input);
        self
    }
    /// <p>The time and date the instance fleet was created.</p>
    pub fn set_creation_date_time(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.creation_date_time = input;
        self
    }
    /// <p>The time and date the instance fleet was ready to run jobs.</p>
    pub fn ready_date_time(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.ready_date_time = Some(input);
        self
    }
    /// <p>The time and date the instance fleet was ready to run jobs.</p>
    pub fn set_ready_date_time(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.ready_date_time = input;
        self
    }
    /// <p>The time and date the instance fleet terminated.</p>
    pub fn end_date_time(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.end_date_time = Some(input);
        self
    }
    /// <p>The time and date the instance fleet terminated.</p>
    pub fn set_end_date_time(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.end_date_time = input;
        self
    }
    /// Consumes the builder and constructs a [`InstanceFleetTimeline`](crate::types::InstanceFleetTimeline).
    pub fn build(self) -> crate::types::InstanceFleetTimeline {
        crate::types::InstanceFleetTimeline {
            creation_date_time: self.creation_date_time,
            ready_date_time: self.ready_date_time,
            end_date_time: self.end_date_time,
        }
    }
}
