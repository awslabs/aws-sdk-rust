// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The launch specification for Spot Instances in the fleet, which determines the defined duration, provisioning timeout behavior, and allocation strategy.</p> <note>
/// <p>The instance fleet configuration is available only in Amazon EMR releases 4.8.0 and higher, excluding 5.0.x versions. On-Demand and Spot instance allocation strategies are available in Amazon EMR releases 5.12.1 and higher.</p>
/// </note>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct InstanceFleetProvisioningSpecifications {
    /// <p>The launch specification for Spot instances in the fleet, which determines the defined duration, provisioning timeout behavior, and allocation strategy.</p>
    pub spot_specification: ::std::option::Option<crate::types::SpotProvisioningSpecification>,
    /// <p> The launch specification for On-Demand Instances in the instance fleet, which determines the allocation strategy. </p> <note>
    /// <p>The instance fleet configuration is available only in Amazon EMR releases 4.8.0 and higher, excluding 5.0.x versions. On-Demand Instances allocation strategy is available in Amazon EMR releases 5.12.1 and higher.</p>
    /// </note>
    pub on_demand_specification: ::std::option::Option<crate::types::OnDemandProvisioningSpecification>,
}
impl InstanceFleetProvisioningSpecifications {
    /// <p>The launch specification for Spot instances in the fleet, which determines the defined duration, provisioning timeout behavior, and allocation strategy.</p>
    pub fn spot_specification(&self) -> ::std::option::Option<&crate::types::SpotProvisioningSpecification> {
        self.spot_specification.as_ref()
    }
    /// <p> The launch specification for On-Demand Instances in the instance fleet, which determines the allocation strategy. </p> <note>
    /// <p>The instance fleet configuration is available only in Amazon EMR releases 4.8.0 and higher, excluding 5.0.x versions. On-Demand Instances allocation strategy is available in Amazon EMR releases 5.12.1 and higher.</p>
    /// </note>
    pub fn on_demand_specification(&self) -> ::std::option::Option<&crate::types::OnDemandProvisioningSpecification> {
        self.on_demand_specification.as_ref()
    }
}
impl InstanceFleetProvisioningSpecifications {
    /// Creates a new builder-style object to manufacture [`InstanceFleetProvisioningSpecifications`](crate::types::InstanceFleetProvisioningSpecifications).
    pub fn builder() -> crate::types::builders::InstanceFleetProvisioningSpecificationsBuilder {
        crate::types::builders::InstanceFleetProvisioningSpecificationsBuilder::default()
    }
}

/// A builder for [`InstanceFleetProvisioningSpecifications`](crate::types::InstanceFleetProvisioningSpecifications).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct InstanceFleetProvisioningSpecificationsBuilder {
    pub(crate) spot_specification: ::std::option::Option<crate::types::SpotProvisioningSpecification>,
    pub(crate) on_demand_specification: ::std::option::Option<crate::types::OnDemandProvisioningSpecification>,
}
impl InstanceFleetProvisioningSpecificationsBuilder {
    /// <p>The launch specification for Spot instances in the fleet, which determines the defined duration, provisioning timeout behavior, and allocation strategy.</p>
    pub fn spot_specification(mut self, input: crate::types::SpotProvisioningSpecification) -> Self {
        self.spot_specification = ::std::option::Option::Some(input);
        self
    }
    /// <p>The launch specification for Spot instances in the fleet, which determines the defined duration, provisioning timeout behavior, and allocation strategy.</p>
    pub fn set_spot_specification(mut self, input: ::std::option::Option<crate::types::SpotProvisioningSpecification>) -> Self {
        self.spot_specification = input;
        self
    }
    /// <p>The launch specification for Spot instances in the fleet, which determines the defined duration, provisioning timeout behavior, and allocation strategy.</p>
    pub fn get_spot_specification(&self) -> &::std::option::Option<crate::types::SpotProvisioningSpecification> {
        &self.spot_specification
    }
    /// <p> The launch specification for On-Demand Instances in the instance fleet, which determines the allocation strategy. </p> <note>
    /// <p>The instance fleet configuration is available only in Amazon EMR releases 4.8.0 and higher, excluding 5.0.x versions. On-Demand Instances allocation strategy is available in Amazon EMR releases 5.12.1 and higher.</p>
    /// </note>
    pub fn on_demand_specification(mut self, input: crate::types::OnDemandProvisioningSpecification) -> Self {
        self.on_demand_specification = ::std::option::Option::Some(input);
        self
    }
    /// <p> The launch specification for On-Demand Instances in the instance fleet, which determines the allocation strategy. </p> <note>
    /// <p>The instance fleet configuration is available only in Amazon EMR releases 4.8.0 and higher, excluding 5.0.x versions. On-Demand Instances allocation strategy is available in Amazon EMR releases 5.12.1 and higher.</p>
    /// </note>
    pub fn set_on_demand_specification(mut self, input: ::std::option::Option<crate::types::OnDemandProvisioningSpecification>) -> Self {
        self.on_demand_specification = input;
        self
    }
    /// <p> The launch specification for On-Demand Instances in the instance fleet, which determines the allocation strategy. </p> <note>
    /// <p>The instance fleet configuration is available only in Amazon EMR releases 4.8.0 and higher, excluding 5.0.x versions. On-Demand Instances allocation strategy is available in Amazon EMR releases 5.12.1 and higher.</p>
    /// </note>
    pub fn get_on_demand_specification(&self) -> &::std::option::Option<crate::types::OnDemandProvisioningSpecification> {
        &self.on_demand_specification
    }
    /// Consumes the builder and constructs a [`InstanceFleetProvisioningSpecifications`](crate::types::InstanceFleetProvisioningSpecifications).
    pub fn build(self) -> crate::types::InstanceFleetProvisioningSpecifications {
        crate::types::InstanceFleetProvisioningSpecifications {
            spot_specification: self.spot_specification,
            on_demand_specification: self.on_demand_specification,
        }
    }
}
