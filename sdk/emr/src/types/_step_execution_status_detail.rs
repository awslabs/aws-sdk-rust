// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The execution state of a step.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct StepExecutionStatusDetail {
    /// <p>The state of the step.</p>
    pub state: ::std::option::Option<crate::types::StepExecutionState>,
    /// <p>The creation date and time of the step.</p>
    pub creation_date_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>The start date and time of the step.</p>
    pub start_date_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>The completion date and time of the step.</p>
    pub end_date_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>A description of the step's current state.</p>
    pub last_state_change_reason: ::std::option::Option<::std::string::String>,
}
impl StepExecutionStatusDetail {
    /// <p>The state of the step.</p>
    pub fn state(&self) -> ::std::option::Option<&crate::types::StepExecutionState> {
        self.state.as_ref()
    }
    /// <p>The creation date and time of the step.</p>
    pub fn creation_date_time(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.creation_date_time.as_ref()
    }
    /// <p>The start date and time of the step.</p>
    pub fn start_date_time(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.start_date_time.as_ref()
    }
    /// <p>The completion date and time of the step.</p>
    pub fn end_date_time(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.end_date_time.as_ref()
    }
    /// <p>A description of the step's current state.</p>
    pub fn last_state_change_reason(&self) -> ::std::option::Option<&str> {
        self.last_state_change_reason.as_deref()
    }
}
impl StepExecutionStatusDetail {
    /// Creates a new builder-style object to manufacture [`StepExecutionStatusDetail`](crate::types::StepExecutionStatusDetail).
    pub fn builder() -> crate::types::builders::StepExecutionStatusDetailBuilder {
        crate::types::builders::StepExecutionStatusDetailBuilder::default()
    }
}

/// A builder for [`StepExecutionStatusDetail`](crate::types::StepExecutionStatusDetail).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct StepExecutionStatusDetailBuilder {
    pub(crate) state: ::std::option::Option<crate::types::StepExecutionState>,
    pub(crate) creation_date_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) start_date_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) end_date_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) last_state_change_reason: ::std::option::Option<::std::string::String>,
}
impl StepExecutionStatusDetailBuilder {
    /// <p>The state of the step.</p>
    /// This field is required.
    pub fn state(mut self, input: crate::types::StepExecutionState) -> Self {
        self.state = ::std::option::Option::Some(input);
        self
    }
    /// <p>The state of the step.</p>
    pub fn set_state(mut self, input: ::std::option::Option<crate::types::StepExecutionState>) -> Self {
        self.state = input;
        self
    }
    /// <p>The state of the step.</p>
    pub fn get_state(&self) -> &::std::option::Option<crate::types::StepExecutionState> {
        &self.state
    }
    /// <p>The creation date and time of the step.</p>
    /// This field is required.
    pub fn creation_date_time(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.creation_date_time = ::std::option::Option::Some(input);
        self
    }
    /// <p>The creation date and time of the step.</p>
    pub fn set_creation_date_time(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.creation_date_time = input;
        self
    }
    /// <p>The creation date and time of the step.</p>
    pub fn get_creation_date_time(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.creation_date_time
    }
    /// <p>The start date and time of the step.</p>
    pub fn start_date_time(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.start_date_time = ::std::option::Option::Some(input);
        self
    }
    /// <p>The start date and time of the step.</p>
    pub fn set_start_date_time(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.start_date_time = input;
        self
    }
    /// <p>The start date and time of the step.</p>
    pub fn get_start_date_time(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.start_date_time
    }
    /// <p>The completion date and time of the step.</p>
    pub fn end_date_time(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.end_date_time = ::std::option::Option::Some(input);
        self
    }
    /// <p>The completion date and time of the step.</p>
    pub fn set_end_date_time(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.end_date_time = input;
        self
    }
    /// <p>The completion date and time of the step.</p>
    pub fn get_end_date_time(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.end_date_time
    }
    /// <p>A description of the step's current state.</p>
    pub fn last_state_change_reason(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.last_state_change_reason = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>A description of the step's current state.</p>
    pub fn set_last_state_change_reason(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.last_state_change_reason = input;
        self
    }
    /// <p>A description of the step's current state.</p>
    pub fn get_last_state_change_reason(&self) -> &::std::option::Option<::std::string::String> {
        &self.last_state_change_reason
    }
    /// Consumes the builder and constructs a [`StepExecutionStatusDetail`](crate::types::StepExecutionStatusDetail).
    pub fn build(self) -> crate::types::StepExecutionStatusDetail {
        crate::types::StepExecutionStatusDetail {
            state: self.state,
            creation_date_time: self.creation_date_time,
            start_date_time: self.start_date_time,
            end_date_time: self.end_date_time,
            last_state_change_reason: self.last_state_change_reason,
        }
    }
}
