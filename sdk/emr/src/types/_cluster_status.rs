// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The detailed status of the cluster.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ClusterStatus {
    /// <p>The current state of the cluster.</p>
    #[doc(hidden)]
    pub state: std::option::Option<crate::types::ClusterState>,
    /// <p>The reason for the cluster status change.</p>
    #[doc(hidden)]
    pub state_change_reason: std::option::Option<crate::types::ClusterStateChangeReason>,
    /// <p>A timeline that represents the status of a cluster over the lifetime of the cluster.</p>
    #[doc(hidden)]
    pub timeline: std::option::Option<crate::types::ClusterTimeline>,
}
impl ClusterStatus {
    /// <p>The current state of the cluster.</p>
    pub fn state(&self) -> std::option::Option<&crate::types::ClusterState> {
        self.state.as_ref()
    }
    /// <p>The reason for the cluster status change.</p>
    pub fn state_change_reason(
        &self,
    ) -> std::option::Option<&crate::types::ClusterStateChangeReason> {
        self.state_change_reason.as_ref()
    }
    /// <p>A timeline that represents the status of a cluster over the lifetime of the cluster.</p>
    pub fn timeline(&self) -> std::option::Option<&crate::types::ClusterTimeline> {
        self.timeline.as_ref()
    }
}
impl ClusterStatus {
    /// Creates a new builder-style object to manufacture [`ClusterStatus`](crate::types::ClusterStatus).
    pub fn builder() -> crate::types::builders::ClusterStatusBuilder {
        crate::types::builders::ClusterStatusBuilder::default()
    }
}

/// A builder for [`ClusterStatus`](crate::types::ClusterStatus).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ClusterStatusBuilder {
    pub(crate) state: std::option::Option<crate::types::ClusterState>,
    pub(crate) state_change_reason: std::option::Option<crate::types::ClusterStateChangeReason>,
    pub(crate) timeline: std::option::Option<crate::types::ClusterTimeline>,
}
impl ClusterStatusBuilder {
    /// <p>The current state of the cluster.</p>
    pub fn state(mut self, input: crate::types::ClusterState) -> Self {
        self.state = Some(input);
        self
    }
    /// <p>The current state of the cluster.</p>
    pub fn set_state(mut self, input: std::option::Option<crate::types::ClusterState>) -> Self {
        self.state = input;
        self
    }
    /// <p>The reason for the cluster status change.</p>
    pub fn state_change_reason(mut self, input: crate::types::ClusterStateChangeReason) -> Self {
        self.state_change_reason = Some(input);
        self
    }
    /// <p>The reason for the cluster status change.</p>
    pub fn set_state_change_reason(
        mut self,
        input: std::option::Option<crate::types::ClusterStateChangeReason>,
    ) -> Self {
        self.state_change_reason = input;
        self
    }
    /// <p>A timeline that represents the status of a cluster over the lifetime of the cluster.</p>
    pub fn timeline(mut self, input: crate::types::ClusterTimeline) -> Self {
        self.timeline = Some(input);
        self
    }
    /// <p>A timeline that represents the status of a cluster over the lifetime of the cluster.</p>
    pub fn set_timeline(
        mut self,
        input: std::option::Option<crate::types::ClusterTimeline>,
    ) -> Self {
        self.timeline = input;
        self
    }
    /// Consumes the builder and constructs a [`ClusterStatus`](crate::types::ClusterStatus).
    pub fn build(self) -> crate::types::ClusterStatus {
        crate::types::ClusterStatus {
            state: self.state,
            state_change_reason: self.state_change_reason,
            timeline: self.timeline,
        }
    }
}
