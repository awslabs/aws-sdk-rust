// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The status of the instance fleet.</p> <note>
/// <p>The instance fleet configuration is available only in Amazon EMR releases 4.8.0 and higher, excluding 5.0.x versions.</p>
/// </note>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct InstanceFleetStatus {
    /// <p>A code representing the instance fleet status.</p>
    /// <ul>
    /// <li> <p> <code>PROVISIONING</code>—The instance fleet is provisioning Amazon EC2 resources and is not yet ready to run jobs.</p> </li>
    /// <li> <p> <code>BOOTSTRAPPING</code>—Amazon EC2 instances and other resources have been provisioned and the bootstrap actions specified for the instances are underway.</p> </li>
    /// <li> <p> <code>RUNNING</code>—Amazon EC2 instances and other resources are running. They are either executing jobs or waiting to execute jobs.</p> </li>
    /// <li> <p> <code>RESIZING</code>—A resize operation is underway. Amazon EC2 instances are either being added or removed.</p> </li>
    /// <li> <p> <code>SUSPENDED</code>—A resize operation could not complete. Existing Amazon EC2 instances are running, but instances can't be added or removed.</p> </li>
    /// <li> <p> <code>TERMINATING</code>—The instance fleet is terminating Amazon EC2 instances.</p> </li>
    /// <li> <p> <code>TERMINATED</code>—The instance fleet is no longer active, and all Amazon EC2 instances have been terminated.</p> </li>
    /// </ul>
    pub state: ::std::option::Option<crate::types::InstanceFleetState>,
    /// <p>Provides status change reason details for the instance fleet.</p>
    pub state_change_reason: ::std::option::Option<crate::types::InstanceFleetStateChangeReason>,
    /// <p>Provides historical timestamps for the instance fleet, including the time of creation, the time it became ready to run jobs, and the time of termination.</p>
    pub timeline: ::std::option::Option<crate::types::InstanceFleetTimeline>,
}
impl InstanceFleetStatus {
    /// <p>A code representing the instance fleet status.</p>
    /// <ul>
    /// <li> <p> <code>PROVISIONING</code>—The instance fleet is provisioning Amazon EC2 resources and is not yet ready to run jobs.</p> </li>
    /// <li> <p> <code>BOOTSTRAPPING</code>—Amazon EC2 instances and other resources have been provisioned and the bootstrap actions specified for the instances are underway.</p> </li>
    /// <li> <p> <code>RUNNING</code>—Amazon EC2 instances and other resources are running. They are either executing jobs or waiting to execute jobs.</p> </li>
    /// <li> <p> <code>RESIZING</code>—A resize operation is underway. Amazon EC2 instances are either being added or removed.</p> </li>
    /// <li> <p> <code>SUSPENDED</code>—A resize operation could not complete. Existing Amazon EC2 instances are running, but instances can't be added or removed.</p> </li>
    /// <li> <p> <code>TERMINATING</code>—The instance fleet is terminating Amazon EC2 instances.</p> </li>
    /// <li> <p> <code>TERMINATED</code>—The instance fleet is no longer active, and all Amazon EC2 instances have been terminated.</p> </li>
    /// </ul>
    pub fn state(&self) -> ::std::option::Option<&crate::types::InstanceFleetState> {
        self.state.as_ref()
    }
    /// <p>Provides status change reason details for the instance fleet.</p>
    pub fn state_change_reason(&self) -> ::std::option::Option<&crate::types::InstanceFleetStateChangeReason> {
        self.state_change_reason.as_ref()
    }
    /// <p>Provides historical timestamps for the instance fleet, including the time of creation, the time it became ready to run jobs, and the time of termination.</p>
    pub fn timeline(&self) -> ::std::option::Option<&crate::types::InstanceFleetTimeline> {
        self.timeline.as_ref()
    }
}
impl InstanceFleetStatus {
    /// Creates a new builder-style object to manufacture [`InstanceFleetStatus`](crate::types::InstanceFleetStatus).
    pub fn builder() -> crate::types::builders::InstanceFleetStatusBuilder {
        crate::types::builders::InstanceFleetStatusBuilder::default()
    }
}

/// A builder for [`InstanceFleetStatus`](crate::types::InstanceFleetStatus).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct InstanceFleetStatusBuilder {
    pub(crate) state: ::std::option::Option<crate::types::InstanceFleetState>,
    pub(crate) state_change_reason: ::std::option::Option<crate::types::InstanceFleetStateChangeReason>,
    pub(crate) timeline: ::std::option::Option<crate::types::InstanceFleetTimeline>,
}
impl InstanceFleetStatusBuilder {
    /// <p>A code representing the instance fleet status.</p>
    /// <ul>
    /// <li> <p> <code>PROVISIONING</code>—The instance fleet is provisioning Amazon EC2 resources and is not yet ready to run jobs.</p> </li>
    /// <li> <p> <code>BOOTSTRAPPING</code>—Amazon EC2 instances and other resources have been provisioned and the bootstrap actions specified for the instances are underway.</p> </li>
    /// <li> <p> <code>RUNNING</code>—Amazon EC2 instances and other resources are running. They are either executing jobs or waiting to execute jobs.</p> </li>
    /// <li> <p> <code>RESIZING</code>—A resize operation is underway. Amazon EC2 instances are either being added or removed.</p> </li>
    /// <li> <p> <code>SUSPENDED</code>—A resize operation could not complete. Existing Amazon EC2 instances are running, but instances can't be added or removed.</p> </li>
    /// <li> <p> <code>TERMINATING</code>—The instance fleet is terminating Amazon EC2 instances.</p> </li>
    /// <li> <p> <code>TERMINATED</code>—The instance fleet is no longer active, and all Amazon EC2 instances have been terminated.</p> </li>
    /// </ul>
    pub fn state(mut self, input: crate::types::InstanceFleetState) -> Self {
        self.state = ::std::option::Option::Some(input);
        self
    }
    /// <p>A code representing the instance fleet status.</p>
    /// <ul>
    /// <li> <p> <code>PROVISIONING</code>—The instance fleet is provisioning Amazon EC2 resources and is not yet ready to run jobs.</p> </li>
    /// <li> <p> <code>BOOTSTRAPPING</code>—Amazon EC2 instances and other resources have been provisioned and the bootstrap actions specified for the instances are underway.</p> </li>
    /// <li> <p> <code>RUNNING</code>—Amazon EC2 instances and other resources are running. They are either executing jobs or waiting to execute jobs.</p> </li>
    /// <li> <p> <code>RESIZING</code>—A resize operation is underway. Amazon EC2 instances are either being added or removed.</p> </li>
    /// <li> <p> <code>SUSPENDED</code>—A resize operation could not complete. Existing Amazon EC2 instances are running, but instances can't be added or removed.</p> </li>
    /// <li> <p> <code>TERMINATING</code>—The instance fleet is terminating Amazon EC2 instances.</p> </li>
    /// <li> <p> <code>TERMINATED</code>—The instance fleet is no longer active, and all Amazon EC2 instances have been terminated.</p> </li>
    /// </ul>
    pub fn set_state(mut self, input: ::std::option::Option<crate::types::InstanceFleetState>) -> Self {
        self.state = input;
        self
    }
    /// <p>A code representing the instance fleet status.</p>
    /// <ul>
    /// <li> <p> <code>PROVISIONING</code>—The instance fleet is provisioning Amazon EC2 resources and is not yet ready to run jobs.</p> </li>
    /// <li> <p> <code>BOOTSTRAPPING</code>—Amazon EC2 instances and other resources have been provisioned and the bootstrap actions specified for the instances are underway.</p> </li>
    /// <li> <p> <code>RUNNING</code>—Amazon EC2 instances and other resources are running. They are either executing jobs or waiting to execute jobs.</p> </li>
    /// <li> <p> <code>RESIZING</code>—A resize operation is underway. Amazon EC2 instances are either being added or removed.</p> </li>
    /// <li> <p> <code>SUSPENDED</code>—A resize operation could not complete. Existing Amazon EC2 instances are running, but instances can't be added or removed.</p> </li>
    /// <li> <p> <code>TERMINATING</code>—The instance fleet is terminating Amazon EC2 instances.</p> </li>
    /// <li> <p> <code>TERMINATED</code>—The instance fleet is no longer active, and all Amazon EC2 instances have been terminated.</p> </li>
    /// </ul>
    pub fn get_state(&self) -> &::std::option::Option<crate::types::InstanceFleetState> {
        &self.state
    }
    /// <p>Provides status change reason details for the instance fleet.</p>
    pub fn state_change_reason(mut self, input: crate::types::InstanceFleetStateChangeReason) -> Self {
        self.state_change_reason = ::std::option::Option::Some(input);
        self
    }
    /// <p>Provides status change reason details for the instance fleet.</p>
    pub fn set_state_change_reason(mut self, input: ::std::option::Option<crate::types::InstanceFleetStateChangeReason>) -> Self {
        self.state_change_reason = input;
        self
    }
    /// <p>Provides status change reason details for the instance fleet.</p>
    pub fn get_state_change_reason(&self) -> &::std::option::Option<crate::types::InstanceFleetStateChangeReason> {
        &self.state_change_reason
    }
    /// <p>Provides historical timestamps for the instance fleet, including the time of creation, the time it became ready to run jobs, and the time of termination.</p>
    pub fn timeline(mut self, input: crate::types::InstanceFleetTimeline) -> Self {
        self.timeline = ::std::option::Option::Some(input);
        self
    }
    /// <p>Provides historical timestamps for the instance fleet, including the time of creation, the time it became ready to run jobs, and the time of termination.</p>
    pub fn set_timeline(mut self, input: ::std::option::Option<crate::types::InstanceFleetTimeline>) -> Self {
        self.timeline = input;
        self
    }
    /// <p>Provides historical timestamps for the instance fleet, including the time of creation, the time it became ready to run jobs, and the time of termination.</p>
    pub fn get_timeline(&self) -> &::std::option::Option<crate::types::InstanceFleetTimeline> {
        &self.timeline
    }
    /// Consumes the builder and constructs a [`InstanceFleetStatus`](crate::types::InstanceFleetStatus).
    pub fn build(self) -> crate::types::InstanceFleetStatus {
        crate::types::InstanceFleetStatus {
            state: self.state,
            state_change_reason: self.state_change_reason,
            timeline: self.timeline,
        }
    }
}
