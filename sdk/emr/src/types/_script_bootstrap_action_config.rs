// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Configuration of the script to run during a bootstrap action.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ScriptBootstrapActionConfig {
    /// <p>Location in Amazon S3 of the script to run during a bootstrap action.</p>
    #[doc(hidden)]
    pub path: std::option::Option<std::string::String>,
    /// <p>A list of command line arguments to pass to the bootstrap action script.</p>
    #[doc(hidden)]
    pub args: std::option::Option<std::vec::Vec<std::string::String>>,
}
impl ScriptBootstrapActionConfig {
    /// <p>Location in Amazon S3 of the script to run during a bootstrap action.</p>
    pub fn path(&self) -> std::option::Option<&str> {
        self.path.as_deref()
    }
    /// <p>A list of command line arguments to pass to the bootstrap action script.</p>
    pub fn args(&self) -> std::option::Option<&[std::string::String]> {
        self.args.as_deref()
    }
}
impl ScriptBootstrapActionConfig {
    /// Creates a new builder-style object to manufacture [`ScriptBootstrapActionConfig`](crate::types::ScriptBootstrapActionConfig).
    pub fn builder() -> crate::types::builders::ScriptBootstrapActionConfigBuilder {
        crate::types::builders::ScriptBootstrapActionConfigBuilder::default()
    }
}

/// A builder for [`ScriptBootstrapActionConfig`](crate::types::ScriptBootstrapActionConfig).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ScriptBootstrapActionConfigBuilder {
    pub(crate) path: std::option::Option<std::string::String>,
    pub(crate) args: std::option::Option<std::vec::Vec<std::string::String>>,
}
impl ScriptBootstrapActionConfigBuilder {
    /// <p>Location in Amazon S3 of the script to run during a bootstrap action.</p>
    pub fn path(mut self, input: impl Into<std::string::String>) -> Self {
        self.path = Some(input.into());
        self
    }
    /// <p>Location in Amazon S3 of the script to run during a bootstrap action.</p>
    pub fn set_path(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.path = input;
        self
    }
    /// Appends an item to `args`.
    ///
    /// To override the contents of this collection use [`set_args`](Self::set_args).
    ///
    /// <p>A list of command line arguments to pass to the bootstrap action script.</p>
    pub fn args(mut self, input: impl Into<std::string::String>) -> Self {
        let mut v = self.args.unwrap_or_default();
        v.push(input.into());
        self.args = Some(v);
        self
    }
    /// <p>A list of command line arguments to pass to the bootstrap action script.</p>
    pub fn set_args(
        mut self,
        input: std::option::Option<std::vec::Vec<std::string::String>>,
    ) -> Self {
        self.args = input;
        self
    }
    /// Consumes the builder and constructs a [`ScriptBootstrapActionConfig`](crate::types::ScriptBootstrapActionConfig).
    pub fn build(self) -> crate::types::ScriptBootstrapActionConfig {
        crate::types::ScriptBootstrapActionConfig {
            path: self.path,
            args: self.args,
        }
    }
}
