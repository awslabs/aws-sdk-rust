// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`PutManagedScalingPolicy`](crate::operation::put_managed_scaling_policy::builders::PutManagedScalingPolicyFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`cluster_id(impl Into<String>)`](crate::operation::put_managed_scaling_policy::builders::PutManagedScalingPolicyFluentBuilder::cluster_id) / [`set_cluster_id(Option<String>)`](crate::operation::put_managed_scaling_policy::builders::PutManagedScalingPolicyFluentBuilder::set_cluster_id):<br>required: **true**<br><p>Specifies the ID of an Amazon EMR cluster where the managed scaling policy is attached. </p><br>
    ///   - [`managed_scaling_policy(ManagedScalingPolicy)`](crate::operation::put_managed_scaling_policy::builders::PutManagedScalingPolicyFluentBuilder::managed_scaling_policy) / [`set_managed_scaling_policy(Option<ManagedScalingPolicy>)`](crate::operation::put_managed_scaling_policy::builders::PutManagedScalingPolicyFluentBuilder::set_managed_scaling_policy):<br>required: **true**<br><p>Specifies the constraints for the managed scaling policy. </p><br>
    /// - On success, responds with [`PutManagedScalingPolicyOutput`](crate::operation::put_managed_scaling_policy::PutManagedScalingPolicyOutput)
    /// - On failure, responds with [`SdkError<PutManagedScalingPolicyError>`](crate::operation::put_managed_scaling_policy::PutManagedScalingPolicyError)
    pub fn put_managed_scaling_policy(&self) -> crate::operation::put_managed_scaling_policy::builders::PutManagedScalingPolicyFluentBuilder {
        crate::operation::put_managed_scaling_policy::builders::PutManagedScalingPolicyFluentBuilder::new(self.handle.clone())
    }
}
