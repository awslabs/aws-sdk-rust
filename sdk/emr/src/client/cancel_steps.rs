// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CancelSteps`](crate::operation::cancel_steps::builders::CancelStepsFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`cluster_id(impl Into<String>)`](crate::operation::cancel_steps::builders::CancelStepsFluentBuilder::cluster_id) / [`set_cluster_id(Option<String>)`](crate::operation::cancel_steps::builders::CancelStepsFluentBuilder::set_cluster_id):<br>required: **true**<br><p>The <code>ClusterID</code> for the specified steps that will be canceled. Use <code>RunJobFlow</code> and <code>ListClusters</code> to get ClusterIDs. </p><br>
    ///   - [`step_ids(impl Into<String>)`](crate::operation::cancel_steps::builders::CancelStepsFluentBuilder::step_ids) / [`set_step_ids(Option<Vec::<String>>)`](crate::operation::cancel_steps::builders::CancelStepsFluentBuilder::set_step_ids):<br>required: **true**<br><p>The list of <code>StepIDs</code> to cancel. Use <code>ListSteps</code> to get steps and their states for the specified cluster.</p><br>
    ///   - [`step_cancellation_option(StepCancellationOption)`](crate::operation::cancel_steps::builders::CancelStepsFluentBuilder::step_cancellation_option) / [`set_step_cancellation_option(Option<StepCancellationOption>)`](crate::operation::cancel_steps::builders::CancelStepsFluentBuilder::set_step_cancellation_option):<br>required: **false**<br><p>The option to choose to cancel <code>RUNNING</code> steps. By default, the value is <code>SEND_INTERRUPT</code>.</p><br>
    /// - On success, responds with [`CancelStepsOutput`](crate::operation::cancel_steps::CancelStepsOutput) with field(s):
    ///   - [`cancel_steps_info_list(Option<Vec::<CancelStepsInfo>>)`](crate::operation::cancel_steps::CancelStepsOutput::cancel_steps_info_list): <p>A list of <code>CancelStepsInfo</code>, which shows the status of specified cancel requests for each <code>StepID</code> specified.</p>
    /// - On failure, responds with [`SdkError<CancelStepsError>`](crate::operation::cancel_steps::CancelStepsError)
    pub fn cancel_steps(&self) -> crate::operation::cancel_steps::builders::CancelStepsFluentBuilder {
        crate::operation::cancel_steps::builders::CancelStepsFluentBuilder::new(self.handle.clone())
    }
}
