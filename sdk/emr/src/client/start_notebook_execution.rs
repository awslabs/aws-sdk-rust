// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`StartNotebookExecution`](crate::operation::start_notebook_execution::builders::StartNotebookExecutionFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`editor_id(impl Into<String>)`](crate::operation::start_notebook_execution::builders::StartNotebookExecutionFluentBuilder::editor_id) / [`set_editor_id(Option<String>)`](crate::operation::start_notebook_execution::builders::StartNotebookExecutionFluentBuilder::set_editor_id):<br>required: **false**<br><p>The unique identifier of the Amazon EMR Notebook to use for notebook execution.</p><br>
    ///   - [`relative_path(impl Into<String>)`](crate::operation::start_notebook_execution::builders::StartNotebookExecutionFluentBuilder::relative_path) / [`set_relative_path(Option<String>)`](crate::operation::start_notebook_execution::builders::StartNotebookExecutionFluentBuilder::set_relative_path):<br>required: **false**<br><p>The path and file name of the notebook file for this execution, relative to the path specified for the Amazon EMR Notebook. For example, if you specify a path of <code>s3://MyBucket/MyNotebooks</code> when you create an Amazon EMR Notebook for a notebook with an ID of <code>e-ABCDEFGHIJK1234567890ABCD</code> (the <code>EditorID</code> of this request), and you specify a <code>RelativePath</code> of <code>my_notebook_executions/notebook_execution.ipynb</code>, the location of the file for the notebook execution is <code>s3://MyBucket/MyNotebooks/e-ABCDEFGHIJK1234567890ABCD/my_notebook_executions/notebook_execution.ipynb</code>.</p><br>
    ///   - [`notebook_execution_name(impl Into<String>)`](crate::operation::start_notebook_execution::builders::StartNotebookExecutionFluentBuilder::notebook_execution_name) / [`set_notebook_execution_name(Option<String>)`](crate::operation::start_notebook_execution::builders::StartNotebookExecutionFluentBuilder::set_notebook_execution_name):<br>required: **false**<br><p>An optional name for the notebook execution.</p><br>
    ///   - [`notebook_params(impl Into<String>)`](crate::operation::start_notebook_execution::builders::StartNotebookExecutionFluentBuilder::notebook_params) / [`set_notebook_params(Option<String>)`](crate::operation::start_notebook_execution::builders::StartNotebookExecutionFluentBuilder::set_notebook_params):<br>required: **false**<br><p>Input parameters in JSON format passed to the Amazon EMR Notebook at runtime for execution.</p><br>
    ///   - [`execution_engine(ExecutionEngineConfig)`](crate::operation::start_notebook_execution::builders::StartNotebookExecutionFluentBuilder::execution_engine) / [`set_execution_engine(Option<ExecutionEngineConfig>)`](crate::operation::start_notebook_execution::builders::StartNotebookExecutionFluentBuilder::set_execution_engine):<br>required: **true**<br><p>Specifies the execution engine (cluster) that runs the notebook execution.</p><br>
    ///   - [`service_role(impl Into<String>)`](crate::operation::start_notebook_execution::builders::StartNotebookExecutionFluentBuilder::service_role) / [`set_service_role(Option<String>)`](crate::operation::start_notebook_execution::builders::StartNotebookExecutionFluentBuilder::set_service_role):<br>required: **true**<br><p>The name or ARN of the IAM role that is used as the service role for Amazon EMR (the Amazon EMR role) for the notebook execution.</p><br>
    ///   - [`notebook_instance_security_group_id(impl Into<String>)`](crate::operation::start_notebook_execution::builders::StartNotebookExecutionFluentBuilder::notebook_instance_security_group_id) / [`set_notebook_instance_security_group_id(Option<String>)`](crate::operation::start_notebook_execution::builders::StartNotebookExecutionFluentBuilder::set_notebook_instance_security_group_id):<br>required: **false**<br><p>The unique identifier of the Amazon EC2 security group to associate with the Amazon EMR Notebook for this notebook execution.</p><br>
    ///   - [`tags(Tag)`](crate::operation::start_notebook_execution::builders::StartNotebookExecutionFluentBuilder::tags) / [`set_tags(Option<Vec::<Tag>>)`](crate::operation::start_notebook_execution::builders::StartNotebookExecutionFluentBuilder::set_tags):<br>required: **false**<br><p>A list of tags associated with a notebook execution. Tags are user-defined key-value pairs that consist of a required key string with a maximum of 128 characters and an optional value string with a maximum of 256 characters.</p><br>
    ///   - [`notebook_s3_location(NotebookS3LocationFromInput)`](crate::operation::start_notebook_execution::builders::StartNotebookExecutionFluentBuilder::notebook_s3_location) / [`set_notebook_s3_location(Option<NotebookS3LocationFromInput>)`](crate::operation::start_notebook_execution::builders::StartNotebookExecutionFluentBuilder::set_notebook_s3_location):<br>required: **false**<br><p>The Amazon S3 location for the notebook execution input.</p><br>
    ///   - [`output_notebook_s3_location(OutputNotebookS3LocationFromInput)`](crate::operation::start_notebook_execution::builders::StartNotebookExecutionFluentBuilder::output_notebook_s3_location) / [`set_output_notebook_s3_location(Option<OutputNotebookS3LocationFromInput>)`](crate::operation::start_notebook_execution::builders::StartNotebookExecutionFluentBuilder::set_output_notebook_s3_location):<br>required: **false**<br><p>The Amazon S3 location for the notebook execution output.</p><br>
    ///   - [`output_notebook_format(OutputNotebookFormat)`](crate::operation::start_notebook_execution::builders::StartNotebookExecutionFluentBuilder::output_notebook_format) / [`set_output_notebook_format(Option<OutputNotebookFormat>)`](crate::operation::start_notebook_execution::builders::StartNotebookExecutionFluentBuilder::set_output_notebook_format):<br>required: **false**<br><p>The output format for the notebook execution.</p><br>
    ///   - [`environment_variables(impl Into<String>, impl Into<String>)`](crate::operation::start_notebook_execution::builders::StartNotebookExecutionFluentBuilder::environment_variables) / [`set_environment_variables(Option<HashMap::<String, String>>)`](crate::operation::start_notebook_execution::builders::StartNotebookExecutionFluentBuilder::set_environment_variables):<br>required: **false**<br><p>The environment variables associated with the notebook execution.</p><br>
    /// - On success, responds with [`StartNotebookExecutionOutput`](crate::operation::start_notebook_execution::StartNotebookExecutionOutput) with field(s):
    ///   - [`notebook_execution_id(Option<String>)`](crate::operation::start_notebook_execution::StartNotebookExecutionOutput::notebook_execution_id): <p>The unique identifier of the notebook execution.</p>
    /// - On failure, responds with [`SdkError<StartNotebookExecutionError>`](crate::operation::start_notebook_execution::StartNotebookExecutionError)
    pub fn start_notebook_execution(&self) -> crate::operation::start_notebook_execution::builders::StartNotebookExecutionFluentBuilder {
        crate::operation::start_notebook_execution::builders::StartNotebookExecutionFluentBuilder::new(self.handle.clone())
    }
}
