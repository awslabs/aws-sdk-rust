// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) fn de_job_flow_detail<'a, I>(
    tokens: &mut ::std::iter::Peekable<I>,
) -> Result<Option<crate::types::JobFlowDetail>, ::aws_smithy_json::deserialize::error::DeserializeError>
where
    I: Iterator<Item = Result<::aws_smithy_json::deserialize::Token<'a>, ::aws_smithy_json::deserialize::error::DeserializeError>>,
{
    match tokens.next().transpose()? {
        Some(::aws_smithy_json::deserialize::Token::ValueNull { .. }) => Ok(None),
        Some(::aws_smithy_json::deserialize::Token::StartObject { .. }) => {
            #[allow(unused_mut)]
            let mut builder = crate::types::builders::JobFlowDetailBuilder::default();
            loop {
                match tokens.next().transpose()? {
                    Some(::aws_smithy_json::deserialize::Token::EndObject { .. }) => break,
                    Some(::aws_smithy_json::deserialize::Token::ObjectKey { key, .. }) => match key.to_unescaped()?.as_ref() {
                        "JobFlowId" => {
                            builder = builder.set_job_flow_id(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                            );
                        }
                        "Name" => {
                            builder = builder.set_name(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                            );
                        }
                        "LogUri" => {
                            builder = builder.set_log_uri(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                            );
                        }
                        "LogEncryptionKmsKeyId" => {
                            builder = builder.set_log_encryption_kms_key_id(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                            );
                        }
                        "AmiVersion" => {
                            builder = builder.set_ami_version(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                            );
                        }
                        "ExecutionStatusDetail" => {
                            builder = builder.set_execution_status_detail(
                                crate::protocol_serde::shape_job_flow_execution_status_detail::de_job_flow_execution_status_detail(tokens)?,
                            );
                        }
                        "Instances" => {
                            builder = builder.set_instances(crate::protocol_serde::shape_job_flow_instances_detail::de_job_flow_instances_detail(
                                tokens,
                            )?);
                        }
                        "Steps" => {
                            builder = builder.set_steps(crate::protocol_serde::shape_step_detail_list::de_step_detail_list(tokens)?);
                        }
                        "BootstrapActions" => {
                            builder = builder.set_bootstrap_actions(
                                crate::protocol_serde::shape_bootstrap_action_detail_list::de_bootstrap_action_detail_list(tokens)?,
                            );
                        }
                        "SupportedProducts" => {
                            builder = builder
                                .set_supported_products(crate::protocol_serde::shape_supported_products_list::de_supported_products_list(tokens)?);
                        }
                        "VisibleToAllUsers" => {
                            builder = builder.set_visible_to_all_users(::aws_smithy_json::deserialize::token::expect_bool_or_null(tokens.next())?);
                        }
                        "JobFlowRole" => {
                            builder = builder.set_job_flow_role(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                            );
                        }
                        "ServiceRole" => {
                            builder = builder.set_service_role(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                            );
                        }
                        "AutoScalingRole" => {
                            builder = builder.set_auto_scaling_role(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                            );
                        }
                        "ScaleDownBehavior" => {
                            builder = builder.set_scale_down_behavior(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| crate::types::ScaleDownBehavior::from(u.as_ref())))
                                    .transpose()?,
                            );
                        }
                        _ => ::aws_smithy_json::deserialize::token::skip_value(tokens)?,
                    },
                    other => {
                        return Err(::aws_smithy_json::deserialize::error::DeserializeError::custom(format!(
                            "expected object key or end object, found: {:?}",
                            other
                        )))
                    }
                }
            }
            Ok(Some(crate::serde_util::job_flow_detail_correct_errors(builder).build()))
        }
        _ => Err(::aws_smithy_json::deserialize::error::DeserializeError::custom(
            "expected start object or null",
        )),
    }
}
