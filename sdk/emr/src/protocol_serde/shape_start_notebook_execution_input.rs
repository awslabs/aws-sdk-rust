// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_start_notebook_execution_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::start_notebook_execution::StartNotebookExecutionInput,
) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    if let Some(var_1) = &input.editor_id {
        object.key("EditorId").string(var_1.as_str());
    }
    if let Some(var_2) = &input.relative_path {
        object.key("RelativePath").string(var_2.as_str());
    }
    if let Some(var_3) = &input.notebook_execution_name {
        object.key("NotebookExecutionName").string(var_3.as_str());
    }
    if let Some(var_4) = &input.notebook_params {
        object.key("NotebookParams").string(var_4.as_str());
    }
    if let Some(var_5) = &input.execution_engine {
        #[allow(unused_mut)]
        let mut object_6 = object.key("ExecutionEngine").start_object();
        crate::protocol_serde::shape_execution_engine_config::ser_execution_engine_config(
            &mut object_6,
            var_5,
        )?;
        object_6.finish();
    }
    if let Some(var_7) = &input.service_role {
        object.key("ServiceRole").string(var_7.as_str());
    }
    if let Some(var_8) = &input.notebook_instance_security_group_id {
        object
            .key("NotebookInstanceSecurityGroupId")
            .string(var_8.as_str());
    }
    if let Some(var_9) = &input.tags {
        let mut array_10 = object.key("Tags").start_array();
        for item_11 in var_9 {
            {
                #[allow(unused_mut)]
                let mut object_12 = array_10.value().start_object();
                crate::protocol_serde::shape_tag::ser_tag(&mut object_12, item_11)?;
                object_12.finish();
            }
        }
        array_10.finish();
    }
    Ok(())
}
