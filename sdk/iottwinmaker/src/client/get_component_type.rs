// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetComponentType`](crate::operation::get_component_type::builders::GetComponentTypeFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`workspace_id(impl Into<String>)`](crate::operation::get_component_type::builders::GetComponentTypeFluentBuilder::workspace_id) / [`set_workspace_id(Option<String>)`](crate::operation::get_component_type::builders::GetComponentTypeFluentBuilder::set_workspace_id):<br>required: **true**<br><p>The ID of the workspace that contains the component type.</p><br>
    ///   - [`component_type_id(impl Into<String>)`](crate::operation::get_component_type::builders::GetComponentTypeFluentBuilder::component_type_id) / [`set_component_type_id(Option<String>)`](crate::operation::get_component_type::builders::GetComponentTypeFluentBuilder::set_component_type_id):<br>required: **true**<br><p>The ID of the component type.</p><br>
    /// - On success, responds with [`GetComponentTypeOutput`](crate::operation::get_component_type::GetComponentTypeOutput) with field(s):
    ///   - [`workspace_id(String)`](crate::operation::get_component_type::GetComponentTypeOutput::workspace_id): <p>The ID of the workspace that contains the component type.</p>
    ///   - [`is_singleton(Option<bool>)`](crate::operation::get_component_type::GetComponentTypeOutput::is_singleton): <p>A Boolean value that specifies whether an entity can have more than one component of this type.</p>
    ///   - [`component_type_id(String)`](crate::operation::get_component_type::GetComponentTypeOutput::component_type_id): <p>The ID of the component type.</p>
    ///   - [`description(Option<String>)`](crate::operation::get_component_type::GetComponentTypeOutput::description): <p>The description of the component type.</p>
    ///   - [`property_definitions(Option<HashMap::<String, PropertyDefinitionResponse>>)`](crate::operation::get_component_type::GetComponentTypeOutput::property_definitions): <p>An object that maps strings to the property definitions in the component type. Each string in the mapping must be unique to this object.</p>
    ///   - [`extends_from(Option<Vec::<String>>)`](crate::operation::get_component_type::GetComponentTypeOutput::extends_from): <p>The name of the parent component type that this component type extends.</p>
    ///   - [`functions(Option<HashMap::<String, FunctionResponse>>)`](crate::operation::get_component_type::GetComponentTypeOutput::functions): <p>An object that maps strings to the functions in the component type. Each string in the mapping must be unique to this object.</p>
    ///   - [`creation_date_time(DateTime)`](crate::operation::get_component_type::GetComponentTypeOutput::creation_date_time): <p>The date and time when the component type was created.</p>
    ///   - [`update_date_time(DateTime)`](crate::operation::get_component_type::GetComponentTypeOutput::update_date_time): <p>The date and time when the component was last updated.</p>
    ///   - [`arn(String)`](crate::operation::get_component_type::GetComponentTypeOutput::arn): <p>The ARN of the component type.</p>
    ///   - [`is_abstract(Option<bool>)`](crate::operation::get_component_type::GetComponentTypeOutput::is_abstract): <p>A Boolean value that specifies whether the component type is abstract.</p>
    ///   - [`is_schema_initialized(Option<bool>)`](crate::operation::get_component_type::GetComponentTypeOutput::is_schema_initialized): <p>A Boolean value that specifies whether the component type has a schema initializer and that the schema initializer has run.</p>
    ///   - [`status(Option<Status>)`](crate::operation::get_component_type::GetComponentTypeOutput::status): <p>The current status of the component type.</p>
    ///   - [`property_groups(Option<HashMap::<String, PropertyGroupResponse>>)`](crate::operation::get_component_type::GetComponentTypeOutput::property_groups): <p>The maximum number of results to return at one time. The default is 25.</p>  <p>Valid Range: Minimum value of 1. Maximum value of 250.</p>
    ///   - [`sync_source(Option<String>)`](crate::operation::get_component_type::GetComponentTypeOutput::sync_source): <p>The syncSource of the SyncJob, if this entity was created by a SyncJob.</p>
    ///   - [`component_type_name(Option<String>)`](crate::operation::get_component_type::GetComponentTypeOutput::component_type_name): <p>The component type name.</p>
    /// - On failure, responds with [`SdkError<GetComponentTypeError>`](crate::operation::get_component_type::GetComponentTypeError)
    pub fn get_component_type(&self) -> crate::operation::get_component_type::builders::GetComponentTypeFluentBuilder {
        crate::operation::get_component_type::builders::GetComponentTypeFluentBuilder::new(self.handle.clone())
    }
}
