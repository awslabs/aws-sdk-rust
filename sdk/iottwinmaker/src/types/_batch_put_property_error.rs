// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>An error returned by the <code>BatchPutProperty</code> action.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct BatchPutPropertyError {
    /// <p>The error code.</p>
    #[doc(hidden)]
    pub error_code: std::option::Option<std::string::String>,
    /// <p>The error message.</p>
    #[doc(hidden)]
    pub error_message: std::option::Option<std::string::String>,
    /// <p>An object that contains information about errors returned by the <code>BatchPutProperty</code> action.</p>
    #[doc(hidden)]
    pub entry: std::option::Option<crate::types::PropertyValueEntry>,
}
impl BatchPutPropertyError {
    /// <p>The error code.</p>
    pub fn error_code(&self) -> std::option::Option<&str> {
        self.error_code.as_deref()
    }
    /// <p>The error message.</p>
    pub fn error_message(&self) -> std::option::Option<&str> {
        self.error_message.as_deref()
    }
    /// <p>An object that contains information about errors returned by the <code>BatchPutProperty</code> action.</p>
    pub fn entry(&self) -> std::option::Option<&crate::types::PropertyValueEntry> {
        self.entry.as_ref()
    }
}
impl BatchPutPropertyError {
    /// Creates a new builder-style object to manufacture [`BatchPutPropertyError`](crate::types::BatchPutPropertyError).
    pub fn builder() -> crate::types::builders::BatchPutPropertyErrorBuilder {
        crate::types::builders::BatchPutPropertyErrorBuilder::default()
    }
}

/// A builder for [`BatchPutPropertyError`](crate::types::BatchPutPropertyError).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct BatchPutPropertyErrorBuilder {
    pub(crate) error_code: std::option::Option<std::string::String>,
    pub(crate) error_message: std::option::Option<std::string::String>,
    pub(crate) entry: std::option::Option<crate::types::PropertyValueEntry>,
}
impl BatchPutPropertyErrorBuilder {
    /// <p>The error code.</p>
    pub fn error_code(mut self, input: impl Into<std::string::String>) -> Self {
        self.error_code = Some(input.into());
        self
    }
    /// <p>The error code.</p>
    pub fn set_error_code(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.error_code = input;
        self
    }
    /// <p>The error message.</p>
    pub fn error_message(mut self, input: impl Into<std::string::String>) -> Self {
        self.error_message = Some(input.into());
        self
    }
    /// <p>The error message.</p>
    pub fn set_error_message(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.error_message = input;
        self
    }
    /// <p>An object that contains information about errors returned by the <code>BatchPutProperty</code> action.</p>
    pub fn entry(mut self, input: crate::types::PropertyValueEntry) -> Self {
        self.entry = Some(input);
        self
    }
    /// <p>An object that contains information about errors returned by the <code>BatchPutProperty</code> action.</p>
    pub fn set_entry(
        mut self,
        input: std::option::Option<crate::types::PropertyValueEntry>,
    ) -> Self {
        self.entry = input;
        self
    }
    /// Consumes the builder and constructs a [`BatchPutPropertyError`](crate::types::BatchPutPropertyError).
    pub fn build(self) -> crate::types::BatchPutPropertyError {
        crate::types::BatchPutPropertyError {
            error_code: self.error_code,
            error_message: self.error_message,
            entry: self.entry,
        }
    }
}
