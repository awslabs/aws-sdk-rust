// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>An error returned by the <code>BatchPutProperty</code> action.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct BatchPutPropertyError {
    /// <p>The error code.</p>
    pub error_code: ::std::string::String,
    /// <p>The error message.</p>
    pub error_message: ::std::string::String,
    /// <p>An object that contains information about errors returned by the <code>BatchPutProperty</code> action.</p>
    pub entry: ::std::option::Option<crate::types::PropertyValueEntry>,
}
impl BatchPutPropertyError {
    /// <p>The error code.</p>
    pub fn error_code(&self) -> &str {
        use std::ops::Deref;
        self.error_code.deref()
    }
    /// <p>The error message.</p>
    pub fn error_message(&self) -> &str {
        use std::ops::Deref;
        self.error_message.deref()
    }
    /// <p>An object that contains information about errors returned by the <code>BatchPutProperty</code> action.</p>
    pub fn entry(&self) -> ::std::option::Option<&crate::types::PropertyValueEntry> {
        self.entry.as_ref()
    }
}
impl BatchPutPropertyError {
    /// Creates a new builder-style object to manufacture [`BatchPutPropertyError`](crate::types::BatchPutPropertyError).
    pub fn builder() -> crate::types::builders::BatchPutPropertyErrorBuilder {
        crate::types::builders::BatchPutPropertyErrorBuilder::default()
    }
}

/// A builder for [`BatchPutPropertyError`](crate::types::BatchPutPropertyError).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct BatchPutPropertyErrorBuilder {
    pub(crate) error_code: ::std::option::Option<::std::string::String>,
    pub(crate) error_message: ::std::option::Option<::std::string::String>,
    pub(crate) entry: ::std::option::Option<crate::types::PropertyValueEntry>,
}
impl BatchPutPropertyErrorBuilder {
    /// <p>The error code.</p>
    /// This field is required.
    pub fn error_code(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.error_code = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The error code.</p>
    pub fn set_error_code(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.error_code = input;
        self
    }
    /// <p>The error code.</p>
    pub fn get_error_code(&self) -> &::std::option::Option<::std::string::String> {
        &self.error_code
    }
    /// <p>The error message.</p>
    /// This field is required.
    pub fn error_message(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.error_message = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The error message.</p>
    pub fn set_error_message(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.error_message = input;
        self
    }
    /// <p>The error message.</p>
    pub fn get_error_message(&self) -> &::std::option::Option<::std::string::String> {
        &self.error_message
    }
    /// <p>An object that contains information about errors returned by the <code>BatchPutProperty</code> action.</p>
    /// This field is required.
    pub fn entry(mut self, input: crate::types::PropertyValueEntry) -> Self {
        self.entry = ::std::option::Option::Some(input);
        self
    }
    /// <p>An object that contains information about errors returned by the <code>BatchPutProperty</code> action.</p>
    pub fn set_entry(mut self, input: ::std::option::Option<crate::types::PropertyValueEntry>) -> Self {
        self.entry = input;
        self
    }
    /// <p>An object that contains information about errors returned by the <code>BatchPutProperty</code> action.</p>
    pub fn get_entry(&self) -> &::std::option::Option<crate::types::PropertyValueEntry> {
        &self.entry
    }
    /// Consumes the builder and constructs a [`BatchPutPropertyError`](crate::types::BatchPutPropertyError).
    /// This method will fail if any of the following fields are not set:
    /// - [`error_code`](crate::types::builders::BatchPutPropertyErrorBuilder::error_code)
    /// - [`error_message`](crate::types::builders::BatchPutPropertyErrorBuilder::error_message)
    pub fn build(self) -> ::std::result::Result<crate::types::BatchPutPropertyError, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::BatchPutPropertyError {
            error_code: self.error_code.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "error_code",
                    "error_code was not specified but it is required when building BatchPutPropertyError",
                )
            })?,
            error_message: self.error_message.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "error_message",
                    "error_message was not specified but it is required when building BatchPutPropertyError",
                )
            })?,
            entry: self.entry,
        })
    }
}
