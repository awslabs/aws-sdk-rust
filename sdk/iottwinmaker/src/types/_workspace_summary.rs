// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>An object that contains information about a workspace.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct WorkspaceSummary {
    /// <p>The ID of the workspace.</p>
    pub workspace_id: ::std::string::String,
    /// <p>The ARN of the workspace.</p>
    pub arn: ::std::string::String,
    /// <p>The description of the workspace.</p>
    pub description: ::std::option::Option<::std::string::String>,
    /// <p>The date and time when the workspace was created.</p>
    pub creation_date_time: ::aws_smithy_types::DateTime,
    /// <p>The date and time when the workspace was last updated.</p>
    pub update_date_time: ::aws_smithy_types::DateTime,
}
impl WorkspaceSummary {
    /// <p>The ID of the workspace.</p>
    pub fn workspace_id(&self) -> &str {
        use std::ops::Deref;
        self.workspace_id.deref()
    }
    /// <p>The ARN of the workspace.</p>
    pub fn arn(&self) -> &str {
        use std::ops::Deref;
        self.arn.deref()
    }
    /// <p>The description of the workspace.</p>
    pub fn description(&self) -> ::std::option::Option<&str> {
        self.description.as_deref()
    }
    /// <p>The date and time when the workspace was created.</p>
    pub fn creation_date_time(&self) -> &::aws_smithy_types::DateTime {
        &self.creation_date_time
    }
    /// <p>The date and time when the workspace was last updated.</p>
    pub fn update_date_time(&self) -> &::aws_smithy_types::DateTime {
        &self.update_date_time
    }
}
impl WorkspaceSummary {
    /// Creates a new builder-style object to manufacture [`WorkspaceSummary`](crate::types::WorkspaceSummary).
    pub fn builder() -> crate::types::builders::WorkspaceSummaryBuilder {
        crate::types::builders::WorkspaceSummaryBuilder::default()
    }
}

/// A builder for [`WorkspaceSummary`](crate::types::WorkspaceSummary).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct WorkspaceSummaryBuilder {
    pub(crate) workspace_id: ::std::option::Option<::std::string::String>,
    pub(crate) arn: ::std::option::Option<::std::string::String>,
    pub(crate) description: ::std::option::Option<::std::string::String>,
    pub(crate) creation_date_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) update_date_time: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl WorkspaceSummaryBuilder {
    /// <p>The ID of the workspace.</p>
    /// This field is required.
    pub fn workspace_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.workspace_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of the workspace.</p>
    pub fn set_workspace_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.workspace_id = input;
        self
    }
    /// <p>The ID of the workspace.</p>
    pub fn get_workspace_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.workspace_id
    }
    /// <p>The ARN of the workspace.</p>
    /// This field is required.
    pub fn arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ARN of the workspace.</p>
    pub fn set_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.arn = input;
        self
    }
    /// <p>The ARN of the workspace.</p>
    pub fn get_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.arn
    }
    /// <p>The description of the workspace.</p>
    pub fn description(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.description = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The description of the workspace.</p>
    pub fn set_description(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.description = input;
        self
    }
    /// <p>The description of the workspace.</p>
    pub fn get_description(&self) -> &::std::option::Option<::std::string::String> {
        &self.description
    }
    /// <p>The date and time when the workspace was created.</p>
    /// This field is required.
    pub fn creation_date_time(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.creation_date_time = ::std::option::Option::Some(input);
        self
    }
    /// <p>The date and time when the workspace was created.</p>
    pub fn set_creation_date_time(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.creation_date_time = input;
        self
    }
    /// <p>The date and time when the workspace was created.</p>
    pub fn get_creation_date_time(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.creation_date_time
    }
    /// <p>The date and time when the workspace was last updated.</p>
    /// This field is required.
    pub fn update_date_time(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.update_date_time = ::std::option::Option::Some(input);
        self
    }
    /// <p>The date and time when the workspace was last updated.</p>
    pub fn set_update_date_time(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.update_date_time = input;
        self
    }
    /// <p>The date and time when the workspace was last updated.</p>
    pub fn get_update_date_time(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.update_date_time
    }
    /// Consumes the builder and constructs a [`WorkspaceSummary`](crate::types::WorkspaceSummary).
    /// This method will fail if any of the following fields are not set:
    /// - [`workspace_id`](crate::types::builders::WorkspaceSummaryBuilder::workspace_id)
    /// - [`arn`](crate::types::builders::WorkspaceSummaryBuilder::arn)
    /// - [`creation_date_time`](crate::types::builders::WorkspaceSummaryBuilder::creation_date_time)
    /// - [`update_date_time`](crate::types::builders::WorkspaceSummaryBuilder::update_date_time)
    pub fn build(self) -> ::std::result::Result<crate::types::WorkspaceSummary, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::WorkspaceSummary {
            workspace_id: self.workspace_id.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "workspace_id",
                    "workspace_id was not specified but it is required when building WorkspaceSummary",
                )
            })?,
            arn: self.arn.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "arn",
                    "arn was not specified but it is required when building WorkspaceSummary",
                )
            })?,
            description: self.description,
            creation_date_time: self.creation_date_time.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "creation_date_time",
                    "creation_date_time was not specified but it is required when building WorkspaceSummary",
                )
            })?,
            update_date_time: self.update_date_time.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "update_date_time",
                    "update_date_time was not specified but it is required when building WorkspaceSummary",
                )
            })?,
        })
    }
}
