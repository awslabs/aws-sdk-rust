// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>An object that contains information about errors returned by the <code>BatchPutProperty</code> action.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct BatchPutPropertyErrorEntry {
    /// <p>A list of objects that contain information about errors returned by the <code>BatchPutProperty</code> action.</p>
    #[doc(hidden)]
    pub errors: std::option::Option<std::vec::Vec<crate::types::BatchPutPropertyError>>,
}
impl BatchPutPropertyErrorEntry {
    /// <p>A list of objects that contain information about errors returned by the <code>BatchPutProperty</code> action.</p>
    pub fn errors(&self) -> std::option::Option<&[crate::types::BatchPutPropertyError]> {
        self.errors.as_deref()
    }
}
impl BatchPutPropertyErrorEntry {
    /// Creates a new builder-style object to manufacture [`BatchPutPropertyErrorEntry`](crate::types::BatchPutPropertyErrorEntry).
    pub fn builder() -> crate::types::builders::BatchPutPropertyErrorEntryBuilder {
        crate::types::builders::BatchPutPropertyErrorEntryBuilder::default()
    }
}

/// A builder for [`BatchPutPropertyErrorEntry`](crate::types::BatchPutPropertyErrorEntry).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct BatchPutPropertyErrorEntryBuilder {
    pub(crate) errors: std::option::Option<std::vec::Vec<crate::types::BatchPutPropertyError>>,
}
impl BatchPutPropertyErrorEntryBuilder {
    /// Appends an item to `errors`.
    ///
    /// To override the contents of this collection use [`set_errors`](Self::set_errors).
    ///
    /// <p>A list of objects that contain information about errors returned by the <code>BatchPutProperty</code> action.</p>
    pub fn errors(mut self, input: crate::types::BatchPutPropertyError) -> Self {
        let mut v = self.errors.unwrap_or_default();
        v.push(input);
        self.errors = Some(v);
        self
    }
    /// <p>A list of objects that contain information about errors returned by the <code>BatchPutProperty</code> action.</p>
    pub fn set_errors(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::BatchPutPropertyError>>,
    ) -> Self {
        self.errors = input;
        self
    }
    /// Consumes the builder and constructs a [`BatchPutPropertyErrorEntry`](crate::types::BatchPutPropertyErrorEntry).
    pub fn build(self) -> crate::types::BatchPutPropertyErrorEntry {
        crate::types::BatchPutPropertyErrorEntry {
            errors: self.errors,
        }
    }
}
