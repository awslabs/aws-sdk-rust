// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>An object that sets information about a property.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct PropertyRequest {
    /// <p>An object that specifies information about a property.</p>
    #[doc(hidden)]
    pub definition: std::option::Option<crate::types::PropertyDefinitionRequest>,
    /// <p>The value of the property.</p>
    #[doc(hidden)]
    pub value: std::option::Option<crate::types::DataValue>,
    /// <p>The update type of the update property request.</p>
    #[doc(hidden)]
    pub update_type: std::option::Option<crate::types::PropertyUpdateType>,
}
impl PropertyRequest {
    /// <p>An object that specifies information about a property.</p>
    pub fn definition(&self) -> std::option::Option<&crate::types::PropertyDefinitionRequest> {
        self.definition.as_ref()
    }
    /// <p>The value of the property.</p>
    pub fn value(&self) -> std::option::Option<&crate::types::DataValue> {
        self.value.as_ref()
    }
    /// <p>The update type of the update property request.</p>
    pub fn update_type(&self) -> std::option::Option<&crate::types::PropertyUpdateType> {
        self.update_type.as_ref()
    }
}
impl PropertyRequest {
    /// Creates a new builder-style object to manufacture [`PropertyRequest`](crate::types::PropertyRequest).
    pub fn builder() -> crate::types::builders::PropertyRequestBuilder {
        crate::types::builders::PropertyRequestBuilder::default()
    }
}

/// A builder for [`PropertyRequest`](crate::types::PropertyRequest).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct PropertyRequestBuilder {
    pub(crate) definition: std::option::Option<crate::types::PropertyDefinitionRequest>,
    pub(crate) value: std::option::Option<crate::types::DataValue>,
    pub(crate) update_type: std::option::Option<crate::types::PropertyUpdateType>,
}
impl PropertyRequestBuilder {
    /// <p>An object that specifies information about a property.</p>
    pub fn definition(mut self, input: crate::types::PropertyDefinitionRequest) -> Self {
        self.definition = Some(input);
        self
    }
    /// <p>An object that specifies information about a property.</p>
    pub fn set_definition(
        mut self,
        input: std::option::Option<crate::types::PropertyDefinitionRequest>,
    ) -> Self {
        self.definition = input;
        self
    }
    /// <p>The value of the property.</p>
    pub fn value(mut self, input: crate::types::DataValue) -> Self {
        self.value = Some(input);
        self
    }
    /// <p>The value of the property.</p>
    pub fn set_value(mut self, input: std::option::Option<crate::types::DataValue>) -> Self {
        self.value = input;
        self
    }
    /// <p>The update type of the update property request.</p>
    pub fn update_type(mut self, input: crate::types::PropertyUpdateType) -> Self {
        self.update_type = Some(input);
        self
    }
    /// <p>The update type of the update property request.</p>
    pub fn set_update_type(
        mut self,
        input: std::option::Option<crate::types::PropertyUpdateType>,
    ) -> Self {
        self.update_type = input;
        self
    }
    /// Consumes the builder and constructs a [`PropertyRequest`](crate::types::PropertyRequest).
    pub fn build(self) -> crate::types::PropertyRequest {
        crate::types::PropertyRequest {
            definition: self.definition,
            value: self.value,
            update_type: self.update_type,
        }
    }
}
