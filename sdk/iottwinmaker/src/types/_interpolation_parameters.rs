// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>An object that specifies how to interpolate data in a list.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct InterpolationParameters {
    /// <p>The interpolation type.</p>
    #[doc(hidden)]
    pub interpolation_type: std::option::Option<crate::types::InterpolationType>,
    /// <p>The interpolation time interval in seconds.</p>
    #[doc(hidden)]
    pub interval_in_seconds: std::option::Option<i64>,
}
impl InterpolationParameters {
    /// <p>The interpolation type.</p>
    pub fn interpolation_type(&self) -> std::option::Option<&crate::types::InterpolationType> {
        self.interpolation_type.as_ref()
    }
    /// <p>The interpolation time interval in seconds.</p>
    pub fn interval_in_seconds(&self) -> std::option::Option<i64> {
        self.interval_in_seconds
    }
}
impl InterpolationParameters {
    /// Creates a new builder-style object to manufacture [`InterpolationParameters`](crate::types::InterpolationParameters).
    pub fn builder() -> crate::types::builders::InterpolationParametersBuilder {
        crate::types::builders::InterpolationParametersBuilder::default()
    }
}

/// A builder for [`InterpolationParameters`](crate::types::InterpolationParameters).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct InterpolationParametersBuilder {
    pub(crate) interpolation_type: std::option::Option<crate::types::InterpolationType>,
    pub(crate) interval_in_seconds: std::option::Option<i64>,
}
impl InterpolationParametersBuilder {
    /// <p>The interpolation type.</p>
    pub fn interpolation_type(mut self, input: crate::types::InterpolationType) -> Self {
        self.interpolation_type = Some(input);
        self
    }
    /// <p>The interpolation type.</p>
    pub fn set_interpolation_type(
        mut self,
        input: std::option::Option<crate::types::InterpolationType>,
    ) -> Self {
        self.interpolation_type = input;
        self
    }
    /// <p>The interpolation time interval in seconds.</p>
    pub fn interval_in_seconds(mut self, input: i64) -> Self {
        self.interval_in_seconds = Some(input);
        self
    }
    /// <p>The interpolation time interval in seconds.</p>
    pub fn set_interval_in_seconds(mut self, input: std::option::Option<i64>) -> Self {
        self.interval_in_seconds = input;
        self
    }
    /// Consumes the builder and constructs a [`InterpolationParameters`](crate::types::InterpolationParameters).
    pub fn build(self) -> crate::types::InterpolationParameters {
        crate::types::InterpolationParameters {
            interpolation_type: self.interpolation_type,
            interval_in_seconds: self.interval_in_seconds,
        }
    }
}
