// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_component_request(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::types::ComponentRequest,
) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    if let Some(var_1) = &input.description {
        object.key("description").string(var_1.as_str());
    }
    if let Some(var_2) = &input.component_type_id {
        object.key("componentTypeId").string(var_2.as_str());
    }
    if let Some(var_3) = &input.properties {
        #[allow(unused_mut)]
        let mut object_4 = object.key("properties").start_object();
        for (key_5, value_6) in var_3 {
            {
                #[allow(unused_mut)]
                let mut object_7 = object_4.key(key_5.as_str()).start_object();
                crate::protocol_serde::shape_property_request::ser_property_request(
                    &mut object_7,
                    value_6,
                )?;
                object_7.finish();
            }
        }
        object_4.finish();
    }
    if let Some(var_8) = &input.property_groups {
        #[allow(unused_mut)]
        let mut object_9 = object.key("propertyGroups").start_object();
        for (key_10, value_11) in var_8 {
            {
                #[allow(unused_mut)]
                let mut object_12 = object_9.key(key_10.as_str()).start_object();
                crate::protocol_serde::shape_component_property_group_request::ser_component_property_group_request(&mut object_12, value_11)?;
                object_12.finish();
            }
        }
        object_9.finish();
    }
    Ok(())
}
