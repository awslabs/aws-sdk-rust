// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GetSyncJobInput {
    /// <p>The sync source.</p> <note>
    /// <p>Currently the only supported syncSource is <code>SITEWISE </code>.</p>
    /// </note>
    pub sync_source: ::std::option::Option<::std::string::String>,
    /// <p>The workspace ID.</p>
    pub workspace_id: ::std::option::Option<::std::string::String>,
}
impl GetSyncJobInput {
    /// <p>The sync source.</p> <note>
    /// <p>Currently the only supported syncSource is <code>SITEWISE </code>.</p>
    /// </note>
    pub fn sync_source(&self) -> ::std::option::Option<&str> {
        self.sync_source.as_deref()
    }
    /// <p>The workspace ID.</p>
    pub fn workspace_id(&self) -> ::std::option::Option<&str> {
        self.workspace_id.as_deref()
    }
}
impl GetSyncJobInput {
    /// Creates a new builder-style object to manufacture [`GetSyncJobInput`](crate::operation::get_sync_job::GetSyncJobInput).
    pub fn builder() -> crate::operation::get_sync_job::builders::GetSyncJobInputBuilder {
        crate::operation::get_sync_job::builders::GetSyncJobInputBuilder::default()
    }
}

/// A builder for [`GetSyncJobInput`](crate::operation::get_sync_job::GetSyncJobInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct GetSyncJobInputBuilder {
    pub(crate) sync_source: ::std::option::Option<::std::string::String>,
    pub(crate) workspace_id: ::std::option::Option<::std::string::String>,
}
impl GetSyncJobInputBuilder {
    /// <p>The sync source.</p> <note>
    /// <p>Currently the only supported syncSource is <code>SITEWISE </code>.</p>
    /// </note>
    /// This field is required.
    pub fn sync_source(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.sync_source = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The sync source.</p> <note>
    /// <p>Currently the only supported syncSource is <code>SITEWISE </code>.</p>
    /// </note>
    pub fn set_sync_source(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.sync_source = input;
        self
    }
    /// <p>The sync source.</p> <note>
    /// <p>Currently the only supported syncSource is <code>SITEWISE </code>.</p>
    /// </note>
    pub fn get_sync_source(&self) -> &::std::option::Option<::std::string::String> {
        &self.sync_source
    }
    /// <p>The workspace ID.</p>
    pub fn workspace_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.workspace_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The workspace ID.</p>
    pub fn set_workspace_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.workspace_id = input;
        self
    }
    /// <p>The workspace ID.</p>
    pub fn get_workspace_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.workspace_id
    }
    /// Consumes the builder and constructs a [`GetSyncJobInput`](crate::operation::get_sync_job::GetSyncJobInput).
    pub fn build(self) -> ::std::result::Result<crate::operation::get_sync_job::GetSyncJobInput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::operation::get_sync_job::GetSyncJobInput {
            sync_source: self.sync_source,
            workspace_id: self.workspace_id,
        })
    }
}
