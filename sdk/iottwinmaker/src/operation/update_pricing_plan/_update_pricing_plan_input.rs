// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct UpdatePricingPlanInput {
    /// <p>The pricing mode.</p>
    #[doc(hidden)]
    pub pricing_mode: std::option::Option<crate::types::PricingMode>,
    /// <p>The bundle names.</p>
    #[doc(hidden)]
    pub bundle_names: std::option::Option<std::vec::Vec<std::string::String>>,
}
impl UpdatePricingPlanInput {
    /// <p>The pricing mode.</p>
    pub fn pricing_mode(&self) -> std::option::Option<&crate::types::PricingMode> {
        self.pricing_mode.as_ref()
    }
    /// <p>The bundle names.</p>
    pub fn bundle_names(&self) -> std::option::Option<&[std::string::String]> {
        self.bundle_names.as_deref()
    }
}
impl UpdatePricingPlanInput {
    /// Creates a new builder-style object to manufacture [`UpdatePricingPlanInput`](crate::operation::update_pricing_plan::UpdatePricingPlanInput).
    pub fn builder(
    ) -> crate::operation::update_pricing_plan::builders::UpdatePricingPlanInputBuilder {
        crate::operation::update_pricing_plan::builders::UpdatePricingPlanInputBuilder::default()
    }
}

/// A builder for [`UpdatePricingPlanInput`](crate::operation::update_pricing_plan::UpdatePricingPlanInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct UpdatePricingPlanInputBuilder {
    pub(crate) pricing_mode: std::option::Option<crate::types::PricingMode>,
    pub(crate) bundle_names: std::option::Option<std::vec::Vec<std::string::String>>,
}
impl UpdatePricingPlanInputBuilder {
    /// <p>The pricing mode.</p>
    pub fn pricing_mode(mut self, input: crate::types::PricingMode) -> Self {
        self.pricing_mode = Some(input);
        self
    }
    /// <p>The pricing mode.</p>
    pub fn set_pricing_mode(
        mut self,
        input: std::option::Option<crate::types::PricingMode>,
    ) -> Self {
        self.pricing_mode = input;
        self
    }
    /// Appends an item to `bundle_names`.
    ///
    /// To override the contents of this collection use [`set_bundle_names`](Self::set_bundle_names).
    ///
    /// <p>The bundle names.</p>
    pub fn bundle_names(mut self, input: impl Into<std::string::String>) -> Self {
        let mut v = self.bundle_names.unwrap_or_default();
        v.push(input.into());
        self.bundle_names = Some(v);
        self
    }
    /// <p>The bundle names.</p>
    pub fn set_bundle_names(
        mut self,
        input: std::option::Option<std::vec::Vec<std::string::String>>,
    ) -> Self {
        self.bundle_names = input;
        self
    }
    /// Consumes the builder and constructs a [`UpdatePricingPlanInput`](crate::operation::update_pricing_plan::UpdatePricingPlanInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::update_pricing_plan::UpdatePricingPlanInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::update_pricing_plan::UpdatePricingPlanInput {
                pricing_mode: self.pricing_mode,
                bundle_names: self.bundle_names,
            },
        )
    }
}
