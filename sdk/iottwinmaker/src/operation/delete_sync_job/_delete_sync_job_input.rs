// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DeleteSyncJobInput {
    /// <p>The workspace Id.</p>
    #[doc(hidden)]
    pub workspace_id: std::option::Option<std::string::String>,
    /// <p>The sync source.</p> <note>
    /// <p>Currently the only supported syncSoucre is <code>SITEWISE </code>.</p>
    /// </note>
    #[doc(hidden)]
    pub sync_source: std::option::Option<std::string::String>,
}
impl DeleteSyncJobInput {
    /// <p>The workspace Id.</p>
    pub fn workspace_id(&self) -> std::option::Option<&str> {
        self.workspace_id.as_deref()
    }
    /// <p>The sync source.</p> <note>
    /// <p>Currently the only supported syncSoucre is <code>SITEWISE </code>.</p>
    /// </note>
    pub fn sync_source(&self) -> std::option::Option<&str> {
        self.sync_source.as_deref()
    }
}
impl DeleteSyncJobInput {
    /// Creates a new builder-style object to manufacture [`DeleteSyncJobInput`](crate::operation::delete_sync_job::DeleteSyncJobInput).
    pub fn builder() -> crate::operation::delete_sync_job::builders::DeleteSyncJobInputBuilder {
        crate::operation::delete_sync_job::builders::DeleteSyncJobInputBuilder::default()
    }
}

/// A builder for [`DeleteSyncJobInput`](crate::operation::delete_sync_job::DeleteSyncJobInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DeleteSyncJobInputBuilder {
    pub(crate) workspace_id: std::option::Option<std::string::String>,
    pub(crate) sync_source: std::option::Option<std::string::String>,
}
impl DeleteSyncJobInputBuilder {
    /// <p>The workspace Id.</p>
    pub fn workspace_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.workspace_id = Some(input.into());
        self
    }
    /// <p>The workspace Id.</p>
    pub fn set_workspace_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.workspace_id = input;
        self
    }
    /// <p>The sync source.</p> <note>
    /// <p>Currently the only supported syncSoucre is <code>SITEWISE </code>.</p>
    /// </note>
    pub fn sync_source(mut self, input: impl Into<std::string::String>) -> Self {
        self.sync_source = Some(input.into());
        self
    }
    /// <p>The sync source.</p> <note>
    /// <p>Currently the only supported syncSoucre is <code>SITEWISE </code>.</p>
    /// </note>
    pub fn set_sync_source(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.sync_source = input;
        self
    }
    /// Consumes the builder and constructs a [`DeleteSyncJobInput`](crate::operation::delete_sync_job::DeleteSyncJobInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::delete_sync_job::DeleteSyncJobInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(crate::operation::delete_sync_job::DeleteSyncJobInput {
            workspace_id: self.workspace_id,
            sync_source: self.sync_source,
        })
    }
}
