// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DeleteComponentTypeInput {
    /// <p>The ID of the workspace that contains the component type.</p>
    #[doc(hidden)]
    pub workspace_id: std::option::Option<std::string::String>,
    /// <p>The ID of the component type to delete.</p>
    #[doc(hidden)]
    pub component_type_id: std::option::Option<std::string::String>,
}
impl DeleteComponentTypeInput {
    /// <p>The ID of the workspace that contains the component type.</p>
    pub fn workspace_id(&self) -> std::option::Option<&str> {
        self.workspace_id.as_deref()
    }
    /// <p>The ID of the component type to delete.</p>
    pub fn component_type_id(&self) -> std::option::Option<&str> {
        self.component_type_id.as_deref()
    }
}
impl DeleteComponentTypeInput {
    /// Creates a new builder-style object to manufacture [`DeleteComponentTypeInput`](crate::operation::delete_component_type::DeleteComponentTypeInput).
    pub fn builder(
    ) -> crate::operation::delete_component_type::builders::DeleteComponentTypeInputBuilder {
        crate::operation::delete_component_type::builders::DeleteComponentTypeInputBuilder::default(
        )
    }
}

/// A builder for [`DeleteComponentTypeInput`](crate::operation::delete_component_type::DeleteComponentTypeInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DeleteComponentTypeInputBuilder {
    pub(crate) workspace_id: std::option::Option<std::string::String>,
    pub(crate) component_type_id: std::option::Option<std::string::String>,
}
impl DeleteComponentTypeInputBuilder {
    /// <p>The ID of the workspace that contains the component type.</p>
    pub fn workspace_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.workspace_id = Some(input.into());
        self
    }
    /// <p>The ID of the workspace that contains the component type.</p>
    pub fn set_workspace_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.workspace_id = input;
        self
    }
    /// <p>The ID of the component type to delete.</p>
    pub fn component_type_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.component_type_id = Some(input.into());
        self
    }
    /// <p>The ID of the component type to delete.</p>
    pub fn set_component_type_id(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.component_type_id = input;
        self
    }
    /// Consumes the builder and constructs a [`DeleteComponentTypeInput`](crate::operation::delete_component_type::DeleteComponentTypeInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::delete_component_type::DeleteComponentTypeInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::delete_component_type::DeleteComponentTypeInput {
                workspace_id: self.workspace_id,
                component_type_id: self.component_type_id,
            },
        )
    }
}
