// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Specifies filters when retrieving batch builds.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct BuildBatchFilter {
    /// <p>The status of the batch builds to retrieve. Only batch builds that have this status will be retrieved.</p>
    #[doc(hidden)]
    pub status: std::option::Option<crate::types::StatusType>,
}
impl BuildBatchFilter {
    /// <p>The status of the batch builds to retrieve. Only batch builds that have this status will be retrieved.</p>
    pub fn status(&self) -> std::option::Option<&crate::types::StatusType> {
        self.status.as_ref()
    }
}
impl BuildBatchFilter {
    /// Creates a new builder-style object to manufacture [`BuildBatchFilter`](crate::types::BuildBatchFilter).
    pub fn builder() -> crate::types::builders::BuildBatchFilterBuilder {
        crate::types::builders::BuildBatchFilterBuilder::default()
    }
}

/// A builder for [`BuildBatchFilter`](crate::types::BuildBatchFilter).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct BuildBatchFilterBuilder {
    pub(crate) status: std::option::Option<crate::types::StatusType>,
}
impl BuildBatchFilterBuilder {
    /// <p>The status of the batch builds to retrieve. Only batch builds that have this status will be retrieved.</p>
    pub fn status(mut self, input: crate::types::StatusType) -> Self {
        self.status = Some(input);
        self
    }
    /// <p>The status of the batch builds to retrieve. Only batch builds that have this status will be retrieved.</p>
    pub fn set_status(mut self, input: std::option::Option<crate::types::StatusType>) -> Self {
        self.status = input;
        self
    }
    /// Consumes the builder and constructs a [`BuildBatchFilter`](crate::types::BuildBatchFilter).
    pub fn build(self) -> crate::types::BuildBatchFilter {
        crate::types::BuildBatchFilter {
            status: self.status,
        }
    }
}
