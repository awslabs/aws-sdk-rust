// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about build logs in CloudWatch Logs.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct LogsLocation {
    /// <p>The name of the CloudWatch Logs group for the build logs.</p>
    #[doc(hidden)]
    pub group_name: std::option::Option<std::string::String>,
    /// <p>The name of the CloudWatch Logs stream for the build logs.</p>
    #[doc(hidden)]
    pub stream_name: std::option::Option<std::string::String>,
    /// <p>The URL to an individual build log in CloudWatch Logs.</p>
    #[doc(hidden)]
    pub deep_link: std::option::Option<std::string::String>,
    /// <p> The URL to a build log in an S3 bucket. </p>
    #[doc(hidden)]
    pub s3_deep_link: std::option::Option<std::string::String>,
    /// <p> The ARN of CloudWatch Logs for a build project. Its format is <code>arn:${Partition}:logs:${Region}:${Account}:log-group:${LogGroupName}:log-stream:${LogStreamName}</code>. For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/list_amazoncloudwatchlogs.html#amazoncloudwatchlogs-resources-for-iam-policies">Resources Defined by CloudWatch Logs</a>. </p>
    #[doc(hidden)]
    pub cloud_watch_logs_arn: std::option::Option<std::string::String>,
    /// <p> The ARN of S3 logs for a build project. Its format is <code>arn:${Partition}:s3:::${BucketName}/${ObjectName}</code>. For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/list_amazons3.html#amazons3-resources-for-iam-policies">Resources Defined by Amazon S3</a>. </p>
    #[doc(hidden)]
    pub s3_logs_arn: std::option::Option<std::string::String>,
    /// <p> Information about CloudWatch Logs for a build project. </p>
    #[doc(hidden)]
    pub cloud_watch_logs: std::option::Option<crate::types::CloudWatchLogsConfig>,
    /// <p> Information about S3 logs for a build project. </p>
    #[doc(hidden)]
    pub s3_logs: std::option::Option<crate::types::S3LogsConfig>,
}
impl LogsLocation {
    /// <p>The name of the CloudWatch Logs group for the build logs.</p>
    pub fn group_name(&self) -> std::option::Option<&str> {
        self.group_name.as_deref()
    }
    /// <p>The name of the CloudWatch Logs stream for the build logs.</p>
    pub fn stream_name(&self) -> std::option::Option<&str> {
        self.stream_name.as_deref()
    }
    /// <p>The URL to an individual build log in CloudWatch Logs.</p>
    pub fn deep_link(&self) -> std::option::Option<&str> {
        self.deep_link.as_deref()
    }
    /// <p> The URL to a build log in an S3 bucket. </p>
    pub fn s3_deep_link(&self) -> std::option::Option<&str> {
        self.s3_deep_link.as_deref()
    }
    /// <p> The ARN of CloudWatch Logs for a build project. Its format is <code>arn:${Partition}:logs:${Region}:${Account}:log-group:${LogGroupName}:log-stream:${LogStreamName}</code>. For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/list_amazoncloudwatchlogs.html#amazoncloudwatchlogs-resources-for-iam-policies">Resources Defined by CloudWatch Logs</a>. </p>
    pub fn cloud_watch_logs_arn(&self) -> std::option::Option<&str> {
        self.cloud_watch_logs_arn.as_deref()
    }
    /// <p> The ARN of S3 logs for a build project. Its format is <code>arn:${Partition}:s3:::${BucketName}/${ObjectName}</code>. For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/list_amazons3.html#amazons3-resources-for-iam-policies">Resources Defined by Amazon S3</a>. </p>
    pub fn s3_logs_arn(&self) -> std::option::Option<&str> {
        self.s3_logs_arn.as_deref()
    }
    /// <p> Information about CloudWatch Logs for a build project. </p>
    pub fn cloud_watch_logs(&self) -> std::option::Option<&crate::types::CloudWatchLogsConfig> {
        self.cloud_watch_logs.as_ref()
    }
    /// <p> Information about S3 logs for a build project. </p>
    pub fn s3_logs(&self) -> std::option::Option<&crate::types::S3LogsConfig> {
        self.s3_logs.as_ref()
    }
}
impl LogsLocation {
    /// Creates a new builder-style object to manufacture [`LogsLocation`](crate::types::LogsLocation).
    pub fn builder() -> crate::types::builders::LogsLocationBuilder {
        crate::types::builders::LogsLocationBuilder::default()
    }
}

/// A builder for [`LogsLocation`](crate::types::LogsLocation).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct LogsLocationBuilder {
    pub(crate) group_name: std::option::Option<std::string::String>,
    pub(crate) stream_name: std::option::Option<std::string::String>,
    pub(crate) deep_link: std::option::Option<std::string::String>,
    pub(crate) s3_deep_link: std::option::Option<std::string::String>,
    pub(crate) cloud_watch_logs_arn: std::option::Option<std::string::String>,
    pub(crate) s3_logs_arn: std::option::Option<std::string::String>,
    pub(crate) cloud_watch_logs: std::option::Option<crate::types::CloudWatchLogsConfig>,
    pub(crate) s3_logs: std::option::Option<crate::types::S3LogsConfig>,
}
impl LogsLocationBuilder {
    /// <p>The name of the CloudWatch Logs group for the build logs.</p>
    pub fn group_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.group_name = Some(input.into());
        self
    }
    /// <p>The name of the CloudWatch Logs group for the build logs.</p>
    pub fn set_group_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.group_name = input;
        self
    }
    /// <p>The name of the CloudWatch Logs stream for the build logs.</p>
    pub fn stream_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.stream_name = Some(input.into());
        self
    }
    /// <p>The name of the CloudWatch Logs stream for the build logs.</p>
    pub fn set_stream_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.stream_name = input;
        self
    }
    /// <p>The URL to an individual build log in CloudWatch Logs.</p>
    pub fn deep_link(mut self, input: impl Into<std::string::String>) -> Self {
        self.deep_link = Some(input.into());
        self
    }
    /// <p>The URL to an individual build log in CloudWatch Logs.</p>
    pub fn set_deep_link(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.deep_link = input;
        self
    }
    /// <p> The URL to a build log in an S3 bucket. </p>
    pub fn s3_deep_link(mut self, input: impl Into<std::string::String>) -> Self {
        self.s3_deep_link = Some(input.into());
        self
    }
    /// <p> The URL to a build log in an S3 bucket. </p>
    pub fn set_s3_deep_link(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.s3_deep_link = input;
        self
    }
    /// <p> The ARN of CloudWatch Logs for a build project. Its format is <code>arn:${Partition}:logs:${Region}:${Account}:log-group:${LogGroupName}:log-stream:${LogStreamName}</code>. For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/list_amazoncloudwatchlogs.html#amazoncloudwatchlogs-resources-for-iam-policies">Resources Defined by CloudWatch Logs</a>. </p>
    pub fn cloud_watch_logs_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.cloud_watch_logs_arn = Some(input.into());
        self
    }
    /// <p> The ARN of CloudWatch Logs for a build project. Its format is <code>arn:${Partition}:logs:${Region}:${Account}:log-group:${LogGroupName}:log-stream:${LogStreamName}</code>. For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/list_amazoncloudwatchlogs.html#amazoncloudwatchlogs-resources-for-iam-policies">Resources Defined by CloudWatch Logs</a>. </p>
    pub fn set_cloud_watch_logs_arn(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.cloud_watch_logs_arn = input;
        self
    }
    /// <p> The ARN of S3 logs for a build project. Its format is <code>arn:${Partition}:s3:::${BucketName}/${ObjectName}</code>. For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/list_amazons3.html#amazons3-resources-for-iam-policies">Resources Defined by Amazon S3</a>. </p>
    pub fn s3_logs_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.s3_logs_arn = Some(input.into());
        self
    }
    /// <p> The ARN of S3 logs for a build project. Its format is <code>arn:${Partition}:s3:::${BucketName}/${ObjectName}</code>. For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/list_amazons3.html#amazons3-resources-for-iam-policies">Resources Defined by Amazon S3</a>. </p>
    pub fn set_s3_logs_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.s3_logs_arn = input;
        self
    }
    /// <p> Information about CloudWatch Logs for a build project. </p>
    pub fn cloud_watch_logs(mut self, input: crate::types::CloudWatchLogsConfig) -> Self {
        self.cloud_watch_logs = Some(input);
        self
    }
    /// <p> Information about CloudWatch Logs for a build project. </p>
    pub fn set_cloud_watch_logs(
        mut self,
        input: std::option::Option<crate::types::CloudWatchLogsConfig>,
    ) -> Self {
        self.cloud_watch_logs = input;
        self
    }
    /// <p> Information about S3 logs for a build project. </p>
    pub fn s3_logs(mut self, input: crate::types::S3LogsConfig) -> Self {
        self.s3_logs = Some(input);
        self
    }
    /// <p> Information about S3 logs for a build project. </p>
    pub fn set_s3_logs(mut self, input: std::option::Option<crate::types::S3LogsConfig>) -> Self {
        self.s3_logs = input;
        self
    }
    /// Consumes the builder and constructs a [`LogsLocation`](crate::types::LogsLocation).
    pub fn build(self) -> crate::types::LogsLocation {
        crate::types::LogsLocation {
            group_name: self.group_name,
            stream_name: self.stream_name,
            deep_link: self.deep_link,
            s3_deep_link: self.s3_deep_link,
            cloud_watch_logs_arn: self.cloud_watch_logs_arn,
            s3_logs_arn: self.s3_logs_arn,
            cloud_watch_logs: self.cloud_watch_logs,
            s3_logs: self.s3_logs,
        }
    }
}
