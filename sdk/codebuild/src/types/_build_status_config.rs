// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains information that defines how the CodeBuild build project reports the build status to the source provider. </p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct BuildStatusConfig {
    /// <p>Specifies the context of the build status CodeBuild sends to the source provider. The usage of this parameter depends on the source provider.</p>
    /// <dl>
    /// <dt>
    /// Bitbucket
    /// </dt>
    /// <dd>
    /// <p>This parameter is used for the <code>name</code> parameter in the Bitbucket commit status. For more information, see <a href="https://developer.atlassian.com/bitbucket/api/2/reference/resource/repositories/%7Bworkspace%7D/%7Brepo_slug%7D/commit/%7Bnode%7D/statuses/build">build</a> in the Bitbucket API documentation.</p>
    /// </dd>
    /// <dt>
    /// GitHub/GitHub Enterprise Server
    /// </dt>
    /// <dd>
    /// <p>This parameter is used for the <code>context</code> parameter in the GitHub commit status. For more information, see <a href="https://developer.github.com/v3/repos/statuses/#create-a-commit-status">Create a commit status</a> in the GitHub developer guide.</p>
    /// </dd>
    /// </dl>
    #[doc(hidden)]
    pub context: std::option::Option<std::string::String>,
    /// <p>Specifies the target url of the build status CodeBuild sends to the source provider. The usage of this parameter depends on the source provider.</p>
    /// <dl>
    /// <dt>
    /// Bitbucket
    /// </dt>
    /// <dd>
    /// <p>This parameter is used for the <code>url</code> parameter in the Bitbucket commit status. For more information, see <a href="https://developer.atlassian.com/bitbucket/api/2/reference/resource/repositories/%7Bworkspace%7D/%7Brepo_slug%7D/commit/%7Bnode%7D/statuses/build">build</a> in the Bitbucket API documentation.</p>
    /// </dd>
    /// <dt>
    /// GitHub/GitHub Enterprise Server
    /// </dt>
    /// <dd>
    /// <p>This parameter is used for the <code>target_url</code> parameter in the GitHub commit status. For more information, see <a href="https://developer.github.com/v3/repos/statuses/#create-a-commit-status">Create a commit status</a> in the GitHub developer guide.</p>
    /// </dd>
    /// </dl>
    #[doc(hidden)]
    pub target_url: std::option::Option<std::string::String>,
}
impl BuildStatusConfig {
    /// <p>Specifies the context of the build status CodeBuild sends to the source provider. The usage of this parameter depends on the source provider.</p>
    /// <dl>
    /// <dt>
    /// Bitbucket
    /// </dt>
    /// <dd>
    /// <p>This parameter is used for the <code>name</code> parameter in the Bitbucket commit status. For more information, see <a href="https://developer.atlassian.com/bitbucket/api/2/reference/resource/repositories/%7Bworkspace%7D/%7Brepo_slug%7D/commit/%7Bnode%7D/statuses/build">build</a> in the Bitbucket API documentation.</p>
    /// </dd>
    /// <dt>
    /// GitHub/GitHub Enterprise Server
    /// </dt>
    /// <dd>
    /// <p>This parameter is used for the <code>context</code> parameter in the GitHub commit status. For more information, see <a href="https://developer.github.com/v3/repos/statuses/#create-a-commit-status">Create a commit status</a> in the GitHub developer guide.</p>
    /// </dd>
    /// </dl>
    pub fn context(&self) -> std::option::Option<&str> {
        self.context.as_deref()
    }
    /// <p>Specifies the target url of the build status CodeBuild sends to the source provider. The usage of this parameter depends on the source provider.</p>
    /// <dl>
    /// <dt>
    /// Bitbucket
    /// </dt>
    /// <dd>
    /// <p>This parameter is used for the <code>url</code> parameter in the Bitbucket commit status. For more information, see <a href="https://developer.atlassian.com/bitbucket/api/2/reference/resource/repositories/%7Bworkspace%7D/%7Brepo_slug%7D/commit/%7Bnode%7D/statuses/build">build</a> in the Bitbucket API documentation.</p>
    /// </dd>
    /// <dt>
    /// GitHub/GitHub Enterprise Server
    /// </dt>
    /// <dd>
    /// <p>This parameter is used for the <code>target_url</code> parameter in the GitHub commit status. For more information, see <a href="https://developer.github.com/v3/repos/statuses/#create-a-commit-status">Create a commit status</a> in the GitHub developer guide.</p>
    /// </dd>
    /// </dl>
    pub fn target_url(&self) -> std::option::Option<&str> {
        self.target_url.as_deref()
    }
}
impl BuildStatusConfig {
    /// Creates a new builder-style object to manufacture [`BuildStatusConfig`](crate::types::BuildStatusConfig).
    pub fn builder() -> crate::types::builders::BuildStatusConfigBuilder {
        crate::types::builders::BuildStatusConfigBuilder::default()
    }
}

/// A builder for [`BuildStatusConfig`](crate::types::BuildStatusConfig).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct BuildStatusConfigBuilder {
    pub(crate) context: std::option::Option<std::string::String>,
    pub(crate) target_url: std::option::Option<std::string::String>,
}
impl BuildStatusConfigBuilder {
    /// <p>Specifies the context of the build status CodeBuild sends to the source provider. The usage of this parameter depends on the source provider.</p>
    /// <dl>
    /// <dt>
    /// Bitbucket
    /// </dt>
    /// <dd>
    /// <p>This parameter is used for the <code>name</code> parameter in the Bitbucket commit status. For more information, see <a href="https://developer.atlassian.com/bitbucket/api/2/reference/resource/repositories/%7Bworkspace%7D/%7Brepo_slug%7D/commit/%7Bnode%7D/statuses/build">build</a> in the Bitbucket API documentation.</p>
    /// </dd>
    /// <dt>
    /// GitHub/GitHub Enterprise Server
    /// </dt>
    /// <dd>
    /// <p>This parameter is used for the <code>context</code> parameter in the GitHub commit status. For more information, see <a href="https://developer.github.com/v3/repos/statuses/#create-a-commit-status">Create a commit status</a> in the GitHub developer guide.</p>
    /// </dd>
    /// </dl>
    pub fn context(mut self, input: impl Into<std::string::String>) -> Self {
        self.context = Some(input.into());
        self
    }
    /// <p>Specifies the context of the build status CodeBuild sends to the source provider. The usage of this parameter depends on the source provider.</p>
    /// <dl>
    /// <dt>
    /// Bitbucket
    /// </dt>
    /// <dd>
    /// <p>This parameter is used for the <code>name</code> parameter in the Bitbucket commit status. For more information, see <a href="https://developer.atlassian.com/bitbucket/api/2/reference/resource/repositories/%7Bworkspace%7D/%7Brepo_slug%7D/commit/%7Bnode%7D/statuses/build">build</a> in the Bitbucket API documentation.</p>
    /// </dd>
    /// <dt>
    /// GitHub/GitHub Enterprise Server
    /// </dt>
    /// <dd>
    /// <p>This parameter is used for the <code>context</code> parameter in the GitHub commit status. For more information, see <a href="https://developer.github.com/v3/repos/statuses/#create-a-commit-status">Create a commit status</a> in the GitHub developer guide.</p>
    /// </dd>
    /// </dl>
    pub fn set_context(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.context = input;
        self
    }
    /// <p>Specifies the target url of the build status CodeBuild sends to the source provider. The usage of this parameter depends on the source provider.</p>
    /// <dl>
    /// <dt>
    /// Bitbucket
    /// </dt>
    /// <dd>
    /// <p>This parameter is used for the <code>url</code> parameter in the Bitbucket commit status. For more information, see <a href="https://developer.atlassian.com/bitbucket/api/2/reference/resource/repositories/%7Bworkspace%7D/%7Brepo_slug%7D/commit/%7Bnode%7D/statuses/build">build</a> in the Bitbucket API documentation.</p>
    /// </dd>
    /// <dt>
    /// GitHub/GitHub Enterprise Server
    /// </dt>
    /// <dd>
    /// <p>This parameter is used for the <code>target_url</code> parameter in the GitHub commit status. For more information, see <a href="https://developer.github.com/v3/repos/statuses/#create-a-commit-status">Create a commit status</a> in the GitHub developer guide.</p>
    /// </dd>
    /// </dl>
    pub fn target_url(mut self, input: impl Into<std::string::String>) -> Self {
        self.target_url = Some(input.into());
        self
    }
    /// <p>Specifies the target url of the build status CodeBuild sends to the source provider. The usage of this parameter depends on the source provider.</p>
    /// <dl>
    /// <dt>
    /// Bitbucket
    /// </dt>
    /// <dd>
    /// <p>This parameter is used for the <code>url</code> parameter in the Bitbucket commit status. For more information, see <a href="https://developer.atlassian.com/bitbucket/api/2/reference/resource/repositories/%7Bworkspace%7D/%7Brepo_slug%7D/commit/%7Bnode%7D/statuses/build">build</a> in the Bitbucket API documentation.</p>
    /// </dd>
    /// <dt>
    /// GitHub/GitHub Enterprise Server
    /// </dt>
    /// <dd>
    /// <p>This parameter is used for the <code>target_url</code> parameter in the GitHub commit status. For more information, see <a href="https://developer.github.com/v3/repos/statuses/#create-a-commit-status">Create a commit status</a> in the GitHub developer guide.</p>
    /// </dd>
    /// </dl>
    pub fn set_target_url(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.target_url = input;
        self
    }
    /// Consumes the builder and constructs a [`BuildStatusConfig`](crate::types::BuildStatusConfig).
    pub fn build(self) -> crate::types::BuildStatusConfig {
        crate::types::BuildStatusConfig {
            context: self.context,
            target_url: self.target_url,
        }
    }
}
