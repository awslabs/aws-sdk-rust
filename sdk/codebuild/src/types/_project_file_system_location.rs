// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p> Information about a file system created by Amazon Elastic File System (EFS). For more information, see <a href="https://docs.aws.amazon.com/efs/latest/ug/whatisefs.html">What Is Amazon Elastic File System?</a> </p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ProjectFileSystemLocation {
    /// <p> The type of the file system. The one supported type is <code>EFS</code>. </p>
    #[doc(hidden)]
    pub r#type: std::option::Option<crate::types::FileSystemType>,
    /// <p>A string that specifies the location of the file system created by Amazon EFS. Its format is <code>efs-dns-name:/directory-path</code>. You can find the DNS name of file system when you view it in the Amazon EFS console. The directory path is a path to a directory in the file system that CodeBuild mounts. For example, if the DNS name of a file system is <code>fs-abcd1234.efs.us-west-2.amazonaws.com</code>, and its mount directory is <code>my-efs-mount-directory</code>, then the <code>location</code> is <code>fs-abcd1234.efs.us-west-2.amazonaws.com:/my-efs-mount-directory</code>. </p>
    /// <p>The directory path in the format <code>efs-dns-name:/directory-path</code> is optional. If you do not specify a directory path, the location is only the DNS name and CodeBuild mounts the entire file system. </p>
    #[doc(hidden)]
    pub location: std::option::Option<std::string::String>,
    /// <p>The location in the container where you mount the file system. </p>
    #[doc(hidden)]
    pub mount_point: std::option::Option<std::string::String>,
    /// <p>The name used to access a file system created by Amazon EFS. CodeBuild creates an environment variable by appending the <code>identifier</code> in all capital letters to <code>CODEBUILD_</code>. For example, if you specify <code>my_efs</code> for <code>identifier</code>, a new environment variable is create named <code>CODEBUILD_MY_EFS</code>. </p>
    /// <p> The <code>identifier</code> is used to mount your file system. </p>
    #[doc(hidden)]
    pub identifier: std::option::Option<std::string::String>,
    /// <p> The mount options for a file system created by Amazon EFS. The default mount options used by CodeBuild are <code>nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2</code>. For more information, see <a href="https://docs.aws.amazon.com/efs/latest/ug/mounting-fs-nfs-mount-settings.html">Recommended NFS Mount Options</a>. </p>
    #[doc(hidden)]
    pub mount_options: std::option::Option<std::string::String>,
}
impl ProjectFileSystemLocation {
    /// <p> The type of the file system. The one supported type is <code>EFS</code>. </p>
    pub fn r#type(&self) -> std::option::Option<&crate::types::FileSystemType> {
        self.r#type.as_ref()
    }
    /// <p>A string that specifies the location of the file system created by Amazon EFS. Its format is <code>efs-dns-name:/directory-path</code>. You can find the DNS name of file system when you view it in the Amazon EFS console. The directory path is a path to a directory in the file system that CodeBuild mounts. For example, if the DNS name of a file system is <code>fs-abcd1234.efs.us-west-2.amazonaws.com</code>, and its mount directory is <code>my-efs-mount-directory</code>, then the <code>location</code> is <code>fs-abcd1234.efs.us-west-2.amazonaws.com:/my-efs-mount-directory</code>. </p>
    /// <p>The directory path in the format <code>efs-dns-name:/directory-path</code> is optional. If you do not specify a directory path, the location is only the DNS name and CodeBuild mounts the entire file system. </p>
    pub fn location(&self) -> std::option::Option<&str> {
        self.location.as_deref()
    }
    /// <p>The location in the container where you mount the file system. </p>
    pub fn mount_point(&self) -> std::option::Option<&str> {
        self.mount_point.as_deref()
    }
    /// <p>The name used to access a file system created by Amazon EFS. CodeBuild creates an environment variable by appending the <code>identifier</code> in all capital letters to <code>CODEBUILD_</code>. For example, if you specify <code>my_efs</code> for <code>identifier</code>, a new environment variable is create named <code>CODEBUILD_MY_EFS</code>. </p>
    /// <p> The <code>identifier</code> is used to mount your file system. </p>
    pub fn identifier(&self) -> std::option::Option<&str> {
        self.identifier.as_deref()
    }
    /// <p> The mount options for a file system created by Amazon EFS. The default mount options used by CodeBuild are <code>nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2</code>. For more information, see <a href="https://docs.aws.amazon.com/efs/latest/ug/mounting-fs-nfs-mount-settings.html">Recommended NFS Mount Options</a>. </p>
    pub fn mount_options(&self) -> std::option::Option<&str> {
        self.mount_options.as_deref()
    }
}
impl ProjectFileSystemLocation {
    /// Creates a new builder-style object to manufacture [`ProjectFileSystemLocation`](crate::types::ProjectFileSystemLocation).
    pub fn builder() -> crate::types::builders::ProjectFileSystemLocationBuilder {
        crate::types::builders::ProjectFileSystemLocationBuilder::default()
    }
}

/// A builder for [`ProjectFileSystemLocation`](crate::types::ProjectFileSystemLocation).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ProjectFileSystemLocationBuilder {
    pub(crate) r#type: std::option::Option<crate::types::FileSystemType>,
    pub(crate) location: std::option::Option<std::string::String>,
    pub(crate) mount_point: std::option::Option<std::string::String>,
    pub(crate) identifier: std::option::Option<std::string::String>,
    pub(crate) mount_options: std::option::Option<std::string::String>,
}
impl ProjectFileSystemLocationBuilder {
    /// <p> The type of the file system. The one supported type is <code>EFS</code>. </p>
    pub fn r#type(mut self, input: crate::types::FileSystemType) -> Self {
        self.r#type = Some(input);
        self
    }
    /// <p> The type of the file system. The one supported type is <code>EFS</code>. </p>
    pub fn set_type(mut self, input: std::option::Option<crate::types::FileSystemType>) -> Self {
        self.r#type = input;
        self
    }
    /// <p>A string that specifies the location of the file system created by Amazon EFS. Its format is <code>efs-dns-name:/directory-path</code>. You can find the DNS name of file system when you view it in the Amazon EFS console. The directory path is a path to a directory in the file system that CodeBuild mounts. For example, if the DNS name of a file system is <code>fs-abcd1234.efs.us-west-2.amazonaws.com</code>, and its mount directory is <code>my-efs-mount-directory</code>, then the <code>location</code> is <code>fs-abcd1234.efs.us-west-2.amazonaws.com:/my-efs-mount-directory</code>. </p>
    /// <p>The directory path in the format <code>efs-dns-name:/directory-path</code> is optional. If you do not specify a directory path, the location is only the DNS name and CodeBuild mounts the entire file system. </p>
    pub fn location(mut self, input: impl Into<std::string::String>) -> Self {
        self.location = Some(input.into());
        self
    }
    /// <p>A string that specifies the location of the file system created by Amazon EFS. Its format is <code>efs-dns-name:/directory-path</code>. You can find the DNS name of file system when you view it in the Amazon EFS console. The directory path is a path to a directory in the file system that CodeBuild mounts. For example, if the DNS name of a file system is <code>fs-abcd1234.efs.us-west-2.amazonaws.com</code>, and its mount directory is <code>my-efs-mount-directory</code>, then the <code>location</code> is <code>fs-abcd1234.efs.us-west-2.amazonaws.com:/my-efs-mount-directory</code>. </p>
    /// <p>The directory path in the format <code>efs-dns-name:/directory-path</code> is optional. If you do not specify a directory path, the location is only the DNS name and CodeBuild mounts the entire file system. </p>
    pub fn set_location(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.location = input;
        self
    }
    /// <p>The location in the container where you mount the file system. </p>
    pub fn mount_point(mut self, input: impl Into<std::string::String>) -> Self {
        self.mount_point = Some(input.into());
        self
    }
    /// <p>The location in the container where you mount the file system. </p>
    pub fn set_mount_point(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.mount_point = input;
        self
    }
    /// <p>The name used to access a file system created by Amazon EFS. CodeBuild creates an environment variable by appending the <code>identifier</code> in all capital letters to <code>CODEBUILD_</code>. For example, if you specify <code>my_efs</code> for <code>identifier</code>, a new environment variable is create named <code>CODEBUILD_MY_EFS</code>. </p>
    /// <p> The <code>identifier</code> is used to mount your file system. </p>
    pub fn identifier(mut self, input: impl Into<std::string::String>) -> Self {
        self.identifier = Some(input.into());
        self
    }
    /// <p>The name used to access a file system created by Amazon EFS. CodeBuild creates an environment variable by appending the <code>identifier</code> in all capital letters to <code>CODEBUILD_</code>. For example, if you specify <code>my_efs</code> for <code>identifier</code>, a new environment variable is create named <code>CODEBUILD_MY_EFS</code>. </p>
    /// <p> The <code>identifier</code> is used to mount your file system. </p>
    pub fn set_identifier(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.identifier = input;
        self
    }
    /// <p> The mount options for a file system created by Amazon EFS. The default mount options used by CodeBuild are <code>nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2</code>. For more information, see <a href="https://docs.aws.amazon.com/efs/latest/ug/mounting-fs-nfs-mount-settings.html">Recommended NFS Mount Options</a>. </p>
    pub fn mount_options(mut self, input: impl Into<std::string::String>) -> Self {
        self.mount_options = Some(input.into());
        self
    }
    /// <p> The mount options for a file system created by Amazon EFS. The default mount options used by CodeBuild are <code>nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2</code>. For more information, see <a href="https://docs.aws.amazon.com/efs/latest/ug/mounting-fs-nfs-mount-settings.html">Recommended NFS Mount Options</a>. </p>
    pub fn set_mount_options(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.mount_options = input;
        self
    }
    /// Consumes the builder and constructs a [`ProjectFileSystemLocation`](crate::types::ProjectFileSystemLocation).
    pub fn build(self) -> crate::types::ProjectFileSystemLocation {
        crate::types::ProjectFileSystemLocation {
            r#type: self.r#type,
            location: self.location,
            mount_point: self.mount_point,
            identifier: self.identifier,
            mount_options: self.mount_options,
        }
    }
}
