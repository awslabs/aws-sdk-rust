// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct BatchGetReportsInput {
    /// <p> An array of ARNs that identify the <code>Report</code> objects to return. </p>
    #[doc(hidden)]
    pub report_arns: std::option::Option<std::vec::Vec<std::string::String>>,
}
impl BatchGetReportsInput {
    /// <p> An array of ARNs that identify the <code>Report</code> objects to return. </p>
    pub fn report_arns(&self) -> std::option::Option<&[std::string::String]> {
        self.report_arns.as_deref()
    }
}
impl BatchGetReportsInput {
    /// Creates a new builder-style object to manufacture [`BatchGetReportsInput`](crate::operation::batch_get_reports::BatchGetReportsInput).
    pub fn builder() -> crate::operation::batch_get_reports::builders::BatchGetReportsInputBuilder {
        crate::operation::batch_get_reports::builders::BatchGetReportsInputBuilder::default()
    }
}

/// A builder for [`BatchGetReportsInput`](crate::operation::batch_get_reports::BatchGetReportsInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct BatchGetReportsInputBuilder {
    pub(crate) report_arns: std::option::Option<std::vec::Vec<std::string::String>>,
}
impl BatchGetReportsInputBuilder {
    /// Appends an item to `report_arns`.
    ///
    /// To override the contents of this collection use [`set_report_arns`](Self::set_report_arns).
    ///
    /// <p> An array of ARNs that identify the <code>Report</code> objects to return. </p>
    pub fn report_arns(mut self, input: impl Into<std::string::String>) -> Self {
        let mut v = self.report_arns.unwrap_or_default();
        v.push(input.into());
        self.report_arns = Some(v);
        self
    }
    /// <p> An array of ARNs that identify the <code>Report</code> objects to return. </p>
    pub fn set_report_arns(
        mut self,
        input: std::option::Option<std::vec::Vec<std::string::String>>,
    ) -> Self {
        self.report_arns = input;
        self
    }
    /// Consumes the builder and constructs a [`BatchGetReportsInput`](crate::operation::batch_get_reports::BatchGetReportsInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::batch_get_reports::BatchGetReportsInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(crate::operation::batch_get_reports::BatchGetReportsInput {
            report_arns: self.report_arns,
        })
    }
}
