// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeleteReportGroup`](crate::operation::delete_report_group::builders::DeleteReportGroupFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`arn(impl Into<String>)`](crate::operation::delete_report_group::builders::DeleteReportGroupFluentBuilder::arn) / [`set_arn(Option<String>)`](crate::operation::delete_report_group::builders::DeleteReportGroupFluentBuilder::set_arn):<br>required: **true**<br><p>The ARN of the report group to delete. </p><br>
    ///   - [`delete_reports(bool)`](crate::operation::delete_report_group::builders::DeleteReportGroupFluentBuilder::delete_reports) / [`set_delete_reports(Option<bool>)`](crate::operation::delete_report_group::builders::DeleteReportGroupFluentBuilder::set_delete_reports):<br>required: **false**<br><p>If <code>true</code>, deletes any reports that belong to a report group before deleting the report group. </p>  <p>If <code>false</code>, you must delete any reports in the report group. Use <a href="https://docs.aws.amazon.com/codebuild/latest/APIReference/API_ListReportsForReportGroup.html">ListReportsForReportGroup</a> to get the reports in a report group. Use <a href="https://docs.aws.amazon.com/codebuild/latest/APIReference/API_DeleteReport.html">DeleteReport</a> to delete the reports. If you call <code>DeleteReportGroup</code> for a report group that contains one or more reports, an exception is thrown. </p><br>
    /// - On success, responds with [`DeleteReportGroupOutput`](crate::operation::delete_report_group::DeleteReportGroupOutput)
    /// - On failure, responds with [`SdkError<DeleteReportGroupError>`](crate::operation::delete_report_group::DeleteReportGroupError)
    pub fn delete_report_group(&self) -> crate::operation::delete_report_group::builders::DeleteReportGroupFluentBuilder {
        crate::operation::delete_report_group::builders::DeleteReportGroupFluentBuilder::new(self.handle.clone())
    }
}
