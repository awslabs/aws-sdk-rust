// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetReportGroupTrend`](crate::operation::get_report_group_trend::builders::GetReportGroupTrendFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`report_group_arn(impl Into<String>)`](crate::operation::get_report_group_trend::builders::GetReportGroupTrendFluentBuilder::report_group_arn) / [`set_report_group_arn(Option<String>)`](crate::operation::get_report_group_trend::builders::GetReportGroupTrendFluentBuilder::set_report_group_arn): <p>The ARN of the report group that contains the reports to analyze.</p>
    ///   - [`num_of_reports(i32)`](crate::operation::get_report_group_trend::builders::GetReportGroupTrendFluentBuilder::num_of_reports) / [`set_num_of_reports(Option<i32>)`](crate::operation::get_report_group_trend::builders::GetReportGroupTrendFluentBuilder::set_num_of_reports): <p>The number of reports to analyze. This operation always retrieves the most recent reports.</p>  <p>If this parameter is omitted, the most recent 100 reports are analyzed.</p>
    ///   - [`trend_field(ReportGroupTrendFieldType)`](crate::operation::get_report_group_trend::builders::GetReportGroupTrendFluentBuilder::trend_field) / [`set_trend_field(Option<ReportGroupTrendFieldType>)`](crate::operation::get_report_group_trend::builders::GetReportGroupTrendFluentBuilder::set_trend_field): <p>The test report value to accumulate. This must be one of the following values:</p>  <dl>   <dt>   Test reports:  </dt>   <dd>    <dl>     <dt>     DURATION    </dt>     <dd>      <p>Accumulate the test run times for the specified reports.</p>     </dd>     <dt>     PASS_RATE    </dt>     <dd>      <p>Accumulate the percentage of tests that passed for the specified test reports.</p>     </dd>     <dt>     TOTAL    </dt>     <dd>      <p>Accumulate the total number of tests for the specified test reports.</p>     </dd>    </dl>   </dd>  </dl>  <dl>   <dt>   Code coverage reports:  </dt>   <dd>    <dl>     <dt>     BRANCH_COVERAGE    </dt>     <dd>      <p>Accumulate the branch coverage percentages for the specified test reports.</p>     </dd>     <dt>     BRANCHES_COVERED    </dt>     <dd>      <p>Accumulate the branches covered values for the specified test reports.</p>     </dd>     <dt>     BRANCHES_MISSED    </dt>     <dd>      <p>Accumulate the branches missed values for the specified test reports.</p>     </dd>     <dt>     LINE_COVERAGE    </dt>     <dd>      <p>Accumulate the line coverage percentages for the specified test reports.</p>     </dd>     <dt>     LINES_COVERED    </dt>     <dd>      <p>Accumulate the lines covered values for the specified test reports.</p>     </dd>     <dt>     LINES_MISSED    </dt>     <dd>      <p>Accumulate the lines not covered values for the specified test reports.</p>     </dd>    </dl>   </dd>  </dl>
    /// - On success, responds with [`GetReportGroupTrendOutput`](crate::operation::get_report_group_trend::GetReportGroupTrendOutput) with field(s):
    ///   - [`stats(Option<ReportGroupTrendStats>)`](crate::operation::get_report_group_trend::GetReportGroupTrendOutput::stats): <p>Contains the accumulated trend data.</p>
    ///   - [`raw_data(Option<Vec<ReportWithRawData>>)`](crate::operation::get_report_group_trend::GetReportGroupTrendOutput::raw_data): <p>An array that contains the raw data for each report.</p>
    /// - On failure, responds with [`SdkError<GetReportGroupTrendError>`](crate::operation::get_report_group_trend::GetReportGroupTrendError)
    pub fn get_report_group_trend(
        &self,
    ) -> crate::operation::get_report_group_trend::builders::GetReportGroupTrendFluentBuilder {
        crate::operation::get_report_group_trend::builders::GetReportGroupTrendFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
