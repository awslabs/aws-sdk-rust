// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Notification configuration for a scheduled query. A notification is sent by Timestream when a scheduled query is created, its state is updated or when it is deleted. </p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct NotificationConfiguration {
    /// <p>Details on SNS configuration. </p>
    pub sns_configuration: ::std::option::Option<crate::types::SnsConfiguration>,
}
impl NotificationConfiguration {
    /// <p>Details on SNS configuration. </p>
    pub fn sns_configuration(&self) -> ::std::option::Option<&crate::types::SnsConfiguration> {
        self.sns_configuration.as_ref()
    }
}
impl NotificationConfiguration {
    /// Creates a new builder-style object to manufacture [`NotificationConfiguration`](crate::types::NotificationConfiguration).
    pub fn builder() -> crate::types::builders::NotificationConfigurationBuilder {
        crate::types::builders::NotificationConfigurationBuilder::default()
    }
}

/// A builder for [`NotificationConfiguration`](crate::types::NotificationConfiguration).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct NotificationConfigurationBuilder {
    pub(crate) sns_configuration: ::std::option::Option<crate::types::SnsConfiguration>,
}
impl NotificationConfigurationBuilder {
    /// <p>Details on SNS configuration. </p>
    /// This field is required.
    pub fn sns_configuration(mut self, input: crate::types::SnsConfiguration) -> Self {
        self.sns_configuration = ::std::option::Option::Some(input);
        self
    }
    /// <p>Details on SNS configuration. </p>
    pub fn set_sns_configuration(mut self, input: ::std::option::Option<crate::types::SnsConfiguration>) -> Self {
        self.sns_configuration = input;
        self
    }
    /// <p>Details on SNS configuration. </p>
    pub fn get_sns_configuration(&self) -> &::std::option::Option<crate::types::SnsConfiguration> {
        &self.sns_configuration
    }
    /// Consumes the builder and constructs a [`NotificationConfiguration`](crate::types::NotificationConfiguration).
    pub fn build(self) -> crate::types::NotificationConfiguration {
        crate::types::NotificationConfiguration {
            sns_configuration: self.sns_configuration,
        }
    }
}
