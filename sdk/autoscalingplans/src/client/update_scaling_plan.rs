// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateScalingPlan`](crate::client::fluent_builders::UpdateScalingPlan) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`scaling_plan_name(impl Into<String>)`](crate::client::fluent_builders::UpdateScalingPlan::scaling_plan_name) / [`set_scaling_plan_name(Option<String>)`](crate::client::fluent_builders::UpdateScalingPlan::set_scaling_plan_name): <p>The name of the scaling plan.</p>
    ///   - [`scaling_plan_version(i64)`](crate::client::fluent_builders::UpdateScalingPlan::scaling_plan_version) / [`set_scaling_plan_version(Option<i64>)`](crate::client::fluent_builders::UpdateScalingPlan::set_scaling_plan_version): <p>The version number of the scaling plan. The only valid value is <code>1</code>. Currently, you cannot have multiple scaling plan versions.</p>
    ///   - [`application_source(ApplicationSource)`](crate::client::fluent_builders::UpdateScalingPlan::application_source) / [`set_application_source(Option<ApplicationSource>)`](crate::client::fluent_builders::UpdateScalingPlan::set_application_source): <p>A CloudFormation stack or set of tags.</p>  <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/plans/APIReference/API_ApplicationSource.html">ApplicationSource</a> in the <i>AWS Auto Scaling API Reference</i>.</p>
    ///   - [`scaling_instructions(Vec<ScalingInstruction>)`](crate::client::fluent_builders::UpdateScalingPlan::scaling_instructions) / [`set_scaling_instructions(Option<Vec<ScalingInstruction>>)`](crate::client::fluent_builders::UpdateScalingPlan::set_scaling_instructions): <p>The scaling instructions.</p>  <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/plans/APIReference/API_ScalingInstruction.html">ScalingInstruction</a> in the <i>AWS Auto Scaling API Reference</i>.</p>
    /// - On success, responds with [`UpdateScalingPlanOutput`](crate::output::UpdateScalingPlanOutput)
    /// - On failure, responds with [`SdkError<UpdateScalingPlanError>`](crate::error::UpdateScalingPlanError)
    pub fn update_scaling_plan(&self) -> crate::client::fluent_builders::UpdateScalingPlan {
        crate::client::fluent_builders::UpdateScalingPlan::new(self.handle.clone())
    }
}
