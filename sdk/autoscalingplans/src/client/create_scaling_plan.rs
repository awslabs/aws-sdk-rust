// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateScalingPlan`](crate::client::fluent_builders::CreateScalingPlan) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`scaling_plan_name(impl Into<String>)`](crate::client::fluent_builders::CreateScalingPlan::scaling_plan_name) / [`set_scaling_plan_name(Option<String>)`](crate::client::fluent_builders::CreateScalingPlan::set_scaling_plan_name): <p>The name of the scaling plan. Names cannot contain vertical bars, colons, or forward slashes.</p>
    ///   - [`application_source(ApplicationSource)`](crate::client::fluent_builders::CreateScalingPlan::application_source) / [`set_application_source(Option<ApplicationSource>)`](crate::client::fluent_builders::CreateScalingPlan::set_application_source): <p>A CloudFormation stack or set of tags. You can create one scaling plan per application source.</p>  <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/plans/APIReference/API_ApplicationSource.html">ApplicationSource</a> in the <i>AWS Auto Scaling API Reference</i>.</p>
    ///   - [`scaling_instructions(Vec<ScalingInstruction>)`](crate::client::fluent_builders::CreateScalingPlan::scaling_instructions) / [`set_scaling_instructions(Option<Vec<ScalingInstruction>>)`](crate::client::fluent_builders::CreateScalingPlan::set_scaling_instructions): <p>The scaling instructions.</p>  <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/plans/APIReference/API_ScalingInstruction.html">ScalingInstruction</a> in the <i>AWS Auto Scaling API Reference</i>.</p>
    /// - On success, responds with [`CreateScalingPlanOutput`](crate::output::CreateScalingPlanOutput) with field(s):
    ///   - [`scaling_plan_version(Option<i64>)`](crate::output::CreateScalingPlanOutput::scaling_plan_version): <p>The version number of the scaling plan. This value is always <code>1</code>. Currently, you cannot have multiple scaling plan versions.</p>
    /// - On failure, responds with [`SdkError<CreateScalingPlanError>`](crate::error::CreateScalingPlanError)
    pub fn create_scaling_plan(&self) -> crate::client::fluent_builders::CreateScalingPlan {
        crate::client::fluent_builders::CreateScalingPlan::new(self.handle.clone())
    }
}
