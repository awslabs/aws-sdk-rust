// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_scaling_instruction(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::types::ScalingInstruction,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    {
        object.key("ServiceNamespace").string(input.service_namespace.as_str());
    }
    {
        object.key("ResourceId").string(input.resource_id.as_str());
    }
    {
        object.key("ScalableDimension").string(input.scalable_dimension.as_str());
    }
    {
        object.key("MinCapacity").number(
            #[allow(clippy::useless_conversion)]
            ::aws_smithy_types::Number::NegInt((input.min_capacity).into()),
        );
    }
    {
        object.key("MaxCapacity").number(
            #[allow(clippy::useless_conversion)]
            ::aws_smithy_types::Number::NegInt((input.max_capacity).into()),
        );
    }
    {
        let mut array_1 = object.key("TargetTrackingConfigurations").start_array();
        for item_2 in &input.target_tracking_configurations {
            {
                #[allow(unused_mut)]
                let mut object_3 = array_1.value().start_object();
                crate::protocol_serde::shape_target_tracking_configuration::ser_target_tracking_configuration(&mut object_3, item_2)?;
                object_3.finish();
            }
        }
        array_1.finish();
    }
    if let Some(var_4) = &input.predefined_load_metric_specification {
        #[allow(unused_mut)]
        let mut object_5 = object.key("PredefinedLoadMetricSpecification").start_object();
        crate::protocol_serde::shape_predefined_load_metric_specification::ser_predefined_load_metric_specification(&mut object_5, var_4)?;
        object_5.finish();
    }
    if let Some(var_6) = &input.customized_load_metric_specification {
        #[allow(unused_mut)]
        let mut object_7 = object.key("CustomizedLoadMetricSpecification").start_object();
        crate::protocol_serde::shape_customized_load_metric_specification::ser_customized_load_metric_specification(&mut object_7, var_6)?;
        object_7.finish();
    }
    if let Some(var_8) = &input.scheduled_action_buffer_time {
        object.key("ScheduledActionBufferTime").number(
            #[allow(clippy::useless_conversion)]
            ::aws_smithy_types::Number::NegInt((*var_8).into()),
        );
    }
    if let Some(var_9) = &input.predictive_scaling_max_capacity_behavior {
        object.key("PredictiveScalingMaxCapacityBehavior").string(var_9.as_str());
    }
    if let Some(var_10) = &input.predictive_scaling_max_capacity_buffer {
        object.key("PredictiveScalingMaxCapacityBuffer").number(
            #[allow(clippy::useless_conversion)]
            ::aws_smithy_types::Number::NegInt((*var_10).into()),
        );
    }
    if let Some(var_11) = &input.predictive_scaling_mode {
        object.key("PredictiveScalingMode").string(var_11.as_str());
    }
    if let Some(var_12) = &input.scaling_policy_update_behavior {
        object.key("ScalingPolicyUpdateBehavior").string(var_12.as_str());
    }
    if let Some(var_13) = &input.disable_dynamic_scaling {
        object.key("DisableDynamicScaling").boolean(*var_13);
    }
    Ok(())
}

pub(crate) fn de_scaling_instruction<'a, I>(
    tokens: &mut ::std::iter::Peekable<I>,
) -> Result<Option<crate::types::ScalingInstruction>, ::aws_smithy_json::deserialize::error::DeserializeError>
where
    I: Iterator<Item = Result<::aws_smithy_json::deserialize::Token<'a>, ::aws_smithy_json::deserialize::error::DeserializeError>>,
{
    match tokens.next().transpose()? {
        Some(::aws_smithy_json::deserialize::Token::ValueNull { .. }) => Ok(None),
        Some(::aws_smithy_json::deserialize::Token::StartObject { .. }) => {
            #[allow(unused_mut)]
            let mut builder = crate::types::builders::ScalingInstructionBuilder::default();
            loop {
                match tokens.next().transpose()? {
                    Some(::aws_smithy_json::deserialize::Token::EndObject { .. }) => break,
                    Some(::aws_smithy_json::deserialize::Token::ObjectKey { key, .. }) => match key.to_unescaped()?.as_ref() {
                        "ServiceNamespace" => {
                            builder = builder.set_service_namespace(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| crate::types::ServiceNamespace::from(u.as_ref())))
                                    .transpose()?,
                            );
                        }
                        "ResourceId" => {
                            builder = builder.set_resource_id(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                            );
                        }
                        "ScalableDimension" => {
                            builder = builder.set_scalable_dimension(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| crate::types::ScalableDimension::from(u.as_ref())))
                                    .transpose()?,
                            );
                        }
                        "MinCapacity" => {
                            builder = builder.set_min_capacity(
                                ::aws_smithy_json::deserialize::token::expect_number_or_null(tokens.next())?
                                    .map(i32::try_from)
                                    .transpose()?,
                            );
                        }
                        "MaxCapacity" => {
                            builder = builder.set_max_capacity(
                                ::aws_smithy_json::deserialize::token::expect_number_or_null(tokens.next())?
                                    .map(i32::try_from)
                                    .transpose()?,
                            );
                        }
                        "TargetTrackingConfigurations" => {
                            builder = builder.set_target_tracking_configurations(
                                crate::protocol_serde::shape_target_tracking_configurations::de_target_tracking_configurations(tokens)?,
                            );
                        }
                        "PredefinedLoadMetricSpecification" => {
                            builder = builder.set_predefined_load_metric_specification(
                                crate::protocol_serde::shape_predefined_load_metric_specification::de_predefined_load_metric_specification(tokens)?,
                            );
                        }
                        "CustomizedLoadMetricSpecification" => {
                            builder = builder.set_customized_load_metric_specification(
                                crate::protocol_serde::shape_customized_load_metric_specification::de_customized_load_metric_specification(tokens)?,
                            );
                        }
                        "ScheduledActionBufferTime" => {
                            builder = builder.set_scheduled_action_buffer_time(
                                ::aws_smithy_json::deserialize::token::expect_number_or_null(tokens.next())?
                                    .map(i32::try_from)
                                    .transpose()?,
                            );
                        }
                        "PredictiveScalingMaxCapacityBehavior" => {
                            builder = builder.set_predictive_scaling_max_capacity_behavior(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| {
                                        s.to_unescaped()
                                            .map(|u| crate::types::PredictiveScalingMaxCapacityBehavior::from(u.as_ref()))
                                    })
                                    .transpose()?,
                            );
                        }
                        "PredictiveScalingMaxCapacityBuffer" => {
                            builder = builder.set_predictive_scaling_max_capacity_buffer(
                                ::aws_smithy_json::deserialize::token::expect_number_or_null(tokens.next())?
                                    .map(i32::try_from)
                                    .transpose()?,
                            );
                        }
                        "PredictiveScalingMode" => {
                            builder = builder.set_predictive_scaling_mode(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| crate::types::PredictiveScalingMode::from(u.as_ref())))
                                    .transpose()?,
                            );
                        }
                        "ScalingPolicyUpdateBehavior" => {
                            builder = builder.set_scaling_policy_update_behavior(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| crate::types::ScalingPolicyUpdateBehavior::from(u.as_ref())))
                                    .transpose()?,
                            );
                        }
                        "DisableDynamicScaling" => {
                            builder = builder.set_disable_dynamic_scaling(::aws_smithy_json::deserialize::token::expect_bool_or_null(tokens.next())?);
                        }
                        _ => ::aws_smithy_json::deserialize::token::skip_value(tokens)?,
                    },
                    other => {
                        return Err(::aws_smithy_json::deserialize::error::DeserializeError::custom(format!(
                            "expected object key or end object, found: {:?}",
                            other
                        )))
                    }
                }
            }
            Ok(Some(crate::serde_util::scaling_instruction_correct_errors(builder).build().map_err(
                |err| ::aws_smithy_json::deserialize::error::DeserializeError::custom_source("Response was invalid", err),
            )?))
        }
        _ => Err(::aws_smithy_json::deserialize::error::DeserializeError::custom(
            "expected start object or null",
        )),
    }
}
