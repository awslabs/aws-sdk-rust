// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct PutSipMediaApplicationAlexaSkillConfigurationInput {
    #[allow(missing_docs)] // documentation missing in model
    #[doc(hidden)]
    pub sip_media_application_id: std::option::Option<std::string::String>,
    #[allow(missing_docs)] // documentation missing in model
    #[doc(hidden)]
    pub sip_media_application_alexa_skill_configuration:
        std::option::Option<crate::types::SipMediaApplicationAlexaSkillConfiguration>,
}
impl PutSipMediaApplicationAlexaSkillConfigurationInput {
    #[allow(missing_docs)] // documentation missing in model
    pub fn sip_media_application_id(&self) -> std::option::Option<&str> {
        self.sip_media_application_id.as_deref()
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn sip_media_application_alexa_skill_configuration(
        &self,
    ) -> std::option::Option<&crate::types::SipMediaApplicationAlexaSkillConfiguration> {
        self.sip_media_application_alexa_skill_configuration
            .as_ref()
    }
}
impl PutSipMediaApplicationAlexaSkillConfigurationInput {
    /// Creates a new builder-style object to manufacture [`PutSipMediaApplicationAlexaSkillConfigurationInput`](crate::operation::put_sip_media_application_alexa_skill_configuration::PutSipMediaApplicationAlexaSkillConfigurationInput).
    pub fn builder() -> crate::operation::put_sip_media_application_alexa_skill_configuration::builders::PutSipMediaApplicationAlexaSkillConfigurationInputBuilder{
        crate::operation::put_sip_media_application_alexa_skill_configuration::builders::PutSipMediaApplicationAlexaSkillConfigurationInputBuilder::default()
    }
}

/// A builder for [`PutSipMediaApplicationAlexaSkillConfigurationInput`](crate::operation::put_sip_media_application_alexa_skill_configuration::PutSipMediaApplicationAlexaSkillConfigurationInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct PutSipMediaApplicationAlexaSkillConfigurationInputBuilder {
    pub(crate) sip_media_application_id: std::option::Option<std::string::String>,
    pub(crate) sip_media_application_alexa_skill_configuration:
        std::option::Option<crate::types::SipMediaApplicationAlexaSkillConfiguration>,
}
impl PutSipMediaApplicationAlexaSkillConfigurationInputBuilder {
    #[allow(missing_docs)] // documentation missing in model
    pub fn sip_media_application_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.sip_media_application_id = Some(input.into());
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_sip_media_application_id(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.sip_media_application_id = input;
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn sip_media_application_alexa_skill_configuration(
        mut self,
        input: crate::types::SipMediaApplicationAlexaSkillConfiguration,
    ) -> Self {
        self.sip_media_application_alexa_skill_configuration = Some(input);
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_sip_media_application_alexa_skill_configuration(
        mut self,
        input: std::option::Option<crate::types::SipMediaApplicationAlexaSkillConfiguration>,
    ) -> Self {
        self.sip_media_application_alexa_skill_configuration = input;
        self
    }
    /// Consumes the builder and constructs a [`PutSipMediaApplicationAlexaSkillConfigurationInput`](crate::operation::put_sip_media_application_alexa_skill_configuration::PutSipMediaApplicationAlexaSkillConfigurationInput).
    pub fn build(self) -> Result<crate::operation::put_sip_media_application_alexa_skill_configuration::PutSipMediaApplicationAlexaSkillConfigurationInput, aws_smithy_http::operation::error::BuildError>{
        Ok(
            crate::operation::put_sip_media_application_alexa_skill_configuration::PutSipMediaApplicationAlexaSkillConfigurationInput {
                sip_media_application_id: self.sip_media_application_id
                ,
                sip_media_application_alexa_skill_configuration: self.sip_media_application_alexa_skill_configuration
                ,
            }
        )
    }
}
