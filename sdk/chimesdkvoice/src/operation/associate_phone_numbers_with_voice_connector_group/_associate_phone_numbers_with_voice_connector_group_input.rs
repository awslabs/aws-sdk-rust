// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AssociatePhoneNumbersWithVoiceConnectorGroupInput {
    /// <p>The Amazon Chime SDK Voice Connector group ID.</p>
    pub voice_connector_group_id: ::std::option::Option<::std::string::String>,
    /// <p>List of phone numbers, in E.164 format.</p>
    pub e164_phone_numbers: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
    /// <p>If true, associates the provided phone numbers with the provided Amazon Chime SDK Voice Connector Group and removes any previously existing associations. If false, does not associate any phone numbers that have previously existing associations.</p>
    pub force_associate: ::std::option::Option<bool>,
}
impl AssociatePhoneNumbersWithVoiceConnectorGroupInput {
    /// <p>The Amazon Chime SDK Voice Connector group ID.</p>
    pub fn voice_connector_group_id(&self) -> ::std::option::Option<&str> {
        self.voice_connector_group_id.as_deref()
    }
    /// <p>List of phone numbers, in E.164 format.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.e164_phone_numbers.is_none()`.
    pub fn e164_phone_numbers(&self) -> &[::std::string::String] {
        self.e164_phone_numbers.as_deref().unwrap_or_default()
    }
    /// <p>If true, associates the provided phone numbers with the provided Amazon Chime SDK Voice Connector Group and removes any previously existing associations. If false, does not associate any phone numbers that have previously existing associations.</p>
    pub fn force_associate(&self) -> ::std::option::Option<bool> {
        self.force_associate
    }
}
impl AssociatePhoneNumbersWithVoiceConnectorGroupInput {
    /// Creates a new builder-style object to manufacture [`AssociatePhoneNumbersWithVoiceConnectorGroupInput`](crate::operation::associate_phone_numbers_with_voice_connector_group::AssociatePhoneNumbersWithVoiceConnectorGroupInput).
    pub fn builder(
    ) -> crate::operation::associate_phone_numbers_with_voice_connector_group::builders::AssociatePhoneNumbersWithVoiceConnectorGroupInputBuilder
    {
        crate::operation::associate_phone_numbers_with_voice_connector_group::builders::AssociatePhoneNumbersWithVoiceConnectorGroupInputBuilder::default()
    }
}

/// A builder for [`AssociatePhoneNumbersWithVoiceConnectorGroupInput`](crate::operation::associate_phone_numbers_with_voice_connector_group::AssociatePhoneNumbersWithVoiceConnectorGroupInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct AssociatePhoneNumbersWithVoiceConnectorGroupInputBuilder {
    pub(crate) voice_connector_group_id: ::std::option::Option<::std::string::String>,
    pub(crate) e164_phone_numbers: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
    pub(crate) force_associate: ::std::option::Option<bool>,
}
impl AssociatePhoneNumbersWithVoiceConnectorGroupInputBuilder {
    /// <p>The Amazon Chime SDK Voice Connector group ID.</p>
    /// This field is required.
    pub fn voice_connector_group_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.voice_connector_group_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Chime SDK Voice Connector group ID.</p>
    pub fn set_voice_connector_group_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.voice_connector_group_id = input;
        self
    }
    /// <p>The Amazon Chime SDK Voice Connector group ID.</p>
    pub fn get_voice_connector_group_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.voice_connector_group_id
    }
    /// Appends an item to `e164_phone_numbers`.
    ///
    /// To override the contents of this collection use [`set_e164_phone_numbers`](Self::set_e164_phone_numbers).
    ///
    /// <p>List of phone numbers, in E.164 format.</p>
    pub fn e164_phone_numbers(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        let mut v = self.e164_phone_numbers.unwrap_or_default();
        v.push(input.into());
        self.e164_phone_numbers = ::std::option::Option::Some(v);
        self
    }
    /// <p>List of phone numbers, in E.164 format.</p>
    pub fn set_e164_phone_numbers(mut self, input: ::std::option::Option<::std::vec::Vec<::std::string::String>>) -> Self {
        self.e164_phone_numbers = input;
        self
    }
    /// <p>List of phone numbers, in E.164 format.</p>
    pub fn get_e164_phone_numbers(&self) -> &::std::option::Option<::std::vec::Vec<::std::string::String>> {
        &self.e164_phone_numbers
    }
    /// <p>If true, associates the provided phone numbers with the provided Amazon Chime SDK Voice Connector Group and removes any previously existing associations. If false, does not associate any phone numbers that have previously existing associations.</p>
    pub fn force_associate(mut self, input: bool) -> Self {
        self.force_associate = ::std::option::Option::Some(input);
        self
    }
    /// <p>If true, associates the provided phone numbers with the provided Amazon Chime SDK Voice Connector Group and removes any previously existing associations. If false, does not associate any phone numbers that have previously existing associations.</p>
    pub fn set_force_associate(mut self, input: ::std::option::Option<bool>) -> Self {
        self.force_associate = input;
        self
    }
    /// <p>If true, associates the provided phone numbers with the provided Amazon Chime SDK Voice Connector Group and removes any previously existing associations. If false, does not associate any phone numbers that have previously existing associations.</p>
    pub fn get_force_associate(&self) -> &::std::option::Option<bool> {
        &self.force_associate
    }
    /// Consumes the builder and constructs a [`AssociatePhoneNumbersWithVoiceConnectorGroupInput`](crate::operation::associate_phone_numbers_with_voice_connector_group::AssociatePhoneNumbersWithVoiceConnectorGroupInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::associate_phone_numbers_with_voice_connector_group::AssociatePhoneNumbersWithVoiceConnectorGroupInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(
            crate::operation::associate_phone_numbers_with_voice_connector_group::AssociatePhoneNumbersWithVoiceConnectorGroupInput {
                voice_connector_group_id: self.voice_connector_group_id,
                e164_phone_numbers: self.e164_phone_numbers,
                force_associate: self.force_associate,
            },
        )
    }
}
