// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct UpdateSipMediaApplicationCallInput {
    #[allow(missing_docs)] // documentation missing in model
    #[doc(hidden)]
    pub sip_media_application_id: std::option::Option<std::string::String>,
    #[allow(missing_docs)] // documentation missing in model
    #[doc(hidden)]
    pub transaction_id: std::option::Option<std::string::String>,
    #[allow(missing_docs)] // documentation missing in model
    #[doc(hidden)]
    pub arguments:
        std::option::Option<std::collections::HashMap<std::string::String, std::string::String>>,
}
impl UpdateSipMediaApplicationCallInput {
    #[allow(missing_docs)] // documentation missing in model
    pub fn sip_media_application_id(&self) -> std::option::Option<&str> {
        self.sip_media_application_id.as_deref()
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn transaction_id(&self) -> std::option::Option<&str> {
        self.transaction_id.as_deref()
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn arguments(
        &self,
    ) -> std::option::Option<&std::collections::HashMap<std::string::String, std::string::String>>
    {
        self.arguments.as_ref()
    }
}
impl UpdateSipMediaApplicationCallInput {
    /// Creates a new builder-style object to manufacture [`UpdateSipMediaApplicationCallInput`](crate::operation::update_sip_media_application_call::UpdateSipMediaApplicationCallInput).
    pub fn builder() -> crate::operation::update_sip_media_application_call::builders::UpdateSipMediaApplicationCallInputBuilder{
        crate::operation::update_sip_media_application_call::builders::UpdateSipMediaApplicationCallInputBuilder::default()
    }
}

/// A builder for [`UpdateSipMediaApplicationCallInput`](crate::operation::update_sip_media_application_call::UpdateSipMediaApplicationCallInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct UpdateSipMediaApplicationCallInputBuilder {
    pub(crate) sip_media_application_id: std::option::Option<std::string::String>,
    pub(crate) transaction_id: std::option::Option<std::string::String>,
    pub(crate) arguments:
        std::option::Option<std::collections::HashMap<std::string::String, std::string::String>>,
}
impl UpdateSipMediaApplicationCallInputBuilder {
    #[allow(missing_docs)] // documentation missing in model
    pub fn sip_media_application_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.sip_media_application_id = Some(input.into());
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_sip_media_application_id(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.sip_media_application_id = input;
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn transaction_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.transaction_id = Some(input.into());
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_transaction_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.transaction_id = input;
        self
    }
    /// Adds a key-value pair to `arguments`.
    ///
    /// To override the contents of this collection use [`set_arguments`](Self::set_arguments).
    ///
    pub fn arguments(
        mut self,
        k: impl Into<std::string::String>,
        v: impl Into<std::string::String>,
    ) -> Self {
        let mut hash_map = self.arguments.unwrap_or_default();
        hash_map.insert(k.into(), v.into());
        self.arguments = Some(hash_map);
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_arguments(
        mut self,
        input: std::option::Option<
            std::collections::HashMap<std::string::String, std::string::String>,
        >,
    ) -> Self {
        self.arguments = input;
        self
    }
    /// Consumes the builder and constructs a [`UpdateSipMediaApplicationCallInput`](crate::operation::update_sip_media_application_call::UpdateSipMediaApplicationCallInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::update_sip_media_application_call::UpdateSipMediaApplicationCallInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::update_sip_media_application_call::UpdateSipMediaApplicationCallInput {
                sip_media_application_id: self.sip_media_application_id
                ,
                transaction_id: self.transaction_id
                ,
                arguments: self.arguments
                ,
            }
        )
    }
}
