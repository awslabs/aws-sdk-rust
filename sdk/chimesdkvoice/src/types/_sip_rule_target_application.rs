// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct SipRuleTargetApplication {
    #[allow(missing_docs)] // documentation missing in model
    #[doc(hidden)]
    pub sip_media_application_id: std::option::Option<std::string::String>,
    #[allow(missing_docs)] // documentation missing in model
    #[doc(hidden)]
    pub priority: std::option::Option<i32>,
    #[allow(missing_docs)] // documentation missing in model
    #[doc(hidden)]
    pub aws_region: std::option::Option<std::string::String>,
}
impl SipRuleTargetApplication {
    #[allow(missing_docs)] // documentation missing in model
    pub fn sip_media_application_id(&self) -> std::option::Option<&str> {
        self.sip_media_application_id.as_deref()
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn priority(&self) -> std::option::Option<i32> {
        self.priority
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn aws_region(&self) -> std::option::Option<&str> {
        self.aws_region.as_deref()
    }
}
impl SipRuleTargetApplication {
    /// Creates a new builder-style object to manufacture [`SipRuleTargetApplication`](crate::types::SipRuleTargetApplication).
    pub fn builder() -> crate::types::builders::SipRuleTargetApplicationBuilder {
        crate::types::builders::SipRuleTargetApplicationBuilder::default()
    }
}

/// A builder for [`SipRuleTargetApplication`](crate::types::SipRuleTargetApplication).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct SipRuleTargetApplicationBuilder {
    pub(crate) sip_media_application_id: std::option::Option<std::string::String>,
    pub(crate) priority: std::option::Option<i32>,
    pub(crate) aws_region: std::option::Option<std::string::String>,
}
impl SipRuleTargetApplicationBuilder {
    #[allow(missing_docs)] // documentation missing in model
    pub fn sip_media_application_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.sip_media_application_id = Some(input.into());
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_sip_media_application_id(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.sip_media_application_id = input;
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn priority(mut self, input: i32) -> Self {
        self.priority = Some(input);
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_priority(mut self, input: std::option::Option<i32>) -> Self {
        self.priority = input;
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn aws_region(mut self, input: impl Into<std::string::String>) -> Self {
        self.aws_region = Some(input.into());
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_aws_region(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.aws_region = input;
        self
    }
    /// Consumes the builder and constructs a [`SipRuleTargetApplication`](crate::types::SipRuleTargetApplication).
    pub fn build(self) -> crate::types::SipRuleTargetApplication {
        crate::types::SipRuleTargetApplication {
            sip_media_application_id: self.sip_media_application_id,
            priority: self.priority,
            aws_region: self.aws_region,
        }
    }
}
