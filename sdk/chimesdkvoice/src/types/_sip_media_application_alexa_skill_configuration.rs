// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct SipMediaApplicationAlexaSkillConfiguration {
    #[allow(missing_docs)] // documentation missing in model
    #[doc(hidden)]
    pub alexa_skill_status: std::option::Option<crate::types::AlexaSkillStatus>,
    #[allow(missing_docs)] // documentation missing in model
    #[doc(hidden)]
    pub alexa_skill_ids: std::option::Option<std::vec::Vec<std::string::String>>,
}
impl SipMediaApplicationAlexaSkillConfiguration {
    #[allow(missing_docs)] // documentation missing in model
    pub fn alexa_skill_status(&self) -> std::option::Option<&crate::types::AlexaSkillStatus> {
        self.alexa_skill_status.as_ref()
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn alexa_skill_ids(&self) -> std::option::Option<&[std::string::String]> {
        self.alexa_skill_ids.as_deref()
    }
}
impl SipMediaApplicationAlexaSkillConfiguration {
    /// Creates a new builder-style object to manufacture [`SipMediaApplicationAlexaSkillConfiguration`](crate::types::SipMediaApplicationAlexaSkillConfiguration).
    pub fn builder() -> crate::types::builders::SipMediaApplicationAlexaSkillConfigurationBuilder {
        crate::types::builders::SipMediaApplicationAlexaSkillConfigurationBuilder::default()
    }
}

/// A builder for [`SipMediaApplicationAlexaSkillConfiguration`](crate::types::SipMediaApplicationAlexaSkillConfiguration).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct SipMediaApplicationAlexaSkillConfigurationBuilder {
    pub(crate) alexa_skill_status: std::option::Option<crate::types::AlexaSkillStatus>,
    pub(crate) alexa_skill_ids: std::option::Option<std::vec::Vec<std::string::String>>,
}
impl SipMediaApplicationAlexaSkillConfigurationBuilder {
    #[allow(missing_docs)] // documentation missing in model
    pub fn alexa_skill_status(mut self, input: crate::types::AlexaSkillStatus) -> Self {
        self.alexa_skill_status = Some(input);
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_alexa_skill_status(
        mut self,
        input: std::option::Option<crate::types::AlexaSkillStatus>,
    ) -> Self {
        self.alexa_skill_status = input;
        self
    }
    /// Appends an item to `alexa_skill_ids`.
    ///
    /// To override the contents of this collection use [`set_alexa_skill_ids`](Self::set_alexa_skill_ids).
    ///
    pub fn alexa_skill_ids(mut self, input: impl Into<std::string::String>) -> Self {
        let mut v = self.alexa_skill_ids.unwrap_or_default();
        v.push(input.into());
        self.alexa_skill_ids = Some(v);
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_alexa_skill_ids(
        mut self,
        input: std::option::Option<std::vec::Vec<std::string::String>>,
    ) -> Self {
        self.alexa_skill_ids = input;
        self
    }
    /// Consumes the builder and constructs a [`SipMediaApplicationAlexaSkillConfiguration`](crate::types::SipMediaApplicationAlexaSkillConfiguration).
    pub fn build(self) -> crate::types::SipMediaApplicationAlexaSkillConfiguration {
        crate::types::SipMediaApplicationAlexaSkillConfiguration {
            alexa_skill_status: self.alexa_skill_status,
            alexa_skill_ids: self.alexa_skill_ids,
        }
    }
}
