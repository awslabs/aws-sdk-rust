// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq)]
pub struct Participant {
    #[allow(missing_docs)] // documentation missing in model
    #[doc(hidden)]
    pub phone_number: std::option::Option<std::string::String>,
    #[allow(missing_docs)] // documentation missing in model
    #[doc(hidden)]
    pub proxy_phone_number: std::option::Option<std::string::String>,
}
impl Participant {
    #[allow(missing_docs)] // documentation missing in model
    pub fn phone_number(&self) -> std::option::Option<&str> {
        self.phone_number.as_deref()
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn proxy_phone_number(&self) -> std::option::Option<&str> {
        self.proxy_phone_number.as_deref()
    }
}
impl std::fmt::Debug for Participant {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        let mut formatter = f.debug_struct("Participant");
        formatter.field("phone_number", &"*** Sensitive Data Redacted ***");
        formatter.field("proxy_phone_number", &"*** Sensitive Data Redacted ***");
        formatter.finish()
    }
}
impl Participant {
    /// Creates a new builder-style object to manufacture [`Participant`](crate::types::Participant).
    pub fn builder() -> crate::types::builders::ParticipantBuilder {
        crate::types::builders::ParticipantBuilder::default()
    }
}

/// A builder for [`Participant`](crate::types::Participant).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default)]
pub struct ParticipantBuilder {
    pub(crate) phone_number: std::option::Option<std::string::String>,
    pub(crate) proxy_phone_number: std::option::Option<std::string::String>,
}
impl ParticipantBuilder {
    #[allow(missing_docs)] // documentation missing in model
    pub fn phone_number(mut self, input: impl Into<std::string::String>) -> Self {
        self.phone_number = Some(input.into());
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_phone_number(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.phone_number = input;
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn proxy_phone_number(mut self, input: impl Into<std::string::String>) -> Self {
        self.proxy_phone_number = Some(input.into());
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_proxy_phone_number(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.proxy_phone_number = input;
        self
    }
    /// Consumes the builder and constructs a [`Participant`](crate::types::Participant).
    pub fn build(self) -> crate::types::Participant {
        crate::types::Participant {
            phone_number: self.phone_number,
            proxy_phone_number: self.proxy_phone_number,
        }
    }
}
impl std::fmt::Debug for ParticipantBuilder {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        let mut formatter = f.debug_struct("ParticipantBuilder");
        formatter.field("phone_number", &"*** Sensitive Data Redacted ***");
        formatter.field("proxy_phone_number", &"*** Sensitive Data Redacted ***");
        formatter.finish()
    }
}
