// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct Origination {
    #[allow(missing_docs)] // documentation missing in model
    #[doc(hidden)]
    pub routes: std::option::Option<std::vec::Vec<crate::types::OriginationRoute>>,
    #[allow(missing_docs)] // documentation missing in model
    #[doc(hidden)]
    pub disabled: std::option::Option<bool>,
}
impl Origination {
    #[allow(missing_docs)] // documentation missing in model
    pub fn routes(&self) -> std::option::Option<&[crate::types::OriginationRoute]> {
        self.routes.as_deref()
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn disabled(&self) -> std::option::Option<bool> {
        self.disabled
    }
}
impl Origination {
    /// Creates a new builder-style object to manufacture [`Origination`](crate::types::Origination).
    pub fn builder() -> crate::types::builders::OriginationBuilder {
        crate::types::builders::OriginationBuilder::default()
    }
}

/// A builder for [`Origination`](crate::types::Origination).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct OriginationBuilder {
    pub(crate) routes: std::option::Option<std::vec::Vec<crate::types::OriginationRoute>>,
    pub(crate) disabled: std::option::Option<bool>,
}
impl OriginationBuilder {
    /// Appends an item to `routes`.
    ///
    /// To override the contents of this collection use [`set_routes`](Self::set_routes).
    ///
    pub fn routes(mut self, input: crate::types::OriginationRoute) -> Self {
        let mut v = self.routes.unwrap_or_default();
        v.push(input);
        self.routes = Some(v);
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_routes(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::OriginationRoute>>,
    ) -> Self {
        self.routes = input;
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn disabled(mut self, input: bool) -> Self {
        self.disabled = Some(input);
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_disabled(mut self, input: std::option::Option<bool>) -> Self {
        self.disabled = input;
        self
    }
    /// Consumes the builder and constructs a [`Origination`](crate::types::Origination).
    pub fn build(self) -> crate::types::Origination {
        crate::types::Origination {
            routes: self.routes,
            disabled: self.disabled,
        }
    }
}
