// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct VoiceConnectorGroup {
    #[allow(missing_docs)] // documentation missing in model
    #[doc(hidden)]
    pub voice_connector_group_id: std::option::Option<std::string::String>,
    #[allow(missing_docs)] // documentation missing in model
    #[doc(hidden)]
    pub name: std::option::Option<std::string::String>,
    #[allow(missing_docs)] // documentation missing in model
    #[doc(hidden)]
    pub voice_connector_items: std::option::Option<std::vec::Vec<crate::types::VoiceConnectorItem>>,
    #[allow(missing_docs)] // documentation missing in model
    #[doc(hidden)]
    pub created_timestamp: std::option::Option<aws_smithy_types::DateTime>,
    #[allow(missing_docs)] // documentation missing in model
    #[doc(hidden)]
    pub updated_timestamp: std::option::Option<aws_smithy_types::DateTime>,
    #[allow(missing_docs)] // documentation missing in model
    #[doc(hidden)]
    pub voice_connector_group_arn: std::option::Option<std::string::String>,
}
impl VoiceConnectorGroup {
    #[allow(missing_docs)] // documentation missing in model
    pub fn voice_connector_group_id(&self) -> std::option::Option<&str> {
        self.voice_connector_group_id.as_deref()
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn name(&self) -> std::option::Option<&str> {
        self.name.as_deref()
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn voice_connector_items(
        &self,
    ) -> std::option::Option<&[crate::types::VoiceConnectorItem]> {
        self.voice_connector_items.as_deref()
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn created_timestamp(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.created_timestamp.as_ref()
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn updated_timestamp(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.updated_timestamp.as_ref()
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn voice_connector_group_arn(&self) -> std::option::Option<&str> {
        self.voice_connector_group_arn.as_deref()
    }
}
impl VoiceConnectorGroup {
    /// Creates a new builder-style object to manufacture [`VoiceConnectorGroup`](crate::types::VoiceConnectorGroup).
    pub fn builder() -> crate::types::builders::VoiceConnectorGroupBuilder {
        crate::types::builders::VoiceConnectorGroupBuilder::default()
    }
}

/// A builder for [`VoiceConnectorGroup`](crate::types::VoiceConnectorGroup).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct VoiceConnectorGroupBuilder {
    pub(crate) voice_connector_group_id: std::option::Option<std::string::String>,
    pub(crate) name: std::option::Option<std::string::String>,
    pub(crate) voice_connector_items:
        std::option::Option<std::vec::Vec<crate::types::VoiceConnectorItem>>,
    pub(crate) created_timestamp: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) updated_timestamp: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) voice_connector_group_arn: std::option::Option<std::string::String>,
}
impl VoiceConnectorGroupBuilder {
    #[allow(missing_docs)] // documentation missing in model
    pub fn voice_connector_group_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.voice_connector_group_id = Some(input.into());
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_voice_connector_group_id(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.voice_connector_group_id = input;
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn name(mut self, input: impl Into<std::string::String>) -> Self {
        self.name = Some(input.into());
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// Appends an item to `voice_connector_items`.
    ///
    /// To override the contents of this collection use [`set_voice_connector_items`](Self::set_voice_connector_items).
    ///
    pub fn voice_connector_items(mut self, input: crate::types::VoiceConnectorItem) -> Self {
        let mut v = self.voice_connector_items.unwrap_or_default();
        v.push(input);
        self.voice_connector_items = Some(v);
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_voice_connector_items(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::VoiceConnectorItem>>,
    ) -> Self {
        self.voice_connector_items = input;
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn created_timestamp(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.created_timestamp = Some(input);
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_created_timestamp(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.created_timestamp = input;
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn updated_timestamp(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.updated_timestamp = Some(input);
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_updated_timestamp(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.updated_timestamp = input;
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn voice_connector_group_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.voice_connector_group_arn = Some(input.into());
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_voice_connector_group_arn(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.voice_connector_group_arn = input;
        self
    }
    /// Consumes the builder and constructs a [`VoiceConnectorGroup`](crate::types::VoiceConnectorGroup).
    pub fn build(self) -> crate::types::VoiceConnectorGroup {
        crate::types::VoiceConnectorGroup {
            voice_connector_group_id: self.voice_connector_group_id,
            name: self.name,
            voice_connector_items: self.voice_connector_items,
            created_timestamp: self.created_timestamp,
            updated_timestamp: self.updated_timestamp,
            voice_connector_group_arn: self.voice_connector_group_arn,
        }
    }
}
