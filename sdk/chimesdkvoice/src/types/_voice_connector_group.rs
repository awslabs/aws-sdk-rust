// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The Amazon Chime SDK Voice Connector group configuration, including associated Voice Connectors. You can include Voice Connectors from different AWS Regions in a group. This creates a fault tolerant mechanism for fallback in case of availability events.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct VoiceConnectorGroup {
    /// <p>The ID of a Voice Connector group.</p>
    pub voice_connector_group_id: ::std::option::Option<::std::string::String>,
    /// <p>The name of a Voice Connector group.</p>
    pub name: ::std::option::Option<::std::string::String>,
    /// <p>The Voice Connectors to which you route inbound calls.</p>
    pub voice_connector_items: ::std::option::Option<::std::vec::Vec<crate::types::VoiceConnectorItem>>,
    /// <p>The Voice Connector group's creation time stamp, in ISO 8601 format.</p>
    pub created_timestamp: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>The Voice Connector group's creation time stamp, in ISO 8601 format.</p>
    pub updated_timestamp: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>The ARN of the Voice Connector group.</p>
    pub voice_connector_group_arn: ::std::option::Option<::std::string::String>,
}
impl VoiceConnectorGroup {
    /// <p>The ID of a Voice Connector group.</p>
    pub fn voice_connector_group_id(&self) -> ::std::option::Option<&str> {
        self.voice_connector_group_id.as_deref()
    }
    /// <p>The name of a Voice Connector group.</p>
    pub fn name(&self) -> ::std::option::Option<&str> {
        self.name.as_deref()
    }
    /// <p>The Voice Connectors to which you route inbound calls.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.voice_connector_items.is_none()`.
    pub fn voice_connector_items(&self) -> &[crate::types::VoiceConnectorItem] {
        self.voice_connector_items.as_deref().unwrap_or_default()
    }
    /// <p>The Voice Connector group's creation time stamp, in ISO 8601 format.</p>
    pub fn created_timestamp(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.created_timestamp.as_ref()
    }
    /// <p>The Voice Connector group's creation time stamp, in ISO 8601 format.</p>
    pub fn updated_timestamp(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.updated_timestamp.as_ref()
    }
    /// <p>The ARN of the Voice Connector group.</p>
    pub fn voice_connector_group_arn(&self) -> ::std::option::Option<&str> {
        self.voice_connector_group_arn.as_deref()
    }
}
impl VoiceConnectorGroup {
    /// Creates a new builder-style object to manufacture [`VoiceConnectorGroup`](crate::types::VoiceConnectorGroup).
    pub fn builder() -> crate::types::builders::VoiceConnectorGroupBuilder {
        crate::types::builders::VoiceConnectorGroupBuilder::default()
    }
}

/// A builder for [`VoiceConnectorGroup`](crate::types::VoiceConnectorGroup).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct VoiceConnectorGroupBuilder {
    pub(crate) voice_connector_group_id: ::std::option::Option<::std::string::String>,
    pub(crate) name: ::std::option::Option<::std::string::String>,
    pub(crate) voice_connector_items: ::std::option::Option<::std::vec::Vec<crate::types::VoiceConnectorItem>>,
    pub(crate) created_timestamp: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) updated_timestamp: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) voice_connector_group_arn: ::std::option::Option<::std::string::String>,
}
impl VoiceConnectorGroupBuilder {
    /// <p>The ID of a Voice Connector group.</p>
    pub fn voice_connector_group_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.voice_connector_group_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of a Voice Connector group.</p>
    pub fn set_voice_connector_group_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.voice_connector_group_id = input;
        self
    }
    /// <p>The ID of a Voice Connector group.</p>
    pub fn get_voice_connector_group_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.voice_connector_group_id
    }
    /// <p>The name of a Voice Connector group.</p>
    pub fn name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of a Voice Connector group.</p>
    pub fn set_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>The name of a Voice Connector group.</p>
    pub fn get_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.name
    }
    /// Appends an item to `voice_connector_items`.
    ///
    /// To override the contents of this collection use [`set_voice_connector_items`](Self::set_voice_connector_items).
    ///
    /// <p>The Voice Connectors to which you route inbound calls.</p>
    pub fn voice_connector_items(mut self, input: crate::types::VoiceConnectorItem) -> Self {
        let mut v = self.voice_connector_items.unwrap_or_default();
        v.push(input);
        self.voice_connector_items = ::std::option::Option::Some(v);
        self
    }
    /// <p>The Voice Connectors to which you route inbound calls.</p>
    pub fn set_voice_connector_items(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::VoiceConnectorItem>>) -> Self {
        self.voice_connector_items = input;
        self
    }
    /// <p>The Voice Connectors to which you route inbound calls.</p>
    pub fn get_voice_connector_items(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::VoiceConnectorItem>> {
        &self.voice_connector_items
    }
    /// <p>The Voice Connector group's creation time stamp, in ISO 8601 format.</p>
    pub fn created_timestamp(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.created_timestamp = ::std::option::Option::Some(input);
        self
    }
    /// <p>The Voice Connector group's creation time stamp, in ISO 8601 format.</p>
    pub fn set_created_timestamp(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.created_timestamp = input;
        self
    }
    /// <p>The Voice Connector group's creation time stamp, in ISO 8601 format.</p>
    pub fn get_created_timestamp(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.created_timestamp
    }
    /// <p>The Voice Connector group's creation time stamp, in ISO 8601 format.</p>
    pub fn updated_timestamp(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.updated_timestamp = ::std::option::Option::Some(input);
        self
    }
    /// <p>The Voice Connector group's creation time stamp, in ISO 8601 format.</p>
    pub fn set_updated_timestamp(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.updated_timestamp = input;
        self
    }
    /// <p>The Voice Connector group's creation time stamp, in ISO 8601 format.</p>
    pub fn get_updated_timestamp(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.updated_timestamp
    }
    /// <p>The ARN of the Voice Connector group.</p>
    pub fn voice_connector_group_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.voice_connector_group_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ARN of the Voice Connector group.</p>
    pub fn set_voice_connector_group_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.voice_connector_group_arn = input;
        self
    }
    /// <p>The ARN of the Voice Connector group.</p>
    pub fn get_voice_connector_group_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.voice_connector_group_arn
    }
    /// Consumes the builder and constructs a [`VoiceConnectorGroup`](crate::types::VoiceConnectorGroup).
    pub fn build(self) -> crate::types::VoiceConnectorGroup {
        crate::types::VoiceConnectorGroup {
            voice_connector_group_id: self.voice_connector_group_id,
            name: self.name,
            voice_connector_items: self.voice_connector_items,
            created_timestamp: self.created_timestamp,
            updated_timestamp: self.updated_timestamp,
            voice_connector_group_arn: self.voice_connector_group_arn,
        }
    }
}
