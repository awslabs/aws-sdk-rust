// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq)]
pub struct SipMediaApplicationEndpoint {
    #[allow(missing_docs)] // documentation missing in model
    #[doc(hidden)]
    pub lambda_arn: std::option::Option<std::string::String>,
}
impl SipMediaApplicationEndpoint {
    #[allow(missing_docs)] // documentation missing in model
    pub fn lambda_arn(&self) -> std::option::Option<&str> {
        self.lambda_arn.as_deref()
    }
}
impl std::fmt::Debug for SipMediaApplicationEndpoint {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        let mut formatter = f.debug_struct("SipMediaApplicationEndpoint");
        formatter.field("lambda_arn", &"*** Sensitive Data Redacted ***");
        formatter.finish()
    }
}
impl SipMediaApplicationEndpoint {
    /// Creates a new builder-style object to manufacture [`SipMediaApplicationEndpoint`](crate::types::SipMediaApplicationEndpoint).
    pub fn builder() -> crate::types::builders::SipMediaApplicationEndpointBuilder {
        crate::types::builders::SipMediaApplicationEndpointBuilder::default()
    }
}

/// A builder for [`SipMediaApplicationEndpoint`](crate::types::SipMediaApplicationEndpoint).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default)]
pub struct SipMediaApplicationEndpointBuilder {
    pub(crate) lambda_arn: std::option::Option<std::string::String>,
}
impl SipMediaApplicationEndpointBuilder {
    #[allow(missing_docs)] // documentation missing in model
    pub fn lambda_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.lambda_arn = Some(input.into());
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_lambda_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.lambda_arn = input;
        self
    }
    /// Consumes the builder and constructs a [`SipMediaApplicationEndpoint`](crate::types::SipMediaApplicationEndpoint).
    pub fn build(self) -> crate::types::SipMediaApplicationEndpoint {
        crate::types::SipMediaApplicationEndpoint {
            lambda_arn: self.lambda_arn,
        }
    }
}
impl std::fmt::Debug for SipMediaApplicationEndpointBuilder {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        let mut formatter = f.debug_struct("SipMediaApplicationEndpointBuilder");
        formatter.field("lambda_arn", &"*** Sensitive Data Redacted ***");
        formatter.finish()
    }
}
