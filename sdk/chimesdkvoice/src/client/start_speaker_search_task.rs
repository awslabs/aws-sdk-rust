// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`StartSpeakerSearchTask`](crate::operation::start_speaker_search_task::builders::StartSpeakerSearchTaskFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`voice_connector_id(impl Into<String>)`](crate::operation::start_speaker_search_task::builders::StartSpeakerSearchTaskFluentBuilder::voice_connector_id) / [`set_voice_connector_id(Option<String>)`](crate::operation::start_speaker_search_task::builders::StartSpeakerSearchTaskFluentBuilder::set_voice_connector_id):<br>required: **true**<br><p>The Voice Connector ID.</p><br>
    ///   - [`transaction_id(impl Into<String>)`](crate::operation::start_speaker_search_task::builders::StartSpeakerSearchTaskFluentBuilder::transaction_id) / [`set_transaction_id(Option<String>)`](crate::operation::start_speaker_search_task::builders::StartSpeakerSearchTaskFluentBuilder::set_transaction_id):<br>required: **true**<br><p>The transaction ID of the call being analyzed.</p><br>
    ///   - [`voice_profile_domain_id(impl Into<String>)`](crate::operation::start_speaker_search_task::builders::StartSpeakerSearchTaskFluentBuilder::voice_profile_domain_id) / [`set_voice_profile_domain_id(Option<String>)`](crate::operation::start_speaker_search_task::builders::StartSpeakerSearchTaskFluentBuilder::set_voice_profile_domain_id):<br>required: **true**<br><p>The ID of the voice profile domain that will store the voice profile.</p><br>
    ///   - [`client_request_token(impl Into<String>)`](crate::operation::start_speaker_search_task::builders::StartSpeakerSearchTaskFluentBuilder::client_request_token) / [`set_client_request_token(Option<String>)`](crate::operation::start_speaker_search_task::builders::StartSpeakerSearchTaskFluentBuilder::set_client_request_token):<br>required: **false**<br><p>The unique identifier for the client request. Use a different token for different speaker search tasks.</p><br>
    ///   - [`call_leg(CallLegType)`](crate::operation::start_speaker_search_task::builders::StartSpeakerSearchTaskFluentBuilder::call_leg) / [`set_call_leg(Option<CallLegType>)`](crate::operation::start_speaker_search_task::builders::StartSpeakerSearchTaskFluentBuilder::set_call_leg):<br>required: **false**<br><p>Specifies which call leg to stream for speaker search.</p><br>
    /// - On success, responds with [`StartSpeakerSearchTaskOutput`](crate::operation::start_speaker_search_task::StartSpeakerSearchTaskOutput) with field(s):
    ///   - [`speaker_search_task(Option<SpeakerSearchTask>)`](crate::operation::start_speaker_search_task::StartSpeakerSearchTaskOutput::speaker_search_task): <p>The details of the speaker search task.</p>
    /// - On failure, responds with [`SdkError<StartSpeakerSearchTaskError>`](crate::operation::start_speaker_search_task::StartSpeakerSearchTaskError)
    pub fn start_speaker_search_task(&self) -> crate::operation::start_speaker_search_task::builders::StartSpeakerSearchTaskFluentBuilder {
        crate::operation::start_speaker_search_task::builders::StartSpeakerSearchTaskFluentBuilder::new(self.handle.clone())
    }
}
