// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`PutVoiceConnectorTerminationCredentials`](crate::operation::put_voice_connector_termination_credentials::builders::PutVoiceConnectorTerminationCredentialsFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`voice_connector_id(impl Into<String>)`](crate::operation::put_voice_connector_termination_credentials::builders::PutVoiceConnectorTerminationCredentialsFluentBuilder::voice_connector_id) / [`set_voice_connector_id(Option<String>)`](crate::operation::put_voice_connector_termination_credentials::builders::PutVoiceConnectorTerminationCredentialsFluentBuilder::set_voice_connector_id):<br>required: **true**<br><p>The Voice Connector ID.</p><br>
    ///   - [`credentials(Credential)`](crate::operation::put_voice_connector_termination_credentials::builders::PutVoiceConnectorTerminationCredentialsFluentBuilder::credentials) / [`set_credentials(Option<Vec::<Credential>>)`](crate::operation::put_voice_connector_termination_credentials::builders::PutVoiceConnectorTerminationCredentialsFluentBuilder::set_credentials):<br>required: **false**<br><p>The termination credentials being updated.</p><br>
    /// - On success, responds with [`PutVoiceConnectorTerminationCredentialsOutput`](crate::operation::put_voice_connector_termination_credentials::PutVoiceConnectorTerminationCredentialsOutput)
    /// - On failure, responds with [`SdkError<PutVoiceConnectorTerminationCredentialsError>`](crate::operation::put_voice_connector_termination_credentials::PutVoiceConnectorTerminationCredentialsError)
    pub fn put_voice_connector_termination_credentials(
        &self,
    ) -> crate::operation::put_voice_connector_termination_credentials::builders::PutVoiceConnectorTerminationCredentialsFluentBuilder {
        crate::operation::put_voice_connector_termination_credentials::builders::PutVoiceConnectorTerminationCredentialsFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
