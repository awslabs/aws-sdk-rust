// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[doc(inline)]
pub use aws_smithy_client::Builder;
#[derive(Debug)]
pub(crate) struct Handle {
    pub(crate) client: aws_smithy_client::Client<
        aws_smithy_client::erase::DynConnector,
        aws_smithy_client::erase::DynMiddleware<aws_smithy_client::erase::DynConnector>,
    >,
    pub(crate) conf: crate::Config,
}

/// Client for Amazon Chime SDK Voice
///
/// Client for invoking operations on Amazon Chime SDK Voice. Each operation on Amazon Chime SDK Voice is a method on this
/// this struct. `.send()` MUST be invoked on the generated operations to dispatch the request to the service.
///
/// # Examples
/// **Constructing a client and invoking an operation**
/// ```rust,no_run
/// # async fn docs() {
///     // create a shared configuration. This can be used & shared between multiple service clients.
///     let shared_config = aws_config::load_from_env().await;
///     let client = aws_sdk_chimesdkvoice::Client::new(&shared_config);
///     // invoke an operation
///     /* let rsp = client
///         .<operation_name>().
///         .<param>("some value")
///         .send().await; */
/// # }
/// ```
/// **Constructing a client with custom configuration**
/// ```rust,no_run
/// use aws_config::retry::RetryConfig;
/// # async fn docs() {
/// let shared_config = aws_config::load_from_env().await;
/// let config = aws_sdk_chimesdkvoice::config::Builder::from(&shared_config)
///   .retry_config(RetryConfig::disabled())
///   .build();
/// let client = aws_sdk_chimesdkvoice::Client::from_conf(config);
/// # }
#[derive(std::fmt::Debug)]
pub struct Client {
    handle: std::sync::Arc<Handle>,
}

impl std::clone::Clone for Client {
    fn clone(&self) -> Self {
        Self {
            handle: self.handle.clone(),
        }
    }
}

impl
    From<
        aws_smithy_client::Client<
            aws_smithy_client::erase::DynConnector,
            aws_smithy_client::erase::DynMiddleware<aws_smithy_client::erase::DynConnector>,
        >,
    > for Client
{
    fn from(
        client: aws_smithy_client::Client<
            aws_smithy_client::erase::DynConnector,
            aws_smithy_client::erase::DynMiddleware<aws_smithy_client::erase::DynConnector>,
        >,
    ) -> Self {
        Self::with_config(client, crate::Config::builder().build())
    }
}

impl Client {
    /// Creates a client with the given service configuration.
    pub fn with_config(
        client: aws_smithy_client::Client<
            aws_smithy_client::erase::DynConnector,
            aws_smithy_client::erase::DynMiddleware<aws_smithy_client::erase::DynConnector>,
        >,
        conf: crate::Config,
    ) -> Self {
        Self {
            handle: std::sync::Arc::new(Handle { client, conf }),
        }
    }

    /// Returns the client's configuration.
    pub fn conf(&self) -> &crate::Config {
        &self.handle.conf
    }
}
impl Client {
    /// Constructs a fluent builder for the [`AssociatePhoneNumbersWithVoiceConnector`](crate::client::fluent_builders::AssociatePhoneNumbersWithVoiceConnector) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`voice_connector_id(impl Into<String>)`](crate::client::fluent_builders::AssociatePhoneNumbersWithVoiceConnector::voice_connector_id) / [`set_voice_connector_id(Option<String>)`](crate::client::fluent_builders::AssociatePhoneNumbersWithVoiceConnector::set_voice_connector_id): (undocumented)
    ///   - [`e164_phone_numbers(Vec<String>)`](crate::client::fluent_builders::AssociatePhoneNumbersWithVoiceConnector::e164_phone_numbers) / [`set_e164_phone_numbers(Option<Vec<String>>)`](crate::client::fluent_builders::AssociatePhoneNumbersWithVoiceConnector::set_e164_phone_numbers): (undocumented)
    ///   - [`force_associate(bool)`](crate::client::fluent_builders::AssociatePhoneNumbersWithVoiceConnector::force_associate) / [`set_force_associate(Option<bool>)`](crate::client::fluent_builders::AssociatePhoneNumbersWithVoiceConnector::set_force_associate): (undocumented)
    /// - On success, responds with [`AssociatePhoneNumbersWithVoiceConnectorOutput`](crate::output::AssociatePhoneNumbersWithVoiceConnectorOutput) with field(s):
    ///   - [`phone_number_errors(Option<Vec<PhoneNumberError>>)`](crate::output::AssociatePhoneNumbersWithVoiceConnectorOutput::phone_number_errors): (undocumented)
    /// - On failure, responds with [`SdkError<AssociatePhoneNumbersWithVoiceConnectorError>`](crate::error::AssociatePhoneNumbersWithVoiceConnectorError)
    pub fn associate_phone_numbers_with_voice_connector(
        &self,
    ) -> crate::client::fluent_builders::AssociatePhoneNumbersWithVoiceConnector {
        crate::client::fluent_builders::AssociatePhoneNumbersWithVoiceConnector::new(
            self.handle.clone(),
        )
    }
    /// Constructs a fluent builder for the [`AssociatePhoneNumbersWithVoiceConnectorGroup`](crate::client::fluent_builders::AssociatePhoneNumbersWithVoiceConnectorGroup) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`voice_connector_group_id(impl Into<String>)`](crate::client::fluent_builders::AssociatePhoneNumbersWithVoiceConnectorGroup::voice_connector_group_id) / [`set_voice_connector_group_id(Option<String>)`](crate::client::fluent_builders::AssociatePhoneNumbersWithVoiceConnectorGroup::set_voice_connector_group_id): (undocumented)
    ///   - [`e164_phone_numbers(Vec<String>)`](crate::client::fluent_builders::AssociatePhoneNumbersWithVoiceConnectorGroup::e164_phone_numbers) / [`set_e164_phone_numbers(Option<Vec<String>>)`](crate::client::fluent_builders::AssociatePhoneNumbersWithVoiceConnectorGroup::set_e164_phone_numbers): (undocumented)
    ///   - [`force_associate(bool)`](crate::client::fluent_builders::AssociatePhoneNumbersWithVoiceConnectorGroup::force_associate) / [`set_force_associate(Option<bool>)`](crate::client::fluent_builders::AssociatePhoneNumbersWithVoiceConnectorGroup::set_force_associate): (undocumented)
    /// - On success, responds with [`AssociatePhoneNumbersWithVoiceConnectorGroupOutput`](crate::output::AssociatePhoneNumbersWithVoiceConnectorGroupOutput) with field(s):
    ///   - [`phone_number_errors(Option<Vec<PhoneNumberError>>)`](crate::output::AssociatePhoneNumbersWithVoiceConnectorGroupOutput::phone_number_errors): (undocumented)
    /// - On failure, responds with [`SdkError<AssociatePhoneNumbersWithVoiceConnectorGroupError>`](crate::error::AssociatePhoneNumbersWithVoiceConnectorGroupError)
    pub fn associate_phone_numbers_with_voice_connector_group(
        &self,
    ) -> crate::client::fluent_builders::AssociatePhoneNumbersWithVoiceConnectorGroup {
        crate::client::fluent_builders::AssociatePhoneNumbersWithVoiceConnectorGroup::new(
            self.handle.clone(),
        )
    }
    /// Constructs a fluent builder for the [`BatchDeletePhoneNumber`](crate::client::fluent_builders::BatchDeletePhoneNumber) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`phone_number_ids(Vec<String>)`](crate::client::fluent_builders::BatchDeletePhoneNumber::phone_number_ids) / [`set_phone_number_ids(Option<Vec<String>>)`](crate::client::fluent_builders::BatchDeletePhoneNumber::set_phone_number_ids): (undocumented)
    /// - On success, responds with [`BatchDeletePhoneNumberOutput`](crate::output::BatchDeletePhoneNumberOutput) with field(s):
    ///   - [`phone_number_errors(Option<Vec<PhoneNumberError>>)`](crate::output::BatchDeletePhoneNumberOutput::phone_number_errors): (undocumented)
    /// - On failure, responds with [`SdkError<BatchDeletePhoneNumberError>`](crate::error::BatchDeletePhoneNumberError)
    pub fn batch_delete_phone_number(
        &self,
    ) -> crate::client::fluent_builders::BatchDeletePhoneNumber {
        crate::client::fluent_builders::BatchDeletePhoneNumber::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`BatchUpdatePhoneNumber`](crate::client::fluent_builders::BatchUpdatePhoneNumber) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`update_phone_number_request_items(Vec<UpdatePhoneNumberRequestItem>)`](crate::client::fluent_builders::BatchUpdatePhoneNumber::update_phone_number_request_items) / [`set_update_phone_number_request_items(Option<Vec<UpdatePhoneNumberRequestItem>>)`](crate::client::fluent_builders::BatchUpdatePhoneNumber::set_update_phone_number_request_items): (undocumented)
    /// - On success, responds with [`BatchUpdatePhoneNumberOutput`](crate::output::BatchUpdatePhoneNumberOutput) with field(s):
    ///   - [`phone_number_errors(Option<Vec<PhoneNumberError>>)`](crate::output::BatchUpdatePhoneNumberOutput::phone_number_errors): (undocumented)
    /// - On failure, responds with [`SdkError<BatchUpdatePhoneNumberError>`](crate::error::BatchUpdatePhoneNumberError)
    pub fn batch_update_phone_number(
        &self,
    ) -> crate::client::fluent_builders::BatchUpdatePhoneNumber {
        crate::client::fluent_builders::BatchUpdatePhoneNumber::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`CreatePhoneNumberOrder`](crate::client::fluent_builders::CreatePhoneNumberOrder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`product_type(PhoneNumberProductType)`](crate::client::fluent_builders::CreatePhoneNumberOrder::product_type) / [`set_product_type(Option<PhoneNumberProductType>)`](crate::client::fluent_builders::CreatePhoneNumberOrder::set_product_type): (undocumented)
    ///   - [`e164_phone_numbers(Vec<String>)`](crate::client::fluent_builders::CreatePhoneNumberOrder::e164_phone_numbers) / [`set_e164_phone_numbers(Option<Vec<String>>)`](crate::client::fluent_builders::CreatePhoneNumberOrder::set_e164_phone_numbers): (undocumented)
    /// - On success, responds with [`CreatePhoneNumberOrderOutput`](crate::output::CreatePhoneNumberOrderOutput) with field(s):
    ///   - [`phone_number_order(Option<PhoneNumberOrder>)`](crate::output::CreatePhoneNumberOrderOutput::phone_number_order): (undocumented)
    /// - On failure, responds with [`SdkError<CreatePhoneNumberOrderError>`](crate::error::CreatePhoneNumberOrderError)
    pub fn create_phone_number_order(
        &self,
    ) -> crate::client::fluent_builders::CreatePhoneNumberOrder {
        crate::client::fluent_builders::CreatePhoneNumberOrder::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`CreateProxySession`](crate::client::fluent_builders::CreateProxySession) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`voice_connector_id(impl Into<String>)`](crate::client::fluent_builders::CreateProxySession::voice_connector_id) / [`set_voice_connector_id(Option<String>)`](crate::client::fluent_builders::CreateProxySession::set_voice_connector_id): (undocumented)
    ///   - [`participant_phone_numbers(Vec<String>)`](crate::client::fluent_builders::CreateProxySession::participant_phone_numbers) / [`set_participant_phone_numbers(Option<Vec<String>>)`](crate::client::fluent_builders::CreateProxySession::set_participant_phone_numbers): (undocumented)
    ///   - [`name(impl Into<String>)`](crate::client::fluent_builders::CreateProxySession::name) / [`set_name(Option<String>)`](crate::client::fluent_builders::CreateProxySession::set_name): (undocumented)
    ///   - [`expiry_minutes(i32)`](crate::client::fluent_builders::CreateProxySession::expiry_minutes) / [`set_expiry_minutes(Option<i32>)`](crate::client::fluent_builders::CreateProxySession::set_expiry_minutes): (undocumented)
    ///   - [`capabilities(Vec<Capability>)`](crate::client::fluent_builders::CreateProxySession::capabilities) / [`set_capabilities(Option<Vec<Capability>>)`](crate::client::fluent_builders::CreateProxySession::set_capabilities): (undocumented)
    ///   - [`number_selection_behavior(NumberSelectionBehavior)`](crate::client::fluent_builders::CreateProxySession::number_selection_behavior) / [`set_number_selection_behavior(Option<NumberSelectionBehavior>)`](crate::client::fluent_builders::CreateProxySession::set_number_selection_behavior): (undocumented)
    ///   - [`geo_match_level(GeoMatchLevel)`](crate::client::fluent_builders::CreateProxySession::geo_match_level) / [`set_geo_match_level(Option<GeoMatchLevel>)`](crate::client::fluent_builders::CreateProxySession::set_geo_match_level): (undocumented)
    ///   - [`geo_match_params(GeoMatchParams)`](crate::client::fluent_builders::CreateProxySession::geo_match_params) / [`set_geo_match_params(Option<GeoMatchParams>)`](crate::client::fluent_builders::CreateProxySession::set_geo_match_params): (undocumented)
    /// - On success, responds with [`CreateProxySessionOutput`](crate::output::CreateProxySessionOutput) with field(s):
    ///   - [`proxy_session(Option<ProxySession>)`](crate::output::CreateProxySessionOutput::proxy_session): (undocumented)
    /// - On failure, responds with [`SdkError<CreateProxySessionError>`](crate::error::CreateProxySessionError)
    pub fn create_proxy_session(&self) -> crate::client::fluent_builders::CreateProxySession {
        crate::client::fluent_builders::CreateProxySession::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`CreateSipMediaApplication`](crate::client::fluent_builders::CreateSipMediaApplication) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`aws_region(impl Into<String>)`](crate::client::fluent_builders::CreateSipMediaApplication::aws_region) / [`set_aws_region(Option<String>)`](crate::client::fluent_builders::CreateSipMediaApplication::set_aws_region): (undocumented)
    ///   - [`name(impl Into<String>)`](crate::client::fluent_builders::CreateSipMediaApplication::name) / [`set_name(Option<String>)`](crate::client::fluent_builders::CreateSipMediaApplication::set_name): (undocumented)
    ///   - [`endpoints(Vec<SipMediaApplicationEndpoint>)`](crate::client::fluent_builders::CreateSipMediaApplication::endpoints) / [`set_endpoints(Option<Vec<SipMediaApplicationEndpoint>>)`](crate::client::fluent_builders::CreateSipMediaApplication::set_endpoints): (undocumented)
    /// - On success, responds with [`CreateSipMediaApplicationOutput`](crate::output::CreateSipMediaApplicationOutput) with field(s):
    ///   - [`sip_media_application(Option<SipMediaApplication>)`](crate::output::CreateSipMediaApplicationOutput::sip_media_application): (undocumented)
    /// - On failure, responds with [`SdkError<CreateSipMediaApplicationError>`](crate::error::CreateSipMediaApplicationError)
    pub fn create_sip_media_application(
        &self,
    ) -> crate::client::fluent_builders::CreateSipMediaApplication {
        crate::client::fluent_builders::CreateSipMediaApplication::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`CreateSipMediaApplicationCall`](crate::client::fluent_builders::CreateSipMediaApplicationCall) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`from_phone_number(impl Into<String>)`](crate::client::fluent_builders::CreateSipMediaApplicationCall::from_phone_number) / [`set_from_phone_number(Option<String>)`](crate::client::fluent_builders::CreateSipMediaApplicationCall::set_from_phone_number): (undocumented)
    ///   - [`to_phone_number(impl Into<String>)`](crate::client::fluent_builders::CreateSipMediaApplicationCall::to_phone_number) / [`set_to_phone_number(Option<String>)`](crate::client::fluent_builders::CreateSipMediaApplicationCall::set_to_phone_number): (undocumented)
    ///   - [`sip_media_application_id(impl Into<String>)`](crate::client::fluent_builders::CreateSipMediaApplicationCall::sip_media_application_id) / [`set_sip_media_application_id(Option<String>)`](crate::client::fluent_builders::CreateSipMediaApplicationCall::set_sip_media_application_id): (undocumented)
    ///   - [`sip_headers(HashMap<String, String>)`](crate::client::fluent_builders::CreateSipMediaApplicationCall::sip_headers) / [`set_sip_headers(Option<HashMap<String, String>>)`](crate::client::fluent_builders::CreateSipMediaApplicationCall::set_sip_headers): (undocumented)
    ///   - [`arguments_map(HashMap<String, String>)`](crate::client::fluent_builders::CreateSipMediaApplicationCall::arguments_map) / [`set_arguments_map(Option<HashMap<String, String>>)`](crate::client::fluent_builders::CreateSipMediaApplicationCall::set_arguments_map): (undocumented)
    /// - On success, responds with [`CreateSipMediaApplicationCallOutput`](crate::output::CreateSipMediaApplicationCallOutput) with field(s):
    ///   - [`sip_media_application_call(Option<SipMediaApplicationCall>)`](crate::output::CreateSipMediaApplicationCallOutput::sip_media_application_call): (undocumented)
    /// - On failure, responds with [`SdkError<CreateSipMediaApplicationCallError>`](crate::error::CreateSipMediaApplicationCallError)
    pub fn create_sip_media_application_call(
        &self,
    ) -> crate::client::fluent_builders::CreateSipMediaApplicationCall {
        crate::client::fluent_builders::CreateSipMediaApplicationCall::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`CreateSipRule`](crate::client::fluent_builders::CreateSipRule) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(impl Into<String>)`](crate::client::fluent_builders::CreateSipRule::name) / [`set_name(Option<String>)`](crate::client::fluent_builders::CreateSipRule::set_name): (undocumented)
    ///   - [`trigger_type(SipRuleTriggerType)`](crate::client::fluent_builders::CreateSipRule::trigger_type) / [`set_trigger_type(Option<SipRuleTriggerType>)`](crate::client::fluent_builders::CreateSipRule::set_trigger_type): (undocumented)
    ///   - [`trigger_value(impl Into<String>)`](crate::client::fluent_builders::CreateSipRule::trigger_value) / [`set_trigger_value(Option<String>)`](crate::client::fluent_builders::CreateSipRule::set_trigger_value): (undocumented)
    ///   - [`disabled(bool)`](crate::client::fluent_builders::CreateSipRule::disabled) / [`set_disabled(Option<bool>)`](crate::client::fluent_builders::CreateSipRule::set_disabled): (undocumented)
    ///   - [`target_applications(Vec<SipRuleTargetApplication>)`](crate::client::fluent_builders::CreateSipRule::target_applications) / [`set_target_applications(Option<Vec<SipRuleTargetApplication>>)`](crate::client::fluent_builders::CreateSipRule::set_target_applications): (undocumented)
    /// - On success, responds with [`CreateSipRuleOutput`](crate::output::CreateSipRuleOutput) with field(s):
    ///   - [`sip_rule(Option<SipRule>)`](crate::output::CreateSipRuleOutput::sip_rule): (undocumented)
    /// - On failure, responds with [`SdkError<CreateSipRuleError>`](crate::error::CreateSipRuleError)
    pub fn create_sip_rule(&self) -> crate::client::fluent_builders::CreateSipRule {
        crate::client::fluent_builders::CreateSipRule::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`CreateVoiceConnector`](crate::client::fluent_builders::CreateVoiceConnector) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(impl Into<String>)`](crate::client::fluent_builders::CreateVoiceConnector::name) / [`set_name(Option<String>)`](crate::client::fluent_builders::CreateVoiceConnector::set_name): (undocumented)
    ///   - [`aws_region(VoiceConnectorAwsRegion)`](crate::client::fluent_builders::CreateVoiceConnector::aws_region) / [`set_aws_region(Option<VoiceConnectorAwsRegion>)`](crate::client::fluent_builders::CreateVoiceConnector::set_aws_region): (undocumented)
    ///   - [`require_encryption(bool)`](crate::client::fluent_builders::CreateVoiceConnector::require_encryption) / [`set_require_encryption(Option<bool>)`](crate::client::fluent_builders::CreateVoiceConnector::set_require_encryption): (undocumented)
    /// - On success, responds with [`CreateVoiceConnectorOutput`](crate::output::CreateVoiceConnectorOutput) with field(s):
    ///   - [`voice_connector(Option<VoiceConnector>)`](crate::output::CreateVoiceConnectorOutput::voice_connector): (undocumented)
    /// - On failure, responds with [`SdkError<CreateVoiceConnectorError>`](crate::error::CreateVoiceConnectorError)
    pub fn create_voice_connector(&self) -> crate::client::fluent_builders::CreateVoiceConnector {
        crate::client::fluent_builders::CreateVoiceConnector::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`CreateVoiceConnectorGroup`](crate::client::fluent_builders::CreateVoiceConnectorGroup) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(impl Into<String>)`](crate::client::fluent_builders::CreateVoiceConnectorGroup::name) / [`set_name(Option<String>)`](crate::client::fluent_builders::CreateVoiceConnectorGroup::set_name): (undocumented)
    ///   - [`voice_connector_items(Vec<VoiceConnectorItem>)`](crate::client::fluent_builders::CreateVoiceConnectorGroup::voice_connector_items) / [`set_voice_connector_items(Option<Vec<VoiceConnectorItem>>)`](crate::client::fluent_builders::CreateVoiceConnectorGroup::set_voice_connector_items): (undocumented)
    /// - On success, responds with [`CreateVoiceConnectorGroupOutput`](crate::output::CreateVoiceConnectorGroupOutput) with field(s):
    ///   - [`voice_connector_group(Option<VoiceConnectorGroup>)`](crate::output::CreateVoiceConnectorGroupOutput::voice_connector_group): (undocumented)
    /// - On failure, responds with [`SdkError<CreateVoiceConnectorGroupError>`](crate::error::CreateVoiceConnectorGroupError)
    pub fn create_voice_connector_group(
        &self,
    ) -> crate::client::fluent_builders::CreateVoiceConnectorGroup {
        crate::client::fluent_builders::CreateVoiceConnectorGroup::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeletePhoneNumber`](crate::client::fluent_builders::DeletePhoneNumber) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`phone_number_id(impl Into<String>)`](crate::client::fluent_builders::DeletePhoneNumber::phone_number_id) / [`set_phone_number_id(Option<String>)`](crate::client::fluent_builders::DeletePhoneNumber::set_phone_number_id): (undocumented)
    /// - On success, responds with [`DeletePhoneNumberOutput`](crate::output::DeletePhoneNumberOutput)

    /// - On failure, responds with [`SdkError<DeletePhoneNumberError>`](crate::error::DeletePhoneNumberError)
    pub fn delete_phone_number(&self) -> crate::client::fluent_builders::DeletePhoneNumber {
        crate::client::fluent_builders::DeletePhoneNumber::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteProxySession`](crate::client::fluent_builders::DeleteProxySession) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`voice_connector_id(impl Into<String>)`](crate::client::fluent_builders::DeleteProxySession::voice_connector_id) / [`set_voice_connector_id(Option<String>)`](crate::client::fluent_builders::DeleteProxySession::set_voice_connector_id): (undocumented)
    ///   - [`proxy_session_id(impl Into<String>)`](crate::client::fluent_builders::DeleteProxySession::proxy_session_id) / [`set_proxy_session_id(Option<String>)`](crate::client::fluent_builders::DeleteProxySession::set_proxy_session_id): (undocumented)
    /// - On success, responds with [`DeleteProxySessionOutput`](crate::output::DeleteProxySessionOutput)

    /// - On failure, responds with [`SdkError<DeleteProxySessionError>`](crate::error::DeleteProxySessionError)
    pub fn delete_proxy_session(&self) -> crate::client::fluent_builders::DeleteProxySession {
        crate::client::fluent_builders::DeleteProxySession::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteSipMediaApplication`](crate::client::fluent_builders::DeleteSipMediaApplication) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`sip_media_application_id(impl Into<String>)`](crate::client::fluent_builders::DeleteSipMediaApplication::sip_media_application_id) / [`set_sip_media_application_id(Option<String>)`](crate::client::fluent_builders::DeleteSipMediaApplication::set_sip_media_application_id): (undocumented)
    /// - On success, responds with [`DeleteSipMediaApplicationOutput`](crate::output::DeleteSipMediaApplicationOutput)

    /// - On failure, responds with [`SdkError<DeleteSipMediaApplicationError>`](crate::error::DeleteSipMediaApplicationError)
    pub fn delete_sip_media_application(
        &self,
    ) -> crate::client::fluent_builders::DeleteSipMediaApplication {
        crate::client::fluent_builders::DeleteSipMediaApplication::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteSipRule`](crate::client::fluent_builders::DeleteSipRule) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`sip_rule_id(impl Into<String>)`](crate::client::fluent_builders::DeleteSipRule::sip_rule_id) / [`set_sip_rule_id(Option<String>)`](crate::client::fluent_builders::DeleteSipRule::set_sip_rule_id): (undocumented)
    /// - On success, responds with [`DeleteSipRuleOutput`](crate::output::DeleteSipRuleOutput)

    /// - On failure, responds with [`SdkError<DeleteSipRuleError>`](crate::error::DeleteSipRuleError)
    pub fn delete_sip_rule(&self) -> crate::client::fluent_builders::DeleteSipRule {
        crate::client::fluent_builders::DeleteSipRule::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteVoiceConnector`](crate::client::fluent_builders::DeleteVoiceConnector) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`voice_connector_id(impl Into<String>)`](crate::client::fluent_builders::DeleteVoiceConnector::voice_connector_id) / [`set_voice_connector_id(Option<String>)`](crate::client::fluent_builders::DeleteVoiceConnector::set_voice_connector_id): (undocumented)
    /// - On success, responds with [`DeleteVoiceConnectorOutput`](crate::output::DeleteVoiceConnectorOutput)

    /// - On failure, responds with [`SdkError<DeleteVoiceConnectorError>`](crate::error::DeleteVoiceConnectorError)
    pub fn delete_voice_connector(&self) -> crate::client::fluent_builders::DeleteVoiceConnector {
        crate::client::fluent_builders::DeleteVoiceConnector::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteVoiceConnectorEmergencyCallingConfiguration`](crate::client::fluent_builders::DeleteVoiceConnectorEmergencyCallingConfiguration) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`voice_connector_id(impl Into<String>)`](crate::client::fluent_builders::DeleteVoiceConnectorEmergencyCallingConfiguration::voice_connector_id) / [`set_voice_connector_id(Option<String>)`](crate::client::fluent_builders::DeleteVoiceConnectorEmergencyCallingConfiguration::set_voice_connector_id): (undocumented)
    /// - On success, responds with [`DeleteVoiceConnectorEmergencyCallingConfigurationOutput`](crate::output::DeleteVoiceConnectorEmergencyCallingConfigurationOutput)

    /// - On failure, responds with [`SdkError<DeleteVoiceConnectorEmergencyCallingConfigurationError>`](crate::error::DeleteVoiceConnectorEmergencyCallingConfigurationError)
    pub fn delete_voice_connector_emergency_calling_configuration(
        &self,
    ) -> crate::client::fluent_builders::DeleteVoiceConnectorEmergencyCallingConfiguration {
        crate::client::fluent_builders::DeleteVoiceConnectorEmergencyCallingConfiguration::new(
            self.handle.clone(),
        )
    }
    /// Constructs a fluent builder for the [`DeleteVoiceConnectorGroup`](crate::client::fluent_builders::DeleteVoiceConnectorGroup) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`voice_connector_group_id(impl Into<String>)`](crate::client::fluent_builders::DeleteVoiceConnectorGroup::voice_connector_group_id) / [`set_voice_connector_group_id(Option<String>)`](crate::client::fluent_builders::DeleteVoiceConnectorGroup::set_voice_connector_group_id): (undocumented)
    /// - On success, responds with [`DeleteVoiceConnectorGroupOutput`](crate::output::DeleteVoiceConnectorGroupOutput)

    /// - On failure, responds with [`SdkError<DeleteVoiceConnectorGroupError>`](crate::error::DeleteVoiceConnectorGroupError)
    pub fn delete_voice_connector_group(
        &self,
    ) -> crate::client::fluent_builders::DeleteVoiceConnectorGroup {
        crate::client::fluent_builders::DeleteVoiceConnectorGroup::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteVoiceConnectorOrigination`](crate::client::fluent_builders::DeleteVoiceConnectorOrigination) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`voice_connector_id(impl Into<String>)`](crate::client::fluent_builders::DeleteVoiceConnectorOrigination::voice_connector_id) / [`set_voice_connector_id(Option<String>)`](crate::client::fluent_builders::DeleteVoiceConnectorOrigination::set_voice_connector_id): (undocumented)
    /// - On success, responds with [`DeleteVoiceConnectorOriginationOutput`](crate::output::DeleteVoiceConnectorOriginationOutput)

    /// - On failure, responds with [`SdkError<DeleteVoiceConnectorOriginationError>`](crate::error::DeleteVoiceConnectorOriginationError)
    pub fn delete_voice_connector_origination(
        &self,
    ) -> crate::client::fluent_builders::DeleteVoiceConnectorOrigination {
        crate::client::fluent_builders::DeleteVoiceConnectorOrigination::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteVoiceConnectorProxy`](crate::client::fluent_builders::DeleteVoiceConnectorProxy) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`voice_connector_id(impl Into<String>)`](crate::client::fluent_builders::DeleteVoiceConnectorProxy::voice_connector_id) / [`set_voice_connector_id(Option<String>)`](crate::client::fluent_builders::DeleteVoiceConnectorProxy::set_voice_connector_id): (undocumented)
    /// - On success, responds with [`DeleteVoiceConnectorProxyOutput`](crate::output::DeleteVoiceConnectorProxyOutput)

    /// - On failure, responds with [`SdkError<DeleteVoiceConnectorProxyError>`](crate::error::DeleteVoiceConnectorProxyError)
    pub fn delete_voice_connector_proxy(
        &self,
    ) -> crate::client::fluent_builders::DeleteVoiceConnectorProxy {
        crate::client::fluent_builders::DeleteVoiceConnectorProxy::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteVoiceConnectorStreamingConfiguration`](crate::client::fluent_builders::DeleteVoiceConnectorStreamingConfiguration) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`voice_connector_id(impl Into<String>)`](crate::client::fluent_builders::DeleteVoiceConnectorStreamingConfiguration::voice_connector_id) / [`set_voice_connector_id(Option<String>)`](crate::client::fluent_builders::DeleteVoiceConnectorStreamingConfiguration::set_voice_connector_id): (undocumented)
    /// - On success, responds with [`DeleteVoiceConnectorStreamingConfigurationOutput`](crate::output::DeleteVoiceConnectorStreamingConfigurationOutput)

    /// - On failure, responds with [`SdkError<DeleteVoiceConnectorStreamingConfigurationError>`](crate::error::DeleteVoiceConnectorStreamingConfigurationError)
    pub fn delete_voice_connector_streaming_configuration(
        &self,
    ) -> crate::client::fluent_builders::DeleteVoiceConnectorStreamingConfiguration {
        crate::client::fluent_builders::DeleteVoiceConnectorStreamingConfiguration::new(
            self.handle.clone(),
        )
    }
    /// Constructs a fluent builder for the [`DeleteVoiceConnectorTermination`](crate::client::fluent_builders::DeleteVoiceConnectorTermination) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`voice_connector_id(impl Into<String>)`](crate::client::fluent_builders::DeleteVoiceConnectorTermination::voice_connector_id) / [`set_voice_connector_id(Option<String>)`](crate::client::fluent_builders::DeleteVoiceConnectorTermination::set_voice_connector_id): (undocumented)
    /// - On success, responds with [`DeleteVoiceConnectorTerminationOutput`](crate::output::DeleteVoiceConnectorTerminationOutput)

    /// - On failure, responds with [`SdkError<DeleteVoiceConnectorTerminationError>`](crate::error::DeleteVoiceConnectorTerminationError)
    pub fn delete_voice_connector_termination(
        &self,
    ) -> crate::client::fluent_builders::DeleteVoiceConnectorTermination {
        crate::client::fluent_builders::DeleteVoiceConnectorTermination::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteVoiceConnectorTerminationCredentials`](crate::client::fluent_builders::DeleteVoiceConnectorTerminationCredentials) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`voice_connector_id(impl Into<String>)`](crate::client::fluent_builders::DeleteVoiceConnectorTerminationCredentials::voice_connector_id) / [`set_voice_connector_id(Option<String>)`](crate::client::fluent_builders::DeleteVoiceConnectorTerminationCredentials::set_voice_connector_id): (undocumented)
    ///   - [`usernames(Vec<String>)`](crate::client::fluent_builders::DeleteVoiceConnectorTerminationCredentials::usernames) / [`set_usernames(Option<Vec<String>>)`](crate::client::fluent_builders::DeleteVoiceConnectorTerminationCredentials::set_usernames): (undocumented)
    /// - On success, responds with [`DeleteVoiceConnectorTerminationCredentialsOutput`](crate::output::DeleteVoiceConnectorTerminationCredentialsOutput)

    /// - On failure, responds with [`SdkError<DeleteVoiceConnectorTerminationCredentialsError>`](crate::error::DeleteVoiceConnectorTerminationCredentialsError)
    pub fn delete_voice_connector_termination_credentials(
        &self,
    ) -> crate::client::fluent_builders::DeleteVoiceConnectorTerminationCredentials {
        crate::client::fluent_builders::DeleteVoiceConnectorTerminationCredentials::new(
            self.handle.clone(),
        )
    }
    /// Constructs a fluent builder for the [`DisassociatePhoneNumbersFromVoiceConnector`](crate::client::fluent_builders::DisassociatePhoneNumbersFromVoiceConnector) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`voice_connector_id(impl Into<String>)`](crate::client::fluent_builders::DisassociatePhoneNumbersFromVoiceConnector::voice_connector_id) / [`set_voice_connector_id(Option<String>)`](crate::client::fluent_builders::DisassociatePhoneNumbersFromVoiceConnector::set_voice_connector_id): (undocumented)
    ///   - [`e164_phone_numbers(Vec<String>)`](crate::client::fluent_builders::DisassociatePhoneNumbersFromVoiceConnector::e164_phone_numbers) / [`set_e164_phone_numbers(Option<Vec<String>>)`](crate::client::fluent_builders::DisassociatePhoneNumbersFromVoiceConnector::set_e164_phone_numbers): (undocumented)
    /// - On success, responds with [`DisassociatePhoneNumbersFromVoiceConnectorOutput`](crate::output::DisassociatePhoneNumbersFromVoiceConnectorOutput) with field(s):
    ///   - [`phone_number_errors(Option<Vec<PhoneNumberError>>)`](crate::output::DisassociatePhoneNumbersFromVoiceConnectorOutput::phone_number_errors): (undocumented)
    /// - On failure, responds with [`SdkError<DisassociatePhoneNumbersFromVoiceConnectorError>`](crate::error::DisassociatePhoneNumbersFromVoiceConnectorError)
    pub fn disassociate_phone_numbers_from_voice_connector(
        &self,
    ) -> crate::client::fluent_builders::DisassociatePhoneNumbersFromVoiceConnector {
        crate::client::fluent_builders::DisassociatePhoneNumbersFromVoiceConnector::new(
            self.handle.clone(),
        )
    }
    /// Constructs a fluent builder for the [`DisassociatePhoneNumbersFromVoiceConnectorGroup`](crate::client::fluent_builders::DisassociatePhoneNumbersFromVoiceConnectorGroup) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`voice_connector_group_id(impl Into<String>)`](crate::client::fluent_builders::DisassociatePhoneNumbersFromVoiceConnectorGroup::voice_connector_group_id) / [`set_voice_connector_group_id(Option<String>)`](crate::client::fluent_builders::DisassociatePhoneNumbersFromVoiceConnectorGroup::set_voice_connector_group_id): (undocumented)
    ///   - [`e164_phone_numbers(Vec<String>)`](crate::client::fluent_builders::DisassociatePhoneNumbersFromVoiceConnectorGroup::e164_phone_numbers) / [`set_e164_phone_numbers(Option<Vec<String>>)`](crate::client::fluent_builders::DisassociatePhoneNumbersFromVoiceConnectorGroup::set_e164_phone_numbers): (undocumented)
    /// - On success, responds with [`DisassociatePhoneNumbersFromVoiceConnectorGroupOutput`](crate::output::DisassociatePhoneNumbersFromVoiceConnectorGroupOutput) with field(s):
    ///   - [`phone_number_errors(Option<Vec<PhoneNumberError>>)`](crate::output::DisassociatePhoneNumbersFromVoiceConnectorGroupOutput::phone_number_errors): (undocumented)
    /// - On failure, responds with [`SdkError<DisassociatePhoneNumbersFromVoiceConnectorGroupError>`](crate::error::DisassociatePhoneNumbersFromVoiceConnectorGroupError)
    pub fn disassociate_phone_numbers_from_voice_connector_group(
        &self,
    ) -> crate::client::fluent_builders::DisassociatePhoneNumbersFromVoiceConnectorGroup {
        crate::client::fluent_builders::DisassociatePhoneNumbersFromVoiceConnectorGroup::new(
            self.handle.clone(),
        )
    }
    /// Constructs a fluent builder for the [`GetGlobalSettings`](crate::client::fluent_builders::GetGlobalSettings) operation.
    ///
    /// - The fluent builder takes no input, just [`send`](crate::client::fluent_builders::GetGlobalSettings::send) it.

    /// - On success, responds with [`GetGlobalSettingsOutput`](crate::output::GetGlobalSettingsOutput) with field(s):
    ///   - [`voice_connector(Option<VoiceConnectorSettings>)`](crate::output::GetGlobalSettingsOutput::voice_connector): (undocumented)
    /// - On failure, responds with [`SdkError<GetGlobalSettingsError>`](crate::error::GetGlobalSettingsError)
    pub fn get_global_settings(&self) -> crate::client::fluent_builders::GetGlobalSettings {
        crate::client::fluent_builders::GetGlobalSettings::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetPhoneNumber`](crate::client::fluent_builders::GetPhoneNumber) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`phone_number_id(impl Into<String>)`](crate::client::fluent_builders::GetPhoneNumber::phone_number_id) / [`set_phone_number_id(Option<String>)`](crate::client::fluent_builders::GetPhoneNumber::set_phone_number_id): (undocumented)
    /// - On success, responds with [`GetPhoneNumberOutput`](crate::output::GetPhoneNumberOutput) with field(s):
    ///   - [`phone_number(Option<PhoneNumber>)`](crate::output::GetPhoneNumberOutput::phone_number): (undocumented)
    /// - On failure, responds with [`SdkError<GetPhoneNumberError>`](crate::error::GetPhoneNumberError)
    pub fn get_phone_number(&self) -> crate::client::fluent_builders::GetPhoneNumber {
        crate::client::fluent_builders::GetPhoneNumber::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetPhoneNumberOrder`](crate::client::fluent_builders::GetPhoneNumberOrder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`phone_number_order_id(impl Into<String>)`](crate::client::fluent_builders::GetPhoneNumberOrder::phone_number_order_id) / [`set_phone_number_order_id(Option<String>)`](crate::client::fluent_builders::GetPhoneNumberOrder::set_phone_number_order_id): (undocumented)
    /// - On success, responds with [`GetPhoneNumberOrderOutput`](crate::output::GetPhoneNumberOrderOutput) with field(s):
    ///   - [`phone_number_order(Option<PhoneNumberOrder>)`](crate::output::GetPhoneNumberOrderOutput::phone_number_order): (undocumented)
    /// - On failure, responds with [`SdkError<GetPhoneNumberOrderError>`](crate::error::GetPhoneNumberOrderError)
    pub fn get_phone_number_order(&self) -> crate::client::fluent_builders::GetPhoneNumberOrder {
        crate::client::fluent_builders::GetPhoneNumberOrder::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetPhoneNumberSettings`](crate::client::fluent_builders::GetPhoneNumberSettings) operation.
    ///
    /// - The fluent builder takes no input, just [`send`](crate::client::fluent_builders::GetPhoneNumberSettings::send) it.

    /// - On success, responds with [`GetPhoneNumberSettingsOutput`](crate::output::GetPhoneNumberSettingsOutput) with field(s):
    ///   - [`calling_name(Option<String>)`](crate::output::GetPhoneNumberSettingsOutput::calling_name): (undocumented)
    ///   - [`calling_name_updated_timestamp(Option<DateTime>)`](crate::output::GetPhoneNumberSettingsOutput::calling_name_updated_timestamp): (undocumented)
    /// - On failure, responds with [`SdkError<GetPhoneNumberSettingsError>`](crate::error::GetPhoneNumberSettingsError)
    pub fn get_phone_number_settings(
        &self,
    ) -> crate::client::fluent_builders::GetPhoneNumberSettings {
        crate::client::fluent_builders::GetPhoneNumberSettings::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetProxySession`](crate::client::fluent_builders::GetProxySession) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`voice_connector_id(impl Into<String>)`](crate::client::fluent_builders::GetProxySession::voice_connector_id) / [`set_voice_connector_id(Option<String>)`](crate::client::fluent_builders::GetProxySession::set_voice_connector_id): (undocumented)
    ///   - [`proxy_session_id(impl Into<String>)`](crate::client::fluent_builders::GetProxySession::proxy_session_id) / [`set_proxy_session_id(Option<String>)`](crate::client::fluent_builders::GetProxySession::set_proxy_session_id): (undocumented)
    /// - On success, responds with [`GetProxySessionOutput`](crate::output::GetProxySessionOutput) with field(s):
    ///   - [`proxy_session(Option<ProxySession>)`](crate::output::GetProxySessionOutput::proxy_session): (undocumented)
    /// - On failure, responds with [`SdkError<GetProxySessionError>`](crate::error::GetProxySessionError)
    pub fn get_proxy_session(&self) -> crate::client::fluent_builders::GetProxySession {
        crate::client::fluent_builders::GetProxySession::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetSipMediaApplication`](crate::client::fluent_builders::GetSipMediaApplication) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`sip_media_application_id(impl Into<String>)`](crate::client::fluent_builders::GetSipMediaApplication::sip_media_application_id) / [`set_sip_media_application_id(Option<String>)`](crate::client::fluent_builders::GetSipMediaApplication::set_sip_media_application_id): (undocumented)
    /// - On success, responds with [`GetSipMediaApplicationOutput`](crate::output::GetSipMediaApplicationOutput) with field(s):
    ///   - [`sip_media_application(Option<SipMediaApplication>)`](crate::output::GetSipMediaApplicationOutput::sip_media_application): (undocumented)
    /// - On failure, responds with [`SdkError<GetSipMediaApplicationError>`](crate::error::GetSipMediaApplicationError)
    pub fn get_sip_media_application(
        &self,
    ) -> crate::client::fluent_builders::GetSipMediaApplication {
        crate::client::fluent_builders::GetSipMediaApplication::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetSipMediaApplicationAlexaSkillConfiguration`](crate::client::fluent_builders::GetSipMediaApplicationAlexaSkillConfiguration) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`sip_media_application_id(impl Into<String>)`](crate::client::fluent_builders::GetSipMediaApplicationAlexaSkillConfiguration::sip_media_application_id) / [`set_sip_media_application_id(Option<String>)`](crate::client::fluent_builders::GetSipMediaApplicationAlexaSkillConfiguration::set_sip_media_application_id): (undocumented)
    /// - On success, responds with [`GetSipMediaApplicationAlexaSkillConfigurationOutput`](crate::output::GetSipMediaApplicationAlexaSkillConfigurationOutput) with field(s):
    ///   - [`sip_media_application_alexa_skill_configuration(Option<SipMediaApplicationAlexaSkillConfiguration>)`](crate::output::GetSipMediaApplicationAlexaSkillConfigurationOutput::sip_media_application_alexa_skill_configuration): (undocumented)
    /// - On failure, responds with [`SdkError<GetSipMediaApplicationAlexaSkillConfigurationError>`](crate::error::GetSipMediaApplicationAlexaSkillConfigurationError)
    pub fn get_sip_media_application_alexa_skill_configuration(
        &self,
    ) -> crate::client::fluent_builders::GetSipMediaApplicationAlexaSkillConfiguration {
        crate::client::fluent_builders::GetSipMediaApplicationAlexaSkillConfiguration::new(
            self.handle.clone(),
        )
    }
    /// Constructs a fluent builder for the [`GetSipMediaApplicationLoggingConfiguration`](crate::client::fluent_builders::GetSipMediaApplicationLoggingConfiguration) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`sip_media_application_id(impl Into<String>)`](crate::client::fluent_builders::GetSipMediaApplicationLoggingConfiguration::sip_media_application_id) / [`set_sip_media_application_id(Option<String>)`](crate::client::fluent_builders::GetSipMediaApplicationLoggingConfiguration::set_sip_media_application_id): (undocumented)
    /// - On success, responds with [`GetSipMediaApplicationLoggingConfigurationOutput`](crate::output::GetSipMediaApplicationLoggingConfigurationOutput) with field(s):
    ///   - [`sip_media_application_logging_configuration(Option<SipMediaApplicationLoggingConfiguration>)`](crate::output::GetSipMediaApplicationLoggingConfigurationOutput::sip_media_application_logging_configuration): (undocumented)
    /// - On failure, responds with [`SdkError<GetSipMediaApplicationLoggingConfigurationError>`](crate::error::GetSipMediaApplicationLoggingConfigurationError)
    pub fn get_sip_media_application_logging_configuration(
        &self,
    ) -> crate::client::fluent_builders::GetSipMediaApplicationLoggingConfiguration {
        crate::client::fluent_builders::GetSipMediaApplicationLoggingConfiguration::new(
            self.handle.clone(),
        )
    }
    /// Constructs a fluent builder for the [`GetSipRule`](crate::client::fluent_builders::GetSipRule) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`sip_rule_id(impl Into<String>)`](crate::client::fluent_builders::GetSipRule::sip_rule_id) / [`set_sip_rule_id(Option<String>)`](crate::client::fluent_builders::GetSipRule::set_sip_rule_id): (undocumented)
    /// - On success, responds with [`GetSipRuleOutput`](crate::output::GetSipRuleOutput) with field(s):
    ///   - [`sip_rule(Option<SipRule>)`](crate::output::GetSipRuleOutput::sip_rule): (undocumented)
    /// - On failure, responds with [`SdkError<GetSipRuleError>`](crate::error::GetSipRuleError)
    pub fn get_sip_rule(&self) -> crate::client::fluent_builders::GetSipRule {
        crate::client::fluent_builders::GetSipRule::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetVoiceConnector`](crate::client::fluent_builders::GetVoiceConnector) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`voice_connector_id(impl Into<String>)`](crate::client::fluent_builders::GetVoiceConnector::voice_connector_id) / [`set_voice_connector_id(Option<String>)`](crate::client::fluent_builders::GetVoiceConnector::set_voice_connector_id): (undocumented)
    /// - On success, responds with [`GetVoiceConnectorOutput`](crate::output::GetVoiceConnectorOutput) with field(s):
    ///   - [`voice_connector(Option<VoiceConnector>)`](crate::output::GetVoiceConnectorOutput::voice_connector): (undocumented)
    /// - On failure, responds with [`SdkError<GetVoiceConnectorError>`](crate::error::GetVoiceConnectorError)
    pub fn get_voice_connector(&self) -> crate::client::fluent_builders::GetVoiceConnector {
        crate::client::fluent_builders::GetVoiceConnector::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetVoiceConnectorEmergencyCallingConfiguration`](crate::client::fluent_builders::GetVoiceConnectorEmergencyCallingConfiguration) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`voice_connector_id(impl Into<String>)`](crate::client::fluent_builders::GetVoiceConnectorEmergencyCallingConfiguration::voice_connector_id) / [`set_voice_connector_id(Option<String>)`](crate::client::fluent_builders::GetVoiceConnectorEmergencyCallingConfiguration::set_voice_connector_id): (undocumented)
    /// - On success, responds with [`GetVoiceConnectorEmergencyCallingConfigurationOutput`](crate::output::GetVoiceConnectorEmergencyCallingConfigurationOutput) with field(s):
    ///   - [`emergency_calling_configuration(Option<EmergencyCallingConfiguration>)`](crate::output::GetVoiceConnectorEmergencyCallingConfigurationOutput::emergency_calling_configuration): (undocumented)
    /// - On failure, responds with [`SdkError<GetVoiceConnectorEmergencyCallingConfigurationError>`](crate::error::GetVoiceConnectorEmergencyCallingConfigurationError)
    pub fn get_voice_connector_emergency_calling_configuration(
        &self,
    ) -> crate::client::fluent_builders::GetVoiceConnectorEmergencyCallingConfiguration {
        crate::client::fluent_builders::GetVoiceConnectorEmergencyCallingConfiguration::new(
            self.handle.clone(),
        )
    }
    /// Constructs a fluent builder for the [`GetVoiceConnectorGroup`](crate::client::fluent_builders::GetVoiceConnectorGroup) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`voice_connector_group_id(impl Into<String>)`](crate::client::fluent_builders::GetVoiceConnectorGroup::voice_connector_group_id) / [`set_voice_connector_group_id(Option<String>)`](crate::client::fluent_builders::GetVoiceConnectorGroup::set_voice_connector_group_id): (undocumented)
    /// - On success, responds with [`GetVoiceConnectorGroupOutput`](crate::output::GetVoiceConnectorGroupOutput) with field(s):
    ///   - [`voice_connector_group(Option<VoiceConnectorGroup>)`](crate::output::GetVoiceConnectorGroupOutput::voice_connector_group): (undocumented)
    /// - On failure, responds with [`SdkError<GetVoiceConnectorGroupError>`](crate::error::GetVoiceConnectorGroupError)
    pub fn get_voice_connector_group(
        &self,
    ) -> crate::client::fluent_builders::GetVoiceConnectorGroup {
        crate::client::fluent_builders::GetVoiceConnectorGroup::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetVoiceConnectorLoggingConfiguration`](crate::client::fluent_builders::GetVoiceConnectorLoggingConfiguration) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`voice_connector_id(impl Into<String>)`](crate::client::fluent_builders::GetVoiceConnectorLoggingConfiguration::voice_connector_id) / [`set_voice_connector_id(Option<String>)`](crate::client::fluent_builders::GetVoiceConnectorLoggingConfiguration::set_voice_connector_id): (undocumented)
    /// - On success, responds with [`GetVoiceConnectorLoggingConfigurationOutput`](crate::output::GetVoiceConnectorLoggingConfigurationOutput) with field(s):
    ///   - [`logging_configuration(Option<LoggingConfiguration>)`](crate::output::GetVoiceConnectorLoggingConfigurationOutput::logging_configuration): (undocumented)
    /// - On failure, responds with [`SdkError<GetVoiceConnectorLoggingConfigurationError>`](crate::error::GetVoiceConnectorLoggingConfigurationError)
    pub fn get_voice_connector_logging_configuration(
        &self,
    ) -> crate::client::fluent_builders::GetVoiceConnectorLoggingConfiguration {
        crate::client::fluent_builders::GetVoiceConnectorLoggingConfiguration::new(
            self.handle.clone(),
        )
    }
    /// Constructs a fluent builder for the [`GetVoiceConnectorOrigination`](crate::client::fluent_builders::GetVoiceConnectorOrigination) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`voice_connector_id(impl Into<String>)`](crate::client::fluent_builders::GetVoiceConnectorOrigination::voice_connector_id) / [`set_voice_connector_id(Option<String>)`](crate::client::fluent_builders::GetVoiceConnectorOrigination::set_voice_connector_id): (undocumented)
    /// - On success, responds with [`GetVoiceConnectorOriginationOutput`](crate::output::GetVoiceConnectorOriginationOutput) with field(s):
    ///   - [`origination(Option<Origination>)`](crate::output::GetVoiceConnectorOriginationOutput::origination): (undocumented)
    /// - On failure, responds with [`SdkError<GetVoiceConnectorOriginationError>`](crate::error::GetVoiceConnectorOriginationError)
    pub fn get_voice_connector_origination(
        &self,
    ) -> crate::client::fluent_builders::GetVoiceConnectorOrigination {
        crate::client::fluent_builders::GetVoiceConnectorOrigination::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetVoiceConnectorProxy`](crate::client::fluent_builders::GetVoiceConnectorProxy) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`voice_connector_id(impl Into<String>)`](crate::client::fluent_builders::GetVoiceConnectorProxy::voice_connector_id) / [`set_voice_connector_id(Option<String>)`](crate::client::fluent_builders::GetVoiceConnectorProxy::set_voice_connector_id): (undocumented)
    /// - On success, responds with [`GetVoiceConnectorProxyOutput`](crate::output::GetVoiceConnectorProxyOutput) with field(s):
    ///   - [`proxy(Option<Proxy>)`](crate::output::GetVoiceConnectorProxyOutput::proxy): (undocumented)
    /// - On failure, responds with [`SdkError<GetVoiceConnectorProxyError>`](crate::error::GetVoiceConnectorProxyError)
    pub fn get_voice_connector_proxy(
        &self,
    ) -> crate::client::fluent_builders::GetVoiceConnectorProxy {
        crate::client::fluent_builders::GetVoiceConnectorProxy::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetVoiceConnectorStreamingConfiguration`](crate::client::fluent_builders::GetVoiceConnectorStreamingConfiguration) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`voice_connector_id(impl Into<String>)`](crate::client::fluent_builders::GetVoiceConnectorStreamingConfiguration::voice_connector_id) / [`set_voice_connector_id(Option<String>)`](crate::client::fluent_builders::GetVoiceConnectorStreamingConfiguration::set_voice_connector_id): (undocumented)
    /// - On success, responds with [`GetVoiceConnectorStreamingConfigurationOutput`](crate::output::GetVoiceConnectorStreamingConfigurationOutput) with field(s):
    ///   - [`streaming_configuration(Option<StreamingConfiguration>)`](crate::output::GetVoiceConnectorStreamingConfigurationOutput::streaming_configuration): (undocumented)
    /// - On failure, responds with [`SdkError<GetVoiceConnectorStreamingConfigurationError>`](crate::error::GetVoiceConnectorStreamingConfigurationError)
    pub fn get_voice_connector_streaming_configuration(
        &self,
    ) -> crate::client::fluent_builders::GetVoiceConnectorStreamingConfiguration {
        crate::client::fluent_builders::GetVoiceConnectorStreamingConfiguration::new(
            self.handle.clone(),
        )
    }
    /// Constructs a fluent builder for the [`GetVoiceConnectorTermination`](crate::client::fluent_builders::GetVoiceConnectorTermination) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`voice_connector_id(impl Into<String>)`](crate::client::fluent_builders::GetVoiceConnectorTermination::voice_connector_id) / [`set_voice_connector_id(Option<String>)`](crate::client::fluent_builders::GetVoiceConnectorTermination::set_voice_connector_id): (undocumented)
    /// - On success, responds with [`GetVoiceConnectorTerminationOutput`](crate::output::GetVoiceConnectorTerminationOutput) with field(s):
    ///   - [`termination(Option<Termination>)`](crate::output::GetVoiceConnectorTerminationOutput::termination): (undocumented)
    /// - On failure, responds with [`SdkError<GetVoiceConnectorTerminationError>`](crate::error::GetVoiceConnectorTerminationError)
    pub fn get_voice_connector_termination(
        &self,
    ) -> crate::client::fluent_builders::GetVoiceConnectorTermination {
        crate::client::fluent_builders::GetVoiceConnectorTermination::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetVoiceConnectorTerminationHealth`](crate::client::fluent_builders::GetVoiceConnectorTerminationHealth) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`voice_connector_id(impl Into<String>)`](crate::client::fluent_builders::GetVoiceConnectorTerminationHealth::voice_connector_id) / [`set_voice_connector_id(Option<String>)`](crate::client::fluent_builders::GetVoiceConnectorTerminationHealth::set_voice_connector_id): (undocumented)
    /// - On success, responds with [`GetVoiceConnectorTerminationHealthOutput`](crate::output::GetVoiceConnectorTerminationHealthOutput) with field(s):
    ///   - [`termination_health(Option<TerminationHealth>)`](crate::output::GetVoiceConnectorTerminationHealthOutput::termination_health): (undocumented)
    /// - On failure, responds with [`SdkError<GetVoiceConnectorTerminationHealthError>`](crate::error::GetVoiceConnectorTerminationHealthError)
    pub fn get_voice_connector_termination_health(
        &self,
    ) -> crate::client::fluent_builders::GetVoiceConnectorTerminationHealth {
        crate::client::fluent_builders::GetVoiceConnectorTerminationHealth::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListAvailableVoiceConnectorRegions`](crate::client::fluent_builders::ListAvailableVoiceConnectorRegions) operation.
    ///
    /// - The fluent builder takes no input, just [`send`](crate::client::fluent_builders::ListAvailableVoiceConnectorRegions::send) it.

    /// - On success, responds with [`ListAvailableVoiceConnectorRegionsOutput`](crate::output::ListAvailableVoiceConnectorRegionsOutput) with field(s):
    ///   - [`voice_connector_regions(Option<Vec<VoiceConnectorAwsRegion>>)`](crate::output::ListAvailableVoiceConnectorRegionsOutput::voice_connector_regions): (undocumented)
    /// - On failure, responds with [`SdkError<ListAvailableVoiceConnectorRegionsError>`](crate::error::ListAvailableVoiceConnectorRegionsError)
    pub fn list_available_voice_connector_regions(
        &self,
    ) -> crate::client::fluent_builders::ListAvailableVoiceConnectorRegions {
        crate::client::fluent_builders::ListAvailableVoiceConnectorRegions::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListPhoneNumberOrders`](crate::client::fluent_builders::ListPhoneNumberOrders) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListPhoneNumberOrders::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListPhoneNumberOrders::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListPhoneNumberOrders::set_next_token): (undocumented)
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListPhoneNumberOrders::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListPhoneNumberOrders::set_max_results): (undocumented)
    /// - On success, responds with [`ListPhoneNumberOrdersOutput`](crate::output::ListPhoneNumberOrdersOutput) with field(s):
    ///   - [`phone_number_orders(Option<Vec<PhoneNumberOrder>>)`](crate::output::ListPhoneNumberOrdersOutput::phone_number_orders): (undocumented)
    ///   - [`next_token(Option<String>)`](crate::output::ListPhoneNumberOrdersOutput::next_token): (undocumented)
    /// - On failure, responds with [`SdkError<ListPhoneNumberOrdersError>`](crate::error::ListPhoneNumberOrdersError)
    pub fn list_phone_number_orders(
        &self,
    ) -> crate::client::fluent_builders::ListPhoneNumberOrders {
        crate::client::fluent_builders::ListPhoneNumberOrders::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListPhoneNumbers`](crate::client::fluent_builders::ListPhoneNumbers) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListPhoneNumbers::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`status(impl Into<String>)`](crate::client::fluent_builders::ListPhoneNumbers::status) / [`set_status(Option<String>)`](crate::client::fluent_builders::ListPhoneNumbers::set_status): (undocumented)
    ///   - [`product_type(PhoneNumberProductType)`](crate::client::fluent_builders::ListPhoneNumbers::product_type) / [`set_product_type(Option<PhoneNumberProductType>)`](crate::client::fluent_builders::ListPhoneNumbers::set_product_type): (undocumented)
    ///   - [`filter_name(PhoneNumberAssociationName)`](crate::client::fluent_builders::ListPhoneNumbers::filter_name) / [`set_filter_name(Option<PhoneNumberAssociationName>)`](crate::client::fluent_builders::ListPhoneNumbers::set_filter_name): (undocumented)
    ///   - [`filter_value(impl Into<String>)`](crate::client::fluent_builders::ListPhoneNumbers::filter_value) / [`set_filter_value(Option<String>)`](crate::client::fluent_builders::ListPhoneNumbers::set_filter_value): (undocumented)
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListPhoneNumbers::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListPhoneNumbers::set_max_results): (undocumented)
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListPhoneNumbers::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListPhoneNumbers::set_next_token): (undocumented)
    /// - On success, responds with [`ListPhoneNumbersOutput`](crate::output::ListPhoneNumbersOutput) with field(s):
    ///   - [`phone_numbers(Option<Vec<PhoneNumber>>)`](crate::output::ListPhoneNumbersOutput::phone_numbers): (undocumented)
    ///   - [`next_token(Option<String>)`](crate::output::ListPhoneNumbersOutput::next_token): (undocumented)
    /// - On failure, responds with [`SdkError<ListPhoneNumbersError>`](crate::error::ListPhoneNumbersError)
    pub fn list_phone_numbers(&self) -> crate::client::fluent_builders::ListPhoneNumbers {
        crate::client::fluent_builders::ListPhoneNumbers::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListProxySessions`](crate::client::fluent_builders::ListProxySessions) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListProxySessions::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`voice_connector_id(impl Into<String>)`](crate::client::fluent_builders::ListProxySessions::voice_connector_id) / [`set_voice_connector_id(Option<String>)`](crate::client::fluent_builders::ListProxySessions::set_voice_connector_id): (undocumented)
    ///   - [`status(ProxySessionStatus)`](crate::client::fluent_builders::ListProxySessions::status) / [`set_status(Option<ProxySessionStatus>)`](crate::client::fluent_builders::ListProxySessions::set_status): (undocumented)
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListProxySessions::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListProxySessions::set_next_token): (undocumented)
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListProxySessions::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListProxySessions::set_max_results): (undocumented)
    /// - On success, responds with [`ListProxySessionsOutput`](crate::output::ListProxySessionsOutput) with field(s):
    ///   - [`proxy_sessions(Option<Vec<ProxySession>>)`](crate::output::ListProxySessionsOutput::proxy_sessions): (undocumented)
    ///   - [`next_token(Option<String>)`](crate::output::ListProxySessionsOutput::next_token): (undocumented)
    /// - On failure, responds with [`SdkError<ListProxySessionsError>`](crate::error::ListProxySessionsError)
    pub fn list_proxy_sessions(&self) -> crate::client::fluent_builders::ListProxySessions {
        crate::client::fluent_builders::ListProxySessions::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListSipMediaApplications`](crate::client::fluent_builders::ListSipMediaApplications) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListSipMediaApplications::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListSipMediaApplications::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListSipMediaApplications::set_max_results): (undocumented)
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListSipMediaApplications::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListSipMediaApplications::set_next_token): (undocumented)
    /// - On success, responds with [`ListSipMediaApplicationsOutput`](crate::output::ListSipMediaApplicationsOutput) with field(s):
    ///   - [`sip_media_applications(Option<Vec<SipMediaApplication>>)`](crate::output::ListSipMediaApplicationsOutput::sip_media_applications): (undocumented)
    ///   - [`next_token(Option<String>)`](crate::output::ListSipMediaApplicationsOutput::next_token): (undocumented)
    /// - On failure, responds with [`SdkError<ListSipMediaApplicationsError>`](crate::error::ListSipMediaApplicationsError)
    pub fn list_sip_media_applications(
        &self,
    ) -> crate::client::fluent_builders::ListSipMediaApplications {
        crate::client::fluent_builders::ListSipMediaApplications::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListSipRules`](crate::client::fluent_builders::ListSipRules) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListSipRules::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`sip_media_application_id(impl Into<String>)`](crate::client::fluent_builders::ListSipRules::sip_media_application_id) / [`set_sip_media_application_id(Option<String>)`](crate::client::fluent_builders::ListSipRules::set_sip_media_application_id): (undocumented)
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListSipRules::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListSipRules::set_max_results): (undocumented)
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListSipRules::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListSipRules::set_next_token): (undocumented)
    /// - On success, responds with [`ListSipRulesOutput`](crate::output::ListSipRulesOutput) with field(s):
    ///   - [`sip_rules(Option<Vec<SipRule>>)`](crate::output::ListSipRulesOutput::sip_rules): (undocumented)
    ///   - [`next_token(Option<String>)`](crate::output::ListSipRulesOutput::next_token): (undocumented)
    /// - On failure, responds with [`SdkError<ListSipRulesError>`](crate::error::ListSipRulesError)
    pub fn list_sip_rules(&self) -> crate::client::fluent_builders::ListSipRules {
        crate::client::fluent_builders::ListSipRules::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListSupportedPhoneNumberCountries`](crate::client::fluent_builders::ListSupportedPhoneNumberCountries) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`product_type(PhoneNumberProductType)`](crate::client::fluent_builders::ListSupportedPhoneNumberCountries::product_type) / [`set_product_type(Option<PhoneNumberProductType>)`](crate::client::fluent_builders::ListSupportedPhoneNumberCountries::set_product_type): (undocumented)
    /// - On success, responds with [`ListSupportedPhoneNumberCountriesOutput`](crate::output::ListSupportedPhoneNumberCountriesOutput) with field(s):
    ///   - [`phone_number_countries(Option<Vec<PhoneNumberCountry>>)`](crate::output::ListSupportedPhoneNumberCountriesOutput::phone_number_countries): (undocumented)
    /// - On failure, responds with [`SdkError<ListSupportedPhoneNumberCountriesError>`](crate::error::ListSupportedPhoneNumberCountriesError)
    pub fn list_supported_phone_number_countries(
        &self,
    ) -> crate::client::fluent_builders::ListSupportedPhoneNumberCountries {
        crate::client::fluent_builders::ListSupportedPhoneNumberCountries::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListVoiceConnectorGroups`](crate::client::fluent_builders::ListVoiceConnectorGroups) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListVoiceConnectorGroups::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListVoiceConnectorGroups::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListVoiceConnectorGroups::set_next_token): (undocumented)
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListVoiceConnectorGroups::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListVoiceConnectorGroups::set_max_results): (undocumented)
    /// - On success, responds with [`ListVoiceConnectorGroupsOutput`](crate::output::ListVoiceConnectorGroupsOutput) with field(s):
    ///   - [`voice_connector_groups(Option<Vec<VoiceConnectorGroup>>)`](crate::output::ListVoiceConnectorGroupsOutput::voice_connector_groups): (undocumented)
    ///   - [`next_token(Option<String>)`](crate::output::ListVoiceConnectorGroupsOutput::next_token): (undocumented)
    /// - On failure, responds with [`SdkError<ListVoiceConnectorGroupsError>`](crate::error::ListVoiceConnectorGroupsError)
    pub fn list_voice_connector_groups(
        &self,
    ) -> crate::client::fluent_builders::ListVoiceConnectorGroups {
        crate::client::fluent_builders::ListVoiceConnectorGroups::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListVoiceConnectors`](crate::client::fluent_builders::ListVoiceConnectors) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListVoiceConnectors::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListVoiceConnectors::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListVoiceConnectors::set_next_token): (undocumented)
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListVoiceConnectors::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListVoiceConnectors::set_max_results): (undocumented)
    /// - On success, responds with [`ListVoiceConnectorsOutput`](crate::output::ListVoiceConnectorsOutput) with field(s):
    ///   - [`voice_connectors(Option<Vec<VoiceConnector>>)`](crate::output::ListVoiceConnectorsOutput::voice_connectors): (undocumented)
    ///   - [`next_token(Option<String>)`](crate::output::ListVoiceConnectorsOutput::next_token): (undocumented)
    /// - On failure, responds with [`SdkError<ListVoiceConnectorsError>`](crate::error::ListVoiceConnectorsError)
    pub fn list_voice_connectors(&self) -> crate::client::fluent_builders::ListVoiceConnectors {
        crate::client::fluent_builders::ListVoiceConnectors::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListVoiceConnectorTerminationCredentials`](crate::client::fluent_builders::ListVoiceConnectorTerminationCredentials) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`voice_connector_id(impl Into<String>)`](crate::client::fluent_builders::ListVoiceConnectorTerminationCredentials::voice_connector_id) / [`set_voice_connector_id(Option<String>)`](crate::client::fluent_builders::ListVoiceConnectorTerminationCredentials::set_voice_connector_id): (undocumented)
    /// - On success, responds with [`ListVoiceConnectorTerminationCredentialsOutput`](crate::output::ListVoiceConnectorTerminationCredentialsOutput) with field(s):
    ///   - [`usernames(Option<Vec<String>>)`](crate::output::ListVoiceConnectorTerminationCredentialsOutput::usernames): (undocumented)
    /// - On failure, responds with [`SdkError<ListVoiceConnectorTerminationCredentialsError>`](crate::error::ListVoiceConnectorTerminationCredentialsError)
    pub fn list_voice_connector_termination_credentials(
        &self,
    ) -> crate::client::fluent_builders::ListVoiceConnectorTerminationCredentials {
        crate::client::fluent_builders::ListVoiceConnectorTerminationCredentials::new(
            self.handle.clone(),
        )
    }
    /// Constructs a fluent builder for the [`PutSipMediaApplicationAlexaSkillConfiguration`](crate::client::fluent_builders::PutSipMediaApplicationAlexaSkillConfiguration) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`sip_media_application_id(impl Into<String>)`](crate::client::fluent_builders::PutSipMediaApplicationAlexaSkillConfiguration::sip_media_application_id) / [`set_sip_media_application_id(Option<String>)`](crate::client::fluent_builders::PutSipMediaApplicationAlexaSkillConfiguration::set_sip_media_application_id): (undocumented)
    ///   - [`sip_media_application_alexa_skill_configuration(SipMediaApplicationAlexaSkillConfiguration)`](crate::client::fluent_builders::PutSipMediaApplicationAlexaSkillConfiguration::sip_media_application_alexa_skill_configuration) / [`set_sip_media_application_alexa_skill_configuration(Option<SipMediaApplicationAlexaSkillConfiguration>)`](crate::client::fluent_builders::PutSipMediaApplicationAlexaSkillConfiguration::set_sip_media_application_alexa_skill_configuration): (undocumented)
    /// - On success, responds with [`PutSipMediaApplicationAlexaSkillConfigurationOutput`](crate::output::PutSipMediaApplicationAlexaSkillConfigurationOutput) with field(s):
    ///   - [`sip_media_application_alexa_skill_configuration(Option<SipMediaApplicationAlexaSkillConfiguration>)`](crate::output::PutSipMediaApplicationAlexaSkillConfigurationOutput::sip_media_application_alexa_skill_configuration): (undocumented)
    /// - On failure, responds with [`SdkError<PutSipMediaApplicationAlexaSkillConfigurationError>`](crate::error::PutSipMediaApplicationAlexaSkillConfigurationError)
    pub fn put_sip_media_application_alexa_skill_configuration(
        &self,
    ) -> crate::client::fluent_builders::PutSipMediaApplicationAlexaSkillConfiguration {
        crate::client::fluent_builders::PutSipMediaApplicationAlexaSkillConfiguration::new(
            self.handle.clone(),
        )
    }
    /// Constructs a fluent builder for the [`PutSipMediaApplicationLoggingConfiguration`](crate::client::fluent_builders::PutSipMediaApplicationLoggingConfiguration) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`sip_media_application_id(impl Into<String>)`](crate::client::fluent_builders::PutSipMediaApplicationLoggingConfiguration::sip_media_application_id) / [`set_sip_media_application_id(Option<String>)`](crate::client::fluent_builders::PutSipMediaApplicationLoggingConfiguration::set_sip_media_application_id): (undocumented)
    ///   - [`sip_media_application_logging_configuration(SipMediaApplicationLoggingConfiguration)`](crate::client::fluent_builders::PutSipMediaApplicationLoggingConfiguration::sip_media_application_logging_configuration) / [`set_sip_media_application_logging_configuration(Option<SipMediaApplicationLoggingConfiguration>)`](crate::client::fluent_builders::PutSipMediaApplicationLoggingConfiguration::set_sip_media_application_logging_configuration): (undocumented)
    /// - On success, responds with [`PutSipMediaApplicationLoggingConfigurationOutput`](crate::output::PutSipMediaApplicationLoggingConfigurationOutput) with field(s):
    ///   - [`sip_media_application_logging_configuration(Option<SipMediaApplicationLoggingConfiguration>)`](crate::output::PutSipMediaApplicationLoggingConfigurationOutput::sip_media_application_logging_configuration): (undocumented)
    /// - On failure, responds with [`SdkError<PutSipMediaApplicationLoggingConfigurationError>`](crate::error::PutSipMediaApplicationLoggingConfigurationError)
    pub fn put_sip_media_application_logging_configuration(
        &self,
    ) -> crate::client::fluent_builders::PutSipMediaApplicationLoggingConfiguration {
        crate::client::fluent_builders::PutSipMediaApplicationLoggingConfiguration::new(
            self.handle.clone(),
        )
    }
    /// Constructs a fluent builder for the [`PutVoiceConnectorEmergencyCallingConfiguration`](crate::client::fluent_builders::PutVoiceConnectorEmergencyCallingConfiguration) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`voice_connector_id(impl Into<String>)`](crate::client::fluent_builders::PutVoiceConnectorEmergencyCallingConfiguration::voice_connector_id) / [`set_voice_connector_id(Option<String>)`](crate::client::fluent_builders::PutVoiceConnectorEmergencyCallingConfiguration::set_voice_connector_id): (undocumented)
    ///   - [`emergency_calling_configuration(EmergencyCallingConfiguration)`](crate::client::fluent_builders::PutVoiceConnectorEmergencyCallingConfiguration::emergency_calling_configuration) / [`set_emergency_calling_configuration(Option<EmergencyCallingConfiguration>)`](crate::client::fluent_builders::PutVoiceConnectorEmergencyCallingConfiguration::set_emergency_calling_configuration): (undocumented)
    /// - On success, responds with [`PutVoiceConnectorEmergencyCallingConfigurationOutput`](crate::output::PutVoiceConnectorEmergencyCallingConfigurationOutput) with field(s):
    ///   - [`emergency_calling_configuration(Option<EmergencyCallingConfiguration>)`](crate::output::PutVoiceConnectorEmergencyCallingConfigurationOutput::emergency_calling_configuration): (undocumented)
    /// - On failure, responds with [`SdkError<PutVoiceConnectorEmergencyCallingConfigurationError>`](crate::error::PutVoiceConnectorEmergencyCallingConfigurationError)
    pub fn put_voice_connector_emergency_calling_configuration(
        &self,
    ) -> crate::client::fluent_builders::PutVoiceConnectorEmergencyCallingConfiguration {
        crate::client::fluent_builders::PutVoiceConnectorEmergencyCallingConfiguration::new(
            self.handle.clone(),
        )
    }
    /// Constructs a fluent builder for the [`PutVoiceConnectorLoggingConfiguration`](crate::client::fluent_builders::PutVoiceConnectorLoggingConfiguration) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`voice_connector_id(impl Into<String>)`](crate::client::fluent_builders::PutVoiceConnectorLoggingConfiguration::voice_connector_id) / [`set_voice_connector_id(Option<String>)`](crate::client::fluent_builders::PutVoiceConnectorLoggingConfiguration::set_voice_connector_id): (undocumented)
    ///   - [`logging_configuration(LoggingConfiguration)`](crate::client::fluent_builders::PutVoiceConnectorLoggingConfiguration::logging_configuration) / [`set_logging_configuration(Option<LoggingConfiguration>)`](crate::client::fluent_builders::PutVoiceConnectorLoggingConfiguration::set_logging_configuration): (undocumented)
    /// - On success, responds with [`PutVoiceConnectorLoggingConfigurationOutput`](crate::output::PutVoiceConnectorLoggingConfigurationOutput) with field(s):
    ///   - [`logging_configuration(Option<LoggingConfiguration>)`](crate::output::PutVoiceConnectorLoggingConfigurationOutput::logging_configuration): (undocumented)
    /// - On failure, responds with [`SdkError<PutVoiceConnectorLoggingConfigurationError>`](crate::error::PutVoiceConnectorLoggingConfigurationError)
    pub fn put_voice_connector_logging_configuration(
        &self,
    ) -> crate::client::fluent_builders::PutVoiceConnectorLoggingConfiguration {
        crate::client::fluent_builders::PutVoiceConnectorLoggingConfiguration::new(
            self.handle.clone(),
        )
    }
    /// Constructs a fluent builder for the [`PutVoiceConnectorOrigination`](crate::client::fluent_builders::PutVoiceConnectorOrigination) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`voice_connector_id(impl Into<String>)`](crate::client::fluent_builders::PutVoiceConnectorOrigination::voice_connector_id) / [`set_voice_connector_id(Option<String>)`](crate::client::fluent_builders::PutVoiceConnectorOrigination::set_voice_connector_id): (undocumented)
    ///   - [`origination(Origination)`](crate::client::fluent_builders::PutVoiceConnectorOrigination::origination) / [`set_origination(Option<Origination>)`](crate::client::fluent_builders::PutVoiceConnectorOrigination::set_origination): (undocumented)
    /// - On success, responds with [`PutVoiceConnectorOriginationOutput`](crate::output::PutVoiceConnectorOriginationOutput) with field(s):
    ///   - [`origination(Option<Origination>)`](crate::output::PutVoiceConnectorOriginationOutput::origination): (undocumented)
    /// - On failure, responds with [`SdkError<PutVoiceConnectorOriginationError>`](crate::error::PutVoiceConnectorOriginationError)
    pub fn put_voice_connector_origination(
        &self,
    ) -> crate::client::fluent_builders::PutVoiceConnectorOrigination {
        crate::client::fluent_builders::PutVoiceConnectorOrigination::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`PutVoiceConnectorProxy`](crate::client::fluent_builders::PutVoiceConnectorProxy) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`voice_connector_id(impl Into<String>)`](crate::client::fluent_builders::PutVoiceConnectorProxy::voice_connector_id) / [`set_voice_connector_id(Option<String>)`](crate::client::fluent_builders::PutVoiceConnectorProxy::set_voice_connector_id): (undocumented)
    ///   - [`default_session_expiry_minutes(i32)`](crate::client::fluent_builders::PutVoiceConnectorProxy::default_session_expiry_minutes) / [`set_default_session_expiry_minutes(Option<i32>)`](crate::client::fluent_builders::PutVoiceConnectorProxy::set_default_session_expiry_minutes): (undocumented)
    ///   - [`phone_number_pool_countries(Vec<String>)`](crate::client::fluent_builders::PutVoiceConnectorProxy::phone_number_pool_countries) / [`set_phone_number_pool_countries(Option<Vec<String>>)`](crate::client::fluent_builders::PutVoiceConnectorProxy::set_phone_number_pool_countries): (undocumented)
    ///   - [`fall_back_phone_number(impl Into<String>)`](crate::client::fluent_builders::PutVoiceConnectorProxy::fall_back_phone_number) / [`set_fall_back_phone_number(Option<String>)`](crate::client::fluent_builders::PutVoiceConnectorProxy::set_fall_back_phone_number): (undocumented)
    ///   - [`disabled(bool)`](crate::client::fluent_builders::PutVoiceConnectorProxy::disabled) / [`set_disabled(Option<bool>)`](crate::client::fluent_builders::PutVoiceConnectorProxy::set_disabled): (undocumented)
    /// - On success, responds with [`PutVoiceConnectorProxyOutput`](crate::output::PutVoiceConnectorProxyOutput) with field(s):
    ///   - [`proxy(Option<Proxy>)`](crate::output::PutVoiceConnectorProxyOutput::proxy): (undocumented)
    /// - On failure, responds with [`SdkError<PutVoiceConnectorProxyError>`](crate::error::PutVoiceConnectorProxyError)
    pub fn put_voice_connector_proxy(
        &self,
    ) -> crate::client::fluent_builders::PutVoiceConnectorProxy {
        crate::client::fluent_builders::PutVoiceConnectorProxy::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`PutVoiceConnectorStreamingConfiguration`](crate::client::fluent_builders::PutVoiceConnectorStreamingConfiguration) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`voice_connector_id(impl Into<String>)`](crate::client::fluent_builders::PutVoiceConnectorStreamingConfiguration::voice_connector_id) / [`set_voice_connector_id(Option<String>)`](crate::client::fluent_builders::PutVoiceConnectorStreamingConfiguration::set_voice_connector_id): (undocumented)
    ///   - [`streaming_configuration(StreamingConfiguration)`](crate::client::fluent_builders::PutVoiceConnectorStreamingConfiguration::streaming_configuration) / [`set_streaming_configuration(Option<StreamingConfiguration>)`](crate::client::fluent_builders::PutVoiceConnectorStreamingConfiguration::set_streaming_configuration): (undocumented)
    /// - On success, responds with [`PutVoiceConnectorStreamingConfigurationOutput`](crate::output::PutVoiceConnectorStreamingConfigurationOutput) with field(s):
    ///   - [`streaming_configuration(Option<StreamingConfiguration>)`](crate::output::PutVoiceConnectorStreamingConfigurationOutput::streaming_configuration): (undocumented)
    /// - On failure, responds with [`SdkError<PutVoiceConnectorStreamingConfigurationError>`](crate::error::PutVoiceConnectorStreamingConfigurationError)
    pub fn put_voice_connector_streaming_configuration(
        &self,
    ) -> crate::client::fluent_builders::PutVoiceConnectorStreamingConfiguration {
        crate::client::fluent_builders::PutVoiceConnectorStreamingConfiguration::new(
            self.handle.clone(),
        )
    }
    /// Constructs a fluent builder for the [`PutVoiceConnectorTermination`](crate::client::fluent_builders::PutVoiceConnectorTermination) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`voice_connector_id(impl Into<String>)`](crate::client::fluent_builders::PutVoiceConnectorTermination::voice_connector_id) / [`set_voice_connector_id(Option<String>)`](crate::client::fluent_builders::PutVoiceConnectorTermination::set_voice_connector_id): (undocumented)
    ///   - [`termination(Termination)`](crate::client::fluent_builders::PutVoiceConnectorTermination::termination) / [`set_termination(Option<Termination>)`](crate::client::fluent_builders::PutVoiceConnectorTermination::set_termination): (undocumented)
    /// - On success, responds with [`PutVoiceConnectorTerminationOutput`](crate::output::PutVoiceConnectorTerminationOutput) with field(s):
    ///   - [`termination(Option<Termination>)`](crate::output::PutVoiceConnectorTerminationOutput::termination): (undocumented)
    /// - On failure, responds with [`SdkError<PutVoiceConnectorTerminationError>`](crate::error::PutVoiceConnectorTerminationError)
    pub fn put_voice_connector_termination(
        &self,
    ) -> crate::client::fluent_builders::PutVoiceConnectorTermination {
        crate::client::fluent_builders::PutVoiceConnectorTermination::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`PutVoiceConnectorTerminationCredentials`](crate::client::fluent_builders::PutVoiceConnectorTerminationCredentials) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`voice_connector_id(impl Into<String>)`](crate::client::fluent_builders::PutVoiceConnectorTerminationCredentials::voice_connector_id) / [`set_voice_connector_id(Option<String>)`](crate::client::fluent_builders::PutVoiceConnectorTerminationCredentials::set_voice_connector_id): (undocumented)
    ///   - [`credentials(Vec<Credential>)`](crate::client::fluent_builders::PutVoiceConnectorTerminationCredentials::credentials) / [`set_credentials(Option<Vec<Credential>>)`](crate::client::fluent_builders::PutVoiceConnectorTerminationCredentials::set_credentials): (undocumented)
    /// - On success, responds with [`PutVoiceConnectorTerminationCredentialsOutput`](crate::output::PutVoiceConnectorTerminationCredentialsOutput)

    /// - On failure, responds with [`SdkError<PutVoiceConnectorTerminationCredentialsError>`](crate::error::PutVoiceConnectorTerminationCredentialsError)
    pub fn put_voice_connector_termination_credentials(
        &self,
    ) -> crate::client::fluent_builders::PutVoiceConnectorTerminationCredentials {
        crate::client::fluent_builders::PutVoiceConnectorTerminationCredentials::new(
            self.handle.clone(),
        )
    }
    /// Constructs a fluent builder for the [`RestorePhoneNumber`](crate::client::fluent_builders::RestorePhoneNumber) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`phone_number_id(impl Into<String>)`](crate::client::fluent_builders::RestorePhoneNumber::phone_number_id) / [`set_phone_number_id(Option<String>)`](crate::client::fluent_builders::RestorePhoneNumber::set_phone_number_id): (undocumented)
    /// - On success, responds with [`RestorePhoneNumberOutput`](crate::output::RestorePhoneNumberOutput) with field(s):
    ///   - [`phone_number(Option<PhoneNumber>)`](crate::output::RestorePhoneNumberOutput::phone_number): (undocumented)
    /// - On failure, responds with [`SdkError<RestorePhoneNumberError>`](crate::error::RestorePhoneNumberError)
    pub fn restore_phone_number(&self) -> crate::client::fluent_builders::RestorePhoneNumber {
        crate::client::fluent_builders::RestorePhoneNumber::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`SearchAvailablePhoneNumbers`](crate::client::fluent_builders::SearchAvailablePhoneNumbers) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::SearchAvailablePhoneNumbers::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`area_code(impl Into<String>)`](crate::client::fluent_builders::SearchAvailablePhoneNumbers::area_code) / [`set_area_code(Option<String>)`](crate::client::fluent_builders::SearchAvailablePhoneNumbers::set_area_code): (undocumented)
    ///   - [`city(impl Into<String>)`](crate::client::fluent_builders::SearchAvailablePhoneNumbers::city) / [`set_city(Option<String>)`](crate::client::fluent_builders::SearchAvailablePhoneNumbers::set_city): (undocumented)
    ///   - [`country(impl Into<String>)`](crate::client::fluent_builders::SearchAvailablePhoneNumbers::country) / [`set_country(Option<String>)`](crate::client::fluent_builders::SearchAvailablePhoneNumbers::set_country): (undocumented)
    ///   - [`state(impl Into<String>)`](crate::client::fluent_builders::SearchAvailablePhoneNumbers::state) / [`set_state(Option<String>)`](crate::client::fluent_builders::SearchAvailablePhoneNumbers::set_state): (undocumented)
    ///   - [`toll_free_prefix(impl Into<String>)`](crate::client::fluent_builders::SearchAvailablePhoneNumbers::toll_free_prefix) / [`set_toll_free_prefix(Option<String>)`](crate::client::fluent_builders::SearchAvailablePhoneNumbers::set_toll_free_prefix): (undocumented)
    ///   - [`phone_number_type(PhoneNumberType)`](crate::client::fluent_builders::SearchAvailablePhoneNumbers::phone_number_type) / [`set_phone_number_type(Option<PhoneNumberType>)`](crate::client::fluent_builders::SearchAvailablePhoneNumbers::set_phone_number_type): (undocumented)
    ///   - [`max_results(i32)`](crate::client::fluent_builders::SearchAvailablePhoneNumbers::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::SearchAvailablePhoneNumbers::set_max_results): (undocumented)
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::SearchAvailablePhoneNumbers::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::SearchAvailablePhoneNumbers::set_next_token): (undocumented)
    /// - On success, responds with [`SearchAvailablePhoneNumbersOutput`](crate::output::SearchAvailablePhoneNumbersOutput) with field(s):
    ///   - [`e164_phone_numbers(Option<Vec<String>>)`](crate::output::SearchAvailablePhoneNumbersOutput::e164_phone_numbers): (undocumented)
    ///   - [`next_token(Option<String>)`](crate::output::SearchAvailablePhoneNumbersOutput::next_token): (undocumented)
    /// - On failure, responds with [`SdkError<SearchAvailablePhoneNumbersError>`](crate::error::SearchAvailablePhoneNumbersError)
    pub fn search_available_phone_numbers(
        &self,
    ) -> crate::client::fluent_builders::SearchAvailablePhoneNumbers {
        crate::client::fluent_builders::SearchAvailablePhoneNumbers::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`UpdateGlobalSettings`](crate::client::fluent_builders::UpdateGlobalSettings) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`voice_connector(VoiceConnectorSettings)`](crate::client::fluent_builders::UpdateGlobalSettings::voice_connector) / [`set_voice_connector(Option<VoiceConnectorSettings>)`](crate::client::fluent_builders::UpdateGlobalSettings::set_voice_connector): (undocumented)
    /// - On success, responds with [`UpdateGlobalSettingsOutput`](crate::output::UpdateGlobalSettingsOutput)

    /// - On failure, responds with [`SdkError<UpdateGlobalSettingsError>`](crate::error::UpdateGlobalSettingsError)
    pub fn update_global_settings(&self) -> crate::client::fluent_builders::UpdateGlobalSettings {
        crate::client::fluent_builders::UpdateGlobalSettings::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`UpdatePhoneNumber`](crate::client::fluent_builders::UpdatePhoneNumber) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`phone_number_id(impl Into<String>)`](crate::client::fluent_builders::UpdatePhoneNumber::phone_number_id) / [`set_phone_number_id(Option<String>)`](crate::client::fluent_builders::UpdatePhoneNumber::set_phone_number_id): (undocumented)
    ///   - [`product_type(PhoneNumberProductType)`](crate::client::fluent_builders::UpdatePhoneNumber::product_type) / [`set_product_type(Option<PhoneNumberProductType>)`](crate::client::fluent_builders::UpdatePhoneNumber::set_product_type): (undocumented)
    ///   - [`calling_name(impl Into<String>)`](crate::client::fluent_builders::UpdatePhoneNumber::calling_name) / [`set_calling_name(Option<String>)`](crate::client::fluent_builders::UpdatePhoneNumber::set_calling_name): (undocumented)
    /// - On success, responds with [`UpdatePhoneNumberOutput`](crate::output::UpdatePhoneNumberOutput) with field(s):
    ///   - [`phone_number(Option<PhoneNumber>)`](crate::output::UpdatePhoneNumberOutput::phone_number): (undocumented)
    /// - On failure, responds with [`SdkError<UpdatePhoneNumberError>`](crate::error::UpdatePhoneNumberError)
    pub fn update_phone_number(&self) -> crate::client::fluent_builders::UpdatePhoneNumber {
        crate::client::fluent_builders::UpdatePhoneNumber::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`UpdatePhoneNumberSettings`](crate::client::fluent_builders::UpdatePhoneNumberSettings) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`calling_name(impl Into<String>)`](crate::client::fluent_builders::UpdatePhoneNumberSettings::calling_name) / [`set_calling_name(Option<String>)`](crate::client::fluent_builders::UpdatePhoneNumberSettings::set_calling_name): (undocumented)
    /// - On success, responds with [`UpdatePhoneNumberSettingsOutput`](crate::output::UpdatePhoneNumberSettingsOutput)

    /// - On failure, responds with [`SdkError<UpdatePhoneNumberSettingsError>`](crate::error::UpdatePhoneNumberSettingsError)
    pub fn update_phone_number_settings(
        &self,
    ) -> crate::client::fluent_builders::UpdatePhoneNumberSettings {
        crate::client::fluent_builders::UpdatePhoneNumberSettings::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`UpdateProxySession`](crate::client::fluent_builders::UpdateProxySession) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`voice_connector_id(impl Into<String>)`](crate::client::fluent_builders::UpdateProxySession::voice_connector_id) / [`set_voice_connector_id(Option<String>)`](crate::client::fluent_builders::UpdateProxySession::set_voice_connector_id): (undocumented)
    ///   - [`proxy_session_id(impl Into<String>)`](crate::client::fluent_builders::UpdateProxySession::proxy_session_id) / [`set_proxy_session_id(Option<String>)`](crate::client::fluent_builders::UpdateProxySession::set_proxy_session_id): (undocumented)
    ///   - [`capabilities(Vec<Capability>)`](crate::client::fluent_builders::UpdateProxySession::capabilities) / [`set_capabilities(Option<Vec<Capability>>)`](crate::client::fluent_builders::UpdateProxySession::set_capabilities): (undocumented)
    ///   - [`expiry_minutes(i32)`](crate::client::fluent_builders::UpdateProxySession::expiry_minutes) / [`set_expiry_minutes(Option<i32>)`](crate::client::fluent_builders::UpdateProxySession::set_expiry_minutes): (undocumented)
    /// - On success, responds with [`UpdateProxySessionOutput`](crate::output::UpdateProxySessionOutput) with field(s):
    ///   - [`proxy_session(Option<ProxySession>)`](crate::output::UpdateProxySessionOutput::proxy_session): (undocumented)
    /// - On failure, responds with [`SdkError<UpdateProxySessionError>`](crate::error::UpdateProxySessionError)
    pub fn update_proxy_session(&self) -> crate::client::fluent_builders::UpdateProxySession {
        crate::client::fluent_builders::UpdateProxySession::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`UpdateSipMediaApplication`](crate::client::fluent_builders::UpdateSipMediaApplication) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`sip_media_application_id(impl Into<String>)`](crate::client::fluent_builders::UpdateSipMediaApplication::sip_media_application_id) / [`set_sip_media_application_id(Option<String>)`](crate::client::fluent_builders::UpdateSipMediaApplication::set_sip_media_application_id): (undocumented)
    ///   - [`name(impl Into<String>)`](crate::client::fluent_builders::UpdateSipMediaApplication::name) / [`set_name(Option<String>)`](crate::client::fluent_builders::UpdateSipMediaApplication::set_name): (undocumented)
    ///   - [`endpoints(Vec<SipMediaApplicationEndpoint>)`](crate::client::fluent_builders::UpdateSipMediaApplication::endpoints) / [`set_endpoints(Option<Vec<SipMediaApplicationEndpoint>>)`](crate::client::fluent_builders::UpdateSipMediaApplication::set_endpoints): (undocumented)
    /// - On success, responds with [`UpdateSipMediaApplicationOutput`](crate::output::UpdateSipMediaApplicationOutput) with field(s):
    ///   - [`sip_media_application(Option<SipMediaApplication>)`](crate::output::UpdateSipMediaApplicationOutput::sip_media_application): (undocumented)
    /// - On failure, responds with [`SdkError<UpdateSipMediaApplicationError>`](crate::error::UpdateSipMediaApplicationError)
    pub fn update_sip_media_application(
        &self,
    ) -> crate::client::fluent_builders::UpdateSipMediaApplication {
        crate::client::fluent_builders::UpdateSipMediaApplication::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`UpdateSipMediaApplicationCall`](crate::client::fluent_builders::UpdateSipMediaApplicationCall) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`sip_media_application_id(impl Into<String>)`](crate::client::fluent_builders::UpdateSipMediaApplicationCall::sip_media_application_id) / [`set_sip_media_application_id(Option<String>)`](crate::client::fluent_builders::UpdateSipMediaApplicationCall::set_sip_media_application_id): (undocumented)
    ///   - [`transaction_id(impl Into<String>)`](crate::client::fluent_builders::UpdateSipMediaApplicationCall::transaction_id) / [`set_transaction_id(Option<String>)`](crate::client::fluent_builders::UpdateSipMediaApplicationCall::set_transaction_id): (undocumented)
    ///   - [`arguments(HashMap<String, String>)`](crate::client::fluent_builders::UpdateSipMediaApplicationCall::arguments) / [`set_arguments(Option<HashMap<String, String>>)`](crate::client::fluent_builders::UpdateSipMediaApplicationCall::set_arguments): (undocumented)
    /// - On success, responds with [`UpdateSipMediaApplicationCallOutput`](crate::output::UpdateSipMediaApplicationCallOutput) with field(s):
    ///   - [`sip_media_application_call(Option<SipMediaApplicationCall>)`](crate::output::UpdateSipMediaApplicationCallOutput::sip_media_application_call): (undocumented)
    /// - On failure, responds with [`SdkError<UpdateSipMediaApplicationCallError>`](crate::error::UpdateSipMediaApplicationCallError)
    pub fn update_sip_media_application_call(
        &self,
    ) -> crate::client::fluent_builders::UpdateSipMediaApplicationCall {
        crate::client::fluent_builders::UpdateSipMediaApplicationCall::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`UpdateSipRule`](crate::client::fluent_builders::UpdateSipRule) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`sip_rule_id(impl Into<String>)`](crate::client::fluent_builders::UpdateSipRule::sip_rule_id) / [`set_sip_rule_id(Option<String>)`](crate::client::fluent_builders::UpdateSipRule::set_sip_rule_id): (undocumented)
    ///   - [`name(impl Into<String>)`](crate::client::fluent_builders::UpdateSipRule::name) / [`set_name(Option<String>)`](crate::client::fluent_builders::UpdateSipRule::set_name): (undocumented)
    ///   - [`disabled(bool)`](crate::client::fluent_builders::UpdateSipRule::disabled) / [`set_disabled(Option<bool>)`](crate::client::fluent_builders::UpdateSipRule::set_disabled): (undocumented)
    ///   - [`target_applications(Vec<SipRuleTargetApplication>)`](crate::client::fluent_builders::UpdateSipRule::target_applications) / [`set_target_applications(Option<Vec<SipRuleTargetApplication>>)`](crate::client::fluent_builders::UpdateSipRule::set_target_applications): (undocumented)
    /// - On success, responds with [`UpdateSipRuleOutput`](crate::output::UpdateSipRuleOutput) with field(s):
    ///   - [`sip_rule(Option<SipRule>)`](crate::output::UpdateSipRuleOutput::sip_rule): (undocumented)
    /// - On failure, responds with [`SdkError<UpdateSipRuleError>`](crate::error::UpdateSipRuleError)
    pub fn update_sip_rule(&self) -> crate::client::fluent_builders::UpdateSipRule {
        crate::client::fluent_builders::UpdateSipRule::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`UpdateVoiceConnector`](crate::client::fluent_builders::UpdateVoiceConnector) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`voice_connector_id(impl Into<String>)`](crate::client::fluent_builders::UpdateVoiceConnector::voice_connector_id) / [`set_voice_connector_id(Option<String>)`](crate::client::fluent_builders::UpdateVoiceConnector::set_voice_connector_id): (undocumented)
    ///   - [`name(impl Into<String>)`](crate::client::fluent_builders::UpdateVoiceConnector::name) / [`set_name(Option<String>)`](crate::client::fluent_builders::UpdateVoiceConnector::set_name): (undocumented)
    ///   - [`require_encryption(bool)`](crate::client::fluent_builders::UpdateVoiceConnector::require_encryption) / [`set_require_encryption(Option<bool>)`](crate::client::fluent_builders::UpdateVoiceConnector::set_require_encryption): (undocumented)
    /// - On success, responds with [`UpdateVoiceConnectorOutput`](crate::output::UpdateVoiceConnectorOutput) with field(s):
    ///   - [`voice_connector(Option<VoiceConnector>)`](crate::output::UpdateVoiceConnectorOutput::voice_connector): (undocumented)
    /// - On failure, responds with [`SdkError<UpdateVoiceConnectorError>`](crate::error::UpdateVoiceConnectorError)
    pub fn update_voice_connector(&self) -> crate::client::fluent_builders::UpdateVoiceConnector {
        crate::client::fluent_builders::UpdateVoiceConnector::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`UpdateVoiceConnectorGroup`](crate::client::fluent_builders::UpdateVoiceConnectorGroup) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`voice_connector_group_id(impl Into<String>)`](crate::client::fluent_builders::UpdateVoiceConnectorGroup::voice_connector_group_id) / [`set_voice_connector_group_id(Option<String>)`](crate::client::fluent_builders::UpdateVoiceConnectorGroup::set_voice_connector_group_id): (undocumented)
    ///   - [`name(impl Into<String>)`](crate::client::fluent_builders::UpdateVoiceConnectorGroup::name) / [`set_name(Option<String>)`](crate::client::fluent_builders::UpdateVoiceConnectorGroup::set_name): (undocumented)
    ///   - [`voice_connector_items(Vec<VoiceConnectorItem>)`](crate::client::fluent_builders::UpdateVoiceConnectorGroup::voice_connector_items) / [`set_voice_connector_items(Option<Vec<VoiceConnectorItem>>)`](crate::client::fluent_builders::UpdateVoiceConnectorGroup::set_voice_connector_items): (undocumented)
    /// - On success, responds with [`UpdateVoiceConnectorGroupOutput`](crate::output::UpdateVoiceConnectorGroupOutput) with field(s):
    ///   - [`voice_connector_group(Option<VoiceConnectorGroup>)`](crate::output::UpdateVoiceConnectorGroupOutput::voice_connector_group): (undocumented)
    /// - On failure, responds with [`SdkError<UpdateVoiceConnectorGroupError>`](crate::error::UpdateVoiceConnectorGroupError)
    pub fn update_voice_connector_group(
        &self,
    ) -> crate::client::fluent_builders::UpdateVoiceConnectorGroup {
        crate::client::fluent_builders::UpdateVoiceConnectorGroup::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ValidateE911Address`](crate::client::fluent_builders::ValidateE911Address) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`aws_account_id(impl Into<String>)`](crate::client::fluent_builders::ValidateE911Address::aws_account_id) / [`set_aws_account_id(Option<String>)`](crate::client::fluent_builders::ValidateE911Address::set_aws_account_id): (undocumented)
    ///   - [`street_number(impl Into<String>)`](crate::client::fluent_builders::ValidateE911Address::street_number) / [`set_street_number(Option<String>)`](crate::client::fluent_builders::ValidateE911Address::set_street_number): (undocumented)
    ///   - [`street_info(impl Into<String>)`](crate::client::fluent_builders::ValidateE911Address::street_info) / [`set_street_info(Option<String>)`](crate::client::fluent_builders::ValidateE911Address::set_street_info): (undocumented)
    ///   - [`city(impl Into<String>)`](crate::client::fluent_builders::ValidateE911Address::city) / [`set_city(Option<String>)`](crate::client::fluent_builders::ValidateE911Address::set_city): (undocumented)
    ///   - [`state(impl Into<String>)`](crate::client::fluent_builders::ValidateE911Address::state) / [`set_state(Option<String>)`](crate::client::fluent_builders::ValidateE911Address::set_state): (undocumented)
    ///   - [`country(impl Into<String>)`](crate::client::fluent_builders::ValidateE911Address::country) / [`set_country(Option<String>)`](crate::client::fluent_builders::ValidateE911Address::set_country): (undocumented)
    ///   - [`postal_code(impl Into<String>)`](crate::client::fluent_builders::ValidateE911Address::postal_code) / [`set_postal_code(Option<String>)`](crate::client::fluent_builders::ValidateE911Address::set_postal_code): (undocumented)
    /// - On success, responds with [`ValidateE911AddressOutput`](crate::output::ValidateE911AddressOutput) with field(s):
    ///   - [`validation_result(i32)`](crate::output::ValidateE911AddressOutput::validation_result): (undocumented)
    ///   - [`address_external_id(Option<String>)`](crate::output::ValidateE911AddressOutput::address_external_id): (undocumented)
    ///   - [`address(Option<Address>)`](crate::output::ValidateE911AddressOutput::address): (undocumented)
    ///   - [`candidate_address_list(Option<Vec<CandidateAddress>>)`](crate::output::ValidateE911AddressOutput::candidate_address_list): (undocumented)
    /// - On failure, responds with [`SdkError<ValidateE911AddressError>`](crate::error::ValidateE911AddressError)
    pub fn validate_e911_address(&self) -> crate::client::fluent_builders::ValidateE911Address {
        crate::client::fluent_builders::ValidateE911Address::new(self.handle.clone())
    }
}

impl Client {
    /// Creates a new client from an [SDK Config](aws_types::sdk_config::SdkConfig).
    ///
    /// # Panics
    ///
    /// - This method will panic if the `sdk_config` is missing an async sleep implementation. If you experience this panic, set
    ///     the `sleep_impl` on the Config passed into this function to fix it.
    /// - This method will panic if the `sdk_config` is missing an HTTP connector. If you experience this panic, set the
    ///     `http_connector` on the Config passed into this function to fix it.
    pub fn new(sdk_config: &aws_types::sdk_config::SdkConfig) -> Self {
        Self::from_conf(sdk_config.into())
    }

    /// Creates a new client from the service [`Config`](crate::Config).
    ///
    /// # Panics
    ///
    /// - This method will panic if the `conf` is missing an async sleep implementation. If you experience this panic, set
    ///     the `sleep_impl` on the Config passed into this function to fix it.
    /// - This method will panic if the `conf` is missing an HTTP connector. If you experience this panic, set the
    ///     `http_connector` on the Config passed into this function to fix it.
    pub fn from_conf(conf: crate::Config) -> Self {
        let retry_config = conf
            .retry_config()
            .cloned()
            .unwrap_or_else(aws_smithy_types::retry::RetryConfig::disabled);
        let timeout_config = conf
            .timeout_config()
            .cloned()
            .unwrap_or_else(aws_smithy_types::timeout::TimeoutConfig::disabled);
        let sleep_impl = conf.sleep_impl();
        if (retry_config.has_retry() || timeout_config.has_timeouts()) && sleep_impl.is_none() {
            panic!("An async sleep implementation is required for retries or timeouts to work. \
                                    Set the `sleep_impl` on the Config passed into this function to fix this panic.");
        }

        let connector = conf.http_connector().and_then(|c| {
            let timeout_config = conf
                .timeout_config()
                .cloned()
                .unwrap_or_else(aws_smithy_types::timeout::TimeoutConfig::disabled);
            let connector_settings =
                aws_smithy_client::http_connector::ConnectorSettings::from_timeout_config(
                    &timeout_config,
                );
            c.connector(&connector_settings, conf.sleep_impl())
        });

        let builder = aws_smithy_client::Builder::new();

        let builder = match connector {
            // Use provided connector
            Some(c) => builder.connector(c),
            None => {
                #[cfg(any(feature = "rustls", feature = "native-tls"))]
                {
                    // Use default connector based on enabled features
                    builder.dyn_https_connector(
                        aws_smithy_client::http_connector::ConnectorSettings::from_timeout_config(
                            &timeout_config,
                        ),
                    )
                }
                #[cfg(not(any(feature = "rustls", feature = "native-tls")))]
                {
                    panic!("No HTTP connector was available. Enable the `rustls` or `native-tls` crate feature or set a connector to fix this.");
                }
            }
        };
        let mut builder = builder
            .middleware(aws_smithy_client::erase::DynMiddleware::new(
                crate::middleware::DefaultMiddleware::new(),
            ))
            .retry_config(retry_config.into())
            .operation_timeout_config(timeout_config.into());
        builder.set_sleep_impl(sleep_impl);
        let client = builder.build();

        Self {
            handle: std::sync::Arc::new(Handle { client, conf }),
        }
    }
}

/// Utilities to ergonomically construct a request to the service.
///
/// Fluent builders are created through the [`Client`](crate::client::Client) by calling
/// one if its operation methods. After parameters are set using the builder methods,
/// the `send` method can be called to initiate the request.
pub mod fluent_builders;
