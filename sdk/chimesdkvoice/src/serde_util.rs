// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) fn sip_media_application_alexa_skill_configuration_correct_errors(
    mut builder: crate::types::builders::SipMediaApplicationAlexaSkillConfigurationBuilder,
) -> crate::types::builders::SipMediaApplicationAlexaSkillConfigurationBuilder {
    if builder.alexa_skill_status.is_none() {
        builder.alexa_skill_status = "no value was set".parse::<crate::types::AlexaSkillStatus>().ok()
    }
    if builder.alexa_skill_ids.is_none() {
        builder.alexa_skill_ids = Some(Default::default())
    }
    builder
}

pub(crate) fn streaming_configuration_correct_errors(
    mut builder: crate::types::builders::StreamingConfigurationBuilder,
) -> crate::types::builders::StreamingConfigurationBuilder {
    if builder.data_retention_in_hours.is_none() {
        builder.data_retention_in_hours = Some(Default::default())
    }
    if builder.disabled.is_none() {
        builder.disabled = Some(Default::default())
    }
    builder
}

pub(crate) fn geo_match_params_correct_errors(
    mut builder: crate::types::builders::GeoMatchParamsBuilder,
) -> crate::types::builders::GeoMatchParamsBuilder {
    if builder.country.is_none() {
        builder.country = Some(Default::default())
    }
    if builder.area_code.is_none() {
        builder.area_code = Some(Default::default())
    }
    builder
}

pub(crate) fn server_side_encryption_configuration_correct_errors(
    mut builder: crate::types::builders::ServerSideEncryptionConfigurationBuilder,
) -> crate::types::builders::ServerSideEncryptionConfigurationBuilder {
    if builder.kms_key_arn.is_none() {
        builder.kms_key_arn = Some(Default::default())
    }
    builder
}

pub(crate) fn tag_correct_errors(mut builder: crate::types::builders::TagBuilder) -> crate::types::builders::TagBuilder {
    if builder.key.is_none() {
        builder.key = Some(Default::default())
    }
    if builder.value.is_none() {
        builder.value = Some(Default::default())
    }
    builder
}

pub(crate) fn dnis_emergency_calling_configuration_correct_errors(
    mut builder: crate::types::builders::DnisEmergencyCallingConfigurationBuilder,
) -> crate::types::builders::DnisEmergencyCallingConfigurationBuilder {
    if builder.emergency_phone_number.is_none() {
        builder.emergency_phone_number = Some(Default::default())
    }
    if builder.calling_country.is_none() {
        builder.calling_country = Some(Default::default())
    }
    builder
}

pub(crate) fn voice_connector_item_correct_errors(
    mut builder: crate::types::builders::VoiceConnectorItemBuilder,
) -> crate::types::builders::VoiceConnectorItemBuilder {
    if builder.voice_connector_id.is_none() {
        builder.voice_connector_id = Some(Default::default())
    }
    if builder.priority.is_none() {
        builder.priority = Some(Default::default())
    }
    builder
}
