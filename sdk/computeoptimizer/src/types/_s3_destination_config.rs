// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Describes the destination Amazon Simple Storage Service (Amazon S3) bucket name and key prefix for a recommendations export job.</p>
/// <p>You must create the destination Amazon S3 bucket for your recommendations export before you create the export job. Compute Optimizer does not create the S3 bucket for you. After you create the S3 bucket, ensure that it has the required permission policy to allow Compute Optimizer to write the export file to it. If you plan to specify an object prefix when you create the export job, you must include the object prefix in the policy that you add to the S3 bucket. For more information, see <a href="https://docs.aws.amazon.com/compute-optimizer/latest/ug/create-s3-bucket-policy-for-compute-optimizer.html">Amazon S3 Bucket Policy for Compute Optimizer</a> in the <i>Compute Optimizer User Guide</i>.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct S3DestinationConfig {
    /// <p>The name of the Amazon S3 bucket to use as the destination for an export job.</p>
    #[doc(hidden)]
    pub bucket: std::option::Option<std::string::String>,
    /// <p>The Amazon S3 bucket prefix for an export job.</p>
    #[doc(hidden)]
    pub key_prefix: std::option::Option<std::string::String>,
}
impl S3DestinationConfig {
    /// <p>The name of the Amazon S3 bucket to use as the destination for an export job.</p>
    pub fn bucket(&self) -> std::option::Option<&str> {
        self.bucket.as_deref()
    }
    /// <p>The Amazon S3 bucket prefix for an export job.</p>
    pub fn key_prefix(&self) -> std::option::Option<&str> {
        self.key_prefix.as_deref()
    }
}
impl S3DestinationConfig {
    /// Creates a new builder-style object to manufacture [`S3DestinationConfig`](crate::types::S3DestinationConfig).
    pub fn builder() -> crate::types::builders::S3DestinationConfigBuilder {
        crate::types::builders::S3DestinationConfigBuilder::default()
    }
}

/// A builder for [`S3DestinationConfig`](crate::types::S3DestinationConfig).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct S3DestinationConfigBuilder {
    pub(crate) bucket: std::option::Option<std::string::String>,
    pub(crate) key_prefix: std::option::Option<std::string::String>,
}
impl S3DestinationConfigBuilder {
    /// <p>The name of the Amazon S3 bucket to use as the destination for an export job.</p>
    pub fn bucket(mut self, input: impl Into<std::string::String>) -> Self {
        self.bucket = Some(input.into());
        self
    }
    /// <p>The name of the Amazon S3 bucket to use as the destination for an export job.</p>
    pub fn set_bucket(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.bucket = input;
        self
    }
    /// <p>The Amazon S3 bucket prefix for an export job.</p>
    pub fn key_prefix(mut self, input: impl Into<std::string::String>) -> Self {
        self.key_prefix = Some(input.into());
        self
    }
    /// <p>The Amazon S3 bucket prefix for an export job.</p>
    pub fn set_key_prefix(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.key_prefix = input;
        self
    }
    /// Consumes the builder and constructs a [`S3DestinationConfig`](crate::types::S3DestinationConfig).
    pub fn build(self) -> crate::types::S3DestinationConfig {
        crate::types::S3DestinationConfig {
            bucket: self.bucket,
            key_prefix: self.key_prefix,
        }
    }
}
