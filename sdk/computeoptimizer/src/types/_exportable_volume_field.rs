// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// When writing a match expression against `ExportableVolumeField`, it is important to ensure
/// your code is forward-compatible. That is, if a match arm handles a case for a
/// feature that is supported by the service but has not been represented as an enum
/// variant in a current version of SDK, your code should continue to work when you
/// upgrade SDK to a future version in which the enum does include a variant for that
/// feature.
///
/// Here is an example of how you can make a match expression forward-compatible:
///
/// ```text
/// # let exportablevolumefield = unimplemented!();
/// match exportablevolumefield {
///     ExportableVolumeField::AccountId => { /* ... */ },
///     ExportableVolumeField::CurrentConfigurationVolumeBaselineIops => { /* ... */ },
///     ExportableVolumeField::CurrentConfigurationVolumeBaselineThroughput => { /* ... */ },
///     ExportableVolumeField::CurrentConfigurationVolumeBurstIops => { /* ... */ },
///     ExportableVolumeField::CurrentConfigurationVolumeBurstThroughput => { /* ... */ },
///     ExportableVolumeField::CurrentConfigurationVolumeSize => { /* ... */ },
///     ExportableVolumeField::CurrentConfigurationVolumeType => { /* ... */ },
///     ExportableVolumeField::CurrentMonthlyPrice => { /* ... */ },
///     ExportableVolumeField::CurrentPerformanceRisk => { /* ... */ },
///     ExportableVolumeField::Finding => { /* ... */ },
///     ExportableVolumeField::LastRefreshTimestamp => { /* ... */ },
///     ExportableVolumeField::LookbackPeriodInDays => { /* ... */ },
///     ExportableVolumeField::RecommendationOptionsConfigurationVolumeBaselineIops => { /* ... */ },
///     ExportableVolumeField::RecommendationOptionsConfigurationVolumeBaselineThroughput => { /* ... */ },
///     ExportableVolumeField::RecommendationOptionsConfigurationVolumeBurstIops => { /* ... */ },
///     ExportableVolumeField::RecommendationOptionsConfigurationVolumeBurstThroughput => { /* ... */ },
///     ExportableVolumeField::RecommendationOptionsConfigurationVolumeSize => { /* ... */ },
///     ExportableVolumeField::RecommendationOptionsConfigurationVolumeType => { /* ... */ },
///     ExportableVolumeField::RecommendationOptionsEstimatedMonthlySavingsCurrency => { /* ... */ },
///     ExportableVolumeField::RecommendationOptionsEstimatedMonthlySavingsValue => { /* ... */ },
///     ExportableVolumeField::RecommendationOptionsMonthlyPrice => { /* ... */ },
///     ExportableVolumeField::RecommendationOptionsPerformanceRisk => { /* ... */ },
///     ExportableVolumeField::RecommendationOptionsSavingsOpportunityPercentage => { /* ... */ },
///     ExportableVolumeField::UtilizationMetricsVolumeReadBytesPerSecondMaximum => { /* ... */ },
///     ExportableVolumeField::UtilizationMetricsVolumeReadOpsPerSecondMaximum => { /* ... */ },
///     ExportableVolumeField::UtilizationMetricsVolumeWriteBytesPerSecondMaximum => { /* ... */ },
///     ExportableVolumeField::UtilizationMetricsVolumeWriteOpsPerSecondMaximum => { /* ... */ },
///     ExportableVolumeField::VolumeArn => { /* ... */ },
///     other @ _ if other.as_str() == "NewFeature" => { /* handles a case for `NewFeature` */ },
///     _ => { /* ... */ },
/// }
/// ```
/// The above code demonstrates that when `exportablevolumefield` represents
/// `NewFeature`, the execution path will lead to the second last match arm,
/// even though the enum does not contain a variant `ExportableVolumeField::NewFeature`
/// in the current version of SDK. The reason is that the variable `other`,
/// created by the `@` operator, is bound to
/// `ExportableVolumeField::Unknown(UnknownVariantValue("NewFeature".to_owned()))`
/// and calling `as_str` on it yields `"NewFeature"`.
/// This match expression is forward-compatible when executed with a newer
/// version of SDK where the variant `ExportableVolumeField::NewFeature` is defined.
/// Specifically, when `exportablevolumefield` represents `NewFeature`,
/// the execution path will hit the second last match arm as before by virtue of
/// calling `as_str` on `ExportableVolumeField::NewFeature` also yielding `"NewFeature"`.
///
/// Explicitly matching on the `Unknown` variant should
/// be avoided for two reasons:
/// - The inner data `UnknownVariantValue` is opaque, and no further information can be extracted.
/// - It might inadvertently shadow other intended match arms.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(
    std::clone::Clone,
    std::cmp::Eq,
    std::cmp::Ord,
    std::cmp::PartialEq,
    std::cmp::PartialOrd,
    std::fmt::Debug,
    std::hash::Hash,
)]
pub enum ExportableVolumeField {
    #[allow(missing_docs)] // documentation missing in model
    AccountId,
    #[allow(missing_docs)] // documentation missing in model
    CurrentConfigurationVolumeBaselineIops,
    #[allow(missing_docs)] // documentation missing in model
    CurrentConfigurationVolumeBaselineThroughput,
    #[allow(missing_docs)] // documentation missing in model
    CurrentConfigurationVolumeBurstIops,
    #[allow(missing_docs)] // documentation missing in model
    CurrentConfigurationVolumeBurstThroughput,
    #[allow(missing_docs)] // documentation missing in model
    CurrentConfigurationVolumeSize,
    #[allow(missing_docs)] // documentation missing in model
    CurrentConfigurationVolumeType,
    #[allow(missing_docs)] // documentation missing in model
    CurrentMonthlyPrice,
    #[allow(missing_docs)] // documentation missing in model
    CurrentPerformanceRisk,
    #[allow(missing_docs)] // documentation missing in model
    Finding,
    #[allow(missing_docs)] // documentation missing in model
    LastRefreshTimestamp,
    #[allow(missing_docs)] // documentation missing in model
    LookbackPeriodInDays,
    #[allow(missing_docs)] // documentation missing in model
    RecommendationOptionsConfigurationVolumeBaselineIops,
    #[allow(missing_docs)] // documentation missing in model
    RecommendationOptionsConfigurationVolumeBaselineThroughput,
    #[allow(missing_docs)] // documentation missing in model
    RecommendationOptionsConfigurationVolumeBurstIops,
    #[allow(missing_docs)] // documentation missing in model
    RecommendationOptionsConfigurationVolumeBurstThroughput,
    #[allow(missing_docs)] // documentation missing in model
    RecommendationOptionsConfigurationVolumeSize,
    #[allow(missing_docs)] // documentation missing in model
    RecommendationOptionsConfigurationVolumeType,
    #[allow(missing_docs)] // documentation missing in model
    RecommendationOptionsEstimatedMonthlySavingsCurrency,
    #[allow(missing_docs)] // documentation missing in model
    RecommendationOptionsEstimatedMonthlySavingsValue,
    #[allow(missing_docs)] // documentation missing in model
    RecommendationOptionsMonthlyPrice,
    #[allow(missing_docs)] // documentation missing in model
    RecommendationOptionsPerformanceRisk,
    #[allow(missing_docs)] // documentation missing in model
    RecommendationOptionsSavingsOpportunityPercentage,
    #[allow(missing_docs)] // documentation missing in model
    UtilizationMetricsVolumeReadBytesPerSecondMaximum,
    #[allow(missing_docs)] // documentation missing in model
    UtilizationMetricsVolumeReadOpsPerSecondMaximum,
    #[allow(missing_docs)] // documentation missing in model
    UtilizationMetricsVolumeWriteBytesPerSecondMaximum,
    #[allow(missing_docs)] // documentation missing in model
    UtilizationMetricsVolumeWriteOpsPerSecondMaximum,
    #[allow(missing_docs)] // documentation missing in model
    VolumeArn,
    /// `Unknown` contains new variants that have been added since this code was generated.
    Unknown(crate::primitives::UnknownVariantValue),
}
impl std::convert::From<&str> for ExportableVolumeField {
    fn from(s: &str) -> Self {
        match s {
            "AccountId" => ExportableVolumeField::AccountId,
            "CurrentConfigurationVolumeBaselineIOPS" => {
                ExportableVolumeField::CurrentConfigurationVolumeBaselineIops
            }
            "CurrentConfigurationVolumeBaselineThroughput" => {
                ExportableVolumeField::CurrentConfigurationVolumeBaselineThroughput
            }
            "CurrentConfigurationVolumeBurstIOPS" => {
                ExportableVolumeField::CurrentConfigurationVolumeBurstIops
            }
            "CurrentConfigurationVolumeBurstThroughput" => {
                ExportableVolumeField::CurrentConfigurationVolumeBurstThroughput
            }
            "CurrentConfigurationVolumeSize" => {
                ExportableVolumeField::CurrentConfigurationVolumeSize
            }
            "CurrentConfigurationVolumeType" => {
                ExportableVolumeField::CurrentConfigurationVolumeType
            }
            "CurrentMonthlyPrice" => ExportableVolumeField::CurrentMonthlyPrice,
            "CurrentPerformanceRisk" => ExportableVolumeField::CurrentPerformanceRisk,
            "Finding" => ExportableVolumeField::Finding,
            "LastRefreshTimestamp" => ExportableVolumeField::LastRefreshTimestamp,
            "LookbackPeriodInDays" => ExportableVolumeField::LookbackPeriodInDays,
            "RecommendationOptionsConfigurationVolumeBaselineIOPS" => {
                ExportableVolumeField::RecommendationOptionsConfigurationVolumeBaselineIops
            }
            "RecommendationOptionsConfigurationVolumeBaselineThroughput" => {
                ExportableVolumeField::RecommendationOptionsConfigurationVolumeBaselineThroughput
            }
            "RecommendationOptionsConfigurationVolumeBurstIOPS" => {
                ExportableVolumeField::RecommendationOptionsConfigurationVolumeBurstIops
            }
            "RecommendationOptionsConfigurationVolumeBurstThroughput" => {
                ExportableVolumeField::RecommendationOptionsConfigurationVolumeBurstThroughput
            }
            "RecommendationOptionsConfigurationVolumeSize" => {
                ExportableVolumeField::RecommendationOptionsConfigurationVolumeSize
            }
            "RecommendationOptionsConfigurationVolumeType" => {
                ExportableVolumeField::RecommendationOptionsConfigurationVolumeType
            }
            "RecommendationOptionsEstimatedMonthlySavingsCurrency" => {
                ExportableVolumeField::RecommendationOptionsEstimatedMonthlySavingsCurrency
            }
            "RecommendationOptionsEstimatedMonthlySavingsValue" => {
                ExportableVolumeField::RecommendationOptionsEstimatedMonthlySavingsValue
            }
            "RecommendationOptionsMonthlyPrice" => {
                ExportableVolumeField::RecommendationOptionsMonthlyPrice
            }
            "RecommendationOptionsPerformanceRisk" => {
                ExportableVolumeField::RecommendationOptionsPerformanceRisk
            }
            "RecommendationOptionsSavingsOpportunityPercentage" => {
                ExportableVolumeField::RecommendationOptionsSavingsOpportunityPercentage
            }
            "UtilizationMetricsVolumeReadBytesPerSecondMaximum" => {
                ExportableVolumeField::UtilizationMetricsVolumeReadBytesPerSecondMaximum
            }
            "UtilizationMetricsVolumeReadOpsPerSecondMaximum" => {
                ExportableVolumeField::UtilizationMetricsVolumeReadOpsPerSecondMaximum
            }
            "UtilizationMetricsVolumeWriteBytesPerSecondMaximum" => {
                ExportableVolumeField::UtilizationMetricsVolumeWriteBytesPerSecondMaximum
            }
            "UtilizationMetricsVolumeWriteOpsPerSecondMaximum" => {
                ExportableVolumeField::UtilizationMetricsVolumeWriteOpsPerSecondMaximum
            }
            "VolumeArn" => ExportableVolumeField::VolumeArn,
            other => ExportableVolumeField::Unknown(crate::primitives::UnknownVariantValue(
                other.to_owned(),
            )),
        }
    }
}
impl std::str::FromStr for ExportableVolumeField {
    type Err = std::convert::Infallible;

    fn from_str(s: &str) -> std::result::Result<Self, Self::Err> {
        Ok(ExportableVolumeField::from(s))
    }
}
impl ExportableVolumeField {
    /// Returns the `&str` value of the enum member.
    pub fn as_str(&self) -> &str {
        match self {
            ExportableVolumeField::AccountId => "AccountId",
            ExportableVolumeField::CurrentConfigurationVolumeBaselineIops => {
                "CurrentConfigurationVolumeBaselineIOPS"
            }
            ExportableVolumeField::CurrentConfigurationVolumeBaselineThroughput => {
                "CurrentConfigurationVolumeBaselineThroughput"
            }
            ExportableVolumeField::CurrentConfigurationVolumeBurstIops => {
                "CurrentConfigurationVolumeBurstIOPS"
            }
            ExportableVolumeField::CurrentConfigurationVolumeBurstThroughput => {
                "CurrentConfigurationVolumeBurstThroughput"
            }
            ExportableVolumeField::CurrentConfigurationVolumeSize => {
                "CurrentConfigurationVolumeSize"
            }
            ExportableVolumeField::CurrentConfigurationVolumeType => {
                "CurrentConfigurationVolumeType"
            }
            ExportableVolumeField::CurrentMonthlyPrice => "CurrentMonthlyPrice",
            ExportableVolumeField::CurrentPerformanceRisk => "CurrentPerformanceRisk",
            ExportableVolumeField::Finding => "Finding",
            ExportableVolumeField::LastRefreshTimestamp => "LastRefreshTimestamp",
            ExportableVolumeField::LookbackPeriodInDays => "LookbackPeriodInDays",
            ExportableVolumeField::RecommendationOptionsConfigurationVolumeBaselineIops => {
                "RecommendationOptionsConfigurationVolumeBaselineIOPS"
            }
            ExportableVolumeField::RecommendationOptionsConfigurationVolumeBaselineThroughput => {
                "RecommendationOptionsConfigurationVolumeBaselineThroughput"
            }
            ExportableVolumeField::RecommendationOptionsConfigurationVolumeBurstIops => {
                "RecommendationOptionsConfigurationVolumeBurstIOPS"
            }
            ExportableVolumeField::RecommendationOptionsConfigurationVolumeBurstThroughput => {
                "RecommendationOptionsConfigurationVolumeBurstThroughput"
            }
            ExportableVolumeField::RecommendationOptionsConfigurationVolumeSize => {
                "RecommendationOptionsConfigurationVolumeSize"
            }
            ExportableVolumeField::RecommendationOptionsConfigurationVolumeType => {
                "RecommendationOptionsConfigurationVolumeType"
            }
            ExportableVolumeField::RecommendationOptionsEstimatedMonthlySavingsCurrency => {
                "RecommendationOptionsEstimatedMonthlySavingsCurrency"
            }
            ExportableVolumeField::RecommendationOptionsEstimatedMonthlySavingsValue => {
                "RecommendationOptionsEstimatedMonthlySavingsValue"
            }
            ExportableVolumeField::RecommendationOptionsMonthlyPrice => {
                "RecommendationOptionsMonthlyPrice"
            }
            ExportableVolumeField::RecommendationOptionsPerformanceRisk => {
                "RecommendationOptionsPerformanceRisk"
            }
            ExportableVolumeField::RecommendationOptionsSavingsOpportunityPercentage => {
                "RecommendationOptionsSavingsOpportunityPercentage"
            }
            ExportableVolumeField::UtilizationMetricsVolumeReadBytesPerSecondMaximum => {
                "UtilizationMetricsVolumeReadBytesPerSecondMaximum"
            }
            ExportableVolumeField::UtilizationMetricsVolumeReadOpsPerSecondMaximum => {
                "UtilizationMetricsVolumeReadOpsPerSecondMaximum"
            }
            ExportableVolumeField::UtilizationMetricsVolumeWriteBytesPerSecondMaximum => {
                "UtilizationMetricsVolumeWriteBytesPerSecondMaximum"
            }
            ExportableVolumeField::UtilizationMetricsVolumeWriteOpsPerSecondMaximum => {
                "UtilizationMetricsVolumeWriteOpsPerSecondMaximum"
            }
            ExportableVolumeField::VolumeArn => "VolumeArn",
            ExportableVolumeField::Unknown(value) => value.as_str(),
        }
    }
    /// Returns all the `&str` representations of the enum members.
    pub const fn values() -> &'static [&'static str] {
        &[
            "AccountId",
            "CurrentConfigurationVolumeBaselineIOPS",
            "CurrentConfigurationVolumeBaselineThroughput",
            "CurrentConfigurationVolumeBurstIOPS",
            "CurrentConfigurationVolumeBurstThroughput",
            "CurrentConfigurationVolumeSize",
            "CurrentConfigurationVolumeType",
            "CurrentMonthlyPrice",
            "CurrentPerformanceRisk",
            "Finding",
            "LastRefreshTimestamp",
            "LookbackPeriodInDays",
            "RecommendationOptionsConfigurationVolumeBaselineIOPS",
            "RecommendationOptionsConfigurationVolumeBaselineThroughput",
            "RecommendationOptionsConfigurationVolumeBurstIOPS",
            "RecommendationOptionsConfigurationVolumeBurstThroughput",
            "RecommendationOptionsConfigurationVolumeSize",
            "RecommendationOptionsConfigurationVolumeType",
            "RecommendationOptionsEstimatedMonthlySavingsCurrency",
            "RecommendationOptionsEstimatedMonthlySavingsValue",
            "RecommendationOptionsMonthlyPrice",
            "RecommendationOptionsPerformanceRisk",
            "RecommendationOptionsSavingsOpportunityPercentage",
            "UtilizationMetricsVolumeReadBytesPerSecondMaximum",
            "UtilizationMetricsVolumeReadOpsPerSecondMaximum",
            "UtilizationMetricsVolumeWriteBytesPerSecondMaximum",
            "UtilizationMetricsVolumeWriteOpsPerSecondMaximum",
            "VolumeArn",
        ]
    }
}
impl AsRef<str> for ExportableVolumeField {
    fn as_ref(&self) -> &str {
        self.as_str()
    }
}
