// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p> The memory size configurations of a container. </p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct MemorySizeConfiguration {
    /// <p> The amount of memory in the container. </p>
    #[doc(hidden)]
    pub memory: std::option::Option<i32>,
    /// <p> The limit of memory reserve for the container. </p>
    #[doc(hidden)]
    pub memory_reservation: std::option::Option<i32>,
}
impl MemorySizeConfiguration {
    /// <p> The amount of memory in the container. </p>
    pub fn memory(&self) -> std::option::Option<i32> {
        self.memory
    }
    /// <p> The limit of memory reserve for the container. </p>
    pub fn memory_reservation(&self) -> std::option::Option<i32> {
        self.memory_reservation
    }
}
impl MemorySizeConfiguration {
    /// Creates a new builder-style object to manufacture [`MemorySizeConfiguration`](crate::types::MemorySizeConfiguration).
    pub fn builder() -> crate::types::builders::MemorySizeConfigurationBuilder {
        crate::types::builders::MemorySizeConfigurationBuilder::default()
    }
}

/// A builder for [`MemorySizeConfiguration`](crate::types::MemorySizeConfiguration).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct MemorySizeConfigurationBuilder {
    pub(crate) memory: std::option::Option<i32>,
    pub(crate) memory_reservation: std::option::Option<i32>,
}
impl MemorySizeConfigurationBuilder {
    /// <p> The amount of memory in the container. </p>
    pub fn memory(mut self, input: i32) -> Self {
        self.memory = Some(input);
        self
    }
    /// <p> The amount of memory in the container. </p>
    pub fn set_memory(mut self, input: std::option::Option<i32>) -> Self {
        self.memory = input;
        self
    }
    /// <p> The limit of memory reserve for the container. </p>
    pub fn memory_reservation(mut self, input: i32) -> Self {
        self.memory_reservation = Some(input);
        self
    }
    /// <p> The limit of memory reserve for the container. </p>
    pub fn set_memory_reservation(mut self, input: std::option::Option<i32>) -> Self {
        self.memory_reservation = input;
        self
    }
    /// Consumes the builder and constructs a [`MemorySizeConfiguration`](crate::types::MemorySizeConfiguration).
    pub fn build(self) -> crate::types::MemorySizeConfiguration {
        crate::types::MemorySizeConfiguration {
            memory: self.memory,
            memory_reservation: self.memory_reservation,
        }
    }
}
