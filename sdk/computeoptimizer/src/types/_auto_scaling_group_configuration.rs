// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Describes the configuration of an Auto Scaling group.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AutoScalingGroupConfiguration {
    /// <p>The desired capacity, or number of instances, for the Auto Scaling group.</p>
    #[doc(hidden)]
    pub desired_capacity: i32,
    /// <p>The minimum size, or minimum number of instances, for the Auto Scaling group.</p>
    #[doc(hidden)]
    pub min_size: i32,
    /// <p>The maximum size, or maximum number of instances, for the Auto Scaling group.</p>
    #[doc(hidden)]
    pub max_size: i32,
    /// <p>The instance type for the Auto Scaling group.</p>
    #[doc(hidden)]
    pub instance_type: std::option::Option<std::string::String>,
}
impl AutoScalingGroupConfiguration {
    /// <p>The desired capacity, or number of instances, for the Auto Scaling group.</p>
    pub fn desired_capacity(&self) -> i32 {
        self.desired_capacity
    }
    /// <p>The minimum size, or minimum number of instances, for the Auto Scaling group.</p>
    pub fn min_size(&self) -> i32 {
        self.min_size
    }
    /// <p>The maximum size, or maximum number of instances, for the Auto Scaling group.</p>
    pub fn max_size(&self) -> i32 {
        self.max_size
    }
    /// <p>The instance type for the Auto Scaling group.</p>
    pub fn instance_type(&self) -> std::option::Option<&str> {
        self.instance_type.as_deref()
    }
}
impl AutoScalingGroupConfiguration {
    /// Creates a new builder-style object to manufacture [`AutoScalingGroupConfiguration`](crate::types::AutoScalingGroupConfiguration).
    pub fn builder() -> crate::types::builders::AutoScalingGroupConfigurationBuilder {
        crate::types::builders::AutoScalingGroupConfigurationBuilder::default()
    }
}

/// A builder for [`AutoScalingGroupConfiguration`](crate::types::AutoScalingGroupConfiguration).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AutoScalingGroupConfigurationBuilder {
    pub(crate) desired_capacity: std::option::Option<i32>,
    pub(crate) min_size: std::option::Option<i32>,
    pub(crate) max_size: std::option::Option<i32>,
    pub(crate) instance_type: std::option::Option<std::string::String>,
}
impl AutoScalingGroupConfigurationBuilder {
    /// <p>The desired capacity, or number of instances, for the Auto Scaling group.</p>
    pub fn desired_capacity(mut self, input: i32) -> Self {
        self.desired_capacity = Some(input);
        self
    }
    /// <p>The desired capacity, or number of instances, for the Auto Scaling group.</p>
    pub fn set_desired_capacity(mut self, input: std::option::Option<i32>) -> Self {
        self.desired_capacity = input;
        self
    }
    /// <p>The minimum size, or minimum number of instances, for the Auto Scaling group.</p>
    pub fn min_size(mut self, input: i32) -> Self {
        self.min_size = Some(input);
        self
    }
    /// <p>The minimum size, or minimum number of instances, for the Auto Scaling group.</p>
    pub fn set_min_size(mut self, input: std::option::Option<i32>) -> Self {
        self.min_size = input;
        self
    }
    /// <p>The maximum size, or maximum number of instances, for the Auto Scaling group.</p>
    pub fn max_size(mut self, input: i32) -> Self {
        self.max_size = Some(input);
        self
    }
    /// <p>The maximum size, or maximum number of instances, for the Auto Scaling group.</p>
    pub fn set_max_size(mut self, input: std::option::Option<i32>) -> Self {
        self.max_size = input;
        self
    }
    /// <p>The instance type for the Auto Scaling group.</p>
    pub fn instance_type(mut self, input: impl Into<std::string::String>) -> Self {
        self.instance_type = Some(input.into());
        self
    }
    /// <p>The instance type for the Auto Scaling group.</p>
    pub fn set_instance_type(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.instance_type = input;
        self
    }
    /// Consumes the builder and constructs a [`AutoScalingGroupConfiguration`](crate::types::AutoScalingGroupConfiguration).
    pub fn build(self) -> crate::types::AutoScalingGroupConfiguration {
        crate::types::AutoScalingGroupConfiguration {
            desired_capacity: self.desired_capacity.unwrap_or_default(),
            min_size: self.min_size.unwrap_or_default(),
            max_size: self.max_size.unwrap_or_default(),
            instance_type: self.instance_type,
        }
    }
}
