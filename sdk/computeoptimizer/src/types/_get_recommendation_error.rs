// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Describes an error experienced when getting recommendations.</p>
/// <p>For example, an error is returned if you request recommendations for an unsupported Auto Scaling group, or if you request recommendations for an instance of an unsupported instance family.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GetRecommendationError {
    /// <p>The ID of the error.</p>
    #[doc(hidden)]
    pub identifier: std::option::Option<std::string::String>,
    /// <p>The error code.</p>
    #[doc(hidden)]
    pub code: std::option::Option<std::string::String>,
    /// <p>The message, or reason, for the error.</p>
    #[doc(hidden)]
    pub message: std::option::Option<std::string::String>,
}
impl GetRecommendationError {
    /// <p>The ID of the error.</p>
    pub fn identifier(&self) -> std::option::Option<&str> {
        self.identifier.as_deref()
    }
    /// <p>The error code.</p>
    pub fn code(&self) -> std::option::Option<&str> {
        self.code.as_deref()
    }
    /// <p>The message, or reason, for the error.</p>
    pub fn message(&self) -> std::option::Option<&str> {
        self.message.as_deref()
    }
}
impl GetRecommendationError {
    /// Creates a new builder-style object to manufacture [`GetRecommendationError`](crate::types::GetRecommendationError).
    pub fn builder() -> crate::types::builders::GetRecommendationErrorBuilder {
        crate::types::builders::GetRecommendationErrorBuilder::default()
    }
}

/// A builder for [`GetRecommendationError`](crate::types::GetRecommendationError).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct GetRecommendationErrorBuilder {
    pub(crate) identifier: std::option::Option<std::string::String>,
    pub(crate) code: std::option::Option<std::string::String>,
    pub(crate) message: std::option::Option<std::string::String>,
}
impl GetRecommendationErrorBuilder {
    /// <p>The ID of the error.</p>
    pub fn identifier(mut self, input: impl Into<std::string::String>) -> Self {
        self.identifier = Some(input.into());
        self
    }
    /// <p>The ID of the error.</p>
    pub fn set_identifier(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.identifier = input;
        self
    }
    /// <p>The error code.</p>
    pub fn code(mut self, input: impl Into<std::string::String>) -> Self {
        self.code = Some(input.into());
        self
    }
    /// <p>The error code.</p>
    pub fn set_code(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.code = input;
        self
    }
    /// <p>The message, or reason, for the error.</p>
    pub fn message(mut self, input: impl Into<std::string::String>) -> Self {
        self.message = Some(input.into());
        self
    }
    /// <p>The message, or reason, for the error.</p>
    pub fn set_message(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.message = input;
        self
    }
    /// Consumes the builder and constructs a [`GetRecommendationError`](crate::types::GetRecommendationError).
    pub fn build(self) -> crate::types::GetRecommendationError {
        crate::types::GetRecommendationError {
            identifier: self.identifier,
            code: self.code,
            message: self.message,
        }
    }
}
