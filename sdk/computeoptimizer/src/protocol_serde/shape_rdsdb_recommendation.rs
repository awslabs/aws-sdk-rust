// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) fn de_rdsdb_recommendation<'a, I>(
    tokens: &mut ::std::iter::Peekable<I>,
) -> ::std::result::Result<Option<crate::types::RdsdbRecommendation>, ::aws_smithy_json::deserialize::error::DeserializeError>
where
    I: Iterator<Item = Result<::aws_smithy_json::deserialize::Token<'a>, ::aws_smithy_json::deserialize::error::DeserializeError>>,
{
    match tokens.next().transpose()? {
        Some(::aws_smithy_json::deserialize::Token::ValueNull { .. }) => Ok(None),
        Some(::aws_smithy_json::deserialize::Token::StartObject { .. }) => {
            #[allow(unused_mut)]
            let mut builder = crate::types::builders::RdsdbRecommendationBuilder::default();
            loop {
                match tokens.next().transpose()? {
                    Some(::aws_smithy_json::deserialize::Token::EndObject { .. }) => break,
                    Some(::aws_smithy_json::deserialize::Token::ObjectKey { key, .. }) => match key.to_unescaped()?.as_ref() {
                        "resourceArn" => {
                            builder = builder.set_resource_arn(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                            );
                        }
                        "accountId" => {
                            builder = builder.set_account_id(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                            );
                        }
                        "engine" => {
                            builder = builder.set_engine(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                            );
                        }
                        "engineVersion" => {
                            builder = builder.set_engine_version(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                            );
                        }
                        "promotionTier" => {
                            builder = builder.set_promotion_tier(
                                ::aws_smithy_json::deserialize::token::expect_number_or_null(tokens.next())?
                                    .map(i32::try_from)
                                    .transpose()?,
                            );
                        }
                        "currentDBInstanceClass" => {
                            builder = builder.set_current_db_instance_class(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                            );
                        }
                        "currentStorageConfiguration" => {
                            builder = builder.set_current_storage_configuration(
                                crate::protocol_serde::shape_db_storage_configuration::de_db_storage_configuration(tokens)?,
                            );
                        }
                        "dbClusterIdentifier" => {
                            builder = builder.set_db_cluster_identifier(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                            );
                        }
                        "idle" => {
                            builder = builder.set_idle(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| crate::types::Idle::from(u.as_ref())))
                                    .transpose()?,
                            );
                        }
                        "instanceFinding" => {
                            builder = builder.set_instance_finding(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| crate::types::RdsInstanceFinding::from(u.as_ref())))
                                    .transpose()?,
                            );
                        }
                        "storageFinding" => {
                            builder = builder.set_storage_finding(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| crate::types::RdsStorageFinding::from(u.as_ref())))
                                    .transpose()?,
                            );
                        }
                        "instanceFindingReasonCodes" => {
                            builder = builder.set_instance_finding_reason_codes(
                                crate::protocol_serde::shape_rds_instance_finding_reason_codes::de_rds_instance_finding_reason_codes(tokens)?,
                            );
                        }
                        "currentInstancePerformanceRisk" => {
                            builder = builder.set_current_instance_performance_risk(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| {
                                        s.to_unescaped()
                                            .map(|u| crate::types::RdsCurrentInstancePerformanceRisk::from(u.as_ref()))
                                    })
                                    .transpose()?,
                            );
                        }
                        "currentStorageEstimatedMonthlyVolumeIOPsCostVariation" => {
                            builder = builder.set_current_storage_estimated_monthly_volume_iops_cost_variation(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| {
                                        s.to_unescaped()
                                            .map(|u| crate::types::RdsEstimatedMonthlyVolumeIoPsCostVariation::from(u.as_ref()))
                                    })
                                    .transpose()?,
                            );
                        }
                        "storageFindingReasonCodes" => {
                            builder = builder.set_storage_finding_reason_codes(
                                crate::protocol_serde::shape_rds_storage_finding_reason_codes::de_rds_storage_finding_reason_codes(tokens)?,
                            );
                        }
                        "instanceRecommendationOptions" => {
                            builder = builder.set_instance_recommendation_options(
                                crate::protocol_serde::shape_rdsdb_instance_recommendation_options::de_rdsdb_instance_recommendation_options(tokens)?,
                            );
                        }
                        "storageRecommendationOptions" => {
                            builder = builder.set_storage_recommendation_options(
                                crate::protocol_serde::shape_rdsdb_storage_recommendation_options::de_rdsdb_storage_recommendation_options(tokens)?,
                            );
                        }
                        "utilizationMetrics" => {
                            builder = builder.set_utilization_metrics(
                                crate::protocol_serde::shape_rdsdb_utilization_metrics::de_rdsdb_utilization_metrics(tokens)?,
                            );
                        }
                        "effectiveRecommendationPreferences" => {
                            builder = builder.set_effective_recommendation_preferences(
                                crate::protocol_serde::shape_rds_effective_recommendation_preferences::de_rds_effective_recommendation_preferences(
                                    tokens,
                                )?,
                            );
                        }
                        "lookbackPeriodInDays" => {
                            builder = builder.set_lookback_period_in_days(
                                ::aws_smithy_json::deserialize::token::expect_number_or_null(tokens.next())?.map(|v| v.to_f64_lossy()),
                            );
                        }
                        "lastRefreshTimestamp" => {
                            builder = builder.set_last_refresh_timestamp(::aws_smithy_json::deserialize::token::expect_timestamp_or_null(
                                tokens.next(),
                                ::aws_smithy_types::date_time::Format::EpochSeconds,
                            )?);
                        }
                        "tags" => {
                            builder = builder.set_tags(crate::protocol_serde::shape_tags::de_tags(tokens)?);
                        }
                        _ => ::aws_smithy_json::deserialize::token::skip_value(tokens)?,
                    },
                    other => {
                        return Err(::aws_smithy_json::deserialize::error::DeserializeError::custom(format!(
                            "expected object key or end object, found: {other:?}"
                        )))
                    }
                }
            }
            Ok(Some(builder.build()))
        }
        _ => Err(::aws_smithy_json::deserialize::error::DeserializeError::custom(
            "expected start object or null",
        )),
    }
}
