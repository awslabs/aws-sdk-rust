// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GetAutoScalingGroupRecommendationsInput {
    /// <p>The ID of the Amazon Web Services account for which to return Auto Scaling group recommendations.</p>
    /// <p>If your account is the management account of an organization, use this parameter to specify the member account for which you want to return Auto Scaling group recommendations.</p>
    /// <p>Only one account ID can be specified per request.</p>
    #[doc(hidden)]
    pub account_ids: std::option::Option<std::vec::Vec<std::string::String>>,
    /// <p>The Amazon Resource Name (ARN) of the Auto Scaling groups for which to return recommendations.</p>
    #[doc(hidden)]
    pub auto_scaling_group_arns: std::option::Option<std::vec::Vec<std::string::String>>,
    /// <p>The token to advance to the next page of Auto Scaling group recommendations.</p>
    #[doc(hidden)]
    pub next_token: std::option::Option<std::string::String>,
    /// <p>The maximum number of Auto Scaling group recommendations to return with a single request.</p>
    /// <p>To retrieve the remaining results, make another request with the returned <code>nextToken</code> value.</p>
    #[doc(hidden)]
    pub max_results: std::option::Option<i32>,
    /// <p>An array of objects to specify a filter that returns a more specific list of Auto Scaling group recommendations.</p>
    #[doc(hidden)]
    pub filters: std::option::Option<std::vec::Vec<crate::types::Filter>>,
    /// <p>An object to specify the preferences for the Auto Scaling group recommendations to return in the response.</p>
    #[doc(hidden)]
    pub recommendation_preferences: std::option::Option<crate::types::RecommendationPreferences>,
}
impl GetAutoScalingGroupRecommendationsInput {
    /// <p>The ID of the Amazon Web Services account for which to return Auto Scaling group recommendations.</p>
    /// <p>If your account is the management account of an organization, use this parameter to specify the member account for which you want to return Auto Scaling group recommendations.</p>
    /// <p>Only one account ID can be specified per request.</p>
    pub fn account_ids(&self) -> std::option::Option<&[std::string::String]> {
        self.account_ids.as_deref()
    }
    /// <p>The Amazon Resource Name (ARN) of the Auto Scaling groups for which to return recommendations.</p>
    pub fn auto_scaling_group_arns(&self) -> std::option::Option<&[std::string::String]> {
        self.auto_scaling_group_arns.as_deref()
    }
    /// <p>The token to advance to the next page of Auto Scaling group recommendations.</p>
    pub fn next_token(&self) -> std::option::Option<&str> {
        self.next_token.as_deref()
    }
    /// <p>The maximum number of Auto Scaling group recommendations to return with a single request.</p>
    /// <p>To retrieve the remaining results, make another request with the returned <code>nextToken</code> value.</p>
    pub fn max_results(&self) -> std::option::Option<i32> {
        self.max_results
    }
    /// <p>An array of objects to specify a filter that returns a more specific list of Auto Scaling group recommendations.</p>
    pub fn filters(&self) -> std::option::Option<&[crate::types::Filter]> {
        self.filters.as_deref()
    }
    /// <p>An object to specify the preferences for the Auto Scaling group recommendations to return in the response.</p>
    pub fn recommendation_preferences(
        &self,
    ) -> std::option::Option<&crate::types::RecommendationPreferences> {
        self.recommendation_preferences.as_ref()
    }
}
impl GetAutoScalingGroupRecommendationsInput {
    /// Creates a new builder-style object to manufacture [`GetAutoScalingGroupRecommendationsInput`](crate::operation::get_auto_scaling_group_recommendations::GetAutoScalingGroupRecommendationsInput).
    pub fn builder() -> crate::operation::get_auto_scaling_group_recommendations::builders::GetAutoScalingGroupRecommendationsInputBuilder{
        crate::operation::get_auto_scaling_group_recommendations::builders::GetAutoScalingGroupRecommendationsInputBuilder::default()
    }
}

/// A builder for [`GetAutoScalingGroupRecommendationsInput`](crate::operation::get_auto_scaling_group_recommendations::GetAutoScalingGroupRecommendationsInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct GetAutoScalingGroupRecommendationsInputBuilder {
    pub(crate) account_ids: std::option::Option<std::vec::Vec<std::string::String>>,
    pub(crate) auto_scaling_group_arns: std::option::Option<std::vec::Vec<std::string::String>>,
    pub(crate) next_token: std::option::Option<std::string::String>,
    pub(crate) max_results: std::option::Option<i32>,
    pub(crate) filters: std::option::Option<std::vec::Vec<crate::types::Filter>>,
    pub(crate) recommendation_preferences:
        std::option::Option<crate::types::RecommendationPreferences>,
}
impl GetAutoScalingGroupRecommendationsInputBuilder {
    /// Appends an item to `account_ids`.
    ///
    /// To override the contents of this collection use [`set_account_ids`](Self::set_account_ids).
    ///
    /// <p>The ID of the Amazon Web Services account for which to return Auto Scaling group recommendations.</p>
    /// <p>If your account is the management account of an organization, use this parameter to specify the member account for which you want to return Auto Scaling group recommendations.</p>
    /// <p>Only one account ID can be specified per request.</p>
    pub fn account_ids(mut self, input: impl Into<std::string::String>) -> Self {
        let mut v = self.account_ids.unwrap_or_default();
        v.push(input.into());
        self.account_ids = Some(v);
        self
    }
    /// <p>The ID of the Amazon Web Services account for which to return Auto Scaling group recommendations.</p>
    /// <p>If your account is the management account of an organization, use this parameter to specify the member account for which you want to return Auto Scaling group recommendations.</p>
    /// <p>Only one account ID can be specified per request.</p>
    pub fn set_account_ids(
        mut self,
        input: std::option::Option<std::vec::Vec<std::string::String>>,
    ) -> Self {
        self.account_ids = input;
        self
    }
    /// Appends an item to `auto_scaling_group_arns`.
    ///
    /// To override the contents of this collection use [`set_auto_scaling_group_arns`](Self::set_auto_scaling_group_arns).
    ///
    /// <p>The Amazon Resource Name (ARN) of the Auto Scaling groups for which to return recommendations.</p>
    pub fn auto_scaling_group_arns(mut self, input: impl Into<std::string::String>) -> Self {
        let mut v = self.auto_scaling_group_arns.unwrap_or_default();
        v.push(input.into());
        self.auto_scaling_group_arns = Some(v);
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the Auto Scaling groups for which to return recommendations.</p>
    pub fn set_auto_scaling_group_arns(
        mut self,
        input: std::option::Option<std::vec::Vec<std::string::String>>,
    ) -> Self {
        self.auto_scaling_group_arns = input;
        self
    }
    /// <p>The token to advance to the next page of Auto Scaling group recommendations.</p>
    pub fn next_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.next_token = Some(input.into());
        self
    }
    /// <p>The token to advance to the next page of Auto Scaling group recommendations.</p>
    pub fn set_next_token(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// <p>The maximum number of Auto Scaling group recommendations to return with a single request.</p>
    /// <p>To retrieve the remaining results, make another request with the returned <code>nextToken</code> value.</p>
    pub fn max_results(mut self, input: i32) -> Self {
        self.max_results = Some(input);
        self
    }
    /// <p>The maximum number of Auto Scaling group recommendations to return with a single request.</p>
    /// <p>To retrieve the remaining results, make another request with the returned <code>nextToken</code> value.</p>
    pub fn set_max_results(mut self, input: std::option::Option<i32>) -> Self {
        self.max_results = input;
        self
    }
    /// Appends an item to `filters`.
    ///
    /// To override the contents of this collection use [`set_filters`](Self::set_filters).
    ///
    /// <p>An array of objects to specify a filter that returns a more specific list of Auto Scaling group recommendations.</p>
    pub fn filters(mut self, input: crate::types::Filter) -> Self {
        let mut v = self.filters.unwrap_or_default();
        v.push(input);
        self.filters = Some(v);
        self
    }
    /// <p>An array of objects to specify a filter that returns a more specific list of Auto Scaling group recommendations.</p>
    pub fn set_filters(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::Filter>>,
    ) -> Self {
        self.filters = input;
        self
    }
    /// <p>An object to specify the preferences for the Auto Scaling group recommendations to return in the response.</p>
    pub fn recommendation_preferences(
        mut self,
        input: crate::types::RecommendationPreferences,
    ) -> Self {
        self.recommendation_preferences = Some(input);
        self
    }
    /// <p>An object to specify the preferences for the Auto Scaling group recommendations to return in the response.</p>
    pub fn set_recommendation_preferences(
        mut self,
        input: std::option::Option<crate::types::RecommendationPreferences>,
    ) -> Self {
        self.recommendation_preferences = input;
        self
    }
    /// Consumes the builder and constructs a [`GetAutoScalingGroupRecommendationsInput`](crate::operation::get_auto_scaling_group_recommendations::GetAutoScalingGroupRecommendationsInput).
    pub fn build(self) -> Result<crate::operation::get_auto_scaling_group_recommendations::GetAutoScalingGroupRecommendationsInput, aws_smithy_http::operation::error::BuildError>{
        Ok(
            crate::operation::get_auto_scaling_group_recommendations::GetAutoScalingGroupRecommendationsInput {
                account_ids: self.account_ids
                ,
                auto_scaling_group_arns: self.auto_scaling_group_arns
                ,
                next_token: self.next_token
                ,
                max_results: self.max_results
                ,
                filters: self.filters
                ,
                recommendation_preferences: self.recommendation_preferences
                ,
            }
        )
    }
}
