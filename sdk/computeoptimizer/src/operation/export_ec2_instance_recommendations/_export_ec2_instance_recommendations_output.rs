// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ExportEc2InstanceRecommendationsOutput {
    /// <p>The identification number of the export job.</p>
    /// <p>Use the <code>DescribeRecommendationExportJobs</code> action, and specify the job ID to view the status of an export job.</p>
    #[doc(hidden)]
    pub job_id: std::option::Option<std::string::String>,
    /// <p>An object that describes the destination Amazon S3 bucket of a recommendations export file.</p>
    #[doc(hidden)]
    pub s3_destination: std::option::Option<crate::types::S3Destination>,
    _request_id: Option<String>,
}
impl ExportEc2InstanceRecommendationsOutput {
    /// <p>The identification number of the export job.</p>
    /// <p>Use the <code>DescribeRecommendationExportJobs</code> action, and specify the job ID to view the status of an export job.</p>
    pub fn job_id(&self) -> std::option::Option<&str> {
        self.job_id.as_deref()
    }
    /// <p>An object that describes the destination Amazon S3 bucket of a recommendations export file.</p>
    pub fn s3_destination(&self) -> std::option::Option<&crate::types::S3Destination> {
        self.s3_destination.as_ref()
    }
}
impl aws_http::request_id::RequestId for ExportEc2InstanceRecommendationsOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl ExportEc2InstanceRecommendationsOutput {
    /// Creates a new builder-style object to manufacture [`ExportEc2InstanceRecommendationsOutput`](crate::operation::export_ec2_instance_recommendations::ExportEc2InstanceRecommendationsOutput).
    pub fn builder() -> crate::operation::export_ec2_instance_recommendations::builders::ExportEc2InstanceRecommendationsOutputBuilder{
        crate::operation::export_ec2_instance_recommendations::builders::ExportEc2InstanceRecommendationsOutputBuilder::default()
    }
}

/// A builder for [`ExportEc2InstanceRecommendationsOutput`](crate::operation::export_ec2_instance_recommendations::ExportEc2InstanceRecommendationsOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ExportEc2InstanceRecommendationsOutputBuilder {
    pub(crate) job_id: std::option::Option<std::string::String>,
    pub(crate) s3_destination: std::option::Option<crate::types::S3Destination>,
    _request_id: Option<String>,
}
impl ExportEc2InstanceRecommendationsOutputBuilder {
    /// <p>The identification number of the export job.</p>
    /// <p>Use the <code>DescribeRecommendationExportJobs</code> action, and specify the job ID to view the status of an export job.</p>
    pub fn job_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.job_id = Some(input.into());
        self
    }
    /// <p>The identification number of the export job.</p>
    /// <p>Use the <code>DescribeRecommendationExportJobs</code> action, and specify the job ID to view the status of an export job.</p>
    pub fn set_job_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.job_id = input;
        self
    }
    /// <p>An object that describes the destination Amazon S3 bucket of a recommendations export file.</p>
    pub fn s3_destination(mut self, input: crate::types::S3Destination) -> Self {
        self.s3_destination = Some(input);
        self
    }
    /// <p>An object that describes the destination Amazon S3 bucket of a recommendations export file.</p>
    pub fn set_s3_destination(
        mut self,
        input: std::option::Option<crate::types::S3Destination>,
    ) -> Self {
        self.s3_destination = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`ExportEc2InstanceRecommendationsOutput`](crate::operation::export_ec2_instance_recommendations::ExportEc2InstanceRecommendationsOutput).
    pub fn build(
        self,
    ) -> crate::operation::export_ec2_instance_recommendations::ExportEc2InstanceRecommendationsOutput
    {
        crate::operation::export_ec2_instance_recommendations::ExportEc2InstanceRecommendationsOutput {
            job_id: self.job_id
            ,
            s3_destination: self.s3_destination
            ,
            _request_id: self._request_id,
        }
    }
}
