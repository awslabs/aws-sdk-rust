// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub use crate::operation::delete_recommendation_preferences::_delete_recommendation_preferences_output::DeleteRecommendationPreferencesOutputBuilder;

pub use crate::operation::delete_recommendation_preferences::_delete_recommendation_preferences_input::DeleteRecommendationPreferencesInputBuilder;

/// Fluent builder constructing a request to `DeleteRecommendationPreferences`.
///
/// <p>Deletes a recommendation preference, such as enhanced infrastructure metrics.</p>
/// <p>For more information, see <a href="https://docs.aws.amazon.com/compute-optimizer/latest/ug/enhanced-infrastructure-metrics.html">Activating enhanced infrastructure metrics</a> in the <i>Compute Optimizer User Guide</i>.</p>
#[derive(std::clone::Clone, std::fmt::Debug)]
pub struct DeleteRecommendationPreferencesFluentBuilder {
                handle: std::sync::Arc<crate::client::Handle>,
                inner: crate::operation::delete_recommendation_preferences::builders::DeleteRecommendationPreferencesInputBuilder
            }
impl DeleteRecommendationPreferencesFluentBuilder {
    /// Creates a new `DeleteRecommendationPreferences`.
    pub(crate) fn new(handle: std::sync::Arc<crate::client::Handle>) -> Self {
        Self {
            handle,
            inner: Default::default(),
        }
    }

    /// Consume this builder, creating a customizable operation that can be modified before being
    /// sent. The operation's inner [http::Request] can be modified as well.
                    pub async fn customize(self) -> std::result::Result<
                        crate::client::customize::CustomizableOperation<crate::operation::delete_recommendation_preferences::DeleteRecommendationPreferences, aws_http::retry::AwsResponseRetryClassifier,>,
                        aws_smithy_http::result::SdkError<crate::operation::delete_recommendation_preferences::DeleteRecommendationPreferencesError>
    >{
        let handle = self.handle.clone();
        let operation = self
            .inner
            .build()
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?
            .make_operation(&handle.conf)
            .await
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?;
        Ok(crate::client::customize::CustomizableOperation { handle, operation })
    }

    /// Sends the request and returns the response.
    ///
    /// If an error occurs, an `SdkError` will be returned with additional details that
    /// can be matched against.
    ///
    /// By default, any retryable failures will be retried twice. Retry behavior
    /// is configurable with the [RetryConfig](aws_smithy_types::retry::RetryConfig), which can be
    /// set when configuring the client.
                    pub async fn send(self) -> std::result::Result<crate::operation::delete_recommendation_preferences::DeleteRecommendationPreferencesOutput, aws_smithy_http::result::SdkError<crate::operation::delete_recommendation_preferences::DeleteRecommendationPreferencesError>>
                     {
        let op = self
            .inner
            .build()
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?
            .make_operation(&self.handle.conf)
            .await
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?;
        self.handle.client.call(op).await
    }
    /// <p>The target resource type of the recommendation preference to delete.</p>
    /// <p>The <code>Ec2Instance</code> option encompasses standalone instances and instances that are part of Auto Scaling groups. The <code>AutoScalingGroup</code> option encompasses only instances that are part of an Auto Scaling group.</p> <note>
    /// <p>The valid values for this parameter are <code>Ec2Instance</code> and <code>AutoScalingGroup</code>.</p>
    /// </note>
    pub fn resource_type(mut self, input: crate::types::ResourceType) -> Self {
        self.inner = self.inner.resource_type(input);
        self
    }
    /// <p>The target resource type of the recommendation preference to delete.</p>
    /// <p>The <code>Ec2Instance</code> option encompasses standalone instances and instances that are part of Auto Scaling groups. The <code>AutoScalingGroup</code> option encompasses only instances that are part of an Auto Scaling group.</p> <note>
    /// <p>The valid values for this parameter are <code>Ec2Instance</code> and <code>AutoScalingGroup</code>.</p>
    /// </note>
    pub fn set_resource_type(
        mut self,
        input: std::option::Option<crate::types::ResourceType>,
    ) -> Self {
        self.inner = self.inner.set_resource_type(input);
        self
    }
    /// <p>An object that describes the scope of the recommendation preference to delete.</p>
    /// <p>You can delete recommendation preferences that are created at the organization level (for management accounts of an organization only), account level, and resource level. For more information, see <a href="https://docs.aws.amazon.com/compute-optimizer/latest/ug/enhanced-infrastructure-metrics.html">Activating enhanced infrastructure metrics</a> in the <i>Compute Optimizer User Guide</i>.</p>
    pub fn scope(mut self, input: crate::types::Scope) -> Self {
        self.inner = self.inner.scope(input);
        self
    }
    /// <p>An object that describes the scope of the recommendation preference to delete.</p>
    /// <p>You can delete recommendation preferences that are created at the organization level (for management accounts of an organization only), account level, and resource level. For more information, see <a href="https://docs.aws.amazon.com/compute-optimizer/latest/ug/enhanced-infrastructure-metrics.html">Activating enhanced infrastructure metrics</a> in the <i>Compute Optimizer User Guide</i>.</p>
    pub fn set_scope(mut self, input: std::option::Option<crate::types::Scope>) -> Self {
        self.inner = self.inner.set_scope(input);
        self
    }
    /// Appends an item to `recommendationPreferenceNames`.
    ///
    /// To override the contents of this collection use [`set_recommendation_preference_names`](Self::set_recommendation_preference_names).
    ///
    /// <p>The name of the recommendation preference to delete.</p>
    pub fn recommendation_preference_names(
        mut self,
        input: crate::types::RecommendationPreferenceName,
    ) -> Self {
        self.inner = self.inner.recommendation_preference_names(input);
        self
    }
    /// <p>The name of the recommendation preference to delete.</p>
    pub fn set_recommendation_preference_names(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::RecommendationPreferenceName>>,
    ) -> Self {
        self.inner = self.inner.set_recommendation_preference_names(input);
        self
    }
}
