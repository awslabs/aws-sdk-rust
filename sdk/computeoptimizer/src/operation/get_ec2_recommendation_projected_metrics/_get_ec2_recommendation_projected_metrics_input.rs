// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GetEc2RecommendationProjectedMetricsInput {
    /// <p>The Amazon Resource Name (ARN) of the instances for which to return recommendation projected metrics.</p>
    #[doc(hidden)]
    pub instance_arn: std::option::Option<std::string::String>,
    /// <p>The statistic of the projected metrics.</p>
    #[doc(hidden)]
    pub stat: std::option::Option<crate::types::MetricStatistic>,
    /// <p>The granularity, in seconds, of the projected metrics data points.</p>
    #[doc(hidden)]
    pub period: i32,
    /// <p>The timestamp of the first projected metrics data point to return.</p>
    #[doc(hidden)]
    pub start_time: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>The timestamp of the last projected metrics data point to return.</p>
    #[doc(hidden)]
    pub end_time: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>An object to specify the preferences for the Amazon EC2 recommendation projected metrics to return in the response.</p>
    #[doc(hidden)]
    pub recommendation_preferences: std::option::Option<crate::types::RecommendationPreferences>,
}
impl GetEc2RecommendationProjectedMetricsInput {
    /// <p>The Amazon Resource Name (ARN) of the instances for which to return recommendation projected metrics.</p>
    pub fn instance_arn(&self) -> std::option::Option<&str> {
        self.instance_arn.as_deref()
    }
    /// <p>The statistic of the projected metrics.</p>
    pub fn stat(&self) -> std::option::Option<&crate::types::MetricStatistic> {
        self.stat.as_ref()
    }
    /// <p>The granularity, in seconds, of the projected metrics data points.</p>
    pub fn period(&self) -> i32 {
        self.period
    }
    /// <p>The timestamp of the first projected metrics data point to return.</p>
    pub fn start_time(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.start_time.as_ref()
    }
    /// <p>The timestamp of the last projected metrics data point to return.</p>
    pub fn end_time(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.end_time.as_ref()
    }
    /// <p>An object to specify the preferences for the Amazon EC2 recommendation projected metrics to return in the response.</p>
    pub fn recommendation_preferences(
        &self,
    ) -> std::option::Option<&crate::types::RecommendationPreferences> {
        self.recommendation_preferences.as_ref()
    }
}
impl GetEc2RecommendationProjectedMetricsInput {
    /// Creates a new builder-style object to manufacture [`GetEc2RecommendationProjectedMetricsInput`](crate::operation::get_ec2_recommendation_projected_metrics::GetEc2RecommendationProjectedMetricsInput).
    pub fn builder() -> crate::operation::get_ec2_recommendation_projected_metrics::builders::GetEc2RecommendationProjectedMetricsInputBuilder{
        crate::operation::get_ec2_recommendation_projected_metrics::builders::GetEc2RecommendationProjectedMetricsInputBuilder::default()
    }
}

/// A builder for [`GetEc2RecommendationProjectedMetricsInput`](crate::operation::get_ec2_recommendation_projected_metrics::GetEc2RecommendationProjectedMetricsInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct GetEc2RecommendationProjectedMetricsInputBuilder {
    pub(crate) instance_arn: std::option::Option<std::string::String>,
    pub(crate) stat: std::option::Option<crate::types::MetricStatistic>,
    pub(crate) period: std::option::Option<i32>,
    pub(crate) start_time: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) end_time: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) recommendation_preferences:
        std::option::Option<crate::types::RecommendationPreferences>,
}
impl GetEc2RecommendationProjectedMetricsInputBuilder {
    /// <p>The Amazon Resource Name (ARN) of the instances for which to return recommendation projected metrics.</p>
    pub fn instance_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.instance_arn = Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the instances for which to return recommendation projected metrics.</p>
    pub fn set_instance_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.instance_arn = input;
        self
    }
    /// <p>The statistic of the projected metrics.</p>
    pub fn stat(mut self, input: crate::types::MetricStatistic) -> Self {
        self.stat = Some(input);
        self
    }
    /// <p>The statistic of the projected metrics.</p>
    pub fn set_stat(mut self, input: std::option::Option<crate::types::MetricStatistic>) -> Self {
        self.stat = input;
        self
    }
    /// <p>The granularity, in seconds, of the projected metrics data points.</p>
    pub fn period(mut self, input: i32) -> Self {
        self.period = Some(input);
        self
    }
    /// <p>The granularity, in seconds, of the projected metrics data points.</p>
    pub fn set_period(mut self, input: std::option::Option<i32>) -> Self {
        self.period = input;
        self
    }
    /// <p>The timestamp of the first projected metrics data point to return.</p>
    pub fn start_time(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.start_time = Some(input);
        self
    }
    /// <p>The timestamp of the first projected metrics data point to return.</p>
    pub fn set_start_time(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.start_time = input;
        self
    }
    /// <p>The timestamp of the last projected metrics data point to return.</p>
    pub fn end_time(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.end_time = Some(input);
        self
    }
    /// <p>The timestamp of the last projected metrics data point to return.</p>
    pub fn set_end_time(mut self, input: std::option::Option<aws_smithy_types::DateTime>) -> Self {
        self.end_time = input;
        self
    }
    /// <p>An object to specify the preferences for the Amazon EC2 recommendation projected metrics to return in the response.</p>
    pub fn recommendation_preferences(
        mut self,
        input: crate::types::RecommendationPreferences,
    ) -> Self {
        self.recommendation_preferences = Some(input);
        self
    }
    /// <p>An object to specify the preferences for the Amazon EC2 recommendation projected metrics to return in the response.</p>
    pub fn set_recommendation_preferences(
        mut self,
        input: std::option::Option<crate::types::RecommendationPreferences>,
    ) -> Self {
        self.recommendation_preferences = input;
        self
    }
    /// Consumes the builder and constructs a [`GetEc2RecommendationProjectedMetricsInput`](crate::operation::get_ec2_recommendation_projected_metrics::GetEc2RecommendationProjectedMetricsInput).
    pub fn build(self) -> Result<crate::operation::get_ec2_recommendation_projected_metrics::GetEc2RecommendationProjectedMetricsInput, aws_smithy_http::operation::error::BuildError>{
        Ok(
            crate::operation::get_ec2_recommendation_projected_metrics::GetEc2RecommendationProjectedMetricsInput {
                instance_arn: self.instance_arn
                ,
                stat: self.stat
                ,
                period: self.period
                    .unwrap_or_default()
                ,
                start_time: self.start_time
                ,
                end_time: self.end_time
                ,
                recommendation_preferences: self.recommendation_preferences
                ,
            }
        )
    }
}
