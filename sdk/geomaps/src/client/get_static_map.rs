// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetStaticMap`](crate::operation::get_static_map::builders::GetStaticMapFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`bounding_box(impl Into<String>)`](crate::operation::get_static_map::builders::GetStaticMapFluentBuilder::bounding_box) / [`set_bounding_box(Option<String>)`](crate::operation::get_static_map::builders::GetStaticMapFluentBuilder::set_bounding_box):<br>required: **false**<br><p>Takes in two pairs of coordinates in World Geodetic System (WGS 84) format: \[longitude, latitude\], denoting south-westerly and north-easterly edges of the image. The underlying area becomes the view of the image.</p> <p>Example: -123.17075,49.26959,-123.08125,49.31429</p><br>
    ///   - [`bounded_positions(impl Into<String>)`](crate::operation::get_static_map::builders::GetStaticMapFluentBuilder::bounded_positions) / [`set_bounded_positions(Option<String>)`](crate::operation::get_static_map::builders::GetStaticMapFluentBuilder::set_bounded_positions):<br>required: **false**<br><p>Takes in two or more pair of coordinates in World Geodetic System (WGS 84) format: \[longitude, latitude\], with each coordinate separated by a comma. The API will generate an image to encompass all of the provided coordinates.</p><note>  <p>Cannot be used with <code>Zoom</code> and or <code>Radius</code></p> </note> <p>Example: 97.170451,78.039098,99.045536,27.176178</p><br>
    ///   - [`center(impl Into<String>)`](crate::operation::get_static_map::builders::GetStaticMapFluentBuilder::center) / [`set_center(Option<String>)`](crate::operation::get_static_map::builders::GetStaticMapFluentBuilder::set_center):<br>required: **false**<br><p>Takes in a pair of coordinates in World Geodetic System (WGS 84) format: \[longitude, latitude\], which becomes the center point of the image. This parameter requires that either zoom or radius is set.</p><note>  <p>Cannot be used with <code>Zoom</code> and or <code>Radius</code></p> </note> <p>Example: 49.295,-123.108</p><br>
    ///   - [`color_scheme(ColorScheme)`](crate::operation::get_static_map::builders::GetStaticMapFluentBuilder::color_scheme) / [`set_color_scheme(Option<ColorScheme>)`](crate::operation::get_static_map::builders::GetStaticMapFluentBuilder::set_color_scheme):<br>required: **false**<br><p>Sets color tone for map, such as dark and light for specific map styles. It only applies to vector map styles, such as Standard.</p> <p>Example: <code>Light</code></p> <p>Default value: <code>Light</code></p><note>  <p>Valid values for <code>ColorScheme</code> are case sensitive.</p> </note><br>
    ///   - [`compact_overlay(impl Into<String>)`](crate::operation::get_static_map::builders::GetStaticMapFluentBuilder::compact_overlay) / [`set_compact_overlay(Option<String>)`](crate::operation::get_static_map::builders::GetStaticMapFluentBuilder::set_compact_overlay):<br>required: **false**<br><p>Takes in a string to draw geometries on the image. The input is a comma separated format as follows format: <code>\[Lon, Lat\]</code></p> <p>Example: <code>line:-122.407653,37.798557,-122.413291,37.802443;color=%23DD0000;width=7;outline-color=#00DD00;outline-width=5yd|point:-122.40572,37.80004;label=Fog Hill Market;size=large;text-color=%23DD0000;color=#EE4B2B</code></p><note>  <p>Currently it supports the following geometry types: point, line and polygon. It does not support multiPoint , multiLine and multiPolgyon.</p> </note><br>
    ///   - [`crop_labels(bool)`](crate::operation::get_static_map::builders::GetStaticMapFluentBuilder::crop_labels) / [`set_crop_labels(Option<bool>)`](crate::operation::get_static_map::builders::GetStaticMapFluentBuilder::set_crop_labels):<br>required: **false**<br><p>It is a flag that takes in true or false. It prevents the labels that are on the edge of the image from being cut or obscured.</p><br>
    ///   - [`geo_json_overlay(impl Into<String>)`](crate::operation::get_static_map::builders::GetStaticMapFluentBuilder::geo_json_overlay) / [`set_geo_json_overlay(Option<String>)`](crate::operation::get_static_map::builders::GetStaticMapFluentBuilder::set_geo_json_overlay):<br>required: **false**<br><p>Takes in a string to draw geometries on the image. The input is a valid GeoJSON collection object.</p> <p>Example: <code>{"type":"FeatureCollection","features": \[{"type":"Feature","geometry":{"type":"MultiPoint","coordinates": \[\[-90.076345,51.504107\],\[-0.074451,51.506892\]\]},"properties": {"color":"#00DD00"}}\]}</code></p><br>
    ///   - [`height(i32)`](crate::operation::get_static_map::builders::GetStaticMapFluentBuilder::height) / [`set_height(Option<i32>)`](crate::operation::get_static_map::builders::GetStaticMapFluentBuilder::set_height):<br>required: **true**<br><p>Specifies the height of the map image.</p><br>
    ///   - [`key(impl Into<String>)`](crate::operation::get_static_map::builders::GetStaticMapFluentBuilder::key) / [`set_key(Option<String>)`](crate::operation::get_static_map::builders::GetStaticMapFluentBuilder::set_key):<br>required: **false**<br><p>Optional: The API key to be used for authorization. Either an API key or valid SigV4 signature must be provided when making a request.</p><br>
    ///   - [`label_size(LabelSize)`](crate::operation::get_static_map::builders::GetStaticMapFluentBuilder::label_size) / [`set_label_size(Option<LabelSize>)`](crate::operation::get_static_map::builders::GetStaticMapFluentBuilder::set_label_size):<br>required: **false**<br><p>Overrides the label size auto-calculated by <code>FileName</code>. Takes in one of the values - <code>Small</code> or <code>Large</code>.</p><br>
    ///   - [`language(impl Into<String>)`](crate::operation::get_static_map::builders::GetStaticMapFluentBuilder::language) / [`set_language(Option<String>)`](crate::operation::get_static_map::builders::GetStaticMapFluentBuilder::set_language):<br>required: **false**<br><p>Specifies the language on the map labels using the BCP 47 language tag, limited to ISO 639-1 two-letter language codes. If the specified language data isn't available for the map image, the labels will default to the regional primary language.</p> <p>Supported codes:</p> <ul>  <li>   <p><code>ar</code></p></li>  <li>   <p><code>as</code></p></li>  <li>   <p><code>az</code></p></li>  <li>   <p><code>be</code></p></li>  <li>   <p><code>bg</code></p></li>  <li>   <p><code>bn</code></p></li>  <li>   <p><code>bs</code></p></li>  <li>   <p><code>ca</code></p></li>  <li>   <p><code>cs</code></p></li>  <li>   <p><code>cy</code></p></li>  <li>   <p><code>da</code></p></li>  <li>   <p><code>de</code></p></li>  <li>   <p><code>el</code></p></li>  <li>   <p><code>en</code></p></li>  <li>   <p><code>es</code></p></li>  <li>   <p><code>et</code></p></li>  <li>   <p><code>eu</code></p></li>  <li>   <p><code>fi</code></p></li>  <li>   <p><code>fo</code></p></li>  <li>   <p><code>fr</code></p></li>  <li>   <p><code>ga</code></p></li>  <li>   <p><code>gl</code></p></li>  <li>   <p><code>gn</code></p></li>  <li>   <p><code>gu</code></p></li>  <li>   <p><code>he</code></p></li>  <li>   <p><code>hi</code></p></li>  <li>   <p><code>hr</code></p></li>  <li>   <p><code>hu</code></p></li>  <li>   <p><code>hy</code></p></li>  <li>   <p><code>id</code></p></li>  <li>   <p><code>is</code></p></li>  <li>   <p><code>it</code></p></li>  <li>   <p><code>ja</code></p></li>  <li>   <p><code>ka</code></p></li>  <li>   <p><code>kk</code></p></li>  <li>   <p><code>km</code></p></li>  <li>   <p><code>kn</code></p></li>  <li>   <p><code>ko</code></p></li>  <li>   <p><code>ky</code></p></li>  <li>   <p><code>lt</code></p></li>  <li>   <p><code>lv</code></p></li>  <li>   <p><code>mk</code></p></li>  <li>   <p><code>ml</code></p></li>  <li>   <p><code>mr</code></p></li>  <li>   <p><code>ms</code></p></li>  <li>   <p><code>mt</code></p></li>  <li>   <p><code>my</code></p></li>  <li>   <p><code>nl</code></p></li>  <li>   <p><code>no</code></p></li>  <li>   <p><code>or</code></p></li>  <li>   <p><code>pa</code></p></li>  <li>   <p><code>pl</code></p></li>  <li>   <p><code>pt</code></p></li>  <li>   <p><code>ro</code></p></li>  <li>   <p><code>ru</code></p></li>  <li>   <p><code>sk</code></p></li>  <li>   <p><code>sl</code></p></li>  <li>   <p><code>sq</code></p></li>  <li>   <p><code>sr</code></p></li>  <li>   <p><code>sv</code></p></li>  <li>   <p><code>ta</code></p></li>  <li>   <p><code>te</code></p></li>  <li>   <p><code>th</code></p></li>  <li>   <p><code>tr</code></p></li>  <li>   <p><code>uk</code></p></li>  <li>   <p><code>uz</code></p></li>  <li>   <p><code>vi</code></p></li>  <li>   <p><code>zh</code></p></li> </ul><br>
    ///   - [`padding(i32)`](crate::operation::get_static_map::builders::GetStaticMapFluentBuilder::padding) / [`set_padding(Option<i32>)`](crate::operation::get_static_map::builders::GetStaticMapFluentBuilder::set_padding):<br>required: **false**<br><p>Applies additional space (in pixels) around overlay feature to prevent them from being cut or obscured.</p><note>  <p>Value for max and min is determined by:</p>  <p>Min: <code>1</code></p>  <p>Max: <code>min(height, width)/4</code></p> </note> <p>Example: <code>100</code></p><br>
    ///   - [`political_view(impl Into<String>)`](crate::operation::get_static_map::builders::GetStaticMapFluentBuilder::political_view) / [`set_political_view(Option<String>)`](crate::operation::get_static_map::builders::GetStaticMapFluentBuilder::set_political_view):<br>required: **false**<br><p>Specifies the political view, using ISO 3166-2 or ISO 3166-3 country code format.</p> <p>The following political views are currently supported:</p> <ul>  <li>   <p><code>ARG</code>: Argentina's view on the Southern Patagonian Ice Field and Tierra Del Fuego, including the Falkland Islands, South Georgia, and South Sandwich Islands</p></li>  <li>   <p><code>EGY</code>: Egypt's view on Bir Tawil</p></li>  <li>   <p><code>IND</code>: India's view on Gilgit-Baltistan</p></li>  <li>   <p><code>KEN</code>: Kenya's view on the Ilemi Triangle</p></li>  <li>   <p><code>MAR</code>: Morocco's view on Western Sahara</p></li>  <li>   <p><code>RUS</code>: Russia's view on Crimea</p></li>  <li>   <p><code>SDN</code>: Sudan's view on the Halaib Triangle</p></li>  <li>   <p><code>SRB</code>: Serbia's view on Kosovo, Vukovar, and Sarengrad Islands</p></li>  <li>   <p><code>SUR</code>: Suriname's view on the Courantyne Headwaters and Lawa Headwaters</p></li>  <li>   <p><code>SYR</code>: Syria's view on the Golan Heights</p></li>  <li>   <p><code>TUR</code>: Turkey's view on Cyprus and Northern Cyprus</p></li>  <li>   <p><code>TZA</code>: Tanzania's view on Lake Malawi</p></li>  <li>   <p><code>URY</code>: Uruguay's view on Rincon de Artigas</p></li>  <li>   <p><code>VNM</code>: Vietnam's view on the Paracel Islands and Spratly Islands</p></li> </ul><br>
    ///   - [`points_of_interests(MapFeatureMode)`](crate::operation::get_static_map::builders::GetStaticMapFluentBuilder::points_of_interests) / [`set_points_of_interests(Option<MapFeatureMode>)`](crate::operation::get_static_map::builders::GetStaticMapFluentBuilder::set_points_of_interests):<br>required: **false**<br><p>Determines if the result image will display icons representing points of interest on the map.</p><br>
    ///   - [`radius(i64)`](crate::operation::get_static_map::builders::GetStaticMapFluentBuilder::radius) / [`set_radius(Option<i64>)`](crate::operation::get_static_map::builders::GetStaticMapFluentBuilder::set_radius):<br>required: **false**<br><p>Used with center parameter, it specifies the zoom of the image where you can control it on a granular level. Takes in any value <code>&gt;= 1</code>.</p> <p>Example: <code>1500</code></p><note>  <p>Cannot be used with <code>Zoom</code>.</p> </note> <p><b>Unit</b>: <code>Meters</code></p> <p></p><br>
    ///   - [`file_name(impl Into<String>)`](crate::operation::get_static_map::builders::GetStaticMapFluentBuilder::file_name) / [`set_file_name(Option<String>)`](crate::operation::get_static_map::builders::GetStaticMapFluentBuilder::set_file_name):<br>required: **true**<br><p>The map scaling parameter to size the image, icons, and labels. It follows the pattern of <code>^map(@2x)?$</code>.</p> <p>Example: <code>map, map@2x</code></p><br>
    ///   - [`scale_bar_unit(ScaleBarUnit)`](crate::operation::get_static_map::builders::GetStaticMapFluentBuilder::scale_bar_unit) / [`set_scale_bar_unit(Option<ScaleBarUnit>)`](crate::operation::get_static_map::builders::GetStaticMapFluentBuilder::set_scale_bar_unit):<br>required: **false**<br><p>Displays a scale on the bottom right of the map image with the unit specified in the input.</p> <p>Example: <code>KilometersMiles, Miles, Kilometers, MilesKilometers</code></p><br>
    ///   - [`style(StaticMapStyle)`](crate::operation::get_static_map::builders::GetStaticMapFluentBuilder::style) / [`set_style(Option<StaticMapStyle>)`](crate::operation::get_static_map::builders::GetStaticMapFluentBuilder::set_style):<br>required: **false**<br><p><code>Style</code> specifies the desired map style.</p><br>
    ///   - [`width(i32)`](crate::operation::get_static_map::builders::GetStaticMapFluentBuilder::width) / [`set_width(Option<i32>)`](crate::operation::get_static_map::builders::GetStaticMapFluentBuilder::set_width):<br>required: **true**<br><p>Specifies the width of the map image.</p><br>
    ///   - [`zoom(f32)`](crate::operation::get_static_map::builders::GetStaticMapFluentBuilder::zoom) / [`set_zoom(Option<f32>)`](crate::operation::get_static_map::builders::GetStaticMapFluentBuilder::set_zoom):<br>required: **false**<br><p>Specifies the zoom level of the map image.</p><note>  <p>Cannot be used with <code>Radius</code>.</p> </note><br>
    /// - On success, responds with [`GetStaticMapOutput`](crate::operation::get_static_map::GetStaticMapOutput) with field(s):
    ///   - [`blob(Option<Blob>)`](crate::operation::get_static_map::GetStaticMapOutput::blob): <p>The blob represents a map image as a <code>jpeg</code> for the <code>GetStaticMap</code> API.</p>
    ///   - [`content_type(Option<String>)`](crate::operation::get_static_map::GetStaticMapOutput::content_type): <p>Header that represents the format of the response. The response returns the following as the HTTP body.</p>
    ///   - [`cache_control(Option<String>)`](crate::operation::get_static_map::GetStaticMapOutput::cache_control): <p>Header that instructs caching configuration for the client.</p>
    ///   - [`e_tag(Option<String>)`](crate::operation::get_static_map::GetStaticMapOutput::e_tag): <p>The static map's Etag.</p>
    ///   - [`pricing_bucket(String)`](crate::operation::get_static_map::GetStaticMapOutput::pricing_bucket): <p>The pricing bucket for which the request is charged at.</p>
    /// - On failure, responds with [`SdkError<GetStaticMapError>`](crate::operation::get_static_map::GetStaticMapError)
    pub fn get_static_map(&self) -> crate::operation::get_static_map::builders::GetStaticMapFluentBuilder {
        crate::operation::get_static_map::builders::GetStaticMapFluentBuilder::new(self.handle.clone())
    }
}
