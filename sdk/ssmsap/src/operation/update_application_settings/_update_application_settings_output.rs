// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct UpdateApplicationSettingsOutput {
    /// <p>The update message.</p>
    #[doc(hidden)]
    pub message: std::option::Option<std::string::String>,
    /// <p>The IDs of the operations.</p>
    #[doc(hidden)]
    pub operation_ids: std::option::Option<std::vec::Vec<std::string::String>>,
    _request_id: Option<String>,
}
impl UpdateApplicationSettingsOutput {
    /// <p>The update message.</p>
    pub fn message(&self) -> std::option::Option<&str> {
        self.message.as_deref()
    }
    /// <p>The IDs of the operations.</p>
    pub fn operation_ids(&self) -> std::option::Option<&[std::string::String]> {
        self.operation_ids.as_deref()
    }
}
impl aws_http::request_id::RequestId for UpdateApplicationSettingsOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl UpdateApplicationSettingsOutput {
    /// Creates a new builder-style object to manufacture [`UpdateApplicationSettingsOutput`](crate::operation::update_application_settings::UpdateApplicationSettingsOutput).
    pub fn builder() -> crate::operation::update_application_settings::builders::UpdateApplicationSettingsOutputBuilder{
        crate::operation::update_application_settings::builders::UpdateApplicationSettingsOutputBuilder::default()
    }
}

/// A builder for [`UpdateApplicationSettingsOutput`](crate::operation::update_application_settings::UpdateApplicationSettingsOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct UpdateApplicationSettingsOutputBuilder {
    pub(crate) message: std::option::Option<std::string::String>,
    pub(crate) operation_ids: std::option::Option<std::vec::Vec<std::string::String>>,
    _request_id: Option<String>,
}
impl UpdateApplicationSettingsOutputBuilder {
    /// <p>The update message.</p>
    pub fn message(mut self, input: impl Into<std::string::String>) -> Self {
        self.message = Some(input.into());
        self
    }
    /// <p>The update message.</p>
    pub fn set_message(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.message = input;
        self
    }
    /// Appends an item to `operation_ids`.
    ///
    /// To override the contents of this collection use [`set_operation_ids`](Self::set_operation_ids).
    ///
    /// <p>The IDs of the operations.</p>
    pub fn operation_ids(mut self, input: impl Into<std::string::String>) -> Self {
        let mut v = self.operation_ids.unwrap_or_default();
        v.push(input.into());
        self.operation_ids = Some(v);
        self
    }
    /// <p>The IDs of the operations.</p>
    pub fn set_operation_ids(
        mut self,
        input: std::option::Option<std::vec::Vec<std::string::String>>,
    ) -> Self {
        self.operation_ids = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`UpdateApplicationSettingsOutput`](crate::operation::update_application_settings::UpdateApplicationSettingsOutput).
    pub fn build(
        self,
    ) -> crate::operation::update_application_settings::UpdateApplicationSettingsOutput {
        crate::operation::update_application_settings::UpdateApplicationSettingsOutput {
            message: self.message,
            operation_ids: self.operation_ids,
            _request_id: self._request_id,
        }
    }
}
