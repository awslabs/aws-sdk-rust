// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub use crate::operation::delete_resource_permission::_delete_resource_permission_output::DeleteResourcePermissionOutputBuilder;

pub use crate::operation::delete_resource_permission::_delete_resource_permission_input::DeleteResourcePermissionInputBuilder;

/// Fluent builder constructing a request to `DeleteResourcePermission`.
///
/// <p>Removes permissions associated with the target database.</p>
#[derive(std::clone::Clone, std::fmt::Debug)]
pub struct DeleteResourcePermissionFluentBuilder {
                handle: std::sync::Arc<crate::client::Handle>,
                inner: crate::operation::delete_resource_permission::builders::DeleteResourcePermissionInputBuilder
            }
impl DeleteResourcePermissionFluentBuilder {
    /// Creates a new `DeleteResourcePermission`.
    pub(crate) fn new(handle: std::sync::Arc<crate::client::Handle>) -> Self {
        Self {
            handle,
            inner: Default::default(),
        }
    }

    /// Consume this builder, creating a customizable operation that can be modified before being
    /// sent. The operation's inner [http::Request] can be modified as well.
    pub async fn customize(
        self,
    ) -> std::result::Result<
        crate::client::customize::CustomizableOperation<
            crate::operation::delete_resource_permission::DeleteResourcePermission,
            aws_http::retry::AwsResponseRetryClassifier,
        >,
        aws_smithy_http::result::SdkError<
            crate::operation::delete_resource_permission::DeleteResourcePermissionError,
        >,
    > {
        let handle = self.handle.clone();
        let operation = self
            .inner
            .build()
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?
            .make_operation(&handle.conf)
            .await
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?;
        Ok(crate::client::customize::CustomizableOperation { handle, operation })
    }

    /// Sends the request and returns the response.
    ///
    /// If an error occurs, an `SdkError` will be returned with additional details that
    /// can be matched against.
    ///
    /// By default, any retryable failures will be retried twice. Retry behavior
    /// is configurable with the [RetryConfig](aws_smithy_types::retry::RetryConfig), which can be
    /// set when configuring the client.
    pub async fn send(
        self,
    ) -> std::result::Result<
        crate::operation::delete_resource_permission::DeleteResourcePermissionOutput,
        aws_smithy_http::result::SdkError<
            crate::operation::delete_resource_permission::DeleteResourcePermissionError,
        >,
    > {
        let op = self
            .inner
            .build()
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?
            .make_operation(&self.handle.conf)
            .await
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?;
        self.handle.client.call(op).await
    }
    /// <p>Delete or restore the permissions on the target database.</p>
    pub fn action_type(mut self, input: crate::types::PermissionActionType) -> Self {
        self.inner = self.inner.action_type(input);
        self
    }
    /// <p>Delete or restore the permissions on the target database.</p>
    pub fn set_action_type(
        mut self,
        input: std::option::Option<crate::types::PermissionActionType>,
    ) -> Self {
        self.inner = self.inner.set_action_type(input);
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the source resource.</p>
    pub fn source_resource_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.inner = self.inner.source_resource_arn(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the source resource.</p>
    pub fn set_source_resource_arn(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.inner = self.inner.set_source_resource_arn(input);
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the resource.</p>
    pub fn resource_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.inner = self.inner.resource_arn(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the resource.</p>
    pub fn set_resource_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.inner = self.inner.set_resource_arn(input);
        self
    }
}
