// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) mod shape_delete_resource_permission;

pub fn parse_http_error_metadata(
    response: &http::Response<bytes::Bytes>,
) -> Result<
    aws_smithy_types::error::metadata::Builder,
    aws_smithy_json::deserialize::error::DeserializeError,
> {
    crate::json_errors::parse_error_metadata(response.body(), response.headers())
}

pub(crate) mod shape_deregister_application;

pub(crate) mod shape_get_application;

pub(crate) mod shape_get_component;

pub(crate) mod shape_get_database;

pub(crate) mod shape_get_operation;

pub(crate) mod shape_get_resource_permission;

pub(crate) mod shape_list_applications;

pub(crate) mod shape_list_components;

pub(crate) mod shape_list_databases;

pub(crate) mod shape_list_operations;

pub(crate) mod shape_list_tags_for_resource;

pub(crate) mod shape_put_resource_permission;

pub(crate) mod shape_register_application;

pub(crate) mod shape_tag_resource;

pub(crate) mod shape_untag_resource;

pub(crate) mod shape_update_application_settings;

pub(crate) fn or_empty_doc(data: &[u8]) -> &[u8] {
    if data.is_empty() {
        b"{}"
    } else {
        data
    }
}

pub(crate) mod shape_conflict_exception;

pub(crate) mod shape_delete_resource_permission_input;

pub(crate) mod shape_deregister_application_input;

pub(crate) mod shape_get_application_input;

pub(crate) mod shape_get_component_input;

pub(crate) mod shape_get_database_input;

pub(crate) mod shape_get_operation_input;

pub(crate) mod shape_get_resource_permission_input;

pub(crate) mod shape_internal_server_exception;

pub(crate) mod shape_list_applications_input;

pub(crate) mod shape_list_components_input;

pub(crate) mod shape_list_databases_input;

pub(crate) mod shape_list_operations_input;

pub(crate) mod shape_put_resource_permission_input;

pub(crate) mod shape_register_application_input;

pub(crate) mod shape_resource_not_found_exception;

pub(crate) mod shape_tag_resource_input;

pub(crate) mod shape_update_application_settings_input;

pub(crate) mod shape_validation_exception;

pub(crate) mod shape_application;

pub(crate) mod shape_application_credential;

pub(crate) mod shape_application_summary_list;

pub(crate) mod shape_component;

pub(crate) mod shape_component_summary_list;

pub(crate) mod shape_database;

pub(crate) mod shape_database_summary_list;

pub(crate) mod shape_filter;

pub(crate) mod shape_operation;

pub(crate) mod shape_operation_id_list;

pub(crate) mod shape_operation_list;

pub(crate) mod shape_tag_map;

pub(crate) mod shape_application_credential_list;

pub(crate) mod shape_application_summary;

pub(crate) mod shape_component_id_list;

pub(crate) mod shape_component_summary;

pub(crate) mod shape_database_id_list;

pub(crate) mod shape_database_summary;

pub(crate) mod shape_host_list;

pub(crate) mod shape_operation_properties;

pub(crate) mod shape_host;
