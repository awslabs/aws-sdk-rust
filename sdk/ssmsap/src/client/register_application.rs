// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`RegisterApplication`](crate::operation::register_application::builders::RegisterApplicationFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_id(impl Into<String>)`](crate::operation::register_application::builders::RegisterApplicationFluentBuilder::application_id) / [`set_application_id(Option<String>)`](crate::operation::register_application::builders::RegisterApplicationFluentBuilder::set_application_id):<br>required: **true**<br><p>The ID of the application.</p><br>
    ///   - [`application_type(ApplicationType)`](crate::operation::register_application::builders::RegisterApplicationFluentBuilder::application_type) / [`set_application_type(Option<ApplicationType>)`](crate::operation::register_application::builders::RegisterApplicationFluentBuilder::set_application_type):<br>required: **true**<br><p>The type of the application.</p><br>
    ///   - [`instances(impl Into<String>)`](crate::operation::register_application::builders::RegisterApplicationFluentBuilder::instances) / [`set_instances(Option<Vec::<String>>)`](crate::operation::register_application::builders::RegisterApplicationFluentBuilder::set_instances):<br>required: **true**<br><p>The Amazon EC2 instances on which your SAP application is running.</p><br>
    ///   - [`sap_instance_number(impl Into<String>)`](crate::operation::register_application::builders::RegisterApplicationFluentBuilder::sap_instance_number) / [`set_sap_instance_number(Option<String>)`](crate::operation::register_application::builders::RegisterApplicationFluentBuilder::set_sap_instance_number):<br>required: **false**<br><p>The SAP instance number of the application.</p><br>
    ///   - [`sid(impl Into<String>)`](crate::operation::register_application::builders::RegisterApplicationFluentBuilder::sid) / [`set_sid(Option<String>)`](crate::operation::register_application::builders::RegisterApplicationFluentBuilder::set_sid):<br>required: **false**<br><p>The System ID of the application.</p><br>
    ///   - [`tags(impl Into<String>, impl Into<String>)`](crate::operation::register_application::builders::RegisterApplicationFluentBuilder::tags) / [`set_tags(Option<HashMap::<String, String>>)`](crate::operation::register_application::builders::RegisterApplicationFluentBuilder::set_tags):<br>required: **false**<br><p>The tags to be attached to the SAP application.</p><br>
    ///   - [`credentials(ApplicationCredential)`](crate::operation::register_application::builders::RegisterApplicationFluentBuilder::credentials) / [`set_credentials(Option<Vec::<ApplicationCredential>>)`](crate::operation::register_application::builders::RegisterApplicationFluentBuilder::set_credentials):<br>required: **false**<br><p>The credentials of the SAP application.</p><br>
    ///   - [`database_arn(impl Into<String>)`](crate::operation::register_application::builders::RegisterApplicationFluentBuilder::database_arn) / [`set_database_arn(Option<String>)`](crate::operation::register_application::builders::RegisterApplicationFluentBuilder::set_database_arn):<br>required: **false**<br><p>The Amazon Resource Name of the SAP HANA database.</p><br>
    /// - On success, responds with [`RegisterApplicationOutput`](crate::operation::register_application::RegisterApplicationOutput) with field(s):
    ///   - [`application(Option<Application>)`](crate::operation::register_application::RegisterApplicationOutput::application): <p>The application registered with AWS Systems Manager for SAP.</p>
    ///   - [`operation_id(Option<String>)`](crate::operation::register_application::RegisterApplicationOutput::operation_id): <p>The ID of the operation.</p>
    /// - On failure, responds with [`SdkError<RegisterApplicationError>`](crate::operation::register_application::RegisterApplicationError)
    pub fn register_application(&self) -> crate::operation::register_application::builders::RegisterApplicationFluentBuilder {
        crate::operation::register_application::builders::RegisterApplicationFluentBuilder::new(self.handle.clone())
    }
}
