// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Specifies the Server Message Block (SMB) protocol configuration that DataSync uses to access your Amazon FSx for NetApp ONTAP file system. For more information, see <a href="https://docs.aws.amazon.com/datasync/latest/userguide/create-ontap-location.html#create-ontap-location-access">Accessing FSx for ONTAP file systems</a>.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq)]
pub struct FsxProtocolSmb {
    /// <p>Specifies the fully qualified domain name (FQDN) of the Microsoft Active Directory that your storage virtual machine (SVM) belongs to.</p>
    pub domain: ::std::option::Option<::std::string::String>,
    /// <p>Specifies the version of the Server Message Block (SMB) protocol that DataSync uses to access an SMB file server.</p>
    pub mount_options: ::std::option::Option<crate::types::SmbMountOptions>,
    /// <p>Specifies the password of a user who has permission to access your SVM.</p>
    pub password: ::std::string::String,
    /// <p>Specifies a user name that can mount the location and access the files, folders, and metadata that you need in the SVM.</p>
    /// <p>If you provide a user in your Active Directory, note the following:</p>
    /// <ul>
    /// <li> <p>If you're using Directory Service for Microsoft Active Directory, the user must be a member of the Amazon Web Services Delegated FSx Administrators group.</p> </li>
    /// <li> <p>If you're using a self-managed Active Directory, the user must be a member of either the Domain Admins group or a custom group that you specified for file system administration when you created your file system.</p> </li>
    /// </ul>
    /// <p>Make sure that the user has the permissions it needs to copy the data you want:</p>
    /// <ul>
    /// <li> <p> <code>SE_TCB_NAME</code>: Required to set object ownership and file metadata. With this privilege, you also can copy NTFS discretionary access lists (DACLs).</p> </li>
    /// <li> <p> <code>SE_SECURITY_NAME</code>: May be needed to copy NTFS system access control lists (SACLs). This operation specifically requires the Windows privilege, which is granted to members of the Domain Admins group. If you configure your task to copy SACLs, make sure that the user has the required privileges. For information about copying SACLs, see <a href="https://docs.aws.amazon.com/datasync/latest/userguide/create-task.html#configure-ownership-and-permissions">Ownership and permissions-related options</a>.</p> </li>
    /// </ul>
    pub user: ::std::string::String,
}
impl FsxProtocolSmb {
    /// <p>Specifies the fully qualified domain name (FQDN) of the Microsoft Active Directory that your storage virtual machine (SVM) belongs to.</p>
    pub fn domain(&self) -> ::std::option::Option<&str> {
        self.domain.as_deref()
    }
    /// <p>Specifies the version of the Server Message Block (SMB) protocol that DataSync uses to access an SMB file server.</p>
    pub fn mount_options(&self) -> ::std::option::Option<&crate::types::SmbMountOptions> {
        self.mount_options.as_ref()
    }
    /// <p>Specifies the password of a user who has permission to access your SVM.</p>
    pub fn password(&self) -> &str {
        use std::ops::Deref;
        self.password.deref()
    }
    /// <p>Specifies a user name that can mount the location and access the files, folders, and metadata that you need in the SVM.</p>
    /// <p>If you provide a user in your Active Directory, note the following:</p>
    /// <ul>
    /// <li> <p>If you're using Directory Service for Microsoft Active Directory, the user must be a member of the Amazon Web Services Delegated FSx Administrators group.</p> </li>
    /// <li> <p>If you're using a self-managed Active Directory, the user must be a member of either the Domain Admins group or a custom group that you specified for file system administration when you created your file system.</p> </li>
    /// </ul>
    /// <p>Make sure that the user has the permissions it needs to copy the data you want:</p>
    /// <ul>
    /// <li> <p> <code>SE_TCB_NAME</code>: Required to set object ownership and file metadata. With this privilege, you also can copy NTFS discretionary access lists (DACLs).</p> </li>
    /// <li> <p> <code>SE_SECURITY_NAME</code>: May be needed to copy NTFS system access control lists (SACLs). This operation specifically requires the Windows privilege, which is granted to members of the Domain Admins group. If you configure your task to copy SACLs, make sure that the user has the required privileges. For information about copying SACLs, see <a href="https://docs.aws.amazon.com/datasync/latest/userguide/create-task.html#configure-ownership-and-permissions">Ownership and permissions-related options</a>.</p> </li>
    /// </ul>
    pub fn user(&self) -> &str {
        use std::ops::Deref;
        self.user.deref()
    }
}
impl ::std::fmt::Debug for FsxProtocolSmb {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("FsxProtocolSmb");
        formatter.field("domain", &self.domain);
        formatter.field("mount_options", &self.mount_options);
        formatter.field("password", &"*** Sensitive Data Redacted ***");
        formatter.field("user", &self.user);
        formatter.finish()
    }
}
impl FsxProtocolSmb {
    /// Creates a new builder-style object to manufacture [`FsxProtocolSmb`](crate::types::FsxProtocolSmb).
    pub fn builder() -> crate::types::builders::FsxProtocolSmbBuilder {
        crate::types::builders::FsxProtocolSmbBuilder::default()
    }
}

/// A builder for [`FsxProtocolSmb`](crate::types::FsxProtocolSmb).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default)]
pub struct FsxProtocolSmbBuilder {
    pub(crate) domain: ::std::option::Option<::std::string::String>,
    pub(crate) mount_options: ::std::option::Option<crate::types::SmbMountOptions>,
    pub(crate) password: ::std::option::Option<::std::string::String>,
    pub(crate) user: ::std::option::Option<::std::string::String>,
}
impl FsxProtocolSmbBuilder {
    /// <p>Specifies the fully qualified domain name (FQDN) of the Microsoft Active Directory that your storage virtual machine (SVM) belongs to.</p>
    pub fn domain(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.domain = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Specifies the fully qualified domain name (FQDN) of the Microsoft Active Directory that your storage virtual machine (SVM) belongs to.</p>
    pub fn set_domain(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.domain = input;
        self
    }
    /// <p>Specifies the fully qualified domain name (FQDN) of the Microsoft Active Directory that your storage virtual machine (SVM) belongs to.</p>
    pub fn get_domain(&self) -> &::std::option::Option<::std::string::String> {
        &self.domain
    }
    /// <p>Specifies the version of the Server Message Block (SMB) protocol that DataSync uses to access an SMB file server.</p>
    pub fn mount_options(mut self, input: crate::types::SmbMountOptions) -> Self {
        self.mount_options = ::std::option::Option::Some(input);
        self
    }
    /// <p>Specifies the version of the Server Message Block (SMB) protocol that DataSync uses to access an SMB file server.</p>
    pub fn set_mount_options(mut self, input: ::std::option::Option<crate::types::SmbMountOptions>) -> Self {
        self.mount_options = input;
        self
    }
    /// <p>Specifies the version of the Server Message Block (SMB) protocol that DataSync uses to access an SMB file server.</p>
    pub fn get_mount_options(&self) -> &::std::option::Option<crate::types::SmbMountOptions> {
        &self.mount_options
    }
    /// <p>Specifies the password of a user who has permission to access your SVM.</p>
    /// This field is required.
    pub fn password(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.password = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Specifies the password of a user who has permission to access your SVM.</p>
    pub fn set_password(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.password = input;
        self
    }
    /// <p>Specifies the password of a user who has permission to access your SVM.</p>
    pub fn get_password(&self) -> &::std::option::Option<::std::string::String> {
        &self.password
    }
    /// <p>Specifies a user name that can mount the location and access the files, folders, and metadata that you need in the SVM.</p>
    /// <p>If you provide a user in your Active Directory, note the following:</p>
    /// <ul>
    /// <li> <p>If you're using Directory Service for Microsoft Active Directory, the user must be a member of the Amazon Web Services Delegated FSx Administrators group.</p> </li>
    /// <li> <p>If you're using a self-managed Active Directory, the user must be a member of either the Domain Admins group or a custom group that you specified for file system administration when you created your file system.</p> </li>
    /// </ul>
    /// <p>Make sure that the user has the permissions it needs to copy the data you want:</p>
    /// <ul>
    /// <li> <p> <code>SE_TCB_NAME</code>: Required to set object ownership and file metadata. With this privilege, you also can copy NTFS discretionary access lists (DACLs).</p> </li>
    /// <li> <p> <code>SE_SECURITY_NAME</code>: May be needed to copy NTFS system access control lists (SACLs). This operation specifically requires the Windows privilege, which is granted to members of the Domain Admins group. If you configure your task to copy SACLs, make sure that the user has the required privileges. For information about copying SACLs, see <a href="https://docs.aws.amazon.com/datasync/latest/userguide/create-task.html#configure-ownership-and-permissions">Ownership and permissions-related options</a>.</p> </li>
    /// </ul>
    /// This field is required.
    pub fn user(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.user = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Specifies a user name that can mount the location and access the files, folders, and metadata that you need in the SVM.</p>
    /// <p>If you provide a user in your Active Directory, note the following:</p>
    /// <ul>
    /// <li> <p>If you're using Directory Service for Microsoft Active Directory, the user must be a member of the Amazon Web Services Delegated FSx Administrators group.</p> </li>
    /// <li> <p>If you're using a self-managed Active Directory, the user must be a member of either the Domain Admins group or a custom group that you specified for file system administration when you created your file system.</p> </li>
    /// </ul>
    /// <p>Make sure that the user has the permissions it needs to copy the data you want:</p>
    /// <ul>
    /// <li> <p> <code>SE_TCB_NAME</code>: Required to set object ownership and file metadata. With this privilege, you also can copy NTFS discretionary access lists (DACLs).</p> </li>
    /// <li> <p> <code>SE_SECURITY_NAME</code>: May be needed to copy NTFS system access control lists (SACLs). This operation specifically requires the Windows privilege, which is granted to members of the Domain Admins group. If you configure your task to copy SACLs, make sure that the user has the required privileges. For information about copying SACLs, see <a href="https://docs.aws.amazon.com/datasync/latest/userguide/create-task.html#configure-ownership-and-permissions">Ownership and permissions-related options</a>.</p> </li>
    /// </ul>
    pub fn set_user(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.user = input;
        self
    }
    /// <p>Specifies a user name that can mount the location and access the files, folders, and metadata that you need in the SVM.</p>
    /// <p>If you provide a user in your Active Directory, note the following:</p>
    /// <ul>
    /// <li> <p>If you're using Directory Service for Microsoft Active Directory, the user must be a member of the Amazon Web Services Delegated FSx Administrators group.</p> </li>
    /// <li> <p>If you're using a self-managed Active Directory, the user must be a member of either the Domain Admins group or a custom group that you specified for file system administration when you created your file system.</p> </li>
    /// </ul>
    /// <p>Make sure that the user has the permissions it needs to copy the data you want:</p>
    /// <ul>
    /// <li> <p> <code>SE_TCB_NAME</code>: Required to set object ownership and file metadata. With this privilege, you also can copy NTFS discretionary access lists (DACLs).</p> </li>
    /// <li> <p> <code>SE_SECURITY_NAME</code>: May be needed to copy NTFS system access control lists (SACLs). This operation specifically requires the Windows privilege, which is granted to members of the Domain Admins group. If you configure your task to copy SACLs, make sure that the user has the required privileges. For information about copying SACLs, see <a href="https://docs.aws.amazon.com/datasync/latest/userguide/create-task.html#configure-ownership-and-permissions">Ownership and permissions-related options</a>.</p> </li>
    /// </ul>
    pub fn get_user(&self) -> &::std::option::Option<::std::string::String> {
        &self.user
    }
    /// Consumes the builder and constructs a [`FsxProtocolSmb`](crate::types::FsxProtocolSmb).
    /// This method will fail if any of the following fields are not set:
    /// - [`password`](crate::types::builders::FsxProtocolSmbBuilder::password)
    /// - [`user`](crate::types::builders::FsxProtocolSmbBuilder::user)
    pub fn build(self) -> ::std::result::Result<crate::types::FsxProtocolSmb, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::FsxProtocolSmb {
            domain: self.domain,
            mount_options: self.mount_options,
            password: self.password.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "password",
                    "password was not specified but it is required when building FsxProtocolSmb",
                )
            })?,
            user: self.user.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "user",
                    "user was not specified but it is required when building FsxProtocolSmb",
                )
            })?,
        })
    }
}
impl ::std::fmt::Debug for FsxProtocolSmbBuilder {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("FsxProtocolSmbBuilder");
        formatter.field("domain", &self.domain);
        formatter.field("mount_options", &self.mount_options);
        formatter.field("password", &"*** Sensitive Data Redacted ***");
        formatter.field("user", &self.user);
        formatter.finish()
    }
}
