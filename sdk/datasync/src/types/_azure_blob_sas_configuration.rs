// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The shared access signature (SAS) configuration that allows DataSync to access your Microsoft Azure Blob Storage.</p>
/// <p>For more information, see <a href="https://docs.aws.amazon.com/datasync/latest/userguide/creating-azure-blob-location.html#azure-blob-sas-tokens">SAS tokens</a> for accessing your Azure Blob Storage.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq)]
pub struct AzureBlobSasConfiguration {
    /// <p>Specifies a SAS token that provides permissions to access your Azure Blob Storage.</p>
    /// <p>The token is part of the SAS URI string that comes after the storage resource URI and a question mark. A token looks something like this:</p>
    /// <p> <code>sp=r&amp;st=2023-12-20T14:54:52Z&amp;se=2023-12-20T22:54:52Z&amp;spr=https&amp;sv=2021-06-08&amp;sr=c&amp;sig=aBBKDWQvyuVcTPH9EBp%2FXTI9E%2F%2Fmq171%2BZU178wcwqU%3D</code> </p>
    pub token: ::std::string::String,
}
impl AzureBlobSasConfiguration {
    /// <p>Specifies a SAS token that provides permissions to access your Azure Blob Storage.</p>
    /// <p>The token is part of the SAS URI string that comes after the storage resource URI and a question mark. A token looks something like this:</p>
    /// <p> <code>sp=r&amp;st=2023-12-20T14:54:52Z&amp;se=2023-12-20T22:54:52Z&amp;spr=https&amp;sv=2021-06-08&amp;sr=c&amp;sig=aBBKDWQvyuVcTPH9EBp%2FXTI9E%2F%2Fmq171%2BZU178wcwqU%3D</code> </p>
    pub fn token(&self) -> &str {
        use std::ops::Deref;
        self.token.deref()
    }
}
impl ::std::fmt::Debug for AzureBlobSasConfiguration {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("AzureBlobSasConfiguration");
        formatter.field("token", &"*** Sensitive Data Redacted ***");
        formatter.finish()
    }
}
impl AzureBlobSasConfiguration {
    /// Creates a new builder-style object to manufacture [`AzureBlobSasConfiguration`](crate::types::AzureBlobSasConfiguration).
    pub fn builder() -> crate::types::builders::AzureBlobSasConfigurationBuilder {
        crate::types::builders::AzureBlobSasConfigurationBuilder::default()
    }
}

/// A builder for [`AzureBlobSasConfiguration`](crate::types::AzureBlobSasConfiguration).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default)]
pub struct AzureBlobSasConfigurationBuilder {
    pub(crate) token: ::std::option::Option<::std::string::String>,
}
impl AzureBlobSasConfigurationBuilder {
    /// <p>Specifies a SAS token that provides permissions to access your Azure Blob Storage.</p>
    /// <p>The token is part of the SAS URI string that comes after the storage resource URI and a question mark. A token looks something like this:</p>
    /// <p> <code>sp=r&amp;st=2023-12-20T14:54:52Z&amp;se=2023-12-20T22:54:52Z&amp;spr=https&amp;sv=2021-06-08&amp;sr=c&amp;sig=aBBKDWQvyuVcTPH9EBp%2FXTI9E%2F%2Fmq171%2BZU178wcwqU%3D</code> </p>
    /// This field is required.
    pub fn token(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.token = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Specifies a SAS token that provides permissions to access your Azure Blob Storage.</p>
    /// <p>The token is part of the SAS URI string that comes after the storage resource URI and a question mark. A token looks something like this:</p>
    /// <p> <code>sp=r&amp;st=2023-12-20T14:54:52Z&amp;se=2023-12-20T22:54:52Z&amp;spr=https&amp;sv=2021-06-08&amp;sr=c&amp;sig=aBBKDWQvyuVcTPH9EBp%2FXTI9E%2F%2Fmq171%2BZU178wcwqU%3D</code> </p>
    pub fn set_token(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.token = input;
        self
    }
    /// <p>Specifies a SAS token that provides permissions to access your Azure Blob Storage.</p>
    /// <p>The token is part of the SAS URI string that comes after the storage resource URI and a question mark. A token looks something like this:</p>
    /// <p> <code>sp=r&amp;st=2023-12-20T14:54:52Z&amp;se=2023-12-20T22:54:52Z&amp;spr=https&amp;sv=2021-06-08&amp;sr=c&amp;sig=aBBKDWQvyuVcTPH9EBp%2FXTI9E%2F%2Fmq171%2BZU178wcwqU%3D</code> </p>
    pub fn get_token(&self) -> &::std::option::Option<::std::string::String> {
        &self.token
    }
    /// Consumes the builder and constructs a [`AzureBlobSasConfiguration`](crate::types::AzureBlobSasConfiguration).
    /// This method will fail if any of the following fields are not set:
    /// - [`token`](crate::types::builders::AzureBlobSasConfigurationBuilder::token)
    pub fn build(self) -> ::std::result::Result<crate::types::AzureBlobSasConfiguration, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::AzureBlobSasConfiguration {
            token: self.token.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "token",
                    "token was not specified but it is required when building AzureBlobSasConfiguration",
                )
            })?,
        })
    }
}
impl ::std::fmt::Debug for AzureBlobSasConfigurationBuilder {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("AzureBlobSasConfigurationBuilder");
        formatter.field("token", &"*** Sensitive Data Redacted ***");
        formatter.finish()
    }
}
