// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The NameNode of the Hadoop Distributed File System (HDFS). The NameNode manages the file system's namespace. The NameNode performs operations such as opening, closing, and renaming files and directories. The NameNode contains the information to map blocks of data to the DataNodes.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct HdfsNameNode {
    /// <p>The hostname of the NameNode in the HDFS cluster. This value is the IP address or Domain Name Service (DNS) name of the NameNode. An agent that's installed on-premises uses this hostname to communicate with the NameNode in the network.</p>
    pub hostname: ::std::string::String,
    /// <p>The port that the NameNode uses to listen to client requests.</p>
    pub port: i32,
}
impl HdfsNameNode {
    /// <p>The hostname of the NameNode in the HDFS cluster. This value is the IP address or Domain Name Service (DNS) name of the NameNode. An agent that's installed on-premises uses this hostname to communicate with the NameNode in the network.</p>
    pub fn hostname(&self) -> &str {
        use std::ops::Deref;
        self.hostname.deref()
    }
    /// <p>The port that the NameNode uses to listen to client requests.</p>
    pub fn port(&self) -> i32 {
        self.port
    }
}
impl HdfsNameNode {
    /// Creates a new builder-style object to manufacture [`HdfsNameNode`](crate::types::HdfsNameNode).
    pub fn builder() -> crate::types::builders::HdfsNameNodeBuilder {
        crate::types::builders::HdfsNameNodeBuilder::default()
    }
}

/// A builder for [`HdfsNameNode`](crate::types::HdfsNameNode).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct HdfsNameNodeBuilder {
    pub(crate) hostname: ::std::option::Option<::std::string::String>,
    pub(crate) port: ::std::option::Option<i32>,
}
impl HdfsNameNodeBuilder {
    /// <p>The hostname of the NameNode in the HDFS cluster. This value is the IP address or Domain Name Service (DNS) name of the NameNode. An agent that's installed on-premises uses this hostname to communicate with the NameNode in the network.</p>
    /// This field is required.
    pub fn hostname(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.hostname = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The hostname of the NameNode in the HDFS cluster. This value is the IP address or Domain Name Service (DNS) name of the NameNode. An agent that's installed on-premises uses this hostname to communicate with the NameNode in the network.</p>
    pub fn set_hostname(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.hostname = input;
        self
    }
    /// <p>The hostname of the NameNode in the HDFS cluster. This value is the IP address or Domain Name Service (DNS) name of the NameNode. An agent that's installed on-premises uses this hostname to communicate with the NameNode in the network.</p>
    pub fn get_hostname(&self) -> &::std::option::Option<::std::string::String> {
        &self.hostname
    }
    /// <p>The port that the NameNode uses to listen to client requests.</p>
    /// This field is required.
    pub fn port(mut self, input: i32) -> Self {
        self.port = ::std::option::Option::Some(input);
        self
    }
    /// <p>The port that the NameNode uses to listen to client requests.</p>
    pub fn set_port(mut self, input: ::std::option::Option<i32>) -> Self {
        self.port = input;
        self
    }
    /// <p>The port that the NameNode uses to listen to client requests.</p>
    pub fn get_port(&self) -> &::std::option::Option<i32> {
        &self.port
    }
    /// Consumes the builder and constructs a [`HdfsNameNode`](crate::types::HdfsNameNode).
    /// This method will fail if any of the following fields are not set:
    /// - [`hostname`](crate::types::builders::HdfsNameNodeBuilder::hostname)
    /// - [`port`](crate::types::builders::HdfsNameNodeBuilder::port)
    pub fn build(self) -> ::std::result::Result<crate::types::HdfsNameNode, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::HdfsNameNode {
            hostname: self.hostname.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "hostname",
                    "hostname was not specified but it is required when building HdfsNameNode",
                )
            })?,
            port: self.port.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "port",
                    "port was not specified but it is required when building HdfsNameNode",
                )
            })?,
        })
    }
}
