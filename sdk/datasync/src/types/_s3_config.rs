// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The Amazon Resource Name (ARN) of the Identity and Access Management (IAM) role used to access an Amazon S3 bucket.</p>
/// <p>For detailed information about using such a role, see Creating a Location for Amazon S3 in the <i>DataSync User Guide</i>.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct S3Config {
    /// <p>The ARN of the IAM role for accessing the S3 bucket. </p>
    #[doc(hidden)]
    pub bucket_access_role_arn: std::option::Option<std::string::String>,
}
impl S3Config {
    /// <p>The ARN of the IAM role for accessing the S3 bucket. </p>
    pub fn bucket_access_role_arn(&self) -> std::option::Option<&str> {
        self.bucket_access_role_arn.as_deref()
    }
}
impl S3Config {
    /// Creates a new builder-style object to manufacture [`S3Config`](crate::types::S3Config).
    pub fn builder() -> crate::types::builders::S3ConfigBuilder {
        crate::types::builders::S3ConfigBuilder::default()
    }
}

/// A builder for [`S3Config`](crate::types::S3Config).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct S3ConfigBuilder {
    pub(crate) bucket_access_role_arn: std::option::Option<std::string::String>,
}
impl S3ConfigBuilder {
    /// <p>The ARN of the IAM role for accessing the S3 bucket. </p>
    pub fn bucket_access_role_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.bucket_access_role_arn = Some(input.into());
        self
    }
    /// <p>The ARN of the IAM role for accessing the S3 bucket. </p>
    pub fn set_bucket_access_role_arn(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.bucket_access_role_arn = input;
        self
    }
    /// Consumes the builder and constructs a [`S3Config`](crate::types::S3Config).
    pub fn build(self) -> crate::types::S3Config {
        crate::types::S3Config {
            bucket_access_role_arn: self.bucket_access_role_arn,
        }
    }
}
