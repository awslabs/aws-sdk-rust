// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Specifies how you want to configure a task report, which provides detailed information about for your DataSync transfer.</p>
/// <p>For more information, see <a href="https://docs.aws.amazon.com/datasync/latest/userguide/task-reports.html">Task reports</a>.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct TaskReportConfig {
    /// <p>Specifies the Amazon S3 bucket where DataSync uploads your task report. For more information, see <a href="https://docs.aws.amazon.com/datasync/latest/userguide/task-reports.html#task-report-access">Task reports</a>.</p>
    pub destination: ::std::option::Option<crate::types::ReportDestination>,
    /// <p>Specifies the type of task report that you want:</p>
    /// <ul>
    /// <li> <p> <code>SUMMARY_ONLY</code>: Provides necessary details about your task, including the number of files, objects, and directories transferred and transfer duration.</p> </li>
    /// <li> <p> <code>STANDARD</code>: Provides complete details about your task, including a full list of files, objects, and directories that were transferred, skipped, verified, and more.</p> </li>
    /// </ul>
    pub output_type: ::std::option::Option<crate::types::ReportOutputType>,
    /// <p>Specifies whether you want your task report to include only what went wrong with your transfer or a list of what succeeded and didn't.</p>
    /// <ul>
    /// <li> <p> <code>ERRORS_ONLY</code>: A report shows what DataSync was unable to transfer, skip, verify, and delete.</p> </li>
    /// <li> <p> <code>SUCCESSES_AND_ERRORS</code>: A report shows what DataSync was able and unable to transfer, skip, verify, and delete.</p> </li>
    /// </ul>
    pub report_level: ::std::option::Option<crate::types::ReportLevel>,
    /// <p>Specifies whether your task report includes the new version of each object transferred into an S3 bucket. This only applies if you <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/manage-versioning-examples.html">enable versioning on your bucket</a>. Keep in mind that setting this to <code>INCLUDE</code> can increase the duration of your task execution.</p>
    pub object_version_ids: ::std::option::Option<crate::types::ObjectVersionIds>,
    /// <p>Customizes the reporting level for aspects of your task report. For example, your report might generally only include errors, but you could specify that you want a list of successes and errors just for the files that DataSync attempted to delete in your destination location.</p>
    pub overrides: ::std::option::Option<crate::types::ReportOverrides>,
}
impl TaskReportConfig {
    /// <p>Specifies the Amazon S3 bucket where DataSync uploads your task report. For more information, see <a href="https://docs.aws.amazon.com/datasync/latest/userguide/task-reports.html#task-report-access">Task reports</a>.</p>
    pub fn destination(&self) -> ::std::option::Option<&crate::types::ReportDestination> {
        self.destination.as_ref()
    }
    /// <p>Specifies the type of task report that you want:</p>
    /// <ul>
    /// <li> <p> <code>SUMMARY_ONLY</code>: Provides necessary details about your task, including the number of files, objects, and directories transferred and transfer duration.</p> </li>
    /// <li> <p> <code>STANDARD</code>: Provides complete details about your task, including a full list of files, objects, and directories that were transferred, skipped, verified, and more.</p> </li>
    /// </ul>
    pub fn output_type(&self) -> ::std::option::Option<&crate::types::ReportOutputType> {
        self.output_type.as_ref()
    }
    /// <p>Specifies whether you want your task report to include only what went wrong with your transfer or a list of what succeeded and didn't.</p>
    /// <ul>
    /// <li> <p> <code>ERRORS_ONLY</code>: A report shows what DataSync was unable to transfer, skip, verify, and delete.</p> </li>
    /// <li> <p> <code>SUCCESSES_AND_ERRORS</code>: A report shows what DataSync was able and unable to transfer, skip, verify, and delete.</p> </li>
    /// </ul>
    pub fn report_level(&self) -> ::std::option::Option<&crate::types::ReportLevel> {
        self.report_level.as_ref()
    }
    /// <p>Specifies whether your task report includes the new version of each object transferred into an S3 bucket. This only applies if you <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/manage-versioning-examples.html">enable versioning on your bucket</a>. Keep in mind that setting this to <code>INCLUDE</code> can increase the duration of your task execution.</p>
    pub fn object_version_ids(&self) -> ::std::option::Option<&crate::types::ObjectVersionIds> {
        self.object_version_ids.as_ref()
    }
    /// <p>Customizes the reporting level for aspects of your task report. For example, your report might generally only include errors, but you could specify that you want a list of successes and errors just for the files that DataSync attempted to delete in your destination location.</p>
    pub fn overrides(&self) -> ::std::option::Option<&crate::types::ReportOverrides> {
        self.overrides.as_ref()
    }
}
impl TaskReportConfig {
    /// Creates a new builder-style object to manufacture [`TaskReportConfig`](crate::types::TaskReportConfig).
    pub fn builder() -> crate::types::builders::TaskReportConfigBuilder {
        crate::types::builders::TaskReportConfigBuilder::default()
    }
}

/// A builder for [`TaskReportConfig`](crate::types::TaskReportConfig).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct TaskReportConfigBuilder {
    pub(crate) destination: ::std::option::Option<crate::types::ReportDestination>,
    pub(crate) output_type: ::std::option::Option<crate::types::ReportOutputType>,
    pub(crate) report_level: ::std::option::Option<crate::types::ReportLevel>,
    pub(crate) object_version_ids: ::std::option::Option<crate::types::ObjectVersionIds>,
    pub(crate) overrides: ::std::option::Option<crate::types::ReportOverrides>,
}
impl TaskReportConfigBuilder {
    /// <p>Specifies the Amazon S3 bucket where DataSync uploads your task report. For more information, see <a href="https://docs.aws.amazon.com/datasync/latest/userguide/task-reports.html#task-report-access">Task reports</a>.</p>
    pub fn destination(mut self, input: crate::types::ReportDestination) -> Self {
        self.destination = ::std::option::Option::Some(input);
        self
    }
    /// <p>Specifies the Amazon S3 bucket where DataSync uploads your task report. For more information, see <a href="https://docs.aws.amazon.com/datasync/latest/userguide/task-reports.html#task-report-access">Task reports</a>.</p>
    pub fn set_destination(mut self, input: ::std::option::Option<crate::types::ReportDestination>) -> Self {
        self.destination = input;
        self
    }
    /// <p>Specifies the Amazon S3 bucket where DataSync uploads your task report. For more information, see <a href="https://docs.aws.amazon.com/datasync/latest/userguide/task-reports.html#task-report-access">Task reports</a>.</p>
    pub fn get_destination(&self) -> &::std::option::Option<crate::types::ReportDestination> {
        &self.destination
    }
    /// <p>Specifies the type of task report that you want:</p>
    /// <ul>
    /// <li> <p> <code>SUMMARY_ONLY</code>: Provides necessary details about your task, including the number of files, objects, and directories transferred and transfer duration.</p> </li>
    /// <li> <p> <code>STANDARD</code>: Provides complete details about your task, including a full list of files, objects, and directories that were transferred, skipped, verified, and more.</p> </li>
    /// </ul>
    pub fn output_type(mut self, input: crate::types::ReportOutputType) -> Self {
        self.output_type = ::std::option::Option::Some(input);
        self
    }
    /// <p>Specifies the type of task report that you want:</p>
    /// <ul>
    /// <li> <p> <code>SUMMARY_ONLY</code>: Provides necessary details about your task, including the number of files, objects, and directories transferred and transfer duration.</p> </li>
    /// <li> <p> <code>STANDARD</code>: Provides complete details about your task, including a full list of files, objects, and directories that were transferred, skipped, verified, and more.</p> </li>
    /// </ul>
    pub fn set_output_type(mut self, input: ::std::option::Option<crate::types::ReportOutputType>) -> Self {
        self.output_type = input;
        self
    }
    /// <p>Specifies the type of task report that you want:</p>
    /// <ul>
    /// <li> <p> <code>SUMMARY_ONLY</code>: Provides necessary details about your task, including the number of files, objects, and directories transferred and transfer duration.</p> </li>
    /// <li> <p> <code>STANDARD</code>: Provides complete details about your task, including a full list of files, objects, and directories that were transferred, skipped, verified, and more.</p> </li>
    /// </ul>
    pub fn get_output_type(&self) -> &::std::option::Option<crate::types::ReportOutputType> {
        &self.output_type
    }
    /// <p>Specifies whether you want your task report to include only what went wrong with your transfer or a list of what succeeded and didn't.</p>
    /// <ul>
    /// <li> <p> <code>ERRORS_ONLY</code>: A report shows what DataSync was unable to transfer, skip, verify, and delete.</p> </li>
    /// <li> <p> <code>SUCCESSES_AND_ERRORS</code>: A report shows what DataSync was able and unable to transfer, skip, verify, and delete.</p> </li>
    /// </ul>
    pub fn report_level(mut self, input: crate::types::ReportLevel) -> Self {
        self.report_level = ::std::option::Option::Some(input);
        self
    }
    /// <p>Specifies whether you want your task report to include only what went wrong with your transfer or a list of what succeeded and didn't.</p>
    /// <ul>
    /// <li> <p> <code>ERRORS_ONLY</code>: A report shows what DataSync was unable to transfer, skip, verify, and delete.</p> </li>
    /// <li> <p> <code>SUCCESSES_AND_ERRORS</code>: A report shows what DataSync was able and unable to transfer, skip, verify, and delete.</p> </li>
    /// </ul>
    pub fn set_report_level(mut self, input: ::std::option::Option<crate::types::ReportLevel>) -> Self {
        self.report_level = input;
        self
    }
    /// <p>Specifies whether you want your task report to include only what went wrong with your transfer or a list of what succeeded and didn't.</p>
    /// <ul>
    /// <li> <p> <code>ERRORS_ONLY</code>: A report shows what DataSync was unable to transfer, skip, verify, and delete.</p> </li>
    /// <li> <p> <code>SUCCESSES_AND_ERRORS</code>: A report shows what DataSync was able and unable to transfer, skip, verify, and delete.</p> </li>
    /// </ul>
    pub fn get_report_level(&self) -> &::std::option::Option<crate::types::ReportLevel> {
        &self.report_level
    }
    /// <p>Specifies whether your task report includes the new version of each object transferred into an S3 bucket. This only applies if you <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/manage-versioning-examples.html">enable versioning on your bucket</a>. Keep in mind that setting this to <code>INCLUDE</code> can increase the duration of your task execution.</p>
    pub fn object_version_ids(mut self, input: crate::types::ObjectVersionIds) -> Self {
        self.object_version_ids = ::std::option::Option::Some(input);
        self
    }
    /// <p>Specifies whether your task report includes the new version of each object transferred into an S3 bucket. This only applies if you <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/manage-versioning-examples.html">enable versioning on your bucket</a>. Keep in mind that setting this to <code>INCLUDE</code> can increase the duration of your task execution.</p>
    pub fn set_object_version_ids(mut self, input: ::std::option::Option<crate::types::ObjectVersionIds>) -> Self {
        self.object_version_ids = input;
        self
    }
    /// <p>Specifies whether your task report includes the new version of each object transferred into an S3 bucket. This only applies if you <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/manage-versioning-examples.html">enable versioning on your bucket</a>. Keep in mind that setting this to <code>INCLUDE</code> can increase the duration of your task execution.</p>
    pub fn get_object_version_ids(&self) -> &::std::option::Option<crate::types::ObjectVersionIds> {
        &self.object_version_ids
    }
    /// <p>Customizes the reporting level for aspects of your task report. For example, your report might generally only include errors, but you could specify that you want a list of successes and errors just for the files that DataSync attempted to delete in your destination location.</p>
    pub fn overrides(mut self, input: crate::types::ReportOverrides) -> Self {
        self.overrides = ::std::option::Option::Some(input);
        self
    }
    /// <p>Customizes the reporting level for aspects of your task report. For example, your report might generally only include errors, but you could specify that you want a list of successes and errors just for the files that DataSync attempted to delete in your destination location.</p>
    pub fn set_overrides(mut self, input: ::std::option::Option<crate::types::ReportOverrides>) -> Self {
        self.overrides = input;
        self
    }
    /// <p>Customizes the reporting level for aspects of your task report. For example, your report might generally only include errors, but you could specify that you want a list of successes and errors just for the files that DataSync attempted to delete in your destination location.</p>
    pub fn get_overrides(&self) -> &::std::option::Option<crate::types::ReportOverrides> {
        &self.overrides
    }
    /// Consumes the builder and constructs a [`TaskReportConfig`](crate::types::TaskReportConfig).
    pub fn build(self) -> crate::types::TaskReportConfig {
        crate::types::TaskReportConfig {
            destination: self.destination,
            output_type: self.output_type,
            report_level: self.report_level,
            object_version_ids: self.object_version_ids,
            overrides: self.overrides,
        }
    }
}
