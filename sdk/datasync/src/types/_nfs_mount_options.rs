// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Specifies how DataSync can access a location using the NFS protocol.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct NfsMountOptions {
    /// <p>Specifies the NFS version that you want DataSync to use when mounting your NFS share. If the server refuses to use the version specified, the task fails.</p>
    /// <p>You can specify the following options:</p>
    /// <ul>
    /// <li> <p> <code>AUTOMATIC</code> (default): DataSync chooses NFS version 4.1.</p> </li>
    /// <li> <p> <code>NFS3</code>: Stateless protocol version that allows for asynchronous writes on the server.</p> </li>
    /// <li> <p> <code>NFSv4_0</code>: Stateful, firewall-friendly protocol version that supports delegations and pseudo file systems.</p> </li>
    /// <li> <p> <code>NFSv4_1</code>: Stateful protocol version that supports sessions, directory delegations, and parallel data processing. NFS version 4.1 also includes all features available in version 4.0.</p> </li>
    /// </ul> <note>
    /// <p>DataSync currently only supports NFS version 3 with Amazon FSx for NetApp ONTAP locations.</p>
    /// </note>
    #[doc(hidden)]
    pub version: std::option::Option<crate::types::NfsVersion>,
}
impl NfsMountOptions {
    /// <p>Specifies the NFS version that you want DataSync to use when mounting your NFS share. If the server refuses to use the version specified, the task fails.</p>
    /// <p>You can specify the following options:</p>
    /// <ul>
    /// <li> <p> <code>AUTOMATIC</code> (default): DataSync chooses NFS version 4.1.</p> </li>
    /// <li> <p> <code>NFS3</code>: Stateless protocol version that allows for asynchronous writes on the server.</p> </li>
    /// <li> <p> <code>NFSv4_0</code>: Stateful, firewall-friendly protocol version that supports delegations and pseudo file systems.</p> </li>
    /// <li> <p> <code>NFSv4_1</code>: Stateful protocol version that supports sessions, directory delegations, and parallel data processing. NFS version 4.1 also includes all features available in version 4.0.</p> </li>
    /// </ul> <note>
    /// <p>DataSync currently only supports NFS version 3 with Amazon FSx for NetApp ONTAP locations.</p>
    /// </note>
    pub fn version(&self) -> std::option::Option<&crate::types::NfsVersion> {
        self.version.as_ref()
    }
}
impl NfsMountOptions {
    /// Creates a new builder-style object to manufacture [`NfsMountOptions`](crate::types::NfsMountOptions).
    pub fn builder() -> crate::types::builders::NfsMountOptionsBuilder {
        crate::types::builders::NfsMountOptionsBuilder::default()
    }
}

/// A builder for [`NfsMountOptions`](crate::types::NfsMountOptions).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct NfsMountOptionsBuilder {
    pub(crate) version: std::option::Option<crate::types::NfsVersion>,
}
impl NfsMountOptionsBuilder {
    /// <p>Specifies the NFS version that you want DataSync to use when mounting your NFS share. If the server refuses to use the version specified, the task fails.</p>
    /// <p>You can specify the following options:</p>
    /// <ul>
    /// <li> <p> <code>AUTOMATIC</code> (default): DataSync chooses NFS version 4.1.</p> </li>
    /// <li> <p> <code>NFS3</code>: Stateless protocol version that allows for asynchronous writes on the server.</p> </li>
    /// <li> <p> <code>NFSv4_0</code>: Stateful, firewall-friendly protocol version that supports delegations and pseudo file systems.</p> </li>
    /// <li> <p> <code>NFSv4_1</code>: Stateful protocol version that supports sessions, directory delegations, and parallel data processing. NFS version 4.1 also includes all features available in version 4.0.</p> </li>
    /// </ul> <note>
    /// <p>DataSync currently only supports NFS version 3 with Amazon FSx for NetApp ONTAP locations.</p>
    /// </note>
    pub fn version(mut self, input: crate::types::NfsVersion) -> Self {
        self.version = Some(input);
        self
    }
    /// <p>Specifies the NFS version that you want DataSync to use when mounting your NFS share. If the server refuses to use the version specified, the task fails.</p>
    /// <p>You can specify the following options:</p>
    /// <ul>
    /// <li> <p> <code>AUTOMATIC</code> (default): DataSync chooses NFS version 4.1.</p> </li>
    /// <li> <p> <code>NFS3</code>: Stateless protocol version that allows for asynchronous writes on the server.</p> </li>
    /// <li> <p> <code>NFSv4_0</code>: Stateful, firewall-friendly protocol version that supports delegations and pseudo file systems.</p> </li>
    /// <li> <p> <code>NFSv4_1</code>: Stateful protocol version that supports sessions, directory delegations, and parallel data processing. NFS version 4.1 also includes all features available in version 4.0.</p> </li>
    /// </ul> <note>
    /// <p>DataSync currently only supports NFS version 3 with Amazon FSx for NetApp ONTAP locations.</p>
    /// </note>
    pub fn set_version(mut self, input: std::option::Option<crate::types::NfsVersion>) -> Self {
        self.version = input;
        self
    }
    /// Consumes the builder and constructs a [`NfsMountOptions`](crate::types::NfsMountOptions).
    pub fn build(self) -> crate::types::NfsMountOptions {
        crate::types::NfsMountOptions {
            version: self.version,
        }
    }
}
