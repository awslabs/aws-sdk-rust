// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Specifies where DataSync uploads your <a href="https://docs.aws.amazon.com/datasync/latest/userguide/task-reports.html">task report</a>.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ReportDestination {
    /// <p>Specifies the Amazon S3 bucket where DataSync uploads your task report.</p>
    pub s3: ::std::option::Option<crate::types::ReportDestinationS3>,
}
impl ReportDestination {
    /// <p>Specifies the Amazon S3 bucket where DataSync uploads your task report.</p>
    pub fn s3(&self) -> ::std::option::Option<&crate::types::ReportDestinationS3> {
        self.s3.as_ref()
    }
}
impl ReportDestination {
    /// Creates a new builder-style object to manufacture [`ReportDestination`](crate::types::ReportDestination).
    pub fn builder() -> crate::types::builders::ReportDestinationBuilder {
        crate::types::builders::ReportDestinationBuilder::default()
    }
}

/// A builder for [`ReportDestination`](crate::types::ReportDestination).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ReportDestinationBuilder {
    pub(crate) s3: ::std::option::Option<crate::types::ReportDestinationS3>,
}
impl ReportDestinationBuilder {
    /// <p>Specifies the Amazon S3 bucket where DataSync uploads your task report.</p>
    pub fn s3(mut self, input: crate::types::ReportDestinationS3) -> Self {
        self.s3 = ::std::option::Option::Some(input);
        self
    }
    /// <p>Specifies the Amazon S3 bucket where DataSync uploads your task report.</p>
    pub fn set_s3(mut self, input: ::std::option::Option<crate::types::ReportDestinationS3>) -> Self {
        self.s3 = input;
        self
    }
    /// <p>Specifies the Amazon S3 bucket where DataSync uploads your task report.</p>
    pub fn get_s3(&self) -> &::std::option::Option<crate::types::ReportDestinationS3> {
        &self.s3
    }
    /// Consumes the builder and constructs a [`ReportDestination`](crate::types::ReportDestination).
    pub fn build(self) -> crate::types::ReportDestination {
        crate::types::ReportDestination { s3: self.s3 }
    }
}
