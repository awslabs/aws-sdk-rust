// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Specifies how DataSync can access a location using the SMB protocol.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct SmbMountOptions {
    /// <p>Specifies the SMB version that you want DataSync to use when mounting your SMB share. If you don't specify a version, DataSync defaults to <code>AUTOMATIC</code> and chooses a version based on negotiation with the SMB server.</p>
    #[doc(hidden)]
    pub version: std::option::Option<crate::types::SmbVersion>,
}
impl SmbMountOptions {
    /// <p>Specifies the SMB version that you want DataSync to use when mounting your SMB share. If you don't specify a version, DataSync defaults to <code>AUTOMATIC</code> and chooses a version based on negotiation with the SMB server.</p>
    pub fn version(&self) -> std::option::Option<&crate::types::SmbVersion> {
        self.version.as_ref()
    }
}
impl SmbMountOptions {
    /// Creates a new builder-style object to manufacture [`SmbMountOptions`](crate::types::SmbMountOptions).
    pub fn builder() -> crate::types::builders::SmbMountOptionsBuilder {
        crate::types::builders::SmbMountOptionsBuilder::default()
    }
}

/// A builder for [`SmbMountOptions`](crate::types::SmbMountOptions).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct SmbMountOptionsBuilder {
    pub(crate) version: std::option::Option<crate::types::SmbVersion>,
}
impl SmbMountOptionsBuilder {
    /// <p>Specifies the SMB version that you want DataSync to use when mounting your SMB share. If you don't specify a version, DataSync defaults to <code>AUTOMATIC</code> and chooses a version based on negotiation with the SMB server.</p>
    pub fn version(mut self, input: crate::types::SmbVersion) -> Self {
        self.version = Some(input);
        self
    }
    /// <p>Specifies the SMB version that you want DataSync to use when mounting your SMB share. If you don't specify a version, DataSync defaults to <code>AUTOMATIC</code> and chooses a version based on negotiation with the SMB server.</p>
    pub fn set_version(mut self, input: std::option::Option<crate::types::SmbVersion>) -> Self {
        self.version = input;
        self
    }
    /// Consumes the builder and constructs a [`SmbMountOptions`](crate::types::SmbMountOptions).
    pub fn build(self) -> crate::types::SmbMountOptions {
        crate::types::SmbMountOptions {
            version: self.version,
        }
    }
}
