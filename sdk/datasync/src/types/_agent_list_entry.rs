// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Represents a single entry in a list (or array) of DataSync agents when you call the <a href="https://docs.aws.amazon.com/datasync/latest/userguide/API_ListAgents.html">ListAgents</a> operation.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AgentListEntry {
    /// <p>The Amazon Resource Name (ARN) of a DataSync agent.</p>
    pub agent_arn: ::std::option::Option<::std::string::String>,
    /// <p>The name of an agent.</p>
    pub name: ::std::option::Option<::std::string::String>,
    /// <p>The status of an agent.</p>
    /// <ul>
    /// <li> <p>If the status is <code>ONLINE</code>, the agent is configured properly and ready to use.</p> </li>
    /// <li> <p>If the status is <code>OFFLINE</code>, the agent has been out of contact with DataSync for five minutes or longer. This can happen for a few reasons. For more information, see <a href="https://docs.aws.amazon.com/datasync/latest/userguide/troubleshooting-datasync-agents.html#troubleshoot-agent-offline">What do I do if my agent is offline?</a> </p> </li>
    /// </ul>
    pub status: ::std::option::Option<crate::types::AgentStatus>,
    /// <p>The platform-related details about the agent, such as the version number.</p>
    pub platform: ::std::option::Option<crate::types::Platform>,
}
impl AgentListEntry {
    /// <p>The Amazon Resource Name (ARN) of a DataSync agent.</p>
    pub fn agent_arn(&self) -> ::std::option::Option<&str> {
        self.agent_arn.as_deref()
    }
    /// <p>The name of an agent.</p>
    pub fn name(&self) -> ::std::option::Option<&str> {
        self.name.as_deref()
    }
    /// <p>The status of an agent.</p>
    /// <ul>
    /// <li> <p>If the status is <code>ONLINE</code>, the agent is configured properly and ready to use.</p> </li>
    /// <li> <p>If the status is <code>OFFLINE</code>, the agent has been out of contact with DataSync for five minutes or longer. This can happen for a few reasons. For more information, see <a href="https://docs.aws.amazon.com/datasync/latest/userguide/troubleshooting-datasync-agents.html#troubleshoot-agent-offline">What do I do if my agent is offline?</a> </p> </li>
    /// </ul>
    pub fn status(&self) -> ::std::option::Option<&crate::types::AgentStatus> {
        self.status.as_ref()
    }
    /// <p>The platform-related details about the agent, such as the version number.</p>
    pub fn platform(&self) -> ::std::option::Option<&crate::types::Platform> {
        self.platform.as_ref()
    }
}
impl AgentListEntry {
    /// Creates a new builder-style object to manufacture [`AgentListEntry`](crate::types::AgentListEntry).
    pub fn builder() -> crate::types::builders::AgentListEntryBuilder {
        crate::types::builders::AgentListEntryBuilder::default()
    }
}

/// A builder for [`AgentListEntry`](crate::types::AgentListEntry).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct AgentListEntryBuilder {
    pub(crate) agent_arn: ::std::option::Option<::std::string::String>,
    pub(crate) name: ::std::option::Option<::std::string::String>,
    pub(crate) status: ::std::option::Option<crate::types::AgentStatus>,
    pub(crate) platform: ::std::option::Option<crate::types::Platform>,
}
impl AgentListEntryBuilder {
    /// <p>The Amazon Resource Name (ARN) of a DataSync agent.</p>
    pub fn agent_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.agent_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of a DataSync agent.</p>
    pub fn set_agent_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.agent_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of a DataSync agent.</p>
    pub fn get_agent_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.agent_arn
    }
    /// <p>The name of an agent.</p>
    pub fn name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of an agent.</p>
    pub fn set_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>The name of an agent.</p>
    pub fn get_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.name
    }
    /// <p>The status of an agent.</p>
    /// <ul>
    /// <li> <p>If the status is <code>ONLINE</code>, the agent is configured properly and ready to use.</p> </li>
    /// <li> <p>If the status is <code>OFFLINE</code>, the agent has been out of contact with DataSync for five minutes or longer. This can happen for a few reasons. For more information, see <a href="https://docs.aws.amazon.com/datasync/latest/userguide/troubleshooting-datasync-agents.html#troubleshoot-agent-offline">What do I do if my agent is offline?</a> </p> </li>
    /// </ul>
    pub fn status(mut self, input: crate::types::AgentStatus) -> Self {
        self.status = ::std::option::Option::Some(input);
        self
    }
    /// <p>The status of an agent.</p>
    /// <ul>
    /// <li> <p>If the status is <code>ONLINE</code>, the agent is configured properly and ready to use.</p> </li>
    /// <li> <p>If the status is <code>OFFLINE</code>, the agent has been out of contact with DataSync for five minutes or longer. This can happen for a few reasons. For more information, see <a href="https://docs.aws.amazon.com/datasync/latest/userguide/troubleshooting-datasync-agents.html#troubleshoot-agent-offline">What do I do if my agent is offline?</a> </p> </li>
    /// </ul>
    pub fn set_status(mut self, input: ::std::option::Option<crate::types::AgentStatus>) -> Self {
        self.status = input;
        self
    }
    /// <p>The status of an agent.</p>
    /// <ul>
    /// <li> <p>If the status is <code>ONLINE</code>, the agent is configured properly and ready to use.</p> </li>
    /// <li> <p>If the status is <code>OFFLINE</code>, the agent has been out of contact with DataSync for five minutes or longer. This can happen for a few reasons. For more information, see <a href="https://docs.aws.amazon.com/datasync/latest/userguide/troubleshooting-datasync-agents.html#troubleshoot-agent-offline">What do I do if my agent is offline?</a> </p> </li>
    /// </ul>
    pub fn get_status(&self) -> &::std::option::Option<crate::types::AgentStatus> {
        &self.status
    }
    /// <p>The platform-related details about the agent, such as the version number.</p>
    pub fn platform(mut self, input: crate::types::Platform) -> Self {
        self.platform = ::std::option::Option::Some(input);
        self
    }
    /// <p>The platform-related details about the agent, such as the version number.</p>
    pub fn set_platform(mut self, input: ::std::option::Option<crate::types::Platform>) -> Self {
        self.platform = input;
        self
    }
    /// <p>The platform-related details about the agent, such as the version number.</p>
    pub fn get_platform(&self) -> &::std::option::Option<crate::types::Platform> {
        &self.platform
    }
    /// Consumes the builder and constructs a [`AgentListEntry`](crate::types::AgentListEntry).
    pub fn build(self) -> crate::types::AgentListEntry {
        crate::types::AgentListEntry {
            agent_arn: self.agent_arn,
            name: self.name,
            status: self.status,
            platform: self.platform,
        }
    }
}
