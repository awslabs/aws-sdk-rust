// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateLocationEfs`](crate::operation::create_location_efs::builders::CreateLocationEfsFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`subdirectory(impl Into<String>)`](crate::operation::create_location_efs::builders::CreateLocationEfsFluentBuilder::subdirectory) / [`set_subdirectory(Option<String>)`](crate::operation::create_location_efs::builders::CreateLocationEfsFluentBuilder::set_subdirectory):<br>required: **false**<br><p>Specifies a mount path for your Amazon EFS file system. This is where DataSync reads or writes data (depending on if this is a source or destination location). By default, DataSync uses the root directory, but you can also include subdirectories.</p> <note>   <p>You must specify a value with forward slashes (for example, <code>/path/to/folder</code>).</p>  </note><br>
    ///   - [`efs_filesystem_arn(impl Into<String>)`](crate::operation::create_location_efs::builders::CreateLocationEfsFluentBuilder::efs_filesystem_arn) / [`set_efs_filesystem_arn(Option<String>)`](crate::operation::create_location_efs::builders::CreateLocationEfsFluentBuilder::set_efs_filesystem_arn):<br>required: **true**<br><p>Specifies the ARN for the Amazon EFS file system.</p><br>
    ///   - [`ec2_config(Ec2Config)`](crate::operation::create_location_efs::builders::CreateLocationEfsFluentBuilder::ec2_config) / [`set_ec2_config(Option<Ec2Config>)`](crate::operation::create_location_efs::builders::CreateLocationEfsFluentBuilder::set_ec2_config):<br>required: **true**<br><p>Specifies the subnet and security groups DataSync uses to access your Amazon EFS file system.</p><br>
    ///   - [`tags(TagListEntry)`](crate::operation::create_location_efs::builders::CreateLocationEfsFluentBuilder::tags) / [`set_tags(Option<Vec::<TagListEntry>>)`](crate::operation::create_location_efs::builders::CreateLocationEfsFluentBuilder::set_tags):<br>required: **false**<br><p>Specifies the key-value pair that represents a tag that you want to add to the resource. The value can be an empty string. This value helps you manage, filter, and search for your resources. We recommend that you create a name tag for your location.</p><br>
    ///   - [`access_point_arn(impl Into<String>)`](crate::operation::create_location_efs::builders::CreateLocationEfsFluentBuilder::access_point_arn) / [`set_access_point_arn(Option<String>)`](crate::operation::create_location_efs::builders::CreateLocationEfsFluentBuilder::set_access_point_arn):<br>required: **false**<br><p>Specifies the Amazon Resource Name (ARN) of the access point that DataSync uses to access the Amazon EFS file system.</p><br>
    ///   - [`file_system_access_role_arn(impl Into<String>)`](crate::operation::create_location_efs::builders::CreateLocationEfsFluentBuilder::file_system_access_role_arn) / [`set_file_system_access_role_arn(Option<String>)`](crate::operation::create_location_efs::builders::CreateLocationEfsFluentBuilder::set_file_system_access_role_arn):<br>required: **false**<br><p>Specifies an Identity and Access Management (IAM) role that DataSync assumes when mounting the Amazon EFS file system.</p><br>
    ///   - [`in_transit_encryption(EfsInTransitEncryption)`](crate::operation::create_location_efs::builders::CreateLocationEfsFluentBuilder::in_transit_encryption) / [`set_in_transit_encryption(Option<EfsInTransitEncryption>)`](crate::operation::create_location_efs::builders::CreateLocationEfsFluentBuilder::set_in_transit_encryption):<br>required: **false**<br><p>Specifies whether you want DataSync to use Transport Layer Security (TLS) 1.2 encryption when it copies data to or from the Amazon EFS file system.</p>  <p>If you specify an access point using <code>AccessPointArn</code> or an IAM role using <code>FileSystemAccessRoleArn</code>, you must set this parameter to <code>TLS1_2</code>.</p><br>
    /// - On success, responds with [`CreateLocationEfsOutput`](crate::operation::create_location_efs::CreateLocationEfsOutput) with field(s):
    ///   - [`location_arn(Option<String>)`](crate::operation::create_location_efs::CreateLocationEfsOutput::location_arn): <p>The Amazon Resource Name (ARN) of the Amazon EFS file system location that you create.</p>
    /// - On failure, responds with [`SdkError<CreateLocationEfsError>`](crate::operation::create_location_efs::CreateLocationEfsError)
    pub fn create_location_efs(&self) -> crate::operation::create_location_efs::builders::CreateLocationEfsFluentBuilder {
        crate::operation::create_location_efs::builders::CreateLocationEfsFluentBuilder::new(self.handle.clone())
    }
}
