// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`StartTaskExecution`](crate::operation::start_task_execution::builders::StartTaskExecutionFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`task_arn(impl Into<String>)`](crate::operation::start_task_execution::builders::StartTaskExecutionFluentBuilder::task_arn) / [`set_task_arn(Option<String>)`](crate::operation::start_task_execution::builders::StartTaskExecutionFluentBuilder::set_task_arn): <p>Specifies the Amazon Resource Name (ARN) of the task that you want to start.</p>
    ///   - [`override_options(Options)`](crate::operation::start_task_execution::builders::StartTaskExecutionFluentBuilder::override_options) / [`set_override_options(Option<Options>)`](crate::operation::start_task_execution::builders::StartTaskExecutionFluentBuilder::set_override_options): <p>Configures your DataSync task settings. These options include how DataSync handles files, objects, and their associated metadata. You also can specify how DataSync verifies data integrity, set bandwidth limits for your task, among other options.</p>  <p>Each task setting has a default value. Unless you need to, you don't have to configure any of these <code>Options</code> before starting your task.</p>
    ///   - [`includes(Vec<FilterRule>)`](crate::operation::start_task_execution::builders::StartTaskExecutionFluentBuilder::includes) / [`set_includes(Option<Vec<FilterRule>>)`](crate::operation::start_task_execution::builders::StartTaskExecutionFluentBuilder::set_includes): <p>Specifies a list of filter rules that determines which files to include when running a task. The pattern should contain a single filter string that consists of the patterns to include. The patterns are delimited by "|" (that is, a pipe), for example, <code>"/folder1|/folder2"</code>. </p>
    ///   - [`excludes(Vec<FilterRule>)`](crate::operation::start_task_execution::builders::StartTaskExecutionFluentBuilder::excludes) / [`set_excludes(Option<Vec<FilterRule>>)`](crate::operation::start_task_execution::builders::StartTaskExecutionFluentBuilder::set_excludes): <p>Specifies a list of filter rules that determines which files to exclude from a task. The list contains a single filter string that consists of the patterns to exclude. The patterns are delimited by "|" (that is, a pipe), for example, <code>"/folder1|/folder2"</code>. </p>
    ///   - [`tags(Vec<TagListEntry>)`](crate::operation::start_task_execution::builders::StartTaskExecutionFluentBuilder::tags) / [`set_tags(Option<Vec<TagListEntry>>)`](crate::operation::start_task_execution::builders::StartTaskExecutionFluentBuilder::set_tags): <p>Specifies the tags that you want to apply to the Amazon Resource Name (ARN) representing the task execution.</p>  <p> <i>Tags</i> are key-value pairs that help you manage, filter, and search for your DataSync resources.</p>
    /// - On success, responds with [`StartTaskExecutionOutput`](crate::operation::start_task_execution::StartTaskExecutionOutput) with field(s):
    ///   - [`task_execution_arn(Option<String>)`](crate::operation::start_task_execution::StartTaskExecutionOutput::task_execution_arn): <p>The ARN of the running task execution.</p>
    /// - On failure, responds with [`SdkError<StartTaskExecutionError>`](crate::operation::start_task_execution::StartTaskExecutionError)
    pub fn start_task_execution(
        &self,
    ) -> crate::operation::start_task_execution::builders::StartTaskExecutionFluentBuilder {
        crate::operation::start_task_execution::builders::StartTaskExecutionFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
