// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeTaskExecution`](crate::operation::describe_task_execution::builders::DescribeTaskExecutionFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`task_execution_arn(impl Into<String>)`](crate::operation::describe_task_execution::builders::DescribeTaskExecutionFluentBuilder::task_execution_arn) / [`set_task_execution_arn(Option<String>)`](crate::operation::describe_task_execution::builders::DescribeTaskExecutionFluentBuilder::set_task_execution_arn): <p>The Amazon Resource Name (ARN) of the task that is being executed.</p>
    /// - On success, responds with [`DescribeTaskExecutionOutput`](crate::operation::describe_task_execution::DescribeTaskExecutionOutput) with field(s):
    ///   - [`task_execution_arn(Option<String>)`](crate::operation::describe_task_execution::DescribeTaskExecutionOutput::task_execution_arn): <p>The Amazon Resource Name (ARN) of the task execution that was described. <code>TaskExecutionArn</code> is hierarchical and includes <code>TaskArn</code> for the task that was executed. </p>  <p>For example, a <code>TaskExecution</code> value with the ARN <code>arn:aws:datasync:us-east-1:111222333444:task/task-0208075f79cedf4a2/execution/exec-08ef1e88ec491019b</code> executed the task with the ARN <code>arn:aws:datasync:us-east-1:111222333444:task/task-0208075f79cedf4a2</code>. </p>
    ///   - [`status(Option<TaskExecutionStatus>)`](crate::operation::describe_task_execution::DescribeTaskExecutionOutput::status): <p>The status of the task execution. </p>  <p>For detailed information about task execution statuses, see Understanding Task Statuses in the <i>DataSync User Guide.</i> </p>
    ///   - [`options(Option<Options>)`](crate::operation::describe_task_execution::DescribeTaskExecutionOutput::options): <p>Configures your DataSync task settings. These options include how DataSync handles files, objects, and their associated metadata. You also can specify how DataSync verifies data integrity, set bandwidth limits for your task, among other options.</p>  <p>Each task setting has a default value. Unless you need to, you don't have to configure any of these <code>Options</code> before starting your task.</p>
    ///   - [`excludes(Option<Vec<FilterRule>>)`](crate::operation::describe_task_execution::DescribeTaskExecutionOutput::excludes): <p>A list of filter rules that exclude specific data during your transfer. For more information and examples, see <a href="https://docs.aws.amazon.com/datasync/latest/userguide/filtering.html">Filtering data transferred by DataSync</a>.</p>
    ///   - [`includes(Option<Vec<FilterRule>>)`](crate::operation::describe_task_execution::DescribeTaskExecutionOutput::includes): <p>A list of filter rules that include specific data during your transfer. For more information and examples, see <a href="https://docs.aws.amazon.com/datasync/latest/userguide/filtering.html">Filtering data transferred by DataSync</a>.</p>
    ///   - [`start_time(Option<DateTime>)`](crate::operation::describe_task_execution::DescribeTaskExecutionOutput::start_time): <p>The time that the task execution was started.</p>
    ///   - [`estimated_files_to_transfer(i64)`](crate::operation::describe_task_execution::DescribeTaskExecutionOutput::estimated_files_to_transfer): <p>The expected number of files that is to be transferred over the network. This value is calculated during the <code>PREPARING</code> phase before the <code>TRANSFERRING</code> phase of the task execution. This value is the expected number of files to be transferred. It's calculated based on comparing the content of the source and destination locations and finding the delta that needs to be transferred. </p>
    ///   - [`estimated_bytes_to_transfer(i64)`](crate::operation::describe_task_execution::DescribeTaskExecutionOutput::estimated_bytes_to_transfer): <p>The estimated physical number of bytes that is to be transferred over the network.</p>
    ///   - [`files_transferred(i64)`](crate::operation::describe_task_execution::DescribeTaskExecutionOutput::files_transferred): <p>The actual number of files that was transferred over the network. This value is calculated and updated on an ongoing basis during the <code>TRANSFERRING</code> phase of the task execution. It's updated periodically when each file is read from the source and sent over the network. </p>  <p>If failures occur during a transfer, this value can be less than <code>EstimatedFilesToTransfer</code>. In some cases, this value can also be greater than <code>EstimatedFilesToTransfer</code>. This element is implementation-specific for some location types, so don't use it as an indicator for a correct file number or to monitor your task execution.</p>
    ///   - [`bytes_written(i64)`](crate::operation::describe_task_execution::DescribeTaskExecutionOutput::bytes_written): <p>The number of logical bytes written to the destination Amazon Web Services storage resource.</p>
    ///   - [`bytes_transferred(i64)`](crate::operation::describe_task_execution::DescribeTaskExecutionOutput::bytes_transferred): <p>The total number of bytes that are involved in the transfer. For the number of bytes sent over the network, see <code>BytesCompressed</code>. </p>
    ///   - [`result(Option<TaskExecutionResultDetail>)`](crate::operation::describe_task_execution::DescribeTaskExecutionOutput::result): <p>The result of the task execution.</p>
    ///   - [`bytes_compressed(i64)`](crate::operation::describe_task_execution::DescribeTaskExecutionOutput::bytes_compressed): <p>The physical number of bytes transferred over the network after compression was applied. In most cases, this number is less than <code>BytesTransferred</code> unless the data isn't compressible.</p>
    /// - On failure, responds with [`SdkError<DescribeTaskExecutionError>`](crate::operation::describe_task_execution::DescribeTaskExecutionError)
    pub fn describe_task_execution(
        &self,
    ) -> crate::operation::describe_task_execution::builders::DescribeTaskExecutionFluentBuilder
    {
        crate::operation::describe_task_execution::builders::DescribeTaskExecutionFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
