// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeLocationFsxOpenZfs`](crate::client::fluent_builders::DescribeLocationFsxOpenZfs) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`location_arn(impl Into<String>)`](crate::client::fluent_builders::DescribeLocationFsxOpenZfs::location_arn) / [`set_location_arn(Option<String>)`](crate::client::fluent_builders::DescribeLocationFsxOpenZfs::set_location_arn): <p>The Amazon Resource Name (ARN) of the FSx for OpenZFS location to describe.</p>
    /// - On success, responds with [`DescribeLocationFsxOpenZfsOutput`](crate::output::DescribeLocationFsxOpenZfsOutput) with field(s):
    ///   - [`location_arn(Option<String>)`](crate::output::DescribeLocationFsxOpenZfsOutput::location_arn): <p>The ARN of the FSx for OpenZFS location that was described.</p>
    ///   - [`location_uri(Option<String>)`](crate::output::DescribeLocationFsxOpenZfsOutput::location_uri): <p>The uniform resource identifier (URI) of the FSx for OpenZFS location that was described.</p>  <p>Example: <code>fsxz://us-west-2.fs-1234567890abcdef02/fsx/folderA/folder</code> </p>
    ///   - [`security_group_arns(Option<Vec<String>>)`](crate::output::DescribeLocationFsxOpenZfsOutput::security_group_arns): <p>The ARNs of the security groups that are configured for the FSx for OpenZFS file system.</p>
    ///   - [`protocol(Option<FsxProtocol>)`](crate::output::DescribeLocationFsxOpenZfsOutput::protocol): <p>The type of protocol that DataSync uses to access your file system.</p>
    ///   - [`creation_time(Option<DateTime>)`](crate::output::DescribeLocationFsxOpenZfsOutput::creation_time): <p>The time that the FSx for OpenZFS location was created.</p>
    /// - On failure, responds with [`SdkError<DescribeLocationFsxOpenZfsError>`](crate::error::DescribeLocationFsxOpenZfsError)
    pub fn describe_location_fsx_open_zfs(
        &self,
    ) -> crate::client::fluent_builders::DescribeLocationFsxOpenZfs {
        crate::client::fluent_builders::DescribeLocationFsxOpenZfs::new(self.handle.clone())
    }
}
