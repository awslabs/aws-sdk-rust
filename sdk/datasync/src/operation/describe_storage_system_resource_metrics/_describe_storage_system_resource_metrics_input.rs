// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DescribeStorageSystemResourceMetricsInput {
    /// <p>Specifies the Amazon Resource Name (ARN) of the discovery job that collects information about your on-premises storage system.</p>
    pub discovery_job_arn: ::std::option::Option<::std::string::String>,
    /// <p>Specifies the kind of storage system resource that you want information about.</p>
    pub resource_type: ::std::option::Option<crate::types::DiscoveryResourceType>,
    /// <p>Specifies the universally unique identifier (UUID) of the storage system resource that you want information about.</p>
    pub resource_id: ::std::option::Option<::std::string::String>,
    /// <p>Specifies a time within the total duration that the discovery job ran. To see information gathered during a certain time frame, use this parameter with <code>EndTime</code>.</p>
    pub start_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>Specifies a time within the total duration that the discovery job ran. To see information gathered during a certain time frame, use this parameter with <code>StartTime</code>.</p>
    pub end_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>Specifies how many results that you want in the response.</p>
    pub max_results: ::std::option::Option<i32>,
    /// <p>Specifies an opaque string that indicates the position to begin the next list of results in the response.</p>
    pub next_token: ::std::option::Option<::std::string::String>,
}
impl DescribeStorageSystemResourceMetricsInput {
    /// <p>Specifies the Amazon Resource Name (ARN) of the discovery job that collects information about your on-premises storage system.</p>
    pub fn discovery_job_arn(&self) -> ::std::option::Option<&str> {
        self.discovery_job_arn.as_deref()
    }
    /// <p>Specifies the kind of storage system resource that you want information about.</p>
    pub fn resource_type(&self) -> ::std::option::Option<&crate::types::DiscoveryResourceType> {
        self.resource_type.as_ref()
    }
    /// <p>Specifies the universally unique identifier (UUID) of the storage system resource that you want information about.</p>
    pub fn resource_id(&self) -> ::std::option::Option<&str> {
        self.resource_id.as_deref()
    }
    /// <p>Specifies a time within the total duration that the discovery job ran. To see information gathered during a certain time frame, use this parameter with <code>EndTime</code>.</p>
    pub fn start_time(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.start_time.as_ref()
    }
    /// <p>Specifies a time within the total duration that the discovery job ran. To see information gathered during a certain time frame, use this parameter with <code>StartTime</code>.</p>
    pub fn end_time(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.end_time.as_ref()
    }
    /// <p>Specifies how many results that you want in the response.</p>
    pub fn max_results(&self) -> ::std::option::Option<i32> {
        self.max_results
    }
    /// <p>Specifies an opaque string that indicates the position to begin the next list of results in the response.</p>
    pub fn next_token(&self) -> ::std::option::Option<&str> {
        self.next_token.as_deref()
    }
}
impl DescribeStorageSystemResourceMetricsInput {
    /// Creates a new builder-style object to manufacture [`DescribeStorageSystemResourceMetricsInput`](crate::operation::describe_storage_system_resource_metrics::DescribeStorageSystemResourceMetricsInput).
    pub fn builder() -> crate::operation::describe_storage_system_resource_metrics::builders::DescribeStorageSystemResourceMetricsInputBuilder {
        crate::operation::describe_storage_system_resource_metrics::builders::DescribeStorageSystemResourceMetricsInputBuilder::default()
    }
}

/// A builder for [`DescribeStorageSystemResourceMetricsInput`](crate::operation::describe_storage_system_resource_metrics::DescribeStorageSystemResourceMetricsInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DescribeStorageSystemResourceMetricsInputBuilder {
    pub(crate) discovery_job_arn: ::std::option::Option<::std::string::String>,
    pub(crate) resource_type: ::std::option::Option<crate::types::DiscoveryResourceType>,
    pub(crate) resource_id: ::std::option::Option<::std::string::String>,
    pub(crate) start_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) end_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) max_results: ::std::option::Option<i32>,
    pub(crate) next_token: ::std::option::Option<::std::string::String>,
}
impl DescribeStorageSystemResourceMetricsInputBuilder {
    /// <p>Specifies the Amazon Resource Name (ARN) of the discovery job that collects information about your on-premises storage system.</p>
    /// This field is required.
    pub fn discovery_job_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.discovery_job_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Specifies the Amazon Resource Name (ARN) of the discovery job that collects information about your on-premises storage system.</p>
    pub fn set_discovery_job_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.discovery_job_arn = input;
        self
    }
    /// <p>Specifies the Amazon Resource Name (ARN) of the discovery job that collects information about your on-premises storage system.</p>
    pub fn get_discovery_job_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.discovery_job_arn
    }
    /// <p>Specifies the kind of storage system resource that you want information about.</p>
    /// This field is required.
    pub fn resource_type(mut self, input: crate::types::DiscoveryResourceType) -> Self {
        self.resource_type = ::std::option::Option::Some(input);
        self
    }
    /// <p>Specifies the kind of storage system resource that you want information about.</p>
    pub fn set_resource_type(mut self, input: ::std::option::Option<crate::types::DiscoveryResourceType>) -> Self {
        self.resource_type = input;
        self
    }
    /// <p>Specifies the kind of storage system resource that you want information about.</p>
    pub fn get_resource_type(&self) -> &::std::option::Option<crate::types::DiscoveryResourceType> {
        &self.resource_type
    }
    /// <p>Specifies the universally unique identifier (UUID) of the storage system resource that you want information about.</p>
    /// This field is required.
    pub fn resource_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.resource_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Specifies the universally unique identifier (UUID) of the storage system resource that you want information about.</p>
    pub fn set_resource_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.resource_id = input;
        self
    }
    /// <p>Specifies the universally unique identifier (UUID) of the storage system resource that you want information about.</p>
    pub fn get_resource_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.resource_id
    }
    /// <p>Specifies a time within the total duration that the discovery job ran. To see information gathered during a certain time frame, use this parameter with <code>EndTime</code>.</p>
    pub fn start_time(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.start_time = ::std::option::Option::Some(input);
        self
    }
    /// <p>Specifies a time within the total duration that the discovery job ran. To see information gathered during a certain time frame, use this parameter with <code>EndTime</code>.</p>
    pub fn set_start_time(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.start_time = input;
        self
    }
    /// <p>Specifies a time within the total duration that the discovery job ran. To see information gathered during a certain time frame, use this parameter with <code>EndTime</code>.</p>
    pub fn get_start_time(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.start_time
    }
    /// <p>Specifies a time within the total duration that the discovery job ran. To see information gathered during a certain time frame, use this parameter with <code>StartTime</code>.</p>
    pub fn end_time(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.end_time = ::std::option::Option::Some(input);
        self
    }
    /// <p>Specifies a time within the total duration that the discovery job ran. To see information gathered during a certain time frame, use this parameter with <code>StartTime</code>.</p>
    pub fn set_end_time(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.end_time = input;
        self
    }
    /// <p>Specifies a time within the total duration that the discovery job ran. To see information gathered during a certain time frame, use this parameter with <code>StartTime</code>.</p>
    pub fn get_end_time(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.end_time
    }
    /// <p>Specifies how many results that you want in the response.</p>
    pub fn max_results(mut self, input: i32) -> Self {
        self.max_results = ::std::option::Option::Some(input);
        self
    }
    /// <p>Specifies how many results that you want in the response.</p>
    pub fn set_max_results(mut self, input: ::std::option::Option<i32>) -> Self {
        self.max_results = input;
        self
    }
    /// <p>Specifies how many results that you want in the response.</p>
    pub fn get_max_results(&self) -> &::std::option::Option<i32> {
        &self.max_results
    }
    /// <p>Specifies an opaque string that indicates the position to begin the next list of results in the response.</p>
    pub fn next_token(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.next_token = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Specifies an opaque string that indicates the position to begin the next list of results in the response.</p>
    pub fn set_next_token(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// <p>Specifies an opaque string that indicates the position to begin the next list of results in the response.</p>
    pub fn get_next_token(&self) -> &::std::option::Option<::std::string::String> {
        &self.next_token
    }
    /// Consumes the builder and constructs a [`DescribeStorageSystemResourceMetricsInput`](crate::operation::describe_storage_system_resource_metrics::DescribeStorageSystemResourceMetricsInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::describe_storage_system_resource_metrics::DescribeStorageSystemResourceMetricsInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(
            crate::operation::describe_storage_system_resource_metrics::DescribeStorageSystemResourceMetricsInput {
                discovery_job_arn: self.discovery_job_arn,
                resource_type: self.resource_type,
                resource_id: self.resource_id,
                start_time: self.start_time,
                end_time: self.end_time,
                max_results: self.max_results,
                next_token: self.next_token,
            },
        )
    }
}
