// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub use crate::operation::describe_agent::_describe_agent_output::DescribeAgentOutputBuilder;

pub use crate::operation::describe_agent::_describe_agent_input::DescribeAgentInputBuilder;

/// Fluent builder constructing a request to `DescribeAgent`.
///
/// <p>Returns metadata such as the name, the network interfaces, and the status (that is, whether the agent is running or not) for an agent. To specify which agent to describe, use the Amazon Resource Name (ARN) of the agent in your request. </p>
#[derive(std::clone::Clone, std::fmt::Debug)]
pub struct DescribeAgentFluentBuilder {
    handle: std::sync::Arc<crate::client::Handle>,
    inner: crate::operation::describe_agent::builders::DescribeAgentInputBuilder,
}
impl DescribeAgentFluentBuilder {
    /// Creates a new `DescribeAgent`.
    pub(crate) fn new(handle: std::sync::Arc<crate::client::Handle>) -> Self {
        Self {
            handle,
            inner: Default::default(),
        }
    }

    /// Consume this builder, creating a customizable operation that can be modified before being
    /// sent. The operation's inner [http::Request] can be modified as well.
    pub async fn customize(
        self,
    ) -> std::result::Result<
        crate::client::customize::CustomizableOperation<
            crate::operation::describe_agent::DescribeAgent,
            aws_http::retry::AwsResponseRetryClassifier,
        >,
        aws_smithy_http::result::SdkError<crate::operation::describe_agent::DescribeAgentError>,
    > {
        let handle = self.handle.clone();
        let operation = self
            .inner
            .build()
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?
            .make_operation(&handle.conf)
            .await
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?;
        Ok(crate::client::customize::CustomizableOperation { handle, operation })
    }

    /// Sends the request and returns the response.
    ///
    /// If an error occurs, an `SdkError` will be returned with additional details that
    /// can be matched against.
    ///
    /// By default, any retryable failures will be retried twice. Retry behavior
    /// is configurable with the [RetryConfig](aws_smithy_types::retry::RetryConfig), which can be
    /// set when configuring the client.
    pub async fn send(
        self,
    ) -> std::result::Result<
        crate::operation::describe_agent::DescribeAgentOutput,
        aws_smithy_http::result::SdkError<crate::operation::describe_agent::DescribeAgentError>,
    > {
        let op = self
            .inner
            .build()
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?
            .make_operation(&self.handle.conf)
            .await
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?;
        self.handle.client.call(op).await
    }
    /// <p>The Amazon Resource Name (ARN) of the agent to describe.</p>
    pub fn agent_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.inner = self.inner.agent_arn(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the agent to describe.</p>
    pub fn set_agent_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.inner = self.inner.set_agent_arn(input);
        self
    }
}
