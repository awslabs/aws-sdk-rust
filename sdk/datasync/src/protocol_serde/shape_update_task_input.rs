// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_update_task_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::update_task::UpdateTaskInput,
) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    if let Some(var_1) = &input.task_arn {
        object.key("TaskArn").string(var_1.as_str());
    }
    if let Some(var_2) = &input.options {
        #[allow(unused_mut)]
        let mut object_3 = object.key("Options").start_object();
        crate::protocol_serde::shape_options::ser_options(&mut object_3, var_2)?;
        object_3.finish();
    }
    if let Some(var_4) = &input.excludes {
        let mut array_5 = object.key("Excludes").start_array();
        for item_6 in var_4 {
            {
                #[allow(unused_mut)]
                let mut object_7 = array_5.value().start_object();
                crate::protocol_serde::shape_filter_rule::ser_filter_rule(&mut object_7, item_6)?;
                object_7.finish();
            }
        }
        array_5.finish();
    }
    if let Some(var_8) = &input.schedule {
        #[allow(unused_mut)]
        let mut object_9 = object.key("Schedule").start_object();
        crate::protocol_serde::shape_task_schedule::ser_task_schedule(&mut object_9, var_8)?;
        object_9.finish();
    }
    if let Some(var_10) = &input.name {
        object.key("Name").string(var_10.as_str());
    }
    if let Some(var_11) = &input.cloud_watch_log_group_arn {
        object.key("CloudWatchLogGroupArn").string(var_11.as_str());
    }
    if let Some(var_12) = &input.includes {
        let mut array_13 = object.key("Includes").start_array();
        for item_14 in var_12 {
            {
                #[allow(unused_mut)]
                let mut object_15 = array_13.value().start_object();
                crate::protocol_serde::shape_filter_rule::ser_filter_rule(&mut object_15, item_14)?;
                object_15.finish();
            }
        }
        array_13.finish();
    }
    Ok(())
}
