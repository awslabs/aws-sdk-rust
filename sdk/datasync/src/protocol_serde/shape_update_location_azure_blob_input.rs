// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_update_location_azure_blob_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::update_location_azure_blob::UpdateLocationAzureBlobInput,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.location_arn {
        object.key("LocationArn").string(var_1.as_str());
    }
    if let Some(var_2) = &input.subdirectory {
        object.key("Subdirectory").string(var_2.as_str());
    }
    if let Some(var_3) = &input.authentication_type {
        object.key("AuthenticationType").string(var_3.as_str());
    }
    if let Some(var_4) = &input.sas_configuration {
        #[allow(unused_mut)]
        let mut object_5 = object.key("SasConfiguration").start_object();
        crate::protocol_serde::shape_azure_blob_sas_configuration::ser_azure_blob_sas_configuration(&mut object_5, var_4)?;
        object_5.finish();
    }
    if let Some(var_6) = &input.blob_type {
        object.key("BlobType").string(var_6.as_str());
    }
    if let Some(var_7) = &input.access_tier {
        object.key("AccessTier").string(var_7.as_str());
    }
    if let Some(var_8) = &input.agent_arns {
        let mut array_9 = object.key("AgentArns").start_array();
        for item_10 in var_8 {
            {
                array_9.value().string(item_10.as_str());
            }
        }
        array_9.finish();
    }
    Ok(())
}
