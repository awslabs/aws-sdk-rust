// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) mod shape_cancel_task_execution;

pub fn parse_http_error_metadata(
    response: &http::Response<bytes::Bytes>,
) -> Result<
    aws_smithy_types::error::metadata::Builder,
    aws_smithy_json::deserialize::error::DeserializeError,
> {
    crate::json_errors::parse_error_metadata(response.body(), response.headers())
}

pub(crate) mod shape_create_agent;

pub(crate) mod shape_create_location_efs;

pub(crate) mod shape_create_location_fsx_lustre;

pub(crate) mod shape_create_location_fsx_ontap;

pub(crate) mod shape_create_location_fsx_open_zfs;

pub(crate) mod shape_create_location_fsx_windows;

pub(crate) mod shape_create_location_hdfs;

pub(crate) mod shape_create_location_nfs;

pub(crate) mod shape_create_location_object_storage;

pub(crate) mod shape_create_location_s3;

pub(crate) mod shape_create_location_smb;

pub(crate) mod shape_create_task;

pub(crate) mod shape_delete_agent;

pub(crate) mod shape_delete_location;

pub(crate) mod shape_delete_task;

pub(crate) mod shape_describe_agent;

pub(crate) mod shape_describe_location_efs;

pub(crate) mod shape_describe_location_fsx_lustre;

pub(crate) mod shape_describe_location_fsx_ontap;

pub(crate) mod shape_describe_location_fsx_open_zfs;

pub(crate) mod shape_describe_location_fsx_windows;

pub(crate) mod shape_describe_location_hdfs;

pub(crate) mod shape_describe_location_nfs;

pub(crate) mod shape_describe_location_object_storage;

pub(crate) mod shape_describe_location_s3;

pub(crate) mod shape_describe_location_smb;

pub(crate) mod shape_describe_task;

pub(crate) mod shape_describe_task_execution;

pub(crate) mod shape_list_agents;

pub(crate) mod shape_list_locations;

pub(crate) mod shape_list_tags_for_resource;

pub(crate) mod shape_list_task_executions;

pub(crate) mod shape_list_tasks;

pub(crate) mod shape_start_task_execution;

pub(crate) mod shape_tag_resource;

pub(crate) mod shape_untag_resource;

pub(crate) mod shape_update_agent;

pub(crate) mod shape_update_location_hdfs;

pub(crate) mod shape_update_location_nfs;

pub(crate) mod shape_update_location_object_storage;

pub(crate) mod shape_update_location_smb;

pub(crate) mod shape_update_task;

pub(crate) mod shape_update_task_execution;

pub(crate) mod shape_cancel_task_execution_input;

pub(crate) fn or_empty_doc(data: &[u8]) -> &[u8] {
    if data.is_empty() {
        b"{}"
    } else {
        data
    }
}

pub(crate) mod shape_create_agent_input;

pub(crate) mod shape_create_location_efs_input;

pub(crate) mod shape_create_location_fsx_lustre_input;

pub(crate) mod shape_create_location_fsx_ontap_input;

pub(crate) mod shape_create_location_fsx_open_zfs_input;

pub(crate) mod shape_create_location_fsx_windows_input;

pub(crate) mod shape_create_location_hdfs_input;

pub(crate) mod shape_create_location_nfs_input;

pub(crate) mod shape_create_location_object_storage_input;

pub(crate) mod shape_create_location_s3_input;

pub(crate) mod shape_create_location_smb_input;

pub(crate) mod shape_create_task_input;

pub(crate) mod shape_delete_agent_input;

pub(crate) mod shape_delete_location_input;

pub(crate) mod shape_delete_task_input;

pub(crate) mod shape_describe_agent_input;

pub(crate) mod shape_describe_location_efs_input;

pub(crate) mod shape_describe_location_fsx_lustre_input;

pub(crate) mod shape_describe_location_fsx_ontap_input;

pub(crate) mod shape_describe_location_fsx_open_zfs_input;

pub(crate) mod shape_describe_location_fsx_windows_input;

pub(crate) mod shape_describe_location_hdfs_input;

pub(crate) mod shape_describe_location_nfs_input;

pub(crate) mod shape_describe_location_object_storage_input;

pub(crate) mod shape_describe_location_s3_input;

pub(crate) mod shape_describe_location_smb_input;

pub(crate) mod shape_describe_task_execution_input;

pub(crate) mod shape_describe_task_input;

pub(crate) mod shape_internal_exception;

pub(crate) mod shape_invalid_request_exception;

pub(crate) mod shape_list_agents_input;

pub(crate) mod shape_list_locations_input;

pub(crate) mod shape_list_tags_for_resource_input;

pub(crate) mod shape_list_task_executions_input;

pub(crate) mod shape_list_tasks_input;

pub(crate) mod shape_start_task_execution_input;

pub(crate) mod shape_tag_resource_input;

pub(crate) mod shape_untag_resource_input;

pub(crate) mod shape_update_agent_input;

pub(crate) mod shape_update_location_hdfs_input;

pub(crate) mod shape_update_location_nfs_input;

pub(crate) mod shape_update_location_object_storage_input;

pub(crate) mod shape_update_location_smb_input;

pub(crate) mod shape_update_task_execution_input;

pub(crate) mod shape_update_task_input;

pub(crate) mod shape_agent_arn_list;

pub(crate) mod shape_agent_list;

pub(crate) mod shape_destination_network_interface_arns;

pub(crate) mod shape_ec2_config;

pub(crate) mod shape_ec2_security_group_arn_list;

pub(crate) mod shape_filter_list;

pub(crate) mod shape_filter_rule;

pub(crate) mod shape_fsx_protocol;

pub(crate) mod shape_hdfs_name_node;

pub(crate) mod shape_hdfs_name_node_list;

pub(crate) mod shape_location_filter;

pub(crate) mod shape_location_list;

pub(crate) mod shape_nfs_mount_options;

pub(crate) mod shape_on_prem_config;

pub(crate) mod shape_options;

pub(crate) mod shape_output_tag_list;

pub(crate) mod shape_private_link_config;

pub(crate) mod shape_qop_configuration;

pub(crate) mod shape_s3_config;

pub(crate) mod shape_smb_mount_options;

pub(crate) mod shape_source_network_interface_arns;

pub(crate) mod shape_tag_list_entry;

pub(crate) mod shape_task_execution_list;

pub(crate) mod shape_task_execution_result_detail;

pub(crate) mod shape_task_filter;

pub(crate) mod shape_task_list;

pub(crate) mod shape_task_schedule;

pub(crate) mod shape_agent_list_entry;

pub(crate) mod shape_fsx_protocol_nfs;

pub(crate) mod shape_fsx_protocol_smb;

pub(crate) mod shape_location_list_entry;

pub(crate) mod shape_pl_security_group_arn_list;

pub(crate) mod shape_pl_subnet_arn_list;

pub(crate) mod shape_task_execution_list_entry;

pub(crate) mod shape_task_list_entry;
