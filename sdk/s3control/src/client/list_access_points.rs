// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListAccessPoints`](crate::operation::list_access_points::builders::ListAccessPointsFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::list_access_points::builders::ListAccessPointsFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`account_id(impl Into<String>)`](crate::operation::list_access_points::builders::ListAccessPointsFluentBuilder::account_id) / [`set_account_id(Option<String>)`](crate::operation::list_access_points::builders::ListAccessPointsFluentBuilder::set_account_id):<br>required: **true**<br><p>The Amazon Web Services account ID for the account that owns the specified access points.</p><br>
    ///   - [`bucket(impl Into<String>)`](crate::operation::list_access_points::builders::ListAccessPointsFluentBuilder::bucket) / [`set_bucket(Option<String>)`](crate::operation::list_access_points::builders::ListAccessPointsFluentBuilder::set_bucket):<br>required: **false**<br><p>The name of the bucket whose associated access points you want to list.</p>  <p>For using this parameter with Amazon S3 on Outposts with the REST API, you must specify the name and the x-amz-outpost-id as well.</p>  <p>For using this parameter with S3 on Outposts with the Amazon Web Services SDK and CLI, you must specify the ARN of the bucket accessed in the format <code>arn:aws:s3-outposts:   <region>    :    <account-id>     :outpost/     <outpost-id>      /bucket/      <my-bucket-name></my-bucket-name>     </outpost-id>    </account-id>   </region></code>. For example, to access the bucket <code>reports</code> through Outpost <code>my-outpost</code> owned by account <code>123456789012</code> in Region <code>us-west-2</code>, use the URL encoding of <code>arn:aws:s3-outposts:us-west-2:123456789012:outpost/my-outpost/bucket/reports</code>. The value must be URL encoded. </p><br>
    ///   - [`next_token(impl Into<String>)`](crate::operation::list_access_points::builders::ListAccessPointsFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::list_access_points::builders::ListAccessPointsFluentBuilder::set_next_token):<br>required: **false**<br><p>A continuation token. If a previous call to <code>ListAccessPoints</code> returned a continuation token in the <code>NextToken</code> field, then providing that value here causes Amazon S3 to retrieve the next page of results.</p><br>
    ///   - [`max_results(i32)`](crate::operation::list_access_points::builders::ListAccessPointsFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::list_access_points::builders::ListAccessPointsFluentBuilder::set_max_results):<br>required: **false**<br><p>The maximum number of access points that you want to include in the list. If the specified bucket has more than this number of access points, then the response will include a continuation token in the <code>NextToken</code> field that you can use to retrieve the next page of access points.</p><br>
    /// - On success, responds with [`ListAccessPointsOutput`](crate::operation::list_access_points::ListAccessPointsOutput) with field(s):
    ///   - [`access_point_list(Option<Vec::<AccessPoint>>)`](crate::operation::list_access_points::ListAccessPointsOutput::access_point_list): <p>Contains identification and configuration information for one or more access points associated with the specified bucket.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::list_access_points::ListAccessPointsOutput::next_token): <p>If the specified bucket has more access points than can be returned in one call to this API, this field contains a continuation token that you can provide in subsequent calls to this API to retrieve additional access points.</p>
    /// - On failure, responds with [`SdkError<ListAccessPointsError>`](crate::operation::list_access_points::ListAccessPointsError)
    pub fn list_access_points(&self) -> crate::operation::list_access_points::builders::ListAccessPointsFluentBuilder {
        crate::operation::list_access_points::builders::ListAccessPointsFluentBuilder::new(self.handle.clone())
    }
}
