// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`PutStorageLensConfiguration`](crate::client::fluent_builders::PutStorageLensConfiguration) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`config_id(impl Into<String>)`](crate::client::fluent_builders::PutStorageLensConfiguration::config_id) / [`set_config_id(Option<String>)`](crate::client::fluent_builders::PutStorageLensConfiguration::set_config_id): <p>The ID of the S3 Storage Lens configuration.</p>
    ///   - [`account_id(impl Into<String>)`](crate::client::fluent_builders::PutStorageLensConfiguration::account_id) / [`set_account_id(Option<String>)`](crate::client::fluent_builders::PutStorageLensConfiguration::set_account_id): <p>The account ID of the requester.</p>
    ///   - [`storage_lens_configuration(StorageLensConfiguration)`](crate::client::fluent_builders::PutStorageLensConfiguration::storage_lens_configuration) / [`set_storage_lens_configuration(Option<StorageLensConfiguration>)`](crate::client::fluent_builders::PutStorageLensConfiguration::set_storage_lens_configuration): <p>The S3 Storage Lens configuration.</p>
    ///   - [`tags(Vec<StorageLensTag>)`](crate::client::fluent_builders::PutStorageLensConfiguration::tags) / [`set_tags(Option<Vec<StorageLensTag>>)`](crate::client::fluent_builders::PutStorageLensConfiguration::set_tags): <p>The tag set of the S3 Storage Lens configuration.</p> <note>   <p>You can set up to a maximum of 50 tags.</p>  </note>
    /// - On success, responds with [`PutStorageLensConfigurationOutput`](crate::output::PutStorageLensConfigurationOutput)
    /// - On failure, responds with [`SdkError<PutStorageLensConfigurationError>`](crate::error::PutStorageLensConfigurationError)
    pub fn put_storage_lens_configuration(
        &self,
    ) -> crate::client::fluent_builders::PutStorageLensConfiguration {
        crate::client::fluent_builders::PutStorageLensConfiguration::new(self.handle.clone())
    }
}
