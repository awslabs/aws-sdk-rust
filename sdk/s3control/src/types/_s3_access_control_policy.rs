// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p></p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct S3AccessControlPolicy {
    /// <p></p>
    #[doc(hidden)]
    pub access_control_list: std::option::Option<crate::types::S3AccessControlList>,
    /// <p></p>
    #[doc(hidden)]
    pub canned_access_control_list: std::option::Option<crate::types::S3CannedAccessControlList>,
}
impl S3AccessControlPolicy {
    /// <p></p>
    pub fn access_control_list(&self) -> std::option::Option<&crate::types::S3AccessControlList> {
        self.access_control_list.as_ref()
    }
    /// <p></p>
    pub fn canned_access_control_list(
        &self,
    ) -> std::option::Option<&crate::types::S3CannedAccessControlList> {
        self.canned_access_control_list.as_ref()
    }
}
impl S3AccessControlPolicy {
    /// Creates a new builder-style object to manufacture [`S3AccessControlPolicy`](crate::types::S3AccessControlPolicy).
    pub fn builder() -> crate::types::builders::S3AccessControlPolicyBuilder {
        crate::types::builders::S3AccessControlPolicyBuilder::default()
    }
}

/// A builder for [`S3AccessControlPolicy`](crate::types::S3AccessControlPolicy).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct S3AccessControlPolicyBuilder {
    pub(crate) access_control_list: std::option::Option<crate::types::S3AccessControlList>,
    pub(crate) canned_access_control_list:
        std::option::Option<crate::types::S3CannedAccessControlList>,
}
impl S3AccessControlPolicyBuilder {
    /// <p></p>
    pub fn access_control_list(mut self, input: crate::types::S3AccessControlList) -> Self {
        self.access_control_list = Some(input);
        self
    }
    /// <p></p>
    pub fn set_access_control_list(
        mut self,
        input: std::option::Option<crate::types::S3AccessControlList>,
    ) -> Self {
        self.access_control_list = input;
        self
    }
    /// <p></p>
    pub fn canned_access_control_list(
        mut self,
        input: crate::types::S3CannedAccessControlList,
    ) -> Self {
        self.canned_access_control_list = Some(input);
        self
    }
    /// <p></p>
    pub fn set_canned_access_control_list(
        mut self,
        input: std::option::Option<crate::types::S3CannedAccessControlList>,
    ) -> Self {
        self.canned_access_control_list = input;
        self
    }
    /// Consumes the builder and constructs a [`S3AccessControlPolicy`](crate::types::S3AccessControlPolicy).
    pub fn build(self) -> crate::types::S3AccessControlPolicy {
        crate::types::S3AccessControlPolicy {
            access_control_list: self.access_control_list,
            canned_access_control_list: self.canned_access_control_list,
        }
    }
}
