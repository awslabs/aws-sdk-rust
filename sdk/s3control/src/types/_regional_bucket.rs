// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The container for the regional bucket.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct RegionalBucket {
    /// <p></p>
    #[doc(hidden)]
    pub bucket: std::option::Option<std::string::String>,
    /// <p>The Amazon Resource Name (ARN) for the regional bucket.</p>
    #[doc(hidden)]
    pub bucket_arn: std::option::Option<std::string::String>,
    /// <p></p>
    #[doc(hidden)]
    pub public_access_block_enabled: bool,
    /// <p>The creation date of the regional bucket</p>
    #[doc(hidden)]
    pub creation_date: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>The Outposts ID of the regional bucket.</p>
    #[doc(hidden)]
    pub outpost_id: std::option::Option<std::string::String>,
}
impl RegionalBucket {
    /// <p></p>
    pub fn bucket(&self) -> std::option::Option<&str> {
        self.bucket.as_deref()
    }
    /// <p>The Amazon Resource Name (ARN) for the regional bucket.</p>
    pub fn bucket_arn(&self) -> std::option::Option<&str> {
        self.bucket_arn.as_deref()
    }
    /// <p></p>
    pub fn public_access_block_enabled(&self) -> bool {
        self.public_access_block_enabled
    }
    /// <p>The creation date of the regional bucket</p>
    pub fn creation_date(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.creation_date.as_ref()
    }
    /// <p>The Outposts ID of the regional bucket.</p>
    pub fn outpost_id(&self) -> std::option::Option<&str> {
        self.outpost_id.as_deref()
    }
}
impl RegionalBucket {
    /// Creates a new builder-style object to manufacture [`RegionalBucket`](crate::types::RegionalBucket).
    pub fn builder() -> crate::types::builders::RegionalBucketBuilder {
        crate::types::builders::RegionalBucketBuilder::default()
    }
}

/// A builder for [`RegionalBucket`](crate::types::RegionalBucket).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct RegionalBucketBuilder {
    pub(crate) bucket: std::option::Option<std::string::String>,
    pub(crate) bucket_arn: std::option::Option<std::string::String>,
    pub(crate) public_access_block_enabled: std::option::Option<bool>,
    pub(crate) creation_date: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) outpost_id: std::option::Option<std::string::String>,
}
impl RegionalBucketBuilder {
    /// <p></p>
    pub fn bucket(mut self, input: impl Into<std::string::String>) -> Self {
        self.bucket = Some(input.into());
        self
    }
    /// <p></p>
    pub fn set_bucket(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.bucket = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) for the regional bucket.</p>
    pub fn bucket_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.bucket_arn = Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) for the regional bucket.</p>
    pub fn set_bucket_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.bucket_arn = input;
        self
    }
    /// <p></p>
    pub fn public_access_block_enabled(mut self, input: bool) -> Self {
        self.public_access_block_enabled = Some(input);
        self
    }
    /// <p></p>
    pub fn set_public_access_block_enabled(mut self, input: std::option::Option<bool>) -> Self {
        self.public_access_block_enabled = input;
        self
    }
    /// <p>The creation date of the regional bucket</p>
    pub fn creation_date(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.creation_date = Some(input);
        self
    }
    /// <p>The creation date of the regional bucket</p>
    pub fn set_creation_date(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.creation_date = input;
        self
    }
    /// <p>The Outposts ID of the regional bucket.</p>
    pub fn outpost_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.outpost_id = Some(input.into());
        self
    }
    /// <p>The Outposts ID of the regional bucket.</p>
    pub fn set_outpost_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.outpost_id = input;
        self
    }
    /// Consumes the builder and constructs a [`RegionalBucket`](crate::types::RegionalBucket).
    pub fn build(self) -> crate::types::RegionalBucket {
        crate::types::RegionalBucket {
            bucket: self.bucket,
            bucket_arn: self.bucket_arn,
            public_access_block_enabled: self.public_access_block_enabled.unwrap_or_default(),
            creation_date: self.creation_date,
            outpost_id: self.outpost_id,
        }
    }
}
