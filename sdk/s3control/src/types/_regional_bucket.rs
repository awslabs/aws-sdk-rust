// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The container for the regional bucket.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct RegionalBucket {
    /// <p></p>
    pub bucket: ::std::string::String,
    /// <p>The Amazon Resource Name (ARN) for the regional bucket.</p>
    pub bucket_arn: ::std::option::Option<::std::string::String>,
    /// <p></p>
    pub public_access_block_enabled: bool,
    /// <p>The creation date of the regional bucket</p>
    pub creation_date: ::aws_smithy_types::DateTime,
    /// <p>The Outposts ID of the regional bucket.</p>
    pub outpost_id: ::std::option::Option<::std::string::String>,
}
impl RegionalBucket {
    /// <p></p>
    pub fn bucket(&self) -> &str {
        use std::ops::Deref;
        self.bucket.deref()
    }
    /// <p>The Amazon Resource Name (ARN) for the regional bucket.</p>
    pub fn bucket_arn(&self) -> ::std::option::Option<&str> {
        self.bucket_arn.as_deref()
    }
    /// <p></p>
    pub fn public_access_block_enabled(&self) -> bool {
        self.public_access_block_enabled
    }
    /// <p>The creation date of the regional bucket</p>
    pub fn creation_date(&self) -> &::aws_smithy_types::DateTime {
        &self.creation_date
    }
    /// <p>The Outposts ID of the regional bucket.</p>
    pub fn outpost_id(&self) -> ::std::option::Option<&str> {
        self.outpost_id.as_deref()
    }
}
impl RegionalBucket {
    /// Creates a new builder-style object to manufacture [`RegionalBucket`](crate::types::RegionalBucket).
    pub fn builder() -> crate::types::builders::RegionalBucketBuilder {
        crate::types::builders::RegionalBucketBuilder::default()
    }
}

/// A builder for [`RegionalBucket`](crate::types::RegionalBucket).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct RegionalBucketBuilder {
    pub(crate) bucket: ::std::option::Option<::std::string::String>,
    pub(crate) bucket_arn: ::std::option::Option<::std::string::String>,
    pub(crate) public_access_block_enabled: ::std::option::Option<bool>,
    pub(crate) creation_date: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) outpost_id: ::std::option::Option<::std::string::String>,
}
impl RegionalBucketBuilder {
    /// <p></p>
    /// This field is required.
    pub fn bucket(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.bucket = ::std::option::Option::Some(input.into());
        self
    }
    /// <p></p>
    pub fn set_bucket(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.bucket = input;
        self
    }
    /// <p></p>
    pub fn get_bucket(&self) -> &::std::option::Option<::std::string::String> {
        &self.bucket
    }
    /// <p>The Amazon Resource Name (ARN) for the regional bucket.</p>
    pub fn bucket_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.bucket_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) for the regional bucket.</p>
    pub fn set_bucket_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.bucket_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) for the regional bucket.</p>
    pub fn get_bucket_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.bucket_arn
    }
    /// <p></p>
    /// This field is required.
    pub fn public_access_block_enabled(mut self, input: bool) -> Self {
        self.public_access_block_enabled = ::std::option::Option::Some(input);
        self
    }
    /// <p></p>
    pub fn set_public_access_block_enabled(mut self, input: ::std::option::Option<bool>) -> Self {
        self.public_access_block_enabled = input;
        self
    }
    /// <p></p>
    pub fn get_public_access_block_enabled(&self) -> &::std::option::Option<bool> {
        &self.public_access_block_enabled
    }
    /// <p>The creation date of the regional bucket</p>
    /// This field is required.
    pub fn creation_date(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.creation_date = ::std::option::Option::Some(input);
        self
    }
    /// <p>The creation date of the regional bucket</p>
    pub fn set_creation_date(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.creation_date = input;
        self
    }
    /// <p>The creation date of the regional bucket</p>
    pub fn get_creation_date(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.creation_date
    }
    /// <p>The Outposts ID of the regional bucket.</p>
    pub fn outpost_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.outpost_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Outposts ID of the regional bucket.</p>
    pub fn set_outpost_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.outpost_id = input;
        self
    }
    /// <p>The Outposts ID of the regional bucket.</p>
    pub fn get_outpost_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.outpost_id
    }
    /// Consumes the builder and constructs a [`RegionalBucket`](crate::types::RegionalBucket).
    /// This method will fail if any of the following fields are not set:
    /// - [`bucket`](crate::types::builders::RegionalBucketBuilder::bucket)
    /// - [`creation_date`](crate::types::builders::RegionalBucketBuilder::creation_date)
    pub fn build(self) -> ::std::result::Result<crate::types::RegionalBucket, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::RegionalBucket {
            bucket: self.bucket.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "bucket",
                    "bucket was not specified but it is required when building RegionalBucket",
                )
            })?,
            bucket_arn: self.bucket_arn,
            public_access_block_enabled: self.public_access_block_enabled.unwrap_or_default(),
            creation_date: self.creation_date.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "creation_date",
                    "creation_date was not specified but it is required when building RegionalBucket",
                )
            })?,
            outpost_id: self.outpost_id,
        })
    }
}
