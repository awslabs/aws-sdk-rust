// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A container for the prefix-level storage metrics for S3 Storage Lens.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct PrefixLevelStorageMetrics {
    /// <p>A container for whether prefix-level storage metrics are enabled.</p>
    #[doc(hidden)]
    pub is_enabled: bool,
    /// <p></p>
    #[doc(hidden)]
    pub selection_criteria: std::option::Option<crate::types::SelectionCriteria>,
}
impl PrefixLevelStorageMetrics {
    /// <p>A container for whether prefix-level storage metrics are enabled.</p>
    pub fn is_enabled(&self) -> bool {
        self.is_enabled
    }
    /// <p></p>
    pub fn selection_criteria(&self) -> std::option::Option<&crate::types::SelectionCriteria> {
        self.selection_criteria.as_ref()
    }
}
impl PrefixLevelStorageMetrics {
    /// Creates a new builder-style object to manufacture [`PrefixLevelStorageMetrics`](crate::types::PrefixLevelStorageMetrics).
    pub fn builder() -> crate::types::builders::PrefixLevelStorageMetricsBuilder {
        crate::types::builders::PrefixLevelStorageMetricsBuilder::default()
    }
}

/// A builder for [`PrefixLevelStorageMetrics`](crate::types::PrefixLevelStorageMetrics).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct PrefixLevelStorageMetricsBuilder {
    pub(crate) is_enabled: std::option::Option<bool>,
    pub(crate) selection_criteria: std::option::Option<crate::types::SelectionCriteria>,
}
impl PrefixLevelStorageMetricsBuilder {
    /// <p>A container for whether prefix-level storage metrics are enabled.</p>
    pub fn is_enabled(mut self, input: bool) -> Self {
        self.is_enabled = Some(input);
        self
    }
    /// <p>A container for whether prefix-level storage metrics are enabled.</p>
    pub fn set_is_enabled(mut self, input: std::option::Option<bool>) -> Self {
        self.is_enabled = input;
        self
    }
    /// <p></p>
    pub fn selection_criteria(mut self, input: crate::types::SelectionCriteria) -> Self {
        self.selection_criteria = Some(input);
        self
    }
    /// <p></p>
    pub fn set_selection_criteria(
        mut self,
        input: std::option::Option<crate::types::SelectionCriteria>,
    ) -> Self {
        self.selection_criteria = input;
        self
    }
    /// Consumes the builder and constructs a [`PrefixLevelStorageMetrics`](crate::types::PrefixLevelStorageMetrics).
    pub fn build(self) -> crate::types::PrefixLevelStorageMetrics {
        crate::types::PrefixLevelStorageMetrics {
            is_enabled: self.is_enabled.unwrap_or_default(),
            selection_criteria: self.selection_criteria,
        }
    }
}
