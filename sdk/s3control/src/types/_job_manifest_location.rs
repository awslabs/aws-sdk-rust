// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains the information required to locate a manifest object.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct JobManifestLocation {
    /// <p>The Amazon Resource Name (ARN) for a manifest object.</p> <important>
    /// <p>When you're using XML requests, you must replace special characters (such as carriage returns) in object keys with their equivalent XML entity codes. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#object-key-xml-related-constraints"> XML-related object key constraints</a> in the <i>Amazon S3 User Guide</i>.</p>
    /// </important>
    pub object_arn: ::std::string::String,
    /// <p>The optional version ID to identify a specific version of the manifest object.</p>
    pub object_version_id: ::std::option::Option<::std::string::String>,
    /// <p>The ETag for the specified manifest object.</p>
    pub e_tag: ::std::string::String,
}
impl JobManifestLocation {
    /// <p>The Amazon Resource Name (ARN) for a manifest object.</p> <important>
    /// <p>When you're using XML requests, you must replace special characters (such as carriage returns) in object keys with their equivalent XML entity codes. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#object-key-xml-related-constraints"> XML-related object key constraints</a> in the <i>Amazon S3 User Guide</i>.</p>
    /// </important>
    pub fn object_arn(&self) -> &str {
        use std::ops::Deref;
        self.object_arn.deref()
    }
    /// <p>The optional version ID to identify a specific version of the manifest object.</p>
    pub fn object_version_id(&self) -> ::std::option::Option<&str> {
        self.object_version_id.as_deref()
    }
    /// <p>The ETag for the specified manifest object.</p>
    pub fn e_tag(&self) -> &str {
        use std::ops::Deref;
        self.e_tag.deref()
    }
}
impl JobManifestLocation {
    /// Creates a new builder-style object to manufacture [`JobManifestLocation`](crate::types::JobManifestLocation).
    pub fn builder() -> crate::types::builders::JobManifestLocationBuilder {
        crate::types::builders::JobManifestLocationBuilder::default()
    }
}

/// A builder for [`JobManifestLocation`](crate::types::JobManifestLocation).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct JobManifestLocationBuilder {
    pub(crate) object_arn: ::std::option::Option<::std::string::String>,
    pub(crate) object_version_id: ::std::option::Option<::std::string::String>,
    pub(crate) e_tag: ::std::option::Option<::std::string::String>,
}
impl JobManifestLocationBuilder {
    /// <p>The Amazon Resource Name (ARN) for a manifest object.</p> <important>
    /// <p>When you're using XML requests, you must replace special characters (such as carriage returns) in object keys with their equivalent XML entity codes. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#object-key-xml-related-constraints"> XML-related object key constraints</a> in the <i>Amazon S3 User Guide</i>.</p>
    /// </important>
    /// This field is required.
    pub fn object_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.object_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) for a manifest object.</p> <important>
    /// <p>When you're using XML requests, you must replace special characters (such as carriage returns) in object keys with their equivalent XML entity codes. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#object-key-xml-related-constraints"> XML-related object key constraints</a> in the <i>Amazon S3 User Guide</i>.</p>
    /// </important>
    pub fn set_object_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.object_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) for a manifest object.</p> <important>
    /// <p>When you're using XML requests, you must replace special characters (such as carriage returns) in object keys with their equivalent XML entity codes. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#object-key-xml-related-constraints"> XML-related object key constraints</a> in the <i>Amazon S3 User Guide</i>.</p>
    /// </important>
    pub fn get_object_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.object_arn
    }
    /// <p>The optional version ID to identify a specific version of the manifest object.</p>
    pub fn object_version_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.object_version_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The optional version ID to identify a specific version of the manifest object.</p>
    pub fn set_object_version_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.object_version_id = input;
        self
    }
    /// <p>The optional version ID to identify a specific version of the manifest object.</p>
    pub fn get_object_version_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.object_version_id
    }
    /// <p>The ETag for the specified manifest object.</p>
    /// This field is required.
    pub fn e_tag(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.e_tag = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ETag for the specified manifest object.</p>
    pub fn set_e_tag(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.e_tag = input;
        self
    }
    /// <p>The ETag for the specified manifest object.</p>
    pub fn get_e_tag(&self) -> &::std::option::Option<::std::string::String> {
        &self.e_tag
    }
    /// Consumes the builder and constructs a [`JobManifestLocation`](crate::types::JobManifestLocation).
    /// This method will fail if any of the following fields are not set:
    /// - [`object_arn`](crate::types::builders::JobManifestLocationBuilder::object_arn)
    /// - [`e_tag`](crate::types::builders::JobManifestLocationBuilder::e_tag)
    pub fn build(self) -> ::std::result::Result<crate::types::JobManifestLocation, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::JobManifestLocation {
            object_arn: self.object_arn.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "object_arn",
                    "object_arn was not specified but it is required when building JobManifestLocation",
                )
            })?,
            object_version_id: self.object_version_id,
            e_tag: self.e_tag.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "e_tag",
                    "e_tag was not specified but it is required when building JobManifestLocation",
                )
            })?,
        })
    }
}
