// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Lambda function used to transform objects through an Object Lambda Access Point.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AwsLambdaTransformation {
    /// <p>The Amazon Resource Name (ARN) of the Lambda function.</p>
    pub function_arn: ::std::string::String,
    /// <p>Additional JSON that provides supplemental data to the Lambda function used to transform objects.</p>
    pub function_payload: ::std::option::Option<::std::string::String>,
}
impl AwsLambdaTransformation {
    /// <p>The Amazon Resource Name (ARN) of the Lambda function.</p>
    pub fn function_arn(&self) -> &str {
        use std::ops::Deref;
        self.function_arn.deref()
    }
    /// <p>Additional JSON that provides supplemental data to the Lambda function used to transform objects.</p>
    pub fn function_payload(&self) -> ::std::option::Option<&str> {
        self.function_payload.as_deref()
    }
}
impl AwsLambdaTransformation {
    /// Creates a new builder-style object to manufacture [`AwsLambdaTransformation`](crate::types::AwsLambdaTransformation).
    pub fn builder() -> crate::types::builders::AwsLambdaTransformationBuilder {
        crate::types::builders::AwsLambdaTransformationBuilder::default()
    }
}

/// A builder for [`AwsLambdaTransformation`](crate::types::AwsLambdaTransformation).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct AwsLambdaTransformationBuilder {
    pub(crate) function_arn: ::std::option::Option<::std::string::String>,
    pub(crate) function_payload: ::std::option::Option<::std::string::String>,
}
impl AwsLambdaTransformationBuilder {
    /// <p>The Amazon Resource Name (ARN) of the Lambda function.</p>
    /// This field is required.
    pub fn function_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.function_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the Lambda function.</p>
    pub fn set_function_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.function_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the Lambda function.</p>
    pub fn get_function_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.function_arn
    }
    /// <p>Additional JSON that provides supplemental data to the Lambda function used to transform objects.</p>
    pub fn function_payload(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.function_payload = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Additional JSON that provides supplemental data to the Lambda function used to transform objects.</p>
    pub fn set_function_payload(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.function_payload = input;
        self
    }
    /// <p>Additional JSON that provides supplemental data to the Lambda function used to transform objects.</p>
    pub fn get_function_payload(&self) -> &::std::option::Option<::std::string::String> {
        &self.function_payload
    }
    /// Consumes the builder and constructs a [`AwsLambdaTransformation`](crate::types::AwsLambdaTransformation).
    /// This method will fail if any of the following fields are not set:
    /// - [`function_arn`](crate::types::builders::AwsLambdaTransformationBuilder::function_arn)
    pub fn build(self) -> ::std::result::Result<crate::types::AwsLambdaTransformation, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::AwsLambdaTransformation {
            function_arn: self.function_arn.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "function_arn",
                    "function_arn was not specified but it is required when building AwsLambdaTransformation",
                )
            })?,
            function_payload: self.function_payload,
        })
    }
}
