// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Whether S3 Object Lock legal hold will be applied to objects in an S3 Batch Operations job.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct S3ObjectLockLegalHold {
    /// <p>The Object Lock legal hold status to be applied to all objects in the Batch Operations job.</p>
    pub status: crate::types::S3ObjectLockLegalHoldStatus,
}
impl S3ObjectLockLegalHold {
    /// <p>The Object Lock legal hold status to be applied to all objects in the Batch Operations job.</p>
    pub fn status(&self) -> &crate::types::S3ObjectLockLegalHoldStatus {
        &self.status
    }
}
impl S3ObjectLockLegalHold {
    /// Creates a new builder-style object to manufacture [`S3ObjectLockLegalHold`](crate::types::S3ObjectLockLegalHold).
    pub fn builder() -> crate::types::builders::S3ObjectLockLegalHoldBuilder {
        crate::types::builders::S3ObjectLockLegalHoldBuilder::default()
    }
}

/// A builder for [`S3ObjectLockLegalHold`](crate::types::S3ObjectLockLegalHold).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct S3ObjectLockLegalHoldBuilder {
    pub(crate) status: ::std::option::Option<crate::types::S3ObjectLockLegalHoldStatus>,
}
impl S3ObjectLockLegalHoldBuilder {
    /// <p>The Object Lock legal hold status to be applied to all objects in the Batch Operations job.</p>
    /// This field is required.
    pub fn status(mut self, input: crate::types::S3ObjectLockLegalHoldStatus) -> Self {
        self.status = ::std::option::Option::Some(input);
        self
    }
    /// <p>The Object Lock legal hold status to be applied to all objects in the Batch Operations job.</p>
    pub fn set_status(mut self, input: ::std::option::Option<crate::types::S3ObjectLockLegalHoldStatus>) -> Self {
        self.status = input;
        self
    }
    /// <p>The Object Lock legal hold status to be applied to all objects in the Batch Operations job.</p>
    pub fn get_status(&self) -> &::std::option::Option<crate::types::S3ObjectLockLegalHoldStatus> {
        &self.status
    }
    /// Consumes the builder and constructs a [`S3ObjectLockLegalHold`](crate::types::S3ObjectLockLegalHold).
    /// This method will fail if any of the following fields are not set:
    /// - [`status`](crate::types::builders::S3ObjectLockLegalHoldBuilder::status)
    pub fn build(self) -> ::std::result::Result<crate::types::S3ObjectLockLegalHold, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::S3ObjectLockLegalHold {
            status: self.status.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "status",
                    "status was not specified but it is required when building S3ObjectLockLegalHold",
                )
            })?,
        })
    }
}
