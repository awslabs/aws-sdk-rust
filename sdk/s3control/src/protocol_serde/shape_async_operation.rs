// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn de_async_operation(
    decoder: &mut aws_smithy_xml::decode::ScopedDecoder,
) -> Result<crate::types::AsyncOperation, aws_smithy_xml::decode::XmlDecodeError> {
    #[allow(unused_mut)]
    let mut builder = crate::types::AsyncOperation::builder();
    while let Some(mut tag) = decoder.next_tag() {
        match tag.start_el() {
            s if s.matches("CreationTime") /* CreationTime com.amazonaws.s3control#AsyncOperation$CreationTime */ =>  {
                let var_1 =
                    Some(
                        aws_smithy_types::DateTime::from_str(
                            aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            , aws_smithy_types::date_time::Format::DateTimeWithOffset
                        )
                        .map_err(|_|aws_smithy_xml::decode::XmlDecodeError::custom("expected (timestamp: `com.amazonaws.s3control#AsyncCreationTimestamp`)"))
                        ?
                    )
                ;
                builder = builder.set_creation_time(var_1);
            }
            ,
            s if s.matches("Operation") /* Operation com.amazonaws.s3control#AsyncOperation$Operation */ =>  {
                let var_2 =
                    Some(
                        Result::<crate::types::AsyncOperationName, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            crate::types::AsyncOperationName::from(
                                aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                        )
                        ?
                    )
                ;
                builder = builder.set_operation(var_2);
            }
            ,
            s if s.matches("RequestTokenARN") /* RequestTokenARN com.amazonaws.s3control#AsyncOperation$RequestTokenARN */ =>  {
                let var_3 =
                    Some(
                        Result::<std::string::String, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_request_token_arn(var_3);
            }
            ,
            s if s.matches("RequestParameters") /* RequestParameters com.amazonaws.s3control#AsyncOperation$RequestParameters */ =>  {
                let var_4 =
                    Some(
                        crate::protocol_serde::shape_async_request_parameters::de_async_request_parameters(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_request_parameters(var_4);
            }
            ,
            s if s.matches("RequestStatus") /* RequestStatus com.amazonaws.s3control#AsyncOperation$RequestStatus */ =>  {
                let var_5 =
                    Some(
                        Result::<std::string::String, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_request_status(var_5);
            }
            ,
            s if s.matches("ResponseDetails") /* ResponseDetails com.amazonaws.s3control#AsyncOperation$ResponseDetails */ =>  {
                let var_6 =
                    Some(
                        crate::protocol_serde::shape_async_response_details::de_async_response_details(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_response_details(var_6);
            }
            ,
            _ => {}
        }
    }
    Ok(builder.build())
}
