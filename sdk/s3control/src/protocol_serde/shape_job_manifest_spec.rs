// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_job_manifest_spec(
    input: &crate::types::JobManifestSpec,
    writer: aws_smithy_xml::encode::ElWriter,
) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    #[allow(unused_mut)]
    let mut scope = writer.finish();
    if let Some(var_1) = &input.format {
        let mut inner_writer = scope.start_el("Format").finish();
        inner_writer.data(var_1.as_str());
    }
    if let Some(var_2) = &input.fields {
        let mut inner_writer = scope.start_el("Fields").finish();
        for list_item_3 in var_2 {
            {
                let mut inner_writer = inner_writer.start_el("member").finish();
                inner_writer.data(list_item_3.as_str());
            }
        }
    }
    scope.finish();
    Ok(())
}

pub fn de_job_manifest_spec(
    decoder: &mut aws_smithy_xml::decode::ScopedDecoder,
) -> Result<crate::types::JobManifestSpec, aws_smithy_xml::decode::XmlDecodeError> {
    #[allow(unused_mut)]
    let mut builder = crate::types::JobManifestSpec::builder();
    while let Some(mut tag) = decoder.next_tag() {
        match tag.start_el() {
            s if s.matches("Format") /* Format com.amazonaws.s3control#JobManifestSpec$Format */ =>  {
                let var_4 =
                    Some(
                        Result::<crate::types::JobManifestFormat, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            crate::types::JobManifestFormat::from(
                                aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                        )
                        ?
                    )
                ;
                builder = builder.set_format(var_4);
            }
            ,
            s if s.matches("Fields") /* Fields com.amazonaws.s3control#JobManifestSpec$Fields */ =>  {
                let var_5 =
                    Some(
                        crate::protocol_serde::shape_job_manifest_field_list::de_job_manifest_field_list(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_fields(var_5);
            }
            ,
            _ => {}
        }
    }
    Ok(builder.build())
}
