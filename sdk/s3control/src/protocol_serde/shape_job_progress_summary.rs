// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn de_job_progress_summary(
    decoder: &mut aws_smithy_xml::decode::ScopedDecoder,
) -> Result<crate::types::JobProgressSummary, aws_smithy_xml::decode::XmlDecodeError> {
    #[allow(unused_mut)]
    let mut builder = crate::types::JobProgressSummary::builder();
    while let Some(mut tag) = decoder.next_tag() {
        match tag.start_el() {
            s if s.matches("TotalNumberOfTasks") /* TotalNumberOfTasks com.amazonaws.s3control#JobProgressSummary$TotalNumberOfTasks */ =>  {
                let var_1 =
                    Some(
                         {
                            <i64 as aws_smithy_types::primitive::Parse>::parse_smithy_primitive(
                                aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                            .map_err(|_|aws_smithy_xml::decode::XmlDecodeError::custom("expected (long: `com.amazonaws.s3control#JobTotalNumberOfTasks`)"))
                        }
                        ?
                    )
                ;
                builder = builder.set_total_number_of_tasks(var_1);
            }
            ,
            s if s.matches("NumberOfTasksSucceeded") /* NumberOfTasksSucceeded com.amazonaws.s3control#JobProgressSummary$NumberOfTasksSucceeded */ =>  {
                let var_2 =
                    Some(
                         {
                            <i64 as aws_smithy_types::primitive::Parse>::parse_smithy_primitive(
                                aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                            .map_err(|_|aws_smithy_xml::decode::XmlDecodeError::custom("expected (long: `com.amazonaws.s3control#JobNumberOfTasksSucceeded`)"))
                        }
                        ?
                    )
                ;
                builder = builder.set_number_of_tasks_succeeded(var_2);
            }
            ,
            s if s.matches("NumberOfTasksFailed") /* NumberOfTasksFailed com.amazonaws.s3control#JobProgressSummary$NumberOfTasksFailed */ =>  {
                let var_3 =
                    Some(
                         {
                            <i64 as aws_smithy_types::primitive::Parse>::parse_smithy_primitive(
                                aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                            .map_err(|_|aws_smithy_xml::decode::XmlDecodeError::custom("expected (long: `com.amazonaws.s3control#JobNumberOfTasksFailed`)"))
                        }
                        ?
                    )
                ;
                builder = builder.set_number_of_tasks_failed(var_3);
            }
            ,
            s if s.matches("Timers") /* Timers com.amazonaws.s3control#JobProgressSummary$Timers */ =>  {
                let var_4 =
                    Some(
                        crate::protocol_serde::shape_job_timers::de_job_timers(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_timers(var_4);
            }
            ,
            _ => {}
        }
    }
    Ok(builder.build())
}
