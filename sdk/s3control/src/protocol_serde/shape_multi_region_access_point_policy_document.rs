// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn de_multi_region_access_point_policy_document(
    decoder: &mut aws_smithy_xml::decode::ScopedDecoder,
) -> Result<
    crate::types::MultiRegionAccessPointPolicyDocument,
    aws_smithy_xml::decode::XmlDecodeError,
> {
    #[allow(unused_mut)]
    let mut builder = crate::types::MultiRegionAccessPointPolicyDocument::builder();
    while let Some(mut tag) = decoder.next_tag() {
        match tag.start_el() {
            s if s.matches("Established") /* Established com.amazonaws.s3control#MultiRegionAccessPointPolicyDocument$Established */ =>  {
                let var_1 =
                    Some(
                        crate::protocol_serde::shape_established_multi_region_access_point_policy::de_established_multi_region_access_point_policy(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_established(var_1);
            }
            ,
            s if s.matches("Proposed") /* Proposed com.amazonaws.s3control#MultiRegionAccessPointPolicyDocument$Proposed */ =>  {
                let var_2 =
                    Some(
                        crate::protocol_serde::shape_proposed_multi_region_access_point_policy::de_proposed_multi_region_access_point_policy(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_proposed(var_2);
            }
            ,
            _ => {}
        }
    }
    Ok(builder.build())
}
