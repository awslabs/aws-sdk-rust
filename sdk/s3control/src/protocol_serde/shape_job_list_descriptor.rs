// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn de_job_list_descriptor(
    decoder: &mut aws_smithy_xml::decode::ScopedDecoder,
) -> Result<crate::types::JobListDescriptor, aws_smithy_xml::decode::XmlDecodeError> {
    #[allow(unused_mut)]
    let mut builder = crate::types::JobListDescriptor::builder();
    while let Some(mut tag) = decoder.next_tag() {
        match tag.start_el() {
            s if s.matches("JobId") /* JobId com.amazonaws.s3control#JobListDescriptor$JobId */ =>  {
                let var_1 =
                    Some(
                        Result::<std::string::String, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_job_id(var_1);
            }
            ,
            s if s.matches("Description") /* Description com.amazonaws.s3control#JobListDescriptor$Description */ =>  {
                let var_2 =
                    Some(
                        Result::<std::string::String, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_description(var_2);
            }
            ,
            s if s.matches("Operation") /* Operation com.amazonaws.s3control#JobListDescriptor$Operation */ =>  {
                let var_3 =
                    Some(
                        Result::<crate::types::OperationName, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            crate::types::OperationName::from(
                                aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                        )
                        ?
                    )
                ;
                builder = builder.set_operation(var_3);
            }
            ,
            s if s.matches("Priority") /* Priority com.amazonaws.s3control#JobListDescriptor$Priority */ =>  {
                let var_4 =
                    Some(
                         {
                            <i32 as aws_smithy_types::primitive::Parse>::parse_smithy_primitive(
                                aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                            .map_err(|_|aws_smithy_xml::decode::XmlDecodeError::custom("expected (integer: `com.amazonaws.s3control#JobPriority`)"))
                        }
                        ?
                    )
                ;
                builder = builder.set_priority(var_4);
            }
            ,
            s if s.matches("Status") /* Status com.amazonaws.s3control#JobListDescriptor$Status */ =>  {
                let var_5 =
                    Some(
                        Result::<crate::types::JobStatus, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            crate::types::JobStatus::from(
                                aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                        )
                        ?
                    )
                ;
                builder = builder.set_status(var_5);
            }
            ,
            s if s.matches("CreationTime") /* CreationTime com.amazonaws.s3control#JobListDescriptor$CreationTime */ =>  {
                let var_6 =
                    Some(
                        aws_smithy_types::DateTime::from_str(
                            aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            , aws_smithy_types::date_time::Format::DateTimeWithOffset
                        )
                        .map_err(|_|aws_smithy_xml::decode::XmlDecodeError::custom("expected (timestamp: `com.amazonaws.s3control#JobCreationTime`)"))
                        ?
                    )
                ;
                builder = builder.set_creation_time(var_6);
            }
            ,
            s if s.matches("TerminationDate") /* TerminationDate com.amazonaws.s3control#JobListDescriptor$TerminationDate */ =>  {
                let var_7 =
                    Some(
                        aws_smithy_types::DateTime::from_str(
                            aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            , aws_smithy_types::date_time::Format::DateTimeWithOffset
                        )
                        .map_err(|_|aws_smithy_xml::decode::XmlDecodeError::custom("expected (timestamp: `com.amazonaws.s3control#JobTerminationDate`)"))
                        ?
                    )
                ;
                builder = builder.set_termination_date(var_7);
            }
            ,
            s if s.matches("ProgressSummary") /* ProgressSummary com.amazonaws.s3control#JobListDescriptor$ProgressSummary */ =>  {
                let var_8 =
                    Some(
                        crate::protocol_serde::shape_job_progress_summary::de_job_progress_summary(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_progress_summary(var_8);
            }
            ,
            _ => {}
        }
    }
    Ok(builder.build())
}
