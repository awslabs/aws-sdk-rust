// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(clippy::unnecessary_wraps)]
pub fn de_get_access_grants_instance_http_error(
    _response_status: u16,
    _response_headers: &::aws_smithy_runtime_api::http::Headers,
    _response_body: &[u8],
) -> std::result::Result<
    crate::operation::get_access_grants_instance::GetAccessGrantsInstanceOutput,
    crate::operation::get_access_grants_instance::GetAccessGrantsInstanceError,
> {
    #[allow(unused_mut)]
    let mut generic_builder = crate::protocol_serde::parse_http_error_metadata(_response_status, _response_headers, _response_body)
        .map_err(crate::operation::get_access_grants_instance::GetAccessGrantsInstanceError::unhandled)?;
    generic_builder = ::aws_types::request_id::apply_request_id(generic_builder, _response_headers);
    let generic = generic_builder.build();
    Err(crate::operation::get_access_grants_instance::GetAccessGrantsInstanceError::generic(
        generic,
    ))
}

#[allow(clippy::unnecessary_wraps)]
pub fn de_get_access_grants_instance_http_response(
    _response_status: u16,
    _response_headers: &::aws_smithy_runtime_api::http::Headers,
    _response_body: &[u8],
) -> std::result::Result<
    crate::operation::get_access_grants_instance::GetAccessGrantsInstanceOutput,
    crate::operation::get_access_grants_instance::GetAccessGrantsInstanceError,
> {
    Ok({
        #[allow(unused_mut)]
        let mut output = crate::operation::get_access_grants_instance::builders::GetAccessGrantsInstanceOutputBuilder::default();
        output = crate::protocol_serde::shape_get_access_grants_instance::de_get_access_grants_instance(_response_body, output)
            .map_err(crate::operation::get_access_grants_instance::GetAccessGrantsInstanceError::unhandled)?;
        output._set_request_id(::aws_types::request_id::RequestId::request_id(_response_headers).map(str::to_string));
        output.build()
    })
}

pub fn ser_get_access_grants_instance_headers(
    input: &crate::operation::get_access_grants_instance::GetAccessGrantsInstanceInput,
    mut builder: ::http::request::Builder,
) -> std::result::Result<::http::request::Builder, ::aws_smithy_types::error::operation::BuildError> {
    if let ::std::option::Option::Some(inner_1) = &input.account_id {
        let formatted_2 = inner_1.as_str();
        let header_value = formatted_2;
        let header_value: ::http::HeaderValue = header_value.parse().map_err(|err| {
            ::aws_smithy_types::error::operation::BuildError::invalid_field(
                "account_id",
                format!("`{}` cannot be used as a header value: {}", &header_value, err),
            )
        })?;
        builder = builder.header("x-amz-account-id", header_value);
    }
    Ok(builder)
}

#[allow(unused_mut)]
pub fn de_get_access_grants_instance(
    inp: &[u8],
    mut builder: crate::operation::get_access_grants_instance::builders::GetAccessGrantsInstanceOutputBuilder,
) -> std::result::Result<
    crate::operation::get_access_grants_instance::builders::GetAccessGrantsInstanceOutputBuilder,
    ::aws_smithy_xml::decode::XmlDecodeError,
> {
    let mut doc = ::aws_smithy_xml::decode::Document::try_from(inp)?;

    #[allow(unused_mut)]
    let mut decoder = doc.root_element()?;
    #[allow(unused_variables)]
    let start_el = decoder.start_el();
    if !start_el.matches("GetAccessGrantsInstanceResult") {
        return Err(::aws_smithy_xml::decode::XmlDecodeError::custom(format!(
            "encountered invalid XML root: expected GetAccessGrantsInstanceResult but got {start_el:?}. This is likely a bug in the SDK."
        )));
    }
    while let Some(mut tag) = decoder.next_tag() {
        match tag.start_el() {
            s if s.matches("IdentityCenterApplicationArn") /* IdentityCenterApplicationArn com.amazonaws.s3control.synthetic#GetAccessGrantsInstanceOutput$IdentityCenterApplicationArn */ =>  {
                let var_3 =
                    Some(
                        Result::<::std::string::String, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_identity_center_application_arn(var_3);
            }
            ,
            s if s.matches("AccessGrantsInstanceArn") /* AccessGrantsInstanceArn com.amazonaws.s3control.synthetic#GetAccessGrantsInstanceOutput$AccessGrantsInstanceArn */ =>  {
                let var_4 =
                    Some(
                        Result::<::std::string::String, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_access_grants_instance_arn(var_4);
            }
            ,
            s if s.matches("IdentityCenterInstanceArn") /* IdentityCenterInstanceArn com.amazonaws.s3control.synthetic#GetAccessGrantsInstanceOutput$IdentityCenterInstanceArn */ =>  {
                let var_5 =
                    Some(
                        Result::<::std::string::String, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_identity_center_instance_arn(var_5);
            }
            ,
            s if s.matches("IdentityCenterArn") /* IdentityCenterArn com.amazonaws.s3control.synthetic#GetAccessGrantsInstanceOutput$IdentityCenterArn */ =>  {
                let var_6 =
                    Some(
                        Result::<::std::string::String, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_identity_center_arn(var_6);
            }
            ,
            s if s.matches("CreatedAt") /* CreatedAt com.amazonaws.s3control.synthetic#GetAccessGrantsInstanceOutput$CreatedAt */ =>  {
                let var_7 =
                    Some(
                        ::aws_smithy_types::DateTime::from_str(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            , ::aws_smithy_types::date_time::Format::DateTimeWithOffset
                        )
                        .map_err(|_|::aws_smithy_xml::decode::XmlDecodeError::custom("expected (timestamp: `com.amazonaws.s3control#CreationTimestamp`)"))
                        ?
                    )
                ;
                builder = builder.set_created_at(var_7);
            }
            ,
            s if s.matches("AccessGrantsInstanceId") /* AccessGrantsInstanceId com.amazonaws.s3control.synthetic#GetAccessGrantsInstanceOutput$AccessGrantsInstanceId */ =>  {
                let var_8 =
                    Some(
                        Result::<::std::string::String, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_access_grants_instance_id(var_8);
            }
            ,
            _ => {}
        }
    }
    Ok(builder)
}
