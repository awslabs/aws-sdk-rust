// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct CreateAccessPointForObjectLambdaInput {
    /// <p>The Amazon Web Services account ID for owner of the specified Object Lambda Access Point.</p>
    #[doc(hidden)]
    pub account_id: std::option::Option<std::string::String>,
    /// <p>The name you want to assign to this Object Lambda Access Point.</p>
    #[doc(hidden)]
    pub name: std::option::Option<std::string::String>,
    /// <p>Object Lambda Access Point configuration as a JSON document.</p>
    #[doc(hidden)]
    pub configuration: std::option::Option<crate::types::ObjectLambdaConfiguration>,
}
impl CreateAccessPointForObjectLambdaInput {
    /// <p>The Amazon Web Services account ID for owner of the specified Object Lambda Access Point.</p>
    pub fn account_id(&self) -> std::option::Option<&str> {
        self.account_id.as_deref()
    }
    /// <p>The name you want to assign to this Object Lambda Access Point.</p>
    pub fn name(&self) -> std::option::Option<&str> {
        self.name.as_deref()
    }
    /// <p>Object Lambda Access Point configuration as a JSON document.</p>
    pub fn configuration(&self) -> std::option::Option<&crate::types::ObjectLambdaConfiguration> {
        self.configuration.as_ref()
    }
}
impl CreateAccessPointForObjectLambdaInput {
    /// Creates a new builder-style object to manufacture [`CreateAccessPointForObjectLambdaInput`](crate::operation::create_access_point_for_object_lambda::CreateAccessPointForObjectLambdaInput).
    pub fn builder() -> crate::operation::create_access_point_for_object_lambda::builders::CreateAccessPointForObjectLambdaInputBuilder{
        crate::operation::create_access_point_for_object_lambda::builders::CreateAccessPointForObjectLambdaInputBuilder::default()
    }
}

/// A builder for [`CreateAccessPointForObjectLambdaInput`](crate::operation::create_access_point_for_object_lambda::CreateAccessPointForObjectLambdaInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct CreateAccessPointForObjectLambdaInputBuilder {
    pub(crate) account_id: std::option::Option<std::string::String>,
    pub(crate) name: std::option::Option<std::string::String>,
    pub(crate) configuration: std::option::Option<crate::types::ObjectLambdaConfiguration>,
}
impl CreateAccessPointForObjectLambdaInputBuilder {
    /// <p>The Amazon Web Services account ID for owner of the specified Object Lambda Access Point.</p>
    pub fn account_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.account_id = Some(input.into());
        self
    }
    /// <p>The Amazon Web Services account ID for owner of the specified Object Lambda Access Point.</p>
    pub fn set_account_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.account_id = input;
        self
    }
    /// <p>The name you want to assign to this Object Lambda Access Point.</p>
    pub fn name(mut self, input: impl Into<std::string::String>) -> Self {
        self.name = Some(input.into());
        self
    }
    /// <p>The name you want to assign to this Object Lambda Access Point.</p>
    pub fn set_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>Object Lambda Access Point configuration as a JSON document.</p>
    pub fn configuration(mut self, input: crate::types::ObjectLambdaConfiguration) -> Self {
        self.configuration = Some(input);
        self
    }
    /// <p>Object Lambda Access Point configuration as a JSON document.</p>
    pub fn set_configuration(
        mut self,
        input: std::option::Option<crate::types::ObjectLambdaConfiguration>,
    ) -> Self {
        self.configuration = input;
        self
    }
    /// Consumes the builder and constructs a [`CreateAccessPointForObjectLambdaInput`](crate::operation::create_access_point_for_object_lambda::CreateAccessPointForObjectLambdaInput).
    pub fn build(self) -> Result<crate::operation::create_access_point_for_object_lambda::CreateAccessPointForObjectLambdaInput, aws_smithy_http::operation::error::BuildError>{
        Ok(
            crate::operation::create_access_point_for_object_lambda::CreateAccessPointForObjectLambdaInput {
                account_id: self.account_id
                ,
                name: self.name
                ,
                configuration: self.configuration
                ,
            }
        )
    }
}
