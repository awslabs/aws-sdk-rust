// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ListStorageLensConfigurationsInput {
    /// <p>The account ID of the requester.</p>
    #[doc(hidden)]
    pub account_id: std::option::Option<std::string::String>,
    /// <p>A pagination token to request the next page of results.</p>
    #[doc(hidden)]
    pub next_token: std::option::Option<std::string::String>,
}
impl ListStorageLensConfigurationsInput {
    /// <p>The account ID of the requester.</p>
    pub fn account_id(&self) -> std::option::Option<&str> {
        self.account_id.as_deref()
    }
    /// <p>A pagination token to request the next page of results.</p>
    pub fn next_token(&self) -> std::option::Option<&str> {
        self.next_token.as_deref()
    }
}
impl ListStorageLensConfigurationsInput {
    /// Creates a new builder-style object to manufacture [`ListStorageLensConfigurationsInput`](crate::operation::list_storage_lens_configurations::ListStorageLensConfigurationsInput).
    pub fn builder() -> crate::operation::list_storage_lens_configurations::builders::ListStorageLensConfigurationsInputBuilder{
        crate::operation::list_storage_lens_configurations::builders::ListStorageLensConfigurationsInputBuilder::default()
    }
}

/// A builder for [`ListStorageLensConfigurationsInput`](crate::operation::list_storage_lens_configurations::ListStorageLensConfigurationsInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ListStorageLensConfigurationsInputBuilder {
    pub(crate) account_id: std::option::Option<std::string::String>,
    pub(crate) next_token: std::option::Option<std::string::String>,
}
impl ListStorageLensConfigurationsInputBuilder {
    /// <p>The account ID of the requester.</p>
    pub fn account_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.account_id = Some(input.into());
        self
    }
    /// <p>The account ID of the requester.</p>
    pub fn set_account_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.account_id = input;
        self
    }
    /// <p>A pagination token to request the next page of results.</p>
    pub fn next_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.next_token = Some(input.into());
        self
    }
    /// <p>A pagination token to request the next page of results.</p>
    pub fn set_next_token(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// Consumes the builder and constructs a [`ListStorageLensConfigurationsInput`](crate::operation::list_storage_lens_configurations::ListStorageLensConfigurationsInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::list_storage_lens_configurations::ListStorageLensConfigurationsInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::list_storage_lens_configurations::ListStorageLensConfigurationsInput {
                account_id: self.account_id
                ,
                next_token: self.next_token
                ,
            }
        )
    }
}
