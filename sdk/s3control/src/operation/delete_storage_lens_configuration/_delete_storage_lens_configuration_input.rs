// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DeleteStorageLensConfigurationInput {
    /// <p>The ID of the S3 Storage Lens configuration.</p>
    #[doc(hidden)]
    pub config_id: std::option::Option<std::string::String>,
    /// <p>The account ID of the requester.</p>
    #[doc(hidden)]
    pub account_id: std::option::Option<std::string::String>,
}
impl DeleteStorageLensConfigurationInput {
    /// <p>The ID of the S3 Storage Lens configuration.</p>
    pub fn config_id(&self) -> std::option::Option<&str> {
        self.config_id.as_deref()
    }
    /// <p>The account ID of the requester.</p>
    pub fn account_id(&self) -> std::option::Option<&str> {
        self.account_id.as_deref()
    }
}
impl DeleteStorageLensConfigurationInput {
    /// Creates a new builder-style object to manufacture [`DeleteStorageLensConfigurationInput`](crate::operation::delete_storage_lens_configuration::DeleteStorageLensConfigurationInput).
    pub fn builder() -> crate::operation::delete_storage_lens_configuration::builders::DeleteStorageLensConfigurationInputBuilder{
        crate::operation::delete_storage_lens_configuration::builders::DeleteStorageLensConfigurationInputBuilder::default()
    }
}

/// A builder for [`DeleteStorageLensConfigurationInput`](crate::operation::delete_storage_lens_configuration::DeleteStorageLensConfigurationInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DeleteStorageLensConfigurationInputBuilder {
    pub(crate) config_id: std::option::Option<std::string::String>,
    pub(crate) account_id: std::option::Option<std::string::String>,
}
impl DeleteStorageLensConfigurationInputBuilder {
    /// <p>The ID of the S3 Storage Lens configuration.</p>
    pub fn config_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.config_id = Some(input.into());
        self
    }
    /// <p>The ID of the S3 Storage Lens configuration.</p>
    pub fn set_config_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.config_id = input;
        self
    }
    /// <p>The account ID of the requester.</p>
    pub fn account_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.account_id = Some(input.into());
        self
    }
    /// <p>The account ID of the requester.</p>
    pub fn set_account_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.account_id = input;
        self
    }
    /// Consumes the builder and constructs a [`DeleteStorageLensConfigurationInput`](crate::operation::delete_storage_lens_configuration::DeleteStorageLensConfigurationInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::delete_storage_lens_configuration::DeleteStorageLensConfigurationInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::delete_storage_lens_configuration::DeleteStorageLensConfigurationInput {
                config_id: self.config_id
                ,
                account_id: self.account_id
                ,
            }
        )
    }
}
