// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct PutInlinePolicyToPermissionSetInput {
    /// <p>The ARN of the IAM Identity Center instance under which the operation will be executed. For more information about ARNs, see <a href="/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services General Reference</i>.</p>
    pub instance_arn: ::std::option::Option<::std::string::String>,
    /// <p>The ARN of the permission set.</p>
    pub permission_set_arn: ::std::option::Option<::std::string::String>,
    /// <p>The inline policy to attach to a <code>PermissionSet</code>.</p>
    pub inline_policy: ::std::option::Option<::std::string::String>,
}
impl PutInlinePolicyToPermissionSetInput {
    /// <p>The ARN of the IAM Identity Center instance under which the operation will be executed. For more information about ARNs, see <a href="/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services General Reference</i>.</p>
    pub fn instance_arn(&self) -> ::std::option::Option<&str> {
        self.instance_arn.as_deref()
    }
    /// <p>The ARN of the permission set.</p>
    pub fn permission_set_arn(&self) -> ::std::option::Option<&str> {
        self.permission_set_arn.as_deref()
    }
    /// <p>The inline policy to attach to a <code>PermissionSet</code>.</p>
    pub fn inline_policy(&self) -> ::std::option::Option<&str> {
        self.inline_policy.as_deref()
    }
}
impl PutInlinePolicyToPermissionSetInput {
    /// Creates a new builder-style object to manufacture [`PutInlinePolicyToPermissionSetInput`](crate::operation::put_inline_policy_to_permission_set::PutInlinePolicyToPermissionSetInput).
    pub fn builder() -> crate::operation::put_inline_policy_to_permission_set::builders::PutInlinePolicyToPermissionSetInputBuilder {
        crate::operation::put_inline_policy_to_permission_set::builders::PutInlinePolicyToPermissionSetInputBuilder::default()
    }
}

/// A builder for [`PutInlinePolicyToPermissionSetInput`](crate::operation::put_inline_policy_to_permission_set::PutInlinePolicyToPermissionSetInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct PutInlinePolicyToPermissionSetInputBuilder {
    pub(crate) instance_arn: ::std::option::Option<::std::string::String>,
    pub(crate) permission_set_arn: ::std::option::Option<::std::string::String>,
    pub(crate) inline_policy: ::std::option::Option<::std::string::String>,
}
impl PutInlinePolicyToPermissionSetInputBuilder {
    /// <p>The ARN of the IAM Identity Center instance under which the operation will be executed. For more information about ARNs, see <a href="/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services General Reference</i>.</p>
    /// This field is required.
    pub fn instance_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.instance_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ARN of the IAM Identity Center instance under which the operation will be executed. For more information about ARNs, see <a href="/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services General Reference</i>.</p>
    pub fn set_instance_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.instance_arn = input;
        self
    }
    /// <p>The ARN of the IAM Identity Center instance under which the operation will be executed. For more information about ARNs, see <a href="/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services General Reference</i>.</p>
    pub fn get_instance_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.instance_arn
    }
    /// <p>The ARN of the permission set.</p>
    /// This field is required.
    pub fn permission_set_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.permission_set_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ARN of the permission set.</p>
    pub fn set_permission_set_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.permission_set_arn = input;
        self
    }
    /// <p>The ARN of the permission set.</p>
    pub fn get_permission_set_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.permission_set_arn
    }
    /// <p>The inline policy to attach to a <code>PermissionSet</code>.</p>
    /// This field is required.
    pub fn inline_policy(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.inline_policy = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The inline policy to attach to a <code>PermissionSet</code>.</p>
    pub fn set_inline_policy(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.inline_policy = input;
        self
    }
    /// <p>The inline policy to attach to a <code>PermissionSet</code>.</p>
    pub fn get_inline_policy(&self) -> &::std::option::Option<::std::string::String> {
        &self.inline_policy
    }
    /// Consumes the builder and constructs a [`PutInlinePolicyToPermissionSetInput`](crate::operation::put_inline_policy_to_permission_set::PutInlinePolicyToPermissionSetInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::put_inline_policy_to_permission_set::PutInlinePolicyToPermissionSetInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(
            crate::operation::put_inline_policy_to_permission_set::PutInlinePolicyToPermissionSetInput {
                instance_arn: self.instance_arn,
                permission_set_arn: self.permission_set_arn,
                inline_policy: self.inline_policy,
            },
        )
    }
}
