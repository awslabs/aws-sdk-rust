// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct CreatePermissionSetInput {
    /// <p>The name of the <code>PermissionSet</code>.</p>
    #[doc(hidden)]
    pub name: std::option::Option<std::string::String>,
    /// <p>The description of the <code>PermissionSet</code>.</p>
    #[doc(hidden)]
    pub description: std::option::Option<std::string::String>,
    /// <p>The ARN of the IAM Identity Center instance under which the operation will be executed. For more information about ARNs, see <a href="/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>.</p>
    #[doc(hidden)]
    pub instance_arn: std::option::Option<std::string::String>,
    /// <p>The length of time that the application user sessions are valid in the ISO-8601 standard.</p>
    #[doc(hidden)]
    pub session_duration: std::option::Option<std::string::String>,
    /// <p>Used to redirect users within the application during the federation authentication process.</p>
    #[doc(hidden)]
    pub relay_state: std::option::Option<std::string::String>,
    /// <p>The tags to attach to the new <code>PermissionSet</code>.</p>
    #[doc(hidden)]
    pub tags: std::option::Option<std::vec::Vec<crate::types::Tag>>,
}
impl CreatePermissionSetInput {
    /// <p>The name of the <code>PermissionSet</code>.</p>
    pub fn name(&self) -> std::option::Option<&str> {
        self.name.as_deref()
    }
    /// <p>The description of the <code>PermissionSet</code>.</p>
    pub fn description(&self) -> std::option::Option<&str> {
        self.description.as_deref()
    }
    /// <p>The ARN of the IAM Identity Center instance under which the operation will be executed. For more information about ARNs, see <a href="/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>.</p>
    pub fn instance_arn(&self) -> std::option::Option<&str> {
        self.instance_arn.as_deref()
    }
    /// <p>The length of time that the application user sessions are valid in the ISO-8601 standard.</p>
    pub fn session_duration(&self) -> std::option::Option<&str> {
        self.session_duration.as_deref()
    }
    /// <p>Used to redirect users within the application during the federation authentication process.</p>
    pub fn relay_state(&self) -> std::option::Option<&str> {
        self.relay_state.as_deref()
    }
    /// <p>The tags to attach to the new <code>PermissionSet</code>.</p>
    pub fn tags(&self) -> std::option::Option<&[crate::types::Tag]> {
        self.tags.as_deref()
    }
}
impl CreatePermissionSetInput {
    /// Creates a new builder-style object to manufacture [`CreatePermissionSetInput`](crate::operation::create_permission_set::CreatePermissionSetInput).
    pub fn builder(
    ) -> crate::operation::create_permission_set::builders::CreatePermissionSetInputBuilder {
        crate::operation::create_permission_set::builders::CreatePermissionSetInputBuilder::default(
        )
    }
}

/// A builder for [`CreatePermissionSetInput`](crate::operation::create_permission_set::CreatePermissionSetInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct CreatePermissionSetInputBuilder {
    pub(crate) name: std::option::Option<std::string::String>,
    pub(crate) description: std::option::Option<std::string::String>,
    pub(crate) instance_arn: std::option::Option<std::string::String>,
    pub(crate) session_duration: std::option::Option<std::string::String>,
    pub(crate) relay_state: std::option::Option<std::string::String>,
    pub(crate) tags: std::option::Option<std::vec::Vec<crate::types::Tag>>,
}
impl CreatePermissionSetInputBuilder {
    /// <p>The name of the <code>PermissionSet</code>.</p>
    pub fn name(mut self, input: impl Into<std::string::String>) -> Self {
        self.name = Some(input.into());
        self
    }
    /// <p>The name of the <code>PermissionSet</code>.</p>
    pub fn set_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>The description of the <code>PermissionSet</code>.</p>
    pub fn description(mut self, input: impl Into<std::string::String>) -> Self {
        self.description = Some(input.into());
        self
    }
    /// <p>The description of the <code>PermissionSet</code>.</p>
    pub fn set_description(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.description = input;
        self
    }
    /// <p>The ARN of the IAM Identity Center instance under which the operation will be executed. For more information about ARNs, see <a href="/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>.</p>
    pub fn instance_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.instance_arn = Some(input.into());
        self
    }
    /// <p>The ARN of the IAM Identity Center instance under which the operation will be executed. For more information about ARNs, see <a href="/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>.</p>
    pub fn set_instance_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.instance_arn = input;
        self
    }
    /// <p>The length of time that the application user sessions are valid in the ISO-8601 standard.</p>
    pub fn session_duration(mut self, input: impl Into<std::string::String>) -> Self {
        self.session_duration = Some(input.into());
        self
    }
    /// <p>The length of time that the application user sessions are valid in the ISO-8601 standard.</p>
    pub fn set_session_duration(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.session_duration = input;
        self
    }
    /// <p>Used to redirect users within the application during the federation authentication process.</p>
    pub fn relay_state(mut self, input: impl Into<std::string::String>) -> Self {
        self.relay_state = Some(input.into());
        self
    }
    /// <p>Used to redirect users within the application during the federation authentication process.</p>
    pub fn set_relay_state(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.relay_state = input;
        self
    }
    /// Appends an item to `tags`.
    ///
    /// To override the contents of this collection use [`set_tags`](Self::set_tags).
    ///
    /// <p>The tags to attach to the new <code>PermissionSet</code>.</p>
    pub fn tags(mut self, input: crate::types::Tag) -> Self {
        let mut v = self.tags.unwrap_or_default();
        v.push(input);
        self.tags = Some(v);
        self
    }
    /// <p>The tags to attach to the new <code>PermissionSet</code>.</p>
    pub fn set_tags(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::Tag>>,
    ) -> Self {
        self.tags = input;
        self
    }
    /// Consumes the builder and constructs a [`CreatePermissionSetInput`](crate::operation::create_permission_set::CreatePermissionSetInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::create_permission_set::CreatePermissionSetInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::create_permission_set::CreatePermissionSetInput {
                name: self.name,
                description: self.description,
                instance_arn: self.instance_arn,
                session_duration: self.session_duration,
                relay_state: self.relay_state,
                tags: self.tags,
            },
        )
    }
}
