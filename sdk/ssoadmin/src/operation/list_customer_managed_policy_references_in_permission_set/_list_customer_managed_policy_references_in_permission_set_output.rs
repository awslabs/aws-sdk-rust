// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ListCustomerManagedPolicyReferencesInPermissionSetOutput {
    /// <p>Specifies the names and paths of the customer managed policies that you have attached to your permission set.</p>
    pub customer_managed_policy_references: ::std::option::Option<::std::vec::Vec<crate::types::CustomerManagedPolicyReference>>,
    /// <p>The pagination token for the list API. Initially the value is null. Use the output of previous API calls to make subsequent calls.</p>
    pub next_token: ::std::option::Option<::std::string::String>,
    _request_id: Option<String>,
}
impl ListCustomerManagedPolicyReferencesInPermissionSetOutput {
    /// <p>Specifies the names and paths of the customer managed policies that you have attached to your permission set.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.customer_managed_policy_references.is_none()`.
    pub fn customer_managed_policy_references(&self) -> &[crate::types::CustomerManagedPolicyReference] {
        self.customer_managed_policy_references.as_deref().unwrap_or_default()
    }
    /// <p>The pagination token for the list API. Initially the value is null. Use the output of previous API calls to make subsequent calls.</p>
    pub fn next_token(&self) -> ::std::option::Option<&str> {
        self.next_token.as_deref()
    }
}
impl ::aws_http::request_id::RequestId for ListCustomerManagedPolicyReferencesInPermissionSetOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl ListCustomerManagedPolicyReferencesInPermissionSetOutput {
    /// Creates a new builder-style object to manufacture [`ListCustomerManagedPolicyReferencesInPermissionSetOutput`](crate::operation::list_customer_managed_policy_references_in_permission_set::ListCustomerManagedPolicyReferencesInPermissionSetOutput).
    pub fn builder() -> crate::operation::list_customer_managed_policy_references_in_permission_set::builders::ListCustomerManagedPolicyReferencesInPermissionSetOutputBuilder{
        crate::operation::list_customer_managed_policy_references_in_permission_set::builders::ListCustomerManagedPolicyReferencesInPermissionSetOutputBuilder::default()
    }
}

/// A builder for [`ListCustomerManagedPolicyReferencesInPermissionSetOutput`](crate::operation::list_customer_managed_policy_references_in_permission_set::ListCustomerManagedPolicyReferencesInPermissionSetOutput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ListCustomerManagedPolicyReferencesInPermissionSetOutputBuilder {
    pub(crate) customer_managed_policy_references: ::std::option::Option<::std::vec::Vec<crate::types::CustomerManagedPolicyReference>>,
    pub(crate) next_token: ::std::option::Option<::std::string::String>,
    _request_id: Option<String>,
}
impl ListCustomerManagedPolicyReferencesInPermissionSetOutputBuilder {
    /// Appends an item to `customer_managed_policy_references`.
    ///
    /// To override the contents of this collection use [`set_customer_managed_policy_references`](Self::set_customer_managed_policy_references).
    ///
    /// <p>Specifies the names and paths of the customer managed policies that you have attached to your permission set.</p>
    pub fn customer_managed_policy_references(mut self, input: crate::types::CustomerManagedPolicyReference) -> Self {
        let mut v = self.customer_managed_policy_references.unwrap_or_default();
        v.push(input);
        self.customer_managed_policy_references = ::std::option::Option::Some(v);
        self
    }
    /// <p>Specifies the names and paths of the customer managed policies that you have attached to your permission set.</p>
    pub fn set_customer_managed_policy_references(
        mut self,
        input: ::std::option::Option<::std::vec::Vec<crate::types::CustomerManagedPolicyReference>>,
    ) -> Self {
        self.customer_managed_policy_references = input;
        self
    }
    /// <p>Specifies the names and paths of the customer managed policies that you have attached to your permission set.</p>
    pub fn get_customer_managed_policy_references(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::CustomerManagedPolicyReference>> {
        &self.customer_managed_policy_references
    }
    /// <p>The pagination token for the list API. Initially the value is null. Use the output of previous API calls to make subsequent calls.</p>
    pub fn next_token(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.next_token = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The pagination token for the list API. Initially the value is null. Use the output of previous API calls to make subsequent calls.</p>
    pub fn set_next_token(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// <p>The pagination token for the list API. Initially the value is null. Use the output of previous API calls to make subsequent calls.</p>
    pub fn get_next_token(&self) -> &::std::option::Option<::std::string::String> {
        &self.next_token
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`ListCustomerManagedPolicyReferencesInPermissionSetOutput`](crate::operation::list_customer_managed_policy_references_in_permission_set::ListCustomerManagedPolicyReferencesInPermissionSetOutput).
    pub fn build(
        self,
    ) -> crate::operation::list_customer_managed_policy_references_in_permission_set::ListCustomerManagedPolicyReferencesInPermissionSetOutput {
        crate::operation::list_customer_managed_policy_references_in_permission_set::ListCustomerManagedPolicyReferencesInPermissionSetOutput {
            customer_managed_policy_references: self.customer_managed_policy_references,
            next_token: self.next_token,
            _request_id: self._request_id,
        }
    }
}
