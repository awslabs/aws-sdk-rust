// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub use crate::operation::update_trusted_token_issuer::_update_trusted_token_issuer_output::UpdateTrustedTokenIssuerOutputBuilder;

pub use crate::operation::update_trusted_token_issuer::_update_trusted_token_issuer_input::UpdateTrustedTokenIssuerInputBuilder;

impl crate::operation::update_trusted_token_issuer::builders::UpdateTrustedTokenIssuerInputBuilder {
    /// Sends a request with this input using the given client.
    pub async fn send_with(
        self,
        client: &crate::Client,
    ) -> ::std::result::Result<
        crate::operation::update_trusted_token_issuer::UpdateTrustedTokenIssuerOutput,
        ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::update_trusted_token_issuer::UpdateTrustedTokenIssuerError,
            ::aws_smithy_runtime_api::client::orchestrator::HttpResponse,
        >,
    > {
        let mut fluent_builder = client.update_trusted_token_issuer();
        fluent_builder.inner = self;
        fluent_builder.send().await
    }
}
/// Fluent builder constructing a request to `UpdateTrustedTokenIssuer`.
///
/// <p>Updates the name of the trusted token issuer, or the path of a source attribute or destination attribute for a trusted token issuer configuration.</p><note>
/// <p>Updating this trusted token issuer configuration might cause users to lose access to any applications that are configured to use the trusted token issuer.</p>
/// </note>
#[derive(::std::clone::Clone, ::std::fmt::Debug)]
pub struct UpdateTrustedTokenIssuerFluentBuilder {
    handle: ::std::sync::Arc<crate::client::Handle>,
    inner: crate::operation::update_trusted_token_issuer::builders::UpdateTrustedTokenIssuerInputBuilder,
    config_override: ::std::option::Option<crate::config::Builder>,
}
impl
    crate::client::customize::internal::CustomizableSend<
        crate::operation::update_trusted_token_issuer::UpdateTrustedTokenIssuerOutput,
        crate::operation::update_trusted_token_issuer::UpdateTrustedTokenIssuerError,
    > for UpdateTrustedTokenIssuerFluentBuilder
{
    fn send(
        self,
        config_override: crate::config::Builder,
    ) -> crate::client::customize::internal::BoxFuture<
        crate::client::customize::internal::SendResult<
            crate::operation::update_trusted_token_issuer::UpdateTrustedTokenIssuerOutput,
            crate::operation::update_trusted_token_issuer::UpdateTrustedTokenIssuerError,
        >,
    > {
        ::std::boxed::Box::pin(async move { self.config_override(config_override).send().await })
    }
}
impl UpdateTrustedTokenIssuerFluentBuilder {
    /// Creates a new `UpdateTrustedTokenIssuer`.
    pub(crate) fn new(handle: ::std::sync::Arc<crate::client::Handle>) -> Self {
        Self {
            handle,
            inner: ::std::default::Default::default(),
            config_override: ::std::option::Option::None,
        }
    }
    /// Access the UpdateTrustedTokenIssuer as a reference.
    pub fn as_input(&self) -> &crate::operation::update_trusted_token_issuer::builders::UpdateTrustedTokenIssuerInputBuilder {
        &self.inner
    }
    /// Sends the request and returns the response.
    ///
    /// If an error occurs, an `SdkError` will be returned with additional details that
    /// can be matched against.
    ///
    /// By default, any retryable failures will be retried twice. Retry behavior
    /// is configurable with the [RetryConfig](aws_smithy_types::retry::RetryConfig), which can be
    /// set when configuring the client.
    pub async fn send(
        self,
    ) -> ::std::result::Result<
        crate::operation::update_trusted_token_issuer::UpdateTrustedTokenIssuerOutput,
        ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::update_trusted_token_issuer::UpdateTrustedTokenIssuerError,
            ::aws_smithy_runtime_api::client::orchestrator::HttpResponse,
        >,
    > {
        let input = self
            .inner
            .build()
            .map_err(::aws_smithy_runtime_api::client::result::SdkError::construction_failure)?;
        let runtime_plugins = crate::operation::update_trusted_token_issuer::UpdateTrustedTokenIssuer::operation_runtime_plugins(
            self.handle.runtime_plugins.clone(),
            &self.handle.conf,
            self.config_override,
        );
        crate::operation::update_trusted_token_issuer::UpdateTrustedTokenIssuer::orchestrate(&runtime_plugins, input).await
    }

    /// Consumes this builder, creating a customizable operation that can be modified before being sent.
    pub fn customize(
        self,
    ) -> crate::client::customize::CustomizableOperation<
        crate::operation::update_trusted_token_issuer::UpdateTrustedTokenIssuerOutput,
        crate::operation::update_trusted_token_issuer::UpdateTrustedTokenIssuerError,
        Self,
    > {
        crate::client::customize::CustomizableOperation::new(self)
    }
    pub(crate) fn config_override(mut self, config_override: impl ::std::convert::Into<crate::config::Builder>) -> Self {
        self.set_config_override(::std::option::Option::Some(config_override.into()));
        self
    }

    pub(crate) fn set_config_override(&mut self, config_override: ::std::option::Option<crate::config::Builder>) -> &mut Self {
        self.config_override = config_override;
        self
    }
    /// <p>Specifies the ARN of the trusted token issuer configuration that you want to update.</p>
    pub fn trusted_token_issuer_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.inner = self.inner.trusted_token_issuer_arn(input.into());
        self
    }
    /// <p>Specifies the ARN of the trusted token issuer configuration that you want to update.</p>
    pub fn set_trusted_token_issuer_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.inner = self.inner.set_trusted_token_issuer_arn(input);
        self
    }
    /// <p>Specifies the ARN of the trusted token issuer configuration that you want to update.</p>
    pub fn get_trusted_token_issuer_arn(&self) -> &::std::option::Option<::std::string::String> {
        self.inner.get_trusted_token_issuer_arn()
    }
    /// <p>Specifies the updated name to be applied to the trusted token issuer configuration.</p>
    pub fn name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.inner = self.inner.name(input.into());
        self
    }
    /// <p>Specifies the updated name to be applied to the trusted token issuer configuration.</p>
    pub fn set_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.inner = self.inner.set_name(input);
        self
    }
    /// <p>Specifies the updated name to be applied to the trusted token issuer configuration.</p>
    pub fn get_name(&self) -> &::std::option::Option<::std::string::String> {
        self.inner.get_name()
    }
    /// <p>Specifies a structure with settings to apply to the specified trusted token issuer. The settings that you can provide are determined by the type of the trusted token issuer that you are updating.</p>
    pub fn trusted_token_issuer_configuration(mut self, input: crate::types::TrustedTokenIssuerUpdateConfiguration) -> Self {
        self.inner = self.inner.trusted_token_issuer_configuration(input);
        self
    }
    /// <p>Specifies a structure with settings to apply to the specified trusted token issuer. The settings that you can provide are determined by the type of the trusted token issuer that you are updating.</p>
    pub fn set_trusted_token_issuer_configuration(
        mut self,
        input: ::std::option::Option<crate::types::TrustedTokenIssuerUpdateConfiguration>,
    ) -> Self {
        self.inner = self.inner.set_trusted_token_issuer_configuration(input);
        self
    }
    /// <p>Specifies a structure with settings to apply to the specified trusted token issuer. The settings that you can provide are determined by the type of the trusted token issuer that you are updating.</p>
    pub fn get_trusted_token_issuer_configuration(&self) -> &::std::option::Option<crate::types::TrustedTokenIssuerUpdateConfiguration> {
        self.inner.get_trusted_token_issuer_configuration()
    }
}
