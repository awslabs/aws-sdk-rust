// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The status of the creation or deletion operation of an assignment that a principal needs to access an account.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AccountAssignmentOperationStatus {
    /// <p>The status of the permission set provisioning process.</p>
    #[doc(hidden)]
    pub status: std::option::Option<crate::types::StatusValues>,
    /// <p>The identifier for tracking the request operation that is generated by the universally unique identifier (UUID) workflow.</p>
    #[doc(hidden)]
    pub request_id: std::option::Option<std::string::String>,
    /// <p>The message that contains an error or exception in case of an operation failure.</p>
    #[doc(hidden)]
    pub failure_reason: std::option::Option<std::string::String>,
    /// <p>TargetID is an AWS account identifier, typically a 10-12 digit string (For example, 123456789012).</p>
    #[doc(hidden)]
    pub target_id: std::option::Option<std::string::String>,
    /// <p>The entity type for which the assignment will be created.</p>
    #[doc(hidden)]
    pub target_type: std::option::Option<crate::types::TargetType>,
    /// <p>The ARN of the permission set. For more information about ARNs, see <a href="/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>.</p>
    #[doc(hidden)]
    pub permission_set_arn: std::option::Option<std::string::String>,
    /// <p>The entity type for which the assignment will be created.</p>
    #[doc(hidden)]
    pub principal_type: std::option::Option<crate::types::PrincipalType>,
    /// <p>An identifier for an object in IAM Identity Center, such as a user or group. PrincipalIds are GUIDs (For example, f81d4fae-7dec-11d0-a765-00a0c91e6bf6). For more information about PrincipalIds in IAM Identity Center, see the <a href="/singlesignon/latest/IdentityStoreAPIReference/welcome.html">IAM Identity Center Identity Store API Reference</a>.</p>
    #[doc(hidden)]
    pub principal_id: std::option::Option<std::string::String>,
    /// <p>The date that the permission set was created.</p>
    #[doc(hidden)]
    pub created_date: std::option::Option<aws_smithy_types::DateTime>,
}
impl AccountAssignmentOperationStatus {
    /// <p>The status of the permission set provisioning process.</p>
    pub fn status(&self) -> std::option::Option<&crate::types::StatusValues> {
        self.status.as_ref()
    }
    /// <p>The identifier for tracking the request operation that is generated by the universally unique identifier (UUID) workflow.</p>
    pub fn request_id(&self) -> std::option::Option<&str> {
        self.request_id.as_deref()
    }
    /// <p>The message that contains an error or exception in case of an operation failure.</p>
    pub fn failure_reason(&self) -> std::option::Option<&str> {
        self.failure_reason.as_deref()
    }
    /// <p>TargetID is an AWS account identifier, typically a 10-12 digit string (For example, 123456789012).</p>
    pub fn target_id(&self) -> std::option::Option<&str> {
        self.target_id.as_deref()
    }
    /// <p>The entity type for which the assignment will be created.</p>
    pub fn target_type(&self) -> std::option::Option<&crate::types::TargetType> {
        self.target_type.as_ref()
    }
    /// <p>The ARN of the permission set. For more information about ARNs, see <a href="/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>.</p>
    pub fn permission_set_arn(&self) -> std::option::Option<&str> {
        self.permission_set_arn.as_deref()
    }
    /// <p>The entity type for which the assignment will be created.</p>
    pub fn principal_type(&self) -> std::option::Option<&crate::types::PrincipalType> {
        self.principal_type.as_ref()
    }
    /// <p>An identifier for an object in IAM Identity Center, such as a user or group. PrincipalIds are GUIDs (For example, f81d4fae-7dec-11d0-a765-00a0c91e6bf6). For more information about PrincipalIds in IAM Identity Center, see the <a href="/singlesignon/latest/IdentityStoreAPIReference/welcome.html">IAM Identity Center Identity Store API Reference</a>.</p>
    pub fn principal_id(&self) -> std::option::Option<&str> {
        self.principal_id.as_deref()
    }
    /// <p>The date that the permission set was created.</p>
    pub fn created_date(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.created_date.as_ref()
    }
}
impl AccountAssignmentOperationStatus {
    /// Creates a new builder-style object to manufacture [`AccountAssignmentOperationStatus`](crate::types::AccountAssignmentOperationStatus).
    pub fn builder() -> crate::types::builders::AccountAssignmentOperationStatusBuilder {
        crate::types::builders::AccountAssignmentOperationStatusBuilder::default()
    }
}

/// A builder for [`AccountAssignmentOperationStatus`](crate::types::AccountAssignmentOperationStatus).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AccountAssignmentOperationStatusBuilder {
    pub(crate) status: std::option::Option<crate::types::StatusValues>,
    pub(crate) request_id: std::option::Option<std::string::String>,
    pub(crate) failure_reason: std::option::Option<std::string::String>,
    pub(crate) target_id: std::option::Option<std::string::String>,
    pub(crate) target_type: std::option::Option<crate::types::TargetType>,
    pub(crate) permission_set_arn: std::option::Option<std::string::String>,
    pub(crate) principal_type: std::option::Option<crate::types::PrincipalType>,
    pub(crate) principal_id: std::option::Option<std::string::String>,
    pub(crate) created_date: std::option::Option<aws_smithy_types::DateTime>,
}
impl AccountAssignmentOperationStatusBuilder {
    /// <p>The status of the permission set provisioning process.</p>
    pub fn status(mut self, input: crate::types::StatusValues) -> Self {
        self.status = Some(input);
        self
    }
    /// <p>The status of the permission set provisioning process.</p>
    pub fn set_status(mut self, input: std::option::Option<crate::types::StatusValues>) -> Self {
        self.status = input;
        self
    }
    /// <p>The identifier for tracking the request operation that is generated by the universally unique identifier (UUID) workflow.</p>
    pub fn request_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.request_id = Some(input.into());
        self
    }
    /// <p>The identifier for tracking the request operation that is generated by the universally unique identifier (UUID) workflow.</p>
    pub fn set_request_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.request_id = input;
        self
    }
    /// <p>The message that contains an error or exception in case of an operation failure.</p>
    pub fn failure_reason(mut self, input: impl Into<std::string::String>) -> Self {
        self.failure_reason = Some(input.into());
        self
    }
    /// <p>The message that contains an error or exception in case of an operation failure.</p>
    pub fn set_failure_reason(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.failure_reason = input;
        self
    }
    /// <p>TargetID is an AWS account identifier, typically a 10-12 digit string (For example, 123456789012).</p>
    pub fn target_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.target_id = Some(input.into());
        self
    }
    /// <p>TargetID is an AWS account identifier, typically a 10-12 digit string (For example, 123456789012).</p>
    pub fn set_target_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.target_id = input;
        self
    }
    /// <p>The entity type for which the assignment will be created.</p>
    pub fn target_type(mut self, input: crate::types::TargetType) -> Self {
        self.target_type = Some(input);
        self
    }
    /// <p>The entity type for which the assignment will be created.</p>
    pub fn set_target_type(mut self, input: std::option::Option<crate::types::TargetType>) -> Self {
        self.target_type = input;
        self
    }
    /// <p>The ARN of the permission set. For more information about ARNs, see <a href="/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>.</p>
    pub fn permission_set_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.permission_set_arn = Some(input.into());
        self
    }
    /// <p>The ARN of the permission set. For more information about ARNs, see <a href="/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>.</p>
    pub fn set_permission_set_arn(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.permission_set_arn = input;
        self
    }
    /// <p>The entity type for which the assignment will be created.</p>
    pub fn principal_type(mut self, input: crate::types::PrincipalType) -> Self {
        self.principal_type = Some(input);
        self
    }
    /// <p>The entity type for which the assignment will be created.</p>
    pub fn set_principal_type(
        mut self,
        input: std::option::Option<crate::types::PrincipalType>,
    ) -> Self {
        self.principal_type = input;
        self
    }
    /// <p>An identifier for an object in IAM Identity Center, such as a user or group. PrincipalIds are GUIDs (For example, f81d4fae-7dec-11d0-a765-00a0c91e6bf6). For more information about PrincipalIds in IAM Identity Center, see the <a href="/singlesignon/latest/IdentityStoreAPIReference/welcome.html">IAM Identity Center Identity Store API Reference</a>.</p>
    pub fn principal_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.principal_id = Some(input.into());
        self
    }
    /// <p>An identifier for an object in IAM Identity Center, such as a user or group. PrincipalIds are GUIDs (For example, f81d4fae-7dec-11d0-a765-00a0c91e6bf6). For more information about PrincipalIds in IAM Identity Center, see the <a href="/singlesignon/latest/IdentityStoreAPIReference/welcome.html">IAM Identity Center Identity Store API Reference</a>.</p>
    pub fn set_principal_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.principal_id = input;
        self
    }
    /// <p>The date that the permission set was created.</p>
    pub fn created_date(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.created_date = Some(input);
        self
    }
    /// <p>The date that the permission set was created.</p>
    pub fn set_created_date(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.created_date = input;
        self
    }
    /// Consumes the builder and constructs a [`AccountAssignmentOperationStatus`](crate::types::AccountAssignmentOperationStatus).
    pub fn build(self) -> crate::types::AccountAssignmentOperationStatus {
        crate::types::AccountAssignmentOperationStatus {
            status: self.status,
            request_id: self.request_id,
            failure_reason: self.failure_reason,
            target_id: self.target_id,
            target_type: self.target_type,
            permission_set_arn: self.permission_set_arn,
            principal_type: self.principal_type,
            principal_id: self.principal_id,
            created_date: self.created_date,
        }
    }
}
