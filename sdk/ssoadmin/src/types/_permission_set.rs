// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>An entity that contains IAM policies.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct PermissionSet {
    /// <p>The name of the permission set.</p>
    #[doc(hidden)]
    pub name: std::option::Option<std::string::String>,
    /// <p>The ARN of the permission set. For more information about ARNs, see <a href="/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>.</p>
    #[doc(hidden)]
    pub permission_set_arn: std::option::Option<std::string::String>,
    /// <p>The description of the <code>PermissionSet</code>.</p>
    #[doc(hidden)]
    pub description: std::option::Option<std::string::String>,
    /// <p>The date that the permission set was created.</p>
    #[doc(hidden)]
    pub created_date: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>The length of time that the application user sessions are valid for in the ISO-8601 standard.</p>
    #[doc(hidden)]
    pub session_duration: std::option::Option<std::string::String>,
    /// <p>Used to redirect users within the application during the federation authentication process.</p>
    #[doc(hidden)]
    pub relay_state: std::option::Option<std::string::String>,
}
impl PermissionSet {
    /// <p>The name of the permission set.</p>
    pub fn name(&self) -> std::option::Option<&str> {
        self.name.as_deref()
    }
    /// <p>The ARN of the permission set. For more information about ARNs, see <a href="/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>.</p>
    pub fn permission_set_arn(&self) -> std::option::Option<&str> {
        self.permission_set_arn.as_deref()
    }
    /// <p>The description of the <code>PermissionSet</code>.</p>
    pub fn description(&self) -> std::option::Option<&str> {
        self.description.as_deref()
    }
    /// <p>The date that the permission set was created.</p>
    pub fn created_date(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.created_date.as_ref()
    }
    /// <p>The length of time that the application user sessions are valid for in the ISO-8601 standard.</p>
    pub fn session_duration(&self) -> std::option::Option<&str> {
        self.session_duration.as_deref()
    }
    /// <p>Used to redirect users within the application during the federation authentication process.</p>
    pub fn relay_state(&self) -> std::option::Option<&str> {
        self.relay_state.as_deref()
    }
}
impl PermissionSet {
    /// Creates a new builder-style object to manufacture [`PermissionSet`](crate::types::PermissionSet).
    pub fn builder() -> crate::types::builders::PermissionSetBuilder {
        crate::types::builders::PermissionSetBuilder::default()
    }
}

/// A builder for [`PermissionSet`](crate::types::PermissionSet).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct PermissionSetBuilder {
    pub(crate) name: std::option::Option<std::string::String>,
    pub(crate) permission_set_arn: std::option::Option<std::string::String>,
    pub(crate) description: std::option::Option<std::string::String>,
    pub(crate) created_date: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) session_duration: std::option::Option<std::string::String>,
    pub(crate) relay_state: std::option::Option<std::string::String>,
}
impl PermissionSetBuilder {
    /// <p>The name of the permission set.</p>
    pub fn name(mut self, input: impl Into<std::string::String>) -> Self {
        self.name = Some(input.into());
        self
    }
    /// <p>The name of the permission set.</p>
    pub fn set_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>The ARN of the permission set. For more information about ARNs, see <a href="/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>.</p>
    pub fn permission_set_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.permission_set_arn = Some(input.into());
        self
    }
    /// <p>The ARN of the permission set. For more information about ARNs, see <a href="/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>.</p>
    pub fn set_permission_set_arn(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.permission_set_arn = input;
        self
    }
    /// <p>The description of the <code>PermissionSet</code>.</p>
    pub fn description(mut self, input: impl Into<std::string::String>) -> Self {
        self.description = Some(input.into());
        self
    }
    /// <p>The description of the <code>PermissionSet</code>.</p>
    pub fn set_description(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.description = input;
        self
    }
    /// <p>The date that the permission set was created.</p>
    pub fn created_date(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.created_date = Some(input);
        self
    }
    /// <p>The date that the permission set was created.</p>
    pub fn set_created_date(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.created_date = input;
        self
    }
    /// <p>The length of time that the application user sessions are valid for in the ISO-8601 standard.</p>
    pub fn session_duration(mut self, input: impl Into<std::string::String>) -> Self {
        self.session_duration = Some(input.into());
        self
    }
    /// <p>The length of time that the application user sessions are valid for in the ISO-8601 standard.</p>
    pub fn set_session_duration(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.session_duration = input;
        self
    }
    /// <p>Used to redirect users within the application during the federation authentication process.</p>
    pub fn relay_state(mut self, input: impl Into<std::string::String>) -> Self {
        self.relay_state = Some(input.into());
        self
    }
    /// <p>Used to redirect users within the application during the federation authentication process.</p>
    pub fn set_relay_state(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.relay_state = input;
        self
    }
    /// Consumes the builder and constructs a [`PermissionSet`](crate::types::PermissionSet).
    pub fn build(self) -> crate::types::PermissionSet {
        crate::types::PermissionSet {
            name: self.name,
            permission_set_arn: self.permission_set_arn,
            description: self.description,
            created_date: self.created_date,
            session_duration: self.session_duration,
            relay_state: self.relay_state,
        }
    }
}
