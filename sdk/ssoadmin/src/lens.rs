// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) fn reflens_structure_crate_output_list_account_assignment_creation_status_output_next_token(
    input: &crate::output::ListAccountAssignmentCreationStatusOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_structure_crate_output_list_account_assignment_deletion_status_output_next_token(
    input: &crate::output::ListAccountAssignmentDeletionStatusOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_structure_crate_output_list_account_assignments_output_next_token(
    input: &crate::output::ListAccountAssignmentsOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_structure_crate_output_list_accounts_for_provisioned_permission_set_output_next_token(
    input: &crate::output::ListAccountsForProvisionedPermissionSetOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_structure_crate_output_list_instances_output_next_token(
    input: &crate::output::ListInstancesOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_structure_crate_output_list_managed_policies_in_permission_set_output_next_token(
    input: &crate::output::ListManagedPoliciesInPermissionSetOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_structure_crate_output_list_permission_set_provisioning_status_output_next_token(
    input: &crate::output::ListPermissionSetProvisioningStatusOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_structure_crate_output_list_permission_sets_output_next_token(
    input: &crate::output::ListPermissionSetsOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_structure_crate_output_list_permission_sets_provisioned_to_account_output_next_token(
    input: &crate::output::ListPermissionSetsProvisionedToAccountOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_structure_crate_output_list_tags_for_resource_output_next_token(
    input: &crate::output::ListTagsForResourceOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn lens_structure_crate_output_list_account_assignment_creation_status_output_account_assignments_creation_status(
    input: crate::output::ListAccountAssignmentCreationStatusOutput,
) -> std::option::Option<std::vec::Vec<crate::model::AccountAssignmentOperationStatusMetadata>> {
    let input = match input.account_assignments_creation_status {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn lens_structure_crate_output_list_account_assignment_deletion_status_output_account_assignments_deletion_status(
    input: crate::output::ListAccountAssignmentDeletionStatusOutput,
) -> std::option::Option<std::vec::Vec<crate::model::AccountAssignmentOperationStatusMetadata>> {
    let input = match input.account_assignments_deletion_status {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn lens_structure_crate_output_list_account_assignments_output_account_assignments(
    input: crate::output::ListAccountAssignmentsOutput,
) -> std::option::Option<std::vec::Vec<crate::model::AccountAssignment>> {
    let input = match input.account_assignments {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn lens_structure_crate_output_list_accounts_for_provisioned_permission_set_output_account_ids(
    input: crate::output::ListAccountsForProvisionedPermissionSetOutput,
) -> std::option::Option<std::vec::Vec<std::string::String>> {
    let input = match input.account_ids {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn lens_structure_crate_output_list_instances_output_instances(
    input: crate::output::ListInstancesOutput,
) -> std::option::Option<std::vec::Vec<crate::model::InstanceMetadata>> {
    let input = match input.instances {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn lens_structure_crate_output_list_managed_policies_in_permission_set_output_attached_managed_policies(
    input: crate::output::ListManagedPoliciesInPermissionSetOutput,
) -> std::option::Option<std::vec::Vec<crate::model::AttachedManagedPolicy>> {
    let input = match input.attached_managed_policies {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn lens_structure_crate_output_list_permission_set_provisioning_status_output_permission_sets_provisioning_status(
    input: crate::output::ListPermissionSetProvisioningStatusOutput,
) -> std::option::Option<std::vec::Vec<crate::model::PermissionSetProvisioningStatusMetadata>> {
    let input = match input.permission_sets_provisioning_status {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn lens_structure_crate_output_list_permission_sets_output_permission_sets(
    input: crate::output::ListPermissionSetsOutput,
) -> std::option::Option<std::vec::Vec<std::string::String>> {
    let input = match input.permission_sets {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn lens_structure_crate_output_list_permission_sets_provisioned_to_account_output_permission_sets(
    input: crate::output::ListPermissionSetsProvisionedToAccountOutput,
) -> std::option::Option<std::vec::Vec<std::string::String>> {
    let input = match input.permission_sets {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn lens_structure_crate_output_list_tags_for_resource_output_tags(
    input: crate::output::ListTagsForResourceOutput,
) -> std::option::Option<std::vec::Vec<crate::model::Tag>> {
    let input = match input.tags {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}
