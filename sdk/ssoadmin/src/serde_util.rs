// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) fn instance_access_control_attribute_configuration_correct_errors(
    mut builder: crate::types::builders::InstanceAccessControlAttributeConfigurationBuilder,
) -> crate::types::builders::InstanceAccessControlAttributeConfigurationBuilder {
    if builder.access_control_attributes.is_none() {
        builder.access_control_attributes = Some(Default::default())
    }
    builder
}

pub(crate) fn customer_managed_policy_reference_correct_errors(
    mut builder: crate::types::builders::CustomerManagedPolicyReferenceBuilder,
) -> crate::types::builders::CustomerManagedPolicyReferenceBuilder {
    if builder.name.is_none() {
        builder.name = Some(Default::default())
    }
    builder
}

pub(crate) fn tag_correct_errors(mut builder: crate::types::builders::TagBuilder) -> crate::types::builders::TagBuilder {
    if builder.key.is_none() {
        builder.key = Some(Default::default())
    }
    if builder.value.is_none() {
        builder.value = Some(Default::default())
    }
    builder
}

pub(crate) fn access_control_attribute_correct_errors(
    mut builder: crate::types::builders::AccessControlAttributeBuilder,
) -> crate::types::builders::AccessControlAttributeBuilder {
    if builder.key.is_none() {
        builder.key = Some(Default::default())
    }
    if builder.value.is_none() {
        builder.value = {
            let builder = crate::types::builders::AccessControlAttributeValueBuilder::default();
            crate::serde_util::access_control_attribute_value_correct_errors(builder).build().ok()
        }
    }
    builder
}

pub(crate) fn access_control_attribute_value_correct_errors(
    mut builder: crate::types::builders::AccessControlAttributeValueBuilder,
) -> crate::types::builders::AccessControlAttributeValueBuilder {
    if builder.source.is_none() {
        builder.source = Some(Default::default())
    }
    builder
}
