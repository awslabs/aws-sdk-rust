// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DetachCustomerManagedPolicyReferenceFromPermissionSet`](crate::client::fluent_builders::DetachCustomerManagedPolicyReferenceFromPermissionSet) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`instance_arn(impl Into<String>)`](crate::client::fluent_builders::DetachCustomerManagedPolicyReferenceFromPermissionSet::instance_arn) / [`set_instance_arn(Option<String>)`](crate::client::fluent_builders::DetachCustomerManagedPolicyReferenceFromPermissionSet::set_instance_arn): <p>The ARN of the IAM Identity Center instance under which the operation will be executed. </p>
    ///   - [`permission_set_arn(impl Into<String>)`](crate::client::fluent_builders::DetachCustomerManagedPolicyReferenceFromPermissionSet::permission_set_arn) / [`set_permission_set_arn(Option<String>)`](crate::client::fluent_builders::DetachCustomerManagedPolicyReferenceFromPermissionSet::set_permission_set_arn): <p>The ARN of the <code>PermissionSet</code>.</p>
    ///   - [`customer_managed_policy_reference(CustomerManagedPolicyReference)`](crate::client::fluent_builders::DetachCustomerManagedPolicyReferenceFromPermissionSet::customer_managed_policy_reference) / [`set_customer_managed_policy_reference(Option<CustomerManagedPolicyReference>)`](crate::client::fluent_builders::DetachCustomerManagedPolicyReferenceFromPermissionSet::set_customer_managed_policy_reference): <p>Specifies the name and path of a customer managed policy. You must have an IAM policy that matches the name and path in each AWS account where you want to deploy your permission set.</p>
    /// - On success, responds with [`DetachCustomerManagedPolicyReferenceFromPermissionSetOutput`](crate::output::DetachCustomerManagedPolicyReferenceFromPermissionSetOutput)
    /// - On failure, responds with [`SdkError<DetachCustomerManagedPolicyReferenceFromPermissionSetError>`](crate::error::DetachCustomerManagedPolicyReferenceFromPermissionSetError)
    pub fn detach_customer_managed_policy_reference_from_permission_set(
        &self,
    ) -> crate::client::fluent_builders::DetachCustomerManagedPolicyReferenceFromPermissionSet {
        crate::client::fluent_builders::DetachCustomerManagedPolicyReferenceFromPermissionSet::new(
            self.handle.clone(),
        )
    }
}
