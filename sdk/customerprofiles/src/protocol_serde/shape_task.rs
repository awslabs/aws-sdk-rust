// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_task(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::types::Task,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.connector_operator {
        #[allow(unused_mut)]
        let mut object_2 = object.key("ConnectorOperator").start_object();
        crate::protocol_serde::shape_connector_operator::ser_connector_operator(&mut object_2, var_1)?;
        object_2.finish();
    }
    if let Some(var_3) = &input.destination_field {
        object.key("DestinationField").string(var_3.as_str());
    }
    {
        let mut array_4 = object.key("SourceFields").start_array();
        for item_5 in &input.source_fields {
            {
                array_4.value().string(item_5.as_str());
            }
        }
        array_4.finish();
    }
    if let Some(var_6) = &input.task_properties {
        #[allow(unused_mut)]
        let mut object_7 = object.key("TaskProperties").start_object();
        for (key_8, value_9) in var_6 {
            {
                object_7.key(key_8.as_str()).string(value_9.as_str());
            }
        }
        object_7.finish();
    }
    {
        object.key("TaskType").string(input.task_type.as_str());
    }
    Ok(())
}
