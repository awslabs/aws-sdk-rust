// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_profile_attributes(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::types::ProfileAttributes,
) -> ::std::result::Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.account_number {
        #[allow(unused_mut)]
        let mut object_2 = object.key("AccountNumber").start_object();
        crate::protocol_serde::shape_profile_dimension::ser_profile_dimension(&mut object_2, var_1)?;
        object_2.finish();
    }
    if let Some(var_3) = &input.additional_information {
        #[allow(unused_mut)]
        let mut object_4 = object.key("AdditionalInformation").start_object();
        crate::protocol_serde::shape_extra_length_value_profile_dimension::ser_extra_length_value_profile_dimension(&mut object_4, var_3)?;
        object_4.finish();
    }
    if let Some(var_5) = &input.first_name {
        #[allow(unused_mut)]
        let mut object_6 = object.key("FirstName").start_object();
        crate::protocol_serde::shape_profile_dimension::ser_profile_dimension(&mut object_6, var_5)?;
        object_6.finish();
    }
    if let Some(var_7) = &input.last_name {
        #[allow(unused_mut)]
        let mut object_8 = object.key("LastName").start_object();
        crate::protocol_serde::shape_profile_dimension::ser_profile_dimension(&mut object_8, var_7)?;
        object_8.finish();
    }
    if let Some(var_9) = &input.middle_name {
        #[allow(unused_mut)]
        let mut object_10 = object.key("MiddleName").start_object();
        crate::protocol_serde::shape_profile_dimension::ser_profile_dimension(&mut object_10, var_9)?;
        object_10.finish();
    }
    if let Some(var_11) = &input.gender_string {
        #[allow(unused_mut)]
        let mut object_12 = object.key("GenderString").start_object();
        crate::protocol_serde::shape_profile_dimension::ser_profile_dimension(&mut object_12, var_11)?;
        object_12.finish();
    }
    if let Some(var_13) = &input.party_type_string {
        #[allow(unused_mut)]
        let mut object_14 = object.key("PartyTypeString").start_object();
        crate::protocol_serde::shape_profile_dimension::ser_profile_dimension(&mut object_14, var_13)?;
        object_14.finish();
    }
    if let Some(var_15) = &input.birth_date {
        #[allow(unused_mut)]
        let mut object_16 = object.key("BirthDate").start_object();
        crate::protocol_serde::shape_date_dimension::ser_date_dimension(&mut object_16, var_15)?;
        object_16.finish();
    }
    if let Some(var_17) = &input.phone_number {
        #[allow(unused_mut)]
        let mut object_18 = object.key("PhoneNumber").start_object();
        crate::protocol_serde::shape_profile_dimension::ser_profile_dimension(&mut object_18, var_17)?;
        object_18.finish();
    }
    if let Some(var_19) = &input.business_name {
        #[allow(unused_mut)]
        let mut object_20 = object.key("BusinessName").start_object();
        crate::protocol_serde::shape_profile_dimension::ser_profile_dimension(&mut object_20, var_19)?;
        object_20.finish();
    }
    if let Some(var_21) = &input.business_phone_number {
        #[allow(unused_mut)]
        let mut object_22 = object.key("BusinessPhoneNumber").start_object();
        crate::protocol_serde::shape_profile_dimension::ser_profile_dimension(&mut object_22, var_21)?;
        object_22.finish();
    }
    if let Some(var_23) = &input.home_phone_number {
        #[allow(unused_mut)]
        let mut object_24 = object.key("HomePhoneNumber").start_object();
        crate::protocol_serde::shape_profile_dimension::ser_profile_dimension(&mut object_24, var_23)?;
        object_24.finish();
    }
    if let Some(var_25) = &input.mobile_phone_number {
        #[allow(unused_mut)]
        let mut object_26 = object.key("MobilePhoneNumber").start_object();
        crate::protocol_serde::shape_profile_dimension::ser_profile_dimension(&mut object_26, var_25)?;
        object_26.finish();
    }
    if let Some(var_27) = &input.email_address {
        #[allow(unused_mut)]
        let mut object_28 = object.key("EmailAddress").start_object();
        crate::protocol_serde::shape_profile_dimension::ser_profile_dimension(&mut object_28, var_27)?;
        object_28.finish();
    }
    if let Some(var_29) = &input.personal_email_address {
        #[allow(unused_mut)]
        let mut object_30 = object.key("PersonalEmailAddress").start_object();
        crate::protocol_serde::shape_profile_dimension::ser_profile_dimension(&mut object_30, var_29)?;
        object_30.finish();
    }
    if let Some(var_31) = &input.business_email_address {
        #[allow(unused_mut)]
        let mut object_32 = object.key("BusinessEmailAddress").start_object();
        crate::protocol_serde::shape_profile_dimension::ser_profile_dimension(&mut object_32, var_31)?;
        object_32.finish();
    }
    if let Some(var_33) = &input.address {
        #[allow(unused_mut)]
        let mut object_34 = object.key("Address").start_object();
        crate::protocol_serde::shape_address_dimension::ser_address_dimension(&mut object_34, var_33)?;
        object_34.finish();
    }
    if let Some(var_35) = &input.shipping_address {
        #[allow(unused_mut)]
        let mut object_36 = object.key("ShippingAddress").start_object();
        crate::protocol_serde::shape_address_dimension::ser_address_dimension(&mut object_36, var_35)?;
        object_36.finish();
    }
    if let Some(var_37) = &input.mailing_address {
        #[allow(unused_mut)]
        let mut object_38 = object.key("MailingAddress").start_object();
        crate::protocol_serde::shape_address_dimension::ser_address_dimension(&mut object_38, var_37)?;
        object_38.finish();
    }
    if let Some(var_39) = &input.billing_address {
        #[allow(unused_mut)]
        let mut object_40 = object.key("BillingAddress").start_object();
        crate::protocol_serde::shape_address_dimension::ser_address_dimension(&mut object_40, var_39)?;
        object_40.finish();
    }
    if let Some(var_41) = &input.attributes {
        #[allow(unused_mut)]
        let mut object_42 = object.key("Attributes").start_object();
        for (key_43, value_44) in var_41 {
            {
                #[allow(unused_mut)]
                let mut object_45 = object_42.key(key_43.as_str()).start_object();
                crate::protocol_serde::shape_attribute_dimension::ser_attribute_dimension(&mut object_45, value_44)?;
                object_45.finish();
            }
        }
        object_42.finish();
    }
    if let Some(var_46) = &input.profile_type {
        #[allow(unused_mut)]
        let mut object_47 = object.key("ProfileType").start_object();
        crate::protocol_serde::shape_profile_type_dimension::ser_profile_type_dimension(&mut object_47, var_46)?;
        object_47.finish();
    }
    Ok(())
}

pub(crate) fn de_profile_attributes<'a, I>(
    tokens: &mut ::std::iter::Peekable<I>,
) -> ::std::result::Result<Option<crate::types::ProfileAttributes>, ::aws_smithy_json::deserialize::error::DeserializeError>
where
    I: Iterator<Item = Result<::aws_smithy_json::deserialize::Token<'a>, ::aws_smithy_json::deserialize::error::DeserializeError>>,
{
    match tokens.next().transpose()? {
        Some(::aws_smithy_json::deserialize::Token::ValueNull { .. }) => Ok(None),
        Some(::aws_smithy_json::deserialize::Token::StartObject { .. }) => {
            #[allow(unused_mut)]
            let mut builder = crate::types::builders::ProfileAttributesBuilder::default();
            loop {
                match tokens.next().transpose()? {
                    Some(::aws_smithy_json::deserialize::Token::EndObject { .. }) => break,
                    Some(::aws_smithy_json::deserialize::Token::ObjectKey { key, .. }) => match key.to_unescaped()?.as_ref() {
                        "AccountNumber" => {
                            builder = builder.set_account_number(crate::protocol_serde::shape_profile_dimension::de_profile_dimension(tokens)?);
                        }
                        "AdditionalInformation" => {
                            builder = builder.set_additional_information(
                                crate::protocol_serde::shape_extra_length_value_profile_dimension::de_extra_length_value_profile_dimension(tokens)?,
                            );
                        }
                        "FirstName" => {
                            builder = builder.set_first_name(crate::protocol_serde::shape_profile_dimension::de_profile_dimension(tokens)?);
                        }
                        "LastName" => {
                            builder = builder.set_last_name(crate::protocol_serde::shape_profile_dimension::de_profile_dimension(tokens)?);
                        }
                        "MiddleName" => {
                            builder = builder.set_middle_name(crate::protocol_serde::shape_profile_dimension::de_profile_dimension(tokens)?);
                        }
                        "GenderString" => {
                            builder = builder.set_gender_string(crate::protocol_serde::shape_profile_dimension::de_profile_dimension(tokens)?);
                        }
                        "PartyTypeString" => {
                            builder = builder.set_party_type_string(crate::protocol_serde::shape_profile_dimension::de_profile_dimension(tokens)?);
                        }
                        "BirthDate" => {
                            builder = builder.set_birth_date(crate::protocol_serde::shape_date_dimension::de_date_dimension(tokens)?);
                        }
                        "PhoneNumber" => {
                            builder = builder.set_phone_number(crate::protocol_serde::shape_profile_dimension::de_profile_dimension(tokens)?);
                        }
                        "BusinessName" => {
                            builder = builder.set_business_name(crate::protocol_serde::shape_profile_dimension::de_profile_dimension(tokens)?);
                        }
                        "BusinessPhoneNumber" => {
                            builder =
                                builder.set_business_phone_number(crate::protocol_serde::shape_profile_dimension::de_profile_dimension(tokens)?);
                        }
                        "HomePhoneNumber" => {
                            builder = builder.set_home_phone_number(crate::protocol_serde::shape_profile_dimension::de_profile_dimension(tokens)?);
                        }
                        "MobilePhoneNumber" => {
                            builder = builder.set_mobile_phone_number(crate::protocol_serde::shape_profile_dimension::de_profile_dimension(tokens)?);
                        }
                        "EmailAddress" => {
                            builder = builder.set_email_address(crate::protocol_serde::shape_profile_dimension::de_profile_dimension(tokens)?);
                        }
                        "PersonalEmailAddress" => {
                            builder =
                                builder.set_personal_email_address(crate::protocol_serde::shape_profile_dimension::de_profile_dimension(tokens)?);
                        }
                        "BusinessEmailAddress" => {
                            builder =
                                builder.set_business_email_address(crate::protocol_serde::shape_profile_dimension::de_profile_dimension(tokens)?);
                        }
                        "Address" => {
                            builder = builder.set_address(crate::protocol_serde::shape_address_dimension::de_address_dimension(tokens)?);
                        }
                        "ShippingAddress" => {
                            builder = builder.set_shipping_address(crate::protocol_serde::shape_address_dimension::de_address_dimension(tokens)?);
                        }
                        "MailingAddress" => {
                            builder = builder.set_mailing_address(crate::protocol_serde::shape_address_dimension::de_address_dimension(tokens)?);
                        }
                        "BillingAddress" => {
                            builder = builder.set_billing_address(crate::protocol_serde::shape_address_dimension::de_address_dimension(tokens)?);
                        }
                        "Attributes" => {
                            builder = builder.set_attributes(crate::protocol_serde::shape_custom_attributes::de_custom_attributes(tokens)?);
                        }
                        "ProfileType" => {
                            builder =
                                builder.set_profile_type(crate::protocol_serde::shape_profile_type_dimension::de_profile_type_dimension(tokens)?);
                        }
                        _ => ::aws_smithy_json::deserialize::token::skip_value(tokens)?,
                    },
                    other => {
                        return Err(::aws_smithy_json::deserialize::error::DeserializeError::custom(format!(
                            "expected object key or end object, found: {other:?}"
                        )))
                    }
                }
            }
            Ok(Some(builder.build()))
        }
        _ => Err(::aws_smithy_json::deserialize::error::DeserializeError::custom(
            "expected start object or null",
        )),
    }
}
