// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_source_connector_properties(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::types::SourceConnectorProperties,
) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    if let Some(var_1) = &input.marketo {
        #[allow(unused_mut)]
        let mut object_2 = object.key("Marketo").start_object();
        crate::protocol_serde::shape_marketo_source_properties::ser_marketo_source_properties(
            &mut object_2,
            var_1,
        )?;
        object_2.finish();
    }
    if let Some(var_3) = &input.s3 {
        #[allow(unused_mut)]
        let mut object_4 = object.key("S3").start_object();
        crate::protocol_serde::shape_s3_source_properties::ser_s3_source_properties(
            &mut object_4,
            var_3,
        )?;
        object_4.finish();
    }
    if let Some(var_5) = &input.salesforce {
        #[allow(unused_mut)]
        let mut object_6 = object.key("Salesforce").start_object();
        crate::protocol_serde::shape_salesforce_source_properties::ser_salesforce_source_properties(&mut object_6, var_5)?;
        object_6.finish();
    }
    if let Some(var_7) = &input.service_now {
        #[allow(unused_mut)]
        let mut object_8 = object.key("ServiceNow").start_object();
        crate::protocol_serde::shape_service_now_source_properties::ser_service_now_source_properties(&mut object_8, var_7)?;
        object_8.finish();
    }
    if let Some(var_9) = &input.zendesk {
        #[allow(unused_mut)]
        let mut object_10 = object.key("Zendesk").start_object();
        crate::protocol_serde::shape_zendesk_source_properties::ser_zendesk_source_properties(
            &mut object_10,
            var_9,
        )?;
        object_10.finish();
    }
    Ok(())
}
