// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Configuration information about the S3 bucket where Identity Resolution Jobs write result files.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct S3ExportingConfig {
    /// <p>The name of the S3 bucket where Identity Resolution Jobs write result files.</p>
    #[doc(hidden)]
    pub s3_bucket_name: std::option::Option<std::string::String>,
    /// <p>The S3 key name of the location where Identity Resolution Jobs write result files.</p>
    #[doc(hidden)]
    pub s3_key_name: std::option::Option<std::string::String>,
}
impl S3ExportingConfig {
    /// <p>The name of the S3 bucket where Identity Resolution Jobs write result files.</p>
    pub fn s3_bucket_name(&self) -> std::option::Option<&str> {
        self.s3_bucket_name.as_deref()
    }
    /// <p>The S3 key name of the location where Identity Resolution Jobs write result files.</p>
    pub fn s3_key_name(&self) -> std::option::Option<&str> {
        self.s3_key_name.as_deref()
    }
}
impl S3ExportingConfig {
    /// Creates a new builder-style object to manufacture [`S3ExportingConfig`](crate::types::S3ExportingConfig).
    pub fn builder() -> crate::types::builders::S3ExportingConfigBuilder {
        crate::types::builders::S3ExportingConfigBuilder::default()
    }
}

/// A builder for [`S3ExportingConfig`](crate::types::S3ExportingConfig).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct S3ExportingConfigBuilder {
    pub(crate) s3_bucket_name: std::option::Option<std::string::String>,
    pub(crate) s3_key_name: std::option::Option<std::string::String>,
}
impl S3ExportingConfigBuilder {
    /// <p>The name of the S3 bucket where Identity Resolution Jobs write result files.</p>
    pub fn s3_bucket_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.s3_bucket_name = Some(input.into());
        self
    }
    /// <p>The name of the S3 bucket where Identity Resolution Jobs write result files.</p>
    pub fn set_s3_bucket_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.s3_bucket_name = input;
        self
    }
    /// <p>The S3 key name of the location where Identity Resolution Jobs write result files.</p>
    pub fn s3_key_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.s3_key_name = Some(input.into());
        self
    }
    /// <p>The S3 key name of the location where Identity Resolution Jobs write result files.</p>
    pub fn set_s3_key_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.s3_key_name = input;
        self
    }
    /// Consumes the builder and constructs a [`S3ExportingConfig`](crate::types::S3ExportingConfig).
    pub fn build(self) -> crate::types::S3ExportingConfig {
        crate::types::S3ExportingConfig {
            s3_bucket_name: self.s3_bucket_name,
            s3_key_name: self.s3_key_name,
        }
    }
}
