// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Configuration data for integration workflow.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct IntegrationConfig {
    /// <p>Configuration data for <code>APPFLOW_INTEGRATION</code> workflow type.</p>
    #[doc(hidden)]
    pub appflow_integration: std::option::Option<crate::types::AppflowIntegration>,
}
impl IntegrationConfig {
    /// <p>Configuration data for <code>APPFLOW_INTEGRATION</code> workflow type.</p>
    pub fn appflow_integration(&self) -> std::option::Option<&crate::types::AppflowIntegration> {
        self.appflow_integration.as_ref()
    }
}
impl IntegrationConfig {
    /// Creates a new builder-style object to manufacture [`IntegrationConfig`](crate::types::IntegrationConfig).
    pub fn builder() -> crate::types::builders::IntegrationConfigBuilder {
        crate::types::builders::IntegrationConfigBuilder::default()
    }
}

/// A builder for [`IntegrationConfig`](crate::types::IntegrationConfig).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct IntegrationConfigBuilder {
    pub(crate) appflow_integration: std::option::Option<crate::types::AppflowIntegration>,
}
impl IntegrationConfigBuilder {
    /// <p>Configuration data for <code>APPFLOW_INTEGRATION</code> workflow type.</p>
    pub fn appflow_integration(mut self, input: crate::types::AppflowIntegration) -> Self {
        self.appflow_integration = Some(input);
        self
    }
    /// <p>Configuration data for <code>APPFLOW_INTEGRATION</code> workflow type.</p>
    pub fn set_appflow_integration(
        mut self,
        input: std::option::Option<crate::types::AppflowIntegration>,
    ) -> Self {
        self.appflow_integration = input;
        self
    }
    /// Consumes the builder and constructs a [`IntegrationConfig`](crate::types::IntegrationConfig).
    pub fn build(self) -> crate::types::IntegrationConfig {
        crate::types::IntegrationConfig {
            appflow_integration: self.appflow_integration,
        }
    }
}
