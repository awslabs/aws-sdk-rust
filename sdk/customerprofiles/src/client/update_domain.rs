// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateDomain`](crate::operation::update_domain::builders::UpdateDomainFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`domain_name(impl Into<String>)`](crate::operation::update_domain::builders::UpdateDomainFluentBuilder::domain_name) / [`set_domain_name(Option<String>)`](crate::operation::update_domain::builders::UpdateDomainFluentBuilder::set_domain_name):<br>required: **true**<br><p>The unique name of the domain.</p><br>
    ///   - [`default_expiration_days(i32)`](crate::operation::update_domain::builders::UpdateDomainFluentBuilder::default_expiration_days) / [`set_default_expiration_days(Option<i32>)`](crate::operation::update_domain::builders::UpdateDomainFluentBuilder::set_default_expiration_days):<br>required: **false**<br><p>The default number of days until the data within the domain expires.</p><br>
    ///   - [`default_encryption_key(impl Into<String>)`](crate::operation::update_domain::builders::UpdateDomainFluentBuilder::default_encryption_key) / [`set_default_encryption_key(Option<String>)`](crate::operation::update_domain::builders::UpdateDomainFluentBuilder::set_default_encryption_key):<br>required: **false**<br><p>The default encryption key, which is an AWS managed key, is used when no specific type of encryption key is specified. It is used to encrypt all data before it is placed in permanent or semi-permanent storage. If specified as an empty string, it will clear any existing value.</p><br>
    ///   - [`dead_letter_queue_url(impl Into<String>)`](crate::operation::update_domain::builders::UpdateDomainFluentBuilder::dead_letter_queue_url) / [`set_dead_letter_queue_url(Option<String>)`](crate::operation::update_domain::builders::UpdateDomainFluentBuilder::set_dead_letter_queue_url):<br>required: **false**<br><p>The URL of the SQS dead letter queue, which is used for reporting errors associated with ingesting data from third party applications. If specified as an empty string, it will clear any existing value. You must set up a policy on the DeadLetterQueue for the SendMessage operation to enable Amazon Connect Customer Profiles to send messages to the DeadLetterQueue.</p><br>
    ///   - [`matching(MatchingRequest)`](crate::operation::update_domain::builders::UpdateDomainFluentBuilder::matching) / [`set_matching(Option<MatchingRequest>)`](crate::operation::update_domain::builders::UpdateDomainFluentBuilder::set_matching):<br>required: **false**<br><p>The process of matching duplicate profiles. If <code>Matching</code> = <code>true</code>, Amazon Connect Customer Profiles starts a weekly batch process called Identity Resolution Job. If you do not specify a date and time for Identity Resolution Job to run, by default it runs every Saturday at 12AM UTC to detect duplicate profiles in your domains. </p>  <p>After the Identity Resolution Job completes, use the <a href="https://docs.aws.amazon.com/customerprofiles/latest/APIReference/API_GetMatches.html">GetMatches</a> API to return and review the results. Or, if you have configured <code>ExportingConfig</code> in the <code>MatchingRequest</code>, you can download the results from S3.</p><br>
    ///   - [`rule_based_matching(RuleBasedMatchingRequest)`](crate::operation::update_domain::builders::UpdateDomainFluentBuilder::rule_based_matching) / [`set_rule_based_matching(Option<RuleBasedMatchingRequest>)`](crate::operation::update_domain::builders::UpdateDomainFluentBuilder::set_rule_based_matching):<br>required: **false**<br><p>The process of matching duplicate profiles using the rule-Based matching. If <code>RuleBasedMatching</code> = true, Amazon Connect Customer Profiles will start to match and merge your profiles according to your configuration in the <code>RuleBasedMatchingRequest</code>. You can use the <code>ListRuleBasedMatches</code> and <code>GetSimilarProfiles</code> API to return and review the results. Also, if you have configured <code>ExportingConfig</code> in the <code>RuleBasedMatchingRequest</code>, you can download the results from S3.</p><br>
    ///   - [`tags(impl Into<String>, impl Into<String>)`](crate::operation::update_domain::builders::UpdateDomainFluentBuilder::tags) / [`set_tags(Option<HashMap::<String, String>>)`](crate::operation::update_domain::builders::UpdateDomainFluentBuilder::set_tags):<br>required: **false**<br><p>The tags used to organize, track, or control access for this resource.</p><br>
    /// - On success, responds with [`UpdateDomainOutput`](crate::operation::update_domain::UpdateDomainOutput) with field(s):
    ///   - [`domain_name(String)`](crate::operation::update_domain::UpdateDomainOutput::domain_name): <p>The unique name of the domain.</p>
    ///   - [`default_expiration_days(Option<i32>)`](crate::operation::update_domain::UpdateDomainOutput::default_expiration_days): <p>The default number of days until the data within the domain expires.</p>
    ///   - [`default_encryption_key(Option<String>)`](crate::operation::update_domain::UpdateDomainOutput::default_encryption_key): <p>The default encryption key, which is an AWS managed key, is used when no specific type of encryption key is specified. It is used to encrypt all data before it is placed in permanent or semi-permanent storage.</p>
    ///   - [`dead_letter_queue_url(Option<String>)`](crate::operation::update_domain::UpdateDomainOutput::dead_letter_queue_url): <p>The URL of the SQS dead letter queue, which is used for reporting errors associated with ingesting data from third party applications.</p>
    ///   - [`matching(Option<MatchingResponse>)`](crate::operation::update_domain::UpdateDomainOutput::matching): <p>The process of matching duplicate profiles. If <code>Matching</code> = <code>true</code>, Amazon Connect Customer Profiles starts a weekly batch process called Identity Resolution Job. If you do not specify a date and time for Identity Resolution Job to run, by default it runs every Saturday at 12AM UTC to detect duplicate profiles in your domains. </p>  <p>After the Identity Resolution Job completes, use the <a href="https://docs.aws.amazon.com/customerprofiles/latest/APIReference/API_GetMatches.html">GetMatches</a> API to return and review the results. Or, if you have configured <code>ExportingConfig</code> in the <code>MatchingRequest</code>, you can download the results from S3.</p>
    ///   - [`rule_based_matching(Option<RuleBasedMatchingResponse>)`](crate::operation::update_domain::UpdateDomainOutput::rule_based_matching): <p>The process of matching duplicate profiles using the rule-Based matching. If <code>RuleBasedMatching</code> = true, Amazon Connect Customer Profiles will start to match and merge your profiles according to your configuration in the <code>RuleBasedMatchingRequest</code>. You can use the <code>ListRuleBasedMatches</code> and <code>GetSimilarProfiles</code> API to return and review the results. Also, if you have configured <code>ExportingConfig</code> in the <code>RuleBasedMatchingRequest</code>, you can download the results from S3.</p>
    ///   - [`created_at(DateTime)`](crate::operation::update_domain::UpdateDomainOutput::created_at): <p>The timestamp of when the domain was created.</p>
    ///   - [`last_updated_at(DateTime)`](crate::operation::update_domain::UpdateDomainOutput::last_updated_at): <p>The timestamp of when the domain was most recently edited.</p>
    ///   - [`tags(Option<HashMap::<String, String>>)`](crate::operation::update_domain::UpdateDomainOutput::tags): <p>The tags used to organize, track, or control access for this resource.</p>
    /// - On failure, responds with [`SdkError<UpdateDomainError>`](crate::operation::update_domain::UpdateDomainError)
    pub fn update_domain(&self) -> crate::operation::update_domain::builders::UpdateDomainFluentBuilder {
        crate::operation::update_domain::builders::UpdateDomainFluentBuilder::new(self.handle.clone())
    }
}
