// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`SearchProfiles`](crate::operation::search_profiles::builders::SearchProfilesFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`next_token(impl Into<String>)`](crate::operation::search_profiles::builders::SearchProfilesFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::search_profiles::builders::SearchProfilesFluentBuilder::set_next_token):<br>required: **false**<br><p>The pagination token from the previous SearchProfiles API call.</p><br>
    ///   - [`max_results(i32)`](crate::operation::search_profiles::builders::SearchProfilesFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::search_profiles::builders::SearchProfilesFluentBuilder::set_max_results):<br>required: **false**<br><p>The maximum number of objects returned per page.</p>  <p>The default is 20 if this parameter is not included in the request.</p><br>
    ///   - [`domain_name(impl Into<String>)`](crate::operation::search_profiles::builders::SearchProfilesFluentBuilder::domain_name) / [`set_domain_name(Option<String>)`](crate::operation::search_profiles::builders::SearchProfilesFluentBuilder::set_domain_name):<br>required: **true**<br><p>The unique name of the domain.</p><br>
    ///   - [`key_name(impl Into<String>)`](crate::operation::search_profiles::builders::SearchProfilesFluentBuilder::key_name) / [`set_key_name(Option<String>)`](crate::operation::search_profiles::builders::SearchProfilesFluentBuilder::set_key_name):<br>required: **true**<br><p>A searchable identifier of a customer profile. The predefined keys you can use to search include: _account, _profileId, _assetId, _caseId, _orderId, _fullName, _phone, _email, _ctrContactId, _marketoLeadId, _salesforceAccountId, _salesforceContactId, _salesforceAssetId, _zendeskUserId, _zendeskExternalId, _zendeskTicketId, _serviceNowSystemId, _serviceNowIncidentId, _segmentUserId, _shopifyCustomerId, _shopifyOrderId.</p><br>
    ///   - [`values(impl Into<String>)`](crate::operation::search_profiles::builders::SearchProfilesFluentBuilder::values) / [`set_values(Option<Vec::<String>>)`](crate::operation::search_profiles::builders::SearchProfilesFluentBuilder::set_values):<br>required: **true**<br><p>A list of key values.</p><br>
    ///   - [`additional_search_keys(AdditionalSearchKey)`](crate::operation::search_profiles::builders::SearchProfilesFluentBuilder::additional_search_keys) / [`set_additional_search_keys(Option<Vec::<AdditionalSearchKey>>)`](crate::operation::search_profiles::builders::SearchProfilesFluentBuilder::set_additional_search_keys):<br>required: **false**<br><p>A list of <code>AdditionalSearchKey</code> objects that are each searchable identifiers of a profile. Each <code>AdditionalSearchKey</code> object contains a <code>KeyName</code> and a list of <code>Values</code> associated with that specific key (i.e., a key-value(s) pair). These additional search keys will be used in conjunction with the <code>LogicalOperator</code> and the required <code>KeyName</code> and <code>Values</code> parameters to search for profiles that satisfy the search criteria. </p><br>
    ///   - [`logical_operator(LogicalOperator)`](crate::operation::search_profiles::builders::SearchProfilesFluentBuilder::logical_operator) / [`set_logical_operator(Option<LogicalOperator>)`](crate::operation::search_profiles::builders::SearchProfilesFluentBuilder::set_logical_operator):<br>required: **false**<br><p>Relationship between all specified search keys that will be used to search for profiles. This includes the required <code>KeyName</code> and <code>Values</code> parameters as well as any key-value(s) pairs specified in the <code>AdditionalSearchKeys</code> list.</p>  <p>This parameter influences which profiles will be returned in the response in the following manner:</p>  <ul>   <li> <p> <code>AND</code> - The response only includes profiles that match all of the search keys.</p> </li>   <li> <p> <code>OR</code> - The response includes profiles that match at least one of the search keys.</p> </li>  </ul>  <p>The <code>OR</code> relationship is the default behavior if this parameter is not included in the request.</p><br>
    /// - On success, responds with [`SearchProfilesOutput`](crate::operation::search_profiles::SearchProfilesOutput) with field(s):
    ///   - [`items(Option<Vec::<Profile>>)`](crate::operation::search_profiles::SearchProfilesOutput::items): <p>The list of Profiles matching the search criteria.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::search_profiles::SearchProfilesOutput::next_token): <p>The pagination token from the previous SearchProfiles API call.</p>
    /// - On failure, responds with [`SdkError<SearchProfilesError>`](crate::operation::search_profiles::SearchProfilesError)
    pub fn search_profiles(&self) -> crate::operation::search_profiles::builders::SearchProfilesFluentBuilder {
        crate::operation::search_profiles::builders::SearchProfilesFluentBuilder::new(self.handle.clone())
    }
}
