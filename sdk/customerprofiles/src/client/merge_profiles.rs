// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`MergeProfiles`](crate::client::fluent_builders::MergeProfiles) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`domain_name(impl Into<String>)`](crate::client::fluent_builders::MergeProfiles::domain_name) / [`set_domain_name(Option<String>)`](crate::client::fluent_builders::MergeProfiles::set_domain_name): <p>The unique name of the domain.</p>
    ///   - [`main_profile_id(impl Into<String>)`](crate::client::fluent_builders::MergeProfiles::main_profile_id) / [`set_main_profile_id(Option<String>)`](crate::client::fluent_builders::MergeProfiles::set_main_profile_id): <p>The identifier of the profile to be taken.</p>
    ///   - [`profile_ids_to_be_merged(Vec<String>)`](crate::client::fluent_builders::MergeProfiles::profile_ids_to_be_merged) / [`set_profile_ids_to_be_merged(Option<Vec<String>>)`](crate::client::fluent_builders::MergeProfiles::set_profile_ids_to_be_merged): <p>The identifier of the profile to be merged into MainProfileId.</p>
    ///   - [`field_source_profile_ids(FieldSourceProfileIds)`](crate::client::fluent_builders::MergeProfiles::field_source_profile_ids) / [`set_field_source_profile_ids(Option<FieldSourceProfileIds>)`](crate::client::fluent_builders::MergeProfiles::set_field_source_profile_ids): <p>The identifiers of the fields in the profile that has the information you want to apply to the merge. For example, say you want to merge EmailAddress from Profile1 into MainProfile. This would be the identifier of the EmailAddress field in Profile1. </p>
    /// - On success, responds with [`MergeProfilesOutput`](crate::output::MergeProfilesOutput) with field(s):
    ///   - [`message(Option<String>)`](crate::output::MergeProfilesOutput::message): <p>A message that indicates the merge request is complete.</p>
    /// - On failure, responds with [`SdkError<MergeProfilesError>`](crate::error::MergeProfilesError)
    pub fn merge_profiles(&self) -> crate::client::fluent_builders::MergeProfiles {
        crate::client::fluent_builders::MergeProfiles::new(self.handle.clone())
    }
}
