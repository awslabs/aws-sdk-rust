// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetWorkflow`](crate::client::fluent_builders::GetWorkflow) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`domain_name(impl Into<String>)`](crate::client::fluent_builders::GetWorkflow::domain_name) / [`set_domain_name(Option<String>)`](crate::client::fluent_builders::GetWorkflow::set_domain_name): <p>The unique name of the domain.</p>
    ///   - [`workflow_id(impl Into<String>)`](crate::client::fluent_builders::GetWorkflow::workflow_id) / [`set_workflow_id(Option<String>)`](crate::client::fluent_builders::GetWorkflow::set_workflow_id): <p>Unique identifier for the workflow.</p>
    /// - On success, responds with [`GetWorkflowOutput`](crate::output::GetWorkflowOutput) with field(s):
    ///   - [`workflow_id(Option<String>)`](crate::output::GetWorkflowOutput::workflow_id): <p>Unique identifier for the workflow.</p>
    ///   - [`workflow_type(Option<WorkflowType>)`](crate::output::GetWorkflowOutput::workflow_type): <p>The type of workflow. The only supported value is APPFLOW_INTEGRATION.</p>
    ///   - [`status(Option<Status>)`](crate::output::GetWorkflowOutput::status): <p>Status of workflow execution.</p>
    ///   - [`error_description(Option<String>)`](crate::output::GetWorkflowOutput::error_description): <p>Workflow error messages during execution (if any).</p>
    ///   - [`start_date(Option<DateTime>)`](crate::output::GetWorkflowOutput::start_date): <p>The timestamp that represents when workflow execution started.</p>
    ///   - [`last_updated_at(Option<DateTime>)`](crate::output::GetWorkflowOutput::last_updated_at): <p>The timestamp that represents when workflow execution last updated.</p>
    ///   - [`attributes(Option<WorkflowAttributes>)`](crate::output::GetWorkflowOutput::attributes): <p>Attributes provided for workflow execution.</p>
    ///   - [`metrics(Option<WorkflowMetrics>)`](crate::output::GetWorkflowOutput::metrics): <p>Workflow specific execution metrics.</p>
    /// - On failure, responds with [`SdkError<GetWorkflowError>`](crate::error::GetWorkflowError)
    pub fn get_workflow(&self) -> crate::client::fluent_builders::GetWorkflow {
        crate::client::fluent_builders::GetWorkflow::new(self.handle.clone())
    }
}
