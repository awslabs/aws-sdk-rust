// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetIdentityResolutionJob`](crate::client::fluent_builders::GetIdentityResolutionJob) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`domain_name(impl Into<String>)`](crate::client::fluent_builders::GetIdentityResolutionJob::domain_name) / [`set_domain_name(Option<String>)`](crate::client::fluent_builders::GetIdentityResolutionJob::set_domain_name): <p>The unique name of the domain.</p>
    ///   - [`job_id(impl Into<String>)`](crate::client::fluent_builders::GetIdentityResolutionJob::job_id) / [`set_job_id(Option<String>)`](crate::client::fluent_builders::GetIdentityResolutionJob::set_job_id): <p>The unique identifier of the Identity Resolution Job.</p>
    /// - On success, responds with [`GetIdentityResolutionJobOutput`](crate::output::GetIdentityResolutionJobOutput) with field(s):
    ///   - [`domain_name(Option<String>)`](crate::output::GetIdentityResolutionJobOutput::domain_name): <p>The unique name of the domain.</p>
    ///   - [`job_id(Option<String>)`](crate::output::GetIdentityResolutionJobOutput::job_id): <p>The unique identifier of the Identity Resolution Job.</p>
    ///   - [`status(Option<IdentityResolutionJobStatus>)`](crate::output::GetIdentityResolutionJobOutput::status): <p>The status of the Identity Resolution Job.</p>  <ul>   <li> <p> <code>PENDING</code>: The Identity Resolution Job is scheduled but has not started yet. If you turn off the Identity Resolution feature in your domain, jobs in the <code>PENDING</code> state are deleted.</p> </li>   <li> <p> <code>PREPROCESSING</code>: The Identity Resolution Job is loading your data.</p> </li>   <li> <p> <code>FIND_MATCHING</code>: The Identity Resolution Job is using the machine learning model to identify profiles that belong to the same matching group.</p> </li>   <li> <p> <code>MERGING</code>: The Identity Resolution Job is merging duplicate profiles.</p> </li>   <li> <p> <code>COMPLETED</code>: The Identity Resolution Job completed successfully.</p> </li>   <li> <p> <code>PARTIAL_SUCCESS</code>: There's a system error and not all of the data is merged. The Identity Resolution Job writes a message indicating the source of the problem.</p> </li>   <li> <p> <code>FAILED</code>: The Identity Resolution Job did not merge any data. It writes a message indicating the source of the problem.</p> </li>  </ul>
    ///   - [`message(Option<String>)`](crate::output::GetIdentityResolutionJobOutput::message): <p>The error messages that are generated when the Identity Resolution Job runs.</p>
    ///   - [`job_start_time(Option<DateTime>)`](crate::output::GetIdentityResolutionJobOutput::job_start_time): <p>The timestamp of when the Identity Resolution Job was started or will be started.</p>
    ///   - [`job_end_time(Option<DateTime>)`](crate::output::GetIdentityResolutionJobOutput::job_end_time): <p>The timestamp of when the Identity Resolution Job was completed.</p>
    ///   - [`last_updated_at(Option<DateTime>)`](crate::output::GetIdentityResolutionJobOutput::last_updated_at): <p>The timestamp of when the Identity Resolution Job was most recently edited.</p>
    ///   - [`job_expiration_time(Option<DateTime>)`](crate::output::GetIdentityResolutionJobOutput::job_expiration_time): <p>The timestamp of when the Identity Resolution Job will expire.</p>
    ///   - [`auto_merging(Option<AutoMerging>)`](crate::output::GetIdentityResolutionJobOutput::auto_merging): <p>Configuration settings for how to perform the auto-merging of profiles.</p>
    ///   - [`exporting_location(Option<ExportingLocation>)`](crate::output::GetIdentityResolutionJobOutput::exporting_location): <p>The S3 location where the Identity Resolution Job writes result files.</p>
    ///   - [`job_stats(Option<JobStats>)`](crate::output::GetIdentityResolutionJobOutput::job_stats): <p>Statistics about the Identity Resolution Job.</p>
    /// - On failure, responds with [`SdkError<GetIdentityResolutionJobError>`](crate::error::GetIdentityResolutionJobError)
    pub fn get_identity_resolution_job(
        &self,
    ) -> crate::client::fluent_builders::GetIdentityResolutionJob {
        crate::client::fluent_builders::GetIdentityResolutionJob::new(self.handle.clone())
    }
}
