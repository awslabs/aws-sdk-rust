// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DeleteWorkflowInput {
    /// <p>The unique name of the domain.</p>
    #[doc(hidden)]
    pub domain_name: std::option::Option<std::string::String>,
    /// <p>Unique identifier for the workflow.</p>
    #[doc(hidden)]
    pub workflow_id: std::option::Option<std::string::String>,
}
impl DeleteWorkflowInput {
    /// <p>The unique name of the domain.</p>
    pub fn domain_name(&self) -> std::option::Option<&str> {
        self.domain_name.as_deref()
    }
    /// <p>Unique identifier for the workflow.</p>
    pub fn workflow_id(&self) -> std::option::Option<&str> {
        self.workflow_id.as_deref()
    }
}
impl DeleteWorkflowInput {
    /// Creates a new builder-style object to manufacture [`DeleteWorkflowInput`](crate::operation::delete_workflow::DeleteWorkflowInput).
    pub fn builder() -> crate::operation::delete_workflow::builders::DeleteWorkflowInputBuilder {
        crate::operation::delete_workflow::builders::DeleteWorkflowInputBuilder::default()
    }
}

/// A builder for [`DeleteWorkflowInput`](crate::operation::delete_workflow::DeleteWorkflowInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DeleteWorkflowInputBuilder {
    pub(crate) domain_name: std::option::Option<std::string::String>,
    pub(crate) workflow_id: std::option::Option<std::string::String>,
}
impl DeleteWorkflowInputBuilder {
    /// <p>The unique name of the domain.</p>
    pub fn domain_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.domain_name = Some(input.into());
        self
    }
    /// <p>The unique name of the domain.</p>
    pub fn set_domain_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.domain_name = input;
        self
    }
    /// <p>Unique identifier for the workflow.</p>
    pub fn workflow_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.workflow_id = Some(input.into());
        self
    }
    /// <p>Unique identifier for the workflow.</p>
    pub fn set_workflow_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.workflow_id = input;
        self
    }
    /// Consumes the builder and constructs a [`DeleteWorkflowInput`](crate::operation::delete_workflow::DeleteWorkflowInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::delete_workflow::DeleteWorkflowInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(crate::operation::delete_workflow::DeleteWorkflowInput {
            domain_name: self.domain_name,
            workflow_id: self.workflow_id,
        })
    }
}
