// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GetIntegrationInput {
    /// <p>The unique name of the domain.</p>
    #[doc(hidden)]
    pub domain_name: std::option::Option<std::string::String>,
    /// <p>The URI of the S3 bucket or any other type of data source.</p>
    #[doc(hidden)]
    pub uri: std::option::Option<std::string::String>,
}
impl GetIntegrationInput {
    /// <p>The unique name of the domain.</p>
    pub fn domain_name(&self) -> std::option::Option<&str> {
        self.domain_name.as_deref()
    }
    /// <p>The URI of the S3 bucket or any other type of data source.</p>
    pub fn uri(&self) -> std::option::Option<&str> {
        self.uri.as_deref()
    }
}
impl GetIntegrationInput {
    /// Creates a new builder-style object to manufacture [`GetIntegrationInput`](crate::operation::get_integration::GetIntegrationInput).
    pub fn builder() -> crate::operation::get_integration::builders::GetIntegrationInputBuilder {
        crate::operation::get_integration::builders::GetIntegrationInputBuilder::default()
    }
}

/// A builder for [`GetIntegrationInput`](crate::operation::get_integration::GetIntegrationInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct GetIntegrationInputBuilder {
    pub(crate) domain_name: std::option::Option<std::string::String>,
    pub(crate) uri: std::option::Option<std::string::String>,
}
impl GetIntegrationInputBuilder {
    /// <p>The unique name of the domain.</p>
    pub fn domain_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.domain_name = Some(input.into());
        self
    }
    /// <p>The unique name of the domain.</p>
    pub fn set_domain_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.domain_name = input;
        self
    }
    /// <p>The URI of the S3 bucket or any other type of data source.</p>
    pub fn uri(mut self, input: impl Into<std::string::String>) -> Self {
        self.uri = Some(input.into());
        self
    }
    /// <p>The URI of the S3 bucket or any other type of data source.</p>
    pub fn set_uri(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.uri = input;
        self
    }
    /// Consumes the builder and constructs a [`GetIntegrationInput`](crate::operation::get_integration::GetIntegrationInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::get_integration::GetIntegrationInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(crate::operation::get_integration::GetIntegrationInput {
            domain_name: self.domain_name,
            uri: self.uri,
        })
    }
}
