// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct PutProfileObjectInput {
    /// <p>The name of the profile object type.</p>
    #[doc(hidden)]
    pub object_type_name: std::option::Option<std::string::String>,
    /// <p>A string that is serialized from a JSON object.</p>
    #[doc(hidden)]
    pub object: std::option::Option<std::string::String>,
    /// <p>The unique name of the domain.</p>
    #[doc(hidden)]
    pub domain_name: std::option::Option<std::string::String>,
}
impl PutProfileObjectInput {
    /// <p>The name of the profile object type.</p>
    pub fn object_type_name(&self) -> std::option::Option<&str> {
        self.object_type_name.as_deref()
    }
    /// <p>A string that is serialized from a JSON object.</p>
    pub fn object(&self) -> std::option::Option<&str> {
        self.object.as_deref()
    }
    /// <p>The unique name of the domain.</p>
    pub fn domain_name(&self) -> std::option::Option<&str> {
        self.domain_name.as_deref()
    }
}
impl PutProfileObjectInput {
    /// Creates a new builder-style object to manufacture [`PutProfileObjectInput`](crate::operation::put_profile_object::PutProfileObjectInput).
    pub fn builder() -> crate::operation::put_profile_object::builders::PutProfileObjectInputBuilder
    {
        crate::operation::put_profile_object::builders::PutProfileObjectInputBuilder::default()
    }
}

/// A builder for [`PutProfileObjectInput`](crate::operation::put_profile_object::PutProfileObjectInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct PutProfileObjectInputBuilder {
    pub(crate) object_type_name: std::option::Option<std::string::String>,
    pub(crate) object: std::option::Option<std::string::String>,
    pub(crate) domain_name: std::option::Option<std::string::String>,
}
impl PutProfileObjectInputBuilder {
    /// <p>The name of the profile object type.</p>
    pub fn object_type_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.object_type_name = Some(input.into());
        self
    }
    /// <p>The name of the profile object type.</p>
    pub fn set_object_type_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.object_type_name = input;
        self
    }
    /// <p>A string that is serialized from a JSON object.</p>
    pub fn object(mut self, input: impl Into<std::string::String>) -> Self {
        self.object = Some(input.into());
        self
    }
    /// <p>A string that is serialized from a JSON object.</p>
    pub fn set_object(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.object = input;
        self
    }
    /// <p>The unique name of the domain.</p>
    pub fn domain_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.domain_name = Some(input.into());
        self
    }
    /// <p>The unique name of the domain.</p>
    pub fn set_domain_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.domain_name = input;
        self
    }
    /// Consumes the builder and constructs a [`PutProfileObjectInput`](crate::operation::put_profile_object::PutProfileObjectInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::put_profile_object::PutProfileObjectInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::put_profile_object::PutProfileObjectInput {
                object_type_name: self.object_type_name,
                object: self.object,
                domain_name: self.domain_name,
            },
        )
    }
}
