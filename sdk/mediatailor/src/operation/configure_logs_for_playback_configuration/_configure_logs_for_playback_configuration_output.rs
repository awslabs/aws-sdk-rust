// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ConfigureLogsForPlaybackConfigurationOutput {
    /// <p>The percentage of session logs that MediaTailor sends to your Cloudwatch Logs account.</p>
    #[doc(hidden)]
    pub percent_enabled: i32,
    /// <p>The name of the playback configuration.</p>
    #[doc(hidden)]
    pub playback_configuration_name: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl ConfigureLogsForPlaybackConfigurationOutput {
    /// <p>The percentage of session logs that MediaTailor sends to your Cloudwatch Logs account.</p>
    pub fn percent_enabled(&self) -> i32 {
        self.percent_enabled
    }
    /// <p>The name of the playback configuration.</p>
    pub fn playback_configuration_name(&self) -> std::option::Option<&str> {
        self.playback_configuration_name.as_deref()
    }
}
impl aws_http::request_id::RequestId for ConfigureLogsForPlaybackConfigurationOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl ConfigureLogsForPlaybackConfigurationOutput {
    /// Creates a new builder-style object to manufacture [`ConfigureLogsForPlaybackConfigurationOutput`](crate::operation::configure_logs_for_playback_configuration::ConfigureLogsForPlaybackConfigurationOutput).
    pub fn builder() -> crate::operation::configure_logs_for_playback_configuration::builders::ConfigureLogsForPlaybackConfigurationOutputBuilder{
        crate::operation::configure_logs_for_playback_configuration::builders::ConfigureLogsForPlaybackConfigurationOutputBuilder::default()
    }
}

/// A builder for [`ConfigureLogsForPlaybackConfigurationOutput`](crate::operation::configure_logs_for_playback_configuration::ConfigureLogsForPlaybackConfigurationOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ConfigureLogsForPlaybackConfigurationOutputBuilder {
    pub(crate) percent_enabled: std::option::Option<i32>,
    pub(crate) playback_configuration_name: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl ConfigureLogsForPlaybackConfigurationOutputBuilder {
    /// <p>The percentage of session logs that MediaTailor sends to your Cloudwatch Logs account.</p>
    pub fn percent_enabled(mut self, input: i32) -> Self {
        self.percent_enabled = Some(input);
        self
    }
    /// <p>The percentage of session logs that MediaTailor sends to your Cloudwatch Logs account.</p>
    pub fn set_percent_enabled(mut self, input: std::option::Option<i32>) -> Self {
        self.percent_enabled = input;
        self
    }
    /// <p>The name of the playback configuration.</p>
    pub fn playback_configuration_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.playback_configuration_name = Some(input.into());
        self
    }
    /// <p>The name of the playback configuration.</p>
    pub fn set_playback_configuration_name(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.playback_configuration_name = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`ConfigureLogsForPlaybackConfigurationOutput`](crate::operation::configure_logs_for_playback_configuration::ConfigureLogsForPlaybackConfigurationOutput).
    pub fn build(self) -> crate::operation::configure_logs_for_playback_configuration::ConfigureLogsForPlaybackConfigurationOutput{
        crate::operation::configure_logs_for_playback_configuration::ConfigureLogsForPlaybackConfigurationOutput {
            percent_enabled: self.percent_enabled
                .unwrap_or_default()
            ,
            playback_configuration_name: self.playback_configuration_name
            ,
            _request_id: self._request_id,
        }
    }
}
