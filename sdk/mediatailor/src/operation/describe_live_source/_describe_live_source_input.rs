// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DescribeLiveSourceInput {
    /// <p>The name of the live source.</p>
    #[doc(hidden)]
    pub live_source_name: std::option::Option<std::string::String>,
    /// <p>The name of the source location associated with this Live Source.</p>
    #[doc(hidden)]
    pub source_location_name: std::option::Option<std::string::String>,
}
impl DescribeLiveSourceInput {
    /// <p>The name of the live source.</p>
    pub fn live_source_name(&self) -> std::option::Option<&str> {
        self.live_source_name.as_deref()
    }
    /// <p>The name of the source location associated with this Live Source.</p>
    pub fn source_location_name(&self) -> std::option::Option<&str> {
        self.source_location_name.as_deref()
    }
}
impl DescribeLiveSourceInput {
    /// Creates a new builder-style object to manufacture [`DescribeLiveSourceInput`](crate::operation::describe_live_source::DescribeLiveSourceInput).
    pub fn builder(
    ) -> crate::operation::describe_live_source::builders::DescribeLiveSourceInputBuilder {
        crate::operation::describe_live_source::builders::DescribeLiveSourceInputBuilder::default()
    }
}

/// A builder for [`DescribeLiveSourceInput`](crate::operation::describe_live_source::DescribeLiveSourceInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DescribeLiveSourceInputBuilder {
    pub(crate) live_source_name: std::option::Option<std::string::String>,
    pub(crate) source_location_name: std::option::Option<std::string::String>,
}
impl DescribeLiveSourceInputBuilder {
    /// <p>The name of the live source.</p>
    pub fn live_source_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.live_source_name = Some(input.into());
        self
    }
    /// <p>The name of the live source.</p>
    pub fn set_live_source_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.live_source_name = input;
        self
    }
    /// <p>The name of the source location associated with this Live Source.</p>
    pub fn source_location_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.source_location_name = Some(input.into());
        self
    }
    /// <p>The name of the source location associated with this Live Source.</p>
    pub fn set_source_location_name(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.source_location_name = input;
        self
    }
    /// Consumes the builder and constructs a [`DescribeLiveSourceInput`](crate::operation::describe_live_source::DescribeLiveSourceInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::describe_live_source::DescribeLiveSourceInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::describe_live_source::DescribeLiveSourceInput {
                live_source_name: self.live_source_name,
                source_location_name: self.source_location_name,
            },
        )
    }
}
