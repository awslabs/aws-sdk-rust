// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The configuration for HLS content.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct HlsConfiguration {
    /// <p>The URL that is used to initiate a playback session for devices that support Apple HLS. The session uses server-side reporting.</p>
    #[doc(hidden)]
    pub manifest_endpoint_prefix: std::option::Option<std::string::String>,
}
impl HlsConfiguration {
    /// <p>The URL that is used to initiate a playback session for devices that support Apple HLS. The session uses server-side reporting.</p>
    pub fn manifest_endpoint_prefix(&self) -> std::option::Option<&str> {
        self.manifest_endpoint_prefix.as_deref()
    }
}
impl HlsConfiguration {
    /// Creates a new builder-style object to manufacture [`HlsConfiguration`](crate::types::HlsConfiguration).
    pub fn builder() -> crate::types::builders::HlsConfigurationBuilder {
        crate::types::builders::HlsConfigurationBuilder::default()
    }
}

/// A builder for [`HlsConfiguration`](crate::types::HlsConfiguration).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct HlsConfigurationBuilder {
    pub(crate) manifest_endpoint_prefix: std::option::Option<std::string::String>,
}
impl HlsConfigurationBuilder {
    /// <p>The URL that is used to initiate a playback session for devices that support Apple HLS. The session uses server-side reporting.</p>
    pub fn manifest_endpoint_prefix(mut self, input: impl Into<std::string::String>) -> Self {
        self.manifest_endpoint_prefix = Some(input.into());
        self
    }
    /// <p>The URL that is used to initiate a playback session for devices that support Apple HLS. The session uses server-side reporting.</p>
    pub fn set_manifest_endpoint_prefix(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.manifest_endpoint_prefix = input;
        self
    }
    /// Consumes the builder and constructs a [`HlsConfiguration`](crate::types::HlsConfiguration).
    pub fn build(self) -> crate::types::HlsConfiguration {
        crate::types::HlsConfiguration {
            manifest_endpoint_prefix: self.manifest_endpoint_prefix,
        }
    }
}
