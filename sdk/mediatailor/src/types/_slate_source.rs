// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Slate VOD source configuration.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct SlateSource {
    /// <p>The name of the source location where the slate VOD source is stored.</p>
    #[doc(hidden)]
    pub source_location_name: std::option::Option<std::string::String>,
    /// <p>The slate VOD source name. The VOD source must already exist in a source location before it can be used for slate.</p>
    #[doc(hidden)]
    pub vod_source_name: std::option::Option<std::string::String>,
}
impl SlateSource {
    /// <p>The name of the source location where the slate VOD source is stored.</p>
    pub fn source_location_name(&self) -> std::option::Option<&str> {
        self.source_location_name.as_deref()
    }
    /// <p>The slate VOD source name. The VOD source must already exist in a source location before it can be used for slate.</p>
    pub fn vod_source_name(&self) -> std::option::Option<&str> {
        self.vod_source_name.as_deref()
    }
}
impl SlateSource {
    /// Creates a new builder-style object to manufacture [`SlateSource`](crate::types::SlateSource).
    pub fn builder() -> crate::types::builders::SlateSourceBuilder {
        crate::types::builders::SlateSourceBuilder::default()
    }
}

/// A builder for [`SlateSource`](crate::types::SlateSource).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct SlateSourceBuilder {
    pub(crate) source_location_name: std::option::Option<std::string::String>,
    pub(crate) vod_source_name: std::option::Option<std::string::String>,
}
impl SlateSourceBuilder {
    /// <p>The name of the source location where the slate VOD source is stored.</p>
    pub fn source_location_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.source_location_name = Some(input.into());
        self
    }
    /// <p>The name of the source location where the slate VOD source is stored.</p>
    pub fn set_source_location_name(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.source_location_name = input;
        self
    }
    /// <p>The slate VOD source name. The VOD source must already exist in a source location before it can be used for slate.</p>
    pub fn vod_source_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.vod_source_name = Some(input.into());
        self
    }
    /// <p>The slate VOD source name. The VOD source must already exist in a source location before it can be used for slate.</p>
    pub fn set_vod_source_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.vod_source_name = input;
        self
    }
    /// Consumes the builder and constructs a [`SlateSource`](crate::types::SlateSource).
    pub fn build(self) -> crate::types::SlateSource {
        crate::types::SlateSource {
            source_location_name: self.source_location_name,
            vod_source_name: self.vod_source_name,
        }
    }
}
