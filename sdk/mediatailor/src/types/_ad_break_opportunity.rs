// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A location at which a zero-duration ad marker was detected in a VOD source manifest.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AdBreakOpportunity {
    /// <p>The offset in milliseconds from the start of the VOD source at which an ad marker was detected.</p>
    pub offset_millis: i64,
}
impl AdBreakOpportunity {
    /// <p>The offset in milliseconds from the start of the VOD source at which an ad marker was detected.</p>
    pub fn offset_millis(&self) -> i64 {
        self.offset_millis
    }
}
impl AdBreakOpportunity {
    /// Creates a new builder-style object to manufacture [`AdBreakOpportunity`](crate::types::AdBreakOpportunity).
    pub fn builder() -> crate::types::builders::AdBreakOpportunityBuilder {
        crate::types::builders::AdBreakOpportunityBuilder::default()
    }
}

/// A builder for [`AdBreakOpportunity`](crate::types::AdBreakOpportunity).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct AdBreakOpportunityBuilder {
    pub(crate) offset_millis: ::std::option::Option<i64>,
}
impl AdBreakOpportunityBuilder {
    /// <p>The offset in milliseconds from the start of the VOD source at which an ad marker was detected.</p>
    /// This field is required.
    pub fn offset_millis(mut self, input: i64) -> Self {
        self.offset_millis = ::std::option::Option::Some(input);
        self
    }
    /// <p>The offset in milliseconds from the start of the VOD source at which an ad marker was detected.</p>
    pub fn set_offset_millis(mut self, input: ::std::option::Option<i64>) -> Self {
        self.offset_millis = input;
        self
    }
    /// <p>The offset in milliseconds from the start of the VOD source at which an ad marker was detected.</p>
    pub fn get_offset_millis(&self) -> &::std::option::Option<i64> {
        &self.offset_millis
    }
    /// Consumes the builder and constructs a [`AdBreakOpportunity`](crate::types::AdBreakOpportunity).
    pub fn build(self) -> crate::types::AdBreakOpportunity {
        crate::types::AdBreakOpportunity {
            offset_millis: self.offset_millis.unwrap_or_default(),
        }
    }
}
