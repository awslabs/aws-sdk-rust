// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Alert configuration parameters.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct Alert {
    /// <p>The code for the alert. For example, <code>NOT_PROCESSED</code>.</p>
    #[doc(hidden)]
    pub alert_code: std::option::Option<std::string::String>,
    /// <p>If an alert is generated for a resource, an explanation of the reason for the alert.</p>
    #[doc(hidden)]
    pub alert_message: std::option::Option<std::string::String>,
    /// <p>The timestamp when the alert was last modified.</p>
    #[doc(hidden)]
    pub last_modified_time: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>The Amazon Resource Names (ARNs) related to this alert.</p>
    #[doc(hidden)]
    pub related_resource_arns: std::option::Option<std::vec::Vec<std::string::String>>,
    /// <p>The Amazon Resource Name (ARN) of the resource.</p>
    #[doc(hidden)]
    pub resource_arn: std::option::Option<std::string::String>,
}
impl Alert {
    /// <p>The code for the alert. For example, <code>NOT_PROCESSED</code>.</p>
    pub fn alert_code(&self) -> std::option::Option<&str> {
        self.alert_code.as_deref()
    }
    /// <p>If an alert is generated for a resource, an explanation of the reason for the alert.</p>
    pub fn alert_message(&self) -> std::option::Option<&str> {
        self.alert_message.as_deref()
    }
    /// <p>The timestamp when the alert was last modified.</p>
    pub fn last_modified_time(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.last_modified_time.as_ref()
    }
    /// <p>The Amazon Resource Names (ARNs) related to this alert.</p>
    pub fn related_resource_arns(&self) -> std::option::Option<&[std::string::String]> {
        self.related_resource_arns.as_deref()
    }
    /// <p>The Amazon Resource Name (ARN) of the resource.</p>
    pub fn resource_arn(&self) -> std::option::Option<&str> {
        self.resource_arn.as_deref()
    }
}
impl Alert {
    /// Creates a new builder-style object to manufacture [`Alert`](crate::types::Alert).
    pub fn builder() -> crate::types::builders::AlertBuilder {
        crate::types::builders::AlertBuilder::default()
    }
}

/// A builder for [`Alert`](crate::types::Alert).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AlertBuilder {
    pub(crate) alert_code: std::option::Option<std::string::String>,
    pub(crate) alert_message: std::option::Option<std::string::String>,
    pub(crate) last_modified_time: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) related_resource_arns: std::option::Option<std::vec::Vec<std::string::String>>,
    pub(crate) resource_arn: std::option::Option<std::string::String>,
}
impl AlertBuilder {
    /// <p>The code for the alert. For example, <code>NOT_PROCESSED</code>.</p>
    pub fn alert_code(mut self, input: impl Into<std::string::String>) -> Self {
        self.alert_code = Some(input.into());
        self
    }
    /// <p>The code for the alert. For example, <code>NOT_PROCESSED</code>.</p>
    pub fn set_alert_code(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.alert_code = input;
        self
    }
    /// <p>If an alert is generated for a resource, an explanation of the reason for the alert.</p>
    pub fn alert_message(mut self, input: impl Into<std::string::String>) -> Self {
        self.alert_message = Some(input.into());
        self
    }
    /// <p>If an alert is generated for a resource, an explanation of the reason for the alert.</p>
    pub fn set_alert_message(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.alert_message = input;
        self
    }
    /// <p>The timestamp when the alert was last modified.</p>
    pub fn last_modified_time(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.last_modified_time = Some(input);
        self
    }
    /// <p>The timestamp when the alert was last modified.</p>
    pub fn set_last_modified_time(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.last_modified_time = input;
        self
    }
    /// Appends an item to `related_resource_arns`.
    ///
    /// To override the contents of this collection use [`set_related_resource_arns`](Self::set_related_resource_arns).
    ///
    /// <p>The Amazon Resource Names (ARNs) related to this alert.</p>
    pub fn related_resource_arns(mut self, input: impl Into<std::string::String>) -> Self {
        let mut v = self.related_resource_arns.unwrap_or_default();
        v.push(input.into());
        self.related_resource_arns = Some(v);
        self
    }
    /// <p>The Amazon Resource Names (ARNs) related to this alert.</p>
    pub fn set_related_resource_arns(
        mut self,
        input: std::option::Option<std::vec::Vec<std::string::String>>,
    ) -> Self {
        self.related_resource_arns = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the resource.</p>
    pub fn resource_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.resource_arn = Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the resource.</p>
    pub fn set_resource_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.resource_arn = input;
        self
    }
    /// Consumes the builder and constructs a [`Alert`](crate::types::Alert).
    pub fn build(self) -> crate::types::Alert {
        crate::types::Alert {
            alert_code: self.alert_code,
            alert_message: self.alert_message,
            last_modified_time: self.last_modified_time,
            related_resource_arns: self.related_resource_arns,
            resource_arn: self.resource_arn,
        }
    }
}
