// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The HTTP configuration for the source location.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct HttpConfiguration {
    /// <p>The base URL for the source location host server. This string must include the protocol, such as <b>https://</b>.</p>
    pub base_url: ::std::string::String,
}
impl HttpConfiguration {
    /// <p>The base URL for the source location host server. This string must include the protocol, such as <b>https://</b>.</p>
    pub fn base_url(&self) -> &str {
        use std::ops::Deref;
        self.base_url.deref()
    }
}
impl HttpConfiguration {
    /// Creates a new builder-style object to manufacture [`HttpConfiguration`](crate::types::HttpConfiguration).
    pub fn builder() -> crate::types::builders::HttpConfigurationBuilder {
        crate::types::builders::HttpConfigurationBuilder::default()
    }
}

/// A builder for [`HttpConfiguration`](crate::types::HttpConfiguration).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct HttpConfigurationBuilder {
    pub(crate) base_url: ::std::option::Option<::std::string::String>,
}
impl HttpConfigurationBuilder {
    /// <p>The base URL for the source location host server. This string must include the protocol, such as <b>https://</b>.</p>
    /// This field is required.
    pub fn base_url(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.base_url = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The base URL for the source location host server. This string must include the protocol, such as <b>https://</b>.</p>
    pub fn set_base_url(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.base_url = input;
        self
    }
    /// <p>The base URL for the source location host server. This string must include the protocol, such as <b>https://</b>.</p>
    pub fn get_base_url(&self) -> &::std::option::Option<::std::string::String> {
        &self.base_url
    }
    /// Consumes the builder and constructs a [`HttpConfiguration`](crate::types::HttpConfiguration).
    /// This method will fail if any of the following fields are not set:
    /// - [`base_url`](crate::types::builders::HttpConfigurationBuilder::base_url)
    pub fn build(self) -> ::std::result::Result<crate::types::HttpConfiguration, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::HttpConfiguration {
            base_url: self.base_url.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "base_url",
                    "base_url was not specified but it is required when building HttpConfiguration",
                )
            })?,
        })
    }
}
