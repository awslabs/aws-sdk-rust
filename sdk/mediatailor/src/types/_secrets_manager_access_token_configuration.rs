// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>AWS Secrets Manager access token configuration parameters. For information about Secrets Manager access token authentication, see <a href="https://docs.aws.amazon.com/mediatailor/latest/ug/channel-assembly-access-configuration-access-token.html">Working with AWS Secrets Manager access token authentication</a>.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct SecretsManagerAccessTokenConfiguration {
    /// <p>The name of the HTTP header used to supply the access token in requests to the source location.</p>
    #[doc(hidden)]
    pub header_name: std::option::Option<std::string::String>,
    /// <p>The Amazon Resource Name (ARN) of the AWS Secrets Manager secret that contains the access token.</p>
    #[doc(hidden)]
    pub secret_arn: std::option::Option<std::string::String>,
    /// <p>The AWS Secrets Manager <a href="https://docs.aws.amazon.com/secretsmanager/latest/apireference/API_CreateSecret.html#SecretsManager-CreateSecret-request-SecretString.html">SecretString</a> key associated with the access token. MediaTailor uses the key to look up SecretString key and value pair containing the access token.</p>
    #[doc(hidden)]
    pub secret_string_key: std::option::Option<std::string::String>,
}
impl SecretsManagerAccessTokenConfiguration {
    /// <p>The name of the HTTP header used to supply the access token in requests to the source location.</p>
    pub fn header_name(&self) -> std::option::Option<&str> {
        self.header_name.as_deref()
    }
    /// <p>The Amazon Resource Name (ARN) of the AWS Secrets Manager secret that contains the access token.</p>
    pub fn secret_arn(&self) -> std::option::Option<&str> {
        self.secret_arn.as_deref()
    }
    /// <p>The AWS Secrets Manager <a href="https://docs.aws.amazon.com/secretsmanager/latest/apireference/API_CreateSecret.html#SecretsManager-CreateSecret-request-SecretString.html">SecretString</a> key associated with the access token. MediaTailor uses the key to look up SecretString key and value pair containing the access token.</p>
    pub fn secret_string_key(&self) -> std::option::Option<&str> {
        self.secret_string_key.as_deref()
    }
}
impl SecretsManagerAccessTokenConfiguration {
    /// Creates a new builder-style object to manufacture [`SecretsManagerAccessTokenConfiguration`](crate::types::SecretsManagerAccessTokenConfiguration).
    pub fn builder() -> crate::types::builders::SecretsManagerAccessTokenConfigurationBuilder {
        crate::types::builders::SecretsManagerAccessTokenConfigurationBuilder::default()
    }
}

/// A builder for [`SecretsManagerAccessTokenConfiguration`](crate::types::SecretsManagerAccessTokenConfiguration).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct SecretsManagerAccessTokenConfigurationBuilder {
    pub(crate) header_name: std::option::Option<std::string::String>,
    pub(crate) secret_arn: std::option::Option<std::string::String>,
    pub(crate) secret_string_key: std::option::Option<std::string::String>,
}
impl SecretsManagerAccessTokenConfigurationBuilder {
    /// <p>The name of the HTTP header used to supply the access token in requests to the source location.</p>
    pub fn header_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.header_name = Some(input.into());
        self
    }
    /// <p>The name of the HTTP header used to supply the access token in requests to the source location.</p>
    pub fn set_header_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.header_name = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the AWS Secrets Manager secret that contains the access token.</p>
    pub fn secret_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.secret_arn = Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the AWS Secrets Manager secret that contains the access token.</p>
    pub fn set_secret_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.secret_arn = input;
        self
    }
    /// <p>The AWS Secrets Manager <a href="https://docs.aws.amazon.com/secretsmanager/latest/apireference/API_CreateSecret.html#SecretsManager-CreateSecret-request-SecretString.html">SecretString</a> key associated with the access token. MediaTailor uses the key to look up SecretString key and value pair containing the access token.</p>
    pub fn secret_string_key(mut self, input: impl Into<std::string::String>) -> Self {
        self.secret_string_key = Some(input.into());
        self
    }
    /// <p>The AWS Secrets Manager <a href="https://docs.aws.amazon.com/secretsmanager/latest/apireference/API_CreateSecret.html#SecretsManager-CreateSecret-request-SecretString.html">SecretString</a> key associated with the access token. MediaTailor uses the key to look up SecretString key and value pair containing the access token.</p>
    pub fn set_secret_string_key(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.secret_string_key = input;
        self
    }
    /// Consumes the builder and constructs a [`SecretsManagerAccessTokenConfiguration`](crate::types::SecretsManagerAccessTokenConfiguration).
    pub fn build(self) -> crate::types::SecretsManagerAccessTokenConfiguration {
        crate::types::SecretsManagerAccessTokenConfiguration {
            header_name: self.header_name,
            secret_arn: self.secret_arn,
            secret_string_key: self.secret_string_key,
        }
    }
}
