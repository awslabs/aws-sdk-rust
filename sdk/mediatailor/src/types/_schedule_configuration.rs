// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Schedule configuration parameters. A channel must be stopped before changes can be made to the schedule.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ScheduleConfiguration {
    /// <p>Program transition configurations.</p>
    #[doc(hidden)]
    pub transition: std::option::Option<crate::types::Transition>,
}
impl ScheduleConfiguration {
    /// <p>Program transition configurations.</p>
    pub fn transition(&self) -> std::option::Option<&crate::types::Transition> {
        self.transition.as_ref()
    }
}
impl ScheduleConfiguration {
    /// Creates a new builder-style object to manufacture [`ScheduleConfiguration`](crate::types::ScheduleConfiguration).
    pub fn builder() -> crate::types::builders::ScheduleConfigurationBuilder {
        crate::types::builders::ScheduleConfigurationBuilder::default()
    }
}

/// A builder for [`ScheduleConfiguration`](crate::types::ScheduleConfiguration).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ScheduleConfigurationBuilder {
    pub(crate) transition: std::option::Option<crate::types::Transition>,
}
impl ScheduleConfigurationBuilder {
    /// <p>Program transition configurations.</p>
    pub fn transition(mut self, input: crate::types::Transition) -> Self {
        self.transition = Some(input);
        self
    }
    /// <p>Program transition configurations.</p>
    pub fn set_transition(mut self, input: std::option::Option<crate::types::Transition>) -> Self {
        self.transition = input;
        self
    }
    /// Consumes the builder and constructs a [`ScheduleConfiguration`](crate::types::ScheduleConfiguration).
    pub fn build(self) -> crate::types::ScheduleConfiguration {
        crate::types::ScheduleConfiguration {
            transition: self.transition,
        }
    }
}
