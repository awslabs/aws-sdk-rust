// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListPlaybackConfigurations`](crate::client::fluent_builders::ListPlaybackConfigurations) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListPlaybackConfigurations::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListPlaybackConfigurations::max_results) / [`set_max_results(i32)`](crate::client::fluent_builders::ListPlaybackConfigurations::set_max_results): <p>The maximum number of playback configurations that you want MediaTailor to return in response to the current request. If there are more than <code>MaxResults</code> playback configurations, use the value of <code>NextToken</code> in the response to get the next page of results.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListPlaybackConfigurations::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListPlaybackConfigurations::set_next_token): <p>Pagination token returned by the list request when results exceed the maximum allowed. Use the token to fetch the next page of results.</p>
    /// - On success, responds with [`ListPlaybackConfigurationsOutput`](crate::output::ListPlaybackConfigurationsOutput) with field(s):
    ///   - [`items(Option<Vec<PlaybackConfiguration>>)`](crate::output::ListPlaybackConfigurationsOutput::items): <p>Array of playback configurations. This might be all the available configurations or a subset, depending on the settings that you provide and the total number of configurations stored.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListPlaybackConfigurationsOutput::next_token): <p>Pagination token returned by the GET list request when results exceed the maximum allowed. Use the token to fetch the next page of results.</p>
    /// - On failure, responds with [`SdkError<ListPlaybackConfigurationsError>`](crate::error::ListPlaybackConfigurationsError)
    pub fn list_playback_configurations(
        &self,
    ) -> crate::client::fluent_builders::ListPlaybackConfigurations {
        crate::client::fluent_builders::ListPlaybackConfigurations::new(self.handle.clone())
    }
}
