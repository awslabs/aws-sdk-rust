// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_update_trail_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::update_trail::UpdateTrailInput,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.name {
        object.key("Name").string(var_1.as_str());
    }
    if let Some(var_2) = &input.s3_bucket_name {
        object.key("S3BucketName").string(var_2.as_str());
    }
    if let Some(var_3) = &input.s3_key_prefix {
        object.key("S3KeyPrefix").string(var_3.as_str());
    }
    if let Some(var_4) = &input.sns_topic_name {
        object.key("SnsTopicName").string(var_4.as_str());
    }
    if let Some(var_5) = &input.include_global_service_events {
        object.key("IncludeGlobalServiceEvents").boolean(*var_5);
    }
    if let Some(var_6) = &input.is_multi_region_trail {
        object.key("IsMultiRegionTrail").boolean(*var_6);
    }
    if let Some(var_7) = &input.enable_log_file_validation {
        object.key("EnableLogFileValidation").boolean(*var_7);
    }
    if let Some(var_8) = &input.cloud_watch_logs_log_group_arn {
        object.key("CloudWatchLogsLogGroupArn").string(var_8.as_str());
    }
    if let Some(var_9) = &input.cloud_watch_logs_role_arn {
        object.key("CloudWatchLogsRoleArn").string(var_9.as_str());
    }
    if let Some(var_10) = &input.kms_key_id {
        object.key("KmsKeyId").string(var_10.as_str());
    }
    if let Some(var_11) = &input.is_organization_trail {
        object.key("IsOrganizationTrail").boolean(*var_11);
    }
    Ok(())
}
