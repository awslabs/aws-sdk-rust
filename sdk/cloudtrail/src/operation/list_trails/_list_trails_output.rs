// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ListTrailsOutput {
    /// <p>Returns the name, ARN, and home region of trails in the current account.</p>
    #[doc(hidden)]
    pub trails: std::option::Option<std::vec::Vec<crate::types::TrailInfo>>,
    /// <p>The token to use to get the next page of results after a previous API call. If the token does not appear, there are no more results to return. The token must be passed in with the same parameters as the previous call. For example, if the original call specified an AttributeKey of 'Username' with a value of 'root', the call with NextToken should include those same parameters.</p>
    #[doc(hidden)]
    pub next_token: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl ListTrailsOutput {
    /// <p>Returns the name, ARN, and home region of trails in the current account.</p>
    pub fn trails(&self) -> std::option::Option<&[crate::types::TrailInfo]> {
        self.trails.as_deref()
    }
    /// <p>The token to use to get the next page of results after a previous API call. If the token does not appear, there are no more results to return. The token must be passed in with the same parameters as the previous call. For example, if the original call specified an AttributeKey of 'Username' with a value of 'root', the call with NextToken should include those same parameters.</p>
    pub fn next_token(&self) -> std::option::Option<&str> {
        self.next_token.as_deref()
    }
}
impl aws_http::request_id::RequestId for ListTrailsOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl ListTrailsOutput {
    /// Creates a new builder-style object to manufacture [`ListTrailsOutput`](crate::operation::list_trails::ListTrailsOutput).
    pub fn builder() -> crate::operation::list_trails::builders::ListTrailsOutputBuilder {
        crate::operation::list_trails::builders::ListTrailsOutputBuilder::default()
    }
}

/// A builder for [`ListTrailsOutput`](crate::operation::list_trails::ListTrailsOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ListTrailsOutputBuilder {
    pub(crate) trails: std::option::Option<std::vec::Vec<crate::types::TrailInfo>>,
    pub(crate) next_token: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl ListTrailsOutputBuilder {
    /// Appends an item to `trails`.
    ///
    /// To override the contents of this collection use [`set_trails`](Self::set_trails).
    ///
    /// <p>Returns the name, ARN, and home region of trails in the current account.</p>
    pub fn trails(mut self, input: crate::types::TrailInfo) -> Self {
        let mut v = self.trails.unwrap_or_default();
        v.push(input);
        self.trails = Some(v);
        self
    }
    /// <p>Returns the name, ARN, and home region of trails in the current account.</p>
    pub fn set_trails(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::TrailInfo>>,
    ) -> Self {
        self.trails = input;
        self
    }
    /// <p>The token to use to get the next page of results after a previous API call. If the token does not appear, there are no more results to return. The token must be passed in with the same parameters as the previous call. For example, if the original call specified an AttributeKey of 'Username' with a value of 'root', the call with NextToken should include those same parameters.</p>
    pub fn next_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.next_token = Some(input.into());
        self
    }
    /// <p>The token to use to get the next page of results after a previous API call. If the token does not appear, there are no more results to return. The token must be passed in with the same parameters as the previous call. For example, if the original call specified an AttributeKey of 'Username' with a value of 'root', the call with NextToken should include those same parameters.</p>
    pub fn set_next_token(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`ListTrailsOutput`](crate::operation::list_trails::ListTrailsOutput).
    pub fn build(self) -> crate::operation::list_trails::ListTrailsOutput {
        crate::operation::list_trails::ListTrailsOutput {
            trails: self.trails,
            next_token: self.next_token,
            _request_id: self._request_id,
        }
    }
}
