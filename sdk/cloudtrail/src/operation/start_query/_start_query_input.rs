// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct StartQueryInput {
    /// <p>The SQL code of your query.</p>
    #[doc(hidden)]
    pub query_statement: std::option::Option<std::string::String>,
    /// <p> The URI for the S3 bucket where CloudTrail delivers the query results. </p>
    #[doc(hidden)]
    pub delivery_s3_uri: std::option::Option<std::string::String>,
}
impl StartQueryInput {
    /// <p>The SQL code of your query.</p>
    pub fn query_statement(&self) -> std::option::Option<&str> {
        self.query_statement.as_deref()
    }
    /// <p> The URI for the S3 bucket where CloudTrail delivers the query results. </p>
    pub fn delivery_s3_uri(&self) -> std::option::Option<&str> {
        self.delivery_s3_uri.as_deref()
    }
}
impl StartQueryInput {
    /// Creates a new builder-style object to manufacture [`StartQueryInput`](crate::operation::start_query::StartQueryInput).
    pub fn builder() -> crate::operation::start_query::builders::StartQueryInputBuilder {
        crate::operation::start_query::builders::StartQueryInputBuilder::default()
    }
}

/// A builder for [`StartQueryInput`](crate::operation::start_query::StartQueryInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct StartQueryInputBuilder {
    pub(crate) query_statement: std::option::Option<std::string::String>,
    pub(crate) delivery_s3_uri: std::option::Option<std::string::String>,
}
impl StartQueryInputBuilder {
    /// <p>The SQL code of your query.</p>
    pub fn query_statement(mut self, input: impl Into<std::string::String>) -> Self {
        self.query_statement = Some(input.into());
        self
    }
    /// <p>The SQL code of your query.</p>
    pub fn set_query_statement(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.query_statement = input;
        self
    }
    /// <p> The URI for the S3 bucket where CloudTrail delivers the query results. </p>
    pub fn delivery_s3_uri(mut self, input: impl Into<std::string::String>) -> Self {
        self.delivery_s3_uri = Some(input.into());
        self
    }
    /// <p> The URI for the S3 bucket where CloudTrail delivers the query results. </p>
    pub fn set_delivery_s3_uri(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.delivery_s3_uri = input;
        self
    }
    /// Consumes the builder and constructs a [`StartQueryInput`](crate::operation::start_query::StartQueryInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::start_query::StartQueryInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(crate::operation::start_query::StartQueryInput {
            query_statement: self.query_statement,
            delivery_s3_uri: self.delivery_s3_uri,
        })
    }
}
