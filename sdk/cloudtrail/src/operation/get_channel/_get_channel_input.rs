// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GetChannelInput {
    /// <p>The ARN or <code>UUID</code> of a channel.</p>
    pub channel: ::std::option::Option<::std::string::String>,
}
impl GetChannelInput {
    /// <p>The ARN or <code>UUID</code> of a channel.</p>
    pub fn channel(&self) -> ::std::option::Option<&str> {
        self.channel.as_deref()
    }
}
impl GetChannelInput {
    /// Creates a new builder-style object to manufacture [`GetChannelInput`](crate::operation::get_channel::GetChannelInput).
    pub fn builder() -> crate::operation::get_channel::builders::GetChannelInputBuilder {
        crate::operation::get_channel::builders::GetChannelInputBuilder::default()
    }
}

/// A builder for [`GetChannelInput`](crate::operation::get_channel::GetChannelInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct GetChannelInputBuilder {
    pub(crate) channel: ::std::option::Option<::std::string::String>,
}
impl GetChannelInputBuilder {
    /// <p>The ARN or <code>UUID</code> of a channel.</p>
    /// This field is required.
    pub fn channel(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.channel = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ARN or <code>UUID</code> of a channel.</p>
    pub fn set_channel(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.channel = input;
        self
    }
    /// <p>The ARN or <code>UUID</code> of a channel.</p>
    pub fn get_channel(&self) -> &::std::option::Option<::std::string::String> {
        &self.channel
    }
    /// Consumes the builder and constructs a [`GetChannelInput`](crate::operation::get_channel::GetChannelInput).
    pub fn build(self) -> ::std::result::Result<crate::operation::get_channel::GetChannelInput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::operation::get_channel::GetChannelInput { channel: self.channel })
    }
}
