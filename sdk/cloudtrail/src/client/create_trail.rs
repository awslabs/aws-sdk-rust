// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateTrail`](crate::client::fluent_builders::CreateTrail) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(impl Into<String>)`](crate::client::fluent_builders::CreateTrail::name) / [`set_name(Option<String>)`](crate::client::fluent_builders::CreateTrail::set_name): <p>Specifies the name of the trail. The name must meet the following requirements:</p>  <ul>   <li> <p>Contain only ASCII letters (a-z, A-Z), numbers (0-9), periods (.), underscores (_), or dashes (-)</p> </li>   <li> <p>Start with a letter or number, and end with a letter or number</p> </li>   <li> <p>Be between 3 and 128 characters</p> </li>   <li> <p>Have no adjacent periods, underscores or dashes. Names like <code>my-_namespace</code> and <code>my--namespace</code> are not valid.</p> </li>   <li> <p>Not be in IP address format (for example, 192.168.5.4)</p> </li>  </ul>
    ///   - [`s3_bucket_name(impl Into<String>)`](crate::client::fluent_builders::CreateTrail::s3_bucket_name) / [`set_s3_bucket_name(Option<String>)`](crate::client::fluent_builders::CreateTrail::set_s3_bucket_name): <p>Specifies the name of the Amazon S3 bucket designated for publishing log files. See <a href="https://docs.aws.amazon.com/awscloudtrail/latest/userguide/create_trail_naming_policy.html">Amazon S3 Bucket Naming Requirements</a>.</p>
    ///   - [`s3_key_prefix(impl Into<String>)`](crate::client::fluent_builders::CreateTrail::s3_key_prefix) / [`set_s3_key_prefix(Option<String>)`](crate::client::fluent_builders::CreateTrail::set_s3_key_prefix): <p>Specifies the Amazon S3 key prefix that comes after the name of the bucket you have designated for log file delivery. For more information, see <a href="https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudtrail-find-log-files.html">Finding Your CloudTrail Log Files</a>. The maximum length is 200 characters.</p>
    ///   - [`sns_topic_name(impl Into<String>)`](crate::client::fluent_builders::CreateTrail::sns_topic_name) / [`set_sns_topic_name(Option<String>)`](crate::client::fluent_builders::CreateTrail::set_sns_topic_name): <p>Specifies the name of the Amazon SNS topic defined for notification of log file delivery. The maximum length is 256 characters.</p>
    ///   - [`include_global_service_events(bool)`](crate::client::fluent_builders::CreateTrail::include_global_service_events) / [`set_include_global_service_events(Option<bool>)`](crate::client::fluent_builders::CreateTrail::set_include_global_service_events): <p>Specifies whether the trail is publishing events from global services such as IAM to the log files.</p>
    ///   - [`is_multi_region_trail(bool)`](crate::client::fluent_builders::CreateTrail::is_multi_region_trail) / [`set_is_multi_region_trail(Option<bool>)`](crate::client::fluent_builders::CreateTrail::set_is_multi_region_trail): <p>Specifies whether the trail is created in the current region or in all regions. The default is false, which creates a trail only in the region where you are signed in. As a best practice, consider creating trails that log events in all regions.</p>
    ///   - [`enable_log_file_validation(bool)`](crate::client::fluent_builders::CreateTrail::enable_log_file_validation) / [`set_enable_log_file_validation(Option<bool>)`](crate::client::fluent_builders::CreateTrail::set_enable_log_file_validation): <p>Specifies whether log file integrity validation is enabled. The default is false.</p> <note>   <p>When you disable log file integrity validation, the chain of digest files is broken after one hour. CloudTrail does not create digest files for log files that were delivered during a period in which log file integrity validation was disabled. For example, if you enable log file integrity validation at noon on January 1, disable it at noon on January 2, and re-enable it at noon on January 10, digest files will not be created for the log files delivered from noon on January 2 to noon on January 10. The same applies whenever you stop CloudTrail logging or delete a trail.</p>  </note>
    ///   - [`cloud_watch_logs_log_group_arn(impl Into<String>)`](crate::client::fluent_builders::CreateTrail::cloud_watch_logs_log_group_arn) / [`set_cloud_watch_logs_log_group_arn(Option<String>)`](crate::client::fluent_builders::CreateTrail::set_cloud_watch_logs_log_group_arn): <p>Specifies a log group name using an Amazon Resource Name (ARN), a unique identifier that represents the log group to which CloudTrail logs will be delivered. Not required unless you specify <code>CloudWatchLogsRoleArn</code>.</p>
    ///   - [`cloud_watch_logs_role_arn(impl Into<String>)`](crate::client::fluent_builders::CreateTrail::cloud_watch_logs_role_arn) / [`set_cloud_watch_logs_role_arn(Option<String>)`](crate::client::fluent_builders::CreateTrail::set_cloud_watch_logs_role_arn): <p>Specifies the role for the CloudWatch Logs endpoint to assume to write to a user's log group.</p>
    ///   - [`kms_key_id(impl Into<String>)`](crate::client::fluent_builders::CreateTrail::kms_key_id) / [`set_kms_key_id(Option<String>)`](crate::client::fluent_builders::CreateTrail::set_kms_key_id): <p>Specifies the KMS key ID to use to encrypt the logs delivered by CloudTrail. The value can be an alias name prefixed by <code>alias/</code>, a fully specified ARN to an alias, a fully specified ARN to a key, or a globally unique identifier.</p>  <p>CloudTrail also supports KMS multi-Region keys. For more information about multi-Region keys, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/multi-region-keys-overview.html">Using multi-Region keys</a> in the <i>Key Management Service Developer Guide</i>.</p>  <p>Examples:</p>  <ul>   <li> <p> <code>alias/MyAliasName</code> </p> </li>   <li> <p> <code>arn:aws:kms:us-east-2:123456789012:alias/MyAliasName</code> </p> </li>   <li> <p> <code>arn:aws:kms:us-east-2:123456789012:key/12345678-1234-1234-1234-123456789012</code> </p> </li>   <li> <p> <code>12345678-1234-1234-1234-123456789012</code> </p> </li>  </ul>
    ///   - [`is_organization_trail(bool)`](crate::client::fluent_builders::CreateTrail::is_organization_trail) / [`set_is_organization_trail(Option<bool>)`](crate::client::fluent_builders::CreateTrail::set_is_organization_trail): <p>Specifies whether the trail is created for all accounts in an organization in Organizations, or only for the current Amazon Web Services account. The default is false, and cannot be true unless the call is made on behalf of an Amazon Web Services account that is the management account for an organization in Organizations.</p>
    ///   - [`tags_list(Vec<Tag>)`](crate::client::fluent_builders::CreateTrail::tags_list) / [`set_tags_list(Option<Vec<Tag>>)`](crate::client::fluent_builders::CreateTrail::set_tags_list): <p>A list of tags.</p>
    /// - On success, responds with [`CreateTrailOutput`](crate::output::CreateTrailOutput) with field(s):
    ///   - [`name(Option<String>)`](crate::output::CreateTrailOutput::name): <p>Specifies the name of the trail.</p>
    ///   - [`s3_bucket_name(Option<String>)`](crate::output::CreateTrailOutput::s3_bucket_name): <p>Specifies the name of the Amazon S3 bucket designated for publishing log files.</p>
    ///   - [`s3_key_prefix(Option<String>)`](crate::output::CreateTrailOutput::s3_key_prefix): <p>Specifies the Amazon S3 key prefix that comes after the name of the bucket you have designated for log file delivery. For more information, see <a href="https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudtrail-find-log-files.html">Finding Your CloudTrail Log Files</a>.</p>
    ///   - [`sns_topic_name(Option<String>)`](crate::output::CreateTrailOutput::sns_topic_name): <p>This field is no longer in use. Use SnsTopicARN.</p>
    ///   - [`sns_topic_arn(Option<String>)`](crate::output::CreateTrailOutput::sns_topic_arn): <p>Specifies the ARN of the Amazon SNS topic that CloudTrail uses to send notifications when log files are delivered. The format of a topic ARN is:</p>  <p> <code>arn:aws:sns:us-east-2:123456789012:MyTopic</code> </p>
    ///   - [`include_global_service_events(Option<bool>)`](crate::output::CreateTrailOutput::include_global_service_events): <p>Specifies whether the trail is publishing events from global services such as IAM to the log files.</p>
    ///   - [`is_multi_region_trail(Option<bool>)`](crate::output::CreateTrailOutput::is_multi_region_trail): <p>Specifies whether the trail exists in one region or in all regions.</p>
    ///   - [`trail_arn(Option<String>)`](crate::output::CreateTrailOutput::trail_arn): <p>Specifies the ARN of the trail that was created. The format of a trail ARN is:</p>  <p> <code>arn:aws:cloudtrail:us-east-2:123456789012:trail/MyTrail</code> </p>
    ///   - [`log_file_validation_enabled(Option<bool>)`](crate::output::CreateTrailOutput::log_file_validation_enabled): <p>Specifies whether log file integrity validation is enabled.</p>
    ///   - [`cloud_watch_logs_log_group_arn(Option<String>)`](crate::output::CreateTrailOutput::cloud_watch_logs_log_group_arn): <p>Specifies the Amazon Resource Name (ARN) of the log group to which CloudTrail logs will be delivered.</p>
    ///   - [`cloud_watch_logs_role_arn(Option<String>)`](crate::output::CreateTrailOutput::cloud_watch_logs_role_arn): <p>Specifies the role for the CloudWatch Logs endpoint to assume to write to a user's log group.</p>
    ///   - [`kms_key_id(Option<String>)`](crate::output::CreateTrailOutput::kms_key_id): <p>Specifies the KMS key ID that encrypts the events delivered by CloudTrail. The value is a fully specified ARN to a KMS key in the following format.</p>  <p> <code>arn:aws:kms:us-east-2:123456789012:key/12345678-1234-1234-1234-123456789012</code> </p>
    ///   - [`is_organization_trail(Option<bool>)`](crate::output::CreateTrailOutput::is_organization_trail): <p>Specifies whether the trail is an organization trail.</p>
    /// - On failure, responds with [`SdkError<CreateTrailError>`](crate::error::CreateTrailError)
    pub fn create_trail(&self) -> crate::client::fluent_builders::CreateTrail {
        crate::client::fluent_builders::CreateTrail::new(self.handle.clone())
    }
}
