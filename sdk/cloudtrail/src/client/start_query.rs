// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`StartQuery`](crate::operation::start_query::builders::StartQueryFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`query_statement(impl Into<String>)`](crate::operation::start_query::builders::StartQueryFluentBuilder::query_statement) / [`set_query_statement(Option<String>)`](crate::operation::start_query::builders::StartQueryFluentBuilder::set_query_statement):<br>required: **false**<br><p>The SQL code of your query.</p><br>
    ///   - [`delivery_s3_uri(impl Into<String>)`](crate::operation::start_query::builders::StartQueryFluentBuilder::delivery_s3_uri) / [`set_delivery_s3_uri(Option<String>)`](crate::operation::start_query::builders::StartQueryFluentBuilder::set_delivery_s3_uri):<br>required: **false**<br><p> The URI for the S3 bucket where CloudTrail delivers the query results. </p><br>
    ///   - [`query_alias(impl Into<String>)`](crate::operation::start_query::builders::StartQueryFluentBuilder::query_alias) / [`set_query_alias(Option<String>)`](crate::operation::start_query::builders::StartQueryFluentBuilder::set_query_alias):<br>required: **false**<br><p> The alias that identifies a query template. </p><br>
    ///   - [`query_parameters(impl Into<String>)`](crate::operation::start_query::builders::StartQueryFluentBuilder::query_parameters) / [`set_query_parameters(Option<Vec::<String>>)`](crate::operation::start_query::builders::StartQueryFluentBuilder::set_query_parameters):<br>required: **false**<br><p> The query parameters for the specified <code>QueryAlias</code>. </p><br>
    /// - On success, responds with [`StartQueryOutput`](crate::operation::start_query::StartQueryOutput) with field(s):
    ///   - [`query_id(Option<String>)`](crate::operation::start_query::StartQueryOutput::query_id): <p>The ID of the started query.</p>
    /// - On failure, responds with [`SdkError<StartQueryError>`](crate::operation::start_query::StartQueryError)
    pub fn start_query(&self) -> crate::operation::start_query::builders::StartQueryFluentBuilder {
        crate::operation::start_query::builders::StartQueryFluentBuilder::new(self.handle.clone())
    }
}
