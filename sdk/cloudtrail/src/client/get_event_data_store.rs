// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetEventDataStore`](crate::operation::get_event_data_store::builders::GetEventDataStoreFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`event_data_store(impl Into<String>)`](crate::operation::get_event_data_store::builders::GetEventDataStoreFluentBuilder::event_data_store) / [`set_event_data_store(Option<String>)`](crate::operation::get_event_data_store::builders::GetEventDataStoreFluentBuilder::set_event_data_store): <p>The ARN (or ID suffix of the ARN) of the event data store about which you want information.</p>
    /// - On success, responds with [`GetEventDataStoreOutput`](crate::operation::get_event_data_store::GetEventDataStoreOutput) with field(s):
    ///   - [`event_data_store_arn(Option<String>)`](crate::operation::get_event_data_store::GetEventDataStoreOutput::event_data_store_arn): <p>The event data store Amazon Resource Number (ARN).</p>
    ///   - [`name(Option<String>)`](crate::operation::get_event_data_store::GetEventDataStoreOutput::name): <p>The name of the event data store.</p>
    ///   - [`status(Option<EventDataStoreStatus>)`](crate::operation::get_event_data_store::GetEventDataStoreOutput::status): <p>The status of an event data store. Values can be <code>ENABLED</code> and <code>PENDING_DELETION</code>.</p>
    ///   - [`advanced_event_selectors(Option<Vec<AdvancedEventSelector>>)`](crate::operation::get_event_data_store::GetEventDataStoreOutput::advanced_event_selectors): <p>The advanced event selectors used to select events for the data store.</p>
    ///   - [`multi_region_enabled(Option<bool>)`](crate::operation::get_event_data_store::GetEventDataStoreOutput::multi_region_enabled): <p>Indicates whether the event data store includes events from all regions, or only from the region in which it was created.</p>
    ///   - [`organization_enabled(Option<bool>)`](crate::operation::get_event_data_store::GetEventDataStoreOutput::organization_enabled): <p>Indicates whether an event data store is collecting logged events for an organization in Organizations.</p>
    ///   - [`retention_period(Option<i32>)`](crate::operation::get_event_data_store::GetEventDataStoreOutput::retention_period): <p>The retention period of the event data store, in days.</p>
    ///   - [`termination_protection_enabled(Option<bool>)`](crate::operation::get_event_data_store::GetEventDataStoreOutput::termination_protection_enabled): <p>Indicates that termination protection is enabled.</p>
    ///   - [`created_timestamp(Option<DateTime>)`](crate::operation::get_event_data_store::GetEventDataStoreOutput::created_timestamp): <p>The timestamp of the event data store's creation.</p>
    ///   - [`updated_timestamp(Option<DateTime>)`](crate::operation::get_event_data_store::GetEventDataStoreOutput::updated_timestamp): <p>Shows the time that an event data store was updated, if applicable. <code>UpdatedTimestamp</code> is always either the same or newer than the time shown in <code>CreatedTimestamp</code>.</p>
    ///   - [`kms_key_id(Option<String>)`](crate::operation::get_event_data_store::GetEventDataStoreOutput::kms_key_id): <p>Specifies the KMS key ID that encrypts the events delivered by CloudTrail. The value is a fully specified ARN to a KMS key in the following format.</p>  <p> <code>arn:aws:kms:us-east-2:123456789012:key/12345678-1234-1234-1234-123456789012</code> </p>
    /// - On failure, responds with [`SdkError<GetEventDataStoreError>`](crate::operation::get_event_data_store::GetEventDataStoreError)
    pub fn get_event_data_store(
        &self,
    ) -> crate::operation::get_event_data_store::builders::GetEventDataStoreFluentBuilder {
        crate::operation::get_event_data_store::builders::GetEventDataStoreFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
