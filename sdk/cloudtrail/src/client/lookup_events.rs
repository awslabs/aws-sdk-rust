// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`LookupEvents`](crate::operation::lookup_events::builders::LookupEventsFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::lookup_events::builders::LookupEventsFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`lookup_attributes(LookupAttribute)`](crate::operation::lookup_events::builders::LookupEventsFluentBuilder::lookup_attributes) / [`set_lookup_attributes(Option<Vec::<LookupAttribute>>)`](crate::operation::lookup_events::builders::LookupEventsFluentBuilder::set_lookup_attributes):<br>required: **false**<br><p>Contains a list of lookup attributes. Currently the list can contain only one item.</p><br>
    ///   - [`start_time(DateTime)`](crate::operation::lookup_events::builders::LookupEventsFluentBuilder::start_time) / [`set_start_time(Option<DateTime>)`](crate::operation::lookup_events::builders::LookupEventsFluentBuilder::set_start_time):<br>required: **false**<br><p>Specifies that only events that occur after or at the specified time are returned. If the specified start time is after the specified end time, an error is returned.</p><br>
    ///   - [`end_time(DateTime)`](crate::operation::lookup_events::builders::LookupEventsFluentBuilder::end_time) / [`set_end_time(Option<DateTime>)`](crate::operation::lookup_events::builders::LookupEventsFluentBuilder::set_end_time):<br>required: **false**<br><p>Specifies that only events that occur before or at the specified time are returned. If the specified end time is before the specified start time, an error is returned.</p><br>
    ///   - [`event_category(EventCategory)`](crate::operation::lookup_events::builders::LookupEventsFluentBuilder::event_category) / [`set_event_category(Option<EventCategory>)`](crate::operation::lookup_events::builders::LookupEventsFluentBuilder::set_event_category):<br>required: **false**<br><p>Specifies the event category. If you do not specify an event category, events of the category are not returned in the response. For example, if you do not specify <code>insight</code> as the value of <code>EventCategory</code>, no Insights events are returned.</p><br>
    ///   - [`max_results(i32)`](crate::operation::lookup_events::builders::LookupEventsFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::lookup_events::builders::LookupEventsFluentBuilder::set_max_results):<br>required: **false**<br><p>The number of events to return. Possible values are 1 through 50. The default is 50.</p><br>
    ///   - [`next_token(impl Into<String>)`](crate::operation::lookup_events::builders::LookupEventsFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::lookup_events::builders::LookupEventsFluentBuilder::set_next_token):<br>required: **false**<br><p>The token to use to get the next page of results after a previous API call. This token must be passed in with the same parameters that were specified in the original call. For example, if the original call specified an AttributeKey of 'Username' with a value of 'root', the call with NextToken should include those same parameters.</p><br>
    /// - On success, responds with [`LookupEventsOutput`](crate::operation::lookup_events::LookupEventsOutput) with field(s):
    ///   - [`events(Option<Vec::<Event>>)`](crate::operation::lookup_events::LookupEventsOutput::events): <p>A list of events returned based on the lookup attributes specified and the CloudTrail event. The events list is sorted by time. The most recent event is listed first.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::lookup_events::LookupEventsOutput::next_token): <p>The token to use to get the next page of results after a previous API call. If the token does not appear, there are no more results to return. The token must be passed in with the same parameters as the previous call. For example, if the original call specified an AttributeKey of 'Username' with a value of 'root', the call with NextToken should include those same parameters.</p>
    /// - On failure, responds with [`SdkError<LookupEventsError>`](crate::operation::lookup_events::LookupEventsError)
    pub fn lookup_events(&self) -> crate::operation::lookup_events::builders::LookupEventsFluentBuilder {
        crate::operation::lookup_events::builders::LookupEventsFluentBuilder::new(self.handle.clone())
    }
}
