// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetEventSelectors`](crate::client::fluent_builders::GetEventSelectors) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`trail_name(impl Into<String>)`](crate::client::fluent_builders::GetEventSelectors::trail_name) / [`set_trail_name(Option<String>)`](crate::client::fluent_builders::GetEventSelectors::set_trail_name): <p>Specifies the name of the trail or trail ARN. If you specify a trail name, the string must meet the following requirements:</p>  <ul>   <li> <p>Contain only ASCII letters (a-z, A-Z), numbers (0-9), periods (.), underscores (_), or dashes (-)</p> </li>   <li> <p>Start with a letter or number, and end with a letter or number</p> </li>   <li> <p>Be between 3 and 128 characters</p> </li>   <li> <p>Have no adjacent periods, underscores or dashes. Names like <code>my-_namespace</code> and <code>my--namespace</code> are not valid.</p> </li>   <li> <p>Not be in IP address format (for example, 192.168.5.4)</p> </li>  </ul>  <p>If you specify a trail ARN, it must be in the format:</p>  <p> <code>arn:aws:cloudtrail:us-east-2:123456789012:trail/MyTrail</code> </p>
    /// - On success, responds with [`GetEventSelectorsOutput`](crate::output::GetEventSelectorsOutput) with field(s):
    ///   - [`trail_arn(Option<String>)`](crate::output::GetEventSelectorsOutput::trail_arn): <p>The specified trail ARN that has the event selectors.</p>
    ///   - [`event_selectors(Option<Vec<EventSelector>>)`](crate::output::GetEventSelectorsOutput::event_selectors): <p>The event selectors that are configured for the trail.</p>
    ///   - [`advanced_event_selectors(Option<Vec<AdvancedEventSelector>>)`](crate::output::GetEventSelectorsOutput::advanced_event_selectors): <p> The advanced event selectors that are configured for the trail. </p>
    /// - On failure, responds with [`SdkError<GetEventSelectorsError>`](crate::error::GetEventSelectorsError)
    pub fn get_event_selectors(&self) -> crate::client::fluent_builders::GetEventSelectors {
        crate::client::fluent_builders::GetEventSelectors::new(self.handle.clone())
    }
}
