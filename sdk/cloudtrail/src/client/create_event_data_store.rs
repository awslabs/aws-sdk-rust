// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateEventDataStore`](crate::operation::create_event_data_store::builders::CreateEventDataStoreFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(impl Into<String>)`](crate::operation::create_event_data_store::builders::CreateEventDataStoreFluentBuilder::name) / [`set_name(Option<String>)`](crate::operation::create_event_data_store::builders::CreateEventDataStoreFluentBuilder::set_name): <p>The name of the event data store.</p>
    ///   - [`advanced_event_selectors(Vec<AdvancedEventSelector>)`](crate::operation::create_event_data_store::builders::CreateEventDataStoreFluentBuilder::advanced_event_selectors) / [`set_advanced_event_selectors(Option<Vec<AdvancedEventSelector>>)`](crate::operation::create_event_data_store::builders::CreateEventDataStoreFluentBuilder::set_advanced_event_selectors): <p>The advanced event selectors to use to select the events for the data store. For more information about how to use advanced event selectors, see <a href="https://docs.aws.amazon.com/awscloudtrail/latest/userguide/logging-data-events-with-cloudtrail.html#creating-data-event-selectors-advanced">Log events by using advanced event selectors</a> in the CloudTrail User Guide.</p>
    ///   - [`multi_region_enabled(bool)`](crate::operation::create_event_data_store::builders::CreateEventDataStoreFluentBuilder::multi_region_enabled) / [`set_multi_region_enabled(Option<bool>)`](crate::operation::create_event_data_store::builders::CreateEventDataStoreFluentBuilder::set_multi_region_enabled): <p>Specifies whether the event data store includes events from all regions, or only from the region in which the event data store is created.</p>
    ///   - [`organization_enabled(bool)`](crate::operation::create_event_data_store::builders::CreateEventDataStoreFluentBuilder::organization_enabled) / [`set_organization_enabled(Option<bool>)`](crate::operation::create_event_data_store::builders::CreateEventDataStoreFluentBuilder::set_organization_enabled): <p>Specifies whether an event data store collects events logged for an organization in Organizations.</p>
    ///   - [`retention_period(i32)`](crate::operation::create_event_data_store::builders::CreateEventDataStoreFluentBuilder::retention_period) / [`set_retention_period(Option<i32>)`](crate::operation::create_event_data_store::builders::CreateEventDataStoreFluentBuilder::set_retention_period): <p>The retention period of the event data store, in days. You can set a retention period of up to 2557 days, the equivalent of seven years.</p>
    ///   - [`termination_protection_enabled(bool)`](crate::operation::create_event_data_store::builders::CreateEventDataStoreFluentBuilder::termination_protection_enabled) / [`set_termination_protection_enabled(Option<bool>)`](crate::operation::create_event_data_store::builders::CreateEventDataStoreFluentBuilder::set_termination_protection_enabled): <p>Specifies whether termination protection is enabled for the event data store. If termination protection is enabled, you cannot delete the event data store until termination protection is disabled.</p>
    ///   - [`tags_list(Vec<Tag>)`](crate::operation::create_event_data_store::builders::CreateEventDataStoreFluentBuilder::tags_list) / [`set_tags_list(Option<Vec<Tag>>)`](crate::operation::create_event_data_store::builders::CreateEventDataStoreFluentBuilder::set_tags_list): <p>A list of tags.</p>
    ///   - [`kms_key_id(impl Into<String>)`](crate::operation::create_event_data_store::builders::CreateEventDataStoreFluentBuilder::kms_key_id) / [`set_kms_key_id(Option<String>)`](crate::operation::create_event_data_store::builders::CreateEventDataStoreFluentBuilder::set_kms_key_id): <p>Specifies the KMS key ID to use to encrypt the events delivered by CloudTrail. The value can be an alias name prefixed by <code>alias/</code>, a fully specified ARN to an alias, a fully specified ARN to a key, or a globally unique identifier.</p> <important>   <p>Disabling or deleting the KMS key, or removing CloudTrail permissions on the key, prevents CloudTrail from logging events to the event data store, and prevents users from querying the data in the event data store that was encrypted with the key. After you associate an event data store with a KMS key, the KMS key cannot be removed or changed. Before you disable or delete a KMS key that you are using with an event data store, delete or back up your event data store.</p>  </important>  <p>CloudTrail also supports KMS multi-Region keys. For more information about multi-Region keys, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/multi-region-keys-overview.html">Using multi-Region keys</a> in the <i>Key Management Service Developer Guide</i>.</p>  <p>Examples:</p>  <ul>   <li> <p> <code>alias/MyAliasName</code> </p> </li>   <li> <p> <code>arn:aws:kms:us-east-2:123456789012:alias/MyAliasName</code> </p> </li>   <li> <p> <code>arn:aws:kms:us-east-2:123456789012:key/12345678-1234-1234-1234-123456789012</code> </p> </li>   <li> <p> <code>12345678-1234-1234-1234-123456789012</code> </p> </li>  </ul>
    /// - On success, responds with [`CreateEventDataStoreOutput`](crate::operation::create_event_data_store::CreateEventDataStoreOutput) with field(s):
    ///   - [`event_data_store_arn(Option<String>)`](crate::operation::create_event_data_store::CreateEventDataStoreOutput::event_data_store_arn): <p>The ARN of the event data store.</p>
    ///   - [`name(Option<String>)`](crate::operation::create_event_data_store::CreateEventDataStoreOutput::name): <p>The name of the event data store.</p>
    ///   - [`status(Option<EventDataStoreStatus>)`](crate::operation::create_event_data_store::CreateEventDataStoreOutput::status): <p>The status of event data store creation.</p>
    ///   - [`advanced_event_selectors(Option<Vec<AdvancedEventSelector>>)`](crate::operation::create_event_data_store::CreateEventDataStoreOutput::advanced_event_selectors): <p>The advanced event selectors that were used to select the events for the data store.</p>
    ///   - [`multi_region_enabled(Option<bool>)`](crate::operation::create_event_data_store::CreateEventDataStoreOutput::multi_region_enabled): <p>Indicates whether the event data store collects events from all regions, or only from the region in which it was created.</p>
    ///   - [`organization_enabled(Option<bool>)`](crate::operation::create_event_data_store::CreateEventDataStoreOutput::organization_enabled): <p>Indicates whether an event data store is collecting logged events for an organization in Organizations.</p>
    ///   - [`retention_period(Option<i32>)`](crate::operation::create_event_data_store::CreateEventDataStoreOutput::retention_period): <p>The retention period of an event data store, in days.</p>
    ///   - [`termination_protection_enabled(Option<bool>)`](crate::operation::create_event_data_store::CreateEventDataStoreOutput::termination_protection_enabled): <p>Indicates whether termination protection is enabled for the event data store.</p>
    ///   - [`tags_list(Option<Vec<Tag>>)`](crate::operation::create_event_data_store::CreateEventDataStoreOutput::tags_list): <p>A list of tags.</p>
    ///   - [`created_timestamp(Option<DateTime>)`](crate::operation::create_event_data_store::CreateEventDataStoreOutput::created_timestamp): <p>The timestamp that shows when the event data store was created.</p>
    ///   - [`updated_timestamp(Option<DateTime>)`](crate::operation::create_event_data_store::CreateEventDataStoreOutput::updated_timestamp): <p>The timestamp that shows when an event data store was updated, if applicable. <code>UpdatedTimestamp</code> is always either the same or newer than the time shown in <code>CreatedTimestamp</code>.</p>
    ///   - [`kms_key_id(Option<String>)`](crate::operation::create_event_data_store::CreateEventDataStoreOutput::kms_key_id): <p>Specifies the KMS key ID that encrypts the events delivered by CloudTrail. The value is a fully specified ARN to a KMS key in the following format.</p>  <p> <code>arn:aws:kms:us-east-2:123456789012:key/12345678-1234-1234-1234-123456789012</code> </p>
    /// - On failure, responds with [`SdkError<CreateEventDataStoreError>`](crate::operation::create_event_data_store::CreateEventDataStoreError)
    pub fn create_event_data_store(
        &self,
    ) -> crate::operation::create_event_data_store::builders::CreateEventDataStoreFluentBuilder
    {
        crate::operation::create_event_data_store::builders::CreateEventDataStoreFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
