// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains information about a returned public key.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct PublicKey {
    /// <p>The DER encoded public key value in PKCS#1 format.</p>
    #[doc(hidden)]
    pub value: std::option::Option<aws_smithy_types::Blob>,
    /// <p>The starting time of validity of the public key.</p>
    #[doc(hidden)]
    pub validity_start_time: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>The ending time of validity of the public key.</p>
    #[doc(hidden)]
    pub validity_end_time: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>The fingerprint of the public key.</p>
    #[doc(hidden)]
    pub fingerprint: std::option::Option<std::string::String>,
}
impl PublicKey {
    /// <p>The DER encoded public key value in PKCS#1 format.</p>
    pub fn value(&self) -> std::option::Option<&aws_smithy_types::Blob> {
        self.value.as_ref()
    }
    /// <p>The starting time of validity of the public key.</p>
    pub fn validity_start_time(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.validity_start_time.as_ref()
    }
    /// <p>The ending time of validity of the public key.</p>
    pub fn validity_end_time(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.validity_end_time.as_ref()
    }
    /// <p>The fingerprint of the public key.</p>
    pub fn fingerprint(&self) -> std::option::Option<&str> {
        self.fingerprint.as_deref()
    }
}
impl PublicKey {
    /// Creates a new builder-style object to manufacture [`PublicKey`](crate::types::PublicKey).
    pub fn builder() -> crate::types::builders::PublicKeyBuilder {
        crate::types::builders::PublicKeyBuilder::default()
    }
}

/// A builder for [`PublicKey`](crate::types::PublicKey).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct PublicKeyBuilder {
    pub(crate) value: std::option::Option<aws_smithy_types::Blob>,
    pub(crate) validity_start_time: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) validity_end_time: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) fingerprint: std::option::Option<std::string::String>,
}
impl PublicKeyBuilder {
    /// <p>The DER encoded public key value in PKCS#1 format.</p>
    pub fn value(mut self, input: aws_smithy_types::Blob) -> Self {
        self.value = Some(input);
        self
    }
    /// <p>The DER encoded public key value in PKCS#1 format.</p>
    pub fn set_value(mut self, input: std::option::Option<aws_smithy_types::Blob>) -> Self {
        self.value = input;
        self
    }
    /// <p>The starting time of validity of the public key.</p>
    pub fn validity_start_time(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.validity_start_time = Some(input);
        self
    }
    /// <p>The starting time of validity of the public key.</p>
    pub fn set_validity_start_time(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.validity_start_time = input;
        self
    }
    /// <p>The ending time of validity of the public key.</p>
    pub fn validity_end_time(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.validity_end_time = Some(input);
        self
    }
    /// <p>The ending time of validity of the public key.</p>
    pub fn set_validity_end_time(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.validity_end_time = input;
        self
    }
    /// <p>The fingerprint of the public key.</p>
    pub fn fingerprint(mut self, input: impl Into<std::string::String>) -> Self {
        self.fingerprint = Some(input.into());
        self
    }
    /// <p>The fingerprint of the public key.</p>
    pub fn set_fingerprint(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.fingerprint = input;
        self
    }
    /// Consumes the builder and constructs a [`PublicKey`](crate::types::PublicKey).
    pub fn build(self) -> crate::types::PublicKey {
        crate::types::PublicKey {
            value: self.value,
            validity_start_time: self.validity_start_time,
            validity_end_time: self.validity_end_time,
            fingerprint: self.fingerprint,
        }
    }
}
