// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about a CloudTrail trail, including the trail's name, home region, and Amazon Resource Name (ARN).</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct TrailInfo {
    /// <p>The ARN of a trail.</p>
    #[doc(hidden)]
    pub trail_arn: std::option::Option<std::string::String>,
    /// <p>The name of a trail.</p>
    #[doc(hidden)]
    pub name: std::option::Option<std::string::String>,
    /// <p>The Amazon Web Services Region in which a trail was created.</p>
    #[doc(hidden)]
    pub home_region: std::option::Option<std::string::String>,
}
impl TrailInfo {
    /// <p>The ARN of a trail.</p>
    pub fn trail_arn(&self) -> std::option::Option<&str> {
        self.trail_arn.as_deref()
    }
    /// <p>The name of a trail.</p>
    pub fn name(&self) -> std::option::Option<&str> {
        self.name.as_deref()
    }
    /// <p>The Amazon Web Services Region in which a trail was created.</p>
    pub fn home_region(&self) -> std::option::Option<&str> {
        self.home_region.as_deref()
    }
}
impl TrailInfo {
    /// Creates a new builder-style object to manufacture [`TrailInfo`](crate::types::TrailInfo).
    pub fn builder() -> crate::types::builders::TrailInfoBuilder {
        crate::types::builders::TrailInfoBuilder::default()
    }
}

/// A builder for [`TrailInfo`](crate::types::TrailInfo).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct TrailInfoBuilder {
    pub(crate) trail_arn: std::option::Option<std::string::String>,
    pub(crate) name: std::option::Option<std::string::String>,
    pub(crate) home_region: std::option::Option<std::string::String>,
}
impl TrailInfoBuilder {
    /// <p>The ARN of a trail.</p>
    pub fn trail_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.trail_arn = Some(input.into());
        self
    }
    /// <p>The ARN of a trail.</p>
    pub fn set_trail_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.trail_arn = input;
        self
    }
    /// <p>The name of a trail.</p>
    pub fn name(mut self, input: impl Into<std::string::String>) -> Self {
        self.name = Some(input.into());
        self
    }
    /// <p>The name of a trail.</p>
    pub fn set_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>The Amazon Web Services Region in which a trail was created.</p>
    pub fn home_region(mut self, input: impl Into<std::string::String>) -> Self {
        self.home_region = Some(input.into());
        self
    }
    /// <p>The Amazon Web Services Region in which a trail was created.</p>
    pub fn set_home_region(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.home_region = input;
        self
    }
    /// Consumes the builder and constructs a [`TrailInfo`](crate::types::TrailInfo).
    pub fn build(self) -> crate::types::TrailInfo {
        crate::types::TrailInfo {
            trail_arn: self.trail_arn,
            name: self.name,
            home_region: self.home_region,
        }
    }
}
