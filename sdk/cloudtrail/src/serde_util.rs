// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) fn cancel_query_output_correct_errors(
    mut builder: crate::operation::cancel_query::builders::CancelQueryOutputBuilder,
) -> crate::operation::cancel_query::builders::CancelQueryOutputBuilder {
    if builder.query_id.is_none() {
        builder.query_id = Some(Default::default())
    }
    if builder.query_status.is_none() {
        builder.query_status = "no value was set".parse::<crate::types::QueryStatus>().ok()
    }
    builder
}

pub(crate) fn import_source_correct_errors(mut builder: crate::types::builders::ImportSourceBuilder) -> crate::types::builders::ImportSourceBuilder {
    if builder.s3.is_none() {
        builder.s3 = {
            let builder = crate::types::builders::S3ImportSourceBuilder::default();
            crate::serde_util::s3_import_source_correct_errors(builder).build().ok()
        }
    }
    builder
}

pub(crate) fn advanced_event_selector_correct_errors(
    mut builder: crate::types::builders::AdvancedEventSelectorBuilder,
) -> crate::types::builders::AdvancedEventSelectorBuilder {
    if builder.field_selectors.is_none() {
        builder.field_selectors = Some(Default::default())
    }
    builder
}

pub(crate) fn destination_correct_errors(mut builder: crate::types::builders::DestinationBuilder) -> crate::types::builders::DestinationBuilder {
    if builder.r#type.is_none() {
        builder.r#type = "no value was set".parse::<crate::types::DestinationType>().ok()
    }
    if builder.location.is_none() {
        builder.location = Some(Default::default())
    }
    builder
}

pub(crate) fn s3_import_source_correct_errors(
    mut builder: crate::types::builders::S3ImportSourceBuilder,
) -> crate::types::builders::S3ImportSourceBuilder {
    if builder.s3_location_uri.is_none() {
        builder.s3_location_uri = Some(Default::default())
    }
    if builder.s3_bucket_region.is_none() {
        builder.s3_bucket_region = Some(Default::default())
    }
    if builder.s3_bucket_access_role_arn.is_none() {
        builder.s3_bucket_access_role_arn = Some(Default::default())
    }
    builder
}

pub(crate) fn tag_correct_errors(mut builder: crate::types::builders::TagBuilder) -> crate::types::builders::TagBuilder {
    if builder.key.is_none() {
        builder.key = Some(Default::default())
    }
    builder
}

pub(crate) fn advanced_field_selector_correct_errors(
    mut builder: crate::types::builders::AdvancedFieldSelectorBuilder,
) -> crate::types::builders::AdvancedFieldSelectorBuilder {
    if builder.field.is_none() {
        builder.field = Some(Default::default())
    }
    builder
}
