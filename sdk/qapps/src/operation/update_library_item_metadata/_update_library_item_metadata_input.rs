// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct UpdateLibraryItemMetadataInput {
    /// <p>The unique identifier of the Amazon Q Business application environment instance.</p>
    pub instance_id: ::std::option::Option<::std::string::String>,
    /// <p>The unique identifier of the updated library item.</p>
    pub library_item_id: ::std::option::Option<::std::string::String>,
    /// <p>The verification status of the library item</p>
    pub is_verified: ::std::option::Option<bool>,
}
impl UpdateLibraryItemMetadataInput {
    /// <p>The unique identifier of the Amazon Q Business application environment instance.</p>
    pub fn instance_id(&self) -> ::std::option::Option<&str> {
        self.instance_id.as_deref()
    }
    /// <p>The unique identifier of the updated library item.</p>
    pub fn library_item_id(&self) -> ::std::option::Option<&str> {
        self.library_item_id.as_deref()
    }
    /// <p>The verification status of the library item</p>
    pub fn is_verified(&self) -> ::std::option::Option<bool> {
        self.is_verified
    }
}
impl UpdateLibraryItemMetadataInput {
    /// Creates a new builder-style object to manufacture [`UpdateLibraryItemMetadataInput`](crate::operation::update_library_item_metadata::UpdateLibraryItemMetadataInput).
    pub fn builder() -> crate::operation::update_library_item_metadata::builders::UpdateLibraryItemMetadataInputBuilder {
        crate::operation::update_library_item_metadata::builders::UpdateLibraryItemMetadataInputBuilder::default()
    }
}

/// A builder for [`UpdateLibraryItemMetadataInput`](crate::operation::update_library_item_metadata::UpdateLibraryItemMetadataInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct UpdateLibraryItemMetadataInputBuilder {
    pub(crate) instance_id: ::std::option::Option<::std::string::String>,
    pub(crate) library_item_id: ::std::option::Option<::std::string::String>,
    pub(crate) is_verified: ::std::option::Option<bool>,
}
impl UpdateLibraryItemMetadataInputBuilder {
    /// <p>The unique identifier of the Amazon Q Business application environment instance.</p>
    /// This field is required.
    pub fn instance_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.instance_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The unique identifier of the Amazon Q Business application environment instance.</p>
    pub fn set_instance_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.instance_id = input;
        self
    }
    /// <p>The unique identifier of the Amazon Q Business application environment instance.</p>
    pub fn get_instance_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.instance_id
    }
    /// <p>The unique identifier of the updated library item.</p>
    /// This field is required.
    pub fn library_item_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.library_item_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The unique identifier of the updated library item.</p>
    pub fn set_library_item_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.library_item_id = input;
        self
    }
    /// <p>The unique identifier of the updated library item.</p>
    pub fn get_library_item_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.library_item_id
    }
    /// <p>The verification status of the library item</p>
    pub fn is_verified(mut self, input: bool) -> Self {
        self.is_verified = ::std::option::Option::Some(input);
        self
    }
    /// <p>The verification status of the library item</p>
    pub fn set_is_verified(mut self, input: ::std::option::Option<bool>) -> Self {
        self.is_verified = input;
        self
    }
    /// <p>The verification status of the library item</p>
    pub fn get_is_verified(&self) -> &::std::option::Option<bool> {
        &self.is_verified
    }
    /// Consumes the builder and constructs a [`UpdateLibraryItemMetadataInput`](crate::operation::update_library_item_metadata::UpdateLibraryItemMetadataInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::update_library_item_metadata::UpdateLibraryItemMetadataInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::update_library_item_metadata::UpdateLibraryItemMetadataInput {
            instance_id: self.instance_id,
            library_item_id: self.library_item_id,
            is_verified: self.is_verified,
        })
    }
}
