// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Reserved.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct QueryCompileErrorLocation {
    /// <p>Reserved.</p>
    #[doc(hidden)]
    pub start_char_offset: std::option::Option<i32>,
    /// <p>Reserved.</p>
    #[doc(hidden)]
    pub end_char_offset: std::option::Option<i32>,
}
impl QueryCompileErrorLocation {
    /// <p>Reserved.</p>
    pub fn start_char_offset(&self) -> std::option::Option<i32> {
        self.start_char_offset
    }
    /// <p>Reserved.</p>
    pub fn end_char_offset(&self) -> std::option::Option<i32> {
        self.end_char_offset
    }
}
impl QueryCompileErrorLocation {
    /// Creates a new builder-style object to manufacture [`QueryCompileErrorLocation`](crate::types::QueryCompileErrorLocation).
    pub fn builder() -> crate::types::builders::QueryCompileErrorLocationBuilder {
        crate::types::builders::QueryCompileErrorLocationBuilder::default()
    }
}

/// A builder for [`QueryCompileErrorLocation`](crate::types::QueryCompileErrorLocation).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct QueryCompileErrorLocationBuilder {
    pub(crate) start_char_offset: std::option::Option<i32>,
    pub(crate) end_char_offset: std::option::Option<i32>,
}
impl QueryCompileErrorLocationBuilder {
    /// <p>Reserved.</p>
    pub fn start_char_offset(mut self, input: i32) -> Self {
        self.start_char_offset = Some(input);
        self
    }
    /// <p>Reserved.</p>
    pub fn set_start_char_offset(mut self, input: std::option::Option<i32>) -> Self {
        self.start_char_offset = input;
        self
    }
    /// <p>Reserved.</p>
    pub fn end_char_offset(mut self, input: i32) -> Self {
        self.end_char_offset = Some(input);
        self
    }
    /// <p>Reserved.</p>
    pub fn set_end_char_offset(mut self, input: std::option::Option<i32>) -> Self {
        self.end_char_offset = input;
        self
    }
    /// Consumes the builder and constructs a [`QueryCompileErrorLocation`](crate::types::QueryCompileErrorLocation).
    pub fn build(self) -> crate::types::QueryCompileErrorLocation {
        crate::types::QueryCompileErrorLocation {
            start_char_offset: self.start_char_offset,
            end_char_offset: self.end_char_offset,
        }
    }
}
