// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A structure containing the extracted fields from a log event. These fields are extracted based on the log format and can be used for structured querying and analysis.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct FieldsData {
    /// <p>The actual log data content returned in the streaming response. This contains the fields and values of the log event in a structured format that can be parsed and processed by the client.</p>
    pub data: ::std::option::Option<::aws_smithy_types::Blob>,
}
impl FieldsData {
    /// <p>The actual log data content returned in the streaming response. This contains the fields and values of the log event in a structured format that can be parsed and processed by the client.</p>
    pub fn data(&self) -> ::std::option::Option<&::aws_smithy_types::Blob> {
        self.data.as_ref()
    }
}
impl FieldsData {
    /// Creates a new builder-style object to manufacture [`FieldsData`](crate::types::FieldsData).
    pub fn builder() -> crate::types::builders::FieldsDataBuilder {
        crate::types::builders::FieldsDataBuilder::default()
    }
}

/// A builder for [`FieldsData`](crate::types::FieldsData).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct FieldsDataBuilder {
    pub(crate) data: ::std::option::Option<::aws_smithy_types::Blob>,
}
impl FieldsDataBuilder {
    /// <p>The actual log data content returned in the streaming response. This contains the fields and values of the log event in a structured format that can be parsed and processed by the client.</p>
    pub fn data(mut self, input: ::aws_smithy_types::Blob) -> Self {
        self.data = ::std::option::Option::Some(input);
        self
    }
    /// <p>The actual log data content returned in the streaming response. This contains the fields and values of the log event in a structured format that can be parsed and processed by the client.</p>
    pub fn set_data(mut self, input: ::std::option::Option<::aws_smithy_types::Blob>) -> Self {
        self.data = input;
        self
    }
    /// <p>The actual log data content returned in the streaming response. This contains the fields and values of the log event in a structured format that can be parsed and processed by the client.</p>
    pub fn get_data(&self) -> &::std::option::Option<::aws_smithy_types::Blob> {
        &self.data
    }
    /// Consumes the builder and constructs a [`FieldsData`](crate::types::FieldsData).
    pub fn build(self) -> crate::types::FieldsData {
        crate::types::FieldsData { data: self.data }
    }
}
