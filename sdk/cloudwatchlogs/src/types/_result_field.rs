// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains one field from one log event returned by a CloudWatch Logs Insights query, along with the value of that field.</p>
/// <p>For more information about the fields that are generated by CloudWatch logs, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/CWL_AnalyzeLogData-discoverable-fields.html">Supported Logs and Discovered Fields</a>.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ResultField {
    /// <p>The log event field.</p>
    #[doc(hidden)]
    pub field: std::option::Option<std::string::String>,
    /// <p>The value of this field.</p>
    #[doc(hidden)]
    pub value: std::option::Option<std::string::String>,
}
impl ResultField {
    /// <p>The log event field.</p>
    pub fn field(&self) -> std::option::Option<&str> {
        self.field.as_deref()
    }
    /// <p>The value of this field.</p>
    pub fn value(&self) -> std::option::Option<&str> {
        self.value.as_deref()
    }
}
impl ResultField {
    /// Creates a new builder-style object to manufacture [`ResultField`](crate::types::ResultField).
    pub fn builder() -> crate::types::builders::ResultFieldBuilder {
        crate::types::builders::ResultFieldBuilder::default()
    }
}

/// A builder for [`ResultField`](crate::types::ResultField).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ResultFieldBuilder {
    pub(crate) field: std::option::Option<std::string::String>,
    pub(crate) value: std::option::Option<std::string::String>,
}
impl ResultFieldBuilder {
    /// <p>The log event field.</p>
    pub fn field(mut self, input: impl Into<std::string::String>) -> Self {
        self.field = Some(input.into());
        self
    }
    /// <p>The log event field.</p>
    pub fn set_field(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.field = input;
        self
    }
    /// <p>The value of this field.</p>
    pub fn value(mut self, input: impl Into<std::string::String>) -> Self {
        self.value = Some(input.into());
        self
    }
    /// <p>The value of this field.</p>
    pub fn set_value(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.value = input;
        self
    }
    /// Consumes the builder and constructs a [`ResultField`](crate::types::ResultField).
    pub fn build(self) -> crate::types::ResultField {
        crate::types::ResultField {
            field: self.field,
            value: self.value,
        }
    }
}
