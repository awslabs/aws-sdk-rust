// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) mod shape_associate_kms_key;

pub fn parse_http_error_metadata(
    response: &http::Response<bytes::Bytes>,
) -> Result<
    aws_smithy_types::error::metadata::Builder,
    aws_smithy_json::deserialize::error::DeserializeError,
> {
    crate::json_errors::parse_error_metadata(response.body(), response.headers())
}

pub(crate) mod shape_cancel_export_task;

pub(crate) mod shape_create_export_task;

pub(crate) mod shape_create_log_group;

pub(crate) mod shape_create_log_stream;

pub(crate) mod shape_delete_data_protection_policy;

pub(crate) mod shape_delete_destination;

pub(crate) mod shape_delete_log_group;

pub(crate) mod shape_delete_log_stream;

pub(crate) mod shape_delete_metric_filter;

pub(crate) mod shape_delete_query_definition;

pub(crate) mod shape_delete_resource_policy;

pub(crate) mod shape_delete_retention_policy;

pub(crate) mod shape_delete_subscription_filter;

pub(crate) mod shape_describe_destinations;

pub(crate) mod shape_describe_export_tasks;

pub(crate) mod shape_describe_log_groups;

pub(crate) mod shape_describe_log_streams;

pub(crate) mod shape_describe_metric_filters;

pub(crate) mod shape_describe_queries;

pub(crate) mod shape_describe_query_definitions;

pub(crate) mod shape_describe_resource_policies;

pub(crate) mod shape_describe_subscription_filters;

pub(crate) mod shape_disassociate_kms_key;

pub(crate) mod shape_filter_log_events;

pub(crate) mod shape_get_data_protection_policy;

pub(crate) mod shape_get_log_events;

pub(crate) mod shape_get_log_group_fields;

pub(crate) mod shape_get_log_record;

pub(crate) mod shape_get_query_results;

pub(crate) mod shape_list_tags_for_resource;

pub(crate) mod shape_list_tags_log_group;

pub(crate) mod shape_put_data_protection_policy;

pub(crate) mod shape_put_destination;

pub(crate) mod shape_put_destination_policy;

pub(crate) mod shape_put_log_events;

pub(crate) mod shape_put_metric_filter;

pub(crate) mod shape_put_query_definition;

pub(crate) mod shape_put_resource_policy;

pub(crate) mod shape_put_retention_policy;

pub(crate) mod shape_put_subscription_filter;

pub(crate) mod shape_start_query;

pub(crate) mod shape_stop_query;

pub(crate) mod shape_tag_log_group;

pub(crate) mod shape_tag_resource;

pub(crate) mod shape_test_metric_filter;

pub(crate) mod shape_untag_log_group;

pub(crate) mod shape_untag_resource;

pub(crate) mod shape_associate_kms_key_input;

pub(crate) mod shape_cancel_export_task_input;

pub(crate) fn or_empty_doc(data: &[u8]) -> &[u8] {
    if data.is_empty() {
        b"{}"
    } else {
        data
    }
}

pub(crate) mod shape_create_export_task_input;

pub(crate) mod shape_create_log_group_input;

pub(crate) mod shape_create_log_stream_input;

pub(crate) mod shape_data_already_accepted_exception;

pub(crate) mod shape_delete_data_protection_policy_input;

pub(crate) mod shape_delete_destination_input;

pub(crate) mod shape_delete_log_group_input;

pub(crate) mod shape_delete_log_stream_input;

pub(crate) mod shape_delete_metric_filter_input;

pub(crate) mod shape_delete_query_definition_input;

pub(crate) mod shape_delete_resource_policy_input;

pub(crate) mod shape_delete_retention_policy_input;

pub(crate) mod shape_delete_subscription_filter_input;

pub(crate) mod shape_describe_destinations_input;

pub(crate) mod shape_describe_export_tasks_input;

pub(crate) mod shape_describe_log_groups_input;

pub(crate) mod shape_describe_log_streams_input;

pub(crate) mod shape_describe_metric_filters_input;

pub(crate) mod shape_describe_queries_input;

pub(crate) mod shape_describe_query_definitions_input;

pub(crate) mod shape_describe_resource_policies_input;

pub(crate) mod shape_describe_subscription_filters_input;

pub(crate) mod shape_disassociate_kms_key_input;

pub(crate) mod shape_filter_log_events_input;

pub(crate) mod shape_get_data_protection_policy_input;

pub(crate) mod shape_get_log_events_input;

pub(crate) mod shape_get_log_group_fields_input;

pub(crate) mod shape_get_log_record_input;

pub(crate) mod shape_get_query_results_input;

pub(crate) mod shape_invalid_operation_exception;

pub(crate) mod shape_invalid_parameter_exception;

pub(crate) mod shape_invalid_sequence_token_exception;

pub(crate) mod shape_limit_exceeded_exception;

pub(crate) mod shape_list_tags_for_resource_input;

pub(crate) mod shape_list_tags_log_group_input;

pub(crate) mod shape_malformed_query_exception;

pub(crate) mod shape_operation_aborted_exception;

pub(crate) mod shape_put_data_protection_policy_input;

pub(crate) mod shape_put_destination_input;

pub(crate) mod shape_put_destination_policy_input;

pub(crate) mod shape_put_log_events_input;

pub(crate) mod shape_put_metric_filter_input;

pub(crate) mod shape_put_query_definition_input;

pub(crate) mod shape_put_resource_policy_input;

pub(crate) mod shape_put_retention_policy_input;

pub(crate) mod shape_put_subscription_filter_input;

pub(crate) mod shape_resource_already_exists_exception;

pub(crate) mod shape_resource_not_found_exception;

pub(crate) mod shape_service_unavailable_exception;

pub(crate) mod shape_start_query_input;

pub(crate) mod shape_stop_query_input;

pub(crate) mod shape_tag_log_group_input;

pub(crate) mod shape_tag_resource_input;

pub(crate) mod shape_test_metric_filter_input;

pub(crate) mod shape_too_many_tags_exception;

pub(crate) mod shape_unrecognized_client_exception;

pub(crate) mod shape_untag_log_group_input;

pub(crate) mod shape_untag_resource_input;

pub(crate) mod shape_destination;

pub(crate) mod shape_destinations;

pub(crate) mod shape_export_tasks;

pub(crate) mod shape_filtered_log_events;

pub(crate) mod shape_input_log_event;

pub(crate) mod shape_log_group_field_list;

pub(crate) mod shape_log_groups;

pub(crate) mod shape_log_record;

pub(crate) mod shape_log_streams;

pub(crate) mod shape_metric_filter_matches;

pub(crate) mod shape_metric_filters;

pub(crate) mod shape_metric_transformation;

pub(crate) mod shape_output_log_events;

pub(crate) mod shape_query_compile_error;

pub(crate) mod shape_query_definition_list;

pub(crate) mod shape_query_info_list;

pub(crate) mod shape_query_results;

pub(crate) mod shape_query_statistics;

pub(crate) mod shape_rejected_log_events_info;

pub(crate) mod shape_resource_policies;

pub(crate) mod shape_resource_policy;

pub(crate) mod shape_searched_log_streams;

pub(crate) mod shape_subscription_filters;

pub(crate) mod shape_tags;

pub(crate) mod shape_export_task;

pub(crate) mod shape_filtered_log_event;

pub(crate) mod shape_log_group;

pub(crate) mod shape_log_group_field;

pub(crate) mod shape_log_stream;

pub(crate) mod shape_metric_filter;

pub(crate) mod shape_metric_filter_match_record;

pub(crate) mod shape_output_log_event;

pub(crate) mod shape_query_compile_error_location;

pub(crate) mod shape_query_definition;

pub(crate) mod shape_query_info;

pub(crate) mod shape_result_rows;

pub(crate) mod shape_searched_log_stream;

pub(crate) mod shape_subscription_filter;

pub(crate) mod shape_export_task_execution_info;

pub(crate) mod shape_export_task_status;

pub(crate) mod shape_extracted_values;

pub(crate) mod shape_log_group_names;

pub(crate) mod shape_metric_transformations;

pub(crate) mod shape_result_field;

pub(crate) mod shape_dimensions;
