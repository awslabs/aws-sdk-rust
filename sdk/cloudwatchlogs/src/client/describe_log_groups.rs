// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeLogGroups`](crate::operation::describe_log_groups::builders::DescribeLogGroupsFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::describe_log_groups::builders::DescribeLogGroupsFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`account_identifiers(Vec<String>)`](crate::operation::describe_log_groups::builders::DescribeLogGroupsFluentBuilder::account_identifiers) / [`set_account_identifiers(Option<Vec<String>>)`](crate::operation::describe_log_groups::builders::DescribeLogGroupsFluentBuilder::set_account_identifiers): <p>When <code>includeLinkedAccounts</code> is set to <code>True</code>, use this parameter to specify the list of accounts to search. You can specify as many as 20 account IDs in the array. </p>
    ///   - [`log_group_name_prefix(impl Into<String>)`](crate::operation::describe_log_groups::builders::DescribeLogGroupsFluentBuilder::log_group_name_prefix) / [`set_log_group_name_prefix(Option<String>)`](crate::operation::describe_log_groups::builders::DescribeLogGroupsFluentBuilder::set_log_group_name_prefix): <p>The prefix to match.</p> <note>   <p> <code>logGroupNamePrefix</code> and <code>logGroupNamePattern</code> are mutually exclusive. Only one of these parameters can be passed. </p>  </note>
    ///   - [`log_group_name_pattern(impl Into<String>)`](crate::operation::describe_log_groups::builders::DescribeLogGroupsFluentBuilder::log_group_name_pattern) / [`set_log_group_name_pattern(Option<String>)`](crate::operation::describe_log_groups::builders::DescribeLogGroupsFluentBuilder::set_log_group_name_pattern): <p>If you specify a string for this parameter, the operation returns only log groups that have names that match the string based on a case-sensitive substring search. For example, if you specify <code>Foo</code>, log groups named <code>FooBar</code>, <code>aws/Foo</code>, and <code>GroupFoo</code> would match, but <code>foo</code>, <code>F/o/o</code> and <code>Froo</code> would not match.</p> <note>   <p> <code>logGroupNamePattern</code> and <code>logGroupNamePrefix</code> are mutually exclusive. Only one of these parameters can be passed. </p>  </note>
    ///   - [`next_token(impl Into<String>)`](crate::operation::describe_log_groups::builders::DescribeLogGroupsFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::describe_log_groups::builders::DescribeLogGroupsFluentBuilder::set_next_token): <p>The token for the next set of items to return. (You received this token from a previous call.)</p>
    ///   - [`limit(i32)`](crate::operation::describe_log_groups::builders::DescribeLogGroupsFluentBuilder::limit) / [`set_limit(Option<i32>)`](crate::operation::describe_log_groups::builders::DescribeLogGroupsFluentBuilder::set_limit): <p>The maximum number of items returned. If you don't specify a value, the default is up to 50 items.</p>
    ///   - [`include_linked_accounts(bool)`](crate::operation::describe_log_groups::builders::DescribeLogGroupsFluentBuilder::include_linked_accounts) / [`set_include_linked_accounts(Option<bool>)`](crate::operation::describe_log_groups::builders::DescribeLogGroupsFluentBuilder::set_include_linked_accounts): <p>If you are using a monitoring account, set this to <code>True</code> to have the operation return log groups in the accounts listed in <code>accountIdentifiers</code>.</p>  <p>If this parameter is set to <code>true</code> and <code>accountIdentifiers</code> contains a null value, the operation returns all log groups in the monitoring account and all log groups in all source accounts that are linked to the monitoring account. </p> <note>   <p> If you specify <code>includeLinkedAccounts</code> in your request, then <code>metricFilterCount</code>, <code>retentionInDays</code>, and <code>storedBytes</code> are not included in the response. </p>  </note>
    /// - On success, responds with [`DescribeLogGroupsOutput`](crate::operation::describe_log_groups::DescribeLogGroupsOutput) with field(s):
    ///   - [`log_groups(Option<Vec<LogGroup>>)`](crate::operation::describe_log_groups::DescribeLogGroupsOutput::log_groups): <p>The log groups.</p>  <p>If the <code>retentionInDays</code> value is not included for a log group, then that log group's events do not expire.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::describe_log_groups::DescribeLogGroupsOutput::next_token): <p>The token for the next set of items to return. The token expires after 24 hours.</p>
    /// - On failure, responds with [`SdkError<DescribeLogGroupsError>`](crate::operation::describe_log_groups::DescribeLogGroupsError)
    pub fn describe_log_groups(
        &self,
    ) -> crate::operation::describe_log_groups::builders::DescribeLogGroupsFluentBuilder {
        crate::operation::describe_log_groups::builders::DescribeLogGroupsFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
