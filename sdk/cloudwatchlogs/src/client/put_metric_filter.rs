// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`PutMetricFilter`](crate::operation::put_metric_filter::builders::PutMetricFilterFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`log_group_name(impl Into<String>)`](crate::operation::put_metric_filter::builders::PutMetricFilterFluentBuilder::log_group_name) / [`set_log_group_name(Option<String>)`](crate::operation::put_metric_filter::builders::PutMetricFilterFluentBuilder::set_log_group_name): <p>The name of the log group.</p>
    ///   - [`filter_name(impl Into<String>)`](crate::operation::put_metric_filter::builders::PutMetricFilterFluentBuilder::filter_name) / [`set_filter_name(Option<String>)`](crate::operation::put_metric_filter::builders::PutMetricFilterFluentBuilder::set_filter_name): <p>A name for the metric filter.</p>
    ///   - [`filter_pattern(impl Into<String>)`](crate::operation::put_metric_filter::builders::PutMetricFilterFluentBuilder::filter_pattern) / [`set_filter_pattern(Option<String>)`](crate::operation::put_metric_filter::builders::PutMetricFilterFluentBuilder::set_filter_pattern): <p>A filter pattern for extracting metric data out of ingested log events.</p>
    ///   - [`metric_transformations(Vec<MetricTransformation>)`](crate::operation::put_metric_filter::builders::PutMetricFilterFluentBuilder::metric_transformations) / [`set_metric_transformations(Option<Vec<MetricTransformation>>)`](crate::operation::put_metric_filter::builders::PutMetricFilterFluentBuilder::set_metric_transformations): <p>A collection of information that defines how metric data gets emitted.</p>
    /// - On success, responds with [`PutMetricFilterOutput`](crate::operation::put_metric_filter::PutMetricFilterOutput)
    /// - On failure, responds with [`SdkError<PutMetricFilterError>`](crate::operation::put_metric_filter::PutMetricFilterError)
    pub fn put_metric_filter(
        &self,
    ) -> crate::operation::put_metric_filter::builders::PutMetricFilterFluentBuilder {
        crate::operation::put_metric_filter::builders::PutMetricFilterFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
