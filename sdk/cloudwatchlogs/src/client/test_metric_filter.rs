// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`TestMetricFilter`](crate::operation::test_metric_filter::builders::TestMetricFilterFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`filter_pattern(impl Into<String>)`](crate::operation::test_metric_filter::builders::TestMetricFilterFluentBuilder::filter_pattern) / [`set_filter_pattern(Option<String>)`](crate::operation::test_metric_filter::builders::TestMetricFilterFluentBuilder::set_filter_pattern):<br>required: **true**<br><p>A symbolic description of how CloudWatch Logs should interpret the data in each log event. For example, a log event can contain timestamps, IP addresses, strings, and so on. You use the filter pattern to specify what to look for in the log event message.</p><br>
    ///   - [`log_event_messages(impl Into<String>)`](crate::operation::test_metric_filter::builders::TestMetricFilterFluentBuilder::log_event_messages) / [`set_log_event_messages(Option<Vec::<String>>)`](crate::operation::test_metric_filter::builders::TestMetricFilterFluentBuilder::set_log_event_messages):<br>required: **true**<br><p>The log event messages to test.</p><br>
    /// - On success, responds with [`TestMetricFilterOutput`](crate::operation::test_metric_filter::TestMetricFilterOutput) with field(s):
    ///   - [`matches(Option<Vec::<MetricFilterMatchRecord>>)`](crate::operation::test_metric_filter::TestMetricFilterOutput::matches): <p>The matched events.</p>
    /// - On failure, responds with [`SdkError<TestMetricFilterError>`](crate::operation::test_metric_filter::TestMetricFilterError)
    pub fn test_metric_filter(&self) -> crate::operation::test_metric_filter::builders::TestMetricFilterFluentBuilder {
        crate::operation::test_metric_filter::builders::TestMetricFilterFluentBuilder::new(self.handle.clone())
    }
}
