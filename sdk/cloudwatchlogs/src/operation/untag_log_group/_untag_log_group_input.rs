// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[deprecated(note = "Please use the generic tagging API model UntagResourceRequest")]
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct UntagLogGroupInput {
    /// <p>The name of the log group.</p>
    #[doc(hidden)]
    pub log_group_name: std::option::Option<std::string::String>,
    /// <p>The tag keys. The corresponding tags are removed from the log group.</p>
    #[doc(hidden)]
    pub tags: std::option::Option<std::vec::Vec<std::string::String>>,
}
impl UntagLogGroupInput {
    /// <p>The name of the log group.</p>
    pub fn log_group_name(&self) -> std::option::Option<&str> {
        self.log_group_name.as_deref()
    }
    /// <p>The tag keys. The corresponding tags are removed from the log group.</p>
    pub fn tags(&self) -> std::option::Option<&[std::string::String]> {
        self.tags.as_deref()
    }
}
impl UntagLogGroupInput {
    /// Creates a new builder-style object to manufacture [`UntagLogGroupInput`](crate::operation::untag_log_group::UntagLogGroupInput).
    pub fn builder() -> crate::operation::untag_log_group::builders::UntagLogGroupInputBuilder {
        crate::operation::untag_log_group::builders::UntagLogGroupInputBuilder::default()
    }
}

/// A builder for [`UntagLogGroupInput`](crate::operation::untag_log_group::UntagLogGroupInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct UntagLogGroupInputBuilder {
    pub(crate) log_group_name: std::option::Option<std::string::String>,
    pub(crate) tags: std::option::Option<std::vec::Vec<std::string::String>>,
}
impl UntagLogGroupInputBuilder {
    /// <p>The name of the log group.</p>
    pub fn log_group_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.log_group_name = Some(input.into());
        self
    }
    /// <p>The name of the log group.</p>
    pub fn set_log_group_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.log_group_name = input;
        self
    }
    /// Appends an item to `tags`.
    ///
    /// To override the contents of this collection use [`set_tags`](Self::set_tags).
    ///
    /// <p>The tag keys. The corresponding tags are removed from the log group.</p>
    pub fn tags(mut self, input: impl Into<std::string::String>) -> Self {
        let mut v = self.tags.unwrap_or_default();
        v.push(input.into());
        self.tags = Some(v);
        self
    }
    /// <p>The tag keys. The corresponding tags are removed from the log group.</p>
    pub fn set_tags(
        mut self,
        input: std::option::Option<std::vec::Vec<std::string::String>>,
    ) -> Self {
        self.tags = input;
        self
    }
    /// Consumes the builder and constructs a [`UntagLogGroupInput`](crate::operation::untag_log_group::UntagLogGroupInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::untag_log_group::UntagLogGroupInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(crate::operation::untag_log_group::UntagLogGroupInput {
            log_group_name: self.log_group_name,
            tags: self.tags,
        })
    }
}
