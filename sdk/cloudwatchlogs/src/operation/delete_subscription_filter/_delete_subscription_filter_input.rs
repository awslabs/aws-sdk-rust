// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DeleteSubscriptionFilterInput {
    /// <p>The name of the log group.</p>
    pub log_group_name: ::std::option::Option<::std::string::String>,
    /// <p>The name of the subscription filter.</p>
    pub filter_name: ::std::option::Option<::std::string::String>,
}
impl DeleteSubscriptionFilterInput {
    /// <p>The name of the log group.</p>
    pub fn log_group_name(&self) -> ::std::option::Option<&str> {
        self.log_group_name.as_deref()
    }
    /// <p>The name of the subscription filter.</p>
    pub fn filter_name(&self) -> ::std::option::Option<&str> {
        self.filter_name.as_deref()
    }
}
impl DeleteSubscriptionFilterInput {
    /// Creates a new builder-style object to manufacture [`DeleteSubscriptionFilterInput`](crate::operation::delete_subscription_filter::DeleteSubscriptionFilterInput).
    pub fn builder() -> crate::operation::delete_subscription_filter::builders::DeleteSubscriptionFilterInputBuilder {
        crate::operation::delete_subscription_filter::builders::DeleteSubscriptionFilterInputBuilder::default()
    }
}

/// A builder for [`DeleteSubscriptionFilterInput`](crate::operation::delete_subscription_filter::DeleteSubscriptionFilterInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DeleteSubscriptionFilterInputBuilder {
    pub(crate) log_group_name: ::std::option::Option<::std::string::String>,
    pub(crate) filter_name: ::std::option::Option<::std::string::String>,
}
impl DeleteSubscriptionFilterInputBuilder {
    /// <p>The name of the log group.</p>
    /// This field is required.
    pub fn log_group_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.log_group_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the log group.</p>
    pub fn set_log_group_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.log_group_name = input;
        self
    }
    /// <p>The name of the log group.</p>
    pub fn get_log_group_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.log_group_name
    }
    /// <p>The name of the subscription filter.</p>
    /// This field is required.
    pub fn filter_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.filter_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the subscription filter.</p>
    pub fn set_filter_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.filter_name = input;
        self
    }
    /// <p>The name of the subscription filter.</p>
    pub fn get_filter_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.filter_name
    }
    /// Consumes the builder and constructs a [`DeleteSubscriptionFilterInput`](crate::operation::delete_subscription_filter::DeleteSubscriptionFilterInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::delete_subscription_filter::DeleteSubscriptionFilterInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::delete_subscription_filter::DeleteSubscriptionFilterInput {
            log_group_name: self.log_group_name,
            filter_name: self.filter_name,
        })
    }
}
