// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The parameters for the GetLogObject operation.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GetLogObjectInput {
    /// <p>A boolean flag that indicates whether to unmask sensitive log data. When set to true, any masked or redacted data in the log object will be displayed in its original form. Default is false.</p>
    pub unmask: ::std::option::Option<bool>,
    /// <p>A pointer to the specific log object to retrieve. This is a required parameter that uniquely identifies the log object within CloudWatch Logs. The pointer is typically obtained from a previous query or filter operation.</p>
    pub log_object_pointer: ::std::option::Option<::std::string::String>,
}
impl GetLogObjectInput {
    /// <p>A boolean flag that indicates whether to unmask sensitive log data. When set to true, any masked or redacted data in the log object will be displayed in its original form. Default is false.</p>
    pub fn unmask(&self) -> ::std::option::Option<bool> {
        self.unmask
    }
    /// <p>A pointer to the specific log object to retrieve. This is a required parameter that uniquely identifies the log object within CloudWatch Logs. The pointer is typically obtained from a previous query or filter operation.</p>
    pub fn log_object_pointer(&self) -> ::std::option::Option<&str> {
        self.log_object_pointer.as_deref()
    }
}
impl GetLogObjectInput {
    /// Creates a new builder-style object to manufacture [`GetLogObjectInput`](crate::operation::get_log_object::GetLogObjectInput).
    pub fn builder() -> crate::operation::get_log_object::builders::GetLogObjectInputBuilder {
        crate::operation::get_log_object::builders::GetLogObjectInputBuilder::default()
    }
}

/// A builder for [`GetLogObjectInput`](crate::operation::get_log_object::GetLogObjectInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct GetLogObjectInputBuilder {
    pub(crate) unmask: ::std::option::Option<bool>,
    pub(crate) log_object_pointer: ::std::option::Option<::std::string::String>,
}
impl GetLogObjectInputBuilder {
    /// <p>A boolean flag that indicates whether to unmask sensitive log data. When set to true, any masked or redacted data in the log object will be displayed in its original form. Default is false.</p>
    pub fn unmask(mut self, input: bool) -> Self {
        self.unmask = ::std::option::Option::Some(input);
        self
    }
    /// <p>A boolean flag that indicates whether to unmask sensitive log data. When set to true, any masked or redacted data in the log object will be displayed in its original form. Default is false.</p>
    pub fn set_unmask(mut self, input: ::std::option::Option<bool>) -> Self {
        self.unmask = input;
        self
    }
    /// <p>A boolean flag that indicates whether to unmask sensitive log data. When set to true, any masked or redacted data in the log object will be displayed in its original form. Default is false.</p>
    pub fn get_unmask(&self) -> &::std::option::Option<bool> {
        &self.unmask
    }
    /// <p>A pointer to the specific log object to retrieve. This is a required parameter that uniquely identifies the log object within CloudWatch Logs. The pointer is typically obtained from a previous query or filter operation.</p>
    /// This field is required.
    pub fn log_object_pointer(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.log_object_pointer = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>A pointer to the specific log object to retrieve. This is a required parameter that uniquely identifies the log object within CloudWatch Logs. The pointer is typically obtained from a previous query or filter operation.</p>
    pub fn set_log_object_pointer(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.log_object_pointer = input;
        self
    }
    /// <p>A pointer to the specific log object to retrieve. This is a required parameter that uniquely identifies the log object within CloudWatch Logs. The pointer is typically obtained from a previous query or filter operation.</p>
    pub fn get_log_object_pointer(&self) -> &::std::option::Option<::std::string::String> {
        &self.log_object_pointer
    }
    /// Consumes the builder and constructs a [`GetLogObjectInput`](crate::operation::get_log_object::GetLogObjectInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::get_log_object::GetLogObjectInput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::operation::get_log_object::GetLogObjectInput {
            unmask: self.unmask,
            log_object_pointer: self.log_object_pointer,
        })
    }
}
