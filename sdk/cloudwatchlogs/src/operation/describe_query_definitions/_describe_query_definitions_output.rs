// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DescribeQueryDefinitionsOutput {
    /// <p>The list of query definitions that match your request.</p>
    #[doc(hidden)]
    pub query_definitions: std::option::Option<std::vec::Vec<crate::types::QueryDefinition>>,
    /// <p>The token for the next set of items to return. The token expires after 24 hours.</p>
    #[doc(hidden)]
    pub next_token: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl DescribeQueryDefinitionsOutput {
    /// <p>The list of query definitions that match your request.</p>
    pub fn query_definitions(&self) -> std::option::Option<&[crate::types::QueryDefinition]> {
        self.query_definitions.as_deref()
    }
    /// <p>The token for the next set of items to return. The token expires after 24 hours.</p>
    pub fn next_token(&self) -> std::option::Option<&str> {
        self.next_token.as_deref()
    }
}
impl aws_http::request_id::RequestId for DescribeQueryDefinitionsOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl DescribeQueryDefinitionsOutput {
    /// Creates a new builder-style object to manufacture [`DescribeQueryDefinitionsOutput`](crate::operation::describe_query_definitions::DescribeQueryDefinitionsOutput).
    pub fn builder(
    ) -> crate::operation::describe_query_definitions::builders::DescribeQueryDefinitionsOutputBuilder
    {
        crate::operation::describe_query_definitions::builders::DescribeQueryDefinitionsOutputBuilder::default()
    }
}

/// A builder for [`DescribeQueryDefinitionsOutput`](crate::operation::describe_query_definitions::DescribeQueryDefinitionsOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DescribeQueryDefinitionsOutputBuilder {
    pub(crate) query_definitions: std::option::Option<std::vec::Vec<crate::types::QueryDefinition>>,
    pub(crate) next_token: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl DescribeQueryDefinitionsOutputBuilder {
    /// Appends an item to `query_definitions`.
    ///
    /// To override the contents of this collection use [`set_query_definitions`](Self::set_query_definitions).
    ///
    /// <p>The list of query definitions that match your request.</p>
    pub fn query_definitions(mut self, input: crate::types::QueryDefinition) -> Self {
        let mut v = self.query_definitions.unwrap_or_default();
        v.push(input);
        self.query_definitions = Some(v);
        self
    }
    /// <p>The list of query definitions that match your request.</p>
    pub fn set_query_definitions(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::QueryDefinition>>,
    ) -> Self {
        self.query_definitions = input;
        self
    }
    /// <p>The token for the next set of items to return. The token expires after 24 hours.</p>
    pub fn next_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.next_token = Some(input.into());
        self
    }
    /// <p>The token for the next set of items to return. The token expires after 24 hours.</p>
    pub fn set_next_token(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`DescribeQueryDefinitionsOutput`](crate::operation::describe_query_definitions::DescribeQueryDefinitionsOutput).
    pub fn build(
        self,
    ) -> crate::operation::describe_query_definitions::DescribeQueryDefinitionsOutput {
        crate::operation::describe_query_definitions::DescribeQueryDefinitionsOutput {
            query_definitions: self.query_definitions,
            next_token: self.next_token,
            _request_id: self._request_id,
        }
    }
}
