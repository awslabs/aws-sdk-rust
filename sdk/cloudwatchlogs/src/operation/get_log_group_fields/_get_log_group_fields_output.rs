// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GetLogGroupFieldsOutput {
    /// <p>The array of fields found in the query. Each object in the array contains the name of the field, along with the percentage of time it appeared in the log events that were queried.</p>
    #[doc(hidden)]
    pub log_group_fields: std::option::Option<std::vec::Vec<crate::types::LogGroupField>>,
    _request_id: Option<String>,
}
impl GetLogGroupFieldsOutput {
    /// <p>The array of fields found in the query. Each object in the array contains the name of the field, along with the percentage of time it appeared in the log events that were queried.</p>
    pub fn log_group_fields(&self) -> std::option::Option<&[crate::types::LogGroupField]> {
        self.log_group_fields.as_deref()
    }
}
impl aws_http::request_id::RequestId for GetLogGroupFieldsOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl GetLogGroupFieldsOutput {
    /// Creates a new builder-style object to manufacture [`GetLogGroupFieldsOutput`](crate::operation::get_log_group_fields::GetLogGroupFieldsOutput).
    pub fn builder(
    ) -> crate::operation::get_log_group_fields::builders::GetLogGroupFieldsOutputBuilder {
        crate::operation::get_log_group_fields::builders::GetLogGroupFieldsOutputBuilder::default()
    }
}

/// A builder for [`GetLogGroupFieldsOutput`](crate::operation::get_log_group_fields::GetLogGroupFieldsOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct GetLogGroupFieldsOutputBuilder {
    pub(crate) log_group_fields: std::option::Option<std::vec::Vec<crate::types::LogGroupField>>,
    _request_id: Option<String>,
}
impl GetLogGroupFieldsOutputBuilder {
    /// Appends an item to `log_group_fields`.
    ///
    /// To override the contents of this collection use [`set_log_group_fields`](Self::set_log_group_fields).
    ///
    /// <p>The array of fields found in the query. Each object in the array contains the name of the field, along with the percentage of time it appeared in the log events that were queried.</p>
    pub fn log_group_fields(mut self, input: crate::types::LogGroupField) -> Self {
        let mut v = self.log_group_fields.unwrap_or_default();
        v.push(input);
        self.log_group_fields = Some(v);
        self
    }
    /// <p>The array of fields found in the query. Each object in the array contains the name of the field, along with the percentage of time it appeared in the log events that were queried.</p>
    pub fn set_log_group_fields(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::LogGroupField>>,
    ) -> Self {
        self.log_group_fields = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`GetLogGroupFieldsOutput`](crate::operation::get_log_group_fields::GetLogGroupFieldsOutput).
    pub fn build(self) -> crate::operation::get_log_group_fields::GetLogGroupFieldsOutput {
        crate::operation::get_log_group_fields::GetLogGroupFieldsOutput {
            log_group_fields: self.log_group_fields,
            _request_id: self._request_id,
        }
    }
}
