// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Specifies a character set.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct CharacterSet {
    /// <p>The name of the character set.</p>
    #[doc(hidden)]
    pub character_set_name: std::option::Option<std::string::String>,
    /// <p>The description of the character set.</p>
    #[doc(hidden)]
    pub character_set_description: std::option::Option<std::string::String>,
}
impl CharacterSet {
    /// <p>The name of the character set.</p>
    pub fn character_set_name(&self) -> std::option::Option<&str> {
        self.character_set_name.as_deref()
    }
    /// <p>The description of the character set.</p>
    pub fn character_set_description(&self) -> std::option::Option<&str> {
        self.character_set_description.as_deref()
    }
}
impl CharacterSet {
    /// Creates a new builder-style object to manufacture [`CharacterSet`](crate::types::CharacterSet).
    pub fn builder() -> crate::types::builders::CharacterSetBuilder {
        crate::types::builders::CharacterSetBuilder::default()
    }
}

/// A builder for [`CharacterSet`](crate::types::CharacterSet).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct CharacterSetBuilder {
    pub(crate) character_set_name: std::option::Option<std::string::String>,
    pub(crate) character_set_description: std::option::Option<std::string::String>,
}
impl CharacterSetBuilder {
    /// <p>The name of the character set.</p>
    pub fn character_set_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.character_set_name = Some(input.into());
        self
    }
    /// <p>The name of the character set.</p>
    pub fn set_character_set_name(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.character_set_name = input;
        self
    }
    /// <p>The description of the character set.</p>
    pub fn character_set_description(mut self, input: impl Into<std::string::String>) -> Self {
        self.character_set_description = Some(input.into());
        self
    }
    /// <p>The description of the character set.</p>
    pub fn set_character_set_description(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.character_set_description = input;
        self
    }
    /// Consumes the builder and constructs a [`CharacterSet`](crate::types::CharacterSet).
    pub fn build(self) -> crate::types::CharacterSet {
        crate::types::CharacterSet {
            character_set_name: self.character_set_name,
            character_set_description: self.character_set_description,
        }
    }
}
