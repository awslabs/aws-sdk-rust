// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A time zone associated with a <code>DBInstance</code>.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct Timezone {
    /// <p>The name of the time zone.</p>
    #[doc(hidden)]
    pub timezone_name: std::option::Option<std::string::String>,
}
impl Timezone {
    /// <p>The name of the time zone.</p>
    pub fn timezone_name(&self) -> std::option::Option<&str> {
        self.timezone_name.as_deref()
    }
}
impl Timezone {
    /// Creates a new builder-style object to manufacture [`Timezone`](crate::types::Timezone).
    pub fn builder() -> crate::types::builders::TimezoneBuilder {
        crate::types::builders::TimezoneBuilder::default()
    }
}

/// A builder for [`Timezone`](crate::types::Timezone).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct TimezoneBuilder {
    pub(crate) timezone_name: std::option::Option<std::string::String>,
}
impl TimezoneBuilder {
    /// <p>The name of the time zone.</p>
    pub fn timezone_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.timezone_name = Some(input.into());
        self
    }
    /// <p>The name of the time zone.</p>
    pub fn set_timezone_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.timezone_name = input;
        self
    }
    /// Consumes the builder and constructs a [`Timezone`](crate::types::Timezone).
    pub fn build(self) -> crate::types::Timezone {
        crate::types::Timezone {
            timezone_name: self.timezone_name,
        }
    }
}
