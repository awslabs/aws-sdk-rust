// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeDBEngineVersions`](crate::operation::describe_db_engine_versions::builders::DescribeDBEngineVersionsFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::describe_db_engine_versions::builders::DescribeDBEngineVersionsFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`engine(impl Into<String>)`](crate::operation::describe_db_engine_versions::builders::DescribeDBEngineVersionsFluentBuilder::engine) / [`set_engine(Option<String>)`](crate::operation::describe_db_engine_versions::builders::DescribeDBEngineVersionsFluentBuilder::set_engine): <p>The database engine to return.</p>
    ///   - [`engine_version(impl Into<String>)`](crate::operation::describe_db_engine_versions::builders::DescribeDBEngineVersionsFluentBuilder::engine_version) / [`set_engine_version(Option<String>)`](crate::operation::describe_db_engine_versions::builders::DescribeDBEngineVersionsFluentBuilder::set_engine_version): <p>The database engine version to return.</p>  <p>Example: <code>5.1.49</code> </p>
    ///   - [`db_parameter_group_family(impl Into<String>)`](crate::operation::describe_db_engine_versions::builders::DescribeDBEngineVersionsFluentBuilder::db_parameter_group_family) / [`set_db_parameter_group_family(Option<String>)`](crate::operation::describe_db_engine_versions::builders::DescribeDBEngineVersionsFluentBuilder::set_db_parameter_group_family): <p>The name of a specific DB parameter group family to return details for.</p>  <p>Constraints:</p>  <ul>   <li> <p>If supplied, must match an existing DBParameterGroupFamily.</p> </li>  </ul>
    ///   - [`filters(Vec<Filter>)`](crate::operation::describe_db_engine_versions::builders::DescribeDBEngineVersionsFluentBuilder::filters) / [`set_filters(Option<Vec<Filter>>)`](crate::operation::describe_db_engine_versions::builders::DescribeDBEngineVersionsFluentBuilder::set_filters): <p>Not currently supported.</p>
    ///   - [`max_records(i32)`](crate::operation::describe_db_engine_versions::builders::DescribeDBEngineVersionsFluentBuilder::max_records) / [`set_max_records(Option<i32>)`](crate::operation::describe_db_engine_versions::builders::DescribeDBEngineVersionsFluentBuilder::set_max_records): <p> The maximum number of records to include in the response. If more than the <code>MaxRecords</code> value is available, a pagination token called a marker is included in the response so that the following results can be retrieved.</p>  <p>Default: 100</p>  <p>Constraints: Minimum 20, maximum 100.</p>
    ///   - [`marker(impl Into<String>)`](crate::operation::describe_db_engine_versions::builders::DescribeDBEngineVersionsFluentBuilder::marker) / [`set_marker(Option<String>)`](crate::operation::describe_db_engine_versions::builders::DescribeDBEngineVersionsFluentBuilder::set_marker): <p> An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.</p>
    ///   - [`default_only(bool)`](crate::operation::describe_db_engine_versions::builders::DescribeDBEngineVersionsFluentBuilder::default_only) / [`set_default_only(bool)`](crate::operation::describe_db_engine_versions::builders::DescribeDBEngineVersionsFluentBuilder::set_default_only): <p>Indicates that only the default version of the specified engine or engine and major version combination is returned.</p>
    ///   - [`list_supported_character_sets(bool)`](crate::operation::describe_db_engine_versions::builders::DescribeDBEngineVersionsFluentBuilder::list_supported_character_sets) / [`set_list_supported_character_sets(Option<bool>)`](crate::operation::describe_db_engine_versions::builders::DescribeDBEngineVersionsFluentBuilder::set_list_supported_character_sets): <p>If this parameter is specified and the requested engine supports the <code>CharacterSetName</code> parameter for <code>CreateDBInstance</code>, the response includes a list of supported character sets for each engine version.</p>
    ///   - [`list_supported_timezones(bool)`](crate::operation::describe_db_engine_versions::builders::DescribeDBEngineVersionsFluentBuilder::list_supported_timezones) / [`set_list_supported_timezones(Option<bool>)`](crate::operation::describe_db_engine_versions::builders::DescribeDBEngineVersionsFluentBuilder::set_list_supported_timezones): <p>If this parameter is specified and the requested engine supports the <code>TimeZone</code> parameter for <code>CreateDBInstance</code>, the response includes a list of supported time zones for each engine version.</p>
    /// - On success, responds with [`DescribeDbEngineVersionsOutput`](crate::operation::describe_db_engine_versions::DescribeDbEngineVersionsOutput) with field(s):
    ///   - [`marker(Option<String>)`](crate::operation::describe_db_engine_versions::DescribeDbEngineVersionsOutput::marker): <p> An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.</p>
    ///   - [`db_engine_versions(Option<Vec<DbEngineVersion>>)`](crate::operation::describe_db_engine_versions::DescribeDbEngineVersionsOutput::db_engine_versions): <p> A list of <code>DBEngineVersion</code> elements.</p>
    /// - On failure, responds with [`SdkError<DescribeDBEngineVersionsError>`](crate::operation::describe_db_engine_versions::DescribeDBEngineVersionsError)
    pub fn describe_db_engine_versions(&self) -> crate::operation::describe_db_engine_versions::builders::DescribeDBEngineVersionsFluentBuilder{
        crate::operation::describe_db_engine_versions::builders::DescribeDBEngineVersionsFluentBuilder::new(self.handle.clone())
    }
}
