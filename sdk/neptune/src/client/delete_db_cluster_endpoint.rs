// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeleteDBClusterEndpoint`](crate::operation::delete_db_cluster_endpoint::builders::DeleteDBClusterEndpointFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`db_cluster_endpoint_identifier(impl Into<String>)`](crate::operation::delete_db_cluster_endpoint::builders::DeleteDBClusterEndpointFluentBuilder::db_cluster_endpoint_identifier) / [`set_db_cluster_endpoint_identifier(Option<String>)`](crate::operation::delete_db_cluster_endpoint::builders::DeleteDBClusterEndpointFluentBuilder::set_db_cluster_endpoint_identifier):<br>required: **true**<br><p>The identifier associated with the custom endpoint. This parameter is stored as a lowercase string.</p><br>
    /// - On success, responds with [`DeleteDbClusterEndpointOutput`](crate::operation::delete_db_cluster_endpoint::DeleteDbClusterEndpointOutput) with field(s):
    ///   - [`db_cluster_endpoint_identifier(Option<String>)`](crate::operation::delete_db_cluster_endpoint::DeleteDbClusterEndpointOutput::db_cluster_endpoint_identifier): <p>The identifier associated with the endpoint. This parameter is stored as a lowercase string.</p>
    ///   - [`db_cluster_identifier(Option<String>)`](crate::operation::delete_db_cluster_endpoint::DeleteDbClusterEndpointOutput::db_cluster_identifier): <p>The DB cluster identifier of the DB cluster associated with the endpoint. This parameter is stored as a lowercase string.</p>
    ///   - [`db_cluster_endpoint_resource_identifier(Option<String>)`](crate::operation::delete_db_cluster_endpoint::DeleteDbClusterEndpointOutput::db_cluster_endpoint_resource_identifier): <p>A unique system-generated identifier for an endpoint. It remains the same for the whole life of the endpoint.</p>
    ///   - [`endpoint(Option<String>)`](crate::operation::delete_db_cluster_endpoint::DeleteDbClusterEndpointOutput::endpoint): <p>The DNS address of the endpoint.</p>
    ///   - [`status(Option<String>)`](crate::operation::delete_db_cluster_endpoint::DeleteDbClusterEndpointOutput::status): <p>The current status of the endpoint. One of: <code>creating</code>, <code>available</code>, <code>deleting</code>, <code>inactive</code>, <code>modifying</code>. The <code>inactive</code> state applies to an endpoint that cannot be used for a certain kind of cluster, such as a <code>writer</code> endpoint for a read-only secondary cluster in a global database.</p>
    ///   - [`endpoint_type(Option<String>)`](crate::operation::delete_db_cluster_endpoint::DeleteDbClusterEndpointOutput::endpoint_type): <p>The type of the endpoint. One of: <code>READER</code>, <code>WRITER</code>, <code>CUSTOM</code>.</p>
    ///   - [`custom_endpoint_type(Option<String>)`](crate::operation::delete_db_cluster_endpoint::DeleteDbClusterEndpointOutput::custom_endpoint_type): <p>The type associated with a custom endpoint. One of: <code>READER</code>, <code>WRITER</code>, <code>ANY</code>.</p>
    ///   - [`static_members(Option<Vec::<String>>)`](crate::operation::delete_db_cluster_endpoint::DeleteDbClusterEndpointOutput::static_members): <p>List of DB instance identifiers that are part of the custom endpoint group.</p>
    ///   - [`excluded_members(Option<Vec::<String>>)`](crate::operation::delete_db_cluster_endpoint::DeleteDbClusterEndpointOutput::excluded_members): <p>List of DB instance identifiers that aren't part of the custom endpoint group. All other eligible instances are reachable through the custom endpoint. Only relevant if the list of static members is empty.</p>
    ///   - [`db_cluster_endpoint_arn(Option<String>)`](crate::operation::delete_db_cluster_endpoint::DeleteDbClusterEndpointOutput::db_cluster_endpoint_arn): <p>The Amazon Resource Name (ARN) for the endpoint.</p>
    /// - On failure, responds with [`SdkError<DeleteDBClusterEndpointError>`](crate::operation::delete_db_cluster_endpoint::DeleteDBClusterEndpointError)
    pub fn delete_db_cluster_endpoint(&self) -> crate::operation::delete_db_cluster_endpoint::builders::DeleteDBClusterEndpointFluentBuilder {
        crate::operation::delete_db_cluster_endpoint::builders::DeleteDBClusterEndpointFluentBuilder::new(self.handle.clone())
    }
}
