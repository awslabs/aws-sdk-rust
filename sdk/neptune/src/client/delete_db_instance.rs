// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeleteDBInstance`](crate::operation::delete_db_instance::builders::DeleteDBInstanceFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`db_instance_identifier(impl Into<String>)`](crate::operation::delete_db_instance::builders::DeleteDBInstanceFluentBuilder::db_instance_identifier) / [`set_db_instance_identifier(Option<String>)`](crate::operation::delete_db_instance::builders::DeleteDBInstanceFluentBuilder::set_db_instance_identifier):<br>required: **true**<br><p>The DB instance identifier for the DB instance to be deleted. This parameter isn't case-sensitive.</p>  <p>Constraints:</p>  <ul>   <li> <p>Must match the name of an existing DB instance.</p> </li>  </ul><br>
    ///   - [`skip_final_snapshot(bool)`](crate::operation::delete_db_instance::builders::DeleteDBInstanceFluentBuilder::skip_final_snapshot) / [`set_skip_final_snapshot(Option<bool>)`](crate::operation::delete_db_instance::builders::DeleteDBInstanceFluentBuilder::set_skip_final_snapshot):<br>required: **false**<br><p> Determines whether a final DB snapshot is created before the DB instance is deleted. If <code>true</code> is specified, no DBSnapshot is created. If <code>false</code> is specified, a DB snapshot is created before the DB instance is deleted.</p>  <p>Note that when a DB instance is in a failure state and has a status of 'failed', 'incompatible-restore', or 'incompatible-network', it can only be deleted when the SkipFinalSnapshot parameter is set to "true".</p>  <p>Specify <code>true</code> when deleting a Read Replica.</p> <note>   <p>The FinalDBSnapshotIdentifier parameter must be specified if SkipFinalSnapshot is <code>false</code>.</p>  </note>  <p>Default: <code>false</code> </p><br>
    ///   - [`final_db_snapshot_identifier(impl Into<String>)`](crate::operation::delete_db_instance::builders::DeleteDBInstanceFluentBuilder::final_db_snapshot_identifier) / [`set_final_db_snapshot_identifier(Option<String>)`](crate::operation::delete_db_instance::builders::DeleteDBInstanceFluentBuilder::set_final_db_snapshot_identifier):<br>required: **false**<br><p> The DBSnapshotIdentifier of the new DBSnapshot created when SkipFinalSnapshot is set to <code>false</code>.</p> <note>   <p>Specifying this parameter and also setting the SkipFinalShapshot parameter to true results in an error.</p>  </note>  <p>Constraints:</p>  <ul>   <li> <p>Must be 1 to 255 letters or numbers.</p> </li>   <li> <p>First character must be a letter</p> </li>   <li> <p>Cannot end with a hyphen or contain two consecutive hyphens</p> </li>   <li> <p>Cannot be specified when deleting a Read Replica.</p> </li>  </ul><br>
    /// - On success, responds with [`DeleteDbInstanceOutput`](crate::operation::delete_db_instance::DeleteDbInstanceOutput) with field(s):
    ///   - [`db_instance(Option<DbInstance>)`](crate::operation::delete_db_instance::DeleteDbInstanceOutput::db_instance): <p>Contains the details of an Amazon Neptune DB instance.</p>  <p>This data type is used as a response element in the <code>DescribeDBInstances</code> action.</p>
    /// - On failure, responds with [`SdkError<DeleteDBInstanceError>`](crate::operation::delete_db_instance::DeleteDBInstanceError)
    pub fn delete_db_instance(&self) -> crate::operation::delete_db_instance::builders::DeleteDBInstanceFluentBuilder {
        crate::operation::delete_db_instance::builders::DeleteDBInstanceFluentBuilder::new(self.handle.clone())
    }
}
