// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeOrderableDBInstanceOptions`](crate::operation::describe_orderable_db_instance_options::builders::DescribeOrderableDBInstanceOptionsFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::describe_orderable_db_instance_options::builders::DescribeOrderableDBInstanceOptionsFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`engine(impl Into<String>)`](crate::operation::describe_orderable_db_instance_options::builders::DescribeOrderableDBInstanceOptionsFluentBuilder::engine) / [`set_engine(Option<String>)`](crate::operation::describe_orderable_db_instance_options::builders::DescribeOrderableDBInstanceOptionsFluentBuilder::set_engine): <p>The name of the engine to retrieve DB instance options for.</p>
    ///   - [`engine_version(impl Into<String>)`](crate::operation::describe_orderable_db_instance_options::builders::DescribeOrderableDBInstanceOptionsFluentBuilder::engine_version) / [`set_engine_version(Option<String>)`](crate::operation::describe_orderable_db_instance_options::builders::DescribeOrderableDBInstanceOptionsFluentBuilder::set_engine_version): <p>The engine version filter value. Specify this parameter to show only the available offerings matching the specified engine version.</p>
    ///   - [`db_instance_class(impl Into<String>)`](crate::operation::describe_orderable_db_instance_options::builders::DescribeOrderableDBInstanceOptionsFluentBuilder::db_instance_class) / [`set_db_instance_class(Option<String>)`](crate::operation::describe_orderable_db_instance_options::builders::DescribeOrderableDBInstanceOptionsFluentBuilder::set_db_instance_class): <p>The DB instance class filter value. Specify this parameter to show only the available offerings matching the specified DB instance class.</p>
    ///   - [`license_model(impl Into<String>)`](crate::operation::describe_orderable_db_instance_options::builders::DescribeOrderableDBInstanceOptionsFluentBuilder::license_model) / [`set_license_model(Option<String>)`](crate::operation::describe_orderable_db_instance_options::builders::DescribeOrderableDBInstanceOptionsFluentBuilder::set_license_model): <p>The license model filter value. Specify this parameter to show only the available offerings matching the specified license model.</p>
    ///   - [`vpc(bool)`](crate::operation::describe_orderable_db_instance_options::builders::DescribeOrderableDBInstanceOptionsFluentBuilder::vpc) / [`set_vpc(Option<bool>)`](crate::operation::describe_orderable_db_instance_options::builders::DescribeOrderableDBInstanceOptionsFluentBuilder::set_vpc): <p>The VPC filter value. Specify this parameter to show only the available VPC or non-VPC offerings.</p>
    ///   - [`filters(Vec<Filter>)`](crate::operation::describe_orderable_db_instance_options::builders::DescribeOrderableDBInstanceOptionsFluentBuilder::filters) / [`set_filters(Option<Vec<Filter>>)`](crate::operation::describe_orderable_db_instance_options::builders::DescribeOrderableDBInstanceOptionsFluentBuilder::set_filters): <p>This parameter is not currently supported.</p>
    ///   - [`max_records(i32)`](crate::operation::describe_orderable_db_instance_options::builders::DescribeOrderableDBInstanceOptionsFluentBuilder::max_records) / [`set_max_records(Option<i32>)`](crate::operation::describe_orderable_db_instance_options::builders::DescribeOrderableDBInstanceOptionsFluentBuilder::set_max_records): <p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved.</p>  <p>Default: 100</p>  <p>Constraints: Minimum 20, maximum 100.</p>
    ///   - [`marker(impl Into<String>)`](crate::operation::describe_orderable_db_instance_options::builders::DescribeOrderableDBInstanceOptionsFluentBuilder::marker) / [`set_marker(Option<String>)`](crate::operation::describe_orderable_db_instance_options::builders::DescribeOrderableDBInstanceOptionsFluentBuilder::set_marker): <p> An optional pagination token provided by a previous DescribeOrderableDBInstanceOptions request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code> .</p>
    /// - On success, responds with [`DescribeOrderableDbInstanceOptionsOutput`](crate::operation::describe_orderable_db_instance_options::DescribeOrderableDbInstanceOptionsOutput) with field(s):
    ///   - [`orderable_db_instance_options(Option<Vec<OrderableDbInstanceOption>>)`](crate::operation::describe_orderable_db_instance_options::DescribeOrderableDbInstanceOptionsOutput::orderable_db_instance_options): <p>An <code>OrderableDBInstanceOption</code> structure containing information about orderable options for the DB instance.</p>
    ///   - [`marker(Option<String>)`](crate::operation::describe_orderable_db_instance_options::DescribeOrderableDbInstanceOptionsOutput::marker): <p> An optional pagination token provided by a previous OrderableDBInstanceOptions request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code> .</p>
    /// - On failure, responds with [`SdkError<DescribeOrderableDBInstanceOptionsError>`](crate::operation::describe_orderable_db_instance_options::DescribeOrderableDBInstanceOptionsError)
    pub fn describe_orderable_db_instance_options(&self) -> crate::operation::describe_orderable_db_instance_options::builders::DescribeOrderableDBInstanceOptionsFluentBuilder{
        crate::operation::describe_orderable_db_instance_options::builders::DescribeOrderableDBInstanceOptionsFluentBuilder::new(self.handle.clone())
    }
}
