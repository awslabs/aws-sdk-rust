// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateDBCluster`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`availability_zones(Vec<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::availability_zones) / [`set_availability_zones(Option<Vec<String>>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::set_availability_zones): <p>A list of EC2 Availability Zones that instances in the DB cluster can be created in.</p>
    ///   - [`backup_retention_period(i32)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::backup_retention_period) / [`set_backup_retention_period(Option<i32>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::set_backup_retention_period): <p>The number of days for which automated backups are retained. You must specify a minimum value of 1.</p>  <p>Default: 1</p>  <p>Constraints:</p>  <ul>   <li> <p>Must be a value from 1 to 35</p> </li>  </ul>
    ///   - [`character_set_name(impl Into<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::character_set_name) / [`set_character_set_name(Option<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::set_character_set_name): <p> <i>(Not supported by Neptune)</i> </p>
    ///   - [`copy_tags_to_snapshot(bool)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::copy_tags_to_snapshot) / [`set_copy_tags_to_snapshot(Option<bool>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::set_copy_tags_to_snapshot): <p> <i>If set to <code>true</code>, tags are copied to any snapshot of the DB cluster that is created.</i> </p>
    ///   - [`database_name(impl Into<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::database_name) / [`set_database_name(Option<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::set_database_name): <p>The name for your database of up to 64 alpha-numeric characters. If you do not provide a name, Amazon Neptune will not create a database in the DB cluster you are creating.</p>
    ///   - [`db_cluster_identifier(impl Into<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::db_cluster_identifier) / [`set_db_cluster_identifier(Option<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::set_db_cluster_identifier): <p>The DB cluster identifier. This parameter is stored as a lowercase string.</p>  <p>Constraints:</p>  <ul>   <li> <p>Must contain from 1 to 63 letters, numbers, or hyphens.</p> </li>   <li> <p>First character must be a letter.</p> </li>   <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li>  </ul>  <p>Example: <code>my-cluster1</code> </p>
    ///   - [`db_cluster_parameter_group_name(impl Into<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::db_cluster_parameter_group_name) / [`set_db_cluster_parameter_group_name(Option<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::set_db_cluster_parameter_group_name): <p> The name of the DB cluster parameter group to associate with this DB cluster. If this argument is omitted, the default is used.</p>  <p>Constraints:</p>  <ul>   <li> <p>If supplied, must match the name of an existing DBClusterParameterGroup.</p> </li>  </ul>
    ///   - [`vpc_security_group_ids(Vec<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::vpc_security_group_ids) / [`set_vpc_security_group_ids(Option<Vec<String>>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::set_vpc_security_group_ids): <p>A list of EC2 VPC security groups to associate with this DB cluster.</p>
    ///   - [`db_subnet_group_name(impl Into<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::db_subnet_group_name) / [`set_db_subnet_group_name(Option<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::set_db_subnet_group_name): <p>A DB subnet group to associate with this DB cluster.</p>  <p>Constraints: Must match the name of an existing DBSubnetGroup. Must not be default.</p>  <p>Example: <code>mySubnetgroup</code> </p>
    ///   - [`engine(impl Into<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::engine) / [`set_engine(Option<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::set_engine): <p>The name of the database engine to be used for this DB cluster.</p>  <p>Valid Values: <code>neptune</code> </p>
    ///   - [`engine_version(impl Into<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::engine_version) / [`set_engine_version(Option<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::set_engine_version): <p>The version number of the database engine to use for the new DB cluster.</p>  <p>Example: <code>1.0.2.1</code> </p>
    ///   - [`port(i32)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::port) / [`set_port(Option<i32>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::set_port): <p>The port number on which the instances in the DB cluster accept connections.</p>  <p> Default: <code>8182</code> </p>
    ///   - [`master_username(impl Into<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::master_username) / [`set_master_username(Option<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::set_master_username): <p>Not supported by Neptune.</p>
    ///   - [`master_user_password(impl Into<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::master_user_password) / [`set_master_user_password(Option<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::set_master_user_password): <p>Not supported by Neptune.</p>
    ///   - [`option_group_name(impl Into<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::option_group_name) / [`set_option_group_name(Option<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::set_option_group_name): <p> <i>(Not supported by Neptune)</i> </p>
    ///   - [`preferred_backup_window(impl Into<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::preferred_backup_window) / [`set_preferred_backup_window(Option<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::set_preferred_backup_window): <p>The daily time range during which automated backups are created if automated backups are enabled using the <code>BackupRetentionPeriod</code> parameter.</p>  <p>The default is a 30-minute window selected at random from an 8-hour block of time for each Amazon Region. To see the time blocks available, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/AdjustingTheMaintenanceWindow.html"> Adjusting the Preferred Maintenance Window</a> in the <i>Amazon Neptune User Guide.</i> </p>  <p>Constraints:</p>  <ul>   <li> <p>Must be in the format <code>hh24:mi-hh24:mi</code>.</p> </li>   <li> <p>Must be in Universal Coordinated Time (UTC).</p> </li>   <li> <p>Must not conflict with the preferred maintenance window.</p> </li>   <li> <p>Must be at least 30 minutes.</p> </li>  </ul>
    ///   - [`preferred_maintenance_window(impl Into<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::preferred_maintenance_window) / [`set_preferred_maintenance_window(Option<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::set_preferred_maintenance_window): <p>The weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).</p>  <p>Format: <code>ddd:hh24:mi-ddd:hh24:mi</code> </p>  <p>The default is a 30-minute window selected at random from an 8-hour block of time for each Amazon Region, occurring on a random day of the week. To see the time blocks available, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/AdjustingTheMaintenanceWindow.html"> Adjusting the Preferred Maintenance Window</a> in the <i>Amazon Neptune User Guide.</i> </p>  <p>Valid Days: Mon, Tue, Wed, Thu, Fri, Sat, Sun.</p>  <p>Constraints: Minimum 30-minute window.</p>
    ///   - [`replication_source_identifier(impl Into<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::replication_source_identifier) / [`set_replication_source_identifier(Option<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::set_replication_source_identifier): <p>The Amazon Resource Name (ARN) of the source DB instance or DB cluster if this DB cluster is created as a Read Replica.</p>
    ///   - [`tags(Vec<Tag>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::tags) / [`set_tags(Option<Vec<Tag>>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::set_tags): <p>The tags to assign to the new DB cluster.</p>
    ///   - [`storage_encrypted(bool)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::storage_encrypted) / [`set_storage_encrypted(Option<bool>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::set_storage_encrypted): <p>Specifies whether the DB cluster is encrypted.</p>
    ///   - [`kms_key_id(impl Into<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::kms_key_id) / [`set_kms_key_id(Option<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::set_kms_key_id): <p>The Amazon KMS key identifier for an encrypted DB cluster.</p>  <p>The KMS key identifier is the Amazon Resource Name (ARN) for the KMS encryption key. If you are creating a DB cluster with the same Amazon account that owns the KMS encryption key used to encrypt the new DB cluster, then you can use the KMS key alias instead of the ARN for the KMS encryption key.</p>  <p>If an encryption key is not specified in <code>KmsKeyId</code>:</p>  <ul>   <li> <p>If <code>ReplicationSourceIdentifier</code> identifies an encrypted source, then Amazon Neptune will use the encryption key used to encrypt the source. Otherwise, Amazon Neptune will use your default encryption key.</p> </li>   <li> <p>If the <code>StorageEncrypted</code> parameter is true and <code>ReplicationSourceIdentifier</code> is not specified, then Amazon Neptune will use your default encryption key.</p> </li>  </ul>  <p>Amazon KMS creates the default encryption key for your Amazon account. Your Amazon account has a different default encryption key for each Amazon Region.</p>  <p>If you create a Read Replica of an encrypted DB cluster in another Amazon Region, you must set <code>KmsKeyId</code> to a KMS key ID that is valid in the destination Amazon Region. This key is used to encrypt the Read Replica in that Amazon Region.</p>
    ///   - [`pre_signed_url(impl Into<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::pre_signed_url) / [`set_pre_signed_url(Option<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::set_pre_signed_url): <p>This parameter is not currently supported.</p>
    ///   - [`enable_iam_database_authentication(bool)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::enable_iam_database_authentication) / [`set_enable_iam_database_authentication(Option<bool>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::set_enable_iam_database_authentication): <p>If set to <code>true</code>, enables Amazon Identity and Access Management (IAM) authentication for the entire DB cluster (this cannot be set at an instance level).</p>  <p>Default: <code>false</code>.</p>
    ///   - [`enable_cloudwatch_logs_exports(Vec<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::enable_cloudwatch_logs_exports) / [`set_enable_cloudwatch_logs_exports(Option<Vec<String>>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::set_enable_cloudwatch_logs_exports): <p>The list of log types that need to be enabled for exporting to CloudWatch Logs.</p>
    ///   - [`deletion_protection(bool)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::deletion_protection) / [`set_deletion_protection(Option<bool>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::set_deletion_protection): <p>A value that indicates whether the DB cluster has deletion protection enabled. The database can't be deleted when deletion protection is enabled. By default, deletion protection is enabled.</p>
    ///   - [`serverless_v2_scaling_configuration(ServerlessV2ScalingConfiguration)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::serverless_v2_scaling_configuration) / [`set_serverless_v2_scaling_configuration(Option<ServerlessV2ScalingConfiguration>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::set_serverless_v2_scaling_configuration): <p>Contains the scaling configuration of a Neptune Serverless DB cluster.</p>  <p>For more information, see <a href="https://docs.aws.amazon.com/neptune/latest/userguide/neptune-serverless-using.html">Using Amazon Neptune Serverless</a> in the <i>Amazon Neptune User Guide</i>.</p>
    ///   - [`global_cluster_identifier(impl Into<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::global_cluster_identifier) / [`set_global_cluster_identifier(Option<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::set_global_cluster_identifier): <p>The ID of the Neptune global database to which this new DB cluster should be added.</p>
    /// - On success, responds with [`CreateDbClusterOutput`](crate::operation::create_db_cluster::CreateDbClusterOutput) with field(s):
    ///   - [`db_cluster(Option<DbCluster>)`](crate::operation::create_db_cluster::CreateDbClusterOutput::db_cluster): <p>Contains the details of an Amazon Neptune DB cluster.</p>  <p>This data type is used as a response element in the <code>DescribeDBClusters</code> action.</p>
    /// - On failure, responds with [`SdkError<CreateDBClusterError>`](crate::operation::create_db_cluster::CreateDBClusterError)
    pub fn create_db_cluster(
        &self,
    ) -> crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder {
        crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
