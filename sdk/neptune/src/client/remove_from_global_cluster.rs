// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`RemoveFromGlobalCluster`](crate::operation::remove_from_global_cluster::builders::RemoveFromGlobalClusterFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`global_cluster_identifier(impl Into<String>)`](crate::operation::remove_from_global_cluster::builders::RemoveFromGlobalClusterFluentBuilder::global_cluster_identifier) / [`set_global_cluster_identifier(Option<String>)`](crate::operation::remove_from_global_cluster::builders::RemoveFromGlobalClusterFluentBuilder::set_global_cluster_identifier): <p>The identifier of the Neptune global database from which to detach the specified Neptune DB cluster.</p>
    ///   - [`db_cluster_identifier(impl Into<String>)`](crate::operation::remove_from_global_cluster::builders::RemoveFromGlobalClusterFluentBuilder::db_cluster_identifier) / [`set_db_cluster_identifier(Option<String>)`](crate::operation::remove_from_global_cluster::builders::RemoveFromGlobalClusterFluentBuilder::set_db_cluster_identifier): <p>The Amazon Resource Name (ARN) identifying the cluster to be detached from the Neptune global database cluster.</p>
    /// - On success, responds with [`RemoveFromGlobalClusterOutput`](crate::operation::remove_from_global_cluster::RemoveFromGlobalClusterOutput) with field(s):
    ///   - [`global_cluster(Option<GlobalCluster>)`](crate::operation::remove_from_global_cluster::RemoveFromGlobalClusterOutput::global_cluster): <p>Contains the details of an Amazon Neptune global database.</p>  <p>This data type is used as a response element for the <code>CreateGlobalCluster</code>, <code>DescribeGlobalClusters</code>, <code>ModifyGlobalCluster</code>, <code>DeleteGlobalCluster</code>, <code>FailoverGlobalCluster</code>, and <code>RemoveFromGlobalCluster</code> actions.</p>
    /// - On failure, responds with [`SdkError<RemoveFromGlobalClusterError>`](crate::operation::remove_from_global_cluster::RemoveFromGlobalClusterError)
    pub fn remove_from_global_cluster(
        &self,
    ) -> crate::operation::remove_from_global_cluster::builders::RemoveFromGlobalClusterFluentBuilder
    {
        crate::operation::remove_from_global_cluster::builders::RemoveFromGlobalClusterFluentBuilder::new(self.handle.clone())
    }
}
