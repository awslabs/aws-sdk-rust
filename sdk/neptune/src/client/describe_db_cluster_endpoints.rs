// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeDBClusterEndpoints`](crate::operation::describe_db_cluster_endpoints::builders::DescribeDBClusterEndpointsFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::describe_db_cluster_endpoints::builders::DescribeDBClusterEndpointsFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`db_cluster_identifier(impl Into<String>)`](crate::operation::describe_db_cluster_endpoints::builders::DescribeDBClusterEndpointsFluentBuilder::db_cluster_identifier) / [`set_db_cluster_identifier(Option<String>)`](crate::operation::describe_db_cluster_endpoints::builders::DescribeDBClusterEndpointsFluentBuilder::set_db_cluster_identifier): <p>The DB cluster identifier of the DB cluster associated with the endpoint. This parameter is stored as a lowercase string.</p>
    ///   - [`db_cluster_endpoint_identifier(impl Into<String>)`](crate::operation::describe_db_cluster_endpoints::builders::DescribeDBClusterEndpointsFluentBuilder::db_cluster_endpoint_identifier) / [`set_db_cluster_endpoint_identifier(Option<String>)`](crate::operation::describe_db_cluster_endpoints::builders::DescribeDBClusterEndpointsFluentBuilder::set_db_cluster_endpoint_identifier): <p>The identifier of the endpoint to describe. This parameter is stored as a lowercase string.</p>
    ///   - [`filters(Vec<Filter>)`](crate::operation::describe_db_cluster_endpoints::builders::DescribeDBClusterEndpointsFluentBuilder::filters) / [`set_filters(Option<Vec<Filter>>)`](crate::operation::describe_db_cluster_endpoints::builders::DescribeDBClusterEndpointsFluentBuilder::set_filters): <p>A set of name-value pairs that define which endpoints to include in the output. The filters are specified as name-value pairs, in the format <code>Name=<i>endpoint_type</i>,Values=<i>endpoint_type1</i>,<i>endpoint_type2</i>,...</code>. <code>Name</code> can be one of: <code>db-cluster-endpoint-type</code>, <code>db-cluster-endpoint-custom-type</code>, <code>db-cluster-endpoint-id</code>, <code>db-cluster-endpoint-status</code>. <code>Values</code> for the <code> db-cluster-endpoint-type</code> filter can be one or more of: <code>reader</code>, <code>writer</code>, <code>custom</code>. <code>Values</code> for the <code>db-cluster-endpoint-custom-type</code> filter can be one or more of: <code>reader</code>, <code>any</code>. <code>Values</code> for the <code>db-cluster-endpoint-status</code> filter can be one or more of: <code>available</code>, <code>creating</code>, <code>deleting</code>, <code>inactive</code>, <code>modifying</code>. </p>
    ///   - [`max_records(i32)`](crate::operation::describe_db_cluster_endpoints::builders::DescribeDBClusterEndpointsFluentBuilder::max_records) / [`set_max_records(Option<i32>)`](crate::operation::describe_db_cluster_endpoints::builders::DescribeDBClusterEndpointsFluentBuilder::set_max_records): <p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so you can retrieve the remaining results. </p>  <p>Default: 100</p>  <p>Constraints: Minimum 20, maximum 100.</p>
    ///   - [`marker(impl Into<String>)`](crate::operation::describe_db_cluster_endpoints::builders::DescribeDBClusterEndpointsFluentBuilder::marker) / [`set_marker(Option<String>)`](crate::operation::describe_db_cluster_endpoints::builders::DescribeDBClusterEndpointsFluentBuilder::set_marker): <p> An optional pagination token provided by a previous <code>DescribeDBClusterEndpoints</code> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. </p>
    /// - On success, responds with [`DescribeDbClusterEndpointsOutput`](crate::operation::describe_db_cluster_endpoints::DescribeDbClusterEndpointsOutput) with field(s):
    ///   - [`marker(Option<String>)`](crate::operation::describe_db_cluster_endpoints::DescribeDbClusterEndpointsOutput::marker): <p> An optional pagination token provided by a previous <code>DescribeDBClusterEndpoints</code> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. </p>
    ///   - [`db_cluster_endpoints(Option<Vec<DbClusterEndpoint>>)`](crate::operation::describe_db_cluster_endpoints::DescribeDbClusterEndpointsOutput::db_cluster_endpoints): <p>Contains the details of the endpoints associated with the cluster and matching any filter conditions.</p>
    /// - On failure, responds with [`SdkError<DescribeDBClusterEndpointsError>`](crate::operation::describe_db_cluster_endpoints::DescribeDBClusterEndpointsError)
    pub fn describe_db_cluster_endpoints(&self) -> crate::operation::describe_db_cluster_endpoints::builders::DescribeDBClusterEndpointsFluentBuilder{
        crate::operation::describe_db_cluster_endpoints::builders::DescribeDBClusterEndpointsFluentBuilder::new(self.handle.clone())
    }
}
