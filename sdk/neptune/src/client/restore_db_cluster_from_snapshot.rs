// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`RestoreDBClusterFromSnapshot`](crate::operation::restore_db_cluster_from_snapshot::builders::RestoreDBClusterFromSnapshotFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`availability_zones(impl Into<String>)`](crate::operation::restore_db_cluster_from_snapshot::builders::RestoreDBClusterFromSnapshotFluentBuilder::availability_zones) / [`set_availability_zones(Option<Vec::<String>>)`](crate::operation::restore_db_cluster_from_snapshot::builders::RestoreDBClusterFromSnapshotFluentBuilder::set_availability_zones):<br>required: **false**<br><p>Provides the list of EC2 Availability Zones that instances in the restored DB cluster can be created in.</p><br>
    ///   - [`db_cluster_identifier(impl Into<String>)`](crate::operation::restore_db_cluster_from_snapshot::builders::RestoreDBClusterFromSnapshotFluentBuilder::db_cluster_identifier) / [`set_db_cluster_identifier(Option<String>)`](crate::operation::restore_db_cluster_from_snapshot::builders::RestoreDBClusterFromSnapshotFluentBuilder::set_db_cluster_identifier):<br>required: **true**<br><p>The name of the DB cluster to create from the DB snapshot or DB cluster snapshot. This parameter isn't case-sensitive.</p>  <p>Constraints:</p>  <ul>   <li> <p>Must contain from 1 to 63 letters, numbers, or hyphens</p> </li>   <li> <p>First character must be a letter</p> </li>   <li> <p>Cannot end with a hyphen or contain two consecutive hyphens</p> </li>  </ul>  <p>Example: <code>my-snapshot-id</code> </p><br>
    ///   - [`snapshot_identifier(impl Into<String>)`](crate::operation::restore_db_cluster_from_snapshot::builders::RestoreDBClusterFromSnapshotFluentBuilder::snapshot_identifier) / [`set_snapshot_identifier(Option<String>)`](crate::operation::restore_db_cluster_from_snapshot::builders::RestoreDBClusterFromSnapshotFluentBuilder::set_snapshot_identifier):<br>required: **true**<br><p>The identifier for the DB snapshot or DB cluster snapshot to restore from.</p>  <p>You can use either the name or the Amazon Resource Name (ARN) to specify a DB cluster snapshot. However, you can use only the ARN to specify a DB snapshot.</p>  <p>Constraints:</p>  <ul>   <li> <p>Must match the identifier of an existing Snapshot.</p> </li>  </ul><br>
    ///   - [`engine(impl Into<String>)`](crate::operation::restore_db_cluster_from_snapshot::builders::RestoreDBClusterFromSnapshotFluentBuilder::engine) / [`set_engine(Option<String>)`](crate::operation::restore_db_cluster_from_snapshot::builders::RestoreDBClusterFromSnapshotFluentBuilder::set_engine):<br>required: **true**<br><p>The database engine to use for the new DB cluster.</p>  <p>Default: The same as source</p>  <p>Constraint: Must be compatible with the engine of the source</p><br>
    ///   - [`engine_version(impl Into<String>)`](crate::operation::restore_db_cluster_from_snapshot::builders::RestoreDBClusterFromSnapshotFluentBuilder::engine_version) / [`set_engine_version(Option<String>)`](crate::operation::restore_db_cluster_from_snapshot::builders::RestoreDBClusterFromSnapshotFluentBuilder::set_engine_version):<br>required: **false**<br><p>The version of the database engine to use for the new DB cluster.</p><br>
    ///   - [`port(i32)`](crate::operation::restore_db_cluster_from_snapshot::builders::RestoreDBClusterFromSnapshotFluentBuilder::port) / [`set_port(Option<i32>)`](crate::operation::restore_db_cluster_from_snapshot::builders::RestoreDBClusterFromSnapshotFluentBuilder::set_port):<br>required: **false**<br><p>The port number on which the new DB cluster accepts connections.</p>  <p>Constraints: Value must be <code>1150-65535</code> </p>  <p>Default: The same port as the original DB cluster.</p><br>
    ///   - [`db_subnet_group_name(impl Into<String>)`](crate::operation::restore_db_cluster_from_snapshot::builders::RestoreDBClusterFromSnapshotFluentBuilder::db_subnet_group_name) / [`set_db_subnet_group_name(Option<String>)`](crate::operation::restore_db_cluster_from_snapshot::builders::RestoreDBClusterFromSnapshotFluentBuilder::set_db_subnet_group_name):<br>required: **false**<br><p>The name of the DB subnet group to use for the new DB cluster.</p>  <p>Constraints: If supplied, must match the name of an existing DBSubnetGroup.</p>  <p>Example: <code>mySubnetgroup</code> </p><br>
    ///   - [`database_name(impl Into<String>)`](crate::operation::restore_db_cluster_from_snapshot::builders::RestoreDBClusterFromSnapshotFluentBuilder::database_name) / [`set_database_name(Option<String>)`](crate::operation::restore_db_cluster_from_snapshot::builders::RestoreDBClusterFromSnapshotFluentBuilder::set_database_name):<br>required: **false**<br><p>Not supported.</p><br>
    ///   - [`option_group_name(impl Into<String>)`](crate::operation::restore_db_cluster_from_snapshot::builders::RestoreDBClusterFromSnapshotFluentBuilder::option_group_name) / [`set_option_group_name(Option<String>)`](crate::operation::restore_db_cluster_from_snapshot::builders::RestoreDBClusterFromSnapshotFluentBuilder::set_option_group_name):<br>required: **false**<br><p> <i>(Not supported by Neptune)</i> </p><br>
    ///   - [`vpc_security_group_ids(impl Into<String>)`](crate::operation::restore_db_cluster_from_snapshot::builders::RestoreDBClusterFromSnapshotFluentBuilder::vpc_security_group_ids) / [`set_vpc_security_group_ids(Option<Vec::<String>>)`](crate::operation::restore_db_cluster_from_snapshot::builders::RestoreDBClusterFromSnapshotFluentBuilder::set_vpc_security_group_ids):<br>required: **false**<br><p>A list of VPC security groups that the new DB cluster will belong to.</p><br>
    ///   - [`tags(Tag)`](crate::operation::restore_db_cluster_from_snapshot::builders::RestoreDBClusterFromSnapshotFluentBuilder::tags) / [`set_tags(Option<Vec::<Tag>>)`](crate::operation::restore_db_cluster_from_snapshot::builders::RestoreDBClusterFromSnapshotFluentBuilder::set_tags):<br>required: **false**<br><p>The tags to be assigned to the restored DB cluster.</p><br>
    ///   - [`kms_key_id(impl Into<String>)`](crate::operation::restore_db_cluster_from_snapshot::builders::RestoreDBClusterFromSnapshotFluentBuilder::kms_key_id) / [`set_kms_key_id(Option<String>)`](crate::operation::restore_db_cluster_from_snapshot::builders::RestoreDBClusterFromSnapshotFluentBuilder::set_kms_key_id):<br>required: **false**<br><p>The Amazon KMS key identifier to use when restoring an encrypted DB cluster from a DB snapshot or DB cluster snapshot.</p>  <p>The KMS key identifier is the Amazon Resource Name (ARN) for the KMS encryption key. If you are restoring a DB cluster with the same Amazon account that owns the KMS encryption key used to encrypt the new DB cluster, then you can use the KMS key alias instead of the ARN for the KMS encryption key.</p>  <p>If you do not specify a value for the <code>KmsKeyId</code> parameter, then the following will occur:</p>  <ul>   <li> <p>If the DB snapshot or DB cluster snapshot in <code>SnapshotIdentifier</code> is encrypted, then the restored DB cluster is encrypted using the KMS key that was used to encrypt the DB snapshot or DB cluster snapshot.</p> </li>   <li> <p>If the DB snapshot or DB cluster snapshot in <code>SnapshotIdentifier</code> is not encrypted, then the restored DB cluster is not encrypted.</p> </li>  </ul><br>
    ///   - [`enable_iam_database_authentication(bool)`](crate::operation::restore_db_cluster_from_snapshot::builders::RestoreDBClusterFromSnapshotFluentBuilder::enable_iam_database_authentication) / [`set_enable_iam_database_authentication(Option<bool>)`](crate::operation::restore_db_cluster_from_snapshot::builders::RestoreDBClusterFromSnapshotFluentBuilder::set_enable_iam_database_authentication):<br>required: **false**<br><p>True to enable mapping of Amazon Identity and Access Management (IAM) accounts to database accounts, and otherwise false.</p>  <p>Default: <code>false</code> </p><br>
    ///   - [`enable_cloudwatch_logs_exports(impl Into<String>)`](crate::operation::restore_db_cluster_from_snapshot::builders::RestoreDBClusterFromSnapshotFluentBuilder::enable_cloudwatch_logs_exports) / [`set_enable_cloudwatch_logs_exports(Option<Vec::<String>>)`](crate::operation::restore_db_cluster_from_snapshot::builders::RestoreDBClusterFromSnapshotFluentBuilder::set_enable_cloudwatch_logs_exports):<br>required: **false**<br><p>The list of logs that the restored DB cluster is to export to Amazon CloudWatch Logs.</p><br>
    ///   - [`db_cluster_parameter_group_name(impl Into<String>)`](crate::operation::restore_db_cluster_from_snapshot::builders::RestoreDBClusterFromSnapshotFluentBuilder::db_cluster_parameter_group_name) / [`set_db_cluster_parameter_group_name(Option<String>)`](crate::operation::restore_db_cluster_from_snapshot::builders::RestoreDBClusterFromSnapshotFluentBuilder::set_db_cluster_parameter_group_name):<br>required: **false**<br><p>The name of the DB cluster parameter group to associate with the new DB cluster.</p>  <p>Constraints:</p>  <ul>   <li> <p>If supplied, must match the name of an existing DBClusterParameterGroup.</p> </li>  </ul><br>
    ///   - [`deletion_protection(bool)`](crate::operation::restore_db_cluster_from_snapshot::builders::RestoreDBClusterFromSnapshotFluentBuilder::deletion_protection) / [`set_deletion_protection(Option<bool>)`](crate::operation::restore_db_cluster_from_snapshot::builders::RestoreDBClusterFromSnapshotFluentBuilder::set_deletion_protection):<br>required: **false**<br><p>A value that indicates whether the DB cluster has deletion protection enabled. The database can't be deleted when deletion protection is enabled. By default, deletion protection is disabled. </p><br>
    ///   - [`copy_tags_to_snapshot(bool)`](crate::operation::restore_db_cluster_from_snapshot::builders::RestoreDBClusterFromSnapshotFluentBuilder::copy_tags_to_snapshot) / [`set_copy_tags_to_snapshot(Option<bool>)`](crate::operation::restore_db_cluster_from_snapshot::builders::RestoreDBClusterFromSnapshotFluentBuilder::set_copy_tags_to_snapshot):<br>required: **false**<br><p> <i>If set to <code>true</code>, tags are copied to any snapshot of the restored DB cluster that is created.</i> </p><br>
    ///   - [`serverless_v2_scaling_configuration(ServerlessV2ScalingConfiguration)`](crate::operation::restore_db_cluster_from_snapshot::builders::RestoreDBClusterFromSnapshotFluentBuilder::serverless_v2_scaling_configuration) / [`set_serverless_v2_scaling_configuration(Option<ServerlessV2ScalingConfiguration>)`](crate::operation::restore_db_cluster_from_snapshot::builders::RestoreDBClusterFromSnapshotFluentBuilder::set_serverless_v2_scaling_configuration):<br>required: **false**<br><p>Contains the scaling configuration of a Neptune Serverless DB cluster.</p>  <p>For more information, see <a href="https://docs.aws.amazon.com/neptune/latest/userguide/neptune-serverless-using.html">Using Amazon Neptune Serverless</a> in the <i>Amazon Neptune User Guide</i>.</p><br>
    /// - On success, responds with [`RestoreDbClusterFromSnapshotOutput`](crate::operation::restore_db_cluster_from_snapshot::RestoreDbClusterFromSnapshotOutput) with field(s):
    ///   - [`db_cluster(Option<DbCluster>)`](crate::operation::restore_db_cluster_from_snapshot::RestoreDbClusterFromSnapshotOutput::db_cluster): <p>Contains the details of an Amazon Neptune DB cluster.</p>  <p>This data type is used as a response element in the <code>DescribeDBClusters</code>.</p>
    /// - On failure, responds with [`SdkError<RestoreDBClusterFromSnapshotError>`](crate::operation::restore_db_cluster_from_snapshot::RestoreDBClusterFromSnapshotError)
    pub fn restore_db_cluster_from_snapshot(
        &self,
    ) -> crate::operation::restore_db_cluster_from_snapshot::builders::RestoreDBClusterFromSnapshotFluentBuilder {
        crate::operation::restore_db_cluster_from_snapshot::builders::RestoreDBClusterFromSnapshotFluentBuilder::new(self.handle.clone())
    }
}
