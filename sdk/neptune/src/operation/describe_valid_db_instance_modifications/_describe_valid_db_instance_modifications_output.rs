// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DescribeValidDbInstanceModificationsOutput {
    /// <p>Information about valid modifications that you can make to your DB instance. Contains the result of a successful call to the <code>DescribeValidDBInstanceModifications</code> action. You can use this information when you call <code>ModifyDBInstance</code>. </p>
    #[doc(hidden)]
    pub valid_db_instance_modifications_message:
        std::option::Option<crate::types::ValidDbInstanceModificationsMessage>,
    _request_id: Option<String>,
}
impl DescribeValidDbInstanceModificationsOutput {
    /// <p>Information about valid modifications that you can make to your DB instance. Contains the result of a successful call to the <code>DescribeValidDBInstanceModifications</code> action. You can use this information when you call <code>ModifyDBInstance</code>. </p>
    pub fn valid_db_instance_modifications_message(
        &self,
    ) -> std::option::Option<&crate::types::ValidDbInstanceModificationsMessage> {
        self.valid_db_instance_modifications_message.as_ref()
    }
}
impl aws_http::request_id::RequestId for DescribeValidDbInstanceModificationsOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl DescribeValidDbInstanceModificationsOutput {
    /// Creates a new builder-style object to manufacture [`DescribeValidDbInstanceModificationsOutput`](crate::operation::describe_valid_db_instance_modifications::DescribeValidDbInstanceModificationsOutput).
    pub fn builder() -> crate::operation::describe_valid_db_instance_modifications::builders::DescribeValidDbInstanceModificationsOutputBuilder{
        crate::operation::describe_valid_db_instance_modifications::builders::DescribeValidDbInstanceModificationsOutputBuilder::default()
    }
}

/// A builder for [`DescribeValidDbInstanceModificationsOutput`](crate::operation::describe_valid_db_instance_modifications::DescribeValidDbInstanceModificationsOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DescribeValidDbInstanceModificationsOutputBuilder {
    pub(crate) valid_db_instance_modifications_message:
        std::option::Option<crate::types::ValidDbInstanceModificationsMessage>,
    _request_id: Option<String>,
}
impl DescribeValidDbInstanceModificationsOutputBuilder {
    /// <p>Information about valid modifications that you can make to your DB instance. Contains the result of a successful call to the <code>DescribeValidDBInstanceModifications</code> action. You can use this information when you call <code>ModifyDBInstance</code>. </p>
    pub fn valid_db_instance_modifications_message(
        mut self,
        input: crate::types::ValidDbInstanceModificationsMessage,
    ) -> Self {
        self.valid_db_instance_modifications_message = Some(input);
        self
    }
    /// <p>Information about valid modifications that you can make to your DB instance. Contains the result of a successful call to the <code>DescribeValidDBInstanceModifications</code> action. You can use this information when you call <code>ModifyDBInstance</code>. </p>
    pub fn set_valid_db_instance_modifications_message(
        mut self,
        input: std::option::Option<crate::types::ValidDbInstanceModificationsMessage>,
    ) -> Self {
        self.valid_db_instance_modifications_message = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`DescribeValidDbInstanceModificationsOutput`](crate::operation::describe_valid_db_instance_modifications::DescribeValidDbInstanceModificationsOutput).
    pub fn build(self) -> crate::operation::describe_valid_db_instance_modifications::DescribeValidDbInstanceModificationsOutput{
        crate::operation::describe_valid_db_instance_modifications::DescribeValidDbInstanceModificationsOutput {
            valid_db_instance_modifications_message: self.valid_db_instance_modifications_message
            ,
            _request_id: self._request_id,
        }
    }
}
