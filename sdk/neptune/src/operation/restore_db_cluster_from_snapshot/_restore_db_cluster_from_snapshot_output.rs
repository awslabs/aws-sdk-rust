// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct RestoreDbClusterFromSnapshotOutput {
    /// <p>Contains the details of an Amazon Neptune DB cluster.</p>
    /// <p>This data type is used as a response element in the <code>DescribeDBClusters</code>.</p>
    pub db_cluster: ::std::option::Option<crate::types::DbCluster>,
    _request_id: Option<String>,
}
impl RestoreDbClusterFromSnapshotOutput {
    /// <p>Contains the details of an Amazon Neptune DB cluster.</p>
    /// <p>This data type is used as a response element in the <code>DescribeDBClusters</code>.</p>
    pub fn db_cluster(&self) -> ::std::option::Option<&crate::types::DbCluster> {
        self.db_cluster.as_ref()
    }
}
impl ::aws_http::request_id::RequestId for RestoreDbClusterFromSnapshotOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl RestoreDbClusterFromSnapshotOutput {
    /// Creates a new builder-style object to manufacture [`RestoreDbClusterFromSnapshotOutput`](crate::operation::restore_db_cluster_from_snapshot::RestoreDbClusterFromSnapshotOutput).
    pub fn builder() -> crate::operation::restore_db_cluster_from_snapshot::builders::RestoreDbClusterFromSnapshotOutputBuilder {
        crate::operation::restore_db_cluster_from_snapshot::builders::RestoreDbClusterFromSnapshotOutputBuilder::default()
    }
}

/// A builder for [`RestoreDbClusterFromSnapshotOutput`](crate::operation::restore_db_cluster_from_snapshot::RestoreDbClusterFromSnapshotOutput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct RestoreDbClusterFromSnapshotOutputBuilder {
    pub(crate) db_cluster: ::std::option::Option<crate::types::DbCluster>,
    _request_id: Option<String>,
}
impl RestoreDbClusterFromSnapshotOutputBuilder {
    /// <p>Contains the details of an Amazon Neptune DB cluster.</p>
    /// <p>This data type is used as a response element in the <code>DescribeDBClusters</code>.</p>
    pub fn db_cluster(mut self, input: crate::types::DbCluster) -> Self {
        self.db_cluster = ::std::option::Option::Some(input);
        self
    }
    /// <p>Contains the details of an Amazon Neptune DB cluster.</p>
    /// <p>This data type is used as a response element in the <code>DescribeDBClusters</code>.</p>
    pub fn set_db_cluster(mut self, input: ::std::option::Option<crate::types::DbCluster>) -> Self {
        self.db_cluster = input;
        self
    }
    /// <p>Contains the details of an Amazon Neptune DB cluster.</p>
    /// <p>This data type is used as a response element in the <code>DescribeDBClusters</code>.</p>
    pub fn get_db_cluster(&self) -> &::std::option::Option<crate::types::DbCluster> {
        &self.db_cluster
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`RestoreDbClusterFromSnapshotOutput`](crate::operation::restore_db_cluster_from_snapshot::RestoreDbClusterFromSnapshotOutput).
    pub fn build(self) -> crate::operation::restore_db_cluster_from_snapshot::RestoreDbClusterFromSnapshotOutput {
        crate::operation::restore_db_cluster_from_snapshot::RestoreDbClusterFromSnapshotOutput {
            db_cluster: self.db_cluster,
            _request_id: self._request_id,
        }
    }
}
