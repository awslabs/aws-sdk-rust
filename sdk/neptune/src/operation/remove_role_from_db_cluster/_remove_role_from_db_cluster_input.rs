// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct RemoveRoleFromDbClusterInput {
    /// <p>The name of the DB cluster to disassociate the IAM role from.</p>
    pub db_cluster_identifier: ::std::option::Option<::std::string::String>,
    /// <p>The Amazon Resource Name (ARN) of the IAM role to disassociate from the DB cluster, for example <code>arn:aws:iam::123456789012:role/NeptuneAccessRole</code>.</p>
    pub role_arn: ::std::option::Option<::std::string::String>,
    /// <p>The name of the feature for the DB cluster that the IAM role is to be disassociated from. For the list of supported feature names, see <code>DescribeDBEngineVersions</code>.</p>
    pub feature_name: ::std::option::Option<::std::string::String>,
}
impl RemoveRoleFromDbClusterInput {
    /// <p>The name of the DB cluster to disassociate the IAM role from.</p>
    pub fn db_cluster_identifier(&self) -> ::std::option::Option<&str> {
        self.db_cluster_identifier.as_deref()
    }
    /// <p>The Amazon Resource Name (ARN) of the IAM role to disassociate from the DB cluster, for example <code>arn:aws:iam::123456789012:role/NeptuneAccessRole</code>.</p>
    pub fn role_arn(&self) -> ::std::option::Option<&str> {
        self.role_arn.as_deref()
    }
    /// <p>The name of the feature for the DB cluster that the IAM role is to be disassociated from. For the list of supported feature names, see <code>DescribeDBEngineVersions</code>.</p>
    pub fn feature_name(&self) -> ::std::option::Option<&str> {
        self.feature_name.as_deref()
    }
}
impl RemoveRoleFromDbClusterInput {
    /// Creates a new builder-style object to manufacture [`RemoveRoleFromDbClusterInput`](crate::operation::remove_role_from_db_cluster::RemoveRoleFromDbClusterInput).
    pub fn builder() -> crate::operation::remove_role_from_db_cluster::builders::RemoveRoleFromDbClusterInputBuilder {
        crate::operation::remove_role_from_db_cluster::builders::RemoveRoleFromDbClusterInputBuilder::default()
    }
}

/// A builder for [`RemoveRoleFromDbClusterInput`](crate::operation::remove_role_from_db_cluster::RemoveRoleFromDbClusterInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct RemoveRoleFromDbClusterInputBuilder {
    pub(crate) db_cluster_identifier: ::std::option::Option<::std::string::String>,
    pub(crate) role_arn: ::std::option::Option<::std::string::String>,
    pub(crate) feature_name: ::std::option::Option<::std::string::String>,
}
impl RemoveRoleFromDbClusterInputBuilder {
    /// <p>The name of the DB cluster to disassociate the IAM role from.</p>
    /// This field is required.
    pub fn db_cluster_identifier(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.db_cluster_identifier = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the DB cluster to disassociate the IAM role from.</p>
    pub fn set_db_cluster_identifier(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.db_cluster_identifier = input;
        self
    }
    /// <p>The name of the DB cluster to disassociate the IAM role from.</p>
    pub fn get_db_cluster_identifier(&self) -> &::std::option::Option<::std::string::String> {
        &self.db_cluster_identifier
    }
    /// <p>The Amazon Resource Name (ARN) of the IAM role to disassociate from the DB cluster, for example <code>arn:aws:iam::123456789012:role/NeptuneAccessRole</code>.</p>
    /// This field is required.
    pub fn role_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.role_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the IAM role to disassociate from the DB cluster, for example <code>arn:aws:iam::123456789012:role/NeptuneAccessRole</code>.</p>
    pub fn set_role_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.role_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the IAM role to disassociate from the DB cluster, for example <code>arn:aws:iam::123456789012:role/NeptuneAccessRole</code>.</p>
    pub fn get_role_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.role_arn
    }
    /// <p>The name of the feature for the DB cluster that the IAM role is to be disassociated from. For the list of supported feature names, see <code>DescribeDBEngineVersions</code>.</p>
    pub fn feature_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.feature_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the feature for the DB cluster that the IAM role is to be disassociated from. For the list of supported feature names, see <code>DescribeDBEngineVersions</code>.</p>
    pub fn set_feature_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.feature_name = input;
        self
    }
    /// <p>The name of the feature for the DB cluster that the IAM role is to be disassociated from. For the list of supported feature names, see <code>DescribeDBEngineVersions</code>.</p>
    pub fn get_feature_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.feature_name
    }
    /// Consumes the builder and constructs a [`RemoveRoleFromDbClusterInput`](crate::operation::remove_role_from_db_cluster::RemoveRoleFromDbClusterInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::remove_role_from_db_cluster::RemoveRoleFromDbClusterInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::remove_role_from_db_cluster::RemoveRoleFromDbClusterInput {
            db_cluster_identifier: self.db_cluster_identifier,
            role_arn: self.role_arn,
            feature_name: self.feature_name,
        })
    }
}
