// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DescribeDbClustersOutput {
    /// <p>A pagination token that can be used in a subsequent DescribeDBClusters request.</p>
    #[doc(hidden)]
    pub marker: std::option::Option<std::string::String>,
    /// <p>Contains a list of DB clusters for the user.</p>
    #[doc(hidden)]
    pub db_clusters: std::option::Option<std::vec::Vec<crate::types::DbCluster>>,
    _request_id: Option<String>,
}
impl DescribeDbClustersOutput {
    /// <p>A pagination token that can be used in a subsequent DescribeDBClusters request.</p>
    pub fn marker(&self) -> std::option::Option<&str> {
        self.marker.as_deref()
    }
    /// <p>Contains a list of DB clusters for the user.</p>
    pub fn db_clusters(&self) -> std::option::Option<&[crate::types::DbCluster]> {
        self.db_clusters.as_deref()
    }
}
impl aws_http::request_id::RequestId for DescribeDbClustersOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl DescribeDbClustersOutput {
    /// Creates a new builder-style object to manufacture [`DescribeDbClustersOutput`](crate::operation::describe_db_clusters::DescribeDbClustersOutput).
    pub fn builder(
    ) -> crate::operation::describe_db_clusters::builders::DescribeDbClustersOutputBuilder {
        crate::operation::describe_db_clusters::builders::DescribeDbClustersOutputBuilder::default()
    }
}

/// A builder for [`DescribeDbClustersOutput`](crate::operation::describe_db_clusters::DescribeDbClustersOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DescribeDbClustersOutputBuilder {
    pub(crate) marker: std::option::Option<std::string::String>,
    pub(crate) db_clusters: std::option::Option<std::vec::Vec<crate::types::DbCluster>>,
    _request_id: Option<String>,
}
impl DescribeDbClustersOutputBuilder {
    /// <p>A pagination token that can be used in a subsequent DescribeDBClusters request.</p>
    pub fn marker(mut self, input: impl Into<std::string::String>) -> Self {
        self.marker = Some(input.into());
        self
    }
    /// <p>A pagination token that can be used in a subsequent DescribeDBClusters request.</p>
    pub fn set_marker(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.marker = input;
        self
    }
    /// Appends an item to `db_clusters`.
    ///
    /// To override the contents of this collection use [`set_db_clusters`](Self::set_db_clusters).
    ///
    /// <p>Contains a list of DB clusters for the user.</p>
    pub fn db_clusters(mut self, input: crate::types::DbCluster) -> Self {
        let mut v = self.db_clusters.unwrap_or_default();
        v.push(input);
        self.db_clusters = Some(v);
        self
    }
    /// <p>Contains a list of DB clusters for the user.</p>
    pub fn set_db_clusters(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::DbCluster>>,
    ) -> Self {
        self.db_clusters = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`DescribeDbClustersOutput`](crate::operation::describe_db_clusters::DescribeDbClustersOutput).
    pub fn build(self) -> crate::operation::describe_db_clusters::DescribeDbClustersOutput {
        crate::operation::describe_db_clusters::DescribeDbClustersOutput {
            marker: self.marker,
            db_clusters: self.db_clusters,
            _request_id: self._request_id,
        }
    }
}
