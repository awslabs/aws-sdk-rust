// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(clippy::needless_question_mark)]
pub fn de_orderable_db_instance_option(
    decoder: &mut ::aws_smithy_xml::decode::ScopedDecoder,
) -> Result<crate::types::OrderableDbInstanceOption, ::aws_smithy_xml::decode::XmlDecodeError> {
    #[allow(unused_mut)]
    let mut builder = crate::types::OrderableDbInstanceOption::builder();
    while let Some(mut tag) = decoder.next_tag() {
        match tag.start_el() {
            s if s.matches("Engine") /* Engine com.amazonaws.neptune#OrderableDBInstanceOption$Engine */ =>  {
                let var_1 =
                    Some(
                        Result::<::std::string::String, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_engine(var_1);
            }
            ,
            s if s.matches("EngineVersion") /* EngineVersion com.amazonaws.neptune#OrderableDBInstanceOption$EngineVersion */ =>  {
                let var_2 =
                    Some(
                        Result::<::std::string::String, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_engine_version(var_2);
            }
            ,
            s if s.matches("DBInstanceClass") /* DBInstanceClass com.amazonaws.neptune#OrderableDBInstanceOption$DBInstanceClass */ =>  {
                let var_3 =
                    Some(
                        Result::<::std::string::String, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_db_instance_class(var_3);
            }
            ,
            s if s.matches("LicenseModel") /* LicenseModel com.amazonaws.neptune#OrderableDBInstanceOption$LicenseModel */ =>  {
                let var_4 =
                    Some(
                        Result::<::std::string::String, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_license_model(var_4);
            }
            ,
            s if s.matches("AvailabilityZones") /* AvailabilityZones com.amazonaws.neptune#OrderableDBInstanceOption$AvailabilityZones */ =>  {
                let var_5 =
                    Some(
                        crate::protocol_serde::shape_availability_zone_list::de_availability_zone_list(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_availability_zones(var_5);
            }
            ,
            s if s.matches("MultiAZCapable") /* MultiAZCapable com.amazonaws.neptune#OrderableDBInstanceOption$MultiAZCapable */ =>  {
                let var_6 =
                    Some(
                         {
                            <bool as ::aws_smithy_types::primitive::Parse>::parse_smithy_primitive(
                                ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                            .map_err(|_|::aws_smithy_xml::decode::XmlDecodeError::custom("expected (boolean: `com.amazonaws.neptune#Boolean`)"))
                        }
                        ?
                    )
                ;
                builder = builder.set_multi_az_capable(var_6);
            }
            ,
            s if s.matches("ReadReplicaCapable") /* ReadReplicaCapable com.amazonaws.neptune#OrderableDBInstanceOption$ReadReplicaCapable */ =>  {
                let var_7 =
                    Some(
                         {
                            <bool as ::aws_smithy_types::primitive::Parse>::parse_smithy_primitive(
                                ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                            .map_err(|_|::aws_smithy_xml::decode::XmlDecodeError::custom("expected (boolean: `com.amazonaws.neptune#Boolean`)"))
                        }
                        ?
                    )
                ;
                builder = builder.set_read_replica_capable(var_7);
            }
            ,
            s if s.matches("Vpc") /* Vpc com.amazonaws.neptune#OrderableDBInstanceOption$Vpc */ =>  {
                let var_8 =
                    Some(
                         {
                            <bool as ::aws_smithy_types::primitive::Parse>::parse_smithy_primitive(
                                ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                            .map_err(|_|::aws_smithy_xml::decode::XmlDecodeError::custom("expected (boolean: `com.amazonaws.neptune#Boolean`)"))
                        }
                        ?
                    )
                ;
                builder = builder.set_vpc(var_8);
            }
            ,
            s if s.matches("SupportsStorageEncryption") /* SupportsStorageEncryption com.amazonaws.neptune#OrderableDBInstanceOption$SupportsStorageEncryption */ =>  {
                let var_9 =
                    Some(
                         {
                            <bool as ::aws_smithy_types::primitive::Parse>::parse_smithy_primitive(
                                ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                            .map_err(|_|::aws_smithy_xml::decode::XmlDecodeError::custom("expected (boolean: `com.amazonaws.neptune#Boolean`)"))
                        }
                        ?
                    )
                ;
                builder = builder.set_supports_storage_encryption(var_9);
            }
            ,
            s if s.matches("StorageType") /* StorageType com.amazonaws.neptune#OrderableDBInstanceOption$StorageType */ =>  {
                let var_10 =
                    Some(
                        Result::<::std::string::String, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_storage_type(var_10);
            }
            ,
            s if s.matches("SupportsIops") /* SupportsIops com.amazonaws.neptune#OrderableDBInstanceOption$SupportsIops */ =>  {
                let var_11 =
                    Some(
                         {
                            <bool as ::aws_smithy_types::primitive::Parse>::parse_smithy_primitive(
                                ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                            .map_err(|_|::aws_smithy_xml::decode::XmlDecodeError::custom("expected (boolean: `com.amazonaws.neptune#Boolean`)"))
                        }
                        ?
                    )
                ;
                builder = builder.set_supports_iops(var_11);
            }
            ,
            s if s.matches("SupportsEnhancedMonitoring") /* SupportsEnhancedMonitoring com.amazonaws.neptune#OrderableDBInstanceOption$SupportsEnhancedMonitoring */ =>  {
                let var_12 =
                    Some(
                         {
                            <bool as ::aws_smithy_types::primitive::Parse>::parse_smithy_primitive(
                                ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                            .map_err(|_|::aws_smithy_xml::decode::XmlDecodeError::custom("expected (boolean: `com.amazonaws.neptune#Boolean`)"))
                        }
                        ?
                    )
                ;
                builder = builder.set_supports_enhanced_monitoring(var_12);
            }
            ,
            s if s.matches("SupportsIAMDatabaseAuthentication") /* SupportsIAMDatabaseAuthentication com.amazonaws.neptune#OrderableDBInstanceOption$SupportsIAMDatabaseAuthentication */ =>  {
                let var_13 =
                    Some(
                         {
                            <bool as ::aws_smithy_types::primitive::Parse>::parse_smithy_primitive(
                                ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                            .map_err(|_|::aws_smithy_xml::decode::XmlDecodeError::custom("expected (boolean: `com.amazonaws.neptune#Boolean`)"))
                        }
                        ?
                    )
                ;
                builder = builder.set_supports_iam_database_authentication(var_13);
            }
            ,
            s if s.matches("SupportsPerformanceInsights") /* SupportsPerformanceInsights com.amazonaws.neptune#OrderableDBInstanceOption$SupportsPerformanceInsights */ =>  {
                let var_14 =
                    Some(
                         {
                            <bool as ::aws_smithy_types::primitive::Parse>::parse_smithy_primitive(
                                ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                            .map_err(|_|::aws_smithy_xml::decode::XmlDecodeError::custom("expected (boolean: `com.amazonaws.neptune#Boolean`)"))
                        }
                        ?
                    )
                ;
                builder = builder.set_supports_performance_insights(var_14);
            }
            ,
            s if s.matches("MinStorageSize") /* MinStorageSize com.amazonaws.neptune#OrderableDBInstanceOption$MinStorageSize */ =>  {
                let var_15 =
                    Some(
                         {
                            <i32 as ::aws_smithy_types::primitive::Parse>::parse_smithy_primitive(
                                ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                            .map_err(|_|::aws_smithy_xml::decode::XmlDecodeError::custom("expected (integer: `com.amazonaws.neptune#IntegerOptional`)"))
                        }
                        ?
                    )
                ;
                builder = builder.set_min_storage_size(var_15);
            }
            ,
            s if s.matches("MaxStorageSize") /* MaxStorageSize com.amazonaws.neptune#OrderableDBInstanceOption$MaxStorageSize */ =>  {
                let var_16 =
                    Some(
                         {
                            <i32 as ::aws_smithy_types::primitive::Parse>::parse_smithy_primitive(
                                ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                            .map_err(|_|::aws_smithy_xml::decode::XmlDecodeError::custom("expected (integer: `com.amazonaws.neptune#IntegerOptional`)"))
                        }
                        ?
                    )
                ;
                builder = builder.set_max_storage_size(var_16);
            }
            ,
            s if s.matches("MinIopsPerDbInstance") /* MinIopsPerDbInstance com.amazonaws.neptune#OrderableDBInstanceOption$MinIopsPerDbInstance */ =>  {
                let var_17 =
                    Some(
                         {
                            <i32 as ::aws_smithy_types::primitive::Parse>::parse_smithy_primitive(
                                ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                            .map_err(|_|::aws_smithy_xml::decode::XmlDecodeError::custom("expected (integer: `com.amazonaws.neptune#IntegerOptional`)"))
                        }
                        ?
                    )
                ;
                builder = builder.set_min_iops_per_db_instance(var_17);
            }
            ,
            s if s.matches("MaxIopsPerDbInstance") /* MaxIopsPerDbInstance com.amazonaws.neptune#OrderableDBInstanceOption$MaxIopsPerDbInstance */ =>  {
                let var_18 =
                    Some(
                         {
                            <i32 as ::aws_smithy_types::primitive::Parse>::parse_smithy_primitive(
                                ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                            .map_err(|_|::aws_smithy_xml::decode::XmlDecodeError::custom("expected (integer: `com.amazonaws.neptune#IntegerOptional`)"))
                        }
                        ?
                    )
                ;
                builder = builder.set_max_iops_per_db_instance(var_18);
            }
            ,
            s if s.matches("MinIopsPerGib") /* MinIopsPerGib com.amazonaws.neptune#OrderableDBInstanceOption$MinIopsPerGib */ =>  {
                let var_19 =
                    Some(
                         {
                            <f64 as ::aws_smithy_types::primitive::Parse>::parse_smithy_primitive(
                                ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                            .map_err(|_|::aws_smithy_xml::decode::XmlDecodeError::custom("expected (double: `com.amazonaws.neptune#DoubleOptional`)"))
                        }
                        ?
                    )
                ;
                builder = builder.set_min_iops_per_gib(var_19);
            }
            ,
            s if s.matches("MaxIopsPerGib") /* MaxIopsPerGib com.amazonaws.neptune#OrderableDBInstanceOption$MaxIopsPerGib */ =>  {
                let var_20 =
                    Some(
                         {
                            <f64 as ::aws_smithy_types::primitive::Parse>::parse_smithy_primitive(
                                ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                            .map_err(|_|::aws_smithy_xml::decode::XmlDecodeError::custom("expected (double: `com.amazonaws.neptune#DoubleOptional`)"))
                        }
                        ?
                    )
                ;
                builder = builder.set_max_iops_per_gib(var_20);
            }
            ,
            s if s.matches("SupportsGlobalDatabases") /* SupportsGlobalDatabases com.amazonaws.neptune#OrderableDBInstanceOption$SupportsGlobalDatabases */ =>  {
                let var_21 =
                    Some(
                         {
                            <bool as ::aws_smithy_types::primitive::Parse>::parse_smithy_primitive(
                                ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                            .map_err(|_|::aws_smithy_xml::decode::XmlDecodeError::custom("expected (boolean: `com.amazonaws.neptune#Boolean`)"))
                        }
                        ?
                    )
                ;
                builder = builder.set_supports_global_databases(var_21);
            }
            ,
            _ => {}
        }
    }
    Ok(builder.build())
}
