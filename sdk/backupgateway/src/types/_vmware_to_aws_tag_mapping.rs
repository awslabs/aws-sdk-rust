// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>This displays the mapping of on-premises VMware tags to the corresponding Amazon Web Services tags.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct VmwareToAwsTagMapping {
    /// <p>The is the category of VMware.</p>
    pub vmware_category: ::std::string::String,
    /// <p>This is the user-defined name of a VMware tag.</p>
    pub vmware_tag_name: ::std::string::String,
    /// <p>The key part of the Amazon Web Services tag's key-value pair.</p>
    pub aws_tag_key: ::std::string::String,
    /// <p>The value part of the Amazon Web Services tag's key-value pair.</p>
    pub aws_tag_value: ::std::string::String,
}
impl VmwareToAwsTagMapping {
    /// <p>The is the category of VMware.</p>
    pub fn vmware_category(&self) -> &str {
        use std::ops::Deref;
        self.vmware_category.deref()
    }
    /// <p>This is the user-defined name of a VMware tag.</p>
    pub fn vmware_tag_name(&self) -> &str {
        use std::ops::Deref;
        self.vmware_tag_name.deref()
    }
    /// <p>The key part of the Amazon Web Services tag's key-value pair.</p>
    pub fn aws_tag_key(&self) -> &str {
        use std::ops::Deref;
        self.aws_tag_key.deref()
    }
    /// <p>The value part of the Amazon Web Services tag's key-value pair.</p>
    pub fn aws_tag_value(&self) -> &str {
        use std::ops::Deref;
        self.aws_tag_value.deref()
    }
}
impl VmwareToAwsTagMapping {
    /// Creates a new builder-style object to manufacture [`VmwareToAwsTagMapping`](crate::types::VmwareToAwsTagMapping).
    pub fn builder() -> crate::types::builders::VmwareToAwsTagMappingBuilder {
        crate::types::builders::VmwareToAwsTagMappingBuilder::default()
    }
}

/// A builder for [`VmwareToAwsTagMapping`](crate::types::VmwareToAwsTagMapping).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct VmwareToAwsTagMappingBuilder {
    pub(crate) vmware_category: ::std::option::Option<::std::string::String>,
    pub(crate) vmware_tag_name: ::std::option::Option<::std::string::String>,
    pub(crate) aws_tag_key: ::std::option::Option<::std::string::String>,
    pub(crate) aws_tag_value: ::std::option::Option<::std::string::String>,
}
impl VmwareToAwsTagMappingBuilder {
    /// <p>The is the category of VMware.</p>
    /// This field is required.
    pub fn vmware_category(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.vmware_category = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The is the category of VMware.</p>
    pub fn set_vmware_category(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.vmware_category = input;
        self
    }
    /// <p>The is the category of VMware.</p>
    pub fn get_vmware_category(&self) -> &::std::option::Option<::std::string::String> {
        &self.vmware_category
    }
    /// <p>This is the user-defined name of a VMware tag.</p>
    /// This field is required.
    pub fn vmware_tag_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.vmware_tag_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>This is the user-defined name of a VMware tag.</p>
    pub fn set_vmware_tag_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.vmware_tag_name = input;
        self
    }
    /// <p>This is the user-defined name of a VMware tag.</p>
    pub fn get_vmware_tag_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.vmware_tag_name
    }
    /// <p>The key part of the Amazon Web Services tag's key-value pair.</p>
    /// This field is required.
    pub fn aws_tag_key(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.aws_tag_key = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The key part of the Amazon Web Services tag's key-value pair.</p>
    pub fn set_aws_tag_key(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.aws_tag_key = input;
        self
    }
    /// <p>The key part of the Amazon Web Services tag's key-value pair.</p>
    pub fn get_aws_tag_key(&self) -> &::std::option::Option<::std::string::String> {
        &self.aws_tag_key
    }
    /// <p>The value part of the Amazon Web Services tag's key-value pair.</p>
    /// This field is required.
    pub fn aws_tag_value(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.aws_tag_value = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The value part of the Amazon Web Services tag's key-value pair.</p>
    pub fn set_aws_tag_value(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.aws_tag_value = input;
        self
    }
    /// <p>The value part of the Amazon Web Services tag's key-value pair.</p>
    pub fn get_aws_tag_value(&self) -> &::std::option::Option<::std::string::String> {
        &self.aws_tag_value
    }
    /// Consumes the builder and constructs a [`VmwareToAwsTagMapping`](crate::types::VmwareToAwsTagMapping).
    /// This method will fail if any of the following fields are not set:
    /// - [`vmware_category`](crate::types::builders::VmwareToAwsTagMappingBuilder::vmware_category)
    /// - [`vmware_tag_name`](crate::types::builders::VmwareToAwsTagMappingBuilder::vmware_tag_name)
    /// - [`aws_tag_key`](crate::types::builders::VmwareToAwsTagMappingBuilder::aws_tag_key)
    /// - [`aws_tag_value`](crate::types::builders::VmwareToAwsTagMappingBuilder::aws_tag_value)
    pub fn build(self) -> ::std::result::Result<crate::types::VmwareToAwsTagMapping, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::VmwareToAwsTagMapping {
            vmware_category: self.vmware_category.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "vmware_category",
                    "vmware_category was not specified but it is required when building VmwareToAwsTagMapping",
                )
            })?,
            vmware_tag_name: self.vmware_tag_name.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "vmware_tag_name",
                    "vmware_tag_name was not specified but it is required when building VmwareToAwsTagMapping",
                )
            })?,
            aws_tag_key: self.aws_tag_key.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "aws_tag_key",
                    "aws_tag_key was not specified but it is required when building VmwareToAwsTagMapping",
                )
            })?,
            aws_tag_value: self.aws_tag_value.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "aws_tag_value",
                    "aws_tag_value was not specified but it is required when building VmwareToAwsTagMapping",
                )
            })?,
        })
    }
}
