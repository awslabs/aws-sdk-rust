// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct PutBandwidthRateLimitScheduleInput {
    /// <p>The Amazon Resource Name (ARN) of the gateway. Use the <a href="https://docs.aws.amazon.com/aws-backup/latest/devguide/API_BGW_ListGateways.html"> <code>ListGateways</code> </a> operation to return a list of gateways for your account and Amazon Web Services Region.</p>
    #[doc(hidden)]
    pub gateway_arn: std::option::Option<std::string::String>,
    /// <p>An array containing bandwidth rate limit schedule intervals for a gateway. When no bandwidth rate limit intervals have been scheduled, the array is empty.</p>
    #[doc(hidden)]
    pub bandwidth_rate_limit_intervals:
        std::option::Option<std::vec::Vec<crate::types::BandwidthRateLimitInterval>>,
}
impl PutBandwidthRateLimitScheduleInput {
    /// <p>The Amazon Resource Name (ARN) of the gateway. Use the <a href="https://docs.aws.amazon.com/aws-backup/latest/devguide/API_BGW_ListGateways.html"> <code>ListGateways</code> </a> operation to return a list of gateways for your account and Amazon Web Services Region.</p>
    pub fn gateway_arn(&self) -> std::option::Option<&str> {
        self.gateway_arn.as_deref()
    }
    /// <p>An array containing bandwidth rate limit schedule intervals for a gateway. When no bandwidth rate limit intervals have been scheduled, the array is empty.</p>
    pub fn bandwidth_rate_limit_intervals(
        &self,
    ) -> std::option::Option<&[crate::types::BandwidthRateLimitInterval]> {
        self.bandwidth_rate_limit_intervals.as_deref()
    }
}
impl PutBandwidthRateLimitScheduleInput {
    /// Creates a new builder-style object to manufacture [`PutBandwidthRateLimitScheduleInput`](crate::operation::put_bandwidth_rate_limit_schedule::PutBandwidthRateLimitScheduleInput).
    pub fn builder() -> crate::operation::put_bandwidth_rate_limit_schedule::builders::PutBandwidthRateLimitScheduleInputBuilder{
        crate::operation::put_bandwidth_rate_limit_schedule::builders::PutBandwidthRateLimitScheduleInputBuilder::default()
    }
}

/// A builder for [`PutBandwidthRateLimitScheduleInput`](crate::operation::put_bandwidth_rate_limit_schedule::PutBandwidthRateLimitScheduleInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct PutBandwidthRateLimitScheduleInputBuilder {
    pub(crate) gateway_arn: std::option::Option<std::string::String>,
    pub(crate) bandwidth_rate_limit_intervals:
        std::option::Option<std::vec::Vec<crate::types::BandwidthRateLimitInterval>>,
}
impl PutBandwidthRateLimitScheduleInputBuilder {
    /// <p>The Amazon Resource Name (ARN) of the gateway. Use the <a href="https://docs.aws.amazon.com/aws-backup/latest/devguide/API_BGW_ListGateways.html"> <code>ListGateways</code> </a> operation to return a list of gateways for your account and Amazon Web Services Region.</p>
    pub fn gateway_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.gateway_arn = Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the gateway. Use the <a href="https://docs.aws.amazon.com/aws-backup/latest/devguide/API_BGW_ListGateways.html"> <code>ListGateways</code> </a> operation to return a list of gateways for your account and Amazon Web Services Region.</p>
    pub fn set_gateway_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.gateway_arn = input;
        self
    }
    /// Appends an item to `bandwidth_rate_limit_intervals`.
    ///
    /// To override the contents of this collection use [`set_bandwidth_rate_limit_intervals`](Self::set_bandwidth_rate_limit_intervals).
    ///
    /// <p>An array containing bandwidth rate limit schedule intervals for a gateway. When no bandwidth rate limit intervals have been scheduled, the array is empty.</p>
    pub fn bandwidth_rate_limit_intervals(
        mut self,
        input: crate::types::BandwidthRateLimitInterval,
    ) -> Self {
        let mut v = self.bandwidth_rate_limit_intervals.unwrap_or_default();
        v.push(input);
        self.bandwidth_rate_limit_intervals = Some(v);
        self
    }
    /// <p>An array containing bandwidth rate limit schedule intervals for a gateway. When no bandwidth rate limit intervals have been scheduled, the array is empty.</p>
    pub fn set_bandwidth_rate_limit_intervals(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::BandwidthRateLimitInterval>>,
    ) -> Self {
        self.bandwidth_rate_limit_intervals = input;
        self
    }
    /// Consumes the builder and constructs a [`PutBandwidthRateLimitScheduleInput`](crate::operation::put_bandwidth_rate_limit_schedule::PutBandwidthRateLimitScheduleInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::put_bandwidth_rate_limit_schedule::PutBandwidthRateLimitScheduleInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::put_bandwidth_rate_limit_schedule::PutBandwidthRateLimitScheduleInput {
                gateway_arn: self.gateway_arn
                ,
                bandwidth_rate_limit_intervals: self.bandwidth_rate_limit_intervals
                ,
            }
        )
    }
}
