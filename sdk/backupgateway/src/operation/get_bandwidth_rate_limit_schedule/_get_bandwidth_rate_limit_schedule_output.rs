// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GetBandwidthRateLimitScheduleOutput {
    /// <p>The Amazon Resource Name (ARN) of the gateway. Use the <a href="https://docs.aws.amazon.com/aws-backup/latest/devguide/API_BGW_ListGateways.html"> <code>ListGateways</code> </a> operation to return a list of gateways for your account and Amazon Web Services Region.</p>
    pub gateway_arn: ::std::option::Option<::std::string::String>,
    /// <p>An array containing bandwidth rate limit schedule intervals for a gateway. When no bandwidth rate limit intervals have been scheduled, the array is empty.</p>
    pub bandwidth_rate_limit_intervals: ::std::option::Option<::std::vec::Vec<crate::types::BandwidthRateLimitInterval>>,
    _request_id: Option<String>,
}
impl GetBandwidthRateLimitScheduleOutput {
    /// <p>The Amazon Resource Name (ARN) of the gateway. Use the <a href="https://docs.aws.amazon.com/aws-backup/latest/devguide/API_BGW_ListGateways.html"> <code>ListGateways</code> </a> operation to return a list of gateways for your account and Amazon Web Services Region.</p>
    pub fn gateway_arn(&self) -> ::std::option::Option<&str> {
        self.gateway_arn.as_deref()
    }
    /// <p>An array containing bandwidth rate limit schedule intervals for a gateway. When no bandwidth rate limit intervals have been scheduled, the array is empty.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.bandwidth_rate_limit_intervals.is_none()`.
    pub fn bandwidth_rate_limit_intervals(&self) -> &[crate::types::BandwidthRateLimitInterval] {
        self.bandwidth_rate_limit_intervals.as_deref().unwrap_or_default()
    }
}
impl ::aws_http::request_id::RequestId for GetBandwidthRateLimitScheduleOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl GetBandwidthRateLimitScheduleOutput {
    /// Creates a new builder-style object to manufacture [`GetBandwidthRateLimitScheduleOutput`](crate::operation::get_bandwidth_rate_limit_schedule::GetBandwidthRateLimitScheduleOutput).
    pub fn builder() -> crate::operation::get_bandwidth_rate_limit_schedule::builders::GetBandwidthRateLimitScheduleOutputBuilder {
        crate::operation::get_bandwidth_rate_limit_schedule::builders::GetBandwidthRateLimitScheduleOutputBuilder::default()
    }
}

/// A builder for [`GetBandwidthRateLimitScheduleOutput`](crate::operation::get_bandwidth_rate_limit_schedule::GetBandwidthRateLimitScheduleOutput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct GetBandwidthRateLimitScheduleOutputBuilder {
    pub(crate) gateway_arn: ::std::option::Option<::std::string::String>,
    pub(crate) bandwidth_rate_limit_intervals: ::std::option::Option<::std::vec::Vec<crate::types::BandwidthRateLimitInterval>>,
    _request_id: Option<String>,
}
impl GetBandwidthRateLimitScheduleOutputBuilder {
    /// <p>The Amazon Resource Name (ARN) of the gateway. Use the <a href="https://docs.aws.amazon.com/aws-backup/latest/devguide/API_BGW_ListGateways.html"> <code>ListGateways</code> </a> operation to return a list of gateways for your account and Amazon Web Services Region.</p>
    pub fn gateway_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.gateway_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the gateway. Use the <a href="https://docs.aws.amazon.com/aws-backup/latest/devguide/API_BGW_ListGateways.html"> <code>ListGateways</code> </a> operation to return a list of gateways for your account and Amazon Web Services Region.</p>
    pub fn set_gateway_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.gateway_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the gateway. Use the <a href="https://docs.aws.amazon.com/aws-backup/latest/devguide/API_BGW_ListGateways.html"> <code>ListGateways</code> </a> operation to return a list of gateways for your account and Amazon Web Services Region.</p>
    pub fn get_gateway_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.gateway_arn
    }
    /// Appends an item to `bandwidth_rate_limit_intervals`.
    ///
    /// To override the contents of this collection use [`set_bandwidth_rate_limit_intervals`](Self::set_bandwidth_rate_limit_intervals).
    ///
    /// <p>An array containing bandwidth rate limit schedule intervals for a gateway. When no bandwidth rate limit intervals have been scheduled, the array is empty.</p>
    pub fn bandwidth_rate_limit_intervals(mut self, input: crate::types::BandwidthRateLimitInterval) -> Self {
        let mut v = self.bandwidth_rate_limit_intervals.unwrap_or_default();
        v.push(input);
        self.bandwidth_rate_limit_intervals = ::std::option::Option::Some(v);
        self
    }
    /// <p>An array containing bandwidth rate limit schedule intervals for a gateway. When no bandwidth rate limit intervals have been scheduled, the array is empty.</p>
    pub fn set_bandwidth_rate_limit_intervals(
        mut self,
        input: ::std::option::Option<::std::vec::Vec<crate::types::BandwidthRateLimitInterval>>,
    ) -> Self {
        self.bandwidth_rate_limit_intervals = input;
        self
    }
    /// <p>An array containing bandwidth rate limit schedule intervals for a gateway. When no bandwidth rate limit intervals have been scheduled, the array is empty.</p>
    pub fn get_bandwidth_rate_limit_intervals(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::BandwidthRateLimitInterval>> {
        &self.bandwidth_rate_limit_intervals
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`GetBandwidthRateLimitScheduleOutput`](crate::operation::get_bandwidth_rate_limit_schedule::GetBandwidthRateLimitScheduleOutput).
    pub fn build(self) -> crate::operation::get_bandwidth_rate_limit_schedule::GetBandwidthRateLimitScheduleOutput {
        crate::operation::get_bandwidth_rate_limit_schedule::GetBandwidthRateLimitScheduleOutput {
            gateway_arn: self.gateway_arn,
            bandwidth_rate_limit_intervals: self.bandwidth_rate_limit_intervals,
            _request_id: self._request_id,
        }
    }
}
