// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct PutMaintenanceStartTimeInput {
    /// <p>The Amazon Resource Name (ARN) for the gateway, used to specify its maintenance start time.</p>
    #[doc(hidden)]
    pub gateway_arn: std::option::Option<std::string::String>,
    /// <p>The hour of the day to start maintenance on a gateway.</p>
    #[doc(hidden)]
    pub hour_of_day: std::option::Option<i32>,
    /// <p>The minute of the hour to start maintenance on a gateway.</p>
    #[doc(hidden)]
    pub minute_of_hour: std::option::Option<i32>,
    /// <p>The day of the week to start maintenance on a gateway.</p>
    #[doc(hidden)]
    pub day_of_week: std::option::Option<i32>,
    /// <p>The day of the month start maintenance on a gateway.</p>
    /// <p>Valid values range from <code>Sunday</code> to <code>Saturday</code>.</p>
    #[doc(hidden)]
    pub day_of_month: std::option::Option<i32>,
}
impl PutMaintenanceStartTimeInput {
    /// <p>The Amazon Resource Name (ARN) for the gateway, used to specify its maintenance start time.</p>
    pub fn gateway_arn(&self) -> std::option::Option<&str> {
        self.gateway_arn.as_deref()
    }
    /// <p>The hour of the day to start maintenance on a gateway.</p>
    pub fn hour_of_day(&self) -> std::option::Option<i32> {
        self.hour_of_day
    }
    /// <p>The minute of the hour to start maintenance on a gateway.</p>
    pub fn minute_of_hour(&self) -> std::option::Option<i32> {
        self.minute_of_hour
    }
    /// <p>The day of the week to start maintenance on a gateway.</p>
    pub fn day_of_week(&self) -> std::option::Option<i32> {
        self.day_of_week
    }
    /// <p>The day of the month start maintenance on a gateway.</p>
    /// <p>Valid values range from <code>Sunday</code> to <code>Saturday</code>.</p>
    pub fn day_of_month(&self) -> std::option::Option<i32> {
        self.day_of_month
    }
}
impl PutMaintenanceStartTimeInput {
    /// Creates a new builder-style object to manufacture [`PutMaintenanceStartTimeInput`](crate::operation::put_maintenance_start_time::PutMaintenanceStartTimeInput).
    pub fn builder(
    ) -> crate::operation::put_maintenance_start_time::builders::PutMaintenanceStartTimeInputBuilder
    {
        crate::operation::put_maintenance_start_time::builders::PutMaintenanceStartTimeInputBuilder::default()
    }
}

/// A builder for [`PutMaintenanceStartTimeInput`](crate::operation::put_maintenance_start_time::PutMaintenanceStartTimeInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct PutMaintenanceStartTimeInputBuilder {
    pub(crate) gateway_arn: std::option::Option<std::string::String>,
    pub(crate) hour_of_day: std::option::Option<i32>,
    pub(crate) minute_of_hour: std::option::Option<i32>,
    pub(crate) day_of_week: std::option::Option<i32>,
    pub(crate) day_of_month: std::option::Option<i32>,
}
impl PutMaintenanceStartTimeInputBuilder {
    /// <p>The Amazon Resource Name (ARN) for the gateway, used to specify its maintenance start time.</p>
    pub fn gateway_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.gateway_arn = Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) for the gateway, used to specify its maintenance start time.</p>
    pub fn set_gateway_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.gateway_arn = input;
        self
    }
    /// <p>The hour of the day to start maintenance on a gateway.</p>
    pub fn hour_of_day(mut self, input: i32) -> Self {
        self.hour_of_day = Some(input);
        self
    }
    /// <p>The hour of the day to start maintenance on a gateway.</p>
    pub fn set_hour_of_day(mut self, input: std::option::Option<i32>) -> Self {
        self.hour_of_day = input;
        self
    }
    /// <p>The minute of the hour to start maintenance on a gateway.</p>
    pub fn minute_of_hour(mut self, input: i32) -> Self {
        self.minute_of_hour = Some(input);
        self
    }
    /// <p>The minute of the hour to start maintenance on a gateway.</p>
    pub fn set_minute_of_hour(mut self, input: std::option::Option<i32>) -> Self {
        self.minute_of_hour = input;
        self
    }
    /// <p>The day of the week to start maintenance on a gateway.</p>
    pub fn day_of_week(mut self, input: i32) -> Self {
        self.day_of_week = Some(input);
        self
    }
    /// <p>The day of the week to start maintenance on a gateway.</p>
    pub fn set_day_of_week(mut self, input: std::option::Option<i32>) -> Self {
        self.day_of_week = input;
        self
    }
    /// <p>The day of the month start maintenance on a gateway.</p>
    /// <p>Valid values range from <code>Sunday</code> to <code>Saturday</code>.</p>
    pub fn day_of_month(mut self, input: i32) -> Self {
        self.day_of_month = Some(input);
        self
    }
    /// <p>The day of the month start maintenance on a gateway.</p>
    /// <p>Valid values range from <code>Sunday</code> to <code>Saturday</code>.</p>
    pub fn set_day_of_month(mut self, input: std::option::Option<i32>) -> Self {
        self.day_of_month = input;
        self
    }
    /// Consumes the builder and constructs a [`PutMaintenanceStartTimeInput`](crate::operation::put_maintenance_start_time::PutMaintenanceStartTimeInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::put_maintenance_start_time::PutMaintenanceStartTimeInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::put_maintenance_start_time::PutMaintenanceStartTimeInput {
                gateway_arn: self.gateway_arn,
                hour_of_day: self.hour_of_day,
                minute_of_hour: self.minute_of_hour,
                day_of_week: self.day_of_week,
                day_of_month: self.day_of_month,
            },
        )
    }
}
