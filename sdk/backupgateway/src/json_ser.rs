// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn serialize_structure_crate_input_associate_gateway_to_server_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::AssociateGatewayToServerInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_1) = &input.gateway_arn {
        object.key("GatewayArn").string(var_1);
    }
    if let Some(var_2) = &input.server_arn {
        object.key("ServerArn").string(var_2);
    }
    Ok(())
}

pub fn serialize_structure_crate_input_create_gateway_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateGatewayInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_3) = &input.activation_key {
        object.key("ActivationKey").string(var_3);
    }
    if let Some(var_4) = &input.gateway_display_name {
        object.key("GatewayDisplayName").string(var_4);
    }
    if let Some(var_5) = &input.gateway_type {
        object.key("GatewayType").string(var_5.as_str());
    }
    if let Some(var_6) = &input.tags {
        let mut array_7 = object.key("Tags").start_array();
        for item_8 in var_6 {
            {
                let mut object_9 = array_7.value().start_object();
                crate::json_ser::serialize_structure_crate_model_tag(&mut object_9, item_8)?;
                object_9.finish();
            }
        }
        array_7.finish();
    }
    Ok(())
}

pub fn serialize_structure_crate_input_delete_gateway_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DeleteGatewayInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_10) = &input.gateway_arn {
        object.key("GatewayArn").string(var_10);
    }
    Ok(())
}

pub fn serialize_structure_crate_input_delete_hypervisor_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DeleteHypervisorInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_11) = &input.hypervisor_arn {
        object.key("HypervisorArn").string(var_11);
    }
    Ok(())
}

pub fn serialize_structure_crate_input_disassociate_gateway_from_server_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DisassociateGatewayFromServerInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_12) = &input.gateway_arn {
        object.key("GatewayArn").string(var_12);
    }
    Ok(())
}

pub fn serialize_structure_crate_input_import_hypervisor_configuration_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::ImportHypervisorConfigurationInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_13) = &input.name {
        object.key("Name").string(var_13);
    }
    if let Some(var_14) = &input.host {
        object.key("Host").string(var_14);
    }
    if let Some(var_15) = &input.username {
        object.key("Username").string(var_15);
    }
    if let Some(var_16) = &input.password {
        object.key("Password").string(var_16);
    }
    if let Some(var_17) = &input.kms_key_arn {
        object.key("KmsKeyArn").string(var_17);
    }
    if let Some(var_18) = &input.tags {
        let mut array_19 = object.key("Tags").start_array();
        for item_20 in var_18 {
            {
                let mut object_21 = array_19.value().start_object();
                crate::json_ser::serialize_structure_crate_model_tag(&mut object_21, item_20)?;
                object_21.finish();
            }
        }
        array_19.finish();
    }
    Ok(())
}

pub fn serialize_structure_crate_input_list_gateways_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::ListGatewaysInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_22) = &input.max_results {
        object.key("MaxResults").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_22).into()),
        );
    }
    if let Some(var_23) = &input.next_token {
        object.key("NextToken").string(var_23);
    }
    Ok(())
}

pub fn serialize_structure_crate_input_list_hypervisors_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::ListHypervisorsInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_24) = &input.max_results {
        object.key("MaxResults").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_24).into()),
        );
    }
    if let Some(var_25) = &input.next_token {
        object.key("NextToken").string(var_25);
    }
    Ok(())
}

pub fn serialize_structure_crate_input_list_tags_for_resource_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::ListTagsForResourceInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_26) = &input.resource_arn {
        object.key("ResourceArn").string(var_26);
    }
    Ok(())
}

pub fn serialize_structure_crate_input_list_virtual_machines_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::ListVirtualMachinesInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_27) = &input.max_results {
        object.key("MaxResults").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_27).into()),
        );
    }
    if let Some(var_28) = &input.next_token {
        object.key("NextToken").string(var_28);
    }
    Ok(())
}

pub fn serialize_structure_crate_input_put_maintenance_start_time_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::PutMaintenanceStartTimeInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_29) = &input.gateway_arn {
        object.key("GatewayArn").string(var_29);
    }
    if let Some(var_30) = &input.hour_of_day {
        object.key("HourOfDay").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_30).into()),
        );
    }
    if let Some(var_31) = &input.minute_of_hour {
        object.key("MinuteOfHour").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_31).into()),
        );
    }
    if let Some(var_32) = &input.day_of_week {
        object.key("DayOfWeek").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_32).into()),
        );
    }
    if let Some(var_33) = &input.day_of_month {
        object.key("DayOfMonth").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_33).into()),
        );
    }
    Ok(())
}

pub fn serialize_structure_crate_input_tag_resource_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::TagResourceInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_34) = &input.resource_arn {
        object.key("ResourceARN").string(var_34);
    }
    if let Some(var_35) = &input.tags {
        let mut array_36 = object.key("Tags").start_array();
        for item_37 in var_35 {
            {
                let mut object_38 = array_36.value().start_object();
                crate::json_ser::serialize_structure_crate_model_tag(&mut object_38, item_37)?;
                object_38.finish();
            }
        }
        array_36.finish();
    }
    Ok(())
}

pub fn serialize_structure_crate_input_test_hypervisor_configuration_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::TestHypervisorConfigurationInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_39) = &input.gateway_arn {
        object.key("GatewayArn").string(var_39);
    }
    if let Some(var_40) = &input.host {
        object.key("Host").string(var_40);
    }
    if let Some(var_41) = &input.username {
        object.key("Username").string(var_41);
    }
    if let Some(var_42) = &input.password {
        object.key("Password").string(var_42);
    }
    Ok(())
}

pub fn serialize_structure_crate_input_untag_resource_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UntagResourceInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_43) = &input.resource_arn {
        object.key("ResourceARN").string(var_43);
    }
    if let Some(var_44) = &input.tag_keys {
        let mut array_45 = object.key("TagKeys").start_array();
        for item_46 in var_44 {
            {
                array_45.value().string(item_46);
            }
        }
        array_45.finish();
    }
    Ok(())
}

pub fn serialize_structure_crate_input_update_gateway_information_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateGatewayInformationInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_47) = &input.gateway_arn {
        object.key("GatewayArn").string(var_47);
    }
    if let Some(var_48) = &input.gateway_display_name {
        object.key("GatewayDisplayName").string(var_48);
    }
    Ok(())
}

pub fn serialize_structure_crate_input_update_hypervisor_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateHypervisorInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_49) = &input.hypervisor_arn {
        object.key("HypervisorArn").string(var_49);
    }
    if let Some(var_50) = &input.host {
        object.key("Host").string(var_50);
    }
    if let Some(var_51) = &input.username {
        object.key("Username").string(var_51);
    }
    if let Some(var_52) = &input.password {
        object.key("Password").string(var_52);
    }
    Ok(())
}

pub fn serialize_structure_crate_model_tag(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::Tag,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_53) = &input.key {
        object.key("Key").string(var_53);
    }
    if let Some(var_54) = &input.value {
        object.key("Value").string(var_54);
    }
    Ok(())
}
