// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateSink`](crate::operation::create_sink::builders::CreateSinkFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(impl Into<String>)`](crate::operation::create_sink::builders::CreateSinkFluentBuilder::name) / [`set_name(Option<String>)`](crate::operation::create_sink::builders::CreateSinkFluentBuilder::set_name):<br>required: **true**<br><p>A name for the sink.</p><br>
    ///   - [`tags(impl Into<String>, impl Into<String>)`](crate::operation::create_sink::builders::CreateSinkFluentBuilder::tags) / [`set_tags(Option<HashMap::<String, String>>)`](crate::operation::create_sink::builders::CreateSinkFluentBuilder::set_tags):<br>required: **false**<br><p>Assigns one or more tags (key-value pairs) to the link. </p>  <p>Tags can help you organize and categorize your resources. You can also use them to scope user permissions by granting a user permission to access or change only resources with certain tag values.</p>  <p>For more information about using tags to control access, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_tags.html">Controlling access to Amazon Web Services resources using tags</a>.</p><br>
    /// - On success, responds with [`CreateSinkOutput`](crate::operation::create_sink::CreateSinkOutput) with field(s):
    ///   - [`arn(Option<String>)`](crate::operation::create_sink::CreateSinkOutput::arn): <p>The ARN of the sink that is newly created.</p>
    ///   - [`id(Option<String>)`](crate::operation::create_sink::CreateSinkOutput::id): <p>The random ID string that Amazon Web Services generated as part of the sink ARN.</p>
    ///   - [`name(Option<String>)`](crate::operation::create_sink::CreateSinkOutput::name): <p>The name of the sink.</p>
    ///   - [`tags(Option<HashMap::<String, String>>)`](crate::operation::create_sink::CreateSinkOutput::tags): <p>The tags assigned to the sink.</p>
    /// - On failure, responds with [`SdkError<CreateSinkError>`](crate::operation::create_sink::CreateSinkError)
    pub fn create_sink(&self) -> crate::operation::create_sink::builders::CreateSinkFluentBuilder {
        crate::operation::create_sink::builders::CreateSinkFluentBuilder::new(self.handle.clone())
    }
}
