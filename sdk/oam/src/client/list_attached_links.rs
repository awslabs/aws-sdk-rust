// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListAttachedLinks`](crate::client::fluent_builders::ListAttachedLinks) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListAttachedLinks::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListAttachedLinks::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListAttachedLinks::set_max_results): <p>Limits the number of returned links to the specified number.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListAttachedLinks::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListAttachedLinks::set_next_token): <p>The token for the next set of items to return. You received this token from a previous call.</p>
    ///   - [`sink_identifier(impl Into<String>)`](crate::client::fluent_builders::ListAttachedLinks::sink_identifier) / [`set_sink_identifier(Option<String>)`](crate::client::fluent_builders::ListAttachedLinks::set_sink_identifier): <p>The ARN of the sink that you want to retrieve links for.</p>
    /// - On success, responds with [`ListAttachedLinksOutput`](crate::output::ListAttachedLinksOutput) with field(s):
    ///   - [`items(Option<Vec<ListAttachedLinksItem>>)`](crate::output::ListAttachedLinksOutput::items): <p>An array of structures that contain the information about the attached links.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListAttachedLinksOutput::next_token): <p>The token to use when requesting the next set of links.</p>
    /// - On failure, responds with [`SdkError<ListAttachedLinksError>`](crate::error::ListAttachedLinksError)
    pub fn list_attached_links(&self) -> crate::client::fluent_builders::ListAttachedLinks {
        crate::client::fluent_builders::ListAttachedLinks::new(self.handle.clone())
    }
}
