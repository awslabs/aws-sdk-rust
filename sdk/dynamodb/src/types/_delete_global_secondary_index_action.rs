// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Represents a global secondary index to be deleted from an existing table.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DeleteGlobalSecondaryIndexAction {
    /// <p>The name of the global secondary index to be deleted.</p>
    #[doc(hidden)]
    pub index_name: std::option::Option<std::string::String>,
}
impl DeleteGlobalSecondaryIndexAction {
    /// <p>The name of the global secondary index to be deleted.</p>
    pub fn index_name(&self) -> std::option::Option<&str> {
        self.index_name.as_deref()
    }
}
impl DeleteGlobalSecondaryIndexAction {
    /// Creates a new builder-style object to manufacture [`DeleteGlobalSecondaryIndexAction`](crate::types::DeleteGlobalSecondaryIndexAction).
    pub fn builder() -> crate::types::builders::DeleteGlobalSecondaryIndexActionBuilder {
        crate::types::builders::DeleteGlobalSecondaryIndexActionBuilder::default()
    }
}

/// A builder for [`DeleteGlobalSecondaryIndexAction`](crate::types::DeleteGlobalSecondaryIndexAction).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DeleteGlobalSecondaryIndexActionBuilder {
    pub(crate) index_name: std::option::Option<std::string::String>,
}
impl DeleteGlobalSecondaryIndexActionBuilder {
    /// <p>The name of the global secondary index to be deleted.</p>
    pub fn index_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.index_name = Some(input.into());
        self
    }
    /// <p>The name of the global secondary index to be deleted.</p>
    pub fn set_index_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.index_name = input;
        self
    }
    /// Consumes the builder and constructs a [`DeleteGlobalSecondaryIndexAction`](crate::types::DeleteGlobalSecondaryIndexAction).
    pub fn build(self) -> crate::types::DeleteGlobalSecondaryIndexAction {
        crate::types::DeleteGlobalSecondaryIndexAction {
            index_name: self.index_name,
        }
    }
}
