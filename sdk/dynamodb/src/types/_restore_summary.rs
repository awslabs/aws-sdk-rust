// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains details for the restore.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct RestoreSummary {
    /// <p>The Amazon Resource Name (ARN) of the backup from which the table was restored.</p>
    #[doc(hidden)]
    pub source_backup_arn: std::option::Option<std::string::String>,
    /// <p>The ARN of the source table of the backup that is being restored.</p>
    #[doc(hidden)]
    pub source_table_arn: std::option::Option<std::string::String>,
    /// <p>Point in time or source backup time.</p>
    #[doc(hidden)]
    pub restore_date_time: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>Indicates if a restore is in progress or not.</p>
    #[doc(hidden)]
    pub restore_in_progress: std::option::Option<bool>,
}
impl RestoreSummary {
    /// <p>The Amazon Resource Name (ARN) of the backup from which the table was restored.</p>
    pub fn source_backup_arn(&self) -> std::option::Option<&str> {
        self.source_backup_arn.as_deref()
    }
    /// <p>The ARN of the source table of the backup that is being restored.</p>
    pub fn source_table_arn(&self) -> std::option::Option<&str> {
        self.source_table_arn.as_deref()
    }
    /// <p>Point in time or source backup time.</p>
    pub fn restore_date_time(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.restore_date_time.as_ref()
    }
    /// <p>Indicates if a restore is in progress or not.</p>
    pub fn restore_in_progress(&self) -> std::option::Option<bool> {
        self.restore_in_progress
    }
}
impl RestoreSummary {
    /// Creates a new builder-style object to manufacture [`RestoreSummary`](crate::types::RestoreSummary).
    pub fn builder() -> crate::types::builders::RestoreSummaryBuilder {
        crate::types::builders::RestoreSummaryBuilder::default()
    }
}

/// A builder for [`RestoreSummary`](crate::types::RestoreSummary).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct RestoreSummaryBuilder {
    pub(crate) source_backup_arn: std::option::Option<std::string::String>,
    pub(crate) source_table_arn: std::option::Option<std::string::String>,
    pub(crate) restore_date_time: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) restore_in_progress: std::option::Option<bool>,
}
impl RestoreSummaryBuilder {
    /// <p>The Amazon Resource Name (ARN) of the backup from which the table was restored.</p>
    pub fn source_backup_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.source_backup_arn = Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the backup from which the table was restored.</p>
    pub fn set_source_backup_arn(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.source_backup_arn = input;
        self
    }
    /// <p>The ARN of the source table of the backup that is being restored.</p>
    pub fn source_table_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.source_table_arn = Some(input.into());
        self
    }
    /// <p>The ARN of the source table of the backup that is being restored.</p>
    pub fn set_source_table_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.source_table_arn = input;
        self
    }
    /// <p>Point in time or source backup time.</p>
    pub fn restore_date_time(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.restore_date_time = Some(input);
        self
    }
    /// <p>Point in time or source backup time.</p>
    pub fn set_restore_date_time(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.restore_date_time = input;
        self
    }
    /// <p>Indicates if a restore is in progress or not.</p>
    pub fn restore_in_progress(mut self, input: bool) -> Self {
        self.restore_in_progress = Some(input);
        self
    }
    /// <p>Indicates if a restore is in progress or not.</p>
    pub fn set_restore_in_progress(mut self, input: std::option::Option<bool>) -> Self {
        self.restore_in_progress = input;
        self
    }
    /// Consumes the builder and constructs a [`RestoreSummary`](crate::types::RestoreSummary).
    pub fn build(self) -> crate::types::RestoreSummary {
        crate::types::RestoreSummary {
            source_backup_arn: self.source_backup_arn,
            source_table_arn: self.source_table_arn,
            restore_date_time: self.restore_date_time,
            restore_in_progress: self.restore_in_progress,
        }
    }
}
