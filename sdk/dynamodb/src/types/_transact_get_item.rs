// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Specifies an item to be retrieved as part of the transaction.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct TransactGetItem {
    /// <p>Contains the primary key that identifies the item to get, together with the name of the table that contains the item, and optionally the specific attributes of the item to retrieve.</p>
    #[doc(hidden)]
    pub get: std::option::Option<crate::types::Get>,
}
impl TransactGetItem {
    /// <p>Contains the primary key that identifies the item to get, together with the name of the table that contains the item, and optionally the specific attributes of the item to retrieve.</p>
    pub fn get(&self) -> std::option::Option<&crate::types::Get> {
        self.get.as_ref()
    }
}
impl TransactGetItem {
    /// Creates a new builder-style object to manufacture [`TransactGetItem`](crate::types::TransactGetItem).
    pub fn builder() -> crate::types::builders::TransactGetItemBuilder {
        crate::types::builders::TransactGetItemBuilder::default()
    }
}

/// A builder for [`TransactGetItem`](crate::types::TransactGetItem).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct TransactGetItemBuilder {
    pub(crate) get: std::option::Option<crate::types::Get>,
}
impl TransactGetItemBuilder {
    /// <p>Contains the primary key that identifies the item to get, together with the name of the table that contains the item, and optionally the specific attributes of the item to retrieve.</p>
    pub fn get(mut self, input: crate::types::Get) -> Self {
        self.get = Some(input);
        self
    }
    /// <p>Contains the primary key that identifies the item to get, together with the name of the table that contains the item, and optionally the specific attributes of the item to retrieve.</p>
    pub fn set_get(mut self, input: std::option::Option<crate::types::Get>) -> Self {
        self.get = input;
        self
    }
    /// Consumes the builder and constructs a [`TransactGetItem`](crate::types::TransactGetItem).
    pub fn build(self) -> crate::types::TransactGetItem {
        crate::types::TransactGetItem { get: self.get }
    }
}
