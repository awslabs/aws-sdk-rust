// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Represents the auto scaling policy to be modified.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AutoScalingPolicyUpdate {
    /// <p>The name of the scaling policy.</p>
    pub policy_name: ::std::option::Option<::std::string::String>,
    /// <p>Represents a target tracking scaling policy configuration.</p>
    pub target_tracking_scaling_policy_configuration: ::std::option::Option<crate::types::AutoScalingTargetTrackingScalingPolicyConfigurationUpdate>,
}
impl AutoScalingPolicyUpdate {
    /// <p>The name of the scaling policy.</p>
    pub fn policy_name(&self) -> ::std::option::Option<&str> {
        self.policy_name.as_deref()
    }
    /// <p>Represents a target tracking scaling policy configuration.</p>
    pub fn target_tracking_scaling_policy_configuration(
        &self,
    ) -> ::std::option::Option<&crate::types::AutoScalingTargetTrackingScalingPolicyConfigurationUpdate> {
        self.target_tracking_scaling_policy_configuration.as_ref()
    }
}
impl AutoScalingPolicyUpdate {
    /// Creates a new builder-style object to manufacture [`AutoScalingPolicyUpdate`](crate::types::AutoScalingPolicyUpdate).
    pub fn builder() -> crate::types::builders::AutoScalingPolicyUpdateBuilder {
        crate::types::builders::AutoScalingPolicyUpdateBuilder::default()
    }
}

/// A builder for [`AutoScalingPolicyUpdate`](crate::types::AutoScalingPolicyUpdate).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct AutoScalingPolicyUpdateBuilder {
    pub(crate) policy_name: ::std::option::Option<::std::string::String>,
    pub(crate) target_tracking_scaling_policy_configuration:
        ::std::option::Option<crate::types::AutoScalingTargetTrackingScalingPolicyConfigurationUpdate>,
}
impl AutoScalingPolicyUpdateBuilder {
    /// <p>The name of the scaling policy.</p>
    pub fn policy_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.policy_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the scaling policy.</p>
    pub fn set_policy_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.policy_name = input;
        self
    }
    /// <p>The name of the scaling policy.</p>
    pub fn get_policy_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.policy_name
    }
    /// <p>Represents a target tracking scaling policy configuration.</p>
    /// This field is required.
    pub fn target_tracking_scaling_policy_configuration(
        mut self,
        input: crate::types::AutoScalingTargetTrackingScalingPolicyConfigurationUpdate,
    ) -> Self {
        self.target_tracking_scaling_policy_configuration = ::std::option::Option::Some(input);
        self
    }
    /// <p>Represents a target tracking scaling policy configuration.</p>
    pub fn set_target_tracking_scaling_policy_configuration(
        mut self,
        input: ::std::option::Option<crate::types::AutoScalingTargetTrackingScalingPolicyConfigurationUpdate>,
    ) -> Self {
        self.target_tracking_scaling_policy_configuration = input;
        self
    }
    /// <p>Represents a target tracking scaling policy configuration.</p>
    pub fn get_target_tracking_scaling_policy_configuration(
        &self,
    ) -> &::std::option::Option<crate::types::AutoScalingTargetTrackingScalingPolicyConfigurationUpdate> {
        &self.target_tracking_scaling_policy_configuration
    }
    /// Consumes the builder and constructs a [`AutoScalingPolicyUpdate`](crate::types::AutoScalingPolicyUpdate).
    pub fn build(self) -> crate::types::AutoScalingPolicyUpdate {
        crate::types::AutoScalingPolicyUpdate {
            policy_name: self.policy_name,
            target_tracking_scaling_policy_configuration: self.target_tracking_scaling_policy_configuration,
        }
    }
}
