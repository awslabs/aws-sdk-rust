// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Represents the auto scaling configuration for a global table.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct TableAutoScalingDescription {
    /// <p>The name of the table.</p>
    #[doc(hidden)]
    pub table_name: std::option::Option<std::string::String>,
    /// <p>The current state of the table:</p>
    /// <ul>
    /// <li> <p> <code>CREATING</code> - The table is being created.</p> </li>
    /// <li> <p> <code>UPDATING</code> - The table is being updated.</p> </li>
    /// <li> <p> <code>DELETING</code> - The table is being deleted.</p> </li>
    /// <li> <p> <code>ACTIVE</code> - The table is ready for use.</p> </li>
    /// </ul>
    #[doc(hidden)]
    pub table_status: std::option::Option<crate::types::TableStatus>,
    /// <p>Represents replicas of the global table.</p>
    #[doc(hidden)]
    pub replicas: std::option::Option<std::vec::Vec<crate::types::ReplicaAutoScalingDescription>>,
}
impl TableAutoScalingDescription {
    /// <p>The name of the table.</p>
    pub fn table_name(&self) -> std::option::Option<&str> {
        self.table_name.as_deref()
    }
    /// <p>The current state of the table:</p>
    /// <ul>
    /// <li> <p> <code>CREATING</code> - The table is being created.</p> </li>
    /// <li> <p> <code>UPDATING</code> - The table is being updated.</p> </li>
    /// <li> <p> <code>DELETING</code> - The table is being deleted.</p> </li>
    /// <li> <p> <code>ACTIVE</code> - The table is ready for use.</p> </li>
    /// </ul>
    pub fn table_status(&self) -> std::option::Option<&crate::types::TableStatus> {
        self.table_status.as_ref()
    }
    /// <p>Represents replicas of the global table.</p>
    pub fn replicas(&self) -> std::option::Option<&[crate::types::ReplicaAutoScalingDescription]> {
        self.replicas.as_deref()
    }
}
impl TableAutoScalingDescription {
    /// Creates a new builder-style object to manufacture [`TableAutoScalingDescription`](crate::types::TableAutoScalingDescription).
    pub fn builder() -> crate::types::builders::TableAutoScalingDescriptionBuilder {
        crate::types::builders::TableAutoScalingDescriptionBuilder::default()
    }
}

/// A builder for [`TableAutoScalingDescription`](crate::types::TableAutoScalingDescription).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct TableAutoScalingDescriptionBuilder {
    pub(crate) table_name: std::option::Option<std::string::String>,
    pub(crate) table_status: std::option::Option<crate::types::TableStatus>,
    pub(crate) replicas:
        std::option::Option<std::vec::Vec<crate::types::ReplicaAutoScalingDescription>>,
}
impl TableAutoScalingDescriptionBuilder {
    /// <p>The name of the table.</p>
    pub fn table_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.table_name = Some(input.into());
        self
    }
    /// <p>The name of the table.</p>
    pub fn set_table_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.table_name = input;
        self
    }
    /// <p>The current state of the table:</p>
    /// <ul>
    /// <li> <p> <code>CREATING</code> - The table is being created.</p> </li>
    /// <li> <p> <code>UPDATING</code> - The table is being updated.</p> </li>
    /// <li> <p> <code>DELETING</code> - The table is being deleted.</p> </li>
    /// <li> <p> <code>ACTIVE</code> - The table is ready for use.</p> </li>
    /// </ul>
    pub fn table_status(mut self, input: crate::types::TableStatus) -> Self {
        self.table_status = Some(input);
        self
    }
    /// <p>The current state of the table:</p>
    /// <ul>
    /// <li> <p> <code>CREATING</code> - The table is being created.</p> </li>
    /// <li> <p> <code>UPDATING</code> - The table is being updated.</p> </li>
    /// <li> <p> <code>DELETING</code> - The table is being deleted.</p> </li>
    /// <li> <p> <code>ACTIVE</code> - The table is ready for use.</p> </li>
    /// </ul>
    pub fn set_table_status(
        mut self,
        input: std::option::Option<crate::types::TableStatus>,
    ) -> Self {
        self.table_status = input;
        self
    }
    /// Appends an item to `replicas`.
    ///
    /// To override the contents of this collection use [`set_replicas`](Self::set_replicas).
    ///
    /// <p>Represents replicas of the global table.</p>
    pub fn replicas(mut self, input: crate::types::ReplicaAutoScalingDescription) -> Self {
        let mut v = self.replicas.unwrap_or_default();
        v.push(input);
        self.replicas = Some(v);
        self
    }
    /// <p>Represents replicas of the global table.</p>
    pub fn set_replicas(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::ReplicaAutoScalingDescription>>,
    ) -> Self {
        self.replicas = input;
        self
    }
    /// Consumes the builder and constructs a [`TableAutoScalingDescription`](crate::types::TableAutoScalingDescription).
    pub fn build(self) -> crate::types::TableAutoScalingDescription {
        crate::types::TableAutoScalingDescription {
            table_name: self.table_name,
            table_status: self.table_status,
            replicas: self.replicas,
        }
    }
}
