// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains the description of the backup created for the table.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct BackupDescription {
    /// <p>Contains the details of the backup created for the table. </p>
    #[doc(hidden)]
    pub backup_details: std::option::Option<crate::types::BackupDetails>,
    /// <p>Contains the details of the table when the backup was created. </p>
    #[doc(hidden)]
    pub source_table_details: std::option::Option<crate::types::SourceTableDetails>,
    /// <p>Contains the details of the features enabled on the table when the backup was created. For example, LSIs, GSIs, streams, TTL.</p>
    #[doc(hidden)]
    pub source_table_feature_details: std::option::Option<crate::types::SourceTableFeatureDetails>,
}
impl BackupDescription {
    /// <p>Contains the details of the backup created for the table. </p>
    pub fn backup_details(&self) -> std::option::Option<&crate::types::BackupDetails> {
        self.backup_details.as_ref()
    }
    /// <p>Contains the details of the table when the backup was created. </p>
    pub fn source_table_details(&self) -> std::option::Option<&crate::types::SourceTableDetails> {
        self.source_table_details.as_ref()
    }
    /// <p>Contains the details of the features enabled on the table when the backup was created. For example, LSIs, GSIs, streams, TTL.</p>
    pub fn source_table_feature_details(
        &self,
    ) -> std::option::Option<&crate::types::SourceTableFeatureDetails> {
        self.source_table_feature_details.as_ref()
    }
}
impl BackupDescription {
    /// Creates a new builder-style object to manufacture [`BackupDescription`](crate::types::BackupDescription).
    pub fn builder() -> crate::types::builders::BackupDescriptionBuilder {
        crate::types::builders::BackupDescriptionBuilder::default()
    }
}

/// A builder for [`BackupDescription`](crate::types::BackupDescription).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct BackupDescriptionBuilder {
    pub(crate) backup_details: std::option::Option<crate::types::BackupDetails>,
    pub(crate) source_table_details: std::option::Option<crate::types::SourceTableDetails>,
    pub(crate) source_table_feature_details:
        std::option::Option<crate::types::SourceTableFeatureDetails>,
}
impl BackupDescriptionBuilder {
    /// <p>Contains the details of the backup created for the table. </p>
    pub fn backup_details(mut self, input: crate::types::BackupDetails) -> Self {
        self.backup_details = Some(input);
        self
    }
    /// <p>Contains the details of the backup created for the table. </p>
    pub fn set_backup_details(
        mut self,
        input: std::option::Option<crate::types::BackupDetails>,
    ) -> Self {
        self.backup_details = input;
        self
    }
    /// <p>Contains the details of the table when the backup was created. </p>
    pub fn source_table_details(mut self, input: crate::types::SourceTableDetails) -> Self {
        self.source_table_details = Some(input);
        self
    }
    /// <p>Contains the details of the table when the backup was created. </p>
    pub fn set_source_table_details(
        mut self,
        input: std::option::Option<crate::types::SourceTableDetails>,
    ) -> Self {
        self.source_table_details = input;
        self
    }
    /// <p>Contains the details of the features enabled on the table when the backup was created. For example, LSIs, GSIs, streams, TTL.</p>
    pub fn source_table_feature_details(
        mut self,
        input: crate::types::SourceTableFeatureDetails,
    ) -> Self {
        self.source_table_feature_details = Some(input);
        self
    }
    /// <p>Contains the details of the features enabled on the table when the backup was created. For example, LSIs, GSIs, streams, TTL.</p>
    pub fn set_source_table_feature_details(
        mut self,
        input: std::option::Option<crate::types::SourceTableFeatureDetails>,
    ) -> Self {
        self.source_table_feature_details = input;
        self
    }
    /// Consumes the builder and constructs a [`BackupDescription`](crate::types::BackupDescription).
    pub fn build(self) -> crate::types::BackupDescription {
        crate::types::BackupDescription {
            backup_details: self.backup_details,
            source_table_details: self.source_table_details,
            source_table_feature_details: self.source_table_feature_details,
        }
    }
}
