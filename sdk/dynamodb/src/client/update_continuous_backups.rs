// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateContinuousBackups`](crate::operation::update_continuous_backups::builders::UpdateContinuousBackupsFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`table_name(impl Into<String>)`](crate::operation::update_continuous_backups::builders::UpdateContinuousBackupsFluentBuilder::table_name) / [`set_table_name(Option<String>)`](crate::operation::update_continuous_backups::builders::UpdateContinuousBackupsFluentBuilder::set_table_name): <p>The name of the table.</p>
    ///   - [`point_in_time_recovery_specification(PointInTimeRecoverySpecification)`](crate::operation::update_continuous_backups::builders::UpdateContinuousBackupsFluentBuilder::point_in_time_recovery_specification) / [`set_point_in_time_recovery_specification(Option<PointInTimeRecoverySpecification>)`](crate::operation::update_continuous_backups::builders::UpdateContinuousBackupsFluentBuilder::set_point_in_time_recovery_specification): <p>Represents the settings used to enable point in time recovery.</p>
    /// - On success, responds with [`UpdateContinuousBackupsOutput`](crate::operation::update_continuous_backups::UpdateContinuousBackupsOutput) with field(s):
    ///   - [`continuous_backups_description(Option<ContinuousBackupsDescription>)`](crate::operation::update_continuous_backups::UpdateContinuousBackupsOutput::continuous_backups_description): <p>Represents the continuous backups and point in time recovery settings on the table.</p>
    /// - On failure, responds with [`SdkError<UpdateContinuousBackupsError>`](crate::operation::update_continuous_backups::UpdateContinuousBackupsError)
    pub fn update_continuous_backups(
        &self,
    ) -> crate::operation::update_continuous_backups::builders::UpdateContinuousBackupsFluentBuilder
    {
        crate::operation::update_continuous_backups::builders::UpdateContinuousBackupsFluentBuilder::new(self.handle.clone())
    }
}
