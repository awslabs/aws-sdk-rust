// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ImportTable`](crate::operation::import_table::builders::ImportTableFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`client_token(impl Into<String>)`](crate::operation::import_table::builders::ImportTableFluentBuilder::client_token) / [`set_client_token(Option<String>)`](crate::operation::import_table::builders::ImportTableFluentBuilder::set_client_token): <p>Providing a <code>ClientToken</code> makes the call to <code>ImportTableInput</code> idempotent, meaning that multiple identical calls have the same effect as one single call.</p>  <p>A client token is valid for 8 hours after the first request that uses it is completed. After 8 hours, any request with the same client token is treated as a new request. Do not resubmit the same request with the same client token for more than 8 hours, or the result might not be idempotent.</p>  <p>If you submit a request with the same client token but a change in other parameters within the 8-hour idempotency window, DynamoDB returns an <code>IdempotentParameterMismatch</code> exception.</p>
    ///   - [`s3_bucket_source(S3BucketSource)`](crate::operation::import_table::builders::ImportTableFluentBuilder::s3_bucket_source) / [`set_s3_bucket_source(Option<S3BucketSource>)`](crate::operation::import_table::builders::ImportTableFluentBuilder::set_s3_bucket_source): <p> The S3 bucket that provides the source for the import. </p>
    ///   - [`input_format(InputFormat)`](crate::operation::import_table::builders::ImportTableFluentBuilder::input_format) / [`set_input_format(Option<InputFormat>)`](crate::operation::import_table::builders::ImportTableFluentBuilder::set_input_format): <p> The format of the source data. Valid values for <code>ImportFormat</code> are <code>CSV</code>, <code>DYNAMODB_JSON</code> or <code>ION</code>. </p>
    ///   - [`input_format_options(InputFormatOptions)`](crate::operation::import_table::builders::ImportTableFluentBuilder::input_format_options) / [`set_input_format_options(Option<InputFormatOptions>)`](crate::operation::import_table::builders::ImportTableFluentBuilder::set_input_format_options): <p> Additional properties that specify how the input is formatted, </p>
    ///   - [`input_compression_type(InputCompressionType)`](crate::operation::import_table::builders::ImportTableFluentBuilder::input_compression_type) / [`set_input_compression_type(Option<InputCompressionType>)`](crate::operation::import_table::builders::ImportTableFluentBuilder::set_input_compression_type): <p> Type of compression to be used on the input coming from the imported table. </p>
    ///   - [`table_creation_parameters(TableCreationParameters)`](crate::operation::import_table::builders::ImportTableFluentBuilder::table_creation_parameters) / [`set_table_creation_parameters(Option<TableCreationParameters>)`](crate::operation::import_table::builders::ImportTableFluentBuilder::set_table_creation_parameters): <p>Parameters for the table to import the data into. </p>
    /// - On success, responds with [`ImportTableOutput`](crate::operation::import_table::ImportTableOutput) with field(s):
    ///   - [`import_table_description(Option<ImportTableDescription>)`](crate::operation::import_table::ImportTableOutput::import_table_description): <p> Represents the properties of the table created for the import, and parameters of the import. The import parameters include import status, how many items were processed, and how many errors were encountered. </p>
    /// - On failure, responds with [`SdkError<ImportTableError>`](crate::operation::import_table::ImportTableError)
    pub fn import_table(
        &self,
    ) -> crate::operation::import_table::builders::ImportTableFluentBuilder {
        crate::operation::import_table::builders::ImportTableFluentBuilder::new(self.handle.clone())
    }
}
