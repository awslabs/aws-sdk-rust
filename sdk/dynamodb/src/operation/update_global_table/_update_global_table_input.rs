// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct UpdateGlobalTableInput {
    /// <p>The global table name.</p>
    #[doc(hidden)]
    pub global_table_name: std::option::Option<std::string::String>,
    /// <p>A list of Regions that should be added or removed from the global table.</p>
    #[doc(hidden)]
    pub replica_updates: std::option::Option<std::vec::Vec<crate::types::ReplicaUpdate>>,
}
impl UpdateGlobalTableInput {
    /// <p>The global table name.</p>
    pub fn global_table_name(&self) -> std::option::Option<&str> {
        self.global_table_name.as_deref()
    }
    /// <p>A list of Regions that should be added or removed from the global table.</p>
    pub fn replica_updates(&self) -> std::option::Option<&[crate::types::ReplicaUpdate]> {
        self.replica_updates.as_deref()
    }
}
impl UpdateGlobalTableInput {
    /// Creates a new builder-style object to manufacture [`UpdateGlobalTableInput`](crate::operation::update_global_table::UpdateGlobalTableInput).
    pub fn builder(
    ) -> crate::operation::update_global_table::builders::UpdateGlobalTableInputBuilder {
        crate::operation::update_global_table::builders::UpdateGlobalTableInputBuilder::default()
    }
}

/// A builder for [`UpdateGlobalTableInput`](crate::operation::update_global_table::UpdateGlobalTableInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct UpdateGlobalTableInputBuilder {
    pub(crate) global_table_name: std::option::Option<std::string::String>,
    pub(crate) replica_updates: std::option::Option<std::vec::Vec<crate::types::ReplicaUpdate>>,
}
impl UpdateGlobalTableInputBuilder {
    /// <p>The global table name.</p>
    pub fn global_table_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.global_table_name = Some(input.into());
        self
    }
    /// <p>The global table name.</p>
    pub fn set_global_table_name(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.global_table_name = input;
        self
    }
    /// Appends an item to `replica_updates`.
    ///
    /// To override the contents of this collection use [`set_replica_updates`](Self::set_replica_updates).
    ///
    /// <p>A list of Regions that should be added or removed from the global table.</p>
    pub fn replica_updates(mut self, input: crate::types::ReplicaUpdate) -> Self {
        let mut v = self.replica_updates.unwrap_or_default();
        v.push(input);
        self.replica_updates = Some(v);
        self
    }
    /// <p>A list of Regions that should be added or removed from the global table.</p>
    pub fn set_replica_updates(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::ReplicaUpdate>>,
    ) -> Self {
        self.replica_updates = input;
        self
    }
    /// Consumes the builder and constructs a [`UpdateGlobalTableInput`](crate::operation::update_global_table::UpdateGlobalTableInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::update_global_table::UpdateGlobalTableInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::update_global_table::UpdateGlobalTableInput {
                global_table_name: self.global_table_name,
                replica_updates: self.replica_updates,
            },
        )
    }
}
