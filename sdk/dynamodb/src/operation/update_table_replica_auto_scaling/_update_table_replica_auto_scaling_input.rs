// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct UpdateTableReplicaAutoScalingInput {
    /// <p>Represents the auto scaling settings of the global secondary indexes of the replica to be updated.</p>
    #[doc(hidden)]
    pub global_secondary_index_updates:
        std::option::Option<std::vec::Vec<crate::types::GlobalSecondaryIndexAutoScalingUpdate>>,
    /// <p>The name of the global table to be updated.</p>
    #[doc(hidden)]
    pub table_name: std::option::Option<std::string::String>,
    /// <p>Represents the auto scaling settings to be modified for a global table or global secondary index.</p>
    #[doc(hidden)]
    pub provisioned_write_capacity_auto_scaling_update:
        std::option::Option<crate::types::AutoScalingSettingsUpdate>,
    /// <p>Represents the auto scaling settings of replicas of the table that will be modified.</p>
    #[doc(hidden)]
    pub replica_updates: std::option::Option<std::vec::Vec<crate::types::ReplicaAutoScalingUpdate>>,
}
impl UpdateTableReplicaAutoScalingInput {
    /// <p>Represents the auto scaling settings of the global secondary indexes of the replica to be updated.</p>
    pub fn global_secondary_index_updates(
        &self,
    ) -> std::option::Option<&[crate::types::GlobalSecondaryIndexAutoScalingUpdate]> {
        self.global_secondary_index_updates.as_deref()
    }
    /// <p>The name of the global table to be updated.</p>
    pub fn table_name(&self) -> std::option::Option<&str> {
        self.table_name.as_deref()
    }
    /// <p>Represents the auto scaling settings to be modified for a global table or global secondary index.</p>
    pub fn provisioned_write_capacity_auto_scaling_update(
        &self,
    ) -> std::option::Option<&crate::types::AutoScalingSettingsUpdate> {
        self.provisioned_write_capacity_auto_scaling_update.as_ref()
    }
    /// <p>Represents the auto scaling settings of replicas of the table that will be modified.</p>
    pub fn replica_updates(
        &self,
    ) -> std::option::Option<&[crate::types::ReplicaAutoScalingUpdate]> {
        self.replica_updates.as_deref()
    }
}
impl UpdateTableReplicaAutoScalingInput {
    /// Creates a new builder-style object to manufacture [`UpdateTableReplicaAutoScalingInput`](crate::operation::update_table_replica_auto_scaling::UpdateTableReplicaAutoScalingInput).
    pub fn builder() -> crate::operation::update_table_replica_auto_scaling::builders::UpdateTableReplicaAutoScalingInputBuilder{
        crate::operation::update_table_replica_auto_scaling::builders::UpdateTableReplicaAutoScalingInputBuilder::default()
    }
}

/// A builder for [`UpdateTableReplicaAutoScalingInput`](crate::operation::update_table_replica_auto_scaling::UpdateTableReplicaAutoScalingInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct UpdateTableReplicaAutoScalingInputBuilder {
    pub(crate) global_secondary_index_updates:
        std::option::Option<std::vec::Vec<crate::types::GlobalSecondaryIndexAutoScalingUpdate>>,
    pub(crate) table_name: std::option::Option<std::string::String>,
    pub(crate) provisioned_write_capacity_auto_scaling_update:
        std::option::Option<crate::types::AutoScalingSettingsUpdate>,
    pub(crate) replica_updates:
        std::option::Option<std::vec::Vec<crate::types::ReplicaAutoScalingUpdate>>,
}
impl UpdateTableReplicaAutoScalingInputBuilder {
    /// Appends an item to `global_secondary_index_updates`.
    ///
    /// To override the contents of this collection use [`set_global_secondary_index_updates`](Self::set_global_secondary_index_updates).
    ///
    /// <p>Represents the auto scaling settings of the global secondary indexes of the replica to be updated.</p>
    pub fn global_secondary_index_updates(
        mut self,
        input: crate::types::GlobalSecondaryIndexAutoScalingUpdate,
    ) -> Self {
        let mut v = self.global_secondary_index_updates.unwrap_or_default();
        v.push(input);
        self.global_secondary_index_updates = Some(v);
        self
    }
    /// <p>Represents the auto scaling settings of the global secondary indexes of the replica to be updated.</p>
    pub fn set_global_secondary_index_updates(
        mut self,
        input: std::option::Option<
            std::vec::Vec<crate::types::GlobalSecondaryIndexAutoScalingUpdate>,
        >,
    ) -> Self {
        self.global_secondary_index_updates = input;
        self
    }
    /// <p>The name of the global table to be updated.</p>
    pub fn table_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.table_name = Some(input.into());
        self
    }
    /// <p>The name of the global table to be updated.</p>
    pub fn set_table_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.table_name = input;
        self
    }
    /// <p>Represents the auto scaling settings to be modified for a global table or global secondary index.</p>
    pub fn provisioned_write_capacity_auto_scaling_update(
        mut self,
        input: crate::types::AutoScalingSettingsUpdate,
    ) -> Self {
        self.provisioned_write_capacity_auto_scaling_update = Some(input);
        self
    }
    /// <p>Represents the auto scaling settings to be modified for a global table or global secondary index.</p>
    pub fn set_provisioned_write_capacity_auto_scaling_update(
        mut self,
        input: std::option::Option<crate::types::AutoScalingSettingsUpdate>,
    ) -> Self {
        self.provisioned_write_capacity_auto_scaling_update = input;
        self
    }
    /// Appends an item to `replica_updates`.
    ///
    /// To override the contents of this collection use [`set_replica_updates`](Self::set_replica_updates).
    ///
    /// <p>Represents the auto scaling settings of replicas of the table that will be modified.</p>
    pub fn replica_updates(mut self, input: crate::types::ReplicaAutoScalingUpdate) -> Self {
        let mut v = self.replica_updates.unwrap_or_default();
        v.push(input);
        self.replica_updates = Some(v);
        self
    }
    /// <p>Represents the auto scaling settings of replicas of the table that will be modified.</p>
    pub fn set_replica_updates(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::ReplicaAutoScalingUpdate>>,
    ) -> Self {
        self.replica_updates = input;
        self
    }
    /// Consumes the builder and constructs a [`UpdateTableReplicaAutoScalingInput`](crate::operation::update_table_replica_auto_scaling::UpdateTableReplicaAutoScalingInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::update_table_replica_auto_scaling::UpdateTableReplicaAutoScalingInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::update_table_replica_auto_scaling::UpdateTableReplicaAutoScalingInput {
                global_secondary_index_updates: self.global_secondary_index_updates
                ,
                table_name: self.table_name
                ,
                provisioned_write_capacity_auto_scaling_update: self.provisioned_write_capacity_auto_scaling_update
                ,
                replica_updates: self.replica_updates
                ,
            }
        )
    }
}
