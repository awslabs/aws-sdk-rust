// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_batch_write_item_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::batch_write_item::BatchWriteItemInput,
) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    if let Some(var_1) = &input.request_items {
        #[allow(unused_mut)]
        let mut object_2 = object.key("RequestItems").start_object();
        for (key_3, value_4) in var_1 {
            {
                let mut array_5 = object_2.key(key_3.as_str()).start_array();
                for item_6 in value_4 {
                    {
                        #[allow(unused_mut)]
                        let mut object_7 = array_5.value().start_object();
                        crate::protocol_serde::shape_write_request::ser_write_request(
                            &mut object_7,
                            item_6,
                        )?;
                        object_7.finish();
                    }
                }
                array_5.finish();
            }
        }
        object_2.finish();
    }
    if let Some(var_8) = &input.return_consumed_capacity {
        object.key("ReturnConsumedCapacity").string(var_8.as_str());
    }
    if let Some(var_9) = &input.return_item_collection_metrics {
        object
            .key("ReturnItemCollectionMetrics")
            .string(var_9.as_str());
    }
    Ok(())
}
