// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_execute_statement_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::execute_statement::ExecuteStatementInput,
) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    if let Some(var_1) = &input.statement {
        object.key("Statement").string(var_1.as_str());
    }
    if let Some(var_2) = &input.parameters {
        let mut array_3 = object.key("Parameters").start_array();
        for item_4 in var_2 {
            {
                #[allow(unused_mut)]
                let mut object_5 = array_3.value().start_object();
                crate::protocol_serde::shape_attribute_value::ser_attribute_value(
                    &mut object_5,
                    item_4,
                )?;
                object_5.finish();
            }
        }
        array_3.finish();
    }
    if let Some(var_6) = &input.consistent_read {
        object.key("ConsistentRead").boolean(*var_6);
    }
    if let Some(var_7) = &input.next_token {
        object.key("NextToken").string(var_7.as_str());
    }
    if let Some(var_8) = &input.return_consumed_capacity {
        object.key("ReturnConsumedCapacity").string(var_8.as_str());
    }
    if let Some(var_9) = &input.limit {
        object.key("Limit").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_9).into()),
        );
    }
    Ok(())
}
