// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_import_table_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::import_table::ImportTableInput,
) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    if let Some(var_1) = &input.client_token {
        object.key("ClientToken").string(var_1.as_str());
    }
    if let Some(var_2) = &input.s3_bucket_source {
        #[allow(unused_mut)]
        let mut object_3 = object.key("S3BucketSource").start_object();
        crate::protocol_serde::shape_s3_bucket_source::ser_s3_bucket_source(&mut object_3, var_2)?;
        object_3.finish();
    }
    if let Some(var_4) = &input.input_format {
        object.key("InputFormat").string(var_4.as_str());
    }
    if let Some(var_5) = &input.input_format_options {
        #[allow(unused_mut)]
        let mut object_6 = object.key("InputFormatOptions").start_object();
        crate::protocol_serde::shape_input_format_options::ser_input_format_options(
            &mut object_6,
            var_5,
        )?;
        object_6.finish();
    }
    if let Some(var_7) = &input.input_compression_type {
        object.key("InputCompressionType").string(var_7.as_str());
    }
    if let Some(var_8) = &input.table_creation_parameters {
        #[allow(unused_mut)]
        let mut object_9 = object.key("TableCreationParameters").start_object();
        crate::protocol_serde::shape_table_creation_parameters::ser_table_creation_parameters(
            &mut object_9,
            var_8,
        )?;
        object_9.finish();
    }
    Ok(())
}
