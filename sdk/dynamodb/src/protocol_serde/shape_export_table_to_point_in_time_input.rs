// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_export_table_to_point_in_time_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::export_table_to_point_in_time::ExportTableToPointInTimeInput,
) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    if let Some(var_1) = &input.table_arn {
        object.key("TableArn").string(var_1.as_str());
    }
    if let Some(var_2) = &input.export_time {
        object
            .key("ExportTime")
            .date_time(var_2, aws_smithy_types::date_time::Format::EpochSeconds)?;
    }
    if let Some(var_3) = &input.client_token {
        object.key("ClientToken").string(var_3.as_str());
    }
    if let Some(var_4) = &input.s3_bucket {
        object.key("S3Bucket").string(var_4.as_str());
    }
    if let Some(var_5) = &input.s3_bucket_owner {
        object.key("S3BucketOwner").string(var_5.as_str());
    }
    if let Some(var_6) = &input.s3_prefix {
        object.key("S3Prefix").string(var_6.as_str());
    }
    if let Some(var_7) = &input.s3_sse_algorithm {
        object.key("S3SseAlgorithm").string(var_7.as_str());
    }
    if let Some(var_8) = &input.s3_sse_kms_key_id {
        object.key("S3SseKmsKeyId").string(var_8.as_str());
    }
    if let Some(var_9) = &input.export_format {
        object.key("ExportFormat").string(var_9.as_str());
    }
    Ok(())
}
