// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_create_instances_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::create_instances::CreateInstancesInput,
) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    if let Some(var_1) = &input.instance_names {
        let mut array_2 = object.key("instanceNames").start_array();
        for item_3 in var_1 {
            {
                array_2.value().string(item_3.as_str());
            }
        }
        array_2.finish();
    }
    if let Some(var_4) = &input.availability_zone {
        object.key("availabilityZone").string(var_4.as_str());
    }
    if let Some(var_5) = &input.custom_image_name {
        object.key("customImageName").string(var_5.as_str());
    }
    if let Some(var_6) = &input.blueprint_id {
        object.key("blueprintId").string(var_6.as_str());
    }
    if let Some(var_7) = &input.bundle_id {
        object.key("bundleId").string(var_7.as_str());
    }
    if let Some(var_8) = &input.user_data {
        object.key("userData").string(var_8.as_str());
    }
    if let Some(var_9) = &input.key_pair_name {
        object.key("keyPairName").string(var_9.as_str());
    }
    if let Some(var_10) = &input.tags {
        let mut array_11 = object.key("tags").start_array();
        for item_12 in var_10 {
            {
                #[allow(unused_mut)]
                let mut object_13 = array_11.value().start_object();
                crate::protocol_serde::shape_tag::ser_tag(&mut object_13, item_12)?;
                object_13.finish();
            }
        }
        array_11.finish();
    }
    if let Some(var_14) = &input.add_ons {
        let mut array_15 = object.key("addOns").start_array();
        for item_16 in var_14 {
            {
                #[allow(unused_mut)]
                let mut object_17 = array_15.value().start_object();
                crate::protocol_serde::shape_add_on_request::ser_add_on_request(
                    &mut object_17,
                    item_16,
                )?;
                object_17.finish();
            }
        }
        array_15.finish();
    }
    if let Some(var_18) = &input.ip_address_type {
        object.key("ipAddressType").string(var_18.as_str());
    }
    Ok(())
}
