// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_update_container_service_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::update_container_service::UpdateContainerServiceInput,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.service_name {
        object.key("serviceName").string(var_1.as_str());
    }
    if let Some(var_2) = &input.power {
        object.key("power").string(var_2.as_str());
    }
    if let Some(var_3) = &input.scale {
        object.key("scale").number(
            #[allow(clippy::useless_conversion)]
            ::aws_smithy_types::Number::NegInt((*var_3).into()),
        );
    }
    if let Some(var_4) = &input.is_disabled {
        object.key("isDisabled").boolean(*var_4);
    }
    if let Some(var_5) = &input.public_domain_names {
        #[allow(unused_mut)]
        let mut object_6 = object.key("publicDomainNames").start_object();
        for (key_7, value_8) in var_5 {
            {
                let mut array_9 = object_6.key(key_7.as_str()).start_array();
                for item_10 in value_8 {
                    {
                        array_9.value().string(item_10.as_str());
                    }
                }
                array_9.finish();
            }
        }
        object_6.finish();
    }
    if let Some(var_11) = &input.private_registry_access {
        #[allow(unused_mut)]
        let mut object_12 = object.key("privateRegistryAccess").start_object();
        crate::protocol_serde::shape_private_registry_access_request::ser_private_registry_access_request(&mut object_12, var_11)?;
        object_12.finish();
    }
    Ok(())
}
