// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_put_alarm_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::put_alarm::PutAlarmInput,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.alarm_name {
        object.key("alarmName").string(var_1.as_str());
    }
    if let Some(var_2) = &input.metric_name {
        object.key("metricName").string(var_2.as_str());
    }
    if let Some(var_3) = &input.monitored_resource_name {
        object.key("monitoredResourceName").string(var_3.as_str());
    }
    if let Some(var_4) = &input.comparison_operator {
        object.key("comparisonOperator").string(var_4.as_str());
    }
    if let Some(var_5) = &input.threshold {
        object.key("threshold").number(
            #[allow(clippy::useless_conversion)]
            ::aws_smithy_types::Number::Float((*var_5).into()),
        );
    }
    if let Some(var_6) = &input.evaluation_periods {
        object.key("evaluationPeriods").number(
            #[allow(clippy::useless_conversion)]
            ::aws_smithy_types::Number::NegInt((*var_6).into()),
        );
    }
    if let Some(var_7) = &input.datapoints_to_alarm {
        object.key("datapointsToAlarm").number(
            #[allow(clippy::useless_conversion)]
            ::aws_smithy_types::Number::NegInt((*var_7).into()),
        );
    }
    if let Some(var_8) = &input.treat_missing_data {
        object.key("treatMissingData").string(var_8.as_str());
    }
    if let Some(var_9) = &input.contact_protocols {
        let mut array_10 = object.key("contactProtocols").start_array();
        for item_11 in var_9 {
            {
                array_10.value().string(item_11.as_str());
            }
        }
        array_10.finish();
    }
    if let Some(var_12) = &input.notification_triggers {
        let mut array_13 = object.key("notificationTriggers").start_array();
        for item_14 in var_12 {
            {
                array_13.value().string(item_14.as_str());
            }
        }
        array_13.finish();
    }
    if let Some(var_15) = &input.notification_enabled {
        object.key("notificationEnabled").boolean(*var_15);
    }
    Ok(())
}
