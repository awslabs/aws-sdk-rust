// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_update_relational_database_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::update_relational_database::UpdateRelationalDatabaseInput,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.relational_database_name {
        object.key("relationalDatabaseName").string(var_1.as_str());
    }
    if let Some(var_2) = &input.master_user_password {
        object.key("masterUserPassword").string(var_2.as_str());
    }
    if let Some(var_3) = &input.rotate_master_user_password {
        object.key("rotateMasterUserPassword").boolean(*var_3);
    }
    if let Some(var_4) = &input.preferred_backup_window {
        object.key("preferredBackupWindow").string(var_4.as_str());
    }
    if let Some(var_5) = &input.preferred_maintenance_window {
        object.key("preferredMaintenanceWindow").string(var_5.as_str());
    }
    if let Some(var_6) = &input.enable_backup_retention {
        object.key("enableBackupRetention").boolean(*var_6);
    }
    if let Some(var_7) = &input.disable_backup_retention {
        object.key("disableBackupRetention").boolean(*var_7);
    }
    if let Some(var_8) = &input.publicly_accessible {
        object.key("publiclyAccessible").boolean(*var_8);
    }
    if let Some(var_9) = &input.apply_immediately {
        object.key("applyImmediately").boolean(*var_9);
    }
    if let Some(var_10) = &input.ca_certificate_identifier {
        object.key("caCertificateIdentifier").string(var_10.as_str());
    }
    Ok(())
}
