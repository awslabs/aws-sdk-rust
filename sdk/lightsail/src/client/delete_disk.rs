// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeleteDisk`](crate::client::fluent_builders::DeleteDisk) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`disk_name(impl Into<String>)`](crate::client::fluent_builders::DeleteDisk::disk_name) / [`set_disk_name(Option<String>)`](crate::client::fluent_builders::DeleteDisk::set_disk_name): <p>The unique name of the disk you want to delete (e.g., <code>my-disk</code>).</p>
    ///   - [`force_delete_add_ons(bool)`](crate::client::fluent_builders::DeleteDisk::force_delete_add_ons) / [`set_force_delete_add_ons(Option<bool>)`](crate::client::fluent_builders::DeleteDisk::set_force_delete_add_ons): <p>A Boolean value to indicate whether to delete all add-ons for the disk.</p>
    /// - On success, responds with [`DeleteDiskOutput`](crate::output::DeleteDiskOutput) with field(s):
    ///   - [`operations(Option<Vec<Operation>>)`](crate::output::DeleteDiskOutput::operations): <p>An array of objects that describe the result of the action, such as the status of the request, the timestamp of the request, and the resources affected by the request.</p>
    /// - On failure, responds with [`SdkError<DeleteDiskError>`](crate::error::DeleteDiskError)
    pub fn delete_disk(&self) -> crate::client::fluent_builders::DeleteDisk {
        crate::client::fluent_builders::DeleteDisk::new(self.handle.clone())
    }
}
