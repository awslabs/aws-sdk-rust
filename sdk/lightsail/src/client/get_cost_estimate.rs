// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetCostEstimate`](crate::operation::get_cost_estimate::builders::GetCostEstimateFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`resource_name(impl Into<String>)`](crate::operation::get_cost_estimate::builders::GetCostEstimateFluentBuilder::resource_name) / [`set_resource_name(Option<String>)`](crate::operation::get_cost_estimate::builders::GetCostEstimateFluentBuilder::set_resource_name):<br>required: **true**<br><p>The resource name.</p><br>
    ///   - [`start_time(DateTime)`](crate::operation::get_cost_estimate::builders::GetCostEstimateFluentBuilder::start_time) / [`set_start_time(Option<DateTime>)`](crate::operation::get_cost_estimate::builders::GetCostEstimateFluentBuilder::set_start_time):<br>required: **true**<br><p>The cost estimate start time.</p>  <p>Constraints:</p>  <ul>   <li> <p>Specified in Coordinated Universal Time (UTC).</p> </li>   <li> <p>Specified in the Unix time format.</p> <p>For example, if you want to use a start time of October 1, 2018, at 8 PM UTC, specify <code>1538424000</code> as the start time.</p> </li>  </ul>  <p>You can convert a human-friendly time to Unix time format using a converter like <a href="https://www.epochconverter.com/">Epoch converter</a>.</p><br>
    ///   - [`end_time(DateTime)`](crate::operation::get_cost_estimate::builders::GetCostEstimateFluentBuilder::end_time) / [`set_end_time(Option<DateTime>)`](crate::operation::get_cost_estimate::builders::GetCostEstimateFluentBuilder::set_end_time):<br>required: **true**<br><p>The cost estimate end time.</p>  <p>Constraints:</p>  <ul>   <li> <p>Specified in Coordinated Universal Time (UTC).</p> </li>   <li> <p>Specified in the Unix time format.</p> <p>For example, if you want to use an end time of October 1, 2018, at 9 PM UTC, specify <code>1538427600</code> as the end time.</p> </li>  </ul>  <p>You can convert a human-friendly time to Unix time format using a converter like <a href="https://www.epochconverter.com/">Epoch converter</a>.</p><br>
    /// - On success, responds with [`GetCostEstimateOutput`](crate::operation::get_cost_estimate::GetCostEstimateOutput) with field(s):
    ///   - [`resources_budget_estimate(Option<Vec::<ResourceBudgetEstimate>>)`](crate::operation::get_cost_estimate::GetCostEstimateOutput::resources_budget_estimate): <p>Returns the estimate's forecasted cost or usage.</p>
    /// - On failure, responds with [`SdkError<GetCostEstimateError>`](crate::operation::get_cost_estimate::GetCostEstimateError)
    pub fn get_cost_estimate(&self) -> crate::operation::get_cost_estimate::builders::GetCostEstimateFluentBuilder {
        crate::operation::get_cost_estimate::builders::GetCostEstimateFluentBuilder::new(self.handle.clone())
    }
}
