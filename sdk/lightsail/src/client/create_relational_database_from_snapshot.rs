// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateRelationalDatabaseFromSnapshot`](crate::operation::create_relational_database_from_snapshot::builders::CreateRelationalDatabaseFromSnapshotFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`relational_database_name(impl Into<String>)`](crate::operation::create_relational_database_from_snapshot::builders::CreateRelationalDatabaseFromSnapshotFluentBuilder::relational_database_name) / [`set_relational_database_name(Option<String>)`](crate::operation::create_relational_database_from_snapshot::builders::CreateRelationalDatabaseFromSnapshotFluentBuilder::set_relational_database_name): <p>The name to use for your new Lightsail database resource.</p>  <p>Constraints:</p>  <ul>   <li> <p>Must contain from 2 to 255 alphanumeric characters, or hyphens.</p> </li>   <li> <p>The first and last character must be a letter or number.</p> </li>  </ul>
    ///   - [`availability_zone(impl Into<String>)`](crate::operation::create_relational_database_from_snapshot::builders::CreateRelationalDatabaseFromSnapshotFluentBuilder::availability_zone) / [`set_availability_zone(Option<String>)`](crate::operation::create_relational_database_from_snapshot::builders::CreateRelationalDatabaseFromSnapshotFluentBuilder::set_availability_zone): <p>The Availability Zone in which to create your new database. Use the <code>us-east-2a</code> case-sensitive format.</p>  <p>You can get a list of Availability Zones by using the <code>get regions</code> operation. Be sure to add the <code>include relational database Availability Zones</code> parameter to your request.</p>
    ///   - [`publicly_accessible(bool)`](crate::operation::create_relational_database_from_snapshot::builders::CreateRelationalDatabaseFromSnapshotFluentBuilder::publicly_accessible) / [`set_publicly_accessible(Option<bool>)`](crate::operation::create_relational_database_from_snapshot::builders::CreateRelationalDatabaseFromSnapshotFluentBuilder::set_publicly_accessible): <p>Specifies the accessibility options for your new database. A value of <code>true</code> specifies a database that is available to resources outside of your Lightsail account. A value of <code>false</code> specifies a database that is available only to your Lightsail resources in the same region as your database.</p>
    ///   - [`relational_database_snapshot_name(impl Into<String>)`](crate::operation::create_relational_database_from_snapshot::builders::CreateRelationalDatabaseFromSnapshotFluentBuilder::relational_database_snapshot_name) / [`set_relational_database_snapshot_name(Option<String>)`](crate::operation::create_relational_database_from_snapshot::builders::CreateRelationalDatabaseFromSnapshotFluentBuilder::set_relational_database_snapshot_name): <p>The name of the database snapshot from which to create your new database.</p>
    ///   - [`relational_database_bundle_id(impl Into<String>)`](crate::operation::create_relational_database_from_snapshot::builders::CreateRelationalDatabaseFromSnapshotFluentBuilder::relational_database_bundle_id) / [`set_relational_database_bundle_id(Option<String>)`](crate::operation::create_relational_database_from_snapshot::builders::CreateRelationalDatabaseFromSnapshotFluentBuilder::set_relational_database_bundle_id): <p>The bundle ID for your new database. A bundle describes the performance specifications for your database.</p>  <p>You can get a list of database bundle IDs by using the <code>get relational database bundles</code> operation.</p>  <p>When creating a new database from a snapshot, you cannot choose a bundle that is smaller than the bundle of the source database.</p>
    ///   - [`source_relational_database_name(impl Into<String>)`](crate::operation::create_relational_database_from_snapshot::builders::CreateRelationalDatabaseFromSnapshotFluentBuilder::source_relational_database_name) / [`set_source_relational_database_name(Option<String>)`](crate::operation::create_relational_database_from_snapshot::builders::CreateRelationalDatabaseFromSnapshotFluentBuilder::set_source_relational_database_name): <p>The name of the source database.</p>
    ///   - [`restore_time(DateTime)`](crate::operation::create_relational_database_from_snapshot::builders::CreateRelationalDatabaseFromSnapshotFluentBuilder::restore_time) / [`set_restore_time(Option<DateTime>)`](crate::operation::create_relational_database_from_snapshot::builders::CreateRelationalDatabaseFromSnapshotFluentBuilder::set_restore_time): <p>The date and time to restore your database from.</p>  <p>Constraints:</p>  <ul>   <li> <p>Must be before the latest restorable time for the database.</p> </li>   <li> <p>Cannot be specified if the <code>use latest restorable time</code> parameter is <code>true</code>.</p> </li>   <li> <p>Specified in Coordinated Universal Time (UTC).</p> </li>   <li> <p>Specified in the Unix time format.</p> <p>For example, if you wish to use a restore time of October 1, 2018, at 8 PM UTC, then you input <code>1538424000</code> as the restore time.</p> </li>  </ul>
    ///   - [`use_latest_restorable_time(bool)`](crate::operation::create_relational_database_from_snapshot::builders::CreateRelationalDatabaseFromSnapshotFluentBuilder::use_latest_restorable_time) / [`set_use_latest_restorable_time(Option<bool>)`](crate::operation::create_relational_database_from_snapshot::builders::CreateRelationalDatabaseFromSnapshotFluentBuilder::set_use_latest_restorable_time): <p>Specifies whether your database is restored from the latest backup time. A value of <code>true</code> restores from the latest backup time. </p>  <p>Default: <code>false</code> </p>  <p>Constraints: Cannot be specified if the <code>restore time</code> parameter is provided.</p>
    ///   - [`tags(Vec<Tag>)`](crate::operation::create_relational_database_from_snapshot::builders::CreateRelationalDatabaseFromSnapshotFluentBuilder::tags) / [`set_tags(Option<Vec<Tag>>)`](crate::operation::create_relational_database_from_snapshot::builders::CreateRelationalDatabaseFromSnapshotFluentBuilder::set_tags): <p>The tag keys and optional values to add to the resource during create.</p>  <p>Use the <code>TagResource</code> action to tag a resource after it's created.</p>
    /// - On success, responds with [`CreateRelationalDatabaseFromSnapshotOutput`](crate::operation::create_relational_database_from_snapshot::CreateRelationalDatabaseFromSnapshotOutput) with field(s):
    ///   - [`operations(Option<Vec<Operation>>)`](crate::operation::create_relational_database_from_snapshot::CreateRelationalDatabaseFromSnapshotOutput::operations): <p>An array of objects that describe the result of the action, such as the status of the request, the timestamp of the request, and the resources affected by the request.</p>
    /// - On failure, responds with [`SdkError<CreateRelationalDatabaseFromSnapshotError>`](crate::operation::create_relational_database_from_snapshot::CreateRelationalDatabaseFromSnapshotError)
    pub fn create_relational_database_from_snapshot(&self) -> crate::operation::create_relational_database_from_snapshot::builders::CreateRelationalDatabaseFromSnapshotFluentBuilder{
        crate::operation::create_relational_database_from_snapshot::builders::CreateRelationalDatabaseFromSnapshotFluentBuilder::new(self.handle.clone())
    }
}
