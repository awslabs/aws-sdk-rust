// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateCertificate`](crate::client::fluent_builders::CreateCertificate) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`certificate_name(impl Into<String>)`](crate::client::fluent_builders::CreateCertificate::certificate_name) / [`set_certificate_name(Option<String>)`](crate::client::fluent_builders::CreateCertificate::set_certificate_name): <p>The name for the certificate.</p>
    ///   - [`domain_name(impl Into<String>)`](crate::client::fluent_builders::CreateCertificate::domain_name) / [`set_domain_name(Option<String>)`](crate::client::fluent_builders::CreateCertificate::set_domain_name): <p>The domain name (e.g., <code>example.com</code>) for the certificate.</p>
    ///   - [`subject_alternative_names(Vec<String>)`](crate::client::fluent_builders::CreateCertificate::subject_alternative_names) / [`set_subject_alternative_names(Option<Vec<String>>)`](crate::client::fluent_builders::CreateCertificate::set_subject_alternative_names): <p>An array of strings that specify the alternate domains (e.g., <code>example2.com</code>) and subdomains (e.g., <code>blog.example.com</code>) for the certificate.</p>  <p>You can specify a maximum of nine alternate domains (in addition to the primary domain name).</p>  <p>Wildcard domain entries (e.g., <code>*.example.com</code>) are not supported.</p>
    ///   - [`tags(Vec<Tag>)`](crate::client::fluent_builders::CreateCertificate::tags) / [`set_tags(Option<Vec<Tag>>)`](crate::client::fluent_builders::CreateCertificate::set_tags): <p>The tag keys and optional values to add to the certificate during create.</p>  <p>Use the <code>TagResource</code> action to tag a resource after it's created.</p>
    /// - On success, responds with [`CreateCertificateOutput`](crate::output::CreateCertificateOutput) with field(s):
    ///   - [`certificate(Option<CertificateSummary>)`](crate::output::CreateCertificateOutput::certificate): <p>An object that describes the certificate created.</p>
    ///   - [`operations(Option<Vec<Operation>>)`](crate::output::CreateCertificateOutput::operations): <p>An array of objects that describe the result of the action, such as the status of the request, the timestamp of the request, and the resources affected by the request.</p>
    /// - On failure, responds with [`SdkError<CreateCertificateError>`](crate::error::CreateCertificateError)
    pub fn create_certificate(&self) -> crate::client::fluent_builders::CreateCertificate {
        crate::client::fluent_builders::CreateCertificate::new(self.handle.clone())
    }
}
