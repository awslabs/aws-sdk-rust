// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateLoadBalancerTlsCertificate`](crate::operation::create_load_balancer_tls_certificate::builders::CreateLoadBalancerTlsCertificateFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`load_balancer_name(impl Into<String>)`](crate::operation::create_load_balancer_tls_certificate::builders::CreateLoadBalancerTlsCertificateFluentBuilder::load_balancer_name) / [`set_load_balancer_name(Option<String>)`](crate::operation::create_load_balancer_tls_certificate::builders::CreateLoadBalancerTlsCertificateFluentBuilder::set_load_balancer_name): <p>The load balancer name where you want to create the SSL/TLS certificate.</p>
    ///   - [`certificate_name(impl Into<String>)`](crate::operation::create_load_balancer_tls_certificate::builders::CreateLoadBalancerTlsCertificateFluentBuilder::certificate_name) / [`set_certificate_name(Option<String>)`](crate::operation::create_load_balancer_tls_certificate::builders::CreateLoadBalancerTlsCertificateFluentBuilder::set_certificate_name): <p>The SSL/TLS certificate name.</p>  <p>You can have up to 10 certificates in your account at one time. Each Lightsail load balancer can have up to 2 certificates associated with it at one time. There is also an overall limit to the number of certificates that can be issue in a 365-day period. For more information, see <a href="http://docs.aws.amazon.com/acm/latest/userguide/acm-limits.html">Limits</a>.</p>
    ///   - [`certificate_domain_name(impl Into<String>)`](crate::operation::create_load_balancer_tls_certificate::builders::CreateLoadBalancerTlsCertificateFluentBuilder::certificate_domain_name) / [`set_certificate_domain_name(Option<String>)`](crate::operation::create_load_balancer_tls_certificate::builders::CreateLoadBalancerTlsCertificateFluentBuilder::set_certificate_domain_name): <p>The domain name (e.g., <code>example.com</code>) for your SSL/TLS certificate.</p>
    ///   - [`certificate_alternative_names(Vec<String>)`](crate::operation::create_load_balancer_tls_certificate::builders::CreateLoadBalancerTlsCertificateFluentBuilder::certificate_alternative_names) / [`set_certificate_alternative_names(Option<Vec<String>>)`](crate::operation::create_load_balancer_tls_certificate::builders::CreateLoadBalancerTlsCertificateFluentBuilder::set_certificate_alternative_names): <p>An array of strings listing alternative domains and subdomains for your SSL/TLS certificate. Lightsail will de-dupe the names for you. You can have a maximum of 9 alternative names (in addition to the 1 primary domain). We do not support wildcards (e.g., <code>*.example.com</code>).</p>
    ///   - [`tags(Vec<Tag>)`](crate::operation::create_load_balancer_tls_certificate::builders::CreateLoadBalancerTlsCertificateFluentBuilder::tags) / [`set_tags(Option<Vec<Tag>>)`](crate::operation::create_load_balancer_tls_certificate::builders::CreateLoadBalancerTlsCertificateFluentBuilder::set_tags): <p>The tag keys and optional values to add to the resource during create.</p>  <p>Use the <code>TagResource</code> action to tag a resource after it's created.</p>
    /// - On success, responds with [`CreateLoadBalancerTlsCertificateOutput`](crate::operation::create_load_balancer_tls_certificate::CreateLoadBalancerTlsCertificateOutput) with field(s):
    ///   - [`operations(Option<Vec<Operation>>)`](crate::operation::create_load_balancer_tls_certificate::CreateLoadBalancerTlsCertificateOutput::operations): <p>An array of objects that describe the result of the action, such as the status of the request, the timestamp of the request, and the resources affected by the request.</p>
    /// - On failure, responds with [`SdkError<CreateLoadBalancerTlsCertificateError>`](crate::operation::create_load_balancer_tls_certificate::CreateLoadBalancerTlsCertificateError)
    pub fn create_load_balancer_tls_certificate(&self) -> crate::operation::create_load_balancer_tls_certificate::builders::CreateLoadBalancerTlsCertificateFluentBuilder{
        crate::operation::create_load_balancer_tls_certificate::builders::CreateLoadBalancerTlsCertificateFluentBuilder::new(self.handle.clone())
    }
}
