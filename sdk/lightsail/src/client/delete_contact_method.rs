// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeleteContactMethod`](crate::operation::delete_contact_method::builders::DeleteContactMethodFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`protocol(ContactProtocol)`](crate::operation::delete_contact_method::builders::DeleteContactMethodFluentBuilder::protocol) / [`set_protocol(Option<ContactProtocol>)`](crate::operation::delete_contact_method::builders::DeleteContactMethodFluentBuilder::set_protocol): <p>The protocol that will be deleted, such as <code>Email</code> or <code>SMS</code> (text messaging).</p> <note>   <p>To delete an <code>Email</code> and an <code>SMS</code> contact method if you added both, you must run separate <code>DeleteContactMethod</code> actions to delete each protocol.</p>  </note>
    /// - On success, responds with [`DeleteContactMethodOutput`](crate::operation::delete_contact_method::DeleteContactMethodOutput) with field(s):
    ///   - [`operations(Option<Vec<Operation>>)`](crate::operation::delete_contact_method::DeleteContactMethodOutput::operations): <p>An array of objects that describe the result of the action, such as the status of the request, the timestamp of the request, and the resources affected by the request.</p>
    /// - On failure, responds with [`SdkError<DeleteContactMethodError>`](crate::operation::delete_contact_method::DeleteContactMethodError)
    pub fn delete_contact_method(
        &self,
    ) -> crate::operation::delete_contact_method::builders::DeleteContactMethodFluentBuilder {
        crate::operation::delete_contact_method::builders::DeleteContactMethodFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
