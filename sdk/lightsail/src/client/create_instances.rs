// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateInstances`](crate::operation::create_instances::builders::CreateInstancesFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`instance_names(impl Into<String>)`](crate::operation::create_instances::builders::CreateInstancesFluentBuilder::instance_names) / [`set_instance_names(Option<Vec::<String>>)`](crate::operation::create_instances::builders::CreateInstancesFluentBuilder::set_instance_names):<br>required: **true**<br><p>The names to use for your new Lightsail instances. Separate multiple values using quotation marks and commas, for example: <code>["MyFirstInstance","MySecondInstance"]</code> </p><br>
    ///   - [`availability_zone(impl Into<String>)`](crate::operation::create_instances::builders::CreateInstancesFluentBuilder::availability_zone) / [`set_availability_zone(Option<String>)`](crate::operation::create_instances::builders::CreateInstancesFluentBuilder::set_availability_zone):<br>required: **true**<br><p>The Availability Zone in which to create your instance. Use the following format: <code>us-east-2a</code> (case sensitive). You can get a list of Availability Zones by using the <a href="http://docs.aws.amazon.com/lightsail/2016-11-28/api-reference/API_GetRegions.html">get regions</a> operation. Be sure to add the <code>include Availability Zones</code> parameter to your request.</p><br>
    ///   - [`custom_image_name(impl Into<String>)`](crate::operation::create_instances::builders::CreateInstancesFluentBuilder::custom_image_name) / [`set_custom_image_name(Option<String>)`](crate::operation::create_instances::builders::CreateInstancesFluentBuilder::set_custom_image_name):<br>required: **false**<br><p>(Deprecated) The name for your custom image.</p> <note>   <p>In releases prior to June 12, 2017, this parameter was ignored by the API. It is now deprecated.</p>  </note><br>
    ///   - [`blueprint_id(impl Into<String>)`](crate::operation::create_instances::builders::CreateInstancesFluentBuilder::blueprint_id) / [`set_blueprint_id(Option<String>)`](crate::operation::create_instances::builders::CreateInstancesFluentBuilder::set_blueprint_id):<br>required: **true**<br><p>The ID for a virtual private server image (e.g., <code>app_wordpress_4_4</code> or <code>app_lamp_7_0</code>). Use the <code>get blueprints</code> operation to return a list of available images (or <i>blueprints</i>).</p> <note>   <p>Use active blueprints when creating new instances. Inactive blueprints are listed to support customers with existing instances and are not necessarily available to create new instances. Blueprints are marked inactive when they become outdated due to operating system updates or new application releases.</p>  </note><br>
    ///   - [`bundle_id(impl Into<String>)`](crate::operation::create_instances::builders::CreateInstancesFluentBuilder::bundle_id) / [`set_bundle_id(Option<String>)`](crate::operation::create_instances::builders::CreateInstancesFluentBuilder::set_bundle_id):<br>required: **true**<br><p>The bundle of specification information for your virtual private server (or <i>instance</i>), including the pricing plan (e.g., <code>micro_1_0</code>).</p><br>
    ///   - [`user_data(impl Into<String>)`](crate::operation::create_instances::builders::CreateInstancesFluentBuilder::user_data) / [`set_user_data(Option<String>)`](crate::operation::create_instances::builders::CreateInstancesFluentBuilder::set_user_data):<br>required: **false**<br><p>A launch script you can create that configures a server with additional user data. For example, you might want to run <code>apt-get -y update</code>.</p> <note>   <p>Depending on the machine image you choose, the command to get software on your instance varies. Amazon Linux and CentOS use <code>yum</code>, Debian and Ubuntu use <code>apt-get</code>, and FreeBSD uses <code>pkg</code>. For a complete list, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en_us/articles/compare-options-choose-lightsail-instance-image">Amazon Lightsail Developer Guide</a>.</p>  </note><br>
    ///   - [`key_pair_name(impl Into<String>)`](crate::operation::create_instances::builders::CreateInstancesFluentBuilder::key_pair_name) / [`set_key_pair_name(Option<String>)`](crate::operation::create_instances::builders::CreateInstancesFluentBuilder::set_key_pair_name):<br>required: **false**<br><p>The name of your key pair.</p><br>
    ///   - [`tags(Tag)`](crate::operation::create_instances::builders::CreateInstancesFluentBuilder::tags) / [`set_tags(Option<Vec::<Tag>>)`](crate::operation::create_instances::builders::CreateInstancesFluentBuilder::set_tags):<br>required: **false**<br><p>The tag keys and optional values to add to the resource during create.</p>  <p>Use the <code>TagResource</code> action to tag a resource after it's created.</p><br>
    ///   - [`add_ons(AddOnRequest)`](crate::operation::create_instances::builders::CreateInstancesFluentBuilder::add_ons) / [`set_add_ons(Option<Vec::<AddOnRequest>>)`](crate::operation::create_instances::builders::CreateInstancesFluentBuilder::set_add_ons):<br>required: **false**<br><p>An array of objects representing the add-ons to enable for the new instance.</p><br>
    ///   - [`ip_address_type(IpAddressType)`](crate::operation::create_instances::builders::CreateInstancesFluentBuilder::ip_address_type) / [`set_ip_address_type(Option<IpAddressType>)`](crate::operation::create_instances::builders::CreateInstancesFluentBuilder::set_ip_address_type):<br>required: **false**<br><p>The IP address type for the instance.</p>  <p>The possible values are <code>ipv4</code> for IPv4 only, and <code>dualstack</code> for IPv4 and IPv6.</p>  <p>The default value is <code>dualstack</code>.</p><br>
    /// - On success, responds with [`CreateInstancesOutput`](crate::operation::create_instances::CreateInstancesOutput) with field(s):
    ///   - [`operations(Option<Vec::<Operation>>)`](crate::operation::create_instances::CreateInstancesOutput::operations): <p>An array of objects that describe the result of the action, such as the status of the request, the timestamp of the request, and the resources affected by the request.</p>
    /// - On failure, responds with [`SdkError<CreateInstancesError>`](crate::operation::create_instances::CreateInstancesError)
    pub fn create_instances(&self) -> crate::operation::create_instances::builders::CreateInstancesFluentBuilder {
        crate::operation::create_instances::builders::CreateInstancesFluentBuilder::new(self.handle.clone())
    }
}
