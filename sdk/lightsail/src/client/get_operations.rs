// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetOperations`](crate::operation::get_operations::builders::GetOperationsFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`page_token(impl Into<String>)`](crate::operation::get_operations::builders::GetOperationsFluentBuilder::page_token) / [`set_page_token(Option<String>)`](crate::operation::get_operations::builders::GetOperationsFluentBuilder::set_page_token):<br>required: **false**<br><p>The token to advance to the next page of results from your request.</p>  <p>To get a page token, perform an initial <code>GetOperations</code> request. If your results are paginated, the response will return a next page token that you can specify as the page token in a subsequent request.</p><br>
    /// - On success, responds with [`GetOperationsOutput`](crate::operation::get_operations::GetOperationsOutput) with field(s):
    ///   - [`operations(Option<Vec::<Operation>>)`](crate::operation::get_operations::GetOperationsOutput::operations): <p>An array of objects that describe the result of the action, such as the status of the request, the timestamp of the request, and the resources affected by the request.</p>
    ///   - [`next_page_token(Option<String>)`](crate::operation::get_operations::GetOperationsOutput::next_page_token): <p>The token to advance to the next page of results from your request.</p>  <p>A next page token is not returned if there are no more results to display.</p>  <p>To get the next page of results, perform another <code>GetOperations</code> request and specify the next page token using the <code>pageToken</code> parameter.</p>
    /// - On failure, responds with [`SdkError<GetOperationsError>`](crate::operation::get_operations::GetOperationsError)
    pub fn get_operations(&self) -> crate::operation::get_operations::builders::GetOperationsFluentBuilder {
        crate::operation::get_operations::builders::GetOperationsFluentBuilder::new(self.handle.clone())
    }
}
