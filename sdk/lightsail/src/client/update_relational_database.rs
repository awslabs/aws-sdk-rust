// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateRelationalDatabase`](crate::operation::update_relational_database::builders::UpdateRelationalDatabaseFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`relational_database_name(impl Into<String>)`](crate::operation::update_relational_database::builders::UpdateRelationalDatabaseFluentBuilder::relational_database_name) / [`set_relational_database_name(Option<String>)`](crate::operation::update_relational_database::builders::UpdateRelationalDatabaseFluentBuilder::set_relational_database_name): <p>The name of your Lightsail database resource to update.</p>
    ///   - [`master_user_password(impl Into<String>)`](crate::operation::update_relational_database::builders::UpdateRelationalDatabaseFluentBuilder::master_user_password) / [`set_master_user_password(Option<String>)`](crate::operation::update_relational_database::builders::UpdateRelationalDatabaseFluentBuilder::set_master_user_password): <p>The password for the master user. The password can include any printable ASCII character except "/", """, or "@".</p>  <p>My<b>SQL</b> </p>  <p>Constraints: Must contain from 8 to 41 characters.</p>  <p> <b>PostgreSQL</b> </p>  <p>Constraints: Must contain from 8 to 128 characters.</p>
    ///   - [`rotate_master_user_password(bool)`](crate::operation::update_relational_database::builders::UpdateRelationalDatabaseFluentBuilder::rotate_master_user_password) / [`set_rotate_master_user_password(Option<bool>)`](crate::operation::update_relational_database::builders::UpdateRelationalDatabaseFluentBuilder::set_rotate_master_user_password): <p>When <code>true</code>, the master user password is changed to a new strong password generated by Lightsail.</p>  <p>Use the <code>get relational database master user password</code> operation to get the new password.</p>
    ///   - [`preferred_backup_window(impl Into<String>)`](crate::operation::update_relational_database::builders::UpdateRelationalDatabaseFluentBuilder::preferred_backup_window) / [`set_preferred_backup_window(Option<String>)`](crate::operation::update_relational_database::builders::UpdateRelationalDatabaseFluentBuilder::set_preferred_backup_window): <p>The daily time range during which automated backups are created for your database if automated backups are enabled.</p>  <p>Constraints:</p>  <ul>   <li> <p>Must be in the <code>hh24:mi-hh24:mi</code> format.</p> <p>Example: <code>16:00-16:30</code> </p> </li>   <li> <p>Specified in Coordinated Universal Time (UTC).</p> </li>   <li> <p>Must not conflict with the preferred maintenance window.</p> </li>   <li> <p>Must be at least 30 minutes.</p> </li>  </ul>
    ///   - [`preferred_maintenance_window(impl Into<String>)`](crate::operation::update_relational_database::builders::UpdateRelationalDatabaseFluentBuilder::preferred_maintenance_window) / [`set_preferred_maintenance_window(Option<String>)`](crate::operation::update_relational_database::builders::UpdateRelationalDatabaseFluentBuilder::set_preferred_maintenance_window): <p>The weekly time range during which system maintenance can occur on your database.</p>  <p>The default is a 30-minute window selected at random from an 8-hour block of time for each Amazon Web Services Region, occurring on a random day of the week.</p>  <p>Constraints:</p>  <ul>   <li> <p>Must be in the <code>ddd:hh24:mi-ddd:hh24:mi</code> format.</p> </li>   <li> <p>Valid days: Mon, Tue, Wed, Thu, Fri, Sat, Sun.</p> </li>   <li> <p>Must be at least 30 minutes.</p> </li>   <li> <p>Specified in Coordinated Universal Time (UTC).</p> </li>   <li> <p>Example: <code>Tue:17:00-Tue:17:30</code> </p> </li>  </ul>
    ///   - [`enable_backup_retention(bool)`](crate::operation::update_relational_database::builders::UpdateRelationalDatabaseFluentBuilder::enable_backup_retention) / [`set_enable_backup_retention(Option<bool>)`](crate::operation::update_relational_database::builders::UpdateRelationalDatabaseFluentBuilder::set_enable_backup_retention): <p>When <code>true</code>, enables automated backup retention for your database.</p>  <p>Updates are applied during the next maintenance window because this can result in an outage.</p>
    ///   - [`disable_backup_retention(bool)`](crate::operation::update_relational_database::builders::UpdateRelationalDatabaseFluentBuilder::disable_backup_retention) / [`set_disable_backup_retention(Option<bool>)`](crate::operation::update_relational_database::builders::UpdateRelationalDatabaseFluentBuilder::set_disable_backup_retention): <p>When <code>true</code>, disables automated backup retention for your database.</p>  <p>Disabling backup retention deletes all automated database backups. Before disabling this, you may want to create a snapshot of your database using the <code>create relational database snapshot</code> operation.</p>  <p>Updates are applied during the next maintenance window because this can result in an outage.</p>
    ///   - [`publicly_accessible(bool)`](crate::operation::update_relational_database::builders::UpdateRelationalDatabaseFluentBuilder::publicly_accessible) / [`set_publicly_accessible(Option<bool>)`](crate::operation::update_relational_database::builders::UpdateRelationalDatabaseFluentBuilder::set_publicly_accessible): <p>Specifies the accessibility options for your database. A value of <code>true</code> specifies a database that is available to resources outside of your Lightsail account. A value of <code>false</code> specifies a database that is available only to your Lightsail resources in the same region as your database.</p>
    ///   - [`apply_immediately(bool)`](crate::operation::update_relational_database::builders::UpdateRelationalDatabaseFluentBuilder::apply_immediately) / [`set_apply_immediately(Option<bool>)`](crate::operation::update_relational_database::builders::UpdateRelationalDatabaseFluentBuilder::set_apply_immediately): <p>When <code>true</code>, applies changes immediately. When <code>false</code>, applies changes during the preferred maintenance window. Some changes may cause an outage.</p>  <p>Default: <code>false</code> </p>
    ///   - [`ca_certificate_identifier(impl Into<String>)`](crate::operation::update_relational_database::builders::UpdateRelationalDatabaseFluentBuilder::ca_certificate_identifier) / [`set_ca_certificate_identifier(Option<String>)`](crate::operation::update_relational_database::builders::UpdateRelationalDatabaseFluentBuilder::set_ca_certificate_identifier): <p>Indicates the certificate that needs to be associated with the database.</p>
    /// - On success, responds with [`UpdateRelationalDatabaseOutput`](crate::operation::update_relational_database::UpdateRelationalDatabaseOutput) with field(s):
    ///   - [`operations(Option<Vec<Operation>>)`](crate::operation::update_relational_database::UpdateRelationalDatabaseOutput::operations): <p>An array of objects that describe the result of the action, such as the status of the request, the timestamp of the request, and the resources affected by the request.</p>
    /// - On failure, responds with [`SdkError<UpdateRelationalDatabaseError>`](crate::operation::update_relational_database::UpdateRelationalDatabaseError)
    pub fn update_relational_database(
        &self,
    ) -> crate::operation::update_relational_database::builders::UpdateRelationalDatabaseFluentBuilder
    {
        crate::operation::update_relational_database::builders::UpdateRelationalDatabaseFluentBuilder::new(self.handle.clone())
    }
}
