// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`SetIpAddressType`](crate::client::fluent_builders::SetIpAddressType) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`resource_type(ResourceType)`](crate::client::fluent_builders::SetIpAddressType::resource_type) / [`set_resource_type(Option<ResourceType>)`](crate::client::fluent_builders::SetIpAddressType::set_resource_type): <p>The resource type.</p>  <p>The possible values are <code>Distribution</code>, <code>Instance</code>, and <code>LoadBalancer</code>.</p> <note>   <p>Distribution-related APIs are available only in the N. Virginia (<code>us-east-1</code>) Amazon Web Services Region. Set your Amazon Web Services Region configuration to <code>us-east-1</code> to create, view, or edit distributions.</p>  </note>
    ///   - [`resource_name(impl Into<String>)`](crate::client::fluent_builders::SetIpAddressType::resource_name) / [`set_resource_name(Option<String>)`](crate::client::fluent_builders::SetIpAddressType::set_resource_name): <p>The name of the resource for which to set the IP address type.</p>
    ///   - [`ip_address_type(IpAddressType)`](crate::client::fluent_builders::SetIpAddressType::ip_address_type) / [`set_ip_address_type(Option<IpAddressType>)`](crate::client::fluent_builders::SetIpAddressType::set_ip_address_type): <p>The IP address type to set for the specified resource.</p>  <p>The possible values are <code>ipv4</code> for IPv4 only, and <code>dualstack</code> for IPv4 and IPv6.</p>
    /// - On success, responds with [`SetIpAddressTypeOutput`](crate::output::SetIpAddressTypeOutput) with field(s):
    ///   - [`operations(Option<Vec<Operation>>)`](crate::output::SetIpAddressTypeOutput::operations): <p>An array of objects that describe the result of the action, such as the status of the request, the timestamp of the request, and the resources affected by the request.</p>
    /// - On failure, responds with [`SdkError<SetIpAddressTypeError>`](crate::error::SetIpAddressTypeError)
    pub fn set_ip_address_type(&self) -> crate::client::fluent_builders::SetIpAddressType {
        crate::client::fluent_builders::SetIpAddressType::new(self.handle.clone())
    }
}
