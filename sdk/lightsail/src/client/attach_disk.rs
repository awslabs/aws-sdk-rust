// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`AttachDisk`](crate::operation::attach_disk::builders::AttachDiskFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`disk_name(impl Into<String>)`](crate::operation::attach_disk::builders::AttachDiskFluentBuilder::disk_name) / [`set_disk_name(Option<String>)`](crate::operation::attach_disk::builders::AttachDiskFluentBuilder::set_disk_name): <p>The unique Lightsail disk name (e.g., <code>my-disk</code>).</p>
    ///   - [`instance_name(impl Into<String>)`](crate::operation::attach_disk::builders::AttachDiskFluentBuilder::instance_name) / [`set_instance_name(Option<String>)`](crate::operation::attach_disk::builders::AttachDiskFluentBuilder::set_instance_name): <p>The name of the Lightsail instance where you want to utilize the storage disk.</p>
    ///   - [`disk_path(impl Into<String>)`](crate::operation::attach_disk::builders::AttachDiskFluentBuilder::disk_path) / [`set_disk_path(Option<String>)`](crate::operation::attach_disk::builders::AttachDiskFluentBuilder::set_disk_path): <p>The disk path to expose to the instance (e.g., <code>/dev/xvdf</code>).</p>
    /// - On success, responds with [`AttachDiskOutput`](crate::operation::attach_disk::AttachDiskOutput) with field(s):
    ///   - [`operations(Option<Vec<Operation>>)`](crate::operation::attach_disk::AttachDiskOutput::operations): <p>An array of objects that describe the result of the action, such as the status of the request, the timestamp of the request, and the resources affected by the request.</p>
    /// - On failure, responds with [`SdkError<AttachDiskError>`](crate::operation::attach_disk::AttachDiskError)
    pub fn attach_disk(&self) -> crate::operation::attach_disk::builders::AttachDiskFluentBuilder {
        crate::operation::attach_disk::builders::AttachDiskFluentBuilder::new(self.handle.clone())
    }
}
