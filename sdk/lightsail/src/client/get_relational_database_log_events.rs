// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetRelationalDatabaseLogEvents`](crate::client::fluent_builders::GetRelationalDatabaseLogEvents) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`relational_database_name(impl Into<String>)`](crate::client::fluent_builders::GetRelationalDatabaseLogEvents::relational_database_name) / [`set_relational_database_name(Option<String>)`](crate::client::fluent_builders::GetRelationalDatabaseLogEvents::set_relational_database_name): <p>The name of your database for which to get log events.</p>
    ///   - [`log_stream_name(impl Into<String>)`](crate::client::fluent_builders::GetRelationalDatabaseLogEvents::log_stream_name) / [`set_log_stream_name(Option<String>)`](crate::client::fluent_builders::GetRelationalDatabaseLogEvents::set_log_stream_name): <p>The name of the log stream.</p>  <p>Use the <code>get relational database log streams</code> operation to get a list of available log streams.</p>
    ///   - [`start_time(DateTime)`](crate::client::fluent_builders::GetRelationalDatabaseLogEvents::start_time) / [`set_start_time(Option<DateTime>)`](crate::client::fluent_builders::GetRelationalDatabaseLogEvents::set_start_time): <p>The start of the time interval from which to get log events.</p>  <p>Constraints:</p>  <ul>   <li> <p>Specified in Coordinated Universal Time (UTC).</p> </li>   <li> <p>Specified in the Unix time format.</p> <p>For example, if you wish to use a start time of October 1, 2018, at 8 PM UTC, then you input <code>1538424000</code> as the start time.</p> </li>  </ul>
    ///   - [`end_time(DateTime)`](crate::client::fluent_builders::GetRelationalDatabaseLogEvents::end_time) / [`set_end_time(Option<DateTime>)`](crate::client::fluent_builders::GetRelationalDatabaseLogEvents::set_end_time): <p>The end of the time interval from which to get log events.</p>  <p>Constraints:</p>  <ul>   <li> <p>Specified in Coordinated Universal Time (UTC).</p> </li>   <li> <p>Specified in the Unix time format.</p> <p>For example, if you wish to use an end time of October 1, 2018, at 8 PM UTC, then you input <code>1538424000</code> as the end time.</p> </li>  </ul>
    ///   - [`start_from_head(bool)`](crate::client::fluent_builders::GetRelationalDatabaseLogEvents::start_from_head) / [`set_start_from_head(Option<bool>)`](crate::client::fluent_builders::GetRelationalDatabaseLogEvents::set_start_from_head): <p>Parameter to specify if the log should start from head or tail. If <code>true</code> is specified, the log event starts from the head of the log. If <code>false</code> is specified, the log event starts from the tail of the log.</p> <note>   <p>For PostgreSQL, the default value of <code>false</code> is the only option available.</p>  </note>
    ///   - [`page_token(impl Into<String>)`](crate::client::fluent_builders::GetRelationalDatabaseLogEvents::page_token) / [`set_page_token(Option<String>)`](crate::client::fluent_builders::GetRelationalDatabaseLogEvents::set_page_token): <p>The token to advance to the next or previous page of results from your request.</p>  <p>To get a page token, perform an initial <code>GetRelationalDatabaseLogEvents</code> request. If your results are paginated, the response will return a next forward token and/or next backward token that you can specify as the page token in a subsequent request.</p>
    /// - On success, responds with [`GetRelationalDatabaseLogEventsOutput`](crate::output::GetRelationalDatabaseLogEventsOutput) with field(s):
    ///   - [`resource_log_events(Option<Vec<LogEvent>>)`](crate::output::GetRelationalDatabaseLogEventsOutput::resource_log_events): <p>An object describing the result of your get relational database log events request.</p>
    ///   - [`next_backward_token(Option<String>)`](crate::output::GetRelationalDatabaseLogEventsOutput::next_backward_token): <p>A token used for advancing to the previous page of results from your get relational database log events request.</p>
    ///   - [`next_forward_token(Option<String>)`](crate::output::GetRelationalDatabaseLogEventsOutput::next_forward_token): <p>A token used for advancing to the next page of results from your get relational database log events request.</p>
    /// - On failure, responds with [`SdkError<GetRelationalDatabaseLogEventsError>`](crate::error::GetRelationalDatabaseLogEventsError)
    pub fn get_relational_database_log_events(
        &self,
    ) -> crate::client::fluent_builders::GetRelationalDatabaseLogEvents {
        crate::client::fluent_builders::GetRelationalDatabaseLogEvents::new(self.handle.clone())
    }
}
