// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateLoadBalancerAttribute`](crate::operation::update_load_balancer_attribute::builders::UpdateLoadBalancerAttributeFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`load_balancer_name(impl Into<String>)`](crate::operation::update_load_balancer_attribute::builders::UpdateLoadBalancerAttributeFluentBuilder::load_balancer_name) / [`set_load_balancer_name(Option<String>)`](crate::operation::update_load_balancer_attribute::builders::UpdateLoadBalancerAttributeFluentBuilder::set_load_balancer_name): <p>The name of the load balancer that you want to modify (e.g., <code>my-load-balancer</code>.</p>
    ///   - [`attribute_name(LoadBalancerAttributeName)`](crate::operation::update_load_balancer_attribute::builders::UpdateLoadBalancerAttributeFluentBuilder::attribute_name) / [`set_attribute_name(Option<LoadBalancerAttributeName>)`](crate::operation::update_load_balancer_attribute::builders::UpdateLoadBalancerAttributeFluentBuilder::set_attribute_name): <p>The name of the attribute you want to update.</p>
    ///   - [`attribute_value(impl Into<String>)`](crate::operation::update_load_balancer_attribute::builders::UpdateLoadBalancerAttributeFluentBuilder::attribute_value) / [`set_attribute_value(Option<String>)`](crate::operation::update_load_balancer_attribute::builders::UpdateLoadBalancerAttributeFluentBuilder::set_attribute_value): <p>The value that you want to specify for the attribute name.</p>  <p>The following values are supported depending on what you specify for the <code>attributeName</code> request parameter:</p>  <ul>   <li> <p>If you specify <code>HealthCheckPath</code> for the <code>attributeName</code> request parameter, then the <code>attributeValue</code> request parameter must be the path to ping on the target (for example, <code>/weather/us/wa/seattle</code>).</p> </li>   <li> <p>If you specify <code>SessionStickinessEnabled</code> for the <code>attributeName</code> request parameter, then the <code>attributeValue</code> request parameter must be <code>true</code> to activate session stickiness or <code>false</code> to deactivate session stickiness.</p> </li>   <li> <p>If you specify <code>SessionStickiness_LB_CookieDurationSeconds</code> for the <code>attributeName</code> request parameter, then the <code>attributeValue</code> request parameter must be an interger that represents the cookie duration in seconds.</p> </li>   <li> <p>If you specify <code>HttpsRedirectionEnabled</code> for the <code>attributeName</code> request parameter, then the <code>attributeValue</code> request parameter must be <code>true</code> to activate HTTP to HTTPS redirection or <code>false</code> to deactivate HTTP to HTTPS redirection.</p> </li>   <li> <p>If you specify <code>TlsPolicyName</code> for the <code>attributeName</code> request parameter, then the <code>attributeValue</code> request parameter must be the name of the TLS policy.</p> <p>Use the <a href="https://docs.aws.amazon.com/lightsail/2016-11-28/api-reference/API_GetLoadBalancerTlsPolicies.html">GetLoadBalancerTlsPolicies</a> action to get a list of TLS policy names that you can specify.</p> </li>  </ul>
    /// - On success, responds with [`UpdateLoadBalancerAttributeOutput`](crate::operation::update_load_balancer_attribute::UpdateLoadBalancerAttributeOutput) with field(s):
    ///   - [`operations(Option<Vec<Operation>>)`](crate::operation::update_load_balancer_attribute::UpdateLoadBalancerAttributeOutput::operations): <p>An array of objects that describe the result of the action, such as the status of the request, the timestamp of the request, and the resources affected by the request.</p>
    /// - On failure, responds with [`SdkError<UpdateLoadBalancerAttributeError>`](crate::operation::update_load_balancer_attribute::UpdateLoadBalancerAttributeError)
    pub fn update_load_balancer_attribute(&self) -> crate::operation::update_load_balancer_attribute::builders::UpdateLoadBalancerAttributeFluentBuilder{
        crate::operation::update_load_balancer_attribute::builders::UpdateLoadBalancerAttributeFluentBuilder::new(self.handle.clone())
    }
}
