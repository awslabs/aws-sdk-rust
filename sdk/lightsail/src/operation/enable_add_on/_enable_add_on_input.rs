// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct EnableAddOnInput {
    /// <p>The name of the source resource for which to enable or modify the add-on.</p>
    pub resource_name: ::std::option::Option<::std::string::String>,
    /// <p>An array of strings representing the add-on to enable or modify.</p>
    pub add_on_request: ::std::option::Option<crate::types::AddOnRequest>,
}
impl EnableAddOnInput {
    /// <p>The name of the source resource for which to enable or modify the add-on.</p>
    pub fn resource_name(&self) -> ::std::option::Option<&str> {
        self.resource_name.as_deref()
    }
    /// <p>An array of strings representing the add-on to enable or modify.</p>
    pub fn add_on_request(&self) -> ::std::option::Option<&crate::types::AddOnRequest> {
        self.add_on_request.as_ref()
    }
}
impl EnableAddOnInput {
    /// Creates a new builder-style object to manufacture [`EnableAddOnInput`](crate::operation::enable_add_on::EnableAddOnInput).
    pub fn builder() -> crate::operation::enable_add_on::builders::EnableAddOnInputBuilder {
        crate::operation::enable_add_on::builders::EnableAddOnInputBuilder::default()
    }
}

/// A builder for [`EnableAddOnInput`](crate::operation::enable_add_on::EnableAddOnInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct EnableAddOnInputBuilder {
    pub(crate) resource_name: ::std::option::Option<::std::string::String>,
    pub(crate) add_on_request: ::std::option::Option<crate::types::AddOnRequest>,
}
impl EnableAddOnInputBuilder {
    /// <p>The name of the source resource for which to enable or modify the add-on.</p>
    /// This field is required.
    pub fn resource_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.resource_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the source resource for which to enable or modify the add-on.</p>
    pub fn set_resource_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.resource_name = input;
        self
    }
    /// <p>The name of the source resource for which to enable or modify the add-on.</p>
    pub fn get_resource_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.resource_name
    }
    /// <p>An array of strings representing the add-on to enable or modify.</p>
    /// This field is required.
    pub fn add_on_request(mut self, input: crate::types::AddOnRequest) -> Self {
        self.add_on_request = ::std::option::Option::Some(input);
        self
    }
    /// <p>An array of strings representing the add-on to enable or modify.</p>
    pub fn set_add_on_request(mut self, input: ::std::option::Option<crate::types::AddOnRequest>) -> Self {
        self.add_on_request = input;
        self
    }
    /// <p>An array of strings representing the add-on to enable or modify.</p>
    pub fn get_add_on_request(&self) -> &::std::option::Option<crate::types::AddOnRequest> {
        &self.add_on_request
    }
    /// Consumes the builder and constructs a [`EnableAddOnInput`](crate::operation::enable_add_on::EnableAddOnInput).
    pub fn build(self) -> ::std::result::Result<crate::operation::enable_add_on::EnableAddOnInput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::operation::enable_add_on::EnableAddOnInput {
            resource_name: self.resource_name,
            add_on_request: self.add_on_request,
        })
    }
}
