// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct CreateCloudFormationStackInput {
    /// <p>An array of parameters that will be used to create the new Amazon EC2 instance. You can only pass one instance entry at a time in this array. You will get an invalid parameter error if you pass more than one instance entry in this array.</p>
    pub instances: ::std::option::Option<::std::vec::Vec<crate::types::InstanceEntry>>,
}
impl CreateCloudFormationStackInput {
    /// <p>An array of parameters that will be used to create the new Amazon EC2 instance. You can only pass one instance entry at a time in this array. You will get an invalid parameter error if you pass more than one instance entry in this array.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.instances.is_none()`.
    pub fn instances(&self) -> &[crate::types::InstanceEntry] {
        self.instances.as_deref().unwrap_or_default()
    }
}
impl CreateCloudFormationStackInput {
    /// Creates a new builder-style object to manufacture [`CreateCloudFormationStackInput`](crate::operation::create_cloud_formation_stack::CreateCloudFormationStackInput).
    pub fn builder() -> crate::operation::create_cloud_formation_stack::builders::CreateCloudFormationStackInputBuilder {
        crate::operation::create_cloud_formation_stack::builders::CreateCloudFormationStackInputBuilder::default()
    }
}

/// A builder for [`CreateCloudFormationStackInput`](crate::operation::create_cloud_formation_stack::CreateCloudFormationStackInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct CreateCloudFormationStackInputBuilder {
    pub(crate) instances: ::std::option::Option<::std::vec::Vec<crate::types::InstanceEntry>>,
}
impl CreateCloudFormationStackInputBuilder {
    /// Appends an item to `instances`.
    ///
    /// To override the contents of this collection use [`set_instances`](Self::set_instances).
    ///
    /// <p>An array of parameters that will be used to create the new Amazon EC2 instance. You can only pass one instance entry at a time in this array. You will get an invalid parameter error if you pass more than one instance entry in this array.</p>
    pub fn instances(mut self, input: crate::types::InstanceEntry) -> Self {
        let mut v = self.instances.unwrap_or_default();
        v.push(input);
        self.instances = ::std::option::Option::Some(v);
        self
    }
    /// <p>An array of parameters that will be used to create the new Amazon EC2 instance. You can only pass one instance entry at a time in this array. You will get an invalid parameter error if you pass more than one instance entry in this array.</p>
    pub fn set_instances(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::InstanceEntry>>) -> Self {
        self.instances = input;
        self
    }
    /// <p>An array of parameters that will be used to create the new Amazon EC2 instance. You can only pass one instance entry at a time in this array. You will get an invalid parameter error if you pass more than one instance entry in this array.</p>
    pub fn get_instances(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::InstanceEntry>> {
        &self.instances
    }
    /// Consumes the builder and constructs a [`CreateCloudFormationStackInput`](crate::operation::create_cloud_formation_stack::CreateCloudFormationStackInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::create_cloud_formation_stack::CreateCloudFormationStackInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::create_cloud_formation_stack::CreateCloudFormationStackInput { instances: self.instances })
    }
}
