// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DeleteDomainEntryInput {
    /// <p>The name of the domain entry to delete.</p>
    #[doc(hidden)]
    pub domain_name: std::option::Option<std::string::String>,
    /// <p>An array of key-value pairs containing information about your domain entries.</p>
    #[doc(hidden)]
    pub domain_entry: std::option::Option<crate::types::DomainEntry>,
}
impl DeleteDomainEntryInput {
    /// <p>The name of the domain entry to delete.</p>
    pub fn domain_name(&self) -> std::option::Option<&str> {
        self.domain_name.as_deref()
    }
    /// <p>An array of key-value pairs containing information about your domain entries.</p>
    pub fn domain_entry(&self) -> std::option::Option<&crate::types::DomainEntry> {
        self.domain_entry.as_ref()
    }
}
impl DeleteDomainEntryInput {
    /// Creates a new builder-style object to manufacture [`DeleteDomainEntryInput`](crate::operation::delete_domain_entry::DeleteDomainEntryInput).
    pub fn builder(
    ) -> crate::operation::delete_domain_entry::builders::DeleteDomainEntryInputBuilder {
        crate::operation::delete_domain_entry::builders::DeleteDomainEntryInputBuilder::default()
    }
}

/// A builder for [`DeleteDomainEntryInput`](crate::operation::delete_domain_entry::DeleteDomainEntryInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DeleteDomainEntryInputBuilder {
    pub(crate) domain_name: std::option::Option<std::string::String>,
    pub(crate) domain_entry: std::option::Option<crate::types::DomainEntry>,
}
impl DeleteDomainEntryInputBuilder {
    /// <p>The name of the domain entry to delete.</p>
    pub fn domain_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.domain_name = Some(input.into());
        self
    }
    /// <p>The name of the domain entry to delete.</p>
    pub fn set_domain_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.domain_name = input;
        self
    }
    /// <p>An array of key-value pairs containing information about your domain entries.</p>
    pub fn domain_entry(mut self, input: crate::types::DomainEntry) -> Self {
        self.domain_entry = Some(input);
        self
    }
    /// <p>An array of key-value pairs containing information about your domain entries.</p>
    pub fn set_domain_entry(
        mut self,
        input: std::option::Option<crate::types::DomainEntry>,
    ) -> Self {
        self.domain_entry = input;
        self
    }
    /// Consumes the builder and constructs a [`DeleteDomainEntryInput`](crate::operation::delete_domain_entry::DeleteDomainEntryInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::delete_domain_entry::DeleteDomainEntryInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::delete_domain_entry::DeleteDomainEntryInput {
                domain_name: self.domain_name,
                domain_entry: self.domain_entry,
            },
        )
    }
}
