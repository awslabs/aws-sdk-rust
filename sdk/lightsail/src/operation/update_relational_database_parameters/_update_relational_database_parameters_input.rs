// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct UpdateRelationalDatabaseParametersInput {
    /// <p>The name of your database for which to update parameters.</p>
    #[doc(hidden)]
    pub relational_database_name: std::option::Option<std::string::String>,
    /// <p>The database parameters to update.</p>
    #[doc(hidden)]
    pub parameters: std::option::Option<std::vec::Vec<crate::types::RelationalDatabaseParameter>>,
}
impl UpdateRelationalDatabaseParametersInput {
    /// <p>The name of your database for which to update parameters.</p>
    pub fn relational_database_name(&self) -> std::option::Option<&str> {
        self.relational_database_name.as_deref()
    }
    /// <p>The database parameters to update.</p>
    pub fn parameters(&self) -> std::option::Option<&[crate::types::RelationalDatabaseParameter]> {
        self.parameters.as_deref()
    }
}
impl UpdateRelationalDatabaseParametersInput {
    /// Creates a new builder-style object to manufacture [`UpdateRelationalDatabaseParametersInput`](crate::operation::update_relational_database_parameters::UpdateRelationalDatabaseParametersInput).
    pub fn builder() -> crate::operation::update_relational_database_parameters::builders::UpdateRelationalDatabaseParametersInputBuilder{
        crate::operation::update_relational_database_parameters::builders::UpdateRelationalDatabaseParametersInputBuilder::default()
    }
}

/// A builder for [`UpdateRelationalDatabaseParametersInput`](crate::operation::update_relational_database_parameters::UpdateRelationalDatabaseParametersInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct UpdateRelationalDatabaseParametersInputBuilder {
    pub(crate) relational_database_name: std::option::Option<std::string::String>,
    pub(crate) parameters:
        std::option::Option<std::vec::Vec<crate::types::RelationalDatabaseParameter>>,
}
impl UpdateRelationalDatabaseParametersInputBuilder {
    /// <p>The name of your database for which to update parameters.</p>
    pub fn relational_database_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.relational_database_name = Some(input.into());
        self
    }
    /// <p>The name of your database for which to update parameters.</p>
    pub fn set_relational_database_name(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.relational_database_name = input;
        self
    }
    /// Appends an item to `parameters`.
    ///
    /// To override the contents of this collection use [`set_parameters`](Self::set_parameters).
    ///
    /// <p>The database parameters to update.</p>
    pub fn parameters(mut self, input: crate::types::RelationalDatabaseParameter) -> Self {
        let mut v = self.parameters.unwrap_or_default();
        v.push(input);
        self.parameters = Some(v);
        self
    }
    /// <p>The database parameters to update.</p>
    pub fn set_parameters(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::RelationalDatabaseParameter>>,
    ) -> Self {
        self.parameters = input;
        self
    }
    /// Consumes the builder and constructs a [`UpdateRelationalDatabaseParametersInput`](crate::operation::update_relational_database_parameters::UpdateRelationalDatabaseParametersInput).
    pub fn build(self) -> Result<crate::operation::update_relational_database_parameters::UpdateRelationalDatabaseParametersInput, aws_smithy_http::operation::error::BuildError>{
        Ok(
            crate::operation::update_relational_database_parameters::UpdateRelationalDatabaseParametersInput {
                relational_database_name: self.relational_database_name
                ,
                parameters: self.parameters
                ,
            }
        )
    }
}
