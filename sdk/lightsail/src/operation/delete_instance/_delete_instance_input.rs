// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DeleteInstanceInput {
    /// <p>The name of the instance to delete.</p>
    pub instance_name: ::std::option::Option<::std::string::String>,
    /// <p>A Boolean value to indicate whether to delete all add-ons for the instance.</p>
    pub force_delete_add_ons: ::std::option::Option<bool>,
}
impl DeleteInstanceInput {
    /// <p>The name of the instance to delete.</p>
    pub fn instance_name(&self) -> ::std::option::Option<&str> {
        self.instance_name.as_deref()
    }
    /// <p>A Boolean value to indicate whether to delete all add-ons for the instance.</p>
    pub fn force_delete_add_ons(&self) -> ::std::option::Option<bool> {
        self.force_delete_add_ons
    }
}
impl DeleteInstanceInput {
    /// Creates a new builder-style object to manufacture [`DeleteInstanceInput`](crate::operation::delete_instance::DeleteInstanceInput).
    pub fn builder() -> crate::operation::delete_instance::builders::DeleteInstanceInputBuilder {
        crate::operation::delete_instance::builders::DeleteInstanceInputBuilder::default()
    }
}

/// A builder for [`DeleteInstanceInput`](crate::operation::delete_instance::DeleteInstanceInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DeleteInstanceInputBuilder {
    pub(crate) instance_name: ::std::option::Option<::std::string::String>,
    pub(crate) force_delete_add_ons: ::std::option::Option<bool>,
}
impl DeleteInstanceInputBuilder {
    /// <p>The name of the instance to delete.</p>
    /// This field is required.
    pub fn instance_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.instance_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the instance to delete.</p>
    pub fn set_instance_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.instance_name = input;
        self
    }
    /// <p>The name of the instance to delete.</p>
    pub fn get_instance_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.instance_name
    }
    /// <p>A Boolean value to indicate whether to delete all add-ons for the instance.</p>
    pub fn force_delete_add_ons(mut self, input: bool) -> Self {
        self.force_delete_add_ons = ::std::option::Option::Some(input);
        self
    }
    /// <p>A Boolean value to indicate whether to delete all add-ons for the instance.</p>
    pub fn set_force_delete_add_ons(mut self, input: ::std::option::Option<bool>) -> Self {
        self.force_delete_add_ons = input;
        self
    }
    /// <p>A Boolean value to indicate whether to delete all add-ons for the instance.</p>
    pub fn get_force_delete_add_ons(&self) -> &::std::option::Option<bool> {
        &self.force_delete_add_ons
    }
    /// Consumes the builder and constructs a [`DeleteInstanceInput`](crate::operation::delete_instance::DeleteInstanceInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::delete_instance::DeleteInstanceInput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::operation::delete_instance::DeleteInstanceInput {
            instance_name: self.instance_name,
            force_delete_add_ons: self.force_delete_add_ons,
        })
    }
}
