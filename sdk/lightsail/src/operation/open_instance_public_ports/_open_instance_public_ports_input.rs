// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct OpenInstancePublicPortsInput {
    /// <p>An object to describe the ports to open for the specified instance.</p>
    pub port_info: ::std::option::Option<crate::types::PortInfo>,
    /// <p>The name of the instance for which to open ports.</p>
    pub instance_name: ::std::option::Option<::std::string::String>,
}
impl OpenInstancePublicPortsInput {
    /// <p>An object to describe the ports to open for the specified instance.</p>
    pub fn port_info(&self) -> ::std::option::Option<&crate::types::PortInfo> {
        self.port_info.as_ref()
    }
    /// <p>The name of the instance for which to open ports.</p>
    pub fn instance_name(&self) -> ::std::option::Option<&str> {
        self.instance_name.as_deref()
    }
}
impl OpenInstancePublicPortsInput {
    /// Creates a new builder-style object to manufacture [`OpenInstancePublicPortsInput`](crate::operation::open_instance_public_ports::OpenInstancePublicPortsInput).
    pub fn builder() -> crate::operation::open_instance_public_ports::builders::OpenInstancePublicPortsInputBuilder {
        crate::operation::open_instance_public_ports::builders::OpenInstancePublicPortsInputBuilder::default()
    }
}

/// A builder for [`OpenInstancePublicPortsInput`](crate::operation::open_instance_public_ports::OpenInstancePublicPortsInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct OpenInstancePublicPortsInputBuilder {
    pub(crate) port_info: ::std::option::Option<crate::types::PortInfo>,
    pub(crate) instance_name: ::std::option::Option<::std::string::String>,
}
impl OpenInstancePublicPortsInputBuilder {
    /// <p>An object to describe the ports to open for the specified instance.</p>
    /// This field is required.
    pub fn port_info(mut self, input: crate::types::PortInfo) -> Self {
        self.port_info = ::std::option::Option::Some(input);
        self
    }
    /// <p>An object to describe the ports to open for the specified instance.</p>
    pub fn set_port_info(mut self, input: ::std::option::Option<crate::types::PortInfo>) -> Self {
        self.port_info = input;
        self
    }
    /// <p>An object to describe the ports to open for the specified instance.</p>
    pub fn get_port_info(&self) -> &::std::option::Option<crate::types::PortInfo> {
        &self.port_info
    }
    /// <p>The name of the instance for which to open ports.</p>
    /// This field is required.
    pub fn instance_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.instance_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the instance for which to open ports.</p>
    pub fn set_instance_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.instance_name = input;
        self
    }
    /// <p>The name of the instance for which to open ports.</p>
    pub fn get_instance_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.instance_name
    }
    /// Consumes the builder and constructs a [`OpenInstancePublicPortsInput`](crate::operation::open_instance_public_ports::OpenInstancePublicPortsInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::open_instance_public_ports::OpenInstancePublicPortsInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::open_instance_public_ports::OpenInstancePublicPortsInput {
            port_info: self.port_info,
            instance_name: self.instance_name,
        })
    }
}
