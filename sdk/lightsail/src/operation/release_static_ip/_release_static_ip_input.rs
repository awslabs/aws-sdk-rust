// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ReleaseStaticIpInput {
    /// <p>The name of the static IP to delete.</p>
    pub static_ip_name: ::std::option::Option<::std::string::String>,
}
impl ReleaseStaticIpInput {
    /// <p>The name of the static IP to delete.</p>
    pub fn static_ip_name(&self) -> ::std::option::Option<&str> {
        self.static_ip_name.as_deref()
    }
}
impl ReleaseStaticIpInput {
    /// Creates a new builder-style object to manufacture [`ReleaseStaticIpInput`](crate::operation::release_static_ip::ReleaseStaticIpInput).
    pub fn builder() -> crate::operation::release_static_ip::builders::ReleaseStaticIpInputBuilder {
        crate::operation::release_static_ip::builders::ReleaseStaticIpInputBuilder::default()
    }
}

/// A builder for [`ReleaseStaticIpInput`](crate::operation::release_static_ip::ReleaseStaticIpInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ReleaseStaticIpInputBuilder {
    pub(crate) static_ip_name: ::std::option::Option<::std::string::String>,
}
impl ReleaseStaticIpInputBuilder {
    /// <p>The name of the static IP to delete.</p>
    /// This field is required.
    pub fn static_ip_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.static_ip_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the static IP to delete.</p>
    pub fn set_static_ip_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.static_ip_name = input;
        self
    }
    /// <p>The name of the static IP to delete.</p>
    pub fn get_static_ip_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.static_ip_name
    }
    /// Consumes the builder and constructs a [`ReleaseStaticIpInput`](crate::operation::release_static_ip::ReleaseStaticIpInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::release_static_ip::ReleaseStaticIpInput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::operation::release_static_ip::ReleaseStaticIpInput {
            static_ip_name: self.static_ip_name,
        })
    }
}
