// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GetBucketBundlesInput {
    /// <p>A Boolean value that indicates whether to include inactive (unavailable) bundles in the response of your request.</p>
    #[doc(hidden)]
    pub include_inactive: std::option::Option<bool>,
}
impl GetBucketBundlesInput {
    /// <p>A Boolean value that indicates whether to include inactive (unavailable) bundles in the response of your request.</p>
    pub fn include_inactive(&self) -> std::option::Option<bool> {
        self.include_inactive
    }
}
impl GetBucketBundlesInput {
    /// Creates a new builder-style object to manufacture [`GetBucketBundlesInput`](crate::operation::get_bucket_bundles::GetBucketBundlesInput).
    pub fn builder() -> crate::operation::get_bucket_bundles::builders::GetBucketBundlesInputBuilder
    {
        crate::operation::get_bucket_bundles::builders::GetBucketBundlesInputBuilder::default()
    }
}

/// A builder for [`GetBucketBundlesInput`](crate::operation::get_bucket_bundles::GetBucketBundlesInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct GetBucketBundlesInputBuilder {
    pub(crate) include_inactive: std::option::Option<bool>,
}
impl GetBucketBundlesInputBuilder {
    /// <p>A Boolean value that indicates whether to include inactive (unavailable) bundles in the response of your request.</p>
    pub fn include_inactive(mut self, input: bool) -> Self {
        self.include_inactive = Some(input);
        self
    }
    /// <p>A Boolean value that indicates whether to include inactive (unavailable) bundles in the response of your request.</p>
    pub fn set_include_inactive(mut self, input: std::option::Option<bool>) -> Self {
        self.include_inactive = input;
        self
    }
    /// Consumes the builder and constructs a [`GetBucketBundlesInput`](crate::operation::get_bucket_bundles::GetBucketBundlesInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::get_bucket_bundles::GetBucketBundlesInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::get_bucket_bundles::GetBucketBundlesInput {
                include_inactive: self.include_inactive,
            },
        )
    }
}
