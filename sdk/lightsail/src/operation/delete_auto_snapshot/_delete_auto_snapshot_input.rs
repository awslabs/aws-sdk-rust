// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DeleteAutoSnapshotInput {
    /// <p>The name of the source instance or disk from which to delete the automatic snapshot.</p>
    pub resource_name: ::std::option::Option<::std::string::String>,
    /// <p>The date of the automatic snapshot to delete in <code>YYYY-MM-DD</code> format. Use the <code>get auto snapshots</code> operation to get the available automatic snapshots for a resource.</p>
    pub date: ::std::option::Option<::std::string::String>,
}
impl DeleteAutoSnapshotInput {
    /// <p>The name of the source instance or disk from which to delete the automatic snapshot.</p>
    pub fn resource_name(&self) -> ::std::option::Option<&str> {
        self.resource_name.as_deref()
    }
    /// <p>The date of the automatic snapshot to delete in <code>YYYY-MM-DD</code> format. Use the <code>get auto snapshots</code> operation to get the available automatic snapshots for a resource.</p>
    pub fn date(&self) -> ::std::option::Option<&str> {
        self.date.as_deref()
    }
}
impl DeleteAutoSnapshotInput {
    /// Creates a new builder-style object to manufacture [`DeleteAutoSnapshotInput`](crate::operation::delete_auto_snapshot::DeleteAutoSnapshotInput).
    pub fn builder() -> crate::operation::delete_auto_snapshot::builders::DeleteAutoSnapshotInputBuilder {
        crate::operation::delete_auto_snapshot::builders::DeleteAutoSnapshotInputBuilder::default()
    }
}

/// A builder for [`DeleteAutoSnapshotInput`](crate::operation::delete_auto_snapshot::DeleteAutoSnapshotInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DeleteAutoSnapshotInputBuilder {
    pub(crate) resource_name: ::std::option::Option<::std::string::String>,
    pub(crate) date: ::std::option::Option<::std::string::String>,
}
impl DeleteAutoSnapshotInputBuilder {
    /// <p>The name of the source instance or disk from which to delete the automatic snapshot.</p>
    /// This field is required.
    pub fn resource_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.resource_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the source instance or disk from which to delete the automatic snapshot.</p>
    pub fn set_resource_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.resource_name = input;
        self
    }
    /// <p>The name of the source instance or disk from which to delete the automatic snapshot.</p>
    pub fn get_resource_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.resource_name
    }
    /// <p>The date of the automatic snapshot to delete in <code>YYYY-MM-DD</code> format. Use the <code>get auto snapshots</code> operation to get the available automatic snapshots for a resource.</p>
    /// This field is required.
    pub fn date(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.date = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The date of the automatic snapshot to delete in <code>YYYY-MM-DD</code> format. Use the <code>get auto snapshots</code> operation to get the available automatic snapshots for a resource.</p>
    pub fn set_date(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.date = input;
        self
    }
    /// <p>The date of the automatic snapshot to delete in <code>YYYY-MM-DD</code> format. Use the <code>get auto snapshots</code> operation to get the available automatic snapshots for a resource.</p>
    pub fn get_date(&self) -> &::std::option::Option<::std::string::String> {
        &self.date
    }
    /// Consumes the builder and constructs a [`DeleteAutoSnapshotInput`](crate::operation::delete_auto_snapshot::DeleteAutoSnapshotInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::delete_auto_snapshot::DeleteAutoSnapshotInput, ::aws_smithy_types::error::operation::BuildError>
    {
        ::std::result::Result::Ok(crate::operation::delete_auto_snapshot::DeleteAutoSnapshotInput {
            resource_name: self.resource_name,
            date: self.date,
        })
    }
}
