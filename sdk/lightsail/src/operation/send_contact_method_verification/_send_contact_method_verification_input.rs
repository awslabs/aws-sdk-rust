// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct SendContactMethodVerificationInput {
    /// <p>The protocol to verify, such as <code>Email</code> or <code>SMS</code> (text messaging).</p>
    #[doc(hidden)]
    pub protocol: std::option::Option<crate::types::ContactMethodVerificationProtocol>,
}
impl SendContactMethodVerificationInput {
    /// <p>The protocol to verify, such as <code>Email</code> or <code>SMS</code> (text messaging).</p>
    pub fn protocol(
        &self,
    ) -> std::option::Option<&crate::types::ContactMethodVerificationProtocol> {
        self.protocol.as_ref()
    }
}
impl SendContactMethodVerificationInput {
    /// Creates a new builder-style object to manufacture [`SendContactMethodVerificationInput`](crate::operation::send_contact_method_verification::SendContactMethodVerificationInput).
    pub fn builder() -> crate::operation::send_contact_method_verification::builders::SendContactMethodVerificationInputBuilder{
        crate::operation::send_contact_method_verification::builders::SendContactMethodVerificationInputBuilder::default()
    }
}

/// A builder for [`SendContactMethodVerificationInput`](crate::operation::send_contact_method_verification::SendContactMethodVerificationInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct SendContactMethodVerificationInputBuilder {
    pub(crate) protocol: std::option::Option<crate::types::ContactMethodVerificationProtocol>,
}
impl SendContactMethodVerificationInputBuilder {
    /// <p>The protocol to verify, such as <code>Email</code> or <code>SMS</code> (text messaging).</p>
    pub fn protocol(mut self, input: crate::types::ContactMethodVerificationProtocol) -> Self {
        self.protocol = Some(input);
        self
    }
    /// <p>The protocol to verify, such as <code>Email</code> or <code>SMS</code> (text messaging).</p>
    pub fn set_protocol(
        mut self,
        input: std::option::Option<crate::types::ContactMethodVerificationProtocol>,
    ) -> Self {
        self.protocol = input;
        self
    }
    /// Consumes the builder and constructs a [`SendContactMethodVerificationInput`](crate::operation::send_contact_method_verification::SendContactMethodVerificationInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::send_contact_method_verification::SendContactMethodVerificationInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::send_contact_method_verification::SendContactMethodVerificationInput {
                protocol: self.protocol
                ,
            }
        )
    }
}
