// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Describes the last time an access key was used.</p> <note>
/// <p>This object does not include data in the response of a <a href="https://docs.aws.amazon.com/lightsail/2016-11-28/api-reference/API_CreateBucketAccessKey.html">CreateBucketAccessKey</a> action.</p>
/// </note>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AccessKeyLastUsed {
    /// <p>The date and time when the access key was most recently used.</p>
    /// <p>This value is null if the access key has not been used.</p>
    #[doc(hidden)]
    pub last_used_date: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>The Amazon Web Services Region where this access key was most recently used.</p>
    /// <p>This value is <code>N/A</code> if the access key has not been used.</p>
    #[doc(hidden)]
    pub region: std::option::Option<std::string::String>,
    /// <p>The name of the Amazon Web Services service with which this access key was most recently used.</p>
    /// <p>This value is <code>N/A</code> if the access key has not been used.</p>
    #[doc(hidden)]
    pub service_name: std::option::Option<std::string::String>,
}
impl AccessKeyLastUsed {
    /// <p>The date and time when the access key was most recently used.</p>
    /// <p>This value is null if the access key has not been used.</p>
    pub fn last_used_date(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.last_used_date.as_ref()
    }
    /// <p>The Amazon Web Services Region where this access key was most recently used.</p>
    /// <p>This value is <code>N/A</code> if the access key has not been used.</p>
    pub fn region(&self) -> std::option::Option<&str> {
        self.region.as_deref()
    }
    /// <p>The name of the Amazon Web Services service with which this access key was most recently used.</p>
    /// <p>This value is <code>N/A</code> if the access key has not been used.</p>
    pub fn service_name(&self) -> std::option::Option<&str> {
        self.service_name.as_deref()
    }
}
impl AccessKeyLastUsed {
    /// Creates a new builder-style object to manufacture [`AccessKeyLastUsed`](crate::types::AccessKeyLastUsed).
    pub fn builder() -> crate::types::builders::AccessKeyLastUsedBuilder {
        crate::types::builders::AccessKeyLastUsedBuilder::default()
    }
}

/// A builder for [`AccessKeyLastUsed`](crate::types::AccessKeyLastUsed).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AccessKeyLastUsedBuilder {
    pub(crate) last_used_date: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) region: std::option::Option<std::string::String>,
    pub(crate) service_name: std::option::Option<std::string::String>,
}
impl AccessKeyLastUsedBuilder {
    /// <p>The date and time when the access key was most recently used.</p>
    /// <p>This value is null if the access key has not been used.</p>
    pub fn last_used_date(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.last_used_date = Some(input);
        self
    }
    /// <p>The date and time when the access key was most recently used.</p>
    /// <p>This value is null if the access key has not been used.</p>
    pub fn set_last_used_date(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.last_used_date = input;
        self
    }
    /// <p>The Amazon Web Services Region where this access key was most recently used.</p>
    /// <p>This value is <code>N/A</code> if the access key has not been used.</p>
    pub fn region(mut self, input: impl Into<std::string::String>) -> Self {
        self.region = Some(input.into());
        self
    }
    /// <p>The Amazon Web Services Region where this access key was most recently used.</p>
    /// <p>This value is <code>N/A</code> if the access key has not been used.</p>
    pub fn set_region(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.region = input;
        self
    }
    /// <p>The name of the Amazon Web Services service with which this access key was most recently used.</p>
    /// <p>This value is <code>N/A</code> if the access key has not been used.</p>
    pub fn service_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.service_name = Some(input.into());
        self
    }
    /// <p>The name of the Amazon Web Services service with which this access key was most recently used.</p>
    /// <p>This value is <code>N/A</code> if the access key has not been used.</p>
    pub fn set_service_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.service_name = input;
        self
    }
    /// Consumes the builder and constructs a [`AccessKeyLastUsed`](crate::types::AccessKeyLastUsed).
    pub fn build(self) -> crate::types::AccessKeyLastUsed {
        crate::types::AccessKeyLastUsed {
            last_used_date: self.last_used_date,
            region: self.region,
            service_name: self.service_name,
        }
    }
}
