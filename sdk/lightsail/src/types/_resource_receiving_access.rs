// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Describes an Amazon Lightsail instance that has access to a Lightsail bucket.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ResourceReceivingAccess {
    /// <p>The name of the Lightsail instance.</p>
    #[doc(hidden)]
    pub name: std::option::Option<std::string::String>,
    /// <p>The Lightsail resource type (for example, <code>Instance</code>).</p>
    #[doc(hidden)]
    pub resource_type: std::option::Option<std::string::String>,
}
impl ResourceReceivingAccess {
    /// <p>The name of the Lightsail instance.</p>
    pub fn name(&self) -> std::option::Option<&str> {
        self.name.as_deref()
    }
    /// <p>The Lightsail resource type (for example, <code>Instance</code>).</p>
    pub fn resource_type(&self) -> std::option::Option<&str> {
        self.resource_type.as_deref()
    }
}
impl ResourceReceivingAccess {
    /// Creates a new builder-style object to manufacture [`ResourceReceivingAccess`](crate::types::ResourceReceivingAccess).
    pub fn builder() -> crate::types::builders::ResourceReceivingAccessBuilder {
        crate::types::builders::ResourceReceivingAccessBuilder::default()
    }
}

/// A builder for [`ResourceReceivingAccess`](crate::types::ResourceReceivingAccess).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ResourceReceivingAccessBuilder {
    pub(crate) name: std::option::Option<std::string::String>,
    pub(crate) resource_type: std::option::Option<std::string::String>,
}
impl ResourceReceivingAccessBuilder {
    /// <p>The name of the Lightsail instance.</p>
    pub fn name(mut self, input: impl Into<std::string::String>) -> Self {
        self.name = Some(input.into());
        self
    }
    /// <p>The name of the Lightsail instance.</p>
    pub fn set_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>The Lightsail resource type (for example, <code>Instance</code>).</p>
    pub fn resource_type(mut self, input: impl Into<std::string::String>) -> Self {
        self.resource_type = Some(input.into());
        self
    }
    /// <p>The Lightsail resource type (for example, <code>Instance</code>).</p>
    pub fn set_resource_type(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.resource_type = input;
        self
    }
    /// Consumes the builder and constructs a [`ResourceReceivingAccess`](crate::types::ResourceReceivingAccess).
    pub fn build(self) -> crate::types::ResourceReceivingAccess {
        crate::types::ResourceReceivingAccess {
            name: self.name,
            resource_type: self.resource_type,
        }
    }
}
