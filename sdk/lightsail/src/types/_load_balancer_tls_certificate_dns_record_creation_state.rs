// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>An object that describes the state of the canonical name (CNAME) records that are automatically added by Lightsail to the DNS of the domain to validate domain ownership.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct LoadBalancerTlsCertificateDnsRecordCreationState {
    /// <p>The status code for the automated DNS record creation.</p>
    /// <p>Following are the possible values:</p>
    /// <ul>
    /// <li> <p> <code>SUCCEEDED</code> - The validation records were successfully added.</p> </li>
    /// <li> <p> <code>STARTED</code> - The automatic DNS record creation has started.</p> </li>
    /// <li> <p> <code>FAILED</code> - The validation record addition failed.</p> </li>
    /// </ul>
    #[doc(hidden)]
    pub code:
        std::option::Option<crate::types::LoadBalancerTlsCertificateDnsRecordCreationStateCode>,
    /// <p>The message that describes the reason for the status code.</p>
    #[doc(hidden)]
    pub message: std::option::Option<std::string::String>,
}
impl LoadBalancerTlsCertificateDnsRecordCreationState {
    /// <p>The status code for the automated DNS record creation.</p>
    /// <p>Following are the possible values:</p>
    /// <ul>
    /// <li> <p> <code>SUCCEEDED</code> - The validation records were successfully added.</p> </li>
    /// <li> <p> <code>STARTED</code> - The automatic DNS record creation has started.</p> </li>
    /// <li> <p> <code>FAILED</code> - The validation record addition failed.</p> </li>
    /// </ul>
    pub fn code(
        &self,
    ) -> std::option::Option<&crate::types::LoadBalancerTlsCertificateDnsRecordCreationStateCode>
    {
        self.code.as_ref()
    }
    /// <p>The message that describes the reason for the status code.</p>
    pub fn message(&self) -> std::option::Option<&str> {
        self.message.as_deref()
    }
}
impl LoadBalancerTlsCertificateDnsRecordCreationState {
    /// Creates a new builder-style object to manufacture [`LoadBalancerTlsCertificateDnsRecordCreationState`](crate::types::LoadBalancerTlsCertificateDnsRecordCreationState).
    pub fn builder(
    ) -> crate::types::builders::LoadBalancerTlsCertificateDnsRecordCreationStateBuilder {
        crate::types::builders::LoadBalancerTlsCertificateDnsRecordCreationStateBuilder::default()
    }
}

/// A builder for [`LoadBalancerTlsCertificateDnsRecordCreationState`](crate::types::LoadBalancerTlsCertificateDnsRecordCreationState).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct LoadBalancerTlsCertificateDnsRecordCreationStateBuilder {
    pub(crate) code:
        std::option::Option<crate::types::LoadBalancerTlsCertificateDnsRecordCreationStateCode>,
    pub(crate) message: std::option::Option<std::string::String>,
}
impl LoadBalancerTlsCertificateDnsRecordCreationStateBuilder {
    /// <p>The status code for the automated DNS record creation.</p>
    /// <p>Following are the possible values:</p>
    /// <ul>
    /// <li> <p> <code>SUCCEEDED</code> - The validation records were successfully added.</p> </li>
    /// <li> <p> <code>STARTED</code> - The automatic DNS record creation has started.</p> </li>
    /// <li> <p> <code>FAILED</code> - The validation record addition failed.</p> </li>
    /// </ul>
    pub fn code(
        mut self,
        input: crate::types::LoadBalancerTlsCertificateDnsRecordCreationStateCode,
    ) -> Self {
        self.code = Some(input);
        self
    }
    /// <p>The status code for the automated DNS record creation.</p>
    /// <p>Following are the possible values:</p>
    /// <ul>
    /// <li> <p> <code>SUCCEEDED</code> - The validation records were successfully added.</p> </li>
    /// <li> <p> <code>STARTED</code> - The automatic DNS record creation has started.</p> </li>
    /// <li> <p> <code>FAILED</code> - The validation record addition failed.</p> </li>
    /// </ul>
    pub fn set_code(
        mut self,
        input: std::option::Option<
            crate::types::LoadBalancerTlsCertificateDnsRecordCreationStateCode,
        >,
    ) -> Self {
        self.code = input;
        self
    }
    /// <p>The message that describes the reason for the status code.</p>
    pub fn message(mut self, input: impl Into<std::string::String>) -> Self {
        self.message = Some(input.into());
        self
    }
    /// <p>The message that describes the reason for the status code.</p>
    pub fn set_message(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.message = input;
        self
    }
    /// Consumes the builder and constructs a [`LoadBalancerTlsCertificateDnsRecordCreationState`](crate::types::LoadBalancerTlsCertificateDnsRecordCreationState).
    pub fn build(self) -> crate::types::LoadBalancerTlsCertificateDnsRecordCreationState {
        crate::types::LoadBalancerTlsCertificateDnsRecordCreationState {
            code: self.code,
            message: self.message,
        }
    }
}
