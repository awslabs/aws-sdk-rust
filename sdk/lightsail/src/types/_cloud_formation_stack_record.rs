// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Describes a CloudFormation stack record created as a result of the <code>create cloud formation stack</code> action.</p>
/// <p>A CloudFormation stack record provides information about the AWS CloudFormation stack used to create a new Amazon Elastic Compute Cloud instance from an exported Lightsail instance snapshot.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct CloudFormationStackRecord {
    /// <p>The name of the CloudFormation stack record. It starts with <code>CloudFormationStackRecord</code> followed by a GUID.</p>
    #[doc(hidden)]
    pub name: std::option::Option<std::string::String>,
    /// <p>The Amazon Resource Name (ARN) of the CloudFormation stack record.</p>
    #[doc(hidden)]
    pub arn: std::option::Option<std::string::String>,
    /// <p>The date when the CloudFormation stack record was created.</p>
    #[doc(hidden)]
    pub created_at: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>A list of objects describing the Availability Zone and Amazon Web Services Region of the CloudFormation stack record.</p>
    #[doc(hidden)]
    pub location: std::option::Option<crate::types::ResourceLocation>,
    /// <p>The Lightsail resource type (e.g., <code>CloudFormationStackRecord</code>).</p>
    #[doc(hidden)]
    pub resource_type: std::option::Option<crate::types::ResourceType>,
    /// <p>The current state of the CloudFormation stack record.</p>
    #[doc(hidden)]
    pub state: std::option::Option<crate::types::RecordState>,
    /// <p>A list of objects describing the source of the CloudFormation stack record.</p>
    #[doc(hidden)]
    pub source_info:
        std::option::Option<std::vec::Vec<crate::types::CloudFormationStackRecordSourceInfo>>,
    /// <p>A list of objects describing the destination service, which is AWS CloudFormation, and the Amazon Resource Name (ARN) of the AWS CloudFormation stack.</p>
    #[doc(hidden)]
    pub destination_info: std::option::Option<crate::types::DestinationInfo>,
}
impl CloudFormationStackRecord {
    /// <p>The name of the CloudFormation stack record. It starts with <code>CloudFormationStackRecord</code> followed by a GUID.</p>
    pub fn name(&self) -> std::option::Option<&str> {
        self.name.as_deref()
    }
    /// <p>The Amazon Resource Name (ARN) of the CloudFormation stack record.</p>
    pub fn arn(&self) -> std::option::Option<&str> {
        self.arn.as_deref()
    }
    /// <p>The date when the CloudFormation stack record was created.</p>
    pub fn created_at(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.created_at.as_ref()
    }
    /// <p>A list of objects describing the Availability Zone and Amazon Web Services Region of the CloudFormation stack record.</p>
    pub fn location(&self) -> std::option::Option<&crate::types::ResourceLocation> {
        self.location.as_ref()
    }
    /// <p>The Lightsail resource type (e.g., <code>CloudFormationStackRecord</code>).</p>
    pub fn resource_type(&self) -> std::option::Option<&crate::types::ResourceType> {
        self.resource_type.as_ref()
    }
    /// <p>The current state of the CloudFormation stack record.</p>
    pub fn state(&self) -> std::option::Option<&crate::types::RecordState> {
        self.state.as_ref()
    }
    /// <p>A list of objects describing the source of the CloudFormation stack record.</p>
    pub fn source_info(
        &self,
    ) -> std::option::Option<&[crate::types::CloudFormationStackRecordSourceInfo]> {
        self.source_info.as_deref()
    }
    /// <p>A list of objects describing the destination service, which is AWS CloudFormation, and the Amazon Resource Name (ARN) of the AWS CloudFormation stack.</p>
    pub fn destination_info(&self) -> std::option::Option<&crate::types::DestinationInfo> {
        self.destination_info.as_ref()
    }
}
impl CloudFormationStackRecord {
    /// Creates a new builder-style object to manufacture [`CloudFormationStackRecord`](crate::types::CloudFormationStackRecord).
    pub fn builder() -> crate::types::builders::CloudFormationStackRecordBuilder {
        crate::types::builders::CloudFormationStackRecordBuilder::default()
    }
}

/// A builder for [`CloudFormationStackRecord`](crate::types::CloudFormationStackRecord).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct CloudFormationStackRecordBuilder {
    pub(crate) name: std::option::Option<std::string::String>,
    pub(crate) arn: std::option::Option<std::string::String>,
    pub(crate) created_at: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) location: std::option::Option<crate::types::ResourceLocation>,
    pub(crate) resource_type: std::option::Option<crate::types::ResourceType>,
    pub(crate) state: std::option::Option<crate::types::RecordState>,
    pub(crate) source_info:
        std::option::Option<std::vec::Vec<crate::types::CloudFormationStackRecordSourceInfo>>,
    pub(crate) destination_info: std::option::Option<crate::types::DestinationInfo>,
}
impl CloudFormationStackRecordBuilder {
    /// <p>The name of the CloudFormation stack record. It starts with <code>CloudFormationStackRecord</code> followed by a GUID.</p>
    pub fn name(mut self, input: impl Into<std::string::String>) -> Self {
        self.name = Some(input.into());
        self
    }
    /// <p>The name of the CloudFormation stack record. It starts with <code>CloudFormationStackRecord</code> followed by a GUID.</p>
    pub fn set_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the CloudFormation stack record.</p>
    pub fn arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.arn = Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the CloudFormation stack record.</p>
    pub fn set_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.arn = input;
        self
    }
    /// <p>The date when the CloudFormation stack record was created.</p>
    pub fn created_at(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.created_at = Some(input);
        self
    }
    /// <p>The date when the CloudFormation stack record was created.</p>
    pub fn set_created_at(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.created_at = input;
        self
    }
    /// <p>A list of objects describing the Availability Zone and Amazon Web Services Region of the CloudFormation stack record.</p>
    pub fn location(mut self, input: crate::types::ResourceLocation) -> Self {
        self.location = Some(input);
        self
    }
    /// <p>A list of objects describing the Availability Zone and Amazon Web Services Region of the CloudFormation stack record.</p>
    pub fn set_location(
        mut self,
        input: std::option::Option<crate::types::ResourceLocation>,
    ) -> Self {
        self.location = input;
        self
    }
    /// <p>The Lightsail resource type (e.g., <code>CloudFormationStackRecord</code>).</p>
    pub fn resource_type(mut self, input: crate::types::ResourceType) -> Self {
        self.resource_type = Some(input);
        self
    }
    /// <p>The Lightsail resource type (e.g., <code>CloudFormationStackRecord</code>).</p>
    pub fn set_resource_type(
        mut self,
        input: std::option::Option<crate::types::ResourceType>,
    ) -> Self {
        self.resource_type = input;
        self
    }
    /// <p>The current state of the CloudFormation stack record.</p>
    pub fn state(mut self, input: crate::types::RecordState) -> Self {
        self.state = Some(input);
        self
    }
    /// <p>The current state of the CloudFormation stack record.</p>
    pub fn set_state(mut self, input: std::option::Option<crate::types::RecordState>) -> Self {
        self.state = input;
        self
    }
    /// Appends an item to `source_info`.
    ///
    /// To override the contents of this collection use [`set_source_info`](Self::set_source_info).
    ///
    /// <p>A list of objects describing the source of the CloudFormation stack record.</p>
    pub fn source_info(mut self, input: crate::types::CloudFormationStackRecordSourceInfo) -> Self {
        let mut v = self.source_info.unwrap_or_default();
        v.push(input);
        self.source_info = Some(v);
        self
    }
    /// <p>A list of objects describing the source of the CloudFormation stack record.</p>
    pub fn set_source_info(
        mut self,
        input: std::option::Option<
            std::vec::Vec<crate::types::CloudFormationStackRecordSourceInfo>,
        >,
    ) -> Self {
        self.source_info = input;
        self
    }
    /// <p>A list of objects describing the destination service, which is AWS CloudFormation, and the Amazon Resource Name (ARN) of the AWS CloudFormation stack.</p>
    pub fn destination_info(mut self, input: crate::types::DestinationInfo) -> Self {
        self.destination_info = Some(input);
        self
    }
    /// <p>A list of objects describing the destination service, which is AWS CloudFormation, and the Amazon Resource Name (ARN) of the AWS CloudFormation stack.</p>
    pub fn set_destination_info(
        mut self,
        input: std::option::Option<crate::types::DestinationInfo>,
    ) -> Self {
        self.destination_info = input;
        self
    }
    /// Consumes the builder and constructs a [`CloudFormationStackRecord`](crate::types::CloudFormationStackRecord).
    pub fn build(self) -> crate::types::CloudFormationStackRecord {
        crate::types::CloudFormationStackRecord {
            name: self.name,
            arn: self.arn,
            created_at: self.created_at,
            location: self.location,
            resource_type: self.resource_type,
            state: self.state,
            source_info: self.source_info,
            destination_info: self.destination_info,
        }
    }
}
