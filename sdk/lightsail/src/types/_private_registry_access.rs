// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Describes the configuration for an Amazon Lightsail container service to access private container image repositories, such as Amazon Elastic Container Registry (Amazon ECR) private repositories.</p>
/// <p>For more information, see <a href="https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-container-service-ecr-private-repo-access">Configuring access to an Amazon ECR private repository for an Amazon Lightsail container service</a> in the <i>Amazon Lightsail Developer Guide</i>.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct PrivateRegistryAccess {
    /// <p>An object that describes the activation status of the role that you can use to grant a Lightsail container service access to Amazon ECR private repositories. If the role is activated, the Amazon Resource Name (ARN) of the role is also listed.</p>
    #[doc(hidden)]
    pub ecr_image_puller_role:
        std::option::Option<crate::types::ContainerServiceEcrImagePullerRole>,
}
impl PrivateRegistryAccess {
    /// <p>An object that describes the activation status of the role that you can use to grant a Lightsail container service access to Amazon ECR private repositories. If the role is activated, the Amazon Resource Name (ARN) of the role is also listed.</p>
    pub fn ecr_image_puller_role(
        &self,
    ) -> std::option::Option<&crate::types::ContainerServiceEcrImagePullerRole> {
        self.ecr_image_puller_role.as_ref()
    }
}
impl PrivateRegistryAccess {
    /// Creates a new builder-style object to manufacture [`PrivateRegistryAccess`](crate::types::PrivateRegistryAccess).
    pub fn builder() -> crate::types::builders::PrivateRegistryAccessBuilder {
        crate::types::builders::PrivateRegistryAccessBuilder::default()
    }
}

/// A builder for [`PrivateRegistryAccess`](crate::types::PrivateRegistryAccess).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct PrivateRegistryAccessBuilder {
    pub(crate) ecr_image_puller_role:
        std::option::Option<crate::types::ContainerServiceEcrImagePullerRole>,
}
impl PrivateRegistryAccessBuilder {
    /// <p>An object that describes the activation status of the role that you can use to grant a Lightsail container service access to Amazon ECR private repositories. If the role is activated, the Amazon Resource Name (ARN) of the role is also listed.</p>
    pub fn ecr_image_puller_role(
        mut self,
        input: crate::types::ContainerServiceEcrImagePullerRole,
    ) -> Self {
        self.ecr_image_puller_role = Some(input);
        self
    }
    /// <p>An object that describes the activation status of the role that you can use to grant a Lightsail container service access to Amazon ECR private repositories. If the role is activated, the Amazon Resource Name (ARN) of the role is also listed.</p>
    pub fn set_ecr_image_puller_role(
        mut self,
        input: std::option::Option<crate::types::ContainerServiceEcrImagePullerRole>,
    ) -> Self {
        self.ecr_image_puller_role = input;
        self
    }
    /// Consumes the builder and constructs a [`PrivateRegistryAccess`](crate::types::PrivateRegistryAccess).
    pub fn build(self) -> crate::types::PrivateRegistryAccess {
        crate::types::PrivateRegistryAccess {
            ecr_image_puller_role: self.ecr_image_puller_role,
        }
    }
}
