// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Describes the anonymous access permissions for an Amazon Lightsail bucket and its objects.</p>
/// <p>For more information about bucket access permissions, see <a href="https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-understanding-bucket-permissions">Understanding bucket permissions in Amazon Lightsail</a> in the </p>
/// <p> <i>Amazon Lightsail Developer Guide</i>.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AccessRules {
    /// <p>Specifies the anonymous access to all objects in a bucket.</p>
    /// <p>The following options can be specified:</p>
    /// <ul>
    /// <li> <p> <code>public</code> - Sets all objects in the bucket to public (read-only), making them readable by anyone in the world.</p> <p>If the <code>getObject</code> value is set to <code>public</code>, then all objects in the bucket default to public regardless of the <code>allowPublicOverrides</code> value.</p> </li>
    /// <li> <p> <code>private</code> - Sets all objects in the bucket to private, making them readable only by you or anyone you give access to.</p> <p>If the <code>getObject</code> value is set to <code>private</code>, and the <code>allowPublicOverrides</code> value is set to <code>true</code>, then all objects in the bucket default to private unless they are configured with a <code>public-read</code> ACL. Individual objects with a <code>public-read</code> ACL are readable by anyone in the world.</p> </li>
    /// </ul>
    #[doc(hidden)]
    pub get_object: std::option::Option<crate::types::AccessType>,
    /// <p>A Boolean value that indicates whether the access control list (ACL) permissions that are applied to individual objects override the <code>getObject</code> option that is currently specified.</p>
    /// <p>When this is true, you can use the <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObjectAcl.html">PutObjectAcl</a> Amazon S3 API action to set individual objects to public (read-only) using the <code>public-read</code> ACL, or to private using the <code>private</code> ACL.</p>
    #[doc(hidden)]
    pub allow_public_overrides: std::option::Option<bool>,
}
impl AccessRules {
    /// <p>Specifies the anonymous access to all objects in a bucket.</p>
    /// <p>The following options can be specified:</p>
    /// <ul>
    /// <li> <p> <code>public</code> - Sets all objects in the bucket to public (read-only), making them readable by anyone in the world.</p> <p>If the <code>getObject</code> value is set to <code>public</code>, then all objects in the bucket default to public regardless of the <code>allowPublicOverrides</code> value.</p> </li>
    /// <li> <p> <code>private</code> - Sets all objects in the bucket to private, making them readable only by you or anyone you give access to.</p> <p>If the <code>getObject</code> value is set to <code>private</code>, and the <code>allowPublicOverrides</code> value is set to <code>true</code>, then all objects in the bucket default to private unless they are configured with a <code>public-read</code> ACL. Individual objects with a <code>public-read</code> ACL are readable by anyone in the world.</p> </li>
    /// </ul>
    pub fn get_object(&self) -> std::option::Option<&crate::types::AccessType> {
        self.get_object.as_ref()
    }
    /// <p>A Boolean value that indicates whether the access control list (ACL) permissions that are applied to individual objects override the <code>getObject</code> option that is currently specified.</p>
    /// <p>When this is true, you can use the <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObjectAcl.html">PutObjectAcl</a> Amazon S3 API action to set individual objects to public (read-only) using the <code>public-read</code> ACL, or to private using the <code>private</code> ACL.</p>
    pub fn allow_public_overrides(&self) -> std::option::Option<bool> {
        self.allow_public_overrides
    }
}
impl AccessRules {
    /// Creates a new builder-style object to manufacture [`AccessRules`](crate::types::AccessRules).
    pub fn builder() -> crate::types::builders::AccessRulesBuilder {
        crate::types::builders::AccessRulesBuilder::default()
    }
}

/// A builder for [`AccessRules`](crate::types::AccessRules).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AccessRulesBuilder {
    pub(crate) get_object: std::option::Option<crate::types::AccessType>,
    pub(crate) allow_public_overrides: std::option::Option<bool>,
}
impl AccessRulesBuilder {
    /// <p>Specifies the anonymous access to all objects in a bucket.</p>
    /// <p>The following options can be specified:</p>
    /// <ul>
    /// <li> <p> <code>public</code> - Sets all objects in the bucket to public (read-only), making them readable by anyone in the world.</p> <p>If the <code>getObject</code> value is set to <code>public</code>, then all objects in the bucket default to public regardless of the <code>allowPublicOverrides</code> value.</p> </li>
    /// <li> <p> <code>private</code> - Sets all objects in the bucket to private, making them readable only by you or anyone you give access to.</p> <p>If the <code>getObject</code> value is set to <code>private</code>, and the <code>allowPublicOverrides</code> value is set to <code>true</code>, then all objects in the bucket default to private unless they are configured with a <code>public-read</code> ACL. Individual objects with a <code>public-read</code> ACL are readable by anyone in the world.</p> </li>
    /// </ul>
    pub fn get_object(mut self, input: crate::types::AccessType) -> Self {
        self.get_object = Some(input);
        self
    }
    /// <p>Specifies the anonymous access to all objects in a bucket.</p>
    /// <p>The following options can be specified:</p>
    /// <ul>
    /// <li> <p> <code>public</code> - Sets all objects in the bucket to public (read-only), making them readable by anyone in the world.</p> <p>If the <code>getObject</code> value is set to <code>public</code>, then all objects in the bucket default to public regardless of the <code>allowPublicOverrides</code> value.</p> </li>
    /// <li> <p> <code>private</code> - Sets all objects in the bucket to private, making them readable only by you or anyone you give access to.</p> <p>If the <code>getObject</code> value is set to <code>private</code>, and the <code>allowPublicOverrides</code> value is set to <code>true</code>, then all objects in the bucket default to private unless they are configured with a <code>public-read</code> ACL. Individual objects with a <code>public-read</code> ACL are readable by anyone in the world.</p> </li>
    /// </ul>
    pub fn set_get_object(mut self, input: std::option::Option<crate::types::AccessType>) -> Self {
        self.get_object = input;
        self
    }
    /// <p>A Boolean value that indicates whether the access control list (ACL) permissions that are applied to individual objects override the <code>getObject</code> option that is currently specified.</p>
    /// <p>When this is true, you can use the <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObjectAcl.html">PutObjectAcl</a> Amazon S3 API action to set individual objects to public (read-only) using the <code>public-read</code> ACL, or to private using the <code>private</code> ACL.</p>
    pub fn allow_public_overrides(mut self, input: bool) -> Self {
        self.allow_public_overrides = Some(input);
        self
    }
    /// <p>A Boolean value that indicates whether the access control list (ACL) permissions that are applied to individual objects override the <code>getObject</code> option that is currently specified.</p>
    /// <p>When this is true, you can use the <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObjectAcl.html">PutObjectAcl</a> Amazon S3 API action to set individual objects to public (read-only) using the <code>public-read</code> ACL, or to private using the <code>private</code> ACL.</p>
    pub fn set_allow_public_overrides(mut self, input: std::option::Option<bool>) -> Self {
        self.allow_public_overrides = input;
        self
    }
    /// Consumes the builder and constructs a [`AccessRules`](crate::types::AccessRules).
    pub fn build(self) -> crate::types::AccessRules {
        crate::types::AccessRules {
            get_object: self.get_object,
            allow_public_overrides: self.allow_public_overrides,
        }
    }
}
