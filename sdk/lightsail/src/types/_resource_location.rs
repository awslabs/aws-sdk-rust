// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Describes the resource location.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ResourceLocation {
    /// <p>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</p>
    #[doc(hidden)]
    pub availability_zone: std::option::Option<std::string::String>,
    /// <p>The Amazon Web Services Region name.</p>
    #[doc(hidden)]
    pub region_name: std::option::Option<crate::types::RegionName>,
}
impl ResourceLocation {
    /// <p>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</p>
    pub fn availability_zone(&self) -> std::option::Option<&str> {
        self.availability_zone.as_deref()
    }
    /// <p>The Amazon Web Services Region name.</p>
    pub fn region_name(&self) -> std::option::Option<&crate::types::RegionName> {
        self.region_name.as_ref()
    }
}
impl ResourceLocation {
    /// Creates a new builder-style object to manufacture [`ResourceLocation`](crate::types::ResourceLocation).
    pub fn builder() -> crate::types::builders::ResourceLocationBuilder {
        crate::types::builders::ResourceLocationBuilder::default()
    }
}

/// A builder for [`ResourceLocation`](crate::types::ResourceLocation).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ResourceLocationBuilder {
    pub(crate) availability_zone: std::option::Option<std::string::String>,
    pub(crate) region_name: std::option::Option<crate::types::RegionName>,
}
impl ResourceLocationBuilder {
    /// <p>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</p>
    pub fn availability_zone(mut self, input: impl Into<std::string::String>) -> Self {
        self.availability_zone = Some(input.into());
        self
    }
    /// <p>The Availability Zone. Follows the format <code>us-east-2a</code> (case-sensitive).</p>
    pub fn set_availability_zone(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.availability_zone = input;
        self
    }
    /// <p>The Amazon Web Services Region name.</p>
    pub fn region_name(mut self, input: crate::types::RegionName) -> Self {
        self.region_name = Some(input);
        self
    }
    /// <p>The Amazon Web Services Region name.</p>
    pub fn set_region_name(mut self, input: std::option::Option<crate::types::RegionName>) -> Self {
        self.region_name = input;
        self
    }
    /// Consumes the builder and constructs a [`ResourceLocation`](crate::types::ResourceLocation).
    pub fn build(self) -> crate::types::ResourceLocation {
        crate::types::ResourceLocation {
            availability_zone: self.availability_zone,
            region_name: self.region_name,
        }
    }
}
