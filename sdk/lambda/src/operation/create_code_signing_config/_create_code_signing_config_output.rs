// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct CreateCodeSigningConfigOutput {
    /// <p>The code signing configuration.</p>
    #[doc(hidden)]
    pub code_signing_config: std::option::Option<crate::types::CodeSigningConfig>,
    _request_id: Option<String>,
}
impl CreateCodeSigningConfigOutput {
    /// <p>The code signing configuration.</p>
    pub fn code_signing_config(&self) -> std::option::Option<&crate::types::CodeSigningConfig> {
        self.code_signing_config.as_ref()
    }
}
impl aws_http::request_id::RequestId for CreateCodeSigningConfigOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl CreateCodeSigningConfigOutput {
    /// Creates a new builder-style object to manufacture [`CreateCodeSigningConfigOutput`](crate::operation::create_code_signing_config::CreateCodeSigningConfigOutput).
    pub fn builder(
    ) -> crate::operation::create_code_signing_config::builders::CreateCodeSigningConfigOutputBuilder
    {
        crate::operation::create_code_signing_config::builders::CreateCodeSigningConfigOutputBuilder::default()
    }
}

/// A builder for [`CreateCodeSigningConfigOutput`](crate::operation::create_code_signing_config::CreateCodeSigningConfigOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct CreateCodeSigningConfigOutputBuilder {
    pub(crate) code_signing_config: std::option::Option<crate::types::CodeSigningConfig>,
    _request_id: Option<String>,
}
impl CreateCodeSigningConfigOutputBuilder {
    /// <p>The code signing configuration.</p>
    pub fn code_signing_config(mut self, input: crate::types::CodeSigningConfig) -> Self {
        self.code_signing_config = Some(input);
        self
    }
    /// <p>The code signing configuration.</p>
    pub fn set_code_signing_config(
        mut self,
        input: std::option::Option<crate::types::CodeSigningConfig>,
    ) -> Self {
        self.code_signing_config = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`CreateCodeSigningConfigOutput`](crate::operation::create_code_signing_config::CreateCodeSigningConfigOutput).
    pub fn build(
        self,
    ) -> crate::operation::create_code_signing_config::CreateCodeSigningConfigOutput {
        crate::operation::create_code_signing_config::CreateCodeSigningConfigOutput {
            code_signing_config: self.code_signing_config,
            _request_id: self._request_id,
        }
    }
}
