// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The self-managed Apache Kafka cluster for your event source.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct SelfManagedEventSource {
    /// <p>The list of bootstrap servers for your Kafka brokers in the following format: <code>"KAFKA_BOOTSTRAP_SERVERS": ["abc.xyz.com:xxxx","abc2.xyz.com:xxxx"]</code>.</p>
    #[doc(hidden)]
    pub endpoints: std::option::Option<
        std::collections::HashMap<crate::types::EndPointType, std::vec::Vec<std::string::String>>,
    >,
}
impl SelfManagedEventSource {
    /// <p>The list of bootstrap servers for your Kafka brokers in the following format: <code>"KAFKA_BOOTSTRAP_SERVERS": ["abc.xyz.com:xxxx","abc2.xyz.com:xxxx"]</code>.</p>
    pub fn endpoints(
        &self,
    ) -> std::option::Option<
        &std::collections::HashMap<crate::types::EndPointType, std::vec::Vec<std::string::String>>,
    > {
        self.endpoints.as_ref()
    }
}
impl SelfManagedEventSource {
    /// Creates a new builder-style object to manufacture [`SelfManagedEventSource`](crate::types::SelfManagedEventSource).
    pub fn builder() -> crate::types::builders::SelfManagedEventSourceBuilder {
        crate::types::builders::SelfManagedEventSourceBuilder::default()
    }
}

/// A builder for [`SelfManagedEventSource`](crate::types::SelfManagedEventSource).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct SelfManagedEventSourceBuilder {
    pub(crate) endpoints: std::option::Option<
        std::collections::HashMap<crate::types::EndPointType, std::vec::Vec<std::string::String>>,
    >,
}
impl SelfManagedEventSourceBuilder {
    /// Adds a key-value pair to `endpoints`.
    ///
    /// To override the contents of this collection use [`set_endpoints`](Self::set_endpoints).
    ///
    /// <p>The list of bootstrap servers for your Kafka brokers in the following format: <code>"KAFKA_BOOTSTRAP_SERVERS": ["abc.xyz.com:xxxx","abc2.xyz.com:xxxx"]</code>.</p>
    pub fn endpoints(
        mut self,
        k: crate::types::EndPointType,
        v: std::vec::Vec<std::string::String>,
    ) -> Self {
        let mut hash_map = self.endpoints.unwrap_or_default();
        hash_map.insert(k, v);
        self.endpoints = Some(hash_map);
        self
    }
    /// <p>The list of bootstrap servers for your Kafka brokers in the following format: <code>"KAFKA_BOOTSTRAP_SERVERS": ["abc.xyz.com:xxxx","abc2.xyz.com:xxxx"]</code>.</p>
    pub fn set_endpoints(
        mut self,
        input: std::option::Option<
            std::collections::HashMap<
                crate::types::EndPointType,
                std::vec::Vec<std::string::String>,
            >,
        >,
    ) -> Self {
        self.endpoints = input;
        self
    }
    /// Consumes the builder and constructs a [`SelfManagedEventSource`](crate::types::SelfManagedEventSource).
    pub fn build(self) -> crate::types::SelfManagedEventSource {
        crate::types::SelfManagedEventSource {
            endpoints: self.endpoints,
        }
    }
}
