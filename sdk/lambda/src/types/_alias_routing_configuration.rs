// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The <a href="https://docs.aws.amazon.com/lambda/latest/dg/lambda-traffic-shifting-using-aliases.html">traffic-shifting</a> configuration of a Lambda function alias.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AliasRoutingConfiguration {
    /// <p>The second version, and the percentage of traffic that's routed to it.</p>
    #[doc(hidden)]
    pub additional_version_weights:
        std::option::Option<std::collections::HashMap<std::string::String, f64>>,
}
impl AliasRoutingConfiguration {
    /// <p>The second version, and the percentage of traffic that's routed to it.</p>
    pub fn additional_version_weights(
        &self,
    ) -> std::option::Option<&std::collections::HashMap<std::string::String, f64>> {
        self.additional_version_weights.as_ref()
    }
}
impl AliasRoutingConfiguration {
    /// Creates a new builder-style object to manufacture [`AliasRoutingConfiguration`](crate::types::AliasRoutingConfiguration).
    pub fn builder() -> crate::types::builders::AliasRoutingConfigurationBuilder {
        crate::types::builders::AliasRoutingConfigurationBuilder::default()
    }
}

/// A builder for [`AliasRoutingConfiguration`](crate::types::AliasRoutingConfiguration).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AliasRoutingConfigurationBuilder {
    pub(crate) additional_version_weights:
        std::option::Option<std::collections::HashMap<std::string::String, f64>>,
}
impl AliasRoutingConfigurationBuilder {
    /// Adds a key-value pair to `additional_version_weights`.
    ///
    /// To override the contents of this collection use [`set_additional_version_weights`](Self::set_additional_version_weights).
    ///
    /// <p>The second version, and the percentage of traffic that's routed to it.</p>
    pub fn additional_version_weights(mut self, k: impl Into<std::string::String>, v: f64) -> Self {
        let mut hash_map = self.additional_version_weights.unwrap_or_default();
        hash_map.insert(k.into(), v);
        self.additional_version_weights = Some(hash_map);
        self
    }
    /// <p>The second version, and the percentage of traffic that's routed to it.</p>
    pub fn set_additional_version_weights(
        mut self,
        input: std::option::Option<std::collections::HashMap<std::string::String, f64>>,
    ) -> Self {
        self.additional_version_weights = input;
        self
    }
    /// Consumes the builder and constructs a [`AliasRoutingConfiguration`](crate::types::AliasRoutingConfiguration).
    pub fn build(self) -> crate::types::AliasRoutingConfiguration {
        crate::types::AliasRoutingConfiguration {
            additional_version_weights: self.additional_version_weights,
        }
    }
}
