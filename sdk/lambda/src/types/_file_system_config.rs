// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Details about the connection between a Lambda function and an <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-filesystem.html">Amazon EFS file system</a>.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct FileSystemConfig {
    /// <p>The Amazon Resource Name (ARN) of the Amazon EFS access point that provides access to the file system.</p>
    pub arn: ::std::string::String,
    /// <p>The path where the function can access the file system, starting with <code>/mnt/</code>.</p>
    pub local_mount_path: ::std::string::String,
}
impl FileSystemConfig {
    /// <p>The Amazon Resource Name (ARN) of the Amazon EFS access point that provides access to the file system.</p>
    pub fn arn(&self) -> &str {
        use std::ops::Deref;
        self.arn.deref()
    }
    /// <p>The path where the function can access the file system, starting with <code>/mnt/</code>.</p>
    pub fn local_mount_path(&self) -> &str {
        use std::ops::Deref;
        self.local_mount_path.deref()
    }
}
impl FileSystemConfig {
    /// Creates a new builder-style object to manufacture [`FileSystemConfig`](crate::types::FileSystemConfig).
    pub fn builder() -> crate::types::builders::FileSystemConfigBuilder {
        crate::types::builders::FileSystemConfigBuilder::default()
    }
}

/// A builder for [`FileSystemConfig`](crate::types::FileSystemConfig).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct FileSystemConfigBuilder {
    pub(crate) arn: ::std::option::Option<::std::string::String>,
    pub(crate) local_mount_path: ::std::option::Option<::std::string::String>,
}
impl FileSystemConfigBuilder {
    /// <p>The Amazon Resource Name (ARN) of the Amazon EFS access point that provides access to the file system.</p>
    /// This field is required.
    pub fn arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the Amazon EFS access point that provides access to the file system.</p>
    pub fn set_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the Amazon EFS access point that provides access to the file system.</p>
    pub fn get_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.arn
    }
    /// <p>The path where the function can access the file system, starting with <code>/mnt/</code>.</p>
    /// This field is required.
    pub fn local_mount_path(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.local_mount_path = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The path where the function can access the file system, starting with <code>/mnt/</code>.</p>
    pub fn set_local_mount_path(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.local_mount_path = input;
        self
    }
    /// <p>The path where the function can access the file system, starting with <code>/mnt/</code>.</p>
    pub fn get_local_mount_path(&self) -> &::std::option::Option<::std::string::String> {
        &self.local_mount_path
    }
    /// Consumes the builder and constructs a [`FileSystemConfig`](crate::types::FileSystemConfig).
    /// This method will fail if any of the following fields are not set:
    /// - [`arn`](crate::types::builders::FileSystemConfigBuilder::arn)
    /// - [`local_mount_path`](crate::types::builders::FileSystemConfigBuilder::local_mount_path)
    pub fn build(self) -> ::std::result::Result<crate::types::FileSystemConfig, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::FileSystemConfig {
            arn: self.arn.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "arn",
                    "arn was not specified but it is required when building FileSystemConfig",
                )
            })?,
            local_mount_path: self.local_mount_path.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "local_mount_path",
                    "local_mount_path was not specified but it is required when building FileSystemConfig",
                )
            })?,
        })
    }
}
