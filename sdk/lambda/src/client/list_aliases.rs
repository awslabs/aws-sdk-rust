// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListAliases`](crate::client::fluent_builders::ListAliases) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListAliases::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`function_name(impl Into<String>)`](crate::client::fluent_builders::ListAliases::function_name) / [`set_function_name(Option<String>)`](crate::client::fluent_builders::ListAliases::set_function_name): <p>The name of the Lambda function.</p>  <p class="title"> <b>Name formats</b> </p>  <ul>   <li> <p> <b>Function name</b> - <code>MyFunction</code>.</p> </li>   <li> <p> <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</code>.</p> </li>   <li> <p> <b>Partial ARN</b> - <code>123456789012:function:MyFunction</code>.</p> </li>  </ul>  <p>The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>
    ///   - [`function_version(impl Into<String>)`](crate::client::fluent_builders::ListAliases::function_version) / [`set_function_version(Option<String>)`](crate::client::fluent_builders::ListAliases::set_function_version): <p>Specify a function version to only list aliases that invoke that version.</p>
    ///   - [`marker(impl Into<String>)`](crate::client::fluent_builders::ListAliases::marker) / [`set_marker(Option<String>)`](crate::client::fluent_builders::ListAliases::set_marker): <p>Specify the pagination token that's returned by a previous request to retrieve the next page of results.</p>
    ///   - [`max_items(i32)`](crate::client::fluent_builders::ListAliases::max_items) / [`set_max_items(Option<i32>)`](crate::client::fluent_builders::ListAliases::set_max_items): <p>Limit the number of aliases returned.</p>
    /// - On success, responds with [`ListAliasesOutput`](crate::output::ListAliasesOutput) with field(s):
    ///   - [`next_marker(Option<String>)`](crate::output::ListAliasesOutput::next_marker): <p>The pagination token that's included if more results are available.</p>
    ///   - [`aliases(Option<Vec<AliasConfiguration>>)`](crate::output::ListAliasesOutput::aliases): <p>A list of aliases.</p>
    /// - On failure, responds with [`SdkError<ListAliasesError>`](crate::error::ListAliasesError)
    pub fn list_aliases(&self) -> crate::client::fluent_builders::ListAliases {
        crate::client::fluent_builders::ListAliases::new(self.handle.clone())
    }
}
