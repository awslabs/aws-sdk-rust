// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`AddLayerVersionPermission`](crate::client::fluent_builders::AddLayerVersionPermission) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`layer_name(impl Into<String>)`](crate::client::fluent_builders::AddLayerVersionPermission::layer_name) / [`set_layer_name(Option<String>)`](crate::client::fluent_builders::AddLayerVersionPermission::set_layer_name): <p>The name or Amazon Resource Name (ARN) of the layer.</p>
    ///   - [`version_number(i64)`](crate::client::fluent_builders::AddLayerVersionPermission::version_number) / [`set_version_number(i64)`](crate::client::fluent_builders::AddLayerVersionPermission::set_version_number): <p>The version number.</p>
    ///   - [`statement_id(impl Into<String>)`](crate::client::fluent_builders::AddLayerVersionPermission::statement_id) / [`set_statement_id(Option<String>)`](crate::client::fluent_builders::AddLayerVersionPermission::set_statement_id): <p>An identifier that distinguishes the policy from others on the same layer version.</p>
    ///   - [`action(impl Into<String>)`](crate::client::fluent_builders::AddLayerVersionPermission::action) / [`set_action(Option<String>)`](crate::client::fluent_builders::AddLayerVersionPermission::set_action): <p>The API action that grants access to the layer. For example, <code>lambda:GetLayerVersion</code>.</p>
    ///   - [`principal(impl Into<String>)`](crate::client::fluent_builders::AddLayerVersionPermission::principal) / [`set_principal(Option<String>)`](crate::client::fluent_builders::AddLayerVersionPermission::set_principal): <p>An account ID, or <code>*</code> to grant layer usage permission to all accounts in an organization, or all Amazon Web Services accounts (if <code>organizationId</code> is not specified). For the last case, make sure that you really do want all Amazon Web Services accounts to have usage permission to this layer. </p>
    ///   - [`organization_id(impl Into<String>)`](crate::client::fluent_builders::AddLayerVersionPermission::organization_id) / [`set_organization_id(Option<String>)`](crate::client::fluent_builders::AddLayerVersionPermission::set_organization_id): <p>With the principal set to <code>*</code>, grant permission to all accounts in the specified organization.</p>
    ///   - [`revision_id(impl Into<String>)`](crate::client::fluent_builders::AddLayerVersionPermission::revision_id) / [`set_revision_id(Option<String>)`](crate::client::fluent_builders::AddLayerVersionPermission::set_revision_id): <p>Only update the policy if the revision ID matches the ID specified. Use this option to avoid modifying a policy that has changed since you last read it.</p>
    /// - On success, responds with [`AddLayerVersionPermissionOutput`](crate::output::AddLayerVersionPermissionOutput) with field(s):
    ///   - [`statement(Option<String>)`](crate::output::AddLayerVersionPermissionOutput::statement): <p>The permission statement.</p>
    ///   - [`revision_id(Option<String>)`](crate::output::AddLayerVersionPermissionOutput::revision_id): <p>A unique identifier for the current revision of the policy.</p>
    /// - On failure, responds with [`SdkError<AddLayerVersionPermissionError>`](crate::error::AddLayerVersionPermissionError)
    pub fn add_layer_version_permission(
        &self,
    ) -> crate::client::fluent_builders::AddLayerVersionPermission {
        crate::client::fluent_builders::AddLayerVersionPermission::new(self.handle.clone())
    }
}
