// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateFunctionConfiguration`](crate::client::fluent_builders::UpdateFunctionConfiguration) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`function_name(impl Into<String>)`](crate::client::fluent_builders::UpdateFunctionConfiguration::function_name) / [`set_function_name(Option<String>)`](crate::client::fluent_builders::UpdateFunctionConfiguration::set_function_name): <p>The name of the Lambda function.</p>  <p class="title"> <b>Name formats</b> </p>  <ul>   <li> <p> <b>Function name</b> – <code>my-function</code>.</p> </li>   <li> <p> <b>Function ARN</b> – <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p> </li>   <li> <p> <b>Partial ARN</b> – <code>123456789012:function:my-function</code>.</p> </li>  </ul>  <p>The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>
    ///   - [`role(impl Into<String>)`](crate::client::fluent_builders::UpdateFunctionConfiguration::role) / [`set_role(Option<String>)`](crate::client::fluent_builders::UpdateFunctionConfiguration::set_role): <p>The Amazon Resource Name (ARN) of the function's execution role.</p>
    ///   - [`handler(impl Into<String>)`](crate::client::fluent_builders::UpdateFunctionConfiguration::handler) / [`set_handler(Option<String>)`](crate::client::fluent_builders::UpdateFunctionConfiguration::set_handler): <p>The name of the method within your code that Lambda calls to run your function. Handler is required if the deployment package is a .zip file archive. The format includes the file name. It can also include namespaces and other qualifiers, depending on the runtime. For more information, see <a href="https://docs.aws.amazon.com/lambda/latest/dg/foundation-progmodel.html">Lambda programming model</a>.</p>
    ///   - [`description(impl Into<String>)`](crate::client::fluent_builders::UpdateFunctionConfiguration::description) / [`set_description(Option<String>)`](crate::client::fluent_builders::UpdateFunctionConfiguration::set_description): <p>A description of the function.</p>
    ///   - [`timeout(i32)`](crate::client::fluent_builders::UpdateFunctionConfiguration::timeout) / [`set_timeout(Option<i32>)`](crate::client::fluent_builders::UpdateFunctionConfiguration::set_timeout): <p>The amount of time (in seconds) that Lambda allows a function to run before stopping it. The default is 3 seconds. The maximum allowed value is 900 seconds. For more information, see <a href="https://docs.aws.amazon.com/lambda/latest/dg/runtimes-context.html">Lambda execution environment</a>.</p>
    ///   - [`memory_size(i32)`](crate::client::fluent_builders::UpdateFunctionConfiguration::memory_size) / [`set_memory_size(Option<i32>)`](crate::client::fluent_builders::UpdateFunctionConfiguration::set_memory_size): <p>The amount of <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-function-common.html#configuration-memory-console">memory available to the function</a> at runtime. Increasing the function memory also increases its CPU allocation. The default value is 128 MB. The value can be any multiple of 1 MB.</p>
    ///   - [`vpc_config(VpcConfig)`](crate::client::fluent_builders::UpdateFunctionConfiguration::vpc_config) / [`set_vpc_config(Option<VpcConfig>)`](crate::client::fluent_builders::UpdateFunctionConfiguration::set_vpc_config): <p>For network connectivity to Amazon Web Services resources in a VPC, specify a list of security groups and subnets in the VPC. When you connect a function to a VPC, it can access resources and the internet only through that VPC. For more information, see <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-vpc.html">Configuring a Lambda function to access resources in a VPC</a>.</p>
    ///   - [`environment(Environment)`](crate::client::fluent_builders::UpdateFunctionConfiguration::environment) / [`set_environment(Option<Environment>)`](crate::client::fluent_builders::UpdateFunctionConfiguration::set_environment): <p>Environment variables that are accessible from function code during execution.</p>
    ///   - [`runtime(Runtime)`](crate::client::fluent_builders::UpdateFunctionConfiguration::runtime) / [`set_runtime(Option<Runtime>)`](crate::client::fluent_builders::UpdateFunctionConfiguration::set_runtime): <p>The identifier of the function's <a href="https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html">runtime</a>. Runtime is required if the deployment package is a .zip file archive. </p>
    ///   - [`dead_letter_config(DeadLetterConfig)`](crate::client::fluent_builders::UpdateFunctionConfiguration::dead_letter_config) / [`set_dead_letter_config(Option<DeadLetterConfig>)`](crate::client::fluent_builders::UpdateFunctionConfiguration::set_dead_letter_config): <p>A dead-letter queue configuration that specifies the queue or topic where Lambda sends asynchronous events when they fail processing. For more information, see <a href="https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html#invocation-dlq">Dead-letter queues</a>.</p>
    ///   - [`kms_key_arn(impl Into<String>)`](crate::client::fluent_builders::UpdateFunctionConfiguration::kms_key_arn) / [`set_kms_key_arn(Option<String>)`](crate::client::fluent_builders::UpdateFunctionConfiguration::set_kms_key_arn): <p>The ARN of the Key Management Service (KMS) key that's used to encrypt your function's environment variables. If it's not provided, Lambda uses a default service key.</p>
    ///   - [`tracing_config(TracingConfig)`](crate::client::fluent_builders::UpdateFunctionConfiguration::tracing_config) / [`set_tracing_config(Option<TracingConfig>)`](crate::client::fluent_builders::UpdateFunctionConfiguration::set_tracing_config): <p>Set <code>Mode</code> to <code>Active</code> to sample and trace a subset of incoming requests with <a href="https://docs.aws.amazon.com/lambda/latest/dg/services-xray.html">X-Ray</a>.</p>
    ///   - [`revision_id(impl Into<String>)`](crate::client::fluent_builders::UpdateFunctionConfiguration::revision_id) / [`set_revision_id(Option<String>)`](crate::client::fluent_builders::UpdateFunctionConfiguration::set_revision_id): <p>Update the function only if the revision ID matches the ID that's specified. Use this option to avoid modifying a function that has changed since you last read it.</p>
    ///   - [`layers(Vec<String>)`](crate::client::fluent_builders::UpdateFunctionConfiguration::layers) / [`set_layers(Option<Vec<String>>)`](crate::client::fluent_builders::UpdateFunctionConfiguration::set_layers): <p>A list of <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html">function layers</a> to add to the function's execution environment. Specify each layer by its ARN, including the version.</p>
    ///   - [`file_system_configs(Vec<FileSystemConfig>)`](crate::client::fluent_builders::UpdateFunctionConfiguration::file_system_configs) / [`set_file_system_configs(Option<Vec<FileSystemConfig>>)`](crate::client::fluent_builders::UpdateFunctionConfiguration::set_file_system_configs): <p>Connection settings for an Amazon EFS file system.</p>
    ///   - [`image_config(ImageConfig)`](crate::client::fluent_builders::UpdateFunctionConfiguration::image_config) / [`set_image_config(Option<ImageConfig>)`](crate::client::fluent_builders::UpdateFunctionConfiguration::set_image_config): <p> <a href="https://docs.aws.amazon.com/lambda/latest/dg/images-parms.html">Container image configuration values</a> that override the values in the container image Docker file.</p>
    ///   - [`ephemeral_storage(EphemeralStorage)`](crate::client::fluent_builders::UpdateFunctionConfiguration::ephemeral_storage) / [`set_ephemeral_storage(Option<EphemeralStorage>)`](crate::client::fluent_builders::UpdateFunctionConfiguration::set_ephemeral_storage): <p>The size of the function's <code>/tmp</code> directory in MB. The default value is 512, but can be any whole number between 512 and 10,240 MB.</p>
    ///   - [`snap_start(SnapStart)`](crate::client::fluent_builders::UpdateFunctionConfiguration::snap_start) / [`set_snap_start(Option<SnapStart>)`](crate::client::fluent_builders::UpdateFunctionConfiguration::set_snap_start): <p>The function's <a href="https://docs.aws.amazon.com/lambda/latest/dg/snapstart.html">SnapStart</a> setting.</p>
    /// - On success, responds with [`UpdateFunctionConfigurationOutput`](crate::output::UpdateFunctionConfigurationOutput) with field(s):
    ///   - [`function_name(Option<String>)`](crate::output::UpdateFunctionConfigurationOutput::function_name): <p>The name of the function.</p>
    ///   - [`function_arn(Option<String>)`](crate::output::UpdateFunctionConfigurationOutput::function_arn): <p>The function's Amazon Resource Name (ARN).</p>
    ///   - [`runtime(Option<Runtime>)`](crate::output::UpdateFunctionConfigurationOutput::runtime): <p>The runtime environment for the Lambda function.</p>
    ///   - [`role(Option<String>)`](crate::output::UpdateFunctionConfigurationOutput::role): <p>The function's execution role.</p>
    ///   - [`handler(Option<String>)`](crate::output::UpdateFunctionConfigurationOutput::handler): <p>The function that Lambda calls to begin running your function.</p>
    ///   - [`code_size(i64)`](crate::output::UpdateFunctionConfigurationOutput::code_size): <p>The size of the function's deployment package, in bytes.</p>
    ///   - [`description(Option<String>)`](crate::output::UpdateFunctionConfigurationOutput::description): <p>The function's description.</p>
    ///   - [`timeout(Option<i32>)`](crate::output::UpdateFunctionConfigurationOutput::timeout): <p>The amount of time in seconds that Lambda allows a function to run before stopping it.</p>
    ///   - [`memory_size(Option<i32>)`](crate::output::UpdateFunctionConfigurationOutput::memory_size): <p>The amount of memory available to the function at runtime.</p>
    ///   - [`last_modified(Option<String>)`](crate::output::UpdateFunctionConfigurationOutput::last_modified): <p>The date and time that the function was last updated, in <a href="https://www.w3.org/TR/NOTE-datetime">ISO-8601 format</a> (YYYY-MM-DDThh:mm:ss.sTZD).</p>
    ///   - [`code_sha256(Option<String>)`](crate::output::UpdateFunctionConfigurationOutput::code_sha256): <p>The SHA256 hash of the function's deployment package.</p>
    ///   - [`version(Option<String>)`](crate::output::UpdateFunctionConfigurationOutput::version): <p>The version of the Lambda function.</p>
    ///   - [`vpc_config(Option<VpcConfigResponse>)`](crate::output::UpdateFunctionConfigurationOutput::vpc_config): <p>The function's networking configuration.</p>
    ///   - [`dead_letter_config(Option<DeadLetterConfig>)`](crate::output::UpdateFunctionConfigurationOutput::dead_letter_config): <p>The function's dead letter queue.</p>
    ///   - [`environment(Option<EnvironmentResponse>)`](crate::output::UpdateFunctionConfigurationOutput::environment): <p>The function's <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-envvars.html">environment variables</a>. Omitted from CloudTrail logs.</p>
    ///   - [`kms_key_arn(Option<String>)`](crate::output::UpdateFunctionConfigurationOutput::kms_key_arn): <p>The KMS key that's used to encrypt the function's environment variables. This key is returned only if you've configured a customer managed key.</p>
    ///   - [`tracing_config(Option<TracingConfigResponse>)`](crate::output::UpdateFunctionConfigurationOutput::tracing_config): <p>The function's X-Ray tracing configuration.</p>
    ///   - [`master_arn(Option<String>)`](crate::output::UpdateFunctionConfigurationOutput::master_arn): <p>For Lambda@Edge functions, the ARN of the main function.</p>
    ///   - [`revision_id(Option<String>)`](crate::output::UpdateFunctionConfigurationOutput::revision_id): <p>The latest updated revision of the function or alias.</p>
    ///   - [`layers(Option<Vec<Layer>>)`](crate::output::UpdateFunctionConfigurationOutput::layers): <p>The function's <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html">layers</a>.</p>
    ///   - [`state(Option<State>)`](crate::output::UpdateFunctionConfigurationOutput::state): <p>The current state of the function. When the state is <code>Inactive</code>, you can reactivate the function by invoking it.</p>
    ///   - [`state_reason(Option<String>)`](crate::output::UpdateFunctionConfigurationOutput::state_reason): <p>The reason for the function's current state.</p>
    ///   - [`state_reason_code(Option<StateReasonCode>)`](crate::output::UpdateFunctionConfigurationOutput::state_reason_code): <p>The reason code for the function's current state. When the code is <code>Creating</code>, you can't invoke or modify the function.</p>
    ///   - [`last_update_status(Option<LastUpdateStatus>)`](crate::output::UpdateFunctionConfigurationOutput::last_update_status): <p>The status of the last update that was performed on the function. This is first set to <code>Successful</code> after function creation completes.</p>
    ///   - [`last_update_status_reason(Option<String>)`](crate::output::UpdateFunctionConfigurationOutput::last_update_status_reason): <p>The reason for the last update that was performed on the function.</p>
    ///   - [`last_update_status_reason_code(Option<LastUpdateStatusReasonCode>)`](crate::output::UpdateFunctionConfigurationOutput::last_update_status_reason_code): <p>The reason code for the last update that was performed on the function.</p>
    ///   - [`file_system_configs(Option<Vec<FileSystemConfig>>)`](crate::output::UpdateFunctionConfigurationOutput::file_system_configs): <p>Connection settings for an <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-filesystem.html">Amazon EFS file system</a>.</p>
    ///   - [`package_type(Option<PackageType>)`](crate::output::UpdateFunctionConfigurationOutput::package_type): <p>The type of deployment package. Set to <code>Image</code> for container image and set <code>Zip</code> for .zip file archive.</p>
    ///   - [`image_config_response(Option<ImageConfigResponse>)`](crate::output::UpdateFunctionConfigurationOutput::image_config_response): <p>The function's image configuration values.</p>
    ///   - [`signing_profile_version_arn(Option<String>)`](crate::output::UpdateFunctionConfigurationOutput::signing_profile_version_arn): <p>The ARN of the signing profile version.</p>
    ///   - [`signing_job_arn(Option<String>)`](crate::output::UpdateFunctionConfigurationOutput::signing_job_arn): <p>The ARN of the signing job.</p>
    ///   - [`architectures(Option<Vec<Architecture>>)`](crate::output::UpdateFunctionConfigurationOutput::architectures): <p>The instruction set architecture that the function supports. Architecture is a string array with one of the valid values. The default architecture value is <code>x86_64</code>.</p>
    ///   - [`ephemeral_storage(Option<EphemeralStorage>)`](crate::output::UpdateFunctionConfigurationOutput::ephemeral_storage): <p>The size of the function’s <code>/tmp</code> directory in MB. The default value is 512, but it can be any whole number between 512 and 10,240 MB.</p>
    ///   - [`snap_start(Option<SnapStartResponse>)`](crate::output::UpdateFunctionConfigurationOutput::snap_start): <p>Set <code>ApplyOn</code> to <code>PublishedVersions</code> to create a snapshot of the initialized execution environment when you publish a function version. For more information, see <a href="https://docs.aws.amazon.com/lambda/latest/dg/snapstart.html">Improving startup performance with Lambda SnapStart</a>.</p>
    ///   - [`runtime_version_config(Option<RuntimeVersionConfig>)`](crate::output::UpdateFunctionConfigurationOutput::runtime_version_config): <p>The ARN of the runtime and any errors that occured.</p>
    /// - On failure, responds with [`SdkError<UpdateFunctionConfigurationError>`](crate::error::UpdateFunctionConfigurationError)
    pub fn update_function_configuration(
        &self,
    ) -> crate::client::fluent_builders::UpdateFunctionConfiguration {
        crate::client::fluent_builders::UpdateFunctionConfiguration::new(self.handle.clone())
    }
}
