// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetFunctionEventInvokeConfig`](crate::client::fluent_builders::GetFunctionEventInvokeConfig) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`function_name(impl Into<String>)`](crate::client::fluent_builders::GetFunctionEventInvokeConfig::function_name) / [`set_function_name(Option<String>)`](crate::client::fluent_builders::GetFunctionEventInvokeConfig::set_function_name): <p>The name of the Lambda function, version, or alias.</p>  <p class="title"> <b>Name formats</b> </p>  <ul>   <li> <p> <b>Function name</b> - <code>my-function</code> (name-only), <code>my-function:v1</code> (with alias).</p> </li>   <li> <p> <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p> </li>   <li> <p> <b>Partial ARN</b> - <code>123456789012:function:my-function</code>.</p> </li>  </ul>  <p>You can append a version number or alias to any of the formats. The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>
    ///   - [`qualifier(impl Into<String>)`](crate::client::fluent_builders::GetFunctionEventInvokeConfig::qualifier) / [`set_qualifier(Option<String>)`](crate::client::fluent_builders::GetFunctionEventInvokeConfig::set_qualifier): <p>A version number or alias name.</p>
    /// - On success, responds with [`GetFunctionEventInvokeConfigOutput`](crate::output::GetFunctionEventInvokeConfigOutput) with field(s):
    ///   - [`last_modified(Option<DateTime>)`](crate::output::GetFunctionEventInvokeConfigOutput::last_modified): <p>The date and time that the configuration was last updated.</p>
    ///   - [`function_arn(Option<String>)`](crate::output::GetFunctionEventInvokeConfigOutput::function_arn): <p>The Amazon Resource Name (ARN) of the function.</p>
    ///   - [`maximum_retry_attempts(Option<i32>)`](crate::output::GetFunctionEventInvokeConfigOutput::maximum_retry_attempts): <p>The maximum number of times to retry when the function returns an error.</p>
    ///   - [`maximum_event_age_in_seconds(Option<i32>)`](crate::output::GetFunctionEventInvokeConfigOutput::maximum_event_age_in_seconds): <p>The maximum age of a request that Lambda sends to a function for processing.</p>
    ///   - [`destination_config(Option<DestinationConfig>)`](crate::output::GetFunctionEventInvokeConfigOutput::destination_config): <p>A destination for events after they have been sent to a function for processing.</p>  <p class="title"> <b>Destinations</b> </p>  <ul>   <li> <p> <b>Function</b> - The Amazon Resource Name (ARN) of a Lambda function.</p> </li>   <li> <p> <b>Queue</b> - The ARN of an SQS queue.</p> </li>   <li> <p> <b>Topic</b> - The ARN of an SNS topic.</p> </li>   <li> <p> <b>Event Bus</b> - The ARN of an Amazon EventBridge event bus.</p> </li>  </ul>
    /// - On failure, responds with [`SdkError<GetFunctionEventInvokeConfigError>`](crate::error::GetFunctionEventInvokeConfigError)
    pub fn get_function_event_invoke_config(
        &self,
    ) -> crate::client::fluent_builders::GetFunctionEventInvokeConfig {
        crate::client::fluent_builders::GetFunctionEventInvokeConfig::new(self.handle.clone())
    }
}
