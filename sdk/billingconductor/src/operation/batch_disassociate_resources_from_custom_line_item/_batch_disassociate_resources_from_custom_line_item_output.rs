// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct BatchDisassociateResourcesFromCustomLineItemOutput {
    /// <p> A list of <code>DisassociateResourceResponseElement</code> for each resource that's been disassociated from a percentage custom line item successfully. </p>
    pub successfully_disassociated_resources: ::std::option::Option<::std::vec::Vec<crate::types::DisassociateResourceResponseElement>>,
    /// <p> A list of <code>DisassociateResourceResponseElement</code> for each resource that failed disassociation from a percentage custom line item. </p>
    pub failed_disassociated_resources: ::std::option::Option<::std::vec::Vec<crate::types::DisassociateResourceResponseElement>>,
    _request_id: Option<String>,
}
impl BatchDisassociateResourcesFromCustomLineItemOutput {
    /// <p> A list of <code>DisassociateResourceResponseElement</code> for each resource that's been disassociated from a percentage custom line item successfully. </p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.successfully_disassociated_resources.is_none()`.
    pub fn successfully_disassociated_resources(&self) -> &[crate::types::DisassociateResourceResponseElement] {
        self.successfully_disassociated_resources.as_deref().unwrap_or_default()
    }
    /// <p> A list of <code>DisassociateResourceResponseElement</code> for each resource that failed disassociation from a percentage custom line item. </p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.failed_disassociated_resources.is_none()`.
    pub fn failed_disassociated_resources(&self) -> &[crate::types::DisassociateResourceResponseElement] {
        self.failed_disassociated_resources.as_deref().unwrap_or_default()
    }
}
impl ::aws_http::request_id::RequestId for BatchDisassociateResourcesFromCustomLineItemOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl BatchDisassociateResourcesFromCustomLineItemOutput {
    /// Creates a new builder-style object to manufacture [`BatchDisassociateResourcesFromCustomLineItemOutput`](crate::operation::batch_disassociate_resources_from_custom_line_item::BatchDisassociateResourcesFromCustomLineItemOutput).
    pub fn builder(
    ) -> crate::operation::batch_disassociate_resources_from_custom_line_item::builders::BatchDisassociateResourcesFromCustomLineItemOutputBuilder
    {
        crate::operation::batch_disassociate_resources_from_custom_line_item::builders::BatchDisassociateResourcesFromCustomLineItemOutputBuilder::default()
    }
}

/// A builder for [`BatchDisassociateResourcesFromCustomLineItemOutput`](crate::operation::batch_disassociate_resources_from_custom_line_item::BatchDisassociateResourcesFromCustomLineItemOutput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct BatchDisassociateResourcesFromCustomLineItemOutputBuilder {
    pub(crate) successfully_disassociated_resources: ::std::option::Option<::std::vec::Vec<crate::types::DisassociateResourceResponseElement>>,
    pub(crate) failed_disassociated_resources: ::std::option::Option<::std::vec::Vec<crate::types::DisassociateResourceResponseElement>>,
    _request_id: Option<String>,
}
impl BatchDisassociateResourcesFromCustomLineItemOutputBuilder {
    /// Appends an item to `successfully_disassociated_resources`.
    ///
    /// To override the contents of this collection use [`set_successfully_disassociated_resources`](Self::set_successfully_disassociated_resources).
    ///
    /// <p> A list of <code>DisassociateResourceResponseElement</code> for each resource that's been disassociated from a percentage custom line item successfully. </p>
    pub fn successfully_disassociated_resources(mut self, input: crate::types::DisassociateResourceResponseElement) -> Self {
        let mut v = self.successfully_disassociated_resources.unwrap_or_default();
        v.push(input);
        self.successfully_disassociated_resources = ::std::option::Option::Some(v);
        self
    }
    /// <p> A list of <code>DisassociateResourceResponseElement</code> for each resource that's been disassociated from a percentage custom line item successfully. </p>
    pub fn set_successfully_disassociated_resources(
        mut self,
        input: ::std::option::Option<::std::vec::Vec<crate::types::DisassociateResourceResponseElement>>,
    ) -> Self {
        self.successfully_disassociated_resources = input;
        self
    }
    /// <p> A list of <code>DisassociateResourceResponseElement</code> for each resource that's been disassociated from a percentage custom line item successfully. </p>
    pub fn get_successfully_disassociated_resources(
        &self,
    ) -> &::std::option::Option<::std::vec::Vec<crate::types::DisassociateResourceResponseElement>> {
        &self.successfully_disassociated_resources
    }
    /// Appends an item to `failed_disassociated_resources`.
    ///
    /// To override the contents of this collection use [`set_failed_disassociated_resources`](Self::set_failed_disassociated_resources).
    ///
    /// <p> A list of <code>DisassociateResourceResponseElement</code> for each resource that failed disassociation from a percentage custom line item. </p>
    pub fn failed_disassociated_resources(mut self, input: crate::types::DisassociateResourceResponseElement) -> Self {
        let mut v = self.failed_disassociated_resources.unwrap_or_default();
        v.push(input);
        self.failed_disassociated_resources = ::std::option::Option::Some(v);
        self
    }
    /// <p> A list of <code>DisassociateResourceResponseElement</code> for each resource that failed disassociation from a percentage custom line item. </p>
    pub fn set_failed_disassociated_resources(
        mut self,
        input: ::std::option::Option<::std::vec::Vec<crate::types::DisassociateResourceResponseElement>>,
    ) -> Self {
        self.failed_disassociated_resources = input;
        self
    }
    /// <p> A list of <code>DisassociateResourceResponseElement</code> for each resource that failed disassociation from a percentage custom line item. </p>
    pub fn get_failed_disassociated_resources(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::DisassociateResourceResponseElement>> {
        &self.failed_disassociated_resources
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`BatchDisassociateResourcesFromCustomLineItemOutput`](crate::operation::batch_disassociate_resources_from_custom_line_item::BatchDisassociateResourcesFromCustomLineItemOutput).
    pub fn build(self) -> crate::operation::batch_disassociate_resources_from_custom_line_item::BatchDisassociateResourcesFromCustomLineItemOutput {
        crate::operation::batch_disassociate_resources_from_custom_line_item::BatchDisassociateResourcesFromCustomLineItemOutput {
            successfully_disassociated_resources: self.successfully_disassociated_resources,
            failed_disassociated_resources: self.failed_disassociated_resources,
            _request_id: self._request_id,
        }
    }
}
