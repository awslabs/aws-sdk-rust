// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub use crate::operation::batch_disassociate_resources_from_custom_line_item::_batch_disassociate_resources_from_custom_line_item_output::BatchDisassociateResourcesFromCustomLineItemOutputBuilder;

pub use crate::operation::batch_disassociate_resources_from_custom_line_item::_batch_disassociate_resources_from_custom_line_item_input::BatchDisassociateResourcesFromCustomLineItemInputBuilder;

/// Fluent builder constructing a request to `BatchDisassociateResourcesFromCustomLineItem`.
///
/// <p> Disassociates a batch of resources from a percentage custom line item. </p>
#[derive(std::clone::Clone, std::fmt::Debug)]
pub struct BatchDisassociateResourcesFromCustomLineItemFluentBuilder {
                handle: std::sync::Arc<crate::client::Handle>,
                inner: crate::operation::batch_disassociate_resources_from_custom_line_item::builders::BatchDisassociateResourcesFromCustomLineItemInputBuilder
            }
impl BatchDisassociateResourcesFromCustomLineItemFluentBuilder {
    /// Creates a new `BatchDisassociateResourcesFromCustomLineItem`.
    pub(crate) fn new(handle: std::sync::Arc<crate::client::Handle>) -> Self {
        Self {
            handle,
            inner: Default::default(),
        }
    }

    /// Consume this builder, creating a customizable operation that can be modified before being
    /// sent. The operation's inner [http::Request] can be modified as well.
                    pub async fn customize(self) -> std::result::Result<
                        crate::client::customize::CustomizableOperation<crate::operation::batch_disassociate_resources_from_custom_line_item::BatchDisassociateResourcesFromCustomLineItem, aws_http::retry::AwsResponseRetryClassifier,>,
                        aws_smithy_http::result::SdkError<crate::operation::batch_disassociate_resources_from_custom_line_item::BatchDisassociateResourcesFromCustomLineItemError>
    >{
        let handle = self.handle.clone();
        let operation = self
            .inner
            .build()
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?
            .make_operation(&handle.conf)
            .await
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?;
        Ok(crate::client::customize::CustomizableOperation { handle, operation })
    }

    /// Sends the request and returns the response.
    ///
    /// If an error occurs, an `SdkError` will be returned with additional details that
    /// can be matched against.
    ///
    /// By default, any retryable failures will be retried twice. Retry behavior
    /// is configurable with the [RetryConfig](aws_smithy_types::retry::RetryConfig), which can be
    /// set when configuring the client.
                    pub async fn send(self) -> std::result::Result<crate::operation::batch_disassociate_resources_from_custom_line_item::BatchDisassociateResourcesFromCustomLineItemOutput, aws_smithy_http::result::SdkError<crate::operation::batch_disassociate_resources_from_custom_line_item::BatchDisassociateResourcesFromCustomLineItemError>>
                     {
        let op = self
            .inner
            .build()
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?
            .make_operation(&self.handle.conf)
            .await
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?;
        self.handle.client.call(op).await
    }
    /// <p> A percentage custom line item ARN to disassociate the resources from. </p>
    pub fn target_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.inner = self.inner.target_arn(input.into());
        self
    }
    /// <p> A percentage custom line item ARN to disassociate the resources from. </p>
    pub fn set_target_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.inner = self.inner.set_target_arn(input);
        self
    }
    /// Appends an item to `ResourceArns`.
    ///
    /// To override the contents of this collection use [`set_resource_arns`](Self::set_resource_arns).
    ///
    /// <p> A list containing the ARNs of resources to be disassociated. </p>
    pub fn resource_arns(mut self, input: impl Into<std::string::String>) -> Self {
        self.inner = self.inner.resource_arns(input.into());
        self
    }
    /// <p> A list containing the ARNs of resources to be disassociated. </p>
    pub fn set_resource_arns(
        mut self,
        input: std::option::Option<std::vec::Vec<std::string::String>>,
    ) -> Self {
        self.inner = self.inner.set_resource_arns(input);
        self
    }
    /// <p> The billing period range in which the custom line item request will be applied. </p>
    pub fn billing_period_range(
        mut self,
        input: crate::types::CustomLineItemBillingPeriodRange,
    ) -> Self {
        self.inner = self.inner.billing_period_range(input);
        self
    }
    /// <p> The billing period range in which the custom line item request will be applied. </p>
    pub fn set_billing_period_range(
        mut self,
        input: std::option::Option<crate::types::CustomLineItemBillingPeriodRange>,
    ) -> Self {
        self.inner = self.inner.set_billing_period_range(input);
        self
    }
}
