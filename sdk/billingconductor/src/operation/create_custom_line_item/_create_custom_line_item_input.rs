// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq)]
pub struct CreateCustomLineItemInput {
    /// <p> The token that is needed to support idempotency. Idempotency isn't currently supported, but will be implemented in a future update. </p>
    pub client_token: ::std::option::Option<::std::string::String>,
    /// <p> The name of the custom line item. </p>
    pub name: ::std::option::Option<::std::string::String>,
    /// <p> The description of the custom line item. This is shown on the Bills page in association with the charge value. </p>
    pub description: ::std::option::Option<::std::string::String>,
    /// <p> The Amazon Resource Name (ARN) that references the billing group where the custom line item applies to. </p>
    pub billing_group_arn: ::std::option::Option<::std::string::String>,
    /// <p> A time range for which the custom line item is effective. </p>
    pub billing_period_range: ::std::option::Option<crate::types::CustomLineItemBillingPeriodRange>,
    /// <p> A map that contains tag keys and tag values that are attached to a custom line item. </p>
    pub tags: ::std::option::Option<::std::collections::HashMap<::std::string::String, ::std::string::String>>,
    /// <p> A <code>CustomLineItemChargeDetails</code> that describes the charge details for a custom line item. </p>
    pub charge_details: ::std::option::Option<crate::types::CustomLineItemChargeDetails>,
}
impl CreateCustomLineItemInput {
    /// <p> The token that is needed to support idempotency. Idempotency isn't currently supported, but will be implemented in a future update. </p>
    pub fn client_token(&self) -> ::std::option::Option<&str> {
        self.client_token.as_deref()
    }
    /// <p> The name of the custom line item. </p>
    pub fn name(&self) -> ::std::option::Option<&str> {
        self.name.as_deref()
    }
    /// <p> The description of the custom line item. This is shown on the Bills page in association with the charge value. </p>
    pub fn description(&self) -> ::std::option::Option<&str> {
        self.description.as_deref()
    }
    /// <p> The Amazon Resource Name (ARN) that references the billing group where the custom line item applies to. </p>
    pub fn billing_group_arn(&self) -> ::std::option::Option<&str> {
        self.billing_group_arn.as_deref()
    }
    /// <p> A time range for which the custom line item is effective. </p>
    pub fn billing_period_range(&self) -> ::std::option::Option<&crate::types::CustomLineItemBillingPeriodRange> {
        self.billing_period_range.as_ref()
    }
    /// <p> A map that contains tag keys and tag values that are attached to a custom line item. </p>
    pub fn tags(&self) -> ::std::option::Option<&::std::collections::HashMap<::std::string::String, ::std::string::String>> {
        self.tags.as_ref()
    }
    /// <p> A <code>CustomLineItemChargeDetails</code> that describes the charge details for a custom line item. </p>
    pub fn charge_details(&self) -> ::std::option::Option<&crate::types::CustomLineItemChargeDetails> {
        self.charge_details.as_ref()
    }
}
impl ::std::fmt::Debug for CreateCustomLineItemInput {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("CreateCustomLineItemInput");
        formatter.field("client_token", &self.client_token);
        formatter.field("name", &"*** Sensitive Data Redacted ***");
        formatter.field("description", &"*** Sensitive Data Redacted ***");
        formatter.field("billing_group_arn", &self.billing_group_arn);
        formatter.field("billing_period_range", &self.billing_period_range);
        formatter.field("tags", &self.tags);
        formatter.field("charge_details", &self.charge_details);
        formatter.finish()
    }
}
impl CreateCustomLineItemInput {
    /// Creates a new builder-style object to manufacture [`CreateCustomLineItemInput`](crate::operation::create_custom_line_item::CreateCustomLineItemInput).
    pub fn builder() -> crate::operation::create_custom_line_item::builders::CreateCustomLineItemInputBuilder {
        crate::operation::create_custom_line_item::builders::CreateCustomLineItemInputBuilder::default()
    }
}

/// A builder for [`CreateCustomLineItemInput`](crate::operation::create_custom_line_item::CreateCustomLineItemInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default)]
pub struct CreateCustomLineItemInputBuilder {
    pub(crate) client_token: ::std::option::Option<::std::string::String>,
    pub(crate) name: ::std::option::Option<::std::string::String>,
    pub(crate) description: ::std::option::Option<::std::string::String>,
    pub(crate) billing_group_arn: ::std::option::Option<::std::string::String>,
    pub(crate) billing_period_range: ::std::option::Option<crate::types::CustomLineItemBillingPeriodRange>,
    pub(crate) tags: ::std::option::Option<::std::collections::HashMap<::std::string::String, ::std::string::String>>,
    pub(crate) charge_details: ::std::option::Option<crate::types::CustomLineItemChargeDetails>,
}
impl CreateCustomLineItemInputBuilder {
    /// <p> The token that is needed to support idempotency. Idempotency isn't currently supported, but will be implemented in a future update. </p>
    pub fn client_token(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.client_token = ::std::option::Option::Some(input.into());
        self
    }
    /// <p> The token that is needed to support idempotency. Idempotency isn't currently supported, but will be implemented in a future update. </p>
    pub fn set_client_token(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.client_token = input;
        self
    }
    /// <p> The token that is needed to support idempotency. Idempotency isn't currently supported, but will be implemented in a future update. </p>
    pub fn get_client_token(&self) -> &::std::option::Option<::std::string::String> {
        &self.client_token
    }
    /// <p> The name of the custom line item. </p>
    /// This field is required.
    pub fn name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p> The name of the custom line item. </p>
    pub fn set_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p> The name of the custom line item. </p>
    pub fn get_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.name
    }
    /// <p> The description of the custom line item. This is shown on the Bills page in association with the charge value. </p>
    /// This field is required.
    pub fn description(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.description = ::std::option::Option::Some(input.into());
        self
    }
    /// <p> The description of the custom line item. This is shown on the Bills page in association with the charge value. </p>
    pub fn set_description(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.description = input;
        self
    }
    /// <p> The description of the custom line item. This is shown on the Bills page in association with the charge value. </p>
    pub fn get_description(&self) -> &::std::option::Option<::std::string::String> {
        &self.description
    }
    /// <p> The Amazon Resource Name (ARN) that references the billing group where the custom line item applies to. </p>
    /// This field is required.
    pub fn billing_group_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.billing_group_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p> The Amazon Resource Name (ARN) that references the billing group where the custom line item applies to. </p>
    pub fn set_billing_group_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.billing_group_arn = input;
        self
    }
    /// <p> The Amazon Resource Name (ARN) that references the billing group where the custom line item applies to. </p>
    pub fn get_billing_group_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.billing_group_arn
    }
    /// <p> A time range for which the custom line item is effective. </p>
    pub fn billing_period_range(mut self, input: crate::types::CustomLineItemBillingPeriodRange) -> Self {
        self.billing_period_range = ::std::option::Option::Some(input);
        self
    }
    /// <p> A time range for which the custom line item is effective. </p>
    pub fn set_billing_period_range(mut self, input: ::std::option::Option<crate::types::CustomLineItemBillingPeriodRange>) -> Self {
        self.billing_period_range = input;
        self
    }
    /// <p> A time range for which the custom line item is effective. </p>
    pub fn get_billing_period_range(&self) -> &::std::option::Option<crate::types::CustomLineItemBillingPeriodRange> {
        &self.billing_period_range
    }
    /// Adds a key-value pair to `tags`.
    ///
    /// To override the contents of this collection use [`set_tags`](Self::set_tags).
    ///
    /// <p> A map that contains tag keys and tag values that are attached to a custom line item. </p>
    pub fn tags(mut self, k: impl ::std::convert::Into<::std::string::String>, v: impl ::std::convert::Into<::std::string::String>) -> Self {
        let mut hash_map = self.tags.unwrap_or_default();
        hash_map.insert(k.into(), v.into());
        self.tags = ::std::option::Option::Some(hash_map);
        self
    }
    /// <p> A map that contains tag keys and tag values that are attached to a custom line item. </p>
    pub fn set_tags(mut self, input: ::std::option::Option<::std::collections::HashMap<::std::string::String, ::std::string::String>>) -> Self {
        self.tags = input;
        self
    }
    /// <p> A map that contains tag keys and tag values that are attached to a custom line item. </p>
    pub fn get_tags(&self) -> &::std::option::Option<::std::collections::HashMap<::std::string::String, ::std::string::String>> {
        &self.tags
    }
    /// <p> A <code>CustomLineItemChargeDetails</code> that describes the charge details for a custom line item. </p>
    /// This field is required.
    pub fn charge_details(mut self, input: crate::types::CustomLineItemChargeDetails) -> Self {
        self.charge_details = ::std::option::Option::Some(input);
        self
    }
    /// <p> A <code>CustomLineItemChargeDetails</code> that describes the charge details for a custom line item. </p>
    pub fn set_charge_details(mut self, input: ::std::option::Option<crate::types::CustomLineItemChargeDetails>) -> Self {
        self.charge_details = input;
        self
    }
    /// <p> A <code>CustomLineItemChargeDetails</code> that describes the charge details for a custom line item. </p>
    pub fn get_charge_details(&self) -> &::std::option::Option<crate::types::CustomLineItemChargeDetails> {
        &self.charge_details
    }
    /// Consumes the builder and constructs a [`CreateCustomLineItemInput`](crate::operation::create_custom_line_item::CreateCustomLineItemInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::create_custom_line_item::CreateCustomLineItemInput, ::aws_smithy_types::error::operation::BuildError>
    {
        ::std::result::Result::Ok(crate::operation::create_custom_line_item::CreateCustomLineItemInput {
            client_token: self.client_token,
            name: self.name,
            description: self.description,
            billing_group_arn: self.billing_group_arn,
            billing_period_range: self.billing_period_range,
            tags: self.tags,
            charge_details: self.charge_details,
        })
    }
}
impl ::std::fmt::Debug for CreateCustomLineItemInputBuilder {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("CreateCustomLineItemInputBuilder");
        formatter.field("client_token", &self.client_token);
        formatter.field("name", &"*** Sensitive Data Redacted ***");
        formatter.field("description", &"*** Sensitive Data Redacted ***");
        formatter.field("billing_group_arn", &self.billing_group_arn);
        formatter.field("billing_period_range", &self.billing_period_range);
        formatter.field("tags", &self.tags);
        formatter.field("charge_details", &self.charge_details);
        formatter.finish()
    }
}
