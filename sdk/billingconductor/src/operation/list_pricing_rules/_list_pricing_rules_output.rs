// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ListPricingRulesOutput {
    /// <p> The billing period for which the described pricing rules are applicable. </p>
    #[doc(hidden)]
    pub billing_period: std::option::Option<std::string::String>,
    /// <p> A list containing the described pricing rules. </p>
    #[doc(hidden)]
    pub pricing_rules: std::option::Option<std::vec::Vec<crate::types::PricingRuleListElement>>,
    /// <p> The pagination token that's used on subsequent calls to get pricing rules. </p>
    #[doc(hidden)]
    pub next_token: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl ListPricingRulesOutput {
    /// <p> The billing period for which the described pricing rules are applicable. </p>
    pub fn billing_period(&self) -> std::option::Option<&str> {
        self.billing_period.as_deref()
    }
    /// <p> A list containing the described pricing rules. </p>
    pub fn pricing_rules(&self) -> std::option::Option<&[crate::types::PricingRuleListElement]> {
        self.pricing_rules.as_deref()
    }
    /// <p> The pagination token that's used on subsequent calls to get pricing rules. </p>
    pub fn next_token(&self) -> std::option::Option<&str> {
        self.next_token.as_deref()
    }
}
impl aws_http::request_id::RequestId for ListPricingRulesOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl ListPricingRulesOutput {
    /// Creates a new builder-style object to manufacture [`ListPricingRulesOutput`](crate::operation::list_pricing_rules::ListPricingRulesOutput).
    pub fn builder() -> crate::operation::list_pricing_rules::builders::ListPricingRulesOutputBuilder
    {
        crate::operation::list_pricing_rules::builders::ListPricingRulesOutputBuilder::default()
    }
}

/// A builder for [`ListPricingRulesOutput`](crate::operation::list_pricing_rules::ListPricingRulesOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ListPricingRulesOutputBuilder {
    pub(crate) billing_period: std::option::Option<std::string::String>,
    pub(crate) pricing_rules:
        std::option::Option<std::vec::Vec<crate::types::PricingRuleListElement>>,
    pub(crate) next_token: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl ListPricingRulesOutputBuilder {
    /// <p> The billing period for which the described pricing rules are applicable. </p>
    pub fn billing_period(mut self, input: impl Into<std::string::String>) -> Self {
        self.billing_period = Some(input.into());
        self
    }
    /// <p> The billing period for which the described pricing rules are applicable. </p>
    pub fn set_billing_period(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.billing_period = input;
        self
    }
    /// Appends an item to `pricing_rules`.
    ///
    /// To override the contents of this collection use [`set_pricing_rules`](Self::set_pricing_rules).
    ///
    /// <p> A list containing the described pricing rules. </p>
    pub fn pricing_rules(mut self, input: crate::types::PricingRuleListElement) -> Self {
        let mut v = self.pricing_rules.unwrap_or_default();
        v.push(input);
        self.pricing_rules = Some(v);
        self
    }
    /// <p> A list containing the described pricing rules. </p>
    pub fn set_pricing_rules(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::PricingRuleListElement>>,
    ) -> Self {
        self.pricing_rules = input;
        self
    }
    /// <p> The pagination token that's used on subsequent calls to get pricing rules. </p>
    pub fn next_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.next_token = Some(input.into());
        self
    }
    /// <p> The pagination token that's used on subsequent calls to get pricing rules. </p>
    pub fn set_next_token(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`ListPricingRulesOutput`](crate::operation::list_pricing_rules::ListPricingRulesOutput).
    pub fn build(self) -> crate::operation::list_pricing_rules::ListPricingRulesOutput {
        crate::operation::list_pricing_rules::ListPricingRulesOutput {
            billing_period: self.billing_period,
            pricing_rules: self.pricing_rules,
            next_token: self.next_token,
            _request_id: self._request_id,
        }
    }
}
