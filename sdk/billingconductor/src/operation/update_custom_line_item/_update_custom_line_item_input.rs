// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq)]
pub struct UpdateCustomLineItemInput {
    /// <p> The ARN of the custom line item to be updated. </p>
    #[doc(hidden)]
    pub arn: std::option::Option<std::string::String>,
    /// <p> The new name for the custom line item. </p>
    #[doc(hidden)]
    pub name: std::option::Option<std::string::String>,
    /// <p> The new line item description of the custom line item. </p>
    #[doc(hidden)]
    pub description: std::option::Option<std::string::String>,
    /// <p> A <code>ListCustomLineItemChargeDetails</code> containing the new charge details for the custom line item. </p>
    #[doc(hidden)]
    pub charge_details: std::option::Option<crate::types::UpdateCustomLineItemChargeDetails>,
    /// <p> The billing period range in which the custom line item request will be applied. </p>
    #[doc(hidden)]
    pub billing_period_range: std::option::Option<crate::types::CustomLineItemBillingPeriodRange>,
}
impl UpdateCustomLineItemInput {
    /// <p> The ARN of the custom line item to be updated. </p>
    pub fn arn(&self) -> std::option::Option<&str> {
        self.arn.as_deref()
    }
    /// <p> The new name for the custom line item. </p>
    pub fn name(&self) -> std::option::Option<&str> {
        self.name.as_deref()
    }
    /// <p> The new line item description of the custom line item. </p>
    pub fn description(&self) -> std::option::Option<&str> {
        self.description.as_deref()
    }
    /// <p> A <code>ListCustomLineItemChargeDetails</code> containing the new charge details for the custom line item. </p>
    pub fn charge_details(
        &self,
    ) -> std::option::Option<&crate::types::UpdateCustomLineItemChargeDetails> {
        self.charge_details.as_ref()
    }
    /// <p> The billing period range in which the custom line item request will be applied. </p>
    pub fn billing_period_range(
        &self,
    ) -> std::option::Option<&crate::types::CustomLineItemBillingPeriodRange> {
        self.billing_period_range.as_ref()
    }
}
impl std::fmt::Debug for UpdateCustomLineItemInput {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        let mut formatter = f.debug_struct("UpdateCustomLineItemInput");
        formatter.field("arn", &self.arn);
        formatter.field("name", &"*** Sensitive Data Redacted ***");
        formatter.field("description", &"*** Sensitive Data Redacted ***");
        formatter.field("charge_details", &self.charge_details);
        formatter.field("billing_period_range", &self.billing_period_range);
        formatter.finish()
    }
}
impl UpdateCustomLineItemInput {
    /// Creates a new builder-style object to manufacture [`UpdateCustomLineItemInput`](crate::operation::update_custom_line_item::UpdateCustomLineItemInput).
    pub fn builder(
    ) -> crate::operation::update_custom_line_item::builders::UpdateCustomLineItemInputBuilder {
        crate::operation::update_custom_line_item::builders::UpdateCustomLineItemInputBuilder::default()
    }
}

/// A builder for [`UpdateCustomLineItemInput`](crate::operation::update_custom_line_item::UpdateCustomLineItemInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default)]
pub struct UpdateCustomLineItemInputBuilder {
    pub(crate) arn: std::option::Option<std::string::String>,
    pub(crate) name: std::option::Option<std::string::String>,
    pub(crate) description: std::option::Option<std::string::String>,
    pub(crate) charge_details: std::option::Option<crate::types::UpdateCustomLineItemChargeDetails>,
    pub(crate) billing_period_range:
        std::option::Option<crate::types::CustomLineItemBillingPeriodRange>,
}
impl UpdateCustomLineItemInputBuilder {
    /// <p> The ARN of the custom line item to be updated. </p>
    pub fn arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.arn = Some(input.into());
        self
    }
    /// <p> The ARN of the custom line item to be updated. </p>
    pub fn set_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.arn = input;
        self
    }
    /// <p> The new name for the custom line item. </p>
    pub fn name(mut self, input: impl Into<std::string::String>) -> Self {
        self.name = Some(input.into());
        self
    }
    /// <p> The new name for the custom line item. </p>
    pub fn set_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p> The new line item description of the custom line item. </p>
    pub fn description(mut self, input: impl Into<std::string::String>) -> Self {
        self.description = Some(input.into());
        self
    }
    /// <p> The new line item description of the custom line item. </p>
    pub fn set_description(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.description = input;
        self
    }
    /// <p> A <code>ListCustomLineItemChargeDetails</code> containing the new charge details for the custom line item. </p>
    pub fn charge_details(
        mut self,
        input: crate::types::UpdateCustomLineItemChargeDetails,
    ) -> Self {
        self.charge_details = Some(input);
        self
    }
    /// <p> A <code>ListCustomLineItemChargeDetails</code> containing the new charge details for the custom line item. </p>
    pub fn set_charge_details(
        mut self,
        input: std::option::Option<crate::types::UpdateCustomLineItemChargeDetails>,
    ) -> Self {
        self.charge_details = input;
        self
    }
    /// <p> The billing period range in which the custom line item request will be applied. </p>
    pub fn billing_period_range(
        mut self,
        input: crate::types::CustomLineItemBillingPeriodRange,
    ) -> Self {
        self.billing_period_range = Some(input);
        self
    }
    /// <p> The billing period range in which the custom line item request will be applied. </p>
    pub fn set_billing_period_range(
        mut self,
        input: std::option::Option<crate::types::CustomLineItemBillingPeriodRange>,
    ) -> Self {
        self.billing_period_range = input;
        self
    }
    /// Consumes the builder and constructs a [`UpdateCustomLineItemInput`](crate::operation::update_custom_line_item::UpdateCustomLineItemInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::update_custom_line_item::UpdateCustomLineItemInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::update_custom_line_item::UpdateCustomLineItemInput {
                arn: self.arn,
                name: self.name,
                description: self.description,
                charge_details: self.charge_details,
                billing_period_range: self.billing_period_range,
            },
        )
    }
}
impl std::fmt::Debug for UpdateCustomLineItemInputBuilder {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        let mut formatter = f.debug_struct("UpdateCustomLineItemInputBuilder");
        formatter.field("arn", &self.arn);
        formatter.field("name", &"*** Sensitive Data Redacted ***");
        formatter.field("description", &"*** Sensitive Data Redacted ***");
        formatter.field("charge_details", &self.charge_details);
        formatter.field("billing_period_range", &self.billing_period_range);
        formatter.finish()
    }
}
