// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ListPricingPlansAssociatedWithPricingRuleOutput {
    /// <p> The pricing plan billing period for which associations will be listed. </p>
    #[doc(hidden)]
    pub billing_period: std::option::Option<std::string::String>,
    /// <p> The pricing rule Amazon Resource Name (ARN) for which associations will be listed. </p>
    #[doc(hidden)]
    pub pricing_rule_arn: std::option::Option<std::string::String>,
    /// <p> The list containing pricing plans that are associated with the requested pricing rule. </p>
    #[doc(hidden)]
    pub pricing_plan_arns: std::option::Option<std::vec::Vec<std::string::String>>,
    /// <p> The pagination token to be used on subsequent calls. </p>
    #[doc(hidden)]
    pub next_token: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl ListPricingPlansAssociatedWithPricingRuleOutput {
    /// <p> The pricing plan billing period for which associations will be listed. </p>
    pub fn billing_period(&self) -> std::option::Option<&str> {
        self.billing_period.as_deref()
    }
    /// <p> The pricing rule Amazon Resource Name (ARN) for which associations will be listed. </p>
    pub fn pricing_rule_arn(&self) -> std::option::Option<&str> {
        self.pricing_rule_arn.as_deref()
    }
    /// <p> The list containing pricing plans that are associated with the requested pricing rule. </p>
    pub fn pricing_plan_arns(&self) -> std::option::Option<&[std::string::String]> {
        self.pricing_plan_arns.as_deref()
    }
    /// <p> The pagination token to be used on subsequent calls. </p>
    pub fn next_token(&self) -> std::option::Option<&str> {
        self.next_token.as_deref()
    }
}
impl aws_http::request_id::RequestId for ListPricingPlansAssociatedWithPricingRuleOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl ListPricingPlansAssociatedWithPricingRuleOutput {
    /// Creates a new builder-style object to manufacture [`ListPricingPlansAssociatedWithPricingRuleOutput`](crate::operation::list_pricing_plans_associated_with_pricing_rule::ListPricingPlansAssociatedWithPricingRuleOutput).
    pub fn builder() -> crate::operation::list_pricing_plans_associated_with_pricing_rule::builders::ListPricingPlansAssociatedWithPricingRuleOutputBuilder{
        crate::operation::list_pricing_plans_associated_with_pricing_rule::builders::ListPricingPlansAssociatedWithPricingRuleOutputBuilder::default()
    }
}

/// A builder for [`ListPricingPlansAssociatedWithPricingRuleOutput`](crate::operation::list_pricing_plans_associated_with_pricing_rule::ListPricingPlansAssociatedWithPricingRuleOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ListPricingPlansAssociatedWithPricingRuleOutputBuilder {
    pub(crate) billing_period: std::option::Option<std::string::String>,
    pub(crate) pricing_rule_arn: std::option::Option<std::string::String>,
    pub(crate) pricing_plan_arns: std::option::Option<std::vec::Vec<std::string::String>>,
    pub(crate) next_token: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl ListPricingPlansAssociatedWithPricingRuleOutputBuilder {
    /// <p> The pricing plan billing period for which associations will be listed. </p>
    pub fn billing_period(mut self, input: impl Into<std::string::String>) -> Self {
        self.billing_period = Some(input.into());
        self
    }
    /// <p> The pricing plan billing period for which associations will be listed. </p>
    pub fn set_billing_period(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.billing_period = input;
        self
    }
    /// <p> The pricing rule Amazon Resource Name (ARN) for which associations will be listed. </p>
    pub fn pricing_rule_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.pricing_rule_arn = Some(input.into());
        self
    }
    /// <p> The pricing rule Amazon Resource Name (ARN) for which associations will be listed. </p>
    pub fn set_pricing_rule_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.pricing_rule_arn = input;
        self
    }
    /// Appends an item to `pricing_plan_arns`.
    ///
    /// To override the contents of this collection use [`set_pricing_plan_arns`](Self::set_pricing_plan_arns).
    ///
    /// <p> The list containing pricing plans that are associated with the requested pricing rule. </p>
    pub fn pricing_plan_arns(mut self, input: impl Into<std::string::String>) -> Self {
        let mut v = self.pricing_plan_arns.unwrap_or_default();
        v.push(input.into());
        self.pricing_plan_arns = Some(v);
        self
    }
    /// <p> The list containing pricing plans that are associated with the requested pricing rule. </p>
    pub fn set_pricing_plan_arns(
        mut self,
        input: std::option::Option<std::vec::Vec<std::string::String>>,
    ) -> Self {
        self.pricing_plan_arns = input;
        self
    }
    /// <p> The pagination token to be used on subsequent calls. </p>
    pub fn next_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.next_token = Some(input.into());
        self
    }
    /// <p> The pagination token to be used on subsequent calls. </p>
    pub fn set_next_token(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`ListPricingPlansAssociatedWithPricingRuleOutput`](crate::operation::list_pricing_plans_associated_with_pricing_rule::ListPricingPlansAssociatedWithPricingRuleOutput).
    pub fn build(self) -> crate::operation::list_pricing_plans_associated_with_pricing_rule::ListPricingPlansAssociatedWithPricingRuleOutput{
        crate::operation::list_pricing_plans_associated_with_pricing_rule::ListPricingPlansAssociatedWithPricingRuleOutput {
            billing_period: self.billing_period
            ,
            pricing_rule_arn: self.pricing_rule_arn
            ,
            pricing_plan_arns: self.pricing_plan_arns
            ,
            next_token: self.next_token
            ,
            _request_id: self._request_id,
        }
    }
}
