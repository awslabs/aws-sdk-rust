// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ListCustomLineItemVersionsInput {
    /// <p>The Amazon Resource Name (ARN) for the custom line item.</p>
    pub arn: ::std::option::Option<::std::string::String>,
    /// <p>The maximum number of custom line item versions to retrieve.</p>
    pub max_results: ::std::option::Option<i32>,
    /// <p>The pagination token that's used on subsequent calls to retrieve custom line item versions.</p>
    pub next_token: ::std::option::Option<::std::string::String>,
    /// <p>A <code>ListCustomLineItemVersionsFilter</code> that specifies the billing period range in which the custom line item versions are applied.</p>
    pub filters: ::std::option::Option<crate::types::ListCustomLineItemVersionsFilter>,
}
impl ListCustomLineItemVersionsInput {
    /// <p>The Amazon Resource Name (ARN) for the custom line item.</p>
    pub fn arn(&self) -> ::std::option::Option<&str> {
        self.arn.as_deref()
    }
    /// <p>The maximum number of custom line item versions to retrieve.</p>
    pub fn max_results(&self) -> ::std::option::Option<i32> {
        self.max_results
    }
    /// <p>The pagination token that's used on subsequent calls to retrieve custom line item versions.</p>
    pub fn next_token(&self) -> ::std::option::Option<&str> {
        self.next_token.as_deref()
    }
    /// <p>A <code>ListCustomLineItemVersionsFilter</code> that specifies the billing period range in which the custom line item versions are applied.</p>
    pub fn filters(&self) -> ::std::option::Option<&crate::types::ListCustomLineItemVersionsFilter> {
        self.filters.as_ref()
    }
}
impl ListCustomLineItemVersionsInput {
    /// Creates a new builder-style object to manufacture [`ListCustomLineItemVersionsInput`](crate::operation::list_custom_line_item_versions::ListCustomLineItemVersionsInput).
    pub fn builder() -> crate::operation::list_custom_line_item_versions::builders::ListCustomLineItemVersionsInputBuilder {
        crate::operation::list_custom_line_item_versions::builders::ListCustomLineItemVersionsInputBuilder::default()
    }
}

/// A builder for [`ListCustomLineItemVersionsInput`](crate::operation::list_custom_line_item_versions::ListCustomLineItemVersionsInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ListCustomLineItemVersionsInputBuilder {
    pub(crate) arn: ::std::option::Option<::std::string::String>,
    pub(crate) max_results: ::std::option::Option<i32>,
    pub(crate) next_token: ::std::option::Option<::std::string::String>,
    pub(crate) filters: ::std::option::Option<crate::types::ListCustomLineItemVersionsFilter>,
}
impl ListCustomLineItemVersionsInputBuilder {
    /// <p>The Amazon Resource Name (ARN) for the custom line item.</p>
    /// This field is required.
    pub fn arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) for the custom line item.</p>
    pub fn set_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) for the custom line item.</p>
    pub fn get_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.arn
    }
    /// <p>The maximum number of custom line item versions to retrieve.</p>
    pub fn max_results(mut self, input: i32) -> Self {
        self.max_results = ::std::option::Option::Some(input);
        self
    }
    /// <p>The maximum number of custom line item versions to retrieve.</p>
    pub fn set_max_results(mut self, input: ::std::option::Option<i32>) -> Self {
        self.max_results = input;
        self
    }
    /// <p>The maximum number of custom line item versions to retrieve.</p>
    pub fn get_max_results(&self) -> &::std::option::Option<i32> {
        &self.max_results
    }
    /// <p>The pagination token that's used on subsequent calls to retrieve custom line item versions.</p>
    pub fn next_token(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.next_token = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The pagination token that's used on subsequent calls to retrieve custom line item versions.</p>
    pub fn set_next_token(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// <p>The pagination token that's used on subsequent calls to retrieve custom line item versions.</p>
    pub fn get_next_token(&self) -> &::std::option::Option<::std::string::String> {
        &self.next_token
    }
    /// <p>A <code>ListCustomLineItemVersionsFilter</code> that specifies the billing period range in which the custom line item versions are applied.</p>
    pub fn filters(mut self, input: crate::types::ListCustomLineItemVersionsFilter) -> Self {
        self.filters = ::std::option::Option::Some(input);
        self
    }
    /// <p>A <code>ListCustomLineItemVersionsFilter</code> that specifies the billing period range in which the custom line item versions are applied.</p>
    pub fn set_filters(mut self, input: ::std::option::Option<crate::types::ListCustomLineItemVersionsFilter>) -> Self {
        self.filters = input;
        self
    }
    /// <p>A <code>ListCustomLineItemVersionsFilter</code> that specifies the billing period range in which the custom line item versions are applied.</p>
    pub fn get_filters(&self) -> &::std::option::Option<crate::types::ListCustomLineItemVersionsFilter> {
        &self.filters
    }
    /// Consumes the builder and constructs a [`ListCustomLineItemVersionsInput`](crate::operation::list_custom_line_item_versions::ListCustomLineItemVersionsInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::list_custom_line_item_versions::ListCustomLineItemVersionsInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::list_custom_line_item_versions::ListCustomLineItemVersionsInput {
            arn: self.arn,
            max_results: self.max_results,
            next_token: self.next_token,
            filters: self.filters,
        })
    }
}
