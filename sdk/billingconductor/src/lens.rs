// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) fn reflens_list_account_associations_output_next_token(
    input: &crate::operation::list_account_associations::ListAccountAssociationsOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_billing_group_cost_reports_output_next_token(
    input: &crate::operation::list_billing_group_cost_reports::ListBillingGroupCostReportsOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_billing_groups_output_next_token(
    input: &crate::operation::list_billing_groups::ListBillingGroupsOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_custom_line_item_versions_output_next_token(
    input: &crate::operation::list_custom_line_item_versions::ListCustomLineItemVersionsOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_custom_line_items_output_next_token(
    input: &crate::operation::list_custom_line_items::ListCustomLineItemsOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_pricing_plans_output_next_token(
    input: &crate::operation::list_pricing_plans::ListPricingPlansOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_pricing_plans_associated_with_pricing_rule_output_next_token(
    input: &crate::operation::list_pricing_plans_associated_with_pricing_rule::ListPricingPlansAssociatedWithPricingRuleOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_pricing_rules_output_next_token(
    input: &crate::operation::list_pricing_rules::ListPricingRulesOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_pricing_rules_associated_to_pricing_plan_output_next_token(
    input: &crate::operation::list_pricing_rules_associated_to_pricing_plan::ListPricingRulesAssociatedToPricingPlanOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_resources_associated_to_custom_line_item_output_next_token(
    input: &crate::operation::list_resources_associated_to_custom_line_item::ListResourcesAssociatedToCustomLineItemOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn lens_list_account_associations_output_linked_accounts(
    input: crate::operation::list_account_associations::ListAccountAssociationsOutput,
) -> std::option::Option<std::vec::Vec<crate::types::AccountAssociationsListElement>> {
    let input = match input.linked_accounts {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn lens_list_billing_group_cost_reports_output_billing_group_cost_reports(
    input: crate::operation::list_billing_group_cost_reports::ListBillingGroupCostReportsOutput,
) -> std::option::Option<std::vec::Vec<crate::types::BillingGroupCostReportElement>> {
    let input = match input.billing_group_cost_reports {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn lens_list_billing_groups_output_billing_groups(
    input: crate::operation::list_billing_groups::ListBillingGroupsOutput,
) -> std::option::Option<std::vec::Vec<crate::types::BillingGroupListElement>> {
    let input = match input.billing_groups {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn lens_list_custom_line_item_versions_output_custom_line_item_versions(
    input: crate::operation::list_custom_line_item_versions::ListCustomLineItemVersionsOutput,
) -> std::option::Option<std::vec::Vec<crate::types::CustomLineItemVersionListElement>> {
    let input = match input.custom_line_item_versions {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn lens_list_custom_line_items_output_custom_line_items(
    input: crate::operation::list_custom_line_items::ListCustomLineItemsOutput,
) -> std::option::Option<std::vec::Vec<crate::types::CustomLineItemListElement>> {
    let input = match input.custom_line_items {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn lens_list_pricing_plans_output_pricing_plans(
    input: crate::operation::list_pricing_plans::ListPricingPlansOutput,
) -> std::option::Option<std::vec::Vec<crate::types::PricingPlanListElement>> {
    let input = match input.pricing_plans {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn lens_list_pricing_plans_associated_with_pricing_rule_output_pricing_plan_arns(
    input: crate::operation::list_pricing_plans_associated_with_pricing_rule::ListPricingPlansAssociatedWithPricingRuleOutput,
) -> std::option::Option<std::vec::Vec<std::string::String>> {
    let input = match input.pricing_plan_arns {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn lens_list_pricing_rules_output_pricing_rules(
    input: crate::operation::list_pricing_rules::ListPricingRulesOutput,
) -> std::option::Option<std::vec::Vec<crate::types::PricingRuleListElement>> {
    let input = match input.pricing_rules {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn lens_list_pricing_rules_associated_to_pricing_plan_output_pricing_rule_arns(
    input: crate::operation::list_pricing_rules_associated_to_pricing_plan::ListPricingRulesAssociatedToPricingPlanOutput,
) -> std::option::Option<std::vec::Vec<std::string::String>> {
    let input = match input.pricing_rule_arns {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn lens_list_resources_associated_to_custom_line_item_output_associated_resources(
    input: crate::operation::list_resources_associated_to_custom_line_item::ListResourcesAssociatedToCustomLineItemOutput,
) -> std::option::Option<
    std::vec::Vec<crate::types::ListResourcesAssociatedToCustomLineItemResponseElement>,
> {
    let input = match input.associated_resources {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}
