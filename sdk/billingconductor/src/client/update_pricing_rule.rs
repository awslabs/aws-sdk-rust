// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdatePricingRule`](crate::operation::update_pricing_rule::builders::UpdatePricingRuleFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`arn(impl Into<String>)`](crate::operation::update_pricing_rule::builders::UpdatePricingRuleFluentBuilder::arn) / [`set_arn(Option<String>)`](crate::operation::update_pricing_rule::builders::UpdatePricingRuleFluentBuilder::set_arn): <p> The Amazon Resource Name (ARN) of the pricing rule to update. </p>
    ///   - [`name(impl Into<String>)`](crate::operation::update_pricing_rule::builders::UpdatePricingRuleFluentBuilder::name) / [`set_name(Option<String>)`](crate::operation::update_pricing_rule::builders::UpdatePricingRuleFluentBuilder::set_name): <p> The new name of the pricing rule. The name must be unique to each pricing rule. </p>
    ///   - [`description(impl Into<String>)`](crate::operation::update_pricing_rule::builders::UpdatePricingRuleFluentBuilder::description) / [`set_description(Option<String>)`](crate::operation::update_pricing_rule::builders::UpdatePricingRuleFluentBuilder::set_description): <p> The new description for the pricing rule. </p>
    ///   - [`r#type(PricingRuleType)`](crate::operation::update_pricing_rule::builders::UpdatePricingRuleFluentBuilder::type) / [`set_type(Option<PricingRuleType>)`](crate::operation::update_pricing_rule::builders::UpdatePricingRuleFluentBuilder::set_type): <p> The new pricing rule type. </p>
    ///   - [`modifier_percentage(f64)`](crate::operation::update_pricing_rule::builders::UpdatePricingRuleFluentBuilder::modifier_percentage) / [`set_modifier_percentage(Option<f64>)`](crate::operation::update_pricing_rule::builders::UpdatePricingRuleFluentBuilder::set_modifier_percentage): <p> The new modifier to show pricing plan rates as a percentage. </p>
    ///   - [`tiering(UpdateTieringInput)`](crate::operation::update_pricing_rule::builders::UpdatePricingRuleFluentBuilder::tiering) / [`set_tiering(Option<UpdateTieringInput>)`](crate::operation::update_pricing_rule::builders::UpdatePricingRuleFluentBuilder::set_tiering): <p> The set of tiering configurations for the pricing rule. </p>
    /// - On success, responds with [`UpdatePricingRuleOutput`](crate::operation::update_pricing_rule::UpdatePricingRuleOutput) with field(s):
    ///   - [`arn(Option<String>)`](crate::operation::update_pricing_rule::UpdatePricingRuleOutput::arn): <p> The Amazon Resource Name (ARN) of the successfully updated pricing rule. </p>
    ///   - [`name(Option<String>)`](crate::operation::update_pricing_rule::UpdatePricingRuleOutput::name): <p> The new name of the pricing rule. The name must be unique to each pricing rule. </p>
    ///   - [`description(Option<String>)`](crate::operation::update_pricing_rule::UpdatePricingRuleOutput::description): <p> The new description for the pricing rule. </p>
    ///   - [`scope(Option<PricingRuleScope>)`](crate::operation::update_pricing_rule::UpdatePricingRuleOutput::scope): <p> The scope of pricing rule that indicates if it's globally applicable, or it's service-specific. </p>
    ///   - [`r#type(Option<PricingRuleType>)`](crate::operation::update_pricing_rule::UpdatePricingRuleOutput::type): <p> The new pricing rule type. </p>
    ///   - [`modifier_percentage(Option<f64>)`](crate::operation::update_pricing_rule::UpdatePricingRuleOutput::modifier_percentage): <p> The new modifier to show pricing plan rates as a percentage. </p>
    ///   - [`service(Option<String>)`](crate::operation::update_pricing_rule::UpdatePricingRuleOutput::service): <p> If the <code>Scope</code> attribute is set to <code>SERVICE</code>, the attribute indicates which service the <code>PricingRule</code> is applicable for. </p>
    ///   - [`associated_pricing_plan_count(i64)`](crate::operation::update_pricing_rule::UpdatePricingRuleOutput::associated_pricing_plan_count): <p> The pricing plans count that this pricing rule is associated with. </p>
    ///   - [`last_modified_time(i64)`](crate::operation::update_pricing_rule::UpdatePricingRuleOutput::last_modified_time): <p> The most recent time the pricing rule was modified. </p>
    ///   - [`billing_entity(Option<String>)`](crate::operation::update_pricing_rule::UpdatePricingRuleOutput::billing_entity): <p> The seller of services provided by Amazon Web Services, their affiliates, or third-party providers selling services via Amazon Web Services Marketplace. </p>
    ///   - [`tiering(Option<UpdateTieringInput>)`](crate::operation::update_pricing_rule::UpdatePricingRuleOutput::tiering): <p> The set of tiering configurations for the pricing rule. </p>
    ///   - [`usage_type(Option<String>)`](crate::operation::update_pricing_rule::UpdatePricingRuleOutput::usage_type): <p>Usage type is the unit that each service uses to measure the usage of a specific type of resource.</p>  <p>If the <code>Scope</code> attribute is set to <code>SKU</code>, this attribute indicates which usage type the <code>PricingRule</code> is modifying. For example, <code>USW2-BoxUsage:m2.2xlarge</code> describes an <code>M2 High Memory Double Extra Large</code> instance in the US West (Oregon) Region. </p>
    ///   - [`operation(Option<String>)`](crate::operation::update_pricing_rule::UpdatePricingRuleOutput::operation): <p>Operation refers to the specific Amazon Web Services covered by this line item. This describes the specific usage of the line item.</p>  <p> If the <code>Scope</code> attribute is set to <code>SKU</code>, this attribute indicates which operation the <code>PricingRule</code> is modifying. For example, a value of <code>RunInstances:0202</code> indicates the operation of running an Amazon EC2 instance.</p>
    /// - On failure, responds with [`SdkError<UpdatePricingRuleError>`](crate::operation::update_pricing_rule::UpdatePricingRuleError)
    pub fn update_pricing_rule(
        &self,
    ) -> crate::operation::update_pricing_rule::builders::UpdatePricingRuleFluentBuilder {
        crate::operation::update_pricing_rule::builders::UpdatePricingRuleFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
