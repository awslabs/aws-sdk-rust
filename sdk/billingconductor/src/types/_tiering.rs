// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p> The set of tiering configurations for the pricing rule. </p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct Tiering {
    /// <p> The possible Amazon Web Services Free Tier configurations. </p>
    #[doc(hidden)]
    pub free_tier: std::option::Option<crate::types::FreeTierConfig>,
}
impl Tiering {
    /// <p> The possible Amazon Web Services Free Tier configurations. </p>
    pub fn free_tier(&self) -> std::option::Option<&crate::types::FreeTierConfig> {
        self.free_tier.as_ref()
    }
}
impl Tiering {
    /// Creates a new builder-style object to manufacture [`Tiering`](crate::types::Tiering).
    pub fn builder() -> crate::types::builders::TieringBuilder {
        crate::types::builders::TieringBuilder::default()
    }
}

/// A builder for [`Tiering`](crate::types::Tiering).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct TieringBuilder {
    pub(crate) free_tier: std::option::Option<crate::types::FreeTierConfig>,
}
impl TieringBuilder {
    /// <p> The possible Amazon Web Services Free Tier configurations. </p>
    pub fn free_tier(mut self, input: crate::types::FreeTierConfig) -> Self {
        self.free_tier = Some(input);
        self
    }
    /// <p> The possible Amazon Web Services Free Tier configurations. </p>
    pub fn set_free_tier(
        mut self,
        input: std::option::Option<crate::types::FreeTierConfig>,
    ) -> Self {
        self.free_tier = input;
        self
    }
    /// Consumes the builder and constructs a [`Tiering`](crate::types::Tiering).
    pub fn build(self) -> crate::types::Tiering {
        crate::types::Tiering {
            free_tier: self.free_tier,
        }
    }
}
