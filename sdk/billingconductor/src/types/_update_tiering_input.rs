// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p> The set of tiering configurations for the pricing rule. </p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct UpdateTieringInput {
    /// <p> The possible Amazon Web Services Free Tier configurations. </p>
    #[doc(hidden)]
    pub free_tier: std::option::Option<crate::types::UpdateFreeTierConfig>,
}
impl UpdateTieringInput {
    /// <p> The possible Amazon Web Services Free Tier configurations. </p>
    pub fn free_tier(&self) -> std::option::Option<&crate::types::UpdateFreeTierConfig> {
        self.free_tier.as_ref()
    }
}
impl UpdateTieringInput {
    /// Creates a new builder-style object to manufacture [`UpdateTieringInput`](crate::types::UpdateTieringInput).
    pub fn builder() -> crate::types::builders::UpdateTieringInputBuilder {
        crate::types::builders::UpdateTieringInputBuilder::default()
    }
}

/// A builder for [`UpdateTieringInput`](crate::types::UpdateTieringInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct UpdateTieringInputBuilder {
    pub(crate) free_tier: std::option::Option<crate::types::UpdateFreeTierConfig>,
}
impl UpdateTieringInputBuilder {
    /// <p> The possible Amazon Web Services Free Tier configurations. </p>
    pub fn free_tier(mut self, input: crate::types::UpdateFreeTierConfig) -> Self {
        self.free_tier = Some(input);
        self
    }
    /// <p> The possible Amazon Web Services Free Tier configurations. </p>
    pub fn set_free_tier(
        mut self,
        input: std::option::Option<crate::types::UpdateFreeTierConfig>,
    ) -> Self {
        self.free_tier = input;
        self
    }
    /// Consumes the builder and constructs a [`UpdateTieringInput`](crate::types::UpdateTieringInput).
    pub fn build(self) -> crate::types::UpdateTieringInput {
        crate::types::UpdateTieringInput {
            free_tier: self.free_tier,
        }
    }
}
