// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A representation of a custom line item.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq)]
pub struct CustomLineItemListElement {
    /// <p>The Amazon Resource Names (ARNs) for custom line items.</p>
    pub arn: ::std::option::Option<::std::string::String>,
    /// <p>The custom line item's name.</p>
    pub name: ::std::option::Option<::std::string::String>,
    /// <p>A <code>ListCustomLineItemChargeDetails</code> that describes the charge details of a custom line item.</p>
    pub charge_details: ::std::option::Option<crate::types::ListCustomLineItemChargeDetails>,
    /// <p>The custom line item's charge value currency. Only one of the valid values can be used.</p>
    pub currency_code: ::std::option::Option<crate::types::CurrencyCode>,
    /// <p>The custom line item's description. This is shown on the Bills page in association with the charge value.</p>
    pub description: ::std::option::Option<::std::string::String>,
    /// <p>The product code that's associated with the custom line item.</p>
    pub product_code: ::std::option::Option<::std::string::String>,
    /// <p>The Amazon Resource Name (ARN) that references the billing group where the custom line item applies to.</p>
    pub billing_group_arn: ::std::option::Option<::std::string::String>,
    /// <p>The time created.</p>
    pub creation_time: i64,
    /// <p>The most recent time when the custom line item was modified.</p>
    pub last_modified_time: i64,
    /// <p>The number of resources that are associated to the custom line item.</p>
    pub association_size: i64,
    /// <p>The Amazon Web Services account in which this custom line item will be applied to.</p>
    pub account_id: ::std::option::Option<::std::string::String>,
    /// The display settings of the custom line item
    pub computation_rule: ::std::option::Option<crate::types::ComputationRuleEnum>,
    /// The presentation configuration of the custom line item
    pub presentation_details: ::std::option::Option<crate::types::PresentationObject>,
}
impl CustomLineItemListElement {
    /// <p>The Amazon Resource Names (ARNs) for custom line items.</p>
    pub fn arn(&self) -> ::std::option::Option<&str> {
        self.arn.as_deref()
    }
    /// <p>The custom line item's name.</p>
    pub fn name(&self) -> ::std::option::Option<&str> {
        self.name.as_deref()
    }
    /// <p>A <code>ListCustomLineItemChargeDetails</code> that describes the charge details of a custom line item.</p>
    pub fn charge_details(&self) -> ::std::option::Option<&crate::types::ListCustomLineItemChargeDetails> {
        self.charge_details.as_ref()
    }
    /// <p>The custom line item's charge value currency. Only one of the valid values can be used.</p>
    pub fn currency_code(&self) -> ::std::option::Option<&crate::types::CurrencyCode> {
        self.currency_code.as_ref()
    }
    /// <p>The custom line item's description. This is shown on the Bills page in association with the charge value.</p>
    pub fn description(&self) -> ::std::option::Option<&str> {
        self.description.as_deref()
    }
    /// <p>The product code that's associated with the custom line item.</p>
    pub fn product_code(&self) -> ::std::option::Option<&str> {
        self.product_code.as_deref()
    }
    /// <p>The Amazon Resource Name (ARN) that references the billing group where the custom line item applies to.</p>
    pub fn billing_group_arn(&self) -> ::std::option::Option<&str> {
        self.billing_group_arn.as_deref()
    }
    /// <p>The time created.</p>
    pub fn creation_time(&self) -> i64 {
        self.creation_time
    }
    /// <p>The most recent time when the custom line item was modified.</p>
    pub fn last_modified_time(&self) -> i64 {
        self.last_modified_time
    }
    /// <p>The number of resources that are associated to the custom line item.</p>
    pub fn association_size(&self) -> i64 {
        self.association_size
    }
    /// <p>The Amazon Web Services account in which this custom line item will be applied to.</p>
    pub fn account_id(&self) -> ::std::option::Option<&str> {
        self.account_id.as_deref()
    }
    /// The display settings of the custom line item
    pub fn computation_rule(&self) -> ::std::option::Option<&crate::types::ComputationRuleEnum> {
        self.computation_rule.as_ref()
    }
    /// The presentation configuration of the custom line item
    pub fn presentation_details(&self) -> ::std::option::Option<&crate::types::PresentationObject> {
        self.presentation_details.as_ref()
    }
}
impl ::std::fmt::Debug for CustomLineItemListElement {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("CustomLineItemListElement");
        formatter.field("arn", &self.arn);
        formatter.field("name", &"*** Sensitive Data Redacted ***");
        formatter.field("charge_details", &self.charge_details);
        formatter.field("currency_code", &self.currency_code);
        formatter.field("description", &"*** Sensitive Data Redacted ***");
        formatter.field("product_code", &self.product_code);
        formatter.field("billing_group_arn", &self.billing_group_arn);
        formatter.field("creation_time", &self.creation_time);
        formatter.field("last_modified_time", &self.last_modified_time);
        formatter.field("association_size", &self.association_size);
        formatter.field("account_id", &self.account_id);
        formatter.field("computation_rule", &self.computation_rule);
        formatter.field("presentation_details", &self.presentation_details);
        formatter.finish()
    }
}
impl CustomLineItemListElement {
    /// Creates a new builder-style object to manufacture [`CustomLineItemListElement`](crate::types::CustomLineItemListElement).
    pub fn builder() -> crate::types::builders::CustomLineItemListElementBuilder {
        crate::types::builders::CustomLineItemListElementBuilder::default()
    }
}

/// A builder for [`CustomLineItemListElement`](crate::types::CustomLineItemListElement).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default)]
#[non_exhaustive]
pub struct CustomLineItemListElementBuilder {
    pub(crate) arn: ::std::option::Option<::std::string::String>,
    pub(crate) name: ::std::option::Option<::std::string::String>,
    pub(crate) charge_details: ::std::option::Option<crate::types::ListCustomLineItemChargeDetails>,
    pub(crate) currency_code: ::std::option::Option<crate::types::CurrencyCode>,
    pub(crate) description: ::std::option::Option<::std::string::String>,
    pub(crate) product_code: ::std::option::Option<::std::string::String>,
    pub(crate) billing_group_arn: ::std::option::Option<::std::string::String>,
    pub(crate) creation_time: ::std::option::Option<i64>,
    pub(crate) last_modified_time: ::std::option::Option<i64>,
    pub(crate) association_size: ::std::option::Option<i64>,
    pub(crate) account_id: ::std::option::Option<::std::string::String>,
    pub(crate) computation_rule: ::std::option::Option<crate::types::ComputationRuleEnum>,
    pub(crate) presentation_details: ::std::option::Option<crate::types::PresentationObject>,
}
impl CustomLineItemListElementBuilder {
    /// <p>The Amazon Resource Names (ARNs) for custom line items.</p>
    pub fn arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Names (ARNs) for custom line items.</p>
    pub fn set_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.arn = input;
        self
    }
    /// <p>The Amazon Resource Names (ARNs) for custom line items.</p>
    pub fn get_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.arn
    }
    /// <p>The custom line item's name.</p>
    pub fn name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The custom line item's name.</p>
    pub fn set_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>The custom line item's name.</p>
    pub fn get_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.name
    }
    /// <p>A <code>ListCustomLineItemChargeDetails</code> that describes the charge details of a custom line item.</p>
    pub fn charge_details(mut self, input: crate::types::ListCustomLineItemChargeDetails) -> Self {
        self.charge_details = ::std::option::Option::Some(input);
        self
    }
    /// <p>A <code>ListCustomLineItemChargeDetails</code> that describes the charge details of a custom line item.</p>
    pub fn set_charge_details(mut self, input: ::std::option::Option<crate::types::ListCustomLineItemChargeDetails>) -> Self {
        self.charge_details = input;
        self
    }
    /// <p>A <code>ListCustomLineItemChargeDetails</code> that describes the charge details of a custom line item.</p>
    pub fn get_charge_details(&self) -> &::std::option::Option<crate::types::ListCustomLineItemChargeDetails> {
        &self.charge_details
    }
    /// <p>The custom line item's charge value currency. Only one of the valid values can be used.</p>
    pub fn currency_code(mut self, input: crate::types::CurrencyCode) -> Self {
        self.currency_code = ::std::option::Option::Some(input);
        self
    }
    /// <p>The custom line item's charge value currency. Only one of the valid values can be used.</p>
    pub fn set_currency_code(mut self, input: ::std::option::Option<crate::types::CurrencyCode>) -> Self {
        self.currency_code = input;
        self
    }
    /// <p>The custom line item's charge value currency. Only one of the valid values can be used.</p>
    pub fn get_currency_code(&self) -> &::std::option::Option<crate::types::CurrencyCode> {
        &self.currency_code
    }
    /// <p>The custom line item's description. This is shown on the Bills page in association with the charge value.</p>
    pub fn description(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.description = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The custom line item's description. This is shown on the Bills page in association with the charge value.</p>
    pub fn set_description(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.description = input;
        self
    }
    /// <p>The custom line item's description. This is shown on the Bills page in association with the charge value.</p>
    pub fn get_description(&self) -> &::std::option::Option<::std::string::String> {
        &self.description
    }
    /// <p>The product code that's associated with the custom line item.</p>
    pub fn product_code(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.product_code = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The product code that's associated with the custom line item.</p>
    pub fn set_product_code(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.product_code = input;
        self
    }
    /// <p>The product code that's associated with the custom line item.</p>
    pub fn get_product_code(&self) -> &::std::option::Option<::std::string::String> {
        &self.product_code
    }
    /// <p>The Amazon Resource Name (ARN) that references the billing group where the custom line item applies to.</p>
    pub fn billing_group_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.billing_group_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) that references the billing group where the custom line item applies to.</p>
    pub fn set_billing_group_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.billing_group_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) that references the billing group where the custom line item applies to.</p>
    pub fn get_billing_group_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.billing_group_arn
    }
    /// <p>The time created.</p>
    pub fn creation_time(mut self, input: i64) -> Self {
        self.creation_time = ::std::option::Option::Some(input);
        self
    }
    /// <p>The time created.</p>
    pub fn set_creation_time(mut self, input: ::std::option::Option<i64>) -> Self {
        self.creation_time = input;
        self
    }
    /// <p>The time created.</p>
    pub fn get_creation_time(&self) -> &::std::option::Option<i64> {
        &self.creation_time
    }
    /// <p>The most recent time when the custom line item was modified.</p>
    pub fn last_modified_time(mut self, input: i64) -> Self {
        self.last_modified_time = ::std::option::Option::Some(input);
        self
    }
    /// <p>The most recent time when the custom line item was modified.</p>
    pub fn set_last_modified_time(mut self, input: ::std::option::Option<i64>) -> Self {
        self.last_modified_time = input;
        self
    }
    /// <p>The most recent time when the custom line item was modified.</p>
    pub fn get_last_modified_time(&self) -> &::std::option::Option<i64> {
        &self.last_modified_time
    }
    /// <p>The number of resources that are associated to the custom line item.</p>
    pub fn association_size(mut self, input: i64) -> Self {
        self.association_size = ::std::option::Option::Some(input);
        self
    }
    /// <p>The number of resources that are associated to the custom line item.</p>
    pub fn set_association_size(mut self, input: ::std::option::Option<i64>) -> Self {
        self.association_size = input;
        self
    }
    /// <p>The number of resources that are associated to the custom line item.</p>
    pub fn get_association_size(&self) -> &::std::option::Option<i64> {
        &self.association_size
    }
    /// <p>The Amazon Web Services account in which this custom line item will be applied to.</p>
    pub fn account_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.account_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Web Services account in which this custom line item will be applied to.</p>
    pub fn set_account_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.account_id = input;
        self
    }
    /// <p>The Amazon Web Services account in which this custom line item will be applied to.</p>
    pub fn get_account_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.account_id
    }
    /// The display settings of the custom line item
    pub fn computation_rule(mut self, input: crate::types::ComputationRuleEnum) -> Self {
        self.computation_rule = ::std::option::Option::Some(input);
        self
    }
    /// The display settings of the custom line item
    pub fn set_computation_rule(mut self, input: ::std::option::Option<crate::types::ComputationRuleEnum>) -> Self {
        self.computation_rule = input;
        self
    }
    /// The display settings of the custom line item
    pub fn get_computation_rule(&self) -> &::std::option::Option<crate::types::ComputationRuleEnum> {
        &self.computation_rule
    }
    /// The presentation configuration of the custom line item
    pub fn presentation_details(mut self, input: crate::types::PresentationObject) -> Self {
        self.presentation_details = ::std::option::Option::Some(input);
        self
    }
    /// The presentation configuration of the custom line item
    pub fn set_presentation_details(mut self, input: ::std::option::Option<crate::types::PresentationObject>) -> Self {
        self.presentation_details = input;
        self
    }
    /// The presentation configuration of the custom line item
    pub fn get_presentation_details(&self) -> &::std::option::Option<crate::types::PresentationObject> {
        &self.presentation_details
    }
    /// Consumes the builder and constructs a [`CustomLineItemListElement`](crate::types::CustomLineItemListElement).
    pub fn build(self) -> crate::types::CustomLineItemListElement {
        crate::types::CustomLineItemListElement {
            arn: self.arn,
            name: self.name,
            charge_details: self.charge_details,
            currency_code: self.currency_code,
            description: self.description,
            product_code: self.product_code,
            billing_group_arn: self.billing_group_arn,
            creation_time: self.creation_time.unwrap_or_default(),
            last_modified_time: self.last_modified_time.unwrap_or_default(),
            association_size: self.association_size.unwrap_or_default(),
            account_id: self.account_id,
            computation_rule: self.computation_rule,
            presentation_details: self.presentation_details,
        }
    }
}
impl ::std::fmt::Debug for CustomLineItemListElementBuilder {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("CustomLineItemListElementBuilder");
        formatter.field("arn", &self.arn);
        formatter.field("name", &"*** Sensitive Data Redacted ***");
        formatter.field("charge_details", &self.charge_details);
        formatter.field("currency_code", &self.currency_code);
        formatter.field("description", &"*** Sensitive Data Redacted ***");
        formatter.field("product_code", &self.product_code);
        formatter.field("billing_group_arn", &self.billing_group_arn);
        formatter.field("creation_time", &self.creation_time);
        formatter.field("last_modified_time", &self.last_modified_time);
        formatter.field("association_size", &self.association_size);
        formatter.field("account_id", &self.account_id);
        formatter.field("computation_rule", &self.computation_rule);
        formatter.field("presentation_details", &self.presentation_details);
        formatter.finish()
    }
}
