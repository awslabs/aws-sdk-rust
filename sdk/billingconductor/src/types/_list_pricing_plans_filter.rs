// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The filter that specifies the Amazon Resource Names (ARNs) of pricing plans, to retrieve pricing plan information. </p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ListPricingPlansFilter {
    /// <p>A list of pricing plan Amazon Resource Names (ARNs) to retrieve information. </p>
    #[doc(hidden)]
    pub arns: std::option::Option<std::vec::Vec<std::string::String>>,
}
impl ListPricingPlansFilter {
    /// <p>A list of pricing plan Amazon Resource Names (ARNs) to retrieve information. </p>
    pub fn arns(&self) -> std::option::Option<&[std::string::String]> {
        self.arns.as_deref()
    }
}
impl ListPricingPlansFilter {
    /// Creates a new builder-style object to manufacture [`ListPricingPlansFilter`](crate::types::ListPricingPlansFilter).
    pub fn builder() -> crate::types::builders::ListPricingPlansFilterBuilder {
        crate::types::builders::ListPricingPlansFilterBuilder::default()
    }
}

/// A builder for [`ListPricingPlansFilter`](crate::types::ListPricingPlansFilter).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ListPricingPlansFilterBuilder {
    pub(crate) arns: std::option::Option<std::vec::Vec<std::string::String>>,
}
impl ListPricingPlansFilterBuilder {
    /// Appends an item to `arns`.
    ///
    /// To override the contents of this collection use [`set_arns`](Self::set_arns).
    ///
    /// <p>A list of pricing plan Amazon Resource Names (ARNs) to retrieve information. </p>
    pub fn arns(mut self, input: impl Into<std::string::String>) -> Self {
        let mut v = self.arns.unwrap_or_default();
        v.push(input.into());
        self.arns = Some(v);
        self
    }
    /// <p>A list of pricing plan Amazon Resource Names (ARNs) to retrieve information. </p>
    pub fn set_arns(
        mut self,
        input: std::option::Option<std::vec::Vec<std::string::String>>,
    ) -> Self {
        self.arns = input;
        self
    }
    /// Consumes the builder and constructs a [`ListPricingPlansFilter`](crate::types::ListPricingPlansFilter).
    pub fn build(self) -> crate::types::ListPricingPlansFilter {
        crate::types::ListPricingPlansFilter { arns: self.arns }
    }
}
