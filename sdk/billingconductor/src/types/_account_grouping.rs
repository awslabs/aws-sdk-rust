// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p> The set of accounts that will be under the billing group. The set of accounts resemble the linked accounts in a consolidated family. </p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AccountGrouping {
    /// <p> The account IDs that make up the billing group. Account IDs must be a part of the consolidated billing family, and not associated with another billing group. </p>
    #[doc(hidden)]
    pub linked_account_ids: std::option::Option<std::vec::Vec<std::string::String>>,
}
impl AccountGrouping {
    /// <p> The account IDs that make up the billing group. Account IDs must be a part of the consolidated billing family, and not associated with another billing group. </p>
    pub fn linked_account_ids(&self) -> std::option::Option<&[std::string::String]> {
        self.linked_account_ids.as_deref()
    }
}
impl AccountGrouping {
    /// Creates a new builder-style object to manufacture [`AccountGrouping`](crate::types::AccountGrouping).
    pub fn builder() -> crate::types::builders::AccountGroupingBuilder {
        crate::types::builders::AccountGroupingBuilder::default()
    }
}

/// A builder for [`AccountGrouping`](crate::types::AccountGrouping).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AccountGroupingBuilder {
    pub(crate) linked_account_ids: std::option::Option<std::vec::Vec<std::string::String>>,
}
impl AccountGroupingBuilder {
    /// Appends an item to `linked_account_ids`.
    ///
    /// To override the contents of this collection use [`set_linked_account_ids`](Self::set_linked_account_ids).
    ///
    /// <p> The account IDs that make up the billing group. Account IDs must be a part of the consolidated billing family, and not associated with another billing group. </p>
    pub fn linked_account_ids(mut self, input: impl Into<std::string::String>) -> Self {
        let mut v = self.linked_account_ids.unwrap_or_default();
        v.push(input.into());
        self.linked_account_ids = Some(v);
        self
    }
    /// <p> The account IDs that make up the billing group. Account IDs must be a part of the consolidated billing family, and not associated with another billing group. </p>
    pub fn set_linked_account_ids(
        mut self,
        input: std::option::Option<std::vec::Vec<std::string::String>>,
    ) -> Self {
        self.linked_account_ids = input;
        self
    }
    /// Consumes the builder and constructs a [`AccountGrouping`](crate::types::AccountGrouping).
    pub fn build(self) -> crate::types::AccountGrouping {
        crate::types::AccountGrouping {
            linked_account_ids: self.linked_account_ids,
        }
    }
}
