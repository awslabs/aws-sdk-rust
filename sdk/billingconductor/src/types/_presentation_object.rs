// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// The presentation configuration of the custom line item
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct PresentationObject {
    /// This defines the service of where the custom line item is presented
    pub service: ::std::string::String,
}
impl PresentationObject {
    /// This defines the service of where the custom line item is presented
    pub fn service(&self) -> &str {
        use std::ops::Deref;
        self.service.deref()
    }
}
impl PresentationObject {
    /// Creates a new builder-style object to manufacture [`PresentationObject`](crate::types::PresentationObject).
    pub fn builder() -> crate::types::builders::PresentationObjectBuilder {
        crate::types::builders::PresentationObjectBuilder::default()
    }
}

/// A builder for [`PresentationObject`](crate::types::PresentationObject).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct PresentationObjectBuilder {
    pub(crate) service: ::std::option::Option<::std::string::String>,
}
impl PresentationObjectBuilder {
    /// This defines the service of where the custom line item is presented
    /// This field is required.
    pub fn service(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.service = ::std::option::Option::Some(input.into());
        self
    }
    /// This defines the service of where the custom line item is presented
    pub fn set_service(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.service = input;
        self
    }
    /// This defines the service of where the custom line item is presented
    pub fn get_service(&self) -> &::std::option::Option<::std::string::String> {
        &self.service
    }
    /// Consumes the builder and constructs a [`PresentationObject`](crate::types::PresentationObject).
    /// This method will fail if any of the following fields are not set:
    /// - [`service`](crate::types::builders::PresentationObjectBuilder::service)
    pub fn build(self) -> ::std::result::Result<crate::types::PresentationObject, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::PresentationObject {
            service: self.service.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "service",
                    "service was not specified but it is required when building PresentationObject",
                )
            })?,
        })
    }
}
