// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Copy the image set properties of the destination image set.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct CopyDestinationImageSetProperties {
    /// <p>The image set identifier of the copied image set properties.</p>
    pub image_set_id: ::std::string::String,
    /// <p>The latest version identifier for the destination image set properties.</p>
    pub latest_version_id: ::std::string::String,
    /// <p>The image set state of the destination image set properties.</p>
    pub image_set_state: ::std::option::Option<crate::types::ImageSetState>,
    /// <p>The image set workflow status of the destination image set properties.</p>
    pub image_set_workflow_status: ::std::option::Option<crate::types::ImageSetWorkflowStatus>,
    /// <p>The timestamp when the destination image set properties were created.</p>
    pub created_at: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>The timestamp when the destination image set properties were last updated.</p>
    pub updated_at: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>The Amazon Resource Name (ARN) assigned to the destination image set.</p>
    pub image_set_arn: ::std::option::Option<::std::string::String>,
}
impl CopyDestinationImageSetProperties {
    /// <p>The image set identifier of the copied image set properties.</p>
    pub fn image_set_id(&self) -> &str {
        use std::ops::Deref;
        self.image_set_id.deref()
    }
    /// <p>The latest version identifier for the destination image set properties.</p>
    pub fn latest_version_id(&self) -> &str {
        use std::ops::Deref;
        self.latest_version_id.deref()
    }
    /// <p>The image set state of the destination image set properties.</p>
    pub fn image_set_state(&self) -> ::std::option::Option<&crate::types::ImageSetState> {
        self.image_set_state.as_ref()
    }
    /// <p>The image set workflow status of the destination image set properties.</p>
    pub fn image_set_workflow_status(&self) -> ::std::option::Option<&crate::types::ImageSetWorkflowStatus> {
        self.image_set_workflow_status.as_ref()
    }
    /// <p>The timestamp when the destination image set properties were created.</p>
    pub fn created_at(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.created_at.as_ref()
    }
    /// <p>The timestamp when the destination image set properties were last updated.</p>
    pub fn updated_at(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.updated_at.as_ref()
    }
    /// <p>The Amazon Resource Name (ARN) assigned to the destination image set.</p>
    pub fn image_set_arn(&self) -> ::std::option::Option<&str> {
        self.image_set_arn.as_deref()
    }
}
impl CopyDestinationImageSetProperties {
    /// Creates a new builder-style object to manufacture [`CopyDestinationImageSetProperties`](crate::types::CopyDestinationImageSetProperties).
    pub fn builder() -> crate::types::builders::CopyDestinationImageSetPropertiesBuilder {
        crate::types::builders::CopyDestinationImageSetPropertiesBuilder::default()
    }
}

/// A builder for [`CopyDestinationImageSetProperties`](crate::types::CopyDestinationImageSetProperties).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct CopyDestinationImageSetPropertiesBuilder {
    pub(crate) image_set_id: ::std::option::Option<::std::string::String>,
    pub(crate) latest_version_id: ::std::option::Option<::std::string::String>,
    pub(crate) image_set_state: ::std::option::Option<crate::types::ImageSetState>,
    pub(crate) image_set_workflow_status: ::std::option::Option<crate::types::ImageSetWorkflowStatus>,
    pub(crate) created_at: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) updated_at: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) image_set_arn: ::std::option::Option<::std::string::String>,
}
impl CopyDestinationImageSetPropertiesBuilder {
    /// <p>The image set identifier of the copied image set properties.</p>
    /// This field is required.
    pub fn image_set_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.image_set_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The image set identifier of the copied image set properties.</p>
    pub fn set_image_set_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.image_set_id = input;
        self
    }
    /// <p>The image set identifier of the copied image set properties.</p>
    pub fn get_image_set_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.image_set_id
    }
    /// <p>The latest version identifier for the destination image set properties.</p>
    /// This field is required.
    pub fn latest_version_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.latest_version_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The latest version identifier for the destination image set properties.</p>
    pub fn set_latest_version_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.latest_version_id = input;
        self
    }
    /// <p>The latest version identifier for the destination image set properties.</p>
    pub fn get_latest_version_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.latest_version_id
    }
    /// <p>The image set state of the destination image set properties.</p>
    pub fn image_set_state(mut self, input: crate::types::ImageSetState) -> Self {
        self.image_set_state = ::std::option::Option::Some(input);
        self
    }
    /// <p>The image set state of the destination image set properties.</p>
    pub fn set_image_set_state(mut self, input: ::std::option::Option<crate::types::ImageSetState>) -> Self {
        self.image_set_state = input;
        self
    }
    /// <p>The image set state of the destination image set properties.</p>
    pub fn get_image_set_state(&self) -> &::std::option::Option<crate::types::ImageSetState> {
        &self.image_set_state
    }
    /// <p>The image set workflow status of the destination image set properties.</p>
    pub fn image_set_workflow_status(mut self, input: crate::types::ImageSetWorkflowStatus) -> Self {
        self.image_set_workflow_status = ::std::option::Option::Some(input);
        self
    }
    /// <p>The image set workflow status of the destination image set properties.</p>
    pub fn set_image_set_workflow_status(mut self, input: ::std::option::Option<crate::types::ImageSetWorkflowStatus>) -> Self {
        self.image_set_workflow_status = input;
        self
    }
    /// <p>The image set workflow status of the destination image set properties.</p>
    pub fn get_image_set_workflow_status(&self) -> &::std::option::Option<crate::types::ImageSetWorkflowStatus> {
        &self.image_set_workflow_status
    }
    /// <p>The timestamp when the destination image set properties were created.</p>
    pub fn created_at(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.created_at = ::std::option::Option::Some(input);
        self
    }
    /// <p>The timestamp when the destination image set properties were created.</p>
    pub fn set_created_at(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.created_at = input;
        self
    }
    /// <p>The timestamp when the destination image set properties were created.</p>
    pub fn get_created_at(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.created_at
    }
    /// <p>The timestamp when the destination image set properties were last updated.</p>
    pub fn updated_at(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.updated_at = ::std::option::Option::Some(input);
        self
    }
    /// <p>The timestamp when the destination image set properties were last updated.</p>
    pub fn set_updated_at(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.updated_at = input;
        self
    }
    /// <p>The timestamp when the destination image set properties were last updated.</p>
    pub fn get_updated_at(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.updated_at
    }
    /// <p>The Amazon Resource Name (ARN) assigned to the destination image set.</p>
    pub fn image_set_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.image_set_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) assigned to the destination image set.</p>
    pub fn set_image_set_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.image_set_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) assigned to the destination image set.</p>
    pub fn get_image_set_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.image_set_arn
    }
    /// Consumes the builder and constructs a [`CopyDestinationImageSetProperties`](crate::types::CopyDestinationImageSetProperties).
    /// This method will fail if any of the following fields are not set:
    /// - [`image_set_id`](crate::types::builders::CopyDestinationImageSetPropertiesBuilder::image_set_id)
    /// - [`latest_version_id`](crate::types::builders::CopyDestinationImageSetPropertiesBuilder::latest_version_id)
    pub fn build(self) -> ::std::result::Result<crate::types::CopyDestinationImageSetProperties, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::CopyDestinationImageSetProperties {
            image_set_id: self.image_set_id.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "image_set_id",
                    "image_set_id was not specified but it is required when building CopyDestinationImageSetProperties",
                )
            })?,
            latest_version_id: self.latest_version_id.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "latest_version_id",
                    "latest_version_id was not specified but it is required when building CopyDestinationImageSetProperties",
                )
            })?,
            image_set_state: self.image_set_state,
            image_set_workflow_status: self.image_set_workflow_status,
            created_at: self.created_at,
            updated_at: self.updated_at,
            image_set_arn: self.image_set_arn,
        })
    }
}
