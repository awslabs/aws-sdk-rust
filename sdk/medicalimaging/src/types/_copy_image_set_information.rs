// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Copy image set information.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct CopyImageSetInformation {
    /// <p>The source image set.</p>
    pub source_image_set: ::std::option::Option<crate::types::CopySourceImageSetInformation>,
    /// <p>The destination image set.</p>
    pub destination_image_set: ::std::option::Option<crate::types::CopyDestinationImageSet>,
}
impl CopyImageSetInformation {
    /// <p>The source image set.</p>
    pub fn source_image_set(&self) -> ::std::option::Option<&crate::types::CopySourceImageSetInformation> {
        self.source_image_set.as_ref()
    }
    /// <p>The destination image set.</p>
    pub fn destination_image_set(&self) -> ::std::option::Option<&crate::types::CopyDestinationImageSet> {
        self.destination_image_set.as_ref()
    }
}
impl CopyImageSetInformation {
    /// Creates a new builder-style object to manufacture [`CopyImageSetInformation`](crate::types::CopyImageSetInformation).
    pub fn builder() -> crate::types::builders::CopyImageSetInformationBuilder {
        crate::types::builders::CopyImageSetInformationBuilder::default()
    }
}

/// A builder for [`CopyImageSetInformation`](crate::types::CopyImageSetInformation).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct CopyImageSetInformationBuilder {
    pub(crate) source_image_set: ::std::option::Option<crate::types::CopySourceImageSetInformation>,
    pub(crate) destination_image_set: ::std::option::Option<crate::types::CopyDestinationImageSet>,
}
impl CopyImageSetInformationBuilder {
    /// <p>The source image set.</p>
    /// This field is required.
    pub fn source_image_set(mut self, input: crate::types::CopySourceImageSetInformation) -> Self {
        self.source_image_set = ::std::option::Option::Some(input);
        self
    }
    /// <p>The source image set.</p>
    pub fn set_source_image_set(mut self, input: ::std::option::Option<crate::types::CopySourceImageSetInformation>) -> Self {
        self.source_image_set = input;
        self
    }
    /// <p>The source image set.</p>
    pub fn get_source_image_set(&self) -> &::std::option::Option<crate::types::CopySourceImageSetInformation> {
        &self.source_image_set
    }
    /// <p>The destination image set.</p>
    pub fn destination_image_set(mut self, input: crate::types::CopyDestinationImageSet) -> Self {
        self.destination_image_set = ::std::option::Option::Some(input);
        self
    }
    /// <p>The destination image set.</p>
    pub fn set_destination_image_set(mut self, input: ::std::option::Option<crate::types::CopyDestinationImageSet>) -> Self {
        self.destination_image_set = input;
        self
    }
    /// <p>The destination image set.</p>
    pub fn get_destination_image_set(&self) -> &::std::option::Option<crate::types::CopyDestinationImageSet> {
        &self.destination_image_set
    }
    /// Consumes the builder and constructs a [`CopyImageSetInformation`](crate::types::CopyImageSetInformation).
    pub fn build(self) -> crate::types::CopyImageSetInformation {
        crate::types::CopyImageSetInformation {
            source_image_set: self.source_image_set,
            destination_image_set: self.destination_image_set,
        }
    }
}
