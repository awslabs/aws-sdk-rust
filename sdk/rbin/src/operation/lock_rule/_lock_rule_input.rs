// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct LockRuleInput {
    /// <p>The unique ID of the retention rule.</p>
    #[doc(hidden)]
    pub identifier: std::option::Option<std::string::String>,
    /// <p>Information about the retention rule lock configuration.</p>
    #[doc(hidden)]
    pub lock_configuration: std::option::Option<crate::types::LockConfiguration>,
}
impl LockRuleInput {
    /// <p>The unique ID of the retention rule.</p>
    pub fn identifier(&self) -> std::option::Option<&str> {
        self.identifier.as_deref()
    }
    /// <p>Information about the retention rule lock configuration.</p>
    pub fn lock_configuration(&self) -> std::option::Option<&crate::types::LockConfiguration> {
        self.lock_configuration.as_ref()
    }
}
impl LockRuleInput {
    /// Creates a new builder-style object to manufacture [`LockRuleInput`](crate::operation::lock_rule::LockRuleInput).
    pub fn builder() -> crate::operation::lock_rule::builders::LockRuleInputBuilder {
        crate::operation::lock_rule::builders::LockRuleInputBuilder::default()
    }
}

/// A builder for [`LockRuleInput`](crate::operation::lock_rule::LockRuleInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct LockRuleInputBuilder {
    pub(crate) identifier: std::option::Option<std::string::String>,
    pub(crate) lock_configuration: std::option::Option<crate::types::LockConfiguration>,
}
impl LockRuleInputBuilder {
    /// <p>The unique ID of the retention rule.</p>
    pub fn identifier(mut self, input: impl Into<std::string::String>) -> Self {
        self.identifier = Some(input.into());
        self
    }
    /// <p>The unique ID of the retention rule.</p>
    pub fn set_identifier(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.identifier = input;
        self
    }
    /// <p>Information about the retention rule lock configuration.</p>
    pub fn lock_configuration(mut self, input: crate::types::LockConfiguration) -> Self {
        self.lock_configuration = Some(input);
        self
    }
    /// <p>Information about the retention rule lock configuration.</p>
    pub fn set_lock_configuration(
        mut self,
        input: std::option::Option<crate::types::LockConfiguration>,
    ) -> Self {
        self.lock_configuration = input;
        self
    }
    /// Consumes the builder and constructs a [`LockRuleInput`](crate::operation::lock_rule::LockRuleInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::lock_rule::LockRuleInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(crate::operation::lock_rule::LockRuleInput {
            identifier: self.identifier,
            lock_configuration: self.lock_configuration,
        })
    }
}
