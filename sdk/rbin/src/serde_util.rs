// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) fn lock_configuration_correct_errors(
    mut builder: crate::types::builders::LockConfigurationBuilder,
) -> crate::types::builders::LockConfigurationBuilder {
    if builder.unlock_delay.is_none() {
        builder.unlock_delay = {
            let builder = crate::types::builders::UnlockDelayBuilder::default();
            crate::serde_util::unlock_delay_correct_errors(builder).build().ok()
        }
    }
    builder
}

pub(crate) fn retention_period_correct_errors(
    mut builder: crate::types::builders::RetentionPeriodBuilder,
) -> crate::types::builders::RetentionPeriodBuilder {
    if builder.retention_period_value.is_none() {
        builder.retention_period_value = Some(Default::default())
    }
    if builder.retention_period_unit.is_none() {
        builder.retention_period_unit = "no value was set".parse::<crate::types::RetentionPeriodUnit>().ok()
    }
    builder
}

pub(crate) fn resource_tag_correct_errors(mut builder: crate::types::builders::ResourceTagBuilder) -> crate::types::builders::ResourceTagBuilder {
    if builder.resource_tag_key.is_none() {
        builder.resource_tag_key = Some(Default::default())
    }
    builder
}

pub(crate) fn tag_correct_errors(mut builder: crate::types::builders::TagBuilder) -> crate::types::builders::TagBuilder {
    if builder.key.is_none() {
        builder.key = Some(Default::default())
    }
    if builder.value.is_none() {
        builder.value = Some(Default::default())
    }
    builder
}

pub(crate) fn unlock_delay_correct_errors(mut builder: crate::types::builders::UnlockDelayBuilder) -> crate::types::builders::UnlockDelayBuilder {
    if builder.unlock_delay_value.is_none() {
        builder.unlock_delay_value = Some(Default::default())
    }
    if builder.unlock_delay_unit.is_none() {
        builder.unlock_delay_unit = "no value was set".parse::<crate::types::UnlockDelayUnit>().ok()
    }
    builder
}
