// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateRule`](crate::operation::create_rule::builders::CreateRuleFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`retention_period(RetentionPeriod)`](crate::operation::create_rule::builders::CreateRuleFluentBuilder::retention_period) / [`set_retention_period(Option<RetentionPeriod>)`](crate::operation::create_rule::builders::CreateRuleFluentBuilder::set_retention_period): <p>Information about the retention period for which the retention rule is to retain resources.</p>
    ///   - [`description(impl Into<String>)`](crate::operation::create_rule::builders::CreateRuleFluentBuilder::description) / [`set_description(Option<String>)`](crate::operation::create_rule::builders::CreateRuleFluentBuilder::set_description): <p>The retention rule description.</p>
    ///   - [`tags(Vec<Tag>)`](crate::operation::create_rule::builders::CreateRuleFluentBuilder::tags) / [`set_tags(Option<Vec<Tag>>)`](crate::operation::create_rule::builders::CreateRuleFluentBuilder::set_tags): <p>Information about the tags to assign to the retention rule.</p>
    ///   - [`resource_type(ResourceType)`](crate::operation::create_rule::builders::CreateRuleFluentBuilder::resource_type) / [`set_resource_type(Option<ResourceType>)`](crate::operation::create_rule::builders::CreateRuleFluentBuilder::set_resource_type): <p>The resource type to be retained by the retention rule. Currently, only Amazon EBS snapshots and EBS-backed AMIs are supported. To retain snapshots, specify <code>EBS_SNAPSHOT</code>. To retain EBS-backed AMIs, specify <code>EC2_IMAGE</code>.</p>
    ///   - [`resource_tags(Vec<ResourceTag>)`](crate::operation::create_rule::builders::CreateRuleFluentBuilder::resource_tags) / [`set_resource_tags(Option<Vec<ResourceTag>>)`](crate::operation::create_rule::builders::CreateRuleFluentBuilder::set_resource_tags): <p>Specifies the resource tags to use to identify resources that are to be retained by a tag-level retention rule. For tag-level retention rules, only deleted resources, of the specified resource type, that have one or more of the specified tag key and value pairs are retained. If a resource is deleted, but it does not have any of the specified tag key and value pairs, it is immediately deleted without being retained by the retention rule.</p>  <p>You can add the same tag key and value pair to a maximum or five retention rules.</p>  <p>To create a Region-level retention rule, omit this parameter. A Region-level retention rule does not have any resource tags specified. It retains all deleted resources of the specified resource type in the Region in which the rule is created, even if the resources are not tagged.</p>
    ///   - [`lock_configuration(LockConfiguration)`](crate::operation::create_rule::builders::CreateRuleFluentBuilder::lock_configuration) / [`set_lock_configuration(Option<LockConfiguration>)`](crate::operation::create_rule::builders::CreateRuleFluentBuilder::set_lock_configuration): <p>Information about the retention rule lock configuration.</p>
    /// - On success, responds with [`CreateRuleOutput`](crate::operation::create_rule::CreateRuleOutput) with field(s):
    ///   - [`identifier(Option<String>)`](crate::operation::create_rule::CreateRuleOutput::identifier): <p>The unique ID of the retention rule.</p>
    ///   - [`retention_period(Option<RetentionPeriod>)`](crate::operation::create_rule::CreateRuleOutput::retention_period): <p>Information about the retention period for which the retention rule is to retain resources.</p>
    ///   - [`description(Option<String>)`](crate::operation::create_rule::CreateRuleOutput::description): <p>The retention rule description.</p>
    ///   - [`tags(Option<Vec<Tag>>)`](crate::operation::create_rule::CreateRuleOutput::tags): <p>Information about the tags assigned to the retention rule.</p>
    ///   - [`resource_type(Option<ResourceType>)`](crate::operation::create_rule::CreateRuleOutput::resource_type): <p>The resource type retained by the retention rule.</p>
    ///   - [`resource_tags(Option<Vec<ResourceTag>>)`](crate::operation::create_rule::CreateRuleOutput::resource_tags): <p>Information about the resource tags used to identify resources that are retained by the retention rule.</p>
    ///   - [`status(Option<RuleStatus>)`](crate::operation::create_rule::CreateRuleOutput::status): <p>The state of the retention rule. Only retention rules that are in the <code>available</code> state retain resources.</p>
    ///   - [`lock_configuration(Option<LockConfiguration>)`](crate::operation::create_rule::CreateRuleOutput::lock_configuration): <p>Information about the retention rule lock configuration.</p>
    ///   - [`lock_state(Option<LockState>)`](crate::operation::create_rule::CreateRuleOutput::lock_state): <p>The lock state for the retention rule.</p>  <ul>   <li> <p> <code>locked</code> - The retention rule is locked and can't be modified or deleted.</p> </li>   <li> <p> <code>pending_unlock</code> - The retention rule has been unlocked but it is still within the unlock delay period. The retention rule can be modified or deleted only after the unlock delay period has expired.</p> </li>   <li> <p> <code>unlocked</code> - The retention rule is unlocked and it can be modified or deleted by any user with the required permissions.</p> </li>   <li> <p> <code>null</code> - The retention rule has never been locked. Once a retention rule has been locked, it can transition between the <code>locked</code> and <code>unlocked</code> states only; it can never transition back to <code>null</code>.</p> </li>  </ul>
    /// - On failure, responds with [`SdkError<CreateRuleError>`](crate::operation::create_rule::CreateRuleError)
    pub fn create_rule(&self) -> crate::operation::create_rule::builders::CreateRuleFluentBuilder {
        crate::operation::create_rule::builders::CreateRuleFluentBuilder::new(self.handle.clone())
    }
}
