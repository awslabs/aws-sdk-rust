// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains job logs. Whenever a Snow device is used to import data into or export data out of Amazon S3, you'll have the option of downloading a PDF job report. Job logs are returned as a part of the response syntax of the <code>DescribeJob</code> action in the <code>JobMetadata</code> data type. The job logs can be accessed for up to 60 minutes after this request has been made. To access any of the job logs after 60 minutes have passed, you'll have to make another call to the <code>DescribeJob</code> action.</p>
/// <p>For import jobs, the PDF job report becomes available at the end of the import process. For export jobs, your job report typically becomes available while the Snow device for your job part is being delivered to you.</p>
/// <p>The job report provides you insight into the state of your Amazon S3 data transfer. The report includes details about your job or job part for your records.</p>
/// <p>For deeper visibility into the status of your transferred objects, you can look at the two associated logs: a success log and a failure log. The logs are saved in comma-separated value (CSV) format, and the name of each log includes the ID of the job or job part that the log describes.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct JobLogs {
    /// <p>A link to an Amazon S3 presigned URL where the job completion report is located.</p>
    #[doc(hidden)]
    pub job_completion_report_uri: std::option::Option<std::string::String>,
    /// <p>A link to an Amazon S3 presigned URL where the job success log is located.</p>
    #[doc(hidden)]
    pub job_success_log_uri: std::option::Option<std::string::String>,
    /// <p>A link to an Amazon S3 presigned URL where the job failure log is located.</p>
    #[doc(hidden)]
    pub job_failure_log_uri: std::option::Option<std::string::String>,
}
impl JobLogs {
    /// <p>A link to an Amazon S3 presigned URL where the job completion report is located.</p>
    pub fn job_completion_report_uri(&self) -> std::option::Option<&str> {
        self.job_completion_report_uri.as_deref()
    }
    /// <p>A link to an Amazon S3 presigned URL where the job success log is located.</p>
    pub fn job_success_log_uri(&self) -> std::option::Option<&str> {
        self.job_success_log_uri.as_deref()
    }
    /// <p>A link to an Amazon S3 presigned URL where the job failure log is located.</p>
    pub fn job_failure_log_uri(&self) -> std::option::Option<&str> {
        self.job_failure_log_uri.as_deref()
    }
}
impl JobLogs {
    /// Creates a new builder-style object to manufacture [`JobLogs`](crate::types::JobLogs).
    pub fn builder() -> crate::types::builders::JobLogsBuilder {
        crate::types::builders::JobLogsBuilder::default()
    }
}

/// A builder for [`JobLogs`](crate::types::JobLogs).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct JobLogsBuilder {
    pub(crate) job_completion_report_uri: std::option::Option<std::string::String>,
    pub(crate) job_success_log_uri: std::option::Option<std::string::String>,
    pub(crate) job_failure_log_uri: std::option::Option<std::string::String>,
}
impl JobLogsBuilder {
    /// <p>A link to an Amazon S3 presigned URL where the job completion report is located.</p>
    pub fn job_completion_report_uri(mut self, input: impl Into<std::string::String>) -> Self {
        self.job_completion_report_uri = Some(input.into());
        self
    }
    /// <p>A link to an Amazon S3 presigned URL where the job completion report is located.</p>
    pub fn set_job_completion_report_uri(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.job_completion_report_uri = input;
        self
    }
    /// <p>A link to an Amazon S3 presigned URL where the job success log is located.</p>
    pub fn job_success_log_uri(mut self, input: impl Into<std::string::String>) -> Self {
        self.job_success_log_uri = Some(input.into());
        self
    }
    /// <p>A link to an Amazon S3 presigned URL where the job success log is located.</p>
    pub fn set_job_success_log_uri(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.job_success_log_uri = input;
        self
    }
    /// <p>A link to an Amazon S3 presigned URL where the job failure log is located.</p>
    pub fn job_failure_log_uri(mut self, input: impl Into<std::string::String>) -> Self {
        self.job_failure_log_uri = Some(input.into());
        self
    }
    /// <p>A link to an Amazon S3 presigned URL where the job failure log is located.</p>
    pub fn set_job_failure_log_uri(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.job_failure_log_uri = input;
        self
    }
    /// Consumes the builder and constructs a [`JobLogs`](crate::types::JobLogs).
    pub fn build(self) -> crate::types::JobLogs {
        crate::types::JobLogs {
            job_completion_report_uri: self.job_completion_report_uri,
            job_success_log_uri: self.job_success_log_uri,
            job_failure_log_uri: self.job_failure_log_uri,
        }
    }
}
