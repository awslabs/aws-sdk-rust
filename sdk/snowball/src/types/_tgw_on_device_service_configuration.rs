// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>An object that represents the metadata and configuration settings for the Storage Gateway service Tape Gateway type on an Amazon Web Services Snow Family device.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct TgwOnDeviceServiceConfiguration {
    /// <p>The maximum number of virtual tapes to store on one Snow Family device. Due to physical resource limitations, this value must be set to 80 for Snowball Edge.</p>
    #[doc(hidden)]
    pub storage_limit: i32,
    /// <p>The scale unit of the virtual tapes on the device.</p>
    #[doc(hidden)]
    pub storage_unit: std::option::Option<crate::types::StorageUnit>,
}
impl TgwOnDeviceServiceConfiguration {
    /// <p>The maximum number of virtual tapes to store on one Snow Family device. Due to physical resource limitations, this value must be set to 80 for Snowball Edge.</p>
    pub fn storage_limit(&self) -> i32 {
        self.storage_limit
    }
    /// <p>The scale unit of the virtual tapes on the device.</p>
    pub fn storage_unit(&self) -> std::option::Option<&crate::types::StorageUnit> {
        self.storage_unit.as_ref()
    }
}
impl TgwOnDeviceServiceConfiguration {
    /// Creates a new builder-style object to manufacture [`TgwOnDeviceServiceConfiguration`](crate::types::TgwOnDeviceServiceConfiguration).
    pub fn builder() -> crate::types::builders::TgwOnDeviceServiceConfigurationBuilder {
        crate::types::builders::TgwOnDeviceServiceConfigurationBuilder::default()
    }
}

/// A builder for [`TgwOnDeviceServiceConfiguration`](crate::types::TgwOnDeviceServiceConfiguration).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct TgwOnDeviceServiceConfigurationBuilder {
    pub(crate) storage_limit: std::option::Option<i32>,
    pub(crate) storage_unit: std::option::Option<crate::types::StorageUnit>,
}
impl TgwOnDeviceServiceConfigurationBuilder {
    /// <p>The maximum number of virtual tapes to store on one Snow Family device. Due to physical resource limitations, this value must be set to 80 for Snowball Edge.</p>
    pub fn storage_limit(mut self, input: i32) -> Self {
        self.storage_limit = Some(input);
        self
    }
    /// <p>The maximum number of virtual tapes to store on one Snow Family device. Due to physical resource limitations, this value must be set to 80 for Snowball Edge.</p>
    pub fn set_storage_limit(mut self, input: std::option::Option<i32>) -> Self {
        self.storage_limit = input;
        self
    }
    /// <p>The scale unit of the virtual tapes on the device.</p>
    pub fn storage_unit(mut self, input: crate::types::StorageUnit) -> Self {
        self.storage_unit = Some(input);
        self
    }
    /// <p>The scale unit of the virtual tapes on the device.</p>
    pub fn set_storage_unit(
        mut self,
        input: std::option::Option<crate::types::StorageUnit>,
    ) -> Self {
        self.storage_unit = input;
        self
    }
    /// Consumes the builder and constructs a [`TgwOnDeviceServiceConfiguration`](crate::types::TgwOnDeviceServiceConfiguration).
    pub fn build(self) -> crate::types::TgwOnDeviceServiceConfiguration {
        crate::types::TgwOnDeviceServiceConfiguration {
            storage_limit: self.storage_limit.unwrap_or_default(),
            storage_unit: self.storage_unit,
        }
    }
}
