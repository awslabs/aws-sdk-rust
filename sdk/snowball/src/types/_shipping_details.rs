// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A job's shipping information, including inbound and outbound tracking numbers and shipping speed options.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ShippingDetails {
    /// <p>The shipping speed for a particular job. This speed doesn't dictate how soon you'll get the Snow device from the job's creation date. This speed represents how quickly it moves to its destination while in transit. Regional shipping speeds are as follows:</p>
    /// <ul>
    /// <li> <p>In Australia, you have access to express shipping. Typically, Snow devices shipped express are delivered in about a day.</p> </li>
    /// <li> <p>In the European Union (EU), you have access to express shipping. Typically, Snow devices shipped express are delivered in about a day. In addition, most countries in the EU have access to standard shipping, which typically takes less than a week, one way.</p> </li>
    /// <li> <p>In India, Snow devices are delivered in one to seven days.</p> </li>
    /// <li> <p>In the United States of America (US), you have access to one-day shipping and two-day shipping.</p> </li>
    /// </ul>
    #[doc(hidden)]
    pub shipping_option: std::option::Option<crate::types::ShippingOption>,
    /// <p>The <code>Status</code> and <code>TrackingNumber</code> values for a Snow device being returned to Amazon Web Services for a particular job.</p>
    #[doc(hidden)]
    pub inbound_shipment: std::option::Option<crate::types::Shipment>,
    /// <p>The <code>Status</code> and <code>TrackingNumber</code> values for a Snow device being delivered to the address that you specified for a particular job.</p>
    #[doc(hidden)]
    pub outbound_shipment: std::option::Option<crate::types::Shipment>,
}
impl ShippingDetails {
    /// <p>The shipping speed for a particular job. This speed doesn't dictate how soon you'll get the Snow device from the job's creation date. This speed represents how quickly it moves to its destination while in transit. Regional shipping speeds are as follows:</p>
    /// <ul>
    /// <li> <p>In Australia, you have access to express shipping. Typically, Snow devices shipped express are delivered in about a day.</p> </li>
    /// <li> <p>In the European Union (EU), you have access to express shipping. Typically, Snow devices shipped express are delivered in about a day. In addition, most countries in the EU have access to standard shipping, which typically takes less than a week, one way.</p> </li>
    /// <li> <p>In India, Snow devices are delivered in one to seven days.</p> </li>
    /// <li> <p>In the United States of America (US), you have access to one-day shipping and two-day shipping.</p> </li>
    /// </ul>
    pub fn shipping_option(&self) -> std::option::Option<&crate::types::ShippingOption> {
        self.shipping_option.as_ref()
    }
    /// <p>The <code>Status</code> and <code>TrackingNumber</code> values for a Snow device being returned to Amazon Web Services for a particular job.</p>
    pub fn inbound_shipment(&self) -> std::option::Option<&crate::types::Shipment> {
        self.inbound_shipment.as_ref()
    }
    /// <p>The <code>Status</code> and <code>TrackingNumber</code> values for a Snow device being delivered to the address that you specified for a particular job.</p>
    pub fn outbound_shipment(&self) -> std::option::Option<&crate::types::Shipment> {
        self.outbound_shipment.as_ref()
    }
}
impl ShippingDetails {
    /// Creates a new builder-style object to manufacture [`ShippingDetails`](crate::types::ShippingDetails).
    pub fn builder() -> crate::types::builders::ShippingDetailsBuilder {
        crate::types::builders::ShippingDetailsBuilder::default()
    }
}

/// A builder for [`ShippingDetails`](crate::types::ShippingDetails).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ShippingDetailsBuilder {
    pub(crate) shipping_option: std::option::Option<crate::types::ShippingOption>,
    pub(crate) inbound_shipment: std::option::Option<crate::types::Shipment>,
    pub(crate) outbound_shipment: std::option::Option<crate::types::Shipment>,
}
impl ShippingDetailsBuilder {
    /// <p>The shipping speed for a particular job. This speed doesn't dictate how soon you'll get the Snow device from the job's creation date. This speed represents how quickly it moves to its destination while in transit. Regional shipping speeds are as follows:</p>
    /// <ul>
    /// <li> <p>In Australia, you have access to express shipping. Typically, Snow devices shipped express are delivered in about a day.</p> </li>
    /// <li> <p>In the European Union (EU), you have access to express shipping. Typically, Snow devices shipped express are delivered in about a day. In addition, most countries in the EU have access to standard shipping, which typically takes less than a week, one way.</p> </li>
    /// <li> <p>In India, Snow devices are delivered in one to seven days.</p> </li>
    /// <li> <p>In the United States of America (US), you have access to one-day shipping and two-day shipping.</p> </li>
    /// </ul>
    pub fn shipping_option(mut self, input: crate::types::ShippingOption) -> Self {
        self.shipping_option = Some(input);
        self
    }
    /// <p>The shipping speed for a particular job. This speed doesn't dictate how soon you'll get the Snow device from the job's creation date. This speed represents how quickly it moves to its destination while in transit. Regional shipping speeds are as follows:</p>
    /// <ul>
    /// <li> <p>In Australia, you have access to express shipping. Typically, Snow devices shipped express are delivered in about a day.</p> </li>
    /// <li> <p>In the European Union (EU), you have access to express shipping. Typically, Snow devices shipped express are delivered in about a day. In addition, most countries in the EU have access to standard shipping, which typically takes less than a week, one way.</p> </li>
    /// <li> <p>In India, Snow devices are delivered in one to seven days.</p> </li>
    /// <li> <p>In the United States of America (US), you have access to one-day shipping and two-day shipping.</p> </li>
    /// </ul>
    pub fn set_shipping_option(
        mut self,
        input: std::option::Option<crate::types::ShippingOption>,
    ) -> Self {
        self.shipping_option = input;
        self
    }
    /// <p>The <code>Status</code> and <code>TrackingNumber</code> values for a Snow device being returned to Amazon Web Services for a particular job.</p>
    pub fn inbound_shipment(mut self, input: crate::types::Shipment) -> Self {
        self.inbound_shipment = Some(input);
        self
    }
    /// <p>The <code>Status</code> and <code>TrackingNumber</code> values for a Snow device being returned to Amazon Web Services for a particular job.</p>
    pub fn set_inbound_shipment(
        mut self,
        input: std::option::Option<crate::types::Shipment>,
    ) -> Self {
        self.inbound_shipment = input;
        self
    }
    /// <p>The <code>Status</code> and <code>TrackingNumber</code> values for a Snow device being delivered to the address that you specified for a particular job.</p>
    pub fn outbound_shipment(mut self, input: crate::types::Shipment) -> Self {
        self.outbound_shipment = Some(input);
        self
    }
    /// <p>The <code>Status</code> and <code>TrackingNumber</code> values for a Snow device being delivered to the address that you specified for a particular job.</p>
    pub fn set_outbound_shipment(
        mut self,
        input: std::option::Option<crate::types::Shipment>,
    ) -> Self {
        self.outbound_shipment = input;
        self
    }
    /// Consumes the builder and constructs a [`ShippingDetails`](crate::types::ShippingDetails).
    pub fn build(self) -> crate::types::ShippingDetails {
        crate::types::ShippingDetails {
            shipping_option: self.shipping_option,
            inbound_shipment: self.inbound_shipment,
            outbound_shipment: self.outbound_shipment,
        }
    }
}
