// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_update_job_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::update_job::UpdateJobInput,
) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    if let Some(var_1) = &input.job_id {
        object.key("JobId").string(var_1.as_str());
    }
    if let Some(var_2) = &input.role_arn {
        object.key("RoleARN").string(var_2.as_str());
    }
    if let Some(var_3) = &input.notification {
        #[allow(unused_mut)]
        let mut object_4 = object.key("Notification").start_object();
        crate::protocol_serde::shape_notification::ser_notification(&mut object_4, var_3)?;
        object_4.finish();
    }
    if let Some(var_5) = &input.resources {
        #[allow(unused_mut)]
        let mut object_6 = object.key("Resources").start_object();
        crate::protocol_serde::shape_job_resource::ser_job_resource(&mut object_6, var_5)?;
        object_6.finish();
    }
    if let Some(var_7) = &input.on_device_service_configuration {
        #[allow(unused_mut)]
        let mut object_8 = object.key("OnDeviceServiceConfiguration").start_object();
        crate::protocol_serde::shape_on_device_service_configuration::ser_on_device_service_configuration(&mut object_8, var_7)?;
        object_8.finish();
    }
    if let Some(var_9) = &input.address_id {
        object.key("AddressId").string(var_9.as_str());
    }
    if let Some(var_10) = &input.shipping_option {
        object.key("ShippingOption").string(var_10.as_str());
    }
    if let Some(var_11) = &input.description {
        object.key("Description").string(var_11.as_str());
    }
    if let Some(var_12) = &input.snowball_capacity_preference {
        object
            .key("SnowballCapacityPreference")
            .string(var_12.as_str());
    }
    if let Some(var_13) = &input.forwarding_address_id {
        object.key("ForwardingAddressId").string(var_13.as_str());
    }
    Ok(())
}
