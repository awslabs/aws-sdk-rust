// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct CreateReturnShippingLabelInput {
    /// <p>The ID for a job that you want to create the return shipping label for; for example, <code>JID123e4567-e89b-12d3-a456-426655440000</code>.</p>
    #[doc(hidden)]
    pub job_id: std::option::Option<std::string::String>,
    /// <p>The shipping speed for a particular job. This speed doesn't dictate how soon the device is returned to Amazon Web Services. This speed represents how quickly it moves to its destination while in transit. Regional shipping speeds are as follows:</p>
    #[doc(hidden)]
    pub shipping_option: std::option::Option<crate::types::ShippingOption>,
}
impl CreateReturnShippingLabelInput {
    /// <p>The ID for a job that you want to create the return shipping label for; for example, <code>JID123e4567-e89b-12d3-a456-426655440000</code>.</p>
    pub fn job_id(&self) -> std::option::Option<&str> {
        self.job_id.as_deref()
    }
    /// <p>The shipping speed for a particular job. This speed doesn't dictate how soon the device is returned to Amazon Web Services. This speed represents how quickly it moves to its destination while in transit. Regional shipping speeds are as follows:</p>
    pub fn shipping_option(&self) -> std::option::Option<&crate::types::ShippingOption> {
        self.shipping_option.as_ref()
    }
}
impl CreateReturnShippingLabelInput {
    /// Creates a new builder-style object to manufacture [`CreateReturnShippingLabelInput`](crate::operation::create_return_shipping_label::CreateReturnShippingLabelInput).
    pub fn builder() -> crate::operation::create_return_shipping_label::builders::CreateReturnShippingLabelInputBuilder{
        crate::operation::create_return_shipping_label::builders::CreateReturnShippingLabelInputBuilder::default()
    }
}

/// A builder for [`CreateReturnShippingLabelInput`](crate::operation::create_return_shipping_label::CreateReturnShippingLabelInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct CreateReturnShippingLabelInputBuilder {
    pub(crate) job_id: std::option::Option<std::string::String>,
    pub(crate) shipping_option: std::option::Option<crate::types::ShippingOption>,
}
impl CreateReturnShippingLabelInputBuilder {
    /// <p>The ID for a job that you want to create the return shipping label for; for example, <code>JID123e4567-e89b-12d3-a456-426655440000</code>.</p>
    pub fn job_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.job_id = Some(input.into());
        self
    }
    /// <p>The ID for a job that you want to create the return shipping label for; for example, <code>JID123e4567-e89b-12d3-a456-426655440000</code>.</p>
    pub fn set_job_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.job_id = input;
        self
    }
    /// <p>The shipping speed for a particular job. This speed doesn't dictate how soon the device is returned to Amazon Web Services. This speed represents how quickly it moves to its destination while in transit. Regional shipping speeds are as follows:</p>
    pub fn shipping_option(mut self, input: crate::types::ShippingOption) -> Self {
        self.shipping_option = Some(input);
        self
    }
    /// <p>The shipping speed for a particular job. This speed doesn't dictate how soon the device is returned to Amazon Web Services. This speed represents how quickly it moves to its destination while in transit. Regional shipping speeds are as follows:</p>
    pub fn set_shipping_option(
        mut self,
        input: std::option::Option<crate::types::ShippingOption>,
    ) -> Self {
        self.shipping_option = input;
        self
    }
    /// Consumes the builder and constructs a [`CreateReturnShippingLabelInput`](crate::operation::create_return_shipping_label::CreateReturnShippingLabelInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::create_return_shipping_label::CreateReturnShippingLabelInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::create_return_shipping_label::CreateReturnShippingLabelInput {
                job_id: self.job_id,
                shipping_option: self.shipping_option,
            },
        )
    }
}
