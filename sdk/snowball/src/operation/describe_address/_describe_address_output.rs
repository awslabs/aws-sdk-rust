// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DescribeAddressOutput {
    /// <p>The address that you want the Snow device(s) associated with a specific job to be shipped to.</p>
    #[doc(hidden)]
    pub address: std::option::Option<crate::types::Address>,
    _request_id: Option<String>,
}
impl DescribeAddressOutput {
    /// <p>The address that you want the Snow device(s) associated with a specific job to be shipped to.</p>
    pub fn address(&self) -> std::option::Option<&crate::types::Address> {
        self.address.as_ref()
    }
}
impl aws_http::request_id::RequestId for DescribeAddressOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl DescribeAddressOutput {
    /// Creates a new builder-style object to manufacture [`DescribeAddressOutput`](crate::operation::describe_address::DescribeAddressOutput).
    pub fn builder() -> crate::operation::describe_address::builders::DescribeAddressOutputBuilder {
        crate::operation::describe_address::builders::DescribeAddressOutputBuilder::default()
    }
}

/// A builder for [`DescribeAddressOutput`](crate::operation::describe_address::DescribeAddressOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DescribeAddressOutputBuilder {
    pub(crate) address: std::option::Option<crate::types::Address>,
    _request_id: Option<String>,
}
impl DescribeAddressOutputBuilder {
    /// <p>The address that you want the Snow device(s) associated with a specific job to be shipped to.</p>
    pub fn address(mut self, input: crate::types::Address) -> Self {
        self.address = Some(input);
        self
    }
    /// <p>The address that you want the Snow device(s) associated with a specific job to be shipped to.</p>
    pub fn set_address(mut self, input: std::option::Option<crate::types::Address>) -> Self {
        self.address = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`DescribeAddressOutput`](crate::operation::describe_address::DescribeAddressOutput).
    pub fn build(self) -> crate::operation::describe_address::DescribeAddressOutput {
        crate::operation::describe_address::DescribeAddressOutput {
            address: self.address,
            _request_id: self._request_id,
        }
    }
}
