// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateCluster`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`job_type(JobType)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::job_type) / [`set_job_type(Option<JobType>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::set_job_type): <p>The type of job for this cluster. Currently, the only job type supported for clusters is <code>LOCAL_USE</code>.</p>  <p>For more information, see "https://docs.aws.amazon.com/snowball/latest/snowcone-guide/snow-device-types.html" (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i> or "https://docs.aws.amazon.com/snowball/latest/developer-guide/snow-device-types.html" (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i>.</p>
    ///   - [`resources(JobResource)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::resources) / [`set_resources(Option<JobResource>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::set_resources): <p>The resources associated with the cluster job. These resources include Amazon S3 buckets and optional Lambda functions written in the Python language. </p>
    ///   - [`on_device_service_configuration(OnDeviceServiceConfiguration)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::on_device_service_configuration) / [`set_on_device_service_configuration(Option<OnDeviceServiceConfiguration>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::set_on_device_service_configuration): <p>Specifies the service or services on the Snow Family device that your transferred data will be exported from or imported into. Amazon Web Services Snow Family device clusters support Amazon S3 and NFS (Network File System).</p>
    ///   - [`description(impl Into<String>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::description) / [`set_description(Option<String>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::set_description): <p>An optional description of this specific cluster, for example <code>Environmental Data Cluster-01</code>.</p>
    ///   - [`address_id(impl Into<String>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::address_id) / [`set_address_id(Option<String>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::set_address_id): <p>The ID for the address that you want the cluster shipped to.</p>
    ///   - [`kms_key_arn(impl Into<String>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::kms_key_arn) / [`set_kms_key_arn(Option<String>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::set_kms_key_arn): <p>The <code>KmsKeyARN</code> value that you want to associate with this cluster. <code>KmsKeyARN</code> values are created by using the <a href="https://docs.aws.amazon.com/kms/latest/APIReference/API_CreateKey.html">CreateKey</a> API action in Key Management Service (KMS). </p>
    ///   - [`role_arn(impl Into<String>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::role_arn) / [`set_role_arn(Option<String>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::set_role_arn): <p>The <code>RoleARN</code> that you want to associate with this cluster. <code>RoleArn</code> values are created by using the <a href="https://docs.aws.amazon.com/IAM/latest/APIReference/API_CreateRole.html">CreateRole</a> API action in Identity and Access Management (IAM).</p>
    ///   - [`snowball_type(SnowballType)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::snowball_type) / [`set_snowball_type(Option<SnowballType>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::set_snowball_type): <p>The type of Snow Family devices to use for this cluster. </p> <note>   <p>For cluster jobs, Amazon Web Services Snow Family currently supports only the <code>EDGE</code> device type.</p>  </note>  <p>For more information, see "https://docs.aws.amazon.com/snowball/latest/snowcone-guide/snow-device-types.html" (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i> or "https://docs.aws.amazon.com/snowball/latest/developer-guide/snow-device-types.html" (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i>.</p>
    ///   - [`shipping_option(ShippingOption)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::shipping_option) / [`set_shipping_option(Option<ShippingOption>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::set_shipping_option): <p>The shipping speed for each node in this cluster. This speed doesn't dictate how soon you'll get each Snowball Edge device, rather it represents how quickly each device moves to its destination while in transit. Regional shipping speeds are as follows: </p>  <ul>   <li> <p>In Australia, you have access to express shipping. Typically, Snow devices shipped express are delivered in about a day.</p> </li>   <li> <p>In the European Union (EU), you have access to express shipping. Typically, Snow devices shipped express are delivered in about a day. In addition, most countries in the EU have access to standard shipping, which typically takes less than a week, one way.</p> </li>   <li> <p>In India, Snow devices are delivered in one to seven days.</p> </li>   <li> <p>In the United States of America (US), you have access to one-day shipping and two-day shipping.</p> </li>  </ul>  <ul>   <li> <p>In Australia, you have access to express shipping. Typically, devices shipped express are delivered in about a day.</p> </li>   <li> <p>In the European Union (EU), you have access to express shipping. Typically, Snow devices shipped express are delivered in about a day. In addition, most countries in the EU have access to standard shipping, which typically takes less than a week, one way.</p> </li>   <li> <p>In India, Snow devices are delivered in one to seven days.</p> </li>   <li> <p>In the US, you have access to one-day shipping and two-day shipping.</p> </li>  </ul>
    ///   - [`notification(Notification)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::notification) / [`set_notification(Option<Notification>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::set_notification): <p>The Amazon Simple Notification Service (Amazon SNS) notification settings for this cluster.</p>
    ///   - [`forwarding_address_id(impl Into<String>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::forwarding_address_id) / [`set_forwarding_address_id(Option<String>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::set_forwarding_address_id): <p>The forwarding address ID for a cluster. This field is not supported in most regions.</p>
    ///   - [`tax_documents(TaxDocuments)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::tax_documents) / [`set_tax_documents(Option<TaxDocuments>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::set_tax_documents): <p>The tax documents required in your Amazon Web Services Region.</p>
    ///   - [`remote_management(RemoteManagement)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::remote_management) / [`set_remote_management(Option<RemoteManagement>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::set_remote_management): <p>Allows you to securely operate and manage Snow devices in a cluster remotely from outside of your internal network. When set to <code>INSTALLED_AUTOSTART</code>, remote management will automatically be available when the device arrives at your location. Otherwise, you need to use the Snowball Client to manage the device.</p>
    /// - On success, responds with [`CreateClusterOutput`](crate::operation::create_cluster::CreateClusterOutput) with field(s):
    ///   - [`cluster_id(Option<String>)`](crate::operation::create_cluster::CreateClusterOutput::cluster_id): <p>The automatically generated ID for a cluster.</p>
    /// - On failure, responds with [`SdkError<CreateClusterError>`](crate::operation::create_cluster::CreateClusterError)
    pub fn create_cluster(
        &self,
    ) -> crate::operation::create_cluster::builders::CreateClusterFluentBuilder {
        crate::operation::create_cluster::builders::CreateClusterFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
