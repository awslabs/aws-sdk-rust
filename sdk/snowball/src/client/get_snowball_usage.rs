// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetSnowballUsage`](crate::operation::get_snowball_usage::builders::GetSnowballUsageFluentBuilder) operation.
    ///
    /// - The fluent builder takes no input, just [`send`](crate::operation::get_snowball_usage::builders::GetSnowballUsageFluentBuilder::send) it.
    /// - On success, responds with [`GetSnowballUsageOutput`](crate::operation::get_snowball_usage::GetSnowballUsageOutput) with field(s):
    ///   - [`snowball_limit(Option<i32>)`](crate::operation::get_snowball_usage::GetSnowballUsageOutput::snowball_limit): <p>The service limit for number of Snow devices this account can have at once. The default service limit is 1 (one).</p>
    ///   - [`snowballs_in_use(Option<i32>)`](crate::operation::get_snowball_usage::GetSnowballUsageOutput::snowballs_in_use): <p>The number of Snow devices that this account is currently using.</p>
    /// - On failure, responds with [`SdkError<GetSnowballUsageError>`](crate::operation::get_snowball_usage::GetSnowballUsageError)
    pub fn get_snowball_usage(
        &self,
    ) -> crate::operation::get_snowball_usage::builders::GetSnowballUsageFluentBuilder {
        crate::operation::get_snowball_usage::builders::GetSnowballUsageFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
