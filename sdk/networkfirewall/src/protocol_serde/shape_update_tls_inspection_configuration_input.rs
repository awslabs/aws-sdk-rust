// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_update_tls_inspection_configuration_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::update_tls_inspection_configuration::UpdateTlsInspectionConfigurationInput,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.tls_inspection_configuration_arn {
        object.key("TLSInspectionConfigurationArn").string(var_1.as_str());
    }
    if let Some(var_2) = &input.tls_inspection_configuration_name {
        object.key("TLSInspectionConfigurationName").string(var_2.as_str());
    }
    if let Some(var_3) = &input.tls_inspection_configuration {
        #[allow(unused_mut)]
        let mut object_4 = object.key("TLSInspectionConfiguration").start_object();
        crate::protocol_serde::shape_tls_inspection_configuration::ser_tls_inspection_configuration(&mut object_4, var_3)?;
        object_4.finish();
    }
    if let Some(var_5) = &input.description {
        object.key("Description").string(var_5.as_str());
    }
    if let Some(var_6) = &input.encryption_configuration {
        #[allow(unused_mut)]
        let mut object_7 = object.key("EncryptionConfiguration").start_object();
        crate::protocol_serde::shape_encryption_configuration::ser_encryption_configuration(&mut object_7, var_6)?;
        object_7.finish();
    }
    if let Some(var_8) = &input.update_token {
        object.key("UpdateToken").string(var_8.as_str());
    }
    Ok(())
}
