// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListRuleGroups`](crate::operation::list_rule_groups::builders::ListRuleGroupsFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::list_rule_groups::builders::ListRuleGroupsFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`next_token(impl Into<String>)`](crate::operation::list_rule_groups::builders::ListRuleGroupsFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::list_rule_groups::builders::ListRuleGroupsFluentBuilder::set_next_token):<br>required: **false**<br><p>When you request a list of objects with a <code>MaxResults</code> setting, if the number of objects that are still available for retrieval exceeds the maximum you requested, Network Firewall returns a <code>NextToken</code> value in the response. To retrieve the next batch of objects, use the token returned from the prior request in your next request.</p><br>
    ///   - [`max_results(i32)`](crate::operation::list_rule_groups::builders::ListRuleGroupsFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::list_rule_groups::builders::ListRuleGroupsFluentBuilder::set_max_results):<br>required: **false**<br><p>The maximum number of objects that you want Network Firewall to return for this request. If more objects are available, in the response, Network Firewall provides a <code>NextToken</code> value that you can use in a subsequent call to get the next batch of objects.</p><br>
    ///   - [`scope(ResourceManagedStatus)`](crate::operation::list_rule_groups::builders::ListRuleGroupsFluentBuilder::scope) / [`set_scope(Option<ResourceManagedStatus>)`](crate::operation::list_rule_groups::builders::ListRuleGroupsFluentBuilder::set_scope):<br>required: **false**<br><p>The scope of the request. The default setting of <code>ACCOUNT</code> or a setting of <code>NULL</code> returns all of the rule groups in your account. A setting of <code>MANAGED</code> returns all available managed rule groups.</p><br>
    ///   - [`managed_type(ResourceManagedType)`](crate::operation::list_rule_groups::builders::ListRuleGroupsFluentBuilder::managed_type) / [`set_managed_type(Option<ResourceManagedType>)`](crate::operation::list_rule_groups::builders::ListRuleGroupsFluentBuilder::set_managed_type):<br>required: **false**<br><p>Indicates the general category of the Amazon Web Services managed rule group.</p><br>
    ///   - [`r#type(RuleGroupType)`](crate::operation::list_rule_groups::builders::ListRuleGroupsFluentBuilder::type) / [`set_type(Option<RuleGroupType>)`](crate::operation::list_rule_groups::builders::ListRuleGroupsFluentBuilder::set_type):<br>required: **false**<br><p>Indicates whether the rule group is stateless or stateful. If the rule group is stateless, it contains stateless rules. If it is stateful, it contains stateful rules.</p><br>
    /// - On success, responds with [`ListRuleGroupsOutput`](crate::operation::list_rule_groups::ListRuleGroupsOutput) with field(s):
    ///   - [`next_token(Option<String>)`](crate::operation::list_rule_groups::ListRuleGroupsOutput::next_token): <p>When you request a list of objects with a <code>MaxResults</code> setting, if the number of objects that are still available for retrieval exceeds the maximum you requested, Network Firewall returns a <code>NextToken</code> value in the response. To retrieve the next batch of objects, use the token returned from the prior request in your next request.</p>
    ///   - [`rule_groups(Option<Vec::<RuleGroupMetadata>>)`](crate::operation::list_rule_groups::ListRuleGroupsOutput::rule_groups): <p>The rule group metadata objects that you've defined. Depending on your setting for max results and the number of rule groups, this might not be the full list. </p>
    /// - On failure, responds with [`SdkError<ListRuleGroupsError>`](crate::operation::list_rule_groups::ListRuleGroupsError)
    pub fn list_rule_groups(&self) -> crate::operation::list_rule_groups::builders::ListRuleGroupsFluentBuilder {
        crate::operation::list_rule_groups::builders::ListRuleGroupsFluentBuilder::new(self.handle.clone())
    }
}
