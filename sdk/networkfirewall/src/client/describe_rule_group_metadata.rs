// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeRuleGroupMetadata`](crate::client::fluent_builders::DescribeRuleGroupMetadata) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`rule_group_name(impl Into<String>)`](crate::client::fluent_builders::DescribeRuleGroupMetadata::rule_group_name) / [`set_rule_group_name(Option<String>)`](crate::client::fluent_builders::DescribeRuleGroupMetadata::set_rule_group_name): <p>The descriptive name of the rule group. You can't change the name of a rule group after you create it.</p>  <p>You must specify the ARN or the name, and you can specify both. </p>
    ///   - [`rule_group_arn(impl Into<String>)`](crate::client::fluent_builders::DescribeRuleGroupMetadata::rule_group_arn) / [`set_rule_group_arn(Option<String>)`](crate::client::fluent_builders::DescribeRuleGroupMetadata::set_rule_group_arn): <p>The descriptive name of the rule group. You can't change the name of a rule group after you create it.</p>  <p>You must specify the ARN or the name, and you can specify both. </p>
    ///   - [`r#type(RuleGroupType)`](crate::client::fluent_builders::DescribeRuleGroupMetadata::type) / [`set_type(Option<RuleGroupType>)`](crate::client::fluent_builders::DescribeRuleGroupMetadata::set_type): <p>Indicates whether the rule group is stateless or stateful. If the rule group is stateless, it contains stateless rules. If it is stateful, it contains stateful rules. </p> <note>   <p>This setting is required for requests that do not include the <code>RuleGroupARN</code>.</p>  </note>
    /// - On success, responds with [`DescribeRuleGroupMetadataOutput`](crate::output::DescribeRuleGroupMetadataOutput) with field(s):
    ///   - [`rule_group_arn(Option<String>)`](crate::output::DescribeRuleGroupMetadataOutput::rule_group_arn): <p>The descriptive name of the rule group. You can't change the name of a rule group after you create it.</p>  <p>You must specify the ARN or the name, and you can specify both. </p>
    ///   - [`rule_group_name(Option<String>)`](crate::output::DescribeRuleGroupMetadataOutput::rule_group_name): <p>The descriptive name of the rule group. You can't change the name of a rule group after you create it.</p>  <p>You must specify the ARN or the name, and you can specify both. </p>
    ///   - [`description(Option<String>)`](crate::output::DescribeRuleGroupMetadataOutput::description): <p>Returns the metadata objects for the specified rule group. </p>
    ///   - [`r#type(Option<RuleGroupType>)`](crate::output::DescribeRuleGroupMetadataOutput::type): <p>Indicates whether the rule group is stateless or stateful. If the rule group is stateless, it contains stateless rules. If it is stateful, it contains stateful rules. </p> <note>   <p>This setting is required for requests that do not include the <code>RuleGroupARN</code>.</p>  </note>
    ///   - [`capacity(Option<i32>)`](crate::output::DescribeRuleGroupMetadataOutput::capacity): <p>The maximum operating resources that this rule group can use. Rule group capacity is fixed at creation. When you update a rule group, you are limited to this capacity. When you reference a rule group from a firewall policy, Network Firewall reserves this capacity for the rule group. </p>  <p>You can retrieve the capacity that would be required for a rule group before you create the rule group by calling <code>CreateRuleGroup</code> with <code>DryRun</code> set to <code>TRUE</code>. </p>
    ///   - [`stateful_rule_options(Option<StatefulRuleOptions>)`](crate::output::DescribeRuleGroupMetadataOutput::stateful_rule_options): <p>Additional options governing how Network Firewall handles the rule group. You can only use these for stateful rule groups.</p>
    ///   - [`last_modified_time(Option<DateTime>)`](crate::output::DescribeRuleGroupMetadataOutput::last_modified_time): <p>The last time that the rule group was changed.</p>
    /// - On failure, responds with [`SdkError<DescribeRuleGroupMetadataError>`](crate::error::DescribeRuleGroupMetadataError)
    pub fn describe_rule_group_metadata(
        &self,
    ) -> crate::client::fluent_builders::DescribeRuleGroupMetadata {
        crate::client::fluent_builders::DescribeRuleGroupMetadata::new(self.handle.clone())
    }
}
