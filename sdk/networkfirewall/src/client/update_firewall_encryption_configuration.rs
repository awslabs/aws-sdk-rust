// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateFirewallEncryptionConfiguration`](crate::operation::update_firewall_encryption_configuration::builders::UpdateFirewallEncryptionConfigurationFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`update_token(impl Into<String>)`](crate::operation::update_firewall_encryption_configuration::builders::UpdateFirewallEncryptionConfigurationFluentBuilder::update_token) / [`set_update_token(Option<String>)`](crate::operation::update_firewall_encryption_configuration::builders::UpdateFirewallEncryptionConfigurationFluentBuilder::set_update_token): <p>An optional token that you can use for optimistic locking. Network Firewall returns a token to your requests that access the firewall. The token marks the state of the firewall resource at the time of the request. </p>  <p>To make an unconditional change to the firewall, omit the token in your update request. Without the token, Network Firewall performs your updates regardless of whether the firewall has changed since you last retrieved it.</p>  <p>To make a conditional change to the firewall, provide the token in your update request. Network Firewall uses the token to ensure that the firewall hasn't changed since you last retrieved it. If it has changed, the operation fails with an <code>InvalidTokenException</code>. If this happens, retrieve the firewall again to get a current copy of it with a new token. Reapply your changes as needed, then try the operation again using the new token. </p>
    ///   - [`firewall_arn(impl Into<String>)`](crate::operation::update_firewall_encryption_configuration::builders::UpdateFirewallEncryptionConfigurationFluentBuilder::firewall_arn) / [`set_firewall_arn(Option<String>)`](crate::operation::update_firewall_encryption_configuration::builders::UpdateFirewallEncryptionConfigurationFluentBuilder::set_firewall_arn): <p>The Amazon Resource Name (ARN) of the firewall.</p>
    ///   - [`firewall_name(impl Into<String>)`](crate::operation::update_firewall_encryption_configuration::builders::UpdateFirewallEncryptionConfigurationFluentBuilder::firewall_name) / [`set_firewall_name(Option<String>)`](crate::operation::update_firewall_encryption_configuration::builders::UpdateFirewallEncryptionConfigurationFluentBuilder::set_firewall_name): <p>The descriptive name of the firewall. You can't change the name of a firewall after you create it.</p>
    ///   - [`encryption_configuration(EncryptionConfiguration)`](crate::operation::update_firewall_encryption_configuration::builders::UpdateFirewallEncryptionConfigurationFluentBuilder::encryption_configuration) / [`set_encryption_configuration(Option<EncryptionConfiguration>)`](crate::operation::update_firewall_encryption_configuration::builders::UpdateFirewallEncryptionConfigurationFluentBuilder::set_encryption_configuration): <p>A complex type that contains optional Amazon Web Services Key Management Service (KMS) encryption settings for your Network Firewall resources. Your data is encrypted by default with an Amazon Web Services owned key that Amazon Web Services owns and manages for you. You can use either the Amazon Web Services owned key, or provide your own customer managed key. To learn more about KMS encryption of your Network Firewall resources, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/kms-encryption-at-rest.html">Encryption at rest with Amazon Web Services Key Managment Service</a> in the <i>Network Firewall Developer Guide</i>.</p>
    /// - On success, responds with [`UpdateFirewallEncryptionConfigurationOutput`](crate::operation::update_firewall_encryption_configuration::UpdateFirewallEncryptionConfigurationOutput) with field(s):
    ///   - [`firewall_arn(Option<String>)`](crate::operation::update_firewall_encryption_configuration::UpdateFirewallEncryptionConfigurationOutput::firewall_arn): <p>The Amazon Resource Name (ARN) of the firewall.</p>
    ///   - [`firewall_name(Option<String>)`](crate::operation::update_firewall_encryption_configuration::UpdateFirewallEncryptionConfigurationOutput::firewall_name): <p>The descriptive name of the firewall. You can't change the name of a firewall after you create it.</p>
    ///   - [`update_token(Option<String>)`](crate::operation::update_firewall_encryption_configuration::UpdateFirewallEncryptionConfigurationOutput::update_token): <p>An optional token that you can use for optimistic locking. Network Firewall returns a token to your requests that access the firewall. The token marks the state of the firewall resource at the time of the request. </p>  <p>To make an unconditional change to the firewall, omit the token in your update request. Without the token, Network Firewall performs your updates regardless of whether the firewall has changed since you last retrieved it.</p>  <p>To make a conditional change to the firewall, provide the token in your update request. Network Firewall uses the token to ensure that the firewall hasn't changed since you last retrieved it. If it has changed, the operation fails with an <code>InvalidTokenException</code>. If this happens, retrieve the firewall again to get a current copy of it with a new token. Reapply your changes as needed, then try the operation again using the new token. </p>
    ///   - [`encryption_configuration(Option<EncryptionConfiguration>)`](crate::operation::update_firewall_encryption_configuration::UpdateFirewallEncryptionConfigurationOutput::encryption_configuration): <p>A complex type that contains optional Amazon Web Services Key Management Service (KMS) encryption settings for your Network Firewall resources. Your data is encrypted by default with an Amazon Web Services owned key that Amazon Web Services owns and manages for you. You can use either the Amazon Web Services owned key, or provide your own customer managed key. To learn more about KMS encryption of your Network Firewall resources, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/kms-encryption-at-rest.html">Encryption at rest with Amazon Web Services Key Managment Service</a> in the <i>Network Firewall Developer Guide</i>.</p>
    /// - On failure, responds with [`SdkError<UpdateFirewallEncryptionConfigurationError>`](crate::operation::update_firewall_encryption_configuration::UpdateFirewallEncryptionConfigurationError)
    pub fn update_firewall_encryption_configuration(&self) -> crate::operation::update_firewall_encryption_configuration::builders::UpdateFirewallEncryptionConfigurationFluentBuilder{
        crate::operation::update_firewall_encryption_configuration::builders::UpdateFirewallEncryptionConfigurationFluentBuilder::new(self.handle.clone())
    }
}
