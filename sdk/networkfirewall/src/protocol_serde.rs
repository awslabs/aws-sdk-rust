// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) fn type_erase_result<O, E>(
    result: ::std::result::Result<O, E>,
) -> ::std::result::Result<
    ::aws_smithy_runtime_api::client::interceptors::context::Output,
    ::aws_smithy_runtime_api::client::orchestrator::OrchestratorError<::aws_smithy_runtime_api::client::interceptors::context::Error>,
>
where
    O: ::std::fmt::Debug + ::std::marker::Send + ::std::marker::Sync + 'static,
    E: ::std::error::Error + std::fmt::Debug + ::std::marker::Send + ::std::marker::Sync + 'static,
{
    result
        .map(|output| ::aws_smithy_runtime_api::client::interceptors::context::Output::erase(output))
        .map_err(|error| ::aws_smithy_runtime_api::client::interceptors::context::Error::erase(error))
        .map_err(::std::convert::Into::into)
}

pub fn parse_http_error_metadata(
    _response_status: u16,
    response_headers: &::http::HeaderMap,
    response_body: &[u8],
) -> Result<::aws_smithy_types::error::metadata::Builder, ::aws_smithy_json::deserialize::error::DeserializeError> {
    crate::json_errors::parse_error_metadata(response_body, response_headers)
}

pub(crate) mod shape_associate_firewall_policy;

pub(crate) mod shape_associate_subnets;

pub(crate) mod shape_create_firewall;

pub(crate) mod shape_create_firewall_policy;

pub(crate) mod shape_create_rule_group;

pub(crate) mod shape_create_tls_inspection_configuration;

pub(crate) mod shape_delete_firewall;

pub(crate) mod shape_delete_firewall_policy;

pub(crate) mod shape_delete_resource_policy;

pub(crate) mod shape_delete_rule_group;

pub(crate) mod shape_delete_tls_inspection_configuration;

pub(crate) mod shape_describe_firewall;

pub(crate) mod shape_describe_firewall_policy;

pub(crate) mod shape_describe_logging_configuration;

pub(crate) mod shape_describe_resource_policy;

pub(crate) mod shape_describe_rule_group;

pub(crate) mod shape_describe_rule_group_metadata;

pub(crate) mod shape_describe_tls_inspection_configuration;

pub(crate) mod shape_disassociate_subnets;

pub(crate) mod shape_list_firewall_policies;

pub(crate) mod shape_list_firewalls;

pub(crate) mod shape_list_rule_groups;

pub(crate) mod shape_list_tags_for_resource;

pub(crate) mod shape_list_tls_inspection_configurations;

pub(crate) mod shape_put_resource_policy;

pub(crate) mod shape_tag_resource;

pub(crate) mod shape_untag_resource;

pub(crate) mod shape_update_firewall_delete_protection;

pub(crate) mod shape_update_firewall_description;

pub(crate) mod shape_update_firewall_encryption_configuration;

pub(crate) mod shape_update_firewall_policy;

pub(crate) mod shape_update_firewall_policy_change_protection;

pub(crate) mod shape_update_logging_configuration;

pub(crate) mod shape_update_rule_group;

pub(crate) mod shape_update_subnet_change_protection;

pub(crate) mod shape_update_tls_inspection_configuration;

pub(crate) fn or_empty_doc(data: &[u8]) -> &[u8] {
    if data.is_empty() {
        b"{}"
    } else {
        data
    }
}

pub(crate) mod shape_associate_firewall_policy_input;

pub(crate) mod shape_associate_subnets_input;

pub(crate) mod shape_create_firewall_input;

pub(crate) mod shape_create_firewall_policy_input;

pub(crate) mod shape_create_rule_group_input;

pub(crate) mod shape_create_tls_inspection_configuration_input;

pub(crate) mod shape_delete_firewall_input;

pub(crate) mod shape_delete_firewall_policy_input;

pub(crate) mod shape_delete_resource_policy_input;

pub(crate) mod shape_delete_rule_group_input;

pub(crate) mod shape_delete_tls_inspection_configuration_input;

pub(crate) mod shape_describe_firewall_input;

pub(crate) mod shape_describe_firewall_policy_input;

pub(crate) mod shape_describe_logging_configuration_input;

pub(crate) mod shape_describe_resource_policy_input;

pub(crate) mod shape_describe_rule_group_input;

pub(crate) mod shape_describe_rule_group_metadata_input;

pub(crate) mod shape_describe_tls_inspection_configuration_input;

pub(crate) mod shape_disassociate_subnets_input;

pub(crate) mod shape_insufficient_capacity_exception;

pub(crate) mod shape_internal_server_error;

pub(crate) mod shape_invalid_operation_exception;

pub(crate) mod shape_invalid_request_exception;

pub(crate) mod shape_invalid_resource_policy_exception;

pub(crate) mod shape_invalid_token_exception;

pub(crate) mod shape_limit_exceeded_exception;

pub(crate) mod shape_list_firewall_policies_input;

pub(crate) mod shape_list_firewalls_input;

pub(crate) mod shape_list_rule_groups_input;

pub(crate) mod shape_list_tags_for_resource_input;

pub(crate) mod shape_list_tls_inspection_configurations_input;

pub(crate) mod shape_log_destination_permission_exception;

pub(crate) mod shape_put_resource_policy_input;

pub(crate) mod shape_resource_not_found_exception;

pub(crate) mod shape_resource_owner_check_exception;

pub(crate) mod shape_tag_resource_input;

pub(crate) mod shape_throttling_exception;

pub(crate) mod shape_unsupported_operation_exception;

pub(crate) mod shape_untag_resource_input;

pub(crate) mod shape_update_firewall_delete_protection_input;

pub(crate) mod shape_update_firewall_description_input;

pub(crate) mod shape_update_firewall_encryption_configuration_input;

pub(crate) mod shape_update_firewall_policy_change_protection_input;

pub(crate) mod shape_update_firewall_policy_input;

pub(crate) mod shape_update_logging_configuration_input;

pub(crate) mod shape_update_rule_group_input;

pub(crate) mod shape_update_subnet_change_protection_input;

pub(crate) mod shape_update_tls_inspection_configuration_input;

pub(crate) mod shape_encryption_configuration;

pub(crate) mod shape_firewall;

pub(crate) mod shape_firewall_policies;

pub(crate) mod shape_firewall_policy;

pub(crate) mod shape_firewall_policy_response;

pub(crate) mod shape_firewall_status;

pub(crate) mod shape_firewalls;

pub(crate) mod shape_logging_configuration;

pub(crate) mod shape_rule_group;

pub(crate) mod shape_rule_group_response;

pub(crate) mod shape_rule_groups;

pub(crate) mod shape_source_metadata;

pub(crate) mod shape_stateful_rule_options;

pub(crate) mod shape_subnet_mapping;

pub(crate) mod shape_subnet_mappings;

pub(crate) mod shape_tag;

pub(crate) mod shape_tag_list;

pub(crate) mod shape_tls_inspection_configuration;

pub(crate) mod shape_tls_inspection_configuration_response;

pub(crate) mod shape_tls_inspection_configurations;

pub(crate) mod shape_capacity_usage_summary;

pub(crate) mod shape_certificates;

pub(crate) mod shape_custom_action;

pub(crate) mod shape_custom_actions;

pub(crate) mod shape_firewall_metadata;

pub(crate) mod shape_firewall_policy_metadata;

pub(crate) mod shape_log_destination_config;

pub(crate) mod shape_log_destination_configs;

pub(crate) mod shape_policy_variables;

pub(crate) mod shape_reference_sets;

pub(crate) mod shape_rule_group_metadata;

pub(crate) mod shape_rule_variables;

pub(crate) mod shape_rules_source;

pub(crate) mod shape_server_certificate_configuration;

pub(crate) mod shape_server_certificate_configurations;

pub(crate) mod shape_stateful_actions;

pub(crate) mod shape_stateful_engine_options;

pub(crate) mod shape_stateful_rule_group_reference;

pub(crate) mod shape_stateful_rule_group_references;

pub(crate) mod shape_stateless_actions;

pub(crate) mod shape_stateless_rule_group_reference;

pub(crate) mod shape_stateless_rule_group_references;

pub(crate) mod shape_sync_states;

pub(crate) mod shape_tls_certificate_data;

pub(crate) mod shape_tls_inspection_configuration_metadata;

pub(crate) mod shape_action_definition;

pub(crate) mod shape_check_certificate_revocation_status_actions;

pub(crate) mod shape_cidr_summary;

pub(crate) mod shape_ip_set;

pub(crate) mod shape_ip_set_reference;

pub(crate) mod shape_ip_set_reference_map;

pub(crate) mod shape_ip_sets;

pub(crate) mod shape_port_set;

pub(crate) mod shape_port_sets;

pub(crate) mod shape_rules_source_list;

pub(crate) mod shape_server_certificate;

pub(crate) mod shape_server_certificate_scope;

pub(crate) mod shape_stateful_rule;

pub(crate) mod shape_stateful_rule_group_override;

pub(crate) mod shape_stateful_rules;

pub(crate) mod shape_stateless_rules_and_custom_actions;

pub(crate) mod shape_sync_state;

pub(crate) mod shape_address;

pub(crate) mod shape_attachment;

pub(crate) mod shape_header;

pub(crate) mod shape_ip_set_metadata_map;

pub(crate) mod shape_log_destination_map;

pub(crate) mod shape_port_range;

pub(crate) mod shape_publish_metric_action;

pub(crate) mod shape_rule_option;

pub(crate) mod shape_rule_targets;

pub(crate) mod shape_server_certificate_scopes;

pub(crate) mod shape_server_certificates;

pub(crate) mod shape_stateless_rule;

pub(crate) mod shape_stateless_rules;

pub(crate) mod shape_sync_state_config;

pub(crate) mod shape_target_types;

pub(crate) mod shape_dimension;

pub(crate) mod shape_ip_set_metadata;

pub(crate) mod shape_per_object_status;

pub(crate) mod shape_rule_definition;

pub(crate) mod shape_rule_options;

pub(crate) mod shape_variable_definition_list;

pub(crate) mod shape_addresses;

pub(crate) mod shape_dimensions;

pub(crate) mod shape_match_attributes;

pub(crate) mod shape_port_ranges;

pub(crate) mod shape_protocol_numbers;

pub(crate) mod shape_settings;

pub(crate) mod shape_tcp_flag_field;

pub(crate) mod shape_tcp_flags;

pub(crate) mod shape_flags;
