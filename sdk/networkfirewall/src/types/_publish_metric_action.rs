// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Stateless inspection criteria that publishes the specified metrics to Amazon CloudWatch for the matching packet. This setting defines a CloudWatch dimension value to be published.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct PublishMetricAction {
    /// <p></p>
    #[doc(hidden)]
    pub dimensions: std::option::Option<std::vec::Vec<crate::types::Dimension>>,
}
impl PublishMetricAction {
    /// <p></p>
    pub fn dimensions(&self) -> std::option::Option<&[crate::types::Dimension]> {
        self.dimensions.as_deref()
    }
}
impl PublishMetricAction {
    /// Creates a new builder-style object to manufacture [`PublishMetricAction`](crate::types::PublishMetricAction).
    pub fn builder() -> crate::types::builders::PublishMetricActionBuilder {
        crate::types::builders::PublishMetricActionBuilder::default()
    }
}

/// A builder for [`PublishMetricAction`](crate::types::PublishMetricAction).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct PublishMetricActionBuilder {
    pub(crate) dimensions: std::option::Option<std::vec::Vec<crate::types::Dimension>>,
}
impl PublishMetricActionBuilder {
    /// Appends an item to `dimensions`.
    ///
    /// To override the contents of this collection use [`set_dimensions`](Self::set_dimensions).
    ///
    /// <p></p>
    pub fn dimensions(mut self, input: crate::types::Dimension) -> Self {
        let mut v = self.dimensions.unwrap_or_default();
        v.push(input);
        self.dimensions = Some(v);
        self
    }
    /// <p></p>
    pub fn set_dimensions(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::Dimension>>,
    ) -> Self {
        self.dimensions = input;
        self
    }
    /// Consumes the builder and constructs a [`PublishMetricAction`](crate::types::PublishMetricAction).
    pub fn build(self) -> crate::types::PublishMetricAction {
        crate::types::PublishMetricAction {
            dimensions: self.dimensions,
        }
    }
}
