// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>An optional, non-standard action to use for stateless packet handling. You can define this in addition to the standard action that you must specify. </p>
/// <p>You define and name the custom actions that you want to be able to use, and then you reference them by name in your actions settings. </p>
/// <p>You can use custom actions in the following places: </p>
/// <ul>
/// <li> <p>In a rule group's <code>StatelessRulesAndCustomActions</code> specification. The custom actions are available for use by name inside the <code>StatelessRulesAndCustomActions</code> where you define them. You can use them for your stateless rule actions to specify what to do with a packet that matches the rule's match attributes. </p> </li>
/// <li> <p>In a <code>FirewallPolicy</code> specification, in <code>StatelessCustomActions</code>. The custom actions are available for use inside the policy where you define them. You can use them for the policy's default stateless actions settings to specify what to do with packets that don't match any of the policy's stateless rules. </p> </li>
/// </ul>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct CustomAction {
    /// <p>The descriptive name of the custom action. You can't change the name of a custom action after you create it.</p>
    pub action_name: ::std::string::String,
    /// <p>The custom action associated with the action name.</p>
    pub action_definition: ::std::option::Option<crate::types::ActionDefinition>,
}
impl CustomAction {
    /// <p>The descriptive name of the custom action. You can't change the name of a custom action after you create it.</p>
    pub fn action_name(&self) -> &str {
        use std::ops::Deref;
        self.action_name.deref()
    }
    /// <p>The custom action associated with the action name.</p>
    pub fn action_definition(&self) -> ::std::option::Option<&crate::types::ActionDefinition> {
        self.action_definition.as_ref()
    }
}
impl CustomAction {
    /// Creates a new builder-style object to manufacture [`CustomAction`](crate::types::CustomAction).
    pub fn builder() -> crate::types::builders::CustomActionBuilder {
        crate::types::builders::CustomActionBuilder::default()
    }
}

/// A builder for [`CustomAction`](crate::types::CustomAction).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct CustomActionBuilder {
    pub(crate) action_name: ::std::option::Option<::std::string::String>,
    pub(crate) action_definition: ::std::option::Option<crate::types::ActionDefinition>,
}
impl CustomActionBuilder {
    /// <p>The descriptive name of the custom action. You can't change the name of a custom action after you create it.</p>
    /// This field is required.
    pub fn action_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.action_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The descriptive name of the custom action. You can't change the name of a custom action after you create it.</p>
    pub fn set_action_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.action_name = input;
        self
    }
    /// <p>The descriptive name of the custom action. You can't change the name of a custom action after you create it.</p>
    pub fn get_action_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.action_name
    }
    /// <p>The custom action associated with the action name.</p>
    /// This field is required.
    pub fn action_definition(mut self, input: crate::types::ActionDefinition) -> Self {
        self.action_definition = ::std::option::Option::Some(input);
        self
    }
    /// <p>The custom action associated with the action name.</p>
    pub fn set_action_definition(mut self, input: ::std::option::Option<crate::types::ActionDefinition>) -> Self {
        self.action_definition = input;
        self
    }
    /// <p>The custom action associated with the action name.</p>
    pub fn get_action_definition(&self) -> &::std::option::Option<crate::types::ActionDefinition> {
        &self.action_definition
    }
    /// Consumes the builder and constructs a [`CustomAction`](crate::types::CustomAction).
    /// This method will fail if any of the following fields are not set:
    /// - [`action_name`](crate::types::builders::CustomActionBuilder::action_name)
    pub fn build(self) -> ::std::result::Result<crate::types::CustomAction, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::CustomAction {
            action_name: self.action_name.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "action_name",
                    "action_name was not specified but it is required when building CustomAction",
                )
            })?,
            action_definition: self.action_definition,
        })
    }
}
