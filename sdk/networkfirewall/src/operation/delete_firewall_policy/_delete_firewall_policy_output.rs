// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DeleteFirewallPolicyOutput {
    /// <p>The object containing the definition of the <code>FirewallPolicyResponse</code> that you asked to delete. </p>
    pub firewall_policy_response: ::std::option::Option<crate::types::FirewallPolicyResponse>,
    _request_id: Option<String>,
}
impl DeleteFirewallPolicyOutput {
    /// <p>The object containing the definition of the <code>FirewallPolicyResponse</code> that you asked to delete. </p>
    pub fn firewall_policy_response(&self) -> ::std::option::Option<&crate::types::FirewallPolicyResponse> {
        self.firewall_policy_response.as_ref()
    }
}
impl ::aws_http::request_id::RequestId for DeleteFirewallPolicyOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl DeleteFirewallPolicyOutput {
    /// Creates a new builder-style object to manufacture [`DeleteFirewallPolicyOutput`](crate::operation::delete_firewall_policy::DeleteFirewallPolicyOutput).
    pub fn builder() -> crate::operation::delete_firewall_policy::builders::DeleteFirewallPolicyOutputBuilder {
        crate::operation::delete_firewall_policy::builders::DeleteFirewallPolicyOutputBuilder::default()
    }
}

/// A builder for [`DeleteFirewallPolicyOutput`](crate::operation::delete_firewall_policy::DeleteFirewallPolicyOutput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DeleteFirewallPolicyOutputBuilder {
    pub(crate) firewall_policy_response: ::std::option::Option<crate::types::FirewallPolicyResponse>,
    _request_id: Option<String>,
}
impl DeleteFirewallPolicyOutputBuilder {
    /// <p>The object containing the definition of the <code>FirewallPolicyResponse</code> that you asked to delete. </p>
    /// This field is required.
    pub fn firewall_policy_response(mut self, input: crate::types::FirewallPolicyResponse) -> Self {
        self.firewall_policy_response = ::std::option::Option::Some(input);
        self
    }
    /// <p>The object containing the definition of the <code>FirewallPolicyResponse</code> that you asked to delete. </p>
    pub fn set_firewall_policy_response(mut self, input: ::std::option::Option<crate::types::FirewallPolicyResponse>) -> Self {
        self.firewall_policy_response = input;
        self
    }
    /// <p>The object containing the definition of the <code>FirewallPolicyResponse</code> that you asked to delete. </p>
    pub fn get_firewall_policy_response(&self) -> &::std::option::Option<crate::types::FirewallPolicyResponse> {
        &self.firewall_policy_response
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`DeleteFirewallPolicyOutput`](crate::operation::delete_firewall_policy::DeleteFirewallPolicyOutput).
    pub fn build(self) -> crate::operation::delete_firewall_policy::DeleteFirewallPolicyOutput {
        crate::operation::delete_firewall_policy::DeleteFirewallPolicyOutput {
            firewall_policy_response: self.firewall_policy_response,
            _request_id: self._request_id,
        }
    }
}
