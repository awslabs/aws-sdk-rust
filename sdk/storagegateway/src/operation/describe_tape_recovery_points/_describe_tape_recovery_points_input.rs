// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>DescribeTapeRecoveryPointsInput</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DescribeTapeRecoveryPointsInput {
    /// <p>The Amazon Resource Name (ARN) of the gateway. Use the <code>ListGateways</code> operation to return a list of gateways for your account and Amazon Web Services Region.</p>
    #[doc(hidden)]
    pub gateway_arn: std::option::Option<std::string::String>,
    /// <p>An opaque string that indicates the position at which to begin describing the virtual tape recovery points.</p>
    #[doc(hidden)]
    pub marker: std::option::Option<std::string::String>,
    /// <p>Specifies that the number of virtual tape recovery points that are described be limited to the specified number.</p>
    #[doc(hidden)]
    pub limit: std::option::Option<i32>,
}
impl DescribeTapeRecoveryPointsInput {
    /// <p>The Amazon Resource Name (ARN) of the gateway. Use the <code>ListGateways</code> operation to return a list of gateways for your account and Amazon Web Services Region.</p>
    pub fn gateway_arn(&self) -> std::option::Option<&str> {
        self.gateway_arn.as_deref()
    }
    /// <p>An opaque string that indicates the position at which to begin describing the virtual tape recovery points.</p>
    pub fn marker(&self) -> std::option::Option<&str> {
        self.marker.as_deref()
    }
    /// <p>Specifies that the number of virtual tape recovery points that are described be limited to the specified number.</p>
    pub fn limit(&self) -> std::option::Option<i32> {
        self.limit
    }
}
impl DescribeTapeRecoveryPointsInput {
    /// Creates a new builder-style object to manufacture [`DescribeTapeRecoveryPointsInput`](crate::operation::describe_tape_recovery_points::DescribeTapeRecoveryPointsInput).
    pub fn builder() -> crate::operation::describe_tape_recovery_points::builders::DescribeTapeRecoveryPointsInputBuilder{
        crate::operation::describe_tape_recovery_points::builders::DescribeTapeRecoveryPointsInputBuilder::default()
    }
}

/// A builder for [`DescribeTapeRecoveryPointsInput`](crate::operation::describe_tape_recovery_points::DescribeTapeRecoveryPointsInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DescribeTapeRecoveryPointsInputBuilder {
    pub(crate) gateway_arn: std::option::Option<std::string::String>,
    pub(crate) marker: std::option::Option<std::string::String>,
    pub(crate) limit: std::option::Option<i32>,
}
impl DescribeTapeRecoveryPointsInputBuilder {
    /// <p>The Amazon Resource Name (ARN) of the gateway. Use the <code>ListGateways</code> operation to return a list of gateways for your account and Amazon Web Services Region.</p>
    pub fn gateway_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.gateway_arn = Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the gateway. Use the <code>ListGateways</code> operation to return a list of gateways for your account and Amazon Web Services Region.</p>
    pub fn set_gateway_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.gateway_arn = input;
        self
    }
    /// <p>An opaque string that indicates the position at which to begin describing the virtual tape recovery points.</p>
    pub fn marker(mut self, input: impl Into<std::string::String>) -> Self {
        self.marker = Some(input.into());
        self
    }
    /// <p>An opaque string that indicates the position at which to begin describing the virtual tape recovery points.</p>
    pub fn set_marker(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.marker = input;
        self
    }
    /// <p>Specifies that the number of virtual tape recovery points that are described be limited to the specified number.</p>
    pub fn limit(mut self, input: i32) -> Self {
        self.limit = Some(input);
        self
    }
    /// <p>Specifies that the number of virtual tape recovery points that are described be limited to the specified number.</p>
    pub fn set_limit(mut self, input: std::option::Option<i32>) -> Self {
        self.limit = input;
        self
    }
    /// Consumes the builder and constructs a [`DescribeTapeRecoveryPointsInput`](crate::operation::describe_tape_recovery_points::DescribeTapeRecoveryPointsInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::describe_tape_recovery_points::DescribeTapeRecoveryPointsInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::describe_tape_recovery_points::DescribeTapeRecoveryPointsInput {
                gateway_arn: self.gateway_arn,
                marker: self.marker,
                limit: self.limit,
            },
        )
    }
}
