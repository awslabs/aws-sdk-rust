// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ListVolumeRecoveryPointsOutput {
    /// <p>The Amazon Resource Name (ARN) of the gateway. Use the <code>ListGateways</code> operation to return a list of gateways for your account and Amazon Web Services Region.</p>
    #[doc(hidden)]
    pub gateway_arn: std::option::Option<std::string::String>,
    /// <p>An array of <code>VolumeRecoveryPointInfo</code> objects.</p>
    #[doc(hidden)]
    pub volume_recovery_point_infos:
        std::option::Option<std::vec::Vec<crate::types::VolumeRecoveryPointInfo>>,
    _request_id: Option<String>,
}
impl ListVolumeRecoveryPointsOutput {
    /// <p>The Amazon Resource Name (ARN) of the gateway. Use the <code>ListGateways</code> operation to return a list of gateways for your account and Amazon Web Services Region.</p>
    pub fn gateway_arn(&self) -> std::option::Option<&str> {
        self.gateway_arn.as_deref()
    }
    /// <p>An array of <code>VolumeRecoveryPointInfo</code> objects.</p>
    pub fn volume_recovery_point_infos(
        &self,
    ) -> std::option::Option<&[crate::types::VolumeRecoveryPointInfo]> {
        self.volume_recovery_point_infos.as_deref()
    }
}
impl aws_http::request_id::RequestId for ListVolumeRecoveryPointsOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl ListVolumeRecoveryPointsOutput {
    /// Creates a new builder-style object to manufacture [`ListVolumeRecoveryPointsOutput`](crate::operation::list_volume_recovery_points::ListVolumeRecoveryPointsOutput).
    pub fn builder() -> crate::operation::list_volume_recovery_points::builders::ListVolumeRecoveryPointsOutputBuilder{
        crate::operation::list_volume_recovery_points::builders::ListVolumeRecoveryPointsOutputBuilder::default()
    }
}

/// A builder for [`ListVolumeRecoveryPointsOutput`](crate::operation::list_volume_recovery_points::ListVolumeRecoveryPointsOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ListVolumeRecoveryPointsOutputBuilder {
    pub(crate) gateway_arn: std::option::Option<std::string::String>,
    pub(crate) volume_recovery_point_infos:
        std::option::Option<std::vec::Vec<crate::types::VolumeRecoveryPointInfo>>,
    _request_id: Option<String>,
}
impl ListVolumeRecoveryPointsOutputBuilder {
    /// <p>The Amazon Resource Name (ARN) of the gateway. Use the <code>ListGateways</code> operation to return a list of gateways for your account and Amazon Web Services Region.</p>
    pub fn gateway_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.gateway_arn = Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the gateway. Use the <code>ListGateways</code> operation to return a list of gateways for your account and Amazon Web Services Region.</p>
    pub fn set_gateway_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.gateway_arn = input;
        self
    }
    /// Appends an item to `volume_recovery_point_infos`.
    ///
    /// To override the contents of this collection use [`set_volume_recovery_point_infos`](Self::set_volume_recovery_point_infos).
    ///
    /// <p>An array of <code>VolumeRecoveryPointInfo</code> objects.</p>
    pub fn volume_recovery_point_infos(
        mut self,
        input: crate::types::VolumeRecoveryPointInfo,
    ) -> Self {
        let mut v = self.volume_recovery_point_infos.unwrap_or_default();
        v.push(input);
        self.volume_recovery_point_infos = Some(v);
        self
    }
    /// <p>An array of <code>VolumeRecoveryPointInfo</code> objects.</p>
    pub fn set_volume_recovery_point_infos(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::VolumeRecoveryPointInfo>>,
    ) -> Self {
        self.volume_recovery_point_infos = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`ListVolumeRecoveryPointsOutput`](crate::operation::list_volume_recovery_points::ListVolumeRecoveryPointsOutput).
    pub fn build(
        self,
    ) -> crate::operation::list_volume_recovery_points::ListVolumeRecoveryPointsOutput {
        crate::operation::list_volume_recovery_points::ListVolumeRecoveryPointsOutput {
            gateway_arn: self.gateway_arn,
            volume_recovery_point_infos: self.volume_recovery_point_infos,
            _request_id: self._request_id,
        }
    }
}
