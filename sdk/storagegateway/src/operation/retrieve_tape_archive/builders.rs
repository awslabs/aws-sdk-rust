// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub use crate::operation::retrieve_tape_archive::_retrieve_tape_archive_output::RetrieveTapeArchiveOutputBuilder;

pub use crate::operation::retrieve_tape_archive::_retrieve_tape_archive_input::RetrieveTapeArchiveInputBuilder;

/// Fluent builder constructing a request to `RetrieveTapeArchive`.
///
/// <p>Retrieves an archived virtual tape from the virtual tape shelf (VTS) to a tape gateway. Virtual tapes archived in the VTS are not associated with any gateway. However after a tape is retrieved, it is associated with a gateway, even though it is also listed in the VTS, that is, archive. This operation is only supported in the tape gateway type.</p>
/// <p>Once a tape is successfully retrieved to a gateway, it cannot be retrieved again to another gateway. You must archive the tape again before you can retrieve it to another gateway. This operation is only supported in the tape gateway type.</p>
#[derive(std::clone::Clone, std::fmt::Debug)]
pub struct RetrieveTapeArchiveFluentBuilder {
    handle: std::sync::Arc<crate::client::Handle>,
    inner: crate::operation::retrieve_tape_archive::builders::RetrieveTapeArchiveInputBuilder,
}
impl RetrieveTapeArchiveFluentBuilder {
    /// Creates a new `RetrieveTapeArchive`.
    pub(crate) fn new(handle: std::sync::Arc<crate::client::Handle>) -> Self {
        Self {
            handle,
            inner: Default::default(),
        }
    }

    /// Consume this builder, creating a customizable operation that can be modified before being
    /// sent. The operation's inner [http::Request] can be modified as well.
    pub async fn customize(
        self,
    ) -> std::result::Result<
        crate::client::customize::CustomizableOperation<
            crate::operation::retrieve_tape_archive::RetrieveTapeArchive,
            aws_http::retry::AwsResponseRetryClassifier,
        >,
        aws_smithy_http::result::SdkError<
            crate::operation::retrieve_tape_archive::RetrieveTapeArchiveError,
        >,
    > {
        let handle = self.handle.clone();
        let operation = self
            .inner
            .build()
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?
            .make_operation(&handle.conf)
            .await
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?;
        Ok(crate::client::customize::CustomizableOperation { handle, operation })
    }

    /// Sends the request and returns the response.
    ///
    /// If an error occurs, an `SdkError` will be returned with additional details that
    /// can be matched against.
    ///
    /// By default, any retryable failures will be retried twice. Retry behavior
    /// is configurable with the [RetryConfig](aws_smithy_types::retry::RetryConfig), which can be
    /// set when configuring the client.
    pub async fn send(
        self,
    ) -> std::result::Result<
        crate::operation::retrieve_tape_archive::RetrieveTapeArchiveOutput,
        aws_smithy_http::result::SdkError<
            crate::operation::retrieve_tape_archive::RetrieveTapeArchiveError,
        >,
    > {
        let op = self
            .inner
            .build()
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?
            .make_operation(&self.handle.conf)
            .await
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?;
        self.handle.client.call(op).await
    }
    /// <p>The Amazon Resource Name (ARN) of the virtual tape you want to retrieve from the virtual tape shelf (VTS).</p>
    pub fn tape_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.inner = self.inner.tape_arn(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the virtual tape you want to retrieve from the virtual tape shelf (VTS).</p>
    pub fn set_tape_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.inner = self.inner.set_tape_arn(input);
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the gateway you want to retrieve the virtual tape to. Use the <code>ListGateways</code> operation to return a list of gateways for your account and Amazon Web Services Region.</p>
    /// <p>You retrieve archived virtual tapes to only one gateway and the gateway must be a tape gateway.</p>
    pub fn gateway_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.inner = self.inner.gateway_arn(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the gateway you want to retrieve the virtual tape to. Use the <code>ListGateways</code> operation to return a list of gateways for your account and Amazon Web Services Region.</p>
    /// <p>You retrieve archived virtual tapes to only one gateway and the gateway must be a tape gateway.</p>
    pub fn set_gateway_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.inner = self.inner.set_gateway_arn(input);
        self
    }
}
