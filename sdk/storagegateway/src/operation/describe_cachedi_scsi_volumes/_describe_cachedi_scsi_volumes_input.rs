// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DescribeCachediScsiVolumesInput {
    /// <p>An array of strings where each string represents the Amazon Resource Name (ARN) of a cached volume. All of the specified cached volumes must be from the same gateway. Use <code>ListVolumes</code> to get volume ARNs for a gateway.</p>
    pub volume_arns: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
}
impl DescribeCachediScsiVolumesInput {
    /// <p>An array of strings where each string represents the Amazon Resource Name (ARN) of a cached volume. All of the specified cached volumes must be from the same gateway. Use <code>ListVolumes</code> to get volume ARNs for a gateway.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.volume_arns.is_none()`.
    pub fn volume_arns(&self) -> &[::std::string::String] {
        self.volume_arns.as_deref().unwrap_or_default()
    }
}
impl DescribeCachediScsiVolumesInput {
    /// Creates a new builder-style object to manufacture [`DescribeCachediScsiVolumesInput`](crate::operation::describe_cachedi_scsi_volumes::DescribeCachediScsiVolumesInput).
    pub fn builder() -> crate::operation::describe_cachedi_scsi_volumes::builders::DescribeCachediScsiVolumesInputBuilder {
        crate::operation::describe_cachedi_scsi_volumes::builders::DescribeCachediScsiVolumesInputBuilder::default()
    }
}

/// A builder for [`DescribeCachediScsiVolumesInput`](crate::operation::describe_cachedi_scsi_volumes::DescribeCachediScsiVolumesInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DescribeCachediScsiVolumesInputBuilder {
    pub(crate) volume_arns: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
}
impl DescribeCachediScsiVolumesInputBuilder {
    /// Appends an item to `volume_arns`.
    ///
    /// To override the contents of this collection use [`set_volume_arns`](Self::set_volume_arns).
    ///
    /// <p>An array of strings where each string represents the Amazon Resource Name (ARN) of a cached volume. All of the specified cached volumes must be from the same gateway. Use <code>ListVolumes</code> to get volume ARNs for a gateway.</p>
    pub fn volume_arns(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        let mut v = self.volume_arns.unwrap_or_default();
        v.push(input.into());
        self.volume_arns = ::std::option::Option::Some(v);
        self
    }
    /// <p>An array of strings where each string represents the Amazon Resource Name (ARN) of a cached volume. All of the specified cached volumes must be from the same gateway. Use <code>ListVolumes</code> to get volume ARNs for a gateway.</p>
    pub fn set_volume_arns(mut self, input: ::std::option::Option<::std::vec::Vec<::std::string::String>>) -> Self {
        self.volume_arns = input;
        self
    }
    /// <p>An array of strings where each string represents the Amazon Resource Name (ARN) of a cached volume. All of the specified cached volumes must be from the same gateway. Use <code>ListVolumes</code> to get volume ARNs for a gateway.</p>
    pub fn get_volume_arns(&self) -> &::std::option::Option<::std::vec::Vec<::std::string::String>> {
        &self.volume_arns
    }
    /// Consumes the builder and constructs a [`DescribeCachediScsiVolumesInput`](crate::operation::describe_cachedi_scsi_volumes::DescribeCachediScsiVolumesInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::describe_cachedi_scsi_volumes::DescribeCachediScsiVolumesInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::describe_cachedi_scsi_volumes::DescribeCachediScsiVolumesInput {
            volume_arns: self.volume_arns,
        })
    }
}
