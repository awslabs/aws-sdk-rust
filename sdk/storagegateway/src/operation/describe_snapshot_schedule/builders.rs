// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub use crate::operation::describe_snapshot_schedule::_describe_snapshot_schedule_output::DescribeSnapshotScheduleOutputBuilder;

pub use crate::operation::describe_snapshot_schedule::_describe_snapshot_schedule_input::DescribeSnapshotScheduleInputBuilder;

/// Fluent builder constructing a request to `DescribeSnapshotSchedule`.
///
/// <p>Describes the snapshot schedule for the specified gateway volume. The snapshot schedule information includes intervals at which snapshots are automatically initiated on the volume. This operation is only supported in the cached volume and stored volume types.</p>
#[derive(std::clone::Clone, std::fmt::Debug)]
pub struct DescribeSnapshotScheduleFluentBuilder {
                handle: std::sync::Arc<crate::client::Handle>,
                inner: crate::operation::describe_snapshot_schedule::builders::DescribeSnapshotScheduleInputBuilder
            }
impl DescribeSnapshotScheduleFluentBuilder {
    /// Creates a new `DescribeSnapshotSchedule`.
    pub(crate) fn new(handle: std::sync::Arc<crate::client::Handle>) -> Self {
        Self {
            handle,
            inner: Default::default(),
        }
    }

    /// Consume this builder, creating a customizable operation that can be modified before being
    /// sent. The operation's inner [http::Request] can be modified as well.
    pub async fn customize(
        self,
    ) -> std::result::Result<
        crate::client::customize::CustomizableOperation<
            crate::operation::describe_snapshot_schedule::DescribeSnapshotSchedule,
            aws_http::retry::AwsResponseRetryClassifier,
        >,
        aws_smithy_http::result::SdkError<
            crate::operation::describe_snapshot_schedule::DescribeSnapshotScheduleError,
        >,
    > {
        let handle = self.handle.clone();
        let operation = self
            .inner
            .build()
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?
            .make_operation(&handle.conf)
            .await
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?;
        Ok(crate::client::customize::CustomizableOperation { handle, operation })
    }

    /// Sends the request and returns the response.
    ///
    /// If an error occurs, an `SdkError` will be returned with additional details that
    /// can be matched against.
    ///
    /// By default, any retryable failures will be retried twice. Retry behavior
    /// is configurable with the [RetryConfig](aws_smithy_types::retry::RetryConfig), which can be
    /// set when configuring the client.
    pub async fn send(
        self,
    ) -> std::result::Result<
        crate::operation::describe_snapshot_schedule::DescribeSnapshotScheduleOutput,
        aws_smithy_http::result::SdkError<
            crate::operation::describe_snapshot_schedule::DescribeSnapshotScheduleError,
        >,
    > {
        let op = self
            .inner
            .build()
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?
            .make_operation(&self.handle.conf)
            .await
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?;
        self.handle.client.call(op).await
    }
    /// <p>The Amazon Resource Name (ARN) of the volume. Use the <code>ListVolumes</code> operation to return a list of gateway volumes.</p>
    pub fn volume_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.inner = self.inner.volume_arn(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the volume. Use the <code>ListVolumes</code> operation to return a list of gateway volumes.</p>
    pub fn set_volume_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.inner = self.inner.set_volume_arn(input);
        self
    }
}
