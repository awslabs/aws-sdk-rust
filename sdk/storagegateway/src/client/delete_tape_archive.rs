// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeleteTapeArchive`](crate::client::fluent_builders::DeleteTapeArchive) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`tape_arn(impl Into<String>)`](crate::client::fluent_builders::DeleteTapeArchive::tape_arn) / [`set_tape_arn(Option<String>)`](crate::client::fluent_builders::DeleteTapeArchive::set_tape_arn): <p>The Amazon Resource Name (ARN) of the virtual tape to delete from the virtual tape shelf (VTS).</p>
    ///   - [`bypass_governance_retention(bool)`](crate::client::fluent_builders::DeleteTapeArchive::bypass_governance_retention) / [`set_bypass_governance_retention(bool)`](crate::client::fluent_builders::DeleteTapeArchive::set_bypass_governance_retention): <p>Set to <code>TRUE</code> to delete an archived tape that belongs to a custom pool with tape retention lock. Only archived tapes with tape retention lock set to <code>governance</code> can be deleted. Archived tapes with tape retention lock set to <code>compliance</code> can't be deleted.</p>
    /// - On success, responds with [`DeleteTapeArchiveOutput`](crate::output::DeleteTapeArchiveOutput) with field(s):
    ///   - [`tape_arn(Option<String>)`](crate::output::DeleteTapeArchiveOutput::tape_arn): <p>The Amazon Resource Name (ARN) of the virtual tape that was deleted from the virtual tape shelf (VTS).</p>
    /// - On failure, responds with [`SdkError<DeleteTapeArchiveError>`](crate::error::DeleteTapeArchiveError)
    pub fn delete_tape_archive(&self) -> crate::client::fluent_builders::DeleteTapeArchive {
        crate::client::fluent_builders::DeleteTapeArchive::new(self.handle.clone())
    }
}
