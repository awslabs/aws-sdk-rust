// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeWorkingStorage`](crate::client::fluent_builders::DescribeWorkingStorage) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`gateway_arn(impl Into<String>)`](crate::client::fluent_builders::DescribeWorkingStorage::gateway_arn) / [`set_gateway_arn(Option<String>)`](crate::client::fluent_builders::DescribeWorkingStorage::set_gateway_arn): <p>The Amazon Resource Name (ARN) of the gateway. Use the <code>ListGateways</code> operation to return a list of gateways for your account and Amazon Web Services Region.</p>
    /// - On success, responds with [`DescribeWorkingStorageOutput`](crate::output::DescribeWorkingStorageOutput) with field(s):
    ///   - [`gateway_arn(Option<String>)`](crate::output::DescribeWorkingStorageOutput::gateway_arn): <p>The Amazon Resource Name (ARN) of the gateway. Use the <code>ListGateways</code> operation to return a list of gateways for your account and Amazon Web Services Region.</p>
    ///   - [`disk_ids(Option<Vec<String>>)`](crate::output::DescribeWorkingStorageOutput::disk_ids): <p>An array of the gateway's local disk IDs that are configured as working storage. Each local disk ID is specified as a string (minimum length of 1 and maximum length of 300). If no local disks are configured as working storage, then the DiskIds array is empty.</p>
    ///   - [`working_storage_used_in_bytes(i64)`](crate::output::DescribeWorkingStorageOutput::working_storage_used_in_bytes): <p>The total working storage in bytes in use by the gateway. If no working storage is configured for the gateway, this field returns 0.</p>
    ///   - [`working_storage_allocated_in_bytes(i64)`](crate::output::DescribeWorkingStorageOutput::working_storage_allocated_in_bytes): <p>The total working storage in bytes allocated for the gateway. If no working storage is configured for the gateway, this field returns 0.</p>
    /// - On failure, responds with [`SdkError<DescribeWorkingStorageError>`](crate::error::DescribeWorkingStorageError)
    pub fn describe_working_storage(
        &self,
    ) -> crate::client::fluent_builders::DescribeWorkingStorage {
        crate::client::fluent_builders::DescribeWorkingStorage::new(self.handle.clone())
    }
}
