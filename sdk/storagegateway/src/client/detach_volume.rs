// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DetachVolume`](crate::client::fluent_builders::DetachVolume) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`volume_arn(impl Into<String>)`](crate::client::fluent_builders::DetachVolume::volume_arn) / [`set_volume_arn(Option<String>)`](crate::client::fluent_builders::DetachVolume::set_volume_arn): <p>The Amazon Resource Name (ARN) of the volume to detach from the gateway.</p>
    ///   - [`force_detach(bool)`](crate::client::fluent_builders::DetachVolume::force_detach) / [`set_force_detach(Option<bool>)`](crate::client::fluent_builders::DetachVolume::set_force_detach): <p>Set to <code>true</code> to forcibly remove the iSCSI connection of the target volume and detach the volume. The default is <code>false</code>. If this value is set to <code>false</code>, you must manually disconnect the iSCSI connection from the target volume.</p>  <p>Valid Values: <code>true</code> | <code>false</code> </p>
    /// - On success, responds with [`DetachVolumeOutput`](crate::output::DetachVolumeOutput) with field(s):
    ///   - [`volume_arn(Option<String>)`](crate::output::DetachVolumeOutput::volume_arn): <p>The Amazon Resource Name (ARN) of the volume that was detached.</p>
    /// - On failure, responds with [`SdkError<DetachVolumeError>`](crate::error::DetachVolumeError)
    pub fn detach_volume(&self) -> crate::client::fluent_builders::DetachVolume {
        crate::client::fluent_builders::DetachVolume::new(self.handle.clone())
    }
}
