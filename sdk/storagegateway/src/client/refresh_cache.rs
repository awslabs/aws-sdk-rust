// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`RefreshCache`](crate::operation::refresh_cache::builders::RefreshCacheFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`file_share_arn(impl Into<String>)`](crate::operation::refresh_cache::builders::RefreshCacheFluentBuilder::file_share_arn) / [`set_file_share_arn(Option<String>)`](crate::operation::refresh_cache::builders::RefreshCacheFluentBuilder::set_file_share_arn):<br>required: **true**<br><p>The Amazon Resource Name (ARN) of the file share you want to refresh.</p><br>
    ///   - [`folder_list(impl Into<String>)`](crate::operation::refresh_cache::builders::RefreshCacheFluentBuilder::folder_list) / [`set_folder_list(Option<Vec::<String>>)`](crate::operation::refresh_cache::builders::RefreshCacheFluentBuilder::set_folder_list):<br>required: **false**<br><p>A comma-separated list of the paths of folders to refresh in the cache. The default is [<code>"/"</code>]. The default refreshes objects and folders at the root of the Amazon S3 bucket. If <code>Recursive</code> is set to <code>true</code>, the entire S3 bucket that the file share has access to is refreshed.</p><br>
    ///   - [`recursive(bool)`](crate::operation::refresh_cache::builders::RefreshCacheFluentBuilder::recursive) / [`set_recursive(Option<bool>)`](crate::operation::refresh_cache::builders::RefreshCacheFluentBuilder::set_recursive):<br>required: **false**<br><p>A value that specifies whether to recursively refresh folders in the cache. The refresh includes folders that were in the cache the last time the gateway listed the folder's contents. If this value set to <code>true</code>, each folder that is listed in <code>FolderList</code> is recursively updated. Otherwise, subfolders listed in <code>FolderList</code> are not refreshed. Only objects that are in folders listed directly under <code>FolderList</code> are found and used for the update. The default is <code>true</code>.</p>  <p>Valid Values: <code>true</code> | <code>false</code> </p><br>
    /// - On success, responds with [`RefreshCacheOutput`](crate::operation::refresh_cache::RefreshCacheOutput) with field(s):
    ///   - [`file_share_arn(Option<String>)`](crate::operation::refresh_cache::RefreshCacheOutput::file_share_arn): <p>The Amazon Resource Name (ARN) of the file share.</p>
    ///   - [`notification_id(Option<String>)`](crate::operation::refresh_cache::RefreshCacheOutput::notification_id): <p>The randomly generated ID of the notification that was sent. This ID is in UUID format.</p>
    /// - On failure, responds with [`SdkError<RefreshCacheError>`](crate::operation::refresh_cache::RefreshCacheError)
    pub fn refresh_cache(&self) -> crate::operation::refresh_cache::builders::RefreshCacheFluentBuilder {
        crate::operation::refresh_cache::builders::RefreshCacheFluentBuilder::new(self.handle.clone())
    }
}
