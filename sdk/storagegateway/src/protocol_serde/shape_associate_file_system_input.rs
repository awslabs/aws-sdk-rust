// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_associate_file_system_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::associate_file_system::AssociateFileSystemInput,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.user_name {
        object.key("UserName").string(var_1.as_str());
    }
    if let Some(var_2) = &input.password {
        object.key("Password").string(var_2.as_str());
    }
    if let Some(var_3) = &input.client_token {
        object.key("ClientToken").string(var_3.as_str());
    }
    if let Some(var_4) = &input.gateway_arn {
        object.key("GatewayARN").string(var_4.as_str());
    }
    if let Some(var_5) = &input.location_arn {
        object.key("LocationARN").string(var_5.as_str());
    }
    if let Some(var_6) = &input.tags {
        let mut array_7 = object.key("Tags").start_array();
        for item_8 in var_6 {
            {
                #[allow(unused_mut)]
                let mut object_9 = array_7.value().start_object();
                crate::protocol_serde::shape_tag::ser_tag(&mut object_9, item_8)?;
                object_9.finish();
            }
        }
        array_7.finish();
    }
    if let Some(var_10) = &input.audit_destination_arn {
        object.key("AuditDestinationARN").string(var_10.as_str());
    }
    if let Some(var_11) = &input.cache_attributes {
        #[allow(unused_mut)]
        let mut object_12 = object.key("CacheAttributes").start_object();
        crate::protocol_serde::shape_cache_attributes::ser_cache_attributes(&mut object_12, var_11)?;
        object_12.finish();
    }
    if let Some(var_13) = &input.endpoint_network_configuration {
        #[allow(unused_mut)]
        let mut object_14 = object.key("EndpointNetworkConfiguration").start_object();
        crate::protocol_serde::shape_endpoint_network_configuration::ser_endpoint_network_configuration(&mut object_14, var_13)?;
        object_14.finish();
    }
    Ok(())
}
