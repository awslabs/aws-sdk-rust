// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Describes a recovery point.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct TapeRecoveryPointInfo {
    /// <p>The Amazon Resource Name (ARN) of the virtual tape.</p>
    #[doc(hidden)]
    pub tape_arn: std::option::Option<std::string::String>,
    /// <p>The time when the point-in-time view of the virtual tape was replicated for later recovery.</p>
    /// <p>The default timestamp format of the tape recovery point time is in the ISO8601 extended YYYY-MM-DD'T'HH:MM:SS'Z' format.</p>
    #[doc(hidden)]
    pub tape_recovery_point_time: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>The size, in bytes, of the virtual tapes to recover.</p>
    #[doc(hidden)]
    pub tape_size_in_bytes: std::option::Option<i64>,
    /// <p>The status of the virtual tapes.</p>
    #[doc(hidden)]
    pub tape_status: std::option::Option<std::string::String>,
}
impl TapeRecoveryPointInfo {
    /// <p>The Amazon Resource Name (ARN) of the virtual tape.</p>
    pub fn tape_arn(&self) -> std::option::Option<&str> {
        self.tape_arn.as_deref()
    }
    /// <p>The time when the point-in-time view of the virtual tape was replicated for later recovery.</p>
    /// <p>The default timestamp format of the tape recovery point time is in the ISO8601 extended YYYY-MM-DD'T'HH:MM:SS'Z' format.</p>
    pub fn tape_recovery_point_time(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.tape_recovery_point_time.as_ref()
    }
    /// <p>The size, in bytes, of the virtual tapes to recover.</p>
    pub fn tape_size_in_bytes(&self) -> std::option::Option<i64> {
        self.tape_size_in_bytes
    }
    /// <p>The status of the virtual tapes.</p>
    pub fn tape_status(&self) -> std::option::Option<&str> {
        self.tape_status.as_deref()
    }
}
impl TapeRecoveryPointInfo {
    /// Creates a new builder-style object to manufacture [`TapeRecoveryPointInfo`](crate::types::TapeRecoveryPointInfo).
    pub fn builder() -> crate::types::builders::TapeRecoveryPointInfoBuilder {
        crate::types::builders::TapeRecoveryPointInfoBuilder::default()
    }
}

/// A builder for [`TapeRecoveryPointInfo`](crate::types::TapeRecoveryPointInfo).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct TapeRecoveryPointInfoBuilder {
    pub(crate) tape_arn: std::option::Option<std::string::String>,
    pub(crate) tape_recovery_point_time: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) tape_size_in_bytes: std::option::Option<i64>,
    pub(crate) tape_status: std::option::Option<std::string::String>,
}
impl TapeRecoveryPointInfoBuilder {
    /// <p>The Amazon Resource Name (ARN) of the virtual tape.</p>
    pub fn tape_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.tape_arn = Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the virtual tape.</p>
    pub fn set_tape_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.tape_arn = input;
        self
    }
    /// <p>The time when the point-in-time view of the virtual tape was replicated for later recovery.</p>
    /// <p>The default timestamp format of the tape recovery point time is in the ISO8601 extended YYYY-MM-DD'T'HH:MM:SS'Z' format.</p>
    pub fn tape_recovery_point_time(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.tape_recovery_point_time = Some(input);
        self
    }
    /// <p>The time when the point-in-time view of the virtual tape was replicated for later recovery.</p>
    /// <p>The default timestamp format of the tape recovery point time is in the ISO8601 extended YYYY-MM-DD'T'HH:MM:SS'Z' format.</p>
    pub fn set_tape_recovery_point_time(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.tape_recovery_point_time = input;
        self
    }
    /// <p>The size, in bytes, of the virtual tapes to recover.</p>
    pub fn tape_size_in_bytes(mut self, input: i64) -> Self {
        self.tape_size_in_bytes = Some(input);
        self
    }
    /// <p>The size, in bytes, of the virtual tapes to recover.</p>
    pub fn set_tape_size_in_bytes(mut self, input: std::option::Option<i64>) -> Self {
        self.tape_size_in_bytes = input;
        self
    }
    /// <p>The status of the virtual tapes.</p>
    pub fn tape_status(mut self, input: impl Into<std::string::String>) -> Self {
        self.tape_status = Some(input.into());
        self
    }
    /// <p>The status of the virtual tapes.</p>
    pub fn set_tape_status(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.tape_status = input;
        self
    }
    /// Consumes the builder and constructs a [`TapeRecoveryPointInfo`](crate::types::TapeRecoveryPointInfo).
    pub fn build(self) -> crate::types::TapeRecoveryPointInfo {
        crate::types::TapeRecoveryPointInfo {
            tape_arn: self.tape_arn,
            tape_recovery_point_time: self.tape_recovery_point_time,
            tape_size_in_bytes: self.tape_size_in_bytes,
            tape_status: self.tape_status,
        }
    }
}
