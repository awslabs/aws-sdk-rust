// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Describes a storage volume object.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct VolumeInfo {
    /// <p>The Amazon Resource Name (ARN) for the storage volume. For example, the following is a valid ARN:</p>
    /// <p> <code>arn:aws:storagegateway:us-east-2:111122223333:gateway/sgw-12A3456B/volume/vol-1122AABB</code> </p>
    /// <p>Valid Values: 50 to 500 lowercase letters, numbers, periods (.), and hyphens (-).</p>
    #[doc(hidden)]
    pub volume_arn: std::option::Option<std::string::String>,
    /// <p>The unique identifier assigned to the volume. This ID becomes part of the volume Amazon Resource Name (ARN), which you use as input for other operations.</p>
    /// <p>Valid Values: 50 to 500 lowercase letters, numbers, periods (.), and hyphens (-).</p>
    #[doc(hidden)]
    pub volume_id: std::option::Option<std::string::String>,
    /// <p>The Amazon Resource Name (ARN) of the gateway. Use the <code>ListGateways</code> operation to return a list of gateways for your account and Amazon Web Services Region.</p>
    #[doc(hidden)]
    pub gateway_arn: std::option::Option<std::string::String>,
    /// <p>The unique identifier assigned to your gateway during activation. This ID becomes part of the gateway Amazon Resource Name (ARN), which you use as input for other operations.</p>
    /// <p>Valid Values: 50 to 500 lowercase letters, numbers, periods (.), and hyphens (-).</p>
    #[doc(hidden)]
    pub gateway_id: std::option::Option<std::string::String>,
    /// <p>One of the VolumeType enumeration values describing the type of the volume.</p>
    #[doc(hidden)]
    pub volume_type: std::option::Option<std::string::String>,
    /// <p>The size of the volume in bytes.</p>
    /// <p>Valid Values: 50 to 500 lowercase letters, numbers, periods (.), and hyphens (-).</p>
    #[doc(hidden)]
    pub volume_size_in_bytes: i64,
    /// <p>One of the VolumeStatus values that indicates the state of the storage volume.</p>
    #[doc(hidden)]
    pub volume_attachment_status: std::option::Option<std::string::String>,
}
impl VolumeInfo {
    /// <p>The Amazon Resource Name (ARN) for the storage volume. For example, the following is a valid ARN:</p>
    /// <p> <code>arn:aws:storagegateway:us-east-2:111122223333:gateway/sgw-12A3456B/volume/vol-1122AABB</code> </p>
    /// <p>Valid Values: 50 to 500 lowercase letters, numbers, periods (.), and hyphens (-).</p>
    pub fn volume_arn(&self) -> std::option::Option<&str> {
        self.volume_arn.as_deref()
    }
    /// <p>The unique identifier assigned to the volume. This ID becomes part of the volume Amazon Resource Name (ARN), which you use as input for other operations.</p>
    /// <p>Valid Values: 50 to 500 lowercase letters, numbers, periods (.), and hyphens (-).</p>
    pub fn volume_id(&self) -> std::option::Option<&str> {
        self.volume_id.as_deref()
    }
    /// <p>The Amazon Resource Name (ARN) of the gateway. Use the <code>ListGateways</code> operation to return a list of gateways for your account and Amazon Web Services Region.</p>
    pub fn gateway_arn(&self) -> std::option::Option<&str> {
        self.gateway_arn.as_deref()
    }
    /// <p>The unique identifier assigned to your gateway during activation. This ID becomes part of the gateway Amazon Resource Name (ARN), which you use as input for other operations.</p>
    /// <p>Valid Values: 50 to 500 lowercase letters, numbers, periods (.), and hyphens (-).</p>
    pub fn gateway_id(&self) -> std::option::Option<&str> {
        self.gateway_id.as_deref()
    }
    /// <p>One of the VolumeType enumeration values describing the type of the volume.</p>
    pub fn volume_type(&self) -> std::option::Option<&str> {
        self.volume_type.as_deref()
    }
    /// <p>The size of the volume in bytes.</p>
    /// <p>Valid Values: 50 to 500 lowercase letters, numbers, periods (.), and hyphens (-).</p>
    pub fn volume_size_in_bytes(&self) -> i64 {
        self.volume_size_in_bytes
    }
    /// <p>One of the VolumeStatus values that indicates the state of the storage volume.</p>
    pub fn volume_attachment_status(&self) -> std::option::Option<&str> {
        self.volume_attachment_status.as_deref()
    }
}
impl VolumeInfo {
    /// Creates a new builder-style object to manufacture [`VolumeInfo`](crate::types::VolumeInfo).
    pub fn builder() -> crate::types::builders::VolumeInfoBuilder {
        crate::types::builders::VolumeInfoBuilder::default()
    }
}

/// A builder for [`VolumeInfo`](crate::types::VolumeInfo).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct VolumeInfoBuilder {
    pub(crate) volume_arn: std::option::Option<std::string::String>,
    pub(crate) volume_id: std::option::Option<std::string::String>,
    pub(crate) gateway_arn: std::option::Option<std::string::String>,
    pub(crate) gateway_id: std::option::Option<std::string::String>,
    pub(crate) volume_type: std::option::Option<std::string::String>,
    pub(crate) volume_size_in_bytes: std::option::Option<i64>,
    pub(crate) volume_attachment_status: std::option::Option<std::string::String>,
}
impl VolumeInfoBuilder {
    /// <p>The Amazon Resource Name (ARN) for the storage volume. For example, the following is a valid ARN:</p>
    /// <p> <code>arn:aws:storagegateway:us-east-2:111122223333:gateway/sgw-12A3456B/volume/vol-1122AABB</code> </p>
    /// <p>Valid Values: 50 to 500 lowercase letters, numbers, periods (.), and hyphens (-).</p>
    pub fn volume_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.volume_arn = Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) for the storage volume. For example, the following is a valid ARN:</p>
    /// <p> <code>arn:aws:storagegateway:us-east-2:111122223333:gateway/sgw-12A3456B/volume/vol-1122AABB</code> </p>
    /// <p>Valid Values: 50 to 500 lowercase letters, numbers, periods (.), and hyphens (-).</p>
    pub fn set_volume_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.volume_arn = input;
        self
    }
    /// <p>The unique identifier assigned to the volume. This ID becomes part of the volume Amazon Resource Name (ARN), which you use as input for other operations.</p>
    /// <p>Valid Values: 50 to 500 lowercase letters, numbers, periods (.), and hyphens (-).</p>
    pub fn volume_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.volume_id = Some(input.into());
        self
    }
    /// <p>The unique identifier assigned to the volume. This ID becomes part of the volume Amazon Resource Name (ARN), which you use as input for other operations.</p>
    /// <p>Valid Values: 50 to 500 lowercase letters, numbers, periods (.), and hyphens (-).</p>
    pub fn set_volume_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.volume_id = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the gateway. Use the <code>ListGateways</code> operation to return a list of gateways for your account and Amazon Web Services Region.</p>
    pub fn gateway_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.gateway_arn = Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the gateway. Use the <code>ListGateways</code> operation to return a list of gateways for your account and Amazon Web Services Region.</p>
    pub fn set_gateway_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.gateway_arn = input;
        self
    }
    /// <p>The unique identifier assigned to your gateway during activation. This ID becomes part of the gateway Amazon Resource Name (ARN), which you use as input for other operations.</p>
    /// <p>Valid Values: 50 to 500 lowercase letters, numbers, periods (.), and hyphens (-).</p>
    pub fn gateway_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.gateway_id = Some(input.into());
        self
    }
    /// <p>The unique identifier assigned to your gateway during activation. This ID becomes part of the gateway Amazon Resource Name (ARN), which you use as input for other operations.</p>
    /// <p>Valid Values: 50 to 500 lowercase letters, numbers, periods (.), and hyphens (-).</p>
    pub fn set_gateway_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.gateway_id = input;
        self
    }
    /// <p>One of the VolumeType enumeration values describing the type of the volume.</p>
    pub fn volume_type(mut self, input: impl Into<std::string::String>) -> Self {
        self.volume_type = Some(input.into());
        self
    }
    /// <p>One of the VolumeType enumeration values describing the type of the volume.</p>
    pub fn set_volume_type(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.volume_type = input;
        self
    }
    /// <p>The size of the volume in bytes.</p>
    /// <p>Valid Values: 50 to 500 lowercase letters, numbers, periods (.), and hyphens (-).</p>
    pub fn volume_size_in_bytes(mut self, input: i64) -> Self {
        self.volume_size_in_bytes = Some(input);
        self
    }
    /// <p>The size of the volume in bytes.</p>
    /// <p>Valid Values: 50 to 500 lowercase letters, numbers, periods (.), and hyphens (-).</p>
    pub fn set_volume_size_in_bytes(mut self, input: std::option::Option<i64>) -> Self {
        self.volume_size_in_bytes = input;
        self
    }
    /// <p>One of the VolumeStatus values that indicates the state of the storage volume.</p>
    pub fn volume_attachment_status(mut self, input: impl Into<std::string::String>) -> Self {
        self.volume_attachment_status = Some(input.into());
        self
    }
    /// <p>One of the VolumeStatus values that indicates the state of the storage volume.</p>
    pub fn set_volume_attachment_status(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.volume_attachment_status = input;
        self
    }
    /// Consumes the builder and constructs a [`VolumeInfo`](crate::types::VolumeInfo).
    pub fn build(self) -> crate::types::VolumeInfo {
        crate::types::VolumeInfo {
            volume_arn: self.volume_arn,
            volume_id: self.volume_id,
            gateway_arn: self.gateway_arn,
            gateway_id: self.gateway_id,
            volume_type: self.volume_type,
            volume_size_in_bytes: self.volume_size_in_bytes.unwrap_or_default(),
            volume_attachment_status: self.volume_attachment_status,
        }
    }
}
