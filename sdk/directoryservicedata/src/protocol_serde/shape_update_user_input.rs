// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_update_user_input_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::update_user::UpdateUserInput,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.client_token {
        object.key("ClientToken").string(var_1.as_str());
    }
    if let Some(var_2) = &input.email_address {
        object.key("EmailAddress").string(var_2.as_str());
    }
    if let Some(var_3) = &input.given_name {
        object.key("GivenName").string(var_3.as_str());
    }
    if let Some(var_4) = &input.other_attributes {
        #[allow(unused_mut)]
        let mut object_5 = object.key("OtherAttributes").start_object();
        for (key_6, value_7) in var_4 {
            {
                #[allow(unused_mut)]
                let mut object_8 = object_5.key(key_6.as_str()).start_object();
                crate::protocol_serde::shape_attribute_value::ser_attribute_value(&mut object_8, value_7)?;
                object_8.finish();
            }
        }
        object_5.finish();
    }
    if let Some(var_9) = &input.sam_account_name {
        object.key("SAMAccountName").string(var_9.as_str());
    }
    if let Some(var_10) = &input.surname {
        object.key("Surname").string(var_10.as_str());
    }
    if let Some(var_11) = &input.update_type {
        object.key("UpdateType").string(var_11.as_str());
    }
    Ok(())
}
