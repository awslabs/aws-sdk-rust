// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateGroup`](crate::operation::create_group::builders::CreateGroupFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`directory_id(impl Into<String>)`](crate::operation::create_group::builders::CreateGroupFluentBuilder::directory_id) / [`set_directory_id(Option<String>)`](crate::operation::create_group::builders::CreateGroupFluentBuilder::set_directory_id):<br>required: **true**<br><p>The identifier (ID) of the directory that's associated with the group.</p><br>
    ///   - [`sam_account_name(impl Into<String>)`](crate::operation::create_group::builders::CreateGroupFluentBuilder::sam_account_name) / [`set_sam_account_name(Option<String>)`](crate::operation::create_group::builders::CreateGroupFluentBuilder::set_sam_account_name):<br>required: **true**<br><p>The name of the group.</p><br>
    ///   - [`group_type(GroupType)`](crate::operation::create_group::builders::CreateGroupFluentBuilder::group_type) / [`set_group_type(Option<GroupType>)`](crate::operation::create_group::builders::CreateGroupFluentBuilder::set_group_type):<br>required: **false**<br><p>The AD group type. For details, see <a href="https://learn.microsoft.com/en-us/windows-server/identity/ad-ds/manage/understand-security-groups#how-active-directory-security-groups-work">Active Directory security group type</a>.</p><br>
    ///   - [`group_scope(GroupScope)`](crate::operation::create_group::builders::CreateGroupFluentBuilder::group_scope) / [`set_group_scope(Option<GroupScope>)`](crate::operation::create_group::builders::CreateGroupFluentBuilder::set_group_scope):<br>required: **false**<br><p>The scope of the AD group. For details, see <a href="https://learn.microsoft.com/en-us/windows-server/identity/ad-ds/manage/understand-security-groups#group-scope">Active Directory security group scope</a>.</p><br>
    ///   - [`other_attributes(impl Into<String>, AttributeValue)`](crate::operation::create_group::builders::CreateGroupFluentBuilder::other_attributes) / [`set_other_attributes(Option<HashMap::<String, AttributeValue>>)`](crate::operation::create_group::builders::CreateGroupFluentBuilder::set_other_attributes):<br>required: **false**<br><p>An expression that defines one or more attributes with the data type and value of each attribute.</p><br>
    ///   - [`client_token(impl Into<String>)`](crate::operation::create_group::builders::CreateGroupFluentBuilder::client_token) / [`set_client_token(Option<String>)`](crate::operation::create_group::builders::CreateGroupFluentBuilder::set_client_token):<br>required: **false**<br><p>A unique and case-sensitive identifier that you provide to make sure the idempotency of the request, so multiple identical calls have the same effect as one single call.</p> <p>A client token is valid for 8 hours after the first request that uses it completes. After 8 hours, any request with the same client token is treated as a new request. If the request succeeds, any future uses of that token will be idempotent for another 8 hours.</p> <p>If you submit a request with the same client token but change one of the other parameters within the 8-hour idempotency window, Directory Service Data returns an <code>ConflictException</code>.</p><note>  <p>This parameter is optional when using the CLI or SDK.</p> </note><br>
    /// - On success, responds with [`CreateGroupOutput`](crate::operation::create_group::CreateGroupOutput) with field(s):
    ///   - [`directory_id(Option<String>)`](crate::operation::create_group::CreateGroupOutput::directory_id): <p>The identifier (ID) of the directory that's associated with the group.</p>
    ///   - [`sam_account_name(Option<String>)`](crate::operation::create_group::CreateGroupOutput::sam_account_name): <p>The name of the group.</p>
    ///   - [`sid(Option<String>)`](crate::operation::create_group::CreateGroupOutput::sid): <p>The unique security identifier (SID) of the group.</p>
    /// - On failure, responds with [`SdkError<CreateGroupError>`](crate::operation::create_group::CreateGroupError)
    pub fn create_group(&self) -> crate::operation::create_group::builders::CreateGroupFluentBuilder {
        crate::operation::create_group::builders::CreateGroupFluentBuilder::new(self.handle.clone())
    }
}
