// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>VPC_LATTICE egress configuration details in the response, containing the Resource Configuration ARN and port number currently configured for the connector.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DescribedConnectorVpcLatticeEgressConfig {
    /// <p>ARN of the VPC_LATTICE Resource Configuration currently used by the connector. This Resource Configuration defines the network path to the SFTP server through the customer's VPC.</p>
    pub resource_configuration_arn: ::std::string::String,
    /// <p>Port number currently configured for SFTP connections through VPC_LATTICE. Shows the port on which the connector attempts to connect to the target SFTP server.</p>
    pub port_number: ::std::option::Option<i32>,
}
impl DescribedConnectorVpcLatticeEgressConfig {
    /// <p>ARN of the VPC_LATTICE Resource Configuration currently used by the connector. This Resource Configuration defines the network path to the SFTP server through the customer's VPC.</p>
    pub fn resource_configuration_arn(&self) -> &str {
        use std::ops::Deref;
        self.resource_configuration_arn.deref()
    }
    /// <p>Port number currently configured for SFTP connections through VPC_LATTICE. Shows the port on which the connector attempts to connect to the target SFTP server.</p>
    pub fn port_number(&self) -> ::std::option::Option<i32> {
        self.port_number
    }
}
impl DescribedConnectorVpcLatticeEgressConfig {
    /// Creates a new builder-style object to manufacture [`DescribedConnectorVpcLatticeEgressConfig`](crate::types::DescribedConnectorVpcLatticeEgressConfig).
    pub fn builder() -> crate::types::builders::DescribedConnectorVpcLatticeEgressConfigBuilder {
        crate::types::builders::DescribedConnectorVpcLatticeEgressConfigBuilder::default()
    }
}

/// A builder for [`DescribedConnectorVpcLatticeEgressConfig`](crate::types::DescribedConnectorVpcLatticeEgressConfig).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct DescribedConnectorVpcLatticeEgressConfigBuilder {
    pub(crate) resource_configuration_arn: ::std::option::Option<::std::string::String>,
    pub(crate) port_number: ::std::option::Option<i32>,
}
impl DescribedConnectorVpcLatticeEgressConfigBuilder {
    /// <p>ARN of the VPC_LATTICE Resource Configuration currently used by the connector. This Resource Configuration defines the network path to the SFTP server through the customer's VPC.</p>
    /// This field is required.
    pub fn resource_configuration_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.resource_configuration_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>ARN of the VPC_LATTICE Resource Configuration currently used by the connector. This Resource Configuration defines the network path to the SFTP server through the customer's VPC.</p>
    pub fn set_resource_configuration_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.resource_configuration_arn = input;
        self
    }
    /// <p>ARN of the VPC_LATTICE Resource Configuration currently used by the connector. This Resource Configuration defines the network path to the SFTP server through the customer's VPC.</p>
    pub fn get_resource_configuration_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.resource_configuration_arn
    }
    /// <p>Port number currently configured for SFTP connections through VPC_LATTICE. Shows the port on which the connector attempts to connect to the target SFTP server.</p>
    pub fn port_number(mut self, input: i32) -> Self {
        self.port_number = ::std::option::Option::Some(input);
        self
    }
    /// <p>Port number currently configured for SFTP connections through VPC_LATTICE. Shows the port on which the connector attempts to connect to the target SFTP server.</p>
    pub fn set_port_number(mut self, input: ::std::option::Option<i32>) -> Self {
        self.port_number = input;
        self
    }
    /// <p>Port number currently configured for SFTP connections through VPC_LATTICE. Shows the port on which the connector attempts to connect to the target SFTP server.</p>
    pub fn get_port_number(&self) -> &::std::option::Option<i32> {
        &self.port_number
    }
    /// Consumes the builder and constructs a [`DescribedConnectorVpcLatticeEgressConfig`](crate::types::DescribedConnectorVpcLatticeEgressConfig).
    /// This method will fail if any of the following fields are not set:
    /// - [`resource_configuration_arn`](crate::types::builders::DescribedConnectorVpcLatticeEgressConfigBuilder::resource_configuration_arn)
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::types::DescribedConnectorVpcLatticeEgressConfig, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::DescribedConnectorVpcLatticeEgressConfig {
            resource_configuration_arn: self.resource_configuration_arn.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "resource_configuration_arn",
                    "resource_configuration_arn was not specified but it is required when building DescribedConnectorVpcLatticeEgressConfig",
                )
            })?,
            port_number: self.port_number,
        })
    }
}
