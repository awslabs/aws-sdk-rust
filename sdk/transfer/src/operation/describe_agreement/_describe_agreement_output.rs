// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DescribeAgreementOutput {
    /// <p>The details for the specified agreement, returned as a <code>DescribedAgreement</code> object.</p>
    #[doc(hidden)]
    pub agreement: std::option::Option<crate::types::DescribedAgreement>,
    _request_id: Option<String>,
}
impl DescribeAgreementOutput {
    /// <p>The details for the specified agreement, returned as a <code>DescribedAgreement</code> object.</p>
    pub fn agreement(&self) -> std::option::Option<&crate::types::DescribedAgreement> {
        self.agreement.as_ref()
    }
}
impl aws_http::request_id::RequestId for DescribeAgreementOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl DescribeAgreementOutput {
    /// Creates a new builder-style object to manufacture [`DescribeAgreementOutput`](crate::operation::describe_agreement::DescribeAgreementOutput).
    pub fn builder(
    ) -> crate::operation::describe_agreement::builders::DescribeAgreementOutputBuilder {
        crate::operation::describe_agreement::builders::DescribeAgreementOutputBuilder::default()
    }
}

/// A builder for [`DescribeAgreementOutput`](crate::operation::describe_agreement::DescribeAgreementOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DescribeAgreementOutputBuilder {
    pub(crate) agreement: std::option::Option<crate::types::DescribedAgreement>,
    _request_id: Option<String>,
}
impl DescribeAgreementOutputBuilder {
    /// <p>The details for the specified agreement, returned as a <code>DescribedAgreement</code> object.</p>
    pub fn agreement(mut self, input: crate::types::DescribedAgreement) -> Self {
        self.agreement = Some(input);
        self
    }
    /// <p>The details for the specified agreement, returned as a <code>DescribedAgreement</code> object.</p>
    pub fn set_agreement(
        mut self,
        input: std::option::Option<crate::types::DescribedAgreement>,
    ) -> Self {
        self.agreement = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`DescribeAgreementOutput`](crate::operation::describe_agreement::DescribeAgreementOutput).
    pub fn build(self) -> crate::operation::describe_agreement::DescribeAgreementOutput {
        crate::operation::describe_agreement::DescribeAgreementOutput {
            agreement: self.agreement,
            _request_id: self._request_id,
        }
    }
}
