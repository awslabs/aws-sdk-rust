// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DeleteHostKeyInput {
    /// <p>The identifier of the server that contains the host key that you are deleting.</p>
    #[doc(hidden)]
    pub server_id: std::option::Option<std::string::String>,
    /// <p>The identifier of the host key that you are deleting.</p>
    #[doc(hidden)]
    pub host_key_id: std::option::Option<std::string::String>,
}
impl DeleteHostKeyInput {
    /// <p>The identifier of the server that contains the host key that you are deleting.</p>
    pub fn server_id(&self) -> std::option::Option<&str> {
        self.server_id.as_deref()
    }
    /// <p>The identifier of the host key that you are deleting.</p>
    pub fn host_key_id(&self) -> std::option::Option<&str> {
        self.host_key_id.as_deref()
    }
}
impl DeleteHostKeyInput {
    /// Creates a new builder-style object to manufacture [`DeleteHostKeyInput`](crate::operation::delete_host_key::DeleteHostKeyInput).
    pub fn builder() -> crate::operation::delete_host_key::builders::DeleteHostKeyInputBuilder {
        crate::operation::delete_host_key::builders::DeleteHostKeyInputBuilder::default()
    }
}

/// A builder for [`DeleteHostKeyInput`](crate::operation::delete_host_key::DeleteHostKeyInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DeleteHostKeyInputBuilder {
    pub(crate) server_id: std::option::Option<std::string::String>,
    pub(crate) host_key_id: std::option::Option<std::string::String>,
}
impl DeleteHostKeyInputBuilder {
    /// <p>The identifier of the server that contains the host key that you are deleting.</p>
    pub fn server_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.server_id = Some(input.into());
        self
    }
    /// <p>The identifier of the server that contains the host key that you are deleting.</p>
    pub fn set_server_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.server_id = input;
        self
    }
    /// <p>The identifier of the host key that you are deleting.</p>
    pub fn host_key_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.host_key_id = Some(input.into());
        self
    }
    /// <p>The identifier of the host key that you are deleting.</p>
    pub fn set_host_key_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.host_key_id = input;
        self
    }
    /// Consumes the builder and constructs a [`DeleteHostKeyInput`](crate::operation::delete_host_key::DeleteHostKeyInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::delete_host_key::DeleteHostKeyInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(crate::operation::delete_host_key::DeleteHostKeyInput {
            server_id: self.server_id,
            host_key_id: self.host_key_id,
        })
    }
}
