// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ImportHostKey`](crate::client::fluent_builders::ImportHostKey) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`server_id(impl Into<String>)`](crate::client::fluent_builders::ImportHostKey::server_id) / [`set_server_id(Option<String>)`](crate::client::fluent_builders::ImportHostKey::set_server_id): <p>The identifier of the server that contains the host key that you are importing.</p>
    ///   - [`host_key_body(impl Into<String>)`](crate::client::fluent_builders::ImportHostKey::host_key_body) / [`set_host_key_body(Option<String>)`](crate::client::fluent_builders::ImportHostKey::set_host_key_body): <p>The public key portion of an SSH key pair.</p>  <p>Transfer Family accepts RSA, ECDSA, and ED25519 keys.</p>
    ///   - [`description(impl Into<String>)`](crate::client::fluent_builders::ImportHostKey::description) / [`set_description(Option<String>)`](crate::client::fluent_builders::ImportHostKey::set_description): <p>The text description that identifies this host key.</p>
    ///   - [`tags(Vec<Tag>)`](crate::client::fluent_builders::ImportHostKey::tags) / [`set_tags(Option<Vec<Tag>>)`](crate::client::fluent_builders::ImportHostKey::set_tags): <p>Key-value pairs that can be used to group and search for host keys.</p>
    /// - On success, responds with [`ImportHostKeyOutput`](crate::output::ImportHostKeyOutput) with field(s):
    ///   - [`server_id(Option<String>)`](crate::output::ImportHostKeyOutput::server_id): <p>Returns the server identifier that contains the imported key.</p>
    ///   - [`host_key_id(Option<String>)`](crate::output::ImportHostKeyOutput::host_key_id): <p>Returns the host key identifier for the imported key.</p>
    /// - On failure, responds with [`SdkError<ImportHostKeyError>`](crate::error::ImportHostKeyError)
    pub fn import_host_key(&self) -> crate::client::fluent_builders::ImportHostKey {
        crate::client::fluent_builders::ImportHostKey::new(self.handle.clone())
    }
}
