// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`TestIdentityProvider`](crate::operation::test_identity_provider::builders::TestIdentityProviderFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`server_id(impl Into<String>)`](crate::operation::test_identity_provider::builders::TestIdentityProviderFluentBuilder::server_id) / [`set_server_id(Option<String>)`](crate::operation::test_identity_provider::builders::TestIdentityProviderFluentBuilder::set_server_id):<br>required: **true**<br><p>A system-assigned identifier for a specific server. That server's user authentication method is tested with a user name and password.</p><br>
    ///   - [`server_protocol(Protocol)`](crate::operation::test_identity_provider::builders::TestIdentityProviderFluentBuilder::server_protocol) / [`set_server_protocol(Option<Protocol>)`](crate::operation::test_identity_provider::builders::TestIdentityProviderFluentBuilder::set_server_protocol):<br>required: **false**<br><p>The type of file transfer protocol to be tested.</p>  <p>The available protocols are:</p>  <ul>   <li> <p>Secure Shell (SSH) File Transfer Protocol (SFTP)</p> </li>   <li> <p>File Transfer Protocol Secure (FTPS)</p> </li>   <li> <p>File Transfer Protocol (FTP)</p> </li>   <li> <p>Applicability Statement 2 (AS2)</p> </li>  </ul><br>
    ///   - [`source_ip(impl Into<String>)`](crate::operation::test_identity_provider::builders::TestIdentityProviderFluentBuilder::source_ip) / [`set_source_ip(Option<String>)`](crate::operation::test_identity_provider::builders::TestIdentityProviderFluentBuilder::set_source_ip):<br>required: **false**<br><p>The source IP address of the account to be tested.</p><br>
    ///   - [`user_name(impl Into<String>)`](crate::operation::test_identity_provider::builders::TestIdentityProviderFluentBuilder::user_name) / [`set_user_name(Option<String>)`](crate::operation::test_identity_provider::builders::TestIdentityProviderFluentBuilder::set_user_name):<br>required: **true**<br><p>The name of the account to be tested.</p><br>
    ///   - [`user_password(impl Into<String>)`](crate::operation::test_identity_provider::builders::TestIdentityProviderFluentBuilder::user_password) / [`set_user_password(Option<String>)`](crate::operation::test_identity_provider::builders::TestIdentityProviderFluentBuilder::set_user_password):<br>required: **false**<br><p>The password of the account to be tested.</p><br>
    /// - On success, responds with [`TestIdentityProviderOutput`](crate::operation::test_identity_provider::TestIdentityProviderOutput) with field(s):
    ///   - [`response(Option<String>)`](crate::operation::test_identity_provider::TestIdentityProviderOutput::response): <p>The response that is returned from your API Gateway or your Lambda function.</p>
    ///   - [`status_code(i32)`](crate::operation::test_identity_provider::TestIdentityProviderOutput::status_code): <p>The HTTP status code that is the response from your API Gateway or your Lambda function.</p>
    ///   - [`message(Option<String>)`](crate::operation::test_identity_provider::TestIdentityProviderOutput::message): <p>A message that indicates whether the test was successful or not.</p> <note>   <p>If an empty string is returned, the most likely cause is that the authentication failed due to an incorrect username or password.</p>  </note>
    ///   - [`url(String)`](crate::operation::test_identity_provider::TestIdentityProviderOutput::url): <p>The endpoint of the service used to authenticate a user.</p>
    /// - On failure, responds with [`SdkError<TestIdentityProviderError>`](crate::operation::test_identity_provider::TestIdentityProviderError)
    pub fn test_identity_provider(&self) -> crate::operation::test_identity_provider::builders::TestIdentityProviderFluentBuilder {
        crate::operation::test_identity_provider::builders::TestIdentityProviderFluentBuilder::new(self.handle.clone())
    }
}
