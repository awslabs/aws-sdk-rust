// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CancelOpenCypherQuery`](crate::operation::cancel_open_cypher_query::builders::CancelOpenCypherQueryFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`query_id(impl Into<String>)`](crate::operation::cancel_open_cypher_query::builders::CancelOpenCypherQueryFluentBuilder::query_id) / [`set_query_id(Option<String>)`](crate::operation::cancel_open_cypher_query::builders::CancelOpenCypherQueryFluentBuilder::set_query_id):<br>required: **true**<br><p>The unique ID of the openCypher query to cancel.</p><br>
    ///   - [`silent(bool)`](crate::operation::cancel_open_cypher_query::builders::CancelOpenCypherQueryFluentBuilder::silent) / [`set_silent(Option<bool>)`](crate::operation::cancel_open_cypher_query::builders::CancelOpenCypherQueryFluentBuilder::set_silent):<br>required: **false**<br><p>If set to <code>TRUE</code>, causes the cancelation of the openCypher query to happen silently.</p><br>
    /// - On success, responds with [`CancelOpenCypherQueryOutput`](crate::operation::cancel_open_cypher_query::CancelOpenCypherQueryOutput) with field(s):
    ///   - [`status(Option<String>)`](crate::operation::cancel_open_cypher_query::CancelOpenCypherQueryOutput::status): <p>The cancellation status of the openCypher query.</p>
    ///   - [`payload(Option<bool>)`](crate::operation::cancel_open_cypher_query::CancelOpenCypherQueryOutput::payload): <p>The cancelation payload for the openCypher query.</p>
    /// - On failure, responds with [`SdkError<CancelOpenCypherQueryError>`](crate::operation::cancel_open_cypher_query::CancelOpenCypherQueryError)
    pub fn cancel_open_cypher_query(&self) -> crate::operation::cancel_open_cypher_query::builders::CancelOpenCypherQueryFluentBuilder {
        crate::operation::cancel_open_cypher_query::builders::CancelOpenCypherQueryFluentBuilder::new(self.handle.clone())
    }
}
