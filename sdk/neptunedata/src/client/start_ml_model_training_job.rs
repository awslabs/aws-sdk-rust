// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`StartMLModelTrainingJob`](crate::operation::start_ml_model_training_job::builders::StartMLModelTrainingJobFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`id(impl Into<String>)`](crate::operation::start_ml_model_training_job::builders::StartMLModelTrainingJobFluentBuilder::id) / [`set_id(Option<String>)`](crate::operation::start_ml_model_training_job::builders::StartMLModelTrainingJobFluentBuilder::set_id):<br>required: **false**<br><p>A unique identifier for the new job. The default is An autogenerated UUID.</p><br>
    ///   - [`previous_model_training_job_id(impl Into<String>)`](crate::operation::start_ml_model_training_job::builders::StartMLModelTrainingJobFluentBuilder::previous_model_training_job_id) / [`set_previous_model_training_job_id(Option<String>)`](crate::operation::start_ml_model_training_job::builders::StartMLModelTrainingJobFluentBuilder::set_previous_model_training_job_id):<br>required: **false**<br><p>The job ID of a completed model-training job that you want to update incrementally based on updated data.</p><br>
    ///   - [`data_processing_job_id(impl Into<String>)`](crate::operation::start_ml_model_training_job::builders::StartMLModelTrainingJobFluentBuilder::data_processing_job_id) / [`set_data_processing_job_id(Option<String>)`](crate::operation::start_ml_model_training_job::builders::StartMLModelTrainingJobFluentBuilder::set_data_processing_job_id):<br>required: **true**<br><p>The job ID of the completed data-processing job that has created the data that the training will work with.</p><br>
    ///   - [`train_model_s3_location(impl Into<String>)`](crate::operation::start_ml_model_training_job::builders::StartMLModelTrainingJobFluentBuilder::train_model_s3_location) / [`set_train_model_s3_location(Option<String>)`](crate::operation::start_ml_model_training_job::builders::StartMLModelTrainingJobFluentBuilder::set_train_model_s3_location):<br>required: **true**<br><p>The location in Amazon S3 where the model artifacts are to be stored.</p><br>
    ///   - [`sagemaker_iam_role_arn(impl Into<String>)`](crate::operation::start_ml_model_training_job::builders::StartMLModelTrainingJobFluentBuilder::sagemaker_iam_role_arn) / [`set_sagemaker_iam_role_arn(Option<String>)`](crate::operation::start_ml_model_training_job::builders::StartMLModelTrainingJobFluentBuilder::set_sagemaker_iam_role_arn):<br>required: **false**<br><p>The ARN of an IAM role for SageMaker execution.This must be listed in your DB cluster parameter group or an error will occur.</p><br>
    ///   - [`neptune_iam_role_arn(impl Into<String>)`](crate::operation::start_ml_model_training_job::builders::StartMLModelTrainingJobFluentBuilder::neptune_iam_role_arn) / [`set_neptune_iam_role_arn(Option<String>)`](crate::operation::start_ml_model_training_job::builders::StartMLModelTrainingJobFluentBuilder::set_neptune_iam_role_arn):<br>required: **false**<br><p>The ARN of an IAM role that provides Neptune access to SageMaker and Amazon S3 resources. This must be listed in your DB cluster parameter group or an error will occur.</p><br>
    ///   - [`base_processing_instance_type(impl Into<String>)`](crate::operation::start_ml_model_training_job::builders::StartMLModelTrainingJobFluentBuilder::base_processing_instance_type) / [`set_base_processing_instance_type(Option<String>)`](crate::operation::start_ml_model_training_job::builders::StartMLModelTrainingJobFluentBuilder::set_base_processing_instance_type):<br>required: **false**<br><p>The type of ML instance used in preparing and managing training of ML models. This is a CPU instance chosen based on memory requirements for processing the training data and model.</p><br>
    ///   - [`training_instance_type(impl Into<String>)`](crate::operation::start_ml_model_training_job::builders::StartMLModelTrainingJobFluentBuilder::training_instance_type) / [`set_training_instance_type(Option<String>)`](crate::operation::start_ml_model_training_job::builders::StartMLModelTrainingJobFluentBuilder::set_training_instance_type):<br>required: **false**<br><p>The type of ML instance used for model training. All Neptune ML models support CPU, GPU, and multiGPU training. The default is <code>ml.p3.2xlarge</code>. Choosing the right instance type for training depends on the task type, graph size, and your budget.</p><br>
    ///   - [`training_instance_volume_size_in_gb(i32)`](crate::operation::start_ml_model_training_job::builders::StartMLModelTrainingJobFluentBuilder::training_instance_volume_size_in_gb) / [`set_training_instance_volume_size_in_gb(Option<i32>)`](crate::operation::start_ml_model_training_job::builders::StartMLModelTrainingJobFluentBuilder::set_training_instance_volume_size_in_gb):<br>required: **false**<br><p>The disk volume size of the training instance. Both input data and the output model are stored on disk, so the volume size must be large enough to hold both data sets. The default is 0. If not specified or 0, Neptune ML selects a disk volume size based on the recommendation generated in the data processing step.</p><br>
    ///   - [`training_time_out_in_seconds(i32)`](crate::operation::start_ml_model_training_job::builders::StartMLModelTrainingJobFluentBuilder::training_time_out_in_seconds) / [`set_training_time_out_in_seconds(Option<i32>)`](crate::operation::start_ml_model_training_job::builders::StartMLModelTrainingJobFluentBuilder::set_training_time_out_in_seconds):<br>required: **false**<br><p>Timeout in seconds for the training job. The default is 86,400 (1 day).</p><br>
    ///   - [`max_hpo_number_of_training_jobs(i32)`](crate::operation::start_ml_model_training_job::builders::StartMLModelTrainingJobFluentBuilder::max_hpo_number_of_training_jobs) / [`set_max_hpo_number_of_training_jobs(Option<i32>)`](crate::operation::start_ml_model_training_job::builders::StartMLModelTrainingJobFluentBuilder::set_max_hpo_number_of_training_jobs):<br>required: **false**<br><p>Maximum total number of training jobs to start for the hyperparameter tuning job. The default is 2. Neptune ML automatically tunes the hyperparameters of the machine learning model. To obtain a model that performs well, use at least 10 jobs (in other words, set <code>maxHPONumberOfTrainingJobs</code> to 10). In general, the more tuning runs, the better the results.</p><br>
    ///   - [`max_hpo_parallel_training_jobs(i32)`](crate::operation::start_ml_model_training_job::builders::StartMLModelTrainingJobFluentBuilder::max_hpo_parallel_training_jobs) / [`set_max_hpo_parallel_training_jobs(Option<i32>)`](crate::operation::start_ml_model_training_job::builders::StartMLModelTrainingJobFluentBuilder::set_max_hpo_parallel_training_jobs):<br>required: **false**<br><p>Maximum number of parallel training jobs to start for the hyperparameter tuning job. The default is 2. The number of parallel jobs you can run is limited by the available resources on your training instance.</p><br>
    ///   - [`subnets(impl Into<String>)`](crate::operation::start_ml_model_training_job::builders::StartMLModelTrainingJobFluentBuilder::subnets) / [`set_subnets(Option<Vec::<String>>)`](crate::operation::start_ml_model_training_job::builders::StartMLModelTrainingJobFluentBuilder::set_subnets):<br>required: **false**<br><p>The IDs of the subnets in the Neptune VPC. The default is None.</p><br>
    ///   - [`security_group_ids(impl Into<String>)`](crate::operation::start_ml_model_training_job::builders::StartMLModelTrainingJobFluentBuilder::security_group_ids) / [`set_security_group_ids(Option<Vec::<String>>)`](crate::operation::start_ml_model_training_job::builders::StartMLModelTrainingJobFluentBuilder::set_security_group_ids):<br>required: **false**<br><p>The VPC security group IDs. The default is None.</p><br>
    ///   - [`volume_encryption_kms_key(impl Into<String>)`](crate::operation::start_ml_model_training_job::builders::StartMLModelTrainingJobFluentBuilder::volume_encryption_kms_key) / [`set_volume_encryption_kms_key(Option<String>)`](crate::operation::start_ml_model_training_job::builders::StartMLModelTrainingJobFluentBuilder::set_volume_encryption_kms_key):<br>required: **false**<br><p>The Amazon Key Management Service (KMS) key that SageMaker uses to encrypt data on the storage volume attached to the ML compute instances that run the training job. The default is None.</p><br>
    ///   - [`s3_output_encryption_kms_key(impl Into<String>)`](crate::operation::start_ml_model_training_job::builders::StartMLModelTrainingJobFluentBuilder::s3_output_encryption_kms_key) / [`set_s3_output_encryption_kms_key(Option<String>)`](crate::operation::start_ml_model_training_job::builders::StartMLModelTrainingJobFluentBuilder::set_s3_output_encryption_kms_key):<br>required: **false**<br><p>The Amazon Key Management Service (KMS) key that SageMaker uses to encrypt the output of the processing job. The default is none.</p><br>
    ///   - [`enable_managed_spot_training(bool)`](crate::operation::start_ml_model_training_job::builders::StartMLModelTrainingJobFluentBuilder::enable_managed_spot_training) / [`set_enable_managed_spot_training(Option<bool>)`](crate::operation::start_ml_model_training_job::builders::StartMLModelTrainingJobFluentBuilder::set_enable_managed_spot_training):<br>required: **false**<br><p>Optimizes the cost of training machine-learning models by using Amazon Elastic Compute Cloud spot instances. The default is <code>False</code>.</p><br>
    ///   - [`custom_model_training_parameters(CustomModelTrainingParameters)`](crate::operation::start_ml_model_training_job::builders::StartMLModelTrainingJobFluentBuilder::custom_model_training_parameters) / [`set_custom_model_training_parameters(Option<CustomModelTrainingParameters>)`](crate::operation::start_ml_model_training_job::builders::StartMLModelTrainingJobFluentBuilder::set_custom_model_training_parameters):<br>required: **false**<br><p>The configuration for custom model training. This is a JSON object.</p><br>
    /// - On success, responds with [`StartMlModelTrainingJobOutput`](crate::operation::start_ml_model_training_job::StartMlModelTrainingJobOutput) with field(s):
    ///   - [`id(Option<String>)`](crate::operation::start_ml_model_training_job::StartMlModelTrainingJobOutput::id): <p>The unique ID of the new model training job.</p>
    ///   - [`arn(Option<String>)`](crate::operation::start_ml_model_training_job::StartMlModelTrainingJobOutput::arn): <p>The ARN of the new model training job.</p>
    ///   - [`creation_time_in_millis(Option<i64>)`](crate::operation::start_ml_model_training_job::StartMlModelTrainingJobOutput::creation_time_in_millis): <p>The model training job creation time, in milliseconds.</p>
    /// - On failure, responds with [`SdkError<StartMLModelTrainingJobError>`](crate::operation::start_ml_model_training_job::StartMLModelTrainingJobError)
    pub fn start_ml_model_training_job(&self) -> crate::operation::start_ml_model_training_job::builders::StartMLModelTrainingJobFluentBuilder {
        crate::operation::start_ml_model_training_job::builders::StartMLModelTrainingJobFluentBuilder::new(self.handle.clone())
    }
}
