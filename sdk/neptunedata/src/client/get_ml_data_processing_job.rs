// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetMLDataProcessingJob`](crate::operation::get_ml_data_processing_job::builders::GetMLDataProcessingJobFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`id(impl Into<String>)`](crate::operation::get_ml_data_processing_job::builders::GetMLDataProcessingJobFluentBuilder::id) / [`set_id(Option<String>)`](crate::operation::get_ml_data_processing_job::builders::GetMLDataProcessingJobFluentBuilder::set_id):<br>required: **true**<br><p>The unique identifier of the data-processing job to be retrieved.</p><br>
    ///   - [`neptune_iam_role_arn(impl Into<String>)`](crate::operation::get_ml_data_processing_job::builders::GetMLDataProcessingJobFluentBuilder::neptune_iam_role_arn) / [`set_neptune_iam_role_arn(Option<String>)`](crate::operation::get_ml_data_processing_job::builders::GetMLDataProcessingJobFluentBuilder::set_neptune_iam_role_arn):<br>required: **false**<br><p>The ARN of an IAM role that provides Neptune access to SageMaker and Amazon S3 resources. This must be listed in your DB cluster parameter group or an error will occur.</p><br>
    /// - On success, responds with [`GetMlDataProcessingJobOutput`](crate::operation::get_ml_data_processing_job::GetMlDataProcessingJobOutput) with field(s):
    ///   - [`status(Option<String>)`](crate::operation::get_ml_data_processing_job::GetMlDataProcessingJobOutput::status): <p>Status of the data processing job.</p>
    ///   - [`id(Option<String>)`](crate::operation::get_ml_data_processing_job::GetMlDataProcessingJobOutput::id): <p>The unique identifier of this data-processing job.</p>
    ///   - [`processing_job(Option<MlResourceDefinition>)`](crate::operation::get_ml_data_processing_job::GetMlDataProcessingJobOutput::processing_job): <p>Definition of the data processing job.</p>
    /// - On failure, responds with [`SdkError<GetMLDataProcessingJobError>`](crate::operation::get_ml_data_processing_job::GetMLDataProcessingJobError)
    pub fn get_ml_data_processing_job(&self) -> crate::operation::get_ml_data_processing_job::builders::GetMLDataProcessingJobFluentBuilder {
        crate::operation::get_ml_data_processing_job::builders::GetMLDataProcessingJobFluentBuilder::new(self.handle.clone())
    }
}
