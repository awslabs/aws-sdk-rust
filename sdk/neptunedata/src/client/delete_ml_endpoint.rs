// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeleteMLEndpoint`](crate::operation::delete_ml_endpoint::builders::DeleteMLEndpointFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`id(impl Into<String>)`](crate::operation::delete_ml_endpoint::builders::DeleteMLEndpointFluentBuilder::id) / [`set_id(Option<String>)`](crate::operation::delete_ml_endpoint::builders::DeleteMLEndpointFluentBuilder::set_id):<br>required: **true**<br><p>The unique identifier of the inference endpoint.</p><br>
    ///   - [`neptune_iam_role_arn(impl Into<String>)`](crate::operation::delete_ml_endpoint::builders::DeleteMLEndpointFluentBuilder::neptune_iam_role_arn) / [`set_neptune_iam_role_arn(Option<String>)`](crate::operation::delete_ml_endpoint::builders::DeleteMLEndpointFluentBuilder::set_neptune_iam_role_arn):<br>required: **false**<br><p>The ARN of an IAM role providing Neptune access to SageMaker and Amazon S3 resources. This must be listed in your DB cluster parameter group or an error will be thrown.</p><br>
    ///   - [`clean(bool)`](crate::operation::delete_ml_endpoint::builders::DeleteMLEndpointFluentBuilder::clean) / [`set_clean(Option<bool>)`](crate::operation::delete_ml_endpoint::builders::DeleteMLEndpointFluentBuilder::set_clean):<br>required: **false**<br><p>If this flag is set to <code>TRUE</code>, all Neptune ML S3 artifacts should be deleted when the job is stopped. The default is <code>FALSE</code>.</p><br>
    /// - On success, responds with [`DeleteMlEndpointOutput`](crate::operation::delete_ml_endpoint::DeleteMlEndpointOutput) with field(s):
    ///   - [`status(Option<String>)`](crate::operation::delete_ml_endpoint::DeleteMlEndpointOutput::status): <p>The status of the cancellation.</p>
    /// - On failure, responds with [`SdkError<DeleteMLEndpointError>`](crate::operation::delete_ml_endpoint::DeleteMLEndpointError)
    pub fn delete_ml_endpoint(&self) -> crate::operation::delete_ml_endpoint::builders::DeleteMLEndpointFluentBuilder {
        crate::operation::delete_ml_endpoint::builders::DeleteMLEndpointFluentBuilder::new(self.handle.clone())
    }
}
