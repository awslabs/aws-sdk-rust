// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GetMlModelTrainingJobInput {
    /// <p>The unique identifier of the model-training job to retrieve.</p>
    pub id: ::std::option::Option<::std::string::String>,
    /// <p>The ARN of an IAM role that provides Neptune access to SageMaker and Amazon S3 resources. This must be listed in your DB cluster parameter group or an error will occur.</p>
    pub neptune_iam_role_arn: ::std::option::Option<::std::string::String>,
}
impl GetMlModelTrainingJobInput {
    /// <p>The unique identifier of the model-training job to retrieve.</p>
    pub fn id(&self) -> ::std::option::Option<&str> {
        self.id.as_deref()
    }
    /// <p>The ARN of an IAM role that provides Neptune access to SageMaker and Amazon S3 resources. This must be listed in your DB cluster parameter group or an error will occur.</p>
    pub fn neptune_iam_role_arn(&self) -> ::std::option::Option<&str> {
        self.neptune_iam_role_arn.as_deref()
    }
}
impl GetMlModelTrainingJobInput {
    /// Creates a new builder-style object to manufacture [`GetMlModelTrainingJobInput`](crate::operation::get_ml_model_training_job::GetMlModelTrainingJobInput).
    pub fn builder() -> crate::operation::get_ml_model_training_job::builders::GetMlModelTrainingJobInputBuilder {
        crate::operation::get_ml_model_training_job::builders::GetMlModelTrainingJobInputBuilder::default()
    }
}

/// A builder for [`GetMlModelTrainingJobInput`](crate::operation::get_ml_model_training_job::GetMlModelTrainingJobInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct GetMlModelTrainingJobInputBuilder {
    pub(crate) id: ::std::option::Option<::std::string::String>,
    pub(crate) neptune_iam_role_arn: ::std::option::Option<::std::string::String>,
}
impl GetMlModelTrainingJobInputBuilder {
    /// <p>The unique identifier of the model-training job to retrieve.</p>
    /// This field is required.
    pub fn id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The unique identifier of the model-training job to retrieve.</p>
    pub fn set_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.id = input;
        self
    }
    /// <p>The unique identifier of the model-training job to retrieve.</p>
    pub fn get_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.id
    }
    /// <p>The ARN of an IAM role that provides Neptune access to SageMaker and Amazon S3 resources. This must be listed in your DB cluster parameter group or an error will occur.</p>
    pub fn neptune_iam_role_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.neptune_iam_role_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ARN of an IAM role that provides Neptune access to SageMaker and Amazon S3 resources. This must be listed in your DB cluster parameter group or an error will occur.</p>
    pub fn set_neptune_iam_role_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.neptune_iam_role_arn = input;
        self
    }
    /// <p>The ARN of an IAM role that provides Neptune access to SageMaker and Amazon S3 resources. This must be listed in your DB cluster parameter group or an error will occur.</p>
    pub fn get_neptune_iam_role_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.neptune_iam_role_arn
    }
    /// Consumes the builder and constructs a [`GetMlModelTrainingJobInput`](crate::operation::get_ml_model_training_job::GetMlModelTrainingJobInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::get_ml_model_training_job::GetMlModelTrainingJobInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::get_ml_model_training_job::GetMlModelTrainingJobInput {
            id: self.id,
            neptune_iam_role_arn: self.neptune_iam_role_arn,
        })
    }
}
