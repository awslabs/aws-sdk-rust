// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ListOpenCypherQueriesInput {
    /// <p> When set to <code>TRUE</code> and other parameters are not present, causes status information to be returned for waiting queries as well as for running queries.</p>
    pub include_waiting: ::std::option::Option<bool>,
}
impl ListOpenCypherQueriesInput {
    /// <p> When set to <code>TRUE</code> and other parameters are not present, causes status information to be returned for waiting queries as well as for running queries.</p>
    pub fn include_waiting(&self) -> ::std::option::Option<bool> {
        self.include_waiting
    }
}
impl ListOpenCypherQueriesInput {
    /// Creates a new builder-style object to manufacture [`ListOpenCypherQueriesInput`](crate::operation::list_open_cypher_queries::ListOpenCypherQueriesInput).
    pub fn builder() -> crate::operation::list_open_cypher_queries::builders::ListOpenCypherQueriesInputBuilder {
        crate::operation::list_open_cypher_queries::builders::ListOpenCypherQueriesInputBuilder::default()
    }
}

/// A builder for [`ListOpenCypherQueriesInput`](crate::operation::list_open_cypher_queries::ListOpenCypherQueriesInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ListOpenCypherQueriesInputBuilder {
    pub(crate) include_waiting: ::std::option::Option<bool>,
}
impl ListOpenCypherQueriesInputBuilder {
    /// <p> When set to <code>TRUE</code> and other parameters are not present, causes status information to be returned for waiting queries as well as for running queries.</p>
    pub fn include_waiting(mut self, input: bool) -> Self {
        self.include_waiting = ::std::option::Option::Some(input);
        self
    }
    /// <p> When set to <code>TRUE</code> and other parameters are not present, causes status information to be returned for waiting queries as well as for running queries.</p>
    pub fn set_include_waiting(mut self, input: ::std::option::Option<bool>) -> Self {
        self.include_waiting = input;
        self
    }
    /// <p> When set to <code>TRUE</code> and other parameters are not present, causes status information to be returned for waiting queries as well as for running queries.</p>
    pub fn get_include_waiting(&self) -> &::std::option::Option<bool> {
        &self.include_waiting
    }
    /// Consumes the builder and constructs a [`ListOpenCypherQueriesInput`](crate::operation::list_open_cypher_queries::ListOpenCypherQueriesInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::list_open_cypher_queries::ListOpenCypherQueriesInput, ::aws_smithy_types::error::operation::BuildError>
    {
        ::std::result::Result::Ok(crate::operation::list_open_cypher_queries::ListOpenCypherQueriesInput {
            include_waiting: self.include_waiting,
        })
    }
}
