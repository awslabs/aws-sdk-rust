// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_start_ml_data_processing_job_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::start_ml_data_processing_job::StartMlDataProcessingJobInput,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.config_file_name {
        object.key("configFileName").string(var_1.as_str());
    }
    if let Some(var_2) = &input.id {
        object.key("id").string(var_2.as_str());
    }
    if let Some(var_3) = &input.input_data_s3_location {
        object.key("inputDataS3Location").string(var_3.as_str());
    }
    if let Some(var_4) = &input.model_type {
        object.key("modelType").string(var_4.as_str());
    }
    if let Some(var_5) = &input.neptune_iam_role_arn {
        object.key("neptuneIamRoleArn").string(var_5.as_str());
    }
    if let Some(var_6) = &input.previous_data_processing_job_id {
        object.key("previousDataProcessingJobId").string(var_6.as_str());
    }
    if let Some(var_7) = &input.processed_data_s3_location {
        object.key("processedDataS3Location").string(var_7.as_str());
    }
    if let Some(var_8) = &input.processing_instance_type {
        object.key("processingInstanceType").string(var_8.as_str());
    }
    if let Some(var_9) = &input.processing_instance_volume_size_in_gb {
        object.key("processingInstanceVolumeSizeInGB").number(
            #[allow(clippy::useless_conversion)]
            ::aws_smithy_types::Number::NegInt((*var_9).into()),
        );
    }
    if let Some(var_10) = &input.processing_time_out_in_seconds {
        object.key("processingTimeOutInSeconds").number(
            #[allow(clippy::useless_conversion)]
            ::aws_smithy_types::Number::NegInt((*var_10).into()),
        );
    }
    if let Some(var_11) = &input.s3_output_encryption_kms_key {
        object.key("s3OutputEncryptionKMSKey").string(var_11.as_str());
    }
    if let Some(var_12) = &input.sagemaker_iam_role_arn {
        object.key("sagemakerIamRoleArn").string(var_12.as_str());
    }
    if let Some(var_13) = &input.security_group_ids {
        let mut array_14 = object.key("securityGroupIds").start_array();
        for item_15 in var_13 {
            {
                array_14.value().string(item_15.as_str());
            }
        }
        array_14.finish();
    }
    if let Some(var_16) = &input.subnets {
        let mut array_17 = object.key("subnets").start_array();
        for item_18 in var_16 {
            {
                array_17.value().string(item_18.as_str());
            }
        }
        array_17.finish();
    }
    if let Some(var_19) = &input.volume_encryption_kms_key {
        object.key("volumeEncryptionKMSKey").string(var_19.as_str());
    }
    Ok(())
}
