// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_create_ml_endpoint_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::create_ml_endpoint::CreateMlEndpointInput,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.id {
        object.key("id").string(var_1.as_str());
    }
    if let Some(var_2) = &input.instance_count {
        object.key("instanceCount").number(
            #[allow(clippy::useless_conversion)]
            ::aws_smithy_types::Number::NegInt((*var_2).into()),
        );
    }
    if let Some(var_3) = &input.instance_type {
        object.key("instanceType").string(var_3.as_str());
    }
    if let Some(var_4) = &input.ml_model_training_job_id {
        object.key("mlModelTrainingJobId").string(var_4.as_str());
    }
    if let Some(var_5) = &input.ml_model_transform_job_id {
        object.key("mlModelTransformJobId").string(var_5.as_str());
    }
    if let Some(var_6) = &input.model_name {
        object.key("modelName").string(var_6.as_str());
    }
    if let Some(var_7) = &input.neptune_iam_role_arn {
        object.key("neptuneIamRoleArn").string(var_7.as_str());
    }
    if let Some(var_8) = &input.update {
        object.key("update").boolean(*var_8);
    }
    if let Some(var_9) = &input.volume_encryption_kms_key {
        object.key("volumeEncryptionKMSKey").string(var_9.as_str());
    }
    Ok(())
}
