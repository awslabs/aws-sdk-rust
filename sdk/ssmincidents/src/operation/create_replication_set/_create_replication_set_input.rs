// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct CreateReplicationSetInput {
    /// <p>The Regions that Incident Manager replicates your data to. You can have up to three Regions in your replication set.</p>
    #[doc(hidden)]
    pub regions: std::option::Option<
        std::collections::HashMap<std::string::String, crate::types::RegionMapInputValue>,
    >,
    /// <p>A token that ensures that the operation is called only once with the specified details.</p>
    #[doc(hidden)]
    pub client_token: std::option::Option<std::string::String>,
    /// <p>A list of tags to add to the replication set.</p>
    #[doc(hidden)]
    pub tags:
        std::option::Option<std::collections::HashMap<std::string::String, std::string::String>>,
}
impl CreateReplicationSetInput {
    /// <p>The Regions that Incident Manager replicates your data to. You can have up to three Regions in your replication set.</p>
    pub fn regions(
        &self,
    ) -> std::option::Option<
        &std::collections::HashMap<std::string::String, crate::types::RegionMapInputValue>,
    > {
        self.regions.as_ref()
    }
    /// <p>A token that ensures that the operation is called only once with the specified details.</p>
    pub fn client_token(&self) -> std::option::Option<&str> {
        self.client_token.as_deref()
    }
    /// <p>A list of tags to add to the replication set.</p>
    pub fn tags(
        &self,
    ) -> std::option::Option<&std::collections::HashMap<std::string::String, std::string::String>>
    {
        self.tags.as_ref()
    }
}
impl CreateReplicationSetInput {
    /// Creates a new builder-style object to manufacture [`CreateReplicationSetInput`](crate::operation::create_replication_set::CreateReplicationSetInput).
    pub fn builder(
    ) -> crate::operation::create_replication_set::builders::CreateReplicationSetInputBuilder {
        crate::operation::create_replication_set::builders::CreateReplicationSetInputBuilder::default()
    }
}

/// A builder for [`CreateReplicationSetInput`](crate::operation::create_replication_set::CreateReplicationSetInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct CreateReplicationSetInputBuilder {
    pub(crate) regions: std::option::Option<
        std::collections::HashMap<std::string::String, crate::types::RegionMapInputValue>,
    >,
    pub(crate) client_token: std::option::Option<std::string::String>,
    pub(crate) tags:
        std::option::Option<std::collections::HashMap<std::string::String, std::string::String>>,
}
impl CreateReplicationSetInputBuilder {
    /// Adds a key-value pair to `regions`.
    ///
    /// To override the contents of this collection use [`set_regions`](Self::set_regions).
    ///
    /// <p>The Regions that Incident Manager replicates your data to. You can have up to three Regions in your replication set.</p>
    pub fn regions(
        mut self,
        k: impl Into<std::string::String>,
        v: crate::types::RegionMapInputValue,
    ) -> Self {
        let mut hash_map = self.regions.unwrap_or_default();
        hash_map.insert(k.into(), v);
        self.regions = Some(hash_map);
        self
    }
    /// <p>The Regions that Incident Manager replicates your data to. You can have up to three Regions in your replication set.</p>
    pub fn set_regions(
        mut self,
        input: std::option::Option<
            std::collections::HashMap<std::string::String, crate::types::RegionMapInputValue>,
        >,
    ) -> Self {
        self.regions = input;
        self
    }
    /// <p>A token that ensures that the operation is called only once with the specified details.</p>
    pub fn client_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.client_token = Some(input.into());
        self
    }
    /// <p>A token that ensures that the operation is called only once with the specified details.</p>
    pub fn set_client_token(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.client_token = input;
        self
    }
    /// Adds a key-value pair to `tags`.
    ///
    /// To override the contents of this collection use [`set_tags`](Self::set_tags).
    ///
    /// <p>A list of tags to add to the replication set.</p>
    pub fn tags(
        mut self,
        k: impl Into<std::string::String>,
        v: impl Into<std::string::String>,
    ) -> Self {
        let mut hash_map = self.tags.unwrap_or_default();
        hash_map.insert(k.into(), v.into());
        self.tags = Some(hash_map);
        self
    }
    /// <p>A list of tags to add to the replication set.</p>
    pub fn set_tags(
        mut self,
        input: std::option::Option<
            std::collections::HashMap<std::string::String, std::string::String>,
        >,
    ) -> Self {
        self.tags = input;
        self
    }
    /// Consumes the builder and constructs a [`CreateReplicationSetInput`](crate::operation::create_replication_set::CreateReplicationSetInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::create_replication_set::CreateReplicationSetInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::create_replication_set::CreateReplicationSetInput {
                regions: self.regions,
                client_token: self.client_token,
                tags: self.tags,
            },
        )
    }
}
