// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Resources that responders use to triage and mitigate the incident.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct RelatedItem {
    /// <p>Details about the related item.</p>
    pub identifier: ::std::option::Option<crate::types::ItemIdentifier>,
    /// <p>The title of the related item.</p>
    pub title: ::std::option::Option<::std::string::String>,
    /// <p>A unique ID for a <code>RelatedItem</code>.</p> <important>
    /// <p>Don't specify this parameter when you add a <code>RelatedItem</code> by using the <code>UpdateRelatedItems</code> API action.</p>
    /// </important>
    pub generated_id: ::std::option::Option<::std::string::String>,
}
impl RelatedItem {
    /// <p>Details about the related item.</p>
    pub fn identifier(&self) -> ::std::option::Option<&crate::types::ItemIdentifier> {
        self.identifier.as_ref()
    }
    /// <p>The title of the related item.</p>
    pub fn title(&self) -> ::std::option::Option<&str> {
        self.title.as_deref()
    }
    /// <p>A unique ID for a <code>RelatedItem</code>.</p> <important>
    /// <p>Don't specify this parameter when you add a <code>RelatedItem</code> by using the <code>UpdateRelatedItems</code> API action.</p>
    /// </important>
    pub fn generated_id(&self) -> ::std::option::Option<&str> {
        self.generated_id.as_deref()
    }
}
impl RelatedItem {
    /// Creates a new builder-style object to manufacture [`RelatedItem`](crate::types::RelatedItem).
    pub fn builder() -> crate::types::builders::RelatedItemBuilder {
        crate::types::builders::RelatedItemBuilder::default()
    }
}

/// A builder for [`RelatedItem`](crate::types::RelatedItem).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct RelatedItemBuilder {
    pub(crate) identifier: ::std::option::Option<crate::types::ItemIdentifier>,
    pub(crate) title: ::std::option::Option<::std::string::String>,
    pub(crate) generated_id: ::std::option::Option<::std::string::String>,
}
impl RelatedItemBuilder {
    /// <p>Details about the related item.</p>
    /// This field is required.
    pub fn identifier(mut self, input: crate::types::ItemIdentifier) -> Self {
        self.identifier = ::std::option::Option::Some(input);
        self
    }
    /// <p>Details about the related item.</p>
    pub fn set_identifier(mut self, input: ::std::option::Option<crate::types::ItemIdentifier>) -> Self {
        self.identifier = input;
        self
    }
    /// <p>Details about the related item.</p>
    pub fn get_identifier(&self) -> &::std::option::Option<crate::types::ItemIdentifier> {
        &self.identifier
    }
    /// <p>The title of the related item.</p>
    pub fn title(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.title = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The title of the related item.</p>
    pub fn set_title(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.title = input;
        self
    }
    /// <p>The title of the related item.</p>
    pub fn get_title(&self) -> &::std::option::Option<::std::string::String> {
        &self.title
    }
    /// <p>A unique ID for a <code>RelatedItem</code>.</p> <important>
    /// <p>Don't specify this parameter when you add a <code>RelatedItem</code> by using the <code>UpdateRelatedItems</code> API action.</p>
    /// </important>
    pub fn generated_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.generated_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>A unique ID for a <code>RelatedItem</code>.</p> <important>
    /// <p>Don't specify this parameter when you add a <code>RelatedItem</code> by using the <code>UpdateRelatedItems</code> API action.</p>
    /// </important>
    pub fn set_generated_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.generated_id = input;
        self
    }
    /// <p>A unique ID for a <code>RelatedItem</code>.</p> <important>
    /// <p>Don't specify this parameter when you add a <code>RelatedItem</code> by using the <code>UpdateRelatedItems</code> API action.</p>
    /// </important>
    pub fn get_generated_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.generated_id
    }
    /// Consumes the builder and constructs a [`RelatedItem`](crate::types::RelatedItem).
    pub fn build(self) -> crate::types::RelatedItem {
        crate::types::RelatedItem {
            identifier: self.identifier,
            title: self.title,
            generated_id: self.generated_id,
        }
    }
}
