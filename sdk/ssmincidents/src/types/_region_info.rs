// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about a Amazon Web Services Region in your replication set.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct RegionInfo {
    /// <p>The ID of the KMS key used to encrypt the data in this Amazon Web Services Region.</p>
    #[doc(hidden)]
    pub sse_kms_key_id: std::option::Option<std::string::String>,
    /// <p>The status of the Amazon Web Services Region in the replication set.</p>
    #[doc(hidden)]
    pub status: std::option::Option<crate::types::RegionStatus>,
    /// <p>Information displayed about the status of the Amazon Web Services Region.</p>
    #[doc(hidden)]
    pub status_message: std::option::Option<std::string::String>,
    /// <p>The most recent date and time that Incident Manager updated the Amazon Web Services Region's status.</p>
    #[doc(hidden)]
    pub status_update_date_time: std::option::Option<aws_smithy_types::DateTime>,
}
impl RegionInfo {
    /// <p>The ID of the KMS key used to encrypt the data in this Amazon Web Services Region.</p>
    pub fn sse_kms_key_id(&self) -> std::option::Option<&str> {
        self.sse_kms_key_id.as_deref()
    }
    /// <p>The status of the Amazon Web Services Region in the replication set.</p>
    pub fn status(&self) -> std::option::Option<&crate::types::RegionStatus> {
        self.status.as_ref()
    }
    /// <p>Information displayed about the status of the Amazon Web Services Region.</p>
    pub fn status_message(&self) -> std::option::Option<&str> {
        self.status_message.as_deref()
    }
    /// <p>The most recent date and time that Incident Manager updated the Amazon Web Services Region's status.</p>
    pub fn status_update_date_time(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.status_update_date_time.as_ref()
    }
}
impl RegionInfo {
    /// Creates a new builder-style object to manufacture [`RegionInfo`](crate::types::RegionInfo).
    pub fn builder() -> crate::types::builders::RegionInfoBuilder {
        crate::types::builders::RegionInfoBuilder::default()
    }
}

/// A builder for [`RegionInfo`](crate::types::RegionInfo).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct RegionInfoBuilder {
    pub(crate) sse_kms_key_id: std::option::Option<std::string::String>,
    pub(crate) status: std::option::Option<crate::types::RegionStatus>,
    pub(crate) status_message: std::option::Option<std::string::String>,
    pub(crate) status_update_date_time: std::option::Option<aws_smithy_types::DateTime>,
}
impl RegionInfoBuilder {
    /// <p>The ID of the KMS key used to encrypt the data in this Amazon Web Services Region.</p>
    pub fn sse_kms_key_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.sse_kms_key_id = Some(input.into());
        self
    }
    /// <p>The ID of the KMS key used to encrypt the data in this Amazon Web Services Region.</p>
    pub fn set_sse_kms_key_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.sse_kms_key_id = input;
        self
    }
    /// <p>The status of the Amazon Web Services Region in the replication set.</p>
    pub fn status(mut self, input: crate::types::RegionStatus) -> Self {
        self.status = Some(input);
        self
    }
    /// <p>The status of the Amazon Web Services Region in the replication set.</p>
    pub fn set_status(mut self, input: std::option::Option<crate::types::RegionStatus>) -> Self {
        self.status = input;
        self
    }
    /// <p>Information displayed about the status of the Amazon Web Services Region.</p>
    pub fn status_message(mut self, input: impl Into<std::string::String>) -> Self {
        self.status_message = Some(input.into());
        self
    }
    /// <p>Information displayed about the status of the Amazon Web Services Region.</p>
    pub fn set_status_message(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.status_message = input;
        self
    }
    /// <p>The most recent date and time that Incident Manager updated the Amazon Web Services Region's status.</p>
    pub fn status_update_date_time(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.status_update_date_time = Some(input);
        self
    }
    /// <p>The most recent date and time that Incident Manager updated the Amazon Web Services Region's status.</p>
    pub fn set_status_update_date_time(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.status_update_date_time = input;
        self
    }
    /// Consumes the builder and constructs a [`RegionInfo`](crate::types::RegionInfo).
    pub fn build(self) -> crate::types::RegionInfo {
        crate::types::RegionInfo {
            sse_kms_key_id: self.sse_kms_key_id,
            status: self.status,
            status_message: self.status_message,
            status_update_date_time: self.status_update_date_time,
        }
    }
}
