// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Details about the PagerDuty configuration for a response plan.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct PagerDutyConfiguration {
    /// <p>The name of the PagerDuty configuration.</p>
    pub name: ::std::string::String,
    /// <p>The ID of the Amazon Web Services Secrets Manager secret that stores your PagerDuty key, either a General Access REST API Key or User Token REST API Key, and other user credentials.</p>
    pub secret_id: ::std::string::String,
    /// <p>Details about the PagerDuty service associated with the configuration.</p>
    pub pager_duty_incident_configuration: ::std::option::Option<crate::types::PagerDutyIncidentConfiguration>,
}
impl PagerDutyConfiguration {
    /// <p>The name of the PagerDuty configuration.</p>
    pub fn name(&self) -> &str {
        use std::ops::Deref;
        self.name.deref()
    }
    /// <p>The ID of the Amazon Web Services Secrets Manager secret that stores your PagerDuty key, either a General Access REST API Key or User Token REST API Key, and other user credentials.</p>
    pub fn secret_id(&self) -> &str {
        use std::ops::Deref;
        self.secret_id.deref()
    }
    /// <p>Details about the PagerDuty service associated with the configuration.</p>
    pub fn pager_duty_incident_configuration(&self) -> ::std::option::Option<&crate::types::PagerDutyIncidentConfiguration> {
        self.pager_duty_incident_configuration.as_ref()
    }
}
impl PagerDutyConfiguration {
    /// Creates a new builder-style object to manufacture [`PagerDutyConfiguration`](crate::types::PagerDutyConfiguration).
    pub fn builder() -> crate::types::builders::PagerDutyConfigurationBuilder {
        crate::types::builders::PagerDutyConfigurationBuilder::default()
    }
}

/// A builder for [`PagerDutyConfiguration`](crate::types::PagerDutyConfiguration).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct PagerDutyConfigurationBuilder {
    pub(crate) name: ::std::option::Option<::std::string::String>,
    pub(crate) secret_id: ::std::option::Option<::std::string::String>,
    pub(crate) pager_duty_incident_configuration: ::std::option::Option<crate::types::PagerDutyIncidentConfiguration>,
}
impl PagerDutyConfigurationBuilder {
    /// <p>The name of the PagerDuty configuration.</p>
    /// This field is required.
    pub fn name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the PagerDuty configuration.</p>
    pub fn set_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>The name of the PagerDuty configuration.</p>
    pub fn get_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.name
    }
    /// <p>The ID of the Amazon Web Services Secrets Manager secret that stores your PagerDuty key, either a General Access REST API Key or User Token REST API Key, and other user credentials.</p>
    /// This field is required.
    pub fn secret_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.secret_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of the Amazon Web Services Secrets Manager secret that stores your PagerDuty key, either a General Access REST API Key or User Token REST API Key, and other user credentials.</p>
    pub fn set_secret_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.secret_id = input;
        self
    }
    /// <p>The ID of the Amazon Web Services Secrets Manager secret that stores your PagerDuty key, either a General Access REST API Key or User Token REST API Key, and other user credentials.</p>
    pub fn get_secret_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.secret_id
    }
    /// <p>Details about the PagerDuty service associated with the configuration.</p>
    /// This field is required.
    pub fn pager_duty_incident_configuration(mut self, input: crate::types::PagerDutyIncidentConfiguration) -> Self {
        self.pager_duty_incident_configuration = ::std::option::Option::Some(input);
        self
    }
    /// <p>Details about the PagerDuty service associated with the configuration.</p>
    pub fn set_pager_duty_incident_configuration(mut self, input: ::std::option::Option<crate::types::PagerDutyIncidentConfiguration>) -> Self {
        self.pager_duty_incident_configuration = input;
        self
    }
    /// <p>Details about the PagerDuty service associated with the configuration.</p>
    pub fn get_pager_duty_incident_configuration(&self) -> &::std::option::Option<crate::types::PagerDutyIncidentConfiguration> {
        &self.pager_duty_incident_configuration
    }
    /// Consumes the builder and constructs a [`PagerDutyConfiguration`](crate::types::PagerDutyConfiguration).
    /// This method will fail if any of the following fields are not set:
    /// - [`name`](crate::types::builders::PagerDutyConfigurationBuilder::name)
    /// - [`secret_id`](crate::types::builders::PagerDutyConfigurationBuilder::secret_id)
    pub fn build(self) -> ::std::result::Result<crate::types::PagerDutyConfiguration, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::PagerDutyConfiguration {
            name: self.name.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "name",
                    "name was not specified but it is required when building PagerDutyConfiguration",
                )
            })?,
            secret_id: self.secret_id.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "secret_id",
                    "secret_id was not specified but it is required when building PagerDutyConfiguration",
                )
            })?,
            pager_duty_incident_configuration: self.pager_duty_incident_configuration,
        })
    }
}
