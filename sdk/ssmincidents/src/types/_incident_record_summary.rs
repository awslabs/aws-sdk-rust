// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Details describing an incident record.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct IncidentRecordSummary {
    /// <p>The Amazon Resource Name (ARN) of the incident.</p>
    #[doc(hidden)]
    pub arn: std::option::Option<std::string::String>,
    /// <p>The title of the incident. This value is either provided by the response plan or overwritten on creation.</p>
    #[doc(hidden)]
    pub title: std::option::Option<std::string::String>,
    /// <p>The current status of the incident.</p>
    #[doc(hidden)]
    pub status: std::option::Option<crate::types::IncidentRecordStatus>,
    /// <p>Defines the impact to customers and applications.</p>
    #[doc(hidden)]
    pub impact: std::option::Option<i32>,
    /// <p>The time the incident was created.</p>
    #[doc(hidden)]
    pub creation_time: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>The time the incident was resolved.</p>
    #[doc(hidden)]
    pub resolved_time: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>What caused Incident Manager to create the incident.</p>
    #[doc(hidden)]
    pub incident_record_source: std::option::Option<crate::types::IncidentRecordSource>,
}
impl IncidentRecordSummary {
    /// <p>The Amazon Resource Name (ARN) of the incident.</p>
    pub fn arn(&self) -> std::option::Option<&str> {
        self.arn.as_deref()
    }
    /// <p>The title of the incident. This value is either provided by the response plan or overwritten on creation.</p>
    pub fn title(&self) -> std::option::Option<&str> {
        self.title.as_deref()
    }
    /// <p>The current status of the incident.</p>
    pub fn status(&self) -> std::option::Option<&crate::types::IncidentRecordStatus> {
        self.status.as_ref()
    }
    /// <p>Defines the impact to customers and applications.</p>
    pub fn impact(&self) -> std::option::Option<i32> {
        self.impact
    }
    /// <p>The time the incident was created.</p>
    pub fn creation_time(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.creation_time.as_ref()
    }
    /// <p>The time the incident was resolved.</p>
    pub fn resolved_time(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.resolved_time.as_ref()
    }
    /// <p>What caused Incident Manager to create the incident.</p>
    pub fn incident_record_source(
        &self,
    ) -> std::option::Option<&crate::types::IncidentRecordSource> {
        self.incident_record_source.as_ref()
    }
}
impl IncidentRecordSummary {
    /// Creates a new builder-style object to manufacture [`IncidentRecordSummary`](crate::types::IncidentRecordSummary).
    pub fn builder() -> crate::types::builders::IncidentRecordSummaryBuilder {
        crate::types::builders::IncidentRecordSummaryBuilder::default()
    }
}

/// A builder for [`IncidentRecordSummary`](crate::types::IncidentRecordSummary).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct IncidentRecordSummaryBuilder {
    pub(crate) arn: std::option::Option<std::string::String>,
    pub(crate) title: std::option::Option<std::string::String>,
    pub(crate) status: std::option::Option<crate::types::IncidentRecordStatus>,
    pub(crate) impact: std::option::Option<i32>,
    pub(crate) creation_time: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) resolved_time: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) incident_record_source: std::option::Option<crate::types::IncidentRecordSource>,
}
impl IncidentRecordSummaryBuilder {
    /// <p>The Amazon Resource Name (ARN) of the incident.</p>
    pub fn arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.arn = Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the incident.</p>
    pub fn set_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.arn = input;
        self
    }
    /// <p>The title of the incident. This value is either provided by the response plan or overwritten on creation.</p>
    pub fn title(mut self, input: impl Into<std::string::String>) -> Self {
        self.title = Some(input.into());
        self
    }
    /// <p>The title of the incident. This value is either provided by the response plan or overwritten on creation.</p>
    pub fn set_title(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.title = input;
        self
    }
    /// <p>The current status of the incident.</p>
    pub fn status(mut self, input: crate::types::IncidentRecordStatus) -> Self {
        self.status = Some(input);
        self
    }
    /// <p>The current status of the incident.</p>
    pub fn set_status(
        mut self,
        input: std::option::Option<crate::types::IncidentRecordStatus>,
    ) -> Self {
        self.status = input;
        self
    }
    /// <p>Defines the impact to customers and applications.</p>
    pub fn impact(mut self, input: i32) -> Self {
        self.impact = Some(input);
        self
    }
    /// <p>Defines the impact to customers and applications.</p>
    pub fn set_impact(mut self, input: std::option::Option<i32>) -> Self {
        self.impact = input;
        self
    }
    /// <p>The time the incident was created.</p>
    pub fn creation_time(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.creation_time = Some(input);
        self
    }
    /// <p>The time the incident was created.</p>
    pub fn set_creation_time(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.creation_time = input;
        self
    }
    /// <p>The time the incident was resolved.</p>
    pub fn resolved_time(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.resolved_time = Some(input);
        self
    }
    /// <p>The time the incident was resolved.</p>
    pub fn set_resolved_time(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.resolved_time = input;
        self
    }
    /// <p>What caused Incident Manager to create the incident.</p>
    pub fn incident_record_source(mut self, input: crate::types::IncidentRecordSource) -> Self {
        self.incident_record_source = Some(input);
        self
    }
    /// <p>What caused Incident Manager to create the incident.</p>
    pub fn set_incident_record_source(
        mut self,
        input: std::option::Option<crate::types::IncidentRecordSource>,
    ) -> Self {
        self.incident_record_source = input;
        self
    }
    /// Consumes the builder and constructs a [`IncidentRecordSummary`](crate::types::IncidentRecordSummary).
    pub fn build(self) -> crate::types::IncidentRecordSummary {
        crate::types::IncidentRecordSummary {
            arn: self.arn,
            title: self.title,
            status: self.status,
            impact: self.impact,
            creation_time: self.creation_time,
            resolved_time: self.resolved_time,
            incident_record_source: self.incident_record_source,
        }
    }
}
