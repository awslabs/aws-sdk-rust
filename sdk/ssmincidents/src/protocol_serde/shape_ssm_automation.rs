// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_ssm_automation(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::types::SsmAutomation,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    {
        object.key("roleArn").string(input.role_arn.as_str());
    }
    {
        object.key("documentName").string(input.document_name.as_str());
    }
    if let Some(var_1) = &input.document_version {
        object.key("documentVersion").string(var_1.as_str());
    }
    if let Some(var_2) = &input.target_account {
        object.key("targetAccount").string(var_2.as_str());
    }
    if let Some(var_3) = &input.parameters {
        #[allow(unused_mut)]
        let mut object_4 = object.key("parameters").start_object();
        for (key_5, value_6) in var_3 {
            {
                let mut array_7 = object_4.key(key_5.as_str()).start_array();
                for item_8 in value_6 {
                    {
                        array_7.value().string(item_8.as_str());
                    }
                }
                array_7.finish();
            }
        }
        object_4.finish();
    }
    if let Some(var_9) = &input.dynamic_parameters {
        #[allow(unused_mut)]
        let mut object_10 = object.key("dynamicParameters").start_object();
        for (key_11, value_12) in var_9 {
            {
                #[allow(unused_mut)]
                let mut object_13 = object_10.key(key_11.as_str()).start_object();
                crate::protocol_serde::shape_dynamic_ssm_parameter_value::ser_dynamic_ssm_parameter_value(&mut object_13, value_12)?;
                object_13.finish();
            }
        }
        object_10.finish();
    }
    Ok(())
}

pub(crate) fn de_ssm_automation<'a, I>(
    tokens: &mut ::std::iter::Peekable<I>,
) -> Result<Option<crate::types::SsmAutomation>, ::aws_smithy_json::deserialize::error::DeserializeError>
where
    I: Iterator<Item = Result<::aws_smithy_json::deserialize::Token<'a>, ::aws_smithy_json::deserialize::error::DeserializeError>>,
{
    match tokens.next().transpose()? {
        Some(::aws_smithy_json::deserialize::Token::ValueNull { .. }) => Ok(None),
        Some(::aws_smithy_json::deserialize::Token::StartObject { .. }) => {
            #[allow(unused_mut)]
            let mut builder = crate::types::builders::SsmAutomationBuilder::default();
            loop {
                match tokens.next().transpose()? {
                    Some(::aws_smithy_json::deserialize::Token::EndObject { .. }) => break,
                    Some(::aws_smithy_json::deserialize::Token::ObjectKey { key, .. }) => match key.to_unescaped()?.as_ref() {
                        "roleArn" => {
                            builder = builder.set_role_arn(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                            );
                        }
                        "documentName" => {
                            builder = builder.set_document_name(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                            );
                        }
                        "documentVersion" => {
                            builder = builder.set_document_version(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                            );
                        }
                        "targetAccount" => {
                            builder = builder.set_target_account(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| crate::types::SsmTargetAccount::from(u.as_ref())))
                                    .transpose()?,
                            );
                        }
                        "parameters" => {
                            builder = builder.set_parameters(crate::protocol_serde::shape_ssm_parameters::de_ssm_parameters(tokens)?);
                        }
                        "dynamicParameters" => {
                            builder = builder
                                .set_dynamic_parameters(crate::protocol_serde::shape_dynamic_ssm_parameters::de_dynamic_ssm_parameters(tokens)?);
                        }
                        _ => ::aws_smithy_json::deserialize::token::skip_value(tokens)?,
                    },
                    other => {
                        return Err(::aws_smithy_json::deserialize::error::DeserializeError::custom(format!(
                            "expected object key or end object, found: {:?}",
                            other
                        )))
                    }
                }
            }
            Ok(Some(crate::serde_util::ssm_automation_correct_errors(builder).build().map_err(
                |err| ::aws_smithy_json::deserialize::error::DeserializeError::custom_source("Response was invalid", err),
            )?))
        }
        _ => Err(::aws_smithy_json::deserialize::error::DeserializeError::custom(
            "expected start object or null",
        )),
    }
}
