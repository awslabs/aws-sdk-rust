// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_condition(
    object_2: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::types::Condition,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    match input {
        crate::types::Condition::Before(inner) => {
            object_2
                .key("before")
                .date_time(inner, ::aws_smithy_types::date_time::Format::EpochSeconds)?;
        }
        crate::types::Condition::After(inner) => {
            object_2
                .key("after")
                .date_time(inner, ::aws_smithy_types::date_time::Format::EpochSeconds)?;
        }
        crate::types::Condition::Equals(inner) => {
            #[allow(unused_mut)]
            let mut object_1 = object_2.key("equals").start_object();
            crate::protocol_serde::shape_attribute_value_list::ser_attribute_value_list(&mut object_1, inner)?;
            object_1.finish();
        }
        crate::types::Condition::Unknown => return Err(::aws_smithy_types::error::operation::SerializationError::unknown_variant("Condition")),
    }
    Ok(())
}
