// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateResponsePlan`](crate::operation::update_response_plan::builders::UpdateResponsePlanFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`client_token(impl Into<String>)`](crate::operation::update_response_plan::builders::UpdateResponsePlanFluentBuilder::client_token) / [`set_client_token(Option<String>)`](crate::operation::update_response_plan::builders::UpdateResponsePlanFluentBuilder::set_client_token): <p>A token ensuring that the operation is called only once with the specified details.</p>
    ///   - [`arn(impl Into<String>)`](crate::operation::update_response_plan::builders::UpdateResponsePlanFluentBuilder::arn) / [`set_arn(Option<String>)`](crate::operation::update_response_plan::builders::UpdateResponsePlanFluentBuilder::set_arn): <p>The Amazon Resource Name (ARN) of the response plan.</p>
    ///   - [`display_name(impl Into<String>)`](crate::operation::update_response_plan::builders::UpdateResponsePlanFluentBuilder::display_name) / [`set_display_name(Option<String>)`](crate::operation::update_response_plan::builders::UpdateResponsePlanFluentBuilder::set_display_name): <p>The long format name of the response plan. The display name can't contain spaces.</p>
    ///   - [`incident_template_title(impl Into<String>)`](crate::operation::update_response_plan::builders::UpdateResponsePlanFluentBuilder::incident_template_title) / [`set_incident_template_title(Option<String>)`](crate::operation::update_response_plan::builders::UpdateResponsePlanFluentBuilder::set_incident_template_title): <p>The short format name of the incident. The title can't contain spaces.</p>
    ///   - [`incident_template_impact(i32)`](crate::operation::update_response_plan::builders::UpdateResponsePlanFluentBuilder::incident_template_impact) / [`set_incident_template_impact(Option<i32>)`](crate::operation::update_response_plan::builders::UpdateResponsePlanFluentBuilder::set_incident_template_impact): <p>Defines the impact to the customers. Providing an impact overwrites the impact provided by a response plan.</p>  <p class="title"> <b>Possible impacts:</b> </p>  <ul>   <li> <p> <code>5</code> - Severe impact</p> </li>   <li> <p> <code>4</code> - High impact</p> </li>   <li> <p> <code>3</code> - Medium impact</p> </li>   <li> <p> <code>2</code> - Low impact</p> </li>   <li> <p> <code>1</code> - No impact</p> </li>  </ul>
    ///   - [`incident_template_summary(impl Into<String>)`](crate::operation::update_response_plan::builders::UpdateResponsePlanFluentBuilder::incident_template_summary) / [`set_incident_template_summary(Option<String>)`](crate::operation::update_response_plan::builders::UpdateResponsePlanFluentBuilder::set_incident_template_summary): <p>A brief summary of the incident. This typically contains what has happened, what's currently happening, and next steps.</p>
    ///   - [`incident_template_dedupe_string(impl Into<String>)`](crate::operation::update_response_plan::builders::UpdateResponsePlanFluentBuilder::incident_template_dedupe_string) / [`set_incident_template_dedupe_string(Option<String>)`](crate::operation::update_response_plan::builders::UpdateResponsePlanFluentBuilder::set_incident_template_dedupe_string): <p>The string Incident Manager uses to prevent duplicate incidents from being created by the same incident in the same account.</p>
    ///   - [`incident_template_notification_targets(Vec<NotificationTargetItem>)`](crate::operation::update_response_plan::builders::UpdateResponsePlanFluentBuilder::incident_template_notification_targets) / [`set_incident_template_notification_targets(Option<Vec<NotificationTargetItem>>)`](crate::operation::update_response_plan::builders::UpdateResponsePlanFluentBuilder::set_incident_template_notification_targets): <p>The Amazon SNS targets that are notified when updates are made to an incident.</p>
    ///   - [`chat_channel(ChatChannel)`](crate::operation::update_response_plan::builders::UpdateResponsePlanFluentBuilder::chat_channel) / [`set_chat_channel(Option<ChatChannel>)`](crate::operation::update_response_plan::builders::UpdateResponsePlanFluentBuilder::set_chat_channel): <p>The Chatbot chat channel used for collaboration during an incident.</p>  <p>Use the empty structure to remove the chat channel from the response plan.</p>
    ///   - [`engagements(Vec<String>)`](crate::operation::update_response_plan::builders::UpdateResponsePlanFluentBuilder::engagements) / [`set_engagements(Option<Vec<String>>)`](crate::operation::update_response_plan::builders::UpdateResponsePlanFluentBuilder::set_engagements): <p>The Amazon Resource Name (ARN) for the contacts and escalation plans that the response plan engages during an incident.</p>
    ///   - [`actions(Vec<Action>)`](crate::operation::update_response_plan::builders::UpdateResponsePlanFluentBuilder::actions) / [`set_actions(Option<Vec<Action>>)`](crate::operation::update_response_plan::builders::UpdateResponsePlanFluentBuilder::set_actions): <p>The actions that this response plan takes at the beginning of an incident.</p>
    ///   - [`incident_template_tags(HashMap<String, String>)`](crate::operation::update_response_plan::builders::UpdateResponsePlanFluentBuilder::incident_template_tags) / [`set_incident_template_tags(Option<HashMap<String, String>>)`](crate::operation::update_response_plan::builders::UpdateResponsePlanFluentBuilder::set_incident_template_tags): <p>Tags to assign to the template. When the <code>StartIncident</code> API action is called, Incident Manager assigns the tags specified in the template to the incident. To call this action, you must also have permission to call the <code>TagResource</code> API action for the incident record resource.</p>
    ///   - [`integrations(Vec<Integration>)`](crate::operation::update_response_plan::builders::UpdateResponsePlanFluentBuilder::integrations) / [`set_integrations(Option<Vec<Integration>>)`](crate::operation::update_response_plan::builders::UpdateResponsePlanFluentBuilder::set_integrations): <p>Information about third-party services integrated into the response plan.</p>
    /// - On success, responds with [`UpdateResponsePlanOutput`](crate::operation::update_response_plan::UpdateResponsePlanOutput)
    /// - On failure, responds with [`SdkError<UpdateResponsePlanError>`](crate::operation::update_response_plan::UpdateResponsePlanError)
    pub fn update_response_plan(
        &self,
    ) -> crate::operation::update_response_plan::builders::UpdateResponsePlanFluentBuilder {
        crate::operation::update_response_plan::builders::UpdateResponsePlanFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
