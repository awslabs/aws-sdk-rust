// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about the evaluation performance of a trained model. </p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ModelPerformance {
    /// <p>The overall F1 score metric for the trained model.</p>
    #[doc(hidden)]
    pub f1_score: std::option::Option<f32>,
    /// <p>The overall recall metric value for the trained model. </p>
    #[doc(hidden)]
    pub recall: std::option::Option<f32>,
    /// <p>The overall precision metric value for the trained model.</p>
    #[doc(hidden)]
    pub precision: std::option::Option<f32>,
}
impl ModelPerformance {
    /// <p>The overall F1 score metric for the trained model.</p>
    pub fn f1_score(&self) -> std::option::Option<f32> {
        self.f1_score
    }
    /// <p>The overall recall metric value for the trained model. </p>
    pub fn recall(&self) -> std::option::Option<f32> {
        self.recall
    }
    /// <p>The overall precision metric value for the trained model.</p>
    pub fn precision(&self) -> std::option::Option<f32> {
        self.precision
    }
}
impl ModelPerformance {
    /// Creates a new builder-style object to manufacture [`ModelPerformance`](crate::types::ModelPerformance).
    pub fn builder() -> crate::types::builders::ModelPerformanceBuilder {
        crate::types::builders::ModelPerformanceBuilder::default()
    }
}

/// A builder for [`ModelPerformance`](crate::types::ModelPerformance).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ModelPerformanceBuilder {
    pub(crate) f1_score: std::option::Option<f32>,
    pub(crate) recall: std::option::Option<f32>,
    pub(crate) precision: std::option::Option<f32>,
}
impl ModelPerformanceBuilder {
    /// <p>The overall F1 score metric for the trained model.</p>
    pub fn f1_score(mut self, input: f32) -> Self {
        self.f1_score = Some(input);
        self
    }
    /// <p>The overall F1 score metric for the trained model.</p>
    pub fn set_f1_score(mut self, input: std::option::Option<f32>) -> Self {
        self.f1_score = input;
        self
    }
    /// <p>The overall recall metric value for the trained model. </p>
    pub fn recall(mut self, input: f32) -> Self {
        self.recall = Some(input);
        self
    }
    /// <p>The overall recall metric value for the trained model. </p>
    pub fn set_recall(mut self, input: std::option::Option<f32>) -> Self {
        self.recall = input;
        self
    }
    /// <p>The overall precision metric value for the trained model.</p>
    pub fn precision(mut self, input: f32) -> Self {
        self.precision = Some(input);
        self
    }
    /// <p>The overall precision metric value for the trained model.</p>
    pub fn set_precision(mut self, input: std::option::Option<f32>) -> Self {
        self.precision = input;
        self
    }
    /// Consumes the builder and constructs a [`ModelPerformance`](crate::types::ModelPerformance).
    pub fn build(self) -> crate::types::ModelPerformance {
        crate::types::ModelPerformance {
            f1_score: self.f1_score,
            recall: self.recall,
            precision: self.precision,
        }
    }
}
