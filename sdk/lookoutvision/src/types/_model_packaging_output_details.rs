// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p> Information about the output from a model packaging job. </p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ModelPackagingOutputDetails {
    /// <p> Information about the AWS IoT Greengrass component in a model packaging job. </p>
    #[doc(hidden)]
    pub greengrass: std::option::Option<crate::types::GreengrassOutputDetails>,
}
impl ModelPackagingOutputDetails {
    /// <p> Information about the AWS IoT Greengrass component in a model packaging job. </p>
    pub fn greengrass(&self) -> std::option::Option<&crate::types::GreengrassOutputDetails> {
        self.greengrass.as_ref()
    }
}
impl ModelPackagingOutputDetails {
    /// Creates a new builder-style object to manufacture [`ModelPackagingOutputDetails`](crate::types::ModelPackagingOutputDetails).
    pub fn builder() -> crate::types::builders::ModelPackagingOutputDetailsBuilder {
        crate::types::builders::ModelPackagingOutputDetailsBuilder::default()
    }
}

/// A builder for [`ModelPackagingOutputDetails`](crate::types::ModelPackagingOutputDetails).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ModelPackagingOutputDetailsBuilder {
    pub(crate) greengrass: std::option::Option<crate::types::GreengrassOutputDetails>,
}
impl ModelPackagingOutputDetailsBuilder {
    /// <p> Information about the AWS IoT Greengrass component in a model packaging job. </p>
    pub fn greengrass(mut self, input: crate::types::GreengrassOutputDetails) -> Self {
        self.greengrass = Some(input);
        self
    }
    /// <p> Information about the AWS IoT Greengrass component in a model packaging job. </p>
    pub fn set_greengrass(
        mut self,
        input: std::option::Option<crate::types::GreengrassOutputDetails>,
    ) -> Self {
        self.greengrass = input;
        self
    }
    /// Consumes the builder and constructs a [`ModelPackagingOutputDetails`](crate::types::ModelPackagingOutputDetails).
    pub fn build(self) -> crate::types::ModelPackagingOutputDetails {
        crate::types::ModelPackagingOutputDetails {
            greengrass: self.greengrass,
        }
    }
}
