// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Location information about a manifest file. You can use a manifest file to create a dataset.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DatasetGroundTruthManifest {
    /// <p>The S3 bucket location for the manifest file.</p>
    #[doc(hidden)]
    pub s3_object: std::option::Option<crate::types::InputS3Object>,
}
impl DatasetGroundTruthManifest {
    /// <p>The S3 bucket location for the manifest file.</p>
    pub fn s3_object(&self) -> std::option::Option<&crate::types::InputS3Object> {
        self.s3_object.as_ref()
    }
}
impl DatasetGroundTruthManifest {
    /// Creates a new builder-style object to manufacture [`DatasetGroundTruthManifest`](crate::types::DatasetGroundTruthManifest).
    pub fn builder() -> crate::types::builders::DatasetGroundTruthManifestBuilder {
        crate::types::builders::DatasetGroundTruthManifestBuilder::default()
    }
}

/// A builder for [`DatasetGroundTruthManifest`](crate::types::DatasetGroundTruthManifest).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DatasetGroundTruthManifestBuilder {
    pub(crate) s3_object: std::option::Option<crate::types::InputS3Object>,
}
impl DatasetGroundTruthManifestBuilder {
    /// <p>The S3 bucket location for the manifest file.</p>
    pub fn s3_object(mut self, input: crate::types::InputS3Object) -> Self {
        self.s3_object = Some(input);
        self
    }
    /// <p>The S3 bucket location for the manifest file.</p>
    pub fn set_s3_object(
        mut self,
        input: std::option::Option<crate::types::InputS3Object>,
    ) -> Self {
        self.s3_object = input;
        self
    }
    /// Consumes the builder and constructs a [`DatasetGroundTruthManifest`](crate::types::DatasetGroundTruthManifest).
    pub fn build(self) -> crate::types::DatasetGroundTruthManifest {
        crate::types::DatasetGroundTruthManifest {
            s3_object: self.s3_object,
        }
    }
}
