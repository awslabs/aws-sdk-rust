// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Metadata about an Amazon Lookout for Vision project.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ProjectMetadata {
    /// <p>The Amazon Resource Name (ARN) of the project.</p>
    #[doc(hidden)]
    pub project_arn: std::option::Option<std::string::String>,
    /// <p>The name of the project.</p>
    #[doc(hidden)]
    pub project_name: std::option::Option<std::string::String>,
    /// <p>The unix timestamp for the date and time that the project was created. </p>
    #[doc(hidden)]
    pub creation_timestamp: std::option::Option<aws_smithy_types::DateTime>,
}
impl ProjectMetadata {
    /// <p>The Amazon Resource Name (ARN) of the project.</p>
    pub fn project_arn(&self) -> std::option::Option<&str> {
        self.project_arn.as_deref()
    }
    /// <p>The name of the project.</p>
    pub fn project_name(&self) -> std::option::Option<&str> {
        self.project_name.as_deref()
    }
    /// <p>The unix timestamp for the date and time that the project was created. </p>
    pub fn creation_timestamp(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.creation_timestamp.as_ref()
    }
}
impl ProjectMetadata {
    /// Creates a new builder-style object to manufacture [`ProjectMetadata`](crate::types::ProjectMetadata).
    pub fn builder() -> crate::types::builders::ProjectMetadataBuilder {
        crate::types::builders::ProjectMetadataBuilder::default()
    }
}

/// A builder for [`ProjectMetadata`](crate::types::ProjectMetadata).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ProjectMetadataBuilder {
    pub(crate) project_arn: std::option::Option<std::string::String>,
    pub(crate) project_name: std::option::Option<std::string::String>,
    pub(crate) creation_timestamp: std::option::Option<aws_smithy_types::DateTime>,
}
impl ProjectMetadataBuilder {
    /// <p>The Amazon Resource Name (ARN) of the project.</p>
    pub fn project_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.project_arn = Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the project.</p>
    pub fn set_project_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.project_arn = input;
        self
    }
    /// <p>The name of the project.</p>
    pub fn project_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.project_name = Some(input.into());
        self
    }
    /// <p>The name of the project.</p>
    pub fn set_project_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.project_name = input;
        self
    }
    /// <p>The unix timestamp for the date and time that the project was created. </p>
    pub fn creation_timestamp(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.creation_timestamp = Some(input);
        self
    }
    /// <p>The unix timestamp for the date and time that the project was created. </p>
    pub fn set_creation_timestamp(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.creation_timestamp = input;
        self
    }
    /// Consumes the builder and constructs a [`ProjectMetadata`](crate::types::ProjectMetadata).
    pub fn build(self) -> crate::types::ProjectMetadata {
        crate::types::ProjectMetadata {
            project_arn: self.project_arn,
            project_name: self.project_name,
            creation_timestamp: self.creation_timestamp,
        }
    }
}
