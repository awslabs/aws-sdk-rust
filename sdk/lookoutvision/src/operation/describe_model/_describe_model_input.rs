// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DescribeModelInput {
    /// <p>The project that contains the version of a model that you want to describe.</p>
    pub project_name: ::std::option::Option<::std::string::String>,
    /// <p>The version of the model that you want to describe.</p>
    pub model_version: ::std::option::Option<::std::string::String>,
}
impl DescribeModelInput {
    /// <p>The project that contains the version of a model that you want to describe.</p>
    pub fn project_name(&self) -> ::std::option::Option<&str> {
        self.project_name.as_deref()
    }
    /// <p>The version of the model that you want to describe.</p>
    pub fn model_version(&self) -> ::std::option::Option<&str> {
        self.model_version.as_deref()
    }
}
impl DescribeModelInput {
    /// Creates a new builder-style object to manufacture [`DescribeModelInput`](crate::operation::describe_model::DescribeModelInput).
    pub fn builder() -> crate::operation::describe_model::builders::DescribeModelInputBuilder {
        crate::operation::describe_model::builders::DescribeModelInputBuilder::default()
    }
}

/// A builder for [`DescribeModelInput`](crate::operation::describe_model::DescribeModelInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DescribeModelInputBuilder {
    pub(crate) project_name: ::std::option::Option<::std::string::String>,
    pub(crate) model_version: ::std::option::Option<::std::string::String>,
}
impl DescribeModelInputBuilder {
    /// <p>The project that contains the version of a model that you want to describe.</p>
    /// This field is required.
    pub fn project_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.project_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The project that contains the version of a model that you want to describe.</p>
    pub fn set_project_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.project_name = input;
        self
    }
    /// <p>The project that contains the version of a model that you want to describe.</p>
    pub fn get_project_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.project_name
    }
    /// <p>The version of the model that you want to describe.</p>
    /// This field is required.
    pub fn model_version(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.model_version = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The version of the model that you want to describe.</p>
    pub fn set_model_version(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.model_version = input;
        self
    }
    /// <p>The version of the model that you want to describe.</p>
    pub fn get_model_version(&self) -> &::std::option::Option<::std::string::String> {
        &self.model_version
    }
    /// Consumes the builder and constructs a [`DescribeModelInput`](crate::operation::describe_model::DescribeModelInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::describe_model::DescribeModelInput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::operation::describe_model::DescribeModelInput {
            project_name: self.project_name,
            model_version: self.model_version,
        })
    }
}
