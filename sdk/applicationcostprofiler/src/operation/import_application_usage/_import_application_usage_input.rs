// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ImportApplicationUsageInput {
    /// <p>Amazon S3 location to import application usage data from.</p>
    pub source_s3_location: ::std::option::Option<crate::types::SourceS3Location>,
}
impl ImportApplicationUsageInput {
    /// <p>Amazon S3 location to import application usage data from.</p>
    pub fn source_s3_location(&self) -> ::std::option::Option<&crate::types::SourceS3Location> {
        self.source_s3_location.as_ref()
    }
}
impl ImportApplicationUsageInput {
    /// Creates a new builder-style object to manufacture [`ImportApplicationUsageInput`](crate::operation::import_application_usage::ImportApplicationUsageInput).
    pub fn builder() -> crate::operation::import_application_usage::builders::ImportApplicationUsageInputBuilder {
        crate::operation::import_application_usage::builders::ImportApplicationUsageInputBuilder::default()
    }
}

/// A builder for [`ImportApplicationUsageInput`](crate::operation::import_application_usage::ImportApplicationUsageInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ImportApplicationUsageInputBuilder {
    pub(crate) source_s3_location: ::std::option::Option<crate::types::SourceS3Location>,
}
impl ImportApplicationUsageInputBuilder {
    /// <p>Amazon S3 location to import application usage data from.</p>
    /// This field is required.
    pub fn source_s3_location(mut self, input: crate::types::SourceS3Location) -> Self {
        self.source_s3_location = ::std::option::Option::Some(input);
        self
    }
    /// <p>Amazon S3 location to import application usage data from.</p>
    pub fn set_source_s3_location(mut self, input: ::std::option::Option<crate::types::SourceS3Location>) -> Self {
        self.source_s3_location = input;
        self
    }
    /// <p>Amazon S3 location to import application usage data from.</p>
    pub fn get_source_s3_location(&self) -> &::std::option::Option<crate::types::SourceS3Location> {
        &self.source_s3_location
    }
    /// Consumes the builder and constructs a [`ImportApplicationUsageInput`](crate::operation::import_application_usage::ImportApplicationUsageInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::import_application_usage::ImportApplicationUsageInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::import_application_usage::ImportApplicationUsageInput {
            source_s3_location: self.source_s3_location,
        })
    }
}
