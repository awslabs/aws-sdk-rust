// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GetIceServerConfigOutput {
    /// <p>The list of ICE server information objects.</p>
    #[doc(hidden)]
    pub ice_server_list: std::option::Option<std::vec::Vec<crate::types::IceServer>>,
    _request_id: Option<String>,
}
impl GetIceServerConfigOutput {
    /// <p>The list of ICE server information objects.</p>
    pub fn ice_server_list(&self) -> std::option::Option<&[crate::types::IceServer]> {
        self.ice_server_list.as_deref()
    }
}
impl aws_http::request_id::RequestId for GetIceServerConfigOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl GetIceServerConfigOutput {
    /// Creates a new builder-style object to manufacture [`GetIceServerConfigOutput`](crate::operation::get_ice_server_config::GetIceServerConfigOutput).
    pub fn builder(
    ) -> crate::operation::get_ice_server_config::builders::GetIceServerConfigOutputBuilder {
        crate::operation::get_ice_server_config::builders::GetIceServerConfigOutputBuilder::default(
        )
    }
}

/// A builder for [`GetIceServerConfigOutput`](crate::operation::get_ice_server_config::GetIceServerConfigOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct GetIceServerConfigOutputBuilder {
    pub(crate) ice_server_list: std::option::Option<std::vec::Vec<crate::types::IceServer>>,
    _request_id: Option<String>,
}
impl GetIceServerConfigOutputBuilder {
    /// Appends an item to `ice_server_list`.
    ///
    /// To override the contents of this collection use [`set_ice_server_list`](Self::set_ice_server_list).
    ///
    /// <p>The list of ICE server information objects.</p>
    pub fn ice_server_list(mut self, input: crate::types::IceServer) -> Self {
        let mut v = self.ice_server_list.unwrap_or_default();
        v.push(input);
        self.ice_server_list = Some(v);
        self
    }
    /// <p>The list of ICE server information objects.</p>
    pub fn set_ice_server_list(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::IceServer>>,
    ) -> Self {
        self.ice_server_list = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`GetIceServerConfigOutput`](crate::operation::get_ice_server_config::GetIceServerConfigOutput).
    pub fn build(self) -> crate::operation::get_ice_server_config::GetIceServerConfigOutput {
        crate::operation::get_ice_server_config::GetIceServerConfigOutput {
            ice_server_list: self.ice_server_list,
            _request_id: self._request_id,
        }
    }
}
