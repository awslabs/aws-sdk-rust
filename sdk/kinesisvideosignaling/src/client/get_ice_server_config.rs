// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetIceServerConfig`](crate::client::fluent_builders::GetIceServerConfig) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`channel_arn(impl Into<String>)`](crate::client::fluent_builders::GetIceServerConfig::channel_arn) / [`set_channel_arn(Option<String>)`](crate::client::fluent_builders::GetIceServerConfig::set_channel_arn): <p>The ARN of the signaling channel to be used for the peer-to-peer connection between configured peers. </p>
    ///   - [`client_id(impl Into<String>)`](crate::client::fluent_builders::GetIceServerConfig::client_id) / [`set_client_id(Option<String>)`](crate::client::fluent_builders::GetIceServerConfig::set_client_id): <p>Unique identifier for the viewer. Must be unique within the signaling channel.</p>
    ///   - [`service(Service)`](crate::client::fluent_builders::GetIceServerConfig::service) / [`set_service(Option<Service>)`](crate::client::fluent_builders::GetIceServerConfig::set_service): <p>Specifies the desired service. Currently, <code>TURN</code> is the only valid value.</p>
    ///   - [`username(impl Into<String>)`](crate::client::fluent_builders::GetIceServerConfig::username) / [`set_username(Option<String>)`](crate::client::fluent_builders::GetIceServerConfig::set_username): <p>An optional user ID to be associated with the credentials.</p>
    /// - On success, responds with [`GetIceServerConfigOutput`](crate::output::GetIceServerConfigOutput) with field(s):
    ///   - [`ice_server_list(Option<Vec<IceServer>>)`](crate::output::GetIceServerConfigOutput::ice_server_list): <p>The list of ICE server information objects.</p>
    /// - On failure, responds with [`SdkError<GetIceServerConfigError>`](crate::error::GetIceServerConfigError)
    pub fn get_ice_server_config(&self) -> crate::client::fluent_builders::GetIceServerConfig {
        crate::client::fluent_builders::GetIceServerConfig::new(self.handle.clone())
    }
}
