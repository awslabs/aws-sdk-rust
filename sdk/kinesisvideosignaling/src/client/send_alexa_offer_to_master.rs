// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`SendAlexaOfferToMaster`](crate::client::fluent_builders::SendAlexaOfferToMaster) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`channel_arn(impl Into<String>)`](crate::client::fluent_builders::SendAlexaOfferToMaster::channel_arn) / [`set_channel_arn(Option<String>)`](crate::client::fluent_builders::SendAlexaOfferToMaster::set_channel_arn): <p>The ARN of the signaling channel by which Alexa and the master peer communicate.</p>
    ///   - [`sender_client_id(impl Into<String>)`](crate::client::fluent_builders::SendAlexaOfferToMaster::sender_client_id) / [`set_sender_client_id(Option<String>)`](crate::client::fluent_builders::SendAlexaOfferToMaster::set_sender_client_id): <p>The unique identifier for the sender client.</p>
    ///   - [`message_payload(impl Into<String>)`](crate::client::fluent_builders::SendAlexaOfferToMaster::message_payload) / [`set_message_payload(Option<String>)`](crate::client::fluent_builders::SendAlexaOfferToMaster::set_message_payload): <p>The base64-encoded SDP offer content.</p>
    /// - On success, responds with [`SendAlexaOfferToMasterOutput`](crate::output::SendAlexaOfferToMasterOutput) with field(s):
    ///   - [`answer(Option<String>)`](crate::output::SendAlexaOfferToMasterOutput::answer): <p>The base64-encoded SDP answer content.</p>
    /// - On failure, responds with [`SdkError<SendAlexaOfferToMasterError>`](crate::error::SendAlexaOfferToMasterError)
    pub fn send_alexa_offer_to_master(
        &self,
    ) -> crate::client::fluent_builders::SendAlexaOfferToMaster {
        crate::client::fluent_builders::SendAlexaOfferToMaster::new(self.handle.clone())
    }
}
