// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GetAppReplicationConfigurationOutput {
    /// <p>The replication configurations associated with server groups in this application.</p>
    pub server_group_replication_configurations: ::std::option::Option<::std::vec::Vec<crate::types::ServerGroupReplicationConfiguration>>,
    _request_id: Option<String>,
}
impl GetAppReplicationConfigurationOutput {
    /// <p>The replication configurations associated with server groups in this application.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.server_group_replication_configurations.is_none()`.
    pub fn server_group_replication_configurations(&self) -> &[crate::types::ServerGroupReplicationConfiguration] {
        self.server_group_replication_configurations.as_deref().unwrap_or_default()
    }
}
impl ::aws_http::request_id::RequestId for GetAppReplicationConfigurationOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl GetAppReplicationConfigurationOutput {
    /// Creates a new builder-style object to manufacture [`GetAppReplicationConfigurationOutput`](crate::operation::get_app_replication_configuration::GetAppReplicationConfigurationOutput).
    pub fn builder() -> crate::operation::get_app_replication_configuration::builders::GetAppReplicationConfigurationOutputBuilder {
        crate::operation::get_app_replication_configuration::builders::GetAppReplicationConfigurationOutputBuilder::default()
    }
}

/// A builder for [`GetAppReplicationConfigurationOutput`](crate::operation::get_app_replication_configuration::GetAppReplicationConfigurationOutput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct GetAppReplicationConfigurationOutputBuilder {
    pub(crate) server_group_replication_configurations: ::std::option::Option<::std::vec::Vec<crate::types::ServerGroupReplicationConfiguration>>,
    _request_id: Option<String>,
}
impl GetAppReplicationConfigurationOutputBuilder {
    /// Appends an item to `server_group_replication_configurations`.
    ///
    /// To override the contents of this collection use [`set_server_group_replication_configurations`](Self::set_server_group_replication_configurations).
    ///
    /// <p>The replication configurations associated with server groups in this application.</p>
    pub fn server_group_replication_configurations(mut self, input: crate::types::ServerGroupReplicationConfiguration) -> Self {
        let mut v = self.server_group_replication_configurations.unwrap_or_default();
        v.push(input);
        self.server_group_replication_configurations = ::std::option::Option::Some(v);
        self
    }
    /// <p>The replication configurations associated with server groups in this application.</p>
    pub fn set_server_group_replication_configurations(
        mut self,
        input: ::std::option::Option<::std::vec::Vec<crate::types::ServerGroupReplicationConfiguration>>,
    ) -> Self {
        self.server_group_replication_configurations = input;
        self
    }
    /// <p>The replication configurations associated with server groups in this application.</p>
    pub fn get_server_group_replication_configurations(
        &self,
    ) -> &::std::option::Option<::std::vec::Vec<crate::types::ServerGroupReplicationConfiguration>> {
        &self.server_group_replication_configurations
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`GetAppReplicationConfigurationOutput`](crate::operation::get_app_replication_configuration::GetAppReplicationConfigurationOutput).
    pub fn build(self) -> crate::operation::get_app_replication_configuration::GetAppReplicationConfigurationOutput {
        crate::operation::get_app_replication_configuration::GetAppReplicationConfigurationOutput {
            server_group_replication_configurations: self.server_group_replication_configurations,
            _request_id: self._request_id,
        }
    }
}
