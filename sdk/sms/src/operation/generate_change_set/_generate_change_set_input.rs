// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GenerateChangeSetInput {
    /// <p>The ID of the application associated with the change set.</p>
    pub app_id: ::std::option::Option<::std::string::String>,
    /// <p>The format for the change set.</p>
    pub changeset_format: ::std::option::Option<crate::types::OutputFormat>,
}
impl GenerateChangeSetInput {
    /// <p>The ID of the application associated with the change set.</p>
    pub fn app_id(&self) -> ::std::option::Option<&str> {
        self.app_id.as_deref()
    }
    /// <p>The format for the change set.</p>
    pub fn changeset_format(&self) -> ::std::option::Option<&crate::types::OutputFormat> {
        self.changeset_format.as_ref()
    }
}
impl GenerateChangeSetInput {
    /// Creates a new builder-style object to manufacture [`GenerateChangeSetInput`](crate::operation::generate_change_set::GenerateChangeSetInput).
    pub fn builder() -> crate::operation::generate_change_set::builders::GenerateChangeSetInputBuilder {
        crate::operation::generate_change_set::builders::GenerateChangeSetInputBuilder::default()
    }
}

/// A builder for [`GenerateChangeSetInput`](crate::operation::generate_change_set::GenerateChangeSetInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct GenerateChangeSetInputBuilder {
    pub(crate) app_id: ::std::option::Option<::std::string::String>,
    pub(crate) changeset_format: ::std::option::Option<crate::types::OutputFormat>,
}
impl GenerateChangeSetInputBuilder {
    /// <p>The ID of the application associated with the change set.</p>
    pub fn app_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.app_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of the application associated with the change set.</p>
    pub fn set_app_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.app_id = input;
        self
    }
    /// <p>The ID of the application associated with the change set.</p>
    pub fn get_app_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.app_id
    }
    /// <p>The format for the change set.</p>
    pub fn changeset_format(mut self, input: crate::types::OutputFormat) -> Self {
        self.changeset_format = ::std::option::Option::Some(input);
        self
    }
    /// <p>The format for the change set.</p>
    pub fn set_changeset_format(mut self, input: ::std::option::Option<crate::types::OutputFormat>) -> Self {
        self.changeset_format = input;
        self
    }
    /// <p>The format for the change set.</p>
    pub fn get_changeset_format(&self) -> &::std::option::Option<crate::types::OutputFormat> {
        &self.changeset_format
    }
    /// Consumes the builder and constructs a [`GenerateChangeSetInput`](crate::operation::generate_change_set::GenerateChangeSetInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::generate_change_set::GenerateChangeSetInput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::operation::generate_change_set::GenerateChangeSetInput {
            app_id: self.app_id,
            changeset_format: self.changeset_format,
        })
    }
}
