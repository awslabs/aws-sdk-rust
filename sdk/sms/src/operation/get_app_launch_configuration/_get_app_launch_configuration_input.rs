// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GetAppLaunchConfigurationInput {
    /// <p>The ID of the application.</p>
    pub app_id: ::std::option::Option<::std::string::String>,
}
impl GetAppLaunchConfigurationInput {
    /// <p>The ID of the application.</p>
    pub fn app_id(&self) -> ::std::option::Option<&str> {
        self.app_id.as_deref()
    }
}
impl GetAppLaunchConfigurationInput {
    /// Creates a new builder-style object to manufacture [`GetAppLaunchConfigurationInput`](crate::operation::get_app_launch_configuration::GetAppLaunchConfigurationInput).
    pub fn builder() -> crate::operation::get_app_launch_configuration::builders::GetAppLaunchConfigurationInputBuilder {
        crate::operation::get_app_launch_configuration::builders::GetAppLaunchConfigurationInputBuilder::default()
    }
}

/// A builder for [`GetAppLaunchConfigurationInput`](crate::operation::get_app_launch_configuration::GetAppLaunchConfigurationInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct GetAppLaunchConfigurationInputBuilder {
    pub(crate) app_id: ::std::option::Option<::std::string::String>,
}
impl GetAppLaunchConfigurationInputBuilder {
    /// <p>The ID of the application.</p>
    pub fn app_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.app_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of the application.</p>
    pub fn set_app_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.app_id = input;
        self
    }
    /// <p>The ID of the application.</p>
    pub fn get_app_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.app_id
    }
    /// Consumes the builder and constructs a [`GetAppLaunchConfigurationInput`](crate::operation::get_app_launch_configuration::GetAppLaunchConfigurationInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::get_app_launch_configuration::GetAppLaunchConfigurationInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::get_app_launch_configuration::GetAppLaunchConfigurationInput { app_id: self.app_id })
    }
}
