// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct NotifyAppValidationOutputInput {
    /// <p>The ID of the application.</p>
    #[doc(hidden)]
    pub app_id: std::option::Option<std::string::String>,
    /// <p>The notification information.</p>
    #[doc(hidden)]
    pub notification_context: std::option::Option<crate::types::NotificationContext>,
}
impl NotifyAppValidationOutputInput {
    /// <p>The ID of the application.</p>
    pub fn app_id(&self) -> std::option::Option<&str> {
        self.app_id.as_deref()
    }
    /// <p>The notification information.</p>
    pub fn notification_context(&self) -> std::option::Option<&crate::types::NotificationContext> {
        self.notification_context.as_ref()
    }
}
impl NotifyAppValidationOutputInput {
    /// Creates a new builder-style object to manufacture [`NotifyAppValidationOutputInput`](crate::operation::notify_app_validation_output::NotifyAppValidationOutputInput).
    pub fn builder() -> crate::operation::notify_app_validation_output::builders::NotifyAppValidationOutputInputBuilder{
        crate::operation::notify_app_validation_output::builders::NotifyAppValidationOutputInputBuilder::default()
    }
}

/// A builder for [`NotifyAppValidationOutputInput`](crate::operation::notify_app_validation_output::NotifyAppValidationOutputInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct NotifyAppValidationOutputInputBuilder {
    pub(crate) app_id: std::option::Option<std::string::String>,
    pub(crate) notification_context: std::option::Option<crate::types::NotificationContext>,
}
impl NotifyAppValidationOutputInputBuilder {
    /// <p>The ID of the application.</p>
    pub fn app_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.app_id = Some(input.into());
        self
    }
    /// <p>The ID of the application.</p>
    pub fn set_app_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.app_id = input;
        self
    }
    /// <p>The notification information.</p>
    pub fn notification_context(mut self, input: crate::types::NotificationContext) -> Self {
        self.notification_context = Some(input);
        self
    }
    /// <p>The notification information.</p>
    pub fn set_notification_context(
        mut self,
        input: std::option::Option<crate::types::NotificationContext>,
    ) -> Self {
        self.notification_context = input;
        self
    }
    /// Consumes the builder and constructs a [`NotifyAppValidationOutputInput`](crate::operation::notify_app_validation_output::NotifyAppValidationOutputInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::notify_app_validation_output::NotifyAppValidationOutputInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::notify_app_validation_output::NotifyAppValidationOutputInput {
                app_id: self.app_id,
                notification_context: self.notification_context,
            },
        )
    }
}
