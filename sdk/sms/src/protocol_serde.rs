// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) mod shape_create_app;

pub fn parse_http_error_metadata(
    response: &http::Response<bytes::Bytes>,
) -> Result<
    aws_smithy_types::error::metadata::Builder,
    aws_smithy_json::deserialize::error::DeserializeError,
> {
    crate::json_errors::parse_error_metadata(response.body(), response.headers())
}

pub(crate) mod shape_create_replication_job;

pub(crate) mod shape_delete_app;

pub(crate) mod shape_delete_app_launch_configuration;

pub(crate) mod shape_delete_app_replication_configuration;

pub(crate) mod shape_delete_app_validation_configuration;

pub(crate) mod shape_delete_replication_job;

pub(crate) mod shape_delete_server_catalog;

pub(crate) mod shape_disassociate_connector;

pub(crate) mod shape_generate_change_set;

pub(crate) mod shape_generate_template;

pub(crate) mod shape_get_app;

pub(crate) mod shape_get_app_launch_configuration;

pub(crate) mod shape_get_app_replication_configuration;

pub(crate) mod shape_get_app_validation_configuration;

pub(crate) mod shape_get_app_validation_output;

pub(crate) mod shape_get_connectors;

pub(crate) mod shape_get_replication_jobs;

pub(crate) mod shape_get_replication_runs;

pub(crate) mod shape_get_servers;

pub(crate) mod shape_import_app_catalog;

pub(crate) mod shape_import_server_catalog;

pub(crate) mod shape_launch_app;

pub(crate) mod shape_list_apps;

pub(crate) mod shape_notify_app_validation_output;

pub(crate) mod shape_put_app_launch_configuration;

pub(crate) mod shape_put_app_replication_configuration;

pub(crate) mod shape_put_app_validation_configuration;

pub(crate) mod shape_start_app_replication;

pub(crate) mod shape_start_on_demand_app_replication;

pub(crate) mod shape_start_on_demand_replication_run;

pub(crate) mod shape_stop_app_replication;

pub(crate) mod shape_terminate_app;

pub(crate) mod shape_update_app;

pub(crate) mod shape_update_replication_job;

pub(crate) fn or_empty_doc(data: &[u8]) -> &[u8] {
    if data.is_empty() {
        b"{}"
    } else {
        data
    }
}

pub(crate) mod shape_create_app_input;

pub(crate) mod shape_create_replication_job_input;

pub(crate) mod shape_delete_app_input;

pub(crate) mod shape_delete_app_launch_configuration_input;

pub(crate) mod shape_delete_app_replication_configuration_input;

pub(crate) mod shape_delete_app_validation_configuration_input;

pub(crate) mod shape_delete_replication_job_input;

pub(crate) mod shape_disassociate_connector_input;

pub(crate) mod shape_dry_run_operation_exception;

pub(crate) mod shape_generate_change_set_input;

pub(crate) mod shape_generate_template_input;

pub(crate) mod shape_get_app_input;

pub(crate) mod shape_get_app_launch_configuration_input;

pub(crate) mod shape_get_app_replication_configuration_input;

pub(crate) mod shape_get_app_validation_configuration_input;

pub(crate) mod shape_get_app_validation_output_input;

pub(crate) mod shape_get_connectors_input;

pub(crate) mod shape_get_replication_jobs_input;

pub(crate) mod shape_get_replication_runs_input;

pub(crate) mod shape_get_servers_input;

pub(crate) mod shape_import_app_catalog_input;

pub(crate) mod shape_internal_error;

pub(crate) mod shape_invalid_parameter_exception;

pub(crate) mod shape_launch_app_input;

pub(crate) mod shape_list_apps_input;

pub(crate) mod shape_missing_required_parameter_exception;

pub(crate) mod shape_no_connectors_available_exception;

pub(crate) mod shape_notify_app_validation_output_input;

pub(crate) mod shape_operation_not_permitted_exception;

pub(crate) mod shape_put_app_launch_configuration_input;

pub(crate) mod shape_put_app_replication_configuration_input;

pub(crate) mod shape_put_app_validation_configuration_input;

pub(crate) mod shape_replication_job_already_exists_exception;

pub(crate) mod shape_replication_job_not_found_exception;

pub(crate) mod shape_replication_run_limit_exceeded_exception;

pub(crate) mod shape_server_cannot_be_replicated_exception;

pub(crate) mod shape_start_app_replication_input;

pub(crate) mod shape_start_on_demand_app_replication_input;

pub(crate) mod shape_start_on_demand_replication_run_input;

pub(crate) mod shape_stop_app_replication_input;

pub(crate) mod shape_temporarily_unavailable_exception;

pub(crate) mod shape_terminate_app_input;

pub(crate) mod shape_unauthorized_operation_exception;

pub(crate) mod shape_update_app_input;

pub(crate) mod shape_update_replication_job_input;

pub(crate) mod shape_app_summary;

pub(crate) mod shape_app_validation_configuration;

pub(crate) mod shape_app_validation_configurations;

pub(crate) mod shape_apps;

pub(crate) mod shape_connector_list;

pub(crate) mod shape_notification_context;

pub(crate) mod shape_replication_job;

pub(crate) mod shape_replication_job_list;

pub(crate) mod shape_replication_run_list;

pub(crate) mod shape_s3_location;

pub(crate) mod shape_server_group;

pub(crate) mod shape_server_group_launch_configuration;

pub(crate) mod shape_server_group_launch_configurations;

pub(crate) mod shape_server_group_replication_configuration;

pub(crate) mod shape_server_group_replication_configurations;

pub(crate) mod shape_server_group_validation_configuration;

pub(crate) mod shape_server_group_validation_configurations;

pub(crate) mod shape_server_groups;

pub(crate) mod shape_server_list;

pub(crate) mod shape_tag;

pub(crate) mod shape_tags;

pub(crate) mod shape_validation_output_list;

pub(crate) mod shape_vm_server_address;

pub(crate) mod shape_connector;

pub(crate) mod shape_launch_details;

pub(crate) mod shape_replication_run;

pub(crate) mod shape_server;

pub(crate) mod shape_server_launch_configuration;

pub(crate) mod shape_server_replication_configuration;

pub(crate) mod shape_server_validation_configuration;

pub(crate) mod shape_ssm_validation_parameters;

pub(crate) mod shape_validation_output;

pub(crate) mod shape_vm_server;

pub(crate) mod shape_app_validation_output;

pub(crate) mod shape_connector_capability_list;

pub(crate) mod shape_replication_run_stage_details;

pub(crate) mod shape_server_launch_configurations;

pub(crate) mod shape_server_replication_configurations;

pub(crate) mod shape_server_replication_parameters;

pub(crate) mod shape_server_validation_configurations;

pub(crate) mod shape_server_validation_output;

pub(crate) mod shape_source;

pub(crate) mod shape_user_data;

pub(crate) mod shape_user_data_validation_parameters;

pub(crate) mod shape_ssm_output;
