// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Replication configuration of a server.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ServerReplicationConfiguration {
    /// <p>The ID of the server with which this replication configuration is associated.</p>
    #[doc(hidden)]
    pub server: std::option::Option<crate::types::Server>,
    /// <p>The parameters for replicating the server.</p>
    #[doc(hidden)]
    pub server_replication_parameters:
        std::option::Option<crate::types::ServerReplicationParameters>,
}
impl ServerReplicationConfiguration {
    /// <p>The ID of the server with which this replication configuration is associated.</p>
    pub fn server(&self) -> std::option::Option<&crate::types::Server> {
        self.server.as_ref()
    }
    /// <p>The parameters for replicating the server.</p>
    pub fn server_replication_parameters(
        &self,
    ) -> std::option::Option<&crate::types::ServerReplicationParameters> {
        self.server_replication_parameters.as_ref()
    }
}
impl ServerReplicationConfiguration {
    /// Creates a new builder-style object to manufacture [`ServerReplicationConfiguration`](crate::types::ServerReplicationConfiguration).
    pub fn builder() -> crate::types::builders::ServerReplicationConfigurationBuilder {
        crate::types::builders::ServerReplicationConfigurationBuilder::default()
    }
}

/// A builder for [`ServerReplicationConfiguration`](crate::types::ServerReplicationConfiguration).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ServerReplicationConfigurationBuilder {
    pub(crate) server: std::option::Option<crate::types::Server>,
    pub(crate) server_replication_parameters:
        std::option::Option<crate::types::ServerReplicationParameters>,
}
impl ServerReplicationConfigurationBuilder {
    /// <p>The ID of the server with which this replication configuration is associated.</p>
    pub fn server(mut self, input: crate::types::Server) -> Self {
        self.server = Some(input);
        self
    }
    /// <p>The ID of the server with which this replication configuration is associated.</p>
    pub fn set_server(mut self, input: std::option::Option<crate::types::Server>) -> Self {
        self.server = input;
        self
    }
    /// <p>The parameters for replicating the server.</p>
    pub fn server_replication_parameters(
        mut self,
        input: crate::types::ServerReplicationParameters,
    ) -> Self {
        self.server_replication_parameters = Some(input);
        self
    }
    /// <p>The parameters for replicating the server.</p>
    pub fn set_server_replication_parameters(
        mut self,
        input: std::option::Option<crate::types::ServerReplicationParameters>,
    ) -> Self {
        self.server_replication_parameters = input;
        self
    }
    /// Consumes the builder and constructs a [`ServerReplicationConfiguration`](crate::types::ServerReplicationConfiguration).
    pub fn build(self) -> crate::types::ServerReplicationConfiguration {
        crate::types::ServerReplicationConfiguration {
            server: self.server,
            server_replication_parameters: self.server_replication_parameters,
        }
    }
}
