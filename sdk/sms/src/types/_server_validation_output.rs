// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains output from validating an instance.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ServerValidationOutput {
    /// <p>Represents a server.</p>
    #[doc(hidden)]
    pub server: std::option::Option<crate::types::Server>,
}
impl ServerValidationOutput {
    /// <p>Represents a server.</p>
    pub fn server(&self) -> std::option::Option<&crate::types::Server> {
        self.server.as_ref()
    }
}
impl ServerValidationOutput {
    /// Creates a new builder-style object to manufacture [`ServerValidationOutput`](crate::types::ServerValidationOutput).
    pub fn builder() -> crate::types::builders::ServerValidationOutputBuilder {
        crate::types::builders::ServerValidationOutputBuilder::default()
    }
}

/// A builder for [`ServerValidationOutput`](crate::types::ServerValidationOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ServerValidationOutputBuilder {
    pub(crate) server: std::option::Option<crate::types::Server>,
}
impl ServerValidationOutputBuilder {
    /// <p>Represents a server.</p>
    pub fn server(mut self, input: crate::types::Server) -> Self {
        self.server = Some(input);
        self
    }
    /// <p>Represents a server.</p>
    pub fn set_server(mut self, input: std::option::Option<crate::types::Server>) -> Self {
        self.server = input;
        self
    }
    /// Consumes the builder and constructs a [`ServerValidationOutput`](crate::types::ServerValidationOutput).
    pub fn build(self) -> crate::types::ServerValidationOutput {
        crate::types::ServerValidationOutput {
            server: self.server,
        }
    }
}
