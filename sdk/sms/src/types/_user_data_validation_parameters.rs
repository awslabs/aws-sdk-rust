// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains validation parameters.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct UserDataValidationParameters {
    /// <p>The location of the validation script.</p>
    #[doc(hidden)]
    pub source: std::option::Option<crate::types::Source>,
    /// <p>The type of validation script.</p>
    #[doc(hidden)]
    pub script_type: std::option::Option<crate::types::ScriptType>,
}
impl UserDataValidationParameters {
    /// <p>The location of the validation script.</p>
    pub fn source(&self) -> std::option::Option<&crate::types::Source> {
        self.source.as_ref()
    }
    /// <p>The type of validation script.</p>
    pub fn script_type(&self) -> std::option::Option<&crate::types::ScriptType> {
        self.script_type.as_ref()
    }
}
impl UserDataValidationParameters {
    /// Creates a new builder-style object to manufacture [`UserDataValidationParameters`](crate::types::UserDataValidationParameters).
    pub fn builder() -> crate::types::builders::UserDataValidationParametersBuilder {
        crate::types::builders::UserDataValidationParametersBuilder::default()
    }
}

/// A builder for [`UserDataValidationParameters`](crate::types::UserDataValidationParameters).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct UserDataValidationParametersBuilder {
    pub(crate) source: std::option::Option<crate::types::Source>,
    pub(crate) script_type: std::option::Option<crate::types::ScriptType>,
}
impl UserDataValidationParametersBuilder {
    /// <p>The location of the validation script.</p>
    pub fn source(mut self, input: crate::types::Source) -> Self {
        self.source = Some(input);
        self
    }
    /// <p>The location of the validation script.</p>
    pub fn set_source(mut self, input: std::option::Option<crate::types::Source>) -> Self {
        self.source = input;
        self
    }
    /// <p>The type of validation script.</p>
    pub fn script_type(mut self, input: crate::types::ScriptType) -> Self {
        self.script_type = Some(input);
        self
    }
    /// <p>The type of validation script.</p>
    pub fn set_script_type(mut self, input: std::option::Option<crate::types::ScriptType>) -> Self {
        self.script_type = input;
        self
    }
    /// Consumes the builder and constructs a [`UserDataValidationParameters`](crate::types::UserDataValidationParameters).
    pub fn build(self) -> crate::types::UserDataValidationParameters {
        crate::types::UserDataValidationParameters {
            source: self.source,
            script_type: self.script_type,
        }
    }
}
