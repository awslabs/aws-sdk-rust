// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains the location of validation output.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct SsmOutput {
    /// <p>Location of an Amazon S3 object.</p>
    #[doc(hidden)]
    pub s3_location: std::option::Option<crate::types::S3Location>,
}
impl SsmOutput {
    /// <p>Location of an Amazon S3 object.</p>
    pub fn s3_location(&self) -> std::option::Option<&crate::types::S3Location> {
        self.s3_location.as_ref()
    }
}
impl SsmOutput {
    /// Creates a new builder-style object to manufacture [`SsmOutput`](crate::types::SsmOutput).
    pub fn builder() -> crate::types::builders::SsmOutputBuilder {
        crate::types::builders::SsmOutputBuilder::default()
    }
}

/// A builder for [`SsmOutput`](crate::types::SsmOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct SsmOutputBuilder {
    pub(crate) s3_location: std::option::Option<crate::types::S3Location>,
}
impl SsmOutputBuilder {
    /// <p>Location of an Amazon S3 object.</p>
    pub fn s3_location(mut self, input: crate::types::S3Location) -> Self {
        self.s3_location = Some(input);
        self
    }
    /// <p>Location of an Amazon S3 object.</p>
    pub fn set_s3_location(mut self, input: std::option::Option<crate::types::S3Location>) -> Self {
        self.s3_location = input;
        self
    }
    /// Consumes the builder and constructs a [`SsmOutput`](crate::types::SsmOutput).
    pub fn build(self) -> crate::types::SsmOutput {
        crate::types::SsmOutput {
            s3_location: self.s3_location,
        }
    }
}
