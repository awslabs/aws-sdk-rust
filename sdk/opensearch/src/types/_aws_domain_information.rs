// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about an Amazon OpenSearch Service domain.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AwsDomainInformation {
    /// <p>The Amazon Web Services account ID of the domain owner.</p>
    #[doc(hidden)]
    pub owner_id: std::option::Option<std::string::String>,
    /// <p>Name of the domain.</p>
    #[doc(hidden)]
    pub domain_name: std::option::Option<std::string::String>,
    /// <p>The Amazon Web Services Region in which the domain is located.</p>
    #[doc(hidden)]
    pub region: std::option::Option<std::string::String>,
}
impl AwsDomainInformation {
    /// <p>The Amazon Web Services account ID of the domain owner.</p>
    pub fn owner_id(&self) -> std::option::Option<&str> {
        self.owner_id.as_deref()
    }
    /// <p>Name of the domain.</p>
    pub fn domain_name(&self) -> std::option::Option<&str> {
        self.domain_name.as_deref()
    }
    /// <p>The Amazon Web Services Region in which the domain is located.</p>
    pub fn region(&self) -> std::option::Option<&str> {
        self.region.as_deref()
    }
}
impl AwsDomainInformation {
    /// Creates a new builder-style object to manufacture [`AwsDomainInformation`](crate::types::AwsDomainInformation).
    pub fn builder() -> crate::types::builders::AwsDomainInformationBuilder {
        crate::types::builders::AwsDomainInformationBuilder::default()
    }
}

/// A builder for [`AwsDomainInformation`](crate::types::AwsDomainInformation).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AwsDomainInformationBuilder {
    pub(crate) owner_id: std::option::Option<std::string::String>,
    pub(crate) domain_name: std::option::Option<std::string::String>,
    pub(crate) region: std::option::Option<std::string::String>,
}
impl AwsDomainInformationBuilder {
    /// <p>The Amazon Web Services account ID of the domain owner.</p>
    pub fn owner_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.owner_id = Some(input.into());
        self
    }
    /// <p>The Amazon Web Services account ID of the domain owner.</p>
    pub fn set_owner_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.owner_id = input;
        self
    }
    /// <p>Name of the domain.</p>
    pub fn domain_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.domain_name = Some(input.into());
        self
    }
    /// <p>Name of the domain.</p>
    pub fn set_domain_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.domain_name = input;
        self
    }
    /// <p>The Amazon Web Services Region in which the domain is located.</p>
    pub fn region(mut self, input: impl Into<std::string::String>) -> Self {
        self.region = Some(input.into());
        self
    }
    /// <p>The Amazon Web Services Region in which the domain is located.</p>
    pub fn set_region(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.region = input;
        self
    }
    /// Consumes the builder and constructs a [`AwsDomainInformation`](crate::types::AwsDomainInformation).
    pub fn build(self) -> crate::types::AwsDomainInformation {
        crate::types::AwsDomainInformation {
            owner_id: self.owner_id,
            domain_name: self.domain_name,
            region: self.region,
        }
    }
}
