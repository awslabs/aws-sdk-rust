// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Status of the node-to-node encryption options for the specified domain.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct NodeToNodeEncryptionOptionsStatus {
    /// <p>The node-to-node encryption options for the specified domain.</p>
    #[doc(hidden)]
    pub options: std::option::Option<crate::types::NodeToNodeEncryptionOptions>,
    /// <p>The status of the node-to-node encryption options for the specified domain.</p>
    #[doc(hidden)]
    pub status: std::option::Option<crate::types::OptionStatus>,
}
impl NodeToNodeEncryptionOptionsStatus {
    /// <p>The node-to-node encryption options for the specified domain.</p>
    pub fn options(&self) -> std::option::Option<&crate::types::NodeToNodeEncryptionOptions> {
        self.options.as_ref()
    }
    /// <p>The status of the node-to-node encryption options for the specified domain.</p>
    pub fn status(&self) -> std::option::Option<&crate::types::OptionStatus> {
        self.status.as_ref()
    }
}
impl NodeToNodeEncryptionOptionsStatus {
    /// Creates a new builder-style object to manufacture [`NodeToNodeEncryptionOptionsStatus`](crate::types::NodeToNodeEncryptionOptionsStatus).
    pub fn builder() -> crate::types::builders::NodeToNodeEncryptionOptionsStatusBuilder {
        crate::types::builders::NodeToNodeEncryptionOptionsStatusBuilder::default()
    }
}

/// A builder for [`NodeToNodeEncryptionOptionsStatus`](crate::types::NodeToNodeEncryptionOptionsStatus).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct NodeToNodeEncryptionOptionsStatusBuilder {
    pub(crate) options: std::option::Option<crate::types::NodeToNodeEncryptionOptions>,
    pub(crate) status: std::option::Option<crate::types::OptionStatus>,
}
impl NodeToNodeEncryptionOptionsStatusBuilder {
    /// <p>The node-to-node encryption options for the specified domain.</p>
    pub fn options(mut self, input: crate::types::NodeToNodeEncryptionOptions) -> Self {
        self.options = Some(input);
        self
    }
    /// <p>The node-to-node encryption options for the specified domain.</p>
    pub fn set_options(
        mut self,
        input: std::option::Option<crate::types::NodeToNodeEncryptionOptions>,
    ) -> Self {
        self.options = input;
        self
    }
    /// <p>The status of the node-to-node encryption options for the specified domain.</p>
    pub fn status(mut self, input: crate::types::OptionStatus) -> Self {
        self.status = Some(input);
        self
    }
    /// <p>The status of the node-to-node encryption options for the specified domain.</p>
    pub fn set_status(mut self, input: std::option::Option<crate::types::OptionStatus>) -> Self {
        self.status = input;
        self
    }
    /// Consumes the builder and constructs a [`NodeToNodeEncryptionOptionsStatus`](crate::types::NodeToNodeEncryptionOptionsStatus).
    pub fn build(self) -> crate::types::NodeToNodeEncryptionOptionsStatus {
        crate::types::NodeToNodeEncryptionOptionsStatus {
            options: self.options,
            status: self.status,
        }
    }
}
