// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The status of an inbound cross-cluster connection for OpenSearch Service.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct InboundConnectionStatus {
    /// <p>The status code for the connection. Can be one of the following:</p>
    /// <ul>
    /// <li> <p> <b>PENDING_ACCEPTANCE</b> - Inbound connection is not yet accepted by the remote domain owner.</p> </li>
    /// <li> <p> <b>APPROVED</b>: Inbound connection is pending acceptance by the remote domain owner.</p> </li>
    /// <li> <p> <b>PROVISIONING</b>: Inbound connection is being provisioned.</p> </li>
    /// <li> <p> <b>ACTIVE</b>: Inbound connection is active and ready to use.</p> </li>
    /// <li> <p> <b>REJECTING</b>: Inbound connection rejection is in process.</p> </li>
    /// <li> <p> <b>REJECTED</b>: Inbound connection is rejected.</p> </li>
    /// <li> <p> <b>DELETING</b>: Inbound connection deletion is in progress.</p> </li>
    /// <li> <p> <b>DELETED</b>: Inbound connection is deleted and can no longer be used.</p> </li>
    /// </ul>
    #[doc(hidden)]
    pub status_code: std::option::Option<crate::types::InboundConnectionStatusCode>,
    /// <p>Information about the connection.</p>
    #[doc(hidden)]
    pub message: std::option::Option<std::string::String>,
}
impl InboundConnectionStatus {
    /// <p>The status code for the connection. Can be one of the following:</p>
    /// <ul>
    /// <li> <p> <b>PENDING_ACCEPTANCE</b> - Inbound connection is not yet accepted by the remote domain owner.</p> </li>
    /// <li> <p> <b>APPROVED</b>: Inbound connection is pending acceptance by the remote domain owner.</p> </li>
    /// <li> <p> <b>PROVISIONING</b>: Inbound connection is being provisioned.</p> </li>
    /// <li> <p> <b>ACTIVE</b>: Inbound connection is active and ready to use.</p> </li>
    /// <li> <p> <b>REJECTING</b>: Inbound connection rejection is in process.</p> </li>
    /// <li> <p> <b>REJECTED</b>: Inbound connection is rejected.</p> </li>
    /// <li> <p> <b>DELETING</b>: Inbound connection deletion is in progress.</p> </li>
    /// <li> <p> <b>DELETED</b>: Inbound connection is deleted and can no longer be used.</p> </li>
    /// </ul>
    pub fn status_code(&self) -> std::option::Option<&crate::types::InboundConnectionStatusCode> {
        self.status_code.as_ref()
    }
    /// <p>Information about the connection.</p>
    pub fn message(&self) -> std::option::Option<&str> {
        self.message.as_deref()
    }
}
impl InboundConnectionStatus {
    /// Creates a new builder-style object to manufacture [`InboundConnectionStatus`](crate::types::InboundConnectionStatus).
    pub fn builder() -> crate::types::builders::InboundConnectionStatusBuilder {
        crate::types::builders::InboundConnectionStatusBuilder::default()
    }
}

/// A builder for [`InboundConnectionStatus`](crate::types::InboundConnectionStatus).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct InboundConnectionStatusBuilder {
    pub(crate) status_code: std::option::Option<crate::types::InboundConnectionStatusCode>,
    pub(crate) message: std::option::Option<std::string::String>,
}
impl InboundConnectionStatusBuilder {
    /// <p>The status code for the connection. Can be one of the following:</p>
    /// <ul>
    /// <li> <p> <b>PENDING_ACCEPTANCE</b> - Inbound connection is not yet accepted by the remote domain owner.</p> </li>
    /// <li> <p> <b>APPROVED</b>: Inbound connection is pending acceptance by the remote domain owner.</p> </li>
    /// <li> <p> <b>PROVISIONING</b>: Inbound connection is being provisioned.</p> </li>
    /// <li> <p> <b>ACTIVE</b>: Inbound connection is active and ready to use.</p> </li>
    /// <li> <p> <b>REJECTING</b>: Inbound connection rejection is in process.</p> </li>
    /// <li> <p> <b>REJECTED</b>: Inbound connection is rejected.</p> </li>
    /// <li> <p> <b>DELETING</b>: Inbound connection deletion is in progress.</p> </li>
    /// <li> <p> <b>DELETED</b>: Inbound connection is deleted and can no longer be used.</p> </li>
    /// </ul>
    pub fn status_code(mut self, input: crate::types::InboundConnectionStatusCode) -> Self {
        self.status_code = Some(input);
        self
    }
    /// <p>The status code for the connection. Can be one of the following:</p>
    /// <ul>
    /// <li> <p> <b>PENDING_ACCEPTANCE</b> - Inbound connection is not yet accepted by the remote domain owner.</p> </li>
    /// <li> <p> <b>APPROVED</b>: Inbound connection is pending acceptance by the remote domain owner.</p> </li>
    /// <li> <p> <b>PROVISIONING</b>: Inbound connection is being provisioned.</p> </li>
    /// <li> <p> <b>ACTIVE</b>: Inbound connection is active and ready to use.</p> </li>
    /// <li> <p> <b>REJECTING</b>: Inbound connection rejection is in process.</p> </li>
    /// <li> <p> <b>REJECTED</b>: Inbound connection is rejected.</p> </li>
    /// <li> <p> <b>DELETING</b>: Inbound connection deletion is in progress.</p> </li>
    /// <li> <p> <b>DELETED</b>: Inbound connection is deleted and can no longer be used.</p> </li>
    /// </ul>
    pub fn set_status_code(
        mut self,
        input: std::option::Option<crate::types::InboundConnectionStatusCode>,
    ) -> Self {
        self.status_code = input;
        self
    }
    /// <p>Information about the connection.</p>
    pub fn message(mut self, input: impl Into<std::string::String>) -> Self {
        self.message = Some(input.into());
        self
    }
    /// <p>Information about the connection.</p>
    pub fn set_message(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.message = input;
        self
    }
    /// Consumes the builder and constructs a [`InboundConnectionStatus`](crate::types::InboundConnectionStatus).
    pub fn build(self) -> crate::types::InboundConnectionStatus {
        crate::types::InboundConnectionStatus {
            status_code: self.status_code,
            message: self.message,
        }
    }
}
