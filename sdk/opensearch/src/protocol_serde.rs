// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn parse_http_error_metadata(
    response: &http::Response<bytes::Bytes>,
) -> Result<
    aws_smithy_types::error::metadata::Builder,
    aws_smithy_json::deserialize::error::DeserializeError,
> {
    crate::json_errors::parse_error_metadata(response.body(), response.headers())
}

pub(crate) mod shape_accept_inbound_connection;

pub(crate) mod shape_add_tags;

pub(crate) mod shape_associate_package;

pub(crate) mod shape_authorize_vpc_endpoint_access;

pub(crate) mod shape_cancel_service_software_update;

pub(crate) mod shape_create_domain;

pub(crate) mod shape_create_outbound_connection;

pub(crate) mod shape_create_package;

pub(crate) mod shape_create_vpc_endpoint;

pub(crate) mod shape_delete_domain;

pub(crate) mod shape_delete_inbound_connection;

pub(crate) mod shape_delete_outbound_connection;

pub(crate) mod shape_delete_package;

pub(crate) mod shape_delete_vpc_endpoint;

pub(crate) mod shape_describe_domain;

pub(crate) mod shape_describe_domain_auto_tunes;

pub(crate) mod shape_describe_domain_change_progress;

pub(crate) mod shape_describe_domain_config;

pub(crate) mod shape_describe_domains;

pub(crate) mod shape_describe_dry_run_progress;

pub(crate) mod shape_describe_inbound_connections;

pub(crate) mod shape_describe_instance_type_limits;

pub(crate) mod shape_describe_outbound_connections;

pub(crate) mod shape_describe_packages;

pub(crate) mod shape_describe_reserved_instance_offerings;

pub(crate) mod shape_describe_reserved_instances;

pub(crate) mod shape_describe_vpc_endpoints;

pub(crate) mod shape_dissociate_package;

pub(crate) mod shape_get_compatible_versions;

pub(crate) mod shape_get_package_version_history;

pub(crate) mod shape_get_upgrade_history;

pub(crate) mod shape_get_upgrade_status;

pub(crate) mod shape_list_domain_names;

pub(crate) mod shape_list_domains_for_package;

pub(crate) mod shape_list_instance_type_details;

pub(crate) mod shape_list_packages_for_domain;

pub(crate) mod shape_list_tags;

pub(crate) mod shape_list_versions;

pub(crate) mod shape_list_vpc_endpoint_access;

pub(crate) mod shape_list_vpc_endpoints;

pub(crate) mod shape_list_vpc_endpoints_for_domain;

pub(crate) mod shape_purchase_reserved_instance_offering;

pub(crate) mod shape_reject_inbound_connection;

pub(crate) mod shape_remove_tags;

pub(crate) mod shape_revoke_vpc_endpoint_access;

pub(crate) mod shape_start_service_software_update;

pub(crate) mod shape_update_domain_config;

pub(crate) mod shape_update_package;

pub(crate) mod shape_update_vpc_endpoint;

pub(crate) mod shape_upgrade_domain;

pub(crate) fn or_empty_doc(data: &[u8]) -> &[u8] {
    if data.is_empty() {
        b"{}"
    } else {
        data
    }
}

pub(crate) mod shape_access_denied_exception;

pub(crate) mod shape_add_tags_input;

pub(crate) mod shape_authorize_vpc_endpoint_access_input;

pub(crate) mod shape_base_exception;

pub(crate) mod shape_cancel_service_software_update_input;

pub(crate) mod shape_conflict_exception;

pub(crate) mod shape_create_domain_input;

pub(crate) mod shape_create_outbound_connection_input;

pub(crate) mod shape_create_package_input;

pub(crate) mod shape_create_vpc_endpoint_input;

pub(crate) mod shape_describe_domain_auto_tunes_input;

pub(crate) mod shape_describe_domains_input;

pub(crate) mod shape_describe_inbound_connections_input;

pub(crate) mod shape_describe_outbound_connections_input;

pub(crate) mod shape_describe_packages_input;

pub(crate) mod shape_describe_vpc_endpoints_input;

pub(crate) mod shape_disabled_operation_exception;

pub(crate) mod shape_internal_exception;

pub(crate) mod shape_invalid_pagination_token_exception;

pub(crate) mod shape_invalid_type_exception;

pub(crate) mod shape_limit_exceeded_exception;

pub(crate) mod shape_purchase_reserved_instance_offering_input;

pub(crate) mod shape_remove_tags_input;

pub(crate) mod shape_resource_already_exists_exception;

pub(crate) mod shape_resource_not_found_exception;

pub(crate) mod shape_revoke_vpc_endpoint_access_input;

pub(crate) mod shape_start_service_software_update_input;

pub(crate) mod shape_update_domain_config_input;

pub(crate) mod shape_update_package_input;

pub(crate) mod shape_update_vpc_endpoint_input;

pub(crate) mod shape_upgrade_domain_input;

pub(crate) mod shape_validation_exception;

pub(crate) mod shape_advanced_options;

pub(crate) mod shape_advanced_security_options_input;

pub(crate) mod shape_authorized_principal;

pub(crate) mod shape_authorized_principal_list;

pub(crate) mod shape_auto_tune_list;

pub(crate) mod shape_auto_tune_options;

pub(crate) mod shape_auto_tune_options_input;

pub(crate) mod shape_change_progress_details;

pub(crate) mod shape_change_progress_status_details;

pub(crate) mod shape_cluster_config;

pub(crate) mod shape_cognito_options;

pub(crate) mod shape_compatible_versions_list;

pub(crate) mod shape_describe_packages_filter;

pub(crate) mod shape_domain_config;

pub(crate) mod shape_domain_endpoint_options;

pub(crate) mod shape_domain_info_list;

pub(crate) mod shape_domain_information_container;

pub(crate) mod shape_domain_package_details;

pub(crate) mod shape_domain_package_details_list;

pub(crate) mod shape_domain_status;

pub(crate) mod shape_domain_status_list;

pub(crate) mod shape_dry_run_progress_status;

pub(crate) mod shape_dry_run_results;

pub(crate) mod shape_ebs_options;

pub(crate) mod shape_encryption_at_rest_options;

pub(crate) mod shape_filter;

pub(crate) mod shape_inbound_connection;

pub(crate) mod shape_inbound_connections;

pub(crate) mod shape_instance_type_details_list;

pub(crate) mod shape_limits_by_role;

pub(crate) mod shape_log_publishing_option;

pub(crate) mod shape_node_to_node_encryption_options;

pub(crate) mod shape_outbound_connection;

pub(crate) mod shape_outbound_connection_status;

pub(crate) mod shape_outbound_connections;

pub(crate) mod shape_package_details;

pub(crate) mod shape_package_details_list;

pub(crate) mod shape_package_source;

pub(crate) mod shape_package_version_history_list;

pub(crate) mod shape_reserved_instance_list;

pub(crate) mod shape_reserved_instance_offering_list;

pub(crate) mod shape_service_software_options;

pub(crate) mod shape_snapshot_options;

pub(crate) mod shape_tag;

pub(crate) mod shape_tag_list;

pub(crate) mod shape_upgrade_history_list;

pub(crate) mod shape_version_list;

pub(crate) mod shape_vpc_endpoint;

pub(crate) mod shape_vpc_endpoint_error_list;

pub(crate) mod shape_vpc_endpoint_summary;

pub(crate) mod shape_vpc_endpoint_summary_list;

pub(crate) mod shape_vpc_endpoints;

pub(crate) mod shape_vpc_options;

pub(crate) mod shape_access_policies_status;

pub(crate) mod shape_advanced_options_status;

pub(crate) mod shape_advanced_security_options;

pub(crate) mod shape_advanced_security_options_status;

pub(crate) mod shape_auto_tune;

pub(crate) mod shape_auto_tune_maintenance_schedule;

pub(crate) mod shape_auto_tune_options_output;

pub(crate) mod shape_auto_tune_options_status;

pub(crate) mod shape_aws_domain_information;

pub(crate) mod shape_change_progress_stage_list;

pub(crate) mod shape_cluster_config_status;

pub(crate) mod shape_cognito_options_status;

pub(crate) mod shape_cold_storage_options;

pub(crate) mod shape_compatible_versions_map;

pub(crate) mod shape_domain_endpoint_options_status;

pub(crate) mod shape_domain_info;

pub(crate) mod shape_ebs_options_status;

pub(crate) mod shape_encryption_at_rest_options_status;

pub(crate) mod shape_endpoints_map;

pub(crate) mod shape_error_details;

pub(crate) mod shape_inbound_connection_status;

pub(crate) mod shape_instance_type_details;

pub(crate) mod shape_limits;

pub(crate) mod shape_log_publishing_options;

pub(crate) mod shape_log_publishing_options_status;

pub(crate) mod shape_master_user_options;

pub(crate) mod shape_node_to_node_encryption_options_status;

pub(crate) mod shape_package_version_history;

pub(crate) mod shape_reserved_instance;

pub(crate) mod shape_reserved_instance_offering;

pub(crate) mod shape_saml_options_input;

pub(crate) mod shape_snapshot_options_status;

pub(crate) mod shape_string_list;

pub(crate) mod shape_upgrade_history;

pub(crate) mod shape_validation_failures;

pub(crate) mod shape_version_status;

pub(crate) mod shape_vpc_derived_info;

pub(crate) mod shape_vpc_derived_info_status;

pub(crate) mod shape_vpc_endpoint_error;

pub(crate) mod shape_zone_awareness_config;

pub(crate) mod shape_additional_limit_list;

pub(crate) mod shape_auto_tune_details;

pub(crate) mod shape_auto_tune_status;

pub(crate) mod shape_change_progress_stage;

pub(crate) mod shape_duration;

pub(crate) mod shape_instance_limits;

pub(crate) mod shape_instance_role_list;

pub(crate) mod shape_option_status;

pub(crate) mod shape_recurring_charge_list;

pub(crate) mod shape_saml_idp;

pub(crate) mod shape_saml_options_output;

pub(crate) mod shape_storage_type_list;

pub(crate) mod shape_upgrade_steps_list;

pub(crate) mod shape_validation_failure;

pub(crate) mod shape_additional_limit;

pub(crate) mod shape_auto_tune_maintenance_schedule_list;

pub(crate) mod shape_instance_count_limits;

pub(crate) mod shape_recurring_charge;

pub(crate) mod shape_scheduled_auto_tune_details;

pub(crate) mod shape_storage_type;

pub(crate) mod shape_upgrade_step_item;

pub(crate) mod shape_issues;

pub(crate) mod shape_limit_value_list;

pub(crate) mod shape_storage_type_limit_list;

pub(crate) mod shape_storage_type_limit;
