// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdatePackage`](crate::operation::update_package::builders::UpdatePackageFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`package_id(impl Into<String>)`](crate::operation::update_package::builders::UpdatePackageFluentBuilder::package_id) / [`set_package_id(Option<String>)`](crate::operation::update_package::builders::UpdatePackageFluentBuilder::set_package_id): <p>The unique identifier for the package.</p>
    ///   - [`package_source(PackageSource)`](crate::operation::update_package::builders::UpdatePackageFluentBuilder::package_source) / [`set_package_source(Option<PackageSource>)`](crate::operation::update_package::builders::UpdatePackageFluentBuilder::set_package_source): <p>Amazon S3 bucket and key for the package.</p>
    ///   - [`package_description(impl Into<String>)`](crate::operation::update_package::builders::UpdatePackageFluentBuilder::package_description) / [`set_package_description(Option<String>)`](crate::operation::update_package::builders::UpdatePackageFluentBuilder::set_package_description): <p>A new description of the package.</p>
    ///   - [`commit_message(impl Into<String>)`](crate::operation::update_package::builders::UpdatePackageFluentBuilder::commit_message) / [`set_commit_message(Option<String>)`](crate::operation::update_package::builders::UpdatePackageFluentBuilder::set_commit_message): <p>Commit message for the updated file, which is shown as part of <code>GetPackageVersionHistoryResponse</code>.</p>
    /// - On success, responds with [`UpdatePackageOutput`](crate::operation::update_package::UpdatePackageOutput) with field(s):
    ///   - [`package_details(Option<PackageDetails>)`](crate::operation::update_package::UpdatePackageOutput::package_details): <p>Information about a package.</p>
    /// - On failure, responds with [`SdkError<UpdatePackageError>`](crate::operation::update_package::UpdatePackageError)
    pub fn update_package(
        &self,
    ) -> crate::operation::update_package::builders::UpdatePackageFluentBuilder {
        crate::operation::update_package::builders::UpdatePackageFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
