// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetPackageVersionHistory`](crate::operation::get_package_version_history::builders::GetPackageVersionHistoryFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::get_package_version_history::builders::GetPackageVersionHistoryFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`package_id(impl Into<String>)`](crate::operation::get_package_version_history::builders::GetPackageVersionHistoryFluentBuilder::package_id) / [`set_package_id(Option<String>)`](crate::operation::get_package_version_history::builders::GetPackageVersionHistoryFluentBuilder::set_package_id):<br>required: **true**<br><p>The unique identifier of the package.</p><br>
    ///   - [`max_results(i32)`](crate::operation::get_package_version_history::builders::GetPackageVersionHistoryFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::get_package_version_history::builders::GetPackageVersionHistoryFluentBuilder::set_max_results):<br>required: **false**<br><p>An optional parameter that specifies the maximum number of results to return. You can use <code>nextToken</code> to get the next page of results.</p><br>
    ///   - [`next_token(impl Into<String>)`](crate::operation::get_package_version_history::builders::GetPackageVersionHistoryFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::get_package_version_history::builders::GetPackageVersionHistoryFluentBuilder::set_next_token):<br>required: **false**<br><p>If your initial <code>GetPackageVersionHistory</code> operation returns a <code>nextToken</code>, you can include the returned <code>nextToken</code> in subsequent <code>GetPackageVersionHistory</code> operations, which returns results in the next page. </p><br>
    /// - On success, responds with [`GetPackageVersionHistoryOutput`](crate::operation::get_package_version_history::GetPackageVersionHistoryOutput) with field(s):
    ///   - [`package_id(Option<String>)`](crate::operation::get_package_version_history::GetPackageVersionHistoryOutput::package_id): <p>The unique identifier of the package.</p>
    ///   - [`package_version_history_list(Option<Vec::<PackageVersionHistory>>)`](crate::operation::get_package_version_history::GetPackageVersionHistoryOutput::package_version_history_list): <p>A list of package versions, along with their creation time and commit message.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::get_package_version_history::GetPackageVersionHistoryOutput::next_token): <p>When <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page.</p>
    /// - On failure, responds with [`SdkError<GetPackageVersionHistoryError>`](crate::operation::get_package_version_history::GetPackageVersionHistoryError)
    pub fn get_package_version_history(&self) -> crate::operation::get_package_version_history::builders::GetPackageVersionHistoryFluentBuilder {
        crate::operation::get_package_version_history::builders::GetPackageVersionHistoryFluentBuilder::new(self.handle.clone())
    }
}
