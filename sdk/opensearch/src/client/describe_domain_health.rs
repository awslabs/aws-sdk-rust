// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeDomainHealth`](crate::operation::describe_domain_health::builders::DescribeDomainHealthFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`domain_name(impl Into<String>)`](crate::operation::describe_domain_health::builders::DescribeDomainHealthFluentBuilder::domain_name) / [`set_domain_name(Option<String>)`](crate::operation::describe_domain_health::builders::DescribeDomainHealthFluentBuilder::set_domain_name):<br>required: **true**<br><p>The name of the domain.</p><br>
    /// - On success, responds with [`DescribeDomainHealthOutput`](crate::operation::describe_domain_health::DescribeDomainHealthOutput) with field(s):
    ///   - [`domain_state(Option<DomainState>)`](crate::operation::describe_domain_health::DescribeDomainHealthOutput::domain_state): <p>The current state of the domain.</p>  <ul>   <li> <p> <code>Processing</code> - The domain has updates in progress.</p> </li>   <li> <p> <code>Active</code> - Requested changes have been processed and deployed to the domain.</p> </li>  </ul>
    ///   - [`availability_zone_count(Option<String>)`](crate::operation::describe_domain_health::DescribeDomainHealthOutput::availability_zone_count): <p>The number of Availability Zones configured for the domain. If the service is unable to fetch this information, it will return <code>NotAvailable</code>.</p>
    ///   - [`active_availability_zone_count(Option<String>)`](crate::operation::describe_domain_health::DescribeDomainHealthOutput::active_availability_zone_count): <p>The number of active Availability Zones configured for the domain. If the service is unable to fetch this information, it will return <code>NotAvailable</code>.</p>
    ///   - [`stand_by_availability_zone_count(Option<String>)`](crate::operation::describe_domain_health::DescribeDomainHealthOutput::stand_by_availability_zone_count): <p>The number of standby Availability Zones configured for the domain. If the service is unable to fetch this information, it will return <code>NotAvailable</code>.</p>
    ///   - [`data_node_count(Option<String>)`](crate::operation::describe_domain_health::DescribeDomainHealthOutput::data_node_count): <p>The number of data nodes configured for the domain. If the service is unable to fetch this information, it will return <code>NotAvailable</code>.</p>
    ///   - [`dedicated_master(Option<bool>)`](crate::operation::describe_domain_health::DescribeDomainHealthOutput::dedicated_master): <p>A boolean that indicates if dedicated master nodes are activated for the domain.</p>
    ///   - [`master_eligible_node_count(Option<String>)`](crate::operation::describe_domain_health::DescribeDomainHealthOutput::master_eligible_node_count): <p>The number of nodes that can be elected as a master node. If dedicated master nodes is turned on, this value is the number of dedicated master nodes configured for the domain. If the service is unable to fetch this information, it will return <code>NotAvailable</code>.</p>
    ///   - [`warm_node_count(Option<String>)`](crate::operation::describe_domain_health::DescribeDomainHealthOutput::warm_node_count): <p>The number of warm nodes configured for the domain.</p>
    ///   - [`master_node(Option<MasterNodeStatus>)`](crate::operation::describe_domain_health::DescribeDomainHealthOutput::master_node): <p>Indicates whether the domain has an elected master node.</p>  <ul>   <li> <p> <b>Available</b> - The domain has an elected master node.</p> </li>   <li> <p> <b>UnAvailable</b> - The master node hasn't yet been elected, and a quorum to elect a new master node hasn't been reached.</p> </li>  </ul>
    ///   - [`cluster_health(Option<DomainHealth>)`](crate::operation::describe_domain_health::DescribeDomainHealthOutput::cluster_health): <p>The current health status of your cluster.</p>  <ul>   <li> <p> <code>Red</code> - At least one primary shard is not allocated to any node.</p> </li>   <li> <p> <code>Yellow</code> - All primary shards are allocated to nodes, but some replicas arenâ€™t.</p> </li>   <li> <p> <code>Green</code> - All primary shards and their replicas are allocated to nodes.</p> </li>   <li> <p> <code>NotAvailable</code> - Unable to retrieve cluster health.</p> </li>  </ul>
    ///   - [`total_shards(Option<String>)`](crate::operation::describe_domain_health::DescribeDomainHealthOutput::total_shards): <p>The total number of primary and replica shards for the domain.</p>
    ///   - [`total_un_assigned_shards(Option<String>)`](crate::operation::describe_domain_health::DescribeDomainHealthOutput::total_un_assigned_shards): <p>The total number of primary and replica shards not allocated to any of the nodes for the cluster.</p>
    ///   - [`environment_information(Option<Vec::<EnvironmentInfo>>)`](crate::operation::describe_domain_health::DescribeDomainHealthOutput::environment_information): <p>A list of <code>EnvironmentInfo</code> for the domain. </p>
    /// - On failure, responds with [`SdkError<DescribeDomainHealthError>`](crate::operation::describe_domain_health::DescribeDomainHealthError)
    pub fn describe_domain_health(&self) -> crate::operation::describe_domain_health::builders::DescribeDomainHealthFluentBuilder {
        crate::operation::describe_domain_health::builders::DescribeDomainHealthFluentBuilder::new(self.handle.clone())
    }
}
