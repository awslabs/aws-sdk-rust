// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateScheduledAction`](crate::operation::update_scheduled_action::builders::UpdateScheduledActionFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`domain_name(impl Into<String>)`](crate::operation::update_scheduled_action::builders::UpdateScheduledActionFluentBuilder::domain_name) / [`set_domain_name(Option<String>)`](crate::operation::update_scheduled_action::builders::UpdateScheduledActionFluentBuilder::set_domain_name):<br>required: **true**<br><p>The name of the domain to reschedule an action for.</p><br>
    ///   - [`action_id(impl Into<String>)`](crate::operation::update_scheduled_action::builders::UpdateScheduledActionFluentBuilder::action_id) / [`set_action_id(Option<String>)`](crate::operation::update_scheduled_action::builders::UpdateScheduledActionFluentBuilder::set_action_id):<br>required: **true**<br><p>The unique identifier of the action to reschedule. To retrieve this ID, send a <a href="https://docs.aws.amazon.com/opensearch-service/latest/APIReference/API_ListScheduledActions.html">ListScheduledActions</a> request.</p><br>
    ///   - [`action_type(ActionType)`](crate::operation::update_scheduled_action::builders::UpdateScheduledActionFluentBuilder::action_type) / [`set_action_type(Option<ActionType>)`](crate::operation::update_scheduled_action::builders::UpdateScheduledActionFluentBuilder::set_action_type):<br>required: **true**<br><p>The type of action to reschedule. Can be one of <code>SERVICE_SOFTWARE_UPDATE</code>, <code>JVM_HEAP_SIZE_TUNING</code>, or <code>JVM_YOUNG_GEN_TUNING</code>. To retrieve this value, send a <a href="https://docs.aws.amazon.com/opensearch-service/latest/APIReference/API_ListScheduledActions.html">ListScheduledActions</a> request.</p><br>
    ///   - [`schedule_at(ScheduleAt)`](crate::operation::update_scheduled_action::builders::UpdateScheduledActionFluentBuilder::schedule_at) / [`set_schedule_at(Option<ScheduleAt>)`](crate::operation::update_scheduled_action::builders::UpdateScheduledActionFluentBuilder::set_schedule_at):<br>required: **true**<br><p>When to schedule the action.</p>  <ul>   <li> <p> <code>NOW</code> - Immediately schedules the update to happen in the current hour if there's capacity available.</p> </li>   <li> <p> <code>TIMESTAMP</code> - Lets you specify a custom date and time to apply the update. If you specify this value, you must also provide a value for <code>DesiredStartTime</code>.</p> </li>   <li> <p> <code>OFF_PEAK_WINDOW</code> - Marks the action to be picked up during an upcoming off-peak window. There's no guarantee that the change will be implemented during the next immediate window. Depending on capacity, it might happen in subsequent days.</p> </li>  </ul><br>
    ///   - [`desired_start_time(i64)`](crate::operation::update_scheduled_action::builders::UpdateScheduledActionFluentBuilder::desired_start_time) / [`set_desired_start_time(Option<i64>)`](crate::operation::update_scheduled_action::builders::UpdateScheduledActionFluentBuilder::set_desired_start_time):<br>required: **false**<br><p>The time to implement the change, in Coordinated Universal Time (UTC). Only specify this parameter if you set <code>ScheduleAt</code> to <code>TIMESTAMP</code>.</p><br>
    /// - On success, responds with [`UpdateScheduledActionOutput`](crate::operation::update_scheduled_action::UpdateScheduledActionOutput) with field(s):
    ///   - [`scheduled_action(Option<ScheduledAction>)`](crate::operation::update_scheduled_action::UpdateScheduledActionOutput::scheduled_action): <p>Information about the rescheduled action.</p>
    /// - On failure, responds with [`SdkError<UpdateScheduledActionError>`](crate::operation::update_scheduled_action::UpdateScheduledActionError)
    pub fn update_scheduled_action(&self) -> crate::operation::update_scheduled_action::builders::UpdateScheduledActionFluentBuilder {
        crate::operation::update_scheduled_action::builders::UpdateScheduledActionFluentBuilder::new(self.handle.clone())
    }
}
