// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`AssociatePackage`](crate::operation::associate_package::builders::AssociatePackageFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`package_id(impl Into<String>)`](crate::operation::associate_package::builders::AssociatePackageFluentBuilder::package_id) / [`set_package_id(Option<String>)`](crate::operation::associate_package::builders::AssociatePackageFluentBuilder::set_package_id): <p>Internal ID of the package to associate with a domain. Use <code>DescribePackages</code> to find this value. </p>
    ///   - [`domain_name(impl Into<String>)`](crate::operation::associate_package::builders::AssociatePackageFluentBuilder::domain_name) / [`set_domain_name(Option<String>)`](crate::operation::associate_package::builders::AssociatePackageFluentBuilder::set_domain_name): <p>Name of the domain to associate the package with.</p>
    /// - On success, responds with [`AssociatePackageOutput`](crate::operation::associate_package::AssociatePackageOutput) with field(s):
    ///   - [`domain_package_details(Option<DomainPackageDetails>)`](crate::operation::associate_package::AssociatePackageOutput::domain_package_details): <p>Information about a package that is associated with a domain.</p>
    /// - On failure, responds with [`SdkError<AssociatePackageError>`](crate::operation::associate_package::AssociatePackageError)
    pub fn associate_package(
        &self,
    ) -> crate::operation::associate_package::builders::AssociatePackageFluentBuilder {
        crate::operation::associate_package::builders::AssociatePackageFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
