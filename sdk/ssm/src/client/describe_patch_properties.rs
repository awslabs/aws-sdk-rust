// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribePatchProperties`](crate::operation::describe_patch_properties::builders::DescribePatchPropertiesFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::describe_patch_properties::builders::DescribePatchPropertiesFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`operating_system(OperatingSystem)`](crate::operation::describe_patch_properties::builders::DescribePatchPropertiesFluentBuilder::operating_system) / [`set_operating_system(Option<OperatingSystem>)`](crate::operation::describe_patch_properties::builders::DescribePatchPropertiesFluentBuilder::set_operating_system): <p>The operating system type for which to list patches.</p>
    ///   - [`property(PatchProperty)`](crate::operation::describe_patch_properties::builders::DescribePatchPropertiesFluentBuilder::property) / [`set_property(Option<PatchProperty>)`](crate::operation::describe_patch_properties::builders::DescribePatchPropertiesFluentBuilder::set_property): <p>The patch property for which you want to view patch details. </p>
    ///   - [`patch_set(PatchSet)`](crate::operation::describe_patch_properties::builders::DescribePatchPropertiesFluentBuilder::patch_set) / [`set_patch_set(Option<PatchSet>)`](crate::operation::describe_patch_properties::builders::DescribePatchPropertiesFluentBuilder::set_patch_set): <p>Indicates whether to list patches for the Windows operating system or for applications released by Microsoft. Not applicable for the Linux or macOS operating systems.</p>
    ///   - [`max_results(i32)`](crate::operation::describe_patch_properties::builders::DescribePatchPropertiesFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::describe_patch_properties::builders::DescribePatchPropertiesFluentBuilder::set_max_results): <p>The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.</p>
    ///   - [`next_token(impl Into<String>)`](crate::operation::describe_patch_properties::builders::DescribePatchPropertiesFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::describe_patch_properties::builders::DescribePatchPropertiesFluentBuilder::set_next_token): <p>The token for the next set of items to return. (You received this token from a previous call.)</p>
    /// - On success, responds with [`DescribePatchPropertiesOutput`](crate::operation::describe_patch_properties::DescribePatchPropertiesOutput) with field(s):
    ///   - [`properties(Option<Vec<HashMap<String, String>>>)`](crate::operation::describe_patch_properties::DescribePatchPropertiesOutput::properties): <p>A list of the properties for patches matching the filter request parameters.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::describe_patch_properties::DescribePatchPropertiesOutput::next_token): <p>The token for the next set of items to return. (You use this token in the next call.)</p>
    /// - On failure, responds with [`SdkError<DescribePatchPropertiesError>`](crate::operation::describe_patch_properties::DescribePatchPropertiesError)
    pub fn describe_patch_properties(
        &self,
    ) -> crate::operation::describe_patch_properties::builders::DescribePatchPropertiesFluentBuilder
    {
        crate::operation::describe_patch_properties::builders::DescribePatchPropertiesFluentBuilder::new(self.handle.clone())
    }
}
