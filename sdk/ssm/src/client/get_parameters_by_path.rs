// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetParametersByPath`](crate::operation::get_parameters_by_path::builders::GetParametersByPathFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::get_parameters_by_path::builders::GetParametersByPathFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`path(impl Into<String>)`](crate::operation::get_parameters_by_path::builders::GetParametersByPathFluentBuilder::path) / [`set_path(Option<String>)`](crate::operation::get_parameters_by_path::builders::GetParametersByPathFluentBuilder::set_path):<br>required: **true**<br><p>The hierarchy for the parameter. Hierarchies start with a forward slash (/). The hierarchy is the parameter name except the last part of the parameter. For the API call to succeed, the last part of the parameter name can't be in the path. A parameter name hierarchy can have a maximum of 15 levels. Here is an example of a hierarchy: <code>/Finance/Prod/IAD/WinServ2016/license33 </code> </p><br>
    ///   - [`recursive(bool)`](crate::operation::get_parameters_by_path::builders::GetParametersByPathFluentBuilder::recursive) / [`set_recursive(Option<bool>)`](crate::operation::get_parameters_by_path::builders::GetParametersByPathFluentBuilder::set_recursive):<br>required: **false**<br><p>Retrieve all parameters within a hierarchy.</p> <important>   <p>If a user has access to a path, then the user can access all levels of that path. For example, if a user has permission to access path <code>/a</code>, then the user can also access <code>/a/b</code>. Even if a user has explicitly been denied access in IAM for parameter <code>/a/b</code>, they can still call the GetParametersByPath API operation recursively for <code>/a</code> and view <code>/a/b</code>.</p>  </important><br>
    ///   - [`parameter_filters(ParameterStringFilter)`](crate::operation::get_parameters_by_path::builders::GetParametersByPathFluentBuilder::parameter_filters) / [`set_parameter_filters(Option<Vec::<ParameterStringFilter>>)`](crate::operation::get_parameters_by_path::builders::GetParametersByPathFluentBuilder::set_parameter_filters):<br>required: **false**<br><p>Filters to limit the request results.</p> <note>   <p>The following <code>Key</code> values are supported for <code>GetParametersByPath</code>: <code>Type</code>, <code>KeyId</code>, and <code>Label</code>.</p>   <p>The following <code>Key</code> values aren't supported for <code>GetParametersByPath</code>: <code>tag</code>, <code>DataType</code>, <code>Name</code>, <code>Path</code>, and <code>Tier</code>.</p>  </note><br>
    ///   - [`with_decryption(bool)`](crate::operation::get_parameters_by_path::builders::GetParametersByPathFluentBuilder::with_decryption) / [`set_with_decryption(Option<bool>)`](crate::operation::get_parameters_by_path::builders::GetParametersByPathFluentBuilder::set_with_decryption):<br>required: **false**<br><p>Retrieve all parameters in a hierarchy with their value decrypted.</p><br>
    ///   - [`max_results(i32)`](crate::operation::get_parameters_by_path::builders::GetParametersByPathFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::get_parameters_by_path::builders::GetParametersByPathFluentBuilder::set_max_results):<br>required: **false**<br><p>The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.</p><br>
    ///   - [`next_token(impl Into<String>)`](crate::operation::get_parameters_by_path::builders::GetParametersByPathFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::get_parameters_by_path::builders::GetParametersByPathFluentBuilder::set_next_token):<br>required: **false**<br><p>A token to start the list. Use this token to get the next set of results. </p><br>
    /// - On success, responds with [`GetParametersByPathOutput`](crate::operation::get_parameters_by_path::GetParametersByPathOutput) with field(s):
    ///   - [`parameters(Option<Vec::<Parameter>>)`](crate::operation::get_parameters_by_path::GetParametersByPathOutput::parameters): <p>A list of parameters found in the specified hierarchy.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::get_parameters_by_path::GetParametersByPathOutput::next_token): <p>The token for the next set of items to return. Use this token to get the next set of results.</p>
    /// - On failure, responds with [`SdkError<GetParametersByPathError>`](crate::operation::get_parameters_by_path::GetParametersByPathError)
    pub fn get_parameters_by_path(&self) -> crate::operation::get_parameters_by_path::builders::GetParametersByPathFluentBuilder {
        crate::operation::get_parameters_by_path::builders::GetParametersByPathFluentBuilder::new(self.handle.clone())
    }
}
