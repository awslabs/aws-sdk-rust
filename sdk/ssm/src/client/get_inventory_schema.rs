// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetInventorySchema`](crate::client::fluent_builders::GetInventorySchema) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::GetInventorySchema::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`type_name(impl Into<String>)`](crate::client::fluent_builders::GetInventorySchema::type_name) / [`set_type_name(Option<String>)`](crate::client::fluent_builders::GetInventorySchema::set_type_name): <p>The type of inventory item to return.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::GetInventorySchema::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::GetInventorySchema::set_next_token): <p>The token for the next set of items to return. (You received this token from a previous call.)</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::GetInventorySchema::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::GetInventorySchema::set_max_results): <p>The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.</p>
    ///   - [`aggregator(bool)`](crate::client::fluent_builders::GetInventorySchema::aggregator) / [`set_aggregator(bool)`](crate::client::fluent_builders::GetInventorySchema::set_aggregator): <p>Returns inventory schemas that support aggregation. For example, this call returns the <code>AWS:InstanceInformation</code> type, because it supports aggregation based on the <code>PlatformName</code>, <code>PlatformType</code>, and <code>PlatformVersion</code> attributes.</p>
    ///   - [`sub_type(bool)`](crate::client::fluent_builders::GetInventorySchema::sub_type) / [`set_sub_type(Option<bool>)`](crate::client::fluent_builders::GetInventorySchema::set_sub_type): <p>Returns the sub-type schema for a specified inventory type.</p>
    /// - On success, responds with [`GetInventorySchemaOutput`](crate::output::GetInventorySchemaOutput) with field(s):
    ///   - [`schemas(Option<Vec<InventoryItemSchema>>)`](crate::output::GetInventorySchemaOutput::schemas): <p>Inventory schemas returned by the request.</p>
    ///   - [`next_token(Option<String>)`](crate::output::GetInventorySchemaOutput::next_token): <p>The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.</p>
    /// - On failure, responds with [`SdkError<GetInventorySchemaError>`](crate::error::GetInventorySchemaError)
    pub fn get_inventory_schema(&self) -> crate::client::fluent_builders::GetInventorySchema {
        crate::client::fluent_builders::GetInventorySchema::new(self.handle.clone())
    }
}
