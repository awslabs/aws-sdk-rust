// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`PutComplianceItems`](crate::client::fluent_builders::PutComplianceItems) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`resource_id(impl Into<String>)`](crate::client::fluent_builders::PutComplianceItems::resource_id) / [`set_resource_id(Option<String>)`](crate::client::fluent_builders::PutComplianceItems::set_resource_id): <p>Specify an ID for this resource. For a managed node, this is the node ID.</p>
    ///   - [`resource_type(impl Into<String>)`](crate::client::fluent_builders::PutComplianceItems::resource_type) / [`set_resource_type(Option<String>)`](crate::client::fluent_builders::PutComplianceItems::set_resource_type): <p>Specify the type of resource. <code>ManagedInstance</code> is currently the only supported resource type.</p>
    ///   - [`compliance_type(impl Into<String>)`](crate::client::fluent_builders::PutComplianceItems::compliance_type) / [`set_compliance_type(Option<String>)`](crate::client::fluent_builders::PutComplianceItems::set_compliance_type): <p>Specify the compliance type. For example, specify Association (for a State Manager association), Patch, or Custom:<code>string</code>.</p>
    ///   - [`execution_summary(ComplianceExecutionSummary)`](crate::client::fluent_builders::PutComplianceItems::execution_summary) / [`set_execution_summary(Option<ComplianceExecutionSummary>)`](crate::client::fluent_builders::PutComplianceItems::set_execution_summary): <p>A summary of the call execution that includes an execution ID, the type of execution (for example, <code>Command</code>), and the date/time of the execution using a datetime object that is saved in the following format: yyyy-MM-dd'T'HH:mm:ss'Z'.</p>
    ///   - [`items(Vec<ComplianceItemEntry>)`](crate::client::fluent_builders::PutComplianceItems::items) / [`set_items(Option<Vec<ComplianceItemEntry>>)`](crate::client::fluent_builders::PutComplianceItems::set_items): <p>Information about the compliance as defined by the resource type. For example, for a patch compliance type, <code>Items</code> includes information about the PatchSeverity, Classification, and so on.</p>
    ///   - [`item_content_hash(impl Into<String>)`](crate::client::fluent_builders::PutComplianceItems::item_content_hash) / [`set_item_content_hash(Option<String>)`](crate::client::fluent_builders::PutComplianceItems::set_item_content_hash): <p>MD5 or SHA-256 content hash. The content hash is used to determine if existing information should be overwritten or ignored. If the content hashes match, the request to put compliance information is ignored.</p>
    ///   - [`upload_type(ComplianceUploadType)`](crate::client::fluent_builders::PutComplianceItems::upload_type) / [`set_upload_type(Option<ComplianceUploadType>)`](crate::client::fluent_builders::PutComplianceItems::set_upload_type): <p>The mode for uploading compliance items. You can specify <code>COMPLETE</code> or <code>PARTIAL</code>. In <code>COMPLETE</code> mode, the system overwrites all existing compliance information for the resource. You must provide a full list of compliance items each time you send the request.</p>  <p>In <code>PARTIAL</code> mode, the system overwrites compliance information for a specific association. The association must be configured with <code>SyncCompliance</code> set to <code>MANUAL</code>. By default, all requests use <code>COMPLETE</code> mode.</p> <note>   <p>This attribute is only valid for association compliance.</p>  </note>
    /// - On success, responds with [`PutComplianceItemsOutput`](crate::output::PutComplianceItemsOutput)
    /// - On failure, responds with [`SdkError<PutComplianceItemsError>`](crate::error::PutComplianceItemsError)
    pub fn put_compliance_items(&self) -> crate::client::fluent_builders::PutComplianceItems {
        crate::client::fluent_builders::PutComplianceItems::new(self.handle.clone())
    }
}
