// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeInstancePatchStatesForPatchGroup`](crate::operation::describe_instance_patch_states_for_patch_group::builders::DescribeInstancePatchStatesForPatchGroupFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::describe_instance_patch_states_for_patch_group::builders::DescribeInstancePatchStatesForPatchGroupFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`patch_group(impl Into<String>)`](crate::operation::describe_instance_patch_states_for_patch_group::builders::DescribeInstancePatchStatesForPatchGroupFluentBuilder::patch_group) / [`set_patch_group(Option<String>)`](crate::operation::describe_instance_patch_states_for_patch_group::builders::DescribeInstancePatchStatesForPatchGroupFluentBuilder::set_patch_group): <p>The name of the patch group for which the patch state information should be retrieved.</p>
    ///   - [`filters(Vec<InstancePatchStateFilter>)`](crate::operation::describe_instance_patch_states_for_patch_group::builders::DescribeInstancePatchStatesForPatchGroupFluentBuilder::filters) / [`set_filters(Option<Vec<InstancePatchStateFilter>>)`](crate::operation::describe_instance_patch_states_for_patch_group::builders::DescribeInstancePatchStatesForPatchGroupFluentBuilder::set_filters): <p>Each entry in the array is a structure containing:</p>  <ul>   <li> <p>Key (string between 1 and 200 characters)</p> </li>   <li> <p>Values (array containing a single string)</p> </li>   <li> <p>Type (string "Equal", "NotEqual", "LessThan", "GreaterThan")</p> </li>  </ul>
    ///   - [`next_token(impl Into<String>)`](crate::operation::describe_instance_patch_states_for_patch_group::builders::DescribeInstancePatchStatesForPatchGroupFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::describe_instance_patch_states_for_patch_group::builders::DescribeInstancePatchStatesForPatchGroupFluentBuilder::set_next_token): <p>The token for the next set of items to return. (You received this token from a previous call.)</p>
    ///   - [`max_results(i32)`](crate::operation::describe_instance_patch_states_for_patch_group::builders::DescribeInstancePatchStatesForPatchGroupFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::describe_instance_patch_states_for_patch_group::builders::DescribeInstancePatchStatesForPatchGroupFluentBuilder::set_max_results): <p>The maximum number of patches to return (per page).</p>
    /// - On success, responds with [`DescribeInstancePatchStatesForPatchGroupOutput`](crate::operation::describe_instance_patch_states_for_patch_group::DescribeInstancePatchStatesForPatchGroupOutput) with field(s):
    ///   - [`instance_patch_states(Option<Vec<InstancePatchState>>)`](crate::operation::describe_instance_patch_states_for_patch_group::DescribeInstancePatchStatesForPatchGroupOutput::instance_patch_states): <p>The high-level patch state for the requested managed nodes. </p>
    ///   - [`next_token(Option<String>)`](crate::operation::describe_instance_patch_states_for_patch_group::DescribeInstancePatchStatesForPatchGroupOutput::next_token): <p>The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.</p>
    /// - On failure, responds with [`SdkError<DescribeInstancePatchStatesForPatchGroupError>`](crate::operation::describe_instance_patch_states_for_patch_group::DescribeInstancePatchStatesForPatchGroupError)
    pub fn describe_instance_patch_states_for_patch_group(&self) -> crate::operation::describe_instance_patch_states_for_patch_group::builders::DescribeInstancePatchStatesForPatchGroupFluentBuilder{
        crate::operation::describe_instance_patch_states_for_patch_group::builders::DescribeInstancePatchStatesForPatchGroupFluentBuilder::new(self.handle.clone())
    }
}
