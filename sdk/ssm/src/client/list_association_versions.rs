// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListAssociationVersions`](crate::client::fluent_builders::ListAssociationVersions) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListAssociationVersions::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`association_id(impl Into<String>)`](crate::client::fluent_builders::ListAssociationVersions::association_id) / [`set_association_id(Option<String>)`](crate::client::fluent_builders::ListAssociationVersions::set_association_id): <p>The association ID for which you want to view all versions.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListAssociationVersions::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListAssociationVersions::set_max_results): <p>The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListAssociationVersions::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListAssociationVersions::set_next_token): <p>A token to start the list. Use this token to get the next set of results. </p>
    /// - On success, responds with [`ListAssociationVersionsOutput`](crate::output::ListAssociationVersionsOutput) with field(s):
    ///   - [`association_versions(Option<Vec<AssociationVersionInfo>>)`](crate::output::ListAssociationVersionsOutput::association_versions): <p>Information about all versions of the association for the specified association ID.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListAssociationVersionsOutput::next_token): <p>The token for the next set of items to return. Use this token to get the next set of results.</p>
    /// - On failure, responds with [`SdkError<ListAssociationVersionsError>`](crate::error::ListAssociationVersionsError)
    pub fn list_association_versions(
        &self,
    ) -> crate::client::fluent_builders::ListAssociationVersions {
        crate::client::fluent_builders::ListAssociationVersions::new(self.handle.clone())
    }
}
