// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeInstancePatchStates`](crate::client::fluent_builders::DescribeInstancePatchStates) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::DescribeInstancePatchStates::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`instance_ids(Vec<String>)`](crate::client::fluent_builders::DescribeInstancePatchStates::instance_ids) / [`set_instance_ids(Option<Vec<String>>)`](crate::client::fluent_builders::DescribeInstancePatchStates::set_instance_ids): <p>The ID of the managed node for which patch state information should be retrieved.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::DescribeInstancePatchStates::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::DescribeInstancePatchStates::set_next_token): <p>The token for the next set of items to return. (You received this token from a previous call.)</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::DescribeInstancePatchStates::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::DescribeInstancePatchStates::set_max_results): <p>The maximum number of managed nodes to return (per page).</p>
    /// - On success, responds with [`DescribeInstancePatchStatesOutput`](crate::output::DescribeInstancePatchStatesOutput) with field(s):
    ///   - [`instance_patch_states(Option<Vec<InstancePatchState>>)`](crate::output::DescribeInstancePatchStatesOutput::instance_patch_states): <p>The high-level patch state for the requested managed nodes.</p>
    ///   - [`next_token(Option<String>)`](crate::output::DescribeInstancePatchStatesOutput::next_token): <p>The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.</p>
    /// - On failure, responds with [`SdkError<DescribeInstancePatchStatesError>`](crate::error::DescribeInstancePatchStatesError)
    pub fn describe_instance_patch_states(
        &self,
    ) -> crate::client::fluent_builders::DescribeInstancePatchStates {
        crate::client::fluent_builders::DescribeInstancePatchStates::new(self.handle.clone())
    }
}
