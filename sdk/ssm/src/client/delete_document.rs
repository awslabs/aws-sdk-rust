// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeleteDocument`](crate::operation::delete_document::builders::DeleteDocumentFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(impl Into<String>)`](crate::operation::delete_document::builders::DeleteDocumentFluentBuilder::name) / [`set_name(Option<String>)`](crate::operation::delete_document::builders::DeleteDocumentFluentBuilder::set_name):<br>required: **true**<br><p>The name of the document.</p><br>
    ///   - [`document_version(impl Into<String>)`](crate::operation::delete_document::builders::DeleteDocumentFluentBuilder::document_version) / [`set_document_version(Option<String>)`](crate::operation::delete_document::builders::DeleteDocumentFluentBuilder::set_document_version):<br>required: **false**<br><p>The version of the document that you want to delete. If not provided, all versions of the document are deleted.</p><br>
    ///   - [`version_name(impl Into<String>)`](crate::operation::delete_document::builders::DeleteDocumentFluentBuilder::version_name) / [`set_version_name(Option<String>)`](crate::operation::delete_document::builders::DeleteDocumentFluentBuilder::set_version_name):<br>required: **false**<br><p>The version name of the document that you want to delete. If not provided, all versions of the document are deleted.</p><br>
    ///   - [`force(bool)`](crate::operation::delete_document::builders::DeleteDocumentFluentBuilder::force) / [`set_force(Option<bool>)`](crate::operation::delete_document::builders::DeleteDocumentFluentBuilder::set_force):<br>required: **false**<br><p>Some SSM document types require that you specify a <code>Force</code> flag before you can delete the document. For example, you must specify a <code>Force</code> flag to delete a document of type <code>ApplicationConfigurationSchema</code>. You can restrict access to the <code>Force</code> flag in an Identity and Access Management (IAM) policy.</p><br>
    /// - On success, responds with [`DeleteDocumentOutput`](crate::operation::delete_document::DeleteDocumentOutput)
    /// - On failure, responds with [`SdkError<DeleteDocumentError>`](crate::operation::delete_document::DeleteDocumentError)
    pub fn delete_document(&self) -> crate::operation::delete_document::builders::DeleteDocumentFluentBuilder {
        crate::operation::delete_document::builders::DeleteDocumentFluentBuilder::new(self.handle.clone())
    }
}
