// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`SendCommand`](crate::client::fluent_builders::SendCommand) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`instance_ids(Vec<String>)`](crate::client::fluent_builders::SendCommand::instance_ids) / [`set_instance_ids(Option<Vec<String>>)`](crate::client::fluent_builders::SendCommand::set_instance_ids): <p>The IDs of the managed nodes where the command should run. Specifying managed node IDs is most useful when you are targeting a limited number of managed nodes, though you can specify up to 50 IDs.</p>  <p>To target a larger number of managed nodes, or if you prefer not to list individual node IDs, we recommend using the <code>Targets</code> option instead. Using <code>Targets</code>, which accepts tag key-value pairs to identify the managed nodes to send commands to, you can a send command to tens, hundreds, or thousands of nodes at once.</p>  <p>For more information about how to use targets, see <a href="https://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html">Using targets and rate controls to send commands to a fleet</a> in the <i>Amazon Web Services Systems Manager User Guide</i>.</p>
    ///   - [`targets(Vec<Target>)`](crate::client::fluent_builders::SendCommand::targets) / [`set_targets(Option<Vec<Target>>)`](crate::client::fluent_builders::SendCommand::set_targets): <p>An array of search criteria that targets managed nodes using a <code>Key,Value</code> combination that you specify. Specifying targets is most useful when you want to send a command to a large number of managed nodes at once. Using <code>Targets</code>, which accepts tag key-value pairs to identify managed nodes, you can send a command to tens, hundreds, or thousands of nodes at once.</p>  <p>To send a command to a smaller number of managed nodes, you can use the <code>InstanceIds</code> option instead.</p>  <p>For more information about how to use targets, see <a href="https://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html">Sending commands to a fleet</a> in the <i>Amazon Web Services Systems Manager User Guide</i>.</p>
    ///   - [`document_name(impl Into<String>)`](crate::client::fluent_builders::SendCommand::document_name) / [`set_document_name(Option<String>)`](crate::client::fluent_builders::SendCommand::set_document_name): <p>The name of the Amazon Web Services Systems Manager document (SSM document) to run. This can be a public document or a custom document. To run a shared document belonging to another account, specify the document Amazon Resource Name (ARN). For more information about how to use shared documents, see <a href="https://docs.aws.amazon.com/systems-manager/latest/userguide/ssm-using-shared.html">Using shared SSM documents</a> in the <i>Amazon Web Services Systems Manager User Guide</i>.</p> <note>   <p>If you specify a document name or ARN that hasn't been shared with your account, you receive an <code>InvalidDocument</code> error. </p>  </note>
    ///   - [`document_version(impl Into<String>)`](crate::client::fluent_builders::SendCommand::document_version) / [`set_document_version(Option<String>)`](crate::client::fluent_builders::SendCommand::set_document_version): <p>The SSM document version to use in the request. You can specify $DEFAULT, $LATEST, or a specific version number. If you run commands by using the Command Line Interface (Amazon Web Services CLI), then you must escape the first two options by using a backslash. If you specify a version number, then you don't need to use the backslash. For example:</p>  <p>--document-version "\$DEFAULT"</p>  <p>--document-version "\$LATEST"</p>  <p>--document-version "3"</p>
    ///   - [`document_hash(impl Into<String>)`](crate::client::fluent_builders::SendCommand::document_hash) / [`set_document_hash(Option<String>)`](crate::client::fluent_builders::SendCommand::set_document_hash): <p>The Sha256 or Sha1 hash created by the system when the document was created. </p> <note>   <p>Sha1 hashes have been deprecated.</p>  </note>
    ///   - [`document_hash_type(DocumentHashType)`](crate::client::fluent_builders::SendCommand::document_hash_type) / [`set_document_hash_type(Option<DocumentHashType>)`](crate::client::fluent_builders::SendCommand::set_document_hash_type): <p>Sha256 or Sha1.</p> <note>   <p>Sha1 hashes have been deprecated.</p>  </note>
    ///   - [`timeout_seconds(i32)`](crate::client::fluent_builders::SendCommand::timeout_seconds) / [`set_timeout_seconds(Option<i32>)`](crate::client::fluent_builders::SendCommand::set_timeout_seconds): <p>If this time is reached and the command hasn't already started running, it won't run.</p>
    ///   - [`comment(impl Into<String>)`](crate::client::fluent_builders::SendCommand::comment) / [`set_comment(Option<String>)`](crate::client::fluent_builders::SendCommand::set_comment): <p>User-specified information about the command, such as a brief description of what the command should do.</p>
    ///   - [`parameters(HashMap<String, Vec<String>>)`](crate::client::fluent_builders::SendCommand::parameters) / [`set_parameters(Option<HashMap<String, Vec<String>>>)`](crate::client::fluent_builders::SendCommand::set_parameters): <p>The required and optional parameters specified in the document being run.</p>
    ///   - [`output_s3_region(impl Into<String>)`](crate::client::fluent_builders::SendCommand::output_s3_region) / [`set_output_s3_region(Option<String>)`](crate::client::fluent_builders::SendCommand::set_output_s3_region): <p>(Deprecated) You can no longer specify this parameter. The system ignores it. Instead, Systems Manager automatically determines the Amazon Web Services Region of the S3 bucket.</p>
    ///   - [`output_s3_bucket_name(impl Into<String>)`](crate::client::fluent_builders::SendCommand::output_s3_bucket_name) / [`set_output_s3_bucket_name(Option<String>)`](crate::client::fluent_builders::SendCommand::set_output_s3_bucket_name): <p>The name of the S3 bucket where command execution responses should be stored.</p>
    ///   - [`output_s3_key_prefix(impl Into<String>)`](crate::client::fluent_builders::SendCommand::output_s3_key_prefix) / [`set_output_s3_key_prefix(Option<String>)`](crate::client::fluent_builders::SendCommand::set_output_s3_key_prefix): <p>The directory structure within the S3 bucket where the responses should be stored.</p>
    ///   - [`max_concurrency(impl Into<String>)`](crate::client::fluent_builders::SendCommand::max_concurrency) / [`set_max_concurrency(Option<String>)`](crate::client::fluent_builders::SendCommand::set_max_concurrency): <p>(Optional) The maximum number of managed nodes that are allowed to run the command at the same time. You can specify a number such as 10 or a percentage such as 10%. The default value is <code>50</code>. For more information about how to use <code>MaxConcurrency</code>, see <a href="https://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-velocity">Using concurrency controls</a> in the <i>Amazon Web Services Systems Manager User Guide</i>.</p>
    ///   - [`max_errors(impl Into<String>)`](crate::client::fluent_builders::SendCommand::max_errors) / [`set_max_errors(Option<String>)`](crate::client::fluent_builders::SendCommand::set_max_errors): <p>The maximum number of errors allowed without the command failing. When the command fails one more time beyond the value of <code>MaxErrors</code>, the systems stops sending the command to additional targets. You can specify a number like 10 or a percentage like 10%. The default value is <code>0</code>. For more information about how to use <code>MaxErrors</code>, see <a href="https://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-maxerrors">Using error controls</a> in the <i>Amazon Web Services Systems Manager User Guide</i>.</p>
    ///   - [`service_role_arn(impl Into<String>)`](crate::client::fluent_builders::SendCommand::service_role_arn) / [`set_service_role_arn(Option<String>)`](crate::client::fluent_builders::SendCommand::set_service_role_arn): <p>The ARN of the Identity and Access Management (IAM) service role to use to publish Amazon Simple Notification Service (Amazon SNS) notifications for Run Command commands.</p>  <p>This role must provide the <code>sns:Publish</code> permission for your notification topic. For information about creating and using this service role, see <a href="https://docs.aws.amazon.com/systems-manager/latest/userguide/monitoring-sns-notifications.html">Monitoring Systems Manager status changes using Amazon SNS notifications</a> in the <i>Amazon Web Services Systems Manager User Guide</i>.</p>
    ///   - [`notification_config(NotificationConfig)`](crate::client::fluent_builders::SendCommand::notification_config) / [`set_notification_config(Option<NotificationConfig>)`](crate::client::fluent_builders::SendCommand::set_notification_config): <p>Configurations for sending notifications.</p>
    ///   - [`cloud_watch_output_config(CloudWatchOutputConfig)`](crate::client::fluent_builders::SendCommand::cloud_watch_output_config) / [`set_cloud_watch_output_config(Option<CloudWatchOutputConfig>)`](crate::client::fluent_builders::SendCommand::set_cloud_watch_output_config): <p>Enables Amazon Web Services Systems Manager to send Run Command output to Amazon CloudWatch Logs. Run Command is a capability of Amazon Web Services Systems Manager.</p>
    ///   - [`alarm_configuration(AlarmConfiguration)`](crate::client::fluent_builders::SendCommand::alarm_configuration) / [`set_alarm_configuration(Option<AlarmConfiguration>)`](crate::client::fluent_builders::SendCommand::set_alarm_configuration): <p>The CloudWatch alarm you want to apply to your command.</p>
    /// - On success, responds with [`SendCommandOutput`](crate::output::SendCommandOutput) with field(s):
    ///   - [`command(Option<Command>)`](crate::output::SendCommandOutput::command): <p>The request as it was received by Systems Manager. Also provides the command ID which can be used future references to this request.</p>
    /// - On failure, responds with [`SdkError<SendCommandError>`](crate::error::SendCommandError)
    pub fn send_command(&self) -> crate::client::fluent_builders::SendCommand {
        crate::client::fluent_builders::SendCommand::new(self.handle.clone())
    }
}
