// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`StartChangeRequestExecution`](crate::operation::start_change_request_execution::builders::StartChangeRequestExecutionFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`scheduled_time(DateTime)`](crate::operation::start_change_request_execution::builders::StartChangeRequestExecutionFluentBuilder::scheduled_time) / [`set_scheduled_time(Option<DateTime>)`](crate::operation::start_change_request_execution::builders::StartChangeRequestExecutionFluentBuilder::set_scheduled_time): <p>The date and time specified in the change request to run the Automation runbooks.</p> <note>   <p>The Automation runbooks specified for the runbook workflow can't run until all required approvals for the change request have been received.</p>  </note>
    ///   - [`document_name(impl Into<String>)`](crate::operation::start_change_request_execution::builders::StartChangeRequestExecutionFluentBuilder::document_name) / [`set_document_name(Option<String>)`](crate::operation::start_change_request_execution::builders::StartChangeRequestExecutionFluentBuilder::set_document_name): <p>The name of the change template document to run during the runbook workflow.</p>
    ///   - [`document_version(impl Into<String>)`](crate::operation::start_change_request_execution::builders::StartChangeRequestExecutionFluentBuilder::document_version) / [`set_document_version(Option<String>)`](crate::operation::start_change_request_execution::builders::StartChangeRequestExecutionFluentBuilder::set_document_version): <p>The version of the change template document to run during the runbook workflow.</p>
    ///   - [`parameters(HashMap<String, Vec<String>>)`](crate::operation::start_change_request_execution::builders::StartChangeRequestExecutionFluentBuilder::parameters) / [`set_parameters(Option<HashMap<String, Vec<String>>>)`](crate::operation::start_change_request_execution::builders::StartChangeRequestExecutionFluentBuilder::set_parameters): <p>A key-value map of parameters that match the declared parameters in the change template document.</p>
    ///   - [`change_request_name(impl Into<String>)`](crate::operation::start_change_request_execution::builders::StartChangeRequestExecutionFluentBuilder::change_request_name) / [`set_change_request_name(Option<String>)`](crate::operation::start_change_request_execution::builders::StartChangeRequestExecutionFluentBuilder::set_change_request_name): <p>The name of the change request associated with the runbook workflow to be run.</p>
    ///   - [`client_token(impl Into<String>)`](crate::operation::start_change_request_execution::builders::StartChangeRequestExecutionFluentBuilder::client_token) / [`set_client_token(Option<String>)`](crate::operation::start_change_request_execution::builders::StartChangeRequestExecutionFluentBuilder::set_client_token): <p>The user-provided idempotency token. The token must be unique, is case insensitive, enforces the UUID format, and can't be reused.</p>
    ///   - [`auto_approve(bool)`](crate::operation::start_change_request_execution::builders::StartChangeRequestExecutionFluentBuilder::auto_approve) / [`set_auto_approve(bool)`](crate::operation::start_change_request_execution::builders::StartChangeRequestExecutionFluentBuilder::set_auto_approve): <p>Indicates whether the change request can be approved automatically without the need for manual approvals.</p>  <p>If <code>AutoApprovable</code> is enabled in a change template, then setting <code>AutoApprove</code> to <code>true</code> in <code>StartChangeRequestExecution</code> creates a change request that bypasses approver review.</p> <note>   <p>Change Calendar restrictions are not bypassed in this scenario. If the state of an associated calendar is <code>CLOSED</code>, change freeze approvers must still grant permission for this change request to run. If they don't, the change won't be processed until the calendar state is again <code>OPEN</code>. </p>  </note>
    ///   - [`runbooks(Vec<Runbook>)`](crate::operation::start_change_request_execution::builders::StartChangeRequestExecutionFluentBuilder::runbooks) / [`set_runbooks(Option<Vec<Runbook>>)`](crate::operation::start_change_request_execution::builders::StartChangeRequestExecutionFluentBuilder::set_runbooks): <p>Information about the Automation runbooks that are run during the runbook workflow.</p> <note>   <p>The Automation runbooks specified for the runbook workflow can't run until all required approvals for the change request have been received.</p>  </note>
    ///   - [`tags(Vec<Tag>)`](crate::operation::start_change_request_execution::builders::StartChangeRequestExecutionFluentBuilder::tags) / [`set_tags(Option<Vec<Tag>>)`](crate::operation::start_change_request_execution::builders::StartChangeRequestExecutionFluentBuilder::set_tags): <p>Optional metadata that you assign to a resource. You can specify a maximum of five tags for a change request. Tags enable you to categorize a resource in different ways, such as by purpose, owner, or environment. For example, you might want to tag a change request to identify an environment or target Amazon Web Services Region. In this case, you could specify the following key-value pairs:</p>  <ul>   <li> <p> <code>Key=Environment,Value=Production</code> </p> </li>   <li> <p> <code>Key=Region,Value=us-east-2</code> </p> </li>  </ul>
    ///   - [`scheduled_end_time(DateTime)`](crate::operation::start_change_request_execution::builders::StartChangeRequestExecutionFluentBuilder::scheduled_end_time) / [`set_scheduled_end_time(Option<DateTime>)`](crate::operation::start_change_request_execution::builders::StartChangeRequestExecutionFluentBuilder::set_scheduled_end_time): <p>The time that the requester expects the runbook workflow related to the change request to complete. The time is an estimate only that the requester provides for reviewers.</p>
    ///   - [`change_details(impl Into<String>)`](crate::operation::start_change_request_execution::builders::StartChangeRequestExecutionFluentBuilder::change_details) / [`set_change_details(Option<String>)`](crate::operation::start_change_request_execution::builders::StartChangeRequestExecutionFluentBuilder::set_change_details): <p>User-provided details about the change. If no details are provided, content specified in the <b>Template information</b> section of the associated change template is added.</p>
    /// - On success, responds with [`StartChangeRequestExecutionOutput`](crate::operation::start_change_request_execution::StartChangeRequestExecutionOutput) with field(s):
    ///   - [`automation_execution_id(Option<String>)`](crate::operation::start_change_request_execution::StartChangeRequestExecutionOutput::automation_execution_id): <p>The unique ID of a runbook workflow operation. (A runbook workflow is a type of Automation operation.) </p>
    /// - On failure, responds with [`SdkError<StartChangeRequestExecutionError>`](crate::operation::start_change_request_execution::StartChangeRequestExecutionError)
    pub fn start_change_request_execution(&self) -> crate::operation::start_change_request_execution::builders::StartChangeRequestExecutionFluentBuilder{
        crate::operation::start_change_request_execution::builders::StartChangeRequestExecutionFluentBuilder::new(self.handle.clone())
    }
}
