// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetCalendarState`](crate::operation::get_calendar_state::builders::GetCalendarStateFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`calendar_names(Vec<String>)`](crate::operation::get_calendar_state::builders::GetCalendarStateFluentBuilder::calendar_names) / [`set_calendar_names(Option<Vec<String>>)`](crate::operation::get_calendar_state::builders::GetCalendarStateFluentBuilder::set_calendar_names): <p>The names or Amazon Resource Names (ARNs) of the Systems Manager documents (SSM documents) that represent the calendar entries for which you want to get the state.</p>
    ///   - [`at_time(impl Into<String>)`](crate::operation::get_calendar_state::builders::GetCalendarStateFluentBuilder::at_time) / [`set_at_time(Option<String>)`](crate::operation::get_calendar_state::builders::GetCalendarStateFluentBuilder::set_at_time): <p>(Optional) The specific time for which you want to get calendar state information, in <a href="https://en.wikipedia.org/wiki/ISO_8601">ISO 8601</a> format. If you don't specify a value or <code>AtTime</code>, the current time is used.</p>
    /// - On success, responds with [`GetCalendarStateOutput`](crate::operation::get_calendar_state::GetCalendarStateOutput) with field(s):
    ///   - [`state(Option<CalendarState>)`](crate::operation::get_calendar_state::GetCalendarStateOutput::state): <p>The state of the calendar. An <code>OPEN</code> calendar indicates that actions are allowed to proceed, and a <code>CLOSED</code> calendar indicates that actions aren't allowed to proceed.</p>
    ///   - [`at_time(Option<String>)`](crate::operation::get_calendar_state::GetCalendarStateOutput::at_time): <p>The time, as an <a href="https://en.wikipedia.org/wiki/ISO_8601">ISO 8601</a> string, that you specified in your command. If you don't specify a time, <code>GetCalendarState</code> uses the current time.</p>
    ///   - [`next_transition_time(Option<String>)`](crate::operation::get_calendar_state::GetCalendarStateOutput::next_transition_time): <p>The time, as an <a href="https://en.wikipedia.org/wiki/ISO_8601">ISO 8601</a> string, that the calendar state will change. If the current calendar state is <code>OPEN</code>, <code>NextTransitionTime</code> indicates when the calendar state changes to <code>CLOSED</code>, and vice-versa.</p>
    /// - On failure, responds with [`SdkError<GetCalendarStateError>`](crate::operation::get_calendar_state::GetCalendarStateError)
    pub fn get_calendar_state(
        &self,
    ) -> crate::operation::get_calendar_state::builders::GetCalendarStateFluentBuilder {
        crate::operation::get_calendar_state::builders::GetCalendarStateFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
