// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeInstancePatches`](crate::operation::describe_instance_patches::builders::DescribeInstancePatchesFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::describe_instance_patches::builders::DescribeInstancePatchesFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`instance_id(impl Into<String>)`](crate::operation::describe_instance_patches::builders::DescribeInstancePatchesFluentBuilder::instance_id) / [`set_instance_id(Option<String>)`](crate::operation::describe_instance_patches::builders::DescribeInstancePatchesFluentBuilder::set_instance_id):<br>required: **true**<br><p>The ID of the managed node whose patch state information should be retrieved.</p><br>
    ///   - [`filters(PatchOrchestratorFilter)`](crate::operation::describe_instance_patches::builders::DescribeInstancePatchesFluentBuilder::filters) / [`set_filters(Option<Vec::<PatchOrchestratorFilter>>)`](crate::operation::describe_instance_patches::builders::DescribeInstancePatchesFluentBuilder::set_filters):<br>required: **false**<br><p>Each element in the array is a structure containing a key-value pair.</p>  <p>Supported keys for <code>DescribeInstancePatches</code>include the following:</p>  <ul>   <li> <p> <b> <code>Classification</code> </b> </p> <p>Sample values: <code>Security</code> | <code>SecurityUpdates</code> </p> </li>   <li> <p> <b> <code>KBId</code> </b> </p> <p>Sample values: <code>KB4480056</code> | <code>java-1.7.0-openjdk.x86_64</code> </p> </li>   <li> <p> <b> <code>Severity</code> </b> </p> <p>Sample values: <code>Important</code> | <code>Medium</code> | <code>Low</code> </p> </li>   <li> <p> <b> <code>State</code> </b> </p> <p>Sample values: <code>Installed</code> | <code>InstalledOther</code> | <code>InstalledPendingReboot</code> </p> </li>  </ul><br>
    ///   - [`next_token(impl Into<String>)`](crate::operation::describe_instance_patches::builders::DescribeInstancePatchesFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::describe_instance_patches::builders::DescribeInstancePatchesFluentBuilder::set_next_token):<br>required: **false**<br><p>The token for the next set of items to return. (You received this token from a previous call.)</p><br>
    ///   - [`max_results(i32)`](crate::operation::describe_instance_patches::builders::DescribeInstancePatchesFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::describe_instance_patches::builders::DescribeInstancePatchesFluentBuilder::set_max_results):<br>required: **false**<br><p>The maximum number of patches to return (per page).</p><br>
    /// - On success, responds with [`DescribeInstancePatchesOutput`](crate::operation::describe_instance_patches::DescribeInstancePatchesOutput) with field(s):
    ///   - [`patches(Option<Vec::<PatchComplianceData>>)`](crate::operation::describe_instance_patches::DescribeInstancePatchesOutput::patches): <p>Each entry in the array is a structure containing:</p>  <ul>   <li> <p>Title (string)</p> </li>   <li> <p>KBId (string)</p> </li>   <li> <p>Classification (string)</p> </li>   <li> <p>Severity (string)</p> </li>   <li> <p>State (string, such as "INSTALLED" or "FAILED")</p> </li>   <li> <p>InstalledTime (DateTime)</p> </li>   <li> <p>InstalledBy (string)</p> </li>  </ul>
    ///   - [`next_token(Option<String>)`](crate::operation::describe_instance_patches::DescribeInstancePatchesOutput::next_token): <p>The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.</p>
    /// - On failure, responds with [`SdkError<DescribeInstancePatchesError>`](crate::operation::describe_instance_patches::DescribeInstancePatchesError)
    pub fn describe_instance_patches(&self) -> crate::operation::describe_instance_patches::builders::DescribeInstancePatchesFluentBuilder {
        crate::operation::describe_instance_patches::builders::DescribeInstancePatchesFluentBuilder::new(self.handle.clone())
    }
}
