// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetPatchBaselineForPatchGroup`](crate::client::fluent_builders::GetPatchBaselineForPatchGroup) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`patch_group(impl Into<String>)`](crate::client::fluent_builders::GetPatchBaselineForPatchGroup::patch_group) / [`set_patch_group(Option<String>)`](crate::client::fluent_builders::GetPatchBaselineForPatchGroup::set_patch_group): <p>The name of the patch group whose patch baseline should be retrieved.</p>
    ///   - [`operating_system(OperatingSystem)`](crate::client::fluent_builders::GetPatchBaselineForPatchGroup::operating_system) / [`set_operating_system(Option<OperatingSystem>)`](crate::client::fluent_builders::GetPatchBaselineForPatchGroup::set_operating_system): <p>Returns the operating system rule specified for patch groups using the patch baseline.</p>
    /// - On success, responds with [`GetPatchBaselineForPatchGroupOutput`](crate::output::GetPatchBaselineForPatchGroupOutput) with field(s):
    ///   - [`baseline_id(Option<String>)`](crate::output::GetPatchBaselineForPatchGroupOutput::baseline_id): <p>The ID of the patch baseline that should be used for the patch group.</p>
    ///   - [`patch_group(Option<String>)`](crate::output::GetPatchBaselineForPatchGroupOutput::patch_group): <p>The name of the patch group.</p>
    ///   - [`operating_system(Option<OperatingSystem>)`](crate::output::GetPatchBaselineForPatchGroupOutput::operating_system): <p>The operating system rule specified for patch groups using the patch baseline.</p>
    /// - On failure, responds with [`SdkError<GetPatchBaselineForPatchGroupError>`](crate::error::GetPatchBaselineForPatchGroupError)
    pub fn get_patch_baseline_for_patch_group(
        &self,
    ) -> crate::client::fluent_builders::GetPatchBaselineForPatchGroup {
        crate::client::fluent_builders::GetPatchBaselineForPatchGroup::new(self.handle.clone())
    }
}
