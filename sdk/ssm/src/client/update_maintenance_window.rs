// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateMaintenanceWindow`](crate::operation::update_maintenance_window::builders::UpdateMaintenanceWindowFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`window_id(impl Into<String>)`](crate::operation::update_maintenance_window::builders::UpdateMaintenanceWindowFluentBuilder::window_id) / [`set_window_id(Option<String>)`](crate::operation::update_maintenance_window::builders::UpdateMaintenanceWindowFluentBuilder::set_window_id):<br>required: **true**<br><p>The ID of the maintenance window to update.</p><br>
    ///   - [`name(impl Into<String>)`](crate::operation::update_maintenance_window::builders::UpdateMaintenanceWindowFluentBuilder::name) / [`set_name(Option<String>)`](crate::operation::update_maintenance_window::builders::UpdateMaintenanceWindowFluentBuilder::set_name):<br>required: **false**<br><p>The name of the maintenance window.</p><br>
    ///   - [`description(impl Into<String>)`](crate::operation::update_maintenance_window::builders::UpdateMaintenanceWindowFluentBuilder::description) / [`set_description(Option<String>)`](crate::operation::update_maintenance_window::builders::UpdateMaintenanceWindowFluentBuilder::set_description):<br>required: **false**<br><p>An optional description for the update request.</p><br>
    ///   - [`start_date(impl Into<String>)`](crate::operation::update_maintenance_window::builders::UpdateMaintenanceWindowFluentBuilder::start_date) / [`set_start_date(Option<String>)`](crate::operation::update_maintenance_window::builders::UpdateMaintenanceWindowFluentBuilder::set_start_date):<br>required: **false**<br><p>The date and time, in ISO-8601 Extended format, for when you want the maintenance window to become active. <code>StartDate</code> allows you to delay activation of the maintenance window until the specified future date.</p><br>
    ///   - [`end_date(impl Into<String>)`](crate::operation::update_maintenance_window::builders::UpdateMaintenanceWindowFluentBuilder::end_date) / [`set_end_date(Option<String>)`](crate::operation::update_maintenance_window::builders::UpdateMaintenanceWindowFluentBuilder::set_end_date):<br>required: **false**<br><p>The date and time, in ISO-8601 Extended format, for when you want the maintenance window to become inactive. <code>EndDate</code> allows you to set a date and time in the future when the maintenance window will no longer run.</p><br>
    ///   - [`schedule(impl Into<String>)`](crate::operation::update_maintenance_window::builders::UpdateMaintenanceWindowFluentBuilder::schedule) / [`set_schedule(Option<String>)`](crate::operation::update_maintenance_window::builders::UpdateMaintenanceWindowFluentBuilder::set_schedule):<br>required: **false**<br><p>The schedule of the maintenance window in the form of a cron or rate expression.</p><br>
    ///   - [`schedule_timezone(impl Into<String>)`](crate::operation::update_maintenance_window::builders::UpdateMaintenanceWindowFluentBuilder::schedule_timezone) / [`set_schedule_timezone(Option<String>)`](crate::operation::update_maintenance_window::builders::UpdateMaintenanceWindowFluentBuilder::set_schedule_timezone):<br>required: **false**<br><p>The time zone that the scheduled maintenance window executions are based on, in Internet Assigned Numbers Authority (IANA) format. For example: "America/Los_Angeles", "UTC", or "Asia/Seoul". For more information, see the <a href="https://www.iana.org/time-zones">Time Zone Database</a> on the IANA website.</p><br>
    ///   - [`schedule_offset(i32)`](crate::operation::update_maintenance_window::builders::UpdateMaintenanceWindowFluentBuilder::schedule_offset) / [`set_schedule_offset(Option<i32>)`](crate::operation::update_maintenance_window::builders::UpdateMaintenanceWindowFluentBuilder::set_schedule_offset):<br>required: **false**<br><p>The number of days to wait after the date and time specified by a cron expression before running the maintenance window.</p>  <p>For example, the following cron expression schedules a maintenance window to run the third Tuesday of every month at 11:30 PM.</p>  <p> <code>cron(30 23 ? * TUE#3 *)</code> </p>  <p>If the schedule offset is <code>2</code>, the maintenance window won't run until two days later.</p><br>
    ///   - [`duration(i32)`](crate::operation::update_maintenance_window::builders::UpdateMaintenanceWindowFluentBuilder::duration) / [`set_duration(Option<i32>)`](crate::operation::update_maintenance_window::builders::UpdateMaintenanceWindowFluentBuilder::set_duration):<br>required: **false**<br><p>The duration of the maintenance window in hours.</p><br>
    ///   - [`cutoff(i32)`](crate::operation::update_maintenance_window::builders::UpdateMaintenanceWindowFluentBuilder::cutoff) / [`set_cutoff(Option<i32>)`](crate::operation::update_maintenance_window::builders::UpdateMaintenanceWindowFluentBuilder::set_cutoff):<br>required: **false**<br><p>The number of hours before the end of the maintenance window that Amazon Web Services Systems Manager stops scheduling new tasks for execution.</p><br>
    ///   - [`allow_unassociated_targets(bool)`](crate::operation::update_maintenance_window::builders::UpdateMaintenanceWindowFluentBuilder::allow_unassociated_targets) / [`set_allow_unassociated_targets(Option<bool>)`](crate::operation::update_maintenance_window::builders::UpdateMaintenanceWindowFluentBuilder::set_allow_unassociated_targets):<br>required: **false**<br><p>Whether targets must be registered with the maintenance window before tasks can be defined for those targets.</p><br>
    ///   - [`enabled(bool)`](crate::operation::update_maintenance_window::builders::UpdateMaintenanceWindowFluentBuilder::enabled) / [`set_enabled(Option<bool>)`](crate::operation::update_maintenance_window::builders::UpdateMaintenanceWindowFluentBuilder::set_enabled):<br>required: **false**<br><p>Whether the maintenance window is enabled.</p><br>
    ///   - [`replace(bool)`](crate::operation::update_maintenance_window::builders::UpdateMaintenanceWindowFluentBuilder::replace) / [`set_replace(Option<bool>)`](crate::operation::update_maintenance_window::builders::UpdateMaintenanceWindowFluentBuilder::set_replace):<br>required: **false**<br><p>If <code>True</code>, then all fields that are required by the <code>CreateMaintenanceWindow</code> operation are also required for this API request. Optional fields that aren't specified are set to null. </p><br>
    /// - On success, responds with [`UpdateMaintenanceWindowOutput`](crate::operation::update_maintenance_window::UpdateMaintenanceWindowOutput) with field(s):
    ///   - [`window_id(Option<String>)`](crate::operation::update_maintenance_window::UpdateMaintenanceWindowOutput::window_id): <p>The ID of the created maintenance window.</p>
    ///   - [`name(Option<String>)`](crate::operation::update_maintenance_window::UpdateMaintenanceWindowOutput::name): <p>The name of the maintenance window.</p>
    ///   - [`description(Option<String>)`](crate::operation::update_maintenance_window::UpdateMaintenanceWindowOutput::description): <p>An optional description of the update.</p>
    ///   - [`start_date(Option<String>)`](crate::operation::update_maintenance_window::UpdateMaintenanceWindowOutput::start_date): <p>The date and time, in ISO-8601 Extended format, for when the maintenance window is scheduled to become active. The maintenance window won't run before this specified time.</p>
    ///   - [`end_date(Option<String>)`](crate::operation::update_maintenance_window::UpdateMaintenanceWindowOutput::end_date): <p>The date and time, in ISO-8601 Extended format, for when the maintenance window is scheduled to become inactive. The maintenance window won't run after this specified time.</p>
    ///   - [`schedule(Option<String>)`](crate::operation::update_maintenance_window::UpdateMaintenanceWindowOutput::schedule): <p>The schedule of the maintenance window in the form of a cron or rate expression.</p>
    ///   - [`schedule_timezone(Option<String>)`](crate::operation::update_maintenance_window::UpdateMaintenanceWindowOutput::schedule_timezone): <p>The time zone that the scheduled maintenance window executions are based on, in Internet Assigned Numbers Authority (IANA) format. For example: "America/Los_Angeles", "UTC", or "Asia/Seoul". For more information, see the <a href="https://www.iana.org/time-zones">Time Zone Database</a> on the IANA website.</p>
    ///   - [`schedule_offset(Option<i32>)`](crate::operation::update_maintenance_window::UpdateMaintenanceWindowOutput::schedule_offset): <p>The number of days to wait to run a maintenance window after the scheduled cron expression date and time.</p>
    ///   - [`duration(Option<i32>)`](crate::operation::update_maintenance_window::UpdateMaintenanceWindowOutput::duration): <p>The duration of the maintenance window in hours.</p>
    ///   - [`cutoff(i32)`](crate::operation::update_maintenance_window::UpdateMaintenanceWindowOutput::cutoff): <p>The number of hours before the end of the maintenance window that Amazon Web Services Systems Manager stops scheduling new tasks for execution.</p>
    ///   - [`allow_unassociated_targets(bool)`](crate::operation::update_maintenance_window::UpdateMaintenanceWindowOutput::allow_unassociated_targets): <p>Whether targets must be registered with the maintenance window before tasks can be defined for those targets.</p>
    ///   - [`enabled(bool)`](crate::operation::update_maintenance_window::UpdateMaintenanceWindowOutput::enabled): <p>Whether the maintenance window is enabled.</p>
    /// - On failure, responds with [`SdkError<UpdateMaintenanceWindowError>`](crate::operation::update_maintenance_window::UpdateMaintenanceWindowError)
    pub fn update_maintenance_window(&self) -> crate::operation::update_maintenance_window::builders::UpdateMaintenanceWindowFluentBuilder {
        crate::operation::update_maintenance_window::builders::UpdateMaintenanceWindowFluentBuilder::new(self.handle.clone())
    }
}
