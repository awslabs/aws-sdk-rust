// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeregisterPatchBaselineForPatchGroup`](crate::client::fluent_builders::DeregisterPatchBaselineForPatchGroup) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`baseline_id(impl Into<String>)`](crate::client::fluent_builders::DeregisterPatchBaselineForPatchGroup::baseline_id) / [`set_baseline_id(Option<String>)`](crate::client::fluent_builders::DeregisterPatchBaselineForPatchGroup::set_baseline_id): <p>The ID of the patch baseline to deregister the patch group from.</p>
    ///   - [`patch_group(impl Into<String>)`](crate::client::fluent_builders::DeregisterPatchBaselineForPatchGroup::patch_group) / [`set_patch_group(Option<String>)`](crate::client::fluent_builders::DeregisterPatchBaselineForPatchGroup::set_patch_group): <p>The name of the patch group that should be deregistered from the patch baseline.</p>
    /// - On success, responds with [`DeregisterPatchBaselineForPatchGroupOutput`](crate::output::DeregisterPatchBaselineForPatchGroupOutput) with field(s):
    ///   - [`baseline_id(Option<String>)`](crate::output::DeregisterPatchBaselineForPatchGroupOutput::baseline_id): <p>The ID of the patch baseline the patch group was deregistered from.</p>
    ///   - [`patch_group(Option<String>)`](crate::output::DeregisterPatchBaselineForPatchGroupOutput::patch_group): <p>The name of the patch group deregistered from the patch baseline.</p>
    /// - On failure, responds with [`SdkError<DeregisterPatchBaselineForPatchGroupError>`](crate::error::DeregisterPatchBaselineForPatchGroupError)
    pub fn deregister_patch_baseline_for_patch_group(
        &self,
    ) -> crate::client::fluent_builders::DeregisterPatchBaselineForPatchGroup {
        crate::client::fluent_builders::DeregisterPatchBaselineForPatchGroup::new(
            self.handle.clone(),
        )
    }
}
