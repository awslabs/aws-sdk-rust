// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`StartSession`](crate::operation::start_session::builders::StartSessionFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`target(impl Into<String>)`](crate::operation::start_session::builders::StartSessionFluentBuilder::target) / [`set_target(Option<String>)`](crate::operation::start_session::builders::StartSessionFluentBuilder::set_target): <p>The managed node to connect to for the session.</p>
    ///   - [`document_name(impl Into<String>)`](crate::operation::start_session::builders::StartSessionFluentBuilder::document_name) / [`set_document_name(Option<String>)`](crate::operation::start_session::builders::StartSessionFluentBuilder::set_document_name): <p>The name of the SSM document you want to use to define the type of session, input parameters, or preferences for the session. For example, <code>SSM-SessionManagerRunShell</code>. You can call the <code>GetDocument</code> API to verify the document exists before attempting to start a session. If no document name is provided, a shell to the managed node is launched by default. For more information, see <a href="https://docs.aws.amazon.com/systems-manager/latest/userguide/session-manager-working-with-sessions-start.html">Start a session</a> in the <i>Amazon Web Services Systems Manager User Guide</i>.</p>
    ///   - [`reason(impl Into<String>)`](crate::operation::start_session::builders::StartSessionFluentBuilder::reason) / [`set_reason(Option<String>)`](crate::operation::start_session::builders::StartSessionFluentBuilder::set_reason): <p>The reason for connecting to the instance. This value is included in the details for the Amazon CloudWatch Events event created when you start the session.</p>
    ///   - [`parameters(HashMap<String, Vec<String>>)`](crate::operation::start_session::builders::StartSessionFluentBuilder::parameters) / [`set_parameters(Option<HashMap<String, Vec<String>>>)`](crate::operation::start_session::builders::StartSessionFluentBuilder::set_parameters): <p>The values you want to specify for the parameters defined in the Session document.</p>
    /// - On success, responds with [`StartSessionOutput`](crate::operation::start_session::StartSessionOutput) with field(s):
    ///   - [`session_id(Option<String>)`](crate::operation::start_session::StartSessionOutput::session_id): <p>The ID of the session.</p>
    ///   - [`token_value(Option<String>)`](crate::operation::start_session::StartSessionOutput::token_value): <p>An encrypted token value containing session and caller information. This token is used to authenticate the connection to the managed node, and is valid only long enough to ensure the connection is successful. Never share your session's token.</p>
    ///   - [`stream_url(Option<String>)`](crate::operation::start_session::StartSessionOutput::stream_url): <p>A URL back to SSM Agent on the managed node that the Session Manager client uses to send commands and receive output from the node. Format: <code>wss://ssmmessages.<b>region</b>.amazonaws.com/v1/data-channel/<b>session-id</b>?stream=(input|output)</code> </p>  <p> <b>region</b> represents the Region identifier for an Amazon Web Services Region supported by Amazon Web Services Systems Manager, such as <code>us-east-2</code> for the US East (Ohio) Region. For a list of supported <b>region</b> values, see the <b>Region</b> column in <a href="https://docs.aws.amazon.com/general/latest/gr/ssm.html#ssm_region">Systems Manager service endpoints</a> in the <i>Amazon Web Services General Reference</i>.</p>  <p> <b>session-id</b> represents the ID of a Session Manager session, such as <code>1a2b3c4dEXAMPLE</code>.</p>
    /// - On failure, responds with [`SdkError<StartSessionError>`](crate::operation::start_session::StartSessionError)
    pub fn start_session(
        &self,
    ) -> crate::operation::start_session::builders::StartSessionFluentBuilder {
        crate::operation::start_session::builders::StartSessionFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
