// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ResetServiceSetting`](crate::client::fluent_builders::ResetServiceSetting) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`setting_id(impl Into<String>)`](crate::client::fluent_builders::ResetServiceSetting::setting_id) / [`set_setting_id(Option<String>)`](crate::client::fluent_builders::ResetServiceSetting::set_setting_id): <p>The Amazon Resource Name (ARN) of the service setting to reset. The setting ID can be one of the following.</p>  <ul>   <li> <p> <code>/ssm/automation/customer-script-log-destination</code> </p> </li>   <li> <p> <code>/ssm/automation/customer-script-log-group-name</code> </p> </li>   <li> <p> <code>/ssm/documents/console/public-sharing-permission</code> </p> </li>   <li> <p> <code>/ssm/managed-instance/activation-tier</code> </p> </li>   <li> <p> <code>/ssm/opsinsights/opscenter</code> </p> </li>   <li> <p> <code>/ssm/parameter-store/default-parameter-tier</code> </p> </li>   <li> <p> <code>/ssm/parameter-store/high-throughput-enabled</code> </p> </li>  </ul>
    /// - On success, responds with [`ResetServiceSettingOutput`](crate::output::ResetServiceSettingOutput) with field(s):
    ///   - [`service_setting(Option<ServiceSetting>)`](crate::output::ResetServiceSettingOutput::service_setting): <p>The current, effective service setting after calling the ResetServiceSetting API operation.</p>
    /// - On failure, responds with [`SdkError<ResetServiceSettingError>`](crate::error::ResetServiceSettingError)
    pub fn reset_service_setting(&self) -> crate::client::fluent_builders::ResetServiceSetting {
        crate::client::fluent_builders::ResetServiceSetting::new(self.handle.clone())
    }
}
