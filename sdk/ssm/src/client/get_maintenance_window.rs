// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetMaintenanceWindow`](crate::client::fluent_builders::GetMaintenanceWindow) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`window_id(impl Into<String>)`](crate::client::fluent_builders::GetMaintenanceWindow::window_id) / [`set_window_id(Option<String>)`](crate::client::fluent_builders::GetMaintenanceWindow::set_window_id): <p>The ID of the maintenance window for which you want to retrieve information.</p>
    /// - On success, responds with [`GetMaintenanceWindowOutput`](crate::output::GetMaintenanceWindowOutput) with field(s):
    ///   - [`window_id(Option<String>)`](crate::output::GetMaintenanceWindowOutput::window_id): <p>The ID of the created maintenance window.</p>
    ///   - [`name(Option<String>)`](crate::output::GetMaintenanceWindowOutput::name): <p>The name of the maintenance window.</p>
    ///   - [`description(Option<String>)`](crate::output::GetMaintenanceWindowOutput::description): <p>The description of the maintenance window.</p>
    ///   - [`start_date(Option<String>)`](crate::output::GetMaintenanceWindowOutput::start_date): <p>The date and time, in ISO-8601 Extended format, for when the maintenance window is scheduled to become active. The maintenance window won't run before this specified time.</p>
    ///   - [`end_date(Option<String>)`](crate::output::GetMaintenanceWindowOutput::end_date): <p>The date and time, in ISO-8601 Extended format, for when the maintenance window is scheduled to become inactive. The maintenance window won't run after this specified time.</p>
    ///   - [`schedule(Option<String>)`](crate::output::GetMaintenanceWindowOutput::schedule): <p>The schedule of the maintenance window in the form of a cron or rate expression.</p>
    ///   - [`schedule_timezone(Option<String>)`](crate::output::GetMaintenanceWindowOutput::schedule_timezone): <p>The time zone that the scheduled maintenance window executions are based on, in Internet Assigned Numbers Authority (IANA) format. For example: "America/Los_Angeles", "UTC", or "Asia/Seoul". For more information, see the <a href="https://www.iana.org/time-zones">Time Zone Database</a> on the IANA website.</p>
    ///   - [`schedule_offset(Option<i32>)`](crate::output::GetMaintenanceWindowOutput::schedule_offset): <p>The number of days to wait to run a maintenance window after the scheduled cron expression date and time.</p>
    ///   - [`next_execution_time(Option<String>)`](crate::output::GetMaintenanceWindowOutput::next_execution_time): <p>The next time the maintenance window will actually run, taking into account any specified times for the maintenance window to become active or inactive.</p>
    ///   - [`duration(i32)`](crate::output::GetMaintenanceWindowOutput::duration): <p>The duration of the maintenance window in hours.</p>
    ///   - [`cutoff(i32)`](crate::output::GetMaintenanceWindowOutput::cutoff): <p>The number of hours before the end of the maintenance window that Amazon Web Services Systems Manager stops scheduling new tasks for execution.</p>
    ///   - [`allow_unassociated_targets(bool)`](crate::output::GetMaintenanceWindowOutput::allow_unassociated_targets): <p>Whether targets must be registered with the maintenance window before tasks can be defined for those targets.</p>
    ///   - [`enabled(bool)`](crate::output::GetMaintenanceWindowOutput::enabled): <p>Indicates whether the maintenance window is enabled.</p>
    ///   - [`created_date(Option<DateTime>)`](crate::output::GetMaintenanceWindowOutput::created_date): <p>The date the maintenance window was created.</p>
    ///   - [`modified_date(Option<DateTime>)`](crate::output::GetMaintenanceWindowOutput::modified_date): <p>The date the maintenance window was last modified.</p>
    /// - On failure, responds with [`SdkError<GetMaintenanceWindowError>`](crate::error::GetMaintenanceWindowError)
    pub fn get_maintenance_window(&self) -> crate::client::fluent_builders::GetMaintenanceWindow {
        crate::client::fluent_builders::GetMaintenanceWindow::new(self.handle.clone())
    }
}
