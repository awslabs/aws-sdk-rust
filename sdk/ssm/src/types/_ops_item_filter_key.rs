// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// When writing a match expression against `OpsItemFilterKey`, it is important to ensure
/// your code is forward-compatible. That is, if a match arm handles a case for a
/// feature that is supported by the service but has not been represented as an enum
/// variant in a current version of SDK, your code should continue to work when you
/// upgrade SDK to a future version in which the enum does include a variant for that
/// feature.
///
/// Here is an example of how you can make a match expression forward-compatible:
///
/// ```text
/// # let opsitemfilterkey = unimplemented!();
/// match opsitemfilterkey {
///     OpsItemFilterKey::AccessRequestApproverArn => { /* ... */ },
///     OpsItemFilterKey::AccessRequestApproverId => { /* ... */ },
///     OpsItemFilterKey::AccessRequestIsReplica => { /* ... */ },
///     OpsItemFilterKey::AccessRequestRequesterArn => { /* ... */ },
///     OpsItemFilterKey::AccessRequestRequesterId => { /* ... */ },
///     OpsItemFilterKey::AccessRequestSourceAccountId => { /* ... */ },
///     OpsItemFilterKey::AccessRequestSourceOpsItemId => { /* ... */ },
///     OpsItemFilterKey::AccessRequestSourceRegion => { /* ... */ },
///     OpsItemFilterKey::AccessRequestTargetResourceId => { /* ... */ },
///     OpsItemFilterKey::AccountId => { /* ... */ },
///     OpsItemFilterKey::ActualEndTime => { /* ... */ },
///     OpsItemFilterKey::ActualStartTime => { /* ... */ },
///     OpsItemFilterKey::AutomationId => { /* ... */ },
///     OpsItemFilterKey::Category => { /* ... */ },
///     OpsItemFilterKey::ChangeRequestApproverArn => { /* ... */ },
///     OpsItemFilterKey::ChangeRequestApproverName => { /* ... */ },
///     OpsItemFilterKey::ChangeRequestRequesterArn => { /* ... */ },
///     OpsItemFilterKey::ChangeRequestRequesterName => { /* ... */ },
///     OpsItemFilterKey::ChangeRequestTargetsResourceGroup => { /* ... */ },
///     OpsItemFilterKey::ChangeRequestTemplate => { /* ... */ },
///     OpsItemFilterKey::CreatedBy => { /* ... */ },
///     OpsItemFilterKey::CreatedTime => { /* ... */ },
///     OpsItemFilterKey::InsightType => { /* ... */ },
///     OpsItemFilterKey::LastModifiedTime => { /* ... */ },
///     OpsItemFilterKey::OperationalData => { /* ... */ },
///     OpsItemFilterKey::OperationalDataKey => { /* ... */ },
///     OpsItemFilterKey::OperationalDataValue => { /* ... */ },
///     OpsItemFilterKey::OpsitemId => { /* ... */ },
///     OpsItemFilterKey::OpsitemType => { /* ... */ },
///     OpsItemFilterKey::PlannedEndTime => { /* ... */ },
///     OpsItemFilterKey::PlannedStartTime => { /* ... */ },
///     OpsItemFilterKey::Priority => { /* ... */ },
///     OpsItemFilterKey::ResourceId => { /* ... */ },
///     OpsItemFilterKey::Severity => { /* ... */ },
///     OpsItemFilterKey::Source => { /* ... */ },
///     OpsItemFilterKey::Status => { /* ... */ },
///     OpsItemFilterKey::Title => { /* ... */ },
///     other @ _ if other.as_str() == "NewFeature" => { /* handles a case for `NewFeature` */ },
///     _ => { /* ... */ },
/// }
/// ```
/// The above code demonstrates that when `opsitemfilterkey` represents
/// `NewFeature`, the execution path will lead to the second last match arm,
/// even though the enum does not contain a variant `OpsItemFilterKey::NewFeature`
/// in the current version of SDK. The reason is that the variable `other`,
/// created by the `@` operator, is bound to
/// `OpsItemFilterKey::Unknown(UnknownVariantValue("NewFeature".to_owned()))`
/// and calling `as_str` on it yields `"NewFeature"`.
/// This match expression is forward-compatible when executed with a newer
/// version of SDK where the variant `OpsItemFilterKey::NewFeature` is defined.
/// Specifically, when `opsitemfilterkey` represents `NewFeature`,
/// the execution path will hit the second last match arm as before by virtue of
/// calling `as_str` on `OpsItemFilterKey::NewFeature` also yielding `"NewFeature"`.
///
/// Explicitly matching on the `Unknown` variant should
/// be avoided for two reasons:
/// - The inner data `UnknownVariantValue` is opaque, and no further information can be extracted.
/// - It might inadvertently shadow other intended match arms.
///
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(
    ::std::clone::Clone, ::std::cmp::Eq, ::std::cmp::Ord, ::std::cmp::PartialEq, ::std::cmp::PartialOrd, ::std::fmt::Debug, ::std::hash::Hash,
)]
pub enum OpsItemFilterKey {
    #[allow(missing_docs)] // documentation missing in model
    AccessRequestApproverArn,
    #[allow(missing_docs)] // documentation missing in model
    AccessRequestApproverId,
    #[allow(missing_docs)] // documentation missing in model
    AccessRequestIsReplica,
    #[allow(missing_docs)] // documentation missing in model
    AccessRequestRequesterArn,
    #[allow(missing_docs)] // documentation missing in model
    AccessRequestRequesterId,
    #[allow(missing_docs)] // documentation missing in model
    AccessRequestSourceAccountId,
    #[allow(missing_docs)] // documentation missing in model
    AccessRequestSourceOpsItemId,
    #[allow(missing_docs)] // documentation missing in model
    AccessRequestSourceRegion,
    #[allow(missing_docs)] // documentation missing in model
    AccessRequestTargetResourceId,
    #[allow(missing_docs)] // documentation missing in model
    AccountId,
    #[allow(missing_docs)] // documentation missing in model
    ActualEndTime,
    #[allow(missing_docs)] // documentation missing in model
    ActualStartTime,
    #[allow(missing_docs)] // documentation missing in model
    AutomationId,
    #[allow(missing_docs)] // documentation missing in model
    Category,
    #[allow(missing_docs)] // documentation missing in model
    ChangeRequestApproverArn,
    #[allow(missing_docs)] // documentation missing in model
    ChangeRequestApproverName,
    #[allow(missing_docs)] // documentation missing in model
    ChangeRequestRequesterArn,
    #[allow(missing_docs)] // documentation missing in model
    ChangeRequestRequesterName,
    #[allow(missing_docs)] // documentation missing in model
    ChangeRequestTargetsResourceGroup,
    #[allow(missing_docs)] // documentation missing in model
    ChangeRequestTemplate,
    #[allow(missing_docs)] // documentation missing in model
    CreatedBy,
    #[allow(missing_docs)] // documentation missing in model
    CreatedTime,
    #[allow(missing_docs)] // documentation missing in model
    InsightType,
    #[allow(missing_docs)] // documentation missing in model
    LastModifiedTime,
    #[allow(missing_docs)] // documentation missing in model
    OperationalData,
    #[allow(missing_docs)] // documentation missing in model
    OperationalDataKey,
    #[allow(missing_docs)] // documentation missing in model
    OperationalDataValue,
    #[allow(missing_docs)] // documentation missing in model
    OpsitemId,
    #[allow(missing_docs)] // documentation missing in model
    OpsitemType,
    #[allow(missing_docs)] // documentation missing in model
    PlannedEndTime,
    #[allow(missing_docs)] // documentation missing in model
    PlannedStartTime,
    #[allow(missing_docs)] // documentation missing in model
    Priority,
    #[allow(missing_docs)] // documentation missing in model
    ResourceId,
    #[allow(missing_docs)] // documentation missing in model
    Severity,
    #[allow(missing_docs)] // documentation missing in model
    Source,
    #[allow(missing_docs)] // documentation missing in model
    Status,
    #[allow(missing_docs)] // documentation missing in model
    Title,
    /// `Unknown` contains new variants that have been added since this code was generated.
    #[deprecated(note = "Don't directly match on `Unknown`. See the docs on this enum for the correct way to handle unknown variants.")]
    Unknown(crate::primitives::sealed_enum_unknown::UnknownVariantValue),
}
impl ::std::convert::From<&str> for OpsItemFilterKey {
    fn from(s: &str) -> Self {
        match s {
            "AccessRequestByApproverArn" => OpsItemFilterKey::AccessRequestApproverArn,
            "AccessRequestByApproverId" => OpsItemFilterKey::AccessRequestApproverId,
            "AccessRequestByIsReplica" => OpsItemFilterKey::AccessRequestIsReplica,
            "AccessRequestByRequesterArn" => OpsItemFilterKey::AccessRequestRequesterArn,
            "AccessRequestByRequesterId" => OpsItemFilterKey::AccessRequestRequesterId,
            "AccessRequestBySourceAccountId" => OpsItemFilterKey::AccessRequestSourceAccountId,
            "AccessRequestBySourceOpsItemId" => OpsItemFilterKey::AccessRequestSourceOpsItemId,
            "AccessRequestBySourceRegion" => OpsItemFilterKey::AccessRequestSourceRegion,
            "AccessRequestByTargetResourceId" => OpsItemFilterKey::AccessRequestTargetResourceId,
            "AccountId" => OpsItemFilterKey::AccountId,
            "ActualEndTime" => OpsItemFilterKey::ActualEndTime,
            "ActualStartTime" => OpsItemFilterKey::ActualStartTime,
            "AutomationId" => OpsItemFilterKey::AutomationId,
            "Category" => OpsItemFilterKey::Category,
            "ChangeRequestByApproverArn" => OpsItemFilterKey::ChangeRequestApproverArn,
            "ChangeRequestByApproverName" => OpsItemFilterKey::ChangeRequestApproverName,
            "ChangeRequestByRequesterArn" => OpsItemFilterKey::ChangeRequestRequesterArn,
            "ChangeRequestByRequesterName" => OpsItemFilterKey::ChangeRequestRequesterName,
            "ChangeRequestByTargetsResourceGroup" => OpsItemFilterKey::ChangeRequestTargetsResourceGroup,
            "ChangeRequestByTemplate" => OpsItemFilterKey::ChangeRequestTemplate,
            "CreatedBy" => OpsItemFilterKey::CreatedBy,
            "CreatedTime" => OpsItemFilterKey::CreatedTime,
            "InsightByType" => OpsItemFilterKey::InsightType,
            "LastModifiedTime" => OpsItemFilterKey::LastModifiedTime,
            "OperationalData" => OpsItemFilterKey::OperationalData,
            "OperationalDataKey" => OpsItemFilterKey::OperationalDataKey,
            "OperationalDataValue" => OpsItemFilterKey::OperationalDataValue,
            "OpsItemId" => OpsItemFilterKey::OpsitemId,
            "OpsItemType" => OpsItemFilterKey::OpsitemType,
            "PlannedEndTime" => OpsItemFilterKey::PlannedEndTime,
            "PlannedStartTime" => OpsItemFilterKey::PlannedStartTime,
            "Priority" => OpsItemFilterKey::Priority,
            "ResourceId" => OpsItemFilterKey::ResourceId,
            "Severity" => OpsItemFilterKey::Severity,
            "Source" => OpsItemFilterKey::Source,
            "Status" => OpsItemFilterKey::Status,
            "Title" => OpsItemFilterKey::Title,
            other => OpsItemFilterKey::Unknown(crate::primitives::sealed_enum_unknown::UnknownVariantValue(other.to_owned())),
        }
    }
}
impl ::std::str::FromStr for OpsItemFilterKey {
    type Err = ::std::convert::Infallible;

    fn from_str(s: &str) -> ::std::result::Result<Self, <Self as ::std::str::FromStr>::Err> {
        ::std::result::Result::Ok(OpsItemFilterKey::from(s))
    }
}
impl OpsItemFilterKey {
    /// Returns the `&str` value of the enum member.
    pub fn as_str(&self) -> &str {
        match self {
            OpsItemFilterKey::AccessRequestApproverArn => "AccessRequestByApproverArn",
            OpsItemFilterKey::AccessRequestApproverId => "AccessRequestByApproverId",
            OpsItemFilterKey::AccessRequestIsReplica => "AccessRequestByIsReplica",
            OpsItemFilterKey::AccessRequestRequesterArn => "AccessRequestByRequesterArn",
            OpsItemFilterKey::AccessRequestRequesterId => "AccessRequestByRequesterId",
            OpsItemFilterKey::AccessRequestSourceAccountId => "AccessRequestBySourceAccountId",
            OpsItemFilterKey::AccessRequestSourceOpsItemId => "AccessRequestBySourceOpsItemId",
            OpsItemFilterKey::AccessRequestSourceRegion => "AccessRequestBySourceRegion",
            OpsItemFilterKey::AccessRequestTargetResourceId => "AccessRequestByTargetResourceId",
            OpsItemFilterKey::AccountId => "AccountId",
            OpsItemFilterKey::ActualEndTime => "ActualEndTime",
            OpsItemFilterKey::ActualStartTime => "ActualStartTime",
            OpsItemFilterKey::AutomationId => "AutomationId",
            OpsItemFilterKey::Category => "Category",
            OpsItemFilterKey::ChangeRequestApproverArn => "ChangeRequestByApproverArn",
            OpsItemFilterKey::ChangeRequestApproverName => "ChangeRequestByApproverName",
            OpsItemFilterKey::ChangeRequestRequesterArn => "ChangeRequestByRequesterArn",
            OpsItemFilterKey::ChangeRequestRequesterName => "ChangeRequestByRequesterName",
            OpsItemFilterKey::ChangeRequestTargetsResourceGroup => "ChangeRequestByTargetsResourceGroup",
            OpsItemFilterKey::ChangeRequestTemplate => "ChangeRequestByTemplate",
            OpsItemFilterKey::CreatedBy => "CreatedBy",
            OpsItemFilterKey::CreatedTime => "CreatedTime",
            OpsItemFilterKey::InsightType => "InsightByType",
            OpsItemFilterKey::LastModifiedTime => "LastModifiedTime",
            OpsItemFilterKey::OperationalData => "OperationalData",
            OpsItemFilterKey::OperationalDataKey => "OperationalDataKey",
            OpsItemFilterKey::OperationalDataValue => "OperationalDataValue",
            OpsItemFilterKey::OpsitemId => "OpsItemId",
            OpsItemFilterKey::OpsitemType => "OpsItemType",
            OpsItemFilterKey::PlannedEndTime => "PlannedEndTime",
            OpsItemFilterKey::PlannedStartTime => "PlannedStartTime",
            OpsItemFilterKey::Priority => "Priority",
            OpsItemFilterKey::ResourceId => "ResourceId",
            OpsItemFilterKey::Severity => "Severity",
            OpsItemFilterKey::Source => "Source",
            OpsItemFilterKey::Status => "Status",
            OpsItemFilterKey::Title => "Title",
            OpsItemFilterKey::Unknown(value) => value.as_str(),
        }
    }
    /// Returns all the `&str` representations of the enum members.
    pub const fn values() -> &'static [&'static str] {
        &[
            "AccessRequestByApproverArn",
            "AccessRequestByApproverId",
            "AccessRequestByIsReplica",
            "AccessRequestByRequesterArn",
            "AccessRequestByRequesterId",
            "AccessRequestBySourceAccountId",
            "AccessRequestBySourceOpsItemId",
            "AccessRequestBySourceRegion",
            "AccessRequestByTargetResourceId",
            "AccountId",
            "ActualEndTime",
            "ActualStartTime",
            "AutomationId",
            "Category",
            "ChangeRequestByApproverArn",
            "ChangeRequestByApproverName",
            "ChangeRequestByRequesterArn",
            "ChangeRequestByRequesterName",
            "ChangeRequestByTargetsResourceGroup",
            "ChangeRequestByTemplate",
            "CreatedBy",
            "CreatedTime",
            "InsightByType",
            "LastModifiedTime",
            "OperationalData",
            "OperationalDataKey",
            "OperationalDataValue",
            "OpsItemId",
            "OpsItemType",
            "PlannedEndTime",
            "PlannedStartTime",
            "Priority",
            "ResourceId",
            "Severity",
            "Source",
            "Status",
            "Title",
        ]
    }
}
impl ::std::convert::AsRef<str> for OpsItemFilterKey {
    fn as_ref(&self) -> &str {
        self.as_str()
    }
}
impl OpsItemFilterKey {
    /// Parses the enum value while disallowing unknown variants.
    ///
    /// Unknown variants will result in an error.
    pub fn try_parse(value: &str) -> ::std::result::Result<Self, crate::error::UnknownVariantError> {
        match Self::from(value) {
            #[allow(deprecated)]
            Self::Unknown(_) => ::std::result::Result::Err(crate::error::UnknownVariantError::new(value)),
            known => Ok(known),
        }
    }
}
impl ::std::fmt::Display for OpsItemFilterKey {
    fn fmt(&self, f: &mut ::std::fmt::Formatter) -> ::std::fmt::Result {
        match self {
            OpsItemFilterKey::AccessRequestApproverArn => write!(f, "AccessRequestByApproverArn"),
            OpsItemFilterKey::AccessRequestApproverId => write!(f, "AccessRequestByApproverId"),
            OpsItemFilterKey::AccessRequestIsReplica => write!(f, "AccessRequestByIsReplica"),
            OpsItemFilterKey::AccessRequestRequesterArn => write!(f, "AccessRequestByRequesterArn"),
            OpsItemFilterKey::AccessRequestRequesterId => write!(f, "AccessRequestByRequesterId"),
            OpsItemFilterKey::AccessRequestSourceAccountId => write!(f, "AccessRequestBySourceAccountId"),
            OpsItemFilterKey::AccessRequestSourceOpsItemId => write!(f, "AccessRequestBySourceOpsItemId"),
            OpsItemFilterKey::AccessRequestSourceRegion => write!(f, "AccessRequestBySourceRegion"),
            OpsItemFilterKey::AccessRequestTargetResourceId => write!(f, "AccessRequestByTargetResourceId"),
            OpsItemFilterKey::AccountId => write!(f, "AccountId"),
            OpsItemFilterKey::ActualEndTime => write!(f, "ActualEndTime"),
            OpsItemFilterKey::ActualStartTime => write!(f, "ActualStartTime"),
            OpsItemFilterKey::AutomationId => write!(f, "AutomationId"),
            OpsItemFilterKey::Category => write!(f, "Category"),
            OpsItemFilterKey::ChangeRequestApproverArn => write!(f, "ChangeRequestByApproverArn"),
            OpsItemFilterKey::ChangeRequestApproverName => write!(f, "ChangeRequestByApproverName"),
            OpsItemFilterKey::ChangeRequestRequesterArn => write!(f, "ChangeRequestByRequesterArn"),
            OpsItemFilterKey::ChangeRequestRequesterName => write!(f, "ChangeRequestByRequesterName"),
            OpsItemFilterKey::ChangeRequestTargetsResourceGroup => write!(f, "ChangeRequestByTargetsResourceGroup"),
            OpsItemFilterKey::ChangeRequestTemplate => write!(f, "ChangeRequestByTemplate"),
            OpsItemFilterKey::CreatedBy => write!(f, "CreatedBy"),
            OpsItemFilterKey::CreatedTime => write!(f, "CreatedTime"),
            OpsItemFilterKey::InsightType => write!(f, "InsightByType"),
            OpsItemFilterKey::LastModifiedTime => write!(f, "LastModifiedTime"),
            OpsItemFilterKey::OperationalData => write!(f, "OperationalData"),
            OpsItemFilterKey::OperationalDataKey => write!(f, "OperationalDataKey"),
            OpsItemFilterKey::OperationalDataValue => write!(f, "OperationalDataValue"),
            OpsItemFilterKey::OpsitemId => write!(f, "OpsItemId"),
            OpsItemFilterKey::OpsitemType => write!(f, "OpsItemType"),
            OpsItemFilterKey::PlannedEndTime => write!(f, "PlannedEndTime"),
            OpsItemFilterKey::PlannedStartTime => write!(f, "PlannedStartTime"),
            OpsItemFilterKey::Priority => write!(f, "Priority"),
            OpsItemFilterKey::ResourceId => write!(f, "ResourceId"),
            OpsItemFilterKey::Severity => write!(f, "Severity"),
            OpsItemFilterKey::Source => write!(f, "Source"),
            OpsItemFilterKey::Status => write!(f, "Status"),
            OpsItemFilterKey::Title => write!(f, "Title"),
            OpsItemFilterKey::Unknown(value) => write!(f, "{value}"),
        }
    }
}
