// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Configuration options for sending command output to Amazon CloudWatch Logs.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct CloudWatchOutputConfig {
    /// <p>The name of the CloudWatch Logs log group where you want to send command output. If you don't specify a group name, Amazon Web Services Systems Manager automatically creates a log group for you. The log group uses the following naming format:</p>
    /// <p> <code>aws/ssm/<i>SystemsManagerDocumentName</i> </code> </p>
    #[doc(hidden)]
    pub cloud_watch_log_group_name: std::option::Option<std::string::String>,
    /// <p>Enables Systems Manager to send command output to CloudWatch Logs.</p>
    #[doc(hidden)]
    pub cloud_watch_output_enabled: bool,
}
impl CloudWatchOutputConfig {
    /// <p>The name of the CloudWatch Logs log group where you want to send command output. If you don't specify a group name, Amazon Web Services Systems Manager automatically creates a log group for you. The log group uses the following naming format:</p>
    /// <p> <code>aws/ssm/<i>SystemsManagerDocumentName</i> </code> </p>
    pub fn cloud_watch_log_group_name(&self) -> std::option::Option<&str> {
        self.cloud_watch_log_group_name.as_deref()
    }
    /// <p>Enables Systems Manager to send command output to CloudWatch Logs.</p>
    pub fn cloud_watch_output_enabled(&self) -> bool {
        self.cloud_watch_output_enabled
    }
}
impl CloudWatchOutputConfig {
    /// Creates a new builder-style object to manufacture [`CloudWatchOutputConfig`](crate::types::CloudWatchOutputConfig).
    pub fn builder() -> crate::types::builders::CloudWatchOutputConfigBuilder {
        crate::types::builders::CloudWatchOutputConfigBuilder::default()
    }
}

/// A builder for [`CloudWatchOutputConfig`](crate::types::CloudWatchOutputConfig).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct CloudWatchOutputConfigBuilder {
    pub(crate) cloud_watch_log_group_name: std::option::Option<std::string::String>,
    pub(crate) cloud_watch_output_enabled: std::option::Option<bool>,
}
impl CloudWatchOutputConfigBuilder {
    /// <p>The name of the CloudWatch Logs log group where you want to send command output. If you don't specify a group name, Amazon Web Services Systems Manager automatically creates a log group for you. The log group uses the following naming format:</p>
    /// <p> <code>aws/ssm/<i>SystemsManagerDocumentName</i> </code> </p>
    pub fn cloud_watch_log_group_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.cloud_watch_log_group_name = Some(input.into());
        self
    }
    /// <p>The name of the CloudWatch Logs log group where you want to send command output. If you don't specify a group name, Amazon Web Services Systems Manager automatically creates a log group for you. The log group uses the following naming format:</p>
    /// <p> <code>aws/ssm/<i>SystemsManagerDocumentName</i> </code> </p>
    pub fn set_cloud_watch_log_group_name(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.cloud_watch_log_group_name = input;
        self
    }
    /// <p>Enables Systems Manager to send command output to CloudWatch Logs.</p>
    pub fn cloud_watch_output_enabled(mut self, input: bool) -> Self {
        self.cloud_watch_output_enabled = Some(input);
        self
    }
    /// <p>Enables Systems Manager to send command output to CloudWatch Logs.</p>
    pub fn set_cloud_watch_output_enabled(mut self, input: std::option::Option<bool>) -> Self {
        self.cloud_watch_output_enabled = input;
        self
    }
    /// Consumes the builder and constructs a [`CloudWatchOutputConfig`](crate::types::CloudWatchOutputConfig).
    pub fn build(self) -> crate::types::CloudWatchOutputConfig {
        crate::types::CloudWatchOutputConfig {
            cloud_watch_log_group_name: self.cloud_watch_log_group_name,
            cloud_watch_output_enabled: self.cloud_watch_output_enabled.unwrap_or_default(),
        }
    }
}
