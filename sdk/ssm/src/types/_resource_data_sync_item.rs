// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about a resource data sync configuration, including its current status and last successful sync.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ResourceDataSyncItem {
    /// <p>The name of the resource data sync.</p>
    #[doc(hidden)]
    pub sync_name: std::option::Option<std::string::String>,
    /// <p>The type of resource data sync. If <code>SyncType</code> is <code>SyncToDestination</code>, then the resource data sync synchronizes data to an S3 bucket. If the <code>SyncType</code> is <code>SyncFromSource</code> then the resource data sync synchronizes data from Organizations or from multiple Amazon Web Services Regions.</p>
    #[doc(hidden)]
    pub sync_type: std::option::Option<std::string::String>,
    /// <p>Information about the source where the data was synchronized. </p>
    #[doc(hidden)]
    pub sync_source: std::option::Option<crate::types::ResourceDataSyncSourceWithState>,
    /// <p>Configuration information for the target S3 bucket.</p>
    #[doc(hidden)]
    pub s3_destination: std::option::Option<crate::types::ResourceDataSyncS3Destination>,
    /// <p>The last time the configuration attempted to sync (UTC).</p>
    #[doc(hidden)]
    pub last_sync_time: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>The last time the sync operations returned a status of <code>SUCCESSFUL</code> (UTC).</p>
    #[doc(hidden)]
    pub last_successful_sync_time: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>The date and time the resource data sync was changed. </p>
    #[doc(hidden)]
    pub sync_last_modified_time: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>The status reported by the last sync.</p>
    #[doc(hidden)]
    pub last_status: std::option::Option<crate::types::LastResourceDataSyncStatus>,
    /// <p>The date and time the configuration was created (UTC).</p>
    #[doc(hidden)]
    pub sync_created_time: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>The status message details reported by the last sync.</p>
    #[doc(hidden)]
    pub last_sync_status_message: std::option::Option<std::string::String>,
}
impl ResourceDataSyncItem {
    /// <p>The name of the resource data sync.</p>
    pub fn sync_name(&self) -> std::option::Option<&str> {
        self.sync_name.as_deref()
    }
    /// <p>The type of resource data sync. If <code>SyncType</code> is <code>SyncToDestination</code>, then the resource data sync synchronizes data to an S3 bucket. If the <code>SyncType</code> is <code>SyncFromSource</code> then the resource data sync synchronizes data from Organizations or from multiple Amazon Web Services Regions.</p>
    pub fn sync_type(&self) -> std::option::Option<&str> {
        self.sync_type.as_deref()
    }
    /// <p>Information about the source where the data was synchronized. </p>
    pub fn sync_source(
        &self,
    ) -> std::option::Option<&crate::types::ResourceDataSyncSourceWithState> {
        self.sync_source.as_ref()
    }
    /// <p>Configuration information for the target S3 bucket.</p>
    pub fn s3_destination(
        &self,
    ) -> std::option::Option<&crate::types::ResourceDataSyncS3Destination> {
        self.s3_destination.as_ref()
    }
    /// <p>The last time the configuration attempted to sync (UTC).</p>
    pub fn last_sync_time(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.last_sync_time.as_ref()
    }
    /// <p>The last time the sync operations returned a status of <code>SUCCESSFUL</code> (UTC).</p>
    pub fn last_successful_sync_time(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.last_successful_sync_time.as_ref()
    }
    /// <p>The date and time the resource data sync was changed. </p>
    pub fn sync_last_modified_time(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.sync_last_modified_time.as_ref()
    }
    /// <p>The status reported by the last sync.</p>
    pub fn last_status(&self) -> std::option::Option<&crate::types::LastResourceDataSyncStatus> {
        self.last_status.as_ref()
    }
    /// <p>The date and time the configuration was created (UTC).</p>
    pub fn sync_created_time(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.sync_created_time.as_ref()
    }
    /// <p>The status message details reported by the last sync.</p>
    pub fn last_sync_status_message(&self) -> std::option::Option<&str> {
        self.last_sync_status_message.as_deref()
    }
}
impl ResourceDataSyncItem {
    /// Creates a new builder-style object to manufacture [`ResourceDataSyncItem`](crate::types::ResourceDataSyncItem).
    pub fn builder() -> crate::types::builders::ResourceDataSyncItemBuilder {
        crate::types::builders::ResourceDataSyncItemBuilder::default()
    }
}

/// A builder for [`ResourceDataSyncItem`](crate::types::ResourceDataSyncItem).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ResourceDataSyncItemBuilder {
    pub(crate) sync_name: std::option::Option<std::string::String>,
    pub(crate) sync_type: std::option::Option<std::string::String>,
    pub(crate) sync_source: std::option::Option<crate::types::ResourceDataSyncSourceWithState>,
    pub(crate) s3_destination: std::option::Option<crate::types::ResourceDataSyncS3Destination>,
    pub(crate) last_sync_time: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) last_successful_sync_time: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) sync_last_modified_time: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) last_status: std::option::Option<crate::types::LastResourceDataSyncStatus>,
    pub(crate) sync_created_time: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) last_sync_status_message: std::option::Option<std::string::String>,
}
impl ResourceDataSyncItemBuilder {
    /// <p>The name of the resource data sync.</p>
    pub fn sync_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.sync_name = Some(input.into());
        self
    }
    /// <p>The name of the resource data sync.</p>
    pub fn set_sync_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.sync_name = input;
        self
    }
    /// <p>The type of resource data sync. If <code>SyncType</code> is <code>SyncToDestination</code>, then the resource data sync synchronizes data to an S3 bucket. If the <code>SyncType</code> is <code>SyncFromSource</code> then the resource data sync synchronizes data from Organizations or from multiple Amazon Web Services Regions.</p>
    pub fn sync_type(mut self, input: impl Into<std::string::String>) -> Self {
        self.sync_type = Some(input.into());
        self
    }
    /// <p>The type of resource data sync. If <code>SyncType</code> is <code>SyncToDestination</code>, then the resource data sync synchronizes data to an S3 bucket. If the <code>SyncType</code> is <code>SyncFromSource</code> then the resource data sync synchronizes data from Organizations or from multiple Amazon Web Services Regions.</p>
    pub fn set_sync_type(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.sync_type = input;
        self
    }
    /// <p>Information about the source where the data was synchronized. </p>
    pub fn sync_source(mut self, input: crate::types::ResourceDataSyncSourceWithState) -> Self {
        self.sync_source = Some(input);
        self
    }
    /// <p>Information about the source where the data was synchronized. </p>
    pub fn set_sync_source(
        mut self,
        input: std::option::Option<crate::types::ResourceDataSyncSourceWithState>,
    ) -> Self {
        self.sync_source = input;
        self
    }
    /// <p>Configuration information for the target S3 bucket.</p>
    pub fn s3_destination(mut self, input: crate::types::ResourceDataSyncS3Destination) -> Self {
        self.s3_destination = Some(input);
        self
    }
    /// <p>Configuration information for the target S3 bucket.</p>
    pub fn set_s3_destination(
        mut self,
        input: std::option::Option<crate::types::ResourceDataSyncS3Destination>,
    ) -> Self {
        self.s3_destination = input;
        self
    }
    /// <p>The last time the configuration attempted to sync (UTC).</p>
    pub fn last_sync_time(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.last_sync_time = Some(input);
        self
    }
    /// <p>The last time the configuration attempted to sync (UTC).</p>
    pub fn set_last_sync_time(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.last_sync_time = input;
        self
    }
    /// <p>The last time the sync operations returned a status of <code>SUCCESSFUL</code> (UTC).</p>
    pub fn last_successful_sync_time(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.last_successful_sync_time = Some(input);
        self
    }
    /// <p>The last time the sync operations returned a status of <code>SUCCESSFUL</code> (UTC).</p>
    pub fn set_last_successful_sync_time(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.last_successful_sync_time = input;
        self
    }
    /// <p>The date and time the resource data sync was changed. </p>
    pub fn sync_last_modified_time(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.sync_last_modified_time = Some(input);
        self
    }
    /// <p>The date and time the resource data sync was changed. </p>
    pub fn set_sync_last_modified_time(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.sync_last_modified_time = input;
        self
    }
    /// <p>The status reported by the last sync.</p>
    pub fn last_status(mut self, input: crate::types::LastResourceDataSyncStatus) -> Self {
        self.last_status = Some(input);
        self
    }
    /// <p>The status reported by the last sync.</p>
    pub fn set_last_status(
        mut self,
        input: std::option::Option<crate::types::LastResourceDataSyncStatus>,
    ) -> Self {
        self.last_status = input;
        self
    }
    /// <p>The date and time the configuration was created (UTC).</p>
    pub fn sync_created_time(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.sync_created_time = Some(input);
        self
    }
    /// <p>The date and time the configuration was created (UTC).</p>
    pub fn set_sync_created_time(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.sync_created_time = input;
        self
    }
    /// <p>The status message details reported by the last sync.</p>
    pub fn last_sync_status_message(mut self, input: impl Into<std::string::String>) -> Self {
        self.last_sync_status_message = Some(input.into());
        self
    }
    /// <p>The status message details reported by the last sync.</p>
    pub fn set_last_sync_status_message(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.last_sync_status_message = input;
        self
    }
    /// Consumes the builder and constructs a [`ResourceDataSyncItem`](crate::types::ResourceDataSyncItem).
    pub fn build(self) -> crate::types::ResourceDataSyncItem {
        crate::types::ResourceDataSyncItem {
            sync_name: self.sync_name,
            sync_type: self.sync_type,
            sync_source: self.sync_source,
            s3_destination: self.s3_destination,
            last_sync_time: self.last_sync_time,
            last_successful_sync_time: self.last_successful_sync_time,
            sync_last_modified_time: self.sync_last_modified_time,
            last_status: self.last_status,
            sync_created_time: self.sync_created_time,
            last_sync_status_message: self.last_sync_status_message,
        }
    }
}
