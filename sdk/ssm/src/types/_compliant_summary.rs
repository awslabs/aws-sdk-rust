// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A summary of resources that are compliant. The summary is organized according to the resource count for each compliance type.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct CompliantSummary {
    /// <p>The total number of resources that are compliant.</p>
    #[doc(hidden)]
    pub compliant_count: i32,
    /// <p>A summary of the compliance severity by compliance type.</p>
    #[doc(hidden)]
    pub severity_summary: std::option::Option<crate::types::SeveritySummary>,
}
impl CompliantSummary {
    /// <p>The total number of resources that are compliant.</p>
    pub fn compliant_count(&self) -> i32 {
        self.compliant_count
    }
    /// <p>A summary of the compliance severity by compliance type.</p>
    pub fn severity_summary(&self) -> std::option::Option<&crate::types::SeveritySummary> {
        self.severity_summary.as_ref()
    }
}
impl CompliantSummary {
    /// Creates a new builder-style object to manufacture [`CompliantSummary`](crate::types::CompliantSummary).
    pub fn builder() -> crate::types::builders::CompliantSummaryBuilder {
        crate::types::builders::CompliantSummaryBuilder::default()
    }
}

/// A builder for [`CompliantSummary`](crate::types::CompliantSummary).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct CompliantSummaryBuilder {
    pub(crate) compliant_count: std::option::Option<i32>,
    pub(crate) severity_summary: std::option::Option<crate::types::SeveritySummary>,
}
impl CompliantSummaryBuilder {
    /// <p>The total number of resources that are compliant.</p>
    pub fn compliant_count(mut self, input: i32) -> Self {
        self.compliant_count = Some(input);
        self
    }
    /// <p>The total number of resources that are compliant.</p>
    pub fn set_compliant_count(mut self, input: std::option::Option<i32>) -> Self {
        self.compliant_count = input;
        self
    }
    /// <p>A summary of the compliance severity by compliance type.</p>
    pub fn severity_summary(mut self, input: crate::types::SeveritySummary) -> Self {
        self.severity_summary = Some(input);
        self
    }
    /// <p>A summary of the compliance severity by compliance type.</p>
    pub fn set_severity_summary(
        mut self,
        input: std::option::Option<crate::types::SeveritySummary>,
    ) -> Self {
        self.severity_summary = input;
        self
    }
    /// Consumes the builder and constructs a [`CompliantSummary`](crate::types::CompliantSummary).
    pub fn build(self) -> crate::types::CompliantSummary {
        crate::types::CompliantSummary {
            compliant_count: self.compliant_count.unwrap_or_default(),
            severity_summary: self.severity_summary,
        }
    }
}
