// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about comments added to a document review request.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DocumentReviewCommentSource {
    /// <p>The type of information added to a review request. Currently, only the value <code>Comment</code> is supported.</p>
    #[doc(hidden)]
    pub r#type: std::option::Option<crate::types::DocumentReviewCommentType>,
    /// <p>The content of a comment entered by a user who requests a review of a new document version, or who reviews the new version.</p>
    #[doc(hidden)]
    pub content: std::option::Option<std::string::String>,
}
impl DocumentReviewCommentSource {
    /// <p>The type of information added to a review request. Currently, only the value <code>Comment</code> is supported.</p>
    pub fn r#type(&self) -> std::option::Option<&crate::types::DocumentReviewCommentType> {
        self.r#type.as_ref()
    }
    /// <p>The content of a comment entered by a user who requests a review of a new document version, or who reviews the new version.</p>
    pub fn content(&self) -> std::option::Option<&str> {
        self.content.as_deref()
    }
}
impl DocumentReviewCommentSource {
    /// Creates a new builder-style object to manufacture [`DocumentReviewCommentSource`](crate::types::DocumentReviewCommentSource).
    pub fn builder() -> crate::types::builders::DocumentReviewCommentSourceBuilder {
        crate::types::builders::DocumentReviewCommentSourceBuilder::default()
    }
}

/// A builder for [`DocumentReviewCommentSource`](crate::types::DocumentReviewCommentSource).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DocumentReviewCommentSourceBuilder {
    pub(crate) r#type: std::option::Option<crate::types::DocumentReviewCommentType>,
    pub(crate) content: std::option::Option<std::string::String>,
}
impl DocumentReviewCommentSourceBuilder {
    /// <p>The type of information added to a review request. Currently, only the value <code>Comment</code> is supported.</p>
    pub fn r#type(mut self, input: crate::types::DocumentReviewCommentType) -> Self {
        self.r#type = Some(input);
        self
    }
    /// <p>The type of information added to a review request. Currently, only the value <code>Comment</code> is supported.</p>
    pub fn set_type(
        mut self,
        input: std::option::Option<crate::types::DocumentReviewCommentType>,
    ) -> Self {
        self.r#type = input;
        self
    }
    /// <p>The content of a comment entered by a user who requests a review of a new document version, or who reviews the new version.</p>
    pub fn content(mut self, input: impl Into<std::string::String>) -> Self {
        self.content = Some(input.into());
        self
    }
    /// <p>The content of a comment entered by a user who requests a review of a new document version, or who reviews the new version.</p>
    pub fn set_content(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.content = input;
        self
    }
    /// Consumes the builder and constructs a [`DocumentReviewCommentSource`](crate::types::DocumentReviewCommentSource).
    pub fn build(self) -> crate::types::DocumentReviewCommentSource {
        crate::types::DocumentReviewCommentSource {
            r#type: self.r#type,
            content: self.content,
        }
    }
}
