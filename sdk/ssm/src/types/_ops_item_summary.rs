// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A count of OpsItems.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct OpsItemSummary {
    /// <p>The Amazon Resource Name (ARN) of the IAM entity that created the OpsItem.</p>
    #[doc(hidden)]
    pub created_by: std::option::Option<std::string::String>,
    /// <p>The date and time the OpsItem was created.</p>
    #[doc(hidden)]
    pub created_time: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>The Amazon Resource Name (ARN) of the IAM entity that created the OpsItem.</p>
    #[doc(hidden)]
    pub last_modified_by: std::option::Option<std::string::String>,
    /// <p>The date and time the OpsItem was last updated.</p>
    #[doc(hidden)]
    pub last_modified_time: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>The importance of this OpsItem in relation to other OpsItems in the system.</p>
    #[doc(hidden)]
    pub priority: std::option::Option<i32>,
    /// <p>The impacted Amazon Web Services resource.</p>
    #[doc(hidden)]
    pub source: std::option::Option<std::string::String>,
    /// <p>The OpsItem status. Status can be <code>Open</code>, <code>In Progress</code>, or <code>Resolved</code>.</p>
    #[doc(hidden)]
    pub status: std::option::Option<crate::types::OpsItemStatus>,
    /// <p>The ID of the OpsItem.</p>
    #[doc(hidden)]
    pub ops_item_id: std::option::Option<std::string::String>,
    /// <p>A short heading that describes the nature of the OpsItem and the impacted resource.</p>
    #[doc(hidden)]
    pub title: std::option::Option<std::string::String>,
    /// <p>Operational data is custom data that provides useful reference details about the OpsItem. </p>
    #[doc(hidden)]
    pub operational_data: std::option::Option<
        std::collections::HashMap<std::string::String, crate::types::OpsItemDataValue>,
    >,
    /// <p>A list of OpsItems by category.</p>
    #[doc(hidden)]
    pub category: std::option::Option<std::string::String>,
    /// <p>A list of OpsItems by severity.</p>
    #[doc(hidden)]
    pub severity: std::option::Option<std::string::String>,
    /// <p>The type of OpsItem. Systems Manager supports the following types of OpsItems:</p>
    /// <ul>
    /// <li> <p> <code>/aws/issue</code> </p> <p>This type of OpsItem is used for default OpsItems created by OpsCenter. </p> </li>
    /// <li> <p> <code>/aws/changerequest</code> </p> <p>This type of OpsItem is used by Change Manager for reviewing and approving or rejecting change requests. </p> </li>
    /// <li> <p> <code>/aws/insights</code> </p> <p>This type of OpsItem is used by OpsCenter for aggregating and reporting on duplicate OpsItems. </p> </li>
    /// </ul>
    #[doc(hidden)]
    pub ops_item_type: std::option::Option<std::string::String>,
    /// <p>The time a runbook workflow started. Currently reported only for the OpsItem type <code>/aws/changerequest</code>.</p>
    #[doc(hidden)]
    pub actual_start_time: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>The time a runbook workflow ended. Currently reported only for the OpsItem type <code>/aws/changerequest</code>.</p>
    #[doc(hidden)]
    pub actual_end_time: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>The time specified in a change request for a runbook workflow to start. Currently supported only for the OpsItem type <code>/aws/changerequest</code>.</p>
    #[doc(hidden)]
    pub planned_start_time: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>The time specified in a change request for a runbook workflow to end. Currently supported only for the OpsItem type <code>/aws/changerequest</code>.</p>
    #[doc(hidden)]
    pub planned_end_time: std::option::Option<aws_smithy_types::DateTime>,
}
impl OpsItemSummary {
    /// <p>The Amazon Resource Name (ARN) of the IAM entity that created the OpsItem.</p>
    pub fn created_by(&self) -> std::option::Option<&str> {
        self.created_by.as_deref()
    }
    /// <p>The date and time the OpsItem was created.</p>
    pub fn created_time(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.created_time.as_ref()
    }
    /// <p>The Amazon Resource Name (ARN) of the IAM entity that created the OpsItem.</p>
    pub fn last_modified_by(&self) -> std::option::Option<&str> {
        self.last_modified_by.as_deref()
    }
    /// <p>The date and time the OpsItem was last updated.</p>
    pub fn last_modified_time(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.last_modified_time.as_ref()
    }
    /// <p>The importance of this OpsItem in relation to other OpsItems in the system.</p>
    pub fn priority(&self) -> std::option::Option<i32> {
        self.priority
    }
    /// <p>The impacted Amazon Web Services resource.</p>
    pub fn source(&self) -> std::option::Option<&str> {
        self.source.as_deref()
    }
    /// <p>The OpsItem status. Status can be <code>Open</code>, <code>In Progress</code>, or <code>Resolved</code>.</p>
    pub fn status(&self) -> std::option::Option<&crate::types::OpsItemStatus> {
        self.status.as_ref()
    }
    /// <p>The ID of the OpsItem.</p>
    pub fn ops_item_id(&self) -> std::option::Option<&str> {
        self.ops_item_id.as_deref()
    }
    /// <p>A short heading that describes the nature of the OpsItem and the impacted resource.</p>
    pub fn title(&self) -> std::option::Option<&str> {
        self.title.as_deref()
    }
    /// <p>Operational data is custom data that provides useful reference details about the OpsItem. </p>
    pub fn operational_data(
        &self,
    ) -> std::option::Option<
        &std::collections::HashMap<std::string::String, crate::types::OpsItemDataValue>,
    > {
        self.operational_data.as_ref()
    }
    /// <p>A list of OpsItems by category.</p>
    pub fn category(&self) -> std::option::Option<&str> {
        self.category.as_deref()
    }
    /// <p>A list of OpsItems by severity.</p>
    pub fn severity(&self) -> std::option::Option<&str> {
        self.severity.as_deref()
    }
    /// <p>The type of OpsItem. Systems Manager supports the following types of OpsItems:</p>
    /// <ul>
    /// <li> <p> <code>/aws/issue</code> </p> <p>This type of OpsItem is used for default OpsItems created by OpsCenter. </p> </li>
    /// <li> <p> <code>/aws/changerequest</code> </p> <p>This type of OpsItem is used by Change Manager for reviewing and approving or rejecting change requests. </p> </li>
    /// <li> <p> <code>/aws/insights</code> </p> <p>This type of OpsItem is used by OpsCenter for aggregating and reporting on duplicate OpsItems. </p> </li>
    /// </ul>
    pub fn ops_item_type(&self) -> std::option::Option<&str> {
        self.ops_item_type.as_deref()
    }
    /// <p>The time a runbook workflow started. Currently reported only for the OpsItem type <code>/aws/changerequest</code>.</p>
    pub fn actual_start_time(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.actual_start_time.as_ref()
    }
    /// <p>The time a runbook workflow ended. Currently reported only for the OpsItem type <code>/aws/changerequest</code>.</p>
    pub fn actual_end_time(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.actual_end_time.as_ref()
    }
    /// <p>The time specified in a change request for a runbook workflow to start. Currently supported only for the OpsItem type <code>/aws/changerequest</code>.</p>
    pub fn planned_start_time(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.planned_start_time.as_ref()
    }
    /// <p>The time specified in a change request for a runbook workflow to end. Currently supported only for the OpsItem type <code>/aws/changerequest</code>.</p>
    pub fn planned_end_time(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.planned_end_time.as_ref()
    }
}
impl OpsItemSummary {
    /// Creates a new builder-style object to manufacture [`OpsItemSummary`](crate::types::OpsItemSummary).
    pub fn builder() -> crate::types::builders::OpsItemSummaryBuilder {
        crate::types::builders::OpsItemSummaryBuilder::default()
    }
}

/// A builder for [`OpsItemSummary`](crate::types::OpsItemSummary).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct OpsItemSummaryBuilder {
    pub(crate) created_by: std::option::Option<std::string::String>,
    pub(crate) created_time: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) last_modified_by: std::option::Option<std::string::String>,
    pub(crate) last_modified_time: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) priority: std::option::Option<i32>,
    pub(crate) source: std::option::Option<std::string::String>,
    pub(crate) status: std::option::Option<crate::types::OpsItemStatus>,
    pub(crate) ops_item_id: std::option::Option<std::string::String>,
    pub(crate) title: std::option::Option<std::string::String>,
    pub(crate) operational_data: std::option::Option<
        std::collections::HashMap<std::string::String, crate::types::OpsItemDataValue>,
    >,
    pub(crate) category: std::option::Option<std::string::String>,
    pub(crate) severity: std::option::Option<std::string::String>,
    pub(crate) ops_item_type: std::option::Option<std::string::String>,
    pub(crate) actual_start_time: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) actual_end_time: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) planned_start_time: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) planned_end_time: std::option::Option<aws_smithy_types::DateTime>,
}
impl OpsItemSummaryBuilder {
    /// <p>The Amazon Resource Name (ARN) of the IAM entity that created the OpsItem.</p>
    pub fn created_by(mut self, input: impl Into<std::string::String>) -> Self {
        self.created_by = Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the IAM entity that created the OpsItem.</p>
    pub fn set_created_by(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.created_by = input;
        self
    }
    /// <p>The date and time the OpsItem was created.</p>
    pub fn created_time(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.created_time = Some(input);
        self
    }
    /// <p>The date and time the OpsItem was created.</p>
    pub fn set_created_time(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.created_time = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the IAM entity that created the OpsItem.</p>
    pub fn last_modified_by(mut self, input: impl Into<std::string::String>) -> Self {
        self.last_modified_by = Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the IAM entity that created the OpsItem.</p>
    pub fn set_last_modified_by(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.last_modified_by = input;
        self
    }
    /// <p>The date and time the OpsItem was last updated.</p>
    pub fn last_modified_time(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.last_modified_time = Some(input);
        self
    }
    /// <p>The date and time the OpsItem was last updated.</p>
    pub fn set_last_modified_time(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.last_modified_time = input;
        self
    }
    /// <p>The importance of this OpsItem in relation to other OpsItems in the system.</p>
    pub fn priority(mut self, input: i32) -> Self {
        self.priority = Some(input);
        self
    }
    /// <p>The importance of this OpsItem in relation to other OpsItems in the system.</p>
    pub fn set_priority(mut self, input: std::option::Option<i32>) -> Self {
        self.priority = input;
        self
    }
    /// <p>The impacted Amazon Web Services resource.</p>
    pub fn source(mut self, input: impl Into<std::string::String>) -> Self {
        self.source = Some(input.into());
        self
    }
    /// <p>The impacted Amazon Web Services resource.</p>
    pub fn set_source(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.source = input;
        self
    }
    /// <p>The OpsItem status. Status can be <code>Open</code>, <code>In Progress</code>, or <code>Resolved</code>.</p>
    pub fn status(mut self, input: crate::types::OpsItemStatus) -> Self {
        self.status = Some(input);
        self
    }
    /// <p>The OpsItem status. Status can be <code>Open</code>, <code>In Progress</code>, or <code>Resolved</code>.</p>
    pub fn set_status(mut self, input: std::option::Option<crate::types::OpsItemStatus>) -> Self {
        self.status = input;
        self
    }
    /// <p>The ID of the OpsItem.</p>
    pub fn ops_item_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.ops_item_id = Some(input.into());
        self
    }
    /// <p>The ID of the OpsItem.</p>
    pub fn set_ops_item_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.ops_item_id = input;
        self
    }
    /// <p>A short heading that describes the nature of the OpsItem and the impacted resource.</p>
    pub fn title(mut self, input: impl Into<std::string::String>) -> Self {
        self.title = Some(input.into());
        self
    }
    /// <p>A short heading that describes the nature of the OpsItem and the impacted resource.</p>
    pub fn set_title(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.title = input;
        self
    }
    /// Adds a key-value pair to `operational_data`.
    ///
    /// To override the contents of this collection use [`set_operational_data`](Self::set_operational_data).
    ///
    /// <p>Operational data is custom data that provides useful reference details about the OpsItem. </p>
    pub fn operational_data(
        mut self,
        k: impl Into<std::string::String>,
        v: crate::types::OpsItemDataValue,
    ) -> Self {
        let mut hash_map = self.operational_data.unwrap_or_default();
        hash_map.insert(k.into(), v);
        self.operational_data = Some(hash_map);
        self
    }
    /// <p>Operational data is custom data that provides useful reference details about the OpsItem. </p>
    pub fn set_operational_data(
        mut self,
        input: std::option::Option<
            std::collections::HashMap<std::string::String, crate::types::OpsItemDataValue>,
        >,
    ) -> Self {
        self.operational_data = input;
        self
    }
    /// <p>A list of OpsItems by category.</p>
    pub fn category(mut self, input: impl Into<std::string::String>) -> Self {
        self.category = Some(input.into());
        self
    }
    /// <p>A list of OpsItems by category.</p>
    pub fn set_category(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.category = input;
        self
    }
    /// <p>A list of OpsItems by severity.</p>
    pub fn severity(mut self, input: impl Into<std::string::String>) -> Self {
        self.severity = Some(input.into());
        self
    }
    /// <p>A list of OpsItems by severity.</p>
    pub fn set_severity(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.severity = input;
        self
    }
    /// <p>The type of OpsItem. Systems Manager supports the following types of OpsItems:</p>
    /// <ul>
    /// <li> <p> <code>/aws/issue</code> </p> <p>This type of OpsItem is used for default OpsItems created by OpsCenter. </p> </li>
    /// <li> <p> <code>/aws/changerequest</code> </p> <p>This type of OpsItem is used by Change Manager for reviewing and approving or rejecting change requests. </p> </li>
    /// <li> <p> <code>/aws/insights</code> </p> <p>This type of OpsItem is used by OpsCenter for aggregating and reporting on duplicate OpsItems. </p> </li>
    /// </ul>
    pub fn ops_item_type(mut self, input: impl Into<std::string::String>) -> Self {
        self.ops_item_type = Some(input.into());
        self
    }
    /// <p>The type of OpsItem. Systems Manager supports the following types of OpsItems:</p>
    /// <ul>
    /// <li> <p> <code>/aws/issue</code> </p> <p>This type of OpsItem is used for default OpsItems created by OpsCenter. </p> </li>
    /// <li> <p> <code>/aws/changerequest</code> </p> <p>This type of OpsItem is used by Change Manager for reviewing and approving or rejecting change requests. </p> </li>
    /// <li> <p> <code>/aws/insights</code> </p> <p>This type of OpsItem is used by OpsCenter for aggregating and reporting on duplicate OpsItems. </p> </li>
    /// </ul>
    pub fn set_ops_item_type(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.ops_item_type = input;
        self
    }
    /// <p>The time a runbook workflow started. Currently reported only for the OpsItem type <code>/aws/changerequest</code>.</p>
    pub fn actual_start_time(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.actual_start_time = Some(input);
        self
    }
    /// <p>The time a runbook workflow started. Currently reported only for the OpsItem type <code>/aws/changerequest</code>.</p>
    pub fn set_actual_start_time(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.actual_start_time = input;
        self
    }
    /// <p>The time a runbook workflow ended. Currently reported only for the OpsItem type <code>/aws/changerequest</code>.</p>
    pub fn actual_end_time(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.actual_end_time = Some(input);
        self
    }
    /// <p>The time a runbook workflow ended. Currently reported only for the OpsItem type <code>/aws/changerequest</code>.</p>
    pub fn set_actual_end_time(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.actual_end_time = input;
        self
    }
    /// <p>The time specified in a change request for a runbook workflow to start. Currently supported only for the OpsItem type <code>/aws/changerequest</code>.</p>
    pub fn planned_start_time(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.planned_start_time = Some(input);
        self
    }
    /// <p>The time specified in a change request for a runbook workflow to start. Currently supported only for the OpsItem type <code>/aws/changerequest</code>.</p>
    pub fn set_planned_start_time(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.planned_start_time = input;
        self
    }
    /// <p>The time specified in a change request for a runbook workflow to end. Currently supported only for the OpsItem type <code>/aws/changerequest</code>.</p>
    pub fn planned_end_time(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.planned_end_time = Some(input);
        self
    }
    /// <p>The time specified in a change request for a runbook workflow to end. Currently supported only for the OpsItem type <code>/aws/changerequest</code>.</p>
    pub fn set_planned_end_time(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.planned_end_time = input;
        self
    }
    /// Consumes the builder and constructs a [`OpsItemSummary`](crate::types::OpsItemSummary).
    pub fn build(self) -> crate::types::OpsItemSummary {
        crate::types::OpsItemSummary {
            created_by: self.created_by,
            created_time: self.created_time,
            last_modified_by: self.last_modified_by,
            last_modified_time: self.last_modified_time,
            priority: self.priority,
            source: self.source,
            status: self.status,
            ops_item_id: self.ops_item_id,
            title: self.title,
            operational_data: self.operational_data,
            category: self.category,
            severity: self.severity,
            ops_item_type: self.ops_item_type,
            actual_start_time: self.actual_start_time,
            actual_end_time: self.actual_end_time,
            planned_start_time: self.planned_start_time,
            planned_end_time: self.planned_end_time,
        }
    }
}
