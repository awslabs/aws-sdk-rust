// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A URL for the Amazon Web Services Systems Manager (Systems Manager) bucket where you want to store the results of this request.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct S3OutputUrl {
    /// <p>A URL for an S3 bucket where you want to store the results of this request.</p>
    #[doc(hidden)]
    pub output_url: std::option::Option<std::string::String>,
}
impl S3OutputUrl {
    /// <p>A URL for an S3 bucket where you want to store the results of this request.</p>
    pub fn output_url(&self) -> std::option::Option<&str> {
        self.output_url.as_deref()
    }
}
impl S3OutputUrl {
    /// Creates a new builder-style object to manufacture [`S3OutputUrl`](crate::types::S3OutputUrl).
    pub fn builder() -> crate::types::builders::S3OutputUrlBuilder {
        crate::types::builders::S3OutputUrlBuilder::default()
    }
}

/// A builder for [`S3OutputUrl`](crate::types::S3OutputUrl).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct S3OutputUrlBuilder {
    pub(crate) output_url: std::option::Option<std::string::String>,
}
impl S3OutputUrlBuilder {
    /// <p>A URL for an S3 bucket where you want to store the results of this request.</p>
    pub fn output_url(mut self, input: impl Into<std::string::String>) -> Self {
        self.output_url = Some(input.into());
        self
    }
    /// <p>A URL for an S3 bucket where you want to store the results of this request.</p>
    pub fn set_output_url(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.output_url = input;
        self
    }
    /// Consumes the builder and constructs a [`S3OutputUrl`](crate::types::S3OutputUrl).
    pub fn build(self) -> crate::types::S3OutputUrl {
        crate::types::S3OutputUrl {
            output_url: self.output_url,
        }
    }
}
