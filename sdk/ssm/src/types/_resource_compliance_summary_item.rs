// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Compliance summary information for a specific resource. </p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ResourceComplianceSummaryItem {
    /// <p>The compliance type.</p>
    #[doc(hidden)]
    pub compliance_type: std::option::Option<std::string::String>,
    /// <p>The resource type.</p>
    #[doc(hidden)]
    pub resource_type: std::option::Option<std::string::String>,
    /// <p>The resource ID.</p>
    #[doc(hidden)]
    pub resource_id: std::option::Option<std::string::String>,
    /// <p>The compliance status for the resource.</p>
    #[doc(hidden)]
    pub status: std::option::Option<crate::types::ComplianceStatus>,
    /// <p>The highest severity item found for the resource. The resource is compliant for this item.</p>
    #[doc(hidden)]
    pub overall_severity: std::option::Option<crate::types::ComplianceSeverity>,
    /// <p>Information about the execution.</p>
    #[doc(hidden)]
    pub execution_summary: std::option::Option<crate::types::ComplianceExecutionSummary>,
    /// <p>A list of items that are compliant for the resource.</p>
    #[doc(hidden)]
    pub compliant_summary: std::option::Option<crate::types::CompliantSummary>,
    /// <p>A list of items that aren't compliant for the resource.</p>
    #[doc(hidden)]
    pub non_compliant_summary: std::option::Option<crate::types::NonCompliantSummary>,
}
impl ResourceComplianceSummaryItem {
    /// <p>The compliance type.</p>
    pub fn compliance_type(&self) -> std::option::Option<&str> {
        self.compliance_type.as_deref()
    }
    /// <p>The resource type.</p>
    pub fn resource_type(&self) -> std::option::Option<&str> {
        self.resource_type.as_deref()
    }
    /// <p>The resource ID.</p>
    pub fn resource_id(&self) -> std::option::Option<&str> {
        self.resource_id.as_deref()
    }
    /// <p>The compliance status for the resource.</p>
    pub fn status(&self) -> std::option::Option<&crate::types::ComplianceStatus> {
        self.status.as_ref()
    }
    /// <p>The highest severity item found for the resource. The resource is compliant for this item.</p>
    pub fn overall_severity(&self) -> std::option::Option<&crate::types::ComplianceSeverity> {
        self.overall_severity.as_ref()
    }
    /// <p>Information about the execution.</p>
    pub fn execution_summary(
        &self,
    ) -> std::option::Option<&crate::types::ComplianceExecutionSummary> {
        self.execution_summary.as_ref()
    }
    /// <p>A list of items that are compliant for the resource.</p>
    pub fn compliant_summary(&self) -> std::option::Option<&crate::types::CompliantSummary> {
        self.compliant_summary.as_ref()
    }
    /// <p>A list of items that aren't compliant for the resource.</p>
    pub fn non_compliant_summary(&self) -> std::option::Option<&crate::types::NonCompliantSummary> {
        self.non_compliant_summary.as_ref()
    }
}
impl ResourceComplianceSummaryItem {
    /// Creates a new builder-style object to manufacture [`ResourceComplianceSummaryItem`](crate::types::ResourceComplianceSummaryItem).
    pub fn builder() -> crate::types::builders::ResourceComplianceSummaryItemBuilder {
        crate::types::builders::ResourceComplianceSummaryItemBuilder::default()
    }
}

/// A builder for [`ResourceComplianceSummaryItem`](crate::types::ResourceComplianceSummaryItem).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ResourceComplianceSummaryItemBuilder {
    pub(crate) compliance_type: std::option::Option<std::string::String>,
    pub(crate) resource_type: std::option::Option<std::string::String>,
    pub(crate) resource_id: std::option::Option<std::string::String>,
    pub(crate) status: std::option::Option<crate::types::ComplianceStatus>,
    pub(crate) overall_severity: std::option::Option<crate::types::ComplianceSeverity>,
    pub(crate) execution_summary: std::option::Option<crate::types::ComplianceExecutionSummary>,
    pub(crate) compliant_summary: std::option::Option<crate::types::CompliantSummary>,
    pub(crate) non_compliant_summary: std::option::Option<crate::types::NonCompliantSummary>,
}
impl ResourceComplianceSummaryItemBuilder {
    /// <p>The compliance type.</p>
    pub fn compliance_type(mut self, input: impl Into<std::string::String>) -> Self {
        self.compliance_type = Some(input.into());
        self
    }
    /// <p>The compliance type.</p>
    pub fn set_compliance_type(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.compliance_type = input;
        self
    }
    /// <p>The resource type.</p>
    pub fn resource_type(mut self, input: impl Into<std::string::String>) -> Self {
        self.resource_type = Some(input.into());
        self
    }
    /// <p>The resource type.</p>
    pub fn set_resource_type(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.resource_type = input;
        self
    }
    /// <p>The resource ID.</p>
    pub fn resource_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.resource_id = Some(input.into());
        self
    }
    /// <p>The resource ID.</p>
    pub fn set_resource_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.resource_id = input;
        self
    }
    /// <p>The compliance status for the resource.</p>
    pub fn status(mut self, input: crate::types::ComplianceStatus) -> Self {
        self.status = Some(input);
        self
    }
    /// <p>The compliance status for the resource.</p>
    pub fn set_status(
        mut self,
        input: std::option::Option<crate::types::ComplianceStatus>,
    ) -> Self {
        self.status = input;
        self
    }
    /// <p>The highest severity item found for the resource. The resource is compliant for this item.</p>
    pub fn overall_severity(mut self, input: crate::types::ComplianceSeverity) -> Self {
        self.overall_severity = Some(input);
        self
    }
    /// <p>The highest severity item found for the resource. The resource is compliant for this item.</p>
    pub fn set_overall_severity(
        mut self,
        input: std::option::Option<crate::types::ComplianceSeverity>,
    ) -> Self {
        self.overall_severity = input;
        self
    }
    /// <p>Information about the execution.</p>
    pub fn execution_summary(mut self, input: crate::types::ComplianceExecutionSummary) -> Self {
        self.execution_summary = Some(input);
        self
    }
    /// <p>Information about the execution.</p>
    pub fn set_execution_summary(
        mut self,
        input: std::option::Option<crate::types::ComplianceExecutionSummary>,
    ) -> Self {
        self.execution_summary = input;
        self
    }
    /// <p>A list of items that are compliant for the resource.</p>
    pub fn compliant_summary(mut self, input: crate::types::CompliantSummary) -> Self {
        self.compliant_summary = Some(input);
        self
    }
    /// <p>A list of items that are compliant for the resource.</p>
    pub fn set_compliant_summary(
        mut self,
        input: std::option::Option<crate::types::CompliantSummary>,
    ) -> Self {
        self.compliant_summary = input;
        self
    }
    /// <p>A list of items that aren't compliant for the resource.</p>
    pub fn non_compliant_summary(mut self, input: crate::types::NonCompliantSummary) -> Self {
        self.non_compliant_summary = Some(input);
        self
    }
    /// <p>A list of items that aren't compliant for the resource.</p>
    pub fn set_non_compliant_summary(
        mut self,
        input: std::option::Option<crate::types::NonCompliantSummary>,
    ) -> Self {
        self.non_compliant_summary = input;
        self
    }
    /// Consumes the builder and constructs a [`ResourceComplianceSummaryItem`](crate::types::ResourceComplianceSummaryItem).
    pub fn build(self) -> crate::types::ResourceComplianceSummaryItem {
        crate::types::ResourceComplianceSummaryItem {
            compliance_type: self.compliance_type,
            resource_type: self.resource_type,
            resource_id: self.resource_id,
            status: self.status,
            overall_severity: self.overall_severity,
            execution_summary: self.execution_summary,
            compliant_summary: self.compliant_summary,
            non_compliant_summary: self.non_compliant_summary,
        }
    }
}
