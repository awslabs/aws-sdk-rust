// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Reserved for future use.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct SessionManagerOutputUrl {
    /// <p>Reserved for future use.</p>
    #[doc(hidden)]
    pub s3_output_url: std::option::Option<std::string::String>,
    /// <p>Reserved for future use.</p>
    #[doc(hidden)]
    pub cloud_watch_output_url: std::option::Option<std::string::String>,
}
impl SessionManagerOutputUrl {
    /// <p>Reserved for future use.</p>
    pub fn s3_output_url(&self) -> std::option::Option<&str> {
        self.s3_output_url.as_deref()
    }
    /// <p>Reserved for future use.</p>
    pub fn cloud_watch_output_url(&self) -> std::option::Option<&str> {
        self.cloud_watch_output_url.as_deref()
    }
}
impl SessionManagerOutputUrl {
    /// Creates a new builder-style object to manufacture [`SessionManagerOutputUrl`](crate::types::SessionManagerOutputUrl).
    pub fn builder() -> crate::types::builders::SessionManagerOutputUrlBuilder {
        crate::types::builders::SessionManagerOutputUrlBuilder::default()
    }
}

/// A builder for [`SessionManagerOutputUrl`](crate::types::SessionManagerOutputUrl).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct SessionManagerOutputUrlBuilder {
    pub(crate) s3_output_url: std::option::Option<std::string::String>,
    pub(crate) cloud_watch_output_url: std::option::Option<std::string::String>,
}
impl SessionManagerOutputUrlBuilder {
    /// <p>Reserved for future use.</p>
    pub fn s3_output_url(mut self, input: impl Into<std::string::String>) -> Self {
        self.s3_output_url = Some(input.into());
        self
    }
    /// <p>Reserved for future use.</p>
    pub fn set_s3_output_url(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.s3_output_url = input;
        self
    }
    /// <p>Reserved for future use.</p>
    pub fn cloud_watch_output_url(mut self, input: impl Into<std::string::String>) -> Self {
        self.cloud_watch_output_url = Some(input.into());
        self
    }
    /// <p>Reserved for future use.</p>
    pub fn set_cloud_watch_output_url(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.cloud_watch_output_url = input;
        self
    }
    /// Consumes the builder and constructs a [`SessionManagerOutputUrl`](crate::types::SessionManagerOutputUrl).
    pub fn build(self) -> crate::types::SessionManagerOutputUrl {
        crate::types::SessionManagerOutputUrl {
            s3_output_url: self.s3_output_url,
            cloud_watch_output_url: self.cloud_watch_output_url,
        }
    }
}
