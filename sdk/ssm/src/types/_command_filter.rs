// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Describes a command filter.</p> <note>
/// <p>A managed node ID can't be specified when a command status is <code>Pending</code> because the command hasn't run on the node yet.</p>
/// </note>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct CommandFilter {
    /// <p>The name of the filter.</p> <note>
    /// <p>The <code>ExecutionStage</code> filter can't be used with the <code>ListCommandInvocations</code> operation, only with <code>ListCommands</code>.</p>
    /// </note>
    #[doc(hidden)]
    pub key: std::option::Option<crate::types::CommandFilterKey>,
    /// <p>The filter value. Valid values for each filter key are as follows:</p>
    /// <ul>
    /// <li> <p> <b>InvokedAfter</b>: Specify a timestamp to limit your results. For example, specify <code>2021-07-07T00:00:00Z</code> to see a list of command executions occurring July 7, 2021, and later.</p> </li>
    /// <li> <p> <b>InvokedBefore</b>: Specify a timestamp to limit your results. For example, specify <code>2021-07-07T00:00:00Z</code> to see a list of command executions from before July 7, 2021.</p> </li>
    /// <li> <p> <b>Status</b>: Specify a valid command status to see a list of all command executions with that status. The status choices depend on the API you call.</p> <p>The status values you can specify for <code>ListCommands</code> are:</p>
    /// <ul>
    /// <li> <p> <code>Pending</code> </p> </li>
    /// <li> <p> <code>InProgress</code> </p> </li>
    /// <li> <p> <code>Success</code> </p> </li>
    /// <li> <p> <code>Cancelled</code> </p> </li>
    /// <li> <p> <code>Failed</code> </p> </li>
    /// <li> <p> <code>TimedOut</code> (this includes both Delivery and Execution time outs) </p> </li>
    /// <li> <p> <code>AccessDenied</code> </p> </li>
    /// <li> <p> <code>DeliveryTimedOut</code> </p> </li>
    /// <li> <p> <code>ExecutionTimedOut</code> </p> </li>
    /// <li> <p> <code>Incomplete</code> </p> </li>
    /// <li> <p> <code>NoInstancesInTag</code> </p> </li>
    /// <li> <p> <code>LimitExceeded</code> </p> </li>
    /// </ul> <p>The status values you can specify for <code>ListCommandInvocations</code> are:</p>
    /// <ul>
    /// <li> <p> <code>Pending</code> </p> </li>
    /// <li> <p> <code>InProgress</code> </p> </li>
    /// <li> <p> <code>Delayed</code> </p> </li>
    /// <li> <p> <code>Success</code> </p> </li>
    /// <li> <p> <code>Cancelled</code> </p> </li>
    /// <li> <p> <code>Failed</code> </p> </li>
    /// <li> <p> <code>TimedOut</code> (this includes both Delivery and Execution time outs) </p> </li>
    /// <li> <p> <code>AccessDenied</code> </p> </li>
    /// <li> <p> <code>DeliveryTimedOut</code> </p> </li>
    /// <li> <p> <code>ExecutionTimedOut</code> </p> </li>
    /// <li> <p> <code>Undeliverable</code> </p> </li>
    /// <li> <p> <code>InvalidPlatform</code> </p> </li>
    /// <li> <p> <code>Terminated</code> </p> </li>
    /// </ul> </li>
    /// <li> <p> <b>DocumentName</b>: Specify name of the Amazon Web Services Systems Manager document (SSM document) for which you want to see command execution results. For example, specify <code>AWS-RunPatchBaseline</code> to see command executions that used this SSM document to perform security patching operations on managed nodes. </p> </li>
    /// <li> <p> <b>ExecutionStage</b>: Specify one of the following values (<code>ListCommands</code> operations only):</p>
    /// <ul>
    /// <li> <p> <code>Executing</code>: Returns a list of command executions that are currently still running.</p> </li>
    /// <li> <p> <code>Complete</code>: Returns a list of command executions that have already completed. </p> </li>
    /// </ul> </li>
    /// </ul>
    #[doc(hidden)]
    pub value: std::option::Option<std::string::String>,
}
impl CommandFilter {
    /// <p>The name of the filter.</p> <note>
    /// <p>The <code>ExecutionStage</code> filter can't be used with the <code>ListCommandInvocations</code> operation, only with <code>ListCommands</code>.</p>
    /// </note>
    pub fn key(&self) -> std::option::Option<&crate::types::CommandFilterKey> {
        self.key.as_ref()
    }
    /// <p>The filter value. Valid values for each filter key are as follows:</p>
    /// <ul>
    /// <li> <p> <b>InvokedAfter</b>: Specify a timestamp to limit your results. For example, specify <code>2021-07-07T00:00:00Z</code> to see a list of command executions occurring July 7, 2021, and later.</p> </li>
    /// <li> <p> <b>InvokedBefore</b>: Specify a timestamp to limit your results. For example, specify <code>2021-07-07T00:00:00Z</code> to see a list of command executions from before July 7, 2021.</p> </li>
    /// <li> <p> <b>Status</b>: Specify a valid command status to see a list of all command executions with that status. The status choices depend on the API you call.</p> <p>The status values you can specify for <code>ListCommands</code> are:</p>
    /// <ul>
    /// <li> <p> <code>Pending</code> </p> </li>
    /// <li> <p> <code>InProgress</code> </p> </li>
    /// <li> <p> <code>Success</code> </p> </li>
    /// <li> <p> <code>Cancelled</code> </p> </li>
    /// <li> <p> <code>Failed</code> </p> </li>
    /// <li> <p> <code>TimedOut</code> (this includes both Delivery and Execution time outs) </p> </li>
    /// <li> <p> <code>AccessDenied</code> </p> </li>
    /// <li> <p> <code>DeliveryTimedOut</code> </p> </li>
    /// <li> <p> <code>ExecutionTimedOut</code> </p> </li>
    /// <li> <p> <code>Incomplete</code> </p> </li>
    /// <li> <p> <code>NoInstancesInTag</code> </p> </li>
    /// <li> <p> <code>LimitExceeded</code> </p> </li>
    /// </ul> <p>The status values you can specify for <code>ListCommandInvocations</code> are:</p>
    /// <ul>
    /// <li> <p> <code>Pending</code> </p> </li>
    /// <li> <p> <code>InProgress</code> </p> </li>
    /// <li> <p> <code>Delayed</code> </p> </li>
    /// <li> <p> <code>Success</code> </p> </li>
    /// <li> <p> <code>Cancelled</code> </p> </li>
    /// <li> <p> <code>Failed</code> </p> </li>
    /// <li> <p> <code>TimedOut</code> (this includes both Delivery and Execution time outs) </p> </li>
    /// <li> <p> <code>AccessDenied</code> </p> </li>
    /// <li> <p> <code>DeliveryTimedOut</code> </p> </li>
    /// <li> <p> <code>ExecutionTimedOut</code> </p> </li>
    /// <li> <p> <code>Undeliverable</code> </p> </li>
    /// <li> <p> <code>InvalidPlatform</code> </p> </li>
    /// <li> <p> <code>Terminated</code> </p> </li>
    /// </ul> </li>
    /// <li> <p> <b>DocumentName</b>: Specify name of the Amazon Web Services Systems Manager document (SSM document) for which you want to see command execution results. For example, specify <code>AWS-RunPatchBaseline</code> to see command executions that used this SSM document to perform security patching operations on managed nodes. </p> </li>
    /// <li> <p> <b>ExecutionStage</b>: Specify one of the following values (<code>ListCommands</code> operations only):</p>
    /// <ul>
    /// <li> <p> <code>Executing</code>: Returns a list of command executions that are currently still running.</p> </li>
    /// <li> <p> <code>Complete</code>: Returns a list of command executions that have already completed. </p> </li>
    /// </ul> </li>
    /// </ul>
    pub fn value(&self) -> std::option::Option<&str> {
        self.value.as_deref()
    }
}
impl CommandFilter {
    /// Creates a new builder-style object to manufacture [`CommandFilter`](crate::types::CommandFilter).
    pub fn builder() -> crate::types::builders::CommandFilterBuilder {
        crate::types::builders::CommandFilterBuilder::default()
    }
}

/// A builder for [`CommandFilter`](crate::types::CommandFilter).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct CommandFilterBuilder {
    pub(crate) key: std::option::Option<crate::types::CommandFilterKey>,
    pub(crate) value: std::option::Option<std::string::String>,
}
impl CommandFilterBuilder {
    /// <p>The name of the filter.</p> <note>
    /// <p>The <code>ExecutionStage</code> filter can't be used with the <code>ListCommandInvocations</code> operation, only with <code>ListCommands</code>.</p>
    /// </note>
    pub fn key(mut self, input: crate::types::CommandFilterKey) -> Self {
        self.key = Some(input);
        self
    }
    /// <p>The name of the filter.</p> <note>
    /// <p>The <code>ExecutionStage</code> filter can't be used with the <code>ListCommandInvocations</code> operation, only with <code>ListCommands</code>.</p>
    /// </note>
    pub fn set_key(mut self, input: std::option::Option<crate::types::CommandFilterKey>) -> Self {
        self.key = input;
        self
    }
    /// <p>The filter value. Valid values for each filter key are as follows:</p>
    /// <ul>
    /// <li> <p> <b>InvokedAfter</b>: Specify a timestamp to limit your results. For example, specify <code>2021-07-07T00:00:00Z</code> to see a list of command executions occurring July 7, 2021, and later.</p> </li>
    /// <li> <p> <b>InvokedBefore</b>: Specify a timestamp to limit your results. For example, specify <code>2021-07-07T00:00:00Z</code> to see a list of command executions from before July 7, 2021.</p> </li>
    /// <li> <p> <b>Status</b>: Specify a valid command status to see a list of all command executions with that status. The status choices depend on the API you call.</p> <p>The status values you can specify for <code>ListCommands</code> are:</p>
    /// <ul>
    /// <li> <p> <code>Pending</code> </p> </li>
    /// <li> <p> <code>InProgress</code> </p> </li>
    /// <li> <p> <code>Success</code> </p> </li>
    /// <li> <p> <code>Cancelled</code> </p> </li>
    /// <li> <p> <code>Failed</code> </p> </li>
    /// <li> <p> <code>TimedOut</code> (this includes both Delivery and Execution time outs) </p> </li>
    /// <li> <p> <code>AccessDenied</code> </p> </li>
    /// <li> <p> <code>DeliveryTimedOut</code> </p> </li>
    /// <li> <p> <code>ExecutionTimedOut</code> </p> </li>
    /// <li> <p> <code>Incomplete</code> </p> </li>
    /// <li> <p> <code>NoInstancesInTag</code> </p> </li>
    /// <li> <p> <code>LimitExceeded</code> </p> </li>
    /// </ul> <p>The status values you can specify for <code>ListCommandInvocations</code> are:</p>
    /// <ul>
    /// <li> <p> <code>Pending</code> </p> </li>
    /// <li> <p> <code>InProgress</code> </p> </li>
    /// <li> <p> <code>Delayed</code> </p> </li>
    /// <li> <p> <code>Success</code> </p> </li>
    /// <li> <p> <code>Cancelled</code> </p> </li>
    /// <li> <p> <code>Failed</code> </p> </li>
    /// <li> <p> <code>TimedOut</code> (this includes both Delivery and Execution time outs) </p> </li>
    /// <li> <p> <code>AccessDenied</code> </p> </li>
    /// <li> <p> <code>DeliveryTimedOut</code> </p> </li>
    /// <li> <p> <code>ExecutionTimedOut</code> </p> </li>
    /// <li> <p> <code>Undeliverable</code> </p> </li>
    /// <li> <p> <code>InvalidPlatform</code> </p> </li>
    /// <li> <p> <code>Terminated</code> </p> </li>
    /// </ul> </li>
    /// <li> <p> <b>DocumentName</b>: Specify name of the Amazon Web Services Systems Manager document (SSM document) for which you want to see command execution results. For example, specify <code>AWS-RunPatchBaseline</code> to see command executions that used this SSM document to perform security patching operations on managed nodes. </p> </li>
    /// <li> <p> <b>ExecutionStage</b>: Specify one of the following values (<code>ListCommands</code> operations only):</p>
    /// <ul>
    /// <li> <p> <code>Executing</code>: Returns a list of command executions that are currently still running.</p> </li>
    /// <li> <p> <code>Complete</code>: Returns a list of command executions that have already completed. </p> </li>
    /// </ul> </li>
    /// </ul>
    pub fn value(mut self, input: impl Into<std::string::String>) -> Self {
        self.value = Some(input.into());
        self
    }
    /// <p>The filter value. Valid values for each filter key are as follows:</p>
    /// <ul>
    /// <li> <p> <b>InvokedAfter</b>: Specify a timestamp to limit your results. For example, specify <code>2021-07-07T00:00:00Z</code> to see a list of command executions occurring July 7, 2021, and later.</p> </li>
    /// <li> <p> <b>InvokedBefore</b>: Specify a timestamp to limit your results. For example, specify <code>2021-07-07T00:00:00Z</code> to see a list of command executions from before July 7, 2021.</p> </li>
    /// <li> <p> <b>Status</b>: Specify a valid command status to see a list of all command executions with that status. The status choices depend on the API you call.</p> <p>The status values you can specify for <code>ListCommands</code> are:</p>
    /// <ul>
    /// <li> <p> <code>Pending</code> </p> </li>
    /// <li> <p> <code>InProgress</code> </p> </li>
    /// <li> <p> <code>Success</code> </p> </li>
    /// <li> <p> <code>Cancelled</code> </p> </li>
    /// <li> <p> <code>Failed</code> </p> </li>
    /// <li> <p> <code>TimedOut</code> (this includes both Delivery and Execution time outs) </p> </li>
    /// <li> <p> <code>AccessDenied</code> </p> </li>
    /// <li> <p> <code>DeliveryTimedOut</code> </p> </li>
    /// <li> <p> <code>ExecutionTimedOut</code> </p> </li>
    /// <li> <p> <code>Incomplete</code> </p> </li>
    /// <li> <p> <code>NoInstancesInTag</code> </p> </li>
    /// <li> <p> <code>LimitExceeded</code> </p> </li>
    /// </ul> <p>The status values you can specify for <code>ListCommandInvocations</code> are:</p>
    /// <ul>
    /// <li> <p> <code>Pending</code> </p> </li>
    /// <li> <p> <code>InProgress</code> </p> </li>
    /// <li> <p> <code>Delayed</code> </p> </li>
    /// <li> <p> <code>Success</code> </p> </li>
    /// <li> <p> <code>Cancelled</code> </p> </li>
    /// <li> <p> <code>Failed</code> </p> </li>
    /// <li> <p> <code>TimedOut</code> (this includes both Delivery and Execution time outs) </p> </li>
    /// <li> <p> <code>AccessDenied</code> </p> </li>
    /// <li> <p> <code>DeliveryTimedOut</code> </p> </li>
    /// <li> <p> <code>ExecutionTimedOut</code> </p> </li>
    /// <li> <p> <code>Undeliverable</code> </p> </li>
    /// <li> <p> <code>InvalidPlatform</code> </p> </li>
    /// <li> <p> <code>Terminated</code> </p> </li>
    /// </ul> </li>
    /// <li> <p> <b>DocumentName</b>: Specify name of the Amazon Web Services Systems Manager document (SSM document) for which you want to see command execution results. For example, specify <code>AWS-RunPatchBaseline</code> to see command executions that used this SSM document to perform security patching operations on managed nodes. </p> </li>
    /// <li> <p> <b>ExecutionStage</b>: Specify one of the following values (<code>ListCommands</code> operations only):</p>
    /// <ul>
    /// <li> <p> <code>Executing</code>: Returns a list of command executions that are currently still running.</p> </li>
    /// <li> <p> <code>Complete</code>: Returns a list of command executions that have already completed. </p> </li>
    /// </ul> </li>
    /// </ul>
    pub fn set_value(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.value = input;
        self
    }
    /// Consumes the builder and constructs a [`CommandFilter`](crate::types::CommandFilter).
    pub fn build(self) -> crate::types::CommandFilter {
        crate::types::CommandFilter {
            key: self.key,
            value: self.value,
        }
    }
}
