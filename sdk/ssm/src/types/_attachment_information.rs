// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>An attribute of an attachment, such as the attachment name.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AttachmentInformation {
    /// <p>The name of the attachment.</p>
    #[doc(hidden)]
    pub name: std::option::Option<std::string::String>,
}
impl AttachmentInformation {
    /// <p>The name of the attachment.</p>
    pub fn name(&self) -> std::option::Option<&str> {
        self.name.as_deref()
    }
}
impl AttachmentInformation {
    /// Creates a new builder-style object to manufacture [`AttachmentInformation`](crate::types::AttachmentInformation).
    pub fn builder() -> crate::types::builders::AttachmentInformationBuilder {
        crate::types::builders::AttachmentInformationBuilder::default()
    }
}

/// A builder for [`AttachmentInformation`](crate::types::AttachmentInformation).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AttachmentInformationBuilder {
    pub(crate) name: std::option::Option<std::string::String>,
}
impl AttachmentInformationBuilder {
    /// <p>The name of the attachment.</p>
    pub fn name(mut self, input: impl Into<std::string::String>) -> Self {
        self.name = Some(input.into());
        self
    }
    /// <p>The name of the attachment.</p>
    pub fn set_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// Consumes the builder and constructs a [`AttachmentInformation`](crate::types::AttachmentInformation).
    pub fn build(self) -> crate::types::AttachmentInformation {
        crate::types::AttachmentInformation { name: self.name }
    }
}
