// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about a document approval review.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DocumentReviews {
    /// <p>The action to take on a document approval review request.</p>
    #[doc(hidden)]
    pub action: std::option::Option<crate::types::DocumentReviewAction>,
    /// <p>A comment entered by a user in your organization about the document review request.</p>
    #[doc(hidden)]
    pub comment: std::option::Option<std::vec::Vec<crate::types::DocumentReviewCommentSource>>,
}
impl DocumentReviews {
    /// <p>The action to take on a document approval review request.</p>
    pub fn action(&self) -> std::option::Option<&crate::types::DocumentReviewAction> {
        self.action.as_ref()
    }
    /// <p>A comment entered by a user in your organization about the document review request.</p>
    pub fn comment(&self) -> std::option::Option<&[crate::types::DocumentReviewCommentSource]> {
        self.comment.as_deref()
    }
}
impl DocumentReviews {
    /// Creates a new builder-style object to manufacture [`DocumentReviews`](crate::types::DocumentReviews).
    pub fn builder() -> crate::types::builders::DocumentReviewsBuilder {
        crate::types::builders::DocumentReviewsBuilder::default()
    }
}

/// A builder for [`DocumentReviews`](crate::types::DocumentReviews).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DocumentReviewsBuilder {
    pub(crate) action: std::option::Option<crate::types::DocumentReviewAction>,
    pub(crate) comment:
        std::option::Option<std::vec::Vec<crate::types::DocumentReviewCommentSource>>,
}
impl DocumentReviewsBuilder {
    /// <p>The action to take on a document approval review request.</p>
    pub fn action(mut self, input: crate::types::DocumentReviewAction) -> Self {
        self.action = Some(input);
        self
    }
    /// <p>The action to take on a document approval review request.</p>
    pub fn set_action(
        mut self,
        input: std::option::Option<crate::types::DocumentReviewAction>,
    ) -> Self {
        self.action = input;
        self
    }
    /// Appends an item to `comment`.
    ///
    /// To override the contents of this collection use [`set_comment`](Self::set_comment).
    ///
    /// <p>A comment entered by a user in your organization about the document review request.</p>
    pub fn comment(mut self, input: crate::types::DocumentReviewCommentSource) -> Self {
        let mut v = self.comment.unwrap_or_default();
        v.push(input);
        self.comment = Some(v);
        self
    }
    /// <p>A comment entered by a user in your organization about the document review request.</p>
    pub fn set_comment(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::DocumentReviewCommentSource>>,
    ) -> Self {
        self.comment = input;
        self
    }
    /// Consumes the builder and constructs a [`DocumentReviews`](crate::types::DocumentReviews).
    pub fn build(self) -> crate::types::DocumentReviews {
        crate::types::DocumentReviews {
            action: self.action,
            comment: self.comment,
        }
    }
}
