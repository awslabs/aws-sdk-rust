// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about a reviewer's response to a document review request.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DocumentReviewerResponseSource {
    /// <p>The date and time that a reviewer entered a response to a document review request.</p>
    pub create_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>The date and time that a reviewer last updated a response to a document review request.</p>
    pub updated_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>The current review status of a new custom SSM document created by a member of your organization, or of the latest version of an existing SSM document.</p>
    /// <p>Only one version of a document can be in the APPROVED state at a time. When a new version is approved, the status of the previous version changes to REJECTED.</p>
    /// <p>Only one version of a document can be in review, or PENDING, at a time.</p>
    pub review_status: ::std::option::Option<crate::types::ReviewStatus>,
    /// <p>The comment entered by a reviewer as part of their document review response.</p>
    pub comment: ::std::option::Option<::std::vec::Vec<crate::types::DocumentReviewCommentSource>>,
    /// <p>The user in your organization assigned to review a document request.</p>
    pub reviewer: ::std::option::Option<::std::string::String>,
}
impl DocumentReviewerResponseSource {
    /// <p>The date and time that a reviewer entered a response to a document review request.</p>
    pub fn create_time(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.create_time.as_ref()
    }
    /// <p>The date and time that a reviewer last updated a response to a document review request.</p>
    pub fn updated_time(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.updated_time.as_ref()
    }
    /// <p>The current review status of a new custom SSM document created by a member of your organization, or of the latest version of an existing SSM document.</p>
    /// <p>Only one version of a document can be in the APPROVED state at a time. When a new version is approved, the status of the previous version changes to REJECTED.</p>
    /// <p>Only one version of a document can be in review, or PENDING, at a time.</p>
    pub fn review_status(&self) -> ::std::option::Option<&crate::types::ReviewStatus> {
        self.review_status.as_ref()
    }
    /// <p>The comment entered by a reviewer as part of their document review response.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.comment.is_none()`.
    pub fn comment(&self) -> &[crate::types::DocumentReviewCommentSource] {
        self.comment.as_deref().unwrap_or_default()
    }
    /// <p>The user in your organization assigned to review a document request.</p>
    pub fn reviewer(&self) -> ::std::option::Option<&str> {
        self.reviewer.as_deref()
    }
}
impl DocumentReviewerResponseSource {
    /// Creates a new builder-style object to manufacture [`DocumentReviewerResponseSource`](crate::types::DocumentReviewerResponseSource).
    pub fn builder() -> crate::types::builders::DocumentReviewerResponseSourceBuilder {
        crate::types::builders::DocumentReviewerResponseSourceBuilder::default()
    }
}

/// A builder for [`DocumentReviewerResponseSource`](crate::types::DocumentReviewerResponseSource).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DocumentReviewerResponseSourceBuilder {
    pub(crate) create_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) updated_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) review_status: ::std::option::Option<crate::types::ReviewStatus>,
    pub(crate) comment: ::std::option::Option<::std::vec::Vec<crate::types::DocumentReviewCommentSource>>,
    pub(crate) reviewer: ::std::option::Option<::std::string::String>,
}
impl DocumentReviewerResponseSourceBuilder {
    /// <p>The date and time that a reviewer entered a response to a document review request.</p>
    pub fn create_time(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.create_time = ::std::option::Option::Some(input);
        self
    }
    /// <p>The date and time that a reviewer entered a response to a document review request.</p>
    pub fn set_create_time(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.create_time = input;
        self
    }
    /// <p>The date and time that a reviewer entered a response to a document review request.</p>
    pub fn get_create_time(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.create_time
    }
    /// <p>The date and time that a reviewer last updated a response to a document review request.</p>
    pub fn updated_time(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.updated_time = ::std::option::Option::Some(input);
        self
    }
    /// <p>The date and time that a reviewer last updated a response to a document review request.</p>
    pub fn set_updated_time(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.updated_time = input;
        self
    }
    /// <p>The date and time that a reviewer last updated a response to a document review request.</p>
    pub fn get_updated_time(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.updated_time
    }
    /// <p>The current review status of a new custom SSM document created by a member of your organization, or of the latest version of an existing SSM document.</p>
    /// <p>Only one version of a document can be in the APPROVED state at a time. When a new version is approved, the status of the previous version changes to REJECTED.</p>
    /// <p>Only one version of a document can be in review, or PENDING, at a time.</p>
    pub fn review_status(mut self, input: crate::types::ReviewStatus) -> Self {
        self.review_status = ::std::option::Option::Some(input);
        self
    }
    /// <p>The current review status of a new custom SSM document created by a member of your organization, or of the latest version of an existing SSM document.</p>
    /// <p>Only one version of a document can be in the APPROVED state at a time. When a new version is approved, the status of the previous version changes to REJECTED.</p>
    /// <p>Only one version of a document can be in review, or PENDING, at a time.</p>
    pub fn set_review_status(mut self, input: ::std::option::Option<crate::types::ReviewStatus>) -> Self {
        self.review_status = input;
        self
    }
    /// <p>The current review status of a new custom SSM document created by a member of your organization, or of the latest version of an existing SSM document.</p>
    /// <p>Only one version of a document can be in the APPROVED state at a time. When a new version is approved, the status of the previous version changes to REJECTED.</p>
    /// <p>Only one version of a document can be in review, or PENDING, at a time.</p>
    pub fn get_review_status(&self) -> &::std::option::Option<crate::types::ReviewStatus> {
        &self.review_status
    }
    /// Appends an item to `comment`.
    ///
    /// To override the contents of this collection use [`set_comment`](Self::set_comment).
    ///
    /// <p>The comment entered by a reviewer as part of their document review response.</p>
    pub fn comment(mut self, input: crate::types::DocumentReviewCommentSource) -> Self {
        let mut v = self.comment.unwrap_or_default();
        v.push(input);
        self.comment = ::std::option::Option::Some(v);
        self
    }
    /// <p>The comment entered by a reviewer as part of their document review response.</p>
    pub fn set_comment(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::DocumentReviewCommentSource>>) -> Self {
        self.comment = input;
        self
    }
    /// <p>The comment entered by a reviewer as part of their document review response.</p>
    pub fn get_comment(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::DocumentReviewCommentSource>> {
        &self.comment
    }
    /// <p>The user in your organization assigned to review a document request.</p>
    pub fn reviewer(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.reviewer = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The user in your organization assigned to review a document request.</p>
    pub fn set_reviewer(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.reviewer = input;
        self
    }
    /// <p>The user in your organization assigned to review a document request.</p>
    pub fn get_reviewer(&self) -> &::std::option::Option<::std::string::String> {
        &self.reviewer
    }
    /// Consumes the builder and constructs a [`DocumentReviewerResponseSource`](crate::types::DocumentReviewerResponseSource).
    pub fn build(self) -> crate::types::DocumentReviewerResponseSource {
        crate::types::DocumentReviewerResponseSource {
            create_time: self.create_time,
            updated_time: self.updated_time,
            review_status: self.review_status,
            comment: self.comment,
            reviewer: self.reviewer,
        }
    }
}
