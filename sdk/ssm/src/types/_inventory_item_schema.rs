// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The inventory item schema definition. Users can use this to compose inventory query filters.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct InventoryItemSchema {
    /// <p>The name of the inventory type. Default inventory item type names start with Amazon Web Services. Custom inventory type names will start with Custom. Default inventory item types include the following: <code>AWS:AWSComponent</code>, <code>AWS:Application</code>, <code>AWS:InstanceInformation</code>, <code>AWS:Network</code>, and <code>AWS:WindowsUpdate</code>.</p>
    #[doc(hidden)]
    pub type_name: std::option::Option<std::string::String>,
    /// <p>The schema version for the inventory item.</p>
    #[doc(hidden)]
    pub version: std::option::Option<std::string::String>,
    /// <p>The schema attributes for inventory. This contains data type and attribute name.</p>
    #[doc(hidden)]
    pub attributes: std::option::Option<std::vec::Vec<crate::types::InventoryItemAttribute>>,
    /// <p>The alias name of the inventory type. The alias name is used for display purposes.</p>
    #[doc(hidden)]
    pub display_name: std::option::Option<std::string::String>,
}
impl InventoryItemSchema {
    /// <p>The name of the inventory type. Default inventory item type names start with Amazon Web Services. Custom inventory type names will start with Custom. Default inventory item types include the following: <code>AWS:AWSComponent</code>, <code>AWS:Application</code>, <code>AWS:InstanceInformation</code>, <code>AWS:Network</code>, and <code>AWS:WindowsUpdate</code>.</p>
    pub fn type_name(&self) -> std::option::Option<&str> {
        self.type_name.as_deref()
    }
    /// <p>The schema version for the inventory item.</p>
    pub fn version(&self) -> std::option::Option<&str> {
        self.version.as_deref()
    }
    /// <p>The schema attributes for inventory. This contains data type and attribute name.</p>
    pub fn attributes(&self) -> std::option::Option<&[crate::types::InventoryItemAttribute]> {
        self.attributes.as_deref()
    }
    /// <p>The alias name of the inventory type. The alias name is used for display purposes.</p>
    pub fn display_name(&self) -> std::option::Option<&str> {
        self.display_name.as_deref()
    }
}
impl InventoryItemSchema {
    /// Creates a new builder-style object to manufacture [`InventoryItemSchema`](crate::types::InventoryItemSchema).
    pub fn builder() -> crate::types::builders::InventoryItemSchemaBuilder {
        crate::types::builders::InventoryItemSchemaBuilder::default()
    }
}

/// A builder for [`InventoryItemSchema`](crate::types::InventoryItemSchema).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct InventoryItemSchemaBuilder {
    pub(crate) type_name: std::option::Option<std::string::String>,
    pub(crate) version: std::option::Option<std::string::String>,
    pub(crate) attributes: std::option::Option<std::vec::Vec<crate::types::InventoryItemAttribute>>,
    pub(crate) display_name: std::option::Option<std::string::String>,
}
impl InventoryItemSchemaBuilder {
    /// <p>The name of the inventory type. Default inventory item type names start with Amazon Web Services. Custom inventory type names will start with Custom. Default inventory item types include the following: <code>AWS:AWSComponent</code>, <code>AWS:Application</code>, <code>AWS:InstanceInformation</code>, <code>AWS:Network</code>, and <code>AWS:WindowsUpdate</code>.</p>
    pub fn type_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.type_name = Some(input.into());
        self
    }
    /// <p>The name of the inventory type. Default inventory item type names start with Amazon Web Services. Custom inventory type names will start with Custom. Default inventory item types include the following: <code>AWS:AWSComponent</code>, <code>AWS:Application</code>, <code>AWS:InstanceInformation</code>, <code>AWS:Network</code>, and <code>AWS:WindowsUpdate</code>.</p>
    pub fn set_type_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.type_name = input;
        self
    }
    /// <p>The schema version for the inventory item.</p>
    pub fn version(mut self, input: impl Into<std::string::String>) -> Self {
        self.version = Some(input.into());
        self
    }
    /// <p>The schema version for the inventory item.</p>
    pub fn set_version(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.version = input;
        self
    }
    /// Appends an item to `attributes`.
    ///
    /// To override the contents of this collection use [`set_attributes`](Self::set_attributes).
    ///
    /// <p>The schema attributes for inventory. This contains data type and attribute name.</p>
    pub fn attributes(mut self, input: crate::types::InventoryItemAttribute) -> Self {
        let mut v = self.attributes.unwrap_or_default();
        v.push(input);
        self.attributes = Some(v);
        self
    }
    /// <p>The schema attributes for inventory. This contains data type and attribute name.</p>
    pub fn set_attributes(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::InventoryItemAttribute>>,
    ) -> Self {
        self.attributes = input;
        self
    }
    /// <p>The alias name of the inventory type. The alias name is used for display purposes.</p>
    pub fn display_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.display_name = Some(input.into());
        self
    }
    /// <p>The alias name of the inventory type. The alias name is used for display purposes.</p>
    pub fn set_display_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.display_name = input;
        self
    }
    /// Consumes the builder and constructs a [`InventoryItemSchema`](crate::types::InventoryItemSchema).
    pub fn build(self) -> crate::types::InventoryItemSchema {
        crate::types::InventoryItemSchema {
            type_name: self.type_name,
            version: self.version,
            attributes: self.attributes,
            display_name: self.display_name,
        }
    }
}
