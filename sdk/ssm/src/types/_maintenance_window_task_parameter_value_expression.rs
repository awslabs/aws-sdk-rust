// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Defines the values for a task parameter.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq)]
pub struct MaintenanceWindowTaskParameterValueExpression {
    /// <p>This field contains an array of 0 or more strings, each 1 to 255 characters in length.</p>
    pub values: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
}
impl MaintenanceWindowTaskParameterValueExpression {
    /// <p>This field contains an array of 0 or more strings, each 1 to 255 characters in length.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.values.is_none()`.
    pub fn values(&self) -> &[::std::string::String] {
        self.values.as_deref().unwrap_or_default()
    }
}
impl ::std::fmt::Debug for MaintenanceWindowTaskParameterValueExpression {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("MaintenanceWindowTaskParameterValueExpression");
        formatter.field("values", &"*** Sensitive Data Redacted ***");
        formatter.finish()
    }
}
impl MaintenanceWindowTaskParameterValueExpression {
    /// Creates a new builder-style object to manufacture [`MaintenanceWindowTaskParameterValueExpression`](crate::types::MaintenanceWindowTaskParameterValueExpression).
    pub fn builder() -> crate::types::builders::MaintenanceWindowTaskParameterValueExpressionBuilder {
        crate::types::builders::MaintenanceWindowTaskParameterValueExpressionBuilder::default()
    }
}

/// A builder for [`MaintenanceWindowTaskParameterValueExpression`](crate::types::MaintenanceWindowTaskParameterValueExpression).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default)]
pub struct MaintenanceWindowTaskParameterValueExpressionBuilder {
    pub(crate) values: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
}
impl MaintenanceWindowTaskParameterValueExpressionBuilder {
    /// Appends an item to `values`.
    ///
    /// To override the contents of this collection use [`set_values`](Self::set_values).
    ///
    /// <p>This field contains an array of 0 or more strings, each 1 to 255 characters in length.</p>
    pub fn values(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        let mut v = self.values.unwrap_or_default();
        v.push(input.into());
        self.values = ::std::option::Option::Some(v);
        self
    }
    /// <p>This field contains an array of 0 or more strings, each 1 to 255 characters in length.</p>
    pub fn set_values(mut self, input: ::std::option::Option<::std::vec::Vec<::std::string::String>>) -> Self {
        self.values = input;
        self
    }
    /// <p>This field contains an array of 0 or more strings, each 1 to 255 characters in length.</p>
    pub fn get_values(&self) -> &::std::option::Option<::std::vec::Vec<::std::string::String>> {
        &self.values
    }
    /// Consumes the builder and constructs a [`MaintenanceWindowTaskParameterValueExpression`](crate::types::MaintenanceWindowTaskParameterValueExpression).
    pub fn build(self) -> crate::types::MaintenanceWindowTaskParameterValueExpression {
        crate::types::MaintenanceWindowTaskParameterValueExpression { values: self.values }
    }
}
impl ::std::fmt::Debug for MaintenanceWindowTaskParameterValueExpressionBuilder {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("MaintenanceWindowTaskParameterValueExpressionBuilder");
        formatter.field("values", &"*** Sensitive Data Redacted ***");
        formatter.finish()
    }
}
