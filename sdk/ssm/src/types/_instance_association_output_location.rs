// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>An S3 bucket where you want to store the results of this request.</p>
/// <p>For the minimal permissions required to enable Amazon S3 output for an association, see <a href="https://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-state-assoc.html">Creating associations</a> in the <i>Systems Manager User Guide</i>. </p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct InstanceAssociationOutputLocation {
    /// <p>An S3 bucket where you want to store the results of this request.</p>
    #[doc(hidden)]
    pub s3_location: std::option::Option<crate::types::S3OutputLocation>,
}
impl InstanceAssociationOutputLocation {
    /// <p>An S3 bucket where you want to store the results of this request.</p>
    pub fn s3_location(&self) -> std::option::Option<&crate::types::S3OutputLocation> {
        self.s3_location.as_ref()
    }
}
impl InstanceAssociationOutputLocation {
    /// Creates a new builder-style object to manufacture [`InstanceAssociationOutputLocation`](crate::types::InstanceAssociationOutputLocation).
    pub fn builder() -> crate::types::builders::InstanceAssociationOutputLocationBuilder {
        crate::types::builders::InstanceAssociationOutputLocationBuilder::default()
    }
}

/// A builder for [`InstanceAssociationOutputLocation`](crate::types::InstanceAssociationOutputLocation).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct InstanceAssociationOutputLocationBuilder {
    pub(crate) s3_location: std::option::Option<crate::types::S3OutputLocation>,
}
impl InstanceAssociationOutputLocationBuilder {
    /// <p>An S3 bucket where you want to store the results of this request.</p>
    pub fn s3_location(mut self, input: crate::types::S3OutputLocation) -> Self {
        self.s3_location = Some(input);
        self
    }
    /// <p>An S3 bucket where you want to store the results of this request.</p>
    pub fn set_s3_location(
        mut self,
        input: std::option::Option<crate::types::S3OutputLocation>,
    ) -> Self {
        self.s3_location = input;
        self
    }
    /// Consumes the builder and constructs a [`InstanceAssociationOutputLocation`](crate::types::InstanceAssociationOutputLocation).
    pub fn build(self) -> crate::types::InstanceAssociationOutputLocation {
        crate::types::InstanceAssociationOutputLocation {
            s3_location: self.s3_location,
        }
    }
}
