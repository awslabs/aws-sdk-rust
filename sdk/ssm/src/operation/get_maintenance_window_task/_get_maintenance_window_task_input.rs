// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GetMaintenanceWindowTaskInput {
    /// <p>The maintenance window ID that includes the task to retrieve.</p>
    #[doc(hidden)]
    pub window_id: std::option::Option<std::string::String>,
    /// <p>The maintenance window task ID to retrieve.</p>
    #[doc(hidden)]
    pub window_task_id: std::option::Option<std::string::String>,
}
impl GetMaintenanceWindowTaskInput {
    /// <p>The maintenance window ID that includes the task to retrieve.</p>
    pub fn window_id(&self) -> std::option::Option<&str> {
        self.window_id.as_deref()
    }
    /// <p>The maintenance window task ID to retrieve.</p>
    pub fn window_task_id(&self) -> std::option::Option<&str> {
        self.window_task_id.as_deref()
    }
}
impl GetMaintenanceWindowTaskInput {
    /// Creates a new builder-style object to manufacture [`GetMaintenanceWindowTaskInput`](crate::operation::get_maintenance_window_task::GetMaintenanceWindowTaskInput).
    pub fn builder(
    ) -> crate::operation::get_maintenance_window_task::builders::GetMaintenanceWindowTaskInputBuilder
    {
        crate::operation::get_maintenance_window_task::builders::GetMaintenanceWindowTaskInputBuilder::default()
    }
}

/// A builder for [`GetMaintenanceWindowTaskInput`](crate::operation::get_maintenance_window_task::GetMaintenanceWindowTaskInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct GetMaintenanceWindowTaskInputBuilder {
    pub(crate) window_id: std::option::Option<std::string::String>,
    pub(crate) window_task_id: std::option::Option<std::string::String>,
}
impl GetMaintenanceWindowTaskInputBuilder {
    /// <p>The maintenance window ID that includes the task to retrieve.</p>
    pub fn window_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.window_id = Some(input.into());
        self
    }
    /// <p>The maintenance window ID that includes the task to retrieve.</p>
    pub fn set_window_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.window_id = input;
        self
    }
    /// <p>The maintenance window task ID to retrieve.</p>
    pub fn window_task_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.window_task_id = Some(input.into());
        self
    }
    /// <p>The maintenance window task ID to retrieve.</p>
    pub fn set_window_task_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.window_task_id = input;
        self
    }
    /// Consumes the builder and constructs a [`GetMaintenanceWindowTaskInput`](crate::operation::get_maintenance_window_task::GetMaintenanceWindowTaskInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::get_maintenance_window_task::GetMaintenanceWindowTaskInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::get_maintenance_window_task::GetMaintenanceWindowTaskInput {
                window_id: self.window_id,
                window_task_id: self.window_task_id,
            },
        )
    }
}
