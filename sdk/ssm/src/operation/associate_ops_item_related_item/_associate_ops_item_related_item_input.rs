// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AssociateOpsItemRelatedItemInput {
    /// <p>The ID of the OpsItem to which you want to associate a resource as a related item.</p>
    #[doc(hidden)]
    pub ops_item_id: std::option::Option<std::string::String>,
    /// <p>The type of association that you want to create between an OpsItem and a resource. OpsCenter supports <code>IsParentOf</code> and <code>RelatesTo</code> association types.</p>
    #[doc(hidden)]
    pub association_type: std::option::Option<std::string::String>,
    /// <p>The type of resource that you want to associate with an OpsItem. OpsCenter supports the following types:</p>
    /// <p> <code>AWS::SSMIncidents::IncidentRecord</code>: an Incident Manager incident. </p>
    /// <p> <code>AWS::SSM::Document</code>: a Systems Manager (SSM) document.</p>
    #[doc(hidden)]
    pub resource_type: std::option::Option<std::string::String>,
    /// <p>The Amazon Resource Name (ARN) of the Amazon Web Services resource that you want to associate with the OpsItem.</p>
    #[doc(hidden)]
    pub resource_uri: std::option::Option<std::string::String>,
}
impl AssociateOpsItemRelatedItemInput {
    /// <p>The ID of the OpsItem to which you want to associate a resource as a related item.</p>
    pub fn ops_item_id(&self) -> std::option::Option<&str> {
        self.ops_item_id.as_deref()
    }
    /// <p>The type of association that you want to create between an OpsItem and a resource. OpsCenter supports <code>IsParentOf</code> and <code>RelatesTo</code> association types.</p>
    pub fn association_type(&self) -> std::option::Option<&str> {
        self.association_type.as_deref()
    }
    /// <p>The type of resource that you want to associate with an OpsItem. OpsCenter supports the following types:</p>
    /// <p> <code>AWS::SSMIncidents::IncidentRecord</code>: an Incident Manager incident. </p>
    /// <p> <code>AWS::SSM::Document</code>: a Systems Manager (SSM) document.</p>
    pub fn resource_type(&self) -> std::option::Option<&str> {
        self.resource_type.as_deref()
    }
    /// <p>The Amazon Resource Name (ARN) of the Amazon Web Services resource that you want to associate with the OpsItem.</p>
    pub fn resource_uri(&self) -> std::option::Option<&str> {
        self.resource_uri.as_deref()
    }
}
impl AssociateOpsItemRelatedItemInput {
    /// Creates a new builder-style object to manufacture [`AssociateOpsItemRelatedItemInput`](crate::operation::associate_ops_item_related_item::AssociateOpsItemRelatedItemInput).
    pub fn builder() -> crate::operation::associate_ops_item_related_item::builders::AssociateOpsItemRelatedItemInputBuilder{
        crate::operation::associate_ops_item_related_item::builders::AssociateOpsItemRelatedItemInputBuilder::default()
    }
}

/// A builder for [`AssociateOpsItemRelatedItemInput`](crate::operation::associate_ops_item_related_item::AssociateOpsItemRelatedItemInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AssociateOpsItemRelatedItemInputBuilder {
    pub(crate) ops_item_id: std::option::Option<std::string::String>,
    pub(crate) association_type: std::option::Option<std::string::String>,
    pub(crate) resource_type: std::option::Option<std::string::String>,
    pub(crate) resource_uri: std::option::Option<std::string::String>,
}
impl AssociateOpsItemRelatedItemInputBuilder {
    /// <p>The ID of the OpsItem to which you want to associate a resource as a related item.</p>
    pub fn ops_item_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.ops_item_id = Some(input.into());
        self
    }
    /// <p>The ID of the OpsItem to which you want to associate a resource as a related item.</p>
    pub fn set_ops_item_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.ops_item_id = input;
        self
    }
    /// <p>The type of association that you want to create between an OpsItem and a resource. OpsCenter supports <code>IsParentOf</code> and <code>RelatesTo</code> association types.</p>
    pub fn association_type(mut self, input: impl Into<std::string::String>) -> Self {
        self.association_type = Some(input.into());
        self
    }
    /// <p>The type of association that you want to create between an OpsItem and a resource. OpsCenter supports <code>IsParentOf</code> and <code>RelatesTo</code> association types.</p>
    pub fn set_association_type(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.association_type = input;
        self
    }
    /// <p>The type of resource that you want to associate with an OpsItem. OpsCenter supports the following types:</p>
    /// <p> <code>AWS::SSMIncidents::IncidentRecord</code>: an Incident Manager incident. </p>
    /// <p> <code>AWS::SSM::Document</code>: a Systems Manager (SSM) document.</p>
    pub fn resource_type(mut self, input: impl Into<std::string::String>) -> Self {
        self.resource_type = Some(input.into());
        self
    }
    /// <p>The type of resource that you want to associate with an OpsItem. OpsCenter supports the following types:</p>
    /// <p> <code>AWS::SSMIncidents::IncidentRecord</code>: an Incident Manager incident. </p>
    /// <p> <code>AWS::SSM::Document</code>: a Systems Manager (SSM) document.</p>
    pub fn set_resource_type(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.resource_type = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the Amazon Web Services resource that you want to associate with the OpsItem.</p>
    pub fn resource_uri(mut self, input: impl Into<std::string::String>) -> Self {
        self.resource_uri = Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the Amazon Web Services resource that you want to associate with the OpsItem.</p>
    pub fn set_resource_uri(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.resource_uri = input;
        self
    }
    /// Consumes the builder and constructs a [`AssociateOpsItemRelatedItemInput`](crate::operation::associate_ops_item_related_item::AssociateOpsItemRelatedItemInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::associate_ops_item_related_item::AssociateOpsItemRelatedItemInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::associate_ops_item_related_item::AssociateOpsItemRelatedItemInput {
                ops_item_id: self.ops_item_id,
                association_type: self.association_type,
                resource_type: self.resource_type,
                resource_uri: self.resource_uri,
            },
        )
    }
}
