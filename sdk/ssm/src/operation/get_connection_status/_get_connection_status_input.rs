// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GetConnectionStatusInput {
    /// <p>The managed node ID.</p>
    pub target: ::std::option::Option<::std::string::String>,
}
impl GetConnectionStatusInput {
    /// <p>The managed node ID.</p>
    pub fn target(&self) -> ::std::option::Option<&str> {
        self.target.as_deref()
    }
}
impl GetConnectionStatusInput {
    /// Creates a new builder-style object to manufacture [`GetConnectionStatusInput`](crate::operation::get_connection_status::GetConnectionStatusInput).
    pub fn builder() -> crate::operation::get_connection_status::builders::GetConnectionStatusInputBuilder {
        crate::operation::get_connection_status::builders::GetConnectionStatusInputBuilder::default()
    }
}

/// A builder for [`GetConnectionStatusInput`](crate::operation::get_connection_status::GetConnectionStatusInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct GetConnectionStatusInputBuilder {
    pub(crate) target: ::std::option::Option<::std::string::String>,
}
impl GetConnectionStatusInputBuilder {
    /// <p>The managed node ID.</p>
    /// This field is required.
    pub fn target(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.target = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The managed node ID.</p>
    pub fn set_target(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.target = input;
        self
    }
    /// <p>The managed node ID.</p>
    pub fn get_target(&self) -> &::std::option::Option<::std::string::String> {
        &self.target
    }
    /// Consumes the builder and constructs a [`GetConnectionStatusInput`](crate::operation::get_connection_status::GetConnectionStatusInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::get_connection_status::GetConnectionStatusInput, ::aws_smithy_types::error::operation::BuildError>
    {
        ::std::result::Result::Ok(crate::operation::get_connection_status::GetConnectionStatusInput { target: self.target })
    }
}
