// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DeleteResourceDataSyncInput {
    /// <p>The name of the configuration to delete.</p>
    pub sync_name: ::std::option::Option<::std::string::String>,
    /// <p>Specify the type of resource data sync to delete.</p>
    pub sync_type: ::std::option::Option<::std::string::String>,
}
impl DeleteResourceDataSyncInput {
    /// <p>The name of the configuration to delete.</p>
    pub fn sync_name(&self) -> ::std::option::Option<&str> {
        self.sync_name.as_deref()
    }
    /// <p>Specify the type of resource data sync to delete.</p>
    pub fn sync_type(&self) -> ::std::option::Option<&str> {
        self.sync_type.as_deref()
    }
}
impl DeleteResourceDataSyncInput {
    /// Creates a new builder-style object to manufacture [`DeleteResourceDataSyncInput`](crate::operation::delete_resource_data_sync::DeleteResourceDataSyncInput).
    pub fn builder() -> crate::operation::delete_resource_data_sync::builders::DeleteResourceDataSyncInputBuilder {
        crate::operation::delete_resource_data_sync::builders::DeleteResourceDataSyncInputBuilder::default()
    }
}

/// A builder for [`DeleteResourceDataSyncInput`](crate::operation::delete_resource_data_sync::DeleteResourceDataSyncInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DeleteResourceDataSyncInputBuilder {
    pub(crate) sync_name: ::std::option::Option<::std::string::String>,
    pub(crate) sync_type: ::std::option::Option<::std::string::String>,
}
impl DeleteResourceDataSyncInputBuilder {
    /// <p>The name of the configuration to delete.</p>
    /// This field is required.
    pub fn sync_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.sync_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the configuration to delete.</p>
    pub fn set_sync_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.sync_name = input;
        self
    }
    /// <p>The name of the configuration to delete.</p>
    pub fn get_sync_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.sync_name
    }
    /// <p>Specify the type of resource data sync to delete.</p>
    pub fn sync_type(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.sync_type = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Specify the type of resource data sync to delete.</p>
    pub fn set_sync_type(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.sync_type = input;
        self
    }
    /// <p>Specify the type of resource data sync to delete.</p>
    pub fn get_sync_type(&self) -> &::std::option::Option<::std::string::String> {
        &self.sync_type
    }
    /// Consumes the builder and constructs a [`DeleteResourceDataSyncInput`](crate::operation::delete_resource_data_sync::DeleteResourceDataSyncInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::delete_resource_data_sync::DeleteResourceDataSyncInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::delete_resource_data_sync::DeleteResourceDataSyncInput {
            sync_name: self.sync_name,
            sync_type: self.sync_type,
        })
    }
}
