// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ListResourceComplianceSummariesOutput {
    /// <p>A summary count for specified or targeted managed nodes. Summary count includes information about compliant and non-compliant State Manager associations, patch status, or custom items according to the filter criteria that you specify. </p>
    #[doc(hidden)]
    pub resource_compliance_summary_items:
        std::option::Option<std::vec::Vec<crate::types::ResourceComplianceSummaryItem>>,
    /// <p>The token for the next set of items to return. Use this token to get the next set of results.</p>
    #[doc(hidden)]
    pub next_token: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl ListResourceComplianceSummariesOutput {
    /// <p>A summary count for specified or targeted managed nodes. Summary count includes information about compliant and non-compliant State Manager associations, patch status, or custom items according to the filter criteria that you specify. </p>
    pub fn resource_compliance_summary_items(
        &self,
    ) -> std::option::Option<&[crate::types::ResourceComplianceSummaryItem]> {
        self.resource_compliance_summary_items.as_deref()
    }
    /// <p>The token for the next set of items to return. Use this token to get the next set of results.</p>
    pub fn next_token(&self) -> std::option::Option<&str> {
        self.next_token.as_deref()
    }
}
impl aws_http::request_id::RequestId for ListResourceComplianceSummariesOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl ListResourceComplianceSummariesOutput {
    /// Creates a new builder-style object to manufacture [`ListResourceComplianceSummariesOutput`](crate::operation::list_resource_compliance_summaries::ListResourceComplianceSummariesOutput).
    pub fn builder() -> crate::operation::list_resource_compliance_summaries::builders::ListResourceComplianceSummariesOutputBuilder{
        crate::operation::list_resource_compliance_summaries::builders::ListResourceComplianceSummariesOutputBuilder::default()
    }
}

/// A builder for [`ListResourceComplianceSummariesOutput`](crate::operation::list_resource_compliance_summaries::ListResourceComplianceSummariesOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ListResourceComplianceSummariesOutputBuilder {
    pub(crate) resource_compliance_summary_items:
        std::option::Option<std::vec::Vec<crate::types::ResourceComplianceSummaryItem>>,
    pub(crate) next_token: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl ListResourceComplianceSummariesOutputBuilder {
    /// Appends an item to `resource_compliance_summary_items`.
    ///
    /// To override the contents of this collection use [`set_resource_compliance_summary_items`](Self::set_resource_compliance_summary_items).
    ///
    /// <p>A summary count for specified or targeted managed nodes. Summary count includes information about compliant and non-compliant State Manager associations, patch status, or custom items according to the filter criteria that you specify. </p>
    pub fn resource_compliance_summary_items(
        mut self,
        input: crate::types::ResourceComplianceSummaryItem,
    ) -> Self {
        let mut v = self.resource_compliance_summary_items.unwrap_or_default();
        v.push(input);
        self.resource_compliance_summary_items = Some(v);
        self
    }
    /// <p>A summary count for specified or targeted managed nodes. Summary count includes information about compliant and non-compliant State Manager associations, patch status, or custom items according to the filter criteria that you specify. </p>
    pub fn set_resource_compliance_summary_items(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::ResourceComplianceSummaryItem>>,
    ) -> Self {
        self.resource_compliance_summary_items = input;
        self
    }
    /// <p>The token for the next set of items to return. Use this token to get the next set of results.</p>
    pub fn next_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.next_token = Some(input.into());
        self
    }
    /// <p>The token for the next set of items to return. Use this token to get the next set of results.</p>
    pub fn set_next_token(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`ListResourceComplianceSummariesOutput`](crate::operation::list_resource_compliance_summaries::ListResourceComplianceSummariesOutput).
    pub fn build(
        self,
    ) -> crate::operation::list_resource_compliance_summaries::ListResourceComplianceSummariesOutput
    {
        crate::operation::list_resource_compliance_summaries::ListResourceComplianceSummariesOutput {
            resource_compliance_summary_items: self.resource_compliance_summary_items
            ,
            next_token: self.next_token
            ,
            _request_id: self._request_id,
        }
    }
}
