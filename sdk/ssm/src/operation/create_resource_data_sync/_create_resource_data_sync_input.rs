// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct CreateResourceDataSyncInput {
    /// <p>A name for the configuration.</p>
    #[doc(hidden)]
    pub sync_name: std::option::Option<std::string::String>,
    /// <p>Amazon S3 configuration details for the sync. This parameter is required if the <code>SyncType</code> value is SyncToDestination.</p>
    #[doc(hidden)]
    pub s3_destination: std::option::Option<crate::types::ResourceDataSyncS3Destination>,
    /// <p>Specify <code>SyncToDestination</code> to create a resource data sync that synchronizes data to an S3 bucket for Inventory. If you specify <code>SyncToDestination</code>, you must provide a value for <code>S3Destination</code>. Specify <code>SyncFromSource</code> to synchronize data from a single account and multiple Regions, or multiple Amazon Web Services accounts and Amazon Web Services Regions, as listed in Organizations for Explorer. If you specify <code>SyncFromSource</code>, you must provide a value for <code>SyncSource</code>. The default value is <code>SyncToDestination</code>.</p>
    #[doc(hidden)]
    pub sync_type: std::option::Option<std::string::String>,
    /// <p>Specify information about the data sources to synchronize. This parameter is required if the <code>SyncType</code> value is SyncFromSource.</p>
    #[doc(hidden)]
    pub sync_source: std::option::Option<crate::types::ResourceDataSyncSource>,
}
impl CreateResourceDataSyncInput {
    /// <p>A name for the configuration.</p>
    pub fn sync_name(&self) -> std::option::Option<&str> {
        self.sync_name.as_deref()
    }
    /// <p>Amazon S3 configuration details for the sync. This parameter is required if the <code>SyncType</code> value is SyncToDestination.</p>
    pub fn s3_destination(
        &self,
    ) -> std::option::Option<&crate::types::ResourceDataSyncS3Destination> {
        self.s3_destination.as_ref()
    }
    /// <p>Specify <code>SyncToDestination</code> to create a resource data sync that synchronizes data to an S3 bucket for Inventory. If you specify <code>SyncToDestination</code>, you must provide a value for <code>S3Destination</code>. Specify <code>SyncFromSource</code> to synchronize data from a single account and multiple Regions, or multiple Amazon Web Services accounts and Amazon Web Services Regions, as listed in Organizations for Explorer. If you specify <code>SyncFromSource</code>, you must provide a value for <code>SyncSource</code>. The default value is <code>SyncToDestination</code>.</p>
    pub fn sync_type(&self) -> std::option::Option<&str> {
        self.sync_type.as_deref()
    }
    /// <p>Specify information about the data sources to synchronize. This parameter is required if the <code>SyncType</code> value is SyncFromSource.</p>
    pub fn sync_source(&self) -> std::option::Option<&crate::types::ResourceDataSyncSource> {
        self.sync_source.as_ref()
    }
}
impl CreateResourceDataSyncInput {
    /// Creates a new builder-style object to manufacture [`CreateResourceDataSyncInput`](crate::operation::create_resource_data_sync::CreateResourceDataSyncInput).
    pub fn builder(
    ) -> crate::operation::create_resource_data_sync::builders::CreateResourceDataSyncInputBuilder
    {
        crate::operation::create_resource_data_sync::builders::CreateResourceDataSyncInputBuilder::default()
    }
}

/// A builder for [`CreateResourceDataSyncInput`](crate::operation::create_resource_data_sync::CreateResourceDataSyncInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct CreateResourceDataSyncInputBuilder {
    pub(crate) sync_name: std::option::Option<std::string::String>,
    pub(crate) s3_destination: std::option::Option<crate::types::ResourceDataSyncS3Destination>,
    pub(crate) sync_type: std::option::Option<std::string::String>,
    pub(crate) sync_source: std::option::Option<crate::types::ResourceDataSyncSource>,
}
impl CreateResourceDataSyncInputBuilder {
    /// <p>A name for the configuration.</p>
    pub fn sync_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.sync_name = Some(input.into());
        self
    }
    /// <p>A name for the configuration.</p>
    pub fn set_sync_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.sync_name = input;
        self
    }
    /// <p>Amazon S3 configuration details for the sync. This parameter is required if the <code>SyncType</code> value is SyncToDestination.</p>
    pub fn s3_destination(mut self, input: crate::types::ResourceDataSyncS3Destination) -> Self {
        self.s3_destination = Some(input);
        self
    }
    /// <p>Amazon S3 configuration details for the sync. This parameter is required if the <code>SyncType</code> value is SyncToDestination.</p>
    pub fn set_s3_destination(
        mut self,
        input: std::option::Option<crate::types::ResourceDataSyncS3Destination>,
    ) -> Self {
        self.s3_destination = input;
        self
    }
    /// <p>Specify <code>SyncToDestination</code> to create a resource data sync that synchronizes data to an S3 bucket for Inventory. If you specify <code>SyncToDestination</code>, you must provide a value for <code>S3Destination</code>. Specify <code>SyncFromSource</code> to synchronize data from a single account and multiple Regions, or multiple Amazon Web Services accounts and Amazon Web Services Regions, as listed in Organizations for Explorer. If you specify <code>SyncFromSource</code>, you must provide a value for <code>SyncSource</code>. The default value is <code>SyncToDestination</code>.</p>
    pub fn sync_type(mut self, input: impl Into<std::string::String>) -> Self {
        self.sync_type = Some(input.into());
        self
    }
    /// <p>Specify <code>SyncToDestination</code> to create a resource data sync that synchronizes data to an S3 bucket for Inventory. If you specify <code>SyncToDestination</code>, you must provide a value for <code>S3Destination</code>. Specify <code>SyncFromSource</code> to synchronize data from a single account and multiple Regions, or multiple Amazon Web Services accounts and Amazon Web Services Regions, as listed in Organizations for Explorer. If you specify <code>SyncFromSource</code>, you must provide a value for <code>SyncSource</code>. The default value is <code>SyncToDestination</code>.</p>
    pub fn set_sync_type(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.sync_type = input;
        self
    }
    /// <p>Specify information about the data sources to synchronize. This parameter is required if the <code>SyncType</code> value is SyncFromSource.</p>
    pub fn sync_source(mut self, input: crate::types::ResourceDataSyncSource) -> Self {
        self.sync_source = Some(input);
        self
    }
    /// <p>Specify information about the data sources to synchronize. This parameter is required if the <code>SyncType</code> value is SyncFromSource.</p>
    pub fn set_sync_source(
        mut self,
        input: std::option::Option<crate::types::ResourceDataSyncSource>,
    ) -> Self {
        self.sync_source = input;
        self
    }
    /// Consumes the builder and constructs a [`CreateResourceDataSyncInput`](crate::operation::create_resource_data_sync::CreateResourceDataSyncInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::create_resource_data_sync::CreateResourceDataSyncInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::create_resource_data_sync::CreateResourceDataSyncInput {
                sync_name: self.sync_name,
                s3_destination: self.s3_destination,
                sync_type: self.sync_type,
                sync_source: self.sync_source,
            },
        )
    }
}
