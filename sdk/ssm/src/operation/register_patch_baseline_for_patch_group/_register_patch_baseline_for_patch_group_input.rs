// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct RegisterPatchBaselineForPatchGroupInput {
    /// <p>The ID of the patch baseline to register with the patch group.</p>
    pub baseline_id: ::std::option::Option<::std::string::String>,
    /// <p>The name of the patch group to be registered with the patch baseline.</p>
    pub patch_group: ::std::option::Option<::std::string::String>,
}
impl RegisterPatchBaselineForPatchGroupInput {
    /// <p>The ID of the patch baseline to register with the patch group.</p>
    pub fn baseline_id(&self) -> ::std::option::Option<&str> {
        self.baseline_id.as_deref()
    }
    /// <p>The name of the patch group to be registered with the patch baseline.</p>
    pub fn patch_group(&self) -> ::std::option::Option<&str> {
        self.patch_group.as_deref()
    }
}
impl RegisterPatchBaselineForPatchGroupInput {
    /// Creates a new builder-style object to manufacture [`RegisterPatchBaselineForPatchGroupInput`](crate::operation::register_patch_baseline_for_patch_group::RegisterPatchBaselineForPatchGroupInput).
    pub fn builder() -> crate::operation::register_patch_baseline_for_patch_group::builders::RegisterPatchBaselineForPatchGroupInputBuilder {
        crate::operation::register_patch_baseline_for_patch_group::builders::RegisterPatchBaselineForPatchGroupInputBuilder::default()
    }
}

/// A builder for [`RegisterPatchBaselineForPatchGroupInput`](crate::operation::register_patch_baseline_for_patch_group::RegisterPatchBaselineForPatchGroupInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct RegisterPatchBaselineForPatchGroupInputBuilder {
    pub(crate) baseline_id: ::std::option::Option<::std::string::String>,
    pub(crate) patch_group: ::std::option::Option<::std::string::String>,
}
impl RegisterPatchBaselineForPatchGroupInputBuilder {
    /// <p>The ID of the patch baseline to register with the patch group.</p>
    /// This field is required.
    pub fn baseline_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.baseline_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of the patch baseline to register with the patch group.</p>
    pub fn set_baseline_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.baseline_id = input;
        self
    }
    /// <p>The ID of the patch baseline to register with the patch group.</p>
    pub fn get_baseline_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.baseline_id
    }
    /// <p>The name of the patch group to be registered with the patch baseline.</p>
    /// This field is required.
    pub fn patch_group(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.patch_group = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the patch group to be registered with the patch baseline.</p>
    pub fn set_patch_group(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.patch_group = input;
        self
    }
    /// <p>The name of the patch group to be registered with the patch baseline.</p>
    pub fn get_patch_group(&self) -> &::std::option::Option<::std::string::String> {
        &self.patch_group
    }
    /// Consumes the builder and constructs a [`RegisterPatchBaselineForPatchGroupInput`](crate::operation::register_patch_baseline_for_patch_group::RegisterPatchBaselineForPatchGroupInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::register_patch_baseline_for_patch_group::RegisterPatchBaselineForPatchGroupInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(
            crate::operation::register_patch_baseline_for_patch_group::RegisterPatchBaselineForPatchGroupInput {
                baseline_id: self.baseline_id,
                patch_group: self.patch_group,
            },
        )
    }
}
