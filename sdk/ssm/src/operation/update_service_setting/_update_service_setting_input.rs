// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The request body of the UpdateServiceSetting API operation.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct UpdateServiceSettingInput {
    /// <p>The Amazon Resource Name (ARN) of the service setting to update. For example, <code>arn:aws:ssm:us-east-1:111122223333:servicesetting/ssm/parameter-store/high-throughput-enabled</code>. The setting ID can be one of the following.</p>
    /// <ul>
    /// <li> <p> <code>/ssm/managed-instance/default-ec2-instance-management-role</code> </p> </li>
    /// <li> <p> <code>/ssm/automation/customer-script-log-destination</code> </p> </li>
    /// <li> <p> <code>/ssm/automation/customer-script-log-group-name</code> </p> </li>
    /// <li> <p> <code>/ssm/documents/console/public-sharing-permission</code> </p> </li>
    /// <li> <p> <code>/ssm/managed-instance/activation-tier</code> </p> </li>
    /// <li> <p> <code>/ssm/opsinsights/opscenter</code> </p> </li>
    /// <li> <p> <code>/ssm/parameter-store/default-parameter-tier</code> </p> </li>
    /// <li> <p> <code>/ssm/parameter-store/high-throughput-enabled</code> </p> </li>
    /// </ul> <note>
    /// <p>Permissions to update the <code>/ssm/managed-instance/default-ec2-instance-management-role</code> setting should only be provided to administrators. Implement least privilege access when allowing individuals to configure or modify the Default Host Management Configuration.</p>
    /// </note>
    pub setting_id: ::std::option::Option<::std::string::String>,
    /// <p>The new value to specify for the service setting. The following list specifies the available values for each setting.</p>
    /// <ul>
    /// <li> <p> <code>/ssm/managed-instance/default-ec2-instance-management-role: The name of an IAM role</code> </p> </li>
    /// <li> <p> <code>/ssm/automation/customer-script-log-destination</code>: <code>CloudWatch</code> </p> </li>
    /// <li> <p> <code>/ssm/automation/customer-script-log-group-name</code>: The name of an Amazon CloudWatch Logs log group</p> </li>
    /// <li> <p> <code>/ssm/documents/console/public-sharing-permission</code>: <code>Enable</code> or <code>Disable</code> </p> </li>
    /// <li> <p> <code>/ssm/managed-instance/activation-tier</code>: <code>standard</code> or <code>advanced</code> </p> </li>
    /// <li> <p> <code>/ssm/opsinsights/opscenter</code>: <code>Enabled</code> or <code>Disabled</code> </p> </li>
    /// <li> <p> <code>/ssm/parameter-store/default-parameter-tier</code>: <code>Standard</code>, <code>Advanced</code>, <code>Intelligent-Tiering</code> </p> </li>
    /// <li> <p> <code>/ssm/parameter-store/high-throughput-enabled</code>: <code>true</code> or <code>false</code> </p> </li>
    /// </ul>
    pub setting_value: ::std::option::Option<::std::string::String>,
}
impl UpdateServiceSettingInput {
    /// <p>The Amazon Resource Name (ARN) of the service setting to update. For example, <code>arn:aws:ssm:us-east-1:111122223333:servicesetting/ssm/parameter-store/high-throughput-enabled</code>. The setting ID can be one of the following.</p>
    /// <ul>
    /// <li> <p> <code>/ssm/managed-instance/default-ec2-instance-management-role</code> </p> </li>
    /// <li> <p> <code>/ssm/automation/customer-script-log-destination</code> </p> </li>
    /// <li> <p> <code>/ssm/automation/customer-script-log-group-name</code> </p> </li>
    /// <li> <p> <code>/ssm/documents/console/public-sharing-permission</code> </p> </li>
    /// <li> <p> <code>/ssm/managed-instance/activation-tier</code> </p> </li>
    /// <li> <p> <code>/ssm/opsinsights/opscenter</code> </p> </li>
    /// <li> <p> <code>/ssm/parameter-store/default-parameter-tier</code> </p> </li>
    /// <li> <p> <code>/ssm/parameter-store/high-throughput-enabled</code> </p> </li>
    /// </ul> <note>
    /// <p>Permissions to update the <code>/ssm/managed-instance/default-ec2-instance-management-role</code> setting should only be provided to administrators. Implement least privilege access when allowing individuals to configure or modify the Default Host Management Configuration.</p>
    /// </note>
    pub fn setting_id(&self) -> ::std::option::Option<&str> {
        self.setting_id.as_deref()
    }
    /// <p>The new value to specify for the service setting. The following list specifies the available values for each setting.</p>
    /// <ul>
    /// <li> <p> <code>/ssm/managed-instance/default-ec2-instance-management-role: The name of an IAM role</code> </p> </li>
    /// <li> <p> <code>/ssm/automation/customer-script-log-destination</code>: <code>CloudWatch</code> </p> </li>
    /// <li> <p> <code>/ssm/automation/customer-script-log-group-name</code>: The name of an Amazon CloudWatch Logs log group</p> </li>
    /// <li> <p> <code>/ssm/documents/console/public-sharing-permission</code>: <code>Enable</code> or <code>Disable</code> </p> </li>
    /// <li> <p> <code>/ssm/managed-instance/activation-tier</code>: <code>standard</code> or <code>advanced</code> </p> </li>
    /// <li> <p> <code>/ssm/opsinsights/opscenter</code>: <code>Enabled</code> or <code>Disabled</code> </p> </li>
    /// <li> <p> <code>/ssm/parameter-store/default-parameter-tier</code>: <code>Standard</code>, <code>Advanced</code>, <code>Intelligent-Tiering</code> </p> </li>
    /// <li> <p> <code>/ssm/parameter-store/high-throughput-enabled</code>: <code>true</code> or <code>false</code> </p> </li>
    /// </ul>
    pub fn setting_value(&self) -> ::std::option::Option<&str> {
        self.setting_value.as_deref()
    }
}
impl UpdateServiceSettingInput {
    /// Creates a new builder-style object to manufacture [`UpdateServiceSettingInput`](crate::operation::update_service_setting::UpdateServiceSettingInput).
    pub fn builder() -> crate::operation::update_service_setting::builders::UpdateServiceSettingInputBuilder {
        crate::operation::update_service_setting::builders::UpdateServiceSettingInputBuilder::default()
    }
}

/// A builder for [`UpdateServiceSettingInput`](crate::operation::update_service_setting::UpdateServiceSettingInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct UpdateServiceSettingInputBuilder {
    pub(crate) setting_id: ::std::option::Option<::std::string::String>,
    pub(crate) setting_value: ::std::option::Option<::std::string::String>,
}
impl UpdateServiceSettingInputBuilder {
    /// <p>The Amazon Resource Name (ARN) of the service setting to update. For example, <code>arn:aws:ssm:us-east-1:111122223333:servicesetting/ssm/parameter-store/high-throughput-enabled</code>. The setting ID can be one of the following.</p>
    /// <ul>
    /// <li> <p> <code>/ssm/managed-instance/default-ec2-instance-management-role</code> </p> </li>
    /// <li> <p> <code>/ssm/automation/customer-script-log-destination</code> </p> </li>
    /// <li> <p> <code>/ssm/automation/customer-script-log-group-name</code> </p> </li>
    /// <li> <p> <code>/ssm/documents/console/public-sharing-permission</code> </p> </li>
    /// <li> <p> <code>/ssm/managed-instance/activation-tier</code> </p> </li>
    /// <li> <p> <code>/ssm/opsinsights/opscenter</code> </p> </li>
    /// <li> <p> <code>/ssm/parameter-store/default-parameter-tier</code> </p> </li>
    /// <li> <p> <code>/ssm/parameter-store/high-throughput-enabled</code> </p> </li>
    /// </ul> <note>
    /// <p>Permissions to update the <code>/ssm/managed-instance/default-ec2-instance-management-role</code> setting should only be provided to administrators. Implement least privilege access when allowing individuals to configure or modify the Default Host Management Configuration.</p>
    /// </note>
    /// This field is required.
    pub fn setting_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.setting_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the service setting to update. For example, <code>arn:aws:ssm:us-east-1:111122223333:servicesetting/ssm/parameter-store/high-throughput-enabled</code>. The setting ID can be one of the following.</p>
    /// <ul>
    /// <li> <p> <code>/ssm/managed-instance/default-ec2-instance-management-role</code> </p> </li>
    /// <li> <p> <code>/ssm/automation/customer-script-log-destination</code> </p> </li>
    /// <li> <p> <code>/ssm/automation/customer-script-log-group-name</code> </p> </li>
    /// <li> <p> <code>/ssm/documents/console/public-sharing-permission</code> </p> </li>
    /// <li> <p> <code>/ssm/managed-instance/activation-tier</code> </p> </li>
    /// <li> <p> <code>/ssm/opsinsights/opscenter</code> </p> </li>
    /// <li> <p> <code>/ssm/parameter-store/default-parameter-tier</code> </p> </li>
    /// <li> <p> <code>/ssm/parameter-store/high-throughput-enabled</code> </p> </li>
    /// </ul> <note>
    /// <p>Permissions to update the <code>/ssm/managed-instance/default-ec2-instance-management-role</code> setting should only be provided to administrators. Implement least privilege access when allowing individuals to configure or modify the Default Host Management Configuration.</p>
    /// </note>
    pub fn set_setting_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.setting_id = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the service setting to update. For example, <code>arn:aws:ssm:us-east-1:111122223333:servicesetting/ssm/parameter-store/high-throughput-enabled</code>. The setting ID can be one of the following.</p>
    /// <ul>
    /// <li> <p> <code>/ssm/managed-instance/default-ec2-instance-management-role</code> </p> </li>
    /// <li> <p> <code>/ssm/automation/customer-script-log-destination</code> </p> </li>
    /// <li> <p> <code>/ssm/automation/customer-script-log-group-name</code> </p> </li>
    /// <li> <p> <code>/ssm/documents/console/public-sharing-permission</code> </p> </li>
    /// <li> <p> <code>/ssm/managed-instance/activation-tier</code> </p> </li>
    /// <li> <p> <code>/ssm/opsinsights/opscenter</code> </p> </li>
    /// <li> <p> <code>/ssm/parameter-store/default-parameter-tier</code> </p> </li>
    /// <li> <p> <code>/ssm/parameter-store/high-throughput-enabled</code> </p> </li>
    /// </ul> <note>
    /// <p>Permissions to update the <code>/ssm/managed-instance/default-ec2-instance-management-role</code> setting should only be provided to administrators. Implement least privilege access when allowing individuals to configure or modify the Default Host Management Configuration.</p>
    /// </note>
    pub fn get_setting_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.setting_id
    }
    /// <p>The new value to specify for the service setting. The following list specifies the available values for each setting.</p>
    /// <ul>
    /// <li> <p> <code>/ssm/managed-instance/default-ec2-instance-management-role: The name of an IAM role</code> </p> </li>
    /// <li> <p> <code>/ssm/automation/customer-script-log-destination</code>: <code>CloudWatch</code> </p> </li>
    /// <li> <p> <code>/ssm/automation/customer-script-log-group-name</code>: The name of an Amazon CloudWatch Logs log group</p> </li>
    /// <li> <p> <code>/ssm/documents/console/public-sharing-permission</code>: <code>Enable</code> or <code>Disable</code> </p> </li>
    /// <li> <p> <code>/ssm/managed-instance/activation-tier</code>: <code>standard</code> or <code>advanced</code> </p> </li>
    /// <li> <p> <code>/ssm/opsinsights/opscenter</code>: <code>Enabled</code> or <code>Disabled</code> </p> </li>
    /// <li> <p> <code>/ssm/parameter-store/default-parameter-tier</code>: <code>Standard</code>, <code>Advanced</code>, <code>Intelligent-Tiering</code> </p> </li>
    /// <li> <p> <code>/ssm/parameter-store/high-throughput-enabled</code>: <code>true</code> or <code>false</code> </p> </li>
    /// </ul>
    /// This field is required.
    pub fn setting_value(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.setting_value = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The new value to specify for the service setting. The following list specifies the available values for each setting.</p>
    /// <ul>
    /// <li> <p> <code>/ssm/managed-instance/default-ec2-instance-management-role: The name of an IAM role</code> </p> </li>
    /// <li> <p> <code>/ssm/automation/customer-script-log-destination</code>: <code>CloudWatch</code> </p> </li>
    /// <li> <p> <code>/ssm/automation/customer-script-log-group-name</code>: The name of an Amazon CloudWatch Logs log group</p> </li>
    /// <li> <p> <code>/ssm/documents/console/public-sharing-permission</code>: <code>Enable</code> or <code>Disable</code> </p> </li>
    /// <li> <p> <code>/ssm/managed-instance/activation-tier</code>: <code>standard</code> or <code>advanced</code> </p> </li>
    /// <li> <p> <code>/ssm/opsinsights/opscenter</code>: <code>Enabled</code> or <code>Disabled</code> </p> </li>
    /// <li> <p> <code>/ssm/parameter-store/default-parameter-tier</code>: <code>Standard</code>, <code>Advanced</code>, <code>Intelligent-Tiering</code> </p> </li>
    /// <li> <p> <code>/ssm/parameter-store/high-throughput-enabled</code>: <code>true</code> or <code>false</code> </p> </li>
    /// </ul>
    pub fn set_setting_value(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.setting_value = input;
        self
    }
    /// <p>The new value to specify for the service setting. The following list specifies the available values for each setting.</p>
    /// <ul>
    /// <li> <p> <code>/ssm/managed-instance/default-ec2-instance-management-role: The name of an IAM role</code> </p> </li>
    /// <li> <p> <code>/ssm/automation/customer-script-log-destination</code>: <code>CloudWatch</code> </p> </li>
    /// <li> <p> <code>/ssm/automation/customer-script-log-group-name</code>: The name of an Amazon CloudWatch Logs log group</p> </li>
    /// <li> <p> <code>/ssm/documents/console/public-sharing-permission</code>: <code>Enable</code> or <code>Disable</code> </p> </li>
    /// <li> <p> <code>/ssm/managed-instance/activation-tier</code>: <code>standard</code> or <code>advanced</code> </p> </li>
    /// <li> <p> <code>/ssm/opsinsights/opscenter</code>: <code>Enabled</code> or <code>Disabled</code> </p> </li>
    /// <li> <p> <code>/ssm/parameter-store/default-parameter-tier</code>: <code>Standard</code>, <code>Advanced</code>, <code>Intelligent-Tiering</code> </p> </li>
    /// <li> <p> <code>/ssm/parameter-store/high-throughput-enabled</code>: <code>true</code> or <code>false</code> </p> </li>
    /// </ul>
    pub fn get_setting_value(&self) -> &::std::option::Option<::std::string::String> {
        &self.setting_value
    }
    /// Consumes the builder and constructs a [`UpdateServiceSettingInput`](crate::operation::update_service_setting::UpdateServiceSettingInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::update_service_setting::UpdateServiceSettingInput, ::aws_smithy_types::error::operation::BuildError>
    {
        ::std::result::Result::Ok(crate::operation::update_service_setting::UpdateServiceSettingInput {
            setting_id: self.setting_id,
            setting_value: self.setting_value,
        })
    }
}
