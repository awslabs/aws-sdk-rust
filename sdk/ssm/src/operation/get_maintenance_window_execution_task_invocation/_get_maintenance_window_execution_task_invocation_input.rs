// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GetMaintenanceWindowExecutionTaskInvocationInput {
    /// <p>The ID of the maintenance window execution for which the task is a part.</p>
    #[doc(hidden)]
    pub window_execution_id: std::option::Option<std::string::String>,
    /// <p>The ID of the specific task in the maintenance window task that should be retrieved. </p>
    #[doc(hidden)]
    pub task_id: std::option::Option<std::string::String>,
    /// <p>The invocation ID to retrieve.</p>
    #[doc(hidden)]
    pub invocation_id: std::option::Option<std::string::String>,
}
impl GetMaintenanceWindowExecutionTaskInvocationInput {
    /// <p>The ID of the maintenance window execution for which the task is a part.</p>
    pub fn window_execution_id(&self) -> std::option::Option<&str> {
        self.window_execution_id.as_deref()
    }
    /// <p>The ID of the specific task in the maintenance window task that should be retrieved. </p>
    pub fn task_id(&self) -> std::option::Option<&str> {
        self.task_id.as_deref()
    }
    /// <p>The invocation ID to retrieve.</p>
    pub fn invocation_id(&self) -> std::option::Option<&str> {
        self.invocation_id.as_deref()
    }
}
impl GetMaintenanceWindowExecutionTaskInvocationInput {
    /// Creates a new builder-style object to manufacture [`GetMaintenanceWindowExecutionTaskInvocationInput`](crate::operation::get_maintenance_window_execution_task_invocation::GetMaintenanceWindowExecutionTaskInvocationInput).
    pub fn builder() -> crate::operation::get_maintenance_window_execution_task_invocation::builders::GetMaintenanceWindowExecutionTaskInvocationInputBuilder{
        crate::operation::get_maintenance_window_execution_task_invocation::builders::GetMaintenanceWindowExecutionTaskInvocationInputBuilder::default()
    }
}

/// A builder for [`GetMaintenanceWindowExecutionTaskInvocationInput`](crate::operation::get_maintenance_window_execution_task_invocation::GetMaintenanceWindowExecutionTaskInvocationInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct GetMaintenanceWindowExecutionTaskInvocationInputBuilder {
    pub(crate) window_execution_id: std::option::Option<std::string::String>,
    pub(crate) task_id: std::option::Option<std::string::String>,
    pub(crate) invocation_id: std::option::Option<std::string::String>,
}
impl GetMaintenanceWindowExecutionTaskInvocationInputBuilder {
    /// <p>The ID of the maintenance window execution for which the task is a part.</p>
    pub fn window_execution_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.window_execution_id = Some(input.into());
        self
    }
    /// <p>The ID of the maintenance window execution for which the task is a part.</p>
    pub fn set_window_execution_id(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.window_execution_id = input;
        self
    }
    /// <p>The ID of the specific task in the maintenance window task that should be retrieved. </p>
    pub fn task_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.task_id = Some(input.into());
        self
    }
    /// <p>The ID of the specific task in the maintenance window task that should be retrieved. </p>
    pub fn set_task_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.task_id = input;
        self
    }
    /// <p>The invocation ID to retrieve.</p>
    pub fn invocation_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.invocation_id = Some(input.into());
        self
    }
    /// <p>The invocation ID to retrieve.</p>
    pub fn set_invocation_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.invocation_id = input;
        self
    }
    /// Consumes the builder and constructs a [`GetMaintenanceWindowExecutionTaskInvocationInput`](crate::operation::get_maintenance_window_execution_task_invocation::GetMaintenanceWindowExecutionTaskInvocationInput).
    pub fn build(self) -> Result<crate::operation::get_maintenance_window_execution_task_invocation::GetMaintenanceWindowExecutionTaskInvocationInput, aws_smithy_http::operation::error::BuildError>{
        Ok(
            crate::operation::get_maintenance_window_execution_task_invocation::GetMaintenanceWindowExecutionTaskInvocationInput {
                window_execution_id: self.window_execution_id
                ,
                task_id: self.task_id
                ,
                invocation_id: self.invocation_id
                ,
            }
        )
    }
}
