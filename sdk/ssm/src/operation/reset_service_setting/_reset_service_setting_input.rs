// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The request body of the ResetServiceSetting API operation.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ResetServiceSettingInput {
    /// <p>The Amazon Resource Name (ARN) of the service setting to reset. The setting ID can be one of the following.</p>
    /// <ul>
    /// <li> <p> <code>/ssm/managed-instance/default-ec2-instance-management-role</code> </p> </li>
    /// <li> <p> <code>/ssm/automation/customer-script-log-destination</code> </p> </li>
    /// <li> <p> <code>/ssm/automation/customer-script-log-group-name</code> </p> </li>
    /// <li> <p> <code>/ssm/documents/console/public-sharing-permission</code> </p> </li>
    /// <li> <p> <code>/ssm/managed-instance/activation-tier</code> </p> </li>
    /// <li> <p> <code>/ssm/opsinsights/opscenter</code> </p> </li>
    /// <li> <p> <code>/ssm/parameter-store/default-parameter-tier</code> </p> </li>
    /// <li> <p> <code>/ssm/parameter-store/high-throughput-enabled</code> </p> </li>
    /// </ul>
    pub setting_id: ::std::option::Option<::std::string::String>,
}
impl ResetServiceSettingInput {
    /// <p>The Amazon Resource Name (ARN) of the service setting to reset. The setting ID can be one of the following.</p>
    /// <ul>
    /// <li> <p> <code>/ssm/managed-instance/default-ec2-instance-management-role</code> </p> </li>
    /// <li> <p> <code>/ssm/automation/customer-script-log-destination</code> </p> </li>
    /// <li> <p> <code>/ssm/automation/customer-script-log-group-name</code> </p> </li>
    /// <li> <p> <code>/ssm/documents/console/public-sharing-permission</code> </p> </li>
    /// <li> <p> <code>/ssm/managed-instance/activation-tier</code> </p> </li>
    /// <li> <p> <code>/ssm/opsinsights/opscenter</code> </p> </li>
    /// <li> <p> <code>/ssm/parameter-store/default-parameter-tier</code> </p> </li>
    /// <li> <p> <code>/ssm/parameter-store/high-throughput-enabled</code> </p> </li>
    /// </ul>
    pub fn setting_id(&self) -> ::std::option::Option<&str> {
        self.setting_id.as_deref()
    }
}
impl ResetServiceSettingInput {
    /// Creates a new builder-style object to manufacture [`ResetServiceSettingInput`](crate::operation::reset_service_setting::ResetServiceSettingInput).
    pub fn builder() -> crate::operation::reset_service_setting::builders::ResetServiceSettingInputBuilder {
        crate::operation::reset_service_setting::builders::ResetServiceSettingInputBuilder::default()
    }
}

/// A builder for [`ResetServiceSettingInput`](crate::operation::reset_service_setting::ResetServiceSettingInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ResetServiceSettingInputBuilder {
    pub(crate) setting_id: ::std::option::Option<::std::string::String>,
}
impl ResetServiceSettingInputBuilder {
    /// <p>The Amazon Resource Name (ARN) of the service setting to reset. The setting ID can be one of the following.</p>
    /// <ul>
    /// <li> <p> <code>/ssm/managed-instance/default-ec2-instance-management-role</code> </p> </li>
    /// <li> <p> <code>/ssm/automation/customer-script-log-destination</code> </p> </li>
    /// <li> <p> <code>/ssm/automation/customer-script-log-group-name</code> </p> </li>
    /// <li> <p> <code>/ssm/documents/console/public-sharing-permission</code> </p> </li>
    /// <li> <p> <code>/ssm/managed-instance/activation-tier</code> </p> </li>
    /// <li> <p> <code>/ssm/opsinsights/opscenter</code> </p> </li>
    /// <li> <p> <code>/ssm/parameter-store/default-parameter-tier</code> </p> </li>
    /// <li> <p> <code>/ssm/parameter-store/high-throughput-enabled</code> </p> </li>
    /// </ul>
    /// This field is required.
    pub fn setting_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.setting_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the service setting to reset. The setting ID can be one of the following.</p>
    /// <ul>
    /// <li> <p> <code>/ssm/managed-instance/default-ec2-instance-management-role</code> </p> </li>
    /// <li> <p> <code>/ssm/automation/customer-script-log-destination</code> </p> </li>
    /// <li> <p> <code>/ssm/automation/customer-script-log-group-name</code> </p> </li>
    /// <li> <p> <code>/ssm/documents/console/public-sharing-permission</code> </p> </li>
    /// <li> <p> <code>/ssm/managed-instance/activation-tier</code> </p> </li>
    /// <li> <p> <code>/ssm/opsinsights/opscenter</code> </p> </li>
    /// <li> <p> <code>/ssm/parameter-store/default-parameter-tier</code> </p> </li>
    /// <li> <p> <code>/ssm/parameter-store/high-throughput-enabled</code> </p> </li>
    /// </ul>
    pub fn set_setting_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.setting_id = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the service setting to reset. The setting ID can be one of the following.</p>
    /// <ul>
    /// <li> <p> <code>/ssm/managed-instance/default-ec2-instance-management-role</code> </p> </li>
    /// <li> <p> <code>/ssm/automation/customer-script-log-destination</code> </p> </li>
    /// <li> <p> <code>/ssm/automation/customer-script-log-group-name</code> </p> </li>
    /// <li> <p> <code>/ssm/documents/console/public-sharing-permission</code> </p> </li>
    /// <li> <p> <code>/ssm/managed-instance/activation-tier</code> </p> </li>
    /// <li> <p> <code>/ssm/opsinsights/opscenter</code> </p> </li>
    /// <li> <p> <code>/ssm/parameter-store/default-parameter-tier</code> </p> </li>
    /// <li> <p> <code>/ssm/parameter-store/high-throughput-enabled</code> </p> </li>
    /// </ul>
    pub fn get_setting_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.setting_id
    }
    /// Consumes the builder and constructs a [`ResetServiceSettingInput`](crate::operation::reset_service_setting::ResetServiceSettingInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::reset_service_setting::ResetServiceSettingInput, ::aws_smithy_types::error::operation::BuildError>
    {
        ::std::result::Result::Ok(crate::operation::reset_service_setting::ResetServiceSettingInput { setting_id: self.setting_id })
    }
}
