// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct CreateAssociationBatchInput {
    /// <p>One or more associations.</p>
    #[doc(hidden)]
    pub entries:
        std::option::Option<std::vec::Vec<crate::types::CreateAssociationBatchRequestEntry>>,
}
impl CreateAssociationBatchInput {
    /// <p>One or more associations.</p>
    pub fn entries(
        &self,
    ) -> std::option::Option<&[crate::types::CreateAssociationBatchRequestEntry]> {
        self.entries.as_deref()
    }
}
impl CreateAssociationBatchInput {
    /// Creates a new builder-style object to manufacture [`CreateAssociationBatchInput`](crate::operation::create_association_batch::CreateAssociationBatchInput).
    pub fn builder(
    ) -> crate::operation::create_association_batch::builders::CreateAssociationBatchInputBuilder
    {
        crate::operation::create_association_batch::builders::CreateAssociationBatchInputBuilder::default()
    }
}

/// A builder for [`CreateAssociationBatchInput`](crate::operation::create_association_batch::CreateAssociationBatchInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct CreateAssociationBatchInputBuilder {
    pub(crate) entries:
        std::option::Option<std::vec::Vec<crate::types::CreateAssociationBatchRequestEntry>>,
}
impl CreateAssociationBatchInputBuilder {
    /// Appends an item to `entries`.
    ///
    /// To override the contents of this collection use [`set_entries`](Self::set_entries).
    ///
    /// <p>One or more associations.</p>
    pub fn entries(mut self, input: crate::types::CreateAssociationBatchRequestEntry) -> Self {
        let mut v = self.entries.unwrap_or_default();
        v.push(input);
        self.entries = Some(v);
        self
    }
    /// <p>One or more associations.</p>
    pub fn set_entries(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::CreateAssociationBatchRequestEntry>>,
    ) -> Self {
        self.entries = input;
        self
    }
    /// Consumes the builder and constructs a [`CreateAssociationBatchInput`](crate::operation::create_association_batch::CreateAssociationBatchInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::create_association_batch::CreateAssociationBatchInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::create_association_batch::CreateAssociationBatchInput {
                entries: self.entries,
            },
        )
    }
}
