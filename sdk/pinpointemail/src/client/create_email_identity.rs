// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateEmailIdentity`](crate::operation::create_email_identity::builders::CreateEmailIdentityFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`email_identity(impl Into<String>)`](crate::operation::create_email_identity::builders::CreateEmailIdentityFluentBuilder::email_identity) / [`set_email_identity(Option<String>)`](crate::operation::create_email_identity::builders::CreateEmailIdentityFluentBuilder::set_email_identity):<br>required: **true**<br><p>The email address or domain that you want to verify.</p><br>
    ///   - [`tags(Tag)`](crate::operation::create_email_identity::builders::CreateEmailIdentityFluentBuilder::tags) / [`set_tags(Option<Vec::<Tag>>)`](crate::operation::create_email_identity::builders::CreateEmailIdentityFluentBuilder::set_tags):<br>required: **false**<br><p>An array of objects that define the tags (keys and values) that you want to associate with the email identity.</p><br>
    /// - On success, responds with [`CreateEmailIdentityOutput`](crate::operation::create_email_identity::CreateEmailIdentityOutput) with field(s):
    ///   - [`identity_type(Option<IdentityType>)`](crate::operation::create_email_identity::CreateEmailIdentityOutput::identity_type): <p>The email identity type.</p>
    ///   - [`verified_for_sending_status(bool)`](crate::operation::create_email_identity::CreateEmailIdentityOutput::verified_for_sending_status): <p>Specifies whether or not the identity is verified. In Amazon Pinpoint, you can only send email from verified email addresses or domains. For more information about verifying identities, see the <a href="https://docs.aws.amazon.com/pinpoint/latest/userguide/channels-email-manage-verify.html">Amazon Pinpoint User Guide</a>.</p>
    ///   - [`dkim_attributes(Option<DkimAttributes>)`](crate::operation::create_email_identity::CreateEmailIdentityOutput::dkim_attributes): <p>An object that contains information about the DKIM attributes for the identity. This object includes the tokens that you use to create the CNAME records that are required to complete the DKIM verification process.</p>
    /// - On failure, responds with [`SdkError<CreateEmailIdentityError>`](crate::operation::create_email_identity::CreateEmailIdentityError)
    pub fn create_email_identity(&self) -> crate::operation::create_email_identity::builders::CreateEmailIdentityFluentBuilder {
        crate::operation::create_email_identity::builders::CreateEmailIdentityFluentBuilder::new(self.handle.clone())
    }
}
