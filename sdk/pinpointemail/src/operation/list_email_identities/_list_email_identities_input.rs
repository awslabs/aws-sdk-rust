// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A request to list all of the email identities associated with your Amazon Pinpoint account. This list includes identities that you've already verified, identities that are unverified, and identities that were verified in the past, but are no longer verified.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ListEmailIdentitiesInput {
    /// <p>A token returned from a previous call to <code>ListEmailIdentities</code> to indicate the position in the list of identities.</p>
    #[doc(hidden)]
    pub next_token: std::option::Option<std::string::String>,
    /// <p>The number of results to show in a single call to <code>ListEmailIdentities</code>. If the number of results is larger than the number you specified in this parameter, then the response includes a <code>NextToken</code> element, which you can use to obtain additional results.</p>
    /// <p>The value you specify has to be at least 0, and can be no more than 1000.</p>
    #[doc(hidden)]
    pub page_size: std::option::Option<i32>,
}
impl ListEmailIdentitiesInput {
    /// <p>A token returned from a previous call to <code>ListEmailIdentities</code> to indicate the position in the list of identities.</p>
    pub fn next_token(&self) -> std::option::Option<&str> {
        self.next_token.as_deref()
    }
    /// <p>The number of results to show in a single call to <code>ListEmailIdentities</code>. If the number of results is larger than the number you specified in this parameter, then the response includes a <code>NextToken</code> element, which you can use to obtain additional results.</p>
    /// <p>The value you specify has to be at least 0, and can be no more than 1000.</p>
    pub fn page_size(&self) -> std::option::Option<i32> {
        self.page_size
    }
}
impl ListEmailIdentitiesInput {
    /// Creates a new builder-style object to manufacture [`ListEmailIdentitiesInput`](crate::operation::list_email_identities::ListEmailIdentitiesInput).
    pub fn builder(
    ) -> crate::operation::list_email_identities::builders::ListEmailIdentitiesInputBuilder {
        crate::operation::list_email_identities::builders::ListEmailIdentitiesInputBuilder::default(
        )
    }
}

/// A builder for [`ListEmailIdentitiesInput`](crate::operation::list_email_identities::ListEmailIdentitiesInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ListEmailIdentitiesInputBuilder {
    pub(crate) next_token: std::option::Option<std::string::String>,
    pub(crate) page_size: std::option::Option<i32>,
}
impl ListEmailIdentitiesInputBuilder {
    /// <p>A token returned from a previous call to <code>ListEmailIdentities</code> to indicate the position in the list of identities.</p>
    pub fn next_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.next_token = Some(input.into());
        self
    }
    /// <p>A token returned from a previous call to <code>ListEmailIdentities</code> to indicate the position in the list of identities.</p>
    pub fn set_next_token(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// <p>The number of results to show in a single call to <code>ListEmailIdentities</code>. If the number of results is larger than the number you specified in this parameter, then the response includes a <code>NextToken</code> element, which you can use to obtain additional results.</p>
    /// <p>The value you specify has to be at least 0, and can be no more than 1000.</p>
    pub fn page_size(mut self, input: i32) -> Self {
        self.page_size = Some(input);
        self
    }
    /// <p>The number of results to show in a single call to <code>ListEmailIdentities</code>. If the number of results is larger than the number you specified in this parameter, then the response includes a <code>NextToken</code> element, which you can use to obtain additional results.</p>
    /// <p>The value you specify has to be at least 0, and can be no more than 1000.</p>
    pub fn set_page_size(mut self, input: std::option::Option<i32>) -> Self {
        self.page_size = input;
        self
    }
    /// Consumes the builder and constructs a [`ListEmailIdentitiesInput`](crate::operation::list_email_identities::ListEmailIdentitiesInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::list_email_identities::ListEmailIdentitiesInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::list_email_identities::ListEmailIdentitiesInput {
                next_token: self.next_token,
                page_size: self.page_size,
            },
        )
    }
}
