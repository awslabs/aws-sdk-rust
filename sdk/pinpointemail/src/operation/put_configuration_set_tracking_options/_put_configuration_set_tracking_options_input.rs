// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A request to add a custom domain for tracking open and click events to a configuration set.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct PutConfigurationSetTrackingOptionsInput {
    /// <p>The name of the configuration set that you want to add a custom tracking domain to.</p>
    pub configuration_set_name: ::std::option::Option<::std::string::String>,
    /// <p>The domain that you want to use to track open and click events.</p>
    pub custom_redirect_domain: ::std::option::Option<::std::string::String>,
}
impl PutConfigurationSetTrackingOptionsInput {
    /// <p>The name of the configuration set that you want to add a custom tracking domain to.</p>
    pub fn configuration_set_name(&self) -> ::std::option::Option<&str> {
        self.configuration_set_name.as_deref()
    }
    /// <p>The domain that you want to use to track open and click events.</p>
    pub fn custom_redirect_domain(&self) -> ::std::option::Option<&str> {
        self.custom_redirect_domain.as_deref()
    }
}
impl PutConfigurationSetTrackingOptionsInput {
    /// Creates a new builder-style object to manufacture [`PutConfigurationSetTrackingOptionsInput`](crate::operation::put_configuration_set_tracking_options::PutConfigurationSetTrackingOptionsInput).
    pub fn builder() -> crate::operation::put_configuration_set_tracking_options::builders::PutConfigurationSetTrackingOptionsInputBuilder {
        crate::operation::put_configuration_set_tracking_options::builders::PutConfigurationSetTrackingOptionsInputBuilder::default()
    }
}

/// A builder for [`PutConfigurationSetTrackingOptionsInput`](crate::operation::put_configuration_set_tracking_options::PutConfigurationSetTrackingOptionsInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct PutConfigurationSetTrackingOptionsInputBuilder {
    pub(crate) configuration_set_name: ::std::option::Option<::std::string::String>,
    pub(crate) custom_redirect_domain: ::std::option::Option<::std::string::String>,
}
impl PutConfigurationSetTrackingOptionsInputBuilder {
    /// <p>The name of the configuration set that you want to add a custom tracking domain to.</p>
    /// This field is required.
    pub fn configuration_set_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.configuration_set_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the configuration set that you want to add a custom tracking domain to.</p>
    pub fn set_configuration_set_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.configuration_set_name = input;
        self
    }
    /// <p>The name of the configuration set that you want to add a custom tracking domain to.</p>
    pub fn get_configuration_set_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.configuration_set_name
    }
    /// <p>The domain that you want to use to track open and click events.</p>
    pub fn custom_redirect_domain(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.custom_redirect_domain = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The domain that you want to use to track open and click events.</p>
    pub fn set_custom_redirect_domain(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.custom_redirect_domain = input;
        self
    }
    /// <p>The domain that you want to use to track open and click events.</p>
    pub fn get_custom_redirect_domain(&self) -> &::std::option::Option<::std::string::String> {
        &self.custom_redirect_domain
    }
    /// Consumes the builder and constructs a [`PutConfigurationSetTrackingOptionsInput`](crate::operation::put_configuration_set_tracking_options::PutConfigurationSetTrackingOptionsInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::put_configuration_set_tracking_options::PutConfigurationSetTrackingOptionsInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(
            crate::operation::put_configuration_set_tracking_options::PutConfigurationSetTrackingOptionsInput {
                configuration_set_name: self.configuration_set_name,
                custom_redirect_domain: self.custom_redirect_domain,
            },
        )
    }
}
