// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Enable or disable the Deliverability dashboard for your Amazon Pinpoint account. When you enable the Deliverability dashboard, you gain access to reputation, deliverability, and other metrics for the domains that you use to send email using Amazon Pinpoint. You also gain the ability to perform predictive inbox placement tests.</p>
/// <p>When you use the Deliverability dashboard, you pay a monthly subscription charge, in addition to any other fees that you accrue by using Amazon Pinpoint. For more information about the features and cost of a Deliverability dashboard subscription, see <a href="http://aws.amazon.com/pinpoint/pricing/">Amazon Pinpoint Pricing</a>.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct PutDeliverabilityDashboardOptionInput {
    /// <p>Specifies whether to enable the Deliverability dashboard for your Amazon Pinpoint account. To enable the dashboard, set this value to <code>true</code>.</p>
    #[doc(hidden)]
    pub dashboard_enabled: bool,
    /// <p>An array of objects, one for each verified domain that you use to send email and enabled the Deliverability dashboard for.</p>
    #[doc(hidden)]
    pub subscribed_domains:
        std::option::Option<std::vec::Vec<crate::types::DomainDeliverabilityTrackingOption>>,
}
impl PutDeliverabilityDashboardOptionInput {
    /// <p>Specifies whether to enable the Deliverability dashboard for your Amazon Pinpoint account. To enable the dashboard, set this value to <code>true</code>.</p>
    pub fn dashboard_enabled(&self) -> bool {
        self.dashboard_enabled
    }
    /// <p>An array of objects, one for each verified domain that you use to send email and enabled the Deliverability dashboard for.</p>
    pub fn subscribed_domains(
        &self,
    ) -> std::option::Option<&[crate::types::DomainDeliverabilityTrackingOption]> {
        self.subscribed_domains.as_deref()
    }
}
impl PutDeliverabilityDashboardOptionInput {
    /// Creates a new builder-style object to manufacture [`PutDeliverabilityDashboardOptionInput`](crate::operation::put_deliverability_dashboard_option::PutDeliverabilityDashboardOptionInput).
    pub fn builder() -> crate::operation::put_deliverability_dashboard_option::builders::PutDeliverabilityDashboardOptionInputBuilder{
        crate::operation::put_deliverability_dashboard_option::builders::PutDeliverabilityDashboardOptionInputBuilder::default()
    }
}

/// A builder for [`PutDeliverabilityDashboardOptionInput`](crate::operation::put_deliverability_dashboard_option::PutDeliverabilityDashboardOptionInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct PutDeliverabilityDashboardOptionInputBuilder {
    pub(crate) dashboard_enabled: std::option::Option<bool>,
    pub(crate) subscribed_domains:
        std::option::Option<std::vec::Vec<crate::types::DomainDeliverabilityTrackingOption>>,
}
impl PutDeliverabilityDashboardOptionInputBuilder {
    /// <p>Specifies whether to enable the Deliverability dashboard for your Amazon Pinpoint account. To enable the dashboard, set this value to <code>true</code>.</p>
    pub fn dashboard_enabled(mut self, input: bool) -> Self {
        self.dashboard_enabled = Some(input);
        self
    }
    /// <p>Specifies whether to enable the Deliverability dashboard for your Amazon Pinpoint account. To enable the dashboard, set this value to <code>true</code>.</p>
    pub fn set_dashboard_enabled(mut self, input: std::option::Option<bool>) -> Self {
        self.dashboard_enabled = input;
        self
    }
    /// Appends an item to `subscribed_domains`.
    ///
    /// To override the contents of this collection use [`set_subscribed_domains`](Self::set_subscribed_domains).
    ///
    /// <p>An array of objects, one for each verified domain that you use to send email and enabled the Deliverability dashboard for.</p>
    pub fn subscribed_domains(
        mut self,
        input: crate::types::DomainDeliverabilityTrackingOption,
    ) -> Self {
        let mut v = self.subscribed_domains.unwrap_or_default();
        v.push(input);
        self.subscribed_domains = Some(v);
        self
    }
    /// <p>An array of objects, one for each verified domain that you use to send email and enabled the Deliverability dashboard for.</p>
    pub fn set_subscribed_domains(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::DomainDeliverabilityTrackingOption>>,
    ) -> Self {
        self.subscribed_domains = input;
        self
    }
    /// Consumes the builder and constructs a [`PutDeliverabilityDashboardOptionInput`](crate::operation::put_deliverability_dashboard_option::PutDeliverabilityDashboardOptionInput).
    pub fn build(self) -> Result<crate::operation::put_deliverability_dashboard_option::PutDeliverabilityDashboardOptionInput, aws_smithy_http::operation::error::BuildError>{
        Ok(
            crate::operation::put_deliverability_dashboard_option::PutDeliverabilityDashboardOptionInput {
                dashboard_enabled: self.dashboard_enabled
                    .unwrap_or_default()
                ,
                subscribed_domains: self.subscribed_domains
                ,
            }
        )
    }
}
