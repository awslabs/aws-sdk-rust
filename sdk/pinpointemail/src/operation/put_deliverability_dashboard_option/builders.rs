// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub use crate::operation::put_deliverability_dashboard_option::_put_deliverability_dashboard_option_output::PutDeliverabilityDashboardOptionOutputBuilder;

pub use crate::operation::put_deliverability_dashboard_option::_put_deliverability_dashboard_option_input::PutDeliverabilityDashboardOptionInputBuilder;

/// Fluent builder constructing a request to `PutDeliverabilityDashboardOption`.
///
/// <p>Enable or disable the Deliverability dashboard for your Amazon Pinpoint account. When you enable the Deliverability dashboard, you gain access to reputation, deliverability, and other metrics for the domains that you use to send email using Amazon Pinpoint. You also gain the ability to perform predictive inbox placement tests.</p>
/// <p>When you use the Deliverability dashboard, you pay a monthly subscription charge, in addition to any other fees that you accrue by using Amazon Pinpoint. For more information about the features and cost of a Deliverability dashboard subscription, see <a href="http://aws.amazon.com/pinpoint/pricing/">Amazon Pinpoint Pricing</a>.</p>
#[derive(std::clone::Clone, std::fmt::Debug)]
pub struct PutDeliverabilityDashboardOptionFluentBuilder {
                handle: std::sync::Arc<crate::client::Handle>,
                inner: crate::operation::put_deliverability_dashboard_option::builders::PutDeliverabilityDashboardOptionInputBuilder
            }
impl PutDeliverabilityDashboardOptionFluentBuilder {
    /// Creates a new `PutDeliverabilityDashboardOption`.
    pub(crate) fn new(handle: std::sync::Arc<crate::client::Handle>) -> Self {
        Self {
            handle,
            inner: Default::default(),
        }
    }

    /// Consume this builder, creating a customizable operation that can be modified before being
    /// sent. The operation's inner [http::Request] can be modified as well.
                    pub async fn customize(self) -> std::result::Result<
                        crate::client::customize::CustomizableOperation<crate::operation::put_deliverability_dashboard_option::PutDeliverabilityDashboardOption, aws_http::retry::AwsResponseRetryClassifier,>,
                        aws_smithy_http::result::SdkError<crate::operation::put_deliverability_dashboard_option::PutDeliverabilityDashboardOptionError>
    >{
        let handle = self.handle.clone();
        let operation = self
            .inner
            .build()
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?
            .make_operation(&handle.conf)
            .await
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?;
        Ok(crate::client::customize::CustomizableOperation { handle, operation })
    }

    /// Sends the request and returns the response.
    ///
    /// If an error occurs, an `SdkError` will be returned with additional details that
    /// can be matched against.
    ///
    /// By default, any retryable failures will be retried twice. Retry behavior
    /// is configurable with the [RetryConfig](aws_smithy_types::retry::RetryConfig), which can be
    /// set when configuring the client.
                    pub async fn send(self) -> std::result::Result<crate::operation::put_deliverability_dashboard_option::PutDeliverabilityDashboardOptionOutput, aws_smithy_http::result::SdkError<crate::operation::put_deliverability_dashboard_option::PutDeliverabilityDashboardOptionError>>
                     {
        let op = self
            .inner
            .build()
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?
            .make_operation(&self.handle.conf)
            .await
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?;
        self.handle.client.call(op).await
    }
    /// <p>Specifies whether to enable the Deliverability dashboard for your Amazon Pinpoint account. To enable the dashboard, set this value to <code>true</code>.</p>
    pub fn dashboard_enabled(mut self, input: bool) -> Self {
        self.inner = self.inner.dashboard_enabled(input);
        self
    }
    /// <p>Specifies whether to enable the Deliverability dashboard for your Amazon Pinpoint account. To enable the dashboard, set this value to <code>true</code>.</p>
    pub fn set_dashboard_enabled(mut self, input: std::option::Option<bool>) -> Self {
        self.inner = self.inner.set_dashboard_enabled(input);
        self
    }
    /// Appends an item to `SubscribedDomains`.
    ///
    /// To override the contents of this collection use [`set_subscribed_domains`](Self::set_subscribed_domains).
    ///
    /// <p>An array of objects, one for each verified domain that you use to send email and enabled the Deliverability dashboard for.</p>
    pub fn subscribed_domains(
        mut self,
        input: crate::types::DomainDeliverabilityTrackingOption,
    ) -> Self {
        self.inner = self.inner.subscribed_domains(input);
        self
    }
    /// <p>An array of objects, one for each verified domain that you use to send email and enabled the Deliverability dashboard for.</p>
    pub fn set_subscribed_domains(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::DomainDeliverabilityTrackingOption>>,
    ) -> Self {
        self.inner = self.inner.set_subscribed_domains(input);
        self
    }
}
