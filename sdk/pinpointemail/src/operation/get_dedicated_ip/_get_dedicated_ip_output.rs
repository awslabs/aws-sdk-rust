// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about a dedicated IP address.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GetDedicatedIpOutput {
    /// <p>An object that contains information about a dedicated IP address.</p>
    #[doc(hidden)]
    pub dedicated_ip: std::option::Option<crate::types::DedicatedIp>,
    _request_id: Option<String>,
}
impl GetDedicatedIpOutput {
    /// <p>An object that contains information about a dedicated IP address.</p>
    pub fn dedicated_ip(&self) -> std::option::Option<&crate::types::DedicatedIp> {
        self.dedicated_ip.as_ref()
    }
}
impl aws_http::request_id::RequestId for GetDedicatedIpOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl GetDedicatedIpOutput {
    /// Creates a new builder-style object to manufacture [`GetDedicatedIpOutput`](crate::operation::get_dedicated_ip::GetDedicatedIpOutput).
    pub fn builder() -> crate::operation::get_dedicated_ip::builders::GetDedicatedIpOutputBuilder {
        crate::operation::get_dedicated_ip::builders::GetDedicatedIpOutputBuilder::default()
    }
}

/// A builder for [`GetDedicatedIpOutput`](crate::operation::get_dedicated_ip::GetDedicatedIpOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct GetDedicatedIpOutputBuilder {
    pub(crate) dedicated_ip: std::option::Option<crate::types::DedicatedIp>,
    _request_id: Option<String>,
}
impl GetDedicatedIpOutputBuilder {
    /// <p>An object that contains information about a dedicated IP address.</p>
    pub fn dedicated_ip(mut self, input: crate::types::DedicatedIp) -> Self {
        self.dedicated_ip = Some(input);
        self
    }
    /// <p>An object that contains information about a dedicated IP address.</p>
    pub fn set_dedicated_ip(
        mut self,
        input: std::option::Option<crate::types::DedicatedIp>,
    ) -> Self {
        self.dedicated_ip = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`GetDedicatedIpOutput`](crate::operation::get_dedicated_ip::GetDedicatedIpOutput).
    pub fn build(self) -> crate::operation::get_dedicated_ip::GetDedicatedIpOutput {
        crate::operation::get_dedicated_ip::GetDedicatedIpOutput {
            dedicated_ip: self.dedicated_ip,
            _request_id: self._request_id,
        }
    }
}
