// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about the predictive inbox placement test that you created.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct CreateDeliverabilityTestReportOutput {
    /// <p>A unique string that identifies the predictive inbox placement test.</p>
    pub report_id: ::std::string::String,
    /// <p>The status of the predictive inbox placement test. If the status is <code>IN_PROGRESS</code>, then the predictive inbox placement test is currently running. Predictive inbox placement tests are usually complete within 24 hours of creating the test. If the status is <code>COMPLETE</code>, then the test is finished, and you can use the <code>GetDeliverabilityTestReport</code> to view the results of the test.</p>
    pub deliverability_test_status: crate::types::DeliverabilityTestStatus,
    _request_id: Option<String>,
}
impl CreateDeliverabilityTestReportOutput {
    /// <p>A unique string that identifies the predictive inbox placement test.</p>
    pub fn report_id(&self) -> &str {
        use std::ops::Deref;
        self.report_id.deref()
    }
    /// <p>The status of the predictive inbox placement test. If the status is <code>IN_PROGRESS</code>, then the predictive inbox placement test is currently running. Predictive inbox placement tests are usually complete within 24 hours of creating the test. If the status is <code>COMPLETE</code>, then the test is finished, and you can use the <code>GetDeliverabilityTestReport</code> to view the results of the test.</p>
    pub fn deliverability_test_status(&self) -> &crate::types::DeliverabilityTestStatus {
        &self.deliverability_test_status
    }
}
impl ::aws_http::request_id::RequestId for CreateDeliverabilityTestReportOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl CreateDeliverabilityTestReportOutput {
    /// Creates a new builder-style object to manufacture [`CreateDeliverabilityTestReportOutput`](crate::operation::create_deliverability_test_report::CreateDeliverabilityTestReportOutput).
    pub fn builder() -> crate::operation::create_deliverability_test_report::builders::CreateDeliverabilityTestReportOutputBuilder {
        crate::operation::create_deliverability_test_report::builders::CreateDeliverabilityTestReportOutputBuilder::default()
    }
}

/// A builder for [`CreateDeliverabilityTestReportOutput`](crate::operation::create_deliverability_test_report::CreateDeliverabilityTestReportOutput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct CreateDeliverabilityTestReportOutputBuilder {
    pub(crate) report_id: ::std::option::Option<::std::string::String>,
    pub(crate) deliverability_test_status: ::std::option::Option<crate::types::DeliverabilityTestStatus>,
    _request_id: Option<String>,
}
impl CreateDeliverabilityTestReportOutputBuilder {
    /// <p>A unique string that identifies the predictive inbox placement test.</p>
    /// This field is required.
    pub fn report_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.report_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>A unique string that identifies the predictive inbox placement test.</p>
    pub fn set_report_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.report_id = input;
        self
    }
    /// <p>A unique string that identifies the predictive inbox placement test.</p>
    pub fn get_report_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.report_id
    }
    /// <p>The status of the predictive inbox placement test. If the status is <code>IN_PROGRESS</code>, then the predictive inbox placement test is currently running. Predictive inbox placement tests are usually complete within 24 hours of creating the test. If the status is <code>COMPLETE</code>, then the test is finished, and you can use the <code>GetDeliverabilityTestReport</code> to view the results of the test.</p>
    /// This field is required.
    pub fn deliverability_test_status(mut self, input: crate::types::DeliverabilityTestStatus) -> Self {
        self.deliverability_test_status = ::std::option::Option::Some(input);
        self
    }
    /// <p>The status of the predictive inbox placement test. If the status is <code>IN_PROGRESS</code>, then the predictive inbox placement test is currently running. Predictive inbox placement tests are usually complete within 24 hours of creating the test. If the status is <code>COMPLETE</code>, then the test is finished, and you can use the <code>GetDeliverabilityTestReport</code> to view the results of the test.</p>
    pub fn set_deliverability_test_status(mut self, input: ::std::option::Option<crate::types::DeliverabilityTestStatus>) -> Self {
        self.deliverability_test_status = input;
        self
    }
    /// <p>The status of the predictive inbox placement test. If the status is <code>IN_PROGRESS</code>, then the predictive inbox placement test is currently running. Predictive inbox placement tests are usually complete within 24 hours of creating the test. If the status is <code>COMPLETE</code>, then the test is finished, and you can use the <code>GetDeliverabilityTestReport</code> to view the results of the test.</p>
    pub fn get_deliverability_test_status(&self) -> &::std::option::Option<crate::types::DeliverabilityTestStatus> {
        &self.deliverability_test_status
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`CreateDeliverabilityTestReportOutput`](crate::operation::create_deliverability_test_report::CreateDeliverabilityTestReportOutput).
    /// This method will fail if any of the following fields are not set:
    /// - [`report_id`](crate::operation::create_deliverability_test_report::builders::CreateDeliverabilityTestReportOutputBuilder::report_id)
    /// - [`deliverability_test_status`](crate::operation::create_deliverability_test_report::builders::CreateDeliverabilityTestReportOutputBuilder::deliverability_test_status)
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::create_deliverability_test_report::CreateDeliverabilityTestReportOutput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(
            crate::operation::create_deliverability_test_report::CreateDeliverabilityTestReportOutput {
                report_id: self.report_id.ok_or_else(|| {
                    ::aws_smithy_types::error::operation::BuildError::missing_field(
                        "report_id",
                        "report_id was not specified but it is required when building CreateDeliverabilityTestReportOutput",
                    )
                })?,
                deliverability_test_status: self.deliverability_test_status.ok_or_else(|| {
                    ::aws_smithy_types::error::operation::BuildError::missing_field(
                        "deliverability_test_status",
                        "deliverability_test_status was not specified but it is required when building CreateDeliverabilityTestReportOutput",
                    )
                })?,
                _request_id: self._request_id,
            },
        )
    }
}
