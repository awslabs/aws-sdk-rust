// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A request to enable or disable DKIM signing of email that you send from an email identity.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct PutEmailIdentityDkimAttributesInput {
    /// <p>The email identity that you want to change the DKIM settings for.</p>
    #[doc(hidden)]
    pub email_identity: std::option::Option<std::string::String>,
    /// <p>Sets the DKIM signing configuration for the identity.</p>
    /// <p>When you set this value <code>true</code>, then the messages that Amazon Pinpoint sends from the identity are DKIM-signed. When you set this value to <code>false</code>, then the messages that Amazon Pinpoint sends from the identity aren't DKIM-signed.</p>
    #[doc(hidden)]
    pub signing_enabled: bool,
}
impl PutEmailIdentityDkimAttributesInput {
    /// <p>The email identity that you want to change the DKIM settings for.</p>
    pub fn email_identity(&self) -> std::option::Option<&str> {
        self.email_identity.as_deref()
    }
    /// <p>Sets the DKIM signing configuration for the identity.</p>
    /// <p>When you set this value <code>true</code>, then the messages that Amazon Pinpoint sends from the identity are DKIM-signed. When you set this value to <code>false</code>, then the messages that Amazon Pinpoint sends from the identity aren't DKIM-signed.</p>
    pub fn signing_enabled(&self) -> bool {
        self.signing_enabled
    }
}
impl PutEmailIdentityDkimAttributesInput {
    /// Creates a new builder-style object to manufacture [`PutEmailIdentityDkimAttributesInput`](crate::operation::put_email_identity_dkim_attributes::PutEmailIdentityDkimAttributesInput).
    pub fn builder() -> crate::operation::put_email_identity_dkim_attributes::builders::PutEmailIdentityDkimAttributesInputBuilder{
        crate::operation::put_email_identity_dkim_attributes::builders::PutEmailIdentityDkimAttributesInputBuilder::default()
    }
}

/// A builder for [`PutEmailIdentityDkimAttributesInput`](crate::operation::put_email_identity_dkim_attributes::PutEmailIdentityDkimAttributesInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct PutEmailIdentityDkimAttributesInputBuilder {
    pub(crate) email_identity: std::option::Option<std::string::String>,
    pub(crate) signing_enabled: std::option::Option<bool>,
}
impl PutEmailIdentityDkimAttributesInputBuilder {
    /// <p>The email identity that you want to change the DKIM settings for.</p>
    pub fn email_identity(mut self, input: impl Into<std::string::String>) -> Self {
        self.email_identity = Some(input.into());
        self
    }
    /// <p>The email identity that you want to change the DKIM settings for.</p>
    pub fn set_email_identity(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.email_identity = input;
        self
    }
    /// <p>Sets the DKIM signing configuration for the identity.</p>
    /// <p>When you set this value <code>true</code>, then the messages that Amazon Pinpoint sends from the identity are DKIM-signed. When you set this value to <code>false</code>, then the messages that Amazon Pinpoint sends from the identity aren't DKIM-signed.</p>
    pub fn signing_enabled(mut self, input: bool) -> Self {
        self.signing_enabled = Some(input);
        self
    }
    /// <p>Sets the DKIM signing configuration for the identity.</p>
    /// <p>When you set this value <code>true</code>, then the messages that Amazon Pinpoint sends from the identity are DKIM-signed. When you set this value to <code>false</code>, then the messages that Amazon Pinpoint sends from the identity aren't DKIM-signed.</p>
    pub fn set_signing_enabled(mut self, input: std::option::Option<bool>) -> Self {
        self.signing_enabled = input;
        self
    }
    /// Consumes the builder and constructs a [`PutEmailIdentityDkimAttributesInput`](crate::operation::put_email_identity_dkim_attributes::PutEmailIdentityDkimAttributesInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::put_email_identity_dkim_attributes::PutEmailIdentityDkimAttributesInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::put_email_identity_dkim_attributes::PutEmailIdentityDkimAttributesInput {
                email_identity: self.email_identity
                ,
                signing_enabled: self.signing_enabled
                    .unwrap_or_default()
                ,
            }
        )
    }
}
