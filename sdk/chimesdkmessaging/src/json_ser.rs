// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn serialize_structure_crate_input_batch_create_channel_membership_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::BatchCreateChannelMembershipInput,
) {
    if let Some(var_1) = &input.member_arns {
        let mut array_2 = object.key("MemberArns").start_array();
        for item_3 in var_1 {
            {
                array_2.value().string(item_3);
            }
        }
        array_2.finish();
    }
    if let Some(var_4) = &input.r#type {
        object.key("Type").string(var_4.as_str());
    }
}

pub fn serialize_structure_crate_input_create_channel_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateChannelInput,
) {
    if let Some(var_5) = &input.app_instance_arn {
        object.key("AppInstanceArn").string(var_5);
    }
    if let Some(var_6) = &input.client_request_token {
        object.key("ClientRequestToken").string(var_6);
    }
    if let Some(var_7) = &input.metadata {
        object.key("Metadata").string(var_7);
    }
    if let Some(var_8) = &input.mode {
        object.key("Mode").string(var_8.as_str());
    }
    if let Some(var_9) = &input.name {
        object.key("Name").string(var_9);
    }
    if let Some(var_10) = &input.privacy {
        object.key("Privacy").string(var_10.as_str());
    }
    if let Some(var_11) = &input.tags {
        let mut array_12 = object.key("Tags").start_array();
        for item_13 in var_11 {
            {
                let mut object_14 = array_12.value().start_object();
                crate::json_ser::serialize_structure_crate_model_tag(&mut object_14, item_13);
                object_14.finish();
            }
        }
        array_12.finish();
    }
}

pub fn serialize_structure_crate_input_create_channel_ban_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateChannelBanInput,
) {
    if let Some(var_15) = &input.member_arn {
        object.key("MemberArn").string(var_15);
    }
}

pub fn serialize_structure_crate_input_create_channel_membership_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateChannelMembershipInput,
) {
    if let Some(var_16) = &input.member_arn {
        object.key("MemberArn").string(var_16);
    }
    if let Some(var_17) = &input.r#type {
        object.key("Type").string(var_17.as_str());
    }
}

pub fn serialize_structure_crate_input_create_channel_moderator_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateChannelModeratorInput,
) {
    if let Some(var_18) = &input.channel_moderator_arn {
        object.key("ChannelModeratorArn").string(var_18);
    }
}

pub fn serialize_structure_crate_input_send_channel_message_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::SendChannelMessageInput,
) {
    if let Some(var_19) = &input.client_request_token {
        object.key("ClientRequestToken").string(var_19);
    }
    if let Some(var_20) = &input.content {
        object.key("Content").string(var_20);
    }
    if let Some(var_21) = &input.metadata {
        object.key("Metadata").string(var_21);
    }
    if let Some(var_22) = &input.persistence {
        object.key("Persistence").string(var_22.as_str());
    }
    if let Some(var_23) = &input.r#type {
        object.key("Type").string(var_23.as_str());
    }
}

pub fn serialize_structure_crate_input_update_channel_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateChannelInput,
) {
    if let Some(var_24) = &input.metadata {
        object.key("Metadata").string(var_24);
    }
    if let Some(var_25) = &input.mode {
        object.key("Mode").string(var_25.as_str());
    }
    if let Some(var_26) = &input.name {
        object.key("Name").string(var_26);
    }
}

pub fn serialize_structure_crate_input_update_channel_message_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateChannelMessageInput,
) {
    if let Some(var_27) = &input.content {
        object.key("Content").string(var_27);
    }
    if let Some(var_28) = &input.metadata {
        object.key("Metadata").string(var_28);
    }
}

pub fn serialize_structure_crate_model_tag(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::Tag,
) {
    if let Some(var_29) = &input.key {
        object.key("Key").string(var_29);
    }
    if let Some(var_30) = &input.value {
        object.key("Value").string(var_30);
    }
}
