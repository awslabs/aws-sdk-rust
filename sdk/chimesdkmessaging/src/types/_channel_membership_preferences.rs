// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The channel membership preferences for an <code>AppInstanceUser</code>.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ChannelMembershipPreferences {
    /// <p>The push notification configuration of a message.</p>
    #[doc(hidden)]
    pub push_notifications: std::option::Option<crate::types::PushNotificationPreferences>,
}
impl ChannelMembershipPreferences {
    /// <p>The push notification configuration of a message.</p>
    pub fn push_notifications(
        &self,
    ) -> std::option::Option<&crate::types::PushNotificationPreferences> {
        self.push_notifications.as_ref()
    }
}
impl ChannelMembershipPreferences {
    /// Creates a new builder-style object to manufacture [`ChannelMembershipPreferences`](crate::types::ChannelMembershipPreferences).
    pub fn builder() -> crate::types::builders::ChannelMembershipPreferencesBuilder {
        crate::types::builders::ChannelMembershipPreferencesBuilder::default()
    }
}

/// A builder for [`ChannelMembershipPreferences`](crate::types::ChannelMembershipPreferences).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ChannelMembershipPreferencesBuilder {
    pub(crate) push_notifications: std::option::Option<crate::types::PushNotificationPreferences>,
}
impl ChannelMembershipPreferencesBuilder {
    /// <p>The push notification configuration of a message.</p>
    pub fn push_notifications(mut self, input: crate::types::PushNotificationPreferences) -> Self {
        self.push_notifications = Some(input);
        self
    }
    /// <p>The push notification configuration of a message.</p>
    pub fn set_push_notifications(
        mut self,
        input: std::option::Option<crate::types::PushNotificationPreferences>,
    ) -> Self {
        self.push_notifications = input;
        self
    }
    /// Consumes the builder and constructs a [`ChannelMembershipPreferences`](crate::types::ChannelMembershipPreferences).
    pub fn build(self) -> crate::types::ChannelMembershipPreferences {
        crate::types::ChannelMembershipPreferences {
            push_notifications: self.push_notifications,
        }
    }
}
