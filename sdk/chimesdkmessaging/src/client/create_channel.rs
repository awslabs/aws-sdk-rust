// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateChannel`](crate::operation::create_channel::builders::CreateChannelFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`app_instance_arn(impl Into<String>)`](crate::operation::create_channel::builders::CreateChannelFluentBuilder::app_instance_arn) / [`set_app_instance_arn(Option<String>)`](crate::operation::create_channel::builders::CreateChannelFluentBuilder::set_app_instance_arn):<br>required: **true**<br><p>The ARN of the channel request.</p><br>
    ///   - [`name(impl Into<String>)`](crate::operation::create_channel::builders::CreateChannelFluentBuilder::name) / [`set_name(Option<String>)`](crate::operation::create_channel::builders::CreateChannelFluentBuilder::set_name):<br>required: **true**<br><p>The name of the channel.</p><br>
    ///   - [`mode(ChannelMode)`](crate::operation::create_channel::builders::CreateChannelFluentBuilder::mode) / [`set_mode(Option<ChannelMode>)`](crate::operation::create_channel::builders::CreateChannelFluentBuilder::set_mode):<br>required: **false**<br><p>The channel mode: <code>UNRESTRICTED</code> or <code>RESTRICTED</code>. Administrators, moderators, and channel members can add themselves and other members to unrestricted channels. Only administrators and moderators can add members to restricted channels.</p><br>
    ///   - [`privacy(ChannelPrivacy)`](crate::operation::create_channel::builders::CreateChannelFluentBuilder::privacy) / [`set_privacy(Option<ChannelPrivacy>)`](crate::operation::create_channel::builders::CreateChannelFluentBuilder::set_privacy):<br>required: **false**<br><p>The channel's privacy level: <code>PUBLIC</code> or <code>PRIVATE</code>. Private channels aren't discoverable by users outside the channel. Public channels are discoverable by anyone in the <code>AppInstance</code>.</p><br>
    ///   - [`metadata(impl Into<String>)`](crate::operation::create_channel::builders::CreateChannelFluentBuilder::metadata) / [`set_metadata(Option<String>)`](crate::operation::create_channel::builders::CreateChannelFluentBuilder::set_metadata):<br>required: **false**<br><p>The metadata of the creation request. Limited to 1KB and UTF-8.</p><br>
    ///   - [`client_request_token(impl Into<String>)`](crate::operation::create_channel::builders::CreateChannelFluentBuilder::client_request_token) / [`set_client_request_token(Option<String>)`](crate::operation::create_channel::builders::CreateChannelFluentBuilder::set_client_request_token):<br>required: **true**<br><p>The client token for the request. An <code>Idempotency</code> token.</p><br>
    ///   - [`tags(Tag)`](crate::operation::create_channel::builders::CreateChannelFluentBuilder::tags) / [`set_tags(Option<Vec::<Tag>>)`](crate::operation::create_channel::builders::CreateChannelFluentBuilder::set_tags):<br>required: **false**<br><p>The tags for the creation request.</p><br>
    ///   - [`chime_bearer(impl Into<String>)`](crate::operation::create_channel::builders::CreateChannelFluentBuilder::chime_bearer) / [`set_chime_bearer(Option<String>)`](crate::operation::create_channel::builders::CreateChannelFluentBuilder::set_chime_bearer):<br>required: **true**<br><p>The ARN of the <code>AppInstanceUser</code> or <code>AppInstanceBot</code> that makes the API call.</p><br>
    ///   - [`channel_id(impl Into<String>)`](crate::operation::create_channel::builders::CreateChannelFluentBuilder::channel_id) / [`set_channel_id(Option<String>)`](crate::operation::create_channel::builders::CreateChannelFluentBuilder::set_channel_id):<br>required: **false**<br><p>The ID of the channel in the request.</p><br>
    ///   - [`member_arns(impl Into<String>)`](crate::operation::create_channel::builders::CreateChannelFluentBuilder::member_arns) / [`set_member_arns(Option<Vec::<String>>)`](crate::operation::create_channel::builders::CreateChannelFluentBuilder::set_member_arns):<br>required: **false**<br><p>The ARNs of the channel members in the request.</p><br>
    ///   - [`moderator_arns(impl Into<String>)`](crate::operation::create_channel::builders::CreateChannelFluentBuilder::moderator_arns) / [`set_moderator_arns(Option<Vec::<String>>)`](crate::operation::create_channel::builders::CreateChannelFluentBuilder::set_moderator_arns):<br>required: **false**<br><p>The ARNs of the channel moderators in the request.</p><br>
    ///   - [`elastic_channel_configuration(ElasticChannelConfiguration)`](crate::operation::create_channel::builders::CreateChannelFluentBuilder::elastic_channel_configuration) / [`set_elastic_channel_configuration(Option<ElasticChannelConfiguration>)`](crate::operation::create_channel::builders::CreateChannelFluentBuilder::set_elastic_channel_configuration):<br>required: **false**<br><p>The attributes required to configure and create an elastic channel. An elastic channel can support a maximum of 1-million users, excluding moderators.</p><br>
    ///   - [`expiration_settings(ExpirationSettings)`](crate::operation::create_channel::builders::CreateChannelFluentBuilder::expiration_settings) / [`set_expiration_settings(Option<ExpirationSettings>)`](crate::operation::create_channel::builders::CreateChannelFluentBuilder::set_expiration_settings):<br>required: **false**<br><p>Settings that control the interval after which the channel is automatically deleted.</p><br>
    /// - On success, responds with [`CreateChannelOutput`](crate::operation::create_channel::CreateChannelOutput) with field(s):
    ///   - [`channel_arn(Option<String>)`](crate::operation::create_channel::CreateChannelOutput::channel_arn): <p>The ARN of the channel.</p>
    /// - On failure, responds with [`SdkError<CreateChannelError>`](crate::operation::create_channel::CreateChannelError)
    pub fn create_channel(&self) -> crate::operation::create_channel::builders::CreateChannelFluentBuilder {
        crate::operation::create_channel::builders::CreateChannelFluentBuilder::new(self.handle.clone())
    }
}
