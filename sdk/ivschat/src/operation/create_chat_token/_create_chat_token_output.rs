// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct CreateChatTokenOutput {
    /// <p>The issued client token, encrypted.</p>
    #[doc(hidden)]
    pub token: std::option::Option<std::string::String>,
    /// <p>Time after which the token is no longer valid and cannot be used to connect to a room. This is an ISO 8601 timestamp; <i>note that this is returned as a string</i>.</p>
    #[doc(hidden)]
    pub token_expiration_time: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>Time after which an end user's session is no longer valid. This is an ISO 8601 timestamp; <i>note that this is returned as a string</i>.</p>
    #[doc(hidden)]
    pub session_expiration_time: std::option::Option<aws_smithy_types::DateTime>,
    _request_id: Option<String>,
}
impl CreateChatTokenOutput {
    /// <p>The issued client token, encrypted.</p>
    pub fn token(&self) -> std::option::Option<&str> {
        self.token.as_deref()
    }
    /// <p>Time after which the token is no longer valid and cannot be used to connect to a room. This is an ISO 8601 timestamp; <i>note that this is returned as a string</i>.</p>
    pub fn token_expiration_time(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.token_expiration_time.as_ref()
    }
    /// <p>Time after which an end user's session is no longer valid. This is an ISO 8601 timestamp; <i>note that this is returned as a string</i>.</p>
    pub fn session_expiration_time(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.session_expiration_time.as_ref()
    }
}
impl aws_http::request_id::RequestId for CreateChatTokenOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl CreateChatTokenOutput {
    /// Creates a new builder-style object to manufacture [`CreateChatTokenOutput`](crate::operation::create_chat_token::CreateChatTokenOutput).
    pub fn builder() -> crate::operation::create_chat_token::builders::CreateChatTokenOutputBuilder
    {
        crate::operation::create_chat_token::builders::CreateChatTokenOutputBuilder::default()
    }
}

/// A builder for [`CreateChatTokenOutput`](crate::operation::create_chat_token::CreateChatTokenOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct CreateChatTokenOutputBuilder {
    pub(crate) token: std::option::Option<std::string::String>,
    pub(crate) token_expiration_time: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) session_expiration_time: std::option::Option<aws_smithy_types::DateTime>,
    _request_id: Option<String>,
}
impl CreateChatTokenOutputBuilder {
    /// <p>The issued client token, encrypted.</p>
    pub fn token(mut self, input: impl Into<std::string::String>) -> Self {
        self.token = Some(input.into());
        self
    }
    /// <p>The issued client token, encrypted.</p>
    pub fn set_token(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.token = input;
        self
    }
    /// <p>Time after which the token is no longer valid and cannot be used to connect to a room. This is an ISO 8601 timestamp; <i>note that this is returned as a string</i>.</p>
    pub fn token_expiration_time(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.token_expiration_time = Some(input);
        self
    }
    /// <p>Time after which the token is no longer valid and cannot be used to connect to a room. This is an ISO 8601 timestamp; <i>note that this is returned as a string</i>.</p>
    pub fn set_token_expiration_time(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.token_expiration_time = input;
        self
    }
    /// <p>Time after which an end user's session is no longer valid. This is an ISO 8601 timestamp; <i>note that this is returned as a string</i>.</p>
    pub fn session_expiration_time(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.session_expiration_time = Some(input);
        self
    }
    /// <p>Time after which an end user's session is no longer valid. This is an ISO 8601 timestamp; <i>note that this is returned as a string</i>.</p>
    pub fn set_session_expiration_time(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.session_expiration_time = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`CreateChatTokenOutput`](crate::operation::create_chat_token::CreateChatTokenOutput).
    pub fn build(self) -> crate::operation::create_chat_token::CreateChatTokenOutput {
        crate::operation::create_chat_token::CreateChatTokenOutput {
            token: self.token,
            token_expiration_time: self.token_expiration_time,
            session_expiration_time: self.session_expiration_time,
            _request_id: self._request_id,
        }
    }
}
