// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) mod shape_create_chat_token;

pub fn parse_http_error_metadata(
    response: &http::Response<bytes::Bytes>,
) -> Result<
    aws_smithy_types::error::metadata::Builder,
    aws_smithy_json::deserialize::error::DeserializeError,
> {
    crate::json_errors::parse_error_metadata(response.body(), response.headers())
}

pub(crate) mod shape_create_logging_configuration;

pub(crate) mod shape_create_room;

pub(crate) mod shape_delete_logging_configuration;

pub(crate) mod shape_delete_message;

pub(crate) mod shape_delete_room;

pub(crate) mod shape_disconnect_user;

pub(crate) mod shape_get_logging_configuration;

pub(crate) mod shape_get_room;

pub(crate) mod shape_list_logging_configurations;

pub(crate) mod shape_list_rooms;

pub(crate) mod shape_list_tags_for_resource;

pub(crate) mod shape_send_event;

pub(crate) mod shape_tag_resource;

pub(crate) mod shape_untag_resource;

pub(crate) mod shape_update_logging_configuration;

pub(crate) mod shape_update_room;

pub(crate) fn or_empty_doc(data: &[u8]) -> &[u8] {
    if data.is_empty() {
        b"{}"
    } else {
        data
    }
}

pub(crate) mod shape_access_denied_exception;

pub(crate) mod shape_conflict_exception;

pub(crate) mod shape_create_chat_token_input;

pub(crate) mod shape_create_logging_configuration_input;

pub(crate) mod shape_create_room_input;

pub(crate) mod shape_delete_logging_configuration_input;

pub(crate) mod shape_delete_message_input;

pub(crate) mod shape_delete_room_input;

pub(crate) mod shape_disconnect_user_input;

pub(crate) mod shape_get_logging_configuration_input;

pub(crate) mod shape_get_room_input;

pub(crate) mod shape_internal_server_exception;

pub(crate) mod shape_list_logging_configurations_input;

pub(crate) mod shape_list_rooms_input;

pub(crate) mod shape_pending_verification;

pub(crate) mod shape_resource_not_found_exception;

pub(crate) mod shape_send_event_input;

pub(crate) mod shape_service_quota_exceeded_exception;

pub(crate) mod shape_tag_resource_input;

pub(crate) mod shape_throttling_exception;

pub(crate) mod shape_update_logging_configuration_input;

pub(crate) mod shape_update_room_input;

pub(crate) mod shape_validation_exception;

pub(crate) mod shape_destination_configuration;

pub(crate) mod shape_logging_configuration_identifier_list;

pub(crate) mod shape_logging_configuration_list;

pub(crate) mod shape_message_review_handler;

pub(crate) mod shape_room_list;

pub(crate) mod shape_tags;

pub(crate) mod shape_validation_exception_field_list;

pub(crate) mod shape_cloud_watch_logs_destination_configuration;

pub(crate) mod shape_firehose_destination_configuration;

pub(crate) mod shape_logging_configuration_summary;

pub(crate) mod shape_room_summary;

pub(crate) mod shape_s3_destination_configuration;

pub(crate) mod shape_validation_exception_field;
