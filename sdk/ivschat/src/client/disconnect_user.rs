// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DisconnectUser`](crate::operation::disconnect_user::builders::DisconnectUserFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`room_identifier(impl Into<String>)`](crate::operation::disconnect_user::builders::DisconnectUserFluentBuilder::room_identifier) / [`set_room_identifier(Option<String>)`](crate::operation::disconnect_user::builders::DisconnectUserFluentBuilder::set_room_identifier):<br>required: **true**<br><p>Identifier of the room from which the user's clients should be disconnected. Currently this must be an ARN.</p><br>
    ///   - [`user_id(impl Into<String>)`](crate::operation::disconnect_user::builders::DisconnectUserFluentBuilder::user_id) / [`set_user_id(Option<String>)`](crate::operation::disconnect_user::builders::DisconnectUserFluentBuilder::set_user_id):<br>required: **true**<br><p>ID of the user (connection) to disconnect from the room.</p><br>
    ///   - [`reason(impl Into<String>)`](crate::operation::disconnect_user::builders::DisconnectUserFluentBuilder::reason) / [`set_reason(Option<String>)`](crate::operation::disconnect_user::builders::DisconnectUserFluentBuilder::set_reason):<br>required: **false**<br><p>Reason for disconnecting the user.</p><br>
    /// - On success, responds with [`DisconnectUserOutput`](crate::operation::disconnect_user::DisconnectUserOutput)
    /// - On failure, responds with [`SdkError<DisconnectUserError>`](crate::operation::disconnect_user::DisconnectUserError)
    pub fn disconnect_user(&self) -> crate::operation::disconnect_user::builders::DisconnectUserFluentBuilder {
        crate::operation::disconnect_user::builders::DisconnectUserFluentBuilder::new(self.handle.clone())
    }
}
