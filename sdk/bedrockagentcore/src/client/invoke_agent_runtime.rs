// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`InvokeAgentRuntime`](crate::operation::invoke_agent_runtime::builders::InvokeAgentRuntimeFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`content_type(impl Into<String>)`](crate::operation::invoke_agent_runtime::builders::InvokeAgentRuntimeFluentBuilder::content_type) / [`set_content_type(Option<String>)`](crate::operation::invoke_agent_runtime::builders::InvokeAgentRuntimeFluentBuilder::set_content_type):<br>required: **false**<br><p>The MIME type of the input data in the payload. This tells the agent runtime how to interpret the payload data. Common values include application/json for JSON data.</p><br>
    ///   - [`accept(impl Into<String>)`](crate::operation::invoke_agent_runtime::builders::InvokeAgentRuntimeFluentBuilder::accept) / [`set_accept(Option<String>)`](crate::operation::invoke_agent_runtime::builders::InvokeAgentRuntimeFluentBuilder::set_accept):<br>required: **false**<br><p>The desired MIME type for the response from the agent runtime. This tells the agent runtime what format to use for the response data. Common values include application/json for JSON data.</p><br>
    ///   - [`mcp_session_id(impl Into<String>)`](crate::operation::invoke_agent_runtime::builders::InvokeAgentRuntimeFluentBuilder::mcp_session_id) / [`set_mcp_session_id(Option<String>)`](crate::operation::invoke_agent_runtime::builders::InvokeAgentRuntimeFluentBuilder::set_mcp_session_id):<br>required: **false**<br><p>The identifier of the MCP session.</p><br>
    ///   - [`runtime_session_id(impl Into<String>)`](crate::operation::invoke_agent_runtime::builders::InvokeAgentRuntimeFluentBuilder::runtime_session_id) / [`set_runtime_session_id(Option<String>)`](crate::operation::invoke_agent_runtime::builders::InvokeAgentRuntimeFluentBuilder::set_runtime_session_id):<br>required: **false**<br><p>The identifier of the runtime session.</p><br>
    ///   - [`mcp_protocol_version(impl Into<String>)`](crate::operation::invoke_agent_runtime::builders::InvokeAgentRuntimeFluentBuilder::mcp_protocol_version) / [`set_mcp_protocol_version(Option<String>)`](crate::operation::invoke_agent_runtime::builders::InvokeAgentRuntimeFluentBuilder::set_mcp_protocol_version):<br>required: **false**<br><p>The version of the MCP protocol being used.</p><br>
    ///   - [`runtime_user_id(impl Into<String>)`](crate::operation::invoke_agent_runtime::builders::InvokeAgentRuntimeFluentBuilder::runtime_user_id) / [`set_runtime_user_id(Option<String>)`](crate::operation::invoke_agent_runtime::builders::InvokeAgentRuntimeFluentBuilder::set_runtime_user_id):<br>required: **false**<br><p>The identifier of the runtime user.</p><br>
    ///   - [`trace_id(impl Into<String>)`](crate::operation::invoke_agent_runtime::builders::InvokeAgentRuntimeFluentBuilder::trace_id) / [`set_trace_id(Option<String>)`](crate::operation::invoke_agent_runtime::builders::InvokeAgentRuntimeFluentBuilder::set_trace_id):<br>required: **false**<br><p>The trace identifier for request tracking.</p><br>
    ///   - [`trace_parent(impl Into<String>)`](crate::operation::invoke_agent_runtime::builders::InvokeAgentRuntimeFluentBuilder::trace_parent) / [`set_trace_parent(Option<String>)`](crate::operation::invoke_agent_runtime::builders::InvokeAgentRuntimeFluentBuilder::set_trace_parent):<br>required: **false**<br><p>The parent trace information for distributed tracing.</p><br>
    ///   - [`trace_state(impl Into<String>)`](crate::operation::invoke_agent_runtime::builders::InvokeAgentRuntimeFluentBuilder::trace_state) / [`set_trace_state(Option<String>)`](crate::operation::invoke_agent_runtime::builders::InvokeAgentRuntimeFluentBuilder::set_trace_state):<br>required: **false**<br><p>The trace state information for distributed tracing.</p><br>
    ///   - [`baggage(impl Into<String>)`](crate::operation::invoke_agent_runtime::builders::InvokeAgentRuntimeFluentBuilder::baggage) / [`set_baggage(Option<String>)`](crate::operation::invoke_agent_runtime::builders::InvokeAgentRuntimeFluentBuilder::set_baggage):<br>required: **false**<br><p>Additional context information for distributed tracing.</p><br>
    ///   - [`agent_runtime_arn(impl Into<String>)`](crate::operation::invoke_agent_runtime::builders::InvokeAgentRuntimeFluentBuilder::agent_runtime_arn) / [`set_agent_runtime_arn(Option<String>)`](crate::operation::invoke_agent_runtime::builders::InvokeAgentRuntimeFluentBuilder::set_agent_runtime_arn):<br>required: **true**<br><p>The Amazon Web Services Resource Name (ARN) of the agent runtime to invoke. The ARN uniquely identifies the agent runtime resource in Amazon Bedrock.</p><br>
    ///   - [`qualifier(impl Into<String>)`](crate::operation::invoke_agent_runtime::builders::InvokeAgentRuntimeFluentBuilder::qualifier) / [`set_qualifier(Option<String>)`](crate::operation::invoke_agent_runtime::builders::InvokeAgentRuntimeFluentBuilder::set_qualifier):<br>required: **false**<br><p>The qualifier to use for the agent runtime. This can be a version number or an endpoint name that points to a specific version. If not specified, Amazon Bedrock uses the default version of the agent runtime.</p><br>
    ///   - [`account_id(impl Into<String>)`](crate::operation::invoke_agent_runtime::builders::InvokeAgentRuntimeFluentBuilder::account_id) / [`set_account_id(Option<String>)`](crate::operation::invoke_agent_runtime::builders::InvokeAgentRuntimeFluentBuilder::set_account_id):<br>required: **false**<br><p>The identifier of the Amazon Web Services account for the agent runtime resource.</p><br>
    ///   - [`payload(Blob)`](crate::operation::invoke_agent_runtime::builders::InvokeAgentRuntimeFluentBuilder::payload) / [`set_payload(Option<Blob>)`](crate::operation::invoke_agent_runtime::builders::InvokeAgentRuntimeFluentBuilder::set_payload):<br>required: **true**<br><p>The input data to send to the agent runtime. The format of this data depends on the specific agent configuration and must match the specified content type. For most agents, this is a JSON object containing the user's request.</p><br>
    /// - On success, responds with [`InvokeAgentRuntimeOutput`](crate::operation::invoke_agent_runtime::InvokeAgentRuntimeOutput) with field(s):
    ///   - [`runtime_session_id(Option<String>)`](crate::operation::invoke_agent_runtime::InvokeAgentRuntimeOutput::runtime_session_id): <p>The identifier of the runtime session.</p>
    ///   - [`mcp_session_id(Option<String>)`](crate::operation::invoke_agent_runtime::InvokeAgentRuntimeOutput::mcp_session_id): <p>The identifier of the MCP session.</p>
    ///   - [`mcp_protocol_version(Option<String>)`](crate::operation::invoke_agent_runtime::InvokeAgentRuntimeOutput::mcp_protocol_version): <p>The version of the MCP protocol being used.</p>
    ///   - [`trace_id(Option<String>)`](crate::operation::invoke_agent_runtime::InvokeAgentRuntimeOutput::trace_id): <p>The trace identifier for request tracking.</p>
    ///   - [`trace_parent(Option<String>)`](crate::operation::invoke_agent_runtime::InvokeAgentRuntimeOutput::trace_parent): <p>The parent trace information for distributed tracing.</p>
    ///   - [`trace_state(Option<String>)`](crate::operation::invoke_agent_runtime::InvokeAgentRuntimeOutput::trace_state): <p>The trace state information for distributed tracing.</p>
    ///   - [`baggage(Option<String>)`](crate::operation::invoke_agent_runtime::InvokeAgentRuntimeOutput::baggage): <p>Additional context information for distributed tracing.</p>
    ///   - [`content_type(String)`](crate::operation::invoke_agent_runtime::InvokeAgentRuntimeOutput::content_type): <p>The MIME type of the response data. This indicates how to interpret the response data. Common values include application/json for JSON data.</p>
    ///   - [`response(ByteStream)`](crate::operation::invoke_agent_runtime::InvokeAgentRuntimeOutput::response): <p>The response data from the agent runtime. The format of this data depends on the specific agent configuration and the requested accept type. For most agents, this is a JSON object containing the agent's response to the user's request.</p>
    ///   - [`status_code(Option<i32>)`](crate::operation::invoke_agent_runtime::InvokeAgentRuntimeOutput::status_code): <p>The HTTP status code of the response. A status code of 200 indicates a successful operation. Other status codes indicate various error conditions.</p>
    /// - On failure, responds with [`SdkError<InvokeAgentRuntimeError>`](crate::operation::invoke_agent_runtime::InvokeAgentRuntimeError)
    pub fn invoke_agent_runtime(&self) -> crate::operation::invoke_agent_runtime::builders::InvokeAgentRuntimeFluentBuilder {
        crate::operation::invoke_agent_runtime::builders::InvokeAgentRuntimeFluentBuilder::new(self.handle.clone())
    }
}
