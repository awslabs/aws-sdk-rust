// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`StartBrowserSession`](crate::operation::start_browser_session::builders::StartBrowserSessionFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`trace_id(impl Into<String>)`](crate::operation::start_browser_session::builders::StartBrowserSessionFluentBuilder::trace_id) / [`set_trace_id(Option<String>)`](crate::operation::start_browser_session::builders::StartBrowserSessionFluentBuilder::set_trace_id):<br>required: **false**<br><p>The trace identifier for request tracking.</p><br>
    ///   - [`trace_parent(impl Into<String>)`](crate::operation::start_browser_session::builders::StartBrowserSessionFluentBuilder::trace_parent) / [`set_trace_parent(Option<String>)`](crate::operation::start_browser_session::builders::StartBrowserSessionFluentBuilder::set_trace_parent):<br>required: **false**<br><p>The parent trace information for distributed tracing.</p><br>
    ///   - [`browser_identifier(impl Into<String>)`](crate::operation::start_browser_session::builders::StartBrowserSessionFluentBuilder::browser_identifier) / [`set_browser_identifier(Option<String>)`](crate::operation::start_browser_session::builders::StartBrowserSessionFluentBuilder::set_browser_identifier):<br>required: **true**<br><p>The unique identifier of the browser to use for this session. This identifier specifies which browser environment to initialize for the session.</p><br>
    ///   - [`name(impl Into<String>)`](crate::operation::start_browser_session::builders::StartBrowserSessionFluentBuilder::name) / [`set_name(Option<String>)`](crate::operation::start_browser_session::builders::StartBrowserSessionFluentBuilder::set_name):<br>required: **false**<br><p>The name of the browser session. This name helps you identify and manage the session. The name does not need to be unique.</p><br>
    ///   - [`session_timeout_seconds(i32)`](crate::operation::start_browser_session::builders::StartBrowserSessionFluentBuilder::session_timeout_seconds) / [`set_session_timeout_seconds(Option<i32>)`](crate::operation::start_browser_session::builders::StartBrowserSessionFluentBuilder::set_session_timeout_seconds):<br>required: **false**<br><p>The time in seconds after which the session automatically terminates if there is no activity. The default value is 3600 seconds (1 hour). The minimum allowed value is 60 seconds, and the maximum allowed value is 28800 seconds (8 hours).</p><br>
    ///   - [`view_port(ViewPort)`](crate::operation::start_browser_session::builders::StartBrowserSessionFluentBuilder::view_port) / [`set_view_port(Option<ViewPort>)`](crate::operation::start_browser_session::builders::StartBrowserSessionFluentBuilder::set_view_port):<br>required: **false**<br><p>The dimensions of the browser viewport for this session. This determines the visible area of the web content and affects how web pages are rendered. If not specified, Amazon Bedrock uses a default viewport size.</p><br>
    ///   - [`client_token(impl Into<String>)`](crate::operation::start_browser_session::builders::StartBrowserSessionFluentBuilder::client_token) / [`set_client_token(Option<String>)`](crate::operation::start_browser_session::builders::StartBrowserSessionFluentBuilder::set_client_token):<br>required: **false**<br><p>A unique, case-sensitive identifier to ensure that the API request completes no more than one time. If this token matches a previous request, Amazon Bedrock ignores the request, but does not return an error. This parameter helps prevent the creation of duplicate sessions if there are temporary network issues.</p><br>
    /// - On success, responds with [`StartBrowserSessionOutput`](crate::operation::start_browser_session::StartBrowserSessionOutput) with field(s):
    ///   - [`browser_identifier(String)`](crate::operation::start_browser_session::StartBrowserSessionOutput::browser_identifier): <p>The identifier of the browser.</p>
    ///   - [`session_id(String)`](crate::operation::start_browser_session::StartBrowserSessionOutput::session_id): <p>The unique identifier of the created browser session.</p>
    ///   - [`created_at(DateTime)`](crate::operation::start_browser_session::StartBrowserSessionOutput::created_at): <p>The timestamp when the browser session was created.</p>
    ///   - [`streams(Option<BrowserSessionStream>)`](crate::operation::start_browser_session::StartBrowserSessionOutput::streams): <p>The streams associated with this browser session. These include the automation stream and live view stream.</p>
    /// - On failure, responds with [`SdkError<StartBrowserSessionError>`](crate::operation::start_browser_session::StartBrowserSessionError)
    pub fn start_browser_session(&self) -> crate::operation::start_browser_session::builders::StartBrowserSessionFluentBuilder {
        crate::operation::start_browser_session::builders::StartBrowserSessionFluentBuilder::new(self.handle.clone())
    }
}
