// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) fn type_erase_result<O, E>(
    result: ::std::result::Result<O, E>,
) -> ::std::result::Result<
    ::aws_smithy_runtime_api::client::interceptors::context::Output,
    ::aws_smithy_runtime_api::client::orchestrator::OrchestratorError<::aws_smithy_runtime_api::client::interceptors::context::Error>,
>
where
    O: ::std::fmt::Debug + ::std::marker::Send + ::std::marker::Sync + 'static,
    E: ::std::error::Error + std::fmt::Debug + ::std::marker::Send + ::std::marker::Sync + 'static,
{
    result
        .map(|output| ::aws_smithy_runtime_api::client::interceptors::context::Output::erase(output))
        .map_err(|error| ::aws_smithy_runtime_api::client::interceptors::context::Error::erase(error))
        .map_err(::std::convert::Into::into)
}

pub fn parse_http_error_metadata(
    _response_status: u16,
    response_headers: &::aws_smithy_runtime_api::http::Headers,
    response_body: &[u8],
) -> ::std::result::Result<::aws_smithy_types::error::metadata::Builder, ::aws_smithy_json::deserialize::error::DeserializeError> {
    crate::json_errors::parse_error_metadata(response_body, response_headers)
}

pub(crate) mod shape_batch_create_memory_records;

pub(crate) mod shape_batch_delete_memory_records;

pub(crate) mod shape_batch_update_memory_records;

pub(crate) mod shape_complete_resource_token_auth;

pub(crate) mod shape_create_event;

pub(crate) mod shape_delete_event;

pub(crate) mod shape_delete_memory_record;

pub(crate) mod shape_get_agent_card;

pub(crate) mod shape_get_browser_session;

pub(crate) mod shape_get_code_interpreter_session;

pub(crate) mod shape_get_event;

pub(crate) mod shape_get_memory_record;

pub(crate) mod shape_get_resource_api_key;

pub(crate) mod shape_get_resource_oauth2_token;

pub(crate) mod shape_get_workload_access_token;

pub(crate) mod shape_get_workload_access_token_for_jwt;

pub(crate) mod shape_get_workload_access_token_for_user_id;

pub(crate) mod shape_invoke_agent_runtime;

pub(crate) mod shape_invoke_agent_runtime_input;

pub(crate) mod shape_invoke_code_interpreter;

pub(crate) mod shape_list_actors;

pub(crate) mod shape_list_browser_sessions;

pub(crate) mod shape_list_code_interpreter_sessions;

pub(crate) mod shape_list_events;

pub(crate) mod shape_list_memory_records;

pub(crate) mod shape_list_sessions;

pub(crate) mod shape_retrieve_memory_records;

pub(crate) mod shape_start_browser_session;

pub(crate) mod shape_start_code_interpreter_session;

pub(crate) mod shape_stop_browser_session;

pub(crate) mod shape_stop_code_interpreter_session;

pub(crate) mod shape_stop_runtime_session;

pub(crate) mod shape_update_browser_stream;

pub(crate) fn or_empty_doc(data: &[u8]) -> &[u8] {
    if data.is_empty() {
        b"{}"
    } else {
        data
    }
}

pub(crate) mod shape_access_denied_exception;

pub(crate) mod shape_batch_create_memory_records_input;

pub(crate) mod shape_batch_delete_memory_records_input;

pub(crate) mod shape_batch_update_memory_records_input;

pub(crate) mod shape_complete_resource_token_auth_input;

pub(crate) mod shape_conflict_exception;

pub(crate) mod shape_create_event_input;

pub(crate) mod shape_get_agent_card_output;

pub(crate) mod shape_get_resource_api_key_input;

pub(crate) mod shape_get_resource_oauth2_token_input;

pub(crate) mod shape_get_workload_access_token_for_jwt_input;

pub(crate) mod shape_get_workload_access_token_for_user_id_input;

pub(crate) mod shape_get_workload_access_token_input;

pub(crate) mod shape_internal_server_exception;

pub(crate) mod shape_invalid_input_exception;

pub(crate) mod shape_invoke_agent_runtime_output;

pub(crate) mod shape_invoke_code_interpreter_input;

pub(crate) mod shape_invoke_code_interpreter_output;

pub(crate) mod shape_list_actors_input;

pub(crate) mod shape_list_browser_sessions_input;

pub(crate) mod shape_list_code_interpreter_sessions_input;

pub(crate) mod shape_list_events_input;

pub(crate) mod shape_list_memory_records_input;

pub(crate) mod shape_list_sessions_input;

pub(crate) mod shape_resource_not_found_exception;

pub(crate) mod shape_retrieve_memory_records_input;

pub(crate) mod shape_runtime_client_error;

pub(crate) mod shape_service_exception;

pub(crate) mod shape_service_quota_exceeded_exception;

pub(crate) mod shape_start_browser_session_input;

pub(crate) mod shape_start_code_interpreter_session_input;

pub(crate) mod shape_stop_browser_session_input;

pub(crate) mod shape_stop_code_interpreter_session_input;

pub(crate) mod shape_stop_runtime_session_input;

pub(crate) mod shape_stop_runtime_session_output;

pub(crate) mod shape_throttled_exception;

pub(crate) mod shape_throttling_exception;

pub(crate) mod shape_unauthorized_exception;

pub(crate) mod shape_update_browser_stream_input;

pub(crate) mod shape_validation_exception;

pub fn parse_event_stream_error_metadata(
    payload: &::bytes::Bytes,
) -> ::std::result::Result<::aws_smithy_types::error::metadata::Builder, ::aws_smithy_json::deserialize::error::DeserializeError> {
    crate::json_errors::parse_error_metadata(payload, &::aws_smithy_runtime_api::http::Headers::new())
}

pub(crate) mod shape_actor_summary_list;

pub(crate) mod shape_agent_card;

pub(crate) mod shape_branch;

pub(crate) mod shape_browser_session_stream;

pub(crate) mod shape_browser_session_summaries;

pub(crate) mod shape_code_interpreter_session_summaries;

pub(crate) mod shape_event;

pub(crate) mod shape_event_list;

pub(crate) mod shape_filter_input;

pub(crate) mod shape_memory_record;

pub(crate) mod shape_memory_record_create_input;

pub(crate) mod shape_memory_record_delete_input;

pub(crate) mod shape_memory_record_summary_list;

pub(crate) mod shape_memory_record_update_input;

pub(crate) mod shape_memory_records_output_list;

pub(crate) mod shape_metadata_value;

pub(crate) mod shape_payload_type;

pub(crate) mod shape_search_criteria;

pub(crate) mod shape_session_summary_list;

pub(crate) mod shape_stream_update;

pub(crate) mod shape_tool_arguments;

pub(crate) mod shape_user_identifier;

pub(crate) mod shape_validation_exception_field_list;

pub(crate) mod shape_view_port;

pub(crate) mod shape_actor_summary;

pub(crate) mod shape_automation_stream;

pub(crate) mod shape_automation_stream_update;

pub(crate) mod shape_branch_filter;

pub(crate) mod shape_browser_session_summary;

pub(crate) mod shape_code_interpreter_result;

pub(crate) mod shape_code_interpreter_session_summary;

pub(crate) mod shape_conversational;

pub(crate) mod shape_event_metadata_filter_expression;

pub(crate) mod shape_input_content_block;

pub(crate) mod shape_live_view_stream;

pub(crate) mod shape_memory_content;

pub(crate) mod shape_memory_record_output;

pub(crate) mod shape_memory_record_summary;

pub(crate) mod shape_metadata_map;

pub(crate) mod shape_namespaces_list;

pub(crate) mod shape_payload_type_list;

pub(crate) mod shape_session_summary;

pub(crate) mod shape_validation_exception_field;

pub(crate) mod shape_content;

pub(crate) mod shape_left_expression;

pub(crate) mod shape_right_expression;

pub(crate) mod shape_content_block_list;

pub(crate) mod shape_tool_result_structured_content;

pub(crate) mod shape_content_block;

pub(crate) mod shape_resource_content;
