// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct CompleteResourceTokenAuthInput {
    /// <p>The OAuth2.0 token or user ID that was used to generate the workload access token used for initiating the user authorization flow to retrieve OAuth2.0 tokens.</p>
    pub user_identifier: ::std::option::Option<crate::types::UserIdentifier>,
    /// <p>Unique identifier for the user's authentication session for retrieving OAuth2 tokens. This ID tracks the authorization flow state across multiple requests and responses during the OAuth2 authentication process.</p>
    pub session_uri: ::std::option::Option<::std::string::String>,
}
impl CompleteResourceTokenAuthInput {
    /// <p>The OAuth2.0 token or user ID that was used to generate the workload access token used for initiating the user authorization flow to retrieve OAuth2.0 tokens.</p>
    pub fn user_identifier(&self) -> ::std::option::Option<&crate::types::UserIdentifier> {
        self.user_identifier.as_ref()
    }
    /// <p>Unique identifier for the user's authentication session for retrieving OAuth2 tokens. This ID tracks the authorization flow state across multiple requests and responses during the OAuth2 authentication process.</p>
    pub fn session_uri(&self) -> ::std::option::Option<&str> {
        self.session_uri.as_deref()
    }
}
impl CompleteResourceTokenAuthInput {
    /// Creates a new builder-style object to manufacture [`CompleteResourceTokenAuthInput`](crate::operation::complete_resource_token_auth::CompleteResourceTokenAuthInput).
    pub fn builder() -> crate::operation::complete_resource_token_auth::builders::CompleteResourceTokenAuthInputBuilder {
        crate::operation::complete_resource_token_auth::builders::CompleteResourceTokenAuthInputBuilder::default()
    }
}

/// A builder for [`CompleteResourceTokenAuthInput`](crate::operation::complete_resource_token_auth::CompleteResourceTokenAuthInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct CompleteResourceTokenAuthInputBuilder {
    pub(crate) user_identifier: ::std::option::Option<crate::types::UserIdentifier>,
    pub(crate) session_uri: ::std::option::Option<::std::string::String>,
}
impl CompleteResourceTokenAuthInputBuilder {
    /// <p>The OAuth2.0 token or user ID that was used to generate the workload access token used for initiating the user authorization flow to retrieve OAuth2.0 tokens.</p>
    /// This field is required.
    pub fn user_identifier(mut self, input: crate::types::UserIdentifier) -> Self {
        self.user_identifier = ::std::option::Option::Some(input);
        self
    }
    /// <p>The OAuth2.0 token or user ID that was used to generate the workload access token used for initiating the user authorization flow to retrieve OAuth2.0 tokens.</p>
    pub fn set_user_identifier(mut self, input: ::std::option::Option<crate::types::UserIdentifier>) -> Self {
        self.user_identifier = input;
        self
    }
    /// <p>The OAuth2.0 token or user ID that was used to generate the workload access token used for initiating the user authorization flow to retrieve OAuth2.0 tokens.</p>
    pub fn get_user_identifier(&self) -> &::std::option::Option<crate::types::UserIdentifier> {
        &self.user_identifier
    }
    /// <p>Unique identifier for the user's authentication session for retrieving OAuth2 tokens. This ID tracks the authorization flow state across multiple requests and responses during the OAuth2 authentication process.</p>
    /// This field is required.
    pub fn session_uri(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.session_uri = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Unique identifier for the user's authentication session for retrieving OAuth2 tokens. This ID tracks the authorization flow state across multiple requests and responses during the OAuth2 authentication process.</p>
    pub fn set_session_uri(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.session_uri = input;
        self
    }
    /// <p>Unique identifier for the user's authentication session for retrieving OAuth2 tokens. This ID tracks the authorization flow state across multiple requests and responses during the OAuth2 authentication process.</p>
    pub fn get_session_uri(&self) -> &::std::option::Option<::std::string::String> {
        &self.session_uri
    }
    /// Consumes the builder and constructs a [`CompleteResourceTokenAuthInput`](crate::operation::complete_resource_token_auth::CompleteResourceTokenAuthInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::complete_resource_token_auth::CompleteResourceTokenAuthInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::complete_resource_token_auth::CompleteResourceTokenAuthInput {
            user_identifier: self.user_identifier,
            session_uri: self.session_uri,
        })
    }
}
