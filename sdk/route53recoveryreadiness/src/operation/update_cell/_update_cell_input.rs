// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct UpdateCellInput {
    /// <p>The name of the cell.</p>
    #[doc(hidden)]
    pub cell_name: std::option::Option<std::string::String>,
    /// <p>A list of cell Amazon Resource Names (ARNs), which completely replaces the previous list.</p>
    #[doc(hidden)]
    pub cells: std::option::Option<std::vec::Vec<std::string::String>>,
}
impl UpdateCellInput {
    /// <p>The name of the cell.</p>
    pub fn cell_name(&self) -> std::option::Option<&str> {
        self.cell_name.as_deref()
    }
    /// <p>A list of cell Amazon Resource Names (ARNs), which completely replaces the previous list.</p>
    pub fn cells(&self) -> std::option::Option<&[std::string::String]> {
        self.cells.as_deref()
    }
}
impl UpdateCellInput {
    /// Creates a new builder-style object to manufacture [`UpdateCellInput`](crate::operation::update_cell::UpdateCellInput).
    pub fn builder() -> crate::operation::update_cell::builders::UpdateCellInputBuilder {
        crate::operation::update_cell::builders::UpdateCellInputBuilder::default()
    }
}

/// A builder for [`UpdateCellInput`](crate::operation::update_cell::UpdateCellInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct UpdateCellInputBuilder {
    pub(crate) cell_name: std::option::Option<std::string::String>,
    pub(crate) cells: std::option::Option<std::vec::Vec<std::string::String>>,
}
impl UpdateCellInputBuilder {
    /// <p>The name of the cell.</p>
    pub fn cell_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.cell_name = Some(input.into());
        self
    }
    /// <p>The name of the cell.</p>
    pub fn set_cell_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.cell_name = input;
        self
    }
    /// Appends an item to `cells`.
    ///
    /// To override the contents of this collection use [`set_cells`](Self::set_cells).
    ///
    /// <p>A list of cell Amazon Resource Names (ARNs), which completely replaces the previous list.</p>
    pub fn cells(mut self, input: impl Into<std::string::String>) -> Self {
        let mut v = self.cells.unwrap_or_default();
        v.push(input.into());
        self.cells = Some(v);
        self
    }
    /// <p>A list of cell Amazon Resource Names (ARNs), which completely replaces the previous list.</p>
    pub fn set_cells(
        mut self,
        input: std::option::Option<std::vec::Vec<std::string::String>>,
    ) -> Self {
        self.cells = input;
        self
    }
    /// Consumes the builder and constructs a [`UpdateCellInput`](crate::operation::update_cell::UpdateCellInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::update_cell::UpdateCellInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(crate::operation::update_cell::UpdateCellInput {
            cell_name: self.cell_name,
            cells: self.cells,
        })
    }
}
