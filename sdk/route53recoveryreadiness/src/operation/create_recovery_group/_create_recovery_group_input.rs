// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct CreateRecoveryGroupInput {
    /// <p>A list of the cell Amazon Resource Names (ARNs) in the recovery group.</p>
    #[doc(hidden)]
    pub cells: std::option::Option<std::vec::Vec<std::string::String>>,
    /// <p>The name of the recovery group to create.</p>
    #[doc(hidden)]
    pub recovery_group_name: std::option::Option<std::string::String>,
    /// <p>A collection of tags associated with a resource.</p>
    #[doc(hidden)]
    pub tags:
        std::option::Option<std::collections::HashMap<std::string::String, std::string::String>>,
}
impl CreateRecoveryGroupInput {
    /// <p>A list of the cell Amazon Resource Names (ARNs) in the recovery group.</p>
    pub fn cells(&self) -> std::option::Option<&[std::string::String]> {
        self.cells.as_deref()
    }
    /// <p>The name of the recovery group to create.</p>
    pub fn recovery_group_name(&self) -> std::option::Option<&str> {
        self.recovery_group_name.as_deref()
    }
    /// <p>A collection of tags associated with a resource.</p>
    pub fn tags(
        &self,
    ) -> std::option::Option<&std::collections::HashMap<std::string::String, std::string::String>>
    {
        self.tags.as_ref()
    }
}
impl CreateRecoveryGroupInput {
    /// Creates a new builder-style object to manufacture [`CreateRecoveryGroupInput`](crate::operation::create_recovery_group::CreateRecoveryGroupInput).
    pub fn builder(
    ) -> crate::operation::create_recovery_group::builders::CreateRecoveryGroupInputBuilder {
        crate::operation::create_recovery_group::builders::CreateRecoveryGroupInputBuilder::default(
        )
    }
}

/// A builder for [`CreateRecoveryGroupInput`](crate::operation::create_recovery_group::CreateRecoveryGroupInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct CreateRecoveryGroupInputBuilder {
    pub(crate) cells: std::option::Option<std::vec::Vec<std::string::String>>,
    pub(crate) recovery_group_name: std::option::Option<std::string::String>,
    pub(crate) tags:
        std::option::Option<std::collections::HashMap<std::string::String, std::string::String>>,
}
impl CreateRecoveryGroupInputBuilder {
    /// Appends an item to `cells`.
    ///
    /// To override the contents of this collection use [`set_cells`](Self::set_cells).
    ///
    /// <p>A list of the cell Amazon Resource Names (ARNs) in the recovery group.</p>
    pub fn cells(mut self, input: impl Into<std::string::String>) -> Self {
        let mut v = self.cells.unwrap_or_default();
        v.push(input.into());
        self.cells = Some(v);
        self
    }
    /// <p>A list of the cell Amazon Resource Names (ARNs) in the recovery group.</p>
    pub fn set_cells(
        mut self,
        input: std::option::Option<std::vec::Vec<std::string::String>>,
    ) -> Self {
        self.cells = input;
        self
    }
    /// <p>The name of the recovery group to create.</p>
    pub fn recovery_group_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.recovery_group_name = Some(input.into());
        self
    }
    /// <p>The name of the recovery group to create.</p>
    pub fn set_recovery_group_name(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.recovery_group_name = input;
        self
    }
    /// Adds a key-value pair to `tags`.
    ///
    /// To override the contents of this collection use [`set_tags`](Self::set_tags).
    ///
    /// <p>A collection of tags associated with a resource.</p>
    pub fn tags(
        mut self,
        k: impl Into<std::string::String>,
        v: impl Into<std::string::String>,
    ) -> Self {
        let mut hash_map = self.tags.unwrap_or_default();
        hash_map.insert(k.into(), v.into());
        self.tags = Some(hash_map);
        self
    }
    /// <p>A collection of tags associated with a resource.</p>
    pub fn set_tags(
        mut self,
        input: std::option::Option<
            std::collections::HashMap<std::string::String, std::string::String>,
        >,
    ) -> Self {
        self.tags = input;
        self
    }
    /// Consumes the builder and constructs a [`CreateRecoveryGroupInput`](crate::operation::create_recovery_group::CreateRecoveryGroupInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::create_recovery_group::CreateRecoveryGroupInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::create_recovery_group::CreateRecoveryGroupInput {
                cells: self.cells,
                recovery_group_name: self.recovery_group_name,
                tags: self.tags,
            },
        )
    }
}
