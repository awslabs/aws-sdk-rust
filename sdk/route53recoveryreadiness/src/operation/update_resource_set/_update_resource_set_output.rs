// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct UpdateResourceSetOutput {
    /// <p>The Amazon Resource Name (ARN) for the resource set.</p>
    #[doc(hidden)]
    pub resource_set_arn: std::option::Option<std::string::String>,
    /// <p>The name of the resource set.</p>
    #[doc(hidden)]
    pub resource_set_name: std::option::Option<std::string::String>,
    /// <p>The resource type of the resources in the resource set. Enter one of the following values for resource type:</p>
    /// <p>AWS::ApiGateway::Stage, AWS::ApiGatewayV2::Stage, AWS::AutoScaling::AutoScalingGroup, AWS::CloudWatch::Alarm, AWS::EC2::CustomerGateway, AWS::DynamoDB::Table, AWS::EC2::Volume, AWS::ElasticLoadBalancing::LoadBalancer, AWS::ElasticLoadBalancingV2::LoadBalancer, AWS::Lambda::Function, AWS::MSK::Cluster, AWS::RDS::DBCluster, AWS::Route53::HealthCheck, AWS::SQS::Queue, AWS::SNS::Topic, AWS::SNS::Subscription, AWS::EC2::VPC, AWS::EC2::VPNConnection, AWS::EC2::VPNGateway, AWS::Route53RecoveryReadiness::DNSTargetResource</p>
    #[doc(hidden)]
    pub resource_set_type: std::option::Option<std::string::String>,
    /// <p>A list of resource objects.</p>
    #[doc(hidden)]
    pub resources: std::option::Option<std::vec::Vec<crate::types::Resource>>,
    /// <p>A collection of tags associated with a resource.</p>
    #[doc(hidden)]
    pub tags:
        std::option::Option<std::collections::HashMap<std::string::String, std::string::String>>,
    _request_id: Option<String>,
}
impl UpdateResourceSetOutput {
    /// <p>The Amazon Resource Name (ARN) for the resource set.</p>
    pub fn resource_set_arn(&self) -> std::option::Option<&str> {
        self.resource_set_arn.as_deref()
    }
    /// <p>The name of the resource set.</p>
    pub fn resource_set_name(&self) -> std::option::Option<&str> {
        self.resource_set_name.as_deref()
    }
    /// <p>The resource type of the resources in the resource set. Enter one of the following values for resource type:</p>
    /// <p>AWS::ApiGateway::Stage, AWS::ApiGatewayV2::Stage, AWS::AutoScaling::AutoScalingGroup, AWS::CloudWatch::Alarm, AWS::EC2::CustomerGateway, AWS::DynamoDB::Table, AWS::EC2::Volume, AWS::ElasticLoadBalancing::LoadBalancer, AWS::ElasticLoadBalancingV2::LoadBalancer, AWS::Lambda::Function, AWS::MSK::Cluster, AWS::RDS::DBCluster, AWS::Route53::HealthCheck, AWS::SQS::Queue, AWS::SNS::Topic, AWS::SNS::Subscription, AWS::EC2::VPC, AWS::EC2::VPNConnection, AWS::EC2::VPNGateway, AWS::Route53RecoveryReadiness::DNSTargetResource</p>
    pub fn resource_set_type(&self) -> std::option::Option<&str> {
        self.resource_set_type.as_deref()
    }
    /// <p>A list of resource objects.</p>
    pub fn resources(&self) -> std::option::Option<&[crate::types::Resource]> {
        self.resources.as_deref()
    }
    /// <p>A collection of tags associated with a resource.</p>
    pub fn tags(
        &self,
    ) -> std::option::Option<&std::collections::HashMap<std::string::String, std::string::String>>
    {
        self.tags.as_ref()
    }
}
impl aws_http::request_id::RequestId for UpdateResourceSetOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl UpdateResourceSetOutput {
    /// Creates a new builder-style object to manufacture [`UpdateResourceSetOutput`](crate::operation::update_resource_set::UpdateResourceSetOutput).
    pub fn builder(
    ) -> crate::operation::update_resource_set::builders::UpdateResourceSetOutputBuilder {
        crate::operation::update_resource_set::builders::UpdateResourceSetOutputBuilder::default()
    }
}

/// A builder for [`UpdateResourceSetOutput`](crate::operation::update_resource_set::UpdateResourceSetOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct UpdateResourceSetOutputBuilder {
    pub(crate) resource_set_arn: std::option::Option<std::string::String>,
    pub(crate) resource_set_name: std::option::Option<std::string::String>,
    pub(crate) resource_set_type: std::option::Option<std::string::String>,
    pub(crate) resources: std::option::Option<std::vec::Vec<crate::types::Resource>>,
    pub(crate) tags:
        std::option::Option<std::collections::HashMap<std::string::String, std::string::String>>,
    _request_id: Option<String>,
}
impl UpdateResourceSetOutputBuilder {
    /// <p>The Amazon Resource Name (ARN) for the resource set.</p>
    pub fn resource_set_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.resource_set_arn = Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) for the resource set.</p>
    pub fn set_resource_set_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.resource_set_arn = input;
        self
    }
    /// <p>The name of the resource set.</p>
    pub fn resource_set_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.resource_set_name = Some(input.into());
        self
    }
    /// <p>The name of the resource set.</p>
    pub fn set_resource_set_name(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.resource_set_name = input;
        self
    }
    /// <p>The resource type of the resources in the resource set. Enter one of the following values for resource type:</p>
    /// <p>AWS::ApiGateway::Stage, AWS::ApiGatewayV2::Stage, AWS::AutoScaling::AutoScalingGroup, AWS::CloudWatch::Alarm, AWS::EC2::CustomerGateway, AWS::DynamoDB::Table, AWS::EC2::Volume, AWS::ElasticLoadBalancing::LoadBalancer, AWS::ElasticLoadBalancingV2::LoadBalancer, AWS::Lambda::Function, AWS::MSK::Cluster, AWS::RDS::DBCluster, AWS::Route53::HealthCheck, AWS::SQS::Queue, AWS::SNS::Topic, AWS::SNS::Subscription, AWS::EC2::VPC, AWS::EC2::VPNConnection, AWS::EC2::VPNGateway, AWS::Route53RecoveryReadiness::DNSTargetResource</p>
    pub fn resource_set_type(mut self, input: impl Into<std::string::String>) -> Self {
        self.resource_set_type = Some(input.into());
        self
    }
    /// <p>The resource type of the resources in the resource set. Enter one of the following values for resource type:</p>
    /// <p>AWS::ApiGateway::Stage, AWS::ApiGatewayV2::Stage, AWS::AutoScaling::AutoScalingGroup, AWS::CloudWatch::Alarm, AWS::EC2::CustomerGateway, AWS::DynamoDB::Table, AWS::EC2::Volume, AWS::ElasticLoadBalancing::LoadBalancer, AWS::ElasticLoadBalancingV2::LoadBalancer, AWS::Lambda::Function, AWS::MSK::Cluster, AWS::RDS::DBCluster, AWS::Route53::HealthCheck, AWS::SQS::Queue, AWS::SNS::Topic, AWS::SNS::Subscription, AWS::EC2::VPC, AWS::EC2::VPNConnection, AWS::EC2::VPNGateway, AWS::Route53RecoveryReadiness::DNSTargetResource</p>
    pub fn set_resource_set_type(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.resource_set_type = input;
        self
    }
    /// Appends an item to `resources`.
    ///
    /// To override the contents of this collection use [`set_resources`](Self::set_resources).
    ///
    /// <p>A list of resource objects.</p>
    pub fn resources(mut self, input: crate::types::Resource) -> Self {
        let mut v = self.resources.unwrap_or_default();
        v.push(input);
        self.resources = Some(v);
        self
    }
    /// <p>A list of resource objects.</p>
    pub fn set_resources(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::Resource>>,
    ) -> Self {
        self.resources = input;
        self
    }
    /// Adds a key-value pair to `tags`.
    ///
    /// To override the contents of this collection use [`set_tags`](Self::set_tags).
    ///
    /// <p>A collection of tags associated with a resource.</p>
    pub fn tags(
        mut self,
        k: impl Into<std::string::String>,
        v: impl Into<std::string::String>,
    ) -> Self {
        let mut hash_map = self.tags.unwrap_or_default();
        hash_map.insert(k.into(), v.into());
        self.tags = Some(hash_map);
        self
    }
    /// <p>A collection of tags associated with a resource.</p>
    pub fn set_tags(
        mut self,
        input: std::option::Option<
            std::collections::HashMap<std::string::String, std::string::String>,
        >,
    ) -> Self {
        self.tags = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`UpdateResourceSetOutput`](crate::operation::update_resource_set::UpdateResourceSetOutput).
    pub fn build(self) -> crate::operation::update_resource_set::UpdateResourceSetOutput {
        crate::operation::update_resource_set::UpdateResourceSetOutput {
            resource_set_arn: self.resource_set_arn,
            resource_set_name: self.resource_set_name,
            resource_set_type: self.resource_set_type,
            resources: self.resources,
            tags: self.tags,
            _request_id: self._request_id,
        }
    }
}
