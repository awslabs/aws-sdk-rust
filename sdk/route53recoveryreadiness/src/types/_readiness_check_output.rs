// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A readiness check.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ReadinessCheckOutput {
    /// <p>The Amazon Resource Name (ARN) associated with a readiness check.</p>
    #[doc(hidden)]
    pub readiness_check_arn: std::option::Option<std::string::String>,
    /// <p>Name of a readiness check.</p>
    #[doc(hidden)]
    pub readiness_check_name: std::option::Option<std::string::String>,
    /// <p>Name of the resource set to be checked.</p>
    #[doc(hidden)]
    pub resource_set: std::option::Option<std::string::String>,
    /// <p>A collection of tags associated with a resource.</p>
    #[doc(hidden)]
    pub tags:
        std::option::Option<std::collections::HashMap<std::string::String, std::string::String>>,
}
impl ReadinessCheckOutput {
    /// <p>The Amazon Resource Name (ARN) associated with a readiness check.</p>
    pub fn readiness_check_arn(&self) -> std::option::Option<&str> {
        self.readiness_check_arn.as_deref()
    }
    /// <p>Name of a readiness check.</p>
    pub fn readiness_check_name(&self) -> std::option::Option<&str> {
        self.readiness_check_name.as_deref()
    }
    /// <p>Name of the resource set to be checked.</p>
    pub fn resource_set(&self) -> std::option::Option<&str> {
        self.resource_set.as_deref()
    }
    /// <p>A collection of tags associated with a resource.</p>
    pub fn tags(
        &self,
    ) -> std::option::Option<&std::collections::HashMap<std::string::String, std::string::String>>
    {
        self.tags.as_ref()
    }
}
impl ReadinessCheckOutput {
    /// Creates a new builder-style object to manufacture [`ReadinessCheckOutput`](crate::types::ReadinessCheckOutput).
    pub fn builder() -> crate::types::builders::ReadinessCheckOutputBuilder {
        crate::types::builders::ReadinessCheckOutputBuilder::default()
    }
}

/// A builder for [`ReadinessCheckOutput`](crate::types::ReadinessCheckOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ReadinessCheckOutputBuilder {
    pub(crate) readiness_check_arn: std::option::Option<std::string::String>,
    pub(crate) readiness_check_name: std::option::Option<std::string::String>,
    pub(crate) resource_set: std::option::Option<std::string::String>,
    pub(crate) tags:
        std::option::Option<std::collections::HashMap<std::string::String, std::string::String>>,
}
impl ReadinessCheckOutputBuilder {
    /// <p>The Amazon Resource Name (ARN) associated with a readiness check.</p>
    pub fn readiness_check_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.readiness_check_arn = Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) associated with a readiness check.</p>
    pub fn set_readiness_check_arn(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.readiness_check_arn = input;
        self
    }
    /// <p>Name of a readiness check.</p>
    pub fn readiness_check_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.readiness_check_name = Some(input.into());
        self
    }
    /// <p>Name of a readiness check.</p>
    pub fn set_readiness_check_name(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.readiness_check_name = input;
        self
    }
    /// <p>Name of the resource set to be checked.</p>
    pub fn resource_set(mut self, input: impl Into<std::string::String>) -> Self {
        self.resource_set = Some(input.into());
        self
    }
    /// <p>Name of the resource set to be checked.</p>
    pub fn set_resource_set(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.resource_set = input;
        self
    }
    /// Adds a key-value pair to `tags`.
    ///
    /// To override the contents of this collection use [`set_tags`](Self::set_tags).
    ///
    /// <p>A collection of tags associated with a resource.</p>
    pub fn tags(
        mut self,
        k: impl Into<std::string::String>,
        v: impl Into<std::string::String>,
    ) -> Self {
        let mut hash_map = self.tags.unwrap_or_default();
        hash_map.insert(k.into(), v.into());
        self.tags = Some(hash_map);
        self
    }
    /// <p>A collection of tags associated with a resource.</p>
    pub fn set_tags(
        mut self,
        input: std::option::Option<
            std::collections::HashMap<std::string::String, std::string::String>,
        >,
    ) -> Self {
        self.tags = input;
        self
    }
    /// Consumes the builder and constructs a [`ReadinessCheckOutput`](crate::types::ReadinessCheckOutput).
    pub fn build(self) -> crate::types::ReadinessCheckOutput {
        crate::types::ReadinessCheckOutput {
            readiness_check_arn: self.readiness_check_arn,
            readiness_check_name: self.readiness_check_name,
            resource_set: self.resource_set,
            tags: self.tags,
        }
    }
}
