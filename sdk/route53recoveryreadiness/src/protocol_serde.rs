// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) mod shape_create_cell;

pub fn parse_http_error_metadata(
    response: &http::Response<bytes::Bytes>,
) -> Result<
    aws_smithy_types::error::metadata::Builder,
    aws_smithy_json::deserialize::error::DeserializeError,
> {
    crate::json_errors::parse_error_metadata(response.body(), response.headers())
}

pub(crate) mod shape_create_cross_account_authorization;

pub(crate) mod shape_create_readiness_check;

pub(crate) mod shape_create_recovery_group;

pub(crate) mod shape_create_resource_set;

pub(crate) mod shape_delete_cell;

pub(crate) mod shape_delete_cross_account_authorization;

pub(crate) mod shape_delete_readiness_check;

pub(crate) mod shape_delete_recovery_group;

pub(crate) mod shape_delete_resource_set;

pub(crate) mod shape_get_architecture_recommendations;

pub(crate) mod shape_get_cell;

pub(crate) mod shape_get_cell_readiness_summary;

pub(crate) mod shape_get_readiness_check;

pub(crate) mod shape_get_readiness_check_resource_status;

pub(crate) mod shape_get_readiness_check_status;

pub(crate) mod shape_get_recovery_group;

pub(crate) mod shape_get_recovery_group_readiness_summary;

pub(crate) mod shape_get_resource_set;

pub(crate) mod shape_list_cells;

pub(crate) mod shape_list_cross_account_authorizations;

pub(crate) mod shape_list_readiness_checks;

pub(crate) mod shape_list_recovery_groups;

pub(crate) mod shape_list_resource_sets;

pub(crate) mod shape_list_rules;

pub(crate) mod shape_list_tags_for_resources;

pub(crate) mod shape_tag_resource;

pub(crate) mod shape_untag_resource;

pub(crate) mod shape_update_cell;

pub(crate) mod shape_update_readiness_check;

pub(crate) mod shape_update_recovery_group;

pub(crate) mod shape_update_resource_set;

pub(crate) fn or_empty_doc(data: &[u8]) -> &[u8] {
    if data.is_empty() {
        b"{}"
    } else {
        data
    }
}

pub(crate) mod shape_access_denied_exception;

pub(crate) mod shape_conflict_exception;

pub(crate) mod shape_create_cell_input;

pub(crate) mod shape_create_cross_account_authorization_input;

pub(crate) mod shape_create_readiness_check_input;

pub(crate) mod shape_create_recovery_group_input;

pub(crate) mod shape_create_resource_set_input;

pub(crate) mod shape_internal_server_exception;

pub(crate) mod shape_resource_not_found_exception;

pub(crate) mod shape_tag_resource_input;

pub(crate) mod shape_throttling_exception;

pub(crate) mod shape_update_cell_input;

pub(crate) mod shape_update_readiness_check_input;

pub(crate) mod shape_update_recovery_group_input;

pub(crate) mod shape_update_resource_set_input;

pub(crate) mod shape_validation_exception;

#[allow(non_snake_case)]
pub(crate) mod shape___list_of__string;

#[allow(non_snake_case)]
pub(crate) mod shape___list_of_cell_output;

#[allow(non_snake_case)]
pub(crate) mod shape___list_of_cross_account_authorization;

#[allow(non_snake_case)]
pub(crate) mod shape___list_of_list_rules_output;

#[allow(non_snake_case)]
pub(crate) mod shape___list_of_message;

#[allow(non_snake_case)]
pub(crate) mod shape___list_of_readiness_check_output;

#[allow(non_snake_case)]
pub(crate) mod shape___list_of_readiness_check_summary;

#[allow(non_snake_case)]
pub(crate) mod shape___list_of_recommendation;

#[allow(non_snake_case)]
pub(crate) mod shape___list_of_recovery_group_output;

#[allow(non_snake_case)]
pub(crate) mod shape___list_of_resource;

#[allow(non_snake_case)]
pub(crate) mod shape___list_of_resource_result;

#[allow(non_snake_case)]
pub(crate) mod shape___list_of_resource_set_output;

#[allow(non_snake_case)]
pub(crate) mod shape___list_of_rule_result;

pub(crate) mod shape_resource;

pub(crate) mod shape_tags;

pub(crate) mod shape_cell_output;

pub(crate) mod shape_dns_target_resource;

pub(crate) mod shape_list_rules_output;

pub(crate) mod shape_message;

pub(crate) mod shape_readiness_check_output;

pub(crate) mod shape_readiness_check_summary;

pub(crate) mod shape_recommendation;

pub(crate) mod shape_recovery_group_output;

pub(crate) mod shape_resource_result;

pub(crate) mod shape_resource_set_output;

pub(crate) mod shape_rule_result;

pub(crate) mod shape_target_resource;

pub(crate) mod shape_nlb_resource;

pub(crate) mod shape_r53_resource_record;
