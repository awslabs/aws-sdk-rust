// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) fn cell_output_correct_errors(mut builder: crate::types::builders::CellOutputBuilder) -> crate::types::builders::CellOutputBuilder {
    if builder.cell_arn.is_none() {
        builder.cell_arn = Some(Default::default())
    }
    if builder.cell_name.is_none() {
        builder.cell_name = Some(Default::default())
    }
    if builder.cells.is_none() {
        builder.cells = Some(Default::default())
    }
    if builder.parent_readiness_scopes.is_none() {
        builder.parent_readiness_scopes = Some(Default::default())
    }
    builder
}

pub(crate) fn list_rules_output_correct_errors(
    mut builder: crate::types::builders::ListRulesOutputBuilder,
) -> crate::types::builders::ListRulesOutputBuilder {
    if builder.resource_type.is_none() {
        builder.resource_type = Some(Default::default())
    }
    if builder.rule_description.is_none() {
        builder.rule_description = Some(Default::default())
    }
    if builder.rule_id.is_none() {
        builder.rule_id = Some(Default::default())
    }
    builder
}

pub(crate) fn readiness_check_output_correct_errors(
    mut builder: crate::types::builders::ReadinessCheckOutputBuilder,
) -> crate::types::builders::ReadinessCheckOutputBuilder {
    if builder.readiness_check_arn.is_none() {
        builder.readiness_check_arn = Some(Default::default())
    }
    if builder.resource_set.is_none() {
        builder.resource_set = Some(Default::default())
    }
    builder
}

pub(crate) fn recommendation_correct_errors(
    mut builder: crate::types::builders::RecommendationBuilder,
) -> crate::types::builders::RecommendationBuilder {
    if builder.recommendation_text.is_none() {
        builder.recommendation_text = Some(Default::default())
    }
    builder
}

pub(crate) fn recovery_group_output_correct_errors(
    mut builder: crate::types::builders::RecoveryGroupOutputBuilder,
) -> crate::types::builders::RecoveryGroupOutputBuilder {
    if builder.cells.is_none() {
        builder.cells = Some(Default::default())
    }
    if builder.recovery_group_arn.is_none() {
        builder.recovery_group_arn = Some(Default::default())
    }
    if builder.recovery_group_name.is_none() {
        builder.recovery_group_name = Some(Default::default())
    }
    builder
}

pub(crate) fn resource_result_correct_errors(
    mut builder: crate::types::builders::ResourceResultBuilder,
) -> crate::types::builders::ResourceResultBuilder {
    if builder.last_checked_timestamp.is_none() {
        builder.last_checked_timestamp = Some(::aws_smithy_types::DateTime::from_fractional_secs(0, 0_f64))
    }
    if builder.readiness.is_none() {
        builder.readiness = "no value was set".parse::<crate::types::Readiness>().ok()
    }
    builder
}

pub(crate) fn resource_set_output_correct_errors(
    mut builder: crate::types::builders::ResourceSetOutputBuilder,
) -> crate::types::builders::ResourceSetOutputBuilder {
    if builder.resource_set_arn.is_none() {
        builder.resource_set_arn = Some(Default::default())
    }
    if builder.resource_set_name.is_none() {
        builder.resource_set_name = Some(Default::default())
    }
    if builder.resource_set_type.is_none() {
        builder.resource_set_type = Some(Default::default())
    }
    if builder.resources.is_none() {
        builder.resources = Some(Default::default())
    }
    builder
}

pub(crate) fn rule_result_correct_errors(mut builder: crate::types::builders::RuleResultBuilder) -> crate::types::builders::RuleResultBuilder {
    if builder.last_checked_timestamp.is_none() {
        builder.last_checked_timestamp = Some(::aws_smithy_types::DateTime::from_fractional_secs(0, 0_f64))
    }
    if builder.messages.is_none() {
        builder.messages = Some(Default::default())
    }
    if builder.readiness.is_none() {
        builder.readiness = "no value was set".parse::<crate::types::Readiness>().ok()
    }
    if builder.rule_id.is_none() {
        builder.rule_id = Some(Default::default())
    }
    builder
}
