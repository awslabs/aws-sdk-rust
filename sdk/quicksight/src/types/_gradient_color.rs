// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Determines the gradient color settings.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GradientColor {
    /// <p>The list of gradient color stops.</p>
    pub stops: ::std::option::Option<::std::vec::Vec<crate::types::GradientStop>>,
}
impl GradientColor {
    /// <p>The list of gradient color stops.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.stops.is_none()`.
    pub fn stops(&self) -> &[crate::types::GradientStop] {
        self.stops.as_deref().unwrap_or_default()
    }
}
impl GradientColor {
    /// Creates a new builder-style object to manufacture [`GradientColor`](crate::types::GradientColor).
    pub fn builder() -> crate::types::builders::GradientColorBuilder {
        crate::types::builders::GradientColorBuilder::default()
    }
}

/// A builder for [`GradientColor`](crate::types::GradientColor).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct GradientColorBuilder {
    pub(crate) stops: ::std::option::Option<::std::vec::Vec<crate::types::GradientStop>>,
}
impl GradientColorBuilder {
    /// Appends an item to `stops`.
    ///
    /// To override the contents of this collection use [`set_stops`](Self::set_stops).
    ///
    /// <p>The list of gradient color stops.</p>
    pub fn stops(mut self, input: crate::types::GradientStop) -> Self {
        let mut v = self.stops.unwrap_or_default();
        v.push(input);
        self.stops = ::std::option::Option::Some(v);
        self
    }
    /// <p>The list of gradient color stops.</p>
    pub fn set_stops(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::GradientStop>>) -> Self {
        self.stops = input;
        self
    }
    /// <p>The list of gradient color stops.</p>
    pub fn get_stops(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::GradientStop>> {
        &self.stops
    }
    /// Consumes the builder and constructs a [`GradientColor`](crate::types::GradientColor).
    pub fn build(self) -> crate::types::GradientColor {
        crate::types::GradientColor { stops: self.stops }
    }
}
