// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The sort configuration for a <code>TableVisual</code>.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct TableSortConfiguration {
    /// <p>The field sort options for rows in the table.</p>
    #[doc(hidden)]
    pub row_sort: std::option::Option<std::vec::Vec<crate::types::FieldSortOptions>>,
    /// <p>The pagination configuration (page size, page number) for the table.</p>
    #[doc(hidden)]
    pub pagination_configuration: std::option::Option<crate::types::PaginationConfiguration>,
}
impl TableSortConfiguration {
    /// <p>The field sort options for rows in the table.</p>
    pub fn row_sort(&self) -> std::option::Option<&[crate::types::FieldSortOptions]> {
        self.row_sort.as_deref()
    }
    /// <p>The pagination configuration (page size, page number) for the table.</p>
    pub fn pagination_configuration(
        &self,
    ) -> std::option::Option<&crate::types::PaginationConfiguration> {
        self.pagination_configuration.as_ref()
    }
}
impl TableSortConfiguration {
    /// Creates a new builder-style object to manufacture [`TableSortConfiguration`](crate::types::TableSortConfiguration).
    pub fn builder() -> crate::types::builders::TableSortConfigurationBuilder {
        crate::types::builders::TableSortConfigurationBuilder::default()
    }
}

/// A builder for [`TableSortConfiguration`](crate::types::TableSortConfiguration).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct TableSortConfigurationBuilder {
    pub(crate) row_sort: std::option::Option<std::vec::Vec<crate::types::FieldSortOptions>>,
    pub(crate) pagination_configuration: std::option::Option<crate::types::PaginationConfiguration>,
}
impl TableSortConfigurationBuilder {
    /// Appends an item to `row_sort`.
    ///
    /// To override the contents of this collection use [`set_row_sort`](Self::set_row_sort).
    ///
    /// <p>The field sort options for rows in the table.</p>
    pub fn row_sort(mut self, input: crate::types::FieldSortOptions) -> Self {
        let mut v = self.row_sort.unwrap_or_default();
        v.push(input);
        self.row_sort = Some(v);
        self
    }
    /// <p>The field sort options for rows in the table.</p>
    pub fn set_row_sort(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::FieldSortOptions>>,
    ) -> Self {
        self.row_sort = input;
        self
    }
    /// <p>The pagination configuration (page size, page number) for the table.</p>
    pub fn pagination_configuration(
        mut self,
        input: crate::types::PaginationConfiguration,
    ) -> Self {
        self.pagination_configuration = Some(input);
        self
    }
    /// <p>The pagination configuration (page size, page number) for the table.</p>
    pub fn set_pagination_configuration(
        mut self,
        input: std::option::Option<crate::types::PaginationConfiguration>,
    ) -> Self {
        self.pagination_configuration = input;
        self
    }
    /// Consumes the builder and constructs a [`TableSortConfiguration`](crate::types::TableSortConfiguration).
    pub fn build(self) -> crate::types::TableSortConfiguration {
        crate::types::TableSortConfiguration {
            row_sort: self.row_sort,
            pagination_configuration: self.pagination_configuration,
        }
    }
}
