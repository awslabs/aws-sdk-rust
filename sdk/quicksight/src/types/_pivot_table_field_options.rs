// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The field options for a pivot table visual.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct PivotTableFieldOptions {
    /// <p>The selected field options for the pivot table field options.</p>
    #[doc(hidden)]
    pub selected_field_options:
        std::option::Option<std::vec::Vec<crate::types::PivotTableFieldOption>>,
    /// <p>The data path options for the pivot table field options.</p>
    #[doc(hidden)]
    pub data_path_options:
        std::option::Option<std::vec::Vec<crate::types::PivotTableDataPathOption>>,
}
impl PivotTableFieldOptions {
    /// <p>The selected field options for the pivot table field options.</p>
    pub fn selected_field_options(
        &self,
    ) -> std::option::Option<&[crate::types::PivotTableFieldOption]> {
        self.selected_field_options.as_deref()
    }
    /// <p>The data path options for the pivot table field options.</p>
    pub fn data_path_options(
        &self,
    ) -> std::option::Option<&[crate::types::PivotTableDataPathOption]> {
        self.data_path_options.as_deref()
    }
}
impl PivotTableFieldOptions {
    /// Creates a new builder-style object to manufacture [`PivotTableFieldOptions`](crate::types::PivotTableFieldOptions).
    pub fn builder() -> crate::types::builders::PivotTableFieldOptionsBuilder {
        crate::types::builders::PivotTableFieldOptionsBuilder::default()
    }
}

/// A builder for [`PivotTableFieldOptions`](crate::types::PivotTableFieldOptions).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct PivotTableFieldOptionsBuilder {
    pub(crate) selected_field_options:
        std::option::Option<std::vec::Vec<crate::types::PivotTableFieldOption>>,
    pub(crate) data_path_options:
        std::option::Option<std::vec::Vec<crate::types::PivotTableDataPathOption>>,
}
impl PivotTableFieldOptionsBuilder {
    /// Appends an item to `selected_field_options`.
    ///
    /// To override the contents of this collection use [`set_selected_field_options`](Self::set_selected_field_options).
    ///
    /// <p>The selected field options for the pivot table field options.</p>
    pub fn selected_field_options(mut self, input: crate::types::PivotTableFieldOption) -> Self {
        let mut v = self.selected_field_options.unwrap_or_default();
        v.push(input);
        self.selected_field_options = Some(v);
        self
    }
    /// <p>The selected field options for the pivot table field options.</p>
    pub fn set_selected_field_options(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::PivotTableFieldOption>>,
    ) -> Self {
        self.selected_field_options = input;
        self
    }
    /// Appends an item to `data_path_options`.
    ///
    /// To override the contents of this collection use [`set_data_path_options`](Self::set_data_path_options).
    ///
    /// <p>The data path options for the pivot table field options.</p>
    pub fn data_path_options(mut self, input: crate::types::PivotTableDataPathOption) -> Self {
        let mut v = self.data_path_options.unwrap_or_default();
        v.push(input);
        self.data_path_options = Some(v);
        self
    }
    /// <p>The data path options for the pivot table field options.</p>
    pub fn set_data_path_options(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::PivotTableDataPathOption>>,
    ) -> Self {
        self.data_path_options = input;
        self
    }
    /// Consumes the builder and constructs a [`PivotTableFieldOptions`](crate::types::PivotTableFieldOptions).
    pub fn build(self) -> crate::types::PivotTableFieldOptions {
        crate::types::PivotTableFieldOptions {
            selected_field_options: self.selected_field_options,
            data_path_options: self.data_path_options,
        }
    }
}
