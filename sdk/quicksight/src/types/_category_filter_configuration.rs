// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The configuration for a <code>CategoryFilter</code>.</p>
/// <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct CategoryFilterConfiguration {
    /// <p>A list of filter configurations. In the Amazon QuickSight console, this filter type is called a filter list.</p>
    #[doc(hidden)]
    pub filter_list_configuration: std::option::Option<crate::types::FilterListConfiguration>,
    /// <p>A list of custom filter values. In the Amazon QuickSight console, this filter type is called a custom filter list.</p>
    #[doc(hidden)]
    pub custom_filter_list_configuration:
        std::option::Option<crate::types::CustomFilterListConfiguration>,
    /// <p>A custom filter that filters based on a single value. This filter can be partially matched.</p>
    #[doc(hidden)]
    pub custom_filter_configuration: std::option::Option<crate::types::CustomFilterConfiguration>,
}
impl CategoryFilterConfiguration {
    /// <p>A list of filter configurations. In the Amazon QuickSight console, this filter type is called a filter list.</p>
    pub fn filter_list_configuration(
        &self,
    ) -> std::option::Option<&crate::types::FilterListConfiguration> {
        self.filter_list_configuration.as_ref()
    }
    /// <p>A list of custom filter values. In the Amazon QuickSight console, this filter type is called a custom filter list.</p>
    pub fn custom_filter_list_configuration(
        &self,
    ) -> std::option::Option<&crate::types::CustomFilterListConfiguration> {
        self.custom_filter_list_configuration.as_ref()
    }
    /// <p>A custom filter that filters based on a single value. This filter can be partially matched.</p>
    pub fn custom_filter_configuration(
        &self,
    ) -> std::option::Option<&crate::types::CustomFilterConfiguration> {
        self.custom_filter_configuration.as_ref()
    }
}
impl CategoryFilterConfiguration {
    /// Creates a new builder-style object to manufacture [`CategoryFilterConfiguration`](crate::types::CategoryFilterConfiguration).
    pub fn builder() -> crate::types::builders::CategoryFilterConfigurationBuilder {
        crate::types::builders::CategoryFilterConfigurationBuilder::default()
    }
}

/// A builder for [`CategoryFilterConfiguration`](crate::types::CategoryFilterConfiguration).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct CategoryFilterConfigurationBuilder {
    pub(crate) filter_list_configuration:
        std::option::Option<crate::types::FilterListConfiguration>,
    pub(crate) custom_filter_list_configuration:
        std::option::Option<crate::types::CustomFilterListConfiguration>,
    pub(crate) custom_filter_configuration:
        std::option::Option<crate::types::CustomFilterConfiguration>,
}
impl CategoryFilterConfigurationBuilder {
    /// <p>A list of filter configurations. In the Amazon QuickSight console, this filter type is called a filter list.</p>
    pub fn filter_list_configuration(
        mut self,
        input: crate::types::FilterListConfiguration,
    ) -> Self {
        self.filter_list_configuration = Some(input);
        self
    }
    /// <p>A list of filter configurations. In the Amazon QuickSight console, this filter type is called a filter list.</p>
    pub fn set_filter_list_configuration(
        mut self,
        input: std::option::Option<crate::types::FilterListConfiguration>,
    ) -> Self {
        self.filter_list_configuration = input;
        self
    }
    /// <p>A list of custom filter values. In the Amazon QuickSight console, this filter type is called a custom filter list.</p>
    pub fn custom_filter_list_configuration(
        mut self,
        input: crate::types::CustomFilterListConfiguration,
    ) -> Self {
        self.custom_filter_list_configuration = Some(input);
        self
    }
    /// <p>A list of custom filter values. In the Amazon QuickSight console, this filter type is called a custom filter list.</p>
    pub fn set_custom_filter_list_configuration(
        mut self,
        input: std::option::Option<crate::types::CustomFilterListConfiguration>,
    ) -> Self {
        self.custom_filter_list_configuration = input;
        self
    }
    /// <p>A custom filter that filters based on a single value. This filter can be partially matched.</p>
    pub fn custom_filter_configuration(
        mut self,
        input: crate::types::CustomFilterConfiguration,
    ) -> Self {
        self.custom_filter_configuration = Some(input);
        self
    }
    /// <p>A custom filter that filters based on a single value. This filter can be partially matched.</p>
    pub fn set_custom_filter_configuration(
        mut self,
        input: std::option::Option<crate::types::CustomFilterConfiguration>,
    ) -> Self {
        self.custom_filter_configuration = input;
        self
    }
    /// Consumes the builder and constructs a [`CategoryFilterConfiguration`](crate::types::CategoryFilterConfiguration).
    pub fn build(self) -> crate::types::CategoryFilterConfiguration {
        crate::types::CategoryFilterConfiguration {
            filter_list_configuration: self.filter_list_configuration,
            custom_filter_list_configuration: self.custom_filter_list_configuration,
            custom_filter_configuration: self.custom_filter_configuration,
        }
    }
}
