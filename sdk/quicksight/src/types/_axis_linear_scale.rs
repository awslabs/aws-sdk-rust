// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The liner axis scale setup.</p>
/// <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AxisLinearScale {
    /// <p>The step count setup of a linear axis.</p>
    #[doc(hidden)]
    pub step_count: std::option::Option<i32>,
    /// <p>The step size setup of a linear axis.</p>
    #[doc(hidden)]
    pub step_size: std::option::Option<f64>,
}
impl AxisLinearScale {
    /// <p>The step count setup of a linear axis.</p>
    pub fn step_count(&self) -> std::option::Option<i32> {
        self.step_count
    }
    /// <p>The step size setup of a linear axis.</p>
    pub fn step_size(&self) -> std::option::Option<f64> {
        self.step_size
    }
}
impl AxisLinearScale {
    /// Creates a new builder-style object to manufacture [`AxisLinearScale`](crate::types::AxisLinearScale).
    pub fn builder() -> crate::types::builders::AxisLinearScaleBuilder {
        crate::types::builders::AxisLinearScaleBuilder::default()
    }
}

/// A builder for [`AxisLinearScale`](crate::types::AxisLinearScale).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AxisLinearScaleBuilder {
    pub(crate) step_count: std::option::Option<i32>,
    pub(crate) step_size: std::option::Option<f64>,
}
impl AxisLinearScaleBuilder {
    /// <p>The step count setup of a linear axis.</p>
    pub fn step_count(mut self, input: i32) -> Self {
        self.step_count = Some(input);
        self
    }
    /// <p>The step count setup of a linear axis.</p>
    pub fn set_step_count(mut self, input: std::option::Option<i32>) -> Self {
        self.step_count = input;
        self
    }
    /// <p>The step size setup of a linear axis.</p>
    pub fn step_size(mut self, input: f64) -> Self {
        self.step_size = Some(input);
        self
    }
    /// <p>The step size setup of a linear axis.</p>
    pub fn set_step_size(mut self, input: std::option::Option<f64>) -> Self {
        self.step_size = input;
        self
    }
    /// Consumes the builder and constructs a [`AxisLinearScale`](crate::types::AxisLinearScale).
    pub fn build(self) -> crate::types::AxisLinearScale {
        crate::types::AxisLinearScale {
            step_count: self.step_count,
            step_size: self.step_size,
        }
    }
}
