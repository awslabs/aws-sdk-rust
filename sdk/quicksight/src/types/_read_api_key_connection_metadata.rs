// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Read-only authentication metadata for API key-based connections, containing non-sensitive configuration details.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq)]
pub struct ReadApiKeyConnectionMetadata {
    /// <p>The base endpoint URL for API key authentication.</p>
    pub base_endpoint: ::std::string::String,
    /// <p>The email address associated with the API key authentication.</p>
    pub email: ::std::option::Option<::std::string::String>,
}
impl ReadApiKeyConnectionMetadata {
    /// <p>The base endpoint URL for API key authentication.</p>
    pub fn base_endpoint(&self) -> &str {
        use std::ops::Deref;
        self.base_endpoint.deref()
    }
    /// <p>The email address associated with the API key authentication.</p>
    pub fn email(&self) -> ::std::option::Option<&str> {
        self.email.as_deref()
    }
}
impl ::std::fmt::Debug for ReadApiKeyConnectionMetadata {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("ReadApiKeyConnectionMetadata");
        formatter.field("base_endpoint", &self.base_endpoint);
        formatter.field("email", &"*** Sensitive Data Redacted ***");
        formatter.finish()
    }
}
impl ReadApiKeyConnectionMetadata {
    /// Creates a new builder-style object to manufacture [`ReadApiKeyConnectionMetadata`](crate::types::ReadApiKeyConnectionMetadata).
    pub fn builder() -> crate::types::builders::ReadApiKeyConnectionMetadataBuilder {
        crate::types::builders::ReadApiKeyConnectionMetadataBuilder::default()
    }
}

/// A builder for [`ReadApiKeyConnectionMetadata`](crate::types::ReadApiKeyConnectionMetadata).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default)]
#[non_exhaustive]
pub struct ReadApiKeyConnectionMetadataBuilder {
    pub(crate) base_endpoint: ::std::option::Option<::std::string::String>,
    pub(crate) email: ::std::option::Option<::std::string::String>,
}
impl ReadApiKeyConnectionMetadataBuilder {
    /// <p>The base endpoint URL for API key authentication.</p>
    /// This field is required.
    pub fn base_endpoint(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.base_endpoint = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The base endpoint URL for API key authentication.</p>
    pub fn set_base_endpoint(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.base_endpoint = input;
        self
    }
    /// <p>The base endpoint URL for API key authentication.</p>
    pub fn get_base_endpoint(&self) -> &::std::option::Option<::std::string::String> {
        &self.base_endpoint
    }
    /// <p>The email address associated with the API key authentication.</p>
    pub fn email(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.email = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The email address associated with the API key authentication.</p>
    pub fn set_email(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.email = input;
        self
    }
    /// <p>The email address associated with the API key authentication.</p>
    pub fn get_email(&self) -> &::std::option::Option<::std::string::String> {
        &self.email
    }
    /// Consumes the builder and constructs a [`ReadApiKeyConnectionMetadata`](crate::types::ReadApiKeyConnectionMetadata).
    /// This method will fail if any of the following fields are not set:
    /// - [`base_endpoint`](crate::types::builders::ReadApiKeyConnectionMetadataBuilder::base_endpoint)
    pub fn build(self) -> ::std::result::Result<crate::types::ReadApiKeyConnectionMetadata, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::ReadApiKeyConnectionMetadata {
            base_endpoint: self.base_endpoint.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "base_endpoint",
                    "base_endpoint was not specified but it is required when building ReadApiKeyConnectionMetadata",
                )
            })?,
            email: self.email,
        })
    }
}
impl ::std::fmt::Debug for ReadApiKeyConnectionMetadataBuilder {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("ReadApiKeyConnectionMetadataBuilder");
        formatter.field("base_endpoint", &self.base_endpoint);
        formatter.field("email", &"*** Sensitive Data Redacted ***");
        formatter.finish()
    }
}
