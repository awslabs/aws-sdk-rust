// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The field well configuration of a sankey diagram.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct SankeyDiagramAggregatedFieldWells {
    /// <p>The source field wells of a sankey diagram.</p>
    #[doc(hidden)]
    pub source: std::option::Option<std::vec::Vec<crate::types::DimensionField>>,
    /// <p>The destination field wells of a sankey diagram.</p>
    #[doc(hidden)]
    pub destination: std::option::Option<std::vec::Vec<crate::types::DimensionField>>,
    /// <p>The weight field wells of a sankey diagram.</p>
    #[doc(hidden)]
    pub weight: std::option::Option<std::vec::Vec<crate::types::MeasureField>>,
}
impl SankeyDiagramAggregatedFieldWells {
    /// <p>The source field wells of a sankey diagram.</p>
    pub fn source(&self) -> std::option::Option<&[crate::types::DimensionField]> {
        self.source.as_deref()
    }
    /// <p>The destination field wells of a sankey diagram.</p>
    pub fn destination(&self) -> std::option::Option<&[crate::types::DimensionField]> {
        self.destination.as_deref()
    }
    /// <p>The weight field wells of a sankey diagram.</p>
    pub fn weight(&self) -> std::option::Option<&[crate::types::MeasureField]> {
        self.weight.as_deref()
    }
}
impl SankeyDiagramAggregatedFieldWells {
    /// Creates a new builder-style object to manufacture [`SankeyDiagramAggregatedFieldWells`](crate::types::SankeyDiagramAggregatedFieldWells).
    pub fn builder() -> crate::types::builders::SankeyDiagramAggregatedFieldWellsBuilder {
        crate::types::builders::SankeyDiagramAggregatedFieldWellsBuilder::default()
    }
}

/// A builder for [`SankeyDiagramAggregatedFieldWells`](crate::types::SankeyDiagramAggregatedFieldWells).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct SankeyDiagramAggregatedFieldWellsBuilder {
    pub(crate) source: std::option::Option<std::vec::Vec<crate::types::DimensionField>>,
    pub(crate) destination: std::option::Option<std::vec::Vec<crate::types::DimensionField>>,
    pub(crate) weight: std::option::Option<std::vec::Vec<crate::types::MeasureField>>,
}
impl SankeyDiagramAggregatedFieldWellsBuilder {
    /// Appends an item to `source`.
    ///
    /// To override the contents of this collection use [`set_source`](Self::set_source).
    ///
    /// <p>The source field wells of a sankey diagram.</p>
    pub fn source(mut self, input: crate::types::DimensionField) -> Self {
        let mut v = self.source.unwrap_or_default();
        v.push(input);
        self.source = Some(v);
        self
    }
    /// <p>The source field wells of a sankey diagram.</p>
    pub fn set_source(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::DimensionField>>,
    ) -> Self {
        self.source = input;
        self
    }
    /// Appends an item to `destination`.
    ///
    /// To override the contents of this collection use [`set_destination`](Self::set_destination).
    ///
    /// <p>The destination field wells of a sankey diagram.</p>
    pub fn destination(mut self, input: crate::types::DimensionField) -> Self {
        let mut v = self.destination.unwrap_or_default();
        v.push(input);
        self.destination = Some(v);
        self
    }
    /// <p>The destination field wells of a sankey diagram.</p>
    pub fn set_destination(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::DimensionField>>,
    ) -> Self {
        self.destination = input;
        self
    }
    /// Appends an item to `weight`.
    ///
    /// To override the contents of this collection use [`set_weight`](Self::set_weight).
    ///
    /// <p>The weight field wells of a sankey diagram.</p>
    pub fn weight(mut self, input: crate::types::MeasureField) -> Self {
        let mut v = self.weight.unwrap_or_default();
        v.push(input);
        self.weight = Some(v);
        self
    }
    /// <p>The weight field wells of a sankey diagram.</p>
    pub fn set_weight(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::MeasureField>>,
    ) -> Self {
        self.weight = input;
        self
    }
    /// Consumes the builder and constructs a [`SankeyDiagramAggregatedFieldWells`](crate::types::SankeyDiagramAggregatedFieldWells).
    pub fn build(self) -> crate::types::SankeyDiagramAggregatedFieldWells {
        crate::types::SankeyDiagramAggregatedFieldWells {
            source: self.source,
            destination: self.destination,
            weight: self.weight,
        }
    }
}
