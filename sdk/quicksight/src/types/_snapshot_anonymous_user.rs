// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A structure that contains information on the anonymous user configuration.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct SnapshotAnonymousUser {
    /// <p>The tags to be used for row-level security (RLS). Make sure that the relevant datasets have RLS tags configured before you start a snapshot export job. You can configure the RLS tags of a dataset with a <code>DataSet$RowLevelPermissionTagConfiguration</code> API call.</p>
    /// <p>These are not the tags that are used for Amazon Web Services resource tagging. For more information on row level security in Amazon QuickSight, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/quicksight-dev-rls-tags.html">Using Row-Level Security (RLS) with Tags</a>in the <i>Amazon QuickSight User Guide</i>.</p>
    pub row_level_permission_tags: ::std::option::Option<::std::vec::Vec<crate::types::SessionTag>>,
}
impl SnapshotAnonymousUser {
    /// <p>The tags to be used for row-level security (RLS). Make sure that the relevant datasets have RLS tags configured before you start a snapshot export job. You can configure the RLS tags of a dataset with a <code>DataSet$RowLevelPermissionTagConfiguration</code> API call.</p>
    /// <p>These are not the tags that are used for Amazon Web Services resource tagging. For more information on row level security in Amazon QuickSight, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/quicksight-dev-rls-tags.html">Using Row-Level Security (RLS) with Tags</a>in the <i>Amazon QuickSight User Guide</i>.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.row_level_permission_tags.is_none()`.
    pub fn row_level_permission_tags(&self) -> &[crate::types::SessionTag] {
        self.row_level_permission_tags.as_deref().unwrap_or_default()
    }
}
impl SnapshotAnonymousUser {
    /// Creates a new builder-style object to manufacture [`SnapshotAnonymousUser`](crate::types::SnapshotAnonymousUser).
    pub fn builder() -> crate::types::builders::SnapshotAnonymousUserBuilder {
        crate::types::builders::SnapshotAnonymousUserBuilder::default()
    }
}

/// A builder for [`SnapshotAnonymousUser`](crate::types::SnapshotAnonymousUser).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct SnapshotAnonymousUserBuilder {
    pub(crate) row_level_permission_tags: ::std::option::Option<::std::vec::Vec<crate::types::SessionTag>>,
}
impl SnapshotAnonymousUserBuilder {
    /// Appends an item to `row_level_permission_tags`.
    ///
    /// To override the contents of this collection use [`set_row_level_permission_tags`](Self::set_row_level_permission_tags).
    ///
    /// <p>The tags to be used for row-level security (RLS). Make sure that the relevant datasets have RLS tags configured before you start a snapshot export job. You can configure the RLS tags of a dataset with a <code>DataSet$RowLevelPermissionTagConfiguration</code> API call.</p>
    /// <p>These are not the tags that are used for Amazon Web Services resource tagging. For more information on row level security in Amazon QuickSight, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/quicksight-dev-rls-tags.html">Using Row-Level Security (RLS) with Tags</a>in the <i>Amazon QuickSight User Guide</i>.</p>
    pub fn row_level_permission_tags(mut self, input: crate::types::SessionTag) -> Self {
        let mut v = self.row_level_permission_tags.unwrap_or_default();
        v.push(input);
        self.row_level_permission_tags = ::std::option::Option::Some(v);
        self
    }
    /// <p>The tags to be used for row-level security (RLS). Make sure that the relevant datasets have RLS tags configured before you start a snapshot export job. You can configure the RLS tags of a dataset with a <code>DataSet$RowLevelPermissionTagConfiguration</code> API call.</p>
    /// <p>These are not the tags that are used for Amazon Web Services resource tagging. For more information on row level security in Amazon QuickSight, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/quicksight-dev-rls-tags.html">Using Row-Level Security (RLS) with Tags</a>in the <i>Amazon QuickSight User Guide</i>.</p>
    pub fn set_row_level_permission_tags(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::SessionTag>>) -> Self {
        self.row_level_permission_tags = input;
        self
    }
    /// <p>The tags to be used for row-level security (RLS). Make sure that the relevant datasets have RLS tags configured before you start a snapshot export job. You can configure the RLS tags of a dataset with a <code>DataSet$RowLevelPermissionTagConfiguration</code> API call.</p>
    /// <p>These are not the tags that are used for Amazon Web Services resource tagging. For more information on row level security in Amazon QuickSight, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/quicksight-dev-rls-tags.html">Using Row-Level Security (RLS) with Tags</a>in the <i>Amazon QuickSight User Guide</i>.</p>
    pub fn get_row_level_permission_tags(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::SessionTag>> {
        &self.row_level_permission_tags
    }
    /// Consumes the builder and constructs a [`SnapshotAnonymousUser`](crate::types::SnapshotAnonymousUser).
    pub fn build(self) -> crate::types::SnapshotAnonymousUser {
        crate::types::SnapshotAnonymousUser {
            row_level_permission_tags: self.row_level_permission_tags,
        }
    }
}
