// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The parameters for Amazon RDS.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct RdsParameters {
    /// <p>Instance ID.</p>
    #[doc(hidden)]
    pub instance_id: std::option::Option<std::string::String>,
    /// <p>Database.</p>
    #[doc(hidden)]
    pub database: std::option::Option<std::string::String>,
}
impl RdsParameters {
    /// <p>Instance ID.</p>
    pub fn instance_id(&self) -> std::option::Option<&str> {
        self.instance_id.as_deref()
    }
    /// <p>Database.</p>
    pub fn database(&self) -> std::option::Option<&str> {
        self.database.as_deref()
    }
}
impl RdsParameters {
    /// Creates a new builder-style object to manufacture [`RdsParameters`](crate::types::RdsParameters).
    pub fn builder() -> crate::types::builders::RdsParametersBuilder {
        crate::types::builders::RdsParametersBuilder::default()
    }
}

/// A builder for [`RdsParameters`](crate::types::RdsParameters).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct RdsParametersBuilder {
    pub(crate) instance_id: std::option::Option<std::string::String>,
    pub(crate) database: std::option::Option<std::string::String>,
}
impl RdsParametersBuilder {
    /// <p>Instance ID.</p>
    pub fn instance_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.instance_id = Some(input.into());
        self
    }
    /// <p>Instance ID.</p>
    pub fn set_instance_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.instance_id = input;
        self
    }
    /// <p>Database.</p>
    pub fn database(mut self, input: impl Into<std::string::String>) -> Self {
        self.database = Some(input.into());
        self
    }
    /// <p>Database.</p>
    pub fn set_database(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.database = input;
        self
    }
    /// Consumes the builder and constructs a [`RdsParameters`](crate::types::RdsParameters).
    pub fn build(self) -> crate::types::RdsParameters {
        crate::types::RdsParameters {
            instance_id: self.instance_id,
            database: self.database,
        }
    }
}
