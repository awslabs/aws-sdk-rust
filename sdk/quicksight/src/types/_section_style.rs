// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The options that style a section.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct SectionStyle {
    /// <p>The height of a section.</p>
    /// <p>Heights can only be defined for header and footer sections. The default height margin is 0.5 inches. </p>
    #[doc(hidden)]
    pub height: std::option::Option<std::string::String>,
    /// <p>The spacing between section content and its top, bottom, left, and right edges.</p>
    /// <p>There is no padding by default.</p>
    #[doc(hidden)]
    pub padding: std::option::Option<crate::types::Spacing>,
}
impl SectionStyle {
    /// <p>The height of a section.</p>
    /// <p>Heights can only be defined for header and footer sections. The default height margin is 0.5 inches. </p>
    pub fn height(&self) -> std::option::Option<&str> {
        self.height.as_deref()
    }
    /// <p>The spacing between section content and its top, bottom, left, and right edges.</p>
    /// <p>There is no padding by default.</p>
    pub fn padding(&self) -> std::option::Option<&crate::types::Spacing> {
        self.padding.as_ref()
    }
}
impl SectionStyle {
    /// Creates a new builder-style object to manufacture [`SectionStyle`](crate::types::SectionStyle).
    pub fn builder() -> crate::types::builders::SectionStyleBuilder {
        crate::types::builders::SectionStyleBuilder::default()
    }
}

/// A builder for [`SectionStyle`](crate::types::SectionStyle).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct SectionStyleBuilder {
    pub(crate) height: std::option::Option<std::string::String>,
    pub(crate) padding: std::option::Option<crate::types::Spacing>,
}
impl SectionStyleBuilder {
    /// <p>The height of a section.</p>
    /// <p>Heights can only be defined for header and footer sections. The default height margin is 0.5 inches. </p>
    pub fn height(mut self, input: impl Into<std::string::String>) -> Self {
        self.height = Some(input.into());
        self
    }
    /// <p>The height of a section.</p>
    /// <p>Heights can only be defined for header and footer sections. The default height margin is 0.5 inches. </p>
    pub fn set_height(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.height = input;
        self
    }
    /// <p>The spacing between section content and its top, bottom, left, and right edges.</p>
    /// <p>There is no padding by default.</p>
    pub fn padding(mut self, input: crate::types::Spacing) -> Self {
        self.padding = Some(input);
        self
    }
    /// <p>The spacing between section content and its top, bottom, left, and right edges.</p>
    /// <p>There is no padding by default.</p>
    pub fn set_padding(mut self, input: std::option::Option<crate::types::Spacing>) -> Self {
        self.padding = input;
        self
    }
    /// Consumes the builder and constructs a [`SectionStyle`](crate::types::SectionStyle).
    pub fn build(self) -> crate::types::SectionStyle {
        crate::types::SectionStyle {
            height: self.height,
            padding: self.padding,
        }
    }
}
