// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The options that determine the presentation of the data labels.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct FunnelChartDataLabelOptions {
    /// <p>The visibility option that determines if data labels are displayed.</p>
    #[doc(hidden)]
    pub visibility: std::option::Option<crate::types::Visibility>,
    /// <p>The visibility of the category labels within the data labels.</p>
    #[doc(hidden)]
    pub category_label_visibility: std::option::Option<crate::types::Visibility>,
    /// <p>The visibility of the measure labels within the data labels.</p>
    #[doc(hidden)]
    pub measure_label_visibility: std::option::Option<crate::types::Visibility>,
    /// <p>Determines the positioning of the data label relative to a section of the funnel.</p>
    #[doc(hidden)]
    pub position: std::option::Option<crate::types::DataLabelPosition>,
    /// <p>The font configuration for the data labels.</p>
    /// <p>Only the <code>FontSize</code> attribute of the font configuration is used for data labels.</p>
    #[doc(hidden)]
    pub label_font_configuration: std::option::Option<crate::types::FontConfiguration>,
    /// <p>The color of the data label text.</p>
    #[doc(hidden)]
    pub label_color: std::option::Option<std::string::String>,
    /// <p>Determines the style of the metric labels.</p>
    #[doc(hidden)]
    pub measure_data_label_style:
        std::option::Option<crate::types::FunnelChartMeasureDataLabelStyle>,
}
impl FunnelChartDataLabelOptions {
    /// <p>The visibility option that determines if data labels are displayed.</p>
    pub fn visibility(&self) -> std::option::Option<&crate::types::Visibility> {
        self.visibility.as_ref()
    }
    /// <p>The visibility of the category labels within the data labels.</p>
    pub fn category_label_visibility(&self) -> std::option::Option<&crate::types::Visibility> {
        self.category_label_visibility.as_ref()
    }
    /// <p>The visibility of the measure labels within the data labels.</p>
    pub fn measure_label_visibility(&self) -> std::option::Option<&crate::types::Visibility> {
        self.measure_label_visibility.as_ref()
    }
    /// <p>Determines the positioning of the data label relative to a section of the funnel.</p>
    pub fn position(&self) -> std::option::Option<&crate::types::DataLabelPosition> {
        self.position.as_ref()
    }
    /// <p>The font configuration for the data labels.</p>
    /// <p>Only the <code>FontSize</code> attribute of the font configuration is used for data labels.</p>
    pub fn label_font_configuration(
        &self,
    ) -> std::option::Option<&crate::types::FontConfiguration> {
        self.label_font_configuration.as_ref()
    }
    /// <p>The color of the data label text.</p>
    pub fn label_color(&self) -> std::option::Option<&str> {
        self.label_color.as_deref()
    }
    /// <p>Determines the style of the metric labels.</p>
    pub fn measure_data_label_style(
        &self,
    ) -> std::option::Option<&crate::types::FunnelChartMeasureDataLabelStyle> {
        self.measure_data_label_style.as_ref()
    }
}
impl FunnelChartDataLabelOptions {
    /// Creates a new builder-style object to manufacture [`FunnelChartDataLabelOptions`](crate::types::FunnelChartDataLabelOptions).
    pub fn builder() -> crate::types::builders::FunnelChartDataLabelOptionsBuilder {
        crate::types::builders::FunnelChartDataLabelOptionsBuilder::default()
    }
}

/// A builder for [`FunnelChartDataLabelOptions`](crate::types::FunnelChartDataLabelOptions).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct FunnelChartDataLabelOptionsBuilder {
    pub(crate) visibility: std::option::Option<crate::types::Visibility>,
    pub(crate) category_label_visibility: std::option::Option<crate::types::Visibility>,
    pub(crate) measure_label_visibility: std::option::Option<crate::types::Visibility>,
    pub(crate) position: std::option::Option<crate::types::DataLabelPosition>,
    pub(crate) label_font_configuration: std::option::Option<crate::types::FontConfiguration>,
    pub(crate) label_color: std::option::Option<std::string::String>,
    pub(crate) measure_data_label_style:
        std::option::Option<crate::types::FunnelChartMeasureDataLabelStyle>,
}
impl FunnelChartDataLabelOptionsBuilder {
    /// <p>The visibility option that determines if data labels are displayed.</p>
    pub fn visibility(mut self, input: crate::types::Visibility) -> Self {
        self.visibility = Some(input);
        self
    }
    /// <p>The visibility option that determines if data labels are displayed.</p>
    pub fn set_visibility(mut self, input: std::option::Option<crate::types::Visibility>) -> Self {
        self.visibility = input;
        self
    }
    /// <p>The visibility of the category labels within the data labels.</p>
    pub fn category_label_visibility(mut self, input: crate::types::Visibility) -> Self {
        self.category_label_visibility = Some(input);
        self
    }
    /// <p>The visibility of the category labels within the data labels.</p>
    pub fn set_category_label_visibility(
        mut self,
        input: std::option::Option<crate::types::Visibility>,
    ) -> Self {
        self.category_label_visibility = input;
        self
    }
    /// <p>The visibility of the measure labels within the data labels.</p>
    pub fn measure_label_visibility(mut self, input: crate::types::Visibility) -> Self {
        self.measure_label_visibility = Some(input);
        self
    }
    /// <p>The visibility of the measure labels within the data labels.</p>
    pub fn set_measure_label_visibility(
        mut self,
        input: std::option::Option<crate::types::Visibility>,
    ) -> Self {
        self.measure_label_visibility = input;
        self
    }
    /// <p>Determines the positioning of the data label relative to a section of the funnel.</p>
    pub fn position(mut self, input: crate::types::DataLabelPosition) -> Self {
        self.position = Some(input);
        self
    }
    /// <p>Determines the positioning of the data label relative to a section of the funnel.</p>
    pub fn set_position(
        mut self,
        input: std::option::Option<crate::types::DataLabelPosition>,
    ) -> Self {
        self.position = input;
        self
    }
    /// <p>The font configuration for the data labels.</p>
    /// <p>Only the <code>FontSize</code> attribute of the font configuration is used for data labels.</p>
    pub fn label_font_configuration(mut self, input: crate::types::FontConfiguration) -> Self {
        self.label_font_configuration = Some(input);
        self
    }
    /// <p>The font configuration for the data labels.</p>
    /// <p>Only the <code>FontSize</code> attribute of the font configuration is used for data labels.</p>
    pub fn set_label_font_configuration(
        mut self,
        input: std::option::Option<crate::types::FontConfiguration>,
    ) -> Self {
        self.label_font_configuration = input;
        self
    }
    /// <p>The color of the data label text.</p>
    pub fn label_color(mut self, input: impl Into<std::string::String>) -> Self {
        self.label_color = Some(input.into());
        self
    }
    /// <p>The color of the data label text.</p>
    pub fn set_label_color(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.label_color = input;
        self
    }
    /// <p>Determines the style of the metric labels.</p>
    pub fn measure_data_label_style(
        mut self,
        input: crate::types::FunnelChartMeasureDataLabelStyle,
    ) -> Self {
        self.measure_data_label_style = Some(input);
        self
    }
    /// <p>Determines the style of the metric labels.</p>
    pub fn set_measure_data_label_style(
        mut self,
        input: std::option::Option<crate::types::FunnelChartMeasureDataLabelStyle>,
    ) -> Self {
        self.measure_data_label_style = input;
        self
    }
    /// Consumes the builder and constructs a [`FunnelChartDataLabelOptions`](crate::types::FunnelChartDataLabelOptions).
    pub fn build(self) -> crate::types::FunnelChartDataLabelOptions {
        crate::types::FunnelChartDataLabelOptions {
            visibility: self.visibility,
            category_label_visibility: self.category_label_visibility,
            measure_label_visibility: self.measure_label_visibility,
            position: self.position,
            label_font_configuration: self.label_font_configuration,
            label_color: self.label_color,
            measure_data_label_style: self.measure_data_label_style,
        }
    }
}
