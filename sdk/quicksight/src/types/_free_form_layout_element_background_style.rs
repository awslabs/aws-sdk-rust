// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The background style configuration of a free-form layout element.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct FreeFormLayoutElementBackgroundStyle {
    /// <p>The background visibility of a free-form layout element.</p>
    #[doc(hidden)]
    pub visibility: std::option::Option<crate::types::Visibility>,
    /// <p>The background color of a free-form layout element.</p>
    #[doc(hidden)]
    pub color: std::option::Option<std::string::String>,
}
impl FreeFormLayoutElementBackgroundStyle {
    /// <p>The background visibility of a free-form layout element.</p>
    pub fn visibility(&self) -> std::option::Option<&crate::types::Visibility> {
        self.visibility.as_ref()
    }
    /// <p>The background color of a free-form layout element.</p>
    pub fn color(&self) -> std::option::Option<&str> {
        self.color.as_deref()
    }
}
impl FreeFormLayoutElementBackgroundStyle {
    /// Creates a new builder-style object to manufacture [`FreeFormLayoutElementBackgroundStyle`](crate::types::FreeFormLayoutElementBackgroundStyle).
    pub fn builder() -> crate::types::builders::FreeFormLayoutElementBackgroundStyleBuilder {
        crate::types::builders::FreeFormLayoutElementBackgroundStyleBuilder::default()
    }
}

/// A builder for [`FreeFormLayoutElementBackgroundStyle`](crate::types::FreeFormLayoutElementBackgroundStyle).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct FreeFormLayoutElementBackgroundStyleBuilder {
    pub(crate) visibility: std::option::Option<crate::types::Visibility>,
    pub(crate) color: std::option::Option<std::string::String>,
}
impl FreeFormLayoutElementBackgroundStyleBuilder {
    /// <p>The background visibility of a free-form layout element.</p>
    pub fn visibility(mut self, input: crate::types::Visibility) -> Self {
        self.visibility = Some(input);
        self
    }
    /// <p>The background visibility of a free-form layout element.</p>
    pub fn set_visibility(mut self, input: std::option::Option<crate::types::Visibility>) -> Self {
        self.visibility = input;
        self
    }
    /// <p>The background color of a free-form layout element.</p>
    pub fn color(mut self, input: impl Into<std::string::String>) -> Self {
        self.color = Some(input.into());
        self
    }
    /// <p>The background color of a free-form layout element.</p>
    pub fn set_color(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.color = input;
        self
    }
    /// Consumes the builder and constructs a [`FreeFormLayoutElementBackgroundStyle`](crate::types::FreeFormLayoutElementBackgroundStyle).
    pub fn build(self) -> crate::types::FreeFormLayoutElementBackgroundStyle {
        crate::types::FreeFormLayoutElementBackgroundStyle {
            visibility: self.visibility,
            color: self.color,
        }
    }
}
