// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The configuration of content in a body section.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct BodySectionContent {
    /// <p>The layout configuration of a body section.</p>
    #[doc(hidden)]
    pub layout: std::option::Option<crate::types::SectionLayoutConfiguration>,
}
impl BodySectionContent {
    /// <p>The layout configuration of a body section.</p>
    pub fn layout(&self) -> std::option::Option<&crate::types::SectionLayoutConfiguration> {
        self.layout.as_ref()
    }
}
impl BodySectionContent {
    /// Creates a new builder-style object to manufacture [`BodySectionContent`](crate::types::BodySectionContent).
    pub fn builder() -> crate::types::builders::BodySectionContentBuilder {
        crate::types::builders::BodySectionContentBuilder::default()
    }
}

/// A builder for [`BodySectionContent`](crate::types::BodySectionContent).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct BodySectionContentBuilder {
    pub(crate) layout: std::option::Option<crate::types::SectionLayoutConfiguration>,
}
impl BodySectionContentBuilder {
    /// <p>The layout configuration of a body section.</p>
    pub fn layout(mut self, input: crate::types::SectionLayoutConfiguration) -> Self {
        self.layout = Some(input);
        self
    }
    /// <p>The layout configuration of a body section.</p>
    pub fn set_layout(
        mut self,
        input: std::option::Option<crate::types::SectionLayoutConfiguration>,
    ) -> Self {
        self.layout = input;
        self
    }
    /// Consumes the builder and constructs a [`BodySectionContent`](crate::types::BodySectionContent).
    pub fn build(self) -> crate::types::BodySectionContent {
        crate::types::BodySectionContent {
            layout: self.layout,
        }
    }
}
