// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Read-only metadata for OAuth2 authorization code grant authentication configuration.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ReadAuthorizationCodeGrantMetadata {
    /// <p>The base endpoint URL for the OAuth2 authorization code grant flow.</p>
    pub base_endpoint: ::std::string::String,
    /// <p>The redirect URL where the authorization server will send the user after authorization.</p>
    pub redirect_url: ::std::string::String,
    /// <p>The read-only credentials details for the authorization code grant flow.</p>
    pub read_authorization_code_grant_credentials_details: ::std::option::Option<crate::types::ReadAuthorizationCodeGrantCredentialsDetails>,
    /// <p>The source of credentials for the authorization code grant flow.</p>
    pub authorization_code_grant_credentials_source: ::std::option::Option<crate::types::AuthorizationCodeGrantCredentialsSource>,
}
impl ReadAuthorizationCodeGrantMetadata {
    /// <p>The base endpoint URL for the OAuth2 authorization code grant flow.</p>
    pub fn base_endpoint(&self) -> &str {
        use std::ops::Deref;
        self.base_endpoint.deref()
    }
    /// <p>The redirect URL where the authorization server will send the user after authorization.</p>
    pub fn redirect_url(&self) -> &str {
        use std::ops::Deref;
        self.redirect_url.deref()
    }
    /// <p>The read-only credentials details for the authorization code grant flow.</p>
    pub fn read_authorization_code_grant_credentials_details(
        &self,
    ) -> ::std::option::Option<&crate::types::ReadAuthorizationCodeGrantCredentialsDetails> {
        self.read_authorization_code_grant_credentials_details.as_ref()
    }
    /// <p>The source of credentials for the authorization code grant flow.</p>
    pub fn authorization_code_grant_credentials_source(&self) -> ::std::option::Option<&crate::types::AuthorizationCodeGrantCredentialsSource> {
        self.authorization_code_grant_credentials_source.as_ref()
    }
}
impl ReadAuthorizationCodeGrantMetadata {
    /// Creates a new builder-style object to manufacture [`ReadAuthorizationCodeGrantMetadata`](crate::types::ReadAuthorizationCodeGrantMetadata).
    pub fn builder() -> crate::types::builders::ReadAuthorizationCodeGrantMetadataBuilder {
        crate::types::builders::ReadAuthorizationCodeGrantMetadataBuilder::default()
    }
}

/// A builder for [`ReadAuthorizationCodeGrantMetadata`](crate::types::ReadAuthorizationCodeGrantMetadata).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct ReadAuthorizationCodeGrantMetadataBuilder {
    pub(crate) base_endpoint: ::std::option::Option<::std::string::String>,
    pub(crate) redirect_url: ::std::option::Option<::std::string::String>,
    pub(crate) read_authorization_code_grant_credentials_details: ::std::option::Option<crate::types::ReadAuthorizationCodeGrantCredentialsDetails>,
    pub(crate) authorization_code_grant_credentials_source: ::std::option::Option<crate::types::AuthorizationCodeGrantCredentialsSource>,
}
impl ReadAuthorizationCodeGrantMetadataBuilder {
    /// <p>The base endpoint URL for the OAuth2 authorization code grant flow.</p>
    /// This field is required.
    pub fn base_endpoint(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.base_endpoint = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The base endpoint URL for the OAuth2 authorization code grant flow.</p>
    pub fn set_base_endpoint(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.base_endpoint = input;
        self
    }
    /// <p>The base endpoint URL for the OAuth2 authorization code grant flow.</p>
    pub fn get_base_endpoint(&self) -> &::std::option::Option<::std::string::String> {
        &self.base_endpoint
    }
    /// <p>The redirect URL where the authorization server will send the user after authorization.</p>
    /// This field is required.
    pub fn redirect_url(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.redirect_url = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The redirect URL where the authorization server will send the user after authorization.</p>
    pub fn set_redirect_url(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.redirect_url = input;
        self
    }
    /// <p>The redirect URL where the authorization server will send the user after authorization.</p>
    pub fn get_redirect_url(&self) -> &::std::option::Option<::std::string::String> {
        &self.redirect_url
    }
    /// <p>The read-only credentials details for the authorization code grant flow.</p>
    pub fn read_authorization_code_grant_credentials_details(mut self, input: crate::types::ReadAuthorizationCodeGrantCredentialsDetails) -> Self {
        self.read_authorization_code_grant_credentials_details = ::std::option::Option::Some(input);
        self
    }
    /// <p>The read-only credentials details for the authorization code grant flow.</p>
    pub fn set_read_authorization_code_grant_credentials_details(
        mut self,
        input: ::std::option::Option<crate::types::ReadAuthorizationCodeGrantCredentialsDetails>,
    ) -> Self {
        self.read_authorization_code_grant_credentials_details = input;
        self
    }
    /// <p>The read-only credentials details for the authorization code grant flow.</p>
    pub fn get_read_authorization_code_grant_credentials_details(
        &self,
    ) -> &::std::option::Option<crate::types::ReadAuthorizationCodeGrantCredentialsDetails> {
        &self.read_authorization_code_grant_credentials_details
    }
    /// <p>The source of credentials for the authorization code grant flow.</p>
    pub fn authorization_code_grant_credentials_source(mut self, input: crate::types::AuthorizationCodeGrantCredentialsSource) -> Self {
        self.authorization_code_grant_credentials_source = ::std::option::Option::Some(input);
        self
    }
    /// <p>The source of credentials for the authorization code grant flow.</p>
    pub fn set_authorization_code_grant_credentials_source(
        mut self,
        input: ::std::option::Option<crate::types::AuthorizationCodeGrantCredentialsSource>,
    ) -> Self {
        self.authorization_code_grant_credentials_source = input;
        self
    }
    /// <p>The source of credentials for the authorization code grant flow.</p>
    pub fn get_authorization_code_grant_credentials_source(&self) -> &::std::option::Option<crate::types::AuthorizationCodeGrantCredentialsSource> {
        &self.authorization_code_grant_credentials_source
    }
    /// Consumes the builder and constructs a [`ReadAuthorizationCodeGrantMetadata`](crate::types::ReadAuthorizationCodeGrantMetadata).
    /// This method will fail if any of the following fields are not set:
    /// - [`base_endpoint`](crate::types::builders::ReadAuthorizationCodeGrantMetadataBuilder::base_endpoint)
    /// - [`redirect_url`](crate::types::builders::ReadAuthorizationCodeGrantMetadataBuilder::redirect_url)
    pub fn build(self) -> ::std::result::Result<crate::types::ReadAuthorizationCodeGrantMetadata, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::ReadAuthorizationCodeGrantMetadata {
            base_endpoint: self.base_endpoint.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "base_endpoint",
                    "base_endpoint was not specified but it is required when building ReadAuthorizationCodeGrantMetadata",
                )
            })?,
            redirect_url: self.redirect_url.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "redirect_url",
                    "redirect_url was not specified but it is required when building ReadAuthorizationCodeGrantMetadata",
                )
            })?,
            read_authorization_code_grant_credentials_details: self.read_authorization_code_grant_credentials_details,
            authorization_code_grant_credentials_source: self.authorization_code_grant_credentials_source,
        })
    }
}
