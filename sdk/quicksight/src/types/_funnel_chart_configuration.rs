// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The configuration of a <code>FunnelChartVisual</code>.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct FunnelChartConfiguration {
    /// <p>The field well configuration of a <code>FunnelChartVisual</code>.</p>
    #[doc(hidden)]
    pub field_wells: std::option::Option<crate::types::FunnelChartFieldWells>,
    /// <p>The sort configuration of a <code>FunnelChartVisual</code>.</p>
    #[doc(hidden)]
    pub sort_configuration: std::option::Option<crate::types::FunnelChartSortConfiguration>,
    /// <p>The label options of the categories that are displayed in a <code>FunnelChartVisual</code>.</p>
    #[doc(hidden)]
    pub category_label_options: std::option::Option<crate::types::ChartAxisLabelOptions>,
    /// <p>The label options for the values that are displayed in a <code>FunnelChartVisual</code>.</p>
    #[doc(hidden)]
    pub value_label_options: std::option::Option<crate::types::ChartAxisLabelOptions>,
    /// <p>The tooltip configuration of a <code>FunnelChartVisual</code>.</p>
    #[doc(hidden)]
    pub tooltip: std::option::Option<crate::types::TooltipOptions>,
    /// <p>The options that determine the presentation of the data labels.</p>
    #[doc(hidden)]
    pub data_label_options: std::option::Option<crate::types::FunnelChartDataLabelOptions>,
    /// <p>The visual palette configuration of a <code>FunnelChartVisual</code>.</p>
    #[doc(hidden)]
    pub visual_palette: std::option::Option<crate::types::VisualPalette>,
}
impl FunnelChartConfiguration {
    /// <p>The field well configuration of a <code>FunnelChartVisual</code>.</p>
    pub fn field_wells(&self) -> std::option::Option<&crate::types::FunnelChartFieldWells> {
        self.field_wells.as_ref()
    }
    /// <p>The sort configuration of a <code>FunnelChartVisual</code>.</p>
    pub fn sort_configuration(
        &self,
    ) -> std::option::Option<&crate::types::FunnelChartSortConfiguration> {
        self.sort_configuration.as_ref()
    }
    /// <p>The label options of the categories that are displayed in a <code>FunnelChartVisual</code>.</p>
    pub fn category_label_options(
        &self,
    ) -> std::option::Option<&crate::types::ChartAxisLabelOptions> {
        self.category_label_options.as_ref()
    }
    /// <p>The label options for the values that are displayed in a <code>FunnelChartVisual</code>.</p>
    pub fn value_label_options(&self) -> std::option::Option<&crate::types::ChartAxisLabelOptions> {
        self.value_label_options.as_ref()
    }
    /// <p>The tooltip configuration of a <code>FunnelChartVisual</code>.</p>
    pub fn tooltip(&self) -> std::option::Option<&crate::types::TooltipOptions> {
        self.tooltip.as_ref()
    }
    /// <p>The options that determine the presentation of the data labels.</p>
    pub fn data_label_options(
        &self,
    ) -> std::option::Option<&crate::types::FunnelChartDataLabelOptions> {
        self.data_label_options.as_ref()
    }
    /// <p>The visual palette configuration of a <code>FunnelChartVisual</code>.</p>
    pub fn visual_palette(&self) -> std::option::Option<&crate::types::VisualPalette> {
        self.visual_palette.as_ref()
    }
}
impl FunnelChartConfiguration {
    /// Creates a new builder-style object to manufacture [`FunnelChartConfiguration`](crate::types::FunnelChartConfiguration).
    pub fn builder() -> crate::types::builders::FunnelChartConfigurationBuilder {
        crate::types::builders::FunnelChartConfigurationBuilder::default()
    }
}

/// A builder for [`FunnelChartConfiguration`](crate::types::FunnelChartConfiguration).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct FunnelChartConfigurationBuilder {
    pub(crate) field_wells: std::option::Option<crate::types::FunnelChartFieldWells>,
    pub(crate) sort_configuration: std::option::Option<crate::types::FunnelChartSortConfiguration>,
    pub(crate) category_label_options: std::option::Option<crate::types::ChartAxisLabelOptions>,
    pub(crate) value_label_options: std::option::Option<crate::types::ChartAxisLabelOptions>,
    pub(crate) tooltip: std::option::Option<crate::types::TooltipOptions>,
    pub(crate) data_label_options: std::option::Option<crate::types::FunnelChartDataLabelOptions>,
    pub(crate) visual_palette: std::option::Option<crate::types::VisualPalette>,
}
impl FunnelChartConfigurationBuilder {
    /// <p>The field well configuration of a <code>FunnelChartVisual</code>.</p>
    pub fn field_wells(mut self, input: crate::types::FunnelChartFieldWells) -> Self {
        self.field_wells = Some(input);
        self
    }
    /// <p>The field well configuration of a <code>FunnelChartVisual</code>.</p>
    pub fn set_field_wells(
        mut self,
        input: std::option::Option<crate::types::FunnelChartFieldWells>,
    ) -> Self {
        self.field_wells = input;
        self
    }
    /// <p>The sort configuration of a <code>FunnelChartVisual</code>.</p>
    pub fn sort_configuration(mut self, input: crate::types::FunnelChartSortConfiguration) -> Self {
        self.sort_configuration = Some(input);
        self
    }
    /// <p>The sort configuration of a <code>FunnelChartVisual</code>.</p>
    pub fn set_sort_configuration(
        mut self,
        input: std::option::Option<crate::types::FunnelChartSortConfiguration>,
    ) -> Self {
        self.sort_configuration = input;
        self
    }
    /// <p>The label options of the categories that are displayed in a <code>FunnelChartVisual</code>.</p>
    pub fn category_label_options(mut self, input: crate::types::ChartAxisLabelOptions) -> Self {
        self.category_label_options = Some(input);
        self
    }
    /// <p>The label options of the categories that are displayed in a <code>FunnelChartVisual</code>.</p>
    pub fn set_category_label_options(
        mut self,
        input: std::option::Option<crate::types::ChartAxisLabelOptions>,
    ) -> Self {
        self.category_label_options = input;
        self
    }
    /// <p>The label options for the values that are displayed in a <code>FunnelChartVisual</code>.</p>
    pub fn value_label_options(mut self, input: crate::types::ChartAxisLabelOptions) -> Self {
        self.value_label_options = Some(input);
        self
    }
    /// <p>The label options for the values that are displayed in a <code>FunnelChartVisual</code>.</p>
    pub fn set_value_label_options(
        mut self,
        input: std::option::Option<crate::types::ChartAxisLabelOptions>,
    ) -> Self {
        self.value_label_options = input;
        self
    }
    /// <p>The tooltip configuration of a <code>FunnelChartVisual</code>.</p>
    pub fn tooltip(mut self, input: crate::types::TooltipOptions) -> Self {
        self.tooltip = Some(input);
        self
    }
    /// <p>The tooltip configuration of a <code>FunnelChartVisual</code>.</p>
    pub fn set_tooltip(mut self, input: std::option::Option<crate::types::TooltipOptions>) -> Self {
        self.tooltip = input;
        self
    }
    /// <p>The options that determine the presentation of the data labels.</p>
    pub fn data_label_options(mut self, input: crate::types::FunnelChartDataLabelOptions) -> Self {
        self.data_label_options = Some(input);
        self
    }
    /// <p>The options that determine the presentation of the data labels.</p>
    pub fn set_data_label_options(
        mut self,
        input: std::option::Option<crate::types::FunnelChartDataLabelOptions>,
    ) -> Self {
        self.data_label_options = input;
        self
    }
    /// <p>The visual palette configuration of a <code>FunnelChartVisual</code>.</p>
    pub fn visual_palette(mut self, input: crate::types::VisualPalette) -> Self {
        self.visual_palette = Some(input);
        self
    }
    /// <p>The visual palette configuration of a <code>FunnelChartVisual</code>.</p>
    pub fn set_visual_palette(
        mut self,
        input: std::option::Option<crate::types::VisualPalette>,
    ) -> Self {
        self.visual_palette = input;
        self
    }
    /// Consumes the builder and constructs a [`FunnelChartConfiguration`](crate::types::FunnelChartConfiguration).
    pub fn build(self) -> crate::types::FunnelChartConfiguration {
        crate::types::FunnelChartConfiguration {
            field_wells: self.field_wells,
            sort_configuration: self.sort_configuration,
            category_label_options: self.category_label_options,
            value_label_options: self.value_label_options,
            tooltip: self.tooltip,
            data_label_options: self.data_label_options,
            visual_palette: self.visual_palette,
        }
    }
}
