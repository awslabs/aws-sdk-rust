// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A member of an Quick Sight group. Currently, group members must be users. Groups can't be members of another group. .</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GroupMember {
    /// <p>The Amazon Resource Name (ARN) for the group member (user).</p>
    pub arn: ::std::option::Option<::std::string::String>,
    /// <p>The name of the group member (user).</p>
    pub member_name: ::std::option::Option<::std::string::String>,
}
impl GroupMember {
    /// <p>The Amazon Resource Name (ARN) for the group member (user).</p>
    pub fn arn(&self) -> ::std::option::Option<&str> {
        self.arn.as_deref()
    }
    /// <p>The name of the group member (user).</p>
    pub fn member_name(&self) -> ::std::option::Option<&str> {
        self.member_name.as_deref()
    }
}
impl GroupMember {
    /// Creates a new builder-style object to manufacture [`GroupMember`](crate::types::GroupMember).
    pub fn builder() -> crate::types::builders::GroupMemberBuilder {
        crate::types::builders::GroupMemberBuilder::default()
    }
}

/// A builder for [`GroupMember`](crate::types::GroupMember).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct GroupMemberBuilder {
    pub(crate) arn: ::std::option::Option<::std::string::String>,
    pub(crate) member_name: ::std::option::Option<::std::string::String>,
}
impl GroupMemberBuilder {
    /// <p>The Amazon Resource Name (ARN) for the group member (user).</p>
    pub fn arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) for the group member (user).</p>
    pub fn set_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) for the group member (user).</p>
    pub fn get_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.arn
    }
    /// <p>The name of the group member (user).</p>
    pub fn member_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.member_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the group member (user).</p>
    pub fn set_member_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.member_name = input;
        self
    }
    /// <p>The name of the group member (user).</p>
    pub fn get_member_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.member_name
    }
    /// Consumes the builder and constructs a [`GroupMember`](crate::types::GroupMember).
    pub fn build(self) -> crate::types::GroupMember {
        crate::types::GroupMember {
            arn: self.arn,
            member_name: self.member_name,
        }
    }
}
