// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Read-only metadata for basic authentication connections, containing non-sensitive configuration details.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq)]
pub struct ReadBasicAuthConnectionMetadata {
    /// <p>The base endpoint URL for basic authentication.</p>
    pub base_endpoint: ::std::string::String,
    /// <p>The username used for basic authentication.</p>
    pub username: ::std::string::String,
}
impl ReadBasicAuthConnectionMetadata {
    /// <p>The base endpoint URL for basic authentication.</p>
    pub fn base_endpoint(&self) -> &str {
        use std::ops::Deref;
        self.base_endpoint.deref()
    }
    /// <p>The username used for basic authentication.</p>
    pub fn username(&self) -> &str {
        use std::ops::Deref;
        self.username.deref()
    }
}
impl ::std::fmt::Debug for ReadBasicAuthConnectionMetadata {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("ReadBasicAuthConnectionMetadata");
        formatter.field("base_endpoint", &self.base_endpoint);
        formatter.field("username", &"*** Sensitive Data Redacted ***");
        formatter.finish()
    }
}
impl ReadBasicAuthConnectionMetadata {
    /// Creates a new builder-style object to manufacture [`ReadBasicAuthConnectionMetadata`](crate::types::ReadBasicAuthConnectionMetadata).
    pub fn builder() -> crate::types::builders::ReadBasicAuthConnectionMetadataBuilder {
        crate::types::builders::ReadBasicAuthConnectionMetadataBuilder::default()
    }
}

/// A builder for [`ReadBasicAuthConnectionMetadata`](crate::types::ReadBasicAuthConnectionMetadata).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default)]
#[non_exhaustive]
pub struct ReadBasicAuthConnectionMetadataBuilder {
    pub(crate) base_endpoint: ::std::option::Option<::std::string::String>,
    pub(crate) username: ::std::option::Option<::std::string::String>,
}
impl ReadBasicAuthConnectionMetadataBuilder {
    /// <p>The base endpoint URL for basic authentication.</p>
    /// This field is required.
    pub fn base_endpoint(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.base_endpoint = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The base endpoint URL for basic authentication.</p>
    pub fn set_base_endpoint(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.base_endpoint = input;
        self
    }
    /// <p>The base endpoint URL for basic authentication.</p>
    pub fn get_base_endpoint(&self) -> &::std::option::Option<::std::string::String> {
        &self.base_endpoint
    }
    /// <p>The username used for basic authentication.</p>
    /// This field is required.
    pub fn username(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.username = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The username used for basic authentication.</p>
    pub fn set_username(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.username = input;
        self
    }
    /// <p>The username used for basic authentication.</p>
    pub fn get_username(&self) -> &::std::option::Option<::std::string::String> {
        &self.username
    }
    /// Consumes the builder and constructs a [`ReadBasicAuthConnectionMetadata`](crate::types::ReadBasicAuthConnectionMetadata).
    /// This method will fail if any of the following fields are not set:
    /// - [`base_endpoint`](crate::types::builders::ReadBasicAuthConnectionMetadataBuilder::base_endpoint)
    /// - [`username`](crate::types::builders::ReadBasicAuthConnectionMetadataBuilder::username)
    pub fn build(self) -> ::std::result::Result<crate::types::ReadBasicAuthConnectionMetadata, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::ReadBasicAuthConnectionMetadata {
            base_endpoint: self.base_endpoint.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "base_endpoint",
                    "base_endpoint was not specified but it is required when building ReadBasicAuthConnectionMetadata",
                )
            })?,
            username: self.username.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "username",
                    "username was not specified but it is required when building ReadBasicAuthConnectionMetadata",
                )
            })?,
        })
    }
}
impl ::std::fmt::Debug for ReadBasicAuthConnectionMetadataBuilder {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("ReadBasicAuthConnectionMetadataBuilder");
        formatter.field("base_endpoint", &self.base_endpoint);
        formatter.field("username", &"*** Sensitive Data Redacted ***");
        formatter.finish()
    }
}
