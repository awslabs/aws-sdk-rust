// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The template alias.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct TemplateAlias {
    /// <p>The display name of the template alias.</p>
    #[doc(hidden)]
    pub alias_name: std::option::Option<std::string::String>,
    /// <p>The Amazon Resource Name (ARN) of the template alias.</p>
    #[doc(hidden)]
    pub arn: std::option::Option<std::string::String>,
    /// <p>The version number of the template alias.</p>
    #[doc(hidden)]
    pub template_version_number: std::option::Option<i64>,
}
impl TemplateAlias {
    /// <p>The display name of the template alias.</p>
    pub fn alias_name(&self) -> std::option::Option<&str> {
        self.alias_name.as_deref()
    }
    /// <p>The Amazon Resource Name (ARN) of the template alias.</p>
    pub fn arn(&self) -> std::option::Option<&str> {
        self.arn.as_deref()
    }
    /// <p>The version number of the template alias.</p>
    pub fn template_version_number(&self) -> std::option::Option<i64> {
        self.template_version_number
    }
}
impl TemplateAlias {
    /// Creates a new builder-style object to manufacture [`TemplateAlias`](crate::types::TemplateAlias).
    pub fn builder() -> crate::types::builders::TemplateAliasBuilder {
        crate::types::builders::TemplateAliasBuilder::default()
    }
}

/// A builder for [`TemplateAlias`](crate::types::TemplateAlias).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct TemplateAliasBuilder {
    pub(crate) alias_name: std::option::Option<std::string::String>,
    pub(crate) arn: std::option::Option<std::string::String>,
    pub(crate) template_version_number: std::option::Option<i64>,
}
impl TemplateAliasBuilder {
    /// <p>The display name of the template alias.</p>
    pub fn alias_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.alias_name = Some(input.into());
        self
    }
    /// <p>The display name of the template alias.</p>
    pub fn set_alias_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.alias_name = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the template alias.</p>
    pub fn arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.arn = Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the template alias.</p>
    pub fn set_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.arn = input;
        self
    }
    /// <p>The version number of the template alias.</p>
    pub fn template_version_number(mut self, input: i64) -> Self {
        self.template_version_number = Some(input);
        self
    }
    /// <p>The version number of the template alias.</p>
    pub fn set_template_version_number(mut self, input: std::option::Option<i64>) -> Self {
        self.template_version_number = input;
        self
    }
    /// Consumes the builder and constructs a [`TemplateAlias`](crate::types::TemplateAlias).
    pub fn build(self) -> crate::types::TemplateAlias {
        crate::types::TemplateAlias {
            alias_name: self.alias_name,
            arn: self.arn,
            template_version_number: self.template_version_number,
        }
    }
}
