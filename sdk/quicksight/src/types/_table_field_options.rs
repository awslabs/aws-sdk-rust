// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The field options for a table visual.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct TableFieldOptions {
    /// <p>The selected field options for the table field options.</p>
    #[doc(hidden)]
    pub selected_field_options: std::option::Option<std::vec::Vec<crate::types::TableFieldOption>>,
    /// <p>The order of field IDs of the field options for a table visual.</p>
    #[doc(hidden)]
    pub order: std::option::Option<std::vec::Vec<std::string::String>>,
}
impl TableFieldOptions {
    /// <p>The selected field options for the table field options.</p>
    pub fn selected_field_options(&self) -> std::option::Option<&[crate::types::TableFieldOption]> {
        self.selected_field_options.as_deref()
    }
    /// <p>The order of field IDs of the field options for a table visual.</p>
    pub fn order(&self) -> std::option::Option<&[std::string::String]> {
        self.order.as_deref()
    }
}
impl TableFieldOptions {
    /// Creates a new builder-style object to manufacture [`TableFieldOptions`](crate::types::TableFieldOptions).
    pub fn builder() -> crate::types::builders::TableFieldOptionsBuilder {
        crate::types::builders::TableFieldOptionsBuilder::default()
    }
}

/// A builder for [`TableFieldOptions`](crate::types::TableFieldOptions).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct TableFieldOptionsBuilder {
    pub(crate) selected_field_options:
        std::option::Option<std::vec::Vec<crate::types::TableFieldOption>>,
    pub(crate) order: std::option::Option<std::vec::Vec<std::string::String>>,
}
impl TableFieldOptionsBuilder {
    /// Appends an item to `selected_field_options`.
    ///
    /// To override the contents of this collection use [`set_selected_field_options`](Self::set_selected_field_options).
    ///
    /// <p>The selected field options for the table field options.</p>
    pub fn selected_field_options(mut self, input: crate::types::TableFieldOption) -> Self {
        let mut v = self.selected_field_options.unwrap_or_default();
        v.push(input);
        self.selected_field_options = Some(v);
        self
    }
    /// <p>The selected field options for the table field options.</p>
    pub fn set_selected_field_options(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::TableFieldOption>>,
    ) -> Self {
        self.selected_field_options = input;
        self
    }
    /// Appends an item to `order`.
    ///
    /// To override the contents of this collection use [`set_order`](Self::set_order).
    ///
    /// <p>The order of field IDs of the field options for a table visual.</p>
    pub fn order(mut self, input: impl Into<std::string::String>) -> Self {
        let mut v = self.order.unwrap_or_default();
        v.push(input.into());
        self.order = Some(v);
        self
    }
    /// <p>The order of field IDs of the field options for a table visual.</p>
    pub fn set_order(
        mut self,
        input: std::option::Option<std::vec::Vec<std::string::String>>,
    ) -> Self {
        self.order = input;
        self
    }
    /// Consumes the builder and constructs a [`TableFieldOptions`](crate::types::TableFieldOptions).
    pub fn build(self) -> crate::types::TableFieldOptions {
        crate::types::TableFieldOptions {
            selected_field_options: self.selected_field_options,
            order: self.order,
        }
    }
}
