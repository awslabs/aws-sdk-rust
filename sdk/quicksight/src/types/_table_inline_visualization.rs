// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The inline visualization of a specific type to display within a chart.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct TableInlineVisualization {
    /// <p>The configuration of the inline visualization of the data bars within a chart.</p>
    #[doc(hidden)]
    pub data_bars: std::option::Option<crate::types::DataBarsOptions>,
}
impl TableInlineVisualization {
    /// <p>The configuration of the inline visualization of the data bars within a chart.</p>
    pub fn data_bars(&self) -> std::option::Option<&crate::types::DataBarsOptions> {
        self.data_bars.as_ref()
    }
}
impl TableInlineVisualization {
    /// Creates a new builder-style object to manufacture [`TableInlineVisualization`](crate::types::TableInlineVisualization).
    pub fn builder() -> crate::types::builders::TableInlineVisualizationBuilder {
        crate::types::builders::TableInlineVisualizationBuilder::default()
    }
}

/// A builder for [`TableInlineVisualization`](crate::types::TableInlineVisualization).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct TableInlineVisualizationBuilder {
    pub(crate) data_bars: std::option::Option<crate::types::DataBarsOptions>,
}
impl TableInlineVisualizationBuilder {
    /// <p>The configuration of the inline visualization of the data bars within a chart.</p>
    pub fn data_bars(mut self, input: crate::types::DataBarsOptions) -> Self {
        self.data_bars = Some(input);
        self
    }
    /// <p>The configuration of the inline visualization of the data bars within a chart.</p>
    pub fn set_data_bars(
        mut self,
        input: std::option::Option<crate::types::DataBarsOptions>,
    ) -> Self {
        self.data_bars = input;
        self
    }
    /// Consumes the builder and constructs a [`TableInlineVisualization`](crate::types::TableInlineVisualization).
    pub fn build(self) -> crate::types::TableInlineVisualization {
        crate::types::TableInlineVisualization {
            data_bars: self.data_bars,
        }
    }
}
