// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A list of selectable values that are used in a control.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ParameterSelectableValues {
    /// <p>The values that are used in <code>ParameterSelectableValues</code>.</p>
    #[doc(hidden)]
    pub values: std::option::Option<std::vec::Vec<std::string::String>>,
    /// <p>The column identifier that fetches values from the data set.</p>
    #[doc(hidden)]
    pub link_to_data_set_column: std::option::Option<crate::types::ColumnIdentifier>,
}
impl ParameterSelectableValues {
    /// <p>The values that are used in <code>ParameterSelectableValues</code>.</p>
    pub fn values(&self) -> std::option::Option<&[std::string::String]> {
        self.values.as_deref()
    }
    /// <p>The column identifier that fetches values from the data set.</p>
    pub fn link_to_data_set_column(&self) -> std::option::Option<&crate::types::ColumnIdentifier> {
        self.link_to_data_set_column.as_ref()
    }
}
impl ParameterSelectableValues {
    /// Creates a new builder-style object to manufacture [`ParameterSelectableValues`](crate::types::ParameterSelectableValues).
    pub fn builder() -> crate::types::builders::ParameterSelectableValuesBuilder {
        crate::types::builders::ParameterSelectableValuesBuilder::default()
    }
}

/// A builder for [`ParameterSelectableValues`](crate::types::ParameterSelectableValues).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ParameterSelectableValuesBuilder {
    pub(crate) values: std::option::Option<std::vec::Vec<std::string::String>>,
    pub(crate) link_to_data_set_column: std::option::Option<crate::types::ColumnIdentifier>,
}
impl ParameterSelectableValuesBuilder {
    /// Appends an item to `values`.
    ///
    /// To override the contents of this collection use [`set_values`](Self::set_values).
    ///
    /// <p>The values that are used in <code>ParameterSelectableValues</code>.</p>
    pub fn values(mut self, input: impl Into<std::string::String>) -> Self {
        let mut v = self.values.unwrap_or_default();
        v.push(input.into());
        self.values = Some(v);
        self
    }
    /// <p>The values that are used in <code>ParameterSelectableValues</code>.</p>
    pub fn set_values(
        mut self,
        input: std::option::Option<std::vec::Vec<std::string::String>>,
    ) -> Self {
        self.values = input;
        self
    }
    /// <p>The column identifier that fetches values from the data set.</p>
    pub fn link_to_data_set_column(mut self, input: crate::types::ColumnIdentifier) -> Self {
        self.link_to_data_set_column = Some(input);
        self
    }
    /// <p>The column identifier that fetches values from the data set.</p>
    pub fn set_link_to_data_set_column(
        mut self,
        input: std::option::Option<crate::types::ColumnIdentifier>,
    ) -> Self {
        self.link_to_data_set_column = input;
        self
    }
    /// Consumes the builder and constructs a [`ParameterSelectableValues`](crate::types::ParameterSelectableValues).
    pub fn build(self) -> crate::types::ParameterSelectableValues {
        crate::types::ParameterSelectableValues {
            values: self.values,
            link_to_data_set_column: self.link_to_data_set_column,
        }
    }
}
