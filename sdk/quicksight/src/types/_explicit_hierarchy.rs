// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The option that determines the hierarchy of the fields that are built within a visual's field wells. These fields can't be duplicated to other visuals.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ExplicitHierarchy {
    /// <p>The hierarchy ID of the explicit hierarchy.</p>
    #[doc(hidden)]
    pub hierarchy_id: std::option::Option<std::string::String>,
    /// <p>The list of columns that define the explicit hierarchy.</p>
    #[doc(hidden)]
    pub columns: std::option::Option<std::vec::Vec<crate::types::ColumnIdentifier>>,
    /// <p>The option that determines the drill down filters for the explicit hierarchy.</p>
    #[doc(hidden)]
    pub drill_down_filters: std::option::Option<std::vec::Vec<crate::types::DrillDownFilter>>,
}
impl ExplicitHierarchy {
    /// <p>The hierarchy ID of the explicit hierarchy.</p>
    pub fn hierarchy_id(&self) -> std::option::Option<&str> {
        self.hierarchy_id.as_deref()
    }
    /// <p>The list of columns that define the explicit hierarchy.</p>
    pub fn columns(&self) -> std::option::Option<&[crate::types::ColumnIdentifier]> {
        self.columns.as_deref()
    }
    /// <p>The option that determines the drill down filters for the explicit hierarchy.</p>
    pub fn drill_down_filters(&self) -> std::option::Option<&[crate::types::DrillDownFilter]> {
        self.drill_down_filters.as_deref()
    }
}
impl ExplicitHierarchy {
    /// Creates a new builder-style object to manufacture [`ExplicitHierarchy`](crate::types::ExplicitHierarchy).
    pub fn builder() -> crate::types::builders::ExplicitHierarchyBuilder {
        crate::types::builders::ExplicitHierarchyBuilder::default()
    }
}

/// A builder for [`ExplicitHierarchy`](crate::types::ExplicitHierarchy).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ExplicitHierarchyBuilder {
    pub(crate) hierarchy_id: std::option::Option<std::string::String>,
    pub(crate) columns: std::option::Option<std::vec::Vec<crate::types::ColumnIdentifier>>,
    pub(crate) drill_down_filters:
        std::option::Option<std::vec::Vec<crate::types::DrillDownFilter>>,
}
impl ExplicitHierarchyBuilder {
    /// <p>The hierarchy ID of the explicit hierarchy.</p>
    pub fn hierarchy_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.hierarchy_id = Some(input.into());
        self
    }
    /// <p>The hierarchy ID of the explicit hierarchy.</p>
    pub fn set_hierarchy_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.hierarchy_id = input;
        self
    }
    /// Appends an item to `columns`.
    ///
    /// To override the contents of this collection use [`set_columns`](Self::set_columns).
    ///
    /// <p>The list of columns that define the explicit hierarchy.</p>
    pub fn columns(mut self, input: crate::types::ColumnIdentifier) -> Self {
        let mut v = self.columns.unwrap_or_default();
        v.push(input);
        self.columns = Some(v);
        self
    }
    /// <p>The list of columns that define the explicit hierarchy.</p>
    pub fn set_columns(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::ColumnIdentifier>>,
    ) -> Self {
        self.columns = input;
        self
    }
    /// Appends an item to `drill_down_filters`.
    ///
    /// To override the contents of this collection use [`set_drill_down_filters`](Self::set_drill_down_filters).
    ///
    /// <p>The option that determines the drill down filters for the explicit hierarchy.</p>
    pub fn drill_down_filters(mut self, input: crate::types::DrillDownFilter) -> Self {
        let mut v = self.drill_down_filters.unwrap_or_default();
        v.push(input);
        self.drill_down_filters = Some(v);
        self
    }
    /// <p>The option that determines the drill down filters for the explicit hierarchy.</p>
    pub fn set_drill_down_filters(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::DrillDownFilter>>,
    ) -> Self {
        self.drill_down_filters = input;
        self
    }
    /// Consumes the builder and constructs a [`ExplicitHierarchy`](crate::types::ExplicitHierarchy).
    pub fn build(self) -> crate::types::ExplicitHierarchy {
        crate::types::ExplicitHierarchy {
            hierarchy_id: self.hierarchy_id,
            columns: self.columns,
            drill_down_filters: self.drill_down_filters,
        }
    }
}
