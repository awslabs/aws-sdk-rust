// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The value of a time range filter.</p>
/// <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct TimeRangeFilterValue {
    /// <p>The static input value.</p>
    #[doc(hidden)]
    pub static_value: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>The rolling date input value.</p>
    #[doc(hidden)]
    pub rolling_date: std::option::Option<crate::types::RollingDateConfiguration>,
    /// <p>The parameter type input value.</p>
    #[doc(hidden)]
    pub parameter: std::option::Option<std::string::String>,
}
impl TimeRangeFilterValue {
    /// <p>The static input value.</p>
    pub fn static_value(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.static_value.as_ref()
    }
    /// <p>The rolling date input value.</p>
    pub fn rolling_date(&self) -> std::option::Option<&crate::types::RollingDateConfiguration> {
        self.rolling_date.as_ref()
    }
    /// <p>The parameter type input value.</p>
    pub fn parameter(&self) -> std::option::Option<&str> {
        self.parameter.as_deref()
    }
}
impl TimeRangeFilterValue {
    /// Creates a new builder-style object to manufacture [`TimeRangeFilterValue`](crate::types::TimeRangeFilterValue).
    pub fn builder() -> crate::types::builders::TimeRangeFilterValueBuilder {
        crate::types::builders::TimeRangeFilterValueBuilder::default()
    }
}

/// A builder for [`TimeRangeFilterValue`](crate::types::TimeRangeFilterValue).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct TimeRangeFilterValueBuilder {
    pub(crate) static_value: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) rolling_date: std::option::Option<crate::types::RollingDateConfiguration>,
    pub(crate) parameter: std::option::Option<std::string::String>,
}
impl TimeRangeFilterValueBuilder {
    /// <p>The static input value.</p>
    pub fn static_value(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.static_value = Some(input);
        self
    }
    /// <p>The static input value.</p>
    pub fn set_static_value(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.static_value = input;
        self
    }
    /// <p>The rolling date input value.</p>
    pub fn rolling_date(mut self, input: crate::types::RollingDateConfiguration) -> Self {
        self.rolling_date = Some(input);
        self
    }
    /// <p>The rolling date input value.</p>
    pub fn set_rolling_date(
        mut self,
        input: std::option::Option<crate::types::RollingDateConfiguration>,
    ) -> Self {
        self.rolling_date = input;
        self
    }
    /// <p>The parameter type input value.</p>
    pub fn parameter(mut self, input: impl Into<std::string::String>) -> Self {
        self.parameter = Some(input.into());
        self
    }
    /// <p>The parameter type input value.</p>
    pub fn set_parameter(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.parameter = input;
        self
    }
    /// Consumes the builder and constructs a [`TimeRangeFilterValue`](crate::types::TimeRangeFilterValue).
    pub fn build(self) -> crate::types::TimeRangeFilterValue {
        crate::types::TimeRangeFilterValue {
            static_value: self.static_value,
            rolling_date: self.rolling_date,
            parameter: self.parameter,
        }
    }
}
