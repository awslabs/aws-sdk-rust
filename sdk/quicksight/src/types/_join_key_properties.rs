// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Properties associated with the columns participating in a join.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct JoinKeyProperties {
    /// <p>A value that indicates that a row in a table is uniquely identified by the columns in a join key. This is used by Quick Sight to optimize query performance.</p>
    pub unique_key: ::std::option::Option<bool>,
}
impl JoinKeyProperties {
    /// <p>A value that indicates that a row in a table is uniquely identified by the columns in a join key. This is used by Quick Sight to optimize query performance.</p>
    pub fn unique_key(&self) -> ::std::option::Option<bool> {
        self.unique_key
    }
}
impl JoinKeyProperties {
    /// Creates a new builder-style object to manufacture [`JoinKeyProperties`](crate::types::JoinKeyProperties).
    pub fn builder() -> crate::types::builders::JoinKeyPropertiesBuilder {
        crate::types::builders::JoinKeyPropertiesBuilder::default()
    }
}

/// A builder for [`JoinKeyProperties`](crate::types::JoinKeyProperties).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct JoinKeyPropertiesBuilder {
    pub(crate) unique_key: ::std::option::Option<bool>,
}
impl JoinKeyPropertiesBuilder {
    /// <p>A value that indicates that a row in a table is uniquely identified by the columns in a join key. This is used by Quick Sight to optimize query performance.</p>
    pub fn unique_key(mut self, input: bool) -> Self {
        self.unique_key = ::std::option::Option::Some(input);
        self
    }
    /// <p>A value that indicates that a row in a table is uniquely identified by the columns in a join key. This is used by Quick Sight to optimize query performance.</p>
    pub fn set_unique_key(mut self, input: ::std::option::Option<bool>) -> Self {
        self.unique_key = input;
        self
    }
    /// <p>A value that indicates that a row in a table is uniquely identified by the columns in a join key. This is used by Quick Sight to optimize query performance.</p>
    pub fn get_unique_key(&self) -> &::std::option::Option<bool> {
        &self.unique_key
    }
    /// Consumes the builder and constructs a [`JoinKeyProperties`](crate::types::JoinKeyProperties).
    pub fn build(self) -> crate::types::JoinKeyProperties {
        crate::types::JoinKeyProperties { unique_key: self.unique_key }
    }
}
