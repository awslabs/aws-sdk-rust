// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The source entity of an analysis.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AnalysisSourceEntity {
    /// <p>The source template for the source entity of the analysis.</p>
    #[doc(hidden)]
    pub source_template: std::option::Option<crate::types::AnalysisSourceTemplate>,
}
impl AnalysisSourceEntity {
    /// <p>The source template for the source entity of the analysis.</p>
    pub fn source_template(&self) -> std::option::Option<&crate::types::AnalysisSourceTemplate> {
        self.source_template.as_ref()
    }
}
impl AnalysisSourceEntity {
    /// Creates a new builder-style object to manufacture [`AnalysisSourceEntity`](crate::types::AnalysisSourceEntity).
    pub fn builder() -> crate::types::builders::AnalysisSourceEntityBuilder {
        crate::types::builders::AnalysisSourceEntityBuilder::default()
    }
}

/// A builder for [`AnalysisSourceEntity`](crate::types::AnalysisSourceEntity).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AnalysisSourceEntityBuilder {
    pub(crate) source_template: std::option::Option<crate::types::AnalysisSourceTemplate>,
}
impl AnalysisSourceEntityBuilder {
    /// <p>The source template for the source entity of the analysis.</p>
    pub fn source_template(mut self, input: crate::types::AnalysisSourceTemplate) -> Self {
        self.source_template = Some(input);
        self
    }
    /// <p>The source template for the source entity of the analysis.</p>
    pub fn set_source_template(
        mut self,
        input: std::option::Option<crate::types::AnalysisSourceTemplate>,
    ) -> Self {
        self.source_template = input;
        self
    }
    /// Consumes the builder and constructs a [`AnalysisSourceEntity`](crate::types::AnalysisSourceEntity).
    pub fn build(self) -> crate::types::AnalysisSourceEntity {
        crate::types::AnalysisSourceEntity {
            source_template: self.source_template,
        }
    }
}
