// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The category drill down filter.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct NumericEqualityDrillDownFilter {
    /// <p>The column that the filter is applied to.</p>
    #[doc(hidden)]
    pub column: std::option::Option<crate::types::ColumnIdentifier>,
    /// <p>The value of the double input numeric drill down filter.</p>
    #[doc(hidden)]
    pub value: f64,
}
impl NumericEqualityDrillDownFilter {
    /// <p>The column that the filter is applied to.</p>
    pub fn column(&self) -> std::option::Option<&crate::types::ColumnIdentifier> {
        self.column.as_ref()
    }
    /// <p>The value of the double input numeric drill down filter.</p>
    pub fn value(&self) -> f64 {
        self.value
    }
}
impl NumericEqualityDrillDownFilter {
    /// Creates a new builder-style object to manufacture [`NumericEqualityDrillDownFilter`](crate::types::NumericEqualityDrillDownFilter).
    pub fn builder() -> crate::types::builders::NumericEqualityDrillDownFilterBuilder {
        crate::types::builders::NumericEqualityDrillDownFilterBuilder::default()
    }
}

/// A builder for [`NumericEqualityDrillDownFilter`](crate::types::NumericEqualityDrillDownFilter).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct NumericEqualityDrillDownFilterBuilder {
    pub(crate) column: std::option::Option<crate::types::ColumnIdentifier>,
    pub(crate) value: std::option::Option<f64>,
}
impl NumericEqualityDrillDownFilterBuilder {
    /// <p>The column that the filter is applied to.</p>
    pub fn column(mut self, input: crate::types::ColumnIdentifier) -> Self {
        self.column = Some(input);
        self
    }
    /// <p>The column that the filter is applied to.</p>
    pub fn set_column(
        mut self,
        input: std::option::Option<crate::types::ColumnIdentifier>,
    ) -> Self {
        self.column = input;
        self
    }
    /// <p>The value of the double input numeric drill down filter.</p>
    pub fn value(mut self, input: f64) -> Self {
        self.value = Some(input);
        self
    }
    /// <p>The value of the double input numeric drill down filter.</p>
    pub fn set_value(mut self, input: std::option::Option<f64>) -> Self {
        self.value = input;
        self
    }
    /// Consumes the builder and constructs a [`NumericEqualityDrillDownFilter`](crate::types::NumericEqualityDrillDownFilter).
    pub fn build(self) -> crate::types::NumericEqualityDrillDownFilter {
        crate::types::NumericEqualityDrillDownFilter {
            column: self.column,
            value: self.value.unwrap_or_default(),
        }
    }
}
