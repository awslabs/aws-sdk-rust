// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The window options of the geospatial map visual.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GeospatialWindowOptions {
    /// <p>The bounds options (north, south, west, east) of the geospatial window options.</p>
    #[doc(hidden)]
    pub bounds: std::option::Option<crate::types::GeospatialCoordinateBounds>,
    /// <p>The map zoom modes (manual, auto) of the geospatial window options.</p>
    #[doc(hidden)]
    pub map_zoom_mode: std::option::Option<crate::types::MapZoomMode>,
}
impl GeospatialWindowOptions {
    /// <p>The bounds options (north, south, west, east) of the geospatial window options.</p>
    pub fn bounds(&self) -> std::option::Option<&crate::types::GeospatialCoordinateBounds> {
        self.bounds.as_ref()
    }
    /// <p>The map zoom modes (manual, auto) of the geospatial window options.</p>
    pub fn map_zoom_mode(&self) -> std::option::Option<&crate::types::MapZoomMode> {
        self.map_zoom_mode.as_ref()
    }
}
impl GeospatialWindowOptions {
    /// Creates a new builder-style object to manufacture [`GeospatialWindowOptions`](crate::types::GeospatialWindowOptions).
    pub fn builder() -> crate::types::builders::GeospatialWindowOptionsBuilder {
        crate::types::builders::GeospatialWindowOptionsBuilder::default()
    }
}

/// A builder for [`GeospatialWindowOptions`](crate::types::GeospatialWindowOptions).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct GeospatialWindowOptionsBuilder {
    pub(crate) bounds: std::option::Option<crate::types::GeospatialCoordinateBounds>,
    pub(crate) map_zoom_mode: std::option::Option<crate::types::MapZoomMode>,
}
impl GeospatialWindowOptionsBuilder {
    /// <p>The bounds options (north, south, west, east) of the geospatial window options.</p>
    pub fn bounds(mut self, input: crate::types::GeospatialCoordinateBounds) -> Self {
        self.bounds = Some(input);
        self
    }
    /// <p>The bounds options (north, south, west, east) of the geospatial window options.</p>
    pub fn set_bounds(
        mut self,
        input: std::option::Option<crate::types::GeospatialCoordinateBounds>,
    ) -> Self {
        self.bounds = input;
        self
    }
    /// <p>The map zoom modes (manual, auto) of the geospatial window options.</p>
    pub fn map_zoom_mode(mut self, input: crate::types::MapZoomMode) -> Self {
        self.map_zoom_mode = Some(input);
        self
    }
    /// <p>The map zoom modes (manual, auto) of the geospatial window options.</p>
    pub fn set_map_zoom_mode(
        mut self,
        input: std::option::Option<crate::types::MapZoomMode>,
    ) -> Self {
        self.map_zoom_mode = input;
        self
    }
    /// Consumes the builder and constructs a [`GeospatialWindowOptions`](crate::types::GeospatialWindowOptions).
    pub fn build(self) -> crate::types::GeospatialWindowOptions {
        crate::types::GeospatialWindowOptions {
            bounds: self.bounds,
            map_zoom_mode: self.map_zoom_mode,
        }
    }
}
