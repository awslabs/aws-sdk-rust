// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The active Identity and Access Management (IAM) policy assignment.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ActiveIamPolicyAssignment {
    /// <p>A name for the IAM policy assignment.</p>
    #[doc(hidden)]
    pub assignment_name: std::option::Option<std::string::String>,
    /// <p>The Amazon Resource Name (ARN) of the resource.</p>
    #[doc(hidden)]
    pub policy_arn: std::option::Option<std::string::String>,
}
impl ActiveIamPolicyAssignment {
    /// <p>A name for the IAM policy assignment.</p>
    pub fn assignment_name(&self) -> std::option::Option<&str> {
        self.assignment_name.as_deref()
    }
    /// <p>The Amazon Resource Name (ARN) of the resource.</p>
    pub fn policy_arn(&self) -> std::option::Option<&str> {
        self.policy_arn.as_deref()
    }
}
impl ActiveIamPolicyAssignment {
    /// Creates a new builder-style object to manufacture [`ActiveIamPolicyAssignment`](crate::types::ActiveIamPolicyAssignment).
    pub fn builder() -> crate::types::builders::ActiveIamPolicyAssignmentBuilder {
        crate::types::builders::ActiveIamPolicyAssignmentBuilder::default()
    }
}

/// A builder for [`ActiveIamPolicyAssignment`](crate::types::ActiveIamPolicyAssignment).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ActiveIamPolicyAssignmentBuilder {
    pub(crate) assignment_name: std::option::Option<std::string::String>,
    pub(crate) policy_arn: std::option::Option<std::string::String>,
}
impl ActiveIamPolicyAssignmentBuilder {
    /// <p>A name for the IAM policy assignment.</p>
    pub fn assignment_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.assignment_name = Some(input.into());
        self
    }
    /// <p>A name for the IAM policy assignment.</p>
    pub fn set_assignment_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.assignment_name = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the resource.</p>
    pub fn policy_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.policy_arn = Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the resource.</p>
    pub fn set_policy_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.policy_arn = input;
        self
    }
    /// Consumes the builder and constructs a [`ActiveIamPolicyAssignment`](crate::types::ActiveIamPolicyAssignment).
    pub fn build(self) -> crate::types::ActiveIamPolicyAssignment {
        crate::types::ActiveIamPolicyAssignment {
            assignment_name: self.assignment_name,
            policy_arn: self.policy_arn,
        }
    }
}
