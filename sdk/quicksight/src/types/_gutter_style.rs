// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The display options for gutter spacing between tiles on a sheet.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GutterStyle {
    /// <p>This Boolean value controls whether to display a gutter space between sheet tiles. </p>
    #[doc(hidden)]
    pub show: std::option::Option<bool>,
}
impl GutterStyle {
    /// <p>This Boolean value controls whether to display a gutter space between sheet tiles. </p>
    pub fn show(&self) -> std::option::Option<bool> {
        self.show
    }
}
impl GutterStyle {
    /// Creates a new builder-style object to manufacture [`GutterStyle`](crate::types::GutterStyle).
    pub fn builder() -> crate::types::builders::GutterStyleBuilder {
        crate::types::builders::GutterStyleBuilder::default()
    }
}

/// A builder for [`GutterStyle`](crate::types::GutterStyle).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct GutterStyleBuilder {
    pub(crate) show: std::option::Option<bool>,
}
impl GutterStyleBuilder {
    /// <p>This Boolean value controls whether to display a gutter space between sheet tiles. </p>
    pub fn show(mut self, input: bool) -> Self {
        self.show = Some(input);
        self
    }
    /// <p>This Boolean value controls whether to display a gutter space between sheet tiles. </p>
    pub fn set_show(mut self, input: std::option::Option<bool>) -> Self {
        self.show = input;
        self
    }
    /// Consumes the builder and constructs a [`GutterStyle`](crate::types::GutterStyle).
    pub fn build(self) -> crate::types::GutterStyle {
        crate::types::GutterStyle { show: self.show }
    }
}
