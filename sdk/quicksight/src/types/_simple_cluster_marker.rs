// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The simple cluster marker of the cluster marker.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct SimpleClusterMarker {
    /// <p>The color of the simple cluster marker.</p>
    #[doc(hidden)]
    pub color: std::option::Option<std::string::String>,
}
impl SimpleClusterMarker {
    /// <p>The color of the simple cluster marker.</p>
    pub fn color(&self) -> std::option::Option<&str> {
        self.color.as_deref()
    }
}
impl SimpleClusterMarker {
    /// Creates a new builder-style object to manufacture [`SimpleClusterMarker`](crate::types::SimpleClusterMarker).
    pub fn builder() -> crate::types::builders::SimpleClusterMarkerBuilder {
        crate::types::builders::SimpleClusterMarkerBuilder::default()
    }
}

/// A builder for [`SimpleClusterMarker`](crate::types::SimpleClusterMarker).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct SimpleClusterMarkerBuilder {
    pub(crate) color: std::option::Option<std::string::String>,
}
impl SimpleClusterMarkerBuilder {
    /// <p>The color of the simple cluster marker.</p>
    pub fn color(mut self, input: impl Into<std::string::String>) -> Self {
        self.color = Some(input.into());
        self
    }
    /// <p>The color of the simple cluster marker.</p>
    pub fn set_color(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.color = input;
        self
    }
    /// Consumes the builder and constructs a [`SimpleClusterMarker`](crate::types::SimpleClusterMarker).
    pub fn build(self) -> crate::types::SimpleClusterMarker {
        crate::types::SimpleClusterMarker { color: self.color }
    }
}
