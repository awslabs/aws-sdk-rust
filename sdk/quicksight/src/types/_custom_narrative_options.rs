// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The custom narrative options.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct CustomNarrativeOptions {
    /// <p>The string input of custom narrative.</p>
    pub narrative: ::std::string::String,
}
impl CustomNarrativeOptions {
    /// <p>The string input of custom narrative.</p>
    pub fn narrative(&self) -> &str {
        use std::ops::Deref;
        self.narrative.deref()
    }
}
impl CustomNarrativeOptions {
    /// Creates a new builder-style object to manufacture [`CustomNarrativeOptions`](crate::types::CustomNarrativeOptions).
    pub fn builder() -> crate::types::builders::CustomNarrativeOptionsBuilder {
        crate::types::builders::CustomNarrativeOptionsBuilder::default()
    }
}

/// A builder for [`CustomNarrativeOptions`](crate::types::CustomNarrativeOptions).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct CustomNarrativeOptionsBuilder {
    pub(crate) narrative: ::std::option::Option<::std::string::String>,
}
impl CustomNarrativeOptionsBuilder {
    /// <p>The string input of custom narrative.</p>
    /// This field is required.
    pub fn narrative(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.narrative = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The string input of custom narrative.</p>
    pub fn set_narrative(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.narrative = input;
        self
    }
    /// <p>The string input of custom narrative.</p>
    pub fn get_narrative(&self) -> &::std::option::Option<::std::string::String> {
        &self.narrative
    }
    /// Consumes the builder and constructs a [`CustomNarrativeOptions`](crate::types::CustomNarrativeOptions).
    /// This method will fail if any of the following fields are not set:
    /// - [`narrative`](crate::types::builders::CustomNarrativeOptionsBuilder::narrative)
    pub fn build(self) -> ::std::result::Result<crate::types::CustomNarrativeOptions, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::CustomNarrativeOptions {
            narrative: self.narrative.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "narrative",
                    "narrative was not specified but it is required when building CustomNarrativeOptions",
                )
            })?,
        })
    }
}
