// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A column of a data set.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ColumnIdentifier {
    /// <p>The data set that the column belongs to.</p>
    #[doc(hidden)]
    pub data_set_identifier: std::option::Option<std::string::String>,
    /// <p>The name of the column.</p>
    #[doc(hidden)]
    pub column_name: std::option::Option<std::string::String>,
}
impl ColumnIdentifier {
    /// <p>The data set that the column belongs to.</p>
    pub fn data_set_identifier(&self) -> std::option::Option<&str> {
        self.data_set_identifier.as_deref()
    }
    /// <p>The name of the column.</p>
    pub fn column_name(&self) -> std::option::Option<&str> {
        self.column_name.as_deref()
    }
}
impl ColumnIdentifier {
    /// Creates a new builder-style object to manufacture [`ColumnIdentifier`](crate::types::ColumnIdentifier).
    pub fn builder() -> crate::types::builders::ColumnIdentifierBuilder {
        crate::types::builders::ColumnIdentifierBuilder::default()
    }
}

/// A builder for [`ColumnIdentifier`](crate::types::ColumnIdentifier).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ColumnIdentifierBuilder {
    pub(crate) data_set_identifier: std::option::Option<std::string::String>,
    pub(crate) column_name: std::option::Option<std::string::String>,
}
impl ColumnIdentifierBuilder {
    /// <p>The data set that the column belongs to.</p>
    pub fn data_set_identifier(mut self, input: impl Into<std::string::String>) -> Self {
        self.data_set_identifier = Some(input.into());
        self
    }
    /// <p>The data set that the column belongs to.</p>
    pub fn set_data_set_identifier(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.data_set_identifier = input;
        self
    }
    /// <p>The name of the column.</p>
    pub fn column_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.column_name = Some(input.into());
        self
    }
    /// <p>The name of the column.</p>
    pub fn set_column_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.column_name = input;
        self
    }
    /// Consumes the builder and constructs a [`ColumnIdentifier`](crate::types::ColumnIdentifier).
    pub fn build(self) -> crate::types::ColumnIdentifier {
        crate::types::ColumnIdentifier {
            data_set_identifier: self.data_set_identifier,
            column_name: self.column_name,
        }
    }
}
