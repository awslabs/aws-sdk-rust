// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about the Q search bar embedding experience.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct RegisteredUserQSearchBarEmbeddingConfiguration {
    /// <p>The ID of the legacy Q topic that you want to use as the starting topic in the Q search bar. To locate the topic ID of the topic that you want to use, open the <a href="https://quicksight.aws.amazon.com/">Quick Sight console</a>, navigate to the <b>Topics</b> pane, and choose thre topic that you want to use. The <code>TopicID</code> is located in the URL of the topic that opens. When you select an initial topic, you can specify whether or not readers are allowed to select other topics from the list of available topics.</p>
    /// <p>If you don't specify an initial topic or if you specify a new reader experience topic, a list of all shared legacy topics is shown in the Q bar.</p>
    pub initial_topic_id: ::std::option::Option<::std::string::String>,
}
impl RegisteredUserQSearchBarEmbeddingConfiguration {
    /// <p>The ID of the legacy Q topic that you want to use as the starting topic in the Q search bar. To locate the topic ID of the topic that you want to use, open the <a href="https://quicksight.aws.amazon.com/">Quick Sight console</a>, navigate to the <b>Topics</b> pane, and choose thre topic that you want to use. The <code>TopicID</code> is located in the URL of the topic that opens. When you select an initial topic, you can specify whether or not readers are allowed to select other topics from the list of available topics.</p>
    /// <p>If you don't specify an initial topic or if you specify a new reader experience topic, a list of all shared legacy topics is shown in the Q bar.</p>
    pub fn initial_topic_id(&self) -> ::std::option::Option<&str> {
        self.initial_topic_id.as_deref()
    }
}
impl RegisteredUserQSearchBarEmbeddingConfiguration {
    /// Creates a new builder-style object to manufacture [`RegisteredUserQSearchBarEmbeddingConfiguration`](crate::types::RegisteredUserQSearchBarEmbeddingConfiguration).
    pub fn builder() -> crate::types::builders::RegisteredUserQSearchBarEmbeddingConfigurationBuilder {
        crate::types::builders::RegisteredUserQSearchBarEmbeddingConfigurationBuilder::default()
    }
}

/// A builder for [`RegisteredUserQSearchBarEmbeddingConfiguration`](crate::types::RegisteredUserQSearchBarEmbeddingConfiguration).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct RegisteredUserQSearchBarEmbeddingConfigurationBuilder {
    pub(crate) initial_topic_id: ::std::option::Option<::std::string::String>,
}
impl RegisteredUserQSearchBarEmbeddingConfigurationBuilder {
    /// <p>The ID of the legacy Q topic that you want to use as the starting topic in the Q search bar. To locate the topic ID of the topic that you want to use, open the <a href="https://quicksight.aws.amazon.com/">Quick Sight console</a>, navigate to the <b>Topics</b> pane, and choose thre topic that you want to use. The <code>TopicID</code> is located in the URL of the topic that opens. When you select an initial topic, you can specify whether or not readers are allowed to select other topics from the list of available topics.</p>
    /// <p>If you don't specify an initial topic or if you specify a new reader experience topic, a list of all shared legacy topics is shown in the Q bar.</p>
    pub fn initial_topic_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.initial_topic_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of the legacy Q topic that you want to use as the starting topic in the Q search bar. To locate the topic ID of the topic that you want to use, open the <a href="https://quicksight.aws.amazon.com/">Quick Sight console</a>, navigate to the <b>Topics</b> pane, and choose thre topic that you want to use. The <code>TopicID</code> is located in the URL of the topic that opens. When you select an initial topic, you can specify whether or not readers are allowed to select other topics from the list of available topics.</p>
    /// <p>If you don't specify an initial topic or if you specify a new reader experience topic, a list of all shared legacy topics is shown in the Q bar.</p>
    pub fn set_initial_topic_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.initial_topic_id = input;
        self
    }
    /// <p>The ID of the legacy Q topic that you want to use as the starting topic in the Q search bar. To locate the topic ID of the topic that you want to use, open the <a href="https://quicksight.aws.amazon.com/">Quick Sight console</a>, navigate to the <b>Topics</b> pane, and choose thre topic that you want to use. The <code>TopicID</code> is located in the URL of the topic that opens. When you select an initial topic, you can specify whether or not readers are allowed to select other topics from the list of available topics.</p>
    /// <p>If you don't specify an initial topic or if you specify a new reader experience topic, a list of all shared legacy topics is shown in the Q bar.</p>
    pub fn get_initial_topic_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.initial_topic_id
    }
    /// Consumes the builder and constructs a [`RegisteredUserQSearchBarEmbeddingConfiguration`](crate::types::RegisteredUserQSearchBarEmbeddingConfiguration).
    pub fn build(self) -> crate::types::RegisteredUserQSearchBarEmbeddingConfiguration {
        crate::types::RegisteredUserQSearchBarEmbeddingConfiguration {
            initial_topic_id: self.initial_topic_id,
        }
    }
}
