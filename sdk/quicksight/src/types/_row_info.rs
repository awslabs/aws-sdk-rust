// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about rows for a data set SPICE ingestion.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct RowInfo {
    /// <p>The number of rows that were ingested.</p>
    #[doc(hidden)]
    pub rows_ingested: std::option::Option<i64>,
    /// <p>The number of rows that were not ingested.</p>
    #[doc(hidden)]
    pub rows_dropped: std::option::Option<i64>,
    /// <p>The total number of rows in the dataset.</p>
    #[doc(hidden)]
    pub total_rows_in_dataset: std::option::Option<i64>,
}
impl RowInfo {
    /// <p>The number of rows that were ingested.</p>
    pub fn rows_ingested(&self) -> std::option::Option<i64> {
        self.rows_ingested
    }
    /// <p>The number of rows that were not ingested.</p>
    pub fn rows_dropped(&self) -> std::option::Option<i64> {
        self.rows_dropped
    }
    /// <p>The total number of rows in the dataset.</p>
    pub fn total_rows_in_dataset(&self) -> std::option::Option<i64> {
        self.total_rows_in_dataset
    }
}
impl RowInfo {
    /// Creates a new builder-style object to manufacture [`RowInfo`](crate::types::RowInfo).
    pub fn builder() -> crate::types::builders::RowInfoBuilder {
        crate::types::builders::RowInfoBuilder::default()
    }
}

/// A builder for [`RowInfo`](crate::types::RowInfo).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct RowInfoBuilder {
    pub(crate) rows_ingested: std::option::Option<i64>,
    pub(crate) rows_dropped: std::option::Option<i64>,
    pub(crate) total_rows_in_dataset: std::option::Option<i64>,
}
impl RowInfoBuilder {
    /// <p>The number of rows that were ingested.</p>
    pub fn rows_ingested(mut self, input: i64) -> Self {
        self.rows_ingested = Some(input);
        self
    }
    /// <p>The number of rows that were ingested.</p>
    pub fn set_rows_ingested(mut self, input: std::option::Option<i64>) -> Self {
        self.rows_ingested = input;
        self
    }
    /// <p>The number of rows that were not ingested.</p>
    pub fn rows_dropped(mut self, input: i64) -> Self {
        self.rows_dropped = Some(input);
        self
    }
    /// <p>The number of rows that were not ingested.</p>
    pub fn set_rows_dropped(mut self, input: std::option::Option<i64>) -> Self {
        self.rows_dropped = input;
        self
    }
    /// <p>The total number of rows in the dataset.</p>
    pub fn total_rows_in_dataset(mut self, input: i64) -> Self {
        self.total_rows_in_dataset = Some(input);
        self
    }
    /// <p>The total number of rows in the dataset.</p>
    pub fn set_total_rows_in_dataset(mut self, input: std::option::Option<i64>) -> Self {
        self.total_rows_in_dataset = input;
        self
    }
    /// Consumes the builder and constructs a [`RowInfo`](crate::types::RowInfo).
    pub fn build(self) -> crate::types::RowInfo {
        crate::types::RowInfo {
            rows_ingested: self.rows_ingested,
            rows_dropped: self.rows_dropped,
            total_rows_in_dataset: self.total_rows_in_dataset,
        }
    }
}
