// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The numeric equality type drill down filter.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct CategoryDrillDownFilter {
    /// <p>The column that the filter is applied to.</p>
    #[doc(hidden)]
    pub column: std::option::Option<crate::types::ColumnIdentifier>,
    /// <p>A list of the string inputs that are the values of the category drill down filter.</p>
    #[doc(hidden)]
    pub category_values: std::option::Option<std::vec::Vec<std::string::String>>,
}
impl CategoryDrillDownFilter {
    /// <p>The column that the filter is applied to.</p>
    pub fn column(&self) -> std::option::Option<&crate::types::ColumnIdentifier> {
        self.column.as_ref()
    }
    /// <p>A list of the string inputs that are the values of the category drill down filter.</p>
    pub fn category_values(&self) -> std::option::Option<&[std::string::String]> {
        self.category_values.as_deref()
    }
}
impl CategoryDrillDownFilter {
    /// Creates a new builder-style object to manufacture [`CategoryDrillDownFilter`](crate::types::CategoryDrillDownFilter).
    pub fn builder() -> crate::types::builders::CategoryDrillDownFilterBuilder {
        crate::types::builders::CategoryDrillDownFilterBuilder::default()
    }
}

/// A builder for [`CategoryDrillDownFilter`](crate::types::CategoryDrillDownFilter).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct CategoryDrillDownFilterBuilder {
    pub(crate) column: std::option::Option<crate::types::ColumnIdentifier>,
    pub(crate) category_values: std::option::Option<std::vec::Vec<std::string::String>>,
}
impl CategoryDrillDownFilterBuilder {
    /// <p>The column that the filter is applied to.</p>
    pub fn column(mut self, input: crate::types::ColumnIdentifier) -> Self {
        self.column = Some(input);
        self
    }
    /// <p>The column that the filter is applied to.</p>
    pub fn set_column(
        mut self,
        input: std::option::Option<crate::types::ColumnIdentifier>,
    ) -> Self {
        self.column = input;
        self
    }
    /// Appends an item to `category_values`.
    ///
    /// To override the contents of this collection use [`set_category_values`](Self::set_category_values).
    ///
    /// <p>A list of the string inputs that are the values of the category drill down filter.</p>
    pub fn category_values(mut self, input: impl Into<std::string::String>) -> Self {
        let mut v = self.category_values.unwrap_or_default();
        v.push(input.into());
        self.category_values = Some(v);
        self
    }
    /// <p>A list of the string inputs that are the values of the category drill down filter.</p>
    pub fn set_category_values(
        mut self,
        input: std::option::Option<std::vec::Vec<std::string::String>>,
    ) -> Self {
        self.category_values = input;
        self
    }
    /// Consumes the builder and constructs a [`CategoryDrillDownFilter`](crate::types::CategoryDrillDownFilter).
    pub fn build(self) -> crate::types::CategoryDrillDownFilter {
        crate::types::CategoryDrillDownFilter {
            column: self.column,
            category_values: self.category_values,
        }
    }
}
