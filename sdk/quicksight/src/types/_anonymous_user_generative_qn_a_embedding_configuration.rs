// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The settings that you want to use for the Generative Q&amp;A experience.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AnonymousUserGenerativeQnAEmbeddingConfiguration {
    /// <p>The Quick Sight Q topic ID of the new reader experience topic that you want the anonymous user to see first. This ID is included in the output URL. When the URL in response is accessed, Quick Sight renders the Generative Q&amp;A experience with this new reader experience topic pre selected.</p>
    /// <p>The Amazon Resource Name (ARN) of this Q new reader experience topic must be included in the <code>AuthorizedResourceArns</code> parameter. Otherwise, the request fails with an <code>InvalidParameterValueException</code> error.</p>
    pub initial_topic_id: ::std::string::String,
}
impl AnonymousUserGenerativeQnAEmbeddingConfiguration {
    /// <p>The Quick Sight Q topic ID of the new reader experience topic that you want the anonymous user to see first. This ID is included in the output URL. When the URL in response is accessed, Quick Sight renders the Generative Q&amp;A experience with this new reader experience topic pre selected.</p>
    /// <p>The Amazon Resource Name (ARN) of this Q new reader experience topic must be included in the <code>AuthorizedResourceArns</code> parameter. Otherwise, the request fails with an <code>InvalidParameterValueException</code> error.</p>
    pub fn initial_topic_id(&self) -> &str {
        use std::ops::Deref;
        self.initial_topic_id.deref()
    }
}
impl AnonymousUserGenerativeQnAEmbeddingConfiguration {
    /// Creates a new builder-style object to manufacture [`AnonymousUserGenerativeQnAEmbeddingConfiguration`](crate::types::AnonymousUserGenerativeQnAEmbeddingConfiguration).
    pub fn builder() -> crate::types::builders::AnonymousUserGenerativeQnAEmbeddingConfigurationBuilder {
        crate::types::builders::AnonymousUserGenerativeQnAEmbeddingConfigurationBuilder::default()
    }
}

/// A builder for [`AnonymousUserGenerativeQnAEmbeddingConfiguration`](crate::types::AnonymousUserGenerativeQnAEmbeddingConfiguration).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct AnonymousUserGenerativeQnAEmbeddingConfigurationBuilder {
    pub(crate) initial_topic_id: ::std::option::Option<::std::string::String>,
}
impl AnonymousUserGenerativeQnAEmbeddingConfigurationBuilder {
    /// <p>The Quick Sight Q topic ID of the new reader experience topic that you want the anonymous user to see first. This ID is included in the output URL. When the URL in response is accessed, Quick Sight renders the Generative Q&amp;A experience with this new reader experience topic pre selected.</p>
    /// <p>The Amazon Resource Name (ARN) of this Q new reader experience topic must be included in the <code>AuthorizedResourceArns</code> parameter. Otherwise, the request fails with an <code>InvalidParameterValueException</code> error.</p>
    /// This field is required.
    pub fn initial_topic_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.initial_topic_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Quick Sight Q topic ID of the new reader experience topic that you want the anonymous user to see first. This ID is included in the output URL. When the URL in response is accessed, Quick Sight renders the Generative Q&amp;A experience with this new reader experience topic pre selected.</p>
    /// <p>The Amazon Resource Name (ARN) of this Q new reader experience topic must be included in the <code>AuthorizedResourceArns</code> parameter. Otherwise, the request fails with an <code>InvalidParameterValueException</code> error.</p>
    pub fn set_initial_topic_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.initial_topic_id = input;
        self
    }
    /// <p>The Quick Sight Q topic ID of the new reader experience topic that you want the anonymous user to see first. This ID is included in the output URL. When the URL in response is accessed, Quick Sight renders the Generative Q&amp;A experience with this new reader experience topic pre selected.</p>
    /// <p>The Amazon Resource Name (ARN) of this Q new reader experience topic must be included in the <code>AuthorizedResourceArns</code> parameter. Otherwise, the request fails with an <code>InvalidParameterValueException</code> error.</p>
    pub fn get_initial_topic_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.initial_topic_id
    }
    /// Consumes the builder and constructs a [`AnonymousUserGenerativeQnAEmbeddingConfiguration`](crate::types::AnonymousUserGenerativeQnAEmbeddingConfiguration).
    /// This method will fail if any of the following fields are not set:
    /// - [`initial_topic_id`](crate::types::builders::AnonymousUserGenerativeQnAEmbeddingConfigurationBuilder::initial_topic_id)
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::types::AnonymousUserGenerativeQnAEmbeddingConfiguration, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::AnonymousUserGenerativeQnAEmbeddingConfiguration {
            initial_topic_id: self.initial_topic_id.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "initial_topic_id",
                    "initial_topic_id was not specified but it is required when building AnonymousUserGenerativeQnAEmbeddingConfiguration",
                )
            })?,
        })
    }
}
