// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about a queued dataset SPICE ingestion.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct QueueInfo {
    /// <p>The ID of the queued ingestion.</p>
    pub waiting_on_ingestion: ::std::string::String,
    /// <p>The ID of the ongoing ingestion. The queued ingestion is waiting for the ongoing ingestion to complete.</p>
    pub queued_ingestion: ::std::string::String,
}
impl QueueInfo {
    /// <p>The ID of the queued ingestion.</p>
    pub fn waiting_on_ingestion(&self) -> &str {
        use std::ops::Deref;
        self.waiting_on_ingestion.deref()
    }
    /// <p>The ID of the ongoing ingestion. The queued ingestion is waiting for the ongoing ingestion to complete.</p>
    pub fn queued_ingestion(&self) -> &str {
        use std::ops::Deref;
        self.queued_ingestion.deref()
    }
}
impl QueueInfo {
    /// Creates a new builder-style object to manufacture [`QueueInfo`](crate::types::QueueInfo).
    pub fn builder() -> crate::types::builders::QueueInfoBuilder {
        crate::types::builders::QueueInfoBuilder::default()
    }
}

/// A builder for [`QueueInfo`](crate::types::QueueInfo).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct QueueInfoBuilder {
    pub(crate) waiting_on_ingestion: ::std::option::Option<::std::string::String>,
    pub(crate) queued_ingestion: ::std::option::Option<::std::string::String>,
}
impl QueueInfoBuilder {
    /// <p>The ID of the queued ingestion.</p>
    /// This field is required.
    pub fn waiting_on_ingestion(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.waiting_on_ingestion = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of the queued ingestion.</p>
    pub fn set_waiting_on_ingestion(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.waiting_on_ingestion = input;
        self
    }
    /// <p>The ID of the queued ingestion.</p>
    pub fn get_waiting_on_ingestion(&self) -> &::std::option::Option<::std::string::String> {
        &self.waiting_on_ingestion
    }
    /// <p>The ID of the ongoing ingestion. The queued ingestion is waiting for the ongoing ingestion to complete.</p>
    /// This field is required.
    pub fn queued_ingestion(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.queued_ingestion = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of the ongoing ingestion. The queued ingestion is waiting for the ongoing ingestion to complete.</p>
    pub fn set_queued_ingestion(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.queued_ingestion = input;
        self
    }
    /// <p>The ID of the ongoing ingestion. The queued ingestion is waiting for the ongoing ingestion to complete.</p>
    pub fn get_queued_ingestion(&self) -> &::std::option::Option<::std::string::String> {
        &self.queued_ingestion
    }
    /// Consumes the builder and constructs a [`QueueInfo`](crate::types::QueueInfo).
    /// This method will fail if any of the following fields are not set:
    /// - [`waiting_on_ingestion`](crate::types::builders::QueueInfoBuilder::waiting_on_ingestion)
    /// - [`queued_ingestion`](crate::types::builders::QueueInfoBuilder::queued_ingestion)
    pub fn build(self) -> ::std::result::Result<crate::types::QueueInfo, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::QueueInfo {
            waiting_on_ingestion: self.waiting_on_ingestion.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "waiting_on_ingestion",
                    "waiting_on_ingestion was not specified but it is required when building QueueInfo",
                )
            })?,
            queued_ingestion: self.queued_ingestion.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "queued_ingestion",
                    "queued_ingestion was not specified but it is required when building QueueInfo",
                )
            })?,
        })
    }
}
