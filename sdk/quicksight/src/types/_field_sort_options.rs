// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The field sort options in a chart configuration.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct FieldSortOptions {
    /// <p>The sort configuration for a field in a field well.</p>
    #[doc(hidden)]
    pub field_sort: std::option::Option<crate::types::FieldSort>,
    /// <p>The sort configuration for a column that is not used in a field well.</p>
    #[doc(hidden)]
    pub column_sort: std::option::Option<crate::types::ColumnSort>,
}
impl FieldSortOptions {
    /// <p>The sort configuration for a field in a field well.</p>
    pub fn field_sort(&self) -> std::option::Option<&crate::types::FieldSort> {
        self.field_sort.as_ref()
    }
    /// <p>The sort configuration for a column that is not used in a field well.</p>
    pub fn column_sort(&self) -> std::option::Option<&crate::types::ColumnSort> {
        self.column_sort.as_ref()
    }
}
impl FieldSortOptions {
    /// Creates a new builder-style object to manufacture [`FieldSortOptions`](crate::types::FieldSortOptions).
    pub fn builder() -> crate::types::builders::FieldSortOptionsBuilder {
        crate::types::builders::FieldSortOptionsBuilder::default()
    }
}

/// A builder for [`FieldSortOptions`](crate::types::FieldSortOptions).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct FieldSortOptionsBuilder {
    pub(crate) field_sort: std::option::Option<crate::types::FieldSort>,
    pub(crate) column_sort: std::option::Option<crate::types::ColumnSort>,
}
impl FieldSortOptionsBuilder {
    /// <p>The sort configuration for a field in a field well.</p>
    pub fn field_sort(mut self, input: crate::types::FieldSort) -> Self {
        self.field_sort = Some(input);
        self
    }
    /// <p>The sort configuration for a field in a field well.</p>
    pub fn set_field_sort(mut self, input: std::option::Option<crate::types::FieldSort>) -> Self {
        self.field_sort = input;
        self
    }
    /// <p>The sort configuration for a column that is not used in a field well.</p>
    pub fn column_sort(mut self, input: crate::types::ColumnSort) -> Self {
        self.column_sort = Some(input);
        self
    }
    /// <p>The sort configuration for a column that is not used in a field well.</p>
    pub fn set_column_sort(mut self, input: std::option::Option<crate::types::ColumnSort>) -> Self {
        self.column_sort = input;
        self
    }
    /// Consumes the builder and constructs a [`FieldSortOptions`](crate::types::FieldSortOptions).
    pub fn build(self) -> crate::types::FieldSortOptions {
        crate::types::FieldSortOptions {
            field_sort: self.field_sort,
            column_sort: self.column_sort,
        }
    }
}
