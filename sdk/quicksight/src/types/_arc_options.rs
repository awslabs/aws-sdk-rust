// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The options that determine the arc thickness of a <code>GaugeChartVisual</code>.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ArcOptions {
    /// <p>The arc thickness of a <code>GaugeChartVisual</code>.</p>
    #[doc(hidden)]
    pub arc_thickness: std::option::Option<crate::types::ArcThickness>,
}
impl ArcOptions {
    /// <p>The arc thickness of a <code>GaugeChartVisual</code>.</p>
    pub fn arc_thickness(&self) -> std::option::Option<&crate::types::ArcThickness> {
        self.arc_thickness.as_ref()
    }
}
impl ArcOptions {
    /// Creates a new builder-style object to manufacture [`ArcOptions`](crate::types::ArcOptions).
    pub fn builder() -> crate::types::builders::ArcOptionsBuilder {
        crate::types::builders::ArcOptionsBuilder::default()
    }
}

/// A builder for [`ArcOptions`](crate::types::ArcOptions).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ArcOptionsBuilder {
    pub(crate) arc_thickness: std::option::Option<crate::types::ArcThickness>,
}
impl ArcOptionsBuilder {
    /// <p>The arc thickness of a <code>GaugeChartVisual</code>.</p>
    pub fn arc_thickness(mut self, input: crate::types::ArcThickness) -> Self {
        self.arc_thickness = Some(input);
        self
    }
    /// <p>The arc thickness of a <code>GaugeChartVisual</code>.</p>
    pub fn set_arc_thickness(
        mut self,
        input: std::option::Option<crate::types::ArcThickness>,
    ) -> Self {
        self.arc_thickness = input;
        self
    }
    /// Consumes the builder and constructs a [`ArcOptions`](crate::types::ArcOptions).
    pub fn build(self) -> crate::types::ArcOptions {
        crate::types::ArcOptions {
            arc_thickness: self.arc_thickness,
        }
    }
}
