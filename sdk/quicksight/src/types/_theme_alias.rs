// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>An alias for a theme.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ThemeAlias {
    /// <p>The Amazon Resource Name (ARN) of the theme alias.</p>
    #[doc(hidden)]
    pub arn: std::option::Option<std::string::String>,
    /// <p>The display name of the theme alias.</p>
    #[doc(hidden)]
    pub alias_name: std::option::Option<std::string::String>,
    /// <p>The version number of the theme alias.</p>
    #[doc(hidden)]
    pub theme_version_number: std::option::Option<i64>,
}
impl ThemeAlias {
    /// <p>The Amazon Resource Name (ARN) of the theme alias.</p>
    pub fn arn(&self) -> std::option::Option<&str> {
        self.arn.as_deref()
    }
    /// <p>The display name of the theme alias.</p>
    pub fn alias_name(&self) -> std::option::Option<&str> {
        self.alias_name.as_deref()
    }
    /// <p>The version number of the theme alias.</p>
    pub fn theme_version_number(&self) -> std::option::Option<i64> {
        self.theme_version_number
    }
}
impl ThemeAlias {
    /// Creates a new builder-style object to manufacture [`ThemeAlias`](crate::types::ThemeAlias).
    pub fn builder() -> crate::types::builders::ThemeAliasBuilder {
        crate::types::builders::ThemeAliasBuilder::default()
    }
}

/// A builder for [`ThemeAlias`](crate::types::ThemeAlias).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ThemeAliasBuilder {
    pub(crate) arn: std::option::Option<std::string::String>,
    pub(crate) alias_name: std::option::Option<std::string::String>,
    pub(crate) theme_version_number: std::option::Option<i64>,
}
impl ThemeAliasBuilder {
    /// <p>The Amazon Resource Name (ARN) of the theme alias.</p>
    pub fn arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.arn = Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the theme alias.</p>
    pub fn set_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.arn = input;
        self
    }
    /// <p>The display name of the theme alias.</p>
    pub fn alias_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.alias_name = Some(input.into());
        self
    }
    /// <p>The display name of the theme alias.</p>
    pub fn set_alias_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.alias_name = input;
        self
    }
    /// <p>The version number of the theme alias.</p>
    pub fn theme_version_number(mut self, input: i64) -> Self {
        self.theme_version_number = Some(input);
        self
    }
    /// <p>The version number of the theme alias.</p>
    pub fn set_theme_version_number(mut self, input: std::option::Option<i64>) -> Self {
        self.theme_version_number = input;
        self
    }
    /// Consumes the builder and constructs a [`ThemeAlias`](crate::types::ThemeAlias).
    pub fn build(self) -> crate::types::ThemeAlias {
        crate::types::ThemeAlias {
            arn: self.arn,
            alias_name: self.alias_name,
            theme_version_number: self.theme_version_number,
        }
    }
}
