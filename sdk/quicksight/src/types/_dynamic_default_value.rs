// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Defines different defaults to the users or groups based on mapping.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DynamicDefaultValue {
    /// <p>The column that contains the username.</p>
    pub user_name_column: ::std::option::Option<crate::types::ColumnIdentifier>,
    /// <p>The column that contains the group name.</p>
    pub group_name_column: ::std::option::Option<crate::types::ColumnIdentifier>,
    /// <p>The column that contains the default value of each user or group.</p>
    pub default_value_column: ::std::option::Option<crate::types::ColumnIdentifier>,
}
impl DynamicDefaultValue {
    /// <p>The column that contains the username.</p>
    pub fn user_name_column(&self) -> ::std::option::Option<&crate::types::ColumnIdentifier> {
        self.user_name_column.as_ref()
    }
    /// <p>The column that contains the group name.</p>
    pub fn group_name_column(&self) -> ::std::option::Option<&crate::types::ColumnIdentifier> {
        self.group_name_column.as_ref()
    }
    /// <p>The column that contains the default value of each user or group.</p>
    pub fn default_value_column(&self) -> ::std::option::Option<&crate::types::ColumnIdentifier> {
        self.default_value_column.as_ref()
    }
}
impl DynamicDefaultValue {
    /// Creates a new builder-style object to manufacture [`DynamicDefaultValue`](crate::types::DynamicDefaultValue).
    pub fn builder() -> crate::types::builders::DynamicDefaultValueBuilder {
        crate::types::builders::DynamicDefaultValueBuilder::default()
    }
}

/// A builder for [`DynamicDefaultValue`](crate::types::DynamicDefaultValue).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DynamicDefaultValueBuilder {
    pub(crate) user_name_column: ::std::option::Option<crate::types::ColumnIdentifier>,
    pub(crate) group_name_column: ::std::option::Option<crate::types::ColumnIdentifier>,
    pub(crate) default_value_column: ::std::option::Option<crate::types::ColumnIdentifier>,
}
impl DynamicDefaultValueBuilder {
    /// <p>The column that contains the username.</p>
    pub fn user_name_column(mut self, input: crate::types::ColumnIdentifier) -> Self {
        self.user_name_column = ::std::option::Option::Some(input);
        self
    }
    /// <p>The column that contains the username.</p>
    pub fn set_user_name_column(mut self, input: ::std::option::Option<crate::types::ColumnIdentifier>) -> Self {
        self.user_name_column = input;
        self
    }
    /// <p>The column that contains the username.</p>
    pub fn get_user_name_column(&self) -> &::std::option::Option<crate::types::ColumnIdentifier> {
        &self.user_name_column
    }
    /// <p>The column that contains the group name.</p>
    pub fn group_name_column(mut self, input: crate::types::ColumnIdentifier) -> Self {
        self.group_name_column = ::std::option::Option::Some(input);
        self
    }
    /// <p>The column that contains the group name.</p>
    pub fn set_group_name_column(mut self, input: ::std::option::Option<crate::types::ColumnIdentifier>) -> Self {
        self.group_name_column = input;
        self
    }
    /// <p>The column that contains the group name.</p>
    pub fn get_group_name_column(&self) -> &::std::option::Option<crate::types::ColumnIdentifier> {
        &self.group_name_column
    }
    /// <p>The column that contains the default value of each user or group.</p>
    /// This field is required.
    pub fn default_value_column(mut self, input: crate::types::ColumnIdentifier) -> Self {
        self.default_value_column = ::std::option::Option::Some(input);
        self
    }
    /// <p>The column that contains the default value of each user or group.</p>
    pub fn set_default_value_column(mut self, input: ::std::option::Option<crate::types::ColumnIdentifier>) -> Self {
        self.default_value_column = input;
        self
    }
    /// <p>The column that contains the default value of each user or group.</p>
    pub fn get_default_value_column(&self) -> &::std::option::Option<crate::types::ColumnIdentifier> {
        &self.default_value_column
    }
    /// Consumes the builder and constructs a [`DynamicDefaultValue`](crate::types::DynamicDefaultValue).
    pub fn build(self) -> crate::types::DynamicDefaultValue {
        crate::types::DynamicDefaultValue {
            user_name_column: self.user_name_column,
            group_name_column: self.group_name_column,
            default_value_column: self.default_value_column,
        }
    }
}
