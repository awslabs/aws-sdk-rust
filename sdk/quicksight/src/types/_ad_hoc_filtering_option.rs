// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>An ad hoc (one-time) filtering option.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AdHocFilteringOption {
    /// <p>Availability status.</p>
    #[doc(hidden)]
    pub availability_status: std::option::Option<crate::types::DashboardBehavior>,
}
impl AdHocFilteringOption {
    /// <p>Availability status.</p>
    pub fn availability_status(&self) -> std::option::Option<&crate::types::DashboardBehavior> {
        self.availability_status.as_ref()
    }
}
impl AdHocFilteringOption {
    /// Creates a new builder-style object to manufacture [`AdHocFilteringOption`](crate::types::AdHocFilteringOption).
    pub fn builder() -> crate::types::builders::AdHocFilteringOptionBuilder {
        crate::types::builders::AdHocFilteringOptionBuilder::default()
    }
}

/// A builder for [`AdHocFilteringOption`](crate::types::AdHocFilteringOption).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AdHocFilteringOptionBuilder {
    pub(crate) availability_status: std::option::Option<crate::types::DashboardBehavior>,
}
impl AdHocFilteringOptionBuilder {
    /// <p>Availability status.</p>
    pub fn availability_status(mut self, input: crate::types::DashboardBehavior) -> Self {
        self.availability_status = Some(input);
        self
    }
    /// <p>Availability status.</p>
    pub fn set_availability_status(
        mut self,
        input: std::option::Option<crate::types::DashboardBehavior>,
    ) -> Self {
        self.availability_status = input;
        self
    }
    /// Consumes the builder and constructs a [`AdHocFilteringOption`](crate::types::AdHocFilteringOption).
    pub fn build(self) -> crate::types::AdHocFilteringOption {
        crate::types::AdHocFilteringOption {
            availability_status: self.availability_status,
        }
    }
}
