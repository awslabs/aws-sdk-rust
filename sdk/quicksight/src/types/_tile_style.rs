// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Display options related to tiles on a sheet.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct TileStyle {
    /// <p>The border around a tile.</p>
    #[doc(hidden)]
    pub border: std::option::Option<crate::types::BorderStyle>,
}
impl TileStyle {
    /// <p>The border around a tile.</p>
    pub fn border(&self) -> std::option::Option<&crate::types::BorderStyle> {
        self.border.as_ref()
    }
}
impl TileStyle {
    /// Creates a new builder-style object to manufacture [`TileStyle`](crate::types::TileStyle).
    pub fn builder() -> crate::types::builders::TileStyleBuilder {
        crate::types::builders::TileStyleBuilder::default()
    }
}

/// A builder for [`TileStyle`](crate::types::TileStyle).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct TileStyleBuilder {
    pub(crate) border: std::option::Option<crate::types::BorderStyle>,
}
impl TileStyleBuilder {
    /// <p>The border around a tile.</p>
    pub fn border(mut self, input: crate::types::BorderStyle) -> Self {
        self.border = Some(input);
        self
    }
    /// <p>The border around a tile.</p>
    pub fn set_border(mut self, input: std::option::Option<crate::types::BorderStyle>) -> Self {
        self.border = input;
        self
    }
    /// Consumes the builder and constructs a [`TileStyle`](crate::types::TileStyle).
    pub fn build(self) -> crate::types::TileStyle {
        crate::types::TileStyle {
            border: self.border,
        }
    }
}
