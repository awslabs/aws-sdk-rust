// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The display options for tile borders for visuals.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct BorderStyle {
    /// <p>The option to enable display of borders for visuals.</p>
    #[doc(hidden)]
    pub show: std::option::Option<bool>,
}
impl BorderStyle {
    /// <p>The option to enable display of borders for visuals.</p>
    pub fn show(&self) -> std::option::Option<bool> {
        self.show
    }
}
impl BorderStyle {
    /// Creates a new builder-style object to manufacture [`BorderStyle`](crate::types::BorderStyle).
    pub fn builder() -> crate::types::builders::BorderStyleBuilder {
        crate::types::builders::BorderStyleBuilder::default()
    }
}

/// A builder for [`BorderStyle`](crate::types::BorderStyle).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct BorderStyleBuilder {
    pub(crate) show: std::option::Option<bool>,
}
impl BorderStyleBuilder {
    /// <p>The option to enable display of borders for visuals.</p>
    pub fn show(mut self, input: bool) -> Self {
        self.show = Some(input);
        self
    }
    /// <p>The option to enable display of borders for visuals.</p>
    pub fn set_show(mut self, input: std::option::Option<bool>) -> Self {
        self.show = input;
        self
    }
    /// Consumes the builder and constructs a [`BorderStyle`](crate::types::BorderStyle).
    pub fn build(self) -> crate::types::BorderStyle {
        crate::types::BorderStyle { show: self.show }
    }
}
