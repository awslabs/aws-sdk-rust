// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The type of experience you want to embed. For registered users, you can embed Amazon QuickSight dashboards or the Amazon QuickSight console.</p> <note>
/// <p>Exactly one of the experience configurations is required. You can choose <code>Dashboard</code> or <code>QuickSightConsole</code>. You cannot choose more than one experience configuration.</p>
/// </note>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct RegisteredUserEmbeddingExperienceConfiguration {
    /// <p>The configuration details for providing a dashboard embedding experience.</p>
    #[doc(hidden)]
    pub dashboard: std::option::Option<crate::types::RegisteredUserDashboardEmbeddingConfiguration>,
    /// <p>The configuration details for providing each Amazon QuickSight console embedding experience. This can be used along with custom permissions to restrict access to certain features. For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/customizing-permissions-to-the-quicksight-console.html">Customizing Access to the Amazon QuickSight Console</a> in the <i>Amazon QuickSight User Guide</i>.</p>
    /// <p>Use <code> <a href="https://docs.aws.amazon.com/quicksight/latest/APIReference/API_GenerateEmbedUrlForRegisteredUser.html">GenerateEmbedUrlForRegisteredUser</a> </code> where you want to provide an authoring portal that allows users to create data sources, datasets, analyses, and dashboards. The users who accesses an embedded Amazon QuickSight console needs to belong to the author or admin security cohort. If you want to restrict permissions to some of these features, add a custom permissions profile to the user with the <code> <a href="https://docs.aws.amazon.com/quicksight/latest/APIReference/API_UpdateUser.html">UpdateUser</a> </code> API operation. Use the <code> <a href="https://docs.aws.amazon.com/quicksight/latest/APIReference/API_RegisterUser.html">RegisterUser</a> </code> API operation to add a new user with a custom permission profile attached. For more information, see the following sections in the <i>Amazon QuickSight User Guide</i>:</p>
    /// <ul>
    /// <li> <p> <a href="https://docs.aws.amazon.com/quicksight/latest/user/embedded-analytics-full-console-for-authenticated-users.html">Embedding the Full Functionality of the Amazon QuickSight Console for Authenticated Users</a> </p> </li>
    /// <li> <p> <a href="https://docs.aws.amazon.com/quicksight/latest/user/customizing-permissions-to-the-quicksight-console.html">Customizing Access to the Amazon QuickSight Console</a> </p> </li>
    /// </ul>
    /// <p>For more information about the high-level steps for embedding and for an interactive demo of the ways you can customize embedding, visit the <a href="https://docs.aws.amazon.com/quicksight/latest/user/quicksight-dev-portal.html">Amazon QuickSight Developer Portal</a>.</p>
    #[doc(hidden)]
    pub quick_sight_console:
        std::option::Option<crate::types::RegisteredUserQuickSightConsoleEmbeddingConfiguration>,
    /// <p>The configuration details for embedding the Q search bar.</p>
    /// <p>For more information about embedding the Q search bar, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/embedding-overview.html">Embedding Overview</a> in the <i>Amazon QuickSight User Guide</i>.</p>
    #[doc(hidden)]
    pub q_search_bar:
        std::option::Option<crate::types::RegisteredUserQSearchBarEmbeddingConfiguration>,
    /// <p>The type of embedding experience. In this case, Amazon QuickSight visuals.</p>
    #[doc(hidden)]
    pub dashboard_visual:
        std::option::Option<crate::types::RegisteredUserDashboardVisualEmbeddingConfiguration>,
}
impl RegisteredUserEmbeddingExperienceConfiguration {
    /// <p>The configuration details for providing a dashboard embedding experience.</p>
    pub fn dashboard(
        &self,
    ) -> std::option::Option<&crate::types::RegisteredUserDashboardEmbeddingConfiguration> {
        self.dashboard.as_ref()
    }
    /// <p>The configuration details for providing each Amazon QuickSight console embedding experience. This can be used along with custom permissions to restrict access to certain features. For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/customizing-permissions-to-the-quicksight-console.html">Customizing Access to the Amazon QuickSight Console</a> in the <i>Amazon QuickSight User Guide</i>.</p>
    /// <p>Use <code> <a href="https://docs.aws.amazon.com/quicksight/latest/APIReference/API_GenerateEmbedUrlForRegisteredUser.html">GenerateEmbedUrlForRegisteredUser</a> </code> where you want to provide an authoring portal that allows users to create data sources, datasets, analyses, and dashboards. The users who accesses an embedded Amazon QuickSight console needs to belong to the author or admin security cohort. If you want to restrict permissions to some of these features, add a custom permissions profile to the user with the <code> <a href="https://docs.aws.amazon.com/quicksight/latest/APIReference/API_UpdateUser.html">UpdateUser</a> </code> API operation. Use the <code> <a href="https://docs.aws.amazon.com/quicksight/latest/APIReference/API_RegisterUser.html">RegisterUser</a> </code> API operation to add a new user with a custom permission profile attached. For more information, see the following sections in the <i>Amazon QuickSight User Guide</i>:</p>
    /// <ul>
    /// <li> <p> <a href="https://docs.aws.amazon.com/quicksight/latest/user/embedded-analytics-full-console-for-authenticated-users.html">Embedding the Full Functionality of the Amazon QuickSight Console for Authenticated Users</a> </p> </li>
    /// <li> <p> <a href="https://docs.aws.amazon.com/quicksight/latest/user/customizing-permissions-to-the-quicksight-console.html">Customizing Access to the Amazon QuickSight Console</a> </p> </li>
    /// </ul>
    /// <p>For more information about the high-level steps for embedding and for an interactive demo of the ways you can customize embedding, visit the <a href="https://docs.aws.amazon.com/quicksight/latest/user/quicksight-dev-portal.html">Amazon QuickSight Developer Portal</a>.</p>
    pub fn quick_sight_console(
        &self,
    ) -> std::option::Option<&crate::types::RegisteredUserQuickSightConsoleEmbeddingConfiguration>
    {
        self.quick_sight_console.as_ref()
    }
    /// <p>The configuration details for embedding the Q search bar.</p>
    /// <p>For more information about embedding the Q search bar, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/embedding-overview.html">Embedding Overview</a> in the <i>Amazon QuickSight User Guide</i>.</p>
    pub fn q_search_bar(
        &self,
    ) -> std::option::Option<&crate::types::RegisteredUserQSearchBarEmbeddingConfiguration> {
        self.q_search_bar.as_ref()
    }
    /// <p>The type of embedding experience. In this case, Amazon QuickSight visuals.</p>
    pub fn dashboard_visual(
        &self,
    ) -> std::option::Option<&crate::types::RegisteredUserDashboardVisualEmbeddingConfiguration>
    {
        self.dashboard_visual.as_ref()
    }
}
impl RegisteredUserEmbeddingExperienceConfiguration {
    /// Creates a new builder-style object to manufacture [`RegisteredUserEmbeddingExperienceConfiguration`](crate::types::RegisteredUserEmbeddingExperienceConfiguration).
    pub fn builder() -> crate::types::builders::RegisteredUserEmbeddingExperienceConfigurationBuilder
    {
        crate::types::builders::RegisteredUserEmbeddingExperienceConfigurationBuilder::default()
    }
}

/// A builder for [`RegisteredUserEmbeddingExperienceConfiguration`](crate::types::RegisteredUserEmbeddingExperienceConfiguration).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct RegisteredUserEmbeddingExperienceConfigurationBuilder {
    pub(crate) dashboard:
        std::option::Option<crate::types::RegisteredUserDashboardEmbeddingConfiguration>,
    pub(crate) quick_sight_console:
        std::option::Option<crate::types::RegisteredUserQuickSightConsoleEmbeddingConfiguration>,
    pub(crate) q_search_bar:
        std::option::Option<crate::types::RegisteredUserQSearchBarEmbeddingConfiguration>,
    pub(crate) dashboard_visual:
        std::option::Option<crate::types::RegisteredUserDashboardVisualEmbeddingConfiguration>,
}
impl RegisteredUserEmbeddingExperienceConfigurationBuilder {
    /// <p>The configuration details for providing a dashboard embedding experience.</p>
    pub fn dashboard(
        mut self,
        input: crate::types::RegisteredUserDashboardEmbeddingConfiguration,
    ) -> Self {
        self.dashboard = Some(input);
        self
    }
    /// <p>The configuration details for providing a dashboard embedding experience.</p>
    pub fn set_dashboard(
        mut self,
        input: std::option::Option<crate::types::RegisteredUserDashboardEmbeddingConfiguration>,
    ) -> Self {
        self.dashboard = input;
        self
    }
    /// <p>The configuration details for providing each Amazon QuickSight console embedding experience. This can be used along with custom permissions to restrict access to certain features. For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/customizing-permissions-to-the-quicksight-console.html">Customizing Access to the Amazon QuickSight Console</a> in the <i>Amazon QuickSight User Guide</i>.</p>
    /// <p>Use <code> <a href="https://docs.aws.amazon.com/quicksight/latest/APIReference/API_GenerateEmbedUrlForRegisteredUser.html">GenerateEmbedUrlForRegisteredUser</a> </code> where you want to provide an authoring portal that allows users to create data sources, datasets, analyses, and dashboards. The users who accesses an embedded Amazon QuickSight console needs to belong to the author or admin security cohort. If you want to restrict permissions to some of these features, add a custom permissions profile to the user with the <code> <a href="https://docs.aws.amazon.com/quicksight/latest/APIReference/API_UpdateUser.html">UpdateUser</a> </code> API operation. Use the <code> <a href="https://docs.aws.amazon.com/quicksight/latest/APIReference/API_RegisterUser.html">RegisterUser</a> </code> API operation to add a new user with a custom permission profile attached. For more information, see the following sections in the <i>Amazon QuickSight User Guide</i>:</p>
    /// <ul>
    /// <li> <p> <a href="https://docs.aws.amazon.com/quicksight/latest/user/embedded-analytics-full-console-for-authenticated-users.html">Embedding the Full Functionality of the Amazon QuickSight Console for Authenticated Users</a> </p> </li>
    /// <li> <p> <a href="https://docs.aws.amazon.com/quicksight/latest/user/customizing-permissions-to-the-quicksight-console.html">Customizing Access to the Amazon QuickSight Console</a> </p> </li>
    /// </ul>
    /// <p>For more information about the high-level steps for embedding and for an interactive demo of the ways you can customize embedding, visit the <a href="https://docs.aws.amazon.com/quicksight/latest/user/quicksight-dev-portal.html">Amazon QuickSight Developer Portal</a>.</p>
    pub fn quick_sight_console(
        mut self,
        input: crate::types::RegisteredUserQuickSightConsoleEmbeddingConfiguration,
    ) -> Self {
        self.quick_sight_console = Some(input);
        self
    }
    /// <p>The configuration details for providing each Amazon QuickSight console embedding experience. This can be used along with custom permissions to restrict access to certain features. For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/customizing-permissions-to-the-quicksight-console.html">Customizing Access to the Amazon QuickSight Console</a> in the <i>Amazon QuickSight User Guide</i>.</p>
    /// <p>Use <code> <a href="https://docs.aws.amazon.com/quicksight/latest/APIReference/API_GenerateEmbedUrlForRegisteredUser.html">GenerateEmbedUrlForRegisteredUser</a> </code> where you want to provide an authoring portal that allows users to create data sources, datasets, analyses, and dashboards. The users who accesses an embedded Amazon QuickSight console needs to belong to the author or admin security cohort. If you want to restrict permissions to some of these features, add a custom permissions profile to the user with the <code> <a href="https://docs.aws.amazon.com/quicksight/latest/APIReference/API_UpdateUser.html">UpdateUser</a> </code> API operation. Use the <code> <a href="https://docs.aws.amazon.com/quicksight/latest/APIReference/API_RegisterUser.html">RegisterUser</a> </code> API operation to add a new user with a custom permission profile attached. For more information, see the following sections in the <i>Amazon QuickSight User Guide</i>:</p>
    /// <ul>
    /// <li> <p> <a href="https://docs.aws.amazon.com/quicksight/latest/user/embedded-analytics-full-console-for-authenticated-users.html">Embedding the Full Functionality of the Amazon QuickSight Console for Authenticated Users</a> </p> </li>
    /// <li> <p> <a href="https://docs.aws.amazon.com/quicksight/latest/user/customizing-permissions-to-the-quicksight-console.html">Customizing Access to the Amazon QuickSight Console</a> </p> </li>
    /// </ul>
    /// <p>For more information about the high-level steps for embedding and for an interactive demo of the ways you can customize embedding, visit the <a href="https://docs.aws.amazon.com/quicksight/latest/user/quicksight-dev-portal.html">Amazon QuickSight Developer Portal</a>.</p>
    pub fn set_quick_sight_console(
        mut self,
        input: std::option::Option<
            crate::types::RegisteredUserQuickSightConsoleEmbeddingConfiguration,
        >,
    ) -> Self {
        self.quick_sight_console = input;
        self
    }
    /// <p>The configuration details for embedding the Q search bar.</p>
    /// <p>For more information about embedding the Q search bar, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/embedding-overview.html">Embedding Overview</a> in the <i>Amazon QuickSight User Guide</i>.</p>
    pub fn q_search_bar(
        mut self,
        input: crate::types::RegisteredUserQSearchBarEmbeddingConfiguration,
    ) -> Self {
        self.q_search_bar = Some(input);
        self
    }
    /// <p>The configuration details for embedding the Q search bar.</p>
    /// <p>For more information about embedding the Q search bar, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/embedding-overview.html">Embedding Overview</a> in the <i>Amazon QuickSight User Guide</i>.</p>
    pub fn set_q_search_bar(
        mut self,
        input: std::option::Option<crate::types::RegisteredUserQSearchBarEmbeddingConfiguration>,
    ) -> Self {
        self.q_search_bar = input;
        self
    }
    /// <p>The type of embedding experience. In this case, Amazon QuickSight visuals.</p>
    pub fn dashboard_visual(
        mut self,
        input: crate::types::RegisteredUserDashboardVisualEmbeddingConfiguration,
    ) -> Self {
        self.dashboard_visual = Some(input);
        self
    }
    /// <p>The type of embedding experience. In this case, Amazon QuickSight visuals.</p>
    pub fn set_dashboard_visual(
        mut self,
        input: std::option::Option<
            crate::types::RegisteredUserDashboardVisualEmbeddingConfiguration,
        >,
    ) -> Self {
        self.dashboard_visual = input;
        self
    }
    /// Consumes the builder and constructs a [`RegisteredUserEmbeddingExperienceConfiguration`](crate::types::RegisteredUserEmbeddingExperienceConfiguration).
    pub fn build(self) -> crate::types::RegisteredUserEmbeddingExperienceConfiguration {
        crate::types::RegisteredUserEmbeddingExperienceConfiguration {
            dashboard: self.dashboard,
            quick_sight_console: self.quick_sight_console,
            q_search_bar: self.q_search_bar,
            dashboard_visual: self.dashboard_visual,
        }
    }
}
