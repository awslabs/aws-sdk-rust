// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Dashboard version summary.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DashboardVersionSummary {
    /// <p>The Amazon Resource Name (ARN) of the resource.</p>
    #[doc(hidden)]
    pub arn: std::option::Option<std::string::String>,
    /// <p>The time that this dashboard version was created.</p>
    #[doc(hidden)]
    pub created_time: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>Version number.</p>
    #[doc(hidden)]
    pub version_number: std::option::Option<i64>,
    /// <p>The HTTP status of the request.</p>
    #[doc(hidden)]
    pub status: std::option::Option<crate::types::ResourceStatus>,
    /// <p>Source entity ARN.</p>
    #[doc(hidden)]
    pub source_entity_arn: std::option::Option<std::string::String>,
    /// <p>Description.</p>
    #[doc(hidden)]
    pub description: std::option::Option<std::string::String>,
}
impl DashboardVersionSummary {
    /// <p>The Amazon Resource Name (ARN) of the resource.</p>
    pub fn arn(&self) -> std::option::Option<&str> {
        self.arn.as_deref()
    }
    /// <p>The time that this dashboard version was created.</p>
    pub fn created_time(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.created_time.as_ref()
    }
    /// <p>Version number.</p>
    pub fn version_number(&self) -> std::option::Option<i64> {
        self.version_number
    }
    /// <p>The HTTP status of the request.</p>
    pub fn status(&self) -> std::option::Option<&crate::types::ResourceStatus> {
        self.status.as_ref()
    }
    /// <p>Source entity ARN.</p>
    pub fn source_entity_arn(&self) -> std::option::Option<&str> {
        self.source_entity_arn.as_deref()
    }
    /// <p>Description.</p>
    pub fn description(&self) -> std::option::Option<&str> {
        self.description.as_deref()
    }
}
impl DashboardVersionSummary {
    /// Creates a new builder-style object to manufacture [`DashboardVersionSummary`](crate::types::DashboardVersionSummary).
    pub fn builder() -> crate::types::builders::DashboardVersionSummaryBuilder {
        crate::types::builders::DashboardVersionSummaryBuilder::default()
    }
}

/// A builder for [`DashboardVersionSummary`](crate::types::DashboardVersionSummary).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DashboardVersionSummaryBuilder {
    pub(crate) arn: std::option::Option<std::string::String>,
    pub(crate) created_time: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) version_number: std::option::Option<i64>,
    pub(crate) status: std::option::Option<crate::types::ResourceStatus>,
    pub(crate) source_entity_arn: std::option::Option<std::string::String>,
    pub(crate) description: std::option::Option<std::string::String>,
}
impl DashboardVersionSummaryBuilder {
    /// <p>The Amazon Resource Name (ARN) of the resource.</p>
    pub fn arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.arn = Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the resource.</p>
    pub fn set_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.arn = input;
        self
    }
    /// <p>The time that this dashboard version was created.</p>
    pub fn created_time(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.created_time = Some(input);
        self
    }
    /// <p>The time that this dashboard version was created.</p>
    pub fn set_created_time(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.created_time = input;
        self
    }
    /// <p>Version number.</p>
    pub fn version_number(mut self, input: i64) -> Self {
        self.version_number = Some(input);
        self
    }
    /// <p>Version number.</p>
    pub fn set_version_number(mut self, input: std::option::Option<i64>) -> Self {
        self.version_number = input;
        self
    }
    /// <p>The HTTP status of the request.</p>
    pub fn status(mut self, input: crate::types::ResourceStatus) -> Self {
        self.status = Some(input);
        self
    }
    /// <p>The HTTP status of the request.</p>
    pub fn set_status(mut self, input: std::option::Option<crate::types::ResourceStatus>) -> Self {
        self.status = input;
        self
    }
    /// <p>Source entity ARN.</p>
    pub fn source_entity_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.source_entity_arn = Some(input.into());
        self
    }
    /// <p>Source entity ARN.</p>
    pub fn set_source_entity_arn(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.source_entity_arn = input;
        self
    }
    /// <p>Description.</p>
    pub fn description(mut self, input: impl Into<std::string::String>) -> Self {
        self.description = Some(input.into());
        self
    }
    /// <p>Description.</p>
    pub fn set_description(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.description = input;
        self
    }
    /// Consumes the builder and constructs a [`DashboardVersionSummary`](crate::types::DashboardVersionSummary).
    pub fn build(self) -> crate::types::DashboardVersionSummary {
        crate::types::DashboardVersionSummary {
            arn: self.arn,
            created_time: self.created_time,
            version_number: self.version_number,
            status: self.status,
            source_entity_arn: self.source_entity_arn,
            description: self.description,
        }
    }
}
