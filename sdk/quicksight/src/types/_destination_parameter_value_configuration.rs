// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The configuration of destination parameter values.</p>
/// <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DestinationParameterValueConfiguration {
    /// <p>The configuration of custom values for destination parameter in <code>DestinationParameterValueConfiguration</code>.</p>
    #[doc(hidden)]
    pub custom_values_configuration: std::option::Option<crate::types::CustomValuesConfiguration>,
    /// <p>The configuration that selects all options.</p>
    #[doc(hidden)]
    pub select_all_value_options: std::option::Option<crate::types::SelectAllValueOptions>,
    /// <p>The source parameter name of the destination parameter.</p>
    #[doc(hidden)]
    pub source_parameter_name: std::option::Option<std::string::String>,
    /// <p>The source field ID of the destination parameter.</p>
    #[doc(hidden)]
    pub source_field: std::option::Option<std::string::String>,
}
impl DestinationParameterValueConfiguration {
    /// <p>The configuration of custom values for destination parameter in <code>DestinationParameterValueConfiguration</code>.</p>
    pub fn custom_values_configuration(
        &self,
    ) -> std::option::Option<&crate::types::CustomValuesConfiguration> {
        self.custom_values_configuration.as_ref()
    }
    /// <p>The configuration that selects all options.</p>
    pub fn select_all_value_options(
        &self,
    ) -> std::option::Option<&crate::types::SelectAllValueOptions> {
        self.select_all_value_options.as_ref()
    }
    /// <p>The source parameter name of the destination parameter.</p>
    pub fn source_parameter_name(&self) -> std::option::Option<&str> {
        self.source_parameter_name.as_deref()
    }
    /// <p>The source field ID of the destination parameter.</p>
    pub fn source_field(&self) -> std::option::Option<&str> {
        self.source_field.as_deref()
    }
}
impl DestinationParameterValueConfiguration {
    /// Creates a new builder-style object to manufacture [`DestinationParameterValueConfiguration`](crate::types::DestinationParameterValueConfiguration).
    pub fn builder() -> crate::types::builders::DestinationParameterValueConfigurationBuilder {
        crate::types::builders::DestinationParameterValueConfigurationBuilder::default()
    }
}

/// A builder for [`DestinationParameterValueConfiguration`](crate::types::DestinationParameterValueConfiguration).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DestinationParameterValueConfigurationBuilder {
    pub(crate) custom_values_configuration:
        std::option::Option<crate::types::CustomValuesConfiguration>,
    pub(crate) select_all_value_options: std::option::Option<crate::types::SelectAllValueOptions>,
    pub(crate) source_parameter_name: std::option::Option<std::string::String>,
    pub(crate) source_field: std::option::Option<std::string::String>,
}
impl DestinationParameterValueConfigurationBuilder {
    /// <p>The configuration of custom values for destination parameter in <code>DestinationParameterValueConfiguration</code>.</p>
    pub fn custom_values_configuration(
        mut self,
        input: crate::types::CustomValuesConfiguration,
    ) -> Self {
        self.custom_values_configuration = Some(input);
        self
    }
    /// <p>The configuration of custom values for destination parameter in <code>DestinationParameterValueConfiguration</code>.</p>
    pub fn set_custom_values_configuration(
        mut self,
        input: std::option::Option<crate::types::CustomValuesConfiguration>,
    ) -> Self {
        self.custom_values_configuration = input;
        self
    }
    /// <p>The configuration that selects all options.</p>
    pub fn select_all_value_options(mut self, input: crate::types::SelectAllValueOptions) -> Self {
        self.select_all_value_options = Some(input);
        self
    }
    /// <p>The configuration that selects all options.</p>
    pub fn set_select_all_value_options(
        mut self,
        input: std::option::Option<crate::types::SelectAllValueOptions>,
    ) -> Self {
        self.select_all_value_options = input;
        self
    }
    /// <p>The source parameter name of the destination parameter.</p>
    pub fn source_parameter_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.source_parameter_name = Some(input.into());
        self
    }
    /// <p>The source parameter name of the destination parameter.</p>
    pub fn set_source_parameter_name(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.source_parameter_name = input;
        self
    }
    /// <p>The source field ID of the destination parameter.</p>
    pub fn source_field(mut self, input: impl Into<std::string::String>) -> Self {
        self.source_field = Some(input.into());
        self
    }
    /// <p>The source field ID of the destination parameter.</p>
    pub fn set_source_field(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.source_field = input;
        self
    }
    /// Consumes the builder and constructs a [`DestinationParameterValueConfiguration`](crate::types::DestinationParameterValueConfiguration).
    pub fn build(self) -> crate::types::DestinationParameterValueConfiguration {
        crate::types::DestinationParameterValueConfiguration {
            custom_values_configuration: self.custom_values_configuration,
            select_all_value_options: self.select_all_value_options,
            source_parameter_name: self.source_parameter_name,
            source_field: self.source_field,
        }
    }
}
