// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A tag for a column in a <code> <a href="https://docs.aws.amazon.com/quicksight/latest/APIReference/API_TagColumnOperation.html">TagColumnOperation</a> </code> structure. This is a variant type structure. For this structure to be valid, only one of the attributes can be non-null.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ColumnTag {
    /// <p>A geospatial role for a column.</p>
    #[doc(hidden)]
    pub column_geographic_role: std::option::Option<crate::types::GeoSpatialDataRole>,
    /// <p>A description for a column.</p>
    #[doc(hidden)]
    pub column_description: std::option::Option<crate::types::ColumnDescription>,
}
impl ColumnTag {
    /// <p>A geospatial role for a column.</p>
    pub fn column_geographic_role(&self) -> std::option::Option<&crate::types::GeoSpatialDataRole> {
        self.column_geographic_role.as_ref()
    }
    /// <p>A description for a column.</p>
    pub fn column_description(&self) -> std::option::Option<&crate::types::ColumnDescription> {
        self.column_description.as_ref()
    }
}
impl ColumnTag {
    /// Creates a new builder-style object to manufacture [`ColumnTag`](crate::types::ColumnTag).
    pub fn builder() -> crate::types::builders::ColumnTagBuilder {
        crate::types::builders::ColumnTagBuilder::default()
    }
}

/// A builder for [`ColumnTag`](crate::types::ColumnTag).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ColumnTagBuilder {
    pub(crate) column_geographic_role: std::option::Option<crate::types::GeoSpatialDataRole>,
    pub(crate) column_description: std::option::Option<crate::types::ColumnDescription>,
}
impl ColumnTagBuilder {
    /// <p>A geospatial role for a column.</p>
    pub fn column_geographic_role(mut self, input: crate::types::GeoSpatialDataRole) -> Self {
        self.column_geographic_role = Some(input);
        self
    }
    /// <p>A geospatial role for a column.</p>
    pub fn set_column_geographic_role(
        mut self,
        input: std::option::Option<crate::types::GeoSpatialDataRole>,
    ) -> Self {
        self.column_geographic_role = input;
        self
    }
    /// <p>A description for a column.</p>
    pub fn column_description(mut self, input: crate::types::ColumnDescription) -> Self {
        self.column_description = Some(input);
        self
    }
    /// <p>A description for a column.</p>
    pub fn set_column_description(
        mut self,
        input: std::option::Option<crate::types::ColumnDescription>,
    ) -> Self {
        self.column_description = input;
        self
    }
    /// Consumes the builder and constructs a [`ColumnTag`](crate::types::ColumnTag).
    pub fn build(self) -> crate::types::ColumnTag {
        crate::types::ColumnTag {
            column_geographic_role: self.column_geographic_role,
            column_description: self.column_description,
        }
    }
}
