// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The field well configuration of a <code>GaugeChartVisual</code>.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GaugeChartFieldWells {
    /// <p>The value field wells of a <code>GaugeChartVisual</code>.</p>
    #[doc(hidden)]
    pub values: std::option::Option<std::vec::Vec<crate::types::MeasureField>>,
    /// <p>The target value field wells of a <code>GaugeChartVisual</code>.</p>
    #[doc(hidden)]
    pub target_values: std::option::Option<std::vec::Vec<crate::types::MeasureField>>,
}
impl GaugeChartFieldWells {
    /// <p>The value field wells of a <code>GaugeChartVisual</code>.</p>
    pub fn values(&self) -> std::option::Option<&[crate::types::MeasureField]> {
        self.values.as_deref()
    }
    /// <p>The target value field wells of a <code>GaugeChartVisual</code>.</p>
    pub fn target_values(&self) -> std::option::Option<&[crate::types::MeasureField]> {
        self.target_values.as_deref()
    }
}
impl GaugeChartFieldWells {
    /// Creates a new builder-style object to manufacture [`GaugeChartFieldWells`](crate::types::GaugeChartFieldWells).
    pub fn builder() -> crate::types::builders::GaugeChartFieldWellsBuilder {
        crate::types::builders::GaugeChartFieldWellsBuilder::default()
    }
}

/// A builder for [`GaugeChartFieldWells`](crate::types::GaugeChartFieldWells).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct GaugeChartFieldWellsBuilder {
    pub(crate) values: std::option::Option<std::vec::Vec<crate::types::MeasureField>>,
    pub(crate) target_values: std::option::Option<std::vec::Vec<crate::types::MeasureField>>,
}
impl GaugeChartFieldWellsBuilder {
    /// Appends an item to `values`.
    ///
    /// To override the contents of this collection use [`set_values`](Self::set_values).
    ///
    /// <p>The value field wells of a <code>GaugeChartVisual</code>.</p>
    pub fn values(mut self, input: crate::types::MeasureField) -> Self {
        let mut v = self.values.unwrap_or_default();
        v.push(input);
        self.values = Some(v);
        self
    }
    /// <p>The value field wells of a <code>GaugeChartVisual</code>.</p>
    pub fn set_values(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::MeasureField>>,
    ) -> Self {
        self.values = input;
        self
    }
    /// Appends an item to `target_values`.
    ///
    /// To override the contents of this collection use [`set_target_values`](Self::set_target_values).
    ///
    /// <p>The target value field wells of a <code>GaugeChartVisual</code>.</p>
    pub fn target_values(mut self, input: crate::types::MeasureField) -> Self {
        let mut v = self.target_values.unwrap_or_default();
        v.push(input);
        self.target_values = Some(v);
        self
    }
    /// <p>The target value field wells of a <code>GaugeChartVisual</code>.</p>
    pub fn set_target_values(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::MeasureField>>,
    ) -> Self {
        self.target_values = input;
        self
    }
    /// Consumes the builder and constructs a [`GaugeChartFieldWells`](crate::types::GaugeChartFieldWells).
    pub fn build(self) -> crate::types::GaugeChartFieldWells {
        crate::types::GaugeChartFieldWells {
            values: self.values,
            target_values: self.target_values,
        }
    }
}
