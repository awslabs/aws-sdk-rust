// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The configuration of an insight visual.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct InsightConfiguration {
    /// <p>The computations configurations of the insight visual</p>
    #[doc(hidden)]
    pub computations: std::option::Option<std::vec::Vec<crate::types::Computation>>,
    /// <p>The custom narrative of the insight visual.</p>
    #[doc(hidden)]
    pub custom_narrative: std::option::Option<crate::types::CustomNarrativeOptions>,
}
impl InsightConfiguration {
    /// <p>The computations configurations of the insight visual</p>
    pub fn computations(&self) -> std::option::Option<&[crate::types::Computation]> {
        self.computations.as_deref()
    }
    /// <p>The custom narrative of the insight visual.</p>
    pub fn custom_narrative(&self) -> std::option::Option<&crate::types::CustomNarrativeOptions> {
        self.custom_narrative.as_ref()
    }
}
impl InsightConfiguration {
    /// Creates a new builder-style object to manufacture [`InsightConfiguration`](crate::types::InsightConfiguration).
    pub fn builder() -> crate::types::builders::InsightConfigurationBuilder {
        crate::types::builders::InsightConfigurationBuilder::default()
    }
}

/// A builder for [`InsightConfiguration`](crate::types::InsightConfiguration).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct InsightConfigurationBuilder {
    pub(crate) computations: std::option::Option<std::vec::Vec<crate::types::Computation>>,
    pub(crate) custom_narrative: std::option::Option<crate::types::CustomNarrativeOptions>,
}
impl InsightConfigurationBuilder {
    /// Appends an item to `computations`.
    ///
    /// To override the contents of this collection use [`set_computations`](Self::set_computations).
    ///
    /// <p>The computations configurations of the insight visual</p>
    pub fn computations(mut self, input: crate::types::Computation) -> Self {
        let mut v = self.computations.unwrap_or_default();
        v.push(input);
        self.computations = Some(v);
        self
    }
    /// <p>The computations configurations of the insight visual</p>
    pub fn set_computations(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::Computation>>,
    ) -> Self {
        self.computations = input;
        self
    }
    /// <p>The custom narrative of the insight visual.</p>
    pub fn custom_narrative(mut self, input: crate::types::CustomNarrativeOptions) -> Self {
        self.custom_narrative = Some(input);
        self
    }
    /// <p>The custom narrative of the insight visual.</p>
    pub fn set_custom_narrative(
        mut self,
        input: std::option::Option<crate::types::CustomNarrativeOptions>,
    ) -> Self {
        self.custom_narrative = input;
        self
    }
    /// Consumes the builder and constructs a [`InsightConfiguration`](crate::types::InsightConfiguration).
    pub fn build(self) -> crate::types::InsightConfiguration {
        crate::types::InsightConfiguration {
            computations: self.computations,
            custom_narrative: self.custom_narrative,
        }
    }
}
