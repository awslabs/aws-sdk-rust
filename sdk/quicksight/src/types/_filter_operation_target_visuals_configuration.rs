// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The configuration of target visuals that you want to be filtered.</p>
/// <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct FilterOperationTargetVisualsConfiguration {
    /// <p>The configuration of the same-sheet target visuals that you want to be filtered.</p>
    #[doc(hidden)]
    pub same_sheet_target_visual_configuration:
        std::option::Option<crate::types::SameSheetTargetVisualConfiguration>,
}
impl FilterOperationTargetVisualsConfiguration {
    /// <p>The configuration of the same-sheet target visuals that you want to be filtered.</p>
    pub fn same_sheet_target_visual_configuration(
        &self,
    ) -> std::option::Option<&crate::types::SameSheetTargetVisualConfiguration> {
        self.same_sheet_target_visual_configuration.as_ref()
    }
}
impl FilterOperationTargetVisualsConfiguration {
    /// Creates a new builder-style object to manufacture [`FilterOperationTargetVisualsConfiguration`](crate::types::FilterOperationTargetVisualsConfiguration).
    pub fn builder() -> crate::types::builders::FilterOperationTargetVisualsConfigurationBuilder {
        crate::types::builders::FilterOperationTargetVisualsConfigurationBuilder::default()
    }
}

/// A builder for [`FilterOperationTargetVisualsConfiguration`](crate::types::FilterOperationTargetVisualsConfiguration).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct FilterOperationTargetVisualsConfigurationBuilder {
    pub(crate) same_sheet_target_visual_configuration:
        std::option::Option<crate::types::SameSheetTargetVisualConfiguration>,
}
impl FilterOperationTargetVisualsConfigurationBuilder {
    /// <p>The configuration of the same-sheet target visuals that you want to be filtered.</p>
    pub fn same_sheet_target_visual_configuration(
        mut self,
        input: crate::types::SameSheetTargetVisualConfiguration,
    ) -> Self {
        self.same_sheet_target_visual_configuration = Some(input);
        self
    }
    /// <p>The configuration of the same-sheet target visuals that you want to be filtered.</p>
    pub fn set_same_sheet_target_visual_configuration(
        mut self,
        input: std::option::Option<crate::types::SameSheetTargetVisualConfiguration>,
    ) -> Self {
        self.same_sheet_target_visual_configuration = input;
        self
    }
    /// Consumes the builder and constructs a [`FilterOperationTargetVisualsConfiguration`](crate::types::FilterOperationTargetVisualsConfiguration).
    pub fn build(self) -> crate::types::FilterOperationTargetVisualsConfiguration {
        crate::types::FilterOperationTargetVisualsConfiguration {
            same_sheet_target_visual_configuration: self.same_sheet_target_visual_configuration,
        }
    }
}
