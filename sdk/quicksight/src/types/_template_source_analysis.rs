// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The source analysis of the template.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct TemplateSourceAnalysis {
    /// <p>The Amazon Resource Name (ARN) of the resource.</p>
    #[doc(hidden)]
    pub arn: std::option::Option<std::string::String>,
    /// <p>A structure containing information about the dataset references used as placeholders in the template.</p>
    #[doc(hidden)]
    pub data_set_references: std::option::Option<std::vec::Vec<crate::types::DataSetReference>>,
}
impl TemplateSourceAnalysis {
    /// <p>The Amazon Resource Name (ARN) of the resource.</p>
    pub fn arn(&self) -> std::option::Option<&str> {
        self.arn.as_deref()
    }
    /// <p>A structure containing information about the dataset references used as placeholders in the template.</p>
    pub fn data_set_references(&self) -> std::option::Option<&[crate::types::DataSetReference]> {
        self.data_set_references.as_deref()
    }
}
impl TemplateSourceAnalysis {
    /// Creates a new builder-style object to manufacture [`TemplateSourceAnalysis`](crate::types::TemplateSourceAnalysis).
    pub fn builder() -> crate::types::builders::TemplateSourceAnalysisBuilder {
        crate::types::builders::TemplateSourceAnalysisBuilder::default()
    }
}

/// A builder for [`TemplateSourceAnalysis`](crate::types::TemplateSourceAnalysis).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct TemplateSourceAnalysisBuilder {
    pub(crate) arn: std::option::Option<std::string::String>,
    pub(crate) data_set_references:
        std::option::Option<std::vec::Vec<crate::types::DataSetReference>>,
}
impl TemplateSourceAnalysisBuilder {
    /// <p>The Amazon Resource Name (ARN) of the resource.</p>
    pub fn arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.arn = Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the resource.</p>
    pub fn set_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.arn = input;
        self
    }
    /// Appends an item to `data_set_references`.
    ///
    /// To override the contents of this collection use [`set_data_set_references`](Self::set_data_set_references).
    ///
    /// <p>A structure containing information about the dataset references used as placeholders in the template.</p>
    pub fn data_set_references(mut self, input: crate::types::DataSetReference) -> Self {
        let mut v = self.data_set_references.unwrap_or_default();
        v.push(input);
        self.data_set_references = Some(v);
        self
    }
    /// <p>A structure containing information about the dataset references used as placeholders in the template.</p>
    pub fn set_data_set_references(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::DataSetReference>>,
    ) -> Self {
        self.data_set_references = input;
        self
    }
    /// Consumes the builder and constructs a [`TemplateSourceAnalysis`](crate::types::TemplateSourceAnalysis).
    pub fn build(self) -> crate::types::TemplateSourceAnalysis {
        crate::types::TemplateSourceAnalysis {
            arn: self.arn,
            data_set_references: self.data_set_references,
        }
    }
}
