// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The value label configuration of the label in a reference line.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ReferenceLineValueLabelConfiguration {
    /// <p>The relative position of the value label. Choose one of the following options:</p>
    /// <ul>
    /// <li> <p> <code>BEFORE_CUSTOM_LABEL</code> </p> </li>
    /// <li> <p> <code>AFTER_CUSTOM_LABEL</code> </p> </li>
    /// </ul>
    #[doc(hidden)]
    pub relative_position:
        std::option::Option<crate::types::ReferenceLineValueLabelRelativePosition>,
    /// <p>The format configuration of the value label.</p>
    #[doc(hidden)]
    pub format_configuration: std::option::Option<crate::types::NumericFormatConfiguration>,
}
impl ReferenceLineValueLabelConfiguration {
    /// <p>The relative position of the value label. Choose one of the following options:</p>
    /// <ul>
    /// <li> <p> <code>BEFORE_CUSTOM_LABEL</code> </p> </li>
    /// <li> <p> <code>AFTER_CUSTOM_LABEL</code> </p> </li>
    /// </ul>
    pub fn relative_position(
        &self,
    ) -> std::option::Option<&crate::types::ReferenceLineValueLabelRelativePosition> {
        self.relative_position.as_ref()
    }
    /// <p>The format configuration of the value label.</p>
    pub fn format_configuration(
        &self,
    ) -> std::option::Option<&crate::types::NumericFormatConfiguration> {
        self.format_configuration.as_ref()
    }
}
impl ReferenceLineValueLabelConfiguration {
    /// Creates a new builder-style object to manufacture [`ReferenceLineValueLabelConfiguration`](crate::types::ReferenceLineValueLabelConfiguration).
    pub fn builder() -> crate::types::builders::ReferenceLineValueLabelConfigurationBuilder {
        crate::types::builders::ReferenceLineValueLabelConfigurationBuilder::default()
    }
}

/// A builder for [`ReferenceLineValueLabelConfiguration`](crate::types::ReferenceLineValueLabelConfiguration).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ReferenceLineValueLabelConfigurationBuilder {
    pub(crate) relative_position:
        std::option::Option<crate::types::ReferenceLineValueLabelRelativePosition>,
    pub(crate) format_configuration: std::option::Option<crate::types::NumericFormatConfiguration>,
}
impl ReferenceLineValueLabelConfigurationBuilder {
    /// <p>The relative position of the value label. Choose one of the following options:</p>
    /// <ul>
    /// <li> <p> <code>BEFORE_CUSTOM_LABEL</code> </p> </li>
    /// <li> <p> <code>AFTER_CUSTOM_LABEL</code> </p> </li>
    /// </ul>
    pub fn relative_position(
        mut self,
        input: crate::types::ReferenceLineValueLabelRelativePosition,
    ) -> Self {
        self.relative_position = Some(input);
        self
    }
    /// <p>The relative position of the value label. Choose one of the following options:</p>
    /// <ul>
    /// <li> <p> <code>BEFORE_CUSTOM_LABEL</code> </p> </li>
    /// <li> <p> <code>AFTER_CUSTOM_LABEL</code> </p> </li>
    /// </ul>
    pub fn set_relative_position(
        mut self,
        input: std::option::Option<crate::types::ReferenceLineValueLabelRelativePosition>,
    ) -> Self {
        self.relative_position = input;
        self
    }
    /// <p>The format configuration of the value label.</p>
    pub fn format_configuration(mut self, input: crate::types::NumericFormatConfiguration) -> Self {
        self.format_configuration = Some(input);
        self
    }
    /// <p>The format configuration of the value label.</p>
    pub fn set_format_configuration(
        mut self,
        input: std::option::Option<crate::types::NumericFormatConfiguration>,
    ) -> Self {
        self.format_configuration = input;
        self
    }
    /// Consumes the builder and constructs a [`ReferenceLineValueLabelConfiguration`](crate::types::ReferenceLineValueLabelConfiguration).
    pub fn build(self) -> crate::types::ReferenceLineValueLabelConfiguration {
        crate::types::ReferenceLineValueLabelConfiguration {
            relative_position: self.relative_position,
            format_configuration: self.format_configuration,
        }
    }
}
