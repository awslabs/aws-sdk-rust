// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Configuration for OAuth 2.0 client credentials grant authentication, including client ID, client secret, token endpoint, and optional scopes.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ClientCredentialsGrantMetadata {
    /// <p>The base endpoint URL for the external service.</p>
    pub base_endpoint: ::std::string::String,
    /// <p>The source of the client credentials configuration.</p>
    pub client_credentials_source: ::std::option::Option<crate::types::ClientCredentialsSource>,
    /// <p>The detailed client credentials configuration including client ID, client secret, and token endpoint.</p>
    pub client_credentials_details: ::std::option::Option<crate::types::ClientCredentialsDetails>,
}
impl ClientCredentialsGrantMetadata {
    /// <p>The base endpoint URL for the external service.</p>
    pub fn base_endpoint(&self) -> &str {
        use std::ops::Deref;
        self.base_endpoint.deref()
    }
    /// <p>The source of the client credentials configuration.</p>
    pub fn client_credentials_source(&self) -> ::std::option::Option<&crate::types::ClientCredentialsSource> {
        self.client_credentials_source.as_ref()
    }
    /// <p>The detailed client credentials configuration including client ID, client secret, and token endpoint.</p>
    pub fn client_credentials_details(&self) -> ::std::option::Option<&crate::types::ClientCredentialsDetails> {
        self.client_credentials_details.as_ref()
    }
}
impl ClientCredentialsGrantMetadata {
    /// Creates a new builder-style object to manufacture [`ClientCredentialsGrantMetadata`](crate::types::ClientCredentialsGrantMetadata).
    pub fn builder() -> crate::types::builders::ClientCredentialsGrantMetadataBuilder {
        crate::types::builders::ClientCredentialsGrantMetadataBuilder::default()
    }
}

/// A builder for [`ClientCredentialsGrantMetadata`](crate::types::ClientCredentialsGrantMetadata).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct ClientCredentialsGrantMetadataBuilder {
    pub(crate) base_endpoint: ::std::option::Option<::std::string::String>,
    pub(crate) client_credentials_source: ::std::option::Option<crate::types::ClientCredentialsSource>,
    pub(crate) client_credentials_details: ::std::option::Option<crate::types::ClientCredentialsDetails>,
}
impl ClientCredentialsGrantMetadataBuilder {
    /// <p>The base endpoint URL for the external service.</p>
    /// This field is required.
    pub fn base_endpoint(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.base_endpoint = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The base endpoint URL for the external service.</p>
    pub fn set_base_endpoint(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.base_endpoint = input;
        self
    }
    /// <p>The base endpoint URL for the external service.</p>
    pub fn get_base_endpoint(&self) -> &::std::option::Option<::std::string::String> {
        &self.base_endpoint
    }
    /// <p>The source of the client credentials configuration.</p>
    pub fn client_credentials_source(mut self, input: crate::types::ClientCredentialsSource) -> Self {
        self.client_credentials_source = ::std::option::Option::Some(input);
        self
    }
    /// <p>The source of the client credentials configuration.</p>
    pub fn set_client_credentials_source(mut self, input: ::std::option::Option<crate::types::ClientCredentialsSource>) -> Self {
        self.client_credentials_source = input;
        self
    }
    /// <p>The source of the client credentials configuration.</p>
    pub fn get_client_credentials_source(&self) -> &::std::option::Option<crate::types::ClientCredentialsSource> {
        &self.client_credentials_source
    }
    /// <p>The detailed client credentials configuration including client ID, client secret, and token endpoint.</p>
    pub fn client_credentials_details(mut self, input: crate::types::ClientCredentialsDetails) -> Self {
        self.client_credentials_details = ::std::option::Option::Some(input);
        self
    }
    /// <p>The detailed client credentials configuration including client ID, client secret, and token endpoint.</p>
    pub fn set_client_credentials_details(mut self, input: ::std::option::Option<crate::types::ClientCredentialsDetails>) -> Self {
        self.client_credentials_details = input;
        self
    }
    /// <p>The detailed client credentials configuration including client ID, client secret, and token endpoint.</p>
    pub fn get_client_credentials_details(&self) -> &::std::option::Option<crate::types::ClientCredentialsDetails> {
        &self.client_credentials_details
    }
    /// Consumes the builder and constructs a [`ClientCredentialsGrantMetadata`](crate::types::ClientCredentialsGrantMetadata).
    /// This method will fail if any of the following fields are not set:
    /// - [`base_endpoint`](crate::types::builders::ClientCredentialsGrantMetadataBuilder::base_endpoint)
    pub fn build(self) -> ::std::result::Result<crate::types::ClientCredentialsGrantMetadata, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::ClientCredentialsGrantMetadata {
            base_endpoint: self.base_endpoint.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "base_endpoint",
                    "base_endpoint was not specified but it is required when building ClientCredentialsGrantMetadata",
                )
            })?,
            client_credentials_source: self.client_credentials_source,
            client_credentials_details: self.client_credentials_details,
        })
    }
}
