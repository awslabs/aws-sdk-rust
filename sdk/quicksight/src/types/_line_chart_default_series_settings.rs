// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The options that determine the default presentation of all line series in <code>LineChartVisual</code>.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct LineChartDefaultSeriesSettings {
    /// <p>The axis to which you are binding all line series to.</p>
    #[doc(hidden)]
    pub axis_binding: std::option::Option<crate::types::AxisBinding>,
    /// <p>Line styles options for all line series in the visual.</p>
    #[doc(hidden)]
    pub line_style_settings: std::option::Option<crate::types::LineChartLineStyleSettings>,
    /// <p>Marker styles options for all line series in the visual.</p>
    #[doc(hidden)]
    pub marker_style_settings: std::option::Option<crate::types::LineChartMarkerStyleSettings>,
}
impl LineChartDefaultSeriesSettings {
    /// <p>The axis to which you are binding all line series to.</p>
    pub fn axis_binding(&self) -> std::option::Option<&crate::types::AxisBinding> {
        self.axis_binding.as_ref()
    }
    /// <p>Line styles options for all line series in the visual.</p>
    pub fn line_style_settings(
        &self,
    ) -> std::option::Option<&crate::types::LineChartLineStyleSettings> {
        self.line_style_settings.as_ref()
    }
    /// <p>Marker styles options for all line series in the visual.</p>
    pub fn marker_style_settings(
        &self,
    ) -> std::option::Option<&crate::types::LineChartMarkerStyleSettings> {
        self.marker_style_settings.as_ref()
    }
}
impl LineChartDefaultSeriesSettings {
    /// Creates a new builder-style object to manufacture [`LineChartDefaultSeriesSettings`](crate::types::LineChartDefaultSeriesSettings).
    pub fn builder() -> crate::types::builders::LineChartDefaultSeriesSettingsBuilder {
        crate::types::builders::LineChartDefaultSeriesSettingsBuilder::default()
    }
}

/// A builder for [`LineChartDefaultSeriesSettings`](crate::types::LineChartDefaultSeriesSettings).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct LineChartDefaultSeriesSettingsBuilder {
    pub(crate) axis_binding: std::option::Option<crate::types::AxisBinding>,
    pub(crate) line_style_settings: std::option::Option<crate::types::LineChartLineStyleSettings>,
    pub(crate) marker_style_settings:
        std::option::Option<crate::types::LineChartMarkerStyleSettings>,
}
impl LineChartDefaultSeriesSettingsBuilder {
    /// <p>The axis to which you are binding all line series to.</p>
    pub fn axis_binding(mut self, input: crate::types::AxisBinding) -> Self {
        self.axis_binding = Some(input);
        self
    }
    /// <p>The axis to which you are binding all line series to.</p>
    pub fn set_axis_binding(
        mut self,
        input: std::option::Option<crate::types::AxisBinding>,
    ) -> Self {
        self.axis_binding = input;
        self
    }
    /// <p>Line styles options for all line series in the visual.</p>
    pub fn line_style_settings(mut self, input: crate::types::LineChartLineStyleSettings) -> Self {
        self.line_style_settings = Some(input);
        self
    }
    /// <p>Line styles options for all line series in the visual.</p>
    pub fn set_line_style_settings(
        mut self,
        input: std::option::Option<crate::types::LineChartLineStyleSettings>,
    ) -> Self {
        self.line_style_settings = input;
        self
    }
    /// <p>Marker styles options for all line series in the visual.</p>
    pub fn marker_style_settings(
        mut self,
        input: crate::types::LineChartMarkerStyleSettings,
    ) -> Self {
        self.marker_style_settings = Some(input);
        self
    }
    /// <p>Marker styles options for all line series in the visual.</p>
    pub fn set_marker_style_settings(
        mut self,
        input: std::option::Option<crate::types::LineChartMarkerStyleSettings>,
    ) -> Self {
        self.marker_style_settings = input;
        self
    }
    /// Consumes the builder and constructs a [`LineChartDefaultSeriesSettings`](crate::types::LineChartDefaultSeriesSettings).
    pub fn build(self) -> crate::types::LineChartDefaultSeriesSettings {
        crate::types::LineChartDefaultSeriesSettings {
            axis_binding: self.axis_binding,
            line_style_settings: self.line_style_settings,
            marker_style_settings: self.marker_style_settings,
        }
    }
}
