// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Groupings of columns that work together in certain Amazon QuickSight features. This is a variant type structure. For this structure to be valid, only one of the attributes can be non-null.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ColumnGroup {
    /// <p>Geospatial column group that denotes a hierarchy.</p>
    #[doc(hidden)]
    pub geo_spatial_column_group: std::option::Option<crate::types::GeoSpatialColumnGroup>,
}
impl ColumnGroup {
    /// <p>Geospatial column group that denotes a hierarchy.</p>
    pub fn geo_spatial_column_group(
        &self,
    ) -> std::option::Option<&crate::types::GeoSpatialColumnGroup> {
        self.geo_spatial_column_group.as_ref()
    }
}
impl ColumnGroup {
    /// Creates a new builder-style object to manufacture [`ColumnGroup`](crate::types::ColumnGroup).
    pub fn builder() -> crate::types::builders::ColumnGroupBuilder {
        crate::types::builders::ColumnGroupBuilder::default()
    }
}

/// A builder for [`ColumnGroup`](crate::types::ColumnGroup).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ColumnGroupBuilder {
    pub(crate) geo_spatial_column_group: std::option::Option<crate::types::GeoSpatialColumnGroup>,
}
impl ColumnGroupBuilder {
    /// <p>Geospatial column group that denotes a hierarchy.</p>
    pub fn geo_spatial_column_group(mut self, input: crate::types::GeoSpatialColumnGroup) -> Self {
        self.geo_spatial_column_group = Some(input);
        self
    }
    /// <p>Geospatial column group that denotes a hierarchy.</p>
    pub fn set_geo_spatial_column_group(
        mut self,
        input: std::option::Option<crate::types::GeoSpatialColumnGroup>,
    ) -> Self {
        self.geo_spatial_column_group = input;
        self
    }
    /// Consumes the builder and constructs a [`ColumnGroup`](crate::types::ColumnGroup).
    pub fn build(self) -> crate::types::ColumnGroup {
        crate::types::ColumnGroup {
            geo_spatial_column_group: self.geo_spatial_column_group,
        }
    }
}
