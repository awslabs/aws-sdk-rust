// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The credentials for authenticating with a web proxy server.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct WebProxyCredentials {
    /// <p>The username for authenticating with the web proxy server.</p>
    pub web_proxy_username: ::std::string::String,
    /// <p>The password for authenticating with the web proxy server.</p>
    pub web_proxy_password: ::std::string::String,
}
impl WebProxyCredentials {
    /// <p>The username for authenticating with the web proxy server.</p>
    pub fn web_proxy_username(&self) -> &str {
        use std::ops::Deref;
        self.web_proxy_username.deref()
    }
    /// <p>The password for authenticating with the web proxy server.</p>
    pub fn web_proxy_password(&self) -> &str {
        use std::ops::Deref;
        self.web_proxy_password.deref()
    }
}
impl WebProxyCredentials {
    /// Creates a new builder-style object to manufacture [`WebProxyCredentials`](crate::types::WebProxyCredentials).
    pub fn builder() -> crate::types::builders::WebProxyCredentialsBuilder {
        crate::types::builders::WebProxyCredentialsBuilder::default()
    }
}

/// A builder for [`WebProxyCredentials`](crate::types::WebProxyCredentials).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct WebProxyCredentialsBuilder {
    pub(crate) web_proxy_username: ::std::option::Option<::std::string::String>,
    pub(crate) web_proxy_password: ::std::option::Option<::std::string::String>,
}
impl WebProxyCredentialsBuilder {
    /// <p>The username for authenticating with the web proxy server.</p>
    /// This field is required.
    pub fn web_proxy_username(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.web_proxy_username = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The username for authenticating with the web proxy server.</p>
    pub fn set_web_proxy_username(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.web_proxy_username = input;
        self
    }
    /// <p>The username for authenticating with the web proxy server.</p>
    pub fn get_web_proxy_username(&self) -> &::std::option::Option<::std::string::String> {
        &self.web_proxy_username
    }
    /// <p>The password for authenticating with the web proxy server.</p>
    /// This field is required.
    pub fn web_proxy_password(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.web_proxy_password = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The password for authenticating with the web proxy server.</p>
    pub fn set_web_proxy_password(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.web_proxy_password = input;
        self
    }
    /// <p>The password for authenticating with the web proxy server.</p>
    pub fn get_web_proxy_password(&self) -> &::std::option::Option<::std::string::String> {
        &self.web_proxy_password
    }
    /// Consumes the builder and constructs a [`WebProxyCredentials`](crate::types::WebProxyCredentials).
    /// This method will fail if any of the following fields are not set:
    /// - [`web_proxy_username`](crate::types::builders::WebProxyCredentialsBuilder::web_proxy_username)
    /// - [`web_proxy_password`](crate::types::builders::WebProxyCredentialsBuilder::web_proxy_password)
    pub fn build(self) -> ::std::result::Result<crate::types::WebProxyCredentials, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::WebProxyCredentials {
            web_proxy_username: self.web_proxy_username.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "web_proxy_username",
                    "web_proxy_username was not specified but it is required when building WebProxyCredentials",
                )
            })?,
            web_proxy_password: self.web_proxy_password.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "web_proxy_password",
                    "web_proxy_password was not specified but it is required when building WebProxyCredentials",
                )
            })?,
        })
    }
}
