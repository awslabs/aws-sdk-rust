// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The navigation configuration for <code>CustomActionNavigationOperation</code>.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct LocalNavigationConfiguration {
    /// <p>The sheet that is targeted for navigation in the same analysis.</p>
    #[doc(hidden)]
    pub target_sheet_id: std::option::Option<std::string::String>,
}
impl LocalNavigationConfiguration {
    /// <p>The sheet that is targeted for navigation in the same analysis.</p>
    pub fn target_sheet_id(&self) -> std::option::Option<&str> {
        self.target_sheet_id.as_deref()
    }
}
impl LocalNavigationConfiguration {
    /// Creates a new builder-style object to manufacture [`LocalNavigationConfiguration`](crate::types::LocalNavigationConfiguration).
    pub fn builder() -> crate::types::builders::LocalNavigationConfigurationBuilder {
        crate::types::builders::LocalNavigationConfigurationBuilder::default()
    }
}

/// A builder for [`LocalNavigationConfiguration`](crate::types::LocalNavigationConfiguration).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct LocalNavigationConfigurationBuilder {
    pub(crate) target_sheet_id: std::option::Option<std::string::String>,
}
impl LocalNavigationConfigurationBuilder {
    /// <p>The sheet that is targeted for navigation in the same analysis.</p>
    pub fn target_sheet_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.target_sheet_id = Some(input.into());
        self
    }
    /// <p>The sheet that is targeted for navigation in the same analysis.</p>
    pub fn set_target_sheet_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.target_sheet_id = input;
        self
    }
    /// Consumes the builder and constructs a [`LocalNavigationConfiguration`](crate::types::LocalNavigationConfiguration).
    pub fn build(self) -> crate::types::LocalNavigationConfiguration {
        crate::types::LocalNavigationConfiguration {
            target_sheet_id: self.target_sheet_id,
        }
    }
}
