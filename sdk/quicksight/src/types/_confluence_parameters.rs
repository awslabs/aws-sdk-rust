// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The parameters that are required to connect to a Confluence data source</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ConfluenceParameters {
    /// <p>The URL of the Confluence site to connect to.</p>
    pub confluence_url: ::std::string::String,
}
impl ConfluenceParameters {
    /// <p>The URL of the Confluence site to connect to.</p>
    pub fn confluence_url(&self) -> &str {
        use std::ops::Deref;
        self.confluence_url.deref()
    }
}
impl ConfluenceParameters {
    /// Creates a new builder-style object to manufacture [`ConfluenceParameters`](crate::types::ConfluenceParameters).
    pub fn builder() -> crate::types::builders::ConfluenceParametersBuilder {
        crate::types::builders::ConfluenceParametersBuilder::default()
    }
}

/// A builder for [`ConfluenceParameters`](crate::types::ConfluenceParameters).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct ConfluenceParametersBuilder {
    pub(crate) confluence_url: ::std::option::Option<::std::string::String>,
}
impl ConfluenceParametersBuilder {
    /// <p>The URL of the Confluence site to connect to.</p>
    /// This field is required.
    pub fn confluence_url(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.confluence_url = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The URL of the Confluence site to connect to.</p>
    pub fn set_confluence_url(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.confluence_url = input;
        self
    }
    /// <p>The URL of the Confluence site to connect to.</p>
    pub fn get_confluence_url(&self) -> &::std::option::Option<::std::string::String> {
        &self.confluence_url
    }
    /// Consumes the builder and constructs a [`ConfluenceParameters`](crate::types::ConfluenceParameters).
    /// This method will fail if any of the following fields are not set:
    /// - [`confluence_url`](crate::types::builders::ConfluenceParametersBuilder::confluence_url)
    pub fn build(self) -> ::std::result::Result<crate::types::ConfluenceParameters, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::ConfluenceParameters {
            confluence_url: self.confluence_url.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "confluence_url",
                    "confluence_url was not specified but it is required when building ConfluenceParameters",
                )
            })?,
        })
    }
}
