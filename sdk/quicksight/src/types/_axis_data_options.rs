// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The data options for an axis.</p>
/// <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AxisDataOptions {
    /// <p>The options for an axis with a numeric field.</p>
    #[doc(hidden)]
    pub numeric_axis_options: std::option::Option<crate::types::NumericAxisOptions>,
    /// <p>The options for an axis with a date field.</p>
    #[doc(hidden)]
    pub date_axis_options: std::option::Option<crate::types::DateAxisOptions>,
}
impl AxisDataOptions {
    /// <p>The options for an axis with a numeric field.</p>
    pub fn numeric_axis_options(&self) -> std::option::Option<&crate::types::NumericAxisOptions> {
        self.numeric_axis_options.as_ref()
    }
    /// <p>The options for an axis with a date field.</p>
    pub fn date_axis_options(&self) -> std::option::Option<&crate::types::DateAxisOptions> {
        self.date_axis_options.as_ref()
    }
}
impl AxisDataOptions {
    /// Creates a new builder-style object to manufacture [`AxisDataOptions`](crate::types::AxisDataOptions).
    pub fn builder() -> crate::types::builders::AxisDataOptionsBuilder {
        crate::types::builders::AxisDataOptionsBuilder::default()
    }
}

/// A builder for [`AxisDataOptions`](crate::types::AxisDataOptions).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AxisDataOptionsBuilder {
    pub(crate) numeric_axis_options: std::option::Option<crate::types::NumericAxisOptions>,
    pub(crate) date_axis_options: std::option::Option<crate::types::DateAxisOptions>,
}
impl AxisDataOptionsBuilder {
    /// <p>The options for an axis with a numeric field.</p>
    pub fn numeric_axis_options(mut self, input: crate::types::NumericAxisOptions) -> Self {
        self.numeric_axis_options = Some(input);
        self
    }
    /// <p>The options for an axis with a numeric field.</p>
    pub fn set_numeric_axis_options(
        mut self,
        input: std::option::Option<crate::types::NumericAxisOptions>,
    ) -> Self {
        self.numeric_axis_options = input;
        self
    }
    /// <p>The options for an axis with a date field.</p>
    pub fn date_axis_options(mut self, input: crate::types::DateAxisOptions) -> Self {
        self.date_axis_options = Some(input);
        self
    }
    /// <p>The options for an axis with a date field.</p>
    pub fn set_date_axis_options(
        mut self,
        input: std::option::Option<crate::types::DateAxisOptions>,
    ) -> Self {
        self.date_axis_options = input;
        self
    }
    /// Consumes the builder and constructs a [`AxisDataOptions`](crate::types::AxisDataOptions).
    pub fn build(self) -> crate::types::AxisDataOptions {
        crate::types::AxisDataOptions {
            numeric_axis_options: self.numeric_axis_options,
            date_axis_options: self.date_axis_options,
        }
    }
}
