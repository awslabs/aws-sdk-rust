// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The sort configuration for a field in a field well.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct FieldSort {
    /// <p>The sort configuration target field.</p>
    pub field_id: ::std::string::String,
    /// <p>The sort direction. Choose one of the following options:</p>
    /// <ul>
    /// <li> <p> <code>ASC</code>: Ascending</p> </li>
    /// <li> <p> <code>DESC</code>: Descending</p> </li>
    /// </ul>
    pub direction: crate::types::SortDirection,
}
impl FieldSort {
    /// <p>The sort configuration target field.</p>
    pub fn field_id(&self) -> &str {
        use std::ops::Deref;
        self.field_id.deref()
    }
    /// <p>The sort direction. Choose one of the following options:</p>
    /// <ul>
    /// <li> <p> <code>ASC</code>: Ascending</p> </li>
    /// <li> <p> <code>DESC</code>: Descending</p> </li>
    /// </ul>
    pub fn direction(&self) -> &crate::types::SortDirection {
        &self.direction
    }
}
impl FieldSort {
    /// Creates a new builder-style object to manufacture [`FieldSort`](crate::types::FieldSort).
    pub fn builder() -> crate::types::builders::FieldSortBuilder {
        crate::types::builders::FieldSortBuilder::default()
    }
}

/// A builder for [`FieldSort`](crate::types::FieldSort).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct FieldSortBuilder {
    pub(crate) field_id: ::std::option::Option<::std::string::String>,
    pub(crate) direction: ::std::option::Option<crate::types::SortDirection>,
}
impl FieldSortBuilder {
    /// <p>The sort configuration target field.</p>
    /// This field is required.
    pub fn field_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.field_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The sort configuration target field.</p>
    pub fn set_field_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.field_id = input;
        self
    }
    /// <p>The sort configuration target field.</p>
    pub fn get_field_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.field_id
    }
    /// <p>The sort direction. Choose one of the following options:</p>
    /// <ul>
    /// <li> <p> <code>ASC</code>: Ascending</p> </li>
    /// <li> <p> <code>DESC</code>: Descending</p> </li>
    /// </ul>
    /// This field is required.
    pub fn direction(mut self, input: crate::types::SortDirection) -> Self {
        self.direction = ::std::option::Option::Some(input);
        self
    }
    /// <p>The sort direction. Choose one of the following options:</p>
    /// <ul>
    /// <li> <p> <code>ASC</code>: Ascending</p> </li>
    /// <li> <p> <code>DESC</code>: Descending</p> </li>
    /// </ul>
    pub fn set_direction(mut self, input: ::std::option::Option<crate::types::SortDirection>) -> Self {
        self.direction = input;
        self
    }
    /// <p>The sort direction. Choose one of the following options:</p>
    /// <ul>
    /// <li> <p> <code>ASC</code>: Ascending</p> </li>
    /// <li> <p> <code>DESC</code>: Descending</p> </li>
    /// </ul>
    pub fn get_direction(&self) -> &::std::option::Option<crate::types::SortDirection> {
        &self.direction
    }
    /// Consumes the builder and constructs a [`FieldSort`](crate::types::FieldSort).
    /// This method will fail if any of the following fields are not set:
    /// - [`field_id`](crate::types::builders::FieldSortBuilder::field_id)
    /// - [`direction`](crate::types::builders::FieldSortBuilder::direction)
    pub fn build(self) -> ::std::result::Result<crate::types::FieldSort, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::FieldSort {
            field_id: self.field_id.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "field_id",
                    "field_id was not specified but it is required when building FieldSort",
                )
            })?,
            direction: self.direction.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "direction",
                    "direction was not specified but it is required when building FieldSort",
                )
            })?,
        })
    }
}
