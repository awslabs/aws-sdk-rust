// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The sort configuration for a field in a field well.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct FieldSort {
    /// <p>The sort configuration target field.</p>
    #[doc(hidden)]
    pub field_id: std::option::Option<std::string::String>,
    /// <p>The sort direction. Choose one of the following options:</p>
    /// <ul>
    /// <li> <p> <code>ASC</code>: Ascending</p> </li>
    /// <li> <p> <code>DESC</code>: Descending</p> </li>
    /// </ul>
    #[doc(hidden)]
    pub direction: std::option::Option<crate::types::SortDirection>,
}
impl FieldSort {
    /// <p>The sort configuration target field.</p>
    pub fn field_id(&self) -> std::option::Option<&str> {
        self.field_id.as_deref()
    }
    /// <p>The sort direction. Choose one of the following options:</p>
    /// <ul>
    /// <li> <p> <code>ASC</code>: Ascending</p> </li>
    /// <li> <p> <code>DESC</code>: Descending</p> </li>
    /// </ul>
    pub fn direction(&self) -> std::option::Option<&crate::types::SortDirection> {
        self.direction.as_ref()
    }
}
impl FieldSort {
    /// Creates a new builder-style object to manufacture [`FieldSort`](crate::types::FieldSort).
    pub fn builder() -> crate::types::builders::FieldSortBuilder {
        crate::types::builders::FieldSortBuilder::default()
    }
}

/// A builder for [`FieldSort`](crate::types::FieldSort).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct FieldSortBuilder {
    pub(crate) field_id: std::option::Option<std::string::String>,
    pub(crate) direction: std::option::Option<crate::types::SortDirection>,
}
impl FieldSortBuilder {
    /// <p>The sort configuration target field.</p>
    pub fn field_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.field_id = Some(input.into());
        self
    }
    /// <p>The sort configuration target field.</p>
    pub fn set_field_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.field_id = input;
        self
    }
    /// <p>The sort direction. Choose one of the following options:</p>
    /// <ul>
    /// <li> <p> <code>ASC</code>: Ascending</p> </li>
    /// <li> <p> <code>DESC</code>: Descending</p> </li>
    /// </ul>
    pub fn direction(mut self, input: crate::types::SortDirection) -> Self {
        self.direction = Some(input);
        self
    }
    /// <p>The sort direction. Choose one of the following options:</p>
    /// <ul>
    /// <li> <p> <code>ASC</code>: Ascending</p> </li>
    /// <li> <p> <code>DESC</code>: Descending</p> </li>
    /// </ul>
    pub fn set_direction(
        mut self,
        input: std::option::Option<crate::types::SortDirection>,
    ) -> Self {
        self.direction = input;
        self
    }
    /// Consumes the builder and constructs a [`FieldSort`](crate::types::FieldSort).
    pub fn build(self) -> crate::types::FieldSort {
        crate::types::FieldSort {
            field_id: self.field_id,
            direction: self.direction,
        }
    }
}
