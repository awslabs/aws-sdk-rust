// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The formatting configuration for all types of field.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct FormatConfiguration {
    /// <p>Formatting configuration for string fields.</p>
    #[doc(hidden)]
    pub string_format_configuration: std::option::Option<crate::types::StringFormatConfiguration>,
    /// <p>Formatting configuration for number fields.</p>
    #[doc(hidden)]
    pub number_format_configuration: std::option::Option<crate::types::NumberFormatConfiguration>,
    /// <p>Formatting configuration for <code>DateTime</code> fields.</p>
    #[doc(hidden)]
    pub date_time_format_configuration:
        std::option::Option<crate::types::DateTimeFormatConfiguration>,
}
impl FormatConfiguration {
    /// <p>Formatting configuration for string fields.</p>
    pub fn string_format_configuration(
        &self,
    ) -> std::option::Option<&crate::types::StringFormatConfiguration> {
        self.string_format_configuration.as_ref()
    }
    /// <p>Formatting configuration for number fields.</p>
    pub fn number_format_configuration(
        &self,
    ) -> std::option::Option<&crate::types::NumberFormatConfiguration> {
        self.number_format_configuration.as_ref()
    }
    /// <p>Formatting configuration for <code>DateTime</code> fields.</p>
    pub fn date_time_format_configuration(
        &self,
    ) -> std::option::Option<&crate::types::DateTimeFormatConfiguration> {
        self.date_time_format_configuration.as_ref()
    }
}
impl FormatConfiguration {
    /// Creates a new builder-style object to manufacture [`FormatConfiguration`](crate::types::FormatConfiguration).
    pub fn builder() -> crate::types::builders::FormatConfigurationBuilder {
        crate::types::builders::FormatConfigurationBuilder::default()
    }
}

/// A builder for [`FormatConfiguration`](crate::types::FormatConfiguration).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct FormatConfigurationBuilder {
    pub(crate) string_format_configuration:
        std::option::Option<crate::types::StringFormatConfiguration>,
    pub(crate) number_format_configuration:
        std::option::Option<crate::types::NumberFormatConfiguration>,
    pub(crate) date_time_format_configuration:
        std::option::Option<crate::types::DateTimeFormatConfiguration>,
}
impl FormatConfigurationBuilder {
    /// <p>Formatting configuration for string fields.</p>
    pub fn string_format_configuration(
        mut self,
        input: crate::types::StringFormatConfiguration,
    ) -> Self {
        self.string_format_configuration = Some(input);
        self
    }
    /// <p>Formatting configuration for string fields.</p>
    pub fn set_string_format_configuration(
        mut self,
        input: std::option::Option<crate::types::StringFormatConfiguration>,
    ) -> Self {
        self.string_format_configuration = input;
        self
    }
    /// <p>Formatting configuration for number fields.</p>
    pub fn number_format_configuration(
        mut self,
        input: crate::types::NumberFormatConfiguration,
    ) -> Self {
        self.number_format_configuration = Some(input);
        self
    }
    /// <p>Formatting configuration for number fields.</p>
    pub fn set_number_format_configuration(
        mut self,
        input: std::option::Option<crate::types::NumberFormatConfiguration>,
    ) -> Self {
        self.number_format_configuration = input;
        self
    }
    /// <p>Formatting configuration for <code>DateTime</code> fields.</p>
    pub fn date_time_format_configuration(
        mut self,
        input: crate::types::DateTimeFormatConfiguration,
    ) -> Self {
        self.date_time_format_configuration = Some(input);
        self
    }
    /// <p>Formatting configuration for <code>DateTime</code> fields.</p>
    pub fn set_date_time_format_configuration(
        mut self,
        input: std::option::Option<crate::types::DateTimeFormatConfiguration>,
    ) -> Self {
        self.date_time_format_configuration = input;
        self
    }
    /// Consumes the builder and constructs a [`FormatConfiguration`](crate::types::FormatConfiguration).
    pub fn build(self) -> crate::types::FormatConfiguration {
        crate::types::FormatConfiguration {
            string_format_configuration: self.string_format_configuration,
            number_format_configuration: self.number_format_configuration,
            date_time_format_configuration: self.date_time_format_configuration,
        }
    }
}
