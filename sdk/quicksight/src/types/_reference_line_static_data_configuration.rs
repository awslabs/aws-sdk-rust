// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The static data configuration of the reference line data configuration.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq)]
pub struct ReferenceLineStaticDataConfiguration {
    /// <p>The double input of the static data.</p>
    pub value: f64,
}
impl ReferenceLineStaticDataConfiguration {
    /// <p>The double input of the static data.</p>
    pub fn value(&self) -> f64 {
        self.value
    }
}
impl ::std::fmt::Debug for ReferenceLineStaticDataConfiguration {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("ReferenceLineStaticDataConfiguration");
        formatter.field("value", &"*** Sensitive Data Redacted ***");
        formatter.finish()
    }
}
impl ReferenceLineStaticDataConfiguration {
    /// Creates a new builder-style object to manufacture [`ReferenceLineStaticDataConfiguration`](crate::types::ReferenceLineStaticDataConfiguration).
    pub fn builder() -> crate::types::builders::ReferenceLineStaticDataConfigurationBuilder {
        crate::types::builders::ReferenceLineStaticDataConfigurationBuilder::default()
    }
}

/// A builder for [`ReferenceLineStaticDataConfiguration`](crate::types::ReferenceLineStaticDataConfiguration).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default)]
pub struct ReferenceLineStaticDataConfigurationBuilder {
    pub(crate) value: ::std::option::Option<f64>,
}
impl ReferenceLineStaticDataConfigurationBuilder {
    /// <p>The double input of the static data.</p>
    /// This field is required.
    pub fn value(mut self, input: f64) -> Self {
        self.value = ::std::option::Option::Some(input);
        self
    }
    /// <p>The double input of the static data.</p>
    pub fn set_value(mut self, input: ::std::option::Option<f64>) -> Self {
        self.value = input;
        self
    }
    /// <p>The double input of the static data.</p>
    pub fn get_value(&self) -> &::std::option::Option<f64> {
        &self.value
    }
    /// Consumes the builder and constructs a [`ReferenceLineStaticDataConfiguration`](crate::types::ReferenceLineStaticDataConfiguration).
    pub fn build(self) -> crate::types::ReferenceLineStaticDataConfiguration {
        crate::types::ReferenceLineStaticDataConfiguration {
            value: self.value.unwrap_or_default(),
        }
    }
}
impl ::std::fmt::Debug for ReferenceLineStaticDataConfigurationBuilder {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("ReferenceLineStaticDataConfigurationBuilder");
        formatter.field("value", &"*** Sensitive Data Redacted ***");
        formatter.finish()
    }
}
