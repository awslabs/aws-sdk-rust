// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The logarithmic axis scale setup.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AxisLogarithmicScale {
    /// <p>The base setup of a logarithmic axis scale.</p>
    #[doc(hidden)]
    pub base: std::option::Option<f64>,
}
impl AxisLogarithmicScale {
    /// <p>The base setup of a logarithmic axis scale.</p>
    pub fn base(&self) -> std::option::Option<f64> {
        self.base
    }
}
impl AxisLogarithmicScale {
    /// Creates a new builder-style object to manufacture [`AxisLogarithmicScale`](crate::types::AxisLogarithmicScale).
    pub fn builder() -> crate::types::builders::AxisLogarithmicScaleBuilder {
        crate::types::builders::AxisLogarithmicScaleBuilder::default()
    }
}

/// A builder for [`AxisLogarithmicScale`](crate::types::AxisLogarithmicScale).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AxisLogarithmicScaleBuilder {
    pub(crate) base: std::option::Option<f64>,
}
impl AxisLogarithmicScaleBuilder {
    /// <p>The base setup of a logarithmic axis scale.</p>
    pub fn base(mut self, input: f64) -> Self {
        self.base = Some(input);
        self
    }
    /// <p>The base setup of a logarithmic axis scale.</p>
    pub fn set_base(mut self, input: std::option::Option<f64>) -> Self {
        self.base = input;
        self
    }
    /// Consumes the builder and constructs a [`AxisLogarithmicScale`](crate::types::AxisLogarithmicScale).
    pub fn build(self) -> crate::types::AxisLogarithmicScale {
        crate::types::AxisLogarithmicScale { base: self.base }
    }
}
