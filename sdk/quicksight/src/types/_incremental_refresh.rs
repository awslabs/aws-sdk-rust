// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The incremental refresh configuration for a dataset.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct IncrementalRefresh {
    /// <p>The lookback window setup for an incremental refresh configuration.</p>
    pub lookback_window: ::std::option::Option<crate::types::LookbackWindow>,
}
impl IncrementalRefresh {
    /// <p>The lookback window setup for an incremental refresh configuration.</p>
    pub fn lookback_window(&self) -> ::std::option::Option<&crate::types::LookbackWindow> {
        self.lookback_window.as_ref()
    }
}
impl IncrementalRefresh {
    /// Creates a new builder-style object to manufacture [`IncrementalRefresh`](crate::types::IncrementalRefresh).
    pub fn builder() -> crate::types::builders::IncrementalRefreshBuilder {
        crate::types::builders::IncrementalRefreshBuilder::default()
    }
}

/// A builder for [`IncrementalRefresh`](crate::types::IncrementalRefresh).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct IncrementalRefreshBuilder {
    pub(crate) lookback_window: ::std::option::Option<crate::types::LookbackWindow>,
}
impl IncrementalRefreshBuilder {
    /// <p>The lookback window setup for an incremental refresh configuration.</p>
    /// This field is required.
    pub fn lookback_window(mut self, input: crate::types::LookbackWindow) -> Self {
        self.lookback_window = ::std::option::Option::Some(input);
        self
    }
    /// <p>The lookback window setup for an incremental refresh configuration.</p>
    pub fn set_lookback_window(mut self, input: ::std::option::Option<crate::types::LookbackWindow>) -> Self {
        self.lookback_window = input;
        self
    }
    /// <p>The lookback window setup for an incremental refresh configuration.</p>
    pub fn get_lookback_window(&self) -> &::std::option::Option<crate::types::LookbackWindow> {
        &self.lookback_window
    }
    /// Consumes the builder and constructs a [`IncrementalRefresh`](crate::types::IncrementalRefresh).
    pub fn build(self) -> crate::types::IncrementalRefresh {
        crate::types::IncrementalRefresh {
            lookback_window: self.lookback_window,
        }
    }
}
