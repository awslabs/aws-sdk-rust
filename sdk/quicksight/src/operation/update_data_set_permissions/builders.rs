// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub use crate::operation::update_data_set_permissions::_update_data_set_permissions_output::UpdateDataSetPermissionsOutputBuilder;

pub use crate::operation::update_data_set_permissions::_update_data_set_permissions_input::UpdateDataSetPermissionsInputBuilder;

/// Fluent builder constructing a request to `UpdateDataSetPermissions`.
///
/// <p>Updates the permissions on a dataset.</p>
/// <p>The permissions resource is <code>arn:aws:quicksight:region:aws-account-id:dataset/data-set-id</code>.</p>
#[derive(std::clone::Clone, std::fmt::Debug)]
pub struct UpdateDataSetPermissionsFluentBuilder {
                handle: std::sync::Arc<crate::client::Handle>,
                inner: crate::operation::update_data_set_permissions::builders::UpdateDataSetPermissionsInputBuilder
            }
impl UpdateDataSetPermissionsFluentBuilder {
    /// Creates a new `UpdateDataSetPermissions`.
    pub(crate) fn new(handle: std::sync::Arc<crate::client::Handle>) -> Self {
        Self {
            handle,
            inner: Default::default(),
        }
    }

    /// Consume this builder, creating a customizable operation that can be modified before being
    /// sent. The operation's inner [http::Request] can be modified as well.
    pub async fn customize(
        self,
    ) -> std::result::Result<
        crate::client::customize::CustomizableOperation<
            crate::operation::update_data_set_permissions::UpdateDataSetPermissions,
            aws_http::retry::AwsResponseRetryClassifier,
        >,
        aws_smithy_http::result::SdkError<
            crate::operation::update_data_set_permissions::UpdateDataSetPermissionsError,
        >,
    > {
        let handle = self.handle.clone();
        let operation = self
            .inner
            .build()
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?
            .make_operation(&handle.conf)
            .await
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?;
        Ok(crate::client::customize::CustomizableOperation { handle, operation })
    }

    /// Sends the request and returns the response.
    ///
    /// If an error occurs, an `SdkError` will be returned with additional details that
    /// can be matched against.
    ///
    /// By default, any retryable failures will be retried twice. Retry behavior
    /// is configurable with the [RetryConfig](aws_smithy_types::retry::RetryConfig), which can be
    /// set when configuring the client.
    pub async fn send(
        self,
    ) -> std::result::Result<
        crate::operation::update_data_set_permissions::UpdateDataSetPermissionsOutput,
        aws_smithy_http::result::SdkError<
            crate::operation::update_data_set_permissions::UpdateDataSetPermissionsError,
        >,
    > {
        let op = self
            .inner
            .build()
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?
            .make_operation(&self.handle.conf)
            .await
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?;
        self.handle.client.call(op).await
    }
    /// <p>The Amazon Web Services account ID.</p>
    pub fn aws_account_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.inner = self.inner.aws_account_id(input.into());
        self
    }
    /// <p>The Amazon Web Services account ID.</p>
    pub fn set_aws_account_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.inner = self.inner.set_aws_account_id(input);
        self
    }
    /// <p>The ID for the dataset whose permissions you want to update. This ID is unique per Amazon Web Services Region for each Amazon Web Services account.</p>
    pub fn data_set_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.inner = self.inner.data_set_id(input.into());
        self
    }
    /// <p>The ID for the dataset whose permissions you want to update. This ID is unique per Amazon Web Services Region for each Amazon Web Services account.</p>
    pub fn set_data_set_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.inner = self.inner.set_data_set_id(input);
        self
    }
    /// Appends an item to `GrantPermissions`.
    ///
    /// To override the contents of this collection use [`set_grant_permissions`](Self::set_grant_permissions).
    ///
    /// <p>The resource permissions that you want to grant to the dataset.</p>
    pub fn grant_permissions(mut self, input: crate::types::ResourcePermission) -> Self {
        self.inner = self.inner.grant_permissions(input);
        self
    }
    /// <p>The resource permissions that you want to grant to the dataset.</p>
    pub fn set_grant_permissions(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::ResourcePermission>>,
    ) -> Self {
        self.inner = self.inner.set_grant_permissions(input);
        self
    }
    /// Appends an item to `RevokePermissions`.
    ///
    /// To override the contents of this collection use [`set_revoke_permissions`](Self::set_revoke_permissions).
    ///
    /// <p>The resource permissions that you want to revoke from the dataset.</p>
    pub fn revoke_permissions(mut self, input: crate::types::ResourcePermission) -> Self {
        self.inner = self.inner.revoke_permissions(input);
        self
    }
    /// <p>The resource permissions that you want to revoke from the dataset.</p>
    pub fn set_revoke_permissions(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::ResourcePermission>>,
    ) -> Self {
        self.inner = self.inner.set_revoke_permissions(input);
        self
    }
}
