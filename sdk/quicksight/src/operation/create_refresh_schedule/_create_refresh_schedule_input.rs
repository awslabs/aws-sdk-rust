// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct CreateRefreshScheduleInput {
    /// <p>The ID of the dataset.</p>
    pub data_set_id: ::std::option::Option<::std::string::String>,
    /// <p>The Amazon Web Services account ID.</p>
    pub aws_account_id: ::std::option::Option<::std::string::String>,
    /// <p>The refresh schedule.</p>
    pub schedule: ::std::option::Option<crate::types::RefreshSchedule>,
}
impl CreateRefreshScheduleInput {
    /// <p>The ID of the dataset.</p>
    pub fn data_set_id(&self) -> ::std::option::Option<&str> {
        self.data_set_id.as_deref()
    }
    /// <p>The Amazon Web Services account ID.</p>
    pub fn aws_account_id(&self) -> ::std::option::Option<&str> {
        self.aws_account_id.as_deref()
    }
    /// <p>The refresh schedule.</p>
    pub fn schedule(&self) -> ::std::option::Option<&crate::types::RefreshSchedule> {
        self.schedule.as_ref()
    }
}
impl CreateRefreshScheduleInput {
    /// Creates a new builder-style object to manufacture [`CreateRefreshScheduleInput`](crate::operation::create_refresh_schedule::CreateRefreshScheduleInput).
    pub fn builder() -> crate::operation::create_refresh_schedule::builders::CreateRefreshScheduleInputBuilder {
        crate::operation::create_refresh_schedule::builders::CreateRefreshScheduleInputBuilder::default()
    }
}

/// A builder for [`CreateRefreshScheduleInput`](crate::operation::create_refresh_schedule::CreateRefreshScheduleInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct CreateRefreshScheduleInputBuilder {
    pub(crate) data_set_id: ::std::option::Option<::std::string::String>,
    pub(crate) aws_account_id: ::std::option::Option<::std::string::String>,
    pub(crate) schedule: ::std::option::Option<crate::types::RefreshSchedule>,
}
impl CreateRefreshScheduleInputBuilder {
    /// <p>The ID of the dataset.</p>
    /// This field is required.
    pub fn data_set_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.data_set_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of the dataset.</p>
    pub fn set_data_set_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.data_set_id = input;
        self
    }
    /// <p>The ID of the dataset.</p>
    pub fn get_data_set_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.data_set_id
    }
    /// <p>The Amazon Web Services account ID.</p>
    /// This field is required.
    pub fn aws_account_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.aws_account_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Web Services account ID.</p>
    pub fn set_aws_account_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.aws_account_id = input;
        self
    }
    /// <p>The Amazon Web Services account ID.</p>
    pub fn get_aws_account_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.aws_account_id
    }
    /// <p>The refresh schedule.</p>
    /// This field is required.
    pub fn schedule(mut self, input: crate::types::RefreshSchedule) -> Self {
        self.schedule = ::std::option::Option::Some(input);
        self
    }
    /// <p>The refresh schedule.</p>
    pub fn set_schedule(mut self, input: ::std::option::Option<crate::types::RefreshSchedule>) -> Self {
        self.schedule = input;
        self
    }
    /// <p>The refresh schedule.</p>
    pub fn get_schedule(&self) -> &::std::option::Option<crate::types::RefreshSchedule> {
        &self.schedule
    }
    /// Consumes the builder and constructs a [`CreateRefreshScheduleInput`](crate::operation::create_refresh_schedule::CreateRefreshScheduleInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::create_refresh_schedule::CreateRefreshScheduleInput, ::aws_smithy_types::error::operation::BuildError>
    {
        ::std::result::Result::Ok(crate::operation::create_refresh_schedule::CreateRefreshScheduleInput {
            data_set_id: self.data_set_id,
            aws_account_id: self.aws_account_id,
            schedule: self.schedule,
        })
    }
}
