// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DeleteRoleCustomPermissionInput {
    /// <p>The role that you want to remove permissions from.</p>
    pub role: ::std::option::Option<crate::types::Role>,
    /// <p>The ID for the Amazon Web Services account that the group is in. Currently, you use the ID for the Amazon Web Services account that contains your Amazon Quick Sight account.</p>
    pub aws_account_id: ::std::option::Option<::std::string::String>,
    /// <p>The namespace that includes the role.</p>
    pub namespace: ::std::option::Option<::std::string::String>,
}
impl DeleteRoleCustomPermissionInput {
    /// <p>The role that you want to remove permissions from.</p>
    pub fn role(&self) -> ::std::option::Option<&crate::types::Role> {
        self.role.as_ref()
    }
    /// <p>The ID for the Amazon Web Services account that the group is in. Currently, you use the ID for the Amazon Web Services account that contains your Amazon Quick Sight account.</p>
    pub fn aws_account_id(&self) -> ::std::option::Option<&str> {
        self.aws_account_id.as_deref()
    }
    /// <p>The namespace that includes the role.</p>
    pub fn namespace(&self) -> ::std::option::Option<&str> {
        self.namespace.as_deref()
    }
}
impl DeleteRoleCustomPermissionInput {
    /// Creates a new builder-style object to manufacture [`DeleteRoleCustomPermissionInput`](crate::operation::delete_role_custom_permission::DeleteRoleCustomPermissionInput).
    pub fn builder() -> crate::operation::delete_role_custom_permission::builders::DeleteRoleCustomPermissionInputBuilder {
        crate::operation::delete_role_custom_permission::builders::DeleteRoleCustomPermissionInputBuilder::default()
    }
}

/// A builder for [`DeleteRoleCustomPermissionInput`](crate::operation::delete_role_custom_permission::DeleteRoleCustomPermissionInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct DeleteRoleCustomPermissionInputBuilder {
    pub(crate) role: ::std::option::Option<crate::types::Role>,
    pub(crate) aws_account_id: ::std::option::Option<::std::string::String>,
    pub(crate) namespace: ::std::option::Option<::std::string::String>,
}
impl DeleteRoleCustomPermissionInputBuilder {
    /// <p>The role that you want to remove permissions from.</p>
    /// This field is required.
    pub fn role(mut self, input: crate::types::Role) -> Self {
        self.role = ::std::option::Option::Some(input);
        self
    }
    /// <p>The role that you want to remove permissions from.</p>
    pub fn set_role(mut self, input: ::std::option::Option<crate::types::Role>) -> Self {
        self.role = input;
        self
    }
    /// <p>The role that you want to remove permissions from.</p>
    pub fn get_role(&self) -> &::std::option::Option<crate::types::Role> {
        &self.role
    }
    /// <p>The ID for the Amazon Web Services account that the group is in. Currently, you use the ID for the Amazon Web Services account that contains your Amazon Quick Sight account.</p>
    /// This field is required.
    pub fn aws_account_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.aws_account_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID for the Amazon Web Services account that the group is in. Currently, you use the ID for the Amazon Web Services account that contains your Amazon Quick Sight account.</p>
    pub fn set_aws_account_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.aws_account_id = input;
        self
    }
    /// <p>The ID for the Amazon Web Services account that the group is in. Currently, you use the ID for the Amazon Web Services account that contains your Amazon Quick Sight account.</p>
    pub fn get_aws_account_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.aws_account_id
    }
    /// <p>The namespace that includes the role.</p>
    /// This field is required.
    pub fn namespace(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.namespace = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The namespace that includes the role.</p>
    pub fn set_namespace(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.namespace = input;
        self
    }
    /// <p>The namespace that includes the role.</p>
    pub fn get_namespace(&self) -> &::std::option::Option<::std::string::String> {
        &self.namespace
    }
    /// Consumes the builder and constructs a [`DeleteRoleCustomPermissionInput`](crate::operation::delete_role_custom_permission::DeleteRoleCustomPermissionInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::delete_role_custom_permission::DeleteRoleCustomPermissionInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::delete_role_custom_permission::DeleteRoleCustomPermissionInput {
            role: self.role,
            aws_account_id: self.aws_account_id,
            namespace: self.namespace,
        })
    }
}
