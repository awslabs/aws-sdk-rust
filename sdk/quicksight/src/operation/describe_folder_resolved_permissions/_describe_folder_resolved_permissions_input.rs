// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DescribeFolderResolvedPermissionsInput {
    /// <p>The ID for the Amazon Web Services account that contains the folder.</p>
    #[doc(hidden)]
    pub aws_account_id: std::option::Option<std::string::String>,
    /// <p>The ID of the folder.</p>
    #[doc(hidden)]
    pub folder_id: std::option::Option<std::string::String>,
}
impl DescribeFolderResolvedPermissionsInput {
    /// <p>The ID for the Amazon Web Services account that contains the folder.</p>
    pub fn aws_account_id(&self) -> std::option::Option<&str> {
        self.aws_account_id.as_deref()
    }
    /// <p>The ID of the folder.</p>
    pub fn folder_id(&self) -> std::option::Option<&str> {
        self.folder_id.as_deref()
    }
}
impl DescribeFolderResolvedPermissionsInput {
    /// Creates a new builder-style object to manufacture [`DescribeFolderResolvedPermissionsInput`](crate::operation::describe_folder_resolved_permissions::DescribeFolderResolvedPermissionsInput).
    pub fn builder() -> crate::operation::describe_folder_resolved_permissions::builders::DescribeFolderResolvedPermissionsInputBuilder{
        crate::operation::describe_folder_resolved_permissions::builders::DescribeFolderResolvedPermissionsInputBuilder::default()
    }
}

/// A builder for [`DescribeFolderResolvedPermissionsInput`](crate::operation::describe_folder_resolved_permissions::DescribeFolderResolvedPermissionsInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DescribeFolderResolvedPermissionsInputBuilder {
    pub(crate) aws_account_id: std::option::Option<std::string::String>,
    pub(crate) folder_id: std::option::Option<std::string::String>,
}
impl DescribeFolderResolvedPermissionsInputBuilder {
    /// <p>The ID for the Amazon Web Services account that contains the folder.</p>
    pub fn aws_account_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.aws_account_id = Some(input.into());
        self
    }
    /// <p>The ID for the Amazon Web Services account that contains the folder.</p>
    pub fn set_aws_account_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.aws_account_id = input;
        self
    }
    /// <p>The ID of the folder.</p>
    pub fn folder_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.folder_id = Some(input.into());
        self
    }
    /// <p>The ID of the folder.</p>
    pub fn set_folder_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.folder_id = input;
        self
    }
    /// Consumes the builder and constructs a [`DescribeFolderResolvedPermissionsInput`](crate::operation::describe_folder_resolved_permissions::DescribeFolderResolvedPermissionsInput).
    pub fn build(self) -> Result<crate::operation::describe_folder_resolved_permissions::DescribeFolderResolvedPermissionsInput, aws_smithy_http::operation::error::BuildError>{
        Ok(
            crate::operation::describe_folder_resolved_permissions::DescribeFolderResolvedPermissionsInput {
                aws_account_id: self.aws_account_id
                ,
                folder_id: self.folder_id
                ,
            }
        )
    }
}
