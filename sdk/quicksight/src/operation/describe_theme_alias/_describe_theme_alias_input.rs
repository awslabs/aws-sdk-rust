// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DescribeThemeAliasInput {
    /// <p>The ID of the Amazon Web Services account that contains the theme alias that you're describing.</p>
    #[doc(hidden)]
    pub aws_account_id: std::option::Option<std::string::String>,
    /// <p>The ID for the theme.</p>
    #[doc(hidden)]
    pub theme_id: std::option::Option<std::string::String>,
    /// <p>The name of the theme alias that you want to describe.</p>
    #[doc(hidden)]
    pub alias_name: std::option::Option<std::string::String>,
}
impl DescribeThemeAliasInput {
    /// <p>The ID of the Amazon Web Services account that contains the theme alias that you're describing.</p>
    pub fn aws_account_id(&self) -> std::option::Option<&str> {
        self.aws_account_id.as_deref()
    }
    /// <p>The ID for the theme.</p>
    pub fn theme_id(&self) -> std::option::Option<&str> {
        self.theme_id.as_deref()
    }
    /// <p>The name of the theme alias that you want to describe.</p>
    pub fn alias_name(&self) -> std::option::Option<&str> {
        self.alias_name.as_deref()
    }
}
impl DescribeThemeAliasInput {
    /// Creates a new builder-style object to manufacture [`DescribeThemeAliasInput`](crate::operation::describe_theme_alias::DescribeThemeAliasInput).
    pub fn builder(
    ) -> crate::operation::describe_theme_alias::builders::DescribeThemeAliasInputBuilder {
        crate::operation::describe_theme_alias::builders::DescribeThemeAliasInputBuilder::default()
    }
}

/// A builder for [`DescribeThemeAliasInput`](crate::operation::describe_theme_alias::DescribeThemeAliasInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DescribeThemeAliasInputBuilder {
    pub(crate) aws_account_id: std::option::Option<std::string::String>,
    pub(crate) theme_id: std::option::Option<std::string::String>,
    pub(crate) alias_name: std::option::Option<std::string::String>,
}
impl DescribeThemeAliasInputBuilder {
    /// <p>The ID of the Amazon Web Services account that contains the theme alias that you're describing.</p>
    pub fn aws_account_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.aws_account_id = Some(input.into());
        self
    }
    /// <p>The ID of the Amazon Web Services account that contains the theme alias that you're describing.</p>
    pub fn set_aws_account_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.aws_account_id = input;
        self
    }
    /// <p>The ID for the theme.</p>
    pub fn theme_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.theme_id = Some(input.into());
        self
    }
    /// <p>The ID for the theme.</p>
    pub fn set_theme_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.theme_id = input;
        self
    }
    /// <p>The name of the theme alias that you want to describe.</p>
    pub fn alias_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.alias_name = Some(input.into());
        self
    }
    /// <p>The name of the theme alias that you want to describe.</p>
    pub fn set_alias_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.alias_name = input;
        self
    }
    /// Consumes the builder and constructs a [`DescribeThemeAliasInput`](crate::operation::describe_theme_alias::DescribeThemeAliasInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::describe_theme_alias::DescribeThemeAliasInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::describe_theme_alias::DescribeThemeAliasInput {
                aws_account_id: self.aws_account_id,
                theme_id: self.theme_id,
                alias_name: self.alias_name,
            },
        )
    }
}
