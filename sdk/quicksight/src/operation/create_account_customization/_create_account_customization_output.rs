// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct CreateAccountCustomizationOutput {
    /// <p>The Amazon Resource Name (ARN) for the customization that you created for this Amazon Web Services account.</p>
    #[doc(hidden)]
    pub arn: std::option::Option<std::string::String>,
    /// <p>The ID for the Amazon Web Services account that you want to customize Amazon QuickSight for.</p>
    #[doc(hidden)]
    pub aws_account_id: std::option::Option<std::string::String>,
    /// <p>The namespace associated with the customization you're creating. </p>
    #[doc(hidden)]
    pub namespace: std::option::Option<std::string::String>,
    /// <p>The Amazon QuickSight customizations you're adding in the current Amazon Web Services Region. </p>
    #[doc(hidden)]
    pub account_customization: std::option::Option<crate::types::AccountCustomization>,
    /// <p>The Amazon Web Services request ID for this operation.</p>
    #[doc(hidden)]
    pub request_id: std::option::Option<std::string::String>,
    /// <p>The HTTP status of the request.</p>
    #[doc(hidden)]
    pub status: i32,
    _request_id: Option<String>,
}
impl CreateAccountCustomizationOutput {
    /// <p>The Amazon Resource Name (ARN) for the customization that you created for this Amazon Web Services account.</p>
    pub fn arn(&self) -> std::option::Option<&str> {
        self.arn.as_deref()
    }
    /// <p>The ID for the Amazon Web Services account that you want to customize Amazon QuickSight for.</p>
    pub fn aws_account_id(&self) -> std::option::Option<&str> {
        self.aws_account_id.as_deref()
    }
    /// <p>The namespace associated with the customization you're creating. </p>
    pub fn namespace(&self) -> std::option::Option<&str> {
        self.namespace.as_deref()
    }
    /// <p>The Amazon QuickSight customizations you're adding in the current Amazon Web Services Region. </p>
    pub fn account_customization(
        &self,
    ) -> std::option::Option<&crate::types::AccountCustomization> {
        self.account_customization.as_ref()
    }
    /// <p>The Amazon Web Services request ID for this operation.</p>
    pub fn request_id(&self) -> std::option::Option<&str> {
        self.request_id.as_deref()
    }
    /// <p>The HTTP status of the request.</p>
    pub fn status(&self) -> i32 {
        self.status
    }
}
impl aws_http::request_id::RequestId for CreateAccountCustomizationOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl CreateAccountCustomizationOutput {
    /// Creates a new builder-style object to manufacture [`CreateAccountCustomizationOutput`](crate::operation::create_account_customization::CreateAccountCustomizationOutput).
    pub fn builder() -> crate::operation::create_account_customization::builders::CreateAccountCustomizationOutputBuilder{
        crate::operation::create_account_customization::builders::CreateAccountCustomizationOutputBuilder::default()
    }
}

/// A builder for [`CreateAccountCustomizationOutput`](crate::operation::create_account_customization::CreateAccountCustomizationOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct CreateAccountCustomizationOutputBuilder {
    pub(crate) arn: std::option::Option<std::string::String>,
    pub(crate) aws_account_id: std::option::Option<std::string::String>,
    pub(crate) namespace: std::option::Option<std::string::String>,
    pub(crate) account_customization: std::option::Option<crate::types::AccountCustomization>,
    pub(crate) request_id: std::option::Option<std::string::String>,
    pub(crate) status: std::option::Option<i32>,
    _request_id: Option<String>,
}
impl CreateAccountCustomizationOutputBuilder {
    /// <p>The Amazon Resource Name (ARN) for the customization that you created for this Amazon Web Services account.</p>
    pub fn arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.arn = Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) for the customization that you created for this Amazon Web Services account.</p>
    pub fn set_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.arn = input;
        self
    }
    /// <p>The ID for the Amazon Web Services account that you want to customize Amazon QuickSight for.</p>
    pub fn aws_account_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.aws_account_id = Some(input.into());
        self
    }
    /// <p>The ID for the Amazon Web Services account that you want to customize Amazon QuickSight for.</p>
    pub fn set_aws_account_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.aws_account_id = input;
        self
    }
    /// <p>The namespace associated with the customization you're creating. </p>
    pub fn namespace(mut self, input: impl Into<std::string::String>) -> Self {
        self.namespace = Some(input.into());
        self
    }
    /// <p>The namespace associated with the customization you're creating. </p>
    pub fn set_namespace(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.namespace = input;
        self
    }
    /// <p>The Amazon QuickSight customizations you're adding in the current Amazon Web Services Region. </p>
    pub fn account_customization(mut self, input: crate::types::AccountCustomization) -> Self {
        self.account_customization = Some(input);
        self
    }
    /// <p>The Amazon QuickSight customizations you're adding in the current Amazon Web Services Region. </p>
    pub fn set_account_customization(
        mut self,
        input: std::option::Option<crate::types::AccountCustomization>,
    ) -> Self {
        self.account_customization = input;
        self
    }
    /// <p>The Amazon Web Services request ID for this operation.</p>
    pub fn request_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.request_id = Some(input.into());
        self
    }
    /// <p>The Amazon Web Services request ID for this operation.</p>
    pub fn set_request_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.request_id = input;
        self
    }
    /// <p>The HTTP status of the request.</p>
    pub fn status(mut self, input: i32) -> Self {
        self.status = Some(input);
        self
    }
    /// <p>The HTTP status of the request.</p>
    pub fn set_status(mut self, input: std::option::Option<i32>) -> Self {
        self.status = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`CreateAccountCustomizationOutput`](crate::operation::create_account_customization::CreateAccountCustomizationOutput).
    pub fn build(
        self,
    ) -> crate::operation::create_account_customization::CreateAccountCustomizationOutput {
        crate::operation::create_account_customization::CreateAccountCustomizationOutput {
            arn: self.arn,
            aws_account_id: self.aws_account_id,
            namespace: self.namespace,
            account_customization: self.account_customization,
            request_id: self.request_id,
            status: self.status.unwrap_or_default(),
            _request_id: self._request_id,
        }
    }
}
