// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct UpdateAccountCustomizationInput {
    /// <p>The ID for the Amazon Web Services account that you want to update Amazon QuickSight customizations for.</p>
    #[doc(hidden)]
    pub aws_account_id: std::option::Option<std::string::String>,
    /// <p>The namespace that you want to update Amazon QuickSight customizations for.</p>
    #[doc(hidden)]
    pub namespace: std::option::Option<std::string::String>,
    /// <p>The Amazon QuickSight customizations you're updating in the current Amazon Web Services Region. </p>
    #[doc(hidden)]
    pub account_customization: std::option::Option<crate::types::AccountCustomization>,
}
impl UpdateAccountCustomizationInput {
    /// <p>The ID for the Amazon Web Services account that you want to update Amazon QuickSight customizations for.</p>
    pub fn aws_account_id(&self) -> std::option::Option<&str> {
        self.aws_account_id.as_deref()
    }
    /// <p>The namespace that you want to update Amazon QuickSight customizations for.</p>
    pub fn namespace(&self) -> std::option::Option<&str> {
        self.namespace.as_deref()
    }
    /// <p>The Amazon QuickSight customizations you're updating in the current Amazon Web Services Region. </p>
    pub fn account_customization(
        &self,
    ) -> std::option::Option<&crate::types::AccountCustomization> {
        self.account_customization.as_ref()
    }
}
impl UpdateAccountCustomizationInput {
    /// Creates a new builder-style object to manufacture [`UpdateAccountCustomizationInput`](crate::operation::update_account_customization::UpdateAccountCustomizationInput).
    pub fn builder() -> crate::operation::update_account_customization::builders::UpdateAccountCustomizationInputBuilder{
        crate::operation::update_account_customization::builders::UpdateAccountCustomizationInputBuilder::default()
    }
}

/// A builder for [`UpdateAccountCustomizationInput`](crate::operation::update_account_customization::UpdateAccountCustomizationInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct UpdateAccountCustomizationInputBuilder {
    pub(crate) aws_account_id: std::option::Option<std::string::String>,
    pub(crate) namespace: std::option::Option<std::string::String>,
    pub(crate) account_customization: std::option::Option<crate::types::AccountCustomization>,
}
impl UpdateAccountCustomizationInputBuilder {
    /// <p>The ID for the Amazon Web Services account that you want to update Amazon QuickSight customizations for.</p>
    pub fn aws_account_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.aws_account_id = Some(input.into());
        self
    }
    /// <p>The ID for the Amazon Web Services account that you want to update Amazon QuickSight customizations for.</p>
    pub fn set_aws_account_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.aws_account_id = input;
        self
    }
    /// <p>The namespace that you want to update Amazon QuickSight customizations for.</p>
    pub fn namespace(mut self, input: impl Into<std::string::String>) -> Self {
        self.namespace = Some(input.into());
        self
    }
    /// <p>The namespace that you want to update Amazon QuickSight customizations for.</p>
    pub fn set_namespace(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.namespace = input;
        self
    }
    /// <p>The Amazon QuickSight customizations you're updating in the current Amazon Web Services Region. </p>
    pub fn account_customization(mut self, input: crate::types::AccountCustomization) -> Self {
        self.account_customization = Some(input);
        self
    }
    /// <p>The Amazon QuickSight customizations you're updating in the current Amazon Web Services Region. </p>
    pub fn set_account_customization(
        mut self,
        input: std::option::Option<crate::types::AccountCustomization>,
    ) -> Self {
        self.account_customization = input;
        self
    }
    /// Consumes the builder and constructs a [`UpdateAccountCustomizationInput`](crate::operation::update_account_customization::UpdateAccountCustomizationInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::update_account_customization::UpdateAccountCustomizationInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::update_account_customization::UpdateAccountCustomizationInput {
                aws_account_id: self.aws_account_id,
                namespace: self.namespace,
                account_customization: self.account_customization,
            },
        )
    }
}
