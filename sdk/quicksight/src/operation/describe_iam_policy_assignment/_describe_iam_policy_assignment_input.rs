// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DescribeIamPolicyAssignmentInput {
    /// <p>The ID of the Amazon Web Services account that contains the assignment that you want to describe.</p>
    #[doc(hidden)]
    pub aws_account_id: std::option::Option<std::string::String>,
    /// <p>The name of the assignment, also called a rule.</p>
    #[doc(hidden)]
    pub assignment_name: std::option::Option<std::string::String>,
    /// <p>The namespace that contains the assignment.</p>
    #[doc(hidden)]
    pub namespace: std::option::Option<std::string::String>,
}
impl DescribeIamPolicyAssignmentInput {
    /// <p>The ID of the Amazon Web Services account that contains the assignment that you want to describe.</p>
    pub fn aws_account_id(&self) -> std::option::Option<&str> {
        self.aws_account_id.as_deref()
    }
    /// <p>The name of the assignment, also called a rule.</p>
    pub fn assignment_name(&self) -> std::option::Option<&str> {
        self.assignment_name.as_deref()
    }
    /// <p>The namespace that contains the assignment.</p>
    pub fn namespace(&self) -> std::option::Option<&str> {
        self.namespace.as_deref()
    }
}
impl DescribeIamPolicyAssignmentInput {
    /// Creates a new builder-style object to manufacture [`DescribeIamPolicyAssignmentInput`](crate::operation::describe_iam_policy_assignment::DescribeIamPolicyAssignmentInput).
    pub fn builder() -> crate::operation::describe_iam_policy_assignment::builders::DescribeIamPolicyAssignmentInputBuilder{
        crate::operation::describe_iam_policy_assignment::builders::DescribeIamPolicyAssignmentInputBuilder::default()
    }
}

/// A builder for [`DescribeIamPolicyAssignmentInput`](crate::operation::describe_iam_policy_assignment::DescribeIamPolicyAssignmentInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DescribeIamPolicyAssignmentInputBuilder {
    pub(crate) aws_account_id: std::option::Option<std::string::String>,
    pub(crate) assignment_name: std::option::Option<std::string::String>,
    pub(crate) namespace: std::option::Option<std::string::String>,
}
impl DescribeIamPolicyAssignmentInputBuilder {
    /// <p>The ID of the Amazon Web Services account that contains the assignment that you want to describe.</p>
    pub fn aws_account_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.aws_account_id = Some(input.into());
        self
    }
    /// <p>The ID of the Amazon Web Services account that contains the assignment that you want to describe.</p>
    pub fn set_aws_account_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.aws_account_id = input;
        self
    }
    /// <p>The name of the assignment, also called a rule.</p>
    pub fn assignment_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.assignment_name = Some(input.into());
        self
    }
    /// <p>The name of the assignment, also called a rule.</p>
    pub fn set_assignment_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.assignment_name = input;
        self
    }
    /// <p>The namespace that contains the assignment.</p>
    pub fn namespace(mut self, input: impl Into<std::string::String>) -> Self {
        self.namespace = Some(input.into());
        self
    }
    /// <p>The namespace that contains the assignment.</p>
    pub fn set_namespace(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.namespace = input;
        self
    }
    /// Consumes the builder and constructs a [`DescribeIamPolicyAssignmentInput`](crate::operation::describe_iam_policy_assignment::DescribeIamPolicyAssignmentInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::describe_iam_policy_assignment::DescribeIamPolicyAssignmentInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::describe_iam_policy_assignment::DescribeIamPolicyAssignmentInput {
                aws_account_id: self.aws_account_id,
                assignment_name: self.assignment_name,
                namespace: self.namespace,
            },
        )
    }
}
