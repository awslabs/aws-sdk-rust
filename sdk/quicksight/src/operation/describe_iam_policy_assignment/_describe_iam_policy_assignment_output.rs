// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DescribeIamPolicyAssignmentOutput {
    /// <p>Information describing the IAM policy assignment.</p>
    #[doc(hidden)]
    pub iam_policy_assignment: std::option::Option<crate::types::IamPolicyAssignment>,
    /// <p>The Amazon Web Services request ID for this operation.</p>
    #[doc(hidden)]
    pub request_id: std::option::Option<std::string::String>,
    /// <p>The HTTP status of the request.</p>
    #[doc(hidden)]
    pub status: i32,
    _request_id: Option<String>,
}
impl DescribeIamPolicyAssignmentOutput {
    /// <p>Information describing the IAM policy assignment.</p>
    pub fn iam_policy_assignment(&self) -> std::option::Option<&crate::types::IamPolicyAssignment> {
        self.iam_policy_assignment.as_ref()
    }
    /// <p>The Amazon Web Services request ID for this operation.</p>
    pub fn request_id(&self) -> std::option::Option<&str> {
        self.request_id.as_deref()
    }
    /// <p>The HTTP status of the request.</p>
    pub fn status(&self) -> i32 {
        self.status
    }
}
impl aws_http::request_id::RequestId for DescribeIamPolicyAssignmentOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl DescribeIamPolicyAssignmentOutput {
    /// Creates a new builder-style object to manufacture [`DescribeIamPolicyAssignmentOutput`](crate::operation::describe_iam_policy_assignment::DescribeIamPolicyAssignmentOutput).
    pub fn builder() -> crate::operation::describe_iam_policy_assignment::builders::DescribeIamPolicyAssignmentOutputBuilder{
        crate::operation::describe_iam_policy_assignment::builders::DescribeIamPolicyAssignmentOutputBuilder::default()
    }
}

/// A builder for [`DescribeIamPolicyAssignmentOutput`](crate::operation::describe_iam_policy_assignment::DescribeIamPolicyAssignmentOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DescribeIamPolicyAssignmentOutputBuilder {
    pub(crate) iam_policy_assignment: std::option::Option<crate::types::IamPolicyAssignment>,
    pub(crate) request_id: std::option::Option<std::string::String>,
    pub(crate) status: std::option::Option<i32>,
    _request_id: Option<String>,
}
impl DescribeIamPolicyAssignmentOutputBuilder {
    /// <p>Information describing the IAM policy assignment.</p>
    pub fn iam_policy_assignment(mut self, input: crate::types::IamPolicyAssignment) -> Self {
        self.iam_policy_assignment = Some(input);
        self
    }
    /// <p>Information describing the IAM policy assignment.</p>
    pub fn set_iam_policy_assignment(
        mut self,
        input: std::option::Option<crate::types::IamPolicyAssignment>,
    ) -> Self {
        self.iam_policy_assignment = input;
        self
    }
    /// <p>The Amazon Web Services request ID for this operation.</p>
    pub fn request_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.request_id = Some(input.into());
        self
    }
    /// <p>The Amazon Web Services request ID for this operation.</p>
    pub fn set_request_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.request_id = input;
        self
    }
    /// <p>The HTTP status of the request.</p>
    pub fn status(mut self, input: i32) -> Self {
        self.status = Some(input);
        self
    }
    /// <p>The HTTP status of the request.</p>
    pub fn set_status(mut self, input: std::option::Option<i32>) -> Self {
        self.status = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`DescribeIamPolicyAssignmentOutput`](crate::operation::describe_iam_policy_assignment::DescribeIamPolicyAssignmentOutput).
    pub fn build(
        self,
    ) -> crate::operation::describe_iam_policy_assignment::DescribeIamPolicyAssignmentOutput {
        crate::operation::describe_iam_policy_assignment::DescribeIamPolicyAssignmentOutput {
            iam_policy_assignment: self.iam_policy_assignment,
            request_id: self.request_id,
            status: self.status.unwrap_or_default(),
            _request_id: self._request_id,
        }
    }
}
