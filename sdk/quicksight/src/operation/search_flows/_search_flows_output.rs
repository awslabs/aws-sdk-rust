// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct SearchFlowsOutput {
    /// <p>The list of flows found against the search.</p>
    pub flow_summary_list: ::std::vec::Vec<crate::types::FlowSummary>,
    /// <p>The token for the next set of results, or null if there are no more results.</p>
    pub next_token: ::std::option::Option<::std::string::String>,
    /// <p>The Amazon Web Services request ID for this operation.</p>
    pub request_id: ::std::option::Option<::std::string::String>,
    /// <p>The HTTP status of the request.</p>
    pub status: i32,
    _request_id: Option<String>,
}
impl SearchFlowsOutput {
    /// <p>The list of flows found against the search.</p>
    pub fn flow_summary_list(&self) -> &[crate::types::FlowSummary] {
        use std::ops::Deref;
        self.flow_summary_list.deref()
    }
    /// <p>The token for the next set of results, or null if there are no more results.</p>
    pub fn next_token(&self) -> ::std::option::Option<&str> {
        self.next_token.as_deref()
    }
    /// <p>The Amazon Web Services request ID for this operation.</p>
    pub fn request_id(&self) -> ::std::option::Option<&str> {
        self.request_id.as_deref()
    }
    /// <p>The HTTP status of the request.</p>
    pub fn status(&self) -> i32 {
        self.status
    }
}
impl ::aws_types::request_id::RequestId for SearchFlowsOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl SearchFlowsOutput {
    /// Creates a new builder-style object to manufacture [`SearchFlowsOutput`](crate::operation::search_flows::SearchFlowsOutput).
    pub fn builder() -> crate::operation::search_flows::builders::SearchFlowsOutputBuilder {
        crate::operation::search_flows::builders::SearchFlowsOutputBuilder::default()
    }
}

/// A builder for [`SearchFlowsOutput`](crate::operation::search_flows::SearchFlowsOutput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct SearchFlowsOutputBuilder {
    pub(crate) flow_summary_list: ::std::option::Option<::std::vec::Vec<crate::types::FlowSummary>>,
    pub(crate) next_token: ::std::option::Option<::std::string::String>,
    pub(crate) request_id: ::std::option::Option<::std::string::String>,
    pub(crate) status: ::std::option::Option<i32>,
    _request_id: Option<String>,
}
impl SearchFlowsOutputBuilder {
    /// Appends an item to `flow_summary_list`.
    ///
    /// To override the contents of this collection use [`set_flow_summary_list`](Self::set_flow_summary_list).
    ///
    /// <p>The list of flows found against the search.</p>
    pub fn flow_summary_list(mut self, input: crate::types::FlowSummary) -> Self {
        let mut v = self.flow_summary_list.unwrap_or_default();
        v.push(input);
        self.flow_summary_list = ::std::option::Option::Some(v);
        self
    }
    /// <p>The list of flows found against the search.</p>
    pub fn set_flow_summary_list(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::FlowSummary>>) -> Self {
        self.flow_summary_list = input;
        self
    }
    /// <p>The list of flows found against the search.</p>
    pub fn get_flow_summary_list(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::FlowSummary>> {
        &self.flow_summary_list
    }
    /// <p>The token for the next set of results, or null if there are no more results.</p>
    pub fn next_token(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.next_token = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The token for the next set of results, or null if there are no more results.</p>
    pub fn set_next_token(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// <p>The token for the next set of results, or null if there are no more results.</p>
    pub fn get_next_token(&self) -> &::std::option::Option<::std::string::String> {
        &self.next_token
    }
    /// <p>The Amazon Web Services request ID for this operation.</p>
    pub fn request_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.request_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Web Services request ID for this operation.</p>
    pub fn set_request_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.request_id = input;
        self
    }
    /// <p>The Amazon Web Services request ID for this operation.</p>
    pub fn get_request_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.request_id
    }
    /// <p>The HTTP status of the request.</p>
    pub fn status(mut self, input: i32) -> Self {
        self.status = ::std::option::Option::Some(input);
        self
    }
    /// <p>The HTTP status of the request.</p>
    pub fn set_status(mut self, input: ::std::option::Option<i32>) -> Self {
        self.status = input;
        self
    }
    /// <p>The HTTP status of the request.</p>
    pub fn get_status(&self) -> &::std::option::Option<i32> {
        &self.status
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`SearchFlowsOutput`](crate::operation::search_flows::SearchFlowsOutput).
    /// This method will fail if any of the following fields are not set:
    /// - [`flow_summary_list`](crate::operation::search_flows::builders::SearchFlowsOutputBuilder::flow_summary_list)
    pub fn build(self) -> ::std::result::Result<crate::operation::search_flows::SearchFlowsOutput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::operation::search_flows::SearchFlowsOutput {
            flow_summary_list: self.flow_summary_list.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "flow_summary_list",
                    "flow_summary_list was not specified but it is required when building SearchFlowsOutput",
                )
            })?,
            next_token: self.next_token,
            request_id: self.request_id,
            status: self.status.unwrap_or_default(),
            _request_id: self._request_id,
        })
    }
}
