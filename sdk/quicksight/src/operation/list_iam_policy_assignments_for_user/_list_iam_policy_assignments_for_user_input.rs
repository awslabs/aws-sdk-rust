// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ListIamPolicyAssignmentsForUserInput {
    /// <p>The ID of the Amazon Web Services account that contains the assignments.</p>
    #[doc(hidden)]
    pub aws_account_id: std::option::Option<std::string::String>,
    /// <p>The name of the user.</p>
    #[doc(hidden)]
    pub user_name: std::option::Option<std::string::String>,
    /// <p>The token for the next set of results, or null if there are no more results.</p>
    #[doc(hidden)]
    pub next_token: std::option::Option<std::string::String>,
    /// <p>The maximum number of results to be returned per request.</p>
    #[doc(hidden)]
    pub max_results: std::option::Option<i32>,
    /// <p>The namespace of the assignment.</p>
    #[doc(hidden)]
    pub namespace: std::option::Option<std::string::String>,
}
impl ListIamPolicyAssignmentsForUserInput {
    /// <p>The ID of the Amazon Web Services account that contains the assignments.</p>
    pub fn aws_account_id(&self) -> std::option::Option<&str> {
        self.aws_account_id.as_deref()
    }
    /// <p>The name of the user.</p>
    pub fn user_name(&self) -> std::option::Option<&str> {
        self.user_name.as_deref()
    }
    /// <p>The token for the next set of results, or null if there are no more results.</p>
    pub fn next_token(&self) -> std::option::Option<&str> {
        self.next_token.as_deref()
    }
    /// <p>The maximum number of results to be returned per request.</p>
    pub fn max_results(&self) -> std::option::Option<i32> {
        self.max_results
    }
    /// <p>The namespace of the assignment.</p>
    pub fn namespace(&self) -> std::option::Option<&str> {
        self.namespace.as_deref()
    }
}
impl ListIamPolicyAssignmentsForUserInput {
    /// Creates a new builder-style object to manufacture [`ListIamPolicyAssignmentsForUserInput`](crate::operation::list_iam_policy_assignments_for_user::ListIamPolicyAssignmentsForUserInput).
    pub fn builder() -> crate::operation::list_iam_policy_assignments_for_user::builders::ListIamPolicyAssignmentsForUserInputBuilder{
        crate::operation::list_iam_policy_assignments_for_user::builders::ListIamPolicyAssignmentsForUserInputBuilder::default()
    }
}

/// A builder for [`ListIamPolicyAssignmentsForUserInput`](crate::operation::list_iam_policy_assignments_for_user::ListIamPolicyAssignmentsForUserInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ListIamPolicyAssignmentsForUserInputBuilder {
    pub(crate) aws_account_id: std::option::Option<std::string::String>,
    pub(crate) user_name: std::option::Option<std::string::String>,
    pub(crate) next_token: std::option::Option<std::string::String>,
    pub(crate) max_results: std::option::Option<i32>,
    pub(crate) namespace: std::option::Option<std::string::String>,
}
impl ListIamPolicyAssignmentsForUserInputBuilder {
    /// <p>The ID of the Amazon Web Services account that contains the assignments.</p>
    pub fn aws_account_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.aws_account_id = Some(input.into());
        self
    }
    /// <p>The ID of the Amazon Web Services account that contains the assignments.</p>
    pub fn set_aws_account_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.aws_account_id = input;
        self
    }
    /// <p>The name of the user.</p>
    pub fn user_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.user_name = Some(input.into());
        self
    }
    /// <p>The name of the user.</p>
    pub fn set_user_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.user_name = input;
        self
    }
    /// <p>The token for the next set of results, or null if there are no more results.</p>
    pub fn next_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.next_token = Some(input.into());
        self
    }
    /// <p>The token for the next set of results, or null if there are no more results.</p>
    pub fn set_next_token(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// <p>The maximum number of results to be returned per request.</p>
    pub fn max_results(mut self, input: i32) -> Self {
        self.max_results = Some(input);
        self
    }
    /// <p>The maximum number of results to be returned per request.</p>
    pub fn set_max_results(mut self, input: std::option::Option<i32>) -> Self {
        self.max_results = input;
        self
    }
    /// <p>The namespace of the assignment.</p>
    pub fn namespace(mut self, input: impl Into<std::string::String>) -> Self {
        self.namespace = Some(input.into());
        self
    }
    /// <p>The namespace of the assignment.</p>
    pub fn set_namespace(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.namespace = input;
        self
    }
    /// Consumes the builder and constructs a [`ListIamPolicyAssignmentsForUserInput`](crate::operation::list_iam_policy_assignments_for_user::ListIamPolicyAssignmentsForUserInput).
    pub fn build(self) -> Result<crate::operation::list_iam_policy_assignments_for_user::ListIamPolicyAssignmentsForUserInput, aws_smithy_http::operation::error::BuildError>{
        Ok(
            crate::operation::list_iam_policy_assignments_for_user::ListIamPolicyAssignmentsForUserInput {
                aws_account_id: self.aws_account_id
                ,
                user_name: self.user_name
                ,
                next_token: self.next_token
                ,
                max_results: self.max_results
                ,
                namespace: self.namespace
                ,
            }
        )
    }
}
