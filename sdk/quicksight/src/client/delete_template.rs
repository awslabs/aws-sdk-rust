// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeleteTemplate`](crate::client::fluent_builders::DeleteTemplate) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`aws_account_id(impl Into<String>)`](crate::client::fluent_builders::DeleteTemplate::aws_account_id) / [`set_aws_account_id(Option<String>)`](crate::client::fluent_builders::DeleteTemplate::set_aws_account_id): <p>The ID of the Amazon Web Services account that contains the template that you're deleting.</p>
    ///   - [`template_id(impl Into<String>)`](crate::client::fluent_builders::DeleteTemplate::template_id) / [`set_template_id(Option<String>)`](crate::client::fluent_builders::DeleteTemplate::set_template_id): <p>An ID for the template you want to delete.</p>
    ///   - [`version_number(i64)`](crate::client::fluent_builders::DeleteTemplate::version_number) / [`set_version_number(Option<i64>)`](crate::client::fluent_builders::DeleteTemplate::set_version_number): <p>Specifies the version of the template that you want to delete. If you don't provide a version number, <code>DeleteTemplate</code> deletes all versions of the template. </p>
    /// - On success, responds with [`DeleteTemplateOutput`](crate::output::DeleteTemplateOutput) with field(s):
    ///   - [`request_id(Option<String>)`](crate::output::DeleteTemplateOutput::request_id): <p>The Amazon Web Services request ID for this operation.</p>
    ///   - [`arn(Option<String>)`](crate::output::DeleteTemplateOutput::arn): <p>The Amazon Resource Name (ARN) of the resource.</p>
    ///   - [`template_id(Option<String>)`](crate::output::DeleteTemplateOutput::template_id): <p>An ID for the template.</p>
    ///   - [`status(i32)`](crate::output::DeleteTemplateOutput::status): <p>The HTTP status of the request.</p>
    /// - On failure, responds with [`SdkError<DeleteTemplateError>`](crate::error::DeleteTemplateError)
    pub fn delete_template(&self) -> crate::client::fluent_builders::DeleteTemplate {
        crate::client::fluent_builders::DeleteTemplate::new(self.handle.clone())
    }
}
