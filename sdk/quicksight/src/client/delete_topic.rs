// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeleteTopic`](crate::operation::delete_topic::builders::DeleteTopicFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`aws_account_id(impl Into<String>)`](crate::operation::delete_topic::builders::DeleteTopicFluentBuilder::aws_account_id) / [`set_aws_account_id(Option<String>)`](crate::operation::delete_topic::builders::DeleteTopicFluentBuilder::set_aws_account_id):<br>required: **true**<br><p>The ID of the Amazon Web Services account that contains the topic that you want to delete.</p><br>
    ///   - [`topic_id(impl Into<String>)`](crate::operation::delete_topic::builders::DeleteTopicFluentBuilder::topic_id) / [`set_topic_id(Option<String>)`](crate::operation::delete_topic::builders::DeleteTopicFluentBuilder::set_topic_id):<br>required: **true**<br><p>The ID of the topic that you want to delete. This ID is unique per Amazon Web Services Region for each Amazon Web Services account.</p><br>
    /// - On success, responds with [`DeleteTopicOutput`](crate::operation::delete_topic::DeleteTopicOutput) with field(s):
    ///   - [`arn(Option<String>)`](crate::operation::delete_topic::DeleteTopicOutput::arn): <p>The Amazon Resource Name (ARN) of the topic.</p>
    ///   - [`topic_id(Option<String>)`](crate::operation::delete_topic::DeleteTopicOutput::topic_id): <p>The ID of the topic that you want to delete. This ID is unique per Amazon Web Services Region for each Amazon Web Services account.</p>
    ///   - [`request_id(Option<String>)`](crate::operation::delete_topic::DeleteTopicOutput::request_id): <p>The Amazon Web Services request ID for this operation.</p>
    ///   - [`status(i32)`](crate::operation::delete_topic::DeleteTopicOutput::status): <p>The HTTP status of the request.</p>
    /// - On failure, responds with [`SdkError<DeleteTopicError>`](crate::operation::delete_topic::DeleteTopicError)
    pub fn delete_topic(&self) -> crate::operation::delete_topic::builders::DeleteTopicFluentBuilder {
        crate::operation::delete_topic::builders::DeleteTopicFluentBuilder::new(self.handle.clone())
    }
}
