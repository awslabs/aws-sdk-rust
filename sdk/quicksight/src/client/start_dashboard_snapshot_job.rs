// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`StartDashboardSnapshotJob`](crate::operation::start_dashboard_snapshot_job::builders::StartDashboardSnapshotJobFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`aws_account_id(impl Into<String>)`](crate::operation::start_dashboard_snapshot_job::builders::StartDashboardSnapshotJobFluentBuilder::aws_account_id) / [`set_aws_account_id(Option<String>)`](crate::operation::start_dashboard_snapshot_job::builders::StartDashboardSnapshotJobFluentBuilder::set_aws_account_id):<br>required: **true**<br><p>The ID of the Amazon Web Services account that the dashboard snapshot job is executed in.</p><br>
    ///   - [`dashboard_id(impl Into<String>)`](crate::operation::start_dashboard_snapshot_job::builders::StartDashboardSnapshotJobFluentBuilder::dashboard_id) / [`set_dashboard_id(Option<String>)`](crate::operation::start_dashboard_snapshot_job::builders::StartDashboardSnapshotJobFluentBuilder::set_dashboard_id):<br>required: **true**<br><p>The ID of the dashboard that you want to start a snapshot job for. </p><br>
    ///   - [`snapshot_job_id(impl Into<String>)`](crate::operation::start_dashboard_snapshot_job::builders::StartDashboardSnapshotJobFluentBuilder::snapshot_job_id) / [`set_snapshot_job_id(Option<String>)`](crate::operation::start_dashboard_snapshot_job::builders::StartDashboardSnapshotJobFluentBuilder::set_snapshot_job_id):<br>required: **true**<br><p>An ID for the dashboard snapshot job. This ID is unique to the dashboard while the job is running. This ID can be used to poll the status of a job with a <code>DescribeDashboardSnapshotJob</code> while the job runs. You can reuse this ID for another job 24 hours after the current job is completed.</p><br>
    ///   - [`user_configuration(SnapshotUserConfiguration)`](crate::operation::start_dashboard_snapshot_job::builders::StartDashboardSnapshotJobFluentBuilder::user_configuration) / [`set_user_configuration(Option<SnapshotUserConfiguration>)`](crate::operation::start_dashboard_snapshot_job::builders::StartDashboardSnapshotJobFluentBuilder::set_user_configuration):<br>required: **true**<br><p> A structure that contains information about the anonymous users that the generated snapshot is for. This API will not return information about registered Amazon QuickSight.</p><br>
    ///   - [`snapshot_configuration(SnapshotConfiguration)`](crate::operation::start_dashboard_snapshot_job::builders::StartDashboardSnapshotJobFluentBuilder::snapshot_configuration) / [`set_snapshot_configuration(Option<SnapshotConfiguration>)`](crate::operation::start_dashboard_snapshot_job::builders::StartDashboardSnapshotJobFluentBuilder::set_snapshot_configuration):<br>required: **true**<br><p>A structure that describes the configuration of the dashboard snapshot.</p><br>
    /// - On success, responds with [`StartDashboardSnapshotJobOutput`](crate::operation::start_dashboard_snapshot_job::StartDashboardSnapshotJobOutput) with field(s):
    ///   - [`arn(Option<String>)`](crate::operation::start_dashboard_snapshot_job::StartDashboardSnapshotJobOutput::arn): <p>The Amazon Resource Name (ARN) for the dashboard snapshot job.</p>
    ///   - [`snapshot_job_id(Option<String>)`](crate::operation::start_dashboard_snapshot_job::StartDashboardSnapshotJobOutput::snapshot_job_id): <p>The ID of the job. The job ID is set when you start a new job with a <code>StartDashboardSnapshotJob</code> API call.</p>
    ///   - [`request_id(Option<String>)`](crate::operation::start_dashboard_snapshot_job::StartDashboardSnapshotJobOutput::request_id): <p> The Amazon Web Services request ID for this operation. </p>
    ///   - [`status(i32)`](crate::operation::start_dashboard_snapshot_job::StartDashboardSnapshotJobOutput::status): <p>The HTTP status of the request</p>
    /// - On failure, responds with [`SdkError<StartDashboardSnapshotJobError>`](crate::operation::start_dashboard_snapshot_job::StartDashboardSnapshotJobError)
    pub fn start_dashboard_snapshot_job(&self) -> crate::operation::start_dashboard_snapshot_job::builders::StartDashboardSnapshotJobFluentBuilder {
        crate::operation::start_dashboard_snapshot_job::builders::StartDashboardSnapshotJobFluentBuilder::new(self.handle.clone())
    }
}
