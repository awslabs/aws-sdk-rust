// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeleteFolderMembership`](crate::client::fluent_builders::DeleteFolderMembership) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`aws_account_id(impl Into<String>)`](crate::client::fluent_builders::DeleteFolderMembership::aws_account_id) / [`set_aws_account_id(Option<String>)`](crate::client::fluent_builders::DeleteFolderMembership::set_aws_account_id): <p>The ID for the Amazon Web Services account that contains the folder.</p>
    ///   - [`folder_id(impl Into<String>)`](crate::client::fluent_builders::DeleteFolderMembership::folder_id) / [`set_folder_id(Option<String>)`](crate::client::fluent_builders::DeleteFolderMembership::set_folder_id): <p>The Folder ID.</p>
    ///   - [`member_id(impl Into<String>)`](crate::client::fluent_builders::DeleteFolderMembership::member_id) / [`set_member_id(Option<String>)`](crate::client::fluent_builders::DeleteFolderMembership::set_member_id): <p>The ID of the asset (the dashboard, analysis, or dataset) that you want to delete.</p>
    ///   - [`member_type(MemberType)`](crate::client::fluent_builders::DeleteFolderMembership::member_type) / [`set_member_type(Option<MemberType>)`](crate::client::fluent_builders::DeleteFolderMembership::set_member_type): <p>The type of the member, including <code>DASHBOARD</code>, <code>ANALYSIS</code>, and <code>DATASET</code> </p>
    /// - On success, responds with [`DeleteFolderMembershipOutput`](crate::output::DeleteFolderMembershipOutput) with field(s):
    ///   - [`status(i32)`](crate::output::DeleteFolderMembershipOutput::status): <p>The HTTP status of the request.</p>
    ///   - [`request_id(Option<String>)`](crate::output::DeleteFolderMembershipOutput::request_id): <p>The Amazon Web Services request ID for this operation.</p>
    /// - On failure, responds with [`SdkError<DeleteFolderMembershipError>`](crate::error::DeleteFolderMembershipError)
    pub fn delete_folder_membership(
        &self,
    ) -> crate::client::fluent_builders::DeleteFolderMembership {
        crate::client::fluent_builders::DeleteFolderMembership::new(self.handle.clone())
    }
}
