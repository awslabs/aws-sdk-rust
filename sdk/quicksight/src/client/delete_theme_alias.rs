// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeleteThemeAlias`](crate::client::fluent_builders::DeleteThemeAlias) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`aws_account_id(impl Into<String>)`](crate::client::fluent_builders::DeleteThemeAlias::aws_account_id) / [`set_aws_account_id(Option<String>)`](crate::client::fluent_builders::DeleteThemeAlias::set_aws_account_id): <p>The ID of the Amazon Web Services account that contains the theme alias to delete.</p>
    ///   - [`theme_id(impl Into<String>)`](crate::client::fluent_builders::DeleteThemeAlias::theme_id) / [`set_theme_id(Option<String>)`](crate::client::fluent_builders::DeleteThemeAlias::set_theme_id): <p>The ID for the theme that the specified alias is for.</p>
    ///   - [`alias_name(impl Into<String>)`](crate::client::fluent_builders::DeleteThemeAlias::alias_name) / [`set_alias_name(Option<String>)`](crate::client::fluent_builders::DeleteThemeAlias::set_alias_name): <p>The unique name for the theme alias to delete.</p>
    /// - On success, responds with [`DeleteThemeAliasOutput`](crate::output::DeleteThemeAliasOutput) with field(s):
    ///   - [`alias_name(Option<String>)`](crate::output::DeleteThemeAliasOutput::alias_name): <p>The name for the theme alias.</p>
    ///   - [`arn(Option<String>)`](crate::output::DeleteThemeAliasOutput::arn): <p>The Amazon Resource Name (ARN) of the theme resource using the deleted alias.</p>
    ///   - [`request_id(Option<String>)`](crate::output::DeleteThemeAliasOutput::request_id): <p>The Amazon Web Services request ID for this operation.</p>
    ///   - [`status(i32)`](crate::output::DeleteThemeAliasOutput::status): <p>The HTTP status of the request.</p>
    ///   - [`theme_id(Option<String>)`](crate::output::DeleteThemeAliasOutput::theme_id): <p>An ID for the theme associated with the deletion.</p>
    /// - On failure, responds with [`SdkError<DeleteThemeAliasError>`](crate::error::DeleteThemeAliasError)
    pub fn delete_theme_alias(&self) -> crate::client::fluent_builders::DeleteThemeAlias {
        crate::client::fluent_builders::DeleteThemeAlias::new(self.handle.clone())
    }
}
