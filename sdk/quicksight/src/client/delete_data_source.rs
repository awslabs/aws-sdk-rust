// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeleteDataSource`](crate::operation::delete_data_source::builders::DeleteDataSourceFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`aws_account_id(impl Into<String>)`](crate::operation::delete_data_source::builders::DeleteDataSourceFluentBuilder::aws_account_id) / [`set_aws_account_id(Option<String>)`](crate::operation::delete_data_source::builders::DeleteDataSourceFluentBuilder::set_aws_account_id): <p>The Amazon Web Services account ID.</p>
    ///   - [`data_source_id(impl Into<String>)`](crate::operation::delete_data_source::builders::DeleteDataSourceFluentBuilder::data_source_id) / [`set_data_source_id(Option<String>)`](crate::operation::delete_data_source::builders::DeleteDataSourceFluentBuilder::set_data_source_id): <p>The ID of the data source. This ID is unique per Amazon Web Services Region for each Amazon Web Services account.</p>
    /// - On success, responds with [`DeleteDataSourceOutput`](crate::operation::delete_data_source::DeleteDataSourceOutput) with field(s):
    ///   - [`arn(Option<String>)`](crate::operation::delete_data_source::DeleteDataSourceOutput::arn): <p>The Amazon Resource Name (ARN) of the data source that you deleted.</p>
    ///   - [`data_source_id(Option<String>)`](crate::operation::delete_data_source::DeleteDataSourceOutput::data_source_id): <p>The ID of the data source. This ID is unique per Amazon Web Services Region for each Amazon Web Services account.</p>
    ///   - [`request_id(Option<String>)`](crate::operation::delete_data_source::DeleteDataSourceOutput::request_id): <p>The Amazon Web Services request ID for this operation.</p>
    ///   - [`status(i32)`](crate::operation::delete_data_source::DeleteDataSourceOutput::status): <p>The HTTP status of the request.</p>
    /// - On failure, responds with [`SdkError<DeleteDataSourceError>`](crate::operation::delete_data_source::DeleteDataSourceError)
    pub fn delete_data_source(
        &self,
    ) -> crate::operation::delete_data_source::builders::DeleteDataSourceFluentBuilder {
        crate::operation::delete_data_source::builders::DeleteDataSourceFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
