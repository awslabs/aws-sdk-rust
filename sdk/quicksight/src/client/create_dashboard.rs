// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateDashboard`](crate::operation::create_dashboard::builders::CreateDashboardFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`aws_account_id(impl Into<String>)`](crate::operation::create_dashboard::builders::CreateDashboardFluentBuilder::aws_account_id) / [`set_aws_account_id(Option<String>)`](crate::operation::create_dashboard::builders::CreateDashboardFluentBuilder::set_aws_account_id): <p>The ID of the Amazon Web Services account where you want to create the dashboard.</p>
    ///   - [`dashboard_id(impl Into<String>)`](crate::operation::create_dashboard::builders::CreateDashboardFluentBuilder::dashboard_id) / [`set_dashboard_id(Option<String>)`](crate::operation::create_dashboard::builders::CreateDashboardFluentBuilder::set_dashboard_id): <p>The ID for the dashboard, also added to the IAM policy.</p>
    ///   - [`name(impl Into<String>)`](crate::operation::create_dashboard::builders::CreateDashboardFluentBuilder::name) / [`set_name(Option<String>)`](crate::operation::create_dashboard::builders::CreateDashboardFluentBuilder::set_name): <p>The display name of the dashboard.</p>
    ///   - [`parameters(Parameters)`](crate::operation::create_dashboard::builders::CreateDashboardFluentBuilder::parameters) / [`set_parameters(Option<Parameters>)`](crate::operation::create_dashboard::builders::CreateDashboardFluentBuilder::set_parameters): <p>The parameters for the creation of the dashboard, which you want to use to override the default settings. A dashboard can have any type of parameters, and some parameters might accept multiple values. </p>
    ///   - [`permissions(Vec<ResourcePermission>)`](crate::operation::create_dashboard::builders::CreateDashboardFluentBuilder::permissions) / [`set_permissions(Option<Vec<ResourcePermission>>)`](crate::operation::create_dashboard::builders::CreateDashboardFluentBuilder::set_permissions): <p>A structure that contains the permissions of the dashboard. You can use this structure for granting permissions by providing a list of IAM action information for each principal ARN. </p>  <p>To specify no permissions, omit the permissions list.</p>
    ///   - [`source_entity(DashboardSourceEntity)`](crate::operation::create_dashboard::builders::CreateDashboardFluentBuilder::source_entity) / [`set_source_entity(Option<DashboardSourceEntity>)`](crate::operation::create_dashboard::builders::CreateDashboardFluentBuilder::set_source_entity): <p>The entity that you are using as a source when you create the dashboard. In <code>SourceEntity</code>, you specify the type of object you're using as source. You can only create a dashboard from a template, so you use a <code>SourceTemplate</code> entity. If you need to create a dashboard from an analysis, first convert the analysis to a template by using the <code> <a href="https://docs.aws.amazon.com/quicksight/latest/APIReference/API_CreateTemplate.html">CreateTemplate</a> </code> API operation. For <code>SourceTemplate</code>, specify the Amazon Resource Name (ARN) of the source template. The <code>SourceTemplate</code>ARN can contain any Amazon Web Services account and any Amazon QuickSight-supported Amazon Web Services Region. </p>  <p>Use the <code>DataSetReferences</code> entity within <code>SourceTemplate</code> to list the replacement datasets for the placeholders listed in the original. The schema in each dataset must match its placeholder. </p>
    ///   - [`tags(Vec<Tag>)`](crate::operation::create_dashboard::builders::CreateDashboardFluentBuilder::tags) / [`set_tags(Option<Vec<Tag>>)`](crate::operation::create_dashboard::builders::CreateDashboardFluentBuilder::set_tags): <p>Contains a map of the key-value pairs for the resource tag or tags assigned to the dashboard.</p>
    ///   - [`version_description(impl Into<String>)`](crate::operation::create_dashboard::builders::CreateDashboardFluentBuilder::version_description) / [`set_version_description(Option<String>)`](crate::operation::create_dashboard::builders::CreateDashboardFluentBuilder::set_version_description): <p>A description for the first version of the dashboard being created.</p>
    ///   - [`dashboard_publish_options(DashboardPublishOptions)`](crate::operation::create_dashboard::builders::CreateDashboardFluentBuilder::dashboard_publish_options) / [`set_dashboard_publish_options(Option<DashboardPublishOptions>)`](crate::operation::create_dashboard::builders::CreateDashboardFluentBuilder::set_dashboard_publish_options): <p>Options for publishing the dashboard when you create it:</p>  <ul>   <li> <p> <code>AvailabilityStatus</code> for <code>AdHocFilteringOption</code> - This status can be either <code>ENABLED</code> or <code>DISABLED</code>. When this is set to <code>DISABLED</code>, Amazon QuickSight disables the left filter pane on the published dashboard, which can be used for ad hoc (one-time) filtering. This option is <code>ENABLED</code> by default. </p> </li>   <li> <p> <code>AvailabilityStatus</code> for <code>ExportToCSVOption</code> - This status can be either <code>ENABLED</code> or <code>DISABLED</code>. The visual option to export data to .CSV format isn't enabled when this is set to <code>DISABLED</code>. This option is <code>ENABLED</code> by default. </p> </li>   <li> <p> <code>VisibilityState</code> for <code>SheetControlsOption</code> - This visibility state can be either <code>COLLAPSED</code> or <code>EXPANDED</code>. This option is <code>COLLAPSED</code> by default. </p> </li>  </ul>
    ///   - [`theme_arn(impl Into<String>)`](crate::operation::create_dashboard::builders::CreateDashboardFluentBuilder::theme_arn) / [`set_theme_arn(Option<String>)`](crate::operation::create_dashboard::builders::CreateDashboardFluentBuilder::set_theme_arn): <p>The Amazon Resource Name (ARN) of the theme that is being used for this dashboard. If you add a value for this field, it overrides the value that is used in the source entity. The theme ARN must exist in the same Amazon Web Services account where you create the dashboard.</p>
    ///   - [`definition(DashboardVersionDefinition)`](crate::operation::create_dashboard::builders::CreateDashboardFluentBuilder::definition) / [`set_definition(Option<DashboardVersionDefinition>)`](crate::operation::create_dashboard::builders::CreateDashboardFluentBuilder::set_definition): <p>The definition of a dashboard.</p>  <p>A definition is the data model of all features in a Dashboard, Template, or Analysis.</p>
    /// - On success, responds with [`CreateDashboardOutput`](crate::operation::create_dashboard::CreateDashboardOutput) with field(s):
    ///   - [`arn(Option<String>)`](crate::operation::create_dashboard::CreateDashboardOutput::arn): <p>The ARN of the dashboard.</p>
    ///   - [`version_arn(Option<String>)`](crate::operation::create_dashboard::CreateDashboardOutput::version_arn): <p>The ARN of the dashboard, including the version number of the first version that is created.</p>
    ///   - [`dashboard_id(Option<String>)`](crate::operation::create_dashboard::CreateDashboardOutput::dashboard_id): <p>The ID for the dashboard.</p>
    ///   - [`creation_status(Option<ResourceStatus>)`](crate::operation::create_dashboard::CreateDashboardOutput::creation_status): <p>The status of the dashboard creation request.</p>
    ///   - [`status(i32)`](crate::operation::create_dashboard::CreateDashboardOutput::status): <p>The HTTP status of the request.</p>
    ///   - [`request_id(Option<String>)`](crate::operation::create_dashboard::CreateDashboardOutput::request_id): <p>The Amazon Web Services request ID for this operation.</p>
    /// - On failure, responds with [`SdkError<CreateDashboardError>`](crate::operation::create_dashboard::CreateDashboardError)
    pub fn create_dashboard(
        &self,
    ) -> crate::operation::create_dashboard::builders::CreateDashboardFluentBuilder {
        crate::operation::create_dashboard::builders::CreateDashboardFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
