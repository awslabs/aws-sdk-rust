// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListAnalyses`](crate::client::fluent_builders::ListAnalyses) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListAnalyses::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`aws_account_id(impl Into<String>)`](crate::client::fluent_builders::ListAnalyses::aws_account_id) / [`set_aws_account_id(Option<String>)`](crate::client::fluent_builders::ListAnalyses::set_aws_account_id): <p>The ID of the Amazon Web Services account that contains the analyses.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListAnalyses::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListAnalyses::set_next_token): <p>A pagination token that can be used in a subsequent request.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListAnalyses::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListAnalyses::set_max_results): <p>The maximum number of results to return.</p>
    /// - On success, responds with [`ListAnalysesOutput`](crate::output::ListAnalysesOutput) with field(s):
    ///   - [`analysis_summary_list(Option<Vec<AnalysisSummary>>)`](crate::output::ListAnalysesOutput::analysis_summary_list): <p>Metadata describing each of the analyses that are listed.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListAnalysesOutput::next_token): <p>A pagination token that can be used in a subsequent request.</p>
    ///   - [`status(i32)`](crate::output::ListAnalysesOutput::status): <p>The HTTP status of the request.</p>
    ///   - [`request_id(Option<String>)`](crate::output::ListAnalysesOutput::request_id): <p>The Amazon Web Services request ID for this operation.</p>
    /// - On failure, responds with [`SdkError<ListAnalysesError>`](crate::error::ListAnalysesError)
    pub fn list_analyses(&self) -> crate::client::fluent_builders::ListAnalyses {
        crate::client::fluent_builders::ListAnalyses::new(self.handle.clone())
    }
}
