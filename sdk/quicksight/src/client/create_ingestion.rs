// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateIngestion`](crate::client::fluent_builders::CreateIngestion) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`data_set_id(impl Into<String>)`](crate::client::fluent_builders::CreateIngestion::data_set_id) / [`set_data_set_id(Option<String>)`](crate::client::fluent_builders::CreateIngestion::set_data_set_id): <p>The ID of the dataset used in the ingestion.</p>
    ///   - [`ingestion_id(impl Into<String>)`](crate::client::fluent_builders::CreateIngestion::ingestion_id) / [`set_ingestion_id(Option<String>)`](crate::client::fluent_builders::CreateIngestion::set_ingestion_id): <p>An ID for the ingestion.</p>
    ///   - [`aws_account_id(impl Into<String>)`](crate::client::fluent_builders::CreateIngestion::aws_account_id) / [`set_aws_account_id(Option<String>)`](crate::client::fluent_builders::CreateIngestion::set_aws_account_id): <p>The Amazon Web Services account ID.</p>
    ///   - [`ingestion_type(IngestionType)`](crate::client::fluent_builders::CreateIngestion::ingestion_type) / [`set_ingestion_type(Option<IngestionType>)`](crate::client::fluent_builders::CreateIngestion::set_ingestion_type): <p>The type of ingestion that you want to create.</p>
    /// - On success, responds with [`CreateIngestionOutput`](crate::output::CreateIngestionOutput) with field(s):
    ///   - [`arn(Option<String>)`](crate::output::CreateIngestionOutput::arn): <p>The Amazon Resource Name (ARN) for the data ingestion.</p>
    ///   - [`ingestion_id(Option<String>)`](crate::output::CreateIngestionOutput::ingestion_id): <p>An ID for the ingestion.</p>
    ///   - [`ingestion_status(Option<IngestionStatus>)`](crate::output::CreateIngestionOutput::ingestion_status): <p>The ingestion status.</p>
    ///   - [`request_id(Option<String>)`](crate::output::CreateIngestionOutput::request_id): <p>The Amazon Web Services request ID for this operation.</p>
    ///   - [`status(i32)`](crate::output::CreateIngestionOutput::status): <p>The HTTP status of the request.</p>
    /// - On failure, responds with [`SdkError<CreateIngestionError>`](crate::error::CreateIngestionError)
    pub fn create_ingestion(&self) -> crate::client::fluent_builders::CreateIngestion {
        crate::client::fluent_builders::CreateIngestion::new(self.handle.clone())
    }
}
