// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_update_data_source_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::update_data_source::UpdateDataSourceInput,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.credentials {
        #[allow(unused_mut)]
        let mut object_2 = object.key("Credentials").start_object();
        crate::protocol_serde::shape_data_source_credentials::ser_data_source_credentials(&mut object_2, var_1)?;
        object_2.finish();
    }
    if let Some(var_3) = &input.data_source_parameters {
        #[allow(unused_mut)]
        let mut object_4 = object.key("DataSourceParameters").start_object();
        crate::protocol_serde::shape_data_source_parameters::ser_data_source_parameters(&mut object_4, var_3)?;
        object_4.finish();
    }
    if let Some(var_5) = &input.name {
        object.key("Name").string(var_5.as_str());
    }
    if let Some(var_6) = &input.ssl_properties {
        #[allow(unused_mut)]
        let mut object_7 = object.key("SslProperties").start_object();
        crate::protocol_serde::shape_ssl_properties::ser_ssl_properties(&mut object_7, var_6)?;
        object_7.finish();
    }
    if let Some(var_8) = &input.vpc_connection_properties {
        #[allow(unused_mut)]
        let mut object_9 = object.key("VpcConnectionProperties").start_object();
        crate::protocol_serde::shape_vpc_connection_properties::ser_vpc_connection_properties(&mut object_9, var_8)?;
        object_9.finish();
    }
    Ok(())
}
