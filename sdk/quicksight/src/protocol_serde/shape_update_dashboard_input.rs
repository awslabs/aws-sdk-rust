// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_update_dashboard_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::update_dashboard::UpdateDashboardInput,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.dashboard_publish_options {
        #[allow(unused_mut)]
        let mut object_2 = object.key("DashboardPublishOptions").start_object();
        crate::protocol_serde::shape_dashboard_publish_options::ser_dashboard_publish_options(&mut object_2, var_1)?;
        object_2.finish();
    }
    if let Some(var_3) = &input.definition {
        #[allow(unused_mut)]
        let mut object_4 = object.key("Definition").start_object();
        crate::protocol_serde::shape_dashboard_version_definition::ser_dashboard_version_definition(&mut object_4, var_3)?;
        object_4.finish();
    }
    if let Some(var_5) = &input.name {
        object.key("Name").string(var_5.as_str());
    }
    if let Some(var_6) = &input.parameters {
        #[allow(unused_mut)]
        let mut object_7 = object.key("Parameters").start_object();
        crate::protocol_serde::shape_parameters::ser_parameters(&mut object_7, var_6)?;
        object_7.finish();
    }
    if let Some(var_8) = &input.source_entity {
        #[allow(unused_mut)]
        let mut object_9 = object.key("SourceEntity").start_object();
        crate::protocol_serde::shape_dashboard_source_entity::ser_dashboard_source_entity(&mut object_9, var_8)?;
        object_9.finish();
    }
    if let Some(var_10) = &input.theme_arn {
        object.key("ThemeArn").string(var_10.as_str());
    }
    if let Some(var_11) = &input.validation_strategy {
        #[allow(unused_mut)]
        let mut object_12 = object.key("ValidationStrategy").start_object();
        crate::protocol_serde::shape_validation_strategy::ser_validation_strategy(&mut object_12, var_11)?;
        object_12.finish();
    }
    if let Some(var_13) = &input.version_description {
        object.key("VersionDescription").string(var_13.as_str());
    }
    Ok(())
}
