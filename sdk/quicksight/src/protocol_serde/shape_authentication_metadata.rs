// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_authentication_metadata(
    object_2: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::types::AuthenticationMetadata,
) -> ::std::result::Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    match input {
        crate::types::AuthenticationMetadata::AuthorizationCodeGrantMetadata(inner) => {
            #[allow(unused_mut)]
            let mut object_1 = object_2.key("AuthorizationCodeGrantMetadata").start_object();
            crate::protocol_serde::shape_authorization_code_grant_metadata::ser_authorization_code_grant_metadata(&mut object_1, inner)?;
            object_1.finish();
        }
        crate::types::AuthenticationMetadata::ClientCredentialsGrantMetadata(inner) => {
            #[allow(unused_mut)]
            let mut object_2 = object_2.key("ClientCredentialsGrantMetadata").start_object();
            crate::protocol_serde::shape_client_credentials_grant_metadata::ser_client_credentials_grant_metadata(&mut object_2, inner)?;
            object_2.finish();
        }
        crate::types::AuthenticationMetadata::BasicAuthConnectionMetadata(inner) => {
            #[allow(unused_mut)]
            let mut object_3 = object_2.key("BasicAuthConnectionMetadata").start_object();
            crate::protocol_serde::shape_basic_auth_connection_metadata::ser_basic_auth_connection_metadata(&mut object_3, inner)?;
            object_3.finish();
        }
        crate::types::AuthenticationMetadata::ApiKeyConnectionMetadata(inner) => {
            #[allow(unused_mut)]
            let mut object_4 = object_2.key("ApiKeyConnectionMetadata").start_object();
            crate::protocol_serde::shape_api_key_connection_metadata::ser_api_key_connection_metadata(&mut object_4, inner)?;
            object_4.finish();
        }
        crate::types::AuthenticationMetadata::NoneConnectionMetadata(inner) => {
            #[allow(unused_mut)]
            let mut object_5 = object_2.key("NoneConnectionMetadata").start_object();
            crate::protocol_serde::shape_none_connection_metadata::ser_none_connection_metadata(&mut object_5, inner)?;
            object_5.finish();
        }
        crate::types::AuthenticationMetadata::IamConnectionMetadata(inner) => {
            #[allow(unused_mut)]
            let mut object_6 = object_2.key("IamConnectionMetadata").start_object();
            crate::protocol_serde::shape_iam_connection_metadata::ser_iam_connection_metadata(&mut object_6, inner)?;
            object_6.finish();
        }
        crate::types::AuthenticationMetadata::Unknown => {
            return Err(::aws_smithy_types::error::operation::SerializationError::unknown_variant(
                "AuthenticationMetadata",
            ))
        }
    }
    Ok(())
}
