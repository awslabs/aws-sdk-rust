// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_generate_embed_url_for_anonymous_user_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::generate_embed_url_for_anonymous_user::GenerateEmbedUrlForAnonymousUserInput,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.allowed_domains {
        let mut array_2 = object.key("AllowedDomains").start_array();
        for item_3 in var_1 {
            {
                array_2.value().string(item_3.as_str());
            }
        }
        array_2.finish();
    }
    if let Some(var_4) = &input.authorized_resource_arns {
        let mut array_5 = object.key("AuthorizedResourceArns").start_array();
        for item_6 in var_4 {
            {
                array_5.value().string(item_6.as_str());
            }
        }
        array_5.finish();
    }
    if let Some(var_7) = &input.experience_configuration {
        #[allow(unused_mut)]
        let mut object_8 = object.key("ExperienceConfiguration").start_object();
        crate::protocol_serde::shape_anonymous_user_embedding_experience_configuration::ser_anonymous_user_embedding_experience_configuration(
            &mut object_8,
            var_7,
        )?;
        object_8.finish();
    }
    if let Some(var_9) = &input.namespace {
        object.key("Namespace").string(var_9.as_str());
    }
    if let Some(var_10) = &input.session_lifetime_in_minutes {
        object.key("SessionLifetimeInMinutes").number(
            #[allow(clippy::useless_conversion)]
            ::aws_smithy_types::Number::NegInt((*var_10).into()),
        );
    }
    if let Some(var_11) = &input.session_tags {
        let mut array_12 = object.key("SessionTags").start_array();
        for item_13 in var_11 {
            {
                #[allow(unused_mut)]
                let mut object_14 = array_12.value().start_object();
                crate::protocol_serde::shape_session_tag::ser_session_tag(&mut object_14, item_13)?;
                object_14.finish();
            }
        }
        array_12.finish();
    }
    Ok(())
}
