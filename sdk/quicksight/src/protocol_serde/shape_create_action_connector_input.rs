// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_create_action_connector_input_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::create_action_connector::CreateActionConnectorInput,
) -> ::std::result::Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.action_connector_id {
        object.key("ActionConnectorId").string(var_1.as_str());
    }
    if let Some(var_2) = &input.authentication_config {
        #[allow(unused_mut)]
        let mut object_3 = object.key("AuthenticationConfig").start_object();
        crate::protocol_serde::shape_auth_config::ser_auth_config(&mut object_3, var_2)?;
        object_3.finish();
    }
    if let Some(var_4) = &input.description {
        object.key("Description").string(var_4.as_str());
    }
    if let Some(var_5) = &input.name {
        object.key("Name").string(var_5.as_str());
    }
    if let Some(var_6) = &input.permissions {
        let mut array_7 = object.key("Permissions").start_array();
        for item_8 in var_6 {
            {
                #[allow(unused_mut)]
                let mut object_9 = array_7.value().start_object();
                crate::protocol_serde::shape_resource_permission::ser_resource_permission(&mut object_9, item_8)?;
                object_9.finish();
            }
        }
        array_7.finish();
    }
    if let Some(var_10) = &input.tags {
        let mut array_11 = object.key("Tags").start_array();
        for item_12 in var_10 {
            {
                #[allow(unused_mut)]
                let mut object_13 = array_11.value().start_object();
                crate::protocol_serde::shape_tag::ser_tag(&mut object_13, item_12)?;
                object_13.finish();
            }
        }
        array_11.finish();
    }
    if let Some(var_14) = &input.r#type {
        object.key("Type").string(var_14.as_str());
    }
    if let Some(var_15) = &input.vpc_connection_arn {
        object.key("VpcConnectionArn").string(var_15.as_str());
    }
    Ok(())
}
