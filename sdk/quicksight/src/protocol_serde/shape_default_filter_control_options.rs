// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_default_filter_control_options(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::types::DefaultFilterControlOptions,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.default_date_time_picker_options {
        #[allow(unused_mut)]
        let mut object_2 = object.key("DefaultDateTimePickerOptions").start_object();
        crate::protocol_serde::shape_default_date_time_picker_control_options::ser_default_date_time_picker_control_options(&mut object_2, var_1)?;
        object_2.finish();
    }
    if let Some(var_3) = &input.default_list_options {
        #[allow(unused_mut)]
        let mut object_4 = object.key("DefaultListOptions").start_object();
        crate::protocol_serde::shape_default_filter_list_control_options::ser_default_filter_list_control_options(&mut object_4, var_3)?;
        object_4.finish();
    }
    if let Some(var_5) = &input.default_dropdown_options {
        #[allow(unused_mut)]
        let mut object_6 = object.key("DefaultDropdownOptions").start_object();
        crate::protocol_serde::shape_default_filter_drop_down_control_options::ser_default_filter_drop_down_control_options(&mut object_6, var_5)?;
        object_6.finish();
    }
    if let Some(var_7) = &input.default_text_field_options {
        #[allow(unused_mut)]
        let mut object_8 = object.key("DefaultTextFieldOptions").start_object();
        crate::protocol_serde::shape_default_text_field_control_options::ser_default_text_field_control_options(&mut object_8, var_7)?;
        object_8.finish();
    }
    if let Some(var_9) = &input.default_text_area_options {
        #[allow(unused_mut)]
        let mut object_10 = object.key("DefaultTextAreaOptions").start_object();
        crate::protocol_serde::shape_default_text_area_control_options::ser_default_text_area_control_options(&mut object_10, var_9)?;
        object_10.finish();
    }
    if let Some(var_11) = &input.default_slider_options {
        #[allow(unused_mut)]
        let mut object_12 = object.key("DefaultSliderOptions").start_object();
        crate::protocol_serde::shape_default_slider_control_options::ser_default_slider_control_options(&mut object_12, var_11)?;
        object_12.finish();
    }
    if let Some(var_13) = &input.default_relative_date_time_options {
        #[allow(unused_mut)]
        let mut object_14 = object.key("DefaultRelativeDateTimeOptions").start_object();
        crate::protocol_serde::shape_default_relative_date_time_control_options::ser_default_relative_date_time_control_options(
            &mut object_14,
            var_13,
        )?;
        object_14.finish();
    }
    Ok(())
}

pub(crate) fn de_default_filter_control_options<'a, I>(
    tokens: &mut ::std::iter::Peekable<I>,
) -> Result<Option<crate::types::DefaultFilterControlOptions>, ::aws_smithy_json::deserialize::error::DeserializeError>
where
    I: Iterator<Item = Result<::aws_smithy_json::deserialize::Token<'a>, ::aws_smithy_json::deserialize::error::DeserializeError>>,
{
    match tokens.next().transpose()? {
        Some(::aws_smithy_json::deserialize::Token::ValueNull { .. }) => Ok(None),
        Some(::aws_smithy_json::deserialize::Token::StartObject { .. }) => {
            #[allow(unused_mut)]
            let mut builder = crate::types::builders::DefaultFilterControlOptionsBuilder::default();
            loop {
                match tokens.next().transpose()? {
                    Some(::aws_smithy_json::deserialize::Token::EndObject { .. }) => break,
                    Some(::aws_smithy_json::deserialize::Token::ObjectKey { key, .. }) => {
                        match key.to_unescaped()?.as_ref() {
                            "DefaultDateTimePickerOptions" => {
                                builder = builder.set_default_date_time_picker_options(
                                    crate::protocol_serde::shape_default_date_time_picker_control_options::de_default_date_time_picker_control_options(tokens)?
                                );
                            }
                            "DefaultListOptions" => {
                                builder = builder.set_default_list_options(
                                    crate::protocol_serde::shape_default_filter_list_control_options::de_default_filter_list_control_options(tokens)?,
                                );
                            }
                            "DefaultDropdownOptions" => {
                                builder = builder.set_default_dropdown_options(
                                    crate::protocol_serde::shape_default_filter_drop_down_control_options::de_default_filter_drop_down_control_options(tokens)?
                                );
                            }
                            "DefaultTextFieldOptions" => {
                                builder = builder.set_default_text_field_options(
                                    crate::protocol_serde::shape_default_text_field_control_options::de_default_text_field_control_options(tokens)?,
                                );
                            }
                            "DefaultTextAreaOptions" => {
                                builder = builder.set_default_text_area_options(
                                    crate::protocol_serde::shape_default_text_area_control_options::de_default_text_area_control_options(tokens)?,
                                );
                            }
                            "DefaultSliderOptions" => {
                                builder = builder.set_default_slider_options(
                                    crate::protocol_serde::shape_default_slider_control_options::de_default_slider_control_options(tokens)?,
                                );
                            }
                            "DefaultRelativeDateTimeOptions" => {
                                builder = builder.set_default_relative_date_time_options(
                                    crate::protocol_serde::shape_default_relative_date_time_control_options::de_default_relative_date_time_control_options(tokens)?
                                );
                            }
                            _ => ::aws_smithy_json::deserialize::token::skip_value(tokens)?,
                        }
                    }
                    other => {
                        return Err(::aws_smithy_json::deserialize::error::DeserializeError::custom(format!(
                            "expected object key or end object, found: {:?}",
                            other
                        )))
                    }
                }
            }
            Ok(Some(builder.build()))
        }
        _ => Err(::aws_smithy_json::deserialize::error::DeserializeError::custom(
            "expected start object or null",
        )),
    }
}
