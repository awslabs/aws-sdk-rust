// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_percentage_display_format_configuration(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::types::PercentageDisplayFormatConfiguration,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.prefix {
        object.key("Prefix").string(var_1.as_str());
    }
    if let Some(var_2) = &input.suffix {
        object.key("Suffix").string(var_2.as_str());
    }
    if let Some(var_3) = &input.separator_configuration {
        #[allow(unused_mut)]
        let mut object_4 = object.key("SeparatorConfiguration").start_object();
        crate::protocol_serde::shape_numeric_separator_configuration::ser_numeric_separator_configuration(&mut object_4, var_3)?;
        object_4.finish();
    }
    if let Some(var_5) = &input.decimal_places_configuration {
        #[allow(unused_mut)]
        let mut object_6 = object.key("DecimalPlacesConfiguration").start_object();
        crate::protocol_serde::shape_decimal_places_configuration::ser_decimal_places_configuration(&mut object_6, var_5)?;
        object_6.finish();
    }
    if let Some(var_7) = &input.negative_value_configuration {
        #[allow(unused_mut)]
        let mut object_8 = object.key("NegativeValueConfiguration").start_object();
        crate::protocol_serde::shape_negative_value_configuration::ser_negative_value_configuration(&mut object_8, var_7)?;
        object_8.finish();
    }
    if let Some(var_9) = &input.null_value_format_configuration {
        #[allow(unused_mut)]
        let mut object_10 = object.key("NullValueFormatConfiguration").start_object();
        crate::protocol_serde::shape_null_value_format_configuration::ser_null_value_format_configuration(&mut object_10, var_9)?;
        object_10.finish();
    }
    Ok(())
}

pub(crate) fn de_percentage_display_format_configuration<'a, I>(
    tokens: &mut ::std::iter::Peekable<I>,
) -> Result<Option<crate::types::PercentageDisplayFormatConfiguration>, ::aws_smithy_json::deserialize::error::DeserializeError>
where
    I: Iterator<Item = Result<::aws_smithy_json::deserialize::Token<'a>, ::aws_smithy_json::deserialize::error::DeserializeError>>,
{
    match tokens.next().transpose()? {
        Some(::aws_smithy_json::deserialize::Token::ValueNull { .. }) => Ok(None),
        Some(::aws_smithy_json::deserialize::Token::StartObject { .. }) => {
            #[allow(unused_mut)]
            let mut builder = crate::types::builders::PercentageDisplayFormatConfigurationBuilder::default();
            loop {
                match tokens.next().transpose()? {
                    Some(::aws_smithy_json::deserialize::Token::EndObject { .. }) => break,
                    Some(::aws_smithy_json::deserialize::Token::ObjectKey { key, .. }) => match key.to_unescaped()?.as_ref() {
                        "Prefix" => {
                            builder = builder.set_prefix(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                            );
                        }
                        "Suffix" => {
                            builder = builder.set_suffix(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                            );
                        }
                        "SeparatorConfiguration" => {
                            builder = builder.set_separator_configuration(
                                crate::protocol_serde::shape_numeric_separator_configuration::de_numeric_separator_configuration(tokens)?,
                            );
                        }
                        "DecimalPlacesConfiguration" => {
                            builder = builder.set_decimal_places_configuration(
                                crate::protocol_serde::shape_decimal_places_configuration::de_decimal_places_configuration(tokens)?,
                            );
                        }
                        "NegativeValueConfiguration" => {
                            builder = builder.set_negative_value_configuration(
                                crate::protocol_serde::shape_negative_value_configuration::de_negative_value_configuration(tokens)?,
                            );
                        }
                        "NullValueFormatConfiguration" => {
                            builder = builder.set_null_value_format_configuration(
                                crate::protocol_serde::shape_null_value_format_configuration::de_null_value_format_configuration(tokens)?,
                            );
                        }
                        _ => ::aws_smithy_json::deserialize::token::skip_value(tokens)?,
                    },
                    other => {
                        return Err(::aws_smithy_json::deserialize::error::DeserializeError::custom(format!(
                            "expected object key or end object, found: {:?}",
                            other
                        )))
                    }
                }
            }
            Ok(Some(builder.build()))
        }
        _ => Err(::aws_smithy_json::deserialize::error::DeserializeError::custom(
            "expected start object or null",
        )),
    }
}
