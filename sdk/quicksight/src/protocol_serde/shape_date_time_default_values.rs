// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_date_time_default_values(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::types::DateTimeDefaultValues,
) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    if let Some(var_1) = &input.dynamic_value {
        #[allow(unused_mut)]
        let mut object_2 = object.key("DynamicValue").start_object();
        crate::protocol_serde::shape_dynamic_default_value::ser_dynamic_default_value(
            &mut object_2,
            var_1,
        )?;
        object_2.finish();
    }
    if let Some(var_3) = &input.static_values {
        let mut array_4 = object.key("StaticValues").start_array();
        for item_5 in var_3 {
            {
                array_4
                    .value()
                    .date_time(item_5, aws_smithy_types::date_time::Format::EpochSeconds)?;
            }
        }
        array_4.finish();
    }
    if let Some(var_6) = &input.rolling_date {
        #[allow(unused_mut)]
        let mut object_7 = object.key("RollingDate").start_object();
        crate::protocol_serde::shape_rolling_date_configuration::ser_rolling_date_configuration(
            &mut object_7,
            var_6,
        )?;
        object_7.finish();
    }
    Ok(())
}

pub(crate) fn de_date_time_default_values<'a, I>(
    tokens: &mut std::iter::Peekable<I>,
) -> Result<
    Option<crate::types::DateTimeDefaultValues>,
    aws_smithy_json::deserialize::error::DeserializeError,
>
where
    I: Iterator<
        Item = Result<
            aws_smithy_json::deserialize::Token<'a>,
            aws_smithy_json::deserialize::error::DeserializeError,
        >,
    >,
{
    match tokens.next().transpose()? {
        Some(aws_smithy_json::deserialize::Token::ValueNull { .. }) => Ok(None),
        Some(aws_smithy_json::deserialize::Token::StartObject { .. }) => {
            #[allow(unused_mut)]
            let mut builder = crate::types::builders::DateTimeDefaultValuesBuilder::default();
            loop {
                match tokens.next().transpose()? {
                    Some(aws_smithy_json::deserialize::Token::EndObject { .. }) => break,
                    Some(aws_smithy_json::deserialize::Token::ObjectKey { key, .. }) => {
                        match key.to_unescaped()?.as_ref() {
                            "DynamicValue" => {
                                builder = builder.set_dynamic_value(
                                    crate::protocol_serde::shape_dynamic_default_value::de_dynamic_default_value(tokens)?
                                );
                            }
                            "StaticValues" => {
                                builder = builder.set_static_values(
                                    crate::protocol_serde::shape_date_time_default_value_list::de_date_time_default_value_list(tokens)?
                                );
                            }
                            "RollingDate" => {
                                builder = builder.set_rolling_date(
                                    crate::protocol_serde::shape_rolling_date_configuration::de_rolling_date_configuration(tokens)?
                                );
                            }
                            _ => aws_smithy_json::deserialize::token::skip_value(tokens)?,
                        }
                    }
                    other => {
                        return Err(
                            aws_smithy_json::deserialize::error::DeserializeError::custom(format!(
                                "expected object key or end object, found: {:?}",
                                other
                            )),
                        )
                    }
                }
            }
            Ok(Some(builder.build()))
        }
        _ => Err(
            aws_smithy_json::deserialize::error::DeserializeError::custom(
                "expected start object or null",
            ),
        ),
    }
}
