// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DeleteObjectInput {
    /// <p>The path (including the file name) where the object is stored in the container. Format: <folder name>
    /// /
    /// <folder name>
    /// /
    /// <file name></file>
    /// </folder>
    /// </folder></p>
    #[doc(hidden)]
    pub path: std::option::Option<std::string::String>,
}
impl DeleteObjectInput {
    /// <p>The path (including the file name) where the object is stored in the container. Format: <folder name>
    /// /
    /// <folder name>
    /// /
    /// <file name></file>
    /// </folder>
    /// </folder></p>
    pub fn path(&self) -> std::option::Option<&str> {
        self.path.as_deref()
    }
}
impl DeleteObjectInput {
    /// Creates a new builder-style object to manufacture [`DeleteObjectInput`](crate::operation::delete_object::DeleteObjectInput).
    pub fn builder() -> crate::operation::delete_object::builders::DeleteObjectInputBuilder {
        crate::operation::delete_object::builders::DeleteObjectInputBuilder::default()
    }
}

/// A builder for [`DeleteObjectInput`](crate::operation::delete_object::DeleteObjectInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DeleteObjectInputBuilder {
    pub(crate) path: std::option::Option<std::string::String>,
}
impl DeleteObjectInputBuilder {
    /// <p>The path (including the file name) where the object is stored in the container. Format: <folder name>
    /// /
    /// <folder name>
    /// /
    /// <file name></file>
    /// </folder>
    /// </folder></p>
    pub fn path(mut self, input: impl Into<std::string::String>) -> Self {
        self.path = Some(input.into());
        self
    }
    /// <p>The path (including the file name) where the object is stored in the container. Format: <folder name>
    /// /
    /// <folder name>
    /// /
    /// <file name></file>
    /// </folder>
    /// </folder></p>
    pub fn set_path(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.path = input;
        self
    }
    /// Consumes the builder and constructs a [`DeleteObjectInput`](crate::operation::delete_object::DeleteObjectInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::delete_object::DeleteObjectInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(crate::operation::delete_object::DeleteObjectInput { path: self.path })
    }
}
