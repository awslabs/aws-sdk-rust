// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DescribeObjectInput {
    /// <p>The path (including the file name) where the object is stored in the container. Format: <folder name>
    /// /
    /// <folder name>
    /// /
    /// <file name></file>
    /// </folder>
    /// </folder></p>
    pub path: ::std::option::Option<::std::string::String>,
}
impl DescribeObjectInput {
    /// <p>The path (including the file name) where the object is stored in the container. Format: <folder name>
    /// /
    /// <folder name>
    /// /
    /// <file name></file>
    /// </folder>
    /// </folder></p>
    pub fn path(&self) -> ::std::option::Option<&str> {
        self.path.as_deref()
    }
}
impl DescribeObjectInput {
    /// Creates a new builder-style object to manufacture [`DescribeObjectInput`](crate::operation::describe_object::DescribeObjectInput).
    pub fn builder() -> crate::operation::describe_object::builders::DescribeObjectInputBuilder {
        crate::operation::describe_object::builders::DescribeObjectInputBuilder::default()
    }
}

/// A builder for [`DescribeObjectInput`](crate::operation::describe_object::DescribeObjectInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DescribeObjectInputBuilder {
    pub(crate) path: ::std::option::Option<::std::string::String>,
}
impl DescribeObjectInputBuilder {
    /// <p>The path (including the file name) where the object is stored in the container. Format: <folder name>
    /// /
    /// <folder name>
    /// /
    /// <file name></file>
    /// </folder>
    /// </folder></p>
    /// This field is required.
    pub fn path(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.path = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The path (including the file name) where the object is stored in the container. Format: <folder name>
    /// /
    /// <folder name>
    /// /
    /// <file name></file>
    /// </folder>
    /// </folder></p>
    pub fn set_path(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.path = input;
        self
    }
    /// <p>The path (including the file name) where the object is stored in the container. Format: <folder name>
    /// /
    /// <folder name>
    /// /
    /// <file name></file>
    /// </folder>
    /// </folder></p>
    pub fn get_path(&self) -> &::std::option::Option<::std::string::String> {
        &self.path
    }
    /// Consumes the builder and constructs a [`DescribeObjectInput`](crate::operation::describe_object::DescribeObjectInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::describe_object::DescribeObjectInput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::operation::describe_object::DescribeObjectInput { path: self.path })
    }
}
