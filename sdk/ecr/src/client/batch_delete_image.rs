// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`BatchDeleteImage`](crate::operation::batch_delete_image::builders::BatchDeleteImageFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`registry_id(impl Into<String>)`](crate::operation::batch_delete_image::builders::BatchDeleteImageFluentBuilder::registry_id) / [`set_registry_id(Option<String>)`](crate::operation::batch_delete_image::builders::BatchDeleteImageFluentBuilder::set_registry_id): <p>The Amazon Web Services account ID associated with the registry that contains the image to delete. If you do not specify a registry, the default registry is assumed.</p>
    ///   - [`repository_name(impl Into<String>)`](crate::operation::batch_delete_image::builders::BatchDeleteImageFluentBuilder::repository_name) / [`set_repository_name(Option<String>)`](crate::operation::batch_delete_image::builders::BatchDeleteImageFluentBuilder::set_repository_name): <p>The repository that contains the image to delete.</p>
    ///   - [`image_ids(Vec<ImageIdentifier>)`](crate::operation::batch_delete_image::builders::BatchDeleteImageFluentBuilder::image_ids) / [`set_image_ids(Option<Vec<ImageIdentifier>>)`](crate::operation::batch_delete_image::builders::BatchDeleteImageFluentBuilder::set_image_ids): <p>A list of image ID references that correspond to images to delete. The format of the <code>imageIds</code> reference is <code>imageTag=tag</code> or <code>imageDigest=digest</code>.</p>
    /// - On success, responds with [`BatchDeleteImageOutput`](crate::operation::batch_delete_image::BatchDeleteImageOutput) with field(s):
    ///   - [`image_ids(Option<Vec<ImageIdentifier>>)`](crate::operation::batch_delete_image::BatchDeleteImageOutput::image_ids): <p>The image IDs of the deleted images.</p>
    ///   - [`failures(Option<Vec<ImageFailure>>)`](crate::operation::batch_delete_image::BatchDeleteImageOutput::failures): <p>Any failures associated with the call.</p>
    /// - On failure, responds with [`SdkError<BatchDeleteImageError>`](crate::operation::batch_delete_image::BatchDeleteImageError)
    pub fn batch_delete_image(
        &self,
    ) -> crate::operation::batch_delete_image::builders::BatchDeleteImageFluentBuilder {
        crate::operation::batch_delete_image::builders::BatchDeleteImageFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
