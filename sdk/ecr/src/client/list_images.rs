// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListImages`](crate::operation::list_images::builders::ListImagesFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::list_images::builders::ListImagesFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`registry_id(impl Into<String>)`](crate::operation::list_images::builders::ListImagesFluentBuilder::registry_id) / [`set_registry_id(Option<String>)`](crate::operation::list_images::builders::ListImagesFluentBuilder::set_registry_id):<br>required: **false**<br><p>The Amazon Web Services account ID associated with the registry that contains the repository in which to list images. If you do not specify a registry, the default registry is assumed.</p><br>
    ///   - [`repository_name(impl Into<String>)`](crate::operation::list_images::builders::ListImagesFluentBuilder::repository_name) / [`set_repository_name(Option<String>)`](crate::operation::list_images::builders::ListImagesFluentBuilder::set_repository_name):<br>required: **true**<br><p>The repository with image IDs to be listed.</p><br>
    ///   - [`next_token(impl Into<String>)`](crate::operation::list_images::builders::ListImagesFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::list_images::builders::ListImagesFluentBuilder::set_next_token):<br>required: **false**<br><p>The <code>nextToken</code> value returned from a previous paginated <code>ListImages</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is <code>null</code> when there are no more results to return.</p> <note>   <p>This token should be treated as an opaque identifier that is only used to retrieve the next items in a list and not for other programmatic purposes.</p>  </note><br>
    ///   - [`max_results(i32)`](crate::operation::list_images::builders::ListImagesFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::list_images::builders::ListImagesFluentBuilder::set_max_results):<br>required: **false**<br><p>The maximum number of image results returned by <code>ListImages</code> in paginated output. When this parameter is used, <code>ListImages</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListImages</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 1000. If this parameter is not used, then <code>ListImages</code> returns up to 100 results and a <code>nextToken</code> value, if applicable.</p><br>
    ///   - [`filter(ListImagesFilter)`](crate::operation::list_images::builders::ListImagesFluentBuilder::filter) / [`set_filter(Option<ListImagesFilter>)`](crate::operation::list_images::builders::ListImagesFluentBuilder::set_filter):<br>required: **false**<br><p>The filter key and value with which to filter your <code>ListImages</code> results.</p><br>
    /// - On success, responds with [`ListImagesOutput`](crate::operation::list_images::ListImagesOutput) with field(s):
    ///   - [`image_ids(Option<Vec::<ImageIdentifier>>)`](crate::operation::list_images::ListImagesOutput::image_ids): <p>The list of image IDs for the requested repository.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::list_images::ListImagesOutput::next_token): <p>The <code>nextToken</code> value to include in a future <code>ListImages</code> request. When the results of a <code>ListImages</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>
    /// - On failure, responds with [`SdkError<ListImagesError>`](crate::operation::list_images::ListImagesError)
    pub fn list_images(&self) -> crate::operation::list_images::builders::ListImagesFluentBuilder {
        crate::operation::list_images::builders::ListImagesFluentBuilder::new(self.handle.clone())
    }
}
