// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeletePullThroughCacheRule`](crate::client::fluent_builders::DeletePullThroughCacheRule) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`ecr_repository_prefix(impl Into<String>)`](crate::client::fluent_builders::DeletePullThroughCacheRule::ecr_repository_prefix) / [`set_ecr_repository_prefix(Option<String>)`](crate::client::fluent_builders::DeletePullThroughCacheRule::set_ecr_repository_prefix): <p>The Amazon ECR repository prefix associated with the pull through cache rule to delete.</p>
    ///   - [`registry_id(impl Into<String>)`](crate::client::fluent_builders::DeletePullThroughCacheRule::registry_id) / [`set_registry_id(Option<String>)`](crate::client::fluent_builders::DeletePullThroughCacheRule::set_registry_id): <p>The Amazon Web Services account ID associated with the registry that contains the pull through cache rule. If you do not specify a registry, the default registry is assumed.</p>
    /// - On success, responds with [`DeletePullThroughCacheRuleOutput`](crate::output::DeletePullThroughCacheRuleOutput) with field(s):
    ///   - [`ecr_repository_prefix(Option<String>)`](crate::output::DeletePullThroughCacheRuleOutput::ecr_repository_prefix): <p>The Amazon ECR repository prefix associated with the request.</p>
    ///   - [`upstream_registry_url(Option<String>)`](crate::output::DeletePullThroughCacheRuleOutput::upstream_registry_url): <p>The upstream registry URL associated with the pull through cache rule.</p>
    ///   - [`created_at(Option<DateTime>)`](crate::output::DeletePullThroughCacheRuleOutput::created_at): <p>The timestamp associated with the pull through cache rule.</p>
    ///   - [`registry_id(Option<String>)`](crate::output::DeletePullThroughCacheRuleOutput::registry_id): <p>The registry ID associated with the request.</p>
    /// - On failure, responds with [`SdkError<DeletePullThroughCacheRuleError>`](crate::error::DeletePullThroughCacheRuleError)
    pub fn delete_pull_through_cache_rule(
        &self,
    ) -> crate::client::fluent_builders::DeletePullThroughCacheRule {
        crate::client::fluent_builders::DeletePullThroughCacheRule::new(self.handle.clone())
    }
}
