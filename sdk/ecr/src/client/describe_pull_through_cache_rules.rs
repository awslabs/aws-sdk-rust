// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribePullThroughCacheRules`](crate::client::fluent_builders::DescribePullThroughCacheRules) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::DescribePullThroughCacheRules::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`registry_id(impl Into<String>)`](crate::client::fluent_builders::DescribePullThroughCacheRules::registry_id) / [`set_registry_id(Option<String>)`](crate::client::fluent_builders::DescribePullThroughCacheRules::set_registry_id): <p>The Amazon Web Services account ID associated with the registry to return the pull through cache rules for. If you do not specify a registry, the default registry is assumed.</p>
    ///   - [`ecr_repository_prefixes(Vec<String>)`](crate::client::fluent_builders::DescribePullThroughCacheRules::ecr_repository_prefixes) / [`set_ecr_repository_prefixes(Option<Vec<String>>)`](crate::client::fluent_builders::DescribePullThroughCacheRules::set_ecr_repository_prefixes): <p>The Amazon ECR repository prefixes associated with the pull through cache rules to return. If no repository prefix value is specified, all pull through cache rules are returned.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::DescribePullThroughCacheRules::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::DescribePullThroughCacheRules::set_next_token): <p>The <code>nextToken</code> value returned from a previous paginated <code>DescribePullThroughCacheRulesRequest</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is null when there are no more results to return.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::DescribePullThroughCacheRules::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::DescribePullThroughCacheRules::set_max_results): <p>The maximum number of pull through cache rules returned by <code>DescribePullThroughCacheRulesRequest</code> in paginated output. When this parameter is used, <code>DescribePullThroughCacheRulesRequest</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>DescribePullThroughCacheRulesRequest</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 1000. If this parameter is not used, then <code>DescribePullThroughCacheRulesRequest</code> returns up to 100 results and a <code>nextToken</code> value, if applicable.</p>
    /// - On success, responds with [`DescribePullThroughCacheRulesOutput`](crate::output::DescribePullThroughCacheRulesOutput) with field(s):
    ///   - [`pull_through_cache_rules(Option<Vec<PullThroughCacheRule>>)`](crate::output::DescribePullThroughCacheRulesOutput::pull_through_cache_rules): <p>The details of the pull through cache rules.</p>
    ///   - [`next_token(Option<String>)`](crate::output::DescribePullThroughCacheRulesOutput::next_token): <p>The <code>nextToken</code> value to include in a future <code>DescribePullThroughCacheRulesRequest</code> request. When the results of a <code>DescribePullThroughCacheRulesRequest</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is null when there are no more results to return.</p>
    /// - On failure, responds with [`SdkError<DescribePullThroughCacheRulesError>`](crate::error::DescribePullThroughCacheRulesError)
    pub fn describe_pull_through_cache_rules(
        &self,
    ) -> crate::client::fluent_builders::DescribePullThroughCacheRules {
        crate::client::fluent_builders::DescribePullThroughCacheRules::new(self.handle.clone())
    }
}
