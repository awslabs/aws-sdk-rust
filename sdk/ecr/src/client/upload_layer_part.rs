// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UploadLayerPart`](crate::operation::upload_layer_part::builders::UploadLayerPartFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`registry_id(impl Into<String>)`](crate::operation::upload_layer_part::builders::UploadLayerPartFluentBuilder::registry_id) / [`set_registry_id(Option<String>)`](crate::operation::upload_layer_part::builders::UploadLayerPartFluentBuilder::set_registry_id): <p>The Amazon Web Services account ID associated with the registry to which you are uploading layer parts. If you do not specify a registry, the default registry is assumed.</p>
    ///   - [`repository_name(impl Into<String>)`](crate::operation::upload_layer_part::builders::UploadLayerPartFluentBuilder::repository_name) / [`set_repository_name(Option<String>)`](crate::operation::upload_layer_part::builders::UploadLayerPartFluentBuilder::set_repository_name): <p>The name of the repository to which you are uploading layer parts.</p>
    ///   - [`upload_id(impl Into<String>)`](crate::operation::upload_layer_part::builders::UploadLayerPartFluentBuilder::upload_id) / [`set_upload_id(Option<String>)`](crate::operation::upload_layer_part::builders::UploadLayerPartFluentBuilder::set_upload_id): <p>The upload ID from a previous <code>InitiateLayerUpload</code> operation to associate with the layer part upload.</p>
    ///   - [`part_first_byte(i64)`](crate::operation::upload_layer_part::builders::UploadLayerPartFluentBuilder::part_first_byte) / [`set_part_first_byte(Option<i64>)`](crate::operation::upload_layer_part::builders::UploadLayerPartFluentBuilder::set_part_first_byte): <p>The position of the first byte of the layer part witin the overall image layer.</p>
    ///   - [`part_last_byte(i64)`](crate::operation::upload_layer_part::builders::UploadLayerPartFluentBuilder::part_last_byte) / [`set_part_last_byte(Option<i64>)`](crate::operation::upload_layer_part::builders::UploadLayerPartFluentBuilder::set_part_last_byte): <p>The position of the last byte of the layer part within the overall image layer.</p>
    ///   - [`layer_part_blob(Blob)`](crate::operation::upload_layer_part::builders::UploadLayerPartFluentBuilder::layer_part_blob) / [`set_layer_part_blob(Option<Blob>)`](crate::operation::upload_layer_part::builders::UploadLayerPartFluentBuilder::set_layer_part_blob): <p>The base64-encoded layer part payload.</p>
    /// - On success, responds with [`UploadLayerPartOutput`](crate::operation::upload_layer_part::UploadLayerPartOutput) with field(s):
    ///   - [`registry_id(Option<String>)`](crate::operation::upload_layer_part::UploadLayerPartOutput::registry_id): <p>The registry ID associated with the request.</p>
    ///   - [`repository_name(Option<String>)`](crate::operation::upload_layer_part::UploadLayerPartOutput::repository_name): <p>The repository name associated with the request.</p>
    ///   - [`upload_id(Option<String>)`](crate::operation::upload_layer_part::UploadLayerPartOutput::upload_id): <p>The upload ID associated with the request.</p>
    ///   - [`last_byte_received(Option<i64>)`](crate::operation::upload_layer_part::UploadLayerPartOutput::last_byte_received): <p>The integer value of the last byte received in the request.</p>
    /// - On failure, responds with [`SdkError<UploadLayerPartError>`](crate::operation::upload_layer_part::UploadLayerPartError)
    pub fn upload_layer_part(
        &self,
    ) -> crate::operation::upload_layer_part::builders::UploadLayerPartFluentBuilder {
        crate::operation::upload_layer_part::builders::UploadLayerPartFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
