// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetLifecyclePolicyPreview`](crate::operation::get_lifecycle_policy_preview::builders::GetLifecyclePolicyPreviewFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::get_lifecycle_policy_preview::builders::GetLifecyclePolicyPreviewFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`registry_id(impl Into<String>)`](crate::operation::get_lifecycle_policy_preview::builders::GetLifecyclePolicyPreviewFluentBuilder::registry_id) / [`set_registry_id(Option<String>)`](crate::operation::get_lifecycle_policy_preview::builders::GetLifecyclePolicyPreviewFluentBuilder::set_registry_id): <p>The Amazon Web Services account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.</p>
    ///   - [`repository_name(impl Into<String>)`](crate::operation::get_lifecycle_policy_preview::builders::GetLifecyclePolicyPreviewFluentBuilder::repository_name) / [`set_repository_name(Option<String>)`](crate::operation::get_lifecycle_policy_preview::builders::GetLifecyclePolicyPreviewFluentBuilder::set_repository_name): <p>The name of the repository.</p>
    ///   - [`image_ids(Vec<ImageIdentifier>)`](crate::operation::get_lifecycle_policy_preview::builders::GetLifecyclePolicyPreviewFluentBuilder::image_ids) / [`set_image_ids(Option<Vec<ImageIdentifier>>)`](crate::operation::get_lifecycle_policy_preview::builders::GetLifecyclePolicyPreviewFluentBuilder::set_image_ids): <p>The list of imageIDs to be included.</p>
    ///   - [`next_token(impl Into<String>)`](crate::operation::get_lifecycle_policy_preview::builders::GetLifecyclePolicyPreviewFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::get_lifecycle_policy_preview::builders::GetLifecyclePolicyPreviewFluentBuilder::set_next_token): <p>The <code>nextToken</code> value returned from a previous paginated  <code>GetLifecyclePolicyPreviewRequest</code> request where <code>maxResults</code> was used and the  results exceeded the value of that parameter. Pagination continues from the end of the  previous results that returned the <code>nextToken</code> value. This value is  <code>null</code> when there are no more results to return. This option cannot be used when you specify images with <code>imageIds</code>.</p>
    ///   - [`max_results(i32)`](crate::operation::get_lifecycle_policy_preview::builders::GetLifecyclePolicyPreviewFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::get_lifecycle_policy_preview::builders::GetLifecyclePolicyPreviewFluentBuilder::set_max_results): <p>The maximum number of repository results returned by <code>GetLifecyclePolicyPreviewRequest</code> in  paginated output. When this parameter is used, <code>GetLifecyclePolicyPreviewRequest</code> only returns  <code>maxResults</code> results in a single page along with a <code>nextToken</code>  response element. The remaining results of the initial request can be seen by sending  another <code>GetLifecyclePolicyPreviewRequest</code> request with the returned <code>nextToken</code>  value. This value can be between 1 and 1000. If this  parameter is not used, then <code>GetLifecyclePolicyPreviewRequest</code> returns up to  100 results and a <code>nextToken</code> value, if  applicable. This option cannot be used when you specify images with <code>imageIds</code>.</p>
    ///   - [`filter(LifecyclePolicyPreviewFilter)`](crate::operation::get_lifecycle_policy_preview::builders::GetLifecyclePolicyPreviewFluentBuilder::filter) / [`set_filter(Option<LifecyclePolicyPreviewFilter>)`](crate::operation::get_lifecycle_policy_preview::builders::GetLifecyclePolicyPreviewFluentBuilder::set_filter): <p>An optional parameter that filters results based on image tag status and all tags, if tagged.</p>
    /// - On success, responds with [`GetLifecyclePolicyPreviewOutput`](crate::operation::get_lifecycle_policy_preview::GetLifecyclePolicyPreviewOutput) with field(s):
    ///   - [`registry_id(Option<String>)`](crate::operation::get_lifecycle_policy_preview::GetLifecyclePolicyPreviewOutput::registry_id): <p>The registry ID associated with the request.</p>
    ///   - [`repository_name(Option<String>)`](crate::operation::get_lifecycle_policy_preview::GetLifecyclePolicyPreviewOutput::repository_name): <p>The repository name associated with the request.</p>
    ///   - [`lifecycle_policy_text(Option<String>)`](crate::operation::get_lifecycle_policy_preview::GetLifecyclePolicyPreviewOutput::lifecycle_policy_text): <p>The JSON lifecycle policy text.</p>
    ///   - [`status(Option<LifecyclePolicyPreviewStatus>)`](crate::operation::get_lifecycle_policy_preview::GetLifecyclePolicyPreviewOutput::status): <p>The status of the lifecycle policy preview request.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::get_lifecycle_policy_preview::GetLifecyclePolicyPreviewOutput::next_token): <p>The <code>nextToken</code> value to include in a future <code>GetLifecyclePolicyPreview</code> request. When the results of a <code>GetLifecyclePolicyPreview</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.</p>
    ///   - [`preview_results(Option<Vec<LifecyclePolicyPreviewResult>>)`](crate::operation::get_lifecycle_policy_preview::GetLifecyclePolicyPreviewOutput::preview_results): <p>The results of the lifecycle policy preview request.</p>
    ///   - [`summary(Option<LifecyclePolicyPreviewSummary>)`](crate::operation::get_lifecycle_policy_preview::GetLifecyclePolicyPreviewOutput::summary): <p>The list of images that is returned as a result of the action.</p>
    /// - On failure, responds with [`SdkError<GetLifecyclePolicyPreviewError>`](crate::operation::get_lifecycle_policy_preview::GetLifecyclePolicyPreviewError)
    pub fn get_lifecycle_policy_preview(&self) -> crate::operation::get_lifecycle_policy_preview::builders::GetLifecyclePolicyPreviewFluentBuilder{
        crate::operation::get_lifecycle_policy_preview::builders::GetLifecyclePolicyPreviewFluentBuilder::new(self.handle.clone())
    }
}
