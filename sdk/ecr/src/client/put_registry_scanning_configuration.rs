// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`PutRegistryScanningConfiguration`](crate::operation::put_registry_scanning_configuration::builders::PutRegistryScanningConfigurationFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`scan_type(ScanType)`](crate::operation::put_registry_scanning_configuration::builders::PutRegistryScanningConfigurationFluentBuilder::scan_type) / [`set_scan_type(Option<ScanType>)`](crate::operation::put_registry_scanning_configuration::builders::PutRegistryScanningConfigurationFluentBuilder::set_scan_type): <p>The scanning type to set for the registry.</p>  <p>When a registry scanning configuration is not defined, by default the <code>BASIC</code> scan type is used. When basic scanning is used, you may specify filters to determine which individual repositories, or all repositories, are scanned when new images are pushed to those repositories. Alternatively, you can do manual scans of images with basic scanning.</p>  <p>When the <code>ENHANCED</code> scan type is set, Amazon Inspector provides automated vulnerability scanning. You may choose between continuous scanning or scan on push and you may specify filters to determine which individual repositories, or all repositories, are scanned.</p>
    ///   - [`rules(Vec<RegistryScanningRule>)`](crate::operation::put_registry_scanning_configuration::builders::PutRegistryScanningConfigurationFluentBuilder::rules) / [`set_rules(Option<Vec<RegistryScanningRule>>)`](crate::operation::put_registry_scanning_configuration::builders::PutRegistryScanningConfigurationFluentBuilder::set_rules): <p>The scanning rules to use for the registry. A scanning rule is used to determine which repository filters are used and at what frequency scanning will occur.</p>
    /// - On success, responds with [`PutRegistryScanningConfigurationOutput`](crate::operation::put_registry_scanning_configuration::PutRegistryScanningConfigurationOutput) with field(s):
    ///   - [`registry_scanning_configuration(Option<RegistryScanningConfiguration>)`](crate::operation::put_registry_scanning_configuration::PutRegistryScanningConfigurationOutput::registry_scanning_configuration): <p>The scanning configuration for your registry.</p>
    /// - On failure, responds with [`SdkError<PutRegistryScanningConfigurationError>`](crate::operation::put_registry_scanning_configuration::PutRegistryScanningConfigurationError)
    pub fn put_registry_scanning_configuration(&self) -> crate::operation::put_registry_scanning_configuration::builders::PutRegistryScanningConfigurationFluentBuilder{
        crate::operation::put_registry_scanning_configuration::builders::PutRegistryScanningConfigurationFluentBuilder::new(self.handle.clone())
    }
}
