// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The filter for the lifecycle policy preview.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct LifecyclePolicyPreviewFilter {
    /// <p>The tag status of the image.</p>
    #[doc(hidden)]
    pub tag_status: std::option::Option<crate::types::TagStatus>,
}
impl LifecyclePolicyPreviewFilter {
    /// <p>The tag status of the image.</p>
    pub fn tag_status(&self) -> std::option::Option<&crate::types::TagStatus> {
        self.tag_status.as_ref()
    }
}
impl LifecyclePolicyPreviewFilter {
    /// Creates a new builder-style object to manufacture [`LifecyclePolicyPreviewFilter`](crate::types::LifecyclePolicyPreviewFilter).
    pub fn builder() -> crate::types::builders::LifecyclePolicyPreviewFilterBuilder {
        crate::types::builders::LifecyclePolicyPreviewFilterBuilder::default()
    }
}

/// A builder for [`LifecyclePolicyPreviewFilter`](crate::types::LifecyclePolicyPreviewFilter).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct LifecyclePolicyPreviewFilterBuilder {
    pub(crate) tag_status: std::option::Option<crate::types::TagStatus>,
}
impl LifecyclePolicyPreviewFilterBuilder {
    /// <p>The tag status of the image.</p>
    pub fn tag_status(mut self, input: crate::types::TagStatus) -> Self {
        self.tag_status = Some(input);
        self
    }
    /// <p>The tag status of the image.</p>
    pub fn set_tag_status(mut self, input: std::option::Option<crate::types::TagStatus>) -> Self {
        self.tag_status = input;
        self
    }
    /// Consumes the builder and constructs a [`LifecyclePolicyPreviewFilter`](crate::types::LifecyclePolicyPreviewFilter).
    pub fn build(self) -> crate::types::LifecyclePolicyPreviewFilter {
        crate::types::LifecyclePolicyPreviewFilter {
            tag_status: self.tag_status,
        }
    }
}
