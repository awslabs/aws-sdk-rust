// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The current status of an image scan.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ImageScanStatus {
    /// <p>The current state of an image scan.</p>
    #[doc(hidden)]
    pub status: std::option::Option<crate::types::ScanStatus>,
    /// <p>The description of the image scan status.</p>
    #[doc(hidden)]
    pub description: std::option::Option<std::string::String>,
}
impl ImageScanStatus {
    /// <p>The current state of an image scan.</p>
    pub fn status(&self) -> std::option::Option<&crate::types::ScanStatus> {
        self.status.as_ref()
    }
    /// <p>The description of the image scan status.</p>
    pub fn description(&self) -> std::option::Option<&str> {
        self.description.as_deref()
    }
}
impl ImageScanStatus {
    /// Creates a new builder-style object to manufacture [`ImageScanStatus`](crate::types::ImageScanStatus).
    pub fn builder() -> crate::types::builders::ImageScanStatusBuilder {
        crate::types::builders::ImageScanStatusBuilder::default()
    }
}

/// A builder for [`ImageScanStatus`](crate::types::ImageScanStatus).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ImageScanStatusBuilder {
    pub(crate) status: std::option::Option<crate::types::ScanStatus>,
    pub(crate) description: std::option::Option<std::string::String>,
}
impl ImageScanStatusBuilder {
    /// <p>The current state of an image scan.</p>
    pub fn status(mut self, input: crate::types::ScanStatus) -> Self {
        self.status = Some(input);
        self
    }
    /// <p>The current state of an image scan.</p>
    pub fn set_status(mut self, input: std::option::Option<crate::types::ScanStatus>) -> Self {
        self.status = input;
        self
    }
    /// <p>The description of the image scan status.</p>
    pub fn description(mut self, input: impl Into<std::string::String>) -> Self {
        self.description = Some(input.into());
        self
    }
    /// <p>The description of the image scan status.</p>
    pub fn set_description(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.description = input;
        self
    }
    /// Consumes the builder and constructs a [`ImageScanStatus`](crate::types::ImageScanStatus).
    pub fn build(self) -> crate::types::ImageScanStatus {
        crate::types::ImageScanStatus {
            status: self.status,
            description: self.description,
        }
    }
}
