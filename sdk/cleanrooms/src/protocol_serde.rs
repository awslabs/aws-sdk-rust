// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) mod shape_batch_get_schema;

pub fn parse_http_error_metadata(
    response: &http::Response<bytes::Bytes>,
) -> Result<
    aws_smithy_types::error::metadata::Builder,
    aws_smithy_json::deserialize::error::DeserializeError,
> {
    crate::json_errors::parse_error_metadata(response.body(), response.headers())
}

pub(crate) mod shape_create_collaboration;

pub(crate) mod shape_create_configured_table;

pub(crate) mod shape_create_configured_table_analysis_rule;

pub(crate) mod shape_create_configured_table_association;

pub(crate) mod shape_create_membership;

pub(crate) mod shape_delete_collaboration;

pub(crate) mod shape_delete_configured_table;

pub(crate) mod shape_delete_configured_table_analysis_rule;

pub(crate) mod shape_delete_configured_table_association;

pub(crate) mod shape_delete_member;

pub(crate) mod shape_delete_membership;

pub(crate) mod shape_get_collaboration;

pub(crate) mod shape_get_configured_table;

pub(crate) mod shape_get_configured_table_analysis_rule;

pub(crate) mod shape_get_configured_table_association;

pub(crate) mod shape_get_membership;

pub(crate) mod shape_get_protected_query;

pub(crate) mod shape_get_schema;

pub(crate) mod shape_get_schema_analysis_rule;

pub(crate) mod shape_list_collaborations;

pub(crate) mod shape_list_configured_table_associations;

pub(crate) mod shape_list_configured_tables;

pub(crate) mod shape_list_members;

pub(crate) mod shape_list_memberships;

pub(crate) mod shape_list_protected_queries;

pub(crate) mod shape_list_schemas;

pub(crate) mod shape_start_protected_query;

pub(crate) mod shape_update_collaboration;

pub(crate) mod shape_update_configured_table;

pub(crate) mod shape_update_configured_table_analysis_rule;

pub(crate) mod shape_update_configured_table_association;

pub(crate) mod shape_update_membership;

pub(crate) mod shape_update_protected_query;

pub(crate) fn or_empty_doc(data: &[u8]) -> &[u8] {
    if data.is_empty() {
        b"{}"
    } else {
        data
    }
}

pub(crate) mod shape_access_denied_exception;

pub(crate) mod shape_batch_get_schema_input;

pub(crate) mod shape_conflict_exception;

pub(crate) mod shape_create_collaboration_input;

pub(crate) mod shape_create_configured_table_analysis_rule_input;

pub(crate) mod shape_create_configured_table_association_input;

pub(crate) mod shape_create_configured_table_input;

pub(crate) mod shape_create_membership_input;

pub(crate) mod shape_internal_server_exception;

pub(crate) mod shape_resource_not_found_exception;

pub(crate) mod shape_service_quota_exceeded_exception;

pub(crate) mod shape_start_protected_query_input;

pub(crate) mod shape_throttling_exception;

pub(crate) mod shape_update_collaboration_input;

pub(crate) mod shape_update_configured_table_analysis_rule_input;

pub(crate) mod shape_update_configured_table_association_input;

pub(crate) mod shape_update_configured_table_input;

pub(crate) mod shape_update_membership_input;

pub(crate) mod shape_update_protected_query_input;

pub(crate) mod shape_validation_exception;

pub(crate) mod shape_analysis_rule;

pub(crate) mod shape_batch_get_schema_error_list;

pub(crate) mod shape_collaboration;

pub(crate) mod shape_collaboration_summary_list;

pub(crate) mod shape_configured_table;

pub(crate) mod shape_configured_table_analysis_rule;

pub(crate) mod shape_configured_table_analysis_rule_policy;

pub(crate) mod shape_configured_table_association;

pub(crate) mod shape_configured_table_association_summary_list;

pub(crate) mod shape_configured_table_summary_list;

pub(crate) mod shape_data_encryption_metadata;

pub(crate) mod shape_member_specification;

pub(crate) mod shape_member_summary_list;

pub(crate) mod shape_membership;

pub(crate) mod shape_membership_summary_list;

pub(crate) mod shape_protected_query;

pub(crate) mod shape_protected_query_result_configuration;

pub(crate) mod shape_protected_query_sql_parameters;

pub(crate) mod shape_protected_query_summary_list;

pub(crate) mod shape_schema;

pub(crate) mod shape_schema_list;

pub(crate) mod shape_schema_summary_list;

pub(crate) mod shape_table_reference;

pub(crate) mod shape_validation_exception_field_list;

pub(crate) mod shape_allowed_column_list;

pub(crate) mod shape_analysis_rule_policy;

pub(crate) mod shape_analysis_rule_type_list;

pub(crate) mod shape_batch_get_schema_error;

pub(crate) mod shape_collaboration_summary;

pub(crate) mod shape_column_list;

pub(crate) mod shape_configured_table_analysis_rule_policy_v1;

pub(crate) mod shape_configured_table_analysis_rule_type_list;

pub(crate) mod shape_configured_table_association_summary;

pub(crate) mod shape_configured_table_summary;

pub(crate) mod shape_glue_table_reference;

pub(crate) mod shape_member_abilities;

pub(crate) mod shape_member_summary;

pub(crate) mod shape_membership_summary;

pub(crate) mod shape_protected_query_error;

pub(crate) mod shape_protected_query_output_configuration;

pub(crate) mod shape_protected_query_result;

pub(crate) mod shape_protected_query_statistics;

pub(crate) mod shape_protected_query_summary;

pub(crate) mod shape_schema_summary;

pub(crate) mod shape_validation_exception_field;

pub(crate) mod shape_analysis_rule_aggregation;

pub(crate) mod shape_analysis_rule_list;

pub(crate) mod shape_analysis_rule_policy_v1;

pub(crate) mod shape_column;

pub(crate) mod shape_protected_query_output;

pub(crate) mod shape_protected_query_s3_output_configuration;

pub(crate) mod shape_aggregate_column;

pub(crate) mod shape_aggregation_constraint;

pub(crate) mod shape_protected_query_s3_output;

pub(crate) mod shape_aggregate_column_list;

pub(crate) mod shape_aggregation_constraints;

pub(crate) mod shape_analysis_rule_column_list;

pub(crate) mod shape_scalar_functions_list;

pub(crate) mod shape_analysis_rule_column_name_list;
