// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Basic metadata used to construct a new member.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct MemberSpecification {
    /// <p>The identifier used to reference members of the collaboration. Currently only supports AWS Account ID.</p>
    #[doc(hidden)]
    pub account_id: std::option::Option<std::string::String>,
    /// <p>The abilities granted to the collaboration member.</p>
    #[doc(hidden)]
    pub member_abilities: std::option::Option<std::vec::Vec<crate::types::MemberAbility>>,
    /// <p>The member's display name.</p>
    #[doc(hidden)]
    pub display_name: std::option::Option<std::string::String>,
}
impl MemberSpecification {
    /// <p>The identifier used to reference members of the collaboration. Currently only supports AWS Account ID.</p>
    pub fn account_id(&self) -> std::option::Option<&str> {
        self.account_id.as_deref()
    }
    /// <p>The abilities granted to the collaboration member.</p>
    pub fn member_abilities(&self) -> std::option::Option<&[crate::types::MemberAbility]> {
        self.member_abilities.as_deref()
    }
    /// <p>The member's display name.</p>
    pub fn display_name(&self) -> std::option::Option<&str> {
        self.display_name.as_deref()
    }
}
impl MemberSpecification {
    /// Creates a new builder-style object to manufacture [`MemberSpecification`](crate::types::MemberSpecification).
    pub fn builder() -> crate::types::builders::MemberSpecificationBuilder {
        crate::types::builders::MemberSpecificationBuilder::default()
    }
}

/// A builder for [`MemberSpecification`](crate::types::MemberSpecification).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct MemberSpecificationBuilder {
    pub(crate) account_id: std::option::Option<std::string::String>,
    pub(crate) member_abilities: std::option::Option<std::vec::Vec<crate::types::MemberAbility>>,
    pub(crate) display_name: std::option::Option<std::string::String>,
}
impl MemberSpecificationBuilder {
    /// <p>The identifier used to reference members of the collaboration. Currently only supports AWS Account ID.</p>
    pub fn account_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.account_id = Some(input.into());
        self
    }
    /// <p>The identifier used to reference members of the collaboration. Currently only supports AWS Account ID.</p>
    pub fn set_account_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.account_id = input;
        self
    }
    /// Appends an item to `member_abilities`.
    ///
    /// To override the contents of this collection use [`set_member_abilities`](Self::set_member_abilities).
    ///
    /// <p>The abilities granted to the collaboration member.</p>
    pub fn member_abilities(mut self, input: crate::types::MemberAbility) -> Self {
        let mut v = self.member_abilities.unwrap_or_default();
        v.push(input);
        self.member_abilities = Some(v);
        self
    }
    /// <p>The abilities granted to the collaboration member.</p>
    pub fn set_member_abilities(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::MemberAbility>>,
    ) -> Self {
        self.member_abilities = input;
        self
    }
    /// <p>The member's display name.</p>
    pub fn display_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.display_name = Some(input.into());
        self
    }
    /// <p>The member's display name.</p>
    pub fn set_display_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.display_name = input;
        self
    }
    /// Consumes the builder and constructs a [`MemberSpecification`](crate::types::MemberSpecification).
    pub fn build(self) -> crate::types::MemberSpecification {
        crate::types::MemberSpecification {
            account_id: self.account_id,
            member_abilities: self.member_abilities,
            display_name: self.display_name,
        }
    }
}
