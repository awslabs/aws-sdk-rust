// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains configurations for protected query results.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct MembershipProtectedQueryResultConfiguration {
    /// <p>Configuration for protected query results.</p>
    pub output_configuration: ::std::option::Option<crate::types::MembershipProtectedQueryOutputConfiguration>,
    /// <p>The unique ARN for an IAM role that is used by Clean Rooms to write protected query results to the result location, given by the member who can receive results.</p>
    pub role_arn: ::std::option::Option<::std::string::String>,
}
impl MembershipProtectedQueryResultConfiguration {
    /// <p>Configuration for protected query results.</p>
    pub fn output_configuration(&self) -> ::std::option::Option<&crate::types::MembershipProtectedQueryOutputConfiguration> {
        self.output_configuration.as_ref()
    }
    /// <p>The unique ARN for an IAM role that is used by Clean Rooms to write protected query results to the result location, given by the member who can receive results.</p>
    pub fn role_arn(&self) -> ::std::option::Option<&str> {
        self.role_arn.as_deref()
    }
}
impl MembershipProtectedQueryResultConfiguration {
    /// Creates a new builder-style object to manufacture [`MembershipProtectedQueryResultConfiguration`](crate::types::MembershipProtectedQueryResultConfiguration).
    pub fn builder() -> crate::types::builders::MembershipProtectedQueryResultConfigurationBuilder {
        crate::types::builders::MembershipProtectedQueryResultConfigurationBuilder::default()
    }
}

/// A builder for [`MembershipProtectedQueryResultConfiguration`](crate::types::MembershipProtectedQueryResultConfiguration).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct MembershipProtectedQueryResultConfigurationBuilder {
    pub(crate) output_configuration: ::std::option::Option<crate::types::MembershipProtectedQueryOutputConfiguration>,
    pub(crate) role_arn: ::std::option::Option<::std::string::String>,
}
impl MembershipProtectedQueryResultConfigurationBuilder {
    /// <p>Configuration for protected query results.</p>
    /// This field is required.
    pub fn output_configuration(mut self, input: crate::types::MembershipProtectedQueryOutputConfiguration) -> Self {
        self.output_configuration = ::std::option::Option::Some(input);
        self
    }
    /// <p>Configuration for protected query results.</p>
    pub fn set_output_configuration(mut self, input: ::std::option::Option<crate::types::MembershipProtectedQueryOutputConfiguration>) -> Self {
        self.output_configuration = input;
        self
    }
    /// <p>Configuration for protected query results.</p>
    pub fn get_output_configuration(&self) -> &::std::option::Option<crate::types::MembershipProtectedQueryOutputConfiguration> {
        &self.output_configuration
    }
    /// <p>The unique ARN for an IAM role that is used by Clean Rooms to write protected query results to the result location, given by the member who can receive results.</p>
    pub fn role_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.role_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The unique ARN for an IAM role that is used by Clean Rooms to write protected query results to the result location, given by the member who can receive results.</p>
    pub fn set_role_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.role_arn = input;
        self
    }
    /// <p>The unique ARN for an IAM role that is used by Clean Rooms to write protected query results to the result location, given by the member who can receive results.</p>
    pub fn get_role_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.role_arn
    }
    /// Consumes the builder and constructs a [`MembershipProtectedQueryResultConfiguration`](crate::types::MembershipProtectedQueryResultConfiguration).
    pub fn build(self) -> crate::types::MembershipProtectedQueryResultConfiguration {
        crate::types::MembershipProtectedQueryResultConfiguration {
            output_configuration: self.output_configuration,
            role_arn: self.role_arn,
        }
    }
}
