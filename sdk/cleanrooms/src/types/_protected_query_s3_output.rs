// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains output information for protected queries with an S3 output type.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ProtectedQueryS3Output {
    /// <p>The S3 location of the result.</p>
    #[doc(hidden)]
    pub location: std::option::Option<std::string::String>,
}
impl ProtectedQueryS3Output {
    /// <p>The S3 location of the result.</p>
    pub fn location(&self) -> std::option::Option<&str> {
        self.location.as_deref()
    }
}
impl ProtectedQueryS3Output {
    /// Creates a new builder-style object to manufacture [`ProtectedQueryS3Output`](crate::types::ProtectedQueryS3Output).
    pub fn builder() -> crate::types::builders::ProtectedQueryS3OutputBuilder {
        crate::types::builders::ProtectedQueryS3OutputBuilder::default()
    }
}

/// A builder for [`ProtectedQueryS3Output`](crate::types::ProtectedQueryS3Output).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ProtectedQueryS3OutputBuilder {
    pub(crate) location: std::option::Option<std::string::String>,
}
impl ProtectedQueryS3OutputBuilder {
    /// <p>The S3 location of the result.</p>
    pub fn location(mut self, input: impl Into<std::string::String>) -> Self {
        self.location = Some(input.into());
        self
    }
    /// <p>The S3 location of the result.</p>
    pub fn set_location(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.location = input;
        self
    }
    /// Consumes the builder and constructs a [`ProtectedQueryS3Output`](crate::types::ProtectedQueryS3Output).
    pub fn build(self) -> crate::types::ProtectedQueryS3Output {
        crate::types::ProtectedQueryS3Output {
            location: self.location,
        }
    }
}
