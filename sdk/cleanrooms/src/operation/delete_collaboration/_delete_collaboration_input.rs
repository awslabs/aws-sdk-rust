// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DeleteCollaborationInput {
    /// <p>The identifier for the collaboration.</p>
    #[doc(hidden)]
    pub collaboration_identifier: std::option::Option<std::string::String>,
}
impl DeleteCollaborationInput {
    /// <p>The identifier for the collaboration.</p>
    pub fn collaboration_identifier(&self) -> std::option::Option<&str> {
        self.collaboration_identifier.as_deref()
    }
}
impl DeleteCollaborationInput {
    /// Creates a new builder-style object to manufacture [`DeleteCollaborationInput`](crate::operation::delete_collaboration::DeleteCollaborationInput).
    pub fn builder(
    ) -> crate::operation::delete_collaboration::builders::DeleteCollaborationInputBuilder {
        crate::operation::delete_collaboration::builders::DeleteCollaborationInputBuilder::default()
    }
}

/// A builder for [`DeleteCollaborationInput`](crate::operation::delete_collaboration::DeleteCollaborationInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DeleteCollaborationInputBuilder {
    pub(crate) collaboration_identifier: std::option::Option<std::string::String>,
}
impl DeleteCollaborationInputBuilder {
    /// <p>The identifier for the collaboration.</p>
    pub fn collaboration_identifier(mut self, input: impl Into<std::string::String>) -> Self {
        self.collaboration_identifier = Some(input.into());
        self
    }
    /// <p>The identifier for the collaboration.</p>
    pub fn set_collaboration_identifier(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.collaboration_identifier = input;
        self
    }
    /// Consumes the builder and constructs a [`DeleteCollaborationInput`](crate::operation::delete_collaboration::DeleteCollaborationInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::delete_collaboration::DeleteCollaborationInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::delete_collaboration::DeleteCollaborationInput {
                collaboration_identifier: self.collaboration_identifier,
            },
        )
    }
}
