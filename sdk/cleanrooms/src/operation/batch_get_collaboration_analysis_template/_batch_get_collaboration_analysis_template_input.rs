// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct BatchGetCollaborationAnalysisTemplateInput {
    /// <p>A unique identifier for the collaboration that the analysis templates belong to. Currently accepts collaboration ID.</p>
    pub collaboration_identifier: ::std::option::Option<::std::string::String>,
    /// <p>The Amazon Resource Name (ARN) associated with the analysis template within a collaboration.</p>
    pub analysis_template_arns: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
}
impl BatchGetCollaborationAnalysisTemplateInput {
    /// <p>A unique identifier for the collaboration that the analysis templates belong to. Currently accepts collaboration ID.</p>
    pub fn collaboration_identifier(&self) -> ::std::option::Option<&str> {
        self.collaboration_identifier.as_deref()
    }
    /// <p>The Amazon Resource Name (ARN) associated with the analysis template within a collaboration.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.analysis_template_arns.is_none()`.
    pub fn analysis_template_arns(&self) -> &[::std::string::String] {
        self.analysis_template_arns.as_deref().unwrap_or_default()
    }
}
impl BatchGetCollaborationAnalysisTemplateInput {
    /// Creates a new builder-style object to manufacture [`BatchGetCollaborationAnalysisTemplateInput`](crate::operation::batch_get_collaboration_analysis_template::BatchGetCollaborationAnalysisTemplateInput).
    pub fn builder() -> crate::operation::batch_get_collaboration_analysis_template::builders::BatchGetCollaborationAnalysisTemplateInputBuilder {
        crate::operation::batch_get_collaboration_analysis_template::builders::BatchGetCollaborationAnalysisTemplateInputBuilder::default()
    }
}

/// A builder for [`BatchGetCollaborationAnalysisTemplateInput`](crate::operation::batch_get_collaboration_analysis_template::BatchGetCollaborationAnalysisTemplateInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct BatchGetCollaborationAnalysisTemplateInputBuilder {
    pub(crate) collaboration_identifier: ::std::option::Option<::std::string::String>,
    pub(crate) analysis_template_arns: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
}
impl BatchGetCollaborationAnalysisTemplateInputBuilder {
    /// <p>A unique identifier for the collaboration that the analysis templates belong to. Currently accepts collaboration ID.</p>
    /// This field is required.
    pub fn collaboration_identifier(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.collaboration_identifier = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>A unique identifier for the collaboration that the analysis templates belong to. Currently accepts collaboration ID.</p>
    pub fn set_collaboration_identifier(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.collaboration_identifier = input;
        self
    }
    /// <p>A unique identifier for the collaboration that the analysis templates belong to. Currently accepts collaboration ID.</p>
    pub fn get_collaboration_identifier(&self) -> &::std::option::Option<::std::string::String> {
        &self.collaboration_identifier
    }
    /// Appends an item to `analysis_template_arns`.
    ///
    /// To override the contents of this collection use [`set_analysis_template_arns`](Self::set_analysis_template_arns).
    ///
    /// <p>The Amazon Resource Name (ARN) associated with the analysis template within a collaboration.</p>
    pub fn analysis_template_arns(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        let mut v = self.analysis_template_arns.unwrap_or_default();
        v.push(input.into());
        self.analysis_template_arns = ::std::option::Option::Some(v);
        self
    }
    /// <p>The Amazon Resource Name (ARN) associated with the analysis template within a collaboration.</p>
    pub fn set_analysis_template_arns(mut self, input: ::std::option::Option<::std::vec::Vec<::std::string::String>>) -> Self {
        self.analysis_template_arns = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) associated with the analysis template within a collaboration.</p>
    pub fn get_analysis_template_arns(&self) -> &::std::option::Option<::std::vec::Vec<::std::string::String>> {
        &self.analysis_template_arns
    }
    /// Consumes the builder and constructs a [`BatchGetCollaborationAnalysisTemplateInput`](crate::operation::batch_get_collaboration_analysis_template::BatchGetCollaborationAnalysisTemplateInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::batch_get_collaboration_analysis_template::BatchGetCollaborationAnalysisTemplateInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(
            crate::operation::batch_get_collaboration_analysis_template::BatchGetCollaborationAnalysisTemplateInput {
                collaboration_identifier: self.collaboration_identifier,
                analysis_template_arns: self.analysis_template_arns,
            },
        )
    }
}
