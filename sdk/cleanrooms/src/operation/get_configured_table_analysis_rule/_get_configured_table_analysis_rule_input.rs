// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GetConfiguredTableAnalysisRuleInput {
    /// <p>The unique identifier for the configured table to retrieve. Currently accepts the configured table ID.</p>
    #[doc(hidden)]
    pub configured_table_identifier: std::option::Option<std::string::String>,
    /// <p>The analysis rule to be retrieved. Configured table analysis rules are uniquely identified by their configured table identifier and analysis rule type.</p>
    #[doc(hidden)]
    pub analysis_rule_type: std::option::Option<crate::types::ConfiguredTableAnalysisRuleType>,
}
impl GetConfiguredTableAnalysisRuleInput {
    /// <p>The unique identifier for the configured table to retrieve. Currently accepts the configured table ID.</p>
    pub fn configured_table_identifier(&self) -> std::option::Option<&str> {
        self.configured_table_identifier.as_deref()
    }
    /// <p>The analysis rule to be retrieved. Configured table analysis rules are uniquely identified by their configured table identifier and analysis rule type.</p>
    pub fn analysis_rule_type(
        &self,
    ) -> std::option::Option<&crate::types::ConfiguredTableAnalysisRuleType> {
        self.analysis_rule_type.as_ref()
    }
}
impl GetConfiguredTableAnalysisRuleInput {
    /// Creates a new builder-style object to manufacture [`GetConfiguredTableAnalysisRuleInput`](crate::operation::get_configured_table_analysis_rule::GetConfiguredTableAnalysisRuleInput).
    pub fn builder() -> crate::operation::get_configured_table_analysis_rule::builders::GetConfiguredTableAnalysisRuleInputBuilder{
        crate::operation::get_configured_table_analysis_rule::builders::GetConfiguredTableAnalysisRuleInputBuilder::default()
    }
}

/// A builder for [`GetConfiguredTableAnalysisRuleInput`](crate::operation::get_configured_table_analysis_rule::GetConfiguredTableAnalysisRuleInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct GetConfiguredTableAnalysisRuleInputBuilder {
    pub(crate) configured_table_identifier: std::option::Option<std::string::String>,
    pub(crate) analysis_rule_type:
        std::option::Option<crate::types::ConfiguredTableAnalysisRuleType>,
}
impl GetConfiguredTableAnalysisRuleInputBuilder {
    /// <p>The unique identifier for the configured table to retrieve. Currently accepts the configured table ID.</p>
    pub fn configured_table_identifier(mut self, input: impl Into<std::string::String>) -> Self {
        self.configured_table_identifier = Some(input.into());
        self
    }
    /// <p>The unique identifier for the configured table to retrieve. Currently accepts the configured table ID.</p>
    pub fn set_configured_table_identifier(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.configured_table_identifier = input;
        self
    }
    /// <p>The analysis rule to be retrieved. Configured table analysis rules are uniquely identified by their configured table identifier and analysis rule type.</p>
    pub fn analysis_rule_type(
        mut self,
        input: crate::types::ConfiguredTableAnalysisRuleType,
    ) -> Self {
        self.analysis_rule_type = Some(input);
        self
    }
    /// <p>The analysis rule to be retrieved. Configured table analysis rules are uniquely identified by their configured table identifier and analysis rule type.</p>
    pub fn set_analysis_rule_type(
        mut self,
        input: std::option::Option<crate::types::ConfiguredTableAnalysisRuleType>,
    ) -> Self {
        self.analysis_rule_type = input;
        self
    }
    /// Consumes the builder and constructs a [`GetConfiguredTableAnalysisRuleInput`](crate::operation::get_configured_table_analysis_rule::GetConfiguredTableAnalysisRuleInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::get_configured_table_analysis_rule::GetConfiguredTableAnalysisRuleInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::get_configured_table_analysis_rule::GetConfiguredTableAnalysisRuleInput {
                configured_table_identifier: self.configured_table_identifier
                ,
                analysis_rule_type: self.analysis_rule_type
                ,
            }
        )
    }
}
