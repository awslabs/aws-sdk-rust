// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateConfiguredTable`](crate::operation::create_configured_table::builders::CreateConfiguredTableFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(impl Into<String>)`](crate::operation::create_configured_table::builders::CreateConfiguredTableFluentBuilder::name) / [`set_name(Option<String>)`](crate::operation::create_configured_table::builders::CreateConfiguredTableFluentBuilder::set_name):<br>required: **true**<br><p>The name of the configured table.</p><br>
    ///   - [`description(impl Into<String>)`](crate::operation::create_configured_table::builders::CreateConfiguredTableFluentBuilder::description) / [`set_description(Option<String>)`](crate::operation::create_configured_table::builders::CreateConfiguredTableFluentBuilder::set_description):<br>required: **false**<br><p>A description for the configured table.</p><br>
    ///   - [`table_reference(TableReference)`](crate::operation::create_configured_table::builders::CreateConfiguredTableFluentBuilder::table_reference) / [`set_table_reference(Option<TableReference>)`](crate::operation::create_configured_table::builders::CreateConfiguredTableFluentBuilder::set_table_reference):<br>required: **true**<br><p>A reference to the Glue table being configured.</p><br>
    ///   - [`allowed_columns(impl Into<String>)`](crate::operation::create_configured_table::builders::CreateConfiguredTableFluentBuilder::allowed_columns) / [`set_allowed_columns(Option<Vec::<String>>)`](crate::operation::create_configured_table::builders::CreateConfiguredTableFluentBuilder::set_allowed_columns):<br>required: **true**<br><p>The columns of the underlying table that can be used by collaborations or analysis rules.</p><br>
    ///   - [`analysis_method(AnalysisMethod)`](crate::operation::create_configured_table::builders::CreateConfiguredTableFluentBuilder::analysis_method) / [`set_analysis_method(Option<AnalysisMethod>)`](crate::operation::create_configured_table::builders::CreateConfiguredTableFluentBuilder::set_analysis_method):<br>required: **true**<br><p>The analysis method for the configured tables. The only valid value is currently `DIRECT_QUERY`.</p><br>
    ///   - [`tags(impl Into<String>, impl Into<String>)`](crate::operation::create_configured_table::builders::CreateConfiguredTableFluentBuilder::tags) / [`set_tags(Option<HashMap::<String, String>>)`](crate::operation::create_configured_table::builders::CreateConfiguredTableFluentBuilder::set_tags):<br>required: **false**<br><p>An optional label that you can assign to a resource when you create it. Each tag consists of a key and an optional value, both of which you define. When you use tagging, you can also use tag-based access control in IAM policies to control access to this resource.</p><br>
    /// - On success, responds with [`CreateConfiguredTableOutput`](crate::operation::create_configured_table::CreateConfiguredTableOutput) with field(s):
    ///   - [`configured_table(Option<ConfiguredTable>)`](crate::operation::create_configured_table::CreateConfiguredTableOutput::configured_table): <p>The created configured table.</p>
    /// - On failure, responds with [`SdkError<CreateConfiguredTableError>`](crate::operation::create_configured_table::CreateConfiguredTableError)
    pub fn create_configured_table(&self) -> crate::operation::create_configured_table::builders::CreateConfiguredTableFluentBuilder {
        crate::operation::create_configured_table::builders::CreateConfiguredTableFluentBuilder::new(self.handle.clone())
    }
}
