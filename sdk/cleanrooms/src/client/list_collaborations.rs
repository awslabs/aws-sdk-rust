// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListCollaborations`](crate::client::fluent_builders::ListCollaborations) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListCollaborations::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListCollaborations::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListCollaborations::set_next_token): <p>The token value retrieved from a previous call to access the next page of results.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListCollaborations::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListCollaborations::set_max_results): <p>The maximum size of the results that is returned per call. Service chooses a default if it has not been set. Service may return a nextToken even if the maximum results has not been met.</p>
    ///   - [`member_status(FilterableMemberStatus)`](crate::client::fluent_builders::ListCollaborations::member_status) / [`set_member_status(Option<FilterableMemberStatus>)`](crate::client::fluent_builders::ListCollaborations::set_member_status): <p>The caller's status in a collaboration.</p>
    /// - On success, responds with [`ListCollaborationsOutput`](crate::output::ListCollaborationsOutput) with field(s):
    ///   - [`next_token(Option<String>)`](crate::output::ListCollaborationsOutput::next_token): <p>The token value retrieved from a previous call to access the next page of results.</p>
    ///   - [`collaboration_list(Option<Vec<CollaborationSummary>>)`](crate::output::ListCollaborationsOutput::collaboration_list): <p>The list of collaborations.</p>
    /// - On failure, responds with [`SdkError<ListCollaborationsError>`](crate::error::ListCollaborationsError)
    pub fn list_collaborations(&self) -> crate::client::fluent_builders::ListCollaborations {
        crate::client::fluent_builders::ListCollaborations::new(self.handle.clone())
    }
}
