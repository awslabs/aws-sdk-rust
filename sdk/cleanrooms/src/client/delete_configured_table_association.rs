// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeleteConfiguredTableAssociation`](crate::operation::delete_configured_table_association::builders::DeleteConfiguredTableAssociationFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`configured_table_association_identifier(impl Into<String>)`](crate::operation::delete_configured_table_association::builders::DeleteConfiguredTableAssociationFluentBuilder::configured_table_association_identifier) / [`set_configured_table_association_identifier(Option<String>)`](crate::operation::delete_configured_table_association::builders::DeleteConfiguredTableAssociationFluentBuilder::set_configured_table_association_identifier): <p>The unique ID for the configured table association to be deleted. Currently accepts the configured table ID.</p>
    ///   - [`membership_identifier(impl Into<String>)`](crate::operation::delete_configured_table_association::builders::DeleteConfiguredTableAssociationFluentBuilder::membership_identifier) / [`set_membership_identifier(Option<String>)`](crate::operation::delete_configured_table_association::builders::DeleteConfiguredTableAssociationFluentBuilder::set_membership_identifier): <p>A unique identifier for the membership that the configured table association belongs to. Currently accepts the membership ID.</p>
    /// - On success, responds with [`DeleteConfiguredTableAssociationOutput`](crate::operation::delete_configured_table_association::DeleteConfiguredTableAssociationOutput)
    /// - On failure, responds with [`SdkError<DeleteConfiguredTableAssociationError>`](crate::operation::delete_configured_table_association::DeleteConfiguredTableAssociationError)
    pub fn delete_configured_table_association(&self) -> crate::operation::delete_configured_table_association::builders::DeleteConfiguredTableAssociationFluentBuilder{
        crate::operation::delete_configured_table_association::builders::DeleteConfiguredTableAssociationFluentBuilder::new(self.handle.clone())
    }
}
