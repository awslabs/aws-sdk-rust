// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`BatchGetSchema`](crate::client::fluent_builders::BatchGetSchema) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`collaboration_identifier(impl Into<String>)`](crate::client::fluent_builders::BatchGetSchema::collaboration_identifier) / [`set_collaboration_identifier(Option<String>)`](crate::client::fluent_builders::BatchGetSchema::set_collaboration_identifier): <p>A unique identifier for the collaboration that the schemas belong to. Currently accepts collaboration ID.</p>
    ///   - [`names(Vec<String>)`](crate::client::fluent_builders::BatchGetSchema::names) / [`set_names(Option<Vec<String>>)`](crate::client::fluent_builders::BatchGetSchema::set_names): <p>The names for the schema objects to retrieve.&gt;</p>
    /// - On success, responds with [`BatchGetSchemaOutput`](crate::output::BatchGetSchemaOutput) with field(s):
    ///   - [`schemas(Option<Vec<Schema>>)`](crate::output::BatchGetSchemaOutput::schemas): <p>The retrieved list of schemas.</p>
    ///   - [`errors(Option<Vec<BatchGetSchemaError>>)`](crate::output::BatchGetSchemaOutput::errors): <p>Error reasons for schemas that could not be retrieved. One error is returned for every schema that could not be retrieved.</p>
    /// - On failure, responds with [`SdkError<BatchGetSchemaError>`](crate::error::BatchGetSchemaError)
    pub fn batch_get_schema(&self) -> crate::client::fluent_builders::BatchGetSchema {
        crate::client::fluent_builders::BatchGetSchema::new(self.handle.clone())
    }
}
