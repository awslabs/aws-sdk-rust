// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn serialize_operation_cancel_key_deletion(
    input: &crate::input::CancelKeyDeletionInput,
) -> Result<smithy_http::body::SdkBody, serde_json::error::Error> {
    let mut out = String::new();
    let mut object = smithy_json::serialize::JsonObjectWriter::new(&mut out);
    crate::json_ser::serialize_structure_cancel_key_deletion_input(&mut object, input);
    object.finish();
    Ok(smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_connect_custom_key_store(
    input: &crate::input::ConnectCustomKeyStoreInput,
) -> Result<smithy_http::body::SdkBody, serde_json::error::Error> {
    let mut out = String::new();
    let mut object = smithy_json::serialize::JsonObjectWriter::new(&mut out);
    crate::json_ser::serialize_structure_connect_custom_key_store_input(&mut object, input);
    object.finish();
    Ok(smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_create_alias(
    input: &crate::input::CreateAliasInput,
) -> Result<smithy_http::body::SdkBody, serde_json::error::Error> {
    let mut out = String::new();
    let mut object = smithy_json::serialize::JsonObjectWriter::new(&mut out);
    crate::json_ser::serialize_structure_create_alias_input(&mut object, input);
    object.finish();
    Ok(smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_create_custom_key_store(
    input: &crate::input::CreateCustomKeyStoreInput,
) -> Result<smithy_http::body::SdkBody, serde_json::error::Error> {
    let mut out = String::new();
    let mut object = smithy_json::serialize::JsonObjectWriter::new(&mut out);
    crate::json_ser::serialize_structure_create_custom_key_store_input(&mut object, input);
    object.finish();
    Ok(smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_create_grant(
    input: &crate::input::CreateGrantInput,
) -> Result<smithy_http::body::SdkBody, serde_json::error::Error> {
    let mut out = String::new();
    let mut object = smithy_json::serialize::JsonObjectWriter::new(&mut out);
    crate::json_ser::serialize_structure_create_grant_input(&mut object, input);
    object.finish();
    Ok(smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_create_key(
    input: &crate::input::CreateKeyInput,
) -> Result<smithy_http::body::SdkBody, serde_json::error::Error> {
    let mut out = String::new();
    let mut object = smithy_json::serialize::JsonObjectWriter::new(&mut out);
    crate::json_ser::serialize_structure_create_key_input(&mut object, input);
    object.finish();
    Ok(smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_decrypt(
    input: &crate::input::DecryptInput,
) -> Result<smithy_http::body::SdkBody, serde_json::error::Error> {
    let mut out = String::new();
    let mut object = smithy_json::serialize::JsonObjectWriter::new(&mut out);
    crate::json_ser::serialize_structure_decrypt_input(&mut object, input);
    object.finish();
    Ok(smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_delete_alias(
    input: &crate::input::DeleteAliasInput,
) -> Result<smithy_http::body::SdkBody, serde_json::error::Error> {
    let mut out = String::new();
    let mut object = smithy_json::serialize::JsonObjectWriter::new(&mut out);
    crate::json_ser::serialize_structure_delete_alias_input(&mut object, input);
    object.finish();
    Ok(smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_delete_custom_key_store(
    input: &crate::input::DeleteCustomKeyStoreInput,
) -> Result<smithy_http::body::SdkBody, serde_json::error::Error> {
    let mut out = String::new();
    let mut object = smithy_json::serialize::JsonObjectWriter::new(&mut out);
    crate::json_ser::serialize_structure_delete_custom_key_store_input(&mut object, input);
    object.finish();
    Ok(smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_delete_imported_key_material(
    input: &crate::input::DeleteImportedKeyMaterialInput,
) -> Result<smithy_http::body::SdkBody, serde_json::error::Error> {
    let mut out = String::new();
    let mut object = smithy_json::serialize::JsonObjectWriter::new(&mut out);
    crate::json_ser::serialize_structure_delete_imported_key_material_input(&mut object, input);
    object.finish();
    Ok(smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_describe_custom_key_stores(
    input: &crate::input::DescribeCustomKeyStoresInput,
) -> Result<smithy_http::body::SdkBody, serde_json::error::Error> {
    let mut out = String::new();
    let mut object = smithy_json::serialize::JsonObjectWriter::new(&mut out);
    crate::json_ser::serialize_structure_describe_custom_key_stores_input(&mut object, input);
    object.finish();
    Ok(smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_describe_key(
    input: &crate::input::DescribeKeyInput,
) -> Result<smithy_http::body::SdkBody, serde_json::error::Error> {
    let mut out = String::new();
    let mut object = smithy_json::serialize::JsonObjectWriter::new(&mut out);
    crate::json_ser::serialize_structure_describe_key_input(&mut object, input);
    object.finish();
    Ok(smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_disable_key(
    input: &crate::input::DisableKeyInput,
) -> Result<smithy_http::body::SdkBody, serde_json::error::Error> {
    let mut out = String::new();
    let mut object = smithy_json::serialize::JsonObjectWriter::new(&mut out);
    crate::json_ser::serialize_structure_disable_key_input(&mut object, input);
    object.finish();
    Ok(smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_disable_key_rotation(
    input: &crate::input::DisableKeyRotationInput,
) -> Result<smithy_http::body::SdkBody, serde_json::error::Error> {
    let mut out = String::new();
    let mut object = smithy_json::serialize::JsonObjectWriter::new(&mut out);
    crate::json_ser::serialize_structure_disable_key_rotation_input(&mut object, input);
    object.finish();
    Ok(smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_disconnect_custom_key_store(
    input: &crate::input::DisconnectCustomKeyStoreInput,
) -> Result<smithy_http::body::SdkBody, serde_json::error::Error> {
    let mut out = String::new();
    let mut object = smithy_json::serialize::JsonObjectWriter::new(&mut out);
    crate::json_ser::serialize_structure_disconnect_custom_key_store_input(&mut object, input);
    object.finish();
    Ok(smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_enable_key(
    input: &crate::input::EnableKeyInput,
) -> Result<smithy_http::body::SdkBody, serde_json::error::Error> {
    let mut out = String::new();
    let mut object = smithy_json::serialize::JsonObjectWriter::new(&mut out);
    crate::json_ser::serialize_structure_enable_key_input(&mut object, input);
    object.finish();
    Ok(smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_enable_key_rotation(
    input: &crate::input::EnableKeyRotationInput,
) -> Result<smithy_http::body::SdkBody, serde_json::error::Error> {
    let mut out = String::new();
    let mut object = smithy_json::serialize::JsonObjectWriter::new(&mut out);
    crate::json_ser::serialize_structure_enable_key_rotation_input(&mut object, input);
    object.finish();
    Ok(smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_encrypt(
    input: &crate::input::EncryptInput,
) -> Result<smithy_http::body::SdkBody, serde_json::error::Error> {
    let mut out = String::new();
    let mut object = smithy_json::serialize::JsonObjectWriter::new(&mut out);
    crate::json_ser::serialize_structure_encrypt_input(&mut object, input);
    object.finish();
    Ok(smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_generate_data_key(
    input: &crate::input::GenerateDataKeyInput,
) -> Result<smithy_http::body::SdkBody, serde_json::error::Error> {
    let mut out = String::new();
    let mut object = smithy_json::serialize::JsonObjectWriter::new(&mut out);
    crate::json_ser::serialize_structure_generate_data_key_input(&mut object, input);
    object.finish();
    Ok(smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_generate_data_key_pair(
    input: &crate::input::GenerateDataKeyPairInput,
) -> Result<smithy_http::body::SdkBody, serde_json::error::Error> {
    let mut out = String::new();
    let mut object = smithy_json::serialize::JsonObjectWriter::new(&mut out);
    crate::json_ser::serialize_structure_generate_data_key_pair_input(&mut object, input);
    object.finish();
    Ok(smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_generate_data_key_pair_without_plaintext(
    input: &crate::input::GenerateDataKeyPairWithoutPlaintextInput,
) -> Result<smithy_http::body::SdkBody, serde_json::error::Error> {
    let mut out = String::new();
    let mut object = smithy_json::serialize::JsonObjectWriter::new(&mut out);
    crate::json_ser::serialize_structure_generate_data_key_pair_without_plaintext_input(
        &mut object,
        input,
    );
    object.finish();
    Ok(smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_generate_data_key_without_plaintext(
    input: &crate::input::GenerateDataKeyWithoutPlaintextInput,
) -> Result<smithy_http::body::SdkBody, serde_json::error::Error> {
    let mut out = String::new();
    let mut object = smithy_json::serialize::JsonObjectWriter::new(&mut out);
    crate::json_ser::serialize_structure_generate_data_key_without_plaintext_input(
        &mut object,
        input,
    );
    object.finish();
    Ok(smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_generate_random(
    input: &crate::input::GenerateRandomInput,
) -> Result<smithy_http::body::SdkBody, serde_json::error::Error> {
    let mut out = String::new();
    let mut object = smithy_json::serialize::JsonObjectWriter::new(&mut out);
    crate::json_ser::serialize_structure_generate_random_input(&mut object, input);
    object.finish();
    Ok(smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_get_key_policy(
    input: &crate::input::GetKeyPolicyInput,
) -> Result<smithy_http::body::SdkBody, serde_json::error::Error> {
    let mut out = String::new();
    let mut object = smithy_json::serialize::JsonObjectWriter::new(&mut out);
    crate::json_ser::serialize_structure_get_key_policy_input(&mut object, input);
    object.finish();
    Ok(smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_get_key_rotation_status(
    input: &crate::input::GetKeyRotationStatusInput,
) -> Result<smithy_http::body::SdkBody, serde_json::error::Error> {
    let mut out = String::new();
    let mut object = smithy_json::serialize::JsonObjectWriter::new(&mut out);
    crate::json_ser::serialize_structure_get_key_rotation_status_input(&mut object, input);
    object.finish();
    Ok(smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_get_parameters_for_import(
    input: &crate::input::GetParametersForImportInput,
) -> Result<smithy_http::body::SdkBody, serde_json::error::Error> {
    let mut out = String::new();
    let mut object = smithy_json::serialize::JsonObjectWriter::new(&mut out);
    crate::json_ser::serialize_structure_get_parameters_for_import_input(&mut object, input);
    object.finish();
    Ok(smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_get_public_key(
    input: &crate::input::GetPublicKeyInput,
) -> Result<smithy_http::body::SdkBody, serde_json::error::Error> {
    let mut out = String::new();
    let mut object = smithy_json::serialize::JsonObjectWriter::new(&mut out);
    crate::json_ser::serialize_structure_get_public_key_input(&mut object, input);
    object.finish();
    Ok(smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_import_key_material(
    input: &crate::input::ImportKeyMaterialInput,
) -> Result<smithy_http::body::SdkBody, serde_json::error::Error> {
    let mut out = String::new();
    let mut object = smithy_json::serialize::JsonObjectWriter::new(&mut out);
    crate::json_ser::serialize_structure_import_key_material_input(&mut object, input);
    object.finish();
    Ok(smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_list_aliases(
    input: &crate::input::ListAliasesInput,
) -> Result<smithy_http::body::SdkBody, serde_json::error::Error> {
    let mut out = String::new();
    let mut object = smithy_json::serialize::JsonObjectWriter::new(&mut out);
    crate::json_ser::serialize_structure_list_aliases_input(&mut object, input);
    object.finish();
    Ok(smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_list_grants(
    input: &crate::input::ListGrantsInput,
) -> Result<smithy_http::body::SdkBody, serde_json::error::Error> {
    let mut out = String::new();
    let mut object = smithy_json::serialize::JsonObjectWriter::new(&mut out);
    crate::json_ser::serialize_structure_list_grants_input(&mut object, input);
    object.finish();
    Ok(smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_list_key_policies(
    input: &crate::input::ListKeyPoliciesInput,
) -> Result<smithy_http::body::SdkBody, serde_json::error::Error> {
    let mut out = String::new();
    let mut object = smithy_json::serialize::JsonObjectWriter::new(&mut out);
    crate::json_ser::serialize_structure_list_key_policies_input(&mut object, input);
    object.finish();
    Ok(smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_list_keys(
    input: &crate::input::ListKeysInput,
) -> Result<smithy_http::body::SdkBody, serde_json::error::Error> {
    let mut out = String::new();
    let mut object = smithy_json::serialize::JsonObjectWriter::new(&mut out);
    crate::json_ser::serialize_structure_list_keys_input(&mut object, input);
    object.finish();
    Ok(smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_list_resource_tags(
    input: &crate::input::ListResourceTagsInput,
) -> Result<smithy_http::body::SdkBody, serde_json::error::Error> {
    let mut out = String::new();
    let mut object = smithy_json::serialize::JsonObjectWriter::new(&mut out);
    crate::json_ser::serialize_structure_list_resource_tags_input(&mut object, input);
    object.finish();
    Ok(smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_list_retirable_grants(
    input: &crate::input::ListRetirableGrantsInput,
) -> Result<smithy_http::body::SdkBody, serde_json::error::Error> {
    let mut out = String::new();
    let mut object = smithy_json::serialize::JsonObjectWriter::new(&mut out);
    crate::json_ser::serialize_structure_list_retirable_grants_input(&mut object, input);
    object.finish();
    Ok(smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_put_key_policy(
    input: &crate::input::PutKeyPolicyInput,
) -> Result<smithy_http::body::SdkBody, serde_json::error::Error> {
    let mut out = String::new();
    let mut object = smithy_json::serialize::JsonObjectWriter::new(&mut out);
    crate::json_ser::serialize_structure_put_key_policy_input(&mut object, input);
    object.finish();
    Ok(smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_re_encrypt(
    input: &crate::input::ReEncryptInput,
) -> Result<smithy_http::body::SdkBody, serde_json::error::Error> {
    let mut out = String::new();
    let mut object = smithy_json::serialize::JsonObjectWriter::new(&mut out);
    crate::json_ser::serialize_structure_re_encrypt_input(&mut object, input);
    object.finish();
    Ok(smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_retire_grant(
    input: &crate::input::RetireGrantInput,
) -> Result<smithy_http::body::SdkBody, serde_json::error::Error> {
    let mut out = String::new();
    let mut object = smithy_json::serialize::JsonObjectWriter::new(&mut out);
    crate::json_ser::serialize_structure_retire_grant_input(&mut object, input);
    object.finish();
    Ok(smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_revoke_grant(
    input: &crate::input::RevokeGrantInput,
) -> Result<smithy_http::body::SdkBody, serde_json::error::Error> {
    let mut out = String::new();
    let mut object = smithy_json::serialize::JsonObjectWriter::new(&mut out);
    crate::json_ser::serialize_structure_revoke_grant_input(&mut object, input);
    object.finish();
    Ok(smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_schedule_key_deletion(
    input: &crate::input::ScheduleKeyDeletionInput,
) -> Result<smithy_http::body::SdkBody, serde_json::error::Error> {
    let mut out = String::new();
    let mut object = smithy_json::serialize::JsonObjectWriter::new(&mut out);
    crate::json_ser::serialize_structure_schedule_key_deletion_input(&mut object, input);
    object.finish();
    Ok(smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_sign(
    input: &crate::input::SignInput,
) -> Result<smithy_http::body::SdkBody, serde_json::error::Error> {
    let mut out = String::new();
    let mut object = smithy_json::serialize::JsonObjectWriter::new(&mut out);
    crate::json_ser::serialize_structure_sign_input(&mut object, input);
    object.finish();
    Ok(smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_tag_resource(
    input: &crate::input::TagResourceInput,
) -> Result<smithy_http::body::SdkBody, serde_json::error::Error> {
    let mut out = String::new();
    let mut object = smithy_json::serialize::JsonObjectWriter::new(&mut out);
    crate::json_ser::serialize_structure_tag_resource_input(&mut object, input);
    object.finish();
    Ok(smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_untag_resource(
    input: &crate::input::UntagResourceInput,
) -> Result<smithy_http::body::SdkBody, serde_json::error::Error> {
    let mut out = String::new();
    let mut object = smithy_json::serialize::JsonObjectWriter::new(&mut out);
    crate::json_ser::serialize_structure_untag_resource_input(&mut object, input);
    object.finish();
    Ok(smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_update_alias(
    input: &crate::input::UpdateAliasInput,
) -> Result<smithy_http::body::SdkBody, serde_json::error::Error> {
    let mut out = String::new();
    let mut object = smithy_json::serialize::JsonObjectWriter::new(&mut out);
    crate::json_ser::serialize_structure_update_alias_input(&mut object, input);
    object.finish();
    Ok(smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_update_custom_key_store(
    input: &crate::input::UpdateCustomKeyStoreInput,
) -> Result<smithy_http::body::SdkBody, serde_json::error::Error> {
    let mut out = String::new();
    let mut object = smithy_json::serialize::JsonObjectWriter::new(&mut out);
    crate::json_ser::serialize_structure_update_custom_key_store_input(&mut object, input);
    object.finish();
    Ok(smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_update_key_description(
    input: &crate::input::UpdateKeyDescriptionInput,
) -> Result<smithy_http::body::SdkBody, serde_json::error::Error> {
    let mut out = String::new();
    let mut object = smithy_json::serialize::JsonObjectWriter::new(&mut out);
    crate::json_ser::serialize_structure_update_key_description_input(&mut object, input);
    object.finish();
    Ok(smithy_http::body::SdkBody::from(out))
}

pub fn serialize_operation_verify(
    input: &crate::input::VerifyInput,
) -> Result<smithy_http::body::SdkBody, serde_json::error::Error> {
    let mut out = String::new();
    let mut object = smithy_json::serialize::JsonObjectWriter::new(&mut out);
    crate::json_ser::serialize_structure_verify_input(&mut object, input);
    object.finish();
    Ok(smithy_http::body::SdkBody::from(out))
}
