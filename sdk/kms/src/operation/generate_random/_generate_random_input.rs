// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GenerateRandomInput {
    /// <p>The length of the random byte string. This parameter is required.</p>
    #[doc(hidden)]
    pub number_of_bytes: std::option::Option<i32>,
    /// <p>Generates the random byte string in the CloudHSM cluster that is associated with the specified CloudHSM key store. To find the ID of a custom key store, use the <code>DescribeCustomKeyStores</code> operation.</p>
    /// <p>External key store IDs are not valid for this parameter. If you specify the ID of an external key store, <code>GenerateRandom</code> throws an <code>UnsupportedOperationException</code>.</p>
    #[doc(hidden)]
    pub custom_key_store_id: std::option::Option<std::string::String>,
}
impl GenerateRandomInput {
    /// <p>The length of the random byte string. This parameter is required.</p>
    pub fn number_of_bytes(&self) -> std::option::Option<i32> {
        self.number_of_bytes
    }
    /// <p>Generates the random byte string in the CloudHSM cluster that is associated with the specified CloudHSM key store. To find the ID of a custom key store, use the <code>DescribeCustomKeyStores</code> operation.</p>
    /// <p>External key store IDs are not valid for this parameter. If you specify the ID of an external key store, <code>GenerateRandom</code> throws an <code>UnsupportedOperationException</code>.</p>
    pub fn custom_key_store_id(&self) -> std::option::Option<&str> {
        self.custom_key_store_id.as_deref()
    }
}
impl GenerateRandomInput {
    /// Creates a new builder-style object to manufacture [`GenerateRandomInput`](crate::operation::generate_random::GenerateRandomInput).
    pub fn builder() -> crate::operation::generate_random::builders::GenerateRandomInputBuilder {
        crate::operation::generate_random::builders::GenerateRandomInputBuilder::default()
    }
}

/// A builder for [`GenerateRandomInput`](crate::operation::generate_random::GenerateRandomInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct GenerateRandomInputBuilder {
    pub(crate) number_of_bytes: std::option::Option<i32>,
    pub(crate) custom_key_store_id: std::option::Option<std::string::String>,
}
impl GenerateRandomInputBuilder {
    /// <p>The length of the random byte string. This parameter is required.</p>
    pub fn number_of_bytes(mut self, input: i32) -> Self {
        self.number_of_bytes = Some(input);
        self
    }
    /// <p>The length of the random byte string. This parameter is required.</p>
    pub fn set_number_of_bytes(mut self, input: std::option::Option<i32>) -> Self {
        self.number_of_bytes = input;
        self
    }
    /// <p>Generates the random byte string in the CloudHSM cluster that is associated with the specified CloudHSM key store. To find the ID of a custom key store, use the <code>DescribeCustomKeyStores</code> operation.</p>
    /// <p>External key store IDs are not valid for this parameter. If you specify the ID of an external key store, <code>GenerateRandom</code> throws an <code>UnsupportedOperationException</code>.</p>
    pub fn custom_key_store_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.custom_key_store_id = Some(input.into());
        self
    }
    /// <p>Generates the random byte string in the CloudHSM cluster that is associated with the specified CloudHSM key store. To find the ID of a custom key store, use the <code>DescribeCustomKeyStores</code> operation.</p>
    /// <p>External key store IDs are not valid for this parameter. If you specify the ID of an external key store, <code>GenerateRandom</code> throws an <code>UnsupportedOperationException</code>.</p>
    pub fn set_custom_key_store_id(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.custom_key_store_id = input;
        self
    }
    /// Consumes the builder and constructs a [`GenerateRandomInput`](crate::operation::generate_random::GenerateRandomInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::generate_random::GenerateRandomInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(crate::operation::generate_random::GenerateRandomInput {
            number_of_bytes: self.number_of_bytes,
            custom_key_store_id: self.custom_key_store_id,
        })
    }
}
