// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DeleteCustomKeyStoreInput {
    /// <p>Enter the ID of the custom key store you want to delete. To find the ID of a custom key store, use the <code>DescribeCustomKeyStores</code> operation.</p>
    #[doc(hidden)]
    pub custom_key_store_id: std::option::Option<std::string::String>,
}
impl DeleteCustomKeyStoreInput {
    /// <p>Enter the ID of the custom key store you want to delete. To find the ID of a custom key store, use the <code>DescribeCustomKeyStores</code> operation.</p>
    pub fn custom_key_store_id(&self) -> std::option::Option<&str> {
        self.custom_key_store_id.as_deref()
    }
}
impl DeleteCustomKeyStoreInput {
    /// Creates a new builder-style object to manufacture [`DeleteCustomKeyStoreInput`](crate::operation::delete_custom_key_store::DeleteCustomKeyStoreInput).
    pub fn builder(
    ) -> crate::operation::delete_custom_key_store::builders::DeleteCustomKeyStoreInputBuilder {
        crate::operation::delete_custom_key_store::builders::DeleteCustomKeyStoreInputBuilder::default()
    }
}

/// A builder for [`DeleteCustomKeyStoreInput`](crate::operation::delete_custom_key_store::DeleteCustomKeyStoreInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DeleteCustomKeyStoreInputBuilder {
    pub(crate) custom_key_store_id: std::option::Option<std::string::String>,
}
impl DeleteCustomKeyStoreInputBuilder {
    /// <p>Enter the ID of the custom key store you want to delete. To find the ID of a custom key store, use the <code>DescribeCustomKeyStores</code> operation.</p>
    pub fn custom_key_store_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.custom_key_store_id = Some(input.into());
        self
    }
    /// <p>Enter the ID of the custom key store you want to delete. To find the ID of a custom key store, use the <code>DescribeCustomKeyStores</code> operation.</p>
    pub fn set_custom_key_store_id(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.custom_key_store_id = input;
        self
    }
    /// Consumes the builder and constructs a [`DeleteCustomKeyStoreInput`](crate::operation::delete_custom_key_store::DeleteCustomKeyStoreInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::delete_custom_key_store::DeleteCustomKeyStoreInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::delete_custom_key_store::DeleteCustomKeyStoreInput {
                custom_key_store_id: self.custom_key_store_id,
            },
        )
    }
}
