# Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
[package]
name = "aws-sdk-kms"
version = "0.0.18-alpha"
description = "<fullname>Key Management Service</fullname>\n         <p>Key Management Service (KMS) is an encryption and key management web service. This guide describes\n      the KMS operations that you can call programmatically. For general information about KMS,\n      see the <a href=\"https://docs.aws.amazon.com/kms/latest/developerguide/\">\n               <i>Key Management Service Developer Guide</i>\n            </a>.</p>\n         <note>\n            <p>KMS is replacing the term <i>customer master key (CMK)</i> with <i>KMS key</i> and <i>KMS key</i>. The concept has not changed. To prevent breaking changes, KMS is keeping some variations of this term.</p>\n            <p>Amazon Web Services provides SDKs that consist of libraries and sample code for various programming\n        languages and platforms (Java, Ruby, .Net, macOS, Android, etc.). The SDKs provide a\n        convenient way to create programmatic access to KMS and other Amazon Web Services services. For example,\n        the SDKs take care of tasks such as signing requests (see below), managing errors, and\n        retrying requests automatically. For more information about the Amazon Web Services SDKs, including how to\n        download and install them, see <a href=\"http://aws.amazon.com/tools/\">Tools for Amazon Web\n          Services</a>.</p>      \n         </note>\n         <p>We recommend that you use the Amazon Web Services SDKs to make programmatic API calls to KMS.</p>\n         <p>Clients must support TLS (Transport Layer Security) 1.0. We recommend TLS 1.2. Clients\n      must also support cipher suites with Perfect Forward Secrecy (PFS) such as Ephemeral\n      Diffie-Hellman (DHE) or Elliptic Curve Ephemeral Diffie-Hellman (ECDHE). Most modern systems\n      such as Java 7 and later support these modes.</p>\n         <p>\n            <b>Signing Requests</b>\n         </p>\n         <p>Requests must be signed by using an access key ID and a secret access key. We strongly\n      recommend that you <i>do not</i> use your Amazon Web Services account (root) access key ID and\n      secret key for everyday work with KMS. Instead, use the access key ID and secret access key\n      for an IAM user. You can also use the Amazon Web Services Security Token Service to generate temporary\n      security credentials that you can use to sign requests.</p>\n         <p>All KMS operations require <a href=\"https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html\">Signature Version 4</a>.</p>\n         <p>\n            <b>Logging API Requests</b>\n         </p>\n         <p>KMS supports CloudTrail, a service that logs Amazon Web Services API calls and related events for your Amazon Web Services account and delivers them to an Amazon S3 bucket that you specify. By using the information\n      collected by CloudTrail, you can determine what requests were made to KMS, who made the request,\n      when it was made, and so on. To learn more about CloudTrail, including how to turn it on and find\n      your log files, see the <a href=\"https://docs.aws.amazon.com/awscloudtrail/latest/userguide/\">CloudTrail User Guide</a>.</p>\n         <p>\n            <b>Additional Resources</b>\n         </p>\n         <p>For more information about credentials and request signing, see the following:</p>\n         <ul>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-security-credentials.html\">Amazon Web Services Security\n            Credentials</a> - This topic provides general information about the types of\n          credentials used to access Amazon Web Services.</p>\n            </li>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp.html\">Temporary\n            Security Credentials</a> - This section of the <i>IAM User Guide</i>\n          describes how to create and use temporary security credentials.</p>\n            </li>\n            <li>\n               <p>\n                  <a href=\"https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html\">Signature Version\n            4 Signing Process</a> - This set of topics walks you through the process of signing\n          a request using an access key ID and a secret access key.</p>\n            </li>\n         </ul>\n         <p>\n            <b>Commonly Used API Operations</b>\n         </p>\n         <p>Of the API operations discussed in this guide, the following will prove the most useful\n      for most applications. You will likely perform operations other than these, such as creating\n      keys and assigning policies, by using the console.</p>\n         <ul>\n            <li>\n               <p>\n                  <a>Encrypt</a>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <a>Decrypt</a>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <a>GenerateDataKey</a>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <a>GenerateDataKeyWithoutPlaintext</a>\n               </p>\n            </li>\n         </ul>"
authors = ["AWS Rust SDK Team <aws-sdk-rust@amazon.com>", "Russell Cohen <rcoh@amazon.com>"]
license = "Apache-2.0"
edition = "2018"
[dependencies.aws-auth]
path = "..//aws-auth"
[dependencies.aws-endpoint]
path = "..//aws-endpoint"
[dependencies.aws-http]
path = "..//aws-http"
[dependencies.aws-hyper]
path = "..//aws-hyper"
optional = true
[dependencies.aws-sig-auth]
path = "..//aws-sig-auth"
[dependencies.aws-types]
path = "..//aws-types"
[dependencies.bytes]
version = "1"
[dependencies.http]
version = "0.2"
[dependencies.smithy-client]
path = "..//smithy-client"
optional = true
[dependencies.smithy-http]
path = "..//smithy-http"
[dependencies.smithy-json]
path = "..//smithy-json"
[dependencies.smithy-types]
path = "..//smithy-types"
[dev-dependencies.serde_json]
version = "1"
[dev-dependencies.smithy-client]
path = "..//smithy-client"
features = ["test-util"]
[dev-dependencies.tokio]
version = "1"
features = ["macros", "test-util"]
[features]
client = ["aws-hyper", "smithy-client"]
rustls = ["aws-hyper/rustls"]
native-tls = ["aws-hyper/native-tls"]
default = ["client", "rustls"]


