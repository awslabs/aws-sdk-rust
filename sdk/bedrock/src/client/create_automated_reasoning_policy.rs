// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateAutomatedReasoningPolicy`](crate::operation::create_automated_reasoning_policy::builders::CreateAutomatedReasoningPolicyFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(impl Into<String>)`](crate::operation::create_automated_reasoning_policy::builders::CreateAutomatedReasoningPolicyFluentBuilder::name) / [`set_name(Option<String>)`](crate::operation::create_automated_reasoning_policy::builders::CreateAutomatedReasoningPolicyFluentBuilder::set_name):<br>required: **true**<br><p>A unique name for the Automated Reasoning policy. The name must be between 1 and 63 characters and can contain letters, numbers, hyphens, and underscores.</p><br>
    ///   - [`description(impl Into<String>)`](crate::operation::create_automated_reasoning_policy::builders::CreateAutomatedReasoningPolicyFluentBuilder::description) / [`set_description(Option<String>)`](crate::operation::create_automated_reasoning_policy::builders::CreateAutomatedReasoningPolicyFluentBuilder::set_description):<br>required: **false**<br><p>A description of the Automated Reasoning policy. Use this to provide context about the policy's purpose and the types of validations it performs.</p><br>
    ///   - [`client_request_token(impl Into<String>)`](crate::operation::create_automated_reasoning_policy::builders::CreateAutomatedReasoningPolicyFluentBuilder::client_request_token) / [`set_client_request_token(Option<String>)`](crate::operation::create_automated_reasoning_policy::builders::CreateAutomatedReasoningPolicyFluentBuilder::set_client_request_token):<br>required: **false**<br><p>A unique, case-sensitive identifier to ensure that the operation completes no more than once. If this token matches a previous request, Amazon Bedrock ignores the request but doesn't return an error.</p><br>
    ///   - [`policy_definition(AutomatedReasoningPolicyDefinition)`](crate::operation::create_automated_reasoning_policy::builders::CreateAutomatedReasoningPolicyFluentBuilder::policy_definition) / [`set_policy_definition(Option<AutomatedReasoningPolicyDefinition>)`](crate::operation::create_automated_reasoning_policy::builders::CreateAutomatedReasoningPolicyFluentBuilder::set_policy_definition):<br>required: **false**<br><p>The policy definition that contains the formal logic rules, variables, and custom variable types used to validate foundation model responses in your application.</p><br>
    ///   - [`kms_key_id(impl Into<String>)`](crate::operation::create_automated_reasoning_policy::builders::CreateAutomatedReasoningPolicyFluentBuilder::kms_key_id) / [`set_kms_key_id(Option<String>)`](crate::operation::create_automated_reasoning_policy::builders::CreateAutomatedReasoningPolicyFluentBuilder::set_kms_key_id):<br>required: **false**<br><p>The identifier of the KMS key to use for encrypting the automated reasoning policy and its associated artifacts. If you don't specify a KMS key, Amazon Bedrock uses an KMS managed key for encryption. For enhanced security and control, you can specify a customer managed KMS key.</p><br>
    ///   - [`tags(Tag)`](crate::operation::create_automated_reasoning_policy::builders::CreateAutomatedReasoningPolicyFluentBuilder::tags) / [`set_tags(Option<Vec::<Tag>>)`](crate::operation::create_automated_reasoning_policy::builders::CreateAutomatedReasoningPolicyFluentBuilder::set_tags):<br>required: **false**<br><p>A list of tags to associate with the Automated Reasoning policy. Tags help you organize and manage your policies.</p><br>
    /// - On success, responds with [`CreateAutomatedReasoningPolicyOutput`](crate::operation::create_automated_reasoning_policy::CreateAutomatedReasoningPolicyOutput) with field(s):
    ///   - [`policy_arn(String)`](crate::operation::create_automated_reasoning_policy::CreateAutomatedReasoningPolicyOutput::policy_arn): <p>The Amazon Resource Name (ARN) of the Automated Reasoning policy that you created.</p>
    ///   - [`version(String)`](crate::operation::create_automated_reasoning_policy::CreateAutomatedReasoningPolicyOutput::version): <p>The version number of the newly created Automated Reasoning policy. The initial version is always DRAFT.</p>
    ///   - [`name(String)`](crate::operation::create_automated_reasoning_policy::CreateAutomatedReasoningPolicyOutput::name): <p>The name of the Automated Reasoning policy.</p>
    ///   - [`description(Option<String>)`](crate::operation::create_automated_reasoning_policy::CreateAutomatedReasoningPolicyOutput::description): <p>The description of the Automated Reasoning policy.</p>
    ///   - [`definition_hash(Option<String>)`](crate::operation::create_automated_reasoning_policy::CreateAutomatedReasoningPolicyOutput::definition_hash): <p>The hash of the policy definition. This is used as a concurrency token for creating policy versions that you can use in your application.</p>
    ///   - [`created_at(DateTime)`](crate::operation::create_automated_reasoning_policy::CreateAutomatedReasoningPolicyOutput::created_at): <p>The timestamp when the policy was created.</p>
    ///   - [`updated_at(DateTime)`](crate::operation::create_automated_reasoning_policy::CreateAutomatedReasoningPolicyOutput::updated_at): <p>The timestamp when the policy was last updated.</p>
    /// - On failure, responds with [`SdkError<CreateAutomatedReasoningPolicyError>`](crate::operation::create_automated_reasoning_policy::CreateAutomatedReasoningPolicyError)
    pub fn create_automated_reasoning_policy(
        &self,
    ) -> crate::operation::create_automated_reasoning_policy::builders::CreateAutomatedReasoningPolicyFluentBuilder {
        crate::operation::create_automated_reasoning_policy::builders::CreateAutomatedReasoningPolicyFluentBuilder::new(self.handle.clone())
    }
}
