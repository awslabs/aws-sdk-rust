// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_vector_search_bedrock_reranking_configuration(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::types::VectorSearchBedrockRerankingConfiguration,
) -> ::std::result::Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.model_configuration {
        #[allow(unused_mut)]
        let mut object_2 = object.key("modelConfiguration").start_object();
        crate::protocol_serde::shape_vector_search_bedrock_reranking_model_configuration::ser_vector_search_bedrock_reranking_model_configuration(
            &mut object_2,
            var_1,
        )?;
        object_2.finish();
    }
    if let Some(var_3) = &input.number_of_reranked_results {
        object.key("numberOfRerankedResults").number(
            #[allow(clippy::useless_conversion)]
            ::aws_smithy_types::Number::NegInt((*var_3).into()),
        );
    }
    if let Some(var_4) = &input.metadata_configuration {
        #[allow(unused_mut)]
        let mut object_5 = object.key("metadataConfiguration").start_object();
        crate::protocol_serde::shape_metadata_configuration_for_reranking::ser_metadata_configuration_for_reranking(&mut object_5, var_4)?;
        object_5.finish();
    }
    Ok(())
}

pub(crate) fn de_vector_search_bedrock_reranking_configuration<'a, I>(
    tokens: &mut ::std::iter::Peekable<I>,
) -> ::std::result::Result<Option<crate::types::VectorSearchBedrockRerankingConfiguration>, ::aws_smithy_json::deserialize::error::DeserializeError>
where
    I: Iterator<Item = Result<::aws_smithy_json::deserialize::Token<'a>, ::aws_smithy_json::deserialize::error::DeserializeError>>,
{
    match tokens.next().transpose()? {
        Some(::aws_smithy_json::deserialize::Token::ValueNull { .. }) => Ok(None),
        Some(::aws_smithy_json::deserialize::Token::StartObject { .. }) => {
            #[allow(unused_mut)]
            let mut builder = crate::types::builders::VectorSearchBedrockRerankingConfigurationBuilder::default();
            loop {
                match tokens.next().transpose()? {
                    Some(::aws_smithy_json::deserialize::Token::EndObject { .. }) => break,
                    Some(::aws_smithy_json::deserialize::Token::ObjectKey { key, .. }) => match key.to_unescaped()?.as_ref() {
                        "modelConfiguration" => {
                            builder = builder.set_model_configuration(
                                    crate::protocol_serde::shape_vector_search_bedrock_reranking_model_configuration::de_vector_search_bedrock_reranking_model_configuration(tokens)?
                                );
                        }
                        "numberOfRerankedResults" => {
                            builder = builder.set_number_of_reranked_results(
                                ::aws_smithy_json::deserialize::token::expect_number_or_null(tokens.next())?
                                    .map(i32::try_from)
                                    .transpose()?,
                            );
                        }
                        "metadataConfiguration" => {
                            builder = builder.set_metadata_configuration(
                                crate::protocol_serde::shape_metadata_configuration_for_reranking::de_metadata_configuration_for_reranking(tokens)?,
                            );
                        }
                        _ => ::aws_smithy_json::deserialize::token::skip_value(tokens)?,
                    },
                    other => {
                        return Err(::aws_smithy_json::deserialize::error::DeserializeError::custom(format!(
                            "expected object key or end object, found: {other:?}"
                        )))
                    }
                }
            }
            Ok(Some(
                crate::serde_util::vector_search_bedrock_reranking_configuration_correct_errors(builder).build(),
            ))
        }
        _ => Err(::aws_smithy_json::deserialize::error::DeserializeError::custom(
            "expected start object or null",
        )),
    }
}
