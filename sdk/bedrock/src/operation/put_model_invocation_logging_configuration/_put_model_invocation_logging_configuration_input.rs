// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct PutModelInvocationLoggingConfigurationInput {
    /// <p>The logging configuration values to set.</p>
    pub logging_config: ::std::option::Option<crate::types::LoggingConfig>,
}
impl PutModelInvocationLoggingConfigurationInput {
    /// <p>The logging configuration values to set.</p>
    pub fn logging_config(&self) -> ::std::option::Option<&crate::types::LoggingConfig> {
        self.logging_config.as_ref()
    }
}
impl PutModelInvocationLoggingConfigurationInput {
    /// Creates a new builder-style object to manufacture [`PutModelInvocationLoggingConfigurationInput`](crate::operation::put_model_invocation_logging_configuration::PutModelInvocationLoggingConfigurationInput).
    pub fn builder() -> crate::operation::put_model_invocation_logging_configuration::builders::PutModelInvocationLoggingConfigurationInputBuilder {
        crate::operation::put_model_invocation_logging_configuration::builders::PutModelInvocationLoggingConfigurationInputBuilder::default()
    }
}

/// A builder for [`PutModelInvocationLoggingConfigurationInput`](crate::operation::put_model_invocation_logging_configuration::PutModelInvocationLoggingConfigurationInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct PutModelInvocationLoggingConfigurationInputBuilder {
    pub(crate) logging_config: ::std::option::Option<crate::types::LoggingConfig>,
}
impl PutModelInvocationLoggingConfigurationInputBuilder {
    /// <p>The logging configuration values to set.</p>
    /// This field is required.
    pub fn logging_config(mut self, input: crate::types::LoggingConfig) -> Self {
        self.logging_config = ::std::option::Option::Some(input);
        self
    }
    /// <p>The logging configuration values to set.</p>
    pub fn set_logging_config(mut self, input: ::std::option::Option<crate::types::LoggingConfig>) -> Self {
        self.logging_config = input;
        self
    }
    /// <p>The logging configuration values to set.</p>
    pub fn get_logging_config(&self) -> &::std::option::Option<crate::types::LoggingConfig> {
        &self.logging_config
    }
    /// Consumes the builder and constructs a [`PutModelInvocationLoggingConfigurationInput`](crate::operation::put_model_invocation_logging_configuration::PutModelInvocationLoggingConfigurationInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::put_model_invocation_logging_configuration::PutModelInvocationLoggingConfigurationInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(
            crate::operation::put_model_invocation_logging_configuration::PutModelInvocationLoggingConfigurationInput {
                logging_config: self.logging_config,
            },
        )
    }
}
