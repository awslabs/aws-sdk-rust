// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetDevices`](crate::client::fluent_builders::GetDevices) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::GetDevices::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`global_network_id(impl Into<String>)`](crate::client::fluent_builders::GetDevices::global_network_id) / [`set_global_network_id(Option<String>)`](crate::client::fluent_builders::GetDevices::set_global_network_id): <p>The ID of the global network.</p>
    ///   - [`device_ids(Vec<String>)`](crate::client::fluent_builders::GetDevices::device_ids) / [`set_device_ids(Option<Vec<String>>)`](crate::client::fluent_builders::GetDevices::set_device_ids): <p>One or more device IDs. The maximum is 10.</p>
    ///   - [`site_id(impl Into<String>)`](crate::client::fluent_builders::GetDevices::site_id) / [`set_site_id(Option<String>)`](crate::client::fluent_builders::GetDevices::set_site_id): <p>The ID of the site.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::GetDevices::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::GetDevices::set_max_results): <p>The maximum number of results to return.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::GetDevices::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::GetDevices::set_next_token): <p>The token for the next page of results.</p>
    /// - On success, responds with [`GetDevicesOutput`](crate::output::GetDevicesOutput) with field(s):
    ///   - [`devices(Option<Vec<Device>>)`](crate::output::GetDevicesOutput::devices): <p>The devices.</p>
    ///   - [`next_token(Option<String>)`](crate::output::GetDevicesOutput::next_token): <p>The token for the next page of results.</p>
    /// - On failure, responds with [`SdkError<GetDevicesError>`](crate::error::GetDevicesError)
    pub fn get_devices(&self) -> crate::client::fluent_builders::GetDevices {
        crate::client::fluent_builders::GetDevices::new(self.handle.clone())
    }
}
