// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetCoreNetworkChangeSet`](crate::client::fluent_builders::GetCoreNetworkChangeSet) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::GetCoreNetworkChangeSet::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`core_network_id(impl Into<String>)`](crate::client::fluent_builders::GetCoreNetworkChangeSet::core_network_id) / [`set_core_network_id(Option<String>)`](crate::client::fluent_builders::GetCoreNetworkChangeSet::set_core_network_id): <p>The ID of a core network.</p>
    ///   - [`policy_version_id(i32)`](crate::client::fluent_builders::GetCoreNetworkChangeSet::policy_version_id) / [`set_policy_version_id(Option<i32>)`](crate::client::fluent_builders::GetCoreNetworkChangeSet::set_policy_version_id): <p>The ID of the policy version.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::GetCoreNetworkChangeSet::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::GetCoreNetworkChangeSet::set_max_results): <p>The maximum number of results to return.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::GetCoreNetworkChangeSet::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::GetCoreNetworkChangeSet::set_next_token): <p>The token for the next page of results.</p>
    /// - On success, responds with [`GetCoreNetworkChangeSetOutput`](crate::output::GetCoreNetworkChangeSetOutput) with field(s):
    ///   - [`core_network_changes(Option<Vec<CoreNetworkChange>>)`](crate::output::GetCoreNetworkChangeSetOutput::core_network_changes): <p>Describes a core network changes.</p>
    ///   - [`next_token(Option<String>)`](crate::output::GetCoreNetworkChangeSetOutput::next_token): <p>The token for the next page of results.</p>
    /// - On failure, responds with [`SdkError<GetCoreNetworkChangeSetError>`](crate::error::GetCoreNetworkChangeSetError)
    pub fn get_core_network_change_set(
        &self,
    ) -> crate::client::fluent_builders::GetCoreNetworkChangeSet {
        crate::client::fluent_builders::GetCoreNetworkChangeSet::new(self.handle.clone())
    }
}
