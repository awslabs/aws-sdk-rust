// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeGlobalNetworks`](crate::client::fluent_builders::DescribeGlobalNetworks) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::DescribeGlobalNetworks::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`global_network_ids(Vec<String>)`](crate::client::fluent_builders::DescribeGlobalNetworks::global_network_ids) / [`set_global_network_ids(Option<Vec<String>>)`](crate::client::fluent_builders::DescribeGlobalNetworks::set_global_network_ids): <p>The IDs of one or more global networks. The maximum is 10.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::DescribeGlobalNetworks::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::DescribeGlobalNetworks::set_max_results): <p>The maximum number of results to return.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::DescribeGlobalNetworks::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::DescribeGlobalNetworks::set_next_token): <p>The token for the next page of results.</p>
    /// - On success, responds with [`DescribeGlobalNetworksOutput`](crate::output::DescribeGlobalNetworksOutput) with field(s):
    ///   - [`global_networks(Option<Vec<GlobalNetwork>>)`](crate::output::DescribeGlobalNetworksOutput::global_networks): <p>Information about the global networks.</p>
    ///   - [`next_token(Option<String>)`](crate::output::DescribeGlobalNetworksOutput::next_token): <p>The token for the next page of results.</p>
    /// - On failure, responds with [`SdkError<DescribeGlobalNetworksError>`](crate::error::DescribeGlobalNetworksError)
    pub fn describe_global_networks(
        &self,
    ) -> crate::client::fluent_builders::DescribeGlobalNetworks {
        crate::client::fluent_builders::DescribeGlobalNetworks::new(self.handle.clone())
    }
}
