// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AcceptAttachmentOutput {
    /// <p>The response to the attachment request. </p>
    #[doc(hidden)]
    pub attachment: std::option::Option<crate::types::Attachment>,
    _request_id: Option<String>,
}
impl AcceptAttachmentOutput {
    /// <p>The response to the attachment request. </p>
    pub fn attachment(&self) -> std::option::Option<&crate::types::Attachment> {
        self.attachment.as_ref()
    }
}
impl aws_http::request_id::RequestId for AcceptAttachmentOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl AcceptAttachmentOutput {
    /// Creates a new builder-style object to manufacture [`AcceptAttachmentOutput`](crate::operation::accept_attachment::AcceptAttachmentOutput).
    pub fn builder() -> crate::operation::accept_attachment::builders::AcceptAttachmentOutputBuilder
    {
        crate::operation::accept_attachment::builders::AcceptAttachmentOutputBuilder::default()
    }
}

/// A builder for [`AcceptAttachmentOutput`](crate::operation::accept_attachment::AcceptAttachmentOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AcceptAttachmentOutputBuilder {
    pub(crate) attachment: std::option::Option<crate::types::Attachment>,
    _request_id: Option<String>,
}
impl AcceptAttachmentOutputBuilder {
    /// <p>The response to the attachment request. </p>
    pub fn attachment(mut self, input: crate::types::Attachment) -> Self {
        self.attachment = Some(input);
        self
    }
    /// <p>The response to the attachment request. </p>
    pub fn set_attachment(mut self, input: std::option::Option<crate::types::Attachment>) -> Self {
        self.attachment = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`AcceptAttachmentOutput`](crate::operation::accept_attachment::AcceptAttachmentOutput).
    pub fn build(self) -> crate::operation::accept_attachment::AcceptAttachmentOutput {
        crate::operation::accept_attachment::AcceptAttachmentOutput {
            attachment: self.attachment,
            _request_id: self._request_id,
        }
    }
}
