// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct UpdateNetworkResourceMetadataOutput {
    /// <p>The ARN of the resource.</p>
    #[doc(hidden)]
    pub resource_arn: std::option::Option<std::string::String>,
    /// <p>The updated resource metadata.</p>
    #[doc(hidden)]
    pub metadata:
        std::option::Option<std::collections::HashMap<std::string::String, std::string::String>>,
    _request_id: Option<String>,
}
impl UpdateNetworkResourceMetadataOutput {
    /// <p>The ARN of the resource.</p>
    pub fn resource_arn(&self) -> std::option::Option<&str> {
        self.resource_arn.as_deref()
    }
    /// <p>The updated resource metadata.</p>
    pub fn metadata(
        &self,
    ) -> std::option::Option<&std::collections::HashMap<std::string::String, std::string::String>>
    {
        self.metadata.as_ref()
    }
}
impl aws_http::request_id::RequestId for UpdateNetworkResourceMetadataOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl UpdateNetworkResourceMetadataOutput {
    /// Creates a new builder-style object to manufacture [`UpdateNetworkResourceMetadataOutput`](crate::operation::update_network_resource_metadata::UpdateNetworkResourceMetadataOutput).
    pub fn builder() -> crate::operation::update_network_resource_metadata::builders::UpdateNetworkResourceMetadataOutputBuilder{
        crate::operation::update_network_resource_metadata::builders::UpdateNetworkResourceMetadataOutputBuilder::default()
    }
}

/// A builder for [`UpdateNetworkResourceMetadataOutput`](crate::operation::update_network_resource_metadata::UpdateNetworkResourceMetadataOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct UpdateNetworkResourceMetadataOutputBuilder {
    pub(crate) resource_arn: std::option::Option<std::string::String>,
    pub(crate) metadata:
        std::option::Option<std::collections::HashMap<std::string::String, std::string::String>>,
    _request_id: Option<String>,
}
impl UpdateNetworkResourceMetadataOutputBuilder {
    /// <p>The ARN of the resource.</p>
    pub fn resource_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.resource_arn = Some(input.into());
        self
    }
    /// <p>The ARN of the resource.</p>
    pub fn set_resource_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.resource_arn = input;
        self
    }
    /// Adds a key-value pair to `metadata`.
    ///
    /// To override the contents of this collection use [`set_metadata`](Self::set_metadata).
    ///
    /// <p>The updated resource metadata.</p>
    pub fn metadata(
        mut self,
        k: impl Into<std::string::String>,
        v: impl Into<std::string::String>,
    ) -> Self {
        let mut hash_map = self.metadata.unwrap_or_default();
        hash_map.insert(k.into(), v.into());
        self.metadata = Some(hash_map);
        self
    }
    /// <p>The updated resource metadata.</p>
    pub fn set_metadata(
        mut self,
        input: std::option::Option<
            std::collections::HashMap<std::string::String, std::string::String>,
        >,
    ) -> Self {
        self.metadata = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`UpdateNetworkResourceMetadataOutput`](crate::operation::update_network_resource_metadata::UpdateNetworkResourceMetadataOutput).
    pub fn build(
        self,
    ) -> crate::operation::update_network_resource_metadata::UpdateNetworkResourceMetadataOutput
    {
        crate::operation::update_network_resource_metadata::UpdateNetworkResourceMetadataOutput {
            resource_arn: self.resource_arn,
            metadata: self.metadata,
            _request_id: self._request_id,
        }
    }
}
