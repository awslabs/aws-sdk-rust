// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DisassociateConnectPeerInput {
    /// <p>The ID of the global network.</p>
    #[doc(hidden)]
    pub global_network_id: std::option::Option<std::string::String>,
    /// <p>The ID of the Connect peer to disassociate from a device.</p>
    #[doc(hidden)]
    pub connect_peer_id: std::option::Option<std::string::String>,
}
impl DisassociateConnectPeerInput {
    /// <p>The ID of the global network.</p>
    pub fn global_network_id(&self) -> std::option::Option<&str> {
        self.global_network_id.as_deref()
    }
    /// <p>The ID of the Connect peer to disassociate from a device.</p>
    pub fn connect_peer_id(&self) -> std::option::Option<&str> {
        self.connect_peer_id.as_deref()
    }
}
impl DisassociateConnectPeerInput {
    /// Creates a new builder-style object to manufacture [`DisassociateConnectPeerInput`](crate::operation::disassociate_connect_peer::DisassociateConnectPeerInput).
    pub fn builder(
    ) -> crate::operation::disassociate_connect_peer::builders::DisassociateConnectPeerInputBuilder
    {
        crate::operation::disassociate_connect_peer::builders::DisassociateConnectPeerInputBuilder::default()
    }
}

/// A builder for [`DisassociateConnectPeerInput`](crate::operation::disassociate_connect_peer::DisassociateConnectPeerInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DisassociateConnectPeerInputBuilder {
    pub(crate) global_network_id: std::option::Option<std::string::String>,
    pub(crate) connect_peer_id: std::option::Option<std::string::String>,
}
impl DisassociateConnectPeerInputBuilder {
    /// <p>The ID of the global network.</p>
    pub fn global_network_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.global_network_id = Some(input.into());
        self
    }
    /// <p>The ID of the global network.</p>
    pub fn set_global_network_id(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.global_network_id = input;
        self
    }
    /// <p>The ID of the Connect peer to disassociate from a device.</p>
    pub fn connect_peer_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.connect_peer_id = Some(input.into());
        self
    }
    /// <p>The ID of the Connect peer to disassociate from a device.</p>
    pub fn set_connect_peer_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.connect_peer_id = input;
        self
    }
    /// Consumes the builder and constructs a [`DisassociateConnectPeerInput`](crate::operation::disassociate_connect_peer::DisassociateConnectPeerInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::disassociate_connect_peer::DisassociateConnectPeerInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::disassociate_connect_peer::DisassociateConnectPeerInput {
                global_network_id: self.global_network_id,
                connect_peer_id: self.connect_peer_id,
            },
        )
    }
}
