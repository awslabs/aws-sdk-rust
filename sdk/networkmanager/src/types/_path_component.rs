// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Describes a path component.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct PathComponent {
    /// <p>The sequence number in the path. The destination is 0.</p>
    #[doc(hidden)]
    pub sequence: std::option::Option<i32>,
    /// <p>The resource.</p>
    #[doc(hidden)]
    pub resource: std::option::Option<crate::types::NetworkResourceSummary>,
    /// <p>The destination CIDR block in the route table.</p>
    #[doc(hidden)]
    pub destination_cidr_block: std::option::Option<std::string::String>,
}
impl PathComponent {
    /// <p>The sequence number in the path. The destination is 0.</p>
    pub fn sequence(&self) -> std::option::Option<i32> {
        self.sequence
    }
    /// <p>The resource.</p>
    pub fn resource(&self) -> std::option::Option<&crate::types::NetworkResourceSummary> {
        self.resource.as_ref()
    }
    /// <p>The destination CIDR block in the route table.</p>
    pub fn destination_cidr_block(&self) -> std::option::Option<&str> {
        self.destination_cidr_block.as_deref()
    }
}
impl PathComponent {
    /// Creates a new builder-style object to manufacture [`PathComponent`](crate::types::PathComponent).
    pub fn builder() -> crate::types::builders::PathComponentBuilder {
        crate::types::builders::PathComponentBuilder::default()
    }
}

/// A builder for [`PathComponent`](crate::types::PathComponent).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct PathComponentBuilder {
    pub(crate) sequence: std::option::Option<i32>,
    pub(crate) resource: std::option::Option<crate::types::NetworkResourceSummary>,
    pub(crate) destination_cidr_block: std::option::Option<std::string::String>,
}
impl PathComponentBuilder {
    /// <p>The sequence number in the path. The destination is 0.</p>
    pub fn sequence(mut self, input: i32) -> Self {
        self.sequence = Some(input);
        self
    }
    /// <p>The sequence number in the path. The destination is 0.</p>
    pub fn set_sequence(mut self, input: std::option::Option<i32>) -> Self {
        self.sequence = input;
        self
    }
    /// <p>The resource.</p>
    pub fn resource(mut self, input: crate::types::NetworkResourceSummary) -> Self {
        self.resource = Some(input);
        self
    }
    /// <p>The resource.</p>
    pub fn set_resource(
        mut self,
        input: std::option::Option<crate::types::NetworkResourceSummary>,
    ) -> Self {
        self.resource = input;
        self
    }
    /// <p>The destination CIDR block in the route table.</p>
    pub fn destination_cidr_block(mut self, input: impl Into<std::string::String>) -> Self {
        self.destination_cidr_block = Some(input.into());
        self
    }
    /// <p>The destination CIDR block in the route table.</p>
    pub fn set_destination_cidr_block(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.destination_cidr_block = input;
        self
    }
    /// Consumes the builder and constructs a [`PathComponent`](crate::types::PathComponent).
    pub fn build(self) -> crate::types::PathComponent {
        crate::types::PathComponent {
            sequence: self.sequence,
            resource: self.resource,
            destination_cidr_block: self.destination_cidr_block,
        }
    }
}
