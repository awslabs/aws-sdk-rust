// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Describes bandwidth information.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct Bandwidth {
    /// <p>Upload speed in Mbps.</p>
    #[doc(hidden)]
    pub upload_speed: std::option::Option<i32>,
    /// <p>Download speed in Mbps.</p>
    #[doc(hidden)]
    pub download_speed: std::option::Option<i32>,
}
impl Bandwidth {
    /// <p>Upload speed in Mbps.</p>
    pub fn upload_speed(&self) -> std::option::Option<i32> {
        self.upload_speed
    }
    /// <p>Download speed in Mbps.</p>
    pub fn download_speed(&self) -> std::option::Option<i32> {
        self.download_speed
    }
}
impl Bandwidth {
    /// Creates a new builder-style object to manufacture [`Bandwidth`](crate::types::Bandwidth).
    pub fn builder() -> crate::types::builders::BandwidthBuilder {
        crate::types::builders::BandwidthBuilder::default()
    }
}

/// A builder for [`Bandwidth`](crate::types::Bandwidth).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct BandwidthBuilder {
    pub(crate) upload_speed: std::option::Option<i32>,
    pub(crate) download_speed: std::option::Option<i32>,
}
impl BandwidthBuilder {
    /// <p>Upload speed in Mbps.</p>
    pub fn upload_speed(mut self, input: i32) -> Self {
        self.upload_speed = Some(input);
        self
    }
    /// <p>Upload speed in Mbps.</p>
    pub fn set_upload_speed(mut self, input: std::option::Option<i32>) -> Self {
        self.upload_speed = input;
        self
    }
    /// <p>Download speed in Mbps.</p>
    pub fn download_speed(mut self, input: i32) -> Self {
        self.download_speed = Some(input);
        self
    }
    /// <p>Download speed in Mbps.</p>
    pub fn set_download_speed(mut self, input: std::option::Option<i32>) -> Self {
        self.download_speed = input;
        self
    }
    /// Consumes the builder and constructs a [`Bandwidth`](crate::types::Bandwidth).
    pub fn build(self) -> crate::types::Bandwidth {
        crate::types::Bandwidth {
            upload_speed: self.upload_speed,
            download_speed: self.download_speed,
        }
    }
}
