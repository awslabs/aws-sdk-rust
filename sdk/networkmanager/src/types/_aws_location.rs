// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Specifies a location in Amazon Web Services.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AwsLocation {
    /// <p>The Zone that the device is located in. Specify the ID of an Availability Zone, Local Zone, Wavelength Zone, or an Outpost.</p>
    #[doc(hidden)]
    pub zone: std::option::Option<std::string::String>,
    /// <p>The Amazon Resource Name (ARN) of the subnet that the device is located in.</p>
    #[doc(hidden)]
    pub subnet_arn: std::option::Option<std::string::String>,
}
impl AwsLocation {
    /// <p>The Zone that the device is located in. Specify the ID of an Availability Zone, Local Zone, Wavelength Zone, or an Outpost.</p>
    pub fn zone(&self) -> std::option::Option<&str> {
        self.zone.as_deref()
    }
    /// <p>The Amazon Resource Name (ARN) of the subnet that the device is located in.</p>
    pub fn subnet_arn(&self) -> std::option::Option<&str> {
        self.subnet_arn.as_deref()
    }
}
impl AwsLocation {
    /// Creates a new builder-style object to manufacture [`AwsLocation`](crate::types::AwsLocation).
    pub fn builder() -> crate::types::builders::AwsLocationBuilder {
        crate::types::builders::AwsLocationBuilder::default()
    }
}

/// A builder for [`AwsLocation`](crate::types::AwsLocation).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AwsLocationBuilder {
    pub(crate) zone: std::option::Option<std::string::String>,
    pub(crate) subnet_arn: std::option::Option<std::string::String>,
}
impl AwsLocationBuilder {
    /// <p>The Zone that the device is located in. Specify the ID of an Availability Zone, Local Zone, Wavelength Zone, or an Outpost.</p>
    pub fn zone(mut self, input: impl Into<std::string::String>) -> Self {
        self.zone = Some(input.into());
        self
    }
    /// <p>The Zone that the device is located in. Specify the ID of an Availability Zone, Local Zone, Wavelength Zone, or an Outpost.</p>
    pub fn set_zone(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.zone = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the subnet that the device is located in.</p>
    pub fn subnet_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.subnet_arn = Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the subnet that the device is located in.</p>
    pub fn set_subnet_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.subnet_arn = input;
        self
    }
    /// Consumes the builder and constructs a [`AwsLocation`](crate::types::AwsLocation).
    pub fn build(self) -> crate::types::AwsLocation {
        crate::types::AwsLocation {
            zone: self.zone,
            subnet_arn: self.subnet_arn,
        }
    }
}
