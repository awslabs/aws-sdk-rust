// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Describes a core network Connect attachment options.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ConnectAttachmentOptions {
    /// <p>The protocol used for the attachment connection.</p>
    #[doc(hidden)]
    pub protocol: std::option::Option<crate::types::TunnelProtocol>,
}
impl ConnectAttachmentOptions {
    /// <p>The protocol used for the attachment connection.</p>
    pub fn protocol(&self) -> std::option::Option<&crate::types::TunnelProtocol> {
        self.protocol.as_ref()
    }
}
impl ConnectAttachmentOptions {
    /// Creates a new builder-style object to manufacture [`ConnectAttachmentOptions`](crate::types::ConnectAttachmentOptions).
    pub fn builder() -> crate::types::builders::ConnectAttachmentOptionsBuilder {
        crate::types::builders::ConnectAttachmentOptionsBuilder::default()
    }
}

/// A builder for [`ConnectAttachmentOptions`](crate::types::ConnectAttachmentOptions).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ConnectAttachmentOptionsBuilder {
    pub(crate) protocol: std::option::Option<crate::types::TunnelProtocol>,
}
impl ConnectAttachmentOptionsBuilder {
    /// <p>The protocol used for the attachment connection.</p>
    pub fn protocol(mut self, input: crate::types::TunnelProtocol) -> Self {
        self.protocol = Some(input);
        self
    }
    /// <p>The protocol used for the attachment connection.</p>
    pub fn set_protocol(
        mut self,
        input: std::option::Option<crate::types::TunnelProtocol>,
    ) -> Self {
        self.protocol = input;
        self
    }
    /// Consumes the builder and constructs a [`ConnectAttachmentOptions`](crate::types::ConnectAttachmentOptions).
    pub fn build(self) -> crate::types::ConnectAttachmentOptions {
        crate::types::ConnectAttachmentOptions {
            protocol: self.protocol,
        }
    }
}
