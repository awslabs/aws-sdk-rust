// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Describes a source or a destination.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct RouteAnalysisEndpointOptions {
    /// <p>The ARN of the transit gateway attachment.</p>
    #[doc(hidden)]
    pub transit_gateway_attachment_arn: std::option::Option<std::string::String>,
    /// <p>The ARN of the transit gateway.</p>
    #[doc(hidden)]
    pub transit_gateway_arn: std::option::Option<std::string::String>,
    /// <p>The IP address.</p>
    #[doc(hidden)]
    pub ip_address: std::option::Option<std::string::String>,
}
impl RouteAnalysisEndpointOptions {
    /// <p>The ARN of the transit gateway attachment.</p>
    pub fn transit_gateway_attachment_arn(&self) -> std::option::Option<&str> {
        self.transit_gateway_attachment_arn.as_deref()
    }
    /// <p>The ARN of the transit gateway.</p>
    pub fn transit_gateway_arn(&self) -> std::option::Option<&str> {
        self.transit_gateway_arn.as_deref()
    }
    /// <p>The IP address.</p>
    pub fn ip_address(&self) -> std::option::Option<&str> {
        self.ip_address.as_deref()
    }
}
impl RouteAnalysisEndpointOptions {
    /// Creates a new builder-style object to manufacture [`RouteAnalysisEndpointOptions`](crate::types::RouteAnalysisEndpointOptions).
    pub fn builder() -> crate::types::builders::RouteAnalysisEndpointOptionsBuilder {
        crate::types::builders::RouteAnalysisEndpointOptionsBuilder::default()
    }
}

/// A builder for [`RouteAnalysisEndpointOptions`](crate::types::RouteAnalysisEndpointOptions).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct RouteAnalysisEndpointOptionsBuilder {
    pub(crate) transit_gateway_attachment_arn: std::option::Option<std::string::String>,
    pub(crate) transit_gateway_arn: std::option::Option<std::string::String>,
    pub(crate) ip_address: std::option::Option<std::string::String>,
}
impl RouteAnalysisEndpointOptionsBuilder {
    /// <p>The ARN of the transit gateway attachment.</p>
    pub fn transit_gateway_attachment_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.transit_gateway_attachment_arn = Some(input.into());
        self
    }
    /// <p>The ARN of the transit gateway attachment.</p>
    pub fn set_transit_gateway_attachment_arn(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.transit_gateway_attachment_arn = input;
        self
    }
    /// <p>The ARN of the transit gateway.</p>
    pub fn transit_gateway_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.transit_gateway_arn = Some(input.into());
        self
    }
    /// <p>The ARN of the transit gateway.</p>
    pub fn set_transit_gateway_arn(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.transit_gateway_arn = input;
        self
    }
    /// <p>The IP address.</p>
    pub fn ip_address(mut self, input: impl Into<std::string::String>) -> Self {
        self.ip_address = Some(input.into());
        self
    }
    /// <p>The IP address.</p>
    pub fn set_ip_address(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.ip_address = input;
        self
    }
    /// Consumes the builder and constructs a [`RouteAnalysisEndpointOptions`](crate::types::RouteAnalysisEndpointOptions).
    pub fn build(self) -> crate::types::RouteAnalysisEndpointOptions {
        crate::types::RouteAnalysisEndpointOptions {
            transit_gateway_attachment_arn: self.transit_gateway_attachment_arn,
            transit_gateway_arn: self.transit_gateway_arn,
            ip_address: self.ip_address,
        }
    }
}
