// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) fn create_environment_membership_output_correct_errors(
    mut builder: crate::operation::create_environment_membership::builders::CreateEnvironmentMembershipOutputBuilder,
) -> crate::operation::create_environment_membership::builders::CreateEnvironmentMembershipOutputBuilder {
    if builder.membership.is_none() {
        builder.membership = {
            let builder = crate::types::builders::EnvironmentMemberBuilder::default();
            crate::serde_util::environment_member_correct_errors(builder).build().ok()
        }
    }
    builder
}

pub(crate) fn describe_environment_status_output_correct_errors(
    mut builder: crate::operation::describe_environment_status::builders::DescribeEnvironmentStatusOutputBuilder,
) -> crate::operation::describe_environment_status::builders::DescribeEnvironmentStatusOutputBuilder {
    if builder.status.is_none() {
        builder.status = "no value was set".parse::<crate::types::EnvironmentStatus>().ok()
    }
    if builder.message.is_none() {
        builder.message = Some(Default::default())
    }
    builder
}

pub(crate) fn environment_member_correct_errors(
    mut builder: crate::types::builders::EnvironmentMemberBuilder,
) -> crate::types::builders::EnvironmentMemberBuilder {
    if builder.permissions.is_none() {
        builder.permissions = "no value was set".parse::<crate::types::Permissions>().ok()
    }
    if builder.user_id.is_none() {
        builder.user_id = Some(Default::default())
    }
    if builder.user_arn.is_none() {
        builder.user_arn = Some(Default::default())
    }
    if builder.environment_id.is_none() {
        builder.environment_id = Some(Default::default())
    }
    builder
}

pub(crate) fn environment_correct_errors(mut builder: crate::types::builders::EnvironmentBuilder) -> crate::types::builders::EnvironmentBuilder {
    if builder.r#type.is_none() {
        builder.r#type = "no value was set".parse::<crate::types::EnvironmentType>().ok()
    }
    if builder.arn.is_none() {
        builder.arn = Some(Default::default())
    }
    if builder.owner_arn.is_none() {
        builder.owner_arn = Some(Default::default())
    }
    builder
}

pub(crate) fn tag_correct_errors(mut builder: crate::types::builders::TagBuilder) -> crate::types::builders::TagBuilder {
    if builder.key.is_none() {
        builder.key = Some(Default::default())
    }
    if builder.value.is_none() {
        builder.value = Some(Default::default())
    }
    builder
}
