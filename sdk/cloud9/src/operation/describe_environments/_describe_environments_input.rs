// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DescribeEnvironmentsInput {
    /// <p>The IDs of individual environments to get information about.</p>
    pub environment_ids: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
}
impl DescribeEnvironmentsInput {
    /// <p>The IDs of individual environments to get information about.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.environment_ids.is_none()`.
    pub fn environment_ids(&self) -> &[::std::string::String] {
        self.environment_ids.as_deref().unwrap_or_default()
    }
}
impl DescribeEnvironmentsInput {
    /// Creates a new builder-style object to manufacture [`DescribeEnvironmentsInput`](crate::operation::describe_environments::DescribeEnvironmentsInput).
    pub fn builder() -> crate::operation::describe_environments::builders::DescribeEnvironmentsInputBuilder {
        crate::operation::describe_environments::builders::DescribeEnvironmentsInputBuilder::default()
    }
}

/// A builder for [`DescribeEnvironmentsInput`](crate::operation::describe_environments::DescribeEnvironmentsInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DescribeEnvironmentsInputBuilder {
    pub(crate) environment_ids: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
}
impl DescribeEnvironmentsInputBuilder {
    /// Appends an item to `environment_ids`.
    ///
    /// To override the contents of this collection use [`set_environment_ids`](Self::set_environment_ids).
    ///
    /// <p>The IDs of individual environments to get information about.</p>
    pub fn environment_ids(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        let mut v = self.environment_ids.unwrap_or_default();
        v.push(input.into());
        self.environment_ids = ::std::option::Option::Some(v);
        self
    }
    /// <p>The IDs of individual environments to get information about.</p>
    pub fn set_environment_ids(mut self, input: ::std::option::Option<::std::vec::Vec<::std::string::String>>) -> Self {
        self.environment_ids = input;
        self
    }
    /// <p>The IDs of individual environments to get information about.</p>
    pub fn get_environment_ids(&self) -> &::std::option::Option<::std::vec::Vec<::std::string::String>> {
        &self.environment_ids
    }
    /// Consumes the builder and constructs a [`DescribeEnvironmentsInput`](crate::operation::describe_environments::DescribeEnvironmentsInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::describe_environments::DescribeEnvironmentsInput, ::aws_smithy_types::error::operation::BuildError>
    {
        ::std::result::Result::Ok(crate::operation::describe_environments::DescribeEnvironmentsInput {
            environment_ids: self.environment_ids,
        })
    }
}
