// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_create_environment_ec2_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::create_environment_ec2::CreateEnvironmentEc2Input,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.name {
        object.key("name").string(var_1.as_str());
    }
    if let Some(var_2) = &input.description {
        object.key("description").string(var_2.as_str());
    }
    if let Some(var_3) = &input.client_request_token {
        object.key("clientRequestToken").string(var_3.as_str());
    }
    if let Some(var_4) = &input.instance_type {
        object.key("instanceType").string(var_4.as_str());
    }
    if let Some(var_5) = &input.subnet_id {
        object.key("subnetId").string(var_5.as_str());
    }
    if let Some(var_6) = &input.image_id {
        object.key("imageId").string(var_6.as_str());
    }
    if let Some(var_7) = &input.automatic_stop_time_minutes {
        object.key("automaticStopTimeMinutes").number(
            #[allow(clippy::useless_conversion)]
            ::aws_smithy_types::Number::NegInt((*var_7).into()),
        );
    }
    if let Some(var_8) = &input.owner_arn {
        object.key("ownerArn").string(var_8.as_str());
    }
    if let Some(var_9) = &input.tags {
        let mut array_10 = object.key("tags").start_array();
        for item_11 in var_9 {
            {
                #[allow(unused_mut)]
                let mut object_12 = array_10.value().start_object();
                crate::protocol_serde::shape_tag::ser_tag(&mut object_12, item_11)?;
                object_12.finish();
            }
        }
        array_10.finish();
    }
    if let Some(var_13) = &input.connection_type {
        object.key("connectionType").string(var_13.as_str());
    }
    if let Some(var_14) = &input.dry_run {
        object.key("dryRun").boolean(*var_14);
    }
    Ok(())
}
