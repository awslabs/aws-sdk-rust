// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn serialize_structure_create_environment_ec2_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateEnvironmentEc2Input,
) {
    if let Some(var_1) = &input.name {
        object.key("name").string(var_1);
    }
    if let Some(var_2) = &input.description {
        object.key("description").string(var_2);
    }
    if let Some(var_3) = &input.client_request_token {
        object.key("clientRequestToken").string(var_3);
    }
    if let Some(var_4) = &input.instance_type {
        object.key("instanceType").string(var_4);
    }
    if let Some(var_5) = &input.subnet_id {
        object.key("subnetId").string(var_5);
    }
    if let Some(var_6) = &input.image_id {
        object.key("imageId").string(var_6);
    }
    if let Some(var_7) = &input.automatic_stop_time_minutes {
        object.key("automaticStopTimeMinutes").number(
            #[allow(clippy::useless_conversion)]
            smithy_types::Number::NegInt((*var_7).into()),
        );
    }
    if let Some(var_8) = &input.owner_arn {
        object.key("ownerArn").string(var_8);
    }
    if let Some(var_9) = &input.tags {
        let mut array_10 = object.key("tags").start_array();
        for item_11 in var_9 {
            {
                let mut object_12 = array_10.value().start_object();
                crate::json_ser::serialize_structure_tag(&mut object_12, item_11);
                object_12.finish();
            }
        }
        array_10.finish();
    }
    if let Some(var_13) = &input.connection_type {
        object.key("connectionType").string(var_13.as_str());
    }
}

pub fn serialize_structure_create_environment_membership_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateEnvironmentMembershipInput,
) {
    if let Some(var_14) = &input.environment_id {
        object.key("environmentId").string(var_14);
    }
    if let Some(var_15) = &input.user_arn {
        object.key("userArn").string(var_15);
    }
    if let Some(var_16) = &input.permissions {
        object.key("permissions").string(var_16.as_str());
    }
}

pub fn serialize_structure_delete_environment_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DeleteEnvironmentInput,
) {
    if let Some(var_17) = &input.environment_id {
        object.key("environmentId").string(var_17);
    }
}

pub fn serialize_structure_delete_environment_membership_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DeleteEnvironmentMembershipInput,
) {
    if let Some(var_18) = &input.environment_id {
        object.key("environmentId").string(var_18);
    }
    if let Some(var_19) = &input.user_arn {
        object.key("userArn").string(var_19);
    }
}

pub fn serialize_structure_describe_environment_memberships_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DescribeEnvironmentMembershipsInput,
) {
    if let Some(var_20) = &input.user_arn {
        object.key("userArn").string(var_20);
    }
    if let Some(var_21) = &input.environment_id {
        object.key("environmentId").string(var_21);
    }
    if let Some(var_22) = &input.permissions {
        let mut array_23 = object.key("permissions").start_array();
        for item_24 in var_22 {
            {
                array_23.value().string(item_24.as_str());
            }
        }
        array_23.finish();
    }
    if let Some(var_25) = &input.next_token {
        object.key("nextToken").string(var_25);
    }
    if let Some(var_26) = &input.max_results {
        object.key("maxResults").number(
            #[allow(clippy::useless_conversion)]
            smithy_types::Number::NegInt((*var_26).into()),
        );
    }
}

pub fn serialize_structure_describe_environments_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DescribeEnvironmentsInput,
) {
    if let Some(var_27) = &input.environment_ids {
        let mut array_28 = object.key("environmentIds").start_array();
        for item_29 in var_27 {
            {
                array_28.value().string(item_29);
            }
        }
        array_28.finish();
    }
}

pub fn serialize_structure_describe_environment_status_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DescribeEnvironmentStatusInput,
) {
    if let Some(var_30) = &input.environment_id {
        object.key("environmentId").string(var_30);
    }
}

pub fn serialize_structure_list_environments_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::ListEnvironmentsInput,
) {
    if let Some(var_31) = &input.next_token {
        object.key("nextToken").string(var_31);
    }
    if let Some(var_32) = &input.max_results {
        object.key("maxResults").number(
            #[allow(clippy::useless_conversion)]
            smithy_types::Number::NegInt((*var_32).into()),
        );
    }
}

pub fn serialize_structure_list_tags_for_resource_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::ListTagsForResourceInput,
) {
    if let Some(var_33) = &input.resource_arn {
        object.key("ResourceARN").string(var_33);
    }
}

pub fn serialize_structure_tag_resource_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::TagResourceInput,
) {
    if let Some(var_34) = &input.resource_arn {
        object.key("ResourceARN").string(var_34);
    }
    if let Some(var_35) = &input.tags {
        let mut array_36 = object.key("Tags").start_array();
        for item_37 in var_35 {
            {
                let mut object_38 = array_36.value().start_object();
                crate::json_ser::serialize_structure_tag(&mut object_38, item_37);
                object_38.finish();
            }
        }
        array_36.finish();
    }
}

pub fn serialize_structure_untag_resource_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UntagResourceInput,
) {
    if let Some(var_39) = &input.resource_arn {
        object.key("ResourceARN").string(var_39);
    }
    if let Some(var_40) = &input.tag_keys {
        let mut array_41 = object.key("TagKeys").start_array();
        for item_42 in var_40 {
            {
                array_41.value().string(item_42);
            }
        }
        array_41.finish();
    }
}

pub fn serialize_structure_update_environment_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateEnvironmentInput,
) {
    if let Some(var_43) = &input.environment_id {
        object.key("environmentId").string(var_43);
    }
    if let Some(var_44) = &input.name {
        object.key("name").string(var_44);
    }
    if let Some(var_45) = &input.description {
        object.key("description").string(var_45);
    }
}

pub fn serialize_structure_update_environment_membership_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateEnvironmentMembershipInput,
) {
    if let Some(var_46) = &input.environment_id {
        object.key("environmentId").string(var_46);
    }
    if let Some(var_47) = &input.user_arn {
        object.key("userArn").string(var_47);
    }
    if let Some(var_48) = &input.permissions {
        object.key("permissions").string(var_48.as_str());
    }
}

pub fn serialize_structure_tag(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::Tag,
) {
    if let Some(var_49) = &input.key {
        object.key("Key").string(var_49);
    }
    if let Some(var_50) = &input.value {
        object.key("Value").string(var_50);
    }
}
