// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Result message containing a list of environment resource descriptions.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DescribeEnvironmentResourcesOutput {
    /// <p> A list of <code>EnvironmentResourceDescription</code>. </p>
    #[doc(hidden)]
    pub environment_resources: std::option::Option<crate::types::EnvironmentResourceDescription>,
    _request_id: Option<String>,
}
impl DescribeEnvironmentResourcesOutput {
    /// <p> A list of <code>EnvironmentResourceDescription</code>. </p>
    pub fn environment_resources(
        &self,
    ) -> std::option::Option<&crate::types::EnvironmentResourceDescription> {
        self.environment_resources.as_ref()
    }
}
impl aws_http::request_id::RequestId for DescribeEnvironmentResourcesOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl DescribeEnvironmentResourcesOutput {
    /// Creates a new builder-style object to manufacture [`DescribeEnvironmentResourcesOutput`](crate::operation::describe_environment_resources::DescribeEnvironmentResourcesOutput).
    pub fn builder() -> crate::operation::describe_environment_resources::builders::DescribeEnvironmentResourcesOutputBuilder{
        crate::operation::describe_environment_resources::builders::DescribeEnvironmentResourcesOutputBuilder::default()
    }
}

/// A builder for [`DescribeEnvironmentResourcesOutput`](crate::operation::describe_environment_resources::DescribeEnvironmentResourcesOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DescribeEnvironmentResourcesOutputBuilder {
    pub(crate) environment_resources:
        std::option::Option<crate::types::EnvironmentResourceDescription>,
    _request_id: Option<String>,
}
impl DescribeEnvironmentResourcesOutputBuilder {
    /// <p> A list of <code>EnvironmentResourceDescription</code>. </p>
    pub fn environment_resources(
        mut self,
        input: crate::types::EnvironmentResourceDescription,
    ) -> Self {
        self.environment_resources = Some(input);
        self
    }
    /// <p> A list of <code>EnvironmentResourceDescription</code>. </p>
    pub fn set_environment_resources(
        mut self,
        input: std::option::Option<crate::types::EnvironmentResourceDescription>,
    ) -> Self {
        self.environment_resources = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`DescribeEnvironmentResourcesOutput`](crate::operation::describe_environment_resources::DescribeEnvironmentResourcesOutput).
    pub fn build(
        self,
    ) -> crate::operation::describe_environment_resources::DescribeEnvironmentResourcesOutput {
        crate::operation::describe_environment_resources::DescribeEnvironmentResourcesOutput {
            environment_resources: self.environment_resources,
            _request_id: self._request_id,
        }
    }
}
