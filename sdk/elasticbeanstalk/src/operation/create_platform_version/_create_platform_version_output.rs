// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct CreatePlatformVersionOutput {
    /// <p>Detailed information about the new version of the custom platform.</p>
    #[doc(hidden)]
    pub platform_summary: std::option::Option<crate::types::PlatformSummary>,
    /// <p>The builder used to create the custom platform.</p>
    ///
    /// _Note: This member has been renamed from `builder`._
    #[doc(hidden)]
    pub builder_value: std::option::Option<crate::types::Builder>,
    _request_id: Option<String>,
}
impl CreatePlatformVersionOutput {
    /// <p>Detailed information about the new version of the custom platform.</p>
    pub fn platform_summary(&self) -> std::option::Option<&crate::types::PlatformSummary> {
        self.platform_summary.as_ref()
    }
    /// <p>The builder used to create the custom platform.</p>
    ///
    /// _Note: This member has been renamed from `builder`._
    pub fn builder_value(&self) -> std::option::Option<&crate::types::Builder> {
        self.builder_value.as_ref()
    }
}
impl aws_http::request_id::RequestId for CreatePlatformVersionOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl CreatePlatformVersionOutput {
    /// Creates a new builder-style object to manufacture [`CreatePlatformVersionOutput`](crate::operation::create_platform_version::CreatePlatformVersionOutput).
    pub fn builder(
    ) -> crate::operation::create_platform_version::builders::CreatePlatformVersionOutputBuilder
    {
        crate::operation::create_platform_version::builders::CreatePlatformVersionOutputBuilder::default()
    }
}

/// A builder for [`CreatePlatformVersionOutput`](crate::operation::create_platform_version::CreatePlatformVersionOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct CreatePlatformVersionOutputBuilder {
    pub(crate) platform_summary: std::option::Option<crate::types::PlatformSummary>,
    pub(crate) builder_value: std::option::Option<crate::types::Builder>,
    _request_id: Option<String>,
}
impl CreatePlatformVersionOutputBuilder {
    /// <p>Detailed information about the new version of the custom platform.</p>
    pub fn platform_summary(mut self, input: crate::types::PlatformSummary) -> Self {
        self.platform_summary = Some(input);
        self
    }
    /// <p>Detailed information about the new version of the custom platform.</p>
    pub fn set_platform_summary(
        mut self,
        input: std::option::Option<crate::types::PlatformSummary>,
    ) -> Self {
        self.platform_summary = input;
        self
    }
    /// <p>The builder used to create the custom platform.</p>
    pub fn builder_value(mut self, input: crate::types::Builder) -> Self {
        self.builder_value = Some(input);
        self
    }
    /// <p>The builder used to create the custom platform.</p>
    pub fn set_builder(mut self, input: std::option::Option<crate::types::Builder>) -> Self {
        self.builder_value = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`CreatePlatformVersionOutput`](crate::operation::create_platform_version::CreatePlatformVersionOutput).
    pub fn build(self) -> crate::operation::create_platform_version::CreatePlatformVersionOutput {
        crate::operation::create_platform_version::CreatePlatformVersionOutput {
            platform_summary: self.platform_summary,
            builder_value: self.builder_value,
            _request_id: self._request_id,
        }
    }
}
