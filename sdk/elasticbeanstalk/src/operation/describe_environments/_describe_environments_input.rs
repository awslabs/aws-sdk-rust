// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Request to describe one or more environments.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DescribeEnvironmentsInput {
    /// <p>If specified, AWS Elastic Beanstalk restricts the returned descriptions to include only those that are associated with this application.</p>
    #[doc(hidden)]
    pub application_name: std::option::Option<std::string::String>,
    /// <p>If specified, AWS Elastic Beanstalk restricts the returned descriptions to include only those that are associated with this application version.</p>
    #[doc(hidden)]
    pub version_label: std::option::Option<std::string::String>,
    /// <p>If specified, AWS Elastic Beanstalk restricts the returned descriptions to include only those that have the specified IDs.</p>
    #[doc(hidden)]
    pub environment_ids: std::option::Option<std::vec::Vec<std::string::String>>,
    /// <p>If specified, AWS Elastic Beanstalk restricts the returned descriptions to include only those that have the specified names.</p>
    #[doc(hidden)]
    pub environment_names: std::option::Option<std::vec::Vec<std::string::String>>,
    /// <p>Indicates whether to include deleted environments:</p>
    /// <p> <code>true</code>: Environments that have been deleted after <code>IncludedDeletedBackTo</code> are displayed.</p>
    /// <p> <code>false</code>: Do not include deleted environments.</p>
    #[doc(hidden)]
    pub include_deleted: std::option::Option<bool>,
    /// <p> If specified when <code>IncludeDeleted</code> is set to <code>true</code>, then environments deleted after this date are displayed. </p>
    #[doc(hidden)]
    pub included_deleted_back_to: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>For a paginated request. Specify a maximum number of environments to include in each response.</p>
    /// <p>If no <code>MaxRecords</code> is specified, all available environments are retrieved in a single response.</p>
    #[doc(hidden)]
    pub max_records: std::option::Option<i32>,
    /// <p>For a paginated request. Specify a token from a previous response page to retrieve the next response page. All other parameter values must be identical to the ones specified in the initial request.</p>
    /// <p>If no <code>NextToken</code> is specified, the first page is retrieved.</p>
    #[doc(hidden)]
    pub next_token: std::option::Option<std::string::String>,
}
impl DescribeEnvironmentsInput {
    /// <p>If specified, AWS Elastic Beanstalk restricts the returned descriptions to include only those that are associated with this application.</p>
    pub fn application_name(&self) -> std::option::Option<&str> {
        self.application_name.as_deref()
    }
    /// <p>If specified, AWS Elastic Beanstalk restricts the returned descriptions to include only those that are associated with this application version.</p>
    pub fn version_label(&self) -> std::option::Option<&str> {
        self.version_label.as_deref()
    }
    /// <p>If specified, AWS Elastic Beanstalk restricts the returned descriptions to include only those that have the specified IDs.</p>
    pub fn environment_ids(&self) -> std::option::Option<&[std::string::String]> {
        self.environment_ids.as_deref()
    }
    /// <p>If specified, AWS Elastic Beanstalk restricts the returned descriptions to include only those that have the specified names.</p>
    pub fn environment_names(&self) -> std::option::Option<&[std::string::String]> {
        self.environment_names.as_deref()
    }
    /// <p>Indicates whether to include deleted environments:</p>
    /// <p> <code>true</code>: Environments that have been deleted after <code>IncludedDeletedBackTo</code> are displayed.</p>
    /// <p> <code>false</code>: Do not include deleted environments.</p>
    pub fn include_deleted(&self) -> std::option::Option<bool> {
        self.include_deleted
    }
    /// <p> If specified when <code>IncludeDeleted</code> is set to <code>true</code>, then environments deleted after this date are displayed. </p>
    pub fn included_deleted_back_to(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.included_deleted_back_to.as_ref()
    }
    /// <p>For a paginated request. Specify a maximum number of environments to include in each response.</p>
    /// <p>If no <code>MaxRecords</code> is specified, all available environments are retrieved in a single response.</p>
    pub fn max_records(&self) -> std::option::Option<i32> {
        self.max_records
    }
    /// <p>For a paginated request. Specify a token from a previous response page to retrieve the next response page. All other parameter values must be identical to the ones specified in the initial request.</p>
    /// <p>If no <code>NextToken</code> is specified, the first page is retrieved.</p>
    pub fn next_token(&self) -> std::option::Option<&str> {
        self.next_token.as_deref()
    }
}
impl DescribeEnvironmentsInput {
    /// Creates a new builder-style object to manufacture [`DescribeEnvironmentsInput`](crate::operation::describe_environments::DescribeEnvironmentsInput).
    pub fn builder(
    ) -> crate::operation::describe_environments::builders::DescribeEnvironmentsInputBuilder {
        crate::operation::describe_environments::builders::DescribeEnvironmentsInputBuilder::default(
        )
    }
}

/// A builder for [`DescribeEnvironmentsInput`](crate::operation::describe_environments::DescribeEnvironmentsInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DescribeEnvironmentsInputBuilder {
    pub(crate) application_name: std::option::Option<std::string::String>,
    pub(crate) version_label: std::option::Option<std::string::String>,
    pub(crate) environment_ids: std::option::Option<std::vec::Vec<std::string::String>>,
    pub(crate) environment_names: std::option::Option<std::vec::Vec<std::string::String>>,
    pub(crate) include_deleted: std::option::Option<bool>,
    pub(crate) included_deleted_back_to: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) max_records: std::option::Option<i32>,
    pub(crate) next_token: std::option::Option<std::string::String>,
}
impl DescribeEnvironmentsInputBuilder {
    /// <p>If specified, AWS Elastic Beanstalk restricts the returned descriptions to include only those that are associated with this application.</p>
    pub fn application_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.application_name = Some(input.into());
        self
    }
    /// <p>If specified, AWS Elastic Beanstalk restricts the returned descriptions to include only those that are associated with this application.</p>
    pub fn set_application_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.application_name = input;
        self
    }
    /// <p>If specified, AWS Elastic Beanstalk restricts the returned descriptions to include only those that are associated with this application version.</p>
    pub fn version_label(mut self, input: impl Into<std::string::String>) -> Self {
        self.version_label = Some(input.into());
        self
    }
    /// <p>If specified, AWS Elastic Beanstalk restricts the returned descriptions to include only those that are associated with this application version.</p>
    pub fn set_version_label(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.version_label = input;
        self
    }
    /// Appends an item to `environment_ids`.
    ///
    /// To override the contents of this collection use [`set_environment_ids`](Self::set_environment_ids).
    ///
    /// <p>If specified, AWS Elastic Beanstalk restricts the returned descriptions to include only those that have the specified IDs.</p>
    pub fn environment_ids(mut self, input: impl Into<std::string::String>) -> Self {
        let mut v = self.environment_ids.unwrap_or_default();
        v.push(input.into());
        self.environment_ids = Some(v);
        self
    }
    /// <p>If specified, AWS Elastic Beanstalk restricts the returned descriptions to include only those that have the specified IDs.</p>
    pub fn set_environment_ids(
        mut self,
        input: std::option::Option<std::vec::Vec<std::string::String>>,
    ) -> Self {
        self.environment_ids = input;
        self
    }
    /// Appends an item to `environment_names`.
    ///
    /// To override the contents of this collection use [`set_environment_names`](Self::set_environment_names).
    ///
    /// <p>If specified, AWS Elastic Beanstalk restricts the returned descriptions to include only those that have the specified names.</p>
    pub fn environment_names(mut self, input: impl Into<std::string::String>) -> Self {
        let mut v = self.environment_names.unwrap_or_default();
        v.push(input.into());
        self.environment_names = Some(v);
        self
    }
    /// <p>If specified, AWS Elastic Beanstalk restricts the returned descriptions to include only those that have the specified names.</p>
    pub fn set_environment_names(
        mut self,
        input: std::option::Option<std::vec::Vec<std::string::String>>,
    ) -> Self {
        self.environment_names = input;
        self
    }
    /// <p>Indicates whether to include deleted environments:</p>
    /// <p> <code>true</code>: Environments that have been deleted after <code>IncludedDeletedBackTo</code> are displayed.</p>
    /// <p> <code>false</code>: Do not include deleted environments.</p>
    pub fn include_deleted(mut self, input: bool) -> Self {
        self.include_deleted = Some(input);
        self
    }
    /// <p>Indicates whether to include deleted environments:</p>
    /// <p> <code>true</code>: Environments that have been deleted after <code>IncludedDeletedBackTo</code> are displayed.</p>
    /// <p> <code>false</code>: Do not include deleted environments.</p>
    pub fn set_include_deleted(mut self, input: std::option::Option<bool>) -> Self {
        self.include_deleted = input;
        self
    }
    /// <p> If specified when <code>IncludeDeleted</code> is set to <code>true</code>, then environments deleted after this date are displayed. </p>
    pub fn included_deleted_back_to(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.included_deleted_back_to = Some(input);
        self
    }
    /// <p> If specified when <code>IncludeDeleted</code> is set to <code>true</code>, then environments deleted after this date are displayed. </p>
    pub fn set_included_deleted_back_to(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.included_deleted_back_to = input;
        self
    }
    /// <p>For a paginated request. Specify a maximum number of environments to include in each response.</p>
    /// <p>If no <code>MaxRecords</code> is specified, all available environments are retrieved in a single response.</p>
    pub fn max_records(mut self, input: i32) -> Self {
        self.max_records = Some(input);
        self
    }
    /// <p>For a paginated request. Specify a maximum number of environments to include in each response.</p>
    /// <p>If no <code>MaxRecords</code> is specified, all available environments are retrieved in a single response.</p>
    pub fn set_max_records(mut self, input: std::option::Option<i32>) -> Self {
        self.max_records = input;
        self
    }
    /// <p>For a paginated request. Specify a token from a previous response page to retrieve the next response page. All other parameter values must be identical to the ones specified in the initial request.</p>
    /// <p>If no <code>NextToken</code> is specified, the first page is retrieved.</p>
    pub fn next_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.next_token = Some(input.into());
        self
    }
    /// <p>For a paginated request. Specify a token from a previous response page to retrieve the next response page. All other parameter values must be identical to the ones specified in the initial request.</p>
    /// <p>If no <code>NextToken</code> is specified, the first page is retrieved.</p>
    pub fn set_next_token(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// Consumes the builder and constructs a [`DescribeEnvironmentsInput`](crate::operation::describe_environments::DescribeEnvironmentsInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::describe_environments::DescribeEnvironmentsInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::describe_environments::DescribeEnvironmentsInput {
                application_name: self.application_name,
                version_label: self.version_label,
                environment_ids: self.environment_ids,
                environment_names: self.environment_names,
                include_deleted: self.include_deleted,
                included_deleted_back_to: self.included_deleted_back_to,
                max_records: self.max_records,
                next_token: self.next_token,
            },
        )
    }
}
