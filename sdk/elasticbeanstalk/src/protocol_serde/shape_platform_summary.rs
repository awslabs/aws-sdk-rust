// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(clippy::needless_question_mark)]
pub fn de_platform_summary(
    decoder: &mut ::aws_smithy_xml::decode::ScopedDecoder,
) -> Result<crate::types::PlatformSummary, ::aws_smithy_xml::decode::XmlDecodeError> {
    #[allow(unused_mut)]
    let mut builder = crate::types::PlatformSummary::builder();
    while let Some(mut tag) = decoder.next_tag() {
        match tag.start_el() {
            s if s.matches("PlatformArn") /* PlatformArn com.amazonaws.elasticbeanstalk#PlatformSummary$PlatformArn */ =>  {
                let var_1 =
                    Some(
                        Result::<::std::string::String, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_platform_arn(var_1);
            }
            ,
            s if s.matches("PlatformOwner") /* PlatformOwner com.amazonaws.elasticbeanstalk#PlatformSummary$PlatformOwner */ =>  {
                let var_2 =
                    Some(
                        Result::<::std::string::String, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_platform_owner(var_2);
            }
            ,
            s if s.matches("PlatformStatus") /* PlatformStatus com.amazonaws.elasticbeanstalk#PlatformSummary$PlatformStatus */ =>  {
                let var_3 =
                    Some(
                        Result::<crate::types::PlatformStatus, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            crate::types::PlatformStatus::from(
                                ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                        )
                        ?
                    )
                ;
                builder = builder.set_platform_status(var_3);
            }
            ,
            s if s.matches("PlatformCategory") /* PlatformCategory com.amazonaws.elasticbeanstalk#PlatformSummary$PlatformCategory */ =>  {
                let var_4 =
                    Some(
                        Result::<::std::string::String, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_platform_category(var_4);
            }
            ,
            s if s.matches("OperatingSystemName") /* OperatingSystemName com.amazonaws.elasticbeanstalk#PlatformSummary$OperatingSystemName */ =>  {
                let var_5 =
                    Some(
                        Result::<::std::string::String, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_operating_system_name(var_5);
            }
            ,
            s if s.matches("OperatingSystemVersion") /* OperatingSystemVersion com.amazonaws.elasticbeanstalk#PlatformSummary$OperatingSystemVersion */ =>  {
                let var_6 =
                    Some(
                        Result::<::std::string::String, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_operating_system_version(var_6);
            }
            ,
            s if s.matches("SupportedTierList") /* SupportedTierList com.amazonaws.elasticbeanstalk#PlatformSummary$SupportedTierList */ =>  {
                let var_7 =
                    Some(
                        crate::protocol_serde::shape_supported_tier_list::de_supported_tier_list(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_supported_tier_list(var_7);
            }
            ,
            s if s.matches("SupportedAddonList") /* SupportedAddonList com.amazonaws.elasticbeanstalk#PlatformSummary$SupportedAddonList */ =>  {
                let var_8 =
                    Some(
                        crate::protocol_serde::shape_supported_addon_list::de_supported_addon_list(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_supported_addon_list(var_8);
            }
            ,
            s if s.matches("PlatformLifecycleState") /* PlatformLifecycleState com.amazonaws.elasticbeanstalk#PlatformSummary$PlatformLifecycleState */ =>  {
                let var_9 =
                    Some(
                        Result::<::std::string::String, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_platform_lifecycle_state(var_9);
            }
            ,
            s if s.matches("PlatformVersion") /* PlatformVersion com.amazonaws.elasticbeanstalk#PlatformSummary$PlatformVersion */ =>  {
                let var_10 =
                    Some(
                        Result::<::std::string::String, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_platform_version(var_10);
            }
            ,
            s if s.matches("PlatformBranchName") /* PlatformBranchName com.amazonaws.elasticbeanstalk#PlatformSummary$PlatformBranchName */ =>  {
                let var_11 =
                    Some(
                        Result::<::std::string::String, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_platform_branch_name(var_11);
            }
            ,
            s if s.matches("PlatformBranchLifecycleState") /* PlatformBranchLifecycleState com.amazonaws.elasticbeanstalk#PlatformSummary$PlatformBranchLifecycleState */ =>  {
                let var_12 =
                    Some(
                        Result::<::std::string::String, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_platform_branch_lifecycle_state(var_12);
            }
            ,
            _ => {}
        }
    }
    Ok(builder.build())
}
