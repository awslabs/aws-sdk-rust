// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(clippy::needless_question_mark)]
pub fn de_platform_description(
    decoder: &mut ::aws_smithy_xml::decode::ScopedDecoder,
) -> Result<crate::types::PlatformDescription, ::aws_smithy_xml::decode::XmlDecodeError> {
    #[allow(unused_mut)]
    let mut builder = crate::types::PlatformDescription::builder();
    while let Some(mut tag) = decoder.next_tag() {
        match tag.start_el() {
            s if s.matches("PlatformArn") /* PlatformArn com.amazonaws.elasticbeanstalk#PlatformDescription$PlatformArn */ =>  {
                let var_1 =
                    Some(
                        Result::<::std::string::String, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_platform_arn(var_1);
            }
            ,
            s if s.matches("PlatformOwner") /* PlatformOwner com.amazonaws.elasticbeanstalk#PlatformDescription$PlatformOwner */ =>  {
                let var_2 =
                    Some(
                        Result::<::std::string::String, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_platform_owner(var_2);
            }
            ,
            s if s.matches("PlatformName") /* PlatformName com.amazonaws.elasticbeanstalk#PlatformDescription$PlatformName */ =>  {
                let var_3 =
                    Some(
                        Result::<::std::string::String, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_platform_name(var_3);
            }
            ,
            s if s.matches("PlatformVersion") /* PlatformVersion com.amazonaws.elasticbeanstalk#PlatformDescription$PlatformVersion */ =>  {
                let var_4 =
                    Some(
                        Result::<::std::string::String, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_platform_version(var_4);
            }
            ,
            s if s.matches("SolutionStackName") /* SolutionStackName com.amazonaws.elasticbeanstalk#PlatformDescription$SolutionStackName */ =>  {
                let var_5 =
                    Some(
                        Result::<::std::string::String, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_solution_stack_name(var_5);
            }
            ,
            s if s.matches("PlatformStatus") /* PlatformStatus com.amazonaws.elasticbeanstalk#PlatformDescription$PlatformStatus */ =>  {
                let var_6 =
                    Some(
                        Result::<crate::types::PlatformStatus, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            crate::types::PlatformStatus::from(
                                ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                        )
                        ?
                    )
                ;
                builder = builder.set_platform_status(var_6);
            }
            ,
            s if s.matches("DateCreated") /* DateCreated com.amazonaws.elasticbeanstalk#PlatformDescription$DateCreated */ =>  {
                let var_7 =
                    Some(
                        ::aws_smithy_types::DateTime::from_str(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            , ::aws_smithy_types::date_time::Format::DateTimeWithOffset
                        )
                        .map_err(|_|::aws_smithy_xml::decode::XmlDecodeError::custom("expected (timestamp: `com.amazonaws.elasticbeanstalk#CreationDate`)"))
                        ?
                    )
                ;
                builder = builder.set_date_created(var_7);
            }
            ,
            s if s.matches("DateUpdated") /* DateUpdated com.amazonaws.elasticbeanstalk#PlatformDescription$DateUpdated */ =>  {
                let var_8 =
                    Some(
                        ::aws_smithy_types::DateTime::from_str(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            , ::aws_smithy_types::date_time::Format::DateTimeWithOffset
                        )
                        .map_err(|_|::aws_smithy_xml::decode::XmlDecodeError::custom("expected (timestamp: `com.amazonaws.elasticbeanstalk#UpdateDate`)"))
                        ?
                    )
                ;
                builder = builder.set_date_updated(var_8);
            }
            ,
            s if s.matches("PlatformCategory") /* PlatformCategory com.amazonaws.elasticbeanstalk#PlatformDescription$PlatformCategory */ =>  {
                let var_9 =
                    Some(
                        Result::<::std::string::String, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_platform_category(var_9);
            }
            ,
            s if s.matches("Description") /* Description com.amazonaws.elasticbeanstalk#PlatformDescription$Description */ =>  {
                let var_10 =
                    Some(
                        Result::<::std::string::String, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_description(var_10);
            }
            ,
            s if s.matches("Maintainer") /* Maintainer com.amazonaws.elasticbeanstalk#PlatformDescription$Maintainer */ =>  {
                let var_11 =
                    Some(
                        Result::<::std::string::String, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_maintainer(var_11);
            }
            ,
            s if s.matches("OperatingSystemName") /* OperatingSystemName com.amazonaws.elasticbeanstalk#PlatformDescription$OperatingSystemName */ =>  {
                let var_12 =
                    Some(
                        Result::<::std::string::String, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_operating_system_name(var_12);
            }
            ,
            s if s.matches("OperatingSystemVersion") /* OperatingSystemVersion com.amazonaws.elasticbeanstalk#PlatformDescription$OperatingSystemVersion */ =>  {
                let var_13 =
                    Some(
                        Result::<::std::string::String, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_operating_system_version(var_13);
            }
            ,
            s if s.matches("ProgrammingLanguages") /* ProgrammingLanguages com.amazonaws.elasticbeanstalk#PlatformDescription$ProgrammingLanguages */ =>  {
                let var_14 =
                    Some(
                        crate::protocol_serde::shape_platform_programming_languages::de_platform_programming_languages(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_programming_languages(var_14);
            }
            ,
            s if s.matches("Frameworks") /* Frameworks com.amazonaws.elasticbeanstalk#PlatformDescription$Frameworks */ =>  {
                let var_15 =
                    Some(
                        crate::protocol_serde::shape_platform_frameworks::de_platform_frameworks(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_frameworks(var_15);
            }
            ,
            s if s.matches("CustomAmiList") /* CustomAmiList com.amazonaws.elasticbeanstalk#PlatformDescription$CustomAmiList */ =>  {
                let var_16 =
                    Some(
                        crate::protocol_serde::shape_custom_ami_list::de_custom_ami_list(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_custom_ami_list(var_16);
            }
            ,
            s if s.matches("SupportedTierList") /* SupportedTierList com.amazonaws.elasticbeanstalk#PlatformDescription$SupportedTierList */ =>  {
                let var_17 =
                    Some(
                        crate::protocol_serde::shape_supported_tier_list::de_supported_tier_list(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_supported_tier_list(var_17);
            }
            ,
            s if s.matches("SupportedAddonList") /* SupportedAddonList com.amazonaws.elasticbeanstalk#PlatformDescription$SupportedAddonList */ =>  {
                let var_18 =
                    Some(
                        crate::protocol_serde::shape_supported_addon_list::de_supported_addon_list(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_supported_addon_list(var_18);
            }
            ,
            s if s.matches("PlatformLifecycleState") /* PlatformLifecycleState com.amazonaws.elasticbeanstalk#PlatformDescription$PlatformLifecycleState */ =>  {
                let var_19 =
                    Some(
                        Result::<::std::string::String, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_platform_lifecycle_state(var_19);
            }
            ,
            s if s.matches("PlatformBranchName") /* PlatformBranchName com.amazonaws.elasticbeanstalk#PlatformDescription$PlatformBranchName */ =>  {
                let var_20 =
                    Some(
                        Result::<::std::string::String, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_platform_branch_name(var_20);
            }
            ,
            s if s.matches("PlatformBranchLifecycleState") /* PlatformBranchLifecycleState com.amazonaws.elasticbeanstalk#PlatformDescription$PlatformBranchLifecycleState */ =>  {
                let var_21 =
                    Some(
                        Result::<::std::string::String, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_platform_branch_lifecycle_state(var_21);
            }
            ,
            _ => {}
        }
    }
    Ok(builder.build())
}
