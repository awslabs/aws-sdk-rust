// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_create_platform_version_input_input(
    input: &crate::operation::create_platform_version::CreatePlatformVersionInput,
) -> Result<aws_smithy_http::body::SdkBody, aws_smithy_http::operation::error::SerializationError> {
    let mut out = String::new();
    #[allow(unused_mut)]
    let mut writer =
        aws_smithy_query::QueryWriter::new(&mut out, "CreatePlatformVersion", "2010-12-01");
    #[allow(unused_mut)]
    let mut scope_1 = writer.prefix("PlatformName");
    if let Some(var_2) = &input.platform_name {
        scope_1.string(var_2);
    }
    #[allow(unused_mut)]
    let mut scope_3 = writer.prefix("PlatformVersion");
    if let Some(var_4) = &input.platform_version {
        scope_3.string(var_4);
    }
    #[allow(unused_mut)]
    let mut scope_5 = writer.prefix("PlatformDefinitionBundle");
    if let Some(var_6) = &input.platform_definition_bundle {
        crate::protocol_serde::shape_s3_location::ser_s3_location(scope_5, var_6)?;
    }
    #[allow(unused_mut)]
    let mut scope_7 = writer.prefix("EnvironmentName");
    if let Some(var_8) = &input.environment_name {
        scope_7.string(var_8);
    }
    #[allow(unused_mut)]
    let mut scope_9 = writer.prefix("OptionSettings");
    if let Some(var_10) = &input.option_settings {
        let mut list_12 = scope_9.start_list(false, None);
        for item_11 in var_10 {
            #[allow(unused_mut)]
            let mut entry_13 = list_12.entry();
            crate::protocol_serde::shape_configuration_option_setting::ser_configuration_option_setting(entry_13, item_11)?;
        }
        list_12.finish();
    }
    #[allow(unused_mut)]
    let mut scope_14 = writer.prefix("Tags");
    if let Some(var_15) = &input.tags {
        let mut list_17 = scope_14.start_list(false, None);
        for item_16 in var_15 {
            #[allow(unused_mut)]
            let mut entry_18 = list_17.entry();
            crate::protocol_serde::shape_tag::ser_tag(entry_18, item_16)?;
        }
        list_17.finish();
    }
    writer.finish();
    Ok(aws_smithy_http::body::SdkBody::from(out))
}
