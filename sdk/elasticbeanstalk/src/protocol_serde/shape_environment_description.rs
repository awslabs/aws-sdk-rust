// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(clippy::needless_question_mark)]
pub fn de_environment_description(
    decoder: &mut ::aws_smithy_xml::decode::ScopedDecoder,
) -> Result<crate::types::EnvironmentDescription, ::aws_smithy_xml::decode::XmlDecodeError> {
    #[allow(unused_mut)]
    let mut builder = crate::types::EnvironmentDescription::builder();
    while let Some(mut tag) = decoder.next_tag() {
        match tag.start_el() {
            s if s.matches("EnvironmentName") /* EnvironmentName com.amazonaws.elasticbeanstalk#EnvironmentDescription$EnvironmentName */ =>  {
                let var_1 =
                    Some(
                        Result::<::std::string::String, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_environment_name(var_1);
            }
            ,
            s if s.matches("EnvironmentId") /* EnvironmentId com.amazonaws.elasticbeanstalk#EnvironmentDescription$EnvironmentId */ =>  {
                let var_2 =
                    Some(
                        Result::<::std::string::String, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_environment_id(var_2);
            }
            ,
            s if s.matches("ApplicationName") /* ApplicationName com.amazonaws.elasticbeanstalk#EnvironmentDescription$ApplicationName */ =>  {
                let var_3 =
                    Some(
                        Result::<::std::string::String, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_application_name(var_3);
            }
            ,
            s if s.matches("VersionLabel") /* VersionLabel com.amazonaws.elasticbeanstalk#EnvironmentDescription$VersionLabel */ =>  {
                let var_4 =
                    Some(
                        Result::<::std::string::String, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_version_label(var_4);
            }
            ,
            s if s.matches("SolutionStackName") /* SolutionStackName com.amazonaws.elasticbeanstalk#EnvironmentDescription$SolutionStackName */ =>  {
                let var_5 =
                    Some(
                        Result::<::std::string::String, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_solution_stack_name(var_5);
            }
            ,
            s if s.matches("PlatformArn") /* PlatformArn com.amazonaws.elasticbeanstalk#EnvironmentDescription$PlatformArn */ =>  {
                let var_6 =
                    Some(
                        Result::<::std::string::String, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_platform_arn(var_6);
            }
            ,
            s if s.matches("TemplateName") /* TemplateName com.amazonaws.elasticbeanstalk#EnvironmentDescription$TemplateName */ =>  {
                let var_7 =
                    Some(
                        Result::<::std::string::String, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_template_name(var_7);
            }
            ,
            s if s.matches("Description") /* Description com.amazonaws.elasticbeanstalk#EnvironmentDescription$Description */ =>  {
                let var_8 =
                    Some(
                        Result::<::std::string::String, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_description(var_8);
            }
            ,
            s if s.matches("EndpointURL") /* EndpointURL com.amazonaws.elasticbeanstalk#EnvironmentDescription$EndpointURL */ =>  {
                let var_9 =
                    Some(
                        Result::<::std::string::String, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_endpoint_url(var_9);
            }
            ,
            s if s.matches("CNAME") /* CNAME com.amazonaws.elasticbeanstalk#EnvironmentDescription$CNAME */ =>  {
                let var_10 =
                    Some(
                        Result::<::std::string::String, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_cname(var_10);
            }
            ,
            s if s.matches("DateCreated") /* DateCreated com.amazonaws.elasticbeanstalk#EnvironmentDescription$DateCreated */ =>  {
                let var_11 =
                    Some(
                        ::aws_smithy_types::DateTime::from_str(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            , ::aws_smithy_types::date_time::Format::DateTimeWithOffset
                        )
                        .map_err(|_|::aws_smithy_xml::decode::XmlDecodeError::custom("expected (timestamp: `com.amazonaws.elasticbeanstalk#CreationDate`)"))
                        ?
                    )
                ;
                builder = builder.set_date_created(var_11);
            }
            ,
            s if s.matches("DateUpdated") /* DateUpdated com.amazonaws.elasticbeanstalk#EnvironmentDescription$DateUpdated */ =>  {
                let var_12 =
                    Some(
                        ::aws_smithy_types::DateTime::from_str(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            , ::aws_smithy_types::date_time::Format::DateTimeWithOffset
                        )
                        .map_err(|_|::aws_smithy_xml::decode::XmlDecodeError::custom("expected (timestamp: `com.amazonaws.elasticbeanstalk#UpdateDate`)"))
                        ?
                    )
                ;
                builder = builder.set_date_updated(var_12);
            }
            ,
            s if s.matches("Status") /* Status com.amazonaws.elasticbeanstalk#EnvironmentDescription$Status */ =>  {
                let var_13 =
                    Some(
                        Result::<crate::types::EnvironmentStatus, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            crate::types::EnvironmentStatus::from(
                                ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                        )
                        ?
                    )
                ;
                builder = builder.set_status(var_13);
            }
            ,
            s if s.matches("AbortableOperationInProgress") /* AbortableOperationInProgress com.amazonaws.elasticbeanstalk#EnvironmentDescription$AbortableOperationInProgress */ =>  {
                let var_14 =
                    Some(
                         {
                            <bool as ::aws_smithy_types::primitive::Parse>::parse_smithy_primitive(
                                ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                            .map_err(|_|::aws_smithy_xml::decode::XmlDecodeError::custom("expected (boolean: `com.amazonaws.elasticbeanstalk#AbortableOperationInProgress`)"))
                        }
                        ?
                    )
                ;
                builder = builder.set_abortable_operation_in_progress(var_14);
            }
            ,
            s if s.matches("Health") /* Health com.amazonaws.elasticbeanstalk#EnvironmentDescription$Health */ =>  {
                let var_15 =
                    Some(
                        Result::<crate::types::EnvironmentHealth, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            crate::types::EnvironmentHealth::from(
                                ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                        )
                        ?
                    )
                ;
                builder = builder.set_health(var_15);
            }
            ,
            s if s.matches("HealthStatus") /* HealthStatus com.amazonaws.elasticbeanstalk#EnvironmentDescription$HealthStatus */ =>  {
                let var_16 =
                    Some(
                        Result::<crate::types::EnvironmentHealthStatus, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            crate::types::EnvironmentHealthStatus::from(
                                ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                        )
                        ?
                    )
                ;
                builder = builder.set_health_status(var_16);
            }
            ,
            s if s.matches("Resources") /* Resources com.amazonaws.elasticbeanstalk#EnvironmentDescription$Resources */ =>  {
                let var_17 =
                    Some(
                        crate::protocol_serde::shape_environment_resources_description::de_environment_resources_description(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_resources(var_17);
            }
            ,
            s if s.matches("Tier") /* Tier com.amazonaws.elasticbeanstalk#EnvironmentDescription$Tier */ =>  {
                let var_18 =
                    Some(
                        crate::protocol_serde::shape_environment_tier::de_environment_tier(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_tier(var_18);
            }
            ,
            s if s.matches("EnvironmentLinks") /* EnvironmentLinks com.amazonaws.elasticbeanstalk#EnvironmentDescription$EnvironmentLinks */ =>  {
                let var_19 =
                    Some(
                        crate::protocol_serde::shape_environment_links::de_environment_links(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_environment_links(var_19);
            }
            ,
            s if s.matches("EnvironmentArn") /* EnvironmentArn com.amazonaws.elasticbeanstalk#EnvironmentDescription$EnvironmentArn */ =>  {
                let var_20 =
                    Some(
                        Result::<::std::string::String, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_environment_arn(var_20);
            }
            ,
            s if s.matches("OperationsRole") /* OperationsRole com.amazonaws.elasticbeanstalk#EnvironmentDescription$OperationsRole */ =>  {
                let var_21 =
                    Some(
                        Result::<::std::string::String, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_operations_role(var_21);
            }
            ,
            _ => {}
        }
    }
    Ok(builder.build())
}
