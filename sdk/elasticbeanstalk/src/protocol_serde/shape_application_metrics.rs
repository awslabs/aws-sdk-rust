// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(clippy::needless_question_mark)]
pub fn de_application_metrics(
    decoder: &mut ::aws_smithy_xml::decode::ScopedDecoder,
) -> Result<crate::types::ApplicationMetrics, ::aws_smithy_xml::decode::XmlDecodeError> {
    #[allow(unused_mut)]
    let mut builder = crate::types::ApplicationMetrics::builder();
    while let Some(mut tag) = decoder.next_tag() {
        match tag.start_el() {
            s if s.matches("Duration") /* Duration com.amazonaws.elasticbeanstalk#ApplicationMetrics$Duration */ =>  {
                let var_1 =
                    Some(
                         {
                            <i32 as ::aws_smithy_types::primitive::Parse>::parse_smithy_primitive(
                                ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                            .map_err(|_|::aws_smithy_xml::decode::XmlDecodeError::custom("expected (integer: `com.amazonaws.elasticbeanstalk#NullableInteger`)"))
                        }
                        ?
                    )
                ;
                builder = builder.set_duration(var_1);
            }
            ,
            s if s.matches("RequestCount") /* RequestCount com.amazonaws.elasticbeanstalk#ApplicationMetrics$RequestCount */ =>  {
                let var_2 =
                    Some(
                         {
                            <i32 as ::aws_smithy_types::primitive::Parse>::parse_smithy_primitive(
                                ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                            .map_err(|_|::aws_smithy_xml::decode::XmlDecodeError::custom("expected (integer: `com.amazonaws.elasticbeanstalk#RequestCount`)"))
                        }
                        ?
                    )
                ;
                builder = builder.set_request_count(var_2);
            }
            ,
            s if s.matches("StatusCodes") /* StatusCodes com.amazonaws.elasticbeanstalk#ApplicationMetrics$StatusCodes */ =>  {
                let var_3 =
                    Some(
                        crate::protocol_serde::shape_status_codes::de_status_codes(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_status_codes(var_3);
            }
            ,
            s if s.matches("Latency") /* Latency com.amazonaws.elasticbeanstalk#ApplicationMetrics$Latency */ =>  {
                let var_4 =
                    Some(
                        crate::protocol_serde::shape_latency::de_latency(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_latency(var_4);
            }
            ,
            _ => {}
        }
    }
    Ok(builder.build())
}
