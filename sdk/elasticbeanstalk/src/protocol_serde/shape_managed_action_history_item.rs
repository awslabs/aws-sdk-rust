// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(clippy::needless_question_mark)]
pub fn de_managed_action_history_item(
    decoder: &mut ::aws_smithy_xml::decode::ScopedDecoder,
) -> Result<crate::types::ManagedActionHistoryItem, ::aws_smithy_xml::decode::XmlDecodeError> {
    #[allow(unused_mut)]
    let mut builder = crate::types::ManagedActionHistoryItem::builder();
    while let Some(mut tag) = decoder.next_tag() {
        match tag.start_el() {
            s if s.matches("ActionId") /* ActionId com.amazonaws.elasticbeanstalk#ManagedActionHistoryItem$ActionId */ =>  {
                let var_1 =
                    Some(
                        Result::<::std::string::String, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_action_id(var_1);
            }
            ,
            s if s.matches("ActionType") /* ActionType com.amazonaws.elasticbeanstalk#ManagedActionHistoryItem$ActionType */ =>  {
                let var_2 =
                    Some(
                        Result::<crate::types::ActionType, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            crate::types::ActionType::from(
                                ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                        )
                        ?
                    )
                ;
                builder = builder.set_action_type(var_2);
            }
            ,
            s if s.matches("ActionDescription") /* ActionDescription com.amazonaws.elasticbeanstalk#ManagedActionHistoryItem$ActionDescription */ =>  {
                let var_3 =
                    Some(
                        Result::<::std::string::String, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_action_description(var_3);
            }
            ,
            s if s.matches("FailureType") /* FailureType com.amazonaws.elasticbeanstalk#ManagedActionHistoryItem$FailureType */ =>  {
                let var_4 =
                    Some(
                        Result::<crate::types::FailureType, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            crate::types::FailureType::from(
                                ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                        )
                        ?
                    )
                ;
                builder = builder.set_failure_type(var_4);
            }
            ,
            s if s.matches("Status") /* Status com.amazonaws.elasticbeanstalk#ManagedActionHistoryItem$Status */ =>  {
                let var_5 =
                    Some(
                        Result::<crate::types::ActionHistoryStatus, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            crate::types::ActionHistoryStatus::from(
                                ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                        )
                        ?
                    )
                ;
                builder = builder.set_status(var_5);
            }
            ,
            s if s.matches("FailureDescription") /* FailureDescription com.amazonaws.elasticbeanstalk#ManagedActionHistoryItem$FailureDescription */ =>  {
                let var_6 =
                    Some(
                        Result::<::std::string::String, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_failure_description(var_6);
            }
            ,
            s if s.matches("ExecutedTime") /* ExecutedTime com.amazonaws.elasticbeanstalk#ManagedActionHistoryItem$ExecutedTime */ =>  {
                let var_7 =
                    Some(
                        ::aws_smithy_types::DateTime::from_str(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            , ::aws_smithy_types::date_time::Format::DateTimeWithOffset
                        )
                        .map_err(|_|::aws_smithy_xml::decode::XmlDecodeError::custom("expected (timestamp: `com.amazonaws.elasticbeanstalk#Timestamp`)"))
                        ?
                    )
                ;
                builder = builder.set_executed_time(var_7);
            }
            ,
            s if s.matches("FinishedTime") /* FinishedTime com.amazonaws.elasticbeanstalk#ManagedActionHistoryItem$FinishedTime */ =>  {
                let var_8 =
                    Some(
                        ::aws_smithy_types::DateTime::from_str(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            , ::aws_smithy_types::date_time::Format::DateTimeWithOffset
                        )
                        .map_err(|_|::aws_smithy_xml::decode::XmlDecodeError::custom("expected (timestamp: `com.amazonaws.elasticbeanstalk#Timestamp`)"))
                        ?
                    )
                ;
                builder = builder.set_finished_time(var_8);
            }
            ,
            _ => {}
        }
    }
    Ok(builder.build())
}
