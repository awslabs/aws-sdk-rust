// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The AWS Elastic Beanstalk quota information for a single resource type in an AWS account. It reflects the resource's limits for this account.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ResourceQuota {
    /// <p>The maximum number of instances of this Elastic Beanstalk resource type that an AWS account can use.</p>
    #[doc(hidden)]
    pub maximum: std::option::Option<i32>,
}
impl ResourceQuota {
    /// <p>The maximum number of instances of this Elastic Beanstalk resource type that an AWS account can use.</p>
    pub fn maximum(&self) -> std::option::Option<i32> {
        self.maximum
    }
}
impl ResourceQuota {
    /// Creates a new builder-style object to manufacture [`ResourceQuota`](crate::types::ResourceQuota).
    pub fn builder() -> crate::types::builders::ResourceQuotaBuilder {
        crate::types::builders::ResourceQuotaBuilder::default()
    }
}

/// A builder for [`ResourceQuota`](crate::types::ResourceQuota).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ResourceQuotaBuilder {
    pub(crate) maximum: std::option::Option<i32>,
}
impl ResourceQuotaBuilder {
    /// <p>The maximum number of instances of this Elastic Beanstalk resource type that an AWS account can use.</p>
    pub fn maximum(mut self, input: i32) -> Self {
        self.maximum = Some(input);
        self
    }
    /// <p>The maximum number of instances of this Elastic Beanstalk resource type that an AWS account can use.</p>
    pub fn set_maximum(mut self, input: std::option::Option<i32>) -> Self {
        self.maximum = input;
        self
    }
    /// Consumes the builder and constructs a [`ResourceQuota`](crate::types::ResourceQuota).
    pub fn build(self) -> crate::types::ResourceQuota {
        crate::types::ResourceQuota {
            maximum: self.maximum,
        }
    }
}
