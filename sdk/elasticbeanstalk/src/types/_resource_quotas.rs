// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A set of per-resource AWS Elastic Beanstalk quotas associated with an AWS account. They reflect Elastic Beanstalk resource limits for this account.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ResourceQuotas {
    /// <p>The quota for applications in the AWS account.</p>
    #[doc(hidden)]
    pub application_quota: std::option::Option<crate::types::ResourceQuota>,
    /// <p>The quota for application versions in the AWS account.</p>
    #[doc(hidden)]
    pub application_version_quota: std::option::Option<crate::types::ResourceQuota>,
    /// <p>The quota for environments in the AWS account.</p>
    #[doc(hidden)]
    pub environment_quota: std::option::Option<crate::types::ResourceQuota>,
    /// <p>The quota for configuration templates in the AWS account.</p>
    #[doc(hidden)]
    pub configuration_template_quota: std::option::Option<crate::types::ResourceQuota>,
    /// <p>The quota for custom platforms in the AWS account.</p>
    #[doc(hidden)]
    pub custom_platform_quota: std::option::Option<crate::types::ResourceQuota>,
}
impl ResourceQuotas {
    /// <p>The quota for applications in the AWS account.</p>
    pub fn application_quota(&self) -> std::option::Option<&crate::types::ResourceQuota> {
        self.application_quota.as_ref()
    }
    /// <p>The quota for application versions in the AWS account.</p>
    pub fn application_version_quota(&self) -> std::option::Option<&crate::types::ResourceQuota> {
        self.application_version_quota.as_ref()
    }
    /// <p>The quota for environments in the AWS account.</p>
    pub fn environment_quota(&self) -> std::option::Option<&crate::types::ResourceQuota> {
        self.environment_quota.as_ref()
    }
    /// <p>The quota for configuration templates in the AWS account.</p>
    pub fn configuration_template_quota(
        &self,
    ) -> std::option::Option<&crate::types::ResourceQuota> {
        self.configuration_template_quota.as_ref()
    }
    /// <p>The quota for custom platforms in the AWS account.</p>
    pub fn custom_platform_quota(&self) -> std::option::Option<&crate::types::ResourceQuota> {
        self.custom_platform_quota.as_ref()
    }
}
impl ResourceQuotas {
    /// Creates a new builder-style object to manufacture [`ResourceQuotas`](crate::types::ResourceQuotas).
    pub fn builder() -> crate::types::builders::ResourceQuotasBuilder {
        crate::types::builders::ResourceQuotasBuilder::default()
    }
}

/// A builder for [`ResourceQuotas`](crate::types::ResourceQuotas).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ResourceQuotasBuilder {
    pub(crate) application_quota: std::option::Option<crate::types::ResourceQuota>,
    pub(crate) application_version_quota: std::option::Option<crate::types::ResourceQuota>,
    pub(crate) environment_quota: std::option::Option<crate::types::ResourceQuota>,
    pub(crate) configuration_template_quota: std::option::Option<crate::types::ResourceQuota>,
    pub(crate) custom_platform_quota: std::option::Option<crate::types::ResourceQuota>,
}
impl ResourceQuotasBuilder {
    /// <p>The quota for applications in the AWS account.</p>
    pub fn application_quota(mut self, input: crate::types::ResourceQuota) -> Self {
        self.application_quota = Some(input);
        self
    }
    /// <p>The quota for applications in the AWS account.</p>
    pub fn set_application_quota(
        mut self,
        input: std::option::Option<crate::types::ResourceQuota>,
    ) -> Self {
        self.application_quota = input;
        self
    }
    /// <p>The quota for application versions in the AWS account.</p>
    pub fn application_version_quota(mut self, input: crate::types::ResourceQuota) -> Self {
        self.application_version_quota = Some(input);
        self
    }
    /// <p>The quota for application versions in the AWS account.</p>
    pub fn set_application_version_quota(
        mut self,
        input: std::option::Option<crate::types::ResourceQuota>,
    ) -> Self {
        self.application_version_quota = input;
        self
    }
    /// <p>The quota for environments in the AWS account.</p>
    pub fn environment_quota(mut self, input: crate::types::ResourceQuota) -> Self {
        self.environment_quota = Some(input);
        self
    }
    /// <p>The quota for environments in the AWS account.</p>
    pub fn set_environment_quota(
        mut self,
        input: std::option::Option<crate::types::ResourceQuota>,
    ) -> Self {
        self.environment_quota = input;
        self
    }
    /// <p>The quota for configuration templates in the AWS account.</p>
    pub fn configuration_template_quota(mut self, input: crate::types::ResourceQuota) -> Self {
        self.configuration_template_quota = Some(input);
        self
    }
    /// <p>The quota for configuration templates in the AWS account.</p>
    pub fn set_configuration_template_quota(
        mut self,
        input: std::option::Option<crate::types::ResourceQuota>,
    ) -> Self {
        self.configuration_template_quota = input;
        self
    }
    /// <p>The quota for custom platforms in the AWS account.</p>
    pub fn custom_platform_quota(mut self, input: crate::types::ResourceQuota) -> Self {
        self.custom_platform_quota = Some(input);
        self
    }
    /// <p>The quota for custom platforms in the AWS account.</p>
    pub fn set_custom_platform_quota(
        mut self,
        input: std::option::Option<crate::types::ResourceQuota>,
    ) -> Self {
        self.custom_platform_quota = input;
        self
    }
    /// Consumes the builder and constructs a [`ResourceQuotas`](crate::types::ResourceQuotas).
    pub fn build(self) -> crate::types::ResourceQuotas {
        crate::types::ResourceQuotas {
            application_quota: self.application_quota,
            application_version_quota: self.application_version_quota,
            environment_quota: self.environment_quota,
            configuration_template_quota: self.configuration_template_quota,
            custom_platform_quota: self.custom_platform_quota,
        }
    }
}
