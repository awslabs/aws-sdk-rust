// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`TerminateEnvironment`](crate::operation::terminate_environment::builders::TerminateEnvironmentFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`environment_id(impl Into<String>)`](crate::operation::terminate_environment::builders::TerminateEnvironmentFluentBuilder::environment_id) / [`set_environment_id(Option<String>)`](crate::operation::terminate_environment::builders::TerminateEnvironmentFluentBuilder::set_environment_id): <p>The ID of the environment to terminate.</p>  <p> Condition: You must specify either this or an EnvironmentName, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error. </p>
    ///   - [`environment_name(impl Into<String>)`](crate::operation::terminate_environment::builders::TerminateEnvironmentFluentBuilder::environment_name) / [`set_environment_name(Option<String>)`](crate::operation::terminate_environment::builders::TerminateEnvironmentFluentBuilder::set_environment_name): <p>The name of the environment to terminate.</p>  <p> Condition: You must specify either this or an EnvironmentId, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error. </p>
    ///   - [`terminate_resources(bool)`](crate::operation::terminate_environment::builders::TerminateEnvironmentFluentBuilder::terminate_resources) / [`set_terminate_resources(Option<bool>)`](crate::operation::terminate_environment::builders::TerminateEnvironmentFluentBuilder::set_terminate_resources): <p>Indicates whether the associated AWS resources should shut down when the environment is terminated:</p>  <ul>   <li> <p> <code>true</code>: The specified environment as well as the associated AWS resources, such as Auto Scaling group and LoadBalancer, are terminated.</p> </li>   <li> <p> <code>false</code>: AWS Elastic Beanstalk resource management is removed from the environment, but the AWS resources continue to operate.</p> </li>  </ul>  <p> For more information, see the <a href="https://docs.aws.amazon.com/elasticbeanstalk/latest/ug/"> AWS Elastic Beanstalk User Guide. </a> </p>  <p> Default: <code>true</code> </p>  <p> Valid Values: <code>true</code> | <code>false</code> </p>
    ///   - [`force_terminate(bool)`](crate::operation::terminate_environment::builders::TerminateEnvironmentFluentBuilder::force_terminate) / [`set_force_terminate(Option<bool>)`](crate::operation::terminate_environment::builders::TerminateEnvironmentFluentBuilder::set_force_terminate): <p>Terminates the target environment even if another environment in the same group is dependent on it.</p>
    /// - On success, responds with [`TerminateEnvironmentOutput`](crate::operation::terminate_environment::TerminateEnvironmentOutput) with field(s):
    ///   - [`environment_name(Option<String>)`](crate::operation::terminate_environment::TerminateEnvironmentOutput::environment_name): <p>The name of this environment.</p>
    ///   - [`environment_id(Option<String>)`](crate::operation::terminate_environment::TerminateEnvironmentOutput::environment_id): <p>The ID of this environment.</p>
    ///   - [`application_name(Option<String>)`](crate::operation::terminate_environment::TerminateEnvironmentOutput::application_name): <p>The name of the application associated with this environment.</p>
    ///   - [`version_label(Option<String>)`](crate::operation::terminate_environment::TerminateEnvironmentOutput::version_label): <p>The application version deployed in this environment.</p>
    ///   - [`solution_stack_name(Option<String>)`](crate::operation::terminate_environment::TerminateEnvironmentOutput::solution_stack_name): <p> The name of the <code>SolutionStack</code> deployed with this environment. </p>
    ///   - [`platform_arn(Option<String>)`](crate::operation::terminate_environment::TerminateEnvironmentOutput::platform_arn): <p>The ARN of the platform version.</p>
    ///   - [`template_name(Option<String>)`](crate::operation::terminate_environment::TerminateEnvironmentOutput::template_name): <p>The name of the configuration template used to originally launch this environment.</p>
    ///   - [`description(Option<String>)`](crate::operation::terminate_environment::TerminateEnvironmentOutput::description): <p>Describes this environment.</p>
    ///   - [`endpoint_url(Option<String>)`](crate::operation::terminate_environment::TerminateEnvironmentOutput::endpoint_url): <p>For load-balanced, autoscaling environments, the URL to the LoadBalancer. For single-instance environments, the IP address of the instance.</p>
    ///   - [`cname(Option<String>)`](crate::operation::terminate_environment::TerminateEnvironmentOutput::cname): <p>The URL to the CNAME for this environment.</p>
    ///   - [`date_created(Option<DateTime>)`](crate::operation::terminate_environment::TerminateEnvironmentOutput::date_created): <p>The creation date for this environment.</p>
    ///   - [`date_updated(Option<DateTime>)`](crate::operation::terminate_environment::TerminateEnvironmentOutput::date_updated): <p>The last modified date for this environment.</p>
    ///   - [`status(Option<EnvironmentStatus>)`](crate::operation::terminate_environment::TerminateEnvironmentOutput::status): <p>The current operational status of the environment:</p>  <ul>   <li> <p> <code>Launching</code>: Environment is in the process of initial deployment.</p> </li>   <li> <p> <code>Updating</code>: Environment is in the process of updating its configuration settings or application version.</p> </li>   <li> <p> <code>Ready</code>: Environment is available to have an action performed on it, such as update or terminate.</p> </li>   <li> <p> <code>Terminating</code>: Environment is in the shut-down process.</p> </li>   <li> <p> <code>Terminated</code>: Environment is not running.</p> </li>  </ul>
    ///   - [`abortable_operation_in_progress(Option<bool>)`](crate::operation::terminate_environment::TerminateEnvironmentOutput::abortable_operation_in_progress): <p>Indicates if there is an in-progress environment configuration update or application version deployment that you can cancel.</p>  <p> <code>true:</code> There is an update in progress. </p>  <p> <code>false:</code> There are no updates currently in progress. </p>
    ///   - [`health(Option<EnvironmentHealth>)`](crate::operation::terminate_environment::TerminateEnvironmentOutput::health): <p>Describes the health status of the environment. AWS Elastic Beanstalk indicates the failure levels for a running environment:</p>  <ul>   <li> <p> <code>Red</code>: Indicates the environment is not responsive. Occurs when three or more consecutive failures occur for an environment.</p> </li>   <li> <p> <code>Yellow</code>: Indicates that something is wrong. Occurs when two consecutive failures occur for an environment.</p> </li>   <li> <p> <code>Green</code>: Indicates the environment is healthy and fully functional.</p> </li>   <li> <p> <code>Grey</code>: Default health for a new environment. The environment is not fully launched and health checks have not started or health checks are suspended during an <code>UpdateEnvironment</code> or <code>RestartEnvironment</code> request.</p> </li>  </ul>  <p> Default: <code>Grey</code> </p>
    ///   - [`health_status(Option<EnvironmentHealthStatus>)`](crate::operation::terminate_environment::TerminateEnvironmentOutput::health_status): <p>Returns the health status of the application running in your environment. For more information, see <a href="https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/health-enhanced-status.html">Health Colors and Statuses</a>.</p>
    ///   - [`resources(Option<EnvironmentResourcesDescription>)`](crate::operation::terminate_environment::TerminateEnvironmentOutput::resources): <p>The description of the AWS resources used by this environment.</p>
    ///   - [`tier(Option<EnvironmentTier>)`](crate::operation::terminate_environment::TerminateEnvironmentOutput::tier): <p>Describes the current tier of this environment.</p>
    ///   - [`environment_links(Option<Vec<EnvironmentLink>>)`](crate::operation::terminate_environment::TerminateEnvironmentOutput::environment_links): <p>A list of links to other environments in the same group.</p>
    ///   - [`environment_arn(Option<String>)`](crate::operation::terminate_environment::TerminateEnvironmentOutput::environment_arn): <p>The environment's Amazon Resource Name (ARN), which can be used in other API requests that require an ARN.</p>
    ///   - [`operations_role(Option<String>)`](crate::operation::terminate_environment::TerminateEnvironmentOutput::operations_role): <p>The Amazon Resource Name (ARN) of the environment's operations role. For more information, see <a href="https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/iam-operationsrole.html">Operations roles</a> in the <i>AWS Elastic Beanstalk Developer Guide</i>.</p>
    /// - On failure, responds with [`SdkError<TerminateEnvironmentError>`](crate::operation::terminate_environment::TerminateEnvironmentError)
    pub fn terminate_environment(
        &self,
    ) -> crate::operation::terminate_environment::builders::TerminateEnvironmentFluentBuilder {
        crate::operation::terminate_environment::builders::TerminateEnvironmentFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
