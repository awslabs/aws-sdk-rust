// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreatePlatformVersion`](crate::operation::create_platform_version::builders::CreatePlatformVersionFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`platform_name(impl Into<String>)`](crate::operation::create_platform_version::builders::CreatePlatformVersionFluentBuilder::platform_name) / [`set_platform_name(Option<String>)`](crate::operation::create_platform_version::builders::CreatePlatformVersionFluentBuilder::set_platform_name):<br>required: **true**<br><p>The name of your custom platform.</p><br>
    ///   - [`platform_version(impl Into<String>)`](crate::operation::create_platform_version::builders::CreatePlatformVersionFluentBuilder::platform_version) / [`set_platform_version(Option<String>)`](crate::operation::create_platform_version::builders::CreatePlatformVersionFluentBuilder::set_platform_version):<br>required: **true**<br><p>The number, such as 1.0.2, for the new platform version.</p><br>
    ///   - [`platform_definition_bundle(S3Location)`](crate::operation::create_platform_version::builders::CreatePlatformVersionFluentBuilder::platform_definition_bundle) / [`set_platform_definition_bundle(Option<S3Location>)`](crate::operation::create_platform_version::builders::CreatePlatformVersionFluentBuilder::set_platform_definition_bundle):<br>required: **true**<br><p>The location of the platform definition archive in Amazon S3.</p><br>
    ///   - [`environment_name(impl Into<String>)`](crate::operation::create_platform_version::builders::CreatePlatformVersionFluentBuilder::environment_name) / [`set_environment_name(Option<String>)`](crate::operation::create_platform_version::builders::CreatePlatformVersionFluentBuilder::set_environment_name):<br>required: **false**<br><p>The name of the builder environment.</p><br>
    ///   - [`option_settings(ConfigurationOptionSetting)`](crate::operation::create_platform_version::builders::CreatePlatformVersionFluentBuilder::option_settings) / [`set_option_settings(Option<Vec::<ConfigurationOptionSetting>>)`](crate::operation::create_platform_version::builders::CreatePlatformVersionFluentBuilder::set_option_settings):<br>required: **false**<br><p>The configuration option settings to apply to the builder environment.</p><br>
    ///   - [`tags(Tag)`](crate::operation::create_platform_version::builders::CreatePlatformVersionFluentBuilder::tags) / [`set_tags(Option<Vec::<Tag>>)`](crate::operation::create_platform_version::builders::CreatePlatformVersionFluentBuilder::set_tags):<br>required: **false**<br><p>Specifies the tags applied to the new platform version.</p>  <p>Elastic Beanstalk applies these tags only to the platform version. Environments that you create using the platform version don't inherit the tags.</p><br>
    /// - On success, responds with [`CreatePlatformVersionOutput`](crate::operation::create_platform_version::CreatePlatformVersionOutput) with field(s):
    ///   - [`platform_summary(Option<PlatformSummary>)`](crate::operation::create_platform_version::CreatePlatformVersionOutput::platform_summary): <p>Detailed information about the new version of the custom platform.</p>
    ///   - [`builder_value(Option<Builder>)`](crate::operation::create_platform_version::CreatePlatformVersionOutput::builder_value): <p>The builder used to create the custom platform.</p>
    /// - On failure, responds with [`SdkError<CreatePlatformVersionError>`](crate::operation::create_platform_version::CreatePlatformVersionError)
    pub fn create_platform_version(&self) -> crate::operation::create_platform_version::builders::CreatePlatformVersionFluentBuilder {
        crate::operation::create_platform_version::builders::CreatePlatformVersionFluentBuilder::new(self.handle.clone())
    }
}
