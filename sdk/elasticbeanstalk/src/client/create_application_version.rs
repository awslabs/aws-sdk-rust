// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateApplicationVersion`](crate::operation::create_application_version::builders::CreateApplicationVersionFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_name(impl Into<String>)`](crate::operation::create_application_version::builders::CreateApplicationVersionFluentBuilder::application_name) / [`set_application_name(Option<String>)`](crate::operation::create_application_version::builders::CreateApplicationVersionFluentBuilder::set_application_name): <p> The name of the application. If no application is found with this name, and <code>AutoCreateApplication</code> is <code>false</code>, returns an <code>InvalidParameterValue</code> error. </p>
    ///   - [`version_label(impl Into<String>)`](crate::operation::create_application_version::builders::CreateApplicationVersionFluentBuilder::version_label) / [`set_version_label(Option<String>)`](crate::operation::create_application_version::builders::CreateApplicationVersionFluentBuilder::set_version_label): <p>A label identifying this version.</p>  <p>Constraint: Must be unique per application. If an application version already exists with this label for the specified application, AWS Elastic Beanstalk returns an <code>InvalidParameterValue</code> error. </p>
    ///   - [`description(impl Into<String>)`](crate::operation::create_application_version::builders::CreateApplicationVersionFluentBuilder::description) / [`set_description(Option<String>)`](crate::operation::create_application_version::builders::CreateApplicationVersionFluentBuilder::set_description): <p>A description of this application version.</p>
    ///   - [`source_build_information(SourceBuildInformation)`](crate::operation::create_application_version::builders::CreateApplicationVersionFluentBuilder::source_build_information) / [`set_source_build_information(Option<SourceBuildInformation>)`](crate::operation::create_application_version::builders::CreateApplicationVersionFluentBuilder::set_source_build_information): <p>Specify a commit in an AWS CodeCommit Git repository to use as the source code for the application version.</p>
    ///   - [`source_bundle(S3Location)`](crate::operation::create_application_version::builders::CreateApplicationVersionFluentBuilder::source_bundle) / [`set_source_bundle(Option<S3Location>)`](crate::operation::create_application_version::builders::CreateApplicationVersionFluentBuilder::set_source_bundle): <p>The Amazon S3 bucket and key that identify the location of the source bundle for this version.</p> <note>   <p>The Amazon S3 bucket must be in the same region as the environment.</p>  </note>  <p>Specify a source bundle in S3 or a commit in an AWS CodeCommit repository (with <code>SourceBuildInformation</code>), but not both. If neither <code>SourceBundle</code> nor <code>SourceBuildInformation</code> are provided, Elastic Beanstalk uses a sample application.</p>
    ///   - [`build_configuration(BuildConfiguration)`](crate::operation::create_application_version::builders::CreateApplicationVersionFluentBuilder::build_configuration) / [`set_build_configuration(Option<BuildConfiguration>)`](crate::operation::create_application_version::builders::CreateApplicationVersionFluentBuilder::set_build_configuration): <p>Settings for an AWS CodeBuild build.</p>
    ///   - [`auto_create_application(bool)`](crate::operation::create_application_version::builders::CreateApplicationVersionFluentBuilder::auto_create_application) / [`set_auto_create_application(Option<bool>)`](crate::operation::create_application_version::builders::CreateApplicationVersionFluentBuilder::set_auto_create_application): <p>Set to <code>true</code> to create an application with the specified name if it doesn't already exist.</p>
    ///   - [`process(bool)`](crate::operation::create_application_version::builders::CreateApplicationVersionFluentBuilder::process) / [`set_process(Option<bool>)`](crate::operation::create_application_version::builders::CreateApplicationVersionFluentBuilder::set_process): <p>Pre-processes and validates the environment manifest (<code>env.yaml</code>) and configuration files (<code>*.config</code> files in the <code>.ebextensions</code> folder) in the source bundle. Validating configuration files can identify issues prior to deploying the application version to an environment.</p>  <p>You must turn processing on for application versions that you create using AWS CodeBuild or AWS CodeCommit. For application versions built from a source bundle in Amazon S3, processing is optional.</p> <note>   <p>The <code>Process</code> option validates Elastic Beanstalk configuration files. It doesn't validate your application's configuration files, like proxy server or Docker configuration.</p>  </note>
    ///   - [`tags(Vec<Tag>)`](crate::operation::create_application_version::builders::CreateApplicationVersionFluentBuilder::tags) / [`set_tags(Option<Vec<Tag>>)`](crate::operation::create_application_version::builders::CreateApplicationVersionFluentBuilder::set_tags): <p>Specifies the tags applied to the application version.</p>  <p>Elastic Beanstalk applies these tags only to the application version. Environments that use the application version don't inherit the tags.</p>
    /// - On success, responds with [`CreateApplicationVersionOutput`](crate::operation::create_application_version::CreateApplicationVersionOutput) with field(s):
    ///   - [`application_version(Option<ApplicationVersionDescription>)`](crate::operation::create_application_version::CreateApplicationVersionOutput::application_version): <p> The <code>ApplicationVersionDescription</code> of the application version. </p>
    /// - On failure, responds with [`SdkError<CreateApplicationVersionError>`](crate::operation::create_application_version::CreateApplicationVersionError)
    pub fn create_application_version(
        &self,
    ) -> crate::operation::create_application_version::builders::CreateApplicationVersionFluentBuilder
    {
        crate::operation::create_application_version::builders::CreateApplicationVersionFluentBuilder::new(self.handle.clone())
    }
}
