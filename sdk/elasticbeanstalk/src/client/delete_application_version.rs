// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeleteApplicationVersion`](crate::operation::delete_application_version::builders::DeleteApplicationVersionFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_name(impl Into<String>)`](crate::operation::delete_application_version::builders::DeleteApplicationVersionFluentBuilder::application_name) / [`set_application_name(Option<String>)`](crate::operation::delete_application_version::builders::DeleteApplicationVersionFluentBuilder::set_application_name): <p>The name of the application to which the version belongs.</p>
    ///   - [`version_label(impl Into<String>)`](crate::operation::delete_application_version::builders::DeleteApplicationVersionFluentBuilder::version_label) / [`set_version_label(Option<String>)`](crate::operation::delete_application_version::builders::DeleteApplicationVersionFluentBuilder::set_version_label): <p>The label of the version to delete.</p>
    ///   - [`delete_source_bundle(bool)`](crate::operation::delete_application_version::builders::DeleteApplicationVersionFluentBuilder::delete_source_bundle) / [`set_delete_source_bundle(Option<bool>)`](crate::operation::delete_application_version::builders::DeleteApplicationVersionFluentBuilder::set_delete_source_bundle): <p>Set to <code>true</code> to delete the source bundle from your storage bucket. Otherwise, the application version is deleted only from Elastic Beanstalk and the source bundle remains in Amazon S3.</p>
    /// - On success, responds with [`DeleteApplicationVersionOutput`](crate::operation::delete_application_version::DeleteApplicationVersionOutput)
    /// - On failure, responds with [`SdkError<DeleteApplicationVersionError>`](crate::operation::delete_application_version::DeleteApplicationVersionError)
    pub fn delete_application_version(
        &self,
    ) -> crate::operation::delete_application_version::builders::DeleteApplicationVersionFluentBuilder
    {
        crate::operation::delete_application_version::builders::DeleteApplicationVersionFluentBuilder::new(self.handle.clone())
    }
}
