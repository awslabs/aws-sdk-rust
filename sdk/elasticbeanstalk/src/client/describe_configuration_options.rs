// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeConfigurationOptions`](crate::client::fluent_builders::DescribeConfigurationOptions) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_name(impl Into<String>)`](crate::client::fluent_builders::DescribeConfigurationOptions::application_name) / [`set_application_name(Option<String>)`](crate::client::fluent_builders::DescribeConfigurationOptions::set_application_name): <p>The name of the application associated with the configuration template or environment. Only needed if you want to describe the configuration options associated with either the configuration template or environment.</p>
    ///   - [`template_name(impl Into<String>)`](crate::client::fluent_builders::DescribeConfigurationOptions::template_name) / [`set_template_name(Option<String>)`](crate::client::fluent_builders::DescribeConfigurationOptions::set_template_name): <p>The name of the configuration template whose configuration options you want to describe.</p>
    ///   - [`environment_name(impl Into<String>)`](crate::client::fluent_builders::DescribeConfigurationOptions::environment_name) / [`set_environment_name(Option<String>)`](crate::client::fluent_builders::DescribeConfigurationOptions::set_environment_name): <p>The name of the environment whose configuration options you want to describe.</p>
    ///   - [`solution_stack_name(impl Into<String>)`](crate::client::fluent_builders::DescribeConfigurationOptions::solution_stack_name) / [`set_solution_stack_name(Option<String>)`](crate::client::fluent_builders::DescribeConfigurationOptions::set_solution_stack_name): <p>The name of the solution stack whose configuration options you want to describe.</p>
    ///   - [`platform_arn(impl Into<String>)`](crate::client::fluent_builders::DescribeConfigurationOptions::platform_arn) / [`set_platform_arn(Option<String>)`](crate::client::fluent_builders::DescribeConfigurationOptions::set_platform_arn): <p>The ARN of the custom platform.</p>
    ///   - [`options(Vec<OptionSpecification>)`](crate::client::fluent_builders::DescribeConfigurationOptions::options) / [`set_options(Option<Vec<OptionSpecification>>)`](crate::client::fluent_builders::DescribeConfigurationOptions::set_options): <p>If specified, restricts the descriptions to only the specified options.</p>
    /// - On success, responds with [`DescribeConfigurationOptionsOutput`](crate::output::DescribeConfigurationOptionsOutput) with field(s):
    ///   - [`solution_stack_name(Option<String>)`](crate::output::DescribeConfigurationOptionsOutput::solution_stack_name): <p>The name of the solution stack these configuration options belong to.</p>
    ///   - [`platform_arn(Option<String>)`](crate::output::DescribeConfigurationOptionsOutput::platform_arn): <p>The ARN of the platform version.</p>
    ///   - [`options(Option<Vec<ConfigurationOptionDescription>>)`](crate::output::DescribeConfigurationOptionsOutput::options): <p> A list of <code>ConfigurationOptionDescription</code>. </p>
    /// - On failure, responds with [`SdkError<DescribeConfigurationOptionsError>`](crate::error::DescribeConfigurationOptionsError)
    pub fn describe_configuration_options(
        &self,
    ) -> crate::client::fluent_builders::DescribeConfigurationOptions {
        crate::client::fluent_builders::DescribeConfigurationOptions::new(self.handle.clone())
    }
}
