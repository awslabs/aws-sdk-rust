// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListPlatformBranches`](crate::operation::list_platform_branches::builders::ListPlatformBranchesFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::list_platform_branches::builders::ListPlatformBranchesFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`filters(SearchFilter)`](crate::operation::list_platform_branches::builders::ListPlatformBranchesFluentBuilder::filters) / [`set_filters(Option<Vec::<SearchFilter>>)`](crate::operation::list_platform_branches::builders::ListPlatformBranchesFluentBuilder::set_filters):<br>required: **false**<br><p>Criteria for restricting the resulting list of platform branches. The filter is evaluated as a logical conjunction (AND) of the separate <code>SearchFilter</code> terms.</p>  <p>The following list shows valid attribute values for each of the <code>SearchFilter</code> terms. Most operators take a single value. The <code>in</code> and <code>not_in</code> operators can take multiple values.</p>  <ul>   <li> <p> <code>Attribute = BranchName</code>:</p>    <ul>     <li> <p> <code>Operator</code>: <code>=</code> | <code>!=</code> | <code>begins_with</code> | <code>ends_with</code> | <code>contains</code> | <code>in</code> | <code>not_in</code> </p> </li>    </ul> </li>   <li> <p> <code>Attribute = LifecycleState</code>:</p>    <ul>     <li> <p> <code>Operator</code>: <code>=</code> | <code>!=</code> | <code>in</code> | <code>not_in</code> </p> </li>     <li> <p> <code>Values</code>: <code>beta</code> | <code>supported</code> | <code>deprecated</code> | <code>retired</code> </p> </li>    </ul> </li>   <li> <p> <code>Attribute = PlatformName</code>:</p>    <ul>     <li> <p> <code>Operator</code>: <code>=</code> | <code>!=</code> | <code>begins_with</code> | <code>ends_with</code> | <code>contains</code> | <code>in</code> | <code>not_in</code> </p> </li>    </ul> </li>   <li> <p> <code>Attribute = TierType</code>:</p>    <ul>     <li> <p> <code>Operator</code>: <code>=</code> | <code>!=</code> </p> </li>     <li> <p> <code>Values</code>: <code>WebServer/Standard</code> | <code>Worker/SQS/HTTP</code> </p> </li>    </ul> </li>  </ul>  <p>Array size: limited to 10 <code>SearchFilter</code> objects.</p>  <p>Within each <code>SearchFilter</code> item, the <code>Values</code> array is limited to 10 items.</p><br>
    ///   - [`max_records(i32)`](crate::operation::list_platform_branches::builders::ListPlatformBranchesFluentBuilder::max_records) / [`set_max_records(Option<i32>)`](crate::operation::list_platform_branches::builders::ListPlatformBranchesFluentBuilder::set_max_records):<br>required: **false**<br><p>The maximum number of platform branch values returned in one call.</p><br>
    ///   - [`next_token(impl Into<String>)`](crate::operation::list_platform_branches::builders::ListPlatformBranchesFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::list_platform_branches::builders::ListPlatformBranchesFluentBuilder::set_next_token):<br>required: **false**<br><p>For a paginated request. Specify a token from a previous response page to retrieve the next response page. All other parameter values must be identical to the ones specified in the initial request.</p>  <p>If no <code>NextToken</code> is specified, the first page is retrieved.</p><br>
    /// - On success, responds with [`ListPlatformBranchesOutput`](crate::operation::list_platform_branches::ListPlatformBranchesOutput) with field(s):
    ///   - [`platform_branch_summary_list(Option<Vec::<PlatformBranchSummary>>)`](crate::operation::list_platform_branches::ListPlatformBranchesOutput::platform_branch_summary_list): <p>Summary information about the platform branches.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::list_platform_branches::ListPlatformBranchesOutput::next_token): <p>In a paginated request, if this value isn't <code>null</code>, it's the token that you can pass in a subsequent request to get the next response page.</p>
    /// - On failure, responds with [`SdkError<ListPlatformBranchesError>`](crate::operation::list_platform_branches::ListPlatformBranchesError)
    pub fn list_platform_branches(&self) -> crate::operation::list_platform_branches::builders::ListPlatformBranchesFluentBuilder {
        crate::operation::list_platform_branches::builders::ListPlatformBranchesFluentBuilder::new(self.handle.clone())
    }
}
