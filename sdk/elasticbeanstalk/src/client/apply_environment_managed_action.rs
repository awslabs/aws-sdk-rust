// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ApplyEnvironmentManagedAction`](crate::client::fluent_builders::ApplyEnvironmentManagedAction) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`environment_name(impl Into<String>)`](crate::client::fluent_builders::ApplyEnvironmentManagedAction::environment_name) / [`set_environment_name(Option<String>)`](crate::client::fluent_builders::ApplyEnvironmentManagedAction::set_environment_name): <p>The name of the target environment.</p>
    ///   - [`environment_id(impl Into<String>)`](crate::client::fluent_builders::ApplyEnvironmentManagedAction::environment_id) / [`set_environment_id(Option<String>)`](crate::client::fluent_builders::ApplyEnvironmentManagedAction::set_environment_id): <p>The environment ID of the target environment.</p>
    ///   - [`action_id(impl Into<String>)`](crate::client::fluent_builders::ApplyEnvironmentManagedAction::action_id) / [`set_action_id(Option<String>)`](crate::client::fluent_builders::ApplyEnvironmentManagedAction::set_action_id): <p>The action ID of the scheduled managed action to execute.</p>
    /// - On success, responds with [`ApplyEnvironmentManagedActionOutput`](crate::output::ApplyEnvironmentManagedActionOutput) with field(s):
    ///   - [`action_id(Option<String>)`](crate::output::ApplyEnvironmentManagedActionOutput::action_id): <p>The action ID of the managed action.</p>
    ///   - [`action_description(Option<String>)`](crate::output::ApplyEnvironmentManagedActionOutput::action_description): <p>A description of the managed action.</p>
    ///   - [`action_type(Option<ActionType>)`](crate::output::ApplyEnvironmentManagedActionOutput::action_type): <p>The type of managed action.</p>
    ///   - [`status(Option<String>)`](crate::output::ApplyEnvironmentManagedActionOutput::status): <p>The status of the managed action.</p>
    /// - On failure, responds with [`SdkError<ApplyEnvironmentManagedActionError>`](crate::error::ApplyEnvironmentManagedActionError)
    pub fn apply_environment_managed_action(
        &self,
    ) -> crate::client::fluent_builders::ApplyEnvironmentManagedAction {
        crate::client::fluent_builders::ApplyEnvironmentManagedAction::new(self.handle.clone())
    }
}
