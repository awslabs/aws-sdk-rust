// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateEnvironment`](crate::operation::update_environment::builders::UpdateEnvironmentFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_name(impl Into<String>)`](crate::operation::update_environment::builders::UpdateEnvironmentFluentBuilder::application_name) / [`set_application_name(Option<String>)`](crate::operation::update_environment::builders::UpdateEnvironmentFluentBuilder::set_application_name):<br>required: **false**<br><p>The name of the application with which the environment is associated.</p><br>
    ///   - [`environment_id(impl Into<String>)`](crate::operation::update_environment::builders::UpdateEnvironmentFluentBuilder::environment_id) / [`set_environment_id(Option<String>)`](crate::operation::update_environment::builders::UpdateEnvironmentFluentBuilder::set_environment_id):<br>required: **false**<br><p>The ID of the environment to update.</p>  <p>If no environment with this ID exists, AWS Elastic Beanstalk returns an <code>InvalidParameterValue</code> error.</p>  <p>Condition: You must specify either this or an EnvironmentName, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error. </p><br>
    ///   - [`environment_name(impl Into<String>)`](crate::operation::update_environment::builders::UpdateEnvironmentFluentBuilder::environment_name) / [`set_environment_name(Option<String>)`](crate::operation::update_environment::builders::UpdateEnvironmentFluentBuilder::set_environment_name):<br>required: **false**<br><p>The name of the environment to update. If no environment with this name exists, AWS Elastic Beanstalk returns an <code>InvalidParameterValue</code> error. </p>  <p>Condition: You must specify either this or an EnvironmentId, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error. </p><br>
    ///   - [`group_name(impl Into<String>)`](crate::operation::update_environment::builders::UpdateEnvironmentFluentBuilder::group_name) / [`set_group_name(Option<String>)`](crate::operation::update_environment::builders::UpdateEnvironmentFluentBuilder::set_group_name):<br>required: **false**<br><p>The name of the group to which the target environment belongs. Specify a group name only if the environment's name is specified in an environment manifest and not with the environment name or environment ID parameters. See <a href="https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/environment-cfg-manifest.html">Environment Manifest (env.yaml)</a> for details.</p><br>
    ///   - [`description(impl Into<String>)`](crate::operation::update_environment::builders::UpdateEnvironmentFluentBuilder::description) / [`set_description(Option<String>)`](crate::operation::update_environment::builders::UpdateEnvironmentFluentBuilder::set_description):<br>required: **false**<br><p>If this parameter is specified, AWS Elastic Beanstalk updates the description of this environment.</p><br>
    ///   - [`tier(EnvironmentTier)`](crate::operation::update_environment::builders::UpdateEnvironmentFluentBuilder::tier) / [`set_tier(Option<EnvironmentTier>)`](crate::operation::update_environment::builders::UpdateEnvironmentFluentBuilder::set_tier):<br>required: **false**<br><p>This specifies the tier to use to update the environment.</p>  <p>Condition: At this time, if you change the tier version, name, or type, AWS Elastic Beanstalk returns <code>InvalidParameterValue</code> error. </p><br>
    ///   - [`version_label(impl Into<String>)`](crate::operation::update_environment::builders::UpdateEnvironmentFluentBuilder::version_label) / [`set_version_label(Option<String>)`](crate::operation::update_environment::builders::UpdateEnvironmentFluentBuilder::set_version_label):<br>required: **false**<br><p>If this parameter is specified, AWS Elastic Beanstalk deploys the named application version to the environment. If no such application version is found, returns an <code>InvalidParameterValue</code> error. </p><br>
    ///   - [`template_name(impl Into<String>)`](crate::operation::update_environment::builders::UpdateEnvironmentFluentBuilder::template_name) / [`set_template_name(Option<String>)`](crate::operation::update_environment::builders::UpdateEnvironmentFluentBuilder::set_template_name):<br>required: **false**<br><p>If this parameter is specified, AWS Elastic Beanstalk deploys this configuration template to the environment. If no such configuration template is found, AWS Elastic Beanstalk returns an <code>InvalidParameterValue</code> error. </p><br>
    ///   - [`solution_stack_name(impl Into<String>)`](crate::operation::update_environment::builders::UpdateEnvironmentFluentBuilder::solution_stack_name) / [`set_solution_stack_name(Option<String>)`](crate::operation::update_environment::builders::UpdateEnvironmentFluentBuilder::set_solution_stack_name):<br>required: **false**<br><p>This specifies the platform version that the environment will run after the environment is updated.</p><br>
    ///   - [`platform_arn(impl Into<String>)`](crate::operation::update_environment::builders::UpdateEnvironmentFluentBuilder::platform_arn) / [`set_platform_arn(Option<String>)`](crate::operation::update_environment::builders::UpdateEnvironmentFluentBuilder::set_platform_arn):<br>required: **false**<br><p>The ARN of the platform, if used.</p><br>
    ///   - [`option_settings(ConfigurationOptionSetting)`](crate::operation::update_environment::builders::UpdateEnvironmentFluentBuilder::option_settings) / [`set_option_settings(Option<Vec::<ConfigurationOptionSetting>>)`](crate::operation::update_environment::builders::UpdateEnvironmentFluentBuilder::set_option_settings):<br>required: **false**<br><p>If specified, AWS Elastic Beanstalk updates the configuration set associated with the running environment and sets the specified configuration options to the requested value.</p><br>
    ///   - [`options_to_remove(OptionSpecification)`](crate::operation::update_environment::builders::UpdateEnvironmentFluentBuilder::options_to_remove) / [`set_options_to_remove(Option<Vec::<OptionSpecification>>)`](crate::operation::update_environment::builders::UpdateEnvironmentFluentBuilder::set_options_to_remove):<br>required: **false**<br><p>A list of custom user-defined configuration options to remove from the configuration set for this environment.</p><br>
    /// - On success, responds with [`UpdateEnvironmentOutput`](crate::operation::update_environment::UpdateEnvironmentOutput) with field(s):
    ///   - [`environment_name(Option<String>)`](crate::operation::update_environment::UpdateEnvironmentOutput::environment_name): <p>The name of this environment.</p>
    ///   - [`environment_id(Option<String>)`](crate::operation::update_environment::UpdateEnvironmentOutput::environment_id): <p>The ID of this environment.</p>
    ///   - [`application_name(Option<String>)`](crate::operation::update_environment::UpdateEnvironmentOutput::application_name): <p>The name of the application associated with this environment.</p>
    ///   - [`version_label(Option<String>)`](crate::operation::update_environment::UpdateEnvironmentOutput::version_label): <p>The application version deployed in this environment.</p>
    ///   - [`solution_stack_name(Option<String>)`](crate::operation::update_environment::UpdateEnvironmentOutput::solution_stack_name): <p> The name of the <code>SolutionStack</code> deployed with this environment. </p>
    ///   - [`platform_arn(Option<String>)`](crate::operation::update_environment::UpdateEnvironmentOutput::platform_arn): <p>The ARN of the platform version.</p>
    ///   - [`template_name(Option<String>)`](crate::operation::update_environment::UpdateEnvironmentOutput::template_name): <p>The name of the configuration template used to originally launch this environment.</p>
    ///   - [`description(Option<String>)`](crate::operation::update_environment::UpdateEnvironmentOutput::description): <p>Describes this environment.</p>
    ///   - [`endpoint_url(Option<String>)`](crate::operation::update_environment::UpdateEnvironmentOutput::endpoint_url): <p>For load-balanced, autoscaling environments, the URL to the LoadBalancer. For single-instance environments, the IP address of the instance.</p>
    ///   - [`cname(Option<String>)`](crate::operation::update_environment::UpdateEnvironmentOutput::cname): <p>The URL to the CNAME for this environment.</p>
    ///   - [`date_created(Option<DateTime>)`](crate::operation::update_environment::UpdateEnvironmentOutput::date_created): <p>The creation date for this environment.</p>
    ///   - [`date_updated(Option<DateTime>)`](crate::operation::update_environment::UpdateEnvironmentOutput::date_updated): <p>The last modified date for this environment.</p>
    ///   - [`status(Option<EnvironmentStatus>)`](crate::operation::update_environment::UpdateEnvironmentOutput::status): <p>The current operational status of the environment:</p>  <ul>   <li> <p> <code>Launching</code>: Environment is in the process of initial deployment.</p> </li>   <li> <p> <code>Updating</code>: Environment is in the process of updating its configuration settings or application version.</p> </li>   <li> <p> <code>Ready</code>: Environment is available to have an action performed on it, such as update or terminate.</p> </li>   <li> <p> <code>Terminating</code>: Environment is in the shut-down process.</p> </li>   <li> <p> <code>Terminated</code>: Environment is not running.</p> </li>  </ul>
    ///   - [`abortable_operation_in_progress(Option<bool>)`](crate::operation::update_environment::UpdateEnvironmentOutput::abortable_operation_in_progress): <p>Indicates if there is an in-progress environment configuration update or application version deployment that you can cancel.</p>  <p> <code>true:</code> There is an update in progress. </p>  <p> <code>false:</code> There are no updates currently in progress. </p>
    ///   - [`health(Option<EnvironmentHealth>)`](crate::operation::update_environment::UpdateEnvironmentOutput::health): <p>Describes the health status of the environment. AWS Elastic Beanstalk indicates the failure levels for a running environment:</p>  <ul>   <li> <p> <code>Red</code>: Indicates the environment is not responsive. Occurs when three or more consecutive failures occur for an environment.</p> </li>   <li> <p> <code>Yellow</code>: Indicates that something is wrong. Occurs when two consecutive failures occur for an environment.</p> </li>   <li> <p> <code>Green</code>: Indicates the environment is healthy and fully functional.</p> </li>   <li> <p> <code>Grey</code>: Default health for a new environment. The environment is not fully launched and health checks have not started or health checks are suspended during an <code>UpdateEnvironment</code> or <code>RestartEnvironment</code> request.</p> </li>  </ul>  <p> Default: <code>Grey</code> </p>
    ///   - [`health_status(Option<EnvironmentHealthStatus>)`](crate::operation::update_environment::UpdateEnvironmentOutput::health_status): <p>Returns the health status of the application running in your environment. For more information, see <a href="https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/health-enhanced-status.html">Health Colors and Statuses</a>.</p>
    ///   - [`resources(Option<EnvironmentResourcesDescription>)`](crate::operation::update_environment::UpdateEnvironmentOutput::resources): <p>The description of the AWS resources used by this environment.</p>
    ///   - [`tier(Option<EnvironmentTier>)`](crate::operation::update_environment::UpdateEnvironmentOutput::tier): <p>Describes the current tier of this environment.</p>
    ///   - [`environment_links(Option<Vec::<EnvironmentLink>>)`](crate::operation::update_environment::UpdateEnvironmentOutput::environment_links): <p>A list of links to other environments in the same group.</p>
    ///   - [`environment_arn(Option<String>)`](crate::operation::update_environment::UpdateEnvironmentOutput::environment_arn): <p>The environment's Amazon Resource Name (ARN), which can be used in other API requests that require an ARN.</p>
    ///   - [`operations_role(Option<String>)`](crate::operation::update_environment::UpdateEnvironmentOutput::operations_role): <p>The Amazon Resource Name (ARN) of the environment's operations role. For more information, see <a href="https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/iam-operationsrole.html">Operations roles</a> in the <i>AWS Elastic Beanstalk Developer Guide</i>.</p>
    /// - On failure, responds with [`SdkError<UpdateEnvironmentError>`](crate::operation::update_environment::UpdateEnvironmentError)
    pub fn update_environment(&self) -> crate::operation::update_environment::builders::UpdateEnvironmentFluentBuilder {
        crate::operation::update_environment::builders::UpdateEnvironmentFluentBuilder::new(self.handle.clone())
    }
}
