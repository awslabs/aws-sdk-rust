// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateServiceSettings`](crate::operation::update_service_settings::builders::UpdateServiceSettingsFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`linux_subscriptions_discovery(LinuxSubscriptionsDiscovery)`](crate::operation::update_service_settings::builders::UpdateServiceSettingsFluentBuilder::linux_subscriptions_discovery) / [`set_linux_subscriptions_discovery(Option<LinuxSubscriptionsDiscovery>)`](crate::operation::update_service_settings::builders::UpdateServiceSettingsFluentBuilder::set_linux_subscriptions_discovery): <p>Describes if the discovery of Linux subscriptions is enabled.</p>
    ///   - [`linux_subscriptions_discovery_settings(LinuxSubscriptionsDiscoverySettings)`](crate::operation::update_service_settings::builders::UpdateServiceSettingsFluentBuilder::linux_subscriptions_discovery_settings) / [`set_linux_subscriptions_discovery_settings(Option<LinuxSubscriptionsDiscoverySettings>)`](crate::operation::update_service_settings::builders::UpdateServiceSettingsFluentBuilder::set_linux_subscriptions_discovery_settings): <p>The settings defined for Linux subscriptions discovery. The settings include if Organizations integration has been enabled, and which Regions data will be aggregated from.</p>
    ///   - [`allow_update(bool)`](crate::operation::update_service_settings::builders::UpdateServiceSettingsFluentBuilder::allow_update) / [`set_allow_update(Option<bool>)`](crate::operation::update_service_settings::builders::UpdateServiceSettingsFluentBuilder::set_allow_update): <p>Describes if updates are allowed to the service settings for Linux subscriptions. If you allow updates, you can aggregate Linux subscription data in more than one home Region.</p>
    /// - On success, responds with [`UpdateServiceSettingsOutput`](crate::operation::update_service_settings::UpdateServiceSettingsOutput) with field(s):
    ///   - [`linux_subscriptions_discovery(Option<LinuxSubscriptionsDiscovery>)`](crate::operation::update_service_settings::UpdateServiceSettingsOutput::linux_subscriptions_discovery): <p>Lists if discovery has been enabled for Linux subscriptions.</p>
    ///   - [`linux_subscriptions_discovery_settings(Option<LinuxSubscriptionsDiscoverySettings>)`](crate::operation::update_service_settings::UpdateServiceSettingsOutput::linux_subscriptions_discovery_settings): <p>The settings defined for Linux subscriptions discovery. The settings include if Organizations integration has been enabled, and which Regions data will be aggregated from.</p>
    ///   - [`status(Option<Status>)`](crate::operation::update_service_settings::UpdateServiceSettingsOutput::status): <p>Indicates the status of Linux subscriptions settings being applied.</p>
    ///   - [`status_message(Option<HashMap<String, String>>)`](crate::operation::update_service_settings::UpdateServiceSettingsOutput::status_message): <p>A message which details the Linux subscriptions service settings current status.</p>
    ///   - [`home_regions(Option<Vec<String>>)`](crate::operation::update_service_settings::UpdateServiceSettingsOutput::home_regions): <p>The Region in which License Manager displays the aggregated data for Linux subscriptions.</p>
    /// - On failure, responds with [`SdkError<UpdateServiceSettingsError>`](crate::operation::update_service_settings::UpdateServiceSettingsError)
    pub fn update_service_settings(
        &self,
    ) -> crate::operation::update_service_settings::builders::UpdateServiceSettingsFluentBuilder
    {
        crate::operation::update_service_settings::builders::UpdateServiceSettingsFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
