// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateTargetGroup`](crate::operation::create_target_group::builders::CreateTargetGroupFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(impl Into<String>)`](crate::operation::create_target_group::builders::CreateTargetGroupFluentBuilder::name) / [`set_name(Option<String>)`](crate::operation::create_target_group::builders::CreateTargetGroupFluentBuilder::set_name):<br>required: **true**<br><p>The name of the target group. The name must be unique within the account. The valid characters are a-z, 0-9, and hyphens (-). You can't use a hyphen as the first or last character, or immediately after another hyphen.</p><br>
    ///   - [`r#type(TargetGroupType)`](crate::operation::create_target_group::builders::CreateTargetGroupFluentBuilder::type) / [`set_type(Option<TargetGroupType>)`](crate::operation::create_target_group::builders::CreateTargetGroupFluentBuilder::set_type):<br>required: **true**<br><p>The type of target group.</p><br>
    ///   - [`config(TargetGroupConfig)`](crate::operation::create_target_group::builders::CreateTargetGroupFluentBuilder::config) / [`set_config(Option<TargetGroupConfig>)`](crate::operation::create_target_group::builders::CreateTargetGroupFluentBuilder::set_config):<br>required: **false**<br><p>The target group configuration. If <code>type</code> is set to <code>LAMBDA</code>, this parameter doesn't apply.</p><br>
    ///   - [`client_token(impl Into<String>)`](crate::operation::create_target_group::builders::CreateTargetGroupFluentBuilder::client_token) / [`set_client_token(Option<String>)`](crate::operation::create_target_group::builders::CreateTargetGroupFluentBuilder::set_client_token):<br>required: **false**<br><p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If you retry a request that completed successfully using the same client token and parameters, the retry succeeds without performing any actions. If the parameters aren't identical, the retry fails.</p><br>
    ///   - [`tags(impl Into<String>, impl Into<String>)`](crate::operation::create_target_group::builders::CreateTargetGroupFluentBuilder::tags) / [`set_tags(Option<HashMap::<String, String>>)`](crate::operation::create_target_group::builders::CreateTargetGroupFluentBuilder::set_tags):<br>required: **false**<br><p>The tags for the target group.</p><br>
    /// - On success, responds with [`CreateTargetGroupOutput`](crate::operation::create_target_group::CreateTargetGroupOutput) with field(s):
    ///   - [`id(Option<String>)`](crate::operation::create_target_group::CreateTargetGroupOutput::id): <p>The ID of the target group.</p>
    ///   - [`arn(Option<String>)`](crate::operation::create_target_group::CreateTargetGroupOutput::arn): <p>The Amazon Resource Name (ARN) of the target group.</p>
    ///   - [`name(Option<String>)`](crate::operation::create_target_group::CreateTargetGroupOutput::name): <p>The name of the target group.</p>
    ///   - [`r#type(Option<TargetGroupType>)`](crate::operation::create_target_group::CreateTargetGroupOutput::type): <p>The type of target group.</p>
    ///   - [`config(Option<TargetGroupConfig>)`](crate::operation::create_target_group::CreateTargetGroupOutput::config): <p>The target group configuration. If <code>type</code> is set to <code>LAMBDA</code>, this parameter doesn't apply.</p>
    ///   - [`status(Option<TargetGroupStatus>)`](crate::operation::create_target_group::CreateTargetGroupOutput::status): <p>The operation's status. You can retry the operation if the status is <code>CREATE_FAILED</code>. However, if you retry it while the status is <code>CREATE_IN_PROGRESS</code>, there is no change in the status. </p>
    /// - On failure, responds with [`SdkError<CreateTargetGroupError>`](crate::operation::create_target_group::CreateTargetGroupError)
    pub fn create_target_group(&self) -> crate::operation::create_target_group::builders::CreateTargetGroupFluentBuilder {
        crate::operation::create_target_group::builders::CreateTargetGroupFluentBuilder::new(self.handle.clone())
    }
}
