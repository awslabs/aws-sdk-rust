// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateRule`](crate::operation::create_rule::builders::CreateRuleFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`service_identifier(impl Into<String>)`](crate::operation::create_rule::builders::CreateRuleFluentBuilder::service_identifier) / [`set_service_identifier(Option<String>)`](crate::operation::create_rule::builders::CreateRuleFluentBuilder::set_service_identifier):<br>required: **true**<br><p>The ID or Amazon Resource Name (ARN) of the service.</p><br>
    ///   - [`listener_identifier(impl Into<String>)`](crate::operation::create_rule::builders::CreateRuleFluentBuilder::listener_identifier) / [`set_listener_identifier(Option<String>)`](crate::operation::create_rule::builders::CreateRuleFluentBuilder::set_listener_identifier):<br>required: **true**<br><p>The ID or Amazon Resource Name (ARN) of the listener.</p><br>
    ///   - [`name(impl Into<String>)`](crate::operation::create_rule::builders::CreateRuleFluentBuilder::name) / [`set_name(Option<String>)`](crate::operation::create_rule::builders::CreateRuleFluentBuilder::set_name):<br>required: **true**<br><p>The name of the rule. The name must be unique within the listener. The valid characters are a-z, 0-9, and hyphens (-). You can't use a hyphen as the first or last character, or immediately after another hyphen.</p><br>
    ///   - [`r#match(RuleMatch)`](crate::operation::create_rule::builders::CreateRuleFluentBuilder::match) / [`set_match(Option<RuleMatch>)`](crate::operation::create_rule::builders::CreateRuleFluentBuilder::set_match):<br>required: **true**<br><p>The rule match.</p><br>
    ///   - [`priority(i32)`](crate::operation::create_rule::builders::CreateRuleFluentBuilder::priority) / [`set_priority(Option<i32>)`](crate::operation::create_rule::builders::CreateRuleFluentBuilder::set_priority):<br>required: **true**<br><p>The priority assigned to the rule. Each rule for a specific listener must have a unique priority. The lower the priority number the higher the priority.</p><br>
    ///   - [`action(RuleAction)`](crate::operation::create_rule::builders::CreateRuleFluentBuilder::action) / [`set_action(Option<RuleAction>)`](crate::operation::create_rule::builders::CreateRuleFluentBuilder::set_action):<br>required: **true**<br><p>The action for the default rule.</p><br>
    ///   - [`client_token(impl Into<String>)`](crate::operation::create_rule::builders::CreateRuleFluentBuilder::client_token) / [`set_client_token(Option<String>)`](crate::operation::create_rule::builders::CreateRuleFluentBuilder::set_client_token):<br>required: **false**<br><p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If you retry a request that completed successfully using the same client token and parameters, the retry succeeds without performing any actions. If the parameters aren't identical, the retry fails.</p><br>
    ///   - [`tags(impl Into<String>, impl Into<String>)`](crate::operation::create_rule::builders::CreateRuleFluentBuilder::tags) / [`set_tags(Option<HashMap::<String, String>>)`](crate::operation::create_rule::builders::CreateRuleFluentBuilder::set_tags):<br>required: **false**<br><p>The tags for the rule.</p><br>
    /// - On success, responds with [`CreateRuleOutput`](crate::operation::create_rule::CreateRuleOutput) with field(s):
    ///   - [`arn(Option<String>)`](crate::operation::create_rule::CreateRuleOutput::arn): <p>The Amazon Resource Name (ARN) of the rule.</p>
    ///   - [`id(Option<String>)`](crate::operation::create_rule::CreateRuleOutput::id): <p>The ID of the rule.</p>
    ///   - [`name(Option<String>)`](crate::operation::create_rule::CreateRuleOutput::name): <p>The name of the rule.</p>
    ///   - [`r#match(Option<RuleMatch>)`](crate::operation::create_rule::CreateRuleOutput::match): <p>The rule match. The <code>RuleMatch</code> must be an <code>HttpMatch</code>. This means that the rule should be an exact match on HTTP constraints which are made up of the HTTP method, path, and header.</p>
    ///   - [`priority(Option<i32>)`](crate::operation::create_rule::CreateRuleOutput::priority): <p>The priority assigned to the rule. The lower the priority number the higher the priority.</p>
    ///   - [`action(Option<RuleAction>)`](crate::operation::create_rule::CreateRuleOutput::action): <p>The rule action. Each rule must include exactly one of the following types of actions: <code>forward </code>or <code>fixed-response</code>, and it must be the last action to be performed.</p>
    /// - On failure, responds with [`SdkError<CreateRuleError>`](crate::operation::create_rule::CreateRuleError)
    pub fn create_rule(&self) -> crate::operation::create_rule::builders::CreateRuleFluentBuilder {
        crate::operation::create_rule::builders::CreateRuleFluentBuilder::new(self.handle.clone())
    }
}
