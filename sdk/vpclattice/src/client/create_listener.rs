// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateListener`](crate::operation::create_listener::builders::CreateListenerFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`service_identifier(impl Into<String>)`](crate::operation::create_listener::builders::CreateListenerFluentBuilder::service_identifier) / [`set_service_identifier(Option<String>)`](crate::operation::create_listener::builders::CreateListenerFluentBuilder::set_service_identifier):<br>required: **true**<br><p>The ID or Amazon Resource Name (ARN) of the service.</p><br>
    ///   - [`name(impl Into<String>)`](crate::operation::create_listener::builders::CreateListenerFluentBuilder::name) / [`set_name(Option<String>)`](crate::operation::create_listener::builders::CreateListenerFluentBuilder::set_name):<br>required: **true**<br><p>The name of the listener. A listener name must be unique within a service. The valid characters are a-z, 0-9, and hyphens (-). You can't use a hyphen as the first or last character, or immediately after another hyphen.</p><br>
    ///   - [`protocol(ListenerProtocol)`](crate::operation::create_listener::builders::CreateListenerFluentBuilder::protocol) / [`set_protocol(Option<ListenerProtocol>)`](crate::operation::create_listener::builders::CreateListenerFluentBuilder::set_protocol):<br>required: **true**<br><p>The listener protocol HTTP or HTTPS.</p><br>
    ///   - [`port(i32)`](crate::operation::create_listener::builders::CreateListenerFluentBuilder::port) / [`set_port(Option<i32>)`](crate::operation::create_listener::builders::CreateListenerFluentBuilder::set_port):<br>required: **false**<br><p>The listener port. You can specify a value from <code>1</code> to <code>65535</code>. For HTTP, the default is <code>80</code>. For HTTPS, the default is <code>443</code>.</p><br>
    ///   - [`default_action(RuleAction)`](crate::operation::create_listener::builders::CreateListenerFluentBuilder::default_action) / [`set_default_action(Option<RuleAction>)`](crate::operation::create_listener::builders::CreateListenerFluentBuilder::set_default_action):<br>required: **true**<br><p>The action for the default rule. Each listener has a default rule. Each rule consists of a priority, one or more actions, and one or more conditions. The default rule is the rule that's used if no other rules match. Each rule must include exactly one of the following types of actions: <code>forward </code>or <code>fixed-response</code>, and it must be the last action to be performed. </p><br>
    ///   - [`client_token(impl Into<String>)`](crate::operation::create_listener::builders::CreateListenerFluentBuilder::client_token) / [`set_client_token(Option<String>)`](crate::operation::create_listener::builders::CreateListenerFluentBuilder::set_client_token):<br>required: **false**<br><p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If you retry a request that completed successfully using the same client token and parameters, the retry succeeds without performing any actions. If the parameters aren't identical, the retry fails.</p><br>
    ///   - [`tags(impl Into<String>, impl Into<String>)`](crate::operation::create_listener::builders::CreateListenerFluentBuilder::tags) / [`set_tags(Option<HashMap::<String, String>>)`](crate::operation::create_listener::builders::CreateListenerFluentBuilder::set_tags):<br>required: **false**<br><p>The tags for the listener.</p><br>
    /// - On success, responds with [`CreateListenerOutput`](crate::operation::create_listener::CreateListenerOutput) with field(s):
    ///   - [`arn(Option<String>)`](crate::operation::create_listener::CreateListenerOutput::arn): <p>The Amazon Resource Name (ARN) of the listener.</p>
    ///   - [`id(Option<String>)`](crate::operation::create_listener::CreateListenerOutput::id): <p>The ID of the listener.</p>
    ///   - [`name(Option<String>)`](crate::operation::create_listener::CreateListenerOutput::name): <p>The name of the listener.</p>
    ///   - [`protocol(Option<ListenerProtocol>)`](crate::operation::create_listener::CreateListenerOutput::protocol): <p>The protocol of the listener.</p>
    ///   - [`port(Option<i32>)`](crate::operation::create_listener::CreateListenerOutput::port): <p>The port number of the listener.</p>
    ///   - [`service_arn(Option<String>)`](crate::operation::create_listener::CreateListenerOutput::service_arn): <p>The Amazon Resource Name (ARN) of the service.</p>
    ///   - [`service_id(Option<String>)`](crate::operation::create_listener::CreateListenerOutput::service_id): <p>The ID of the service.</p>
    ///   - [`default_action(Option<RuleAction>)`](crate::operation::create_listener::CreateListenerOutput::default_action): <p>The action for the default rule.</p>
    /// - On failure, responds with [`SdkError<CreateListenerError>`](crate::operation::create_listener::CreateListenerError)
    pub fn create_listener(&self) -> crate::operation::create_listener::builders::CreateListenerFluentBuilder {
        crate::operation::create_listener::builders::CreateListenerFluentBuilder::new(self.handle.clone())
    }
}
