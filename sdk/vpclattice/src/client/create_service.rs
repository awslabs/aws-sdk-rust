// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateService`](crate::operation::create_service::builders::CreateServiceFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`client_token(impl Into<String>)`](crate::operation::create_service::builders::CreateServiceFluentBuilder::client_token) / [`set_client_token(Option<String>)`](crate::operation::create_service::builders::CreateServiceFluentBuilder::set_client_token):<br>required: **false**<br><p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If you retry a request that completed successfully using the same client token and parameters, the retry succeeds without performing any actions. If the parameters aren't identical, the retry fails.</p><br>
    ///   - [`name(impl Into<String>)`](crate::operation::create_service::builders::CreateServiceFluentBuilder::name) / [`set_name(Option<String>)`](crate::operation::create_service::builders::CreateServiceFluentBuilder::set_name):<br>required: **true**<br><p>The name of the service. The name must be unique within the account. The valid characters are a-z, 0-9, and hyphens (-). You can't use a hyphen as the first or last character, or immediately after another hyphen.</p><br>
    ///   - [`tags(impl Into<String>, impl Into<String>)`](crate::operation::create_service::builders::CreateServiceFluentBuilder::tags) / [`set_tags(Option<HashMap::<String, String>>)`](crate::operation::create_service::builders::CreateServiceFluentBuilder::set_tags):<br>required: **false**<br><p>The tags for the service.</p><br>
    ///   - [`custom_domain_name(impl Into<String>)`](crate::operation::create_service::builders::CreateServiceFluentBuilder::custom_domain_name) / [`set_custom_domain_name(Option<String>)`](crate::operation::create_service::builders::CreateServiceFluentBuilder::set_custom_domain_name):<br>required: **false**<br><p>The custom domain name of the service.</p><br>
    ///   - [`certificate_arn(impl Into<String>)`](crate::operation::create_service::builders::CreateServiceFluentBuilder::certificate_arn) / [`set_certificate_arn(Option<String>)`](crate::operation::create_service::builders::CreateServiceFluentBuilder::set_certificate_arn):<br>required: **false**<br><p>The Amazon Resource Name (ARN) of the certificate.</p><br>
    ///   - [`auth_type(AuthType)`](crate::operation::create_service::builders::CreateServiceFluentBuilder::auth_type) / [`set_auth_type(Option<AuthType>)`](crate::operation::create_service::builders::CreateServiceFluentBuilder::set_auth_type):<br>required: **false**<br><p>The type of IAM policy.</p>  <ul>   <li> <p> <code>NONE</code>: The resource does not use an IAM policy. This is the default.</p> </li>   <li> <p> <code>AWS_IAM</code>: The resource uses an IAM policy. When this type is used, auth is enabled and an auth policy is required.</p> </li>  </ul><br>
    /// - On success, responds with [`CreateServiceOutput`](crate::operation::create_service::CreateServiceOutput) with field(s):
    ///   - [`id(Option<String>)`](crate::operation::create_service::CreateServiceOutput::id): <p>The ID of the service.</p>
    ///   - [`arn(Option<String>)`](crate::operation::create_service::CreateServiceOutput::arn): <p>The Amazon Resource Name (ARN) of the service.</p>
    ///   - [`name(Option<String>)`](crate::operation::create_service::CreateServiceOutput::name): <p>The name of the service.</p>
    ///   - [`custom_domain_name(Option<String>)`](crate::operation::create_service::CreateServiceOutput::custom_domain_name): <p>The custom domain name of the service.</p>
    ///   - [`certificate_arn(Option<String>)`](crate::operation::create_service::CreateServiceOutput::certificate_arn): <p>The Amazon Resource Name (ARN) of the certificate.</p>
    ///   - [`status(Option<ServiceStatus>)`](crate::operation::create_service::CreateServiceOutput::status): <p>The status. If the status is <code>CREATE_FAILED</code>, you will have to delete and recreate the service.</p>
    ///   - [`auth_type(Option<AuthType>)`](crate::operation::create_service::CreateServiceOutput::auth_type): <p>The type of IAM policy.</p>
    ///   - [`dns_entry(Option<DnsEntry>)`](crate::operation::create_service::CreateServiceOutput::dns_entry): <p>The public DNS name of the service.</p>
    /// - On failure, responds with [`SdkError<CreateServiceError>`](crate::operation::create_service::CreateServiceError)
    pub fn create_service(&self) -> crate::operation::create_service::builders::CreateServiceFluentBuilder {
        crate::operation::create_service::builders::CreateServiceFluentBuilder::new(self.handle.clone())
    }
}
