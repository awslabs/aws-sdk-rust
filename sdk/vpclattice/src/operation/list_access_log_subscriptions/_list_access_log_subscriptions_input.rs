// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ListAccessLogSubscriptionsInput {
    /// <p>The ID or Amazon Resource Name (ARN) of the service network or service.</p>
    pub resource_identifier: ::std::option::Option<::std::string::String>,
    /// <p>The maximum number of results to return.</p>
    pub max_results: ::std::option::Option<i32>,
    /// <p>A pagination token for the next page of results.</p>
    pub next_token: ::std::option::Option<::std::string::String>,
}
impl ListAccessLogSubscriptionsInput {
    /// <p>The ID or Amazon Resource Name (ARN) of the service network or service.</p>
    pub fn resource_identifier(&self) -> ::std::option::Option<&str> {
        self.resource_identifier.as_deref()
    }
    /// <p>The maximum number of results to return.</p>
    pub fn max_results(&self) -> ::std::option::Option<i32> {
        self.max_results
    }
    /// <p>A pagination token for the next page of results.</p>
    pub fn next_token(&self) -> ::std::option::Option<&str> {
        self.next_token.as_deref()
    }
}
impl ListAccessLogSubscriptionsInput {
    /// Creates a new builder-style object to manufacture [`ListAccessLogSubscriptionsInput`](crate::operation::list_access_log_subscriptions::ListAccessLogSubscriptionsInput).
    pub fn builder() -> crate::operation::list_access_log_subscriptions::builders::ListAccessLogSubscriptionsInputBuilder {
        crate::operation::list_access_log_subscriptions::builders::ListAccessLogSubscriptionsInputBuilder::default()
    }
}

/// A builder for [`ListAccessLogSubscriptionsInput`](crate::operation::list_access_log_subscriptions::ListAccessLogSubscriptionsInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ListAccessLogSubscriptionsInputBuilder {
    pub(crate) resource_identifier: ::std::option::Option<::std::string::String>,
    pub(crate) max_results: ::std::option::Option<i32>,
    pub(crate) next_token: ::std::option::Option<::std::string::String>,
}
impl ListAccessLogSubscriptionsInputBuilder {
    /// <p>The ID or Amazon Resource Name (ARN) of the service network or service.</p>
    /// This field is required.
    pub fn resource_identifier(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.resource_identifier = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID or Amazon Resource Name (ARN) of the service network or service.</p>
    pub fn set_resource_identifier(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.resource_identifier = input;
        self
    }
    /// <p>The ID or Amazon Resource Name (ARN) of the service network or service.</p>
    pub fn get_resource_identifier(&self) -> &::std::option::Option<::std::string::String> {
        &self.resource_identifier
    }
    /// <p>The maximum number of results to return.</p>
    pub fn max_results(mut self, input: i32) -> Self {
        self.max_results = ::std::option::Option::Some(input);
        self
    }
    /// <p>The maximum number of results to return.</p>
    pub fn set_max_results(mut self, input: ::std::option::Option<i32>) -> Self {
        self.max_results = input;
        self
    }
    /// <p>The maximum number of results to return.</p>
    pub fn get_max_results(&self) -> &::std::option::Option<i32> {
        &self.max_results
    }
    /// <p>A pagination token for the next page of results.</p>
    pub fn next_token(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.next_token = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>A pagination token for the next page of results.</p>
    pub fn set_next_token(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// <p>A pagination token for the next page of results.</p>
    pub fn get_next_token(&self) -> &::std::option::Option<::std::string::String> {
        &self.next_token
    }
    /// Consumes the builder and constructs a [`ListAccessLogSubscriptionsInput`](crate::operation::list_access_log_subscriptions::ListAccessLogSubscriptionsInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::list_access_log_subscriptions::ListAccessLogSubscriptionsInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::list_access_log_subscriptions::ListAccessLogSubscriptionsInput {
            resource_identifier: self.resource_identifier,
            max_results: self.max_results,
            next_token: self.next_token,
        })
    }
}
