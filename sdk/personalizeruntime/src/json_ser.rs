// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn serialize_structure_crate_input_get_personalized_ranking_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::GetPersonalizedRankingInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_1) = &input.campaign_arn {
        object.key("campaignArn").string(var_1);
    }
    if let Some(var_2) = &input.context {
        let mut object_3 = object.key("context").start_object();
        for (key_4, value_5) in var_2 {
            {
                object_3.key(key_4).string(value_5);
            }
        }
        object_3.finish();
    }
    if let Some(var_6) = &input.filter_arn {
        object.key("filterArn").string(var_6);
    }
    if let Some(var_7) = &input.filter_values {
        let mut object_8 = object.key("filterValues").start_object();
        for (key_9, value_10) in var_7 {
            {
                object_8.key(key_9).string(value_10);
            }
        }
        object_8.finish();
    }
    if let Some(var_11) = &input.input_list {
        let mut array_12 = object.key("inputList").start_array();
        for item_13 in var_11 {
            {
                array_12.value().string(item_13);
            }
        }
        array_12.finish();
    }
    if let Some(var_14) = &input.user_id {
        object.key("userId").string(var_14);
    }
    Ok(())
}

pub fn serialize_structure_crate_input_get_recommendations_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::GetRecommendationsInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_15) = &input.campaign_arn {
        object.key("campaignArn").string(var_15);
    }
    if let Some(var_16) = &input.context {
        let mut object_17 = object.key("context").start_object();
        for (key_18, value_19) in var_16 {
            {
                object_17.key(key_18).string(value_19);
            }
        }
        object_17.finish();
    }
    if let Some(var_20) = &input.filter_arn {
        object.key("filterArn").string(var_20);
    }
    if let Some(var_21) = &input.filter_values {
        let mut object_22 = object.key("filterValues").start_object();
        for (key_23, value_24) in var_21 {
            {
                object_22.key(key_23).string(value_24);
            }
        }
        object_22.finish();
    }
    if let Some(var_25) = &input.item_id {
        object.key("itemId").string(var_25);
    }
    if input.num_results != 0 {
        object.key("numResults").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((input.num_results).into()),
        );
    }
    if let Some(var_26) = &input.user_id {
        object.key("userId").string(var_26);
    }
    Ok(())
}
