// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetPersonalizedRanking`](crate::operation::get_personalized_ranking::builders::GetPersonalizedRankingFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`campaign_arn(impl Into<String>)`](crate::operation::get_personalized_ranking::builders::GetPersonalizedRankingFluentBuilder::campaign_arn) / [`set_campaign_arn(Option<String>)`](crate::operation::get_personalized_ranking::builders::GetPersonalizedRankingFluentBuilder::set_campaign_arn):<br>required: **true**<br><p>The Amazon Resource Name (ARN) of the campaign to use for generating the personalized ranking.</p><br>
    ///   - [`input_list(impl Into<String>)`](crate::operation::get_personalized_ranking::builders::GetPersonalizedRankingFluentBuilder::input_list) / [`set_input_list(Option<Vec::<String>>)`](crate::operation::get_personalized_ranking::builders::GetPersonalizedRankingFluentBuilder::set_input_list):<br>required: **true**<br><p>A list of items (by <code>itemId</code>) to rank. If an item was not included in the training dataset, the item is appended to the end of the reranked list. The maximum is 500.</p><br>
    ///   - [`user_id(impl Into<String>)`](crate::operation::get_personalized_ranking::builders::GetPersonalizedRankingFluentBuilder::user_id) / [`set_user_id(Option<String>)`](crate::operation::get_personalized_ranking::builders::GetPersonalizedRankingFluentBuilder::set_user_id):<br>required: **true**<br><p>The user for which you want the campaign to provide a personalized ranking.</p><br>
    ///   - [`context(impl Into<String>, impl Into<String>)`](crate::operation::get_personalized_ranking::builders::GetPersonalizedRankingFluentBuilder::context) / [`set_context(Option<HashMap::<String, String>>)`](crate::operation::get_personalized_ranking::builders::GetPersonalizedRankingFluentBuilder::set_context):<br>required: **false**<br><p>The contextual metadata to use when getting recommendations. Contextual metadata includes any interaction information that might be relevant when getting a user's recommendations, such as the user's current location or device type.</p><br>
    ///   - [`filter_arn(impl Into<String>)`](crate::operation::get_personalized_ranking::builders::GetPersonalizedRankingFluentBuilder::filter_arn) / [`set_filter_arn(Option<String>)`](crate::operation::get_personalized_ranking::builders::GetPersonalizedRankingFluentBuilder::set_filter_arn):<br>required: **false**<br><p>The Amazon Resource Name (ARN) of a filter you created to include items or exclude items from recommendations for a given user. For more information, see <a href="https://docs.aws.amazon.com/personalize/latest/dg/filter.html">Filtering Recommendations</a>.</p><br>
    ///   - [`filter_values(impl Into<String>, impl Into<String>)`](crate::operation::get_personalized_ranking::builders::GetPersonalizedRankingFluentBuilder::filter_values) / [`set_filter_values(Option<HashMap::<String, String>>)`](crate::operation::get_personalized_ranking::builders::GetPersonalizedRankingFluentBuilder::set_filter_values):<br>required: **false**<br><p>The values to use when filtering recommendations. For each placeholder parameter in your filter expression, provide the parameter name (in matching case) as a key and the filter value(s) as the corresponding value. Separate multiple values for one parameter with a comma. </p>  <p>For filter expressions that use an <code>INCLUDE</code> element to include items, you must provide values for all parameters that are defined in the expression. For filters with expressions that use an <code>EXCLUDE</code> element to exclude items, you can omit the <code>filter-values</code>.In this case, Amazon Personalize doesn't use that portion of the expression to filter recommendations.</p>  <p>For more information, see <a href="https://docs.aws.amazon.com/personalize/latest/dg/filter.html">Filtering Recommendations</a>.</p><br>
    /// - On success, responds with [`GetPersonalizedRankingOutput`](crate::operation::get_personalized_ranking::GetPersonalizedRankingOutput) with field(s):
    ///   - [`personalized_ranking(Option<Vec::<PredictedItem>>)`](crate::operation::get_personalized_ranking::GetPersonalizedRankingOutput::personalized_ranking): <p>A list of items in order of most likely interest to the user. The maximum is 500.</p>
    ///   - [`recommendation_id(Option<String>)`](crate::operation::get_personalized_ranking::GetPersonalizedRankingOutput::recommendation_id): <p>The ID of the recommendation.</p>
    /// - On failure, responds with [`SdkError<GetPersonalizedRankingError>`](crate::operation::get_personalized_ranking::GetPersonalizedRankingError)
    pub fn get_personalized_ranking(&self) -> crate::operation::get_personalized_ranking::builders::GetPersonalizedRankingFluentBuilder {
        crate::operation::get_personalized_ranking::builders::GetPersonalizedRankingFluentBuilder::new(self.handle.clone())
    }
}
