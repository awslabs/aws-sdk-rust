// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetRecommendations`](crate::operation::get_recommendations::builders::GetRecommendationsFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`campaign_arn(impl Into<String>)`](crate::operation::get_recommendations::builders::GetRecommendationsFluentBuilder::campaign_arn) / [`set_campaign_arn(Option<String>)`](crate::operation::get_recommendations::builders::GetRecommendationsFluentBuilder::set_campaign_arn):<br>required: **false**<br><p>The Amazon Resource Name (ARN) of the campaign to use for getting recommendations.</p><br>
    ///   - [`item_id(impl Into<String>)`](crate::operation::get_recommendations::builders::GetRecommendationsFluentBuilder::item_id) / [`set_item_id(Option<String>)`](crate::operation::get_recommendations::builders::GetRecommendationsFluentBuilder::set_item_id):<br>required: **false**<br><p>The item ID to provide recommendations for.</p>  <p>Required for <code>RELATED_ITEMS</code> recipe type.</p><br>
    ///   - [`user_id(impl Into<String>)`](crate::operation::get_recommendations::builders::GetRecommendationsFluentBuilder::user_id) / [`set_user_id(Option<String>)`](crate::operation::get_recommendations::builders::GetRecommendationsFluentBuilder::set_user_id):<br>required: **false**<br><p>The user ID to provide recommendations for.</p>  <p>Required for <code>USER_PERSONALIZATION</code> recipe type.</p><br>
    ///   - [`num_results(i32)`](crate::operation::get_recommendations::builders::GetRecommendationsFluentBuilder::num_results) / [`set_num_results(Option<i32>)`](crate::operation::get_recommendations::builders::GetRecommendationsFluentBuilder::set_num_results):<br>required: **false**<br><p>The number of results to return. The default is 25. The maximum is 500.</p><br>
    ///   - [`context(impl Into<String>, impl Into<String>)`](crate::operation::get_recommendations::builders::GetRecommendationsFluentBuilder::context) / [`set_context(Option<HashMap::<String, String>>)`](crate::operation::get_recommendations::builders::GetRecommendationsFluentBuilder::set_context):<br>required: **false**<br><p>The contextual metadata to use when getting recommendations. Contextual metadata includes any interaction information that might be relevant when getting a user's recommendations, such as the user's current location or device type.</p><br>
    ///   - [`filter_arn(impl Into<String>)`](crate::operation::get_recommendations::builders::GetRecommendationsFluentBuilder::filter_arn) / [`set_filter_arn(Option<String>)`](crate::operation::get_recommendations::builders::GetRecommendationsFluentBuilder::set_filter_arn):<br>required: **false**<br><p>The ARN of the filter to apply to the returned recommendations. For more information, see <a href="https://docs.aws.amazon.com/personalize/latest/dg/filter.html">Filtering Recommendations</a>.</p>  <p>When using this parameter, be sure the filter resource is <code>ACTIVE</code>.</p><br>
    ///   - [`filter_values(impl Into<String>, impl Into<String>)`](crate::operation::get_recommendations::builders::GetRecommendationsFluentBuilder::filter_values) / [`set_filter_values(Option<HashMap::<String, String>>)`](crate::operation::get_recommendations::builders::GetRecommendationsFluentBuilder::set_filter_values):<br>required: **false**<br><p>The values to use when filtering recommendations. For each placeholder parameter in your filter expression, provide the parameter name (in matching case) as a key and the filter value(s) as the corresponding value. Separate multiple values for one parameter with a comma. </p>  <p>For filter expressions that use an <code>INCLUDE</code> element to include items, you must provide values for all parameters that are defined in the expression. For filters with expressions that use an <code>EXCLUDE</code> element to exclude items, you can omit the <code>filter-values</code>.In this case, Amazon Personalize doesn't use that portion of the expression to filter recommendations.</p>  <p>For more information, see <a href="https://docs.aws.amazon.com/personalize/latest/dg/filter.html">Filtering recommendations and user segments</a>.</p><br>
    ///   - [`recommender_arn(impl Into<String>)`](crate::operation::get_recommendations::builders::GetRecommendationsFluentBuilder::recommender_arn) / [`set_recommender_arn(Option<String>)`](crate::operation::get_recommendations::builders::GetRecommendationsFluentBuilder::set_recommender_arn):<br>required: **false**<br><p>The Amazon Resource Name (ARN) of the recommender to use to get recommendations. Provide a recommender ARN if you created a Domain dataset group with a recommender for a domain use case.</p><br>
    ///   - [`promotions(Promotion)`](crate::operation::get_recommendations::builders::GetRecommendationsFluentBuilder::promotions) / [`set_promotions(Option<Vec::<Promotion>>)`](crate::operation::get_recommendations::builders::GetRecommendationsFluentBuilder::set_promotions):<br>required: **false**<br><p>The promotions to apply to the recommendation request. A promotion defines additional business rules that apply to a configurable subset of recommended items.</p><br>
    /// - On success, responds with [`GetRecommendationsOutput`](crate::operation::get_recommendations::GetRecommendationsOutput) with field(s):
    ///   - [`item_list(Option<Vec::<PredictedItem>>)`](crate::operation::get_recommendations::GetRecommendationsOutput::item_list): <p>A list of recommendations sorted in descending order by prediction score. There can be a maximum of 500 items in the list.</p>
    ///   - [`recommendation_id(Option<String>)`](crate::operation::get_recommendations::GetRecommendationsOutput::recommendation_id): <p>The ID of the recommendation.</p>
    /// - On failure, responds with [`SdkError<GetRecommendationsError>`](crate::operation::get_recommendations::GetRecommendationsError)
    pub fn get_recommendations(&self) -> crate::operation::get_recommendations::builders::GetRecommendationsFluentBuilder {
        crate::operation::get_recommendations::builders::GetRecommendationsFluentBuilder::new(self.handle.clone())
    }
}
