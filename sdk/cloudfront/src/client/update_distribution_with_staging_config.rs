// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateDistributionWithStagingConfig`](crate::client::fluent_builders::UpdateDistributionWithStagingConfig) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`id(impl Into<String>)`](crate::client::fluent_builders::UpdateDistributionWithStagingConfig::id) / [`set_id(Option<String>)`](crate::client::fluent_builders::UpdateDistributionWithStagingConfig::set_id): <p>The identifier of the primary distribution to which you are copying a staging distribution's configuration.</p>
    ///   - [`staging_distribution_id(impl Into<String>)`](crate::client::fluent_builders::UpdateDistributionWithStagingConfig::staging_distribution_id) / [`set_staging_distribution_id(Option<String>)`](crate::client::fluent_builders::UpdateDistributionWithStagingConfig::set_staging_distribution_id): <p>The identifier of the staging distribution whose configuration you are copying to the primary distribution.</p>
    ///   - [`if_match(impl Into<String>)`](crate::client::fluent_builders::UpdateDistributionWithStagingConfig::if_match) / [`set_if_match(Option<String>)`](crate::client::fluent_builders::UpdateDistributionWithStagingConfig::set_if_match): <p>The current versions (<code>ETag</code> values) of both primary and staging distributions. Provide these in the following format:</p>  <p> <code>   <primary etag>    ,     <staging etag></staging>   </primary></code> </p>
    /// - On success, responds with [`UpdateDistributionWithStagingConfigOutput`](crate::output::UpdateDistributionWithStagingConfigOutput) with field(s):
    ///   - [`distribution(Option<Distribution>)`](crate::output::UpdateDistributionWithStagingConfigOutput::distribution): <p>A distribution tells CloudFront where you want content to be delivered from, and the details about how to track and manage content delivery.</p>
    ///   - [`e_tag(Option<String>)`](crate::output::UpdateDistributionWithStagingConfigOutput::e_tag): <p>The current version of the primary distribution (after it's updated).</p>
    /// - On failure, responds with [`SdkError<UpdateDistributionWithStagingConfigError>`](crate::error::UpdateDistributionWithStagingConfigError)
    pub fn update_distribution_with_staging_config(
        &self,
    ) -> crate::client::fluent_builders::UpdateDistributionWithStagingConfig {
        crate::client::fluent_builders::UpdateDistributionWithStagingConfig::new(
            self.handle.clone(),
        )
    }
}
