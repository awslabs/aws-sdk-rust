// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetResponseHeadersPolicy`](crate::operation::get_response_headers_policy::builders::GetResponseHeadersPolicyFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`id(impl Into<String>)`](crate::operation::get_response_headers_policy::builders::GetResponseHeadersPolicyFluentBuilder::id) / [`set_id(Option<String>)`](crate::operation::get_response_headers_policy::builders::GetResponseHeadersPolicyFluentBuilder::set_id):<br>required: **true**<br><p>The identifier for the response headers policy.</p>  <p>If the response headers policy is attached to a distribution's cache behavior, you can get the policy's identifier using <code>ListDistributions</code> or <code>GetDistribution</code>. If the response headers policy is not attached to a cache behavior, you can get the identifier using <code>ListResponseHeadersPolicies</code>.</p><br>
    /// - On success, responds with [`GetResponseHeadersPolicyOutput`](crate::operation::get_response_headers_policy::GetResponseHeadersPolicyOutput) with field(s):
    ///   - [`response_headers_policy(Option<ResponseHeadersPolicy>)`](crate::operation::get_response_headers_policy::GetResponseHeadersPolicyOutput::response_headers_policy): <p>Contains a response headers policy.</p>
    ///   - [`e_tag(Option<String>)`](crate::operation::get_response_headers_policy::GetResponseHeadersPolicyOutput::e_tag): <p>The version identifier for the current version of the response headers policy.</p>
    /// - On failure, responds with [`SdkError<GetResponseHeadersPolicyError>`](crate::operation::get_response_headers_policy::GetResponseHeadersPolicyError)
    pub fn get_response_headers_policy(&self) -> crate::operation::get_response_headers_policy::builders::GetResponseHeadersPolicyFluentBuilder {
        crate::operation::get_response_headers_policy::builders::GetResponseHeadersPolicyFluentBuilder::new(self.handle.clone())
    }
}
