// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListConflictingAliases`](crate::operation::list_conflicting_aliases::builders::ListConflictingAliasesFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`distribution_id(impl Into<String>)`](crate::operation::list_conflicting_aliases::builders::ListConflictingAliasesFluentBuilder::distribution_id) / [`set_distribution_id(Option<String>)`](crate::operation::list_conflicting_aliases::builders::ListConflictingAliasesFluentBuilder::set_distribution_id):<br>required: **true**<br><p>The ID of a distribution in your account that has an attached SSL/TLS certificate that includes the provided alias.</p><br>
    ///   - [`alias(impl Into<String>)`](crate::operation::list_conflicting_aliases::builders::ListConflictingAliasesFluentBuilder::alias) / [`set_alias(Option<String>)`](crate::operation::list_conflicting_aliases::builders::ListConflictingAliasesFluentBuilder::set_alias):<br>required: **true**<br><p>The alias (also called a CNAME) to search for conflicting aliases.</p><br>
    ///   - [`marker(impl Into<String>)`](crate::operation::list_conflicting_aliases::builders::ListConflictingAliasesFluentBuilder::marker) / [`set_marker(Option<String>)`](crate::operation::list_conflicting_aliases::builders::ListConflictingAliasesFluentBuilder::set_marker):<br>required: **false**<br><p>Use this field when paginating results to indicate where to begin in the list of conflicting aliases. The response includes conflicting aliases in the list that occur after the marker. To get the next page of the list, set this field's value to the value of <code>NextMarker</code> from the current page's response.</p><br>
    ///   - [`max_items(i32)`](crate::operation::list_conflicting_aliases::builders::ListConflictingAliasesFluentBuilder::max_items) / [`set_max_items(Option<i32>)`](crate::operation::list_conflicting_aliases::builders::ListConflictingAliasesFluentBuilder::set_max_items):<br>required: **false**<br><p>The maximum number of conflicting aliases that you want in the response.</p><br>
    /// - On success, responds with [`ListConflictingAliasesOutput`](crate::operation::list_conflicting_aliases::ListConflictingAliasesOutput) with field(s):
    ///   - [`conflicting_aliases_list(Option<ConflictingAliasesList>)`](crate::operation::list_conflicting_aliases::ListConflictingAliasesOutput::conflicting_aliases_list): <p>A list of conflicting aliases.</p>
    /// - On failure, responds with [`SdkError<ListConflictingAliasesError>`](crate::operation::list_conflicting_aliases::ListConflictingAliasesError)
    pub fn list_conflicting_aliases(&self) -> crate::operation::list_conflicting_aliases::builders::ListConflictingAliasesFluentBuilder {
        crate::operation::list_conflicting_aliases::builders::ListConflictingAliasesFluentBuilder::new(self.handle.clone())
    }
}
