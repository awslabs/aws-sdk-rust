// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateCachePolicy`](crate::operation::create_cache_policy::builders::CreateCachePolicyFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`cache_policy_config(CachePolicyConfig)`](crate::operation::create_cache_policy::builders::CreateCachePolicyFluentBuilder::cache_policy_config) / [`set_cache_policy_config(Option<CachePolicyConfig>)`](crate::operation::create_cache_policy::builders::CreateCachePolicyFluentBuilder::set_cache_policy_config): <p>A cache policy configuration.</p>
    /// - On success, responds with [`CreateCachePolicyOutput`](crate::operation::create_cache_policy::CreateCachePolicyOutput) with field(s):
    ///   - [`cache_policy(Option<CachePolicy>)`](crate::operation::create_cache_policy::CreateCachePolicyOutput::cache_policy): <p>A cache policy.</p>
    ///   - [`location(Option<String>)`](crate::operation::create_cache_policy::CreateCachePolicyOutput::location): <p>The fully qualified URI of the cache policy just created.</p>
    ///   - [`e_tag(Option<String>)`](crate::operation::create_cache_policy::CreateCachePolicyOutput::e_tag): <p>The current version of the cache policy.</p>
    /// - On failure, responds with [`SdkError<CreateCachePolicyError>`](crate::operation::create_cache_policy::CreateCachePolicyError)
    pub fn create_cache_policy(
        &self,
    ) -> crate::operation::create_cache_policy::builders::CreateCachePolicyFluentBuilder {
        crate::operation::create_cache_policy::builders::CreateCachePolicyFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
