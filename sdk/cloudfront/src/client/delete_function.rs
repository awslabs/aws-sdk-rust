// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeleteFunction`](crate::operation::delete_function::builders::DeleteFunctionFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(impl Into<String>)`](crate::operation::delete_function::builders::DeleteFunctionFluentBuilder::name) / [`set_name(Option<String>)`](crate::operation::delete_function::builders::DeleteFunctionFluentBuilder::set_name): <p>The name of the function that you are deleting.</p>
    ///   - [`if_match(impl Into<String>)`](crate::operation::delete_function::builders::DeleteFunctionFluentBuilder::if_match) / [`set_if_match(Option<String>)`](crate::operation::delete_function::builders::DeleteFunctionFluentBuilder::set_if_match): <p>The current version (<code>ETag</code> value) of the function that you are deleting, which you can get using <code>DescribeFunction</code>.</p>
    /// - On success, responds with [`DeleteFunctionOutput`](crate::operation::delete_function::DeleteFunctionOutput)
    /// - On failure, responds with [`SdkError<DeleteFunctionError>`](crate::operation::delete_function::DeleteFunctionError)
    pub fn delete_function(
        &self,
    ) -> crate::operation::delete_function::builders::DeleteFunctionFluentBuilder {
        crate::operation::delete_function::builders::DeleteFunctionFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
