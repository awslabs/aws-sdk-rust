// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateContinuousDeploymentPolicy`](crate::client::fluent_builders::CreateContinuousDeploymentPolicy) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`continuous_deployment_policy_config(ContinuousDeploymentPolicyConfig)`](crate::client::fluent_builders::CreateContinuousDeploymentPolicy::continuous_deployment_policy_config) / [`set_continuous_deployment_policy_config(Option<ContinuousDeploymentPolicyConfig>)`](crate::client::fluent_builders::CreateContinuousDeploymentPolicy::set_continuous_deployment_policy_config): <p>Contains the configuration for a continuous deployment policy.</p>
    /// - On success, responds with [`CreateContinuousDeploymentPolicyOutput`](crate::output::CreateContinuousDeploymentPolicyOutput) with field(s):
    ///   - [`continuous_deployment_policy(Option<ContinuousDeploymentPolicy>)`](crate::output::CreateContinuousDeploymentPolicyOutput::continuous_deployment_policy): <p>A continuous deployment policy.</p>
    ///   - [`location(Option<String>)`](crate::output::CreateContinuousDeploymentPolicyOutput::location): <p>The location of the continuous deployment policy.</p>
    ///   - [`e_tag(Option<String>)`](crate::output::CreateContinuousDeploymentPolicyOutput::e_tag): <p>The version identifier for the current version of the continuous deployment policy.</p>
    /// - On failure, responds with [`SdkError<CreateContinuousDeploymentPolicyError>`](crate::error::CreateContinuousDeploymentPolicyError)
    pub fn create_continuous_deployment_policy(
        &self,
    ) -> crate::client::fluent_builders::CreateContinuousDeploymentPolicy {
        crate::client::fluent_builders::CreateContinuousDeploymentPolicy::new(self.handle.clone())
    }
}
