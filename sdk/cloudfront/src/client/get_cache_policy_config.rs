// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetCachePolicyConfig`](crate::operation::get_cache_policy_config::builders::GetCachePolicyConfigFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`id(impl Into<String>)`](crate::operation::get_cache_policy_config::builders::GetCachePolicyConfigFluentBuilder::id) / [`set_id(Option<String>)`](crate::operation::get_cache_policy_config::builders::GetCachePolicyConfigFluentBuilder::set_id):<br>required: **true**<br><p>The unique identifier for the cache policy. If the cache policy is attached to a distribution's cache behavior, you can get the policy's identifier using <code>ListDistributions</code> or <code>GetDistribution</code>. If the cache policy is not attached to a cache behavior, you can get the identifier using <code>ListCachePolicies</code>.</p><br>
    /// - On success, responds with [`GetCachePolicyConfigOutput`](crate::operation::get_cache_policy_config::GetCachePolicyConfigOutput) with field(s):
    ///   - [`cache_policy_config(Option<CachePolicyConfig>)`](crate::operation::get_cache_policy_config::GetCachePolicyConfigOutput::cache_policy_config): <p>The cache policy configuration.</p>
    ///   - [`e_tag(Option<String>)`](crate::operation::get_cache_policy_config::GetCachePolicyConfigOutput::e_tag): <p>The current version of the cache policy.</p>
    /// - On failure, responds with [`SdkError<GetCachePolicyConfigError>`](crate::operation::get_cache_policy_config::GetCachePolicyConfigError)
    pub fn get_cache_policy_config(&self) -> crate::operation::get_cache_policy_config::builders::GetCachePolicyConfigFluentBuilder {
        crate::operation::get_cache_policy_config::builders::GetCachePolicyConfigFluentBuilder::new(self.handle.clone())
    }
}
