// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetOriginRequestPolicyConfig`](crate::operation::get_origin_request_policy_config::builders::GetOriginRequestPolicyConfigFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`id(impl Into<String>)`](crate::operation::get_origin_request_policy_config::builders::GetOriginRequestPolicyConfigFluentBuilder::id) / [`set_id(Option<String>)`](crate::operation::get_origin_request_policy_config::builders::GetOriginRequestPolicyConfigFluentBuilder::set_id): <p>The unique identifier for the origin request policy. If the origin request policy is attached to a distribution's cache behavior, you can get the policy's identifier using <code>ListDistributions</code> or <code>GetDistribution</code>. If the origin request policy is not attached to a cache behavior, you can get the identifier using <code>ListOriginRequestPolicies</code>.</p>
    /// - On success, responds with [`GetOriginRequestPolicyConfigOutput`](crate::operation::get_origin_request_policy_config::GetOriginRequestPolicyConfigOutput) with field(s):
    ///   - [`origin_request_policy_config(Option<OriginRequestPolicyConfig>)`](crate::operation::get_origin_request_policy_config::GetOriginRequestPolicyConfigOutput::origin_request_policy_config): <p>The origin request policy configuration.</p>
    ///   - [`e_tag(Option<String>)`](crate::operation::get_origin_request_policy_config::GetOriginRequestPolicyConfigOutput::e_tag): <p>The current version of the origin request policy.</p>
    /// - On failure, responds with [`SdkError<GetOriginRequestPolicyConfigError>`](crate::operation::get_origin_request_policy_config::GetOriginRequestPolicyConfigError)
    pub fn get_origin_request_policy_config(&self) -> crate::operation::get_origin_request_policy_config::builders::GetOriginRequestPolicyConfigFluentBuilder{
        crate::operation::get_origin_request_policy_config::builders::GetOriginRequestPolicyConfigFluentBuilder::new(self.handle.clone())
    }
}
