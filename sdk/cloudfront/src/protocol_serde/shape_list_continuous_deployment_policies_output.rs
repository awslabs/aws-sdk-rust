// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn de_continuous_deployment_policy_list_payload(
    body: &[u8],
) -> std::result::Result<
    std::option::Option<crate::types::ContinuousDeploymentPolicyList>,
    crate::operation::list_continuous_deployment_policies::ListContinuousDeploymentPoliciesError,
> {
    (!body.is_empty()).then(||{
        crate::protocol_serde::shape_list_continuous_deployment_policies_output::de_continuous_deployment_policy_list(body).map_err(crate::operation::list_continuous_deployment_policies::ListContinuousDeploymentPoliciesError::unhandled)
    }).transpose()
}

pub fn de_continuous_deployment_policy_list(
    inp: &[u8],
) -> Result<crate::types::ContinuousDeploymentPolicyList, aws_smithy_xml::decode::XmlDecodeError> {
    let mut doc = aws_smithy_xml::decode::Document::try_from(inp)?;
    #[allow(unused_mut)]
    let mut decoder = doc.root_element()?;
    let start_el = decoder.start_el();
    if !(start_el.matches("ContinuousDeploymentPolicyList")) {
        return Err(aws_smithy_xml::decode::XmlDecodeError::custom(format!(
            "invalid root, expected ContinuousDeploymentPolicyList got {:?}",
            start_el
        )));
    }
    crate::protocol_serde::shape_continuous_deployment_policy_list::de_continuous_deployment_policy_list(&mut decoder)
}
