// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_origin_group(
    input: &crate::types::OriginGroup,
    writer: ::aws_smithy_xml::encode::ElWriter,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    #[allow(unused_mut)]
    let mut scope = writer.finish();
    {
        let mut inner_writer = scope.start_el("Id").finish();
        inner_writer.data(input.id.as_str());
    }
    if let Some(var_1) = &input.failover_criteria {
        let inner_writer = scope.start_el("FailoverCriteria");
        crate::protocol_serde::shape_origin_group_failover_criteria::ser_origin_group_failover_criteria(var_1, inner_writer)?
    }
    if let Some(var_2) = &input.members {
        let inner_writer = scope.start_el("Members");
        crate::protocol_serde::shape_origin_group_members::ser_origin_group_members(var_2, inner_writer)?
    }
    scope.finish();
    Ok(())
}

#[allow(clippy::needless_question_mark)]
pub fn de_origin_group(
    decoder: &mut ::aws_smithy_xml::decode::ScopedDecoder,
) -> Result<crate::types::OriginGroup, ::aws_smithy_xml::decode::XmlDecodeError> {
    #[allow(unused_mut)]
    let mut builder = crate::types::OriginGroup::builder();
    while let Some(mut tag) = decoder.next_tag() {
        match tag.start_el() {
            s if s.matches("Id") /* Id com.amazonaws.cloudfront#OriginGroup$Id */ =>  {
                let var_3 =
                    Some(
                        Result::<::std::string::String, ::aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            ::aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_id(var_3);
            }
            ,
            s if s.matches("FailoverCriteria") /* FailoverCriteria com.amazonaws.cloudfront#OriginGroup$FailoverCriteria */ =>  {
                let var_4 =
                    Some(
                        crate::protocol_serde::shape_origin_group_failover_criteria::de_origin_group_failover_criteria(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_failover_criteria(var_4);
            }
            ,
            s if s.matches("Members") /* Members com.amazonaws.cloudfront#OriginGroup$Members */ =>  {
                let var_5 =
                    Some(
                        crate::protocol_serde::shape_origin_group_members::de_origin_group_members(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_members(var_5);
            }
            ,
            _ => {}
        }
    }
    Ok(crate::serde_util::origin_group_correct_errors(builder)
        .build()
        .map_err(|_| ::aws_smithy_xml::decode::XmlDecodeError::custom("missing field"))?)
}
