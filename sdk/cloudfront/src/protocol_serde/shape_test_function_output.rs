// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn de_test_result_payload(
    body: &[u8],
) -> std::result::Result<
    std::option::Option<crate::types::TestResult>,
    crate::operation::test_function::TestFunctionError,
> {
    (!body.is_empty())
        .then(|| {
            crate::protocol_serde::shape_test_function_output::de_test_result(body)
                .map_err(crate::operation::test_function::TestFunctionError::unhandled)
        })
        .transpose()
}

pub fn de_test_result(
    inp: &[u8],
) -> Result<crate::types::TestResult, aws_smithy_xml::decode::XmlDecodeError> {
    let mut doc = aws_smithy_xml::decode::Document::try_from(inp)?;
    #[allow(unused_mut)]
    let mut decoder = doc.root_element()?;
    let start_el = decoder.start_el();
    if !(start_el.matches("TestResult")) {
        return Err(aws_smithy_xml::decode::XmlDecodeError::custom(format!(
            "invalid root, expected TestResult got {:?}",
            start_el
        )));
    }
    crate::protocol_serde::shape_test_result::de_test_result(&mut decoder)
}
