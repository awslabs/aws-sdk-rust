// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Determines whether CloudFront includes the <code>Referrer-Policy</code> HTTP response header and the header's value.</p>
/// <p>For more information about the <code>Referrer-Policy</code> HTTP response header, see <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Referrer-Policy">Referrer-Policy</a> in the MDN Web Docs.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ResponseHeadersPolicyReferrerPolicy {
    /// <p>A Boolean that determines whether CloudFront overrides the <code>Referrer-Policy</code> HTTP response header received from the origin with the one specified in this response headers policy.</p>
    #[doc(hidden)]
    pub r#override: std::option::Option<bool>,
    /// <p>The value of the <code>Referrer-Policy</code> HTTP response header. Valid values are:</p>
    /// <ul>
    /// <li> <p> <code>no-referrer</code> </p> </li>
    /// <li> <p> <code>no-referrer-when-downgrade</code> </p> </li>
    /// <li> <p> <code>origin</code> </p> </li>
    /// <li> <p> <code>origin-when-cross-origin</code> </p> </li>
    /// <li> <p> <code>same-origin</code> </p> </li>
    /// <li> <p> <code>strict-origin</code> </p> </li>
    /// <li> <p> <code>strict-origin-when-cross-origin</code> </p> </li>
    /// <li> <p> <code>unsafe-url</code> </p> </li>
    /// </ul>
    /// <p>For more information about these values, see <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Referrer-Policy">Referrer-Policy</a> in the MDN Web Docs.</p>
    #[doc(hidden)]
    pub referrer_policy: std::option::Option<crate::types::ReferrerPolicyList>,
}
impl ResponseHeadersPolicyReferrerPolicy {
    /// <p>A Boolean that determines whether CloudFront overrides the <code>Referrer-Policy</code> HTTP response header received from the origin with the one specified in this response headers policy.</p>
    pub fn r#override(&self) -> std::option::Option<bool> {
        self.r#override
    }
    /// <p>The value of the <code>Referrer-Policy</code> HTTP response header. Valid values are:</p>
    /// <ul>
    /// <li> <p> <code>no-referrer</code> </p> </li>
    /// <li> <p> <code>no-referrer-when-downgrade</code> </p> </li>
    /// <li> <p> <code>origin</code> </p> </li>
    /// <li> <p> <code>origin-when-cross-origin</code> </p> </li>
    /// <li> <p> <code>same-origin</code> </p> </li>
    /// <li> <p> <code>strict-origin</code> </p> </li>
    /// <li> <p> <code>strict-origin-when-cross-origin</code> </p> </li>
    /// <li> <p> <code>unsafe-url</code> </p> </li>
    /// </ul>
    /// <p>For more information about these values, see <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Referrer-Policy">Referrer-Policy</a> in the MDN Web Docs.</p>
    pub fn referrer_policy(&self) -> std::option::Option<&crate::types::ReferrerPolicyList> {
        self.referrer_policy.as_ref()
    }
}
impl ResponseHeadersPolicyReferrerPolicy {
    /// Creates a new builder-style object to manufacture [`ResponseHeadersPolicyReferrerPolicy`](crate::types::ResponseHeadersPolicyReferrerPolicy).
    pub fn builder() -> crate::types::builders::ResponseHeadersPolicyReferrerPolicyBuilder {
        crate::types::builders::ResponseHeadersPolicyReferrerPolicyBuilder::default()
    }
}

/// A builder for [`ResponseHeadersPolicyReferrerPolicy`](crate::types::ResponseHeadersPolicyReferrerPolicy).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ResponseHeadersPolicyReferrerPolicyBuilder {
    pub(crate) r#override: std::option::Option<bool>,
    pub(crate) referrer_policy: std::option::Option<crate::types::ReferrerPolicyList>,
}
impl ResponseHeadersPolicyReferrerPolicyBuilder {
    /// <p>A Boolean that determines whether CloudFront overrides the <code>Referrer-Policy</code> HTTP response header received from the origin with the one specified in this response headers policy.</p>
    pub fn r#override(mut self, input: bool) -> Self {
        self.r#override = Some(input);
        self
    }
    /// <p>A Boolean that determines whether CloudFront overrides the <code>Referrer-Policy</code> HTTP response header received from the origin with the one specified in this response headers policy.</p>
    pub fn set_override(mut self, input: std::option::Option<bool>) -> Self {
        self.r#override = input;
        self
    }
    /// <p>The value of the <code>Referrer-Policy</code> HTTP response header. Valid values are:</p>
    /// <ul>
    /// <li> <p> <code>no-referrer</code> </p> </li>
    /// <li> <p> <code>no-referrer-when-downgrade</code> </p> </li>
    /// <li> <p> <code>origin</code> </p> </li>
    /// <li> <p> <code>origin-when-cross-origin</code> </p> </li>
    /// <li> <p> <code>same-origin</code> </p> </li>
    /// <li> <p> <code>strict-origin</code> </p> </li>
    /// <li> <p> <code>strict-origin-when-cross-origin</code> </p> </li>
    /// <li> <p> <code>unsafe-url</code> </p> </li>
    /// </ul>
    /// <p>For more information about these values, see <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Referrer-Policy">Referrer-Policy</a> in the MDN Web Docs.</p>
    pub fn referrer_policy(mut self, input: crate::types::ReferrerPolicyList) -> Self {
        self.referrer_policy = Some(input);
        self
    }
    /// <p>The value of the <code>Referrer-Policy</code> HTTP response header. Valid values are:</p>
    /// <ul>
    /// <li> <p> <code>no-referrer</code> </p> </li>
    /// <li> <p> <code>no-referrer-when-downgrade</code> </p> </li>
    /// <li> <p> <code>origin</code> </p> </li>
    /// <li> <p> <code>origin-when-cross-origin</code> </p> </li>
    /// <li> <p> <code>same-origin</code> </p> </li>
    /// <li> <p> <code>strict-origin</code> </p> </li>
    /// <li> <p> <code>strict-origin-when-cross-origin</code> </p> </li>
    /// <li> <p> <code>unsafe-url</code> </p> </li>
    /// </ul>
    /// <p>For more information about these values, see <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Referrer-Policy">Referrer-Policy</a> in the MDN Web Docs.</p>
    pub fn set_referrer_policy(
        mut self,
        input: std::option::Option<crate::types::ReferrerPolicyList>,
    ) -> Self {
        self.referrer_policy = input;
        self
    }
    /// Consumes the builder and constructs a [`ResponseHeadersPolicyReferrerPolicy`](crate::types::ResponseHeadersPolicyReferrerPolicy).
    pub fn build(self) -> crate::types::ResponseHeadersPolicyReferrerPolicy {
        crate::types::ResponseHeadersPolicyReferrerPolicy {
            r#override: self.r#override,
            referrer_policy: self.referrer_policy,
        }
    }
}
