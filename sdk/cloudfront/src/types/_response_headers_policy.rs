// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A response headers policy.</p>
/// <p>A response headers policy contains information about a set of HTTP response headers.</p>
/// <p>After you create a response headers policy, you can use its ID to attach it to one or more cache behaviors in a CloudFront distribution. When it's attached to a cache behavior, the response headers policy affects the HTTP headers that CloudFront includes in HTTP responses to requests that match the cache behavior. CloudFront adds or removes response headers according to the configuration of the response headers policy.</p>
/// <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/modifying-response-headers.html">Adding or removing HTTP headers in CloudFront responses</a> in the <i>Amazon CloudFront Developer Guide</i>.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ResponseHeadersPolicy {
    /// <p>The identifier for the response headers policy.</p>
    #[doc(hidden)]
    pub id: std::option::Option<std::string::String>,
    /// <p>The date and time when the response headers policy was last modified.</p>
    #[doc(hidden)]
    pub last_modified_time: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>A response headers policy configuration.</p>
    #[doc(hidden)]
    pub response_headers_policy_config:
        std::option::Option<crate::types::ResponseHeadersPolicyConfig>,
}
impl ResponseHeadersPolicy {
    /// <p>The identifier for the response headers policy.</p>
    pub fn id(&self) -> std::option::Option<&str> {
        self.id.as_deref()
    }
    /// <p>The date and time when the response headers policy was last modified.</p>
    pub fn last_modified_time(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.last_modified_time.as_ref()
    }
    /// <p>A response headers policy configuration.</p>
    pub fn response_headers_policy_config(
        &self,
    ) -> std::option::Option<&crate::types::ResponseHeadersPolicyConfig> {
        self.response_headers_policy_config.as_ref()
    }
}
impl ResponseHeadersPolicy {
    /// Creates a new builder-style object to manufacture [`ResponseHeadersPolicy`](crate::types::ResponseHeadersPolicy).
    pub fn builder() -> crate::types::builders::ResponseHeadersPolicyBuilder {
        crate::types::builders::ResponseHeadersPolicyBuilder::default()
    }
}

/// A builder for [`ResponseHeadersPolicy`](crate::types::ResponseHeadersPolicy).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ResponseHeadersPolicyBuilder {
    pub(crate) id: std::option::Option<std::string::String>,
    pub(crate) last_modified_time: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) response_headers_policy_config:
        std::option::Option<crate::types::ResponseHeadersPolicyConfig>,
}
impl ResponseHeadersPolicyBuilder {
    /// <p>The identifier for the response headers policy.</p>
    pub fn id(mut self, input: impl Into<std::string::String>) -> Self {
        self.id = Some(input.into());
        self
    }
    /// <p>The identifier for the response headers policy.</p>
    pub fn set_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.id = input;
        self
    }
    /// <p>The date and time when the response headers policy was last modified.</p>
    pub fn last_modified_time(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.last_modified_time = Some(input);
        self
    }
    /// <p>The date and time when the response headers policy was last modified.</p>
    pub fn set_last_modified_time(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.last_modified_time = input;
        self
    }
    /// <p>A response headers policy configuration.</p>
    pub fn response_headers_policy_config(
        mut self,
        input: crate::types::ResponseHeadersPolicyConfig,
    ) -> Self {
        self.response_headers_policy_config = Some(input);
        self
    }
    /// <p>A response headers policy configuration.</p>
    pub fn set_response_headers_policy_config(
        mut self,
        input: std::option::Option<crate::types::ResponseHeadersPolicyConfig>,
    ) -> Self {
        self.response_headers_policy_config = input;
        self
    }
    /// Consumes the builder and constructs a [`ResponseHeadersPolicy`](crate::types::ResponseHeadersPolicy).
    pub fn build(self) -> crate::types::ResponseHeadersPolicy {
        crate::types::ResponseHeadersPolicy {
            id: self.id,
            last_modified_time: self.last_modified_time,
            response_headers_policy_config: self.response_headers_policy_config,
        }
    }
}
