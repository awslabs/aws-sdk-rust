// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The name of an HTTP header that CloudFront removes from HTTP responses to requests that match the cache behavior that this response headers policy is attached to.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ResponseHeadersPolicyRemoveHeader {
    /// <p>The HTTP header name.</p>
    pub header: ::std::string::String,
}
impl ResponseHeadersPolicyRemoveHeader {
    /// <p>The HTTP header name.</p>
    pub fn header(&self) -> &str {
        use std::ops::Deref;
        self.header.deref()
    }
}
impl ResponseHeadersPolicyRemoveHeader {
    /// Creates a new builder-style object to manufacture [`ResponseHeadersPolicyRemoveHeader`](crate::types::ResponseHeadersPolicyRemoveHeader).
    pub fn builder() -> crate::types::builders::ResponseHeadersPolicyRemoveHeaderBuilder {
        crate::types::builders::ResponseHeadersPolicyRemoveHeaderBuilder::default()
    }
}

/// A builder for [`ResponseHeadersPolicyRemoveHeader`](crate::types::ResponseHeadersPolicyRemoveHeader).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ResponseHeadersPolicyRemoveHeaderBuilder {
    pub(crate) header: ::std::option::Option<::std::string::String>,
}
impl ResponseHeadersPolicyRemoveHeaderBuilder {
    /// <p>The HTTP header name.</p>
    /// This field is required.
    pub fn header(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.header = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The HTTP header name.</p>
    pub fn set_header(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.header = input;
        self
    }
    /// <p>The HTTP header name.</p>
    pub fn get_header(&self) -> &::std::option::Option<::std::string::String> {
        &self.header
    }
    /// Consumes the builder and constructs a [`ResponseHeadersPolicyRemoveHeader`](crate::types::ResponseHeadersPolicyRemoveHeader).
    /// This method will fail if any of the following fields are not set:
    /// - [`header`](crate::types::builders::ResponseHeadersPolicyRemoveHeaderBuilder::header)
    pub fn build(self) -> ::std::result::Result<crate::types::ResponseHeadersPolicyRemoveHeader, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::ResponseHeadersPolicyRemoveHeader {
            header: self.header.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "header",
                    "header was not specified but it is required when building ResponseHeadersPolicyRemoveHeader",
                )
            })?,
        })
    }
}
