// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The name of an HTTP header that CloudFront removes from HTTP responses to requests that match the cache behavior that this response headers policy is attached to.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ResponseHeadersPolicyRemoveHeader {
    /// <p>The HTTP header name.</p>
    #[doc(hidden)]
    pub header: std::option::Option<std::string::String>,
}
impl ResponseHeadersPolicyRemoveHeader {
    /// <p>The HTTP header name.</p>
    pub fn header(&self) -> std::option::Option<&str> {
        self.header.as_deref()
    }
}
impl ResponseHeadersPolicyRemoveHeader {
    /// Creates a new builder-style object to manufacture [`ResponseHeadersPolicyRemoveHeader`](crate::types::ResponseHeadersPolicyRemoveHeader).
    pub fn builder() -> crate::types::builders::ResponseHeadersPolicyRemoveHeaderBuilder {
        crate::types::builders::ResponseHeadersPolicyRemoveHeaderBuilder::default()
    }
}

/// A builder for [`ResponseHeadersPolicyRemoveHeader`](crate::types::ResponseHeadersPolicyRemoveHeader).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ResponseHeadersPolicyRemoveHeaderBuilder {
    pub(crate) header: std::option::Option<std::string::String>,
}
impl ResponseHeadersPolicyRemoveHeaderBuilder {
    /// <p>The HTTP header name.</p>
    pub fn header(mut self, input: impl Into<std::string::String>) -> Self {
        self.header = Some(input.into());
        self
    }
    /// <p>The HTTP header name.</p>
    pub fn set_header(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.header = input;
        self
    }
    /// Consumes the builder and constructs a [`ResponseHeadersPolicyRemoveHeader`](crate::types::ResponseHeadersPolicyRemoveHeader).
    pub fn build(self) -> crate::types::ResponseHeadersPolicyRemoveHeader {
        crate::types::ResponseHeadersPolicyRemoveHeader {
            header: self.header,
        }
    }
}
