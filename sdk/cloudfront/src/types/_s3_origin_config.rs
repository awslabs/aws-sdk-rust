// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A complex type that contains information about the Amazon S3 origin. If the origin is a custom origin or an S3 bucket that is configured as a website endpoint, use the <code>CustomOriginConfig</code> element instead.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct S3OriginConfig {
    /// <p>The CloudFront origin access identity to associate with the origin. Use an origin access identity to configure the origin so that viewers can <i>only</i> access objects in an Amazon S3 bucket through CloudFront. The format of the value is:</p>
    /// <p>origin-access-identity/cloudfront/<i>ID-of-origin-access-identity</i> </p>
    /// <p>where <code> <i>ID-of-origin-access-identity</i> </code> is the value that CloudFront returned in the <code>ID</code> element when you created the origin access identity.</p>
    /// <p>If you want viewers to be able to access objects using either the CloudFront URL or the Amazon S3 URL, specify an empty <code>OriginAccessIdentity</code> element.</p>
    /// <p>To delete the origin access identity from an existing distribution, update the distribution configuration and include an empty <code>OriginAccessIdentity</code> element.</p>
    /// <p>To replace the origin access identity, update the distribution configuration and specify the new origin access identity.</p>
    /// <p>For more information about the origin access identity, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html">Serving Private Content through CloudFront</a> in the <i>Amazon CloudFront Developer Guide</i>.</p>
    #[doc(hidden)]
    pub origin_access_identity: std::option::Option<std::string::String>,
}
impl S3OriginConfig {
    /// <p>The CloudFront origin access identity to associate with the origin. Use an origin access identity to configure the origin so that viewers can <i>only</i> access objects in an Amazon S3 bucket through CloudFront. The format of the value is:</p>
    /// <p>origin-access-identity/cloudfront/<i>ID-of-origin-access-identity</i> </p>
    /// <p>where <code> <i>ID-of-origin-access-identity</i> </code> is the value that CloudFront returned in the <code>ID</code> element when you created the origin access identity.</p>
    /// <p>If you want viewers to be able to access objects using either the CloudFront URL or the Amazon S3 URL, specify an empty <code>OriginAccessIdentity</code> element.</p>
    /// <p>To delete the origin access identity from an existing distribution, update the distribution configuration and include an empty <code>OriginAccessIdentity</code> element.</p>
    /// <p>To replace the origin access identity, update the distribution configuration and specify the new origin access identity.</p>
    /// <p>For more information about the origin access identity, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html">Serving Private Content through CloudFront</a> in the <i>Amazon CloudFront Developer Guide</i>.</p>
    pub fn origin_access_identity(&self) -> std::option::Option<&str> {
        self.origin_access_identity.as_deref()
    }
}
impl S3OriginConfig {
    /// Creates a new builder-style object to manufacture [`S3OriginConfig`](crate::types::S3OriginConfig).
    pub fn builder() -> crate::types::builders::S3OriginConfigBuilder {
        crate::types::builders::S3OriginConfigBuilder::default()
    }
}

/// A builder for [`S3OriginConfig`](crate::types::S3OriginConfig).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct S3OriginConfigBuilder {
    pub(crate) origin_access_identity: std::option::Option<std::string::String>,
}
impl S3OriginConfigBuilder {
    /// <p>The CloudFront origin access identity to associate with the origin. Use an origin access identity to configure the origin so that viewers can <i>only</i> access objects in an Amazon S3 bucket through CloudFront. The format of the value is:</p>
    /// <p>origin-access-identity/cloudfront/<i>ID-of-origin-access-identity</i> </p>
    /// <p>where <code> <i>ID-of-origin-access-identity</i> </code> is the value that CloudFront returned in the <code>ID</code> element when you created the origin access identity.</p>
    /// <p>If you want viewers to be able to access objects using either the CloudFront URL or the Amazon S3 URL, specify an empty <code>OriginAccessIdentity</code> element.</p>
    /// <p>To delete the origin access identity from an existing distribution, update the distribution configuration and include an empty <code>OriginAccessIdentity</code> element.</p>
    /// <p>To replace the origin access identity, update the distribution configuration and specify the new origin access identity.</p>
    /// <p>For more information about the origin access identity, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html">Serving Private Content through CloudFront</a> in the <i>Amazon CloudFront Developer Guide</i>.</p>
    pub fn origin_access_identity(mut self, input: impl Into<std::string::String>) -> Self {
        self.origin_access_identity = Some(input.into());
        self
    }
    /// <p>The CloudFront origin access identity to associate with the origin. Use an origin access identity to configure the origin so that viewers can <i>only</i> access objects in an Amazon S3 bucket through CloudFront. The format of the value is:</p>
    /// <p>origin-access-identity/cloudfront/<i>ID-of-origin-access-identity</i> </p>
    /// <p>where <code> <i>ID-of-origin-access-identity</i> </code> is the value that CloudFront returned in the <code>ID</code> element when you created the origin access identity.</p>
    /// <p>If you want viewers to be able to access objects using either the CloudFront URL or the Amazon S3 URL, specify an empty <code>OriginAccessIdentity</code> element.</p>
    /// <p>To delete the origin access identity from an existing distribution, update the distribution configuration and include an empty <code>OriginAccessIdentity</code> element.</p>
    /// <p>To replace the origin access identity, update the distribution configuration and specify the new origin access identity.</p>
    /// <p>For more information about the origin access identity, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html">Serving Private Content through CloudFront</a> in the <i>Amazon CloudFront Developer Guide</i>.</p>
    pub fn set_origin_access_identity(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.origin_access_identity = input;
        self
    }
    /// Consumes the builder and constructs a [`S3OriginConfig`](crate::types::S3OriginConfig).
    pub fn build(self) -> crate::types::S3OriginConfig {
        crate::types::S3OriginConfig {
            origin_access_identity: self.origin_access_identity,
        }
    }
}
