// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains configuration information about a CloudFront function.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct FunctionConfig {
    /// <p>A comment to describe the function.</p>
    pub comment: ::std::string::String,
    /// <p>The function's runtime environment verion.</p>
    pub runtime: crate::types::FunctionRuntime,
}
impl FunctionConfig {
    /// <p>A comment to describe the function.</p>
    pub fn comment(&self) -> &str {
        use std::ops::Deref;
        self.comment.deref()
    }
    /// <p>The function's runtime environment verion.</p>
    pub fn runtime(&self) -> &crate::types::FunctionRuntime {
        &self.runtime
    }
}
impl FunctionConfig {
    /// Creates a new builder-style object to manufacture [`FunctionConfig`](crate::types::FunctionConfig).
    pub fn builder() -> crate::types::builders::FunctionConfigBuilder {
        crate::types::builders::FunctionConfigBuilder::default()
    }
}

/// A builder for [`FunctionConfig`](crate::types::FunctionConfig).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct FunctionConfigBuilder {
    pub(crate) comment: ::std::option::Option<::std::string::String>,
    pub(crate) runtime: ::std::option::Option<crate::types::FunctionRuntime>,
}
impl FunctionConfigBuilder {
    /// <p>A comment to describe the function.</p>
    /// This field is required.
    pub fn comment(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.comment = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>A comment to describe the function.</p>
    pub fn set_comment(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.comment = input;
        self
    }
    /// <p>A comment to describe the function.</p>
    pub fn get_comment(&self) -> &::std::option::Option<::std::string::String> {
        &self.comment
    }
    /// <p>The function's runtime environment verion.</p>
    /// This field is required.
    pub fn runtime(mut self, input: crate::types::FunctionRuntime) -> Self {
        self.runtime = ::std::option::Option::Some(input);
        self
    }
    /// <p>The function's runtime environment verion.</p>
    pub fn set_runtime(mut self, input: ::std::option::Option<crate::types::FunctionRuntime>) -> Self {
        self.runtime = input;
        self
    }
    /// <p>The function's runtime environment verion.</p>
    pub fn get_runtime(&self) -> &::std::option::Option<crate::types::FunctionRuntime> {
        &self.runtime
    }
    /// Consumes the builder and constructs a [`FunctionConfig`](crate::types::FunctionConfig).
    /// This method will fail if any of the following fields are not set:
    /// - [`comment`](crate::types::builders::FunctionConfigBuilder::comment)
    /// - [`runtime`](crate::types::builders::FunctionConfigBuilder::runtime)
    pub fn build(self) -> ::std::result::Result<crate::types::FunctionConfig, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::FunctionConfig {
            comment: self.comment.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "comment",
                    "comment was not specified but it is required when building FunctionConfig",
                )
            })?,
            runtime: self.runtime.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "runtime",
                    "runtime was not specified but it is required when building FunctionConfig",
                )
            })?,
        })
    }
}
