// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Configuration for query argument-profile mapping for field-level encryption.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct QueryArgProfileConfig {
    /// <p>Flag to set if you want a request to be forwarded to the origin even if the profile specified by the field-level encryption query argument, fle-profile, is unknown.</p>
    pub forward_when_query_arg_profile_is_unknown: bool,
    /// <p>Profiles specified for query argument-profile mapping for field-level encryption.</p>
    pub query_arg_profiles: ::std::option::Option<crate::types::QueryArgProfiles>,
}
impl QueryArgProfileConfig {
    /// <p>Flag to set if you want a request to be forwarded to the origin even if the profile specified by the field-level encryption query argument, fle-profile, is unknown.</p>
    pub fn forward_when_query_arg_profile_is_unknown(&self) -> bool {
        self.forward_when_query_arg_profile_is_unknown
    }
    /// <p>Profiles specified for query argument-profile mapping for field-level encryption.</p>
    pub fn query_arg_profiles(&self) -> ::std::option::Option<&crate::types::QueryArgProfiles> {
        self.query_arg_profiles.as_ref()
    }
}
impl QueryArgProfileConfig {
    /// Creates a new builder-style object to manufacture [`QueryArgProfileConfig`](crate::types::QueryArgProfileConfig).
    pub fn builder() -> crate::types::builders::QueryArgProfileConfigBuilder {
        crate::types::builders::QueryArgProfileConfigBuilder::default()
    }
}

/// A builder for [`QueryArgProfileConfig`](crate::types::QueryArgProfileConfig).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct QueryArgProfileConfigBuilder {
    pub(crate) forward_when_query_arg_profile_is_unknown: ::std::option::Option<bool>,
    pub(crate) query_arg_profiles: ::std::option::Option<crate::types::QueryArgProfiles>,
}
impl QueryArgProfileConfigBuilder {
    /// <p>Flag to set if you want a request to be forwarded to the origin even if the profile specified by the field-level encryption query argument, fle-profile, is unknown.</p>
    /// This field is required.
    pub fn forward_when_query_arg_profile_is_unknown(mut self, input: bool) -> Self {
        self.forward_when_query_arg_profile_is_unknown = ::std::option::Option::Some(input);
        self
    }
    /// <p>Flag to set if you want a request to be forwarded to the origin even if the profile specified by the field-level encryption query argument, fle-profile, is unknown.</p>
    pub fn set_forward_when_query_arg_profile_is_unknown(mut self, input: ::std::option::Option<bool>) -> Self {
        self.forward_when_query_arg_profile_is_unknown = input;
        self
    }
    /// <p>Flag to set if you want a request to be forwarded to the origin even if the profile specified by the field-level encryption query argument, fle-profile, is unknown.</p>
    pub fn get_forward_when_query_arg_profile_is_unknown(&self) -> &::std::option::Option<bool> {
        &self.forward_when_query_arg_profile_is_unknown
    }
    /// <p>Profiles specified for query argument-profile mapping for field-level encryption.</p>
    pub fn query_arg_profiles(mut self, input: crate::types::QueryArgProfiles) -> Self {
        self.query_arg_profiles = ::std::option::Option::Some(input);
        self
    }
    /// <p>Profiles specified for query argument-profile mapping for field-level encryption.</p>
    pub fn set_query_arg_profiles(mut self, input: ::std::option::Option<crate::types::QueryArgProfiles>) -> Self {
        self.query_arg_profiles = input;
        self
    }
    /// <p>Profiles specified for query argument-profile mapping for field-level encryption.</p>
    pub fn get_query_arg_profiles(&self) -> &::std::option::Option<crate::types::QueryArgProfiles> {
        &self.query_arg_profiles
    }
    /// Consumes the builder and constructs a [`QueryArgProfileConfig`](crate::types::QueryArgProfileConfig).
    /// This method will fail if any of the following fields are not set:
    /// - [`forward_when_query_arg_profile_is_unknown`](crate::types::builders::QueryArgProfileConfigBuilder::forward_when_query_arg_profile_is_unknown)
    pub fn build(self) -> ::std::result::Result<crate::types::QueryArgProfileConfig, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::QueryArgProfileConfig {
            forward_when_query_arg_profile_is_unknown: self.forward_when_query_arg_profile_is_unknown.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "forward_when_query_arg_profile_is_unknown",
                    "forward_when_query_arg_profile_is_unknown was not specified but it is required when building QueryArgProfileConfig",
                )
            })?,
            query_arg_profiles: self.query_arg_profiles,
        })
    }
}
