// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A complex data type that includes information about the failover criteria for an origin group, including the status codes for which CloudFront will failover from the primary origin to the second origin.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct OriginGroupFailoverCriteria {
    /// <p>The status codes that, when returned from the primary origin, will trigger CloudFront to failover to the second origin.</p>
    #[doc(hidden)]
    pub status_codes: std::option::Option<crate::types::StatusCodes>,
}
impl OriginGroupFailoverCriteria {
    /// <p>The status codes that, when returned from the primary origin, will trigger CloudFront to failover to the second origin.</p>
    pub fn status_codes(&self) -> std::option::Option<&crate::types::StatusCodes> {
        self.status_codes.as_ref()
    }
}
impl OriginGroupFailoverCriteria {
    /// Creates a new builder-style object to manufacture [`OriginGroupFailoverCriteria`](crate::types::OriginGroupFailoverCriteria).
    pub fn builder() -> crate::types::builders::OriginGroupFailoverCriteriaBuilder {
        crate::types::builders::OriginGroupFailoverCriteriaBuilder::default()
    }
}

/// A builder for [`OriginGroupFailoverCriteria`](crate::types::OriginGroupFailoverCriteria).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct OriginGroupFailoverCriteriaBuilder {
    pub(crate) status_codes: std::option::Option<crate::types::StatusCodes>,
}
impl OriginGroupFailoverCriteriaBuilder {
    /// <p>The status codes that, when returned from the primary origin, will trigger CloudFront to failover to the second origin.</p>
    pub fn status_codes(mut self, input: crate::types::StatusCodes) -> Self {
        self.status_codes = Some(input);
        self
    }
    /// <p>The status codes that, when returned from the primary origin, will trigger CloudFront to failover to the second origin.</p>
    pub fn set_status_codes(
        mut self,
        input: std::option::Option<crate::types::StatusCodes>,
    ) -> Self {
        self.status_codes = input;
        self
    }
    /// Consumes the builder and constructs a [`OriginGroupFailoverCriteria`](crate::types::OriginGroupFailoverCriteria).
    pub fn build(self) -> crate::types::OriginGroupFailoverCriteria {
        crate::types::OriginGroupFailoverCriteria {
            status_codes: self.status_codes,
        }
    }
}
