// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>An origin request policy.</p>
/// <p>When it's attached to a cache behavior, the origin request policy determines the values that CloudFront includes in requests that it sends to the origin. Each request that CloudFront sends to the origin includes the following:</p>
/// <ul>
/// <li> <p>The request body and the URL path (without the domain name) from the viewer request.</p> </li>
/// <li> <p>The headers that CloudFront automatically includes in every origin request, including <code>Host</code>, <code>User-Agent</code>, and <code>X-Amz-Cf-Id</code>.</p> </li>
/// <li> <p>All HTTP headers, cookies, and URL query strings that are specified in the cache policy or the origin request policy. These can include items from the viewer request and, in the case of headers, additional ones that are added by CloudFront.</p> </li>
/// </ul>
/// <p>CloudFront sends a request when it can't find an object in its cache that matches the request. If you want to send values to the origin and also include them in the cache key, use <code>CachePolicy</code>.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct OriginRequestPolicy {
    /// <p>The unique identifier for the origin request policy.</p>
    pub id: ::std::string::String,
    /// <p>The date and time when the origin request policy was last modified.</p>
    pub last_modified_time: ::aws_smithy_types::DateTime,
    /// <p>The origin request policy configuration.</p>
    pub origin_request_policy_config: ::std::option::Option<crate::types::OriginRequestPolicyConfig>,
}
impl OriginRequestPolicy {
    /// <p>The unique identifier for the origin request policy.</p>
    pub fn id(&self) -> &str {
        use std::ops::Deref;
        self.id.deref()
    }
    /// <p>The date and time when the origin request policy was last modified.</p>
    pub fn last_modified_time(&self) -> &::aws_smithy_types::DateTime {
        &self.last_modified_time
    }
    /// <p>The origin request policy configuration.</p>
    pub fn origin_request_policy_config(&self) -> ::std::option::Option<&crate::types::OriginRequestPolicyConfig> {
        self.origin_request_policy_config.as_ref()
    }
}
impl OriginRequestPolicy {
    /// Creates a new builder-style object to manufacture [`OriginRequestPolicy`](crate::types::OriginRequestPolicy).
    pub fn builder() -> crate::types::builders::OriginRequestPolicyBuilder {
        crate::types::builders::OriginRequestPolicyBuilder::default()
    }
}

/// A builder for [`OriginRequestPolicy`](crate::types::OriginRequestPolicy).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct OriginRequestPolicyBuilder {
    pub(crate) id: ::std::option::Option<::std::string::String>,
    pub(crate) last_modified_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) origin_request_policy_config: ::std::option::Option<crate::types::OriginRequestPolicyConfig>,
}
impl OriginRequestPolicyBuilder {
    /// <p>The unique identifier for the origin request policy.</p>
    /// This field is required.
    pub fn id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The unique identifier for the origin request policy.</p>
    pub fn set_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.id = input;
        self
    }
    /// <p>The unique identifier for the origin request policy.</p>
    pub fn get_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.id
    }
    /// <p>The date and time when the origin request policy was last modified.</p>
    /// This field is required.
    pub fn last_modified_time(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.last_modified_time = ::std::option::Option::Some(input);
        self
    }
    /// <p>The date and time when the origin request policy was last modified.</p>
    pub fn set_last_modified_time(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.last_modified_time = input;
        self
    }
    /// <p>The date and time when the origin request policy was last modified.</p>
    pub fn get_last_modified_time(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.last_modified_time
    }
    /// <p>The origin request policy configuration.</p>
    /// This field is required.
    pub fn origin_request_policy_config(mut self, input: crate::types::OriginRequestPolicyConfig) -> Self {
        self.origin_request_policy_config = ::std::option::Option::Some(input);
        self
    }
    /// <p>The origin request policy configuration.</p>
    pub fn set_origin_request_policy_config(mut self, input: ::std::option::Option<crate::types::OriginRequestPolicyConfig>) -> Self {
        self.origin_request_policy_config = input;
        self
    }
    /// <p>The origin request policy configuration.</p>
    pub fn get_origin_request_policy_config(&self) -> &::std::option::Option<crate::types::OriginRequestPolicyConfig> {
        &self.origin_request_policy_config
    }
    /// Consumes the builder and constructs a [`OriginRequestPolicy`](crate::types::OriginRequestPolicy).
    /// This method will fail if any of the following fields are not set:
    /// - [`id`](crate::types::builders::OriginRequestPolicyBuilder::id)
    /// - [`last_modified_time`](crate::types::builders::OriginRequestPolicyBuilder::last_modified_time)
    pub fn build(self) -> ::std::result::Result<crate::types::OriginRequestPolicy, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::OriginRequestPolicy {
            id: self.id.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "id",
                    "id was not specified but it is required when building OriginRequestPolicy",
                )
            })?,
            last_modified_time: self.last_modified_time.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "last_modified_time",
                    "last_modified_time was not specified but it is required when building OriginRequestPolicy",
                )
            })?,
            origin_request_policy_config: self.origin_request_policy_config,
        })
    }
}
