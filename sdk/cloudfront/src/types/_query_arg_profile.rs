// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Query argument-profile mapping for field-level encryption.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct QueryArgProfile {
    /// <p>Query argument for field-level encryption query argument-profile mapping.</p>
    #[doc(hidden)]
    pub query_arg: std::option::Option<std::string::String>,
    /// <p>ID of profile to use for field-level encryption query argument-profile mapping</p>
    #[doc(hidden)]
    pub profile_id: std::option::Option<std::string::String>,
}
impl QueryArgProfile {
    /// <p>Query argument for field-level encryption query argument-profile mapping.</p>
    pub fn query_arg(&self) -> std::option::Option<&str> {
        self.query_arg.as_deref()
    }
    /// <p>ID of profile to use for field-level encryption query argument-profile mapping</p>
    pub fn profile_id(&self) -> std::option::Option<&str> {
        self.profile_id.as_deref()
    }
}
impl QueryArgProfile {
    /// Creates a new builder-style object to manufacture [`QueryArgProfile`](crate::types::QueryArgProfile).
    pub fn builder() -> crate::types::builders::QueryArgProfileBuilder {
        crate::types::builders::QueryArgProfileBuilder::default()
    }
}

/// A builder for [`QueryArgProfile`](crate::types::QueryArgProfile).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct QueryArgProfileBuilder {
    pub(crate) query_arg: std::option::Option<std::string::String>,
    pub(crate) profile_id: std::option::Option<std::string::String>,
}
impl QueryArgProfileBuilder {
    /// <p>Query argument for field-level encryption query argument-profile mapping.</p>
    pub fn query_arg(mut self, input: impl Into<std::string::String>) -> Self {
        self.query_arg = Some(input.into());
        self
    }
    /// <p>Query argument for field-level encryption query argument-profile mapping.</p>
    pub fn set_query_arg(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.query_arg = input;
        self
    }
    /// <p>ID of profile to use for field-level encryption query argument-profile mapping</p>
    pub fn profile_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.profile_id = Some(input.into());
        self
    }
    /// <p>ID of profile to use for field-level encryption query argument-profile mapping</p>
    pub fn set_profile_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.profile_id = input;
        self
    }
    /// Consumes the builder and constructs a [`QueryArgProfile`](crate::types::QueryArgProfile).
    pub fn build(self) -> crate::types::QueryArgProfile {
        crate::types::QueryArgProfile {
            query_arg: self.query_arg,
            profile_id: self.profile_id,
        }
    }
}
