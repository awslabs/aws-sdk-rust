// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A streaming distribution Configuration and a list of tags to be associated with the streaming distribution.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct StreamingDistributionConfigWithTags {
    /// <p>A streaming distribution Configuration.</p>
    pub streaming_distribution_config: ::std::option::Option<crate::types::StreamingDistributionConfig>,
    /// <p>A complex type that contains zero or more <code>Tag</code> elements.</p>
    pub tags: ::std::option::Option<crate::types::Tags>,
}
impl StreamingDistributionConfigWithTags {
    /// <p>A streaming distribution Configuration.</p>
    pub fn streaming_distribution_config(&self) -> ::std::option::Option<&crate::types::StreamingDistributionConfig> {
        self.streaming_distribution_config.as_ref()
    }
    /// <p>A complex type that contains zero or more <code>Tag</code> elements.</p>
    pub fn tags(&self) -> ::std::option::Option<&crate::types::Tags> {
        self.tags.as_ref()
    }
}
impl StreamingDistributionConfigWithTags {
    /// Creates a new builder-style object to manufacture [`StreamingDistributionConfigWithTags`](crate::types::StreamingDistributionConfigWithTags).
    pub fn builder() -> crate::types::builders::StreamingDistributionConfigWithTagsBuilder {
        crate::types::builders::StreamingDistributionConfigWithTagsBuilder::default()
    }
}

/// A builder for [`StreamingDistributionConfigWithTags`](crate::types::StreamingDistributionConfigWithTags).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct StreamingDistributionConfigWithTagsBuilder {
    pub(crate) streaming_distribution_config: ::std::option::Option<crate::types::StreamingDistributionConfig>,
    pub(crate) tags: ::std::option::Option<crate::types::Tags>,
}
impl StreamingDistributionConfigWithTagsBuilder {
    /// <p>A streaming distribution Configuration.</p>
    /// This field is required.
    pub fn streaming_distribution_config(mut self, input: crate::types::StreamingDistributionConfig) -> Self {
        self.streaming_distribution_config = ::std::option::Option::Some(input);
        self
    }
    /// <p>A streaming distribution Configuration.</p>
    pub fn set_streaming_distribution_config(mut self, input: ::std::option::Option<crate::types::StreamingDistributionConfig>) -> Self {
        self.streaming_distribution_config = input;
        self
    }
    /// <p>A streaming distribution Configuration.</p>
    pub fn get_streaming_distribution_config(&self) -> &::std::option::Option<crate::types::StreamingDistributionConfig> {
        &self.streaming_distribution_config
    }
    /// <p>A complex type that contains zero or more <code>Tag</code> elements.</p>
    /// This field is required.
    pub fn tags(mut self, input: crate::types::Tags) -> Self {
        self.tags = ::std::option::Option::Some(input);
        self
    }
    /// <p>A complex type that contains zero or more <code>Tag</code> elements.</p>
    pub fn set_tags(mut self, input: ::std::option::Option<crate::types::Tags>) -> Self {
        self.tags = input;
        self
    }
    /// <p>A complex type that contains zero or more <code>Tag</code> elements.</p>
    pub fn get_tags(&self) -> &::std::option::Option<crate::types::Tags> {
        &self.tags
    }
    /// Consumes the builder and constructs a [`StreamingDistributionConfigWithTags`](crate::types::StreamingDistributionConfigWithTags).
    pub fn build(self) -> crate::types::StreamingDistributionConfigWithTags {
        crate::types::StreamingDistributionConfigWithTags {
            streaming_distribution_config: self.streaming_distribution_config,
            tags: self.tags,
        }
    }
}
