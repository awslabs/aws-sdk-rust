// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct CreateFieldLevelEncryptionProfileOutput {
    /// <p>Returned when you create a new field-level encryption profile.</p>
    #[doc(hidden)]
    pub field_level_encryption_profile:
        std::option::Option<crate::types::FieldLevelEncryptionProfile>,
    /// <p>The fully qualified URI of the new profile resource just created.</p>
    #[doc(hidden)]
    pub location: std::option::Option<std::string::String>,
    /// <p>The current version of the field level encryption profile. For example: <code>E2QWRUHAPOMQZL</code>.</p>
    #[doc(hidden)]
    pub e_tag: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl CreateFieldLevelEncryptionProfileOutput {
    /// <p>Returned when you create a new field-level encryption profile.</p>
    pub fn field_level_encryption_profile(
        &self,
    ) -> std::option::Option<&crate::types::FieldLevelEncryptionProfile> {
        self.field_level_encryption_profile.as_ref()
    }
    /// <p>The fully qualified URI of the new profile resource just created.</p>
    pub fn location(&self) -> std::option::Option<&str> {
        self.location.as_deref()
    }
    /// <p>The current version of the field level encryption profile. For example: <code>E2QWRUHAPOMQZL</code>.</p>
    pub fn e_tag(&self) -> std::option::Option<&str> {
        self.e_tag.as_deref()
    }
}
impl aws_http::request_id::RequestId for CreateFieldLevelEncryptionProfileOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl CreateFieldLevelEncryptionProfileOutput {
    /// Creates a new builder-style object to manufacture [`CreateFieldLevelEncryptionProfileOutput`](crate::operation::create_field_level_encryption_profile::CreateFieldLevelEncryptionProfileOutput).
    pub fn builder() -> crate::operation::create_field_level_encryption_profile::builders::CreateFieldLevelEncryptionProfileOutputBuilder{
        crate::operation::create_field_level_encryption_profile::builders::CreateFieldLevelEncryptionProfileOutputBuilder::default()
    }
}

/// A builder for [`CreateFieldLevelEncryptionProfileOutput`](crate::operation::create_field_level_encryption_profile::CreateFieldLevelEncryptionProfileOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct CreateFieldLevelEncryptionProfileOutputBuilder {
    pub(crate) field_level_encryption_profile:
        std::option::Option<crate::types::FieldLevelEncryptionProfile>,
    pub(crate) location: std::option::Option<std::string::String>,
    pub(crate) e_tag: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl CreateFieldLevelEncryptionProfileOutputBuilder {
    /// <p>Returned when you create a new field-level encryption profile.</p>
    pub fn field_level_encryption_profile(
        mut self,
        input: crate::types::FieldLevelEncryptionProfile,
    ) -> Self {
        self.field_level_encryption_profile = Some(input);
        self
    }
    /// <p>Returned when you create a new field-level encryption profile.</p>
    pub fn set_field_level_encryption_profile(
        mut self,
        input: std::option::Option<crate::types::FieldLevelEncryptionProfile>,
    ) -> Self {
        self.field_level_encryption_profile = input;
        self
    }
    /// <p>The fully qualified URI of the new profile resource just created.</p>
    pub fn location(mut self, input: impl Into<std::string::String>) -> Self {
        self.location = Some(input.into());
        self
    }
    /// <p>The fully qualified URI of the new profile resource just created.</p>
    pub fn set_location(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.location = input;
        self
    }
    /// <p>The current version of the field level encryption profile. For example: <code>E2QWRUHAPOMQZL</code>.</p>
    pub fn e_tag(mut self, input: impl Into<std::string::String>) -> Self {
        self.e_tag = Some(input.into());
        self
    }
    /// <p>The current version of the field level encryption profile. For example: <code>E2QWRUHAPOMQZL</code>.</p>
    pub fn set_e_tag(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.e_tag = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`CreateFieldLevelEncryptionProfileOutput`](crate::operation::create_field_level_encryption_profile::CreateFieldLevelEncryptionProfileOutput).
    pub fn build(self) -> crate::operation::create_field_level_encryption_profile::CreateFieldLevelEncryptionProfileOutput{
        crate::operation::create_field_level_encryption_profile::CreateFieldLevelEncryptionProfileOutput {
            field_level_encryption_profile: self.field_level_encryption_profile
            ,
            location: self.location
            ,
            e_tag: self.e_tag
            ,
            _request_id: self._request_id,
        }
    }
}
