// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GetOriginRequestPolicyOutput {
    /// <p>The origin request policy.</p>
    #[doc(hidden)]
    pub origin_request_policy: std::option::Option<crate::types::OriginRequestPolicy>,
    /// <p>The current version of the origin request policy.</p>
    #[doc(hidden)]
    pub e_tag: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl GetOriginRequestPolicyOutput {
    /// <p>The origin request policy.</p>
    pub fn origin_request_policy(&self) -> std::option::Option<&crate::types::OriginRequestPolicy> {
        self.origin_request_policy.as_ref()
    }
    /// <p>The current version of the origin request policy.</p>
    pub fn e_tag(&self) -> std::option::Option<&str> {
        self.e_tag.as_deref()
    }
}
impl aws_http::request_id::RequestId for GetOriginRequestPolicyOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl GetOriginRequestPolicyOutput {
    /// Creates a new builder-style object to manufacture [`GetOriginRequestPolicyOutput`](crate::operation::get_origin_request_policy::GetOriginRequestPolicyOutput).
    pub fn builder(
    ) -> crate::operation::get_origin_request_policy::builders::GetOriginRequestPolicyOutputBuilder
    {
        crate::operation::get_origin_request_policy::builders::GetOriginRequestPolicyOutputBuilder::default()
    }
}

/// A builder for [`GetOriginRequestPolicyOutput`](crate::operation::get_origin_request_policy::GetOriginRequestPolicyOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct GetOriginRequestPolicyOutputBuilder {
    pub(crate) origin_request_policy: std::option::Option<crate::types::OriginRequestPolicy>,
    pub(crate) e_tag: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl GetOriginRequestPolicyOutputBuilder {
    /// <p>The origin request policy.</p>
    pub fn origin_request_policy(mut self, input: crate::types::OriginRequestPolicy) -> Self {
        self.origin_request_policy = Some(input);
        self
    }
    /// <p>The origin request policy.</p>
    pub fn set_origin_request_policy(
        mut self,
        input: std::option::Option<crate::types::OriginRequestPolicy>,
    ) -> Self {
        self.origin_request_policy = input;
        self
    }
    /// <p>The current version of the origin request policy.</p>
    pub fn e_tag(mut self, input: impl Into<std::string::String>) -> Self {
        self.e_tag = Some(input.into());
        self
    }
    /// <p>The current version of the origin request policy.</p>
    pub fn set_e_tag(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.e_tag = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`GetOriginRequestPolicyOutput`](crate::operation::get_origin_request_policy::GetOriginRequestPolicyOutput).
    pub fn build(
        self,
    ) -> crate::operation::get_origin_request_policy::GetOriginRequestPolicyOutput {
        crate::operation::get_origin_request_policy::GetOriginRequestPolicyOutput {
            origin_request_policy: self.origin_request_policy,
            e_tag: self.e_tag,
            _request_id: self._request_id,
        }
    }
}
