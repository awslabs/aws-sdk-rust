// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DescribeFunctionInput {
    /// <p>The name of the function that you are getting information about.</p>
    #[doc(hidden)]
    pub name: std::option::Option<std::string::String>,
    /// <p>The function's stage, either <code>DEVELOPMENT</code> or <code>LIVE</code>.</p>
    #[doc(hidden)]
    pub stage: std::option::Option<crate::types::FunctionStage>,
}
impl DescribeFunctionInput {
    /// <p>The name of the function that you are getting information about.</p>
    pub fn name(&self) -> std::option::Option<&str> {
        self.name.as_deref()
    }
    /// <p>The function's stage, either <code>DEVELOPMENT</code> or <code>LIVE</code>.</p>
    pub fn stage(&self) -> std::option::Option<&crate::types::FunctionStage> {
        self.stage.as_ref()
    }
}
impl DescribeFunctionInput {
    /// Creates a new builder-style object to manufacture [`DescribeFunctionInput`](crate::operation::describe_function::DescribeFunctionInput).
    pub fn builder() -> crate::operation::describe_function::builders::DescribeFunctionInputBuilder
    {
        crate::operation::describe_function::builders::DescribeFunctionInputBuilder::default()
    }
}

/// A builder for [`DescribeFunctionInput`](crate::operation::describe_function::DescribeFunctionInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DescribeFunctionInputBuilder {
    pub(crate) name: std::option::Option<std::string::String>,
    pub(crate) stage: std::option::Option<crate::types::FunctionStage>,
}
impl DescribeFunctionInputBuilder {
    /// <p>The name of the function that you are getting information about.</p>
    pub fn name(mut self, input: impl Into<std::string::String>) -> Self {
        self.name = Some(input.into());
        self
    }
    /// <p>The name of the function that you are getting information about.</p>
    pub fn set_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>The function's stage, either <code>DEVELOPMENT</code> or <code>LIVE</code>.</p>
    pub fn stage(mut self, input: crate::types::FunctionStage) -> Self {
        self.stage = Some(input);
        self
    }
    /// <p>The function's stage, either <code>DEVELOPMENT</code> or <code>LIVE</code>.</p>
    pub fn set_stage(mut self, input: std::option::Option<crate::types::FunctionStage>) -> Self {
        self.stage = input;
        self
    }
    /// Consumes the builder and constructs a [`DescribeFunctionInput`](crate::operation::describe_function::DescribeFunctionInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::describe_function::DescribeFunctionInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(crate::operation::describe_function::DescribeFunctionInput {
            name: self.name,
            stage: self.stage,
        })
    }
}
