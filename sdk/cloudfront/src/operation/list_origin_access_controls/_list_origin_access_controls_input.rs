// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ListOriginAccessControlsInput {
    /// <p>Use this field when paginating results to indicate where to begin in your list of origin access controls. The response includes the items in the list that occur after the marker. To get the next page of the list, set this field's value to the value of <code>NextMarker</code> from the current page's response.</p>
    #[doc(hidden)]
    pub marker: std::option::Option<std::string::String>,
    /// <p>The maximum number of origin access controls that you want in the response.</p>
    #[doc(hidden)]
    pub max_items: std::option::Option<i32>,
}
impl ListOriginAccessControlsInput {
    /// <p>Use this field when paginating results to indicate where to begin in your list of origin access controls. The response includes the items in the list that occur after the marker. To get the next page of the list, set this field's value to the value of <code>NextMarker</code> from the current page's response.</p>
    pub fn marker(&self) -> std::option::Option<&str> {
        self.marker.as_deref()
    }
    /// <p>The maximum number of origin access controls that you want in the response.</p>
    pub fn max_items(&self) -> std::option::Option<i32> {
        self.max_items
    }
}
impl ListOriginAccessControlsInput {
    /// Creates a new builder-style object to manufacture [`ListOriginAccessControlsInput`](crate::operation::list_origin_access_controls::ListOriginAccessControlsInput).
    pub fn builder(
    ) -> crate::operation::list_origin_access_controls::builders::ListOriginAccessControlsInputBuilder
    {
        crate::operation::list_origin_access_controls::builders::ListOriginAccessControlsInputBuilder::default()
    }
}

/// A builder for [`ListOriginAccessControlsInput`](crate::operation::list_origin_access_controls::ListOriginAccessControlsInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ListOriginAccessControlsInputBuilder {
    pub(crate) marker: std::option::Option<std::string::String>,
    pub(crate) max_items: std::option::Option<i32>,
}
impl ListOriginAccessControlsInputBuilder {
    /// <p>Use this field when paginating results to indicate where to begin in your list of origin access controls. The response includes the items in the list that occur after the marker. To get the next page of the list, set this field's value to the value of <code>NextMarker</code> from the current page's response.</p>
    pub fn marker(mut self, input: impl Into<std::string::String>) -> Self {
        self.marker = Some(input.into());
        self
    }
    /// <p>Use this field when paginating results to indicate where to begin in your list of origin access controls. The response includes the items in the list that occur after the marker. To get the next page of the list, set this field's value to the value of <code>NextMarker</code> from the current page's response.</p>
    pub fn set_marker(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.marker = input;
        self
    }
    /// <p>The maximum number of origin access controls that you want in the response.</p>
    pub fn max_items(mut self, input: i32) -> Self {
        self.max_items = Some(input);
        self
    }
    /// <p>The maximum number of origin access controls that you want in the response.</p>
    pub fn set_max_items(mut self, input: std::option::Option<i32>) -> Self {
        self.max_items = input;
        self
    }
    /// Consumes the builder and constructs a [`ListOriginAccessControlsInput`](crate::operation::list_origin_access_controls::ListOriginAccessControlsInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::list_origin_access_controls::ListOriginAccessControlsInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::list_origin_access_controls::ListOriginAccessControlsInput {
                marker: self.marker,
                max_items: self.max_items,
            },
        )
    }
}
