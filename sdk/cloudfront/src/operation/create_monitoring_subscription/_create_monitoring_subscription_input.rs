// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct CreateMonitoringSubscriptionInput {
    /// <p>The ID of the distribution that you are enabling metrics for.</p>
    #[doc(hidden)]
    pub distribution_id: std::option::Option<std::string::String>,
    /// <p>A monitoring subscription. This structure contains information about whether additional CloudWatch metrics are enabled for a given CloudFront distribution.</p>
    #[doc(hidden)]
    pub monitoring_subscription: std::option::Option<crate::types::MonitoringSubscription>,
}
impl CreateMonitoringSubscriptionInput {
    /// <p>The ID of the distribution that you are enabling metrics for.</p>
    pub fn distribution_id(&self) -> std::option::Option<&str> {
        self.distribution_id.as_deref()
    }
    /// <p>A monitoring subscription. This structure contains information about whether additional CloudWatch metrics are enabled for a given CloudFront distribution.</p>
    pub fn monitoring_subscription(
        &self,
    ) -> std::option::Option<&crate::types::MonitoringSubscription> {
        self.monitoring_subscription.as_ref()
    }
}
impl CreateMonitoringSubscriptionInput {
    /// Creates a new builder-style object to manufacture [`CreateMonitoringSubscriptionInput`](crate::operation::create_monitoring_subscription::CreateMonitoringSubscriptionInput).
    pub fn builder() -> crate::operation::create_monitoring_subscription::builders::CreateMonitoringSubscriptionInputBuilder{
        crate::operation::create_monitoring_subscription::builders::CreateMonitoringSubscriptionInputBuilder::default()
    }
}

/// A builder for [`CreateMonitoringSubscriptionInput`](crate::operation::create_monitoring_subscription::CreateMonitoringSubscriptionInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct CreateMonitoringSubscriptionInputBuilder {
    pub(crate) distribution_id: std::option::Option<std::string::String>,
    pub(crate) monitoring_subscription: std::option::Option<crate::types::MonitoringSubscription>,
}
impl CreateMonitoringSubscriptionInputBuilder {
    /// <p>The ID of the distribution that you are enabling metrics for.</p>
    pub fn distribution_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.distribution_id = Some(input.into());
        self
    }
    /// <p>The ID of the distribution that you are enabling metrics for.</p>
    pub fn set_distribution_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.distribution_id = input;
        self
    }
    /// <p>A monitoring subscription. This structure contains information about whether additional CloudWatch metrics are enabled for a given CloudFront distribution.</p>
    pub fn monitoring_subscription(mut self, input: crate::types::MonitoringSubscription) -> Self {
        self.monitoring_subscription = Some(input);
        self
    }
    /// <p>A monitoring subscription. This structure contains information about whether additional CloudWatch metrics are enabled for a given CloudFront distribution.</p>
    pub fn set_monitoring_subscription(
        mut self,
        input: std::option::Option<crate::types::MonitoringSubscription>,
    ) -> Self {
        self.monitoring_subscription = input;
        self
    }
    /// Consumes the builder and constructs a [`CreateMonitoringSubscriptionInput`](crate::operation::create_monitoring_subscription::CreateMonitoringSubscriptionInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::create_monitoring_subscription::CreateMonitoringSubscriptionInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::create_monitoring_subscription::CreateMonitoringSubscriptionInput {
                distribution_id: self.distribution_id,
                monitoring_subscription: self.monitoring_subscription,
            },
        )
    }
}
