// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The request to create a new distribution.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct CreateDistributionInput {
    /// <p>The distribution's configuration information.</p>
    #[doc(hidden)]
    pub distribution_config: std::option::Option<crate::types::DistributionConfig>,
}
impl CreateDistributionInput {
    /// <p>The distribution's configuration information.</p>
    pub fn distribution_config(&self) -> std::option::Option<&crate::types::DistributionConfig> {
        self.distribution_config.as_ref()
    }
}
impl CreateDistributionInput {
    /// Creates a new builder-style object to manufacture [`CreateDistributionInput`](crate::operation::create_distribution::CreateDistributionInput).
    pub fn builder(
    ) -> crate::operation::create_distribution::builders::CreateDistributionInputBuilder {
        crate::operation::create_distribution::builders::CreateDistributionInputBuilder::default()
    }
}

/// A builder for [`CreateDistributionInput`](crate::operation::create_distribution::CreateDistributionInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct CreateDistributionInputBuilder {
    pub(crate) distribution_config: std::option::Option<crate::types::DistributionConfig>,
}
impl CreateDistributionInputBuilder {
    /// <p>The distribution's configuration information.</p>
    pub fn distribution_config(mut self, input: crate::types::DistributionConfig) -> Self {
        self.distribution_config = Some(input);
        self
    }
    /// <p>The distribution's configuration information.</p>
    pub fn set_distribution_config(
        mut self,
        input: std::option::Option<crate::types::DistributionConfig>,
    ) -> Self {
        self.distribution_config = input;
        self
    }
    /// Consumes the builder and constructs a [`CreateDistributionInput`](crate::operation::create_distribution::CreateDistributionInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::create_distribution::CreateDistributionInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::create_distribution::CreateDistributionInput {
                distribution_config: self.distribution_config,
            },
        )
    }
}
