// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The response to a request to list the distributions that are associated with a specified WAF web ACL.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ListDistributionsByWebAclIdOutput {
    /// <p>The <code>DistributionList</code> type.</p>
    #[doc(hidden)]
    pub distribution_list: std::option::Option<crate::types::DistributionList>,
    _request_id: Option<String>,
}
impl ListDistributionsByWebAclIdOutput {
    /// <p>The <code>DistributionList</code> type.</p>
    pub fn distribution_list(&self) -> std::option::Option<&crate::types::DistributionList> {
        self.distribution_list.as_ref()
    }
}
impl aws_http::request_id::RequestId for ListDistributionsByWebAclIdOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl ListDistributionsByWebAclIdOutput {
    /// Creates a new builder-style object to manufacture [`ListDistributionsByWebAclIdOutput`](crate::operation::list_distributions_by_web_acl_id::ListDistributionsByWebAclIdOutput).
    pub fn builder() -> crate::operation::list_distributions_by_web_acl_id::builders::ListDistributionsByWebAclIdOutputBuilder{
        crate::operation::list_distributions_by_web_acl_id::builders::ListDistributionsByWebAclIdOutputBuilder::default()
    }
}

/// A builder for [`ListDistributionsByWebAclIdOutput`](crate::operation::list_distributions_by_web_acl_id::ListDistributionsByWebAclIdOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ListDistributionsByWebAclIdOutputBuilder {
    pub(crate) distribution_list: std::option::Option<crate::types::DistributionList>,
    _request_id: Option<String>,
}
impl ListDistributionsByWebAclIdOutputBuilder {
    /// <p>The <code>DistributionList</code> type.</p>
    pub fn distribution_list(mut self, input: crate::types::DistributionList) -> Self {
        self.distribution_list = Some(input);
        self
    }
    /// <p>The <code>DistributionList</code> type.</p>
    pub fn set_distribution_list(
        mut self,
        input: std::option::Option<crate::types::DistributionList>,
    ) -> Self {
        self.distribution_list = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`ListDistributionsByWebAclIdOutput`](crate::operation::list_distributions_by_web_acl_id::ListDistributionsByWebAclIdOutput).
    pub fn build(
        self,
    ) -> crate::operation::list_distributions_by_web_acl_id::ListDistributionsByWebAclIdOutput {
        crate::operation::list_distributions_by_web_acl_id::ListDistributionsByWebAclIdOutput {
            distribution_list: self.distribution_list,
            _request_id: self._request_id,
        }
    }
}
