// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq)]
pub struct CreateFunctionInput {
    /// <p>A name to identify the function.</p>
    #[doc(hidden)]
    pub name: std::option::Option<std::string::String>,
    /// <p>Configuration information about the function, including an optional comment and the function's runtime.</p>
    #[doc(hidden)]
    pub function_config: std::option::Option<crate::types::FunctionConfig>,
    /// <p>The function code. For more information about writing a CloudFront function, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/writing-function-code.html">Writing function code for CloudFront Functions</a> in the <i>Amazon CloudFront Developer Guide</i>.</p>
    #[doc(hidden)]
    pub function_code: std::option::Option<aws_smithy_types::Blob>,
}
impl CreateFunctionInput {
    /// <p>A name to identify the function.</p>
    pub fn name(&self) -> std::option::Option<&str> {
        self.name.as_deref()
    }
    /// <p>Configuration information about the function, including an optional comment and the function's runtime.</p>
    pub fn function_config(&self) -> std::option::Option<&crate::types::FunctionConfig> {
        self.function_config.as_ref()
    }
    /// <p>The function code. For more information about writing a CloudFront function, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/writing-function-code.html">Writing function code for CloudFront Functions</a> in the <i>Amazon CloudFront Developer Guide</i>.</p>
    pub fn function_code(&self) -> std::option::Option<&aws_smithy_types::Blob> {
        self.function_code.as_ref()
    }
}
impl std::fmt::Debug for CreateFunctionInput {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        let mut formatter = f.debug_struct("CreateFunctionInput");
        formatter.field("name", &self.name);
        formatter.field("function_config", &self.function_config);
        formatter.field("function_code", &"*** Sensitive Data Redacted ***");
        formatter.finish()
    }
}
impl CreateFunctionInput {
    /// Creates a new builder-style object to manufacture [`CreateFunctionInput`](crate::operation::create_function::CreateFunctionInput).
    pub fn builder() -> crate::operation::create_function::builders::CreateFunctionInputBuilder {
        crate::operation::create_function::builders::CreateFunctionInputBuilder::default()
    }
}

/// A builder for [`CreateFunctionInput`](crate::operation::create_function::CreateFunctionInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default)]
pub struct CreateFunctionInputBuilder {
    pub(crate) name: std::option::Option<std::string::String>,
    pub(crate) function_config: std::option::Option<crate::types::FunctionConfig>,
    pub(crate) function_code: std::option::Option<aws_smithy_types::Blob>,
}
impl CreateFunctionInputBuilder {
    /// <p>A name to identify the function.</p>
    pub fn name(mut self, input: impl Into<std::string::String>) -> Self {
        self.name = Some(input.into());
        self
    }
    /// <p>A name to identify the function.</p>
    pub fn set_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>Configuration information about the function, including an optional comment and the function's runtime.</p>
    pub fn function_config(mut self, input: crate::types::FunctionConfig) -> Self {
        self.function_config = Some(input);
        self
    }
    /// <p>Configuration information about the function, including an optional comment and the function's runtime.</p>
    pub fn set_function_config(
        mut self,
        input: std::option::Option<crate::types::FunctionConfig>,
    ) -> Self {
        self.function_config = input;
        self
    }
    /// <p>The function code. For more information about writing a CloudFront function, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/writing-function-code.html">Writing function code for CloudFront Functions</a> in the <i>Amazon CloudFront Developer Guide</i>.</p>
    pub fn function_code(mut self, input: aws_smithy_types::Blob) -> Self {
        self.function_code = Some(input);
        self
    }
    /// <p>The function code. For more information about writing a CloudFront function, see <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/writing-function-code.html">Writing function code for CloudFront Functions</a> in the <i>Amazon CloudFront Developer Guide</i>.</p>
    pub fn set_function_code(mut self, input: std::option::Option<aws_smithy_types::Blob>) -> Self {
        self.function_code = input;
        self
    }
    /// Consumes the builder and constructs a [`CreateFunctionInput`](crate::operation::create_function::CreateFunctionInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::create_function::CreateFunctionInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(crate::operation::create_function::CreateFunctionInput {
            name: self.name,
            function_config: self.function_config,
            function_code: self.function_code,
        })
    }
}
impl std::fmt::Debug for CreateFunctionInputBuilder {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        let mut formatter = f.debug_struct("CreateFunctionInputBuilder");
        formatter.field("name", &self.name);
        formatter.field("function_config", &self.function_config);
        formatter.field("function_code", &"*** Sensitive Data Redacted ***");
        formatter.finish()
    }
}
