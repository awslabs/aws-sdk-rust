// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GetFieldLevelEncryptionConfigOutput {
    /// <p>Return the field-level encryption configuration information.</p>
    #[doc(hidden)]
    pub field_level_encryption_config:
        std::option::Option<crate::types::FieldLevelEncryptionConfig>,
    /// <p>The current version of the field level encryption configuration. For example: <code>E2QWRUHAPOMQZL</code>.</p>
    #[doc(hidden)]
    pub e_tag: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl GetFieldLevelEncryptionConfigOutput {
    /// <p>Return the field-level encryption configuration information.</p>
    pub fn field_level_encryption_config(
        &self,
    ) -> std::option::Option<&crate::types::FieldLevelEncryptionConfig> {
        self.field_level_encryption_config.as_ref()
    }
    /// <p>The current version of the field level encryption configuration. For example: <code>E2QWRUHAPOMQZL</code>.</p>
    pub fn e_tag(&self) -> std::option::Option<&str> {
        self.e_tag.as_deref()
    }
}
impl aws_http::request_id::RequestId for GetFieldLevelEncryptionConfigOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl GetFieldLevelEncryptionConfigOutput {
    /// Creates a new builder-style object to manufacture [`GetFieldLevelEncryptionConfigOutput`](crate::operation::get_field_level_encryption_config::GetFieldLevelEncryptionConfigOutput).
    pub fn builder() -> crate::operation::get_field_level_encryption_config::builders::GetFieldLevelEncryptionConfigOutputBuilder{
        crate::operation::get_field_level_encryption_config::builders::GetFieldLevelEncryptionConfigOutputBuilder::default()
    }
}

/// A builder for [`GetFieldLevelEncryptionConfigOutput`](crate::operation::get_field_level_encryption_config::GetFieldLevelEncryptionConfigOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct GetFieldLevelEncryptionConfigOutputBuilder {
    pub(crate) field_level_encryption_config:
        std::option::Option<crate::types::FieldLevelEncryptionConfig>,
    pub(crate) e_tag: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl GetFieldLevelEncryptionConfigOutputBuilder {
    /// <p>Return the field-level encryption configuration information.</p>
    pub fn field_level_encryption_config(
        mut self,
        input: crate::types::FieldLevelEncryptionConfig,
    ) -> Self {
        self.field_level_encryption_config = Some(input);
        self
    }
    /// <p>Return the field-level encryption configuration information.</p>
    pub fn set_field_level_encryption_config(
        mut self,
        input: std::option::Option<crate::types::FieldLevelEncryptionConfig>,
    ) -> Self {
        self.field_level_encryption_config = input;
        self
    }
    /// <p>The current version of the field level encryption configuration. For example: <code>E2QWRUHAPOMQZL</code>.</p>
    pub fn e_tag(mut self, input: impl Into<std::string::String>) -> Self {
        self.e_tag = Some(input.into());
        self
    }
    /// <p>The current version of the field level encryption configuration. For example: <code>E2QWRUHAPOMQZL</code>.</p>
    pub fn set_e_tag(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.e_tag = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`GetFieldLevelEncryptionConfigOutput`](crate::operation::get_field_level_encryption_config::GetFieldLevelEncryptionConfigOutput).
    pub fn build(
        self,
    ) -> crate::operation::get_field_level_encryption_config::GetFieldLevelEncryptionConfigOutput
    {
        crate::operation::get_field_level_encryption_config::GetFieldLevelEncryptionConfigOutput {
            field_level_encryption_config: self.field_level_encryption_config,
            e_tag: self.e_tag,
            _request_id: self._request_id,
        }
    }
}
