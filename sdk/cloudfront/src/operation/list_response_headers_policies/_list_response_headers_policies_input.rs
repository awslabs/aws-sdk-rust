// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ListResponseHeadersPoliciesInput {
    /// <p>A filter to get only the specified kind of response headers policies. Valid values are:</p>
    /// <ul>
    /// <li> <p> <code>managed</code> – Gets only the managed policies created by Amazon Web Services.</p> </li>
    /// <li> <p> <code>custom</code> – Gets only the custom policies created in your Amazon Web Services account.</p> </li>
    /// </ul>
    pub r#type: ::std::option::Option<crate::types::ResponseHeadersPolicyType>,
    /// <p>Use this field when paginating results to indicate where to begin in your list of response headers policies. The response includes response headers policies in the list that occur after the marker. To get the next page of the list, set this field's value to the value of <code>NextMarker</code> from the current page's response.</p>
    pub marker: ::std::option::Option<::std::string::String>,
    /// <p>The maximum number of response headers policies that you want to get in the response.</p>
    pub max_items: ::std::option::Option<i32>,
}
impl ListResponseHeadersPoliciesInput {
    /// <p>A filter to get only the specified kind of response headers policies. Valid values are:</p>
    /// <ul>
    /// <li> <p> <code>managed</code> – Gets only the managed policies created by Amazon Web Services.</p> </li>
    /// <li> <p> <code>custom</code> – Gets only the custom policies created in your Amazon Web Services account.</p> </li>
    /// </ul>
    pub fn r#type(&self) -> ::std::option::Option<&crate::types::ResponseHeadersPolicyType> {
        self.r#type.as_ref()
    }
    /// <p>Use this field when paginating results to indicate where to begin in your list of response headers policies. The response includes response headers policies in the list that occur after the marker. To get the next page of the list, set this field's value to the value of <code>NextMarker</code> from the current page's response.</p>
    pub fn marker(&self) -> ::std::option::Option<&str> {
        self.marker.as_deref()
    }
    /// <p>The maximum number of response headers policies that you want to get in the response.</p>
    pub fn max_items(&self) -> ::std::option::Option<i32> {
        self.max_items
    }
}
impl ListResponseHeadersPoliciesInput {
    /// Creates a new builder-style object to manufacture [`ListResponseHeadersPoliciesInput`](crate::operation::list_response_headers_policies::ListResponseHeadersPoliciesInput).
    pub fn builder() -> crate::operation::list_response_headers_policies::builders::ListResponseHeadersPoliciesInputBuilder {
        crate::operation::list_response_headers_policies::builders::ListResponseHeadersPoliciesInputBuilder::default()
    }
}

/// A builder for [`ListResponseHeadersPoliciesInput`](crate::operation::list_response_headers_policies::ListResponseHeadersPoliciesInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ListResponseHeadersPoliciesInputBuilder {
    pub(crate) r#type: ::std::option::Option<crate::types::ResponseHeadersPolicyType>,
    pub(crate) marker: ::std::option::Option<::std::string::String>,
    pub(crate) max_items: ::std::option::Option<i32>,
}
impl ListResponseHeadersPoliciesInputBuilder {
    /// <p>A filter to get only the specified kind of response headers policies. Valid values are:</p>
    /// <ul>
    /// <li> <p> <code>managed</code> – Gets only the managed policies created by Amazon Web Services.</p> </li>
    /// <li> <p> <code>custom</code> – Gets only the custom policies created in your Amazon Web Services account.</p> </li>
    /// </ul>
    pub fn r#type(mut self, input: crate::types::ResponseHeadersPolicyType) -> Self {
        self.r#type = ::std::option::Option::Some(input);
        self
    }
    /// <p>A filter to get only the specified kind of response headers policies. Valid values are:</p>
    /// <ul>
    /// <li> <p> <code>managed</code> – Gets only the managed policies created by Amazon Web Services.</p> </li>
    /// <li> <p> <code>custom</code> – Gets only the custom policies created in your Amazon Web Services account.</p> </li>
    /// </ul>
    pub fn set_type(mut self, input: ::std::option::Option<crate::types::ResponseHeadersPolicyType>) -> Self {
        self.r#type = input;
        self
    }
    /// <p>A filter to get only the specified kind of response headers policies. Valid values are:</p>
    /// <ul>
    /// <li> <p> <code>managed</code> – Gets only the managed policies created by Amazon Web Services.</p> </li>
    /// <li> <p> <code>custom</code> – Gets only the custom policies created in your Amazon Web Services account.</p> </li>
    /// </ul>
    pub fn get_type(&self) -> &::std::option::Option<crate::types::ResponseHeadersPolicyType> {
        &self.r#type
    }
    /// <p>Use this field when paginating results to indicate where to begin in your list of response headers policies. The response includes response headers policies in the list that occur after the marker. To get the next page of the list, set this field's value to the value of <code>NextMarker</code> from the current page's response.</p>
    pub fn marker(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.marker = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Use this field when paginating results to indicate where to begin in your list of response headers policies. The response includes response headers policies in the list that occur after the marker. To get the next page of the list, set this field's value to the value of <code>NextMarker</code> from the current page's response.</p>
    pub fn set_marker(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.marker = input;
        self
    }
    /// <p>Use this field when paginating results to indicate where to begin in your list of response headers policies. The response includes response headers policies in the list that occur after the marker. To get the next page of the list, set this field's value to the value of <code>NextMarker</code> from the current page's response.</p>
    pub fn get_marker(&self) -> &::std::option::Option<::std::string::String> {
        &self.marker
    }
    /// <p>The maximum number of response headers policies that you want to get in the response.</p>
    pub fn max_items(mut self, input: i32) -> Self {
        self.max_items = ::std::option::Option::Some(input);
        self
    }
    /// <p>The maximum number of response headers policies that you want to get in the response.</p>
    pub fn set_max_items(mut self, input: ::std::option::Option<i32>) -> Self {
        self.max_items = input;
        self
    }
    /// <p>The maximum number of response headers policies that you want to get in the response.</p>
    pub fn get_max_items(&self) -> &::std::option::Option<i32> {
        &self.max_items
    }
    /// Consumes the builder and constructs a [`ListResponseHeadersPoliciesInput`](crate::operation::list_response_headers_policies::ListResponseHeadersPoliciesInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::list_response_headers_policies::ListResponseHeadersPoliciesInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::list_response_headers_policies::ListResponseHeadersPoliciesInput {
            r#type: self.r#type,
            marker: self.marker,
            max_items: self.max_items,
        })
    }
}
