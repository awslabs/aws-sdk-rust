// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The request to create a new streaming distribution.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct CreateStreamingDistributionInput {
    /// <p>The streaming distribution's configuration information.</p>
    #[doc(hidden)]
    pub streaming_distribution_config:
        std::option::Option<crate::types::StreamingDistributionConfig>,
}
impl CreateStreamingDistributionInput {
    /// <p>The streaming distribution's configuration information.</p>
    pub fn streaming_distribution_config(
        &self,
    ) -> std::option::Option<&crate::types::StreamingDistributionConfig> {
        self.streaming_distribution_config.as_ref()
    }
}
impl CreateStreamingDistributionInput {
    /// Creates a new builder-style object to manufacture [`CreateStreamingDistributionInput`](crate::operation::create_streaming_distribution::CreateStreamingDistributionInput).
    pub fn builder() -> crate::operation::create_streaming_distribution::builders::CreateStreamingDistributionInputBuilder{
        crate::operation::create_streaming_distribution::builders::CreateStreamingDistributionInputBuilder::default()
    }
}

/// A builder for [`CreateStreamingDistributionInput`](crate::operation::create_streaming_distribution::CreateStreamingDistributionInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct CreateStreamingDistributionInputBuilder {
    pub(crate) streaming_distribution_config:
        std::option::Option<crate::types::StreamingDistributionConfig>,
}
impl CreateStreamingDistributionInputBuilder {
    /// <p>The streaming distribution's configuration information.</p>
    pub fn streaming_distribution_config(
        mut self,
        input: crate::types::StreamingDistributionConfig,
    ) -> Self {
        self.streaming_distribution_config = Some(input);
        self
    }
    /// <p>The streaming distribution's configuration information.</p>
    pub fn set_streaming_distribution_config(
        mut self,
        input: std::option::Option<crate::types::StreamingDistributionConfig>,
    ) -> Self {
        self.streaming_distribution_config = input;
        self
    }
    /// Consumes the builder and constructs a [`CreateStreamingDistributionInput`](crate::operation::create_streaming_distribution::CreateStreamingDistributionInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::create_streaming_distribution::CreateStreamingDistributionInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::create_streaming_distribution::CreateStreamingDistributionInput {
                streaming_distribution_config: self.streaming_distribution_config,
            },
        )
    }
}
