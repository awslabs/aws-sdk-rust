// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The request to remove tags from a CloudFront resource.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct UntagResourceInput {
    /// <p>An ARN of a CloudFront resource.</p>
    #[doc(hidden)]
    pub resource: std::option::Option<std::string::String>,
    /// <p>A complex type that contains zero or more <code>Tag</code> key elements.</p>
    #[doc(hidden)]
    pub tag_keys: std::option::Option<crate::types::TagKeys>,
}
impl UntagResourceInput {
    /// <p>An ARN of a CloudFront resource.</p>
    pub fn resource(&self) -> std::option::Option<&str> {
        self.resource.as_deref()
    }
    /// <p>A complex type that contains zero or more <code>Tag</code> key elements.</p>
    pub fn tag_keys(&self) -> std::option::Option<&crate::types::TagKeys> {
        self.tag_keys.as_ref()
    }
}
impl UntagResourceInput {
    /// Creates a new builder-style object to manufacture [`UntagResourceInput`](crate::operation::untag_resource::UntagResourceInput).
    pub fn builder() -> crate::operation::untag_resource::builders::UntagResourceInputBuilder {
        crate::operation::untag_resource::builders::UntagResourceInputBuilder::default()
    }
}

/// A builder for [`UntagResourceInput`](crate::operation::untag_resource::UntagResourceInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct UntagResourceInputBuilder {
    pub(crate) resource: std::option::Option<std::string::String>,
    pub(crate) tag_keys: std::option::Option<crate::types::TagKeys>,
}
impl UntagResourceInputBuilder {
    /// <p>An ARN of a CloudFront resource.</p>
    pub fn resource(mut self, input: impl Into<std::string::String>) -> Self {
        self.resource = Some(input.into());
        self
    }
    /// <p>An ARN of a CloudFront resource.</p>
    pub fn set_resource(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.resource = input;
        self
    }
    /// <p>A complex type that contains zero or more <code>Tag</code> key elements.</p>
    pub fn tag_keys(mut self, input: crate::types::TagKeys) -> Self {
        self.tag_keys = Some(input);
        self
    }
    /// <p>A complex type that contains zero or more <code>Tag</code> key elements.</p>
    pub fn set_tag_keys(mut self, input: std::option::Option<crate::types::TagKeys>) -> Self {
        self.tag_keys = input;
        self
    }
    /// Consumes the builder and constructs a [`UntagResourceInput`](crate::operation::untag_resource::UntagResourceInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::untag_resource::UntagResourceInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(crate::operation::untag_resource::UntagResourceInput {
            resource: self.resource,
            tag_keys: self.tag_keys,
        })
    }
}
