// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
/// Operation shape for `JoinStorageSession`.
///
/// This is usually constructed for you using the the fluent builder returned by
/// [`join_storage_session`](crate::client::Client::join_storage_session).
///
/// `ParseStrictResponse` impl for `JoinStorageSession`.
#[derive(std::clone::Clone, std::default::Default, std::fmt::Debug)]
pub struct JoinStorageSession {
    _private: (),
}
impl JoinStorageSession {
    /// Creates a new builder-style object to manufacture [`JoinStorageSessionInput`](crate::input::JoinStorageSessionInput).
    pub fn builder() -> crate::input::join_storage_session_input::Builder {
        crate::input::join_storage_session_input::Builder::default()
    }
    /// Creates a new `JoinStorageSession` operation.
    pub fn new() -> Self {
        Self { _private: () }
    }
}
impl aws_smithy_http::response::ParseStrictResponse for JoinStorageSession {
    type Output = std::result::Result<
        crate::output::JoinStorageSessionOutput,
        crate::error::JoinStorageSessionError,
    >;
    fn parse(&self, response: &http::Response<bytes::Bytes>) -> Self::Output {
        tracing::debug!(request_id = ?aws_http::request_id::RequestId::request_id(response));
        if !response.status().is_success() && response.status().as_u16() != 200 {
            crate::operation_deser::parse_join_storage_session_error(response)
        } else {
            crate::operation_deser::parse_join_storage_session_response(response)
        }
    }
}

/// Operation customization and supporting types
pub mod customize;
