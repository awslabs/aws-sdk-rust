// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeWorldTemplate`](crate::client::fluent_builders::DescribeWorldTemplate) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`template(impl Into<String>)`](crate::client::fluent_builders::DescribeWorldTemplate::template) / [`set_template(Option<String>)`](crate::client::fluent_builders::DescribeWorldTemplate::set_template): <p>The Amazon Resource Name (arn) of the world template you want to describe.</p>
    /// - On success, responds with [`DescribeWorldTemplateOutput`](crate::output::DescribeWorldTemplateOutput) with field(s):
    ///   - [`arn(Option<String>)`](crate::output::DescribeWorldTemplateOutput::arn): <p>The Amazon Resource Name (ARN) of the world template.</p>
    ///   - [`client_request_token(Option<String>)`](crate::output::DescribeWorldTemplateOutput::client_request_token): <p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.</p>
    ///   - [`name(Option<String>)`](crate::output::DescribeWorldTemplateOutput::name): <p>The name of the world template.</p>
    ///   - [`created_at(Option<DateTime>)`](crate::output::DescribeWorldTemplateOutput::created_at): <p>The time, in milliseconds since the epoch, when the world template was created.</p>
    ///   - [`last_updated_at(Option<DateTime>)`](crate::output::DescribeWorldTemplateOutput::last_updated_at): <p>The time, in milliseconds since the epoch, when the world template was last updated.</p>
    ///   - [`tags(Option<HashMap<String, String>>)`](crate::output::DescribeWorldTemplateOutput::tags): <p>A map that contains tag keys and tag values that are attached to the world template.</p>
    ///   - [`version(Option<String>)`](crate::output::DescribeWorldTemplateOutput::version): <p>The version of the world template that you're using.</p>
    /// - On failure, responds with [`SdkError<DescribeWorldTemplateError>`](crate::error::DescribeWorldTemplateError)
    pub fn describe_world_template(&self) -> crate::client::fluent_builders::DescribeWorldTemplate {
        crate::client::fluent_builders::DescribeWorldTemplate::new(self.handle.clone())
    }
}
