// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateWorldGenerationJob`](crate::client::fluent_builders::CreateWorldGenerationJob) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`client_request_token(impl Into<String>)`](crate::client::fluent_builders::CreateWorldGenerationJob::client_request_token) / [`set_client_request_token(Option<String>)`](crate::client::fluent_builders::CreateWorldGenerationJob::set_client_request_token): <p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.</p>
    ///   - [`template(impl Into<String>)`](crate::client::fluent_builders::CreateWorldGenerationJob::template) / [`set_template(Option<String>)`](crate::client::fluent_builders::CreateWorldGenerationJob::set_template): <p>The Amazon Resource Name (arn) of the world template describing the worlds you want to create.</p>
    ///   - [`world_count(WorldCount)`](crate::client::fluent_builders::CreateWorldGenerationJob::world_count) / [`set_world_count(Option<WorldCount>)`](crate::client::fluent_builders::CreateWorldGenerationJob::set_world_count): <p>Information about the world count.</p>
    ///   - [`tags(HashMap<String, String>)`](crate::client::fluent_builders::CreateWorldGenerationJob::tags) / [`set_tags(Option<HashMap<String, String>>)`](crate::client::fluent_builders::CreateWorldGenerationJob::set_tags): <p>A map that contains tag keys and tag values that are attached to the world generator job.</p>
    ///   - [`world_tags(HashMap<String, String>)`](crate::client::fluent_builders::CreateWorldGenerationJob::world_tags) / [`set_world_tags(Option<HashMap<String, String>>)`](crate::client::fluent_builders::CreateWorldGenerationJob::set_world_tags): <p>A map that contains tag keys and tag values that are attached to the generated worlds.</p>
    /// - On success, responds with [`CreateWorldGenerationJobOutput`](crate::output::CreateWorldGenerationJobOutput) with field(s):
    ///   - [`arn(Option<String>)`](crate::output::CreateWorldGenerationJobOutput::arn): <p>The Amazon Resource Name (ARN) of the world generator job.</p>
    ///   - [`status(Option<WorldGenerationJobStatus>)`](crate::output::CreateWorldGenerationJobOutput::status): <p>The status of the world generator job.</p>  <dl>   <dt>   Pending  </dt>   <dd>    <p>The world generator job request is pending.</p>   </dd>   <dt>   Running  </dt>   <dd>    <p>The world generator job is running. </p>   </dd>   <dt>   Completed  </dt>   <dd>    <p>The world generator job completed. </p>   </dd>   <dt>   Failed  </dt>   <dd>    <p>The world generator job failed. See <code>failureCode</code> for more information. </p>   </dd>   <dt>   PartialFailed  </dt>   <dd>    <p>Some worlds did not generate.</p>   </dd>   <dt>   Canceled  </dt>   <dd>    <p>The world generator job was cancelled.</p>   </dd>   <dt>   Canceling  </dt>   <dd>    <p>The world generator job is being cancelled.</p>   </dd>  </dl>
    ///   - [`created_at(Option<DateTime>)`](crate::output::CreateWorldGenerationJobOutput::created_at): <p>The time, in milliseconds since the epoch, when the world generator job was created.</p>
    ///   - [`failure_code(Option<WorldGenerationJobErrorCode>)`](crate::output::CreateWorldGenerationJobOutput::failure_code): <p>The failure code of the world generator job if it failed:</p>  <dl>   <dt>   InternalServiceError  </dt>   <dd>    <p>Internal service error.</p>   </dd>   <dt>   LimitExceeded  </dt>   <dd>    <p>The requested resource exceeds the maximum number allowed, or the number of concurrent stream requests exceeds the maximum number allowed. </p>   </dd>   <dt>   ResourceNotFound  </dt>   <dd>    <p>The specified resource could not be found. </p>   </dd>   <dt>   RequestThrottled  </dt>   <dd>    <p>The request was throttled.</p>   </dd>   <dt>   InvalidInput  </dt>   <dd>    <p>An input parameter in the request is not valid.</p>   </dd>  </dl>
    ///   - [`client_request_token(Option<String>)`](crate::output::CreateWorldGenerationJobOutput::client_request_token): <p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.</p>
    ///   - [`template(Option<String>)`](crate::output::CreateWorldGenerationJobOutput::template): <p>The Amazon Resource Name (arn) of the world template.</p>
    ///   - [`world_count(Option<WorldCount>)`](crate::output::CreateWorldGenerationJobOutput::world_count): <p>Information about the world count. </p>
    ///   - [`tags(Option<HashMap<String, String>>)`](crate::output::CreateWorldGenerationJobOutput::tags): <p>A map that contains tag keys and tag values that are attached to the world generator job.</p>
    ///   - [`world_tags(Option<HashMap<String, String>>)`](crate::output::CreateWorldGenerationJobOutput::world_tags): <p>A map that contains tag keys and tag values that are attached to the generated worlds.</p>
    /// - On failure, responds with [`SdkError<CreateWorldGenerationJobError>`](crate::error::CreateWorldGenerationJobError)
    pub fn create_world_generation_job(
        &self,
    ) -> crate::client::fluent_builders::CreateWorldGenerationJob {
        crate::client::fluent_builders::CreateWorldGenerationJob::new(self.handle.clone())
    }
}
