// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListWorlds`](crate::operation::list_worlds::builders::ListWorldsFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::list_worlds::builders::ListWorldsFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`next_token(impl Into<String>)`](crate::operation::list_worlds::builders::ListWorldsFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::list_worlds::builders::ListWorldsFluentBuilder::set_next_token):<br>required: **false**<br><p>If the previous paginated request did not return all of the remaining results, the response object's <code>nextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListWorlds</code> again and assign that token to the request object's <code>nextToken</code> parameter. If there are no remaining results, the previous response object's NextToken parameter is set to null. </p><br>
    ///   - [`max_results(i32)`](crate::operation::list_worlds::builders::ListWorldsFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::list_worlds::builders::ListWorldsFluentBuilder::set_max_results):<br>required: **false**<br><p>When this parameter is used, <code>ListWorlds</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListWorlds</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If this parameter is not used, then <code>ListWorlds</code> returns up to 100 results and a <code>nextToken</code> value if applicable. </p><br>
    ///   - [`filters(Filter)`](crate::operation::list_worlds::builders::ListWorldsFluentBuilder::filters) / [`set_filters(Option<Vec::<Filter>>)`](crate::operation::list_worlds::builders::ListWorldsFluentBuilder::set_filters):<br>required: **false**<br><p>Optional filters to limit results. You can use <code>status</code>.</p><br>
    /// - On success, responds with [`ListWorldsOutput`](crate::operation::list_worlds::ListWorldsOutput) with field(s):
    ///   - [`world_summaries(Option<Vec::<WorldSummary>>)`](crate::operation::list_worlds::ListWorldsOutput::world_summaries): <p>Summary information for worlds.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::list_worlds::ListWorldsOutput::next_token): <p>If the previous paginated request did not return all of the remaining results, the response object's <code>nextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListWorlds</code> again and assign that token to the request object's <code>nextToken</code> parameter. If there are no remaining results, the previous response object's NextToken parameter is set to null. </p>
    /// - On failure, responds with [`SdkError<ListWorldsError>`](crate::operation::list_worlds::ListWorldsError)
    pub fn list_worlds(&self) -> crate::operation::list_worlds::builders::ListWorldsFluentBuilder {
        crate::operation::list_worlds::builders::ListWorldsFluentBuilder::new(self.handle.clone())
    }
}
