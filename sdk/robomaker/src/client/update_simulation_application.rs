// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateSimulationApplication`](crate::operation::update_simulation_application::builders::UpdateSimulationApplicationFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application(impl Into<String>)`](crate::operation::update_simulation_application::builders::UpdateSimulationApplicationFluentBuilder::application) / [`set_application(Option<String>)`](crate::operation::update_simulation_application::builders::UpdateSimulationApplicationFluentBuilder::set_application): <p>The application information for the simulation application.</p>
    ///   - [`sources(Vec<SourceConfig>)`](crate::operation::update_simulation_application::builders::UpdateSimulationApplicationFluentBuilder::sources) / [`set_sources(Option<Vec<SourceConfig>>)`](crate::operation::update_simulation_application::builders::UpdateSimulationApplicationFluentBuilder::set_sources): <p>The sources of the simulation application.</p>
    ///   - [`simulation_software_suite(SimulationSoftwareSuite)`](crate::operation::update_simulation_application::builders::UpdateSimulationApplicationFluentBuilder::simulation_software_suite) / [`set_simulation_software_suite(Option<SimulationSoftwareSuite>)`](crate::operation::update_simulation_application::builders::UpdateSimulationApplicationFluentBuilder::set_simulation_software_suite): <p>The simulation software suite used by the simulation application.</p>
    ///   - [`robot_software_suite(RobotSoftwareSuite)`](crate::operation::update_simulation_application::builders::UpdateSimulationApplicationFluentBuilder::robot_software_suite) / [`set_robot_software_suite(Option<RobotSoftwareSuite>)`](crate::operation::update_simulation_application::builders::UpdateSimulationApplicationFluentBuilder::set_robot_software_suite): <p>Information about the robot software suite (ROS distribution).</p>
    ///   - [`rendering_engine(RenderingEngine)`](crate::operation::update_simulation_application::builders::UpdateSimulationApplicationFluentBuilder::rendering_engine) / [`set_rendering_engine(Option<RenderingEngine>)`](crate::operation::update_simulation_application::builders::UpdateSimulationApplicationFluentBuilder::set_rendering_engine): <p>The rendering engine for the simulation application.</p>
    ///   - [`current_revision_id(impl Into<String>)`](crate::operation::update_simulation_application::builders::UpdateSimulationApplicationFluentBuilder::current_revision_id) / [`set_current_revision_id(Option<String>)`](crate::operation::update_simulation_application::builders::UpdateSimulationApplicationFluentBuilder::set_current_revision_id): <p>The revision id for the robot application.</p>
    ///   - [`environment(Environment)`](crate::operation::update_simulation_application::builders::UpdateSimulationApplicationFluentBuilder::environment) / [`set_environment(Option<Environment>)`](crate::operation::update_simulation_application::builders::UpdateSimulationApplicationFluentBuilder::set_environment): <p>The object that contains the Docker image URI for your simulation application.</p>
    /// - On success, responds with [`UpdateSimulationApplicationOutput`](crate::operation::update_simulation_application::UpdateSimulationApplicationOutput) with field(s):
    ///   - [`arn(Option<String>)`](crate::operation::update_simulation_application::UpdateSimulationApplicationOutput::arn): <p>The Amazon Resource Name (ARN) of the updated simulation application.</p>
    ///   - [`name(Option<String>)`](crate::operation::update_simulation_application::UpdateSimulationApplicationOutput::name): <p>The name of the simulation application.</p>
    ///   - [`version(Option<String>)`](crate::operation::update_simulation_application::UpdateSimulationApplicationOutput::version): <p>The version of the robot application.</p>
    ///   - [`sources(Option<Vec<Source>>)`](crate::operation::update_simulation_application::UpdateSimulationApplicationOutput::sources): <p>The sources of the simulation application.</p>
    ///   - [`simulation_software_suite(Option<SimulationSoftwareSuite>)`](crate::operation::update_simulation_application::UpdateSimulationApplicationOutput::simulation_software_suite): <p>The simulation software suite used by the simulation application.</p>
    ///   - [`robot_software_suite(Option<RobotSoftwareSuite>)`](crate::operation::update_simulation_application::UpdateSimulationApplicationOutput::robot_software_suite): <p>Information about the robot software suite (ROS distribution).</p>
    ///   - [`rendering_engine(Option<RenderingEngine>)`](crate::operation::update_simulation_application::UpdateSimulationApplicationOutput::rendering_engine): <p>The rendering engine for the simulation application.</p>
    ///   - [`last_updated_at(Option<DateTime>)`](crate::operation::update_simulation_application::UpdateSimulationApplicationOutput::last_updated_at): <p>The time, in milliseconds since the epoch, when the simulation application was last updated.</p>
    ///   - [`revision_id(Option<String>)`](crate::operation::update_simulation_application::UpdateSimulationApplicationOutput::revision_id): <p>The revision id of the simulation application.</p>
    ///   - [`environment(Option<Environment>)`](crate::operation::update_simulation_application::UpdateSimulationApplicationOutput::environment): <p>The object that contains the Docker image URI used for your simulation application.</p>
    /// - On failure, responds with [`SdkError<UpdateSimulationApplicationError>`](crate::operation::update_simulation_application::UpdateSimulationApplicationError)
    pub fn update_simulation_application(&self) -> crate::operation::update_simulation_application::builders::UpdateSimulationApplicationFluentBuilder{
        crate::operation::update_simulation_application::builders::UpdateSimulationApplicationFluentBuilder::new(self.handle.clone())
    }
}
