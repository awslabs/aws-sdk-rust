// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeWorldGenerationJob`](crate::client::fluent_builders::DescribeWorldGenerationJob) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`job(impl Into<String>)`](crate::client::fluent_builders::DescribeWorldGenerationJob::job) / [`set_job(Option<String>)`](crate::client::fluent_builders::DescribeWorldGenerationJob::set_job): <p>The Amazon Resource Name (arn) of the world generation job to describe.</p>
    /// - On success, responds with [`DescribeWorldGenerationJobOutput`](crate::output::DescribeWorldGenerationJobOutput) with field(s):
    ///   - [`arn(Option<String>)`](crate::output::DescribeWorldGenerationJobOutput::arn): <p>The Amazon Resource Name (ARN) of the world generation job.</p>
    ///   - [`status(Option<WorldGenerationJobStatus>)`](crate::output::DescribeWorldGenerationJobOutput::status): <p>The status of the world generation job:</p>  <dl>   <dt>   Pending  </dt>   <dd>    <p>The world generation job request is pending.</p>   </dd>   <dt>   Running  </dt>   <dd>    <p>The world generation job is running. </p>   </dd>   <dt>   Completed  </dt>   <dd>    <p>The world generation job completed. </p>   </dd>   <dt>   Failed  </dt>   <dd>    <p>The world generation job failed. See <code>failureCode</code> for more information. </p>   </dd>   <dt>   PartialFailed  </dt>   <dd>    <p>Some worlds did not generate.</p>   </dd>   <dt>   Canceled  </dt>   <dd>    <p>The world generation job was cancelled.</p>   </dd>   <dt>   Canceling  </dt>   <dd>    <p>The world generation job is being cancelled.</p>   </dd>  </dl>
    ///   - [`created_at(Option<DateTime>)`](crate::output::DescribeWorldGenerationJobOutput::created_at): <p>The time, in milliseconds since the epoch, when the world generation job was created.</p>
    ///   - [`failure_code(Option<WorldGenerationJobErrorCode>)`](crate::output::DescribeWorldGenerationJobOutput::failure_code): <p>The failure code of the world generation job if it failed:</p>  <dl>   <dt>   InternalServiceError  </dt>   <dd>    <p>Internal service error.</p>   </dd>   <dt>   LimitExceeded  </dt>   <dd>    <p>The requested resource exceeds the maximum number allowed, or the number of concurrent stream requests exceeds the maximum number allowed. </p>   </dd>   <dt>   ResourceNotFound  </dt>   <dd>    <p>The specified resource could not be found. </p>   </dd>   <dt>   RequestThrottled  </dt>   <dd>    <p>The request was throttled.</p>   </dd>   <dt>   InvalidInput  </dt>   <dd>    <p>An input parameter in the request is not valid.</p>   </dd>  </dl>
    ///   - [`failure_reason(Option<String>)`](crate::output::DescribeWorldGenerationJobOutput::failure_reason): <p>The reason why the world generation job failed.</p>
    ///   - [`client_request_token(Option<String>)`](crate::output::DescribeWorldGenerationJobOutput::client_request_token): <p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.</p>
    ///   - [`template(Option<String>)`](crate::output::DescribeWorldGenerationJobOutput::template): <p>The Amazon Resource Name (arn) of the world template.</p>
    ///   - [`world_count(Option<WorldCount>)`](crate::output::DescribeWorldGenerationJobOutput::world_count): <p>Information about the world count.</p>
    ///   - [`finished_worlds_summary(Option<FinishedWorldsSummary>)`](crate::output::DescribeWorldGenerationJobOutput::finished_worlds_summary): <p>Summary information about finished worlds.</p>
    ///   - [`tags(Option<HashMap<String, String>>)`](crate::output::DescribeWorldGenerationJobOutput::tags): <p>A map that contains tag keys and tag values that are attached to the world generation job.</p>
    ///   - [`world_tags(Option<HashMap<String, String>>)`](crate::output::DescribeWorldGenerationJobOutput::world_tags): <p>A map that contains tag keys and tag values that are attached to the generated worlds.</p>
    /// - On failure, responds with [`SdkError<DescribeWorldGenerationJobError>`](crate::error::DescribeWorldGenerationJobError)
    pub fn describe_world_generation_job(
        &self,
    ) -> crate::client::fluent_builders::DescribeWorldGenerationJob {
        crate::client::fluent_builders::DescribeWorldGenerationJob::new(self.handle.clone())
    }
}
