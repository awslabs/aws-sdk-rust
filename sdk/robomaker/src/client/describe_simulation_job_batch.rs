// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeSimulationJobBatch`](crate::operation::describe_simulation_job_batch::builders::DescribeSimulationJobBatchFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`batch(impl Into<String>)`](crate::operation::describe_simulation_job_batch::builders::DescribeSimulationJobBatchFluentBuilder::batch) / [`set_batch(Option<String>)`](crate::operation::describe_simulation_job_batch::builders::DescribeSimulationJobBatchFluentBuilder::set_batch): <p>The id of the batch to describe.</p>
    /// - On success, responds with [`DescribeSimulationJobBatchOutput`](crate::operation::describe_simulation_job_batch::DescribeSimulationJobBatchOutput) with field(s):
    ///   - [`arn(Option<String>)`](crate::operation::describe_simulation_job_batch::DescribeSimulationJobBatchOutput::arn): <p>The Amazon Resource Name (ARN) of the batch.</p>
    ///   - [`status(Option<SimulationJobBatchStatus>)`](crate::operation::describe_simulation_job_batch::DescribeSimulationJobBatchOutput::status): <p>The status of the batch.</p>  <dl>   <dt>   Pending  </dt>   <dd>    <p>The simulation job batch request is pending.</p>   </dd>   <dt>   InProgress  </dt>   <dd>    <p>The simulation job batch is in progress. </p>   </dd>   <dt>   Failed  </dt>   <dd>    <p>The simulation job batch failed. One or more simulation job requests could not be completed due to an internal failure (like <code>InternalServiceError</code>). See <code>failureCode</code> and <code>failureReason</code> for more information.</p>   </dd>   <dt>   Completed  </dt>   <dd>    <p>The simulation batch job completed. A batch is complete when (1) there are no pending simulation job requests in the batch and none of the failed simulation job requests are due to <code>InternalServiceError</code> and (2) when all created simulation jobs have reached a terminal state (for example, <code>Completed</code> or <code>Failed</code>). </p>   </dd>   <dt>   Canceled  </dt>   <dd>    <p>The simulation batch job was cancelled.</p>   </dd>   <dt>   Canceling  </dt>   <dd>    <p>The simulation batch job is being cancelled.</p>   </dd>   <dt>   Completing  </dt>   <dd>    <p>The simulation batch job is completing.</p>   </dd>   <dt>   TimingOut  </dt>   <dd>    <p>The simulation job batch is timing out.</p>    <p>If a batch timing out, and there are pending requests that were failing due to an internal failure (like <code>InternalServiceError</code>), the batch status will be <code>Failed</code>. If there are no such failing request, the batch status will be <code>TimedOut</code>. </p>   </dd>   <dt>   TimedOut  </dt>   <dd>    <p>The simulation batch job timed out.</p>   </dd>  </dl>
    ///   - [`last_updated_at(Option<DateTime>)`](crate::operation::describe_simulation_job_batch::DescribeSimulationJobBatchOutput::last_updated_at): <p>The time, in milliseconds since the epoch, when the simulation job batch was last updated.</p>
    ///   - [`created_at(Option<DateTime>)`](crate::operation::describe_simulation_job_batch::DescribeSimulationJobBatchOutput::created_at): <p>The time, in milliseconds since the epoch, when the simulation job batch was created.</p>
    ///   - [`client_request_token(Option<String>)`](crate::operation::describe_simulation_job_batch::DescribeSimulationJobBatchOutput::client_request_token): <p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.</p>
    ///   - [`batch_policy(Option<BatchPolicy>)`](crate::operation::describe_simulation_job_batch::DescribeSimulationJobBatchOutput::batch_policy): <p>The batch policy.</p>
    ///   - [`failure_code(Option<SimulationJobBatchErrorCode>)`](crate::operation::describe_simulation_job_batch::DescribeSimulationJobBatchOutput::failure_code): <p>The failure code of the simulation job batch.</p>
    ///   - [`failure_reason(Option<String>)`](crate::operation::describe_simulation_job_batch::DescribeSimulationJobBatchOutput::failure_reason): <p>The reason the simulation job batch failed.</p>
    ///   - [`failed_requests(Option<Vec<FailedCreateSimulationJobRequest>>)`](crate::operation::describe_simulation_job_batch::DescribeSimulationJobBatchOutput::failed_requests): <p>A list of failed create simulation job requests. The request failed to be created into a simulation job. Failed requests do not have a simulation job ID. </p>
    ///   - [`pending_requests(Option<Vec<SimulationJobRequest>>)`](crate::operation::describe_simulation_job_batch::DescribeSimulationJobBatchOutput::pending_requests): <p>A list of pending simulation job requests. These requests have not yet been created into simulation jobs.</p>
    ///   - [`created_requests(Option<Vec<SimulationJobSummary>>)`](crate::operation::describe_simulation_job_batch::DescribeSimulationJobBatchOutput::created_requests): <p>A list of created simulation job summaries.</p>
    ///   - [`tags(Option<HashMap<String, String>>)`](crate::operation::describe_simulation_job_batch::DescribeSimulationJobBatchOutput::tags): <p>A map that contains tag keys and tag values that are attached to the simulation job batch.</p>
    /// - On failure, responds with [`SdkError<DescribeSimulationJobBatchError>`](crate::operation::describe_simulation_job_batch::DescribeSimulationJobBatchError)
    pub fn describe_simulation_job_batch(&self) -> crate::operation::describe_simulation_job_batch::builders::DescribeSimulationJobBatchFluentBuilder{
        crate::operation::describe_simulation_job_batch::builders::DescribeSimulationJobBatchFluentBuilder::new(self.handle.clone())
    }
}
