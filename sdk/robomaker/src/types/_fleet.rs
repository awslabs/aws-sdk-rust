// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about a fleet.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct Fleet {
    /// <p>The name of the fleet.</p>
    #[doc(hidden)]
    pub name: std::option::Option<std::string::String>,
    /// <p>The Amazon Resource Name (ARN) of the fleet.</p>
    #[doc(hidden)]
    pub arn: std::option::Option<std::string::String>,
    /// <p>The time, in milliseconds since the epoch, when the fleet was created.</p>
    #[doc(hidden)]
    pub created_at: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>The status of the last fleet deployment.</p>
    #[doc(hidden)]
    pub last_deployment_status: std::option::Option<crate::types::DeploymentStatus>,
    /// <p>The Amazon Resource Name (ARN) of the last deployment job.</p>
    #[doc(hidden)]
    pub last_deployment_job: std::option::Option<std::string::String>,
    /// <p>The time of the last deployment.</p>
    #[doc(hidden)]
    pub last_deployment_time: std::option::Option<aws_smithy_types::DateTime>,
}
impl Fleet {
    /// <p>The name of the fleet.</p>
    pub fn name(&self) -> std::option::Option<&str> {
        self.name.as_deref()
    }
    /// <p>The Amazon Resource Name (ARN) of the fleet.</p>
    pub fn arn(&self) -> std::option::Option<&str> {
        self.arn.as_deref()
    }
    /// <p>The time, in milliseconds since the epoch, when the fleet was created.</p>
    pub fn created_at(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.created_at.as_ref()
    }
    /// <p>The status of the last fleet deployment.</p>
    pub fn last_deployment_status(&self) -> std::option::Option<&crate::types::DeploymentStatus> {
        self.last_deployment_status.as_ref()
    }
    /// <p>The Amazon Resource Name (ARN) of the last deployment job.</p>
    pub fn last_deployment_job(&self) -> std::option::Option<&str> {
        self.last_deployment_job.as_deref()
    }
    /// <p>The time of the last deployment.</p>
    pub fn last_deployment_time(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.last_deployment_time.as_ref()
    }
}
impl Fleet {
    /// Creates a new builder-style object to manufacture [`Fleet`](crate::types::Fleet).
    pub fn builder() -> crate::types::builders::FleetBuilder {
        crate::types::builders::FleetBuilder::default()
    }
}

/// A builder for [`Fleet`](crate::types::Fleet).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct FleetBuilder {
    pub(crate) name: std::option::Option<std::string::String>,
    pub(crate) arn: std::option::Option<std::string::String>,
    pub(crate) created_at: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) last_deployment_status: std::option::Option<crate::types::DeploymentStatus>,
    pub(crate) last_deployment_job: std::option::Option<std::string::String>,
    pub(crate) last_deployment_time: std::option::Option<aws_smithy_types::DateTime>,
}
impl FleetBuilder {
    /// <p>The name of the fleet.</p>
    pub fn name(mut self, input: impl Into<std::string::String>) -> Self {
        self.name = Some(input.into());
        self
    }
    /// <p>The name of the fleet.</p>
    pub fn set_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the fleet.</p>
    pub fn arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.arn = Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the fleet.</p>
    pub fn set_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.arn = input;
        self
    }
    /// <p>The time, in milliseconds since the epoch, when the fleet was created.</p>
    pub fn created_at(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.created_at = Some(input);
        self
    }
    /// <p>The time, in milliseconds since the epoch, when the fleet was created.</p>
    pub fn set_created_at(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.created_at = input;
        self
    }
    /// <p>The status of the last fleet deployment.</p>
    pub fn last_deployment_status(mut self, input: crate::types::DeploymentStatus) -> Self {
        self.last_deployment_status = Some(input);
        self
    }
    /// <p>The status of the last fleet deployment.</p>
    pub fn set_last_deployment_status(
        mut self,
        input: std::option::Option<crate::types::DeploymentStatus>,
    ) -> Self {
        self.last_deployment_status = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the last deployment job.</p>
    pub fn last_deployment_job(mut self, input: impl Into<std::string::String>) -> Self {
        self.last_deployment_job = Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the last deployment job.</p>
    pub fn set_last_deployment_job(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.last_deployment_job = input;
        self
    }
    /// <p>The time of the last deployment.</p>
    pub fn last_deployment_time(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.last_deployment_time = Some(input);
        self
    }
    /// <p>The time of the last deployment.</p>
    pub fn set_last_deployment_time(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.last_deployment_time = input;
        self
    }
    /// Consumes the builder and constructs a [`Fleet`](crate::types::Fleet).
    pub fn build(self) -> crate::types::Fleet {
        crate::types::Fleet {
            name: self.name,
            arn: self.arn,
            created_at: self.created_at,
            last_deployment_status: self.last_deployment_status,
            last_deployment_job: self.last_deployment_job,
            last_deployment_time: self.last_deployment_time,
        }
    }
}
