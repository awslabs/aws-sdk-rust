// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) fn reflens_list_deployment_jobs_output_next_token(
    input: &crate::operation::list_deployment_jobs::ListDeploymentJobsOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_fleets_output_next_token(
    input: &crate::operation::list_fleets::ListFleetsOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_robot_applications_output_next_token(
    input: &crate::operation::list_robot_applications::ListRobotApplicationsOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_robots_output_next_token(
    input: &crate::operation::list_robots::ListRobotsOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_simulation_applications_output_next_token(
    input: &crate::operation::list_simulation_applications::ListSimulationApplicationsOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_simulation_job_batches_output_next_token(
    input: &crate::operation::list_simulation_job_batches::ListSimulationJobBatchesOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_simulation_jobs_output_next_token(
    input: &crate::operation::list_simulation_jobs::ListSimulationJobsOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_world_export_jobs_output_next_token(
    input: &crate::operation::list_world_export_jobs::ListWorldExportJobsOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_world_generation_jobs_output_next_token(
    input: &crate::operation::list_world_generation_jobs::ListWorldGenerationJobsOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_world_templates_output_next_token(
    input: &crate::operation::list_world_templates::ListWorldTemplatesOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_worlds_output_next_token(
    input: &crate::operation::list_worlds::ListWorldsOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}
