// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DescribeWorldTemplateInput {
    /// <p>The Amazon Resource Name (arn) of the world template you want to describe.</p>
    #[doc(hidden)]
    pub template: std::option::Option<std::string::String>,
}
impl DescribeWorldTemplateInput {
    /// <p>The Amazon Resource Name (arn) of the world template you want to describe.</p>
    pub fn template(&self) -> std::option::Option<&str> {
        self.template.as_deref()
    }
}
impl DescribeWorldTemplateInput {
    /// Creates a new builder-style object to manufacture [`DescribeWorldTemplateInput`](crate::operation::describe_world_template::DescribeWorldTemplateInput).
    pub fn builder(
    ) -> crate::operation::describe_world_template::builders::DescribeWorldTemplateInputBuilder
    {
        crate::operation::describe_world_template::builders::DescribeWorldTemplateInputBuilder::default()
    }
}

/// A builder for [`DescribeWorldTemplateInput`](crate::operation::describe_world_template::DescribeWorldTemplateInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DescribeWorldTemplateInputBuilder {
    pub(crate) template: std::option::Option<std::string::String>,
}
impl DescribeWorldTemplateInputBuilder {
    /// <p>The Amazon Resource Name (arn) of the world template you want to describe.</p>
    pub fn template(mut self, input: impl Into<std::string::String>) -> Self {
        self.template = Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (arn) of the world template you want to describe.</p>
    pub fn set_template(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.template = input;
        self
    }
    /// Consumes the builder and constructs a [`DescribeWorldTemplateInput`](crate::operation::describe_world_template::DescribeWorldTemplateInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::describe_world_template::DescribeWorldTemplateInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::describe_world_template::DescribeWorldTemplateInput {
                template: self.template,
            },
        )
    }
}
