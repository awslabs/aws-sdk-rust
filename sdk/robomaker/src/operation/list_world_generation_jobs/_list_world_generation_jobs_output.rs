// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ListWorldGenerationJobsOutput {
    /// <p>Summary information for world generator jobs.</p>
    pub world_generation_job_summaries: ::std::vec::Vec<crate::types::WorldGenerationJobSummary>,
    /// <p>If the previous paginated request did not return all of the remaining results, the response object's <code>nextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListWorldGeneratorJobsRequest</code> again and assign that token to the request object's <code>nextToken</code> parameter. If there are no remaining results, the previous response object's NextToken parameter is set to null. </p>
    pub next_token: ::std::option::Option<::std::string::String>,
    _request_id: Option<String>,
}
impl ListWorldGenerationJobsOutput {
    /// <p>Summary information for world generator jobs.</p>
    pub fn world_generation_job_summaries(&self) -> &[crate::types::WorldGenerationJobSummary] {
        use std::ops::Deref;
        self.world_generation_job_summaries.deref()
    }
    /// <p>If the previous paginated request did not return all of the remaining results, the response object's <code>nextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListWorldGeneratorJobsRequest</code> again and assign that token to the request object's <code>nextToken</code> parameter. If there are no remaining results, the previous response object's NextToken parameter is set to null. </p>
    pub fn next_token(&self) -> ::std::option::Option<&str> {
        self.next_token.as_deref()
    }
}
impl ::aws_http::request_id::RequestId for ListWorldGenerationJobsOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl ListWorldGenerationJobsOutput {
    /// Creates a new builder-style object to manufacture [`ListWorldGenerationJobsOutput`](crate::operation::list_world_generation_jobs::ListWorldGenerationJobsOutput).
    pub fn builder() -> crate::operation::list_world_generation_jobs::builders::ListWorldGenerationJobsOutputBuilder {
        crate::operation::list_world_generation_jobs::builders::ListWorldGenerationJobsOutputBuilder::default()
    }
}

/// A builder for [`ListWorldGenerationJobsOutput`](crate::operation::list_world_generation_jobs::ListWorldGenerationJobsOutput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ListWorldGenerationJobsOutputBuilder {
    pub(crate) world_generation_job_summaries: ::std::option::Option<::std::vec::Vec<crate::types::WorldGenerationJobSummary>>,
    pub(crate) next_token: ::std::option::Option<::std::string::String>,
    _request_id: Option<String>,
}
impl ListWorldGenerationJobsOutputBuilder {
    /// Appends an item to `world_generation_job_summaries`.
    ///
    /// To override the contents of this collection use [`set_world_generation_job_summaries`](Self::set_world_generation_job_summaries).
    ///
    /// <p>Summary information for world generator jobs.</p>
    pub fn world_generation_job_summaries(mut self, input: crate::types::WorldGenerationJobSummary) -> Self {
        let mut v = self.world_generation_job_summaries.unwrap_or_default();
        v.push(input);
        self.world_generation_job_summaries = ::std::option::Option::Some(v);
        self
    }
    /// <p>Summary information for world generator jobs.</p>
    pub fn set_world_generation_job_summaries(
        mut self,
        input: ::std::option::Option<::std::vec::Vec<crate::types::WorldGenerationJobSummary>>,
    ) -> Self {
        self.world_generation_job_summaries = input;
        self
    }
    /// <p>Summary information for world generator jobs.</p>
    pub fn get_world_generation_job_summaries(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::WorldGenerationJobSummary>> {
        &self.world_generation_job_summaries
    }
    /// <p>If the previous paginated request did not return all of the remaining results, the response object's <code>nextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListWorldGeneratorJobsRequest</code> again and assign that token to the request object's <code>nextToken</code> parameter. If there are no remaining results, the previous response object's NextToken parameter is set to null. </p>
    pub fn next_token(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.next_token = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>If the previous paginated request did not return all of the remaining results, the response object's <code>nextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListWorldGeneratorJobsRequest</code> again and assign that token to the request object's <code>nextToken</code> parameter. If there are no remaining results, the previous response object's NextToken parameter is set to null. </p>
    pub fn set_next_token(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// <p>If the previous paginated request did not return all of the remaining results, the response object's <code>nextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListWorldGeneratorJobsRequest</code> again and assign that token to the request object's <code>nextToken</code> parameter. If there are no remaining results, the previous response object's NextToken parameter is set to null. </p>
    pub fn get_next_token(&self) -> &::std::option::Option<::std::string::String> {
        &self.next_token
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`ListWorldGenerationJobsOutput`](crate::operation::list_world_generation_jobs::ListWorldGenerationJobsOutput).
    /// This method will fail if any of the following fields are not set:
    /// - [`world_generation_job_summaries`](crate::operation::list_world_generation_jobs::builders::ListWorldGenerationJobsOutputBuilder::world_generation_job_summaries)
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::list_world_generation_jobs::ListWorldGenerationJobsOutput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::list_world_generation_jobs::ListWorldGenerationJobsOutput {
            world_generation_job_summaries: self.world_generation_job_summaries.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "world_generation_job_summaries",
                    "world_generation_job_summaries was not specified but it is required when building ListWorldGenerationJobsOutput",
                )
            })?,
            next_token: self.next_token,
            _request_id: self._request_id,
        })
    }
}
