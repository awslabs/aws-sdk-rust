// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub use crate::operation::cancel_deployment_job::_cancel_deployment_job_output::CancelDeploymentJobOutputBuilder;

pub use crate::operation::cancel_deployment_job::_cancel_deployment_job_input::CancelDeploymentJobInputBuilder;

impl CancelDeploymentJobInputBuilder {
    /// Sends a request with this input using the given client.
    pub async fn send_with(
        self,
        client: &crate::Client,
    ) -> ::std::result::Result<
        crate::operation::cancel_deployment_job::CancelDeploymentJobOutput,
        ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::cancel_deployment_job::CancelDeploymentJobError,
            ::aws_smithy_runtime_api::client::orchestrator::HttpResponse,
        >,
    > {
        let mut fluent_builder = client.cancel_deployment_job();
        fluent_builder.inner = self;
        fluent_builder.send().await
    }
}
/// Fluent builder constructing a request to `CancelDeploymentJob`.
///
/// <p>Cancels the specified deployment job.</p> <important>
/// <p>This API will no longer be supported as of May 2, 2022. Use it to remove resources that were created for Deployment Service.</p>
/// </important>
#[deprecated(
    note = "Support for the AWS RoboMaker application deployment feature has ended. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/fleets.html."
)]
#[derive(::std::clone::Clone, ::std::fmt::Debug)]
pub struct CancelDeploymentJobFluentBuilder {
    handle: ::std::sync::Arc<crate::client::Handle>,
    inner: crate::operation::cancel_deployment_job::builders::CancelDeploymentJobInputBuilder,
    config_override: ::std::option::Option<crate::config::Builder>,
}
impl
    crate::client::customize::internal::CustomizableSend<
        crate::operation::cancel_deployment_job::CancelDeploymentJobOutput,
        crate::operation::cancel_deployment_job::CancelDeploymentJobError,
    > for CancelDeploymentJobFluentBuilder
{
    fn send(
        self,
        config_override: crate::config::Builder,
    ) -> crate::client::customize::internal::BoxFuture<
        crate::client::customize::internal::SendResult<
            crate::operation::cancel_deployment_job::CancelDeploymentJobOutput,
            crate::operation::cancel_deployment_job::CancelDeploymentJobError,
        >,
    > {
        ::std::boxed::Box::pin(async move { self.config_override(config_override).send().await })
    }
}
impl CancelDeploymentJobFluentBuilder {
    /// Creates a new `CancelDeploymentJob`.
    pub(crate) fn new(handle: ::std::sync::Arc<crate::client::Handle>) -> Self {
        Self {
            handle,
            inner: ::std::default::Default::default(),
            config_override: ::std::option::Option::None,
        }
    }
    /// Access the CancelDeploymentJob as a reference.
    pub fn as_input(&self) -> &crate::operation::cancel_deployment_job::builders::CancelDeploymentJobInputBuilder {
        &self.inner
    }
    /// Sends the request and returns the response.
    ///
    /// If an error occurs, an `SdkError` will be returned with additional details that
    /// can be matched against.
    ///
    /// By default, any retryable failures will be retried twice. Retry behavior
    /// is configurable with the [RetryConfig](aws_smithy_types::retry::RetryConfig), which can be
    /// set when configuring the client.
    pub async fn send(
        self,
    ) -> ::std::result::Result<
        crate::operation::cancel_deployment_job::CancelDeploymentJobOutput,
        ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::cancel_deployment_job::CancelDeploymentJobError,
            ::aws_smithy_runtime_api::client::orchestrator::HttpResponse,
        >,
    > {
        let input = self
            .inner
            .build()
            .map_err(::aws_smithy_runtime_api::client::result::SdkError::construction_failure)?;
        let runtime_plugins = crate::operation::cancel_deployment_job::CancelDeploymentJob::operation_runtime_plugins(
            self.handle.runtime_plugins.clone(),
            &self.handle.conf,
            self.config_override,
        );
        crate::operation::cancel_deployment_job::CancelDeploymentJob::orchestrate(&runtime_plugins, input).await
    }

    /// Consumes this builder, creating a customizable operation that can be modified before being sent.
    pub fn customize(
        self,
    ) -> crate::client::customize::CustomizableOperation<
        crate::operation::cancel_deployment_job::CancelDeploymentJobOutput,
        crate::operation::cancel_deployment_job::CancelDeploymentJobError,
        Self,
    > {
        crate::client::customize::CustomizableOperation::new(self)
    }
    pub(crate) fn config_override(mut self, config_override: impl Into<crate::config::Builder>) -> Self {
        self.set_config_override(Some(config_override.into()));
        self
    }

    pub(crate) fn set_config_override(&mut self, config_override: Option<crate::config::Builder>) -> &mut Self {
        self.config_override = config_override;
        self
    }
    /// <p>The deployment job ARN to cancel.</p>
    pub fn job(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.inner = self.inner.job(input.into());
        self
    }
    /// <p>The deployment job ARN to cancel.</p>
    pub fn set_job(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.inner = self.inner.set_job(input);
        self
    }
    /// <p>The deployment job ARN to cancel.</p>
    pub fn get_job(&self) -> &::std::option::Option<::std::string::String> {
        self.inner.get_job()
    }
}
