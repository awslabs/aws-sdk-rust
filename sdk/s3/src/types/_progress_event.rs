// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>This data type contains information about the progress event of an operation.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ProgressEvent {
    /// <p>The Progress event details.</p>
    #[doc(hidden)]
    pub details: std::option::Option<crate::types::Progress>,
}
impl ProgressEvent {
    /// <p>The Progress event details.</p>
    pub fn details(&self) -> std::option::Option<&crate::types::Progress> {
        self.details.as_ref()
    }
}
impl ProgressEvent {
    /// Creates a new builder-style object to manufacture [`ProgressEvent`](crate::types::ProgressEvent).
    pub fn builder() -> crate::types::builders::ProgressEventBuilder {
        crate::types::builders::ProgressEventBuilder::default()
    }
}

/// A builder for [`ProgressEvent`](crate::types::ProgressEvent).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ProgressEventBuilder {
    pub(crate) details: std::option::Option<crate::types::Progress>,
}
impl ProgressEventBuilder {
    /// <p>The Progress event details.</p>
    pub fn details(mut self, input: crate::types::Progress) -> Self {
        self.details = Some(input);
        self
    }
    /// <p>The Progress event details.</p>
    pub fn set_details(mut self, input: std::option::Option<crate::types::Progress>) -> Self {
        self.details = input;
        self
    }
    /// Consumes the builder and constructs a [`ProgressEvent`](crate::types::ProgressEvent).
    pub fn build(self) -> crate::types::ProgressEvent {
        crate::types::ProgressEvent {
            details: self.details,
        }
    }
}
