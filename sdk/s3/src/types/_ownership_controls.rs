// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The container element for a bucket's ownership controls.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct OwnershipControls {
    /// <p>The container element for an ownership control rule.</p>
    #[doc(hidden)]
    pub rules: std::option::Option<std::vec::Vec<crate::types::OwnershipControlsRule>>,
}
impl OwnershipControls {
    /// <p>The container element for an ownership control rule.</p>
    pub fn rules(&self) -> std::option::Option<&[crate::types::OwnershipControlsRule]> {
        self.rules.as_deref()
    }
}
impl OwnershipControls {
    /// Creates a new builder-style object to manufacture [`OwnershipControls`](crate::types::OwnershipControls).
    pub fn builder() -> crate::types::builders::OwnershipControlsBuilder {
        crate::types::builders::OwnershipControlsBuilder::default()
    }
}

/// A builder for [`OwnershipControls`](crate::types::OwnershipControls).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct OwnershipControlsBuilder {
    pub(crate) rules: std::option::Option<std::vec::Vec<crate::types::OwnershipControlsRule>>,
}
impl OwnershipControlsBuilder {
    /// Appends an item to `rules`.
    ///
    /// To override the contents of this collection use [`set_rules`](Self::set_rules).
    ///
    /// <p>The container element for an ownership control rule.</p>
    pub fn rules(mut self, input: crate::types::OwnershipControlsRule) -> Self {
        let mut v = self.rules.unwrap_or_default();
        v.push(input);
        self.rules = Some(v);
        self
    }
    /// <p>The container element for an ownership control rule.</p>
    pub fn set_rules(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::OwnershipControlsRule>>,
    ) -> Self {
        self.rules = input;
        self
    }
    /// Consumes the builder and constructs a [`OwnershipControls`](crate::types::OwnershipControls).
    pub fn build(self) -> crate::types::OwnershipControls {
        crate::types::OwnershipControls { rules: self.rules }
    }
}
