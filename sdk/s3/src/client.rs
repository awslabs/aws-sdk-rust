// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[doc(inline)]
pub use aws_smithy_client::Builder;
#[derive(Debug)]
pub(crate) struct Handle {
    pub(crate) client: aws_smithy_client::Client<
        aws_smithy_client::erase::DynConnector,
        aws_smithy_client::erase::DynMiddleware<aws_smithy_client::erase::DynConnector>,
    >,
    pub(crate) conf: crate::Config,
}

/// Client for Amazon Simple Storage Service
///
/// Client for invoking operations on Amazon Simple Storage Service. Each operation on Amazon Simple Storage Service is a method on this
/// this struct. `.send()` MUST be invoked on the generated operations to dispatch the request to the service.
///
/// # Examples
/// **Constructing a client and invoking an operation**
/// ```rust,no_run
/// # async fn docs() {
///     // create a shared configuration. This can be used & shared between multiple service clients.
///     let shared_config = aws_config::load_from_env().await;
///     let client = aws_sdk_s3::Client::new(&shared_config);
///     // invoke an operation
///     /* let rsp = client
///         .<operation_name>().
///         .<param>("some value")
///         .send().await; */
/// # }
/// ```
/// **Constructing a client with custom configuration**
/// ```rust,no_run
/// use aws_config::retry::RetryConfig;
/// # async fn docs() {
/// let shared_config = aws_config::load_from_env().await;
/// let config = aws_sdk_s3::config::Builder::from(&shared_config)
///   .retry_config(RetryConfig::disabled())
///   .build();
/// let client = aws_sdk_s3::Client::from_conf(config);
/// # }
#[derive(std::fmt::Debug)]
pub struct Client {
    handle: std::sync::Arc<Handle>,
}

impl std::clone::Clone for Client {
    fn clone(&self) -> Self {
        Self {
            handle: self.handle.clone(),
        }
    }
}

impl
    From<
        aws_smithy_client::Client<
            aws_smithy_client::erase::DynConnector,
            aws_smithy_client::erase::DynMiddleware<aws_smithy_client::erase::DynConnector>,
        >,
    > for Client
{
    fn from(
        client: aws_smithy_client::Client<
            aws_smithy_client::erase::DynConnector,
            aws_smithy_client::erase::DynMiddleware<aws_smithy_client::erase::DynConnector>,
        >,
    ) -> Self {
        Self::with_config(client, crate::Config::builder().build())
    }
}

impl Client {
    /// Creates a client with the given service configuration.
    pub fn with_config(
        client: aws_smithy_client::Client<
            aws_smithy_client::erase::DynConnector,
            aws_smithy_client::erase::DynMiddleware<aws_smithy_client::erase::DynConnector>,
        >,
        conf: crate::Config,
    ) -> Self {
        Self {
            handle: std::sync::Arc::new(Handle { client, conf }),
        }
    }

    /// Returns the client's configuration.
    pub fn conf(&self) -> &crate::Config {
        &self.handle.conf
    }
}
impl Client {
    /// Constructs a fluent builder for the [`AbortMultipartUpload`](crate::client::fluent_builders::AbortMultipartUpload) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`bucket(impl Into<String>)`](crate::client::fluent_builders::AbortMultipartUpload::bucket) / [`set_bucket(Option<String>)`](crate::client::fluent_builders::AbortMultipartUpload::set_bucket): <p>The bucket name to which the upload was taking place. </p>  <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p>  <p>When using this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <code> <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com</code>. When using this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts bucket ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">Using Amazon S3 on Outposts</a> in the <i>Amazon S3 User Guide</i>.</p>
    ///   - [`key(impl Into<String>)`](crate::client::fluent_builders::AbortMultipartUpload::key) / [`set_key(Option<String>)`](crate::client::fluent_builders::AbortMultipartUpload::set_key): <p>Key of the object for which the multipart upload was initiated.</p>
    ///   - [`upload_id(impl Into<String>)`](crate::client::fluent_builders::AbortMultipartUpload::upload_id) / [`set_upload_id(Option<String>)`](crate::client::fluent_builders::AbortMultipartUpload::set_upload_id): <p>Upload ID that identifies the multipart upload.</p>
    ///   - [`request_payer(RequestPayer)`](crate::client::fluent_builders::AbortMultipartUpload::request_payer) / [`set_request_payer(Option<RequestPayer>)`](crate::client::fluent_builders::AbortMultipartUpload::set_request_payer): <p>Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from Requester Pays buckets, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html">Downloading Objects in Requester Pays Buckets</a> in the <i>Amazon S3 User Guide</i>.</p>
    ///   - [`expected_bucket_owner(impl Into<String>)`](crate::client::fluent_builders::AbortMultipartUpload::expected_bucket_owner) / [`set_expected_bucket_owner(Option<String>)`](crate::client::fluent_builders::AbortMultipartUpload::set_expected_bucket_owner): <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
    /// - On success, responds with [`AbortMultipartUploadOutput`](crate::output::AbortMultipartUploadOutput) with field(s):
    ///   - [`request_charged(Option<RequestCharged>)`](crate::output::AbortMultipartUploadOutput::request_charged): <p>If present, indicates that the requester was successfully charged for the request.</p>
    /// - On failure, responds with [`SdkError<AbortMultipartUploadError>`](crate::error::AbortMultipartUploadError)
    pub fn abort_multipart_upload(&self) -> crate::client::fluent_builders::AbortMultipartUpload {
        crate::client::fluent_builders::AbortMultipartUpload::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`CompleteMultipartUpload`](crate::client::fluent_builders::CompleteMultipartUpload) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`bucket(impl Into<String>)`](crate::client::fluent_builders::CompleteMultipartUpload::bucket) / [`set_bucket(Option<String>)`](crate::client::fluent_builders::CompleteMultipartUpload::set_bucket): <p>Name of the bucket to which the multipart upload was initiated.</p>  <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p>  <p>When using this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <code> <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com</code>. When using this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts bucket ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">Using Amazon S3 on Outposts</a> in the <i>Amazon S3 User Guide</i>.</p>
    ///   - [`key(impl Into<String>)`](crate::client::fluent_builders::CompleteMultipartUpload::key) / [`set_key(Option<String>)`](crate::client::fluent_builders::CompleteMultipartUpload::set_key): <p>Object key for which the multipart upload was initiated.</p>
    ///   - [`multipart_upload(CompletedMultipartUpload)`](crate::client::fluent_builders::CompleteMultipartUpload::multipart_upload) / [`set_multipart_upload(Option<CompletedMultipartUpload>)`](crate::client::fluent_builders::CompleteMultipartUpload::set_multipart_upload): <p>The container for the multipart upload request information.</p>
    ///   - [`upload_id(impl Into<String>)`](crate::client::fluent_builders::CompleteMultipartUpload::upload_id) / [`set_upload_id(Option<String>)`](crate::client::fluent_builders::CompleteMultipartUpload::set_upload_id): <p>ID for the initiated multipart upload.</p>
    ///   - [`checksum_crc32(impl Into<String>)`](crate::client::fluent_builders::CompleteMultipartUpload::checksum_crc32) / [`set_checksum_crc32(Option<String>)`](crate::client::fluent_builders::CompleteMultipartUpload::set_checksum_crc32): <p>This header can be used as a data integrity check to verify that the data received is the same data that was originally sent. This header specifies the base64-encoded, 32-bit CRC32 checksum of the object. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
    ///   - [`checksum_crc32_c(impl Into<String>)`](crate::client::fluent_builders::CompleteMultipartUpload::checksum_crc32_c) / [`set_checksum_crc32_c(Option<String>)`](crate::client::fluent_builders::CompleteMultipartUpload::set_checksum_crc32_c): <p>This header can be used as a data integrity check to verify that the data received is the same data that was originally sent. This header specifies the base64-encoded, 32-bit CRC32C checksum of the object. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
    ///   - [`checksum_sha1(impl Into<String>)`](crate::client::fluent_builders::CompleteMultipartUpload::checksum_sha1) / [`set_checksum_sha1(Option<String>)`](crate::client::fluent_builders::CompleteMultipartUpload::set_checksum_sha1): <p>This header can be used as a data integrity check to verify that the data received is the same data that was originally sent. This header specifies the base64-encoded, 160-bit SHA-1 digest of the object. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
    ///   - [`checksum_sha256(impl Into<String>)`](crate::client::fluent_builders::CompleteMultipartUpload::checksum_sha256) / [`set_checksum_sha256(Option<String>)`](crate::client::fluent_builders::CompleteMultipartUpload::set_checksum_sha256): <p>This header can be used as a data integrity check to verify that the data received is the same data that was originally sent. This header specifies the base64-encoded, 256-bit SHA-256 digest of the object. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
    ///   - [`request_payer(RequestPayer)`](crate::client::fluent_builders::CompleteMultipartUpload::request_payer) / [`set_request_payer(Option<RequestPayer>)`](crate::client::fluent_builders::CompleteMultipartUpload::set_request_payer): <p>Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from Requester Pays buckets, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html">Downloading Objects in Requester Pays Buckets</a> in the <i>Amazon S3 User Guide</i>.</p>
    ///   - [`expected_bucket_owner(impl Into<String>)`](crate::client::fluent_builders::CompleteMultipartUpload::expected_bucket_owner) / [`set_expected_bucket_owner(Option<String>)`](crate::client::fluent_builders::CompleteMultipartUpload::set_expected_bucket_owner): <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
    ///   - [`sse_customer_algorithm(impl Into<String>)`](crate::client::fluent_builders::CompleteMultipartUpload::sse_customer_algorithm) / [`set_sse_customer_algorithm(Option<String>)`](crate::client::fluent_builders::CompleteMultipartUpload::set_sse_customer_algorithm): <p>The server-side encryption (SSE) algorithm used to encrypt the object. This parameter is needed only when the object was created using a checksum algorithm. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerSideEncryptionCustomerKeys.html">Protecting data using SSE-C keys</a> in the <i>Amazon S3 User Guide</i>.</p>
    ///   - [`sse_customer_key(impl Into<String>)`](crate::client::fluent_builders::CompleteMultipartUpload::sse_customer_key) / [`set_sse_customer_key(Option<String>)`](crate::client::fluent_builders::CompleteMultipartUpload::set_sse_customer_key): <p>The server-side encryption (SSE) customer managed key. This parameter is needed only when the object was created using a checksum algorithm. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerSideEncryptionCustomerKeys.html">Protecting data using SSE-C keys</a> in the <i>Amazon S3 User Guide</i>.</p>
    ///   - [`sse_customer_key_md5(impl Into<String>)`](crate::client::fluent_builders::CompleteMultipartUpload::sse_customer_key_md5) / [`set_sse_customer_key_md5(Option<String>)`](crate::client::fluent_builders::CompleteMultipartUpload::set_sse_customer_key_md5): <p>The MD5 server-side encryption (SSE) customer managed key. This parameter is needed only when the object was created using a checksum algorithm. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerSideEncryptionCustomerKeys.html">Protecting data using SSE-C keys</a> in the <i>Amazon S3 User Guide</i>.</p>
    /// - On success, responds with [`CompleteMultipartUploadOutput`](crate::output::CompleteMultipartUploadOutput) with field(s):
    ///   - [`location(Option<String>)`](crate::output::CompleteMultipartUploadOutput::location): <p>The URI that identifies the newly created object.</p>
    ///   - [`bucket(Option<String>)`](crate::output::CompleteMultipartUploadOutput::bucket): <p>The name of the bucket that contains the newly created object. Does not return the access point ARN or access point alias if used.</p>  <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p>  <p>When using this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <code> <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com</code>. When using this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts bucket ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">Using Amazon S3 on Outposts</a> in the <i>Amazon S3 User Guide</i>.</p>
    ///   - [`key(Option<String>)`](crate::output::CompleteMultipartUploadOutput::key): <p>The object key of the newly created object.</p>
    ///   - [`expiration(Option<String>)`](crate::output::CompleteMultipartUploadOutput::expiration): <p>If the object expiration is configured, this will contain the expiration date (<code>expiry-date</code>) and rule ID (<code>rule-id</code>). The value of <code>rule-id</code> is URL-encoded.</p>
    ///   - [`e_tag(Option<String>)`](crate::output::CompleteMultipartUploadOutput::e_tag): <p>Entity tag that identifies the newly created object's data. Objects with different object data will have different entity tags. The entity tag is an opaque string. The entity tag may or may not be an MD5 digest of the object data. If the entity tag is not an MD5 digest of the object data, it will contain one or more nonhexadecimal characters and/or will consist of less than 32 or more than 32 hexadecimal digits. For more information about how the entity tag is calculated, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
    ///   - [`checksum_crc32(Option<String>)`](crate::output::CompleteMultipartUploadOutput::checksum_crc32): <p>The base64-encoded, 32-bit CRC32 checksum of the object. This will only be present if it was uploaded with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated with multipart uploads, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums"> Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
    ///   - [`checksum_crc32_c(Option<String>)`](crate::output::CompleteMultipartUploadOutput::checksum_crc32_c): <p>The base64-encoded, 32-bit CRC32C checksum of the object. This will only be present if it was uploaded with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated with multipart uploads, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums"> Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
    ///   - [`checksum_sha1(Option<String>)`](crate::output::CompleteMultipartUploadOutput::checksum_sha1): <p>The base64-encoded, 160-bit SHA-1 digest of the object. This will only be present if it was uploaded with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated with multipart uploads, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums"> Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
    ///   - [`checksum_sha256(Option<String>)`](crate::output::CompleteMultipartUploadOutput::checksum_sha256): <p>The base64-encoded, 256-bit SHA-256 digest of the object. This will only be present if it was uploaded with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated with multipart uploads, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums"> Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
    ///   - [`server_side_encryption(Option<ServerSideEncryption>)`](crate::output::CompleteMultipartUploadOutput::server_side_encryption): <p>If you specified server-side encryption either with an Amazon S3-managed encryption key or an Amazon Web Services KMS key in your initiate multipart upload request, the response includes this header. It confirms the encryption algorithm that Amazon S3 used to encrypt the object.</p>
    ///   - [`version_id(Option<String>)`](crate::output::CompleteMultipartUploadOutput::version_id): <p>Version ID of the newly created object, in case the bucket has versioning turned on.</p>
    ///   - [`ssekms_key_id(Option<String>)`](crate::output::CompleteMultipartUploadOutput::ssekms_key_id): <p>If present, specifies the ID of the Amazon Web Services Key Management Service (Amazon Web Services KMS) symmetric customer managed key that was used for the object.</p>
    ///   - [`bucket_key_enabled(bool)`](crate::output::CompleteMultipartUploadOutput::bucket_key_enabled): <p>Indicates whether the multipart upload uses an S3 Bucket Key for server-side encryption with Amazon Web Services KMS (SSE-KMS).</p>
    ///   - [`request_charged(Option<RequestCharged>)`](crate::output::CompleteMultipartUploadOutput::request_charged): <p>If present, indicates that the requester was successfully charged for the request.</p>
    /// - On failure, responds with [`SdkError<CompleteMultipartUploadError>`](crate::error::CompleteMultipartUploadError)
    pub fn complete_multipart_upload(
        &self,
    ) -> crate::client::fluent_builders::CompleteMultipartUpload {
        crate::client::fluent_builders::CompleteMultipartUpload::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`CopyObject`](crate::client::fluent_builders::CopyObject) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`acl(ObjectCannedAcl)`](crate::client::fluent_builders::CopyObject::acl) / [`set_acl(Option<ObjectCannedAcl>)`](crate::client::fluent_builders::CopyObject::set_acl): <p>The canned ACL to apply to the object.</p>  <p>This action is not supported by Amazon S3 on Outposts.</p>
    ///   - [`bucket(impl Into<String>)`](crate::client::fluent_builders::CopyObject::bucket) / [`set_bucket(Option<String>)`](crate::client::fluent_builders::CopyObject::set_bucket): <p>The name of the destination bucket.</p>  <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p>  <p>When using this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <code> <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com</code>. When using this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts bucket ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">Using Amazon S3 on Outposts</a> in the <i>Amazon S3 User Guide</i>.</p>
    ///   - [`cache_control(impl Into<String>)`](crate::client::fluent_builders::CopyObject::cache_control) / [`set_cache_control(Option<String>)`](crate::client::fluent_builders::CopyObject::set_cache_control): <p>Specifies caching behavior along the request/reply chain.</p>
    ///   - [`checksum_algorithm(ChecksumAlgorithm)`](crate::client::fluent_builders::CopyObject::checksum_algorithm) / [`set_checksum_algorithm(Option<ChecksumAlgorithm>)`](crate::client::fluent_builders::CopyObject::set_checksum_algorithm): <p>Indicates the algorithm you want Amazon S3 to use to create the checksum for the object. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
    ///   - [`content_disposition(impl Into<String>)`](crate::client::fluent_builders::CopyObject::content_disposition) / [`set_content_disposition(Option<String>)`](crate::client::fluent_builders::CopyObject::set_content_disposition): <p>Specifies presentational information for the object.</p>
    ///   - [`content_encoding(impl Into<String>)`](crate::client::fluent_builders::CopyObject::content_encoding) / [`set_content_encoding(Option<String>)`](crate::client::fluent_builders::CopyObject::set_content_encoding): <p>Specifies what content encodings have been applied to the object and thus what decoding mechanisms must be applied to obtain the media-type referenced by the Content-Type header field.</p>
    ///   - [`content_language(impl Into<String>)`](crate::client::fluent_builders::CopyObject::content_language) / [`set_content_language(Option<String>)`](crate::client::fluent_builders::CopyObject::set_content_language): <p>The language the content is in.</p>
    ///   - [`content_type(impl Into<String>)`](crate::client::fluent_builders::CopyObject::content_type) / [`set_content_type(Option<String>)`](crate::client::fluent_builders::CopyObject::set_content_type): <p>A standard MIME type describing the format of the object data.</p>
    ///   - [`copy_source(impl Into<String>)`](crate::client::fluent_builders::CopyObject::copy_source) / [`set_copy_source(Option<String>)`](crate::client::fluent_builders::CopyObject::set_copy_source): <p>Specifies the source object for the copy operation. You specify the value in one of two formats, depending on whether you want to access the source object through an <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/access-points.html">access point</a>:</p>  <ul>   <li> <p>For objects not accessed through an access point, specify the name of the source bucket and the key of the source object, separated by a slash (/). For example, to copy the object <code>reports/january.pdf</code> from the bucket <code>awsexamplebucket</code>, use <code>awsexamplebucket/reports/january.pdf</code>. The value must be URL-encoded.</p> </li>   <li> <p>For objects accessed through access points, specify the Amazon Resource Name (ARN) of the object as accessed through the access point, in the format <code>arn:aws:s3:     <region>      :      <account-id>       :accesspoint/       <access-point-name>        /object/        <key></key>       </access-point-name>      </account-id>     </region></code>. For example, to copy the object <code>reports/january.pdf</code> through access point <code>my-access-point</code> owned by account <code>123456789012</code> in Region <code>us-west-2</code>, use the URL encoding of <code>arn:aws:s3:us-west-2:123456789012:accesspoint/my-access-point/object/reports/january.pdf</code>. The value must be URL encoded.</p> <note>     <p>Amazon S3 supports copy operations using access points only when the source and destination buckets are in the same Amazon Web Services Region.</p>    </note> <p>Alternatively, for objects accessed through Amazon S3 on Outposts, specify the ARN of the object as accessed in the format <code>arn:aws:s3-outposts:     <region>      :      <account-id>       :outpost/       <outpost-id>        /object/        <key></key>       </outpost-id>      </account-id>     </region></code>. For example, to copy the object <code>reports/january.pdf</code> through outpost <code>my-outpost</code> owned by account <code>123456789012</code> in Region <code>us-west-2</code>, use the URL encoding of <code>arn:aws:s3-outposts:us-west-2:123456789012:outpost/my-outpost/object/reports/january.pdf</code>. The value must be URL-encoded. </p> </li>  </ul>  <p>To copy a specific version of an object, append <code>?versionId=   <version-id></version-id></code> to the value (for example, <code>awsexamplebucket/reports/january.pdf?versionId=QUpfdndhfd8438MNFDN93jdnJFkdmqnh893</code>). If you don't specify a version ID, Amazon S3 copies the latest version of the source object.</p>
    ///   - [`copy_source_if_match(impl Into<String>)`](crate::client::fluent_builders::CopyObject::copy_source_if_match) / [`set_copy_source_if_match(Option<String>)`](crate::client::fluent_builders::CopyObject::set_copy_source_if_match): <p>Copies the object if its entity tag (ETag) matches the specified tag.</p>
    ///   - [`copy_source_if_modified_since(DateTime)`](crate::client::fluent_builders::CopyObject::copy_source_if_modified_since) / [`set_copy_source_if_modified_since(Option<DateTime>)`](crate::client::fluent_builders::CopyObject::set_copy_source_if_modified_since): <p>Copies the object if it has been modified since the specified time.</p>
    ///   - [`copy_source_if_none_match(impl Into<String>)`](crate::client::fluent_builders::CopyObject::copy_source_if_none_match) / [`set_copy_source_if_none_match(Option<String>)`](crate::client::fluent_builders::CopyObject::set_copy_source_if_none_match): <p>Copies the object if its entity tag (ETag) is different than the specified ETag.</p>
    ///   - [`copy_source_if_unmodified_since(DateTime)`](crate::client::fluent_builders::CopyObject::copy_source_if_unmodified_since) / [`set_copy_source_if_unmodified_since(Option<DateTime>)`](crate::client::fluent_builders::CopyObject::set_copy_source_if_unmodified_since): <p>Copies the object if it hasn't been modified since the specified time.</p>
    ///   - [`expires(DateTime)`](crate::client::fluent_builders::CopyObject::expires) / [`set_expires(Option<DateTime>)`](crate::client::fluent_builders::CopyObject::set_expires): <p>The date and time at which the object is no longer cacheable.</p>
    ///   - [`grant_full_control(impl Into<String>)`](crate::client::fluent_builders::CopyObject::grant_full_control) / [`set_grant_full_control(Option<String>)`](crate::client::fluent_builders::CopyObject::set_grant_full_control): <p>Gives the grantee READ, READ_ACP, and WRITE_ACP permissions on the object.</p>  <p>This action is not supported by Amazon S3 on Outposts.</p>
    ///   - [`grant_read(impl Into<String>)`](crate::client::fluent_builders::CopyObject::grant_read) / [`set_grant_read(Option<String>)`](crate::client::fluent_builders::CopyObject::set_grant_read): <p>Allows grantee to read the object data and its metadata.</p>  <p>This action is not supported by Amazon S3 on Outposts.</p>
    ///   - [`grant_read_acp(impl Into<String>)`](crate::client::fluent_builders::CopyObject::grant_read_acp) / [`set_grant_read_acp(Option<String>)`](crate::client::fluent_builders::CopyObject::set_grant_read_acp): <p>Allows grantee to read the object ACL.</p>  <p>This action is not supported by Amazon S3 on Outposts.</p>
    ///   - [`grant_write_acp(impl Into<String>)`](crate::client::fluent_builders::CopyObject::grant_write_acp) / [`set_grant_write_acp(Option<String>)`](crate::client::fluent_builders::CopyObject::set_grant_write_acp): <p>Allows grantee to write the ACL for the applicable object.</p>  <p>This action is not supported by Amazon S3 on Outposts.</p>
    ///   - [`key(impl Into<String>)`](crate::client::fluent_builders::CopyObject::key) / [`set_key(Option<String>)`](crate::client::fluent_builders::CopyObject::set_key): <p>The key of the destination object.</p>
    ///   - [`metadata(HashMap<String, String>)`](crate::client::fluent_builders::CopyObject::metadata) / [`set_metadata(Option<HashMap<String, String>>)`](crate::client::fluent_builders::CopyObject::set_metadata): <p>A map of metadata to store with the object in S3.</p>
    ///   - [`metadata_directive(MetadataDirective)`](crate::client::fluent_builders::CopyObject::metadata_directive) / [`set_metadata_directive(Option<MetadataDirective>)`](crate::client::fluent_builders::CopyObject::set_metadata_directive): <p>Specifies whether the metadata is copied from the source object or replaced with metadata provided in the request.</p>
    ///   - [`tagging_directive(TaggingDirective)`](crate::client::fluent_builders::CopyObject::tagging_directive) / [`set_tagging_directive(Option<TaggingDirective>)`](crate::client::fluent_builders::CopyObject::set_tagging_directive): <p>Specifies whether the object tag-set are copied from the source object or replaced with tag-set provided in the request.</p>
    ///   - [`server_side_encryption(ServerSideEncryption)`](crate::client::fluent_builders::CopyObject::server_side_encryption) / [`set_server_side_encryption(Option<ServerSideEncryption>)`](crate::client::fluent_builders::CopyObject::set_server_side_encryption): <p>The server-side encryption algorithm used when storing this object in Amazon S3 (for example, AES256, aws:kms).</p>
    ///   - [`storage_class(StorageClass)`](crate::client::fluent_builders::CopyObject::storage_class) / [`set_storage_class(Option<StorageClass>)`](crate::client::fluent_builders::CopyObject::set_storage_class): <p>By default, Amazon S3 uses the STANDARD Storage Class to store newly created objects. The STANDARD storage class provides high durability and high availability. Depending on performance needs, you can specify a different Storage Class. Amazon S3 on Outposts only uses the OUTPOSTS Storage Class. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-class-intro.html">Storage Classes</a> in the <i>Amazon S3 User Guide</i>.</p>
    ///   - [`website_redirect_location(impl Into<String>)`](crate::client::fluent_builders::CopyObject::website_redirect_location) / [`set_website_redirect_location(Option<String>)`](crate::client::fluent_builders::CopyObject::set_website_redirect_location): <p>If the bucket is configured as a website, redirects requests for this object to another object in the same bucket or to an external URL. Amazon S3 stores the value of this header in the object metadata.</p>
    ///   - [`sse_customer_algorithm(impl Into<String>)`](crate::client::fluent_builders::CopyObject::sse_customer_algorithm) / [`set_sse_customer_algorithm(Option<String>)`](crate::client::fluent_builders::CopyObject::set_sse_customer_algorithm): <p>Specifies the algorithm to use to when encrypting the object (for example, AES256).</p>
    ///   - [`sse_customer_key(impl Into<String>)`](crate::client::fluent_builders::CopyObject::sse_customer_key) / [`set_sse_customer_key(Option<String>)`](crate::client::fluent_builders::CopyObject::set_sse_customer_key): <p>Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This value is used to store the object and then it is discarded; Amazon S3 does not store the encryption key. The key must be appropriate for use with the algorithm specified in the <code>x-amz-server-side-encryption-customer-algorithm</code> header.</p>
    ///   - [`sse_customer_key_md5(impl Into<String>)`](crate::client::fluent_builders::CopyObject::sse_customer_key_md5) / [`set_sse_customer_key_md5(Option<String>)`](crate::client::fluent_builders::CopyObject::set_sse_customer_key_md5): <p>Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure that the encryption key was transmitted without error.</p>
    ///   - [`ssekms_key_id(impl Into<String>)`](crate::client::fluent_builders::CopyObject::ssekms_key_id) / [`set_ssekms_key_id(Option<String>)`](crate::client::fluent_builders::CopyObject::set_ssekms_key_id): <p>Specifies the Amazon Web Services KMS key ID to use for object encryption. All GET and PUT requests for an object protected by Amazon Web Services KMS will fail if not made via SSL or using SigV4. For information about configuring using any of the officially supported Amazon Web Services SDKs and Amazon Web Services CLI, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingAWSSDK.html#specify-signature-version">Specifying the Signature Version in Request Authentication</a> in the <i>Amazon S3 User Guide</i>.</p>
    ///   - [`ssekms_encryption_context(impl Into<String>)`](crate::client::fluent_builders::CopyObject::ssekms_encryption_context) / [`set_ssekms_encryption_context(Option<String>)`](crate::client::fluent_builders::CopyObject::set_ssekms_encryption_context): <p>Specifies the Amazon Web Services KMS Encryption Context to use for object encryption. The value of this header is a base64-encoded UTF-8 string holding JSON with the encryption context key-value pairs.</p>
    ///   - [`bucket_key_enabled(bool)`](crate::client::fluent_builders::CopyObject::bucket_key_enabled) / [`set_bucket_key_enabled(bool)`](crate::client::fluent_builders::CopyObject::set_bucket_key_enabled): <p>Specifies whether Amazon S3 should use an S3 Bucket Key for object encryption with server-side encryption using AWS KMS (SSE-KMS). Setting this header to <code>true</code> causes Amazon S3 to use an S3 Bucket Key for object encryption with SSE-KMS. </p>  <p>Specifying this header with a COPY action doesn’t affect bucket-level settings for S3 Bucket Key.</p>
    ///   - [`copy_source_sse_customer_algorithm(impl Into<String>)`](crate::client::fluent_builders::CopyObject::copy_source_sse_customer_algorithm) / [`set_copy_source_sse_customer_algorithm(Option<String>)`](crate::client::fluent_builders::CopyObject::set_copy_source_sse_customer_algorithm): <p>Specifies the algorithm to use when decrypting the source object (for example, AES256).</p>
    ///   - [`copy_source_sse_customer_key(impl Into<String>)`](crate::client::fluent_builders::CopyObject::copy_source_sse_customer_key) / [`set_copy_source_sse_customer_key(Option<String>)`](crate::client::fluent_builders::CopyObject::set_copy_source_sse_customer_key): <p>Specifies the customer-provided encryption key for Amazon S3 to use to decrypt the source object. The encryption key provided in this header must be one that was used when the source object was created.</p>
    ///   - [`copy_source_sse_customer_key_md5(impl Into<String>)`](crate::client::fluent_builders::CopyObject::copy_source_sse_customer_key_md5) / [`set_copy_source_sse_customer_key_md5(Option<String>)`](crate::client::fluent_builders::CopyObject::set_copy_source_sse_customer_key_md5): <p>Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure that the encryption key was transmitted without error.</p>
    ///   - [`request_payer(RequestPayer)`](crate::client::fluent_builders::CopyObject::request_payer) / [`set_request_payer(Option<RequestPayer>)`](crate::client::fluent_builders::CopyObject::set_request_payer): <p>Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from Requester Pays buckets, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html">Downloading Objects in Requester Pays Buckets</a> in the <i>Amazon S3 User Guide</i>.</p>
    ///   - [`tagging(impl Into<String>)`](crate::client::fluent_builders::CopyObject::tagging) / [`set_tagging(Option<String>)`](crate::client::fluent_builders::CopyObject::set_tagging): <p>The tag-set for the object destination object this value must be used in conjunction with the <code>TaggingDirective</code>. The tag-set must be encoded as URL Query parameters.</p>
    ///   - [`object_lock_mode(ObjectLockMode)`](crate::client::fluent_builders::CopyObject::object_lock_mode) / [`set_object_lock_mode(Option<ObjectLockMode>)`](crate::client::fluent_builders::CopyObject::set_object_lock_mode): <p>The Object Lock mode that you want to apply to the copied object.</p>
    ///   - [`object_lock_retain_until_date(DateTime)`](crate::client::fluent_builders::CopyObject::object_lock_retain_until_date) / [`set_object_lock_retain_until_date(Option<DateTime>)`](crate::client::fluent_builders::CopyObject::set_object_lock_retain_until_date): <p>The date and time when you want the copied object's Object Lock to expire.</p>
    ///   - [`object_lock_legal_hold_status(ObjectLockLegalHoldStatus)`](crate::client::fluent_builders::CopyObject::object_lock_legal_hold_status) / [`set_object_lock_legal_hold_status(Option<ObjectLockLegalHoldStatus>)`](crate::client::fluent_builders::CopyObject::set_object_lock_legal_hold_status): <p>Specifies whether you want to apply a legal hold to the copied object.</p>
    ///   - [`expected_bucket_owner(impl Into<String>)`](crate::client::fluent_builders::CopyObject::expected_bucket_owner) / [`set_expected_bucket_owner(Option<String>)`](crate::client::fluent_builders::CopyObject::set_expected_bucket_owner): <p>The account ID of the expected destination bucket owner. If the destination bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
    ///   - [`expected_source_bucket_owner(impl Into<String>)`](crate::client::fluent_builders::CopyObject::expected_source_bucket_owner) / [`set_expected_source_bucket_owner(Option<String>)`](crate::client::fluent_builders::CopyObject::set_expected_source_bucket_owner): <p>The account ID of the expected source bucket owner. If the source bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
    /// - On success, responds with [`CopyObjectOutput`](crate::output::CopyObjectOutput) with field(s):
    ///   - [`copy_object_result(Option<CopyObjectResult>)`](crate::output::CopyObjectOutput::copy_object_result): <p>Container for all response elements.</p>
    ///   - [`expiration(Option<String>)`](crate::output::CopyObjectOutput::expiration): <p>If the object expiration is configured, the response includes this header.</p>
    ///   - [`copy_source_version_id(Option<String>)`](crate::output::CopyObjectOutput::copy_source_version_id): <p>Version of the copied object in the destination bucket.</p>
    ///   - [`version_id(Option<String>)`](crate::output::CopyObjectOutput::version_id): <p>Version ID of the newly created copy.</p>
    ///   - [`server_side_encryption(Option<ServerSideEncryption>)`](crate::output::CopyObjectOutput::server_side_encryption): <p>The server-side encryption algorithm used when storing this object in Amazon S3 (for example, AES256, aws:kms).</p>
    ///   - [`sse_customer_algorithm(Option<String>)`](crate::output::CopyObjectOutput::sse_customer_algorithm): <p>If server-side encryption with a customer-provided encryption key was requested, the response will include this header confirming the encryption algorithm used.</p>
    ///   - [`sse_customer_key_md5(Option<String>)`](crate::output::CopyObjectOutput::sse_customer_key_md5): <p>If server-side encryption with a customer-provided encryption key was requested, the response will include this header to provide round-trip message integrity verification of the customer-provided encryption key.</p>
    ///   - [`ssekms_key_id(Option<String>)`](crate::output::CopyObjectOutput::ssekms_key_id): <p>If present, specifies the ID of the Amazon Web Services Key Management Service (Amazon Web Services KMS) symmetric customer managed key that was used for the object.</p>
    ///   - [`ssekms_encryption_context(Option<String>)`](crate::output::CopyObjectOutput::ssekms_encryption_context): <p>If present, specifies the Amazon Web Services KMS Encryption Context to use for object encryption. The value of this header is a base64-encoded UTF-8 string holding JSON with the encryption context key-value pairs.</p>
    ///   - [`bucket_key_enabled(bool)`](crate::output::CopyObjectOutput::bucket_key_enabled): <p>Indicates whether the copied object uses an S3 Bucket Key for server-side encryption with Amazon Web Services KMS (SSE-KMS).</p>
    ///   - [`request_charged(Option<RequestCharged>)`](crate::output::CopyObjectOutput::request_charged): <p>If present, indicates that the requester was successfully charged for the request.</p>
    /// - On failure, responds with [`SdkError<CopyObjectError>`](crate::error::CopyObjectError)
    pub fn copy_object(&self) -> crate::client::fluent_builders::CopyObject {
        crate::client::fluent_builders::CopyObject::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`CreateBucket`](crate::client::fluent_builders::CreateBucket) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`acl(BucketCannedAcl)`](crate::client::fluent_builders::CreateBucket::acl) / [`set_acl(Option<BucketCannedAcl>)`](crate::client::fluent_builders::CreateBucket::set_acl): <p>The canned ACL to apply to the bucket.</p>
    ///   - [`bucket(impl Into<String>)`](crate::client::fluent_builders::CreateBucket::bucket) / [`set_bucket(Option<String>)`](crate::client::fluent_builders::CreateBucket::set_bucket): <p>The name of the bucket to create.</p>
    ///   - [`create_bucket_configuration(CreateBucketConfiguration)`](crate::client::fluent_builders::CreateBucket::create_bucket_configuration) / [`set_create_bucket_configuration(Option<CreateBucketConfiguration>)`](crate::client::fluent_builders::CreateBucket::set_create_bucket_configuration): <p>The configuration information for the bucket.</p>
    ///   - [`grant_full_control(impl Into<String>)`](crate::client::fluent_builders::CreateBucket::grant_full_control) / [`set_grant_full_control(Option<String>)`](crate::client::fluent_builders::CreateBucket::set_grant_full_control): <p>Allows grantee the read, write, read ACP, and write ACP permissions on the bucket.</p>
    ///   - [`grant_read(impl Into<String>)`](crate::client::fluent_builders::CreateBucket::grant_read) / [`set_grant_read(Option<String>)`](crate::client::fluent_builders::CreateBucket::set_grant_read): <p>Allows grantee to list the objects in the bucket.</p>
    ///   - [`grant_read_acp(impl Into<String>)`](crate::client::fluent_builders::CreateBucket::grant_read_acp) / [`set_grant_read_acp(Option<String>)`](crate::client::fluent_builders::CreateBucket::set_grant_read_acp): <p>Allows grantee to read the bucket ACL.</p>
    ///   - [`grant_write(impl Into<String>)`](crate::client::fluent_builders::CreateBucket::grant_write) / [`set_grant_write(Option<String>)`](crate::client::fluent_builders::CreateBucket::set_grant_write): <p>Allows grantee to create new objects in the bucket.</p>  <p>For the bucket and object owners of existing objects, also allows deletions and overwrites of those objects.</p>
    ///   - [`grant_write_acp(impl Into<String>)`](crate::client::fluent_builders::CreateBucket::grant_write_acp) / [`set_grant_write_acp(Option<String>)`](crate::client::fluent_builders::CreateBucket::set_grant_write_acp): <p>Allows grantee to write the ACL for the applicable bucket.</p>
    ///   - [`object_lock_enabled_for_bucket(bool)`](crate::client::fluent_builders::CreateBucket::object_lock_enabled_for_bucket) / [`set_object_lock_enabled_for_bucket(bool)`](crate::client::fluent_builders::CreateBucket::set_object_lock_enabled_for_bucket): <p>Specifies whether you want S3 Object Lock to be enabled for the new bucket.</p>
    ///   - [`object_ownership(ObjectOwnership)`](crate::client::fluent_builders::CreateBucket::object_ownership) / [`set_object_ownership(Option<ObjectOwnership>)`](crate::client::fluent_builders::CreateBucket::set_object_ownership): <p>The container element for object ownership for a bucket's ownership controls.</p>  <p>BucketOwnerPreferred - Objects uploaded to the bucket change ownership to the bucket owner if the objects are uploaded with the <code>bucket-owner-full-control</code> canned ACL.</p>  <p>ObjectWriter - The uploading account will own the object if the object is uploaded with the <code>bucket-owner-full-control</code> canned ACL.</p>  <p>BucketOwnerEnforced - Access control lists (ACLs) are disabled and no longer affect permissions. The bucket owner automatically owns and has full control over every object in the bucket. The bucket only accepts PUT requests that don't specify an ACL or bucket owner full control ACLs, such as the <code>bucket-owner-full-control</code> canned ACL or an equivalent form of this ACL expressed in the XML format.</p>
    /// - On success, responds with [`CreateBucketOutput`](crate::output::CreateBucketOutput) with field(s):
    ///   - [`location(Option<String>)`](crate::output::CreateBucketOutput::location): <p>A forward slash followed by the name of the bucket.</p>
    /// - On failure, responds with [`SdkError<CreateBucketError>`](crate::error::CreateBucketError)
    pub fn create_bucket(&self) -> crate::client::fluent_builders::CreateBucket {
        crate::client::fluent_builders::CreateBucket::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`CreateMultipartUpload`](crate::client::fluent_builders::CreateMultipartUpload) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`acl(ObjectCannedAcl)`](crate::client::fluent_builders::CreateMultipartUpload::acl) / [`set_acl(Option<ObjectCannedAcl>)`](crate::client::fluent_builders::CreateMultipartUpload::set_acl): <p>The canned ACL to apply to the object.</p>  <p>This action is not supported by Amazon S3 on Outposts.</p>
    ///   - [`bucket(impl Into<String>)`](crate::client::fluent_builders::CreateMultipartUpload::bucket) / [`set_bucket(Option<String>)`](crate::client::fluent_builders::CreateMultipartUpload::set_bucket): <p>The name of the bucket to which to initiate the upload</p>  <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p>  <p>When using this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <code> <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com</code>. When using this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts bucket ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">Using Amazon S3 on Outposts</a> in the <i>Amazon S3 User Guide</i>.</p>
    ///   - [`cache_control(impl Into<String>)`](crate::client::fluent_builders::CreateMultipartUpload::cache_control) / [`set_cache_control(Option<String>)`](crate::client::fluent_builders::CreateMultipartUpload::set_cache_control): <p>Specifies caching behavior along the request/reply chain.</p>
    ///   - [`content_disposition(impl Into<String>)`](crate::client::fluent_builders::CreateMultipartUpload::content_disposition) / [`set_content_disposition(Option<String>)`](crate::client::fluent_builders::CreateMultipartUpload::set_content_disposition): <p>Specifies presentational information for the object.</p>
    ///   - [`content_encoding(impl Into<String>)`](crate::client::fluent_builders::CreateMultipartUpload::content_encoding) / [`set_content_encoding(Option<String>)`](crate::client::fluent_builders::CreateMultipartUpload::set_content_encoding): <p>Specifies what content encodings have been applied to the object and thus what decoding mechanisms must be applied to obtain the media-type referenced by the Content-Type header field.</p>
    ///   - [`content_language(impl Into<String>)`](crate::client::fluent_builders::CreateMultipartUpload::content_language) / [`set_content_language(Option<String>)`](crate::client::fluent_builders::CreateMultipartUpload::set_content_language): <p>The language the content is in.</p>
    ///   - [`content_type(impl Into<String>)`](crate::client::fluent_builders::CreateMultipartUpload::content_type) / [`set_content_type(Option<String>)`](crate::client::fluent_builders::CreateMultipartUpload::set_content_type): <p>A standard MIME type describing the format of the object data.</p>
    ///   - [`expires(DateTime)`](crate::client::fluent_builders::CreateMultipartUpload::expires) / [`set_expires(Option<DateTime>)`](crate::client::fluent_builders::CreateMultipartUpload::set_expires): <p>The date and time at which the object is no longer cacheable.</p>
    ///   - [`grant_full_control(impl Into<String>)`](crate::client::fluent_builders::CreateMultipartUpload::grant_full_control) / [`set_grant_full_control(Option<String>)`](crate::client::fluent_builders::CreateMultipartUpload::set_grant_full_control): <p>Gives the grantee READ, READ_ACP, and WRITE_ACP permissions on the object.</p>  <p>This action is not supported by Amazon S3 on Outposts.</p>
    ///   - [`grant_read(impl Into<String>)`](crate::client::fluent_builders::CreateMultipartUpload::grant_read) / [`set_grant_read(Option<String>)`](crate::client::fluent_builders::CreateMultipartUpload::set_grant_read): <p>Allows grantee to read the object data and its metadata.</p>  <p>This action is not supported by Amazon S3 on Outposts.</p>
    ///   - [`grant_read_acp(impl Into<String>)`](crate::client::fluent_builders::CreateMultipartUpload::grant_read_acp) / [`set_grant_read_acp(Option<String>)`](crate::client::fluent_builders::CreateMultipartUpload::set_grant_read_acp): <p>Allows grantee to read the object ACL.</p>  <p>This action is not supported by Amazon S3 on Outposts.</p>
    ///   - [`grant_write_acp(impl Into<String>)`](crate::client::fluent_builders::CreateMultipartUpload::grant_write_acp) / [`set_grant_write_acp(Option<String>)`](crate::client::fluent_builders::CreateMultipartUpload::set_grant_write_acp): <p>Allows grantee to write the ACL for the applicable object.</p>  <p>This action is not supported by Amazon S3 on Outposts.</p>
    ///   - [`key(impl Into<String>)`](crate::client::fluent_builders::CreateMultipartUpload::key) / [`set_key(Option<String>)`](crate::client::fluent_builders::CreateMultipartUpload::set_key): <p>Object key for which the multipart upload is to be initiated.</p>
    ///   - [`metadata(HashMap<String, String>)`](crate::client::fluent_builders::CreateMultipartUpload::metadata) / [`set_metadata(Option<HashMap<String, String>>)`](crate::client::fluent_builders::CreateMultipartUpload::set_metadata): <p>A map of metadata to store with the object in S3.</p>
    ///   - [`server_side_encryption(ServerSideEncryption)`](crate::client::fluent_builders::CreateMultipartUpload::server_side_encryption) / [`set_server_side_encryption(Option<ServerSideEncryption>)`](crate::client::fluent_builders::CreateMultipartUpload::set_server_side_encryption): <p>The server-side encryption algorithm used when storing this object in Amazon S3 (for example, AES256, aws:kms).</p>
    ///   - [`storage_class(StorageClass)`](crate::client::fluent_builders::CreateMultipartUpload::storage_class) / [`set_storage_class(Option<StorageClass>)`](crate::client::fluent_builders::CreateMultipartUpload::set_storage_class): <p>By default, Amazon S3 uses the STANDARD Storage Class to store newly created objects. The STANDARD storage class provides high durability and high availability. Depending on performance needs, you can specify a different Storage Class. Amazon S3 on Outposts only uses the OUTPOSTS Storage Class. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-class-intro.html">Storage Classes</a> in the <i>Amazon S3 User Guide</i>.</p>
    ///   - [`website_redirect_location(impl Into<String>)`](crate::client::fluent_builders::CreateMultipartUpload::website_redirect_location) / [`set_website_redirect_location(Option<String>)`](crate::client::fluent_builders::CreateMultipartUpload::set_website_redirect_location): <p>If the bucket is configured as a website, redirects requests for this object to another object in the same bucket or to an external URL. Amazon S3 stores the value of this header in the object metadata.</p>
    ///   - [`sse_customer_algorithm(impl Into<String>)`](crate::client::fluent_builders::CreateMultipartUpload::sse_customer_algorithm) / [`set_sse_customer_algorithm(Option<String>)`](crate::client::fluent_builders::CreateMultipartUpload::set_sse_customer_algorithm): <p>Specifies the algorithm to use to when encrypting the object (for example, AES256).</p>
    ///   - [`sse_customer_key(impl Into<String>)`](crate::client::fluent_builders::CreateMultipartUpload::sse_customer_key) / [`set_sse_customer_key(Option<String>)`](crate::client::fluent_builders::CreateMultipartUpload::set_sse_customer_key): <p>Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This value is used to store the object and then it is discarded; Amazon S3 does not store the encryption key. The key must be appropriate for use with the algorithm specified in the <code>x-amz-server-side-encryption-customer-algorithm</code> header.</p>
    ///   - [`sse_customer_key_md5(impl Into<String>)`](crate::client::fluent_builders::CreateMultipartUpload::sse_customer_key_md5) / [`set_sse_customer_key_md5(Option<String>)`](crate::client::fluent_builders::CreateMultipartUpload::set_sse_customer_key_md5): <p>Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure that the encryption key was transmitted without error.</p>
    ///   - [`ssekms_key_id(impl Into<String>)`](crate::client::fluent_builders::CreateMultipartUpload::ssekms_key_id) / [`set_ssekms_key_id(Option<String>)`](crate::client::fluent_builders::CreateMultipartUpload::set_ssekms_key_id): <p>Specifies the ID of the symmetric customer managed key to use for object encryption. All GET and PUT requests for an object protected by Amazon Web Services KMS will fail if not made via SSL or using SigV4. For information about configuring using any of the officially supported Amazon Web Services SDKs and Amazon Web Services CLI, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingAWSSDK.html#specify-signature-version">Specifying the Signature Version in Request Authentication</a> in the <i>Amazon S3 User Guide</i>.</p>
    ///   - [`ssekms_encryption_context(impl Into<String>)`](crate::client::fluent_builders::CreateMultipartUpload::ssekms_encryption_context) / [`set_ssekms_encryption_context(Option<String>)`](crate::client::fluent_builders::CreateMultipartUpload::set_ssekms_encryption_context): <p>Specifies the Amazon Web Services KMS Encryption Context to use for object encryption. The value of this header is a base64-encoded UTF-8 string holding JSON with the encryption context key-value pairs.</p>
    ///   - [`bucket_key_enabled(bool)`](crate::client::fluent_builders::CreateMultipartUpload::bucket_key_enabled) / [`set_bucket_key_enabled(bool)`](crate::client::fluent_builders::CreateMultipartUpload::set_bucket_key_enabled): <p>Specifies whether Amazon S3 should use an S3 Bucket Key for object encryption with server-side encryption using AWS KMS (SSE-KMS). Setting this header to <code>true</code> causes Amazon S3 to use an S3 Bucket Key for object encryption with SSE-KMS.</p>  <p>Specifying this header with an object action doesn’t affect bucket-level settings for S3 Bucket Key.</p>
    ///   - [`request_payer(RequestPayer)`](crate::client::fluent_builders::CreateMultipartUpload::request_payer) / [`set_request_payer(Option<RequestPayer>)`](crate::client::fluent_builders::CreateMultipartUpload::set_request_payer): <p>Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from Requester Pays buckets, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html">Downloading Objects in Requester Pays Buckets</a> in the <i>Amazon S3 User Guide</i>.</p>
    ///   - [`tagging(impl Into<String>)`](crate::client::fluent_builders::CreateMultipartUpload::tagging) / [`set_tagging(Option<String>)`](crate::client::fluent_builders::CreateMultipartUpload::set_tagging): <p>The tag-set for the object. The tag-set must be encoded as URL Query parameters.</p>
    ///   - [`object_lock_mode(ObjectLockMode)`](crate::client::fluent_builders::CreateMultipartUpload::object_lock_mode) / [`set_object_lock_mode(Option<ObjectLockMode>)`](crate::client::fluent_builders::CreateMultipartUpload::set_object_lock_mode): <p>Specifies the Object Lock mode that you want to apply to the uploaded object.</p>
    ///   - [`object_lock_retain_until_date(DateTime)`](crate::client::fluent_builders::CreateMultipartUpload::object_lock_retain_until_date) / [`set_object_lock_retain_until_date(Option<DateTime>)`](crate::client::fluent_builders::CreateMultipartUpload::set_object_lock_retain_until_date): <p>Specifies the date and time when you want the Object Lock to expire.</p>
    ///   - [`object_lock_legal_hold_status(ObjectLockLegalHoldStatus)`](crate::client::fluent_builders::CreateMultipartUpload::object_lock_legal_hold_status) / [`set_object_lock_legal_hold_status(Option<ObjectLockLegalHoldStatus>)`](crate::client::fluent_builders::CreateMultipartUpload::set_object_lock_legal_hold_status): <p>Specifies whether you want to apply a legal hold to the uploaded object.</p>
    ///   - [`expected_bucket_owner(impl Into<String>)`](crate::client::fluent_builders::CreateMultipartUpload::expected_bucket_owner) / [`set_expected_bucket_owner(Option<String>)`](crate::client::fluent_builders::CreateMultipartUpload::set_expected_bucket_owner): <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
    ///   - [`checksum_algorithm(ChecksumAlgorithm)`](crate::client::fluent_builders::CreateMultipartUpload::checksum_algorithm) / [`set_checksum_algorithm(Option<ChecksumAlgorithm>)`](crate::client::fluent_builders::CreateMultipartUpload::set_checksum_algorithm): <p>Indicates the algorithm you want Amazon S3 to use to create the checksum for the object. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
    /// - On success, responds with [`CreateMultipartUploadOutput`](crate::output::CreateMultipartUploadOutput) with field(s):
    ///   - [`abort_date(Option<DateTime>)`](crate::output::CreateMultipartUploadOutput::abort_date): <p>If the bucket has a lifecycle rule configured with an action to abort incomplete multipart uploads and the prefix in the lifecycle rule matches the object name in the request, the response includes this header. The header indicates when the initiated multipart upload becomes eligible for an abort operation. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/mpuoverview.html#mpu-abort-incomplete-mpu-lifecycle-config"> Aborting Incomplete Multipart Uploads Using a Bucket Lifecycle Policy</a>.</p>  <p>The response also includes the <code>x-amz-abort-rule-id</code> header that provides the ID of the lifecycle configuration rule that defines this action.</p>
    ///   - [`abort_rule_id(Option<String>)`](crate::output::CreateMultipartUploadOutput::abort_rule_id): <p>This header is returned along with the <code>x-amz-abort-date</code> header. It identifies the applicable lifecycle configuration rule that defines the action to abort incomplete multipart uploads.</p>
    ///   - [`bucket(Option<String>)`](crate::output::CreateMultipartUploadOutput::bucket): <p>The name of the bucket to which the multipart upload was initiated. Does not return the access point ARN or access point alias if used.</p>  <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p>  <p>When using this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <code> <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com</code>. When using this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts bucket ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">Using Amazon S3 on Outposts</a> in the <i>Amazon S3 User Guide</i>.</p>
    ///   - [`key(Option<String>)`](crate::output::CreateMultipartUploadOutput::key): <p>Object key for which the multipart upload was initiated.</p>
    ///   - [`upload_id(Option<String>)`](crate::output::CreateMultipartUploadOutput::upload_id): <p>ID for the initiated multipart upload.</p>
    ///   - [`server_side_encryption(Option<ServerSideEncryption>)`](crate::output::CreateMultipartUploadOutput::server_side_encryption): <p>The server-side encryption algorithm used when storing this object in Amazon S3 (for example, AES256, aws:kms).</p>
    ///   - [`sse_customer_algorithm(Option<String>)`](crate::output::CreateMultipartUploadOutput::sse_customer_algorithm): <p>If server-side encryption with a customer-provided encryption key was requested, the response will include this header confirming the encryption algorithm used.</p>
    ///   - [`sse_customer_key_md5(Option<String>)`](crate::output::CreateMultipartUploadOutput::sse_customer_key_md5): <p>If server-side encryption with a customer-provided encryption key was requested, the response will include this header to provide round-trip message integrity verification of the customer-provided encryption key.</p>
    ///   - [`ssekms_key_id(Option<String>)`](crate::output::CreateMultipartUploadOutput::ssekms_key_id): <p>If present, specifies the ID of the Amazon Web Services Key Management Service (Amazon Web Services KMS) symmetric customer managed key that was used for the object.</p>
    ///   - [`ssekms_encryption_context(Option<String>)`](crate::output::CreateMultipartUploadOutput::ssekms_encryption_context): <p>If present, specifies the Amazon Web Services KMS Encryption Context to use for object encryption. The value of this header is a base64-encoded UTF-8 string holding JSON with the encryption context key-value pairs.</p>
    ///   - [`bucket_key_enabled(bool)`](crate::output::CreateMultipartUploadOutput::bucket_key_enabled): <p>Indicates whether the multipart upload uses an S3 Bucket Key for server-side encryption with Amazon Web Services KMS (SSE-KMS).</p>
    ///   - [`request_charged(Option<RequestCharged>)`](crate::output::CreateMultipartUploadOutput::request_charged): <p>If present, indicates that the requester was successfully charged for the request.</p>
    ///   - [`checksum_algorithm(Option<ChecksumAlgorithm>)`](crate::output::CreateMultipartUploadOutput::checksum_algorithm): <p>The algorithm that was used to create a checksum of the object.</p>
    /// - On failure, responds with [`SdkError<CreateMultipartUploadError>`](crate::error::CreateMultipartUploadError)
    pub fn create_multipart_upload(&self) -> crate::client::fluent_builders::CreateMultipartUpload {
        crate::client::fluent_builders::CreateMultipartUpload::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteBucket`](crate::client::fluent_builders::DeleteBucket) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`bucket(impl Into<String>)`](crate::client::fluent_builders::DeleteBucket::bucket) / [`set_bucket(Option<String>)`](crate::client::fluent_builders::DeleteBucket::set_bucket): <p>Specifies the bucket being deleted.</p>
    ///   - [`expected_bucket_owner(impl Into<String>)`](crate::client::fluent_builders::DeleteBucket::expected_bucket_owner) / [`set_expected_bucket_owner(Option<String>)`](crate::client::fluent_builders::DeleteBucket::set_expected_bucket_owner): <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
    /// - On success, responds with [`DeleteBucketOutput`](crate::output::DeleteBucketOutput)

    /// - On failure, responds with [`SdkError<DeleteBucketError>`](crate::error::DeleteBucketError)
    pub fn delete_bucket(&self) -> crate::client::fluent_builders::DeleteBucket {
        crate::client::fluent_builders::DeleteBucket::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteBucketAnalyticsConfiguration`](crate::client::fluent_builders::DeleteBucketAnalyticsConfiguration) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`bucket(impl Into<String>)`](crate::client::fluent_builders::DeleteBucketAnalyticsConfiguration::bucket) / [`set_bucket(Option<String>)`](crate::client::fluent_builders::DeleteBucketAnalyticsConfiguration::set_bucket): <p>The name of the bucket from which an analytics configuration is deleted.</p>
    ///   - [`id(impl Into<String>)`](crate::client::fluent_builders::DeleteBucketAnalyticsConfiguration::id) / [`set_id(Option<String>)`](crate::client::fluent_builders::DeleteBucketAnalyticsConfiguration::set_id): <p>The ID that identifies the analytics configuration.</p>
    ///   - [`expected_bucket_owner(impl Into<String>)`](crate::client::fluent_builders::DeleteBucketAnalyticsConfiguration::expected_bucket_owner) / [`set_expected_bucket_owner(Option<String>)`](crate::client::fluent_builders::DeleteBucketAnalyticsConfiguration::set_expected_bucket_owner): <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
    /// - On success, responds with [`DeleteBucketAnalyticsConfigurationOutput`](crate::output::DeleteBucketAnalyticsConfigurationOutput)

    /// - On failure, responds with [`SdkError<DeleteBucketAnalyticsConfigurationError>`](crate::error::DeleteBucketAnalyticsConfigurationError)
    pub fn delete_bucket_analytics_configuration(
        &self,
    ) -> crate::client::fluent_builders::DeleteBucketAnalyticsConfiguration {
        crate::client::fluent_builders::DeleteBucketAnalyticsConfiguration::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteBucketCors`](crate::client::fluent_builders::DeleteBucketCors) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`bucket(impl Into<String>)`](crate::client::fluent_builders::DeleteBucketCors::bucket) / [`set_bucket(Option<String>)`](crate::client::fluent_builders::DeleteBucketCors::set_bucket): <p>Specifies the bucket whose <code>cors</code> configuration is being deleted.</p>
    ///   - [`expected_bucket_owner(impl Into<String>)`](crate::client::fluent_builders::DeleteBucketCors::expected_bucket_owner) / [`set_expected_bucket_owner(Option<String>)`](crate::client::fluent_builders::DeleteBucketCors::set_expected_bucket_owner): <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
    /// - On success, responds with [`DeleteBucketCorsOutput`](crate::output::DeleteBucketCorsOutput)

    /// - On failure, responds with [`SdkError<DeleteBucketCorsError>`](crate::error::DeleteBucketCorsError)
    pub fn delete_bucket_cors(&self) -> crate::client::fluent_builders::DeleteBucketCors {
        crate::client::fluent_builders::DeleteBucketCors::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteBucketEncryption`](crate::client::fluent_builders::DeleteBucketEncryption) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`bucket(impl Into<String>)`](crate::client::fluent_builders::DeleteBucketEncryption::bucket) / [`set_bucket(Option<String>)`](crate::client::fluent_builders::DeleteBucketEncryption::set_bucket): <p>The name of the bucket containing the server-side encryption configuration to delete.</p>
    ///   - [`expected_bucket_owner(impl Into<String>)`](crate::client::fluent_builders::DeleteBucketEncryption::expected_bucket_owner) / [`set_expected_bucket_owner(Option<String>)`](crate::client::fluent_builders::DeleteBucketEncryption::set_expected_bucket_owner): <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
    /// - On success, responds with [`DeleteBucketEncryptionOutput`](crate::output::DeleteBucketEncryptionOutput)

    /// - On failure, responds with [`SdkError<DeleteBucketEncryptionError>`](crate::error::DeleteBucketEncryptionError)
    pub fn delete_bucket_encryption(
        &self,
    ) -> crate::client::fluent_builders::DeleteBucketEncryption {
        crate::client::fluent_builders::DeleteBucketEncryption::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteBucketIntelligentTieringConfiguration`](crate::client::fluent_builders::DeleteBucketIntelligentTieringConfiguration) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`bucket(impl Into<String>)`](crate::client::fluent_builders::DeleteBucketIntelligentTieringConfiguration::bucket) / [`set_bucket(Option<String>)`](crate::client::fluent_builders::DeleteBucketIntelligentTieringConfiguration::set_bucket): <p>The name of the Amazon S3 bucket whose configuration you want to modify or retrieve.</p>
    ///   - [`id(impl Into<String>)`](crate::client::fluent_builders::DeleteBucketIntelligentTieringConfiguration::id) / [`set_id(Option<String>)`](crate::client::fluent_builders::DeleteBucketIntelligentTieringConfiguration::set_id): <p>The ID used to identify the S3 Intelligent-Tiering configuration.</p>
    /// - On success, responds with [`DeleteBucketIntelligentTieringConfigurationOutput`](crate::output::DeleteBucketIntelligentTieringConfigurationOutput)

    /// - On failure, responds with [`SdkError<DeleteBucketIntelligentTieringConfigurationError>`](crate::error::DeleteBucketIntelligentTieringConfigurationError)
    pub fn delete_bucket_intelligent_tiering_configuration(
        &self,
    ) -> crate::client::fluent_builders::DeleteBucketIntelligentTieringConfiguration {
        crate::client::fluent_builders::DeleteBucketIntelligentTieringConfiguration::new(
            self.handle.clone(),
        )
    }
    /// Constructs a fluent builder for the [`DeleteBucketInventoryConfiguration`](crate::client::fluent_builders::DeleteBucketInventoryConfiguration) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`bucket(impl Into<String>)`](crate::client::fluent_builders::DeleteBucketInventoryConfiguration::bucket) / [`set_bucket(Option<String>)`](crate::client::fluent_builders::DeleteBucketInventoryConfiguration::set_bucket): <p>The name of the bucket containing the inventory configuration to delete.</p>
    ///   - [`id(impl Into<String>)`](crate::client::fluent_builders::DeleteBucketInventoryConfiguration::id) / [`set_id(Option<String>)`](crate::client::fluent_builders::DeleteBucketInventoryConfiguration::set_id): <p>The ID used to identify the inventory configuration.</p>
    ///   - [`expected_bucket_owner(impl Into<String>)`](crate::client::fluent_builders::DeleteBucketInventoryConfiguration::expected_bucket_owner) / [`set_expected_bucket_owner(Option<String>)`](crate::client::fluent_builders::DeleteBucketInventoryConfiguration::set_expected_bucket_owner): <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
    /// - On success, responds with [`DeleteBucketInventoryConfigurationOutput`](crate::output::DeleteBucketInventoryConfigurationOutput)

    /// - On failure, responds with [`SdkError<DeleteBucketInventoryConfigurationError>`](crate::error::DeleteBucketInventoryConfigurationError)
    pub fn delete_bucket_inventory_configuration(
        &self,
    ) -> crate::client::fluent_builders::DeleteBucketInventoryConfiguration {
        crate::client::fluent_builders::DeleteBucketInventoryConfiguration::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteBucketLifecycle`](crate::client::fluent_builders::DeleteBucketLifecycle) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`bucket(impl Into<String>)`](crate::client::fluent_builders::DeleteBucketLifecycle::bucket) / [`set_bucket(Option<String>)`](crate::client::fluent_builders::DeleteBucketLifecycle::set_bucket): <p>The bucket name of the lifecycle to delete.</p>
    ///   - [`expected_bucket_owner(impl Into<String>)`](crate::client::fluent_builders::DeleteBucketLifecycle::expected_bucket_owner) / [`set_expected_bucket_owner(Option<String>)`](crate::client::fluent_builders::DeleteBucketLifecycle::set_expected_bucket_owner): <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
    /// - On success, responds with [`DeleteBucketLifecycleOutput`](crate::output::DeleteBucketLifecycleOutput)

    /// - On failure, responds with [`SdkError<DeleteBucketLifecycleError>`](crate::error::DeleteBucketLifecycleError)
    pub fn delete_bucket_lifecycle(&self) -> crate::client::fluent_builders::DeleteBucketLifecycle {
        crate::client::fluent_builders::DeleteBucketLifecycle::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteBucketMetricsConfiguration`](crate::client::fluent_builders::DeleteBucketMetricsConfiguration) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`bucket(impl Into<String>)`](crate::client::fluent_builders::DeleteBucketMetricsConfiguration::bucket) / [`set_bucket(Option<String>)`](crate::client::fluent_builders::DeleteBucketMetricsConfiguration::set_bucket): <p>The name of the bucket containing the metrics configuration to delete.</p>
    ///   - [`id(impl Into<String>)`](crate::client::fluent_builders::DeleteBucketMetricsConfiguration::id) / [`set_id(Option<String>)`](crate::client::fluent_builders::DeleteBucketMetricsConfiguration::set_id): <p>The ID used to identify the metrics configuration.</p>
    ///   - [`expected_bucket_owner(impl Into<String>)`](crate::client::fluent_builders::DeleteBucketMetricsConfiguration::expected_bucket_owner) / [`set_expected_bucket_owner(Option<String>)`](crate::client::fluent_builders::DeleteBucketMetricsConfiguration::set_expected_bucket_owner): <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
    /// - On success, responds with [`DeleteBucketMetricsConfigurationOutput`](crate::output::DeleteBucketMetricsConfigurationOutput)

    /// - On failure, responds with [`SdkError<DeleteBucketMetricsConfigurationError>`](crate::error::DeleteBucketMetricsConfigurationError)
    pub fn delete_bucket_metrics_configuration(
        &self,
    ) -> crate::client::fluent_builders::DeleteBucketMetricsConfiguration {
        crate::client::fluent_builders::DeleteBucketMetricsConfiguration::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteBucketOwnershipControls`](crate::client::fluent_builders::DeleteBucketOwnershipControls) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`bucket(impl Into<String>)`](crate::client::fluent_builders::DeleteBucketOwnershipControls::bucket) / [`set_bucket(Option<String>)`](crate::client::fluent_builders::DeleteBucketOwnershipControls::set_bucket): <p>The Amazon S3 bucket whose <code>OwnershipControls</code> you want to delete. </p>
    ///   - [`expected_bucket_owner(impl Into<String>)`](crate::client::fluent_builders::DeleteBucketOwnershipControls::expected_bucket_owner) / [`set_expected_bucket_owner(Option<String>)`](crate::client::fluent_builders::DeleteBucketOwnershipControls::set_expected_bucket_owner): <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
    /// - On success, responds with [`DeleteBucketOwnershipControlsOutput`](crate::output::DeleteBucketOwnershipControlsOutput)

    /// - On failure, responds with [`SdkError<DeleteBucketOwnershipControlsError>`](crate::error::DeleteBucketOwnershipControlsError)
    pub fn delete_bucket_ownership_controls(
        &self,
    ) -> crate::client::fluent_builders::DeleteBucketOwnershipControls {
        crate::client::fluent_builders::DeleteBucketOwnershipControls::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteBucketPolicy`](crate::client::fluent_builders::DeleteBucketPolicy) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`bucket(impl Into<String>)`](crate::client::fluent_builders::DeleteBucketPolicy::bucket) / [`set_bucket(Option<String>)`](crate::client::fluent_builders::DeleteBucketPolicy::set_bucket): <p>The bucket name.</p>
    ///   - [`expected_bucket_owner(impl Into<String>)`](crate::client::fluent_builders::DeleteBucketPolicy::expected_bucket_owner) / [`set_expected_bucket_owner(Option<String>)`](crate::client::fluent_builders::DeleteBucketPolicy::set_expected_bucket_owner): <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
    /// - On success, responds with [`DeleteBucketPolicyOutput`](crate::output::DeleteBucketPolicyOutput)

    /// - On failure, responds with [`SdkError<DeleteBucketPolicyError>`](crate::error::DeleteBucketPolicyError)
    pub fn delete_bucket_policy(&self) -> crate::client::fluent_builders::DeleteBucketPolicy {
        crate::client::fluent_builders::DeleteBucketPolicy::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteBucketReplication`](crate::client::fluent_builders::DeleteBucketReplication) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`bucket(impl Into<String>)`](crate::client::fluent_builders::DeleteBucketReplication::bucket) / [`set_bucket(Option<String>)`](crate::client::fluent_builders::DeleteBucketReplication::set_bucket): <p> The bucket name. </p>
    ///   - [`expected_bucket_owner(impl Into<String>)`](crate::client::fluent_builders::DeleteBucketReplication::expected_bucket_owner) / [`set_expected_bucket_owner(Option<String>)`](crate::client::fluent_builders::DeleteBucketReplication::set_expected_bucket_owner): <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
    /// - On success, responds with [`DeleteBucketReplicationOutput`](crate::output::DeleteBucketReplicationOutput)

    /// - On failure, responds with [`SdkError<DeleteBucketReplicationError>`](crate::error::DeleteBucketReplicationError)
    pub fn delete_bucket_replication(
        &self,
    ) -> crate::client::fluent_builders::DeleteBucketReplication {
        crate::client::fluent_builders::DeleteBucketReplication::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteBucketTagging`](crate::client::fluent_builders::DeleteBucketTagging) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`bucket(impl Into<String>)`](crate::client::fluent_builders::DeleteBucketTagging::bucket) / [`set_bucket(Option<String>)`](crate::client::fluent_builders::DeleteBucketTagging::set_bucket): <p>The bucket that has the tag set to be removed.</p>
    ///   - [`expected_bucket_owner(impl Into<String>)`](crate::client::fluent_builders::DeleteBucketTagging::expected_bucket_owner) / [`set_expected_bucket_owner(Option<String>)`](crate::client::fluent_builders::DeleteBucketTagging::set_expected_bucket_owner): <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
    /// - On success, responds with [`DeleteBucketTaggingOutput`](crate::output::DeleteBucketTaggingOutput)

    /// - On failure, responds with [`SdkError<DeleteBucketTaggingError>`](crate::error::DeleteBucketTaggingError)
    pub fn delete_bucket_tagging(&self) -> crate::client::fluent_builders::DeleteBucketTagging {
        crate::client::fluent_builders::DeleteBucketTagging::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteBucketWebsite`](crate::client::fluent_builders::DeleteBucketWebsite) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`bucket(impl Into<String>)`](crate::client::fluent_builders::DeleteBucketWebsite::bucket) / [`set_bucket(Option<String>)`](crate::client::fluent_builders::DeleteBucketWebsite::set_bucket): <p>The bucket name for which you want to remove the website configuration. </p>
    ///   - [`expected_bucket_owner(impl Into<String>)`](crate::client::fluent_builders::DeleteBucketWebsite::expected_bucket_owner) / [`set_expected_bucket_owner(Option<String>)`](crate::client::fluent_builders::DeleteBucketWebsite::set_expected_bucket_owner): <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
    /// - On success, responds with [`DeleteBucketWebsiteOutput`](crate::output::DeleteBucketWebsiteOutput)

    /// - On failure, responds with [`SdkError<DeleteBucketWebsiteError>`](crate::error::DeleteBucketWebsiteError)
    pub fn delete_bucket_website(&self) -> crate::client::fluent_builders::DeleteBucketWebsite {
        crate::client::fluent_builders::DeleteBucketWebsite::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteObject`](crate::client::fluent_builders::DeleteObject) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`bucket(impl Into<String>)`](crate::client::fluent_builders::DeleteObject::bucket) / [`set_bucket(Option<String>)`](crate::client::fluent_builders::DeleteObject::set_bucket): <p>The bucket name of the bucket containing the object. </p>  <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p>  <p>When using this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <code> <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com</code>. When using this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts bucket ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">Using Amazon S3 on Outposts</a> in the <i>Amazon S3 User Guide</i>.</p>
    ///   - [`key(impl Into<String>)`](crate::client::fluent_builders::DeleteObject::key) / [`set_key(Option<String>)`](crate::client::fluent_builders::DeleteObject::set_key): <p>Key name of the object to delete.</p>
    ///   - [`mfa(impl Into<String>)`](crate::client::fluent_builders::DeleteObject::mfa) / [`set_mfa(Option<String>)`](crate::client::fluent_builders::DeleteObject::set_mfa): <p>The concatenation of the authentication device's serial number, a space, and the value that is displayed on your authentication device. Required to permanently delete a versioned object if versioning is configured with MFA delete enabled.</p>
    ///   - [`version_id(impl Into<String>)`](crate::client::fluent_builders::DeleteObject::version_id) / [`set_version_id(Option<String>)`](crate::client::fluent_builders::DeleteObject::set_version_id): <p>VersionId used to reference a specific version of the object.</p>
    ///   - [`request_payer(RequestPayer)`](crate::client::fluent_builders::DeleteObject::request_payer) / [`set_request_payer(Option<RequestPayer>)`](crate::client::fluent_builders::DeleteObject::set_request_payer): <p>Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from Requester Pays buckets, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html">Downloading Objects in Requester Pays Buckets</a> in the <i>Amazon S3 User Guide</i>.</p>
    ///   - [`bypass_governance_retention(bool)`](crate::client::fluent_builders::DeleteObject::bypass_governance_retention) / [`set_bypass_governance_retention(bool)`](crate::client::fluent_builders::DeleteObject::set_bypass_governance_retention): <p>Indicates whether S3 Object Lock should bypass Governance-mode restrictions to process this operation. To use this header, you must have the <code>s3:BypassGovernanceRetention</code> permission.</p>
    ///   - [`expected_bucket_owner(impl Into<String>)`](crate::client::fluent_builders::DeleteObject::expected_bucket_owner) / [`set_expected_bucket_owner(Option<String>)`](crate::client::fluent_builders::DeleteObject::set_expected_bucket_owner): <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
    /// - On success, responds with [`DeleteObjectOutput`](crate::output::DeleteObjectOutput) with field(s):
    ///   - [`delete_marker(bool)`](crate::output::DeleteObjectOutput::delete_marker): <p>Specifies whether the versioned object that was permanently deleted was (true) or was not (false) a delete marker.</p>
    ///   - [`version_id(Option<String>)`](crate::output::DeleteObjectOutput::version_id): <p>Returns the version ID of the delete marker created as a result of the DELETE operation.</p>
    ///   - [`request_charged(Option<RequestCharged>)`](crate::output::DeleteObjectOutput::request_charged): <p>If present, indicates that the requester was successfully charged for the request.</p>
    /// - On failure, responds with [`SdkError<DeleteObjectError>`](crate::error::DeleteObjectError)
    pub fn delete_object(&self) -> crate::client::fluent_builders::DeleteObject {
        crate::client::fluent_builders::DeleteObject::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteObjects`](crate::client::fluent_builders::DeleteObjects) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`bucket(impl Into<String>)`](crate::client::fluent_builders::DeleteObjects::bucket) / [`set_bucket(Option<String>)`](crate::client::fluent_builders::DeleteObjects::set_bucket): <p>The bucket name containing the objects to delete. </p>  <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p>  <p>When using this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <code> <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com</code>. When using this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts bucket ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">Using Amazon S3 on Outposts</a> in the <i>Amazon S3 User Guide</i>.</p>
    ///   - [`delete(Delete)`](crate::client::fluent_builders::DeleteObjects::delete) / [`set_delete(Option<Delete>)`](crate::client::fluent_builders::DeleteObjects::set_delete): <p>Container for the request.</p>
    ///   - [`mfa(impl Into<String>)`](crate::client::fluent_builders::DeleteObjects::mfa) / [`set_mfa(Option<String>)`](crate::client::fluent_builders::DeleteObjects::set_mfa): <p>The concatenation of the authentication device's serial number, a space, and the value that is displayed on your authentication device. Required to permanently delete a versioned object if versioning is configured with MFA delete enabled.</p>
    ///   - [`request_payer(RequestPayer)`](crate::client::fluent_builders::DeleteObjects::request_payer) / [`set_request_payer(Option<RequestPayer>)`](crate::client::fluent_builders::DeleteObjects::set_request_payer): <p>Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from Requester Pays buckets, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html">Downloading Objects in Requester Pays Buckets</a> in the <i>Amazon S3 User Guide</i>.</p>
    ///   - [`bypass_governance_retention(bool)`](crate::client::fluent_builders::DeleteObjects::bypass_governance_retention) / [`set_bypass_governance_retention(bool)`](crate::client::fluent_builders::DeleteObjects::set_bypass_governance_retention): <p>Specifies whether you want to delete this object even if it has a Governance-type Object Lock in place. To use this header, you must have the <code>s3:BypassGovernanceRetention</code> permission.</p>
    ///   - [`expected_bucket_owner(impl Into<String>)`](crate::client::fluent_builders::DeleteObjects::expected_bucket_owner) / [`set_expected_bucket_owner(Option<String>)`](crate::client::fluent_builders::DeleteObjects::set_expected_bucket_owner): <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
    ///   - [`checksum_algorithm(ChecksumAlgorithm)`](crate::client::fluent_builders::DeleteObjects::checksum_algorithm) / [`set_checksum_algorithm(Option<ChecksumAlgorithm>)`](crate::client::fluent_builders::DeleteObjects::set_checksum_algorithm): <p>Indicates the algorithm used to create the checksum for the object when using the SDK. This header will not provide any additional functionality if not using the SDK. When sending this header, there must be a corresponding <code>x-amz-checksum</code> or <code>x-amz-trailer</code> header sent. Otherwise, Amazon S3 fails the request with the HTTP status code <code>400 Bad Request</code>. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>  <p>If you provide an individual checksum, Amazon S3 ignores any provided <code>ChecksumAlgorithm</code> parameter.</p>  <p>This checksum algorithm must be the same for all parts and it match the checksum value supplied in the <code>CreateMultipartUpload</code> request.</p>
    /// - On success, responds with [`DeleteObjectsOutput`](crate::output::DeleteObjectsOutput) with field(s):
    ///   - [`deleted(Option<Vec<DeletedObject>>)`](crate::output::DeleteObjectsOutput::deleted): <p>Container element for a successful delete. It identifies the object that was successfully deleted.</p>
    ///   - [`request_charged(Option<RequestCharged>)`](crate::output::DeleteObjectsOutput::request_charged): <p>If present, indicates that the requester was successfully charged for the request.</p>
    ///   - [`errors(Option<Vec<Error>>)`](crate::output::DeleteObjectsOutput::errors): <p>Container for a failed delete action that describes the object that Amazon S3 attempted to delete and the error it encountered.</p>
    /// - On failure, responds with [`SdkError<DeleteObjectsError>`](crate::error::DeleteObjectsError)
    pub fn delete_objects(&self) -> crate::client::fluent_builders::DeleteObjects {
        crate::client::fluent_builders::DeleteObjects::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteObjectTagging`](crate::client::fluent_builders::DeleteObjectTagging) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`bucket(impl Into<String>)`](crate::client::fluent_builders::DeleteObjectTagging::bucket) / [`set_bucket(Option<String>)`](crate::client::fluent_builders::DeleteObjectTagging::set_bucket): <p>The bucket name containing the objects from which to remove the tags. </p>  <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p>  <p>When using this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <code> <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com</code>. When using this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts bucket ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">Using Amazon S3 on Outposts</a> in the <i>Amazon S3 User Guide</i>.</p>
    ///   - [`key(impl Into<String>)`](crate::client::fluent_builders::DeleteObjectTagging::key) / [`set_key(Option<String>)`](crate::client::fluent_builders::DeleteObjectTagging::set_key): <p>The key that identifies the object in the bucket from which to remove all tags.</p>
    ///   - [`version_id(impl Into<String>)`](crate::client::fluent_builders::DeleteObjectTagging::version_id) / [`set_version_id(Option<String>)`](crate::client::fluent_builders::DeleteObjectTagging::set_version_id): <p>The versionId of the object that the tag-set will be removed from.</p>
    ///   - [`expected_bucket_owner(impl Into<String>)`](crate::client::fluent_builders::DeleteObjectTagging::expected_bucket_owner) / [`set_expected_bucket_owner(Option<String>)`](crate::client::fluent_builders::DeleteObjectTagging::set_expected_bucket_owner): <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
    /// - On success, responds with [`DeleteObjectTaggingOutput`](crate::output::DeleteObjectTaggingOutput) with field(s):
    ///   - [`version_id(Option<String>)`](crate::output::DeleteObjectTaggingOutput::version_id): <p>The versionId of the object the tag-set was removed from.</p>
    /// - On failure, responds with [`SdkError<DeleteObjectTaggingError>`](crate::error::DeleteObjectTaggingError)
    pub fn delete_object_tagging(&self) -> crate::client::fluent_builders::DeleteObjectTagging {
        crate::client::fluent_builders::DeleteObjectTagging::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeletePublicAccessBlock`](crate::client::fluent_builders::DeletePublicAccessBlock) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`bucket(impl Into<String>)`](crate::client::fluent_builders::DeletePublicAccessBlock::bucket) / [`set_bucket(Option<String>)`](crate::client::fluent_builders::DeletePublicAccessBlock::set_bucket): <p>The Amazon S3 bucket whose <code>PublicAccessBlock</code> configuration you want to delete. </p>
    ///   - [`expected_bucket_owner(impl Into<String>)`](crate::client::fluent_builders::DeletePublicAccessBlock::expected_bucket_owner) / [`set_expected_bucket_owner(Option<String>)`](crate::client::fluent_builders::DeletePublicAccessBlock::set_expected_bucket_owner): <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
    /// - On success, responds with [`DeletePublicAccessBlockOutput`](crate::output::DeletePublicAccessBlockOutput)

    /// - On failure, responds with [`SdkError<DeletePublicAccessBlockError>`](crate::error::DeletePublicAccessBlockError)
    pub fn delete_public_access_block(
        &self,
    ) -> crate::client::fluent_builders::DeletePublicAccessBlock {
        crate::client::fluent_builders::DeletePublicAccessBlock::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetBucketAccelerateConfiguration`](crate::client::fluent_builders::GetBucketAccelerateConfiguration) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`bucket(impl Into<String>)`](crate::client::fluent_builders::GetBucketAccelerateConfiguration::bucket) / [`set_bucket(Option<String>)`](crate::client::fluent_builders::GetBucketAccelerateConfiguration::set_bucket): <p>The name of the bucket for which the accelerate configuration is retrieved.</p>
    ///   - [`expected_bucket_owner(impl Into<String>)`](crate::client::fluent_builders::GetBucketAccelerateConfiguration::expected_bucket_owner) / [`set_expected_bucket_owner(Option<String>)`](crate::client::fluent_builders::GetBucketAccelerateConfiguration::set_expected_bucket_owner): <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
    /// - On success, responds with [`GetBucketAccelerateConfigurationOutput`](crate::output::GetBucketAccelerateConfigurationOutput) with field(s):
    ///   - [`status(Option<BucketAccelerateStatus>)`](crate::output::GetBucketAccelerateConfigurationOutput::status): <p>The accelerate configuration of the bucket.</p>
    /// - On failure, responds with [`SdkError<GetBucketAccelerateConfigurationError>`](crate::error::GetBucketAccelerateConfigurationError)
    pub fn get_bucket_accelerate_configuration(
        &self,
    ) -> crate::client::fluent_builders::GetBucketAccelerateConfiguration {
        crate::client::fluent_builders::GetBucketAccelerateConfiguration::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetBucketAcl`](crate::client::fluent_builders::GetBucketAcl) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`bucket(impl Into<String>)`](crate::client::fluent_builders::GetBucketAcl::bucket) / [`set_bucket(Option<String>)`](crate::client::fluent_builders::GetBucketAcl::set_bucket): <p>Specifies the S3 bucket whose ACL is being requested.</p>
    ///   - [`expected_bucket_owner(impl Into<String>)`](crate::client::fluent_builders::GetBucketAcl::expected_bucket_owner) / [`set_expected_bucket_owner(Option<String>)`](crate::client::fluent_builders::GetBucketAcl::set_expected_bucket_owner): <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
    /// - On success, responds with [`GetBucketAclOutput`](crate::output::GetBucketAclOutput) with field(s):
    ///   - [`owner(Option<Owner>)`](crate::output::GetBucketAclOutput::owner): <p>Container for the bucket owner's display name and ID.</p>
    ///   - [`grants(Option<Vec<Grant>>)`](crate::output::GetBucketAclOutput::grants): <p>A list of grants.</p>
    /// - On failure, responds with [`SdkError<GetBucketAclError>`](crate::error::GetBucketAclError)
    pub fn get_bucket_acl(&self) -> crate::client::fluent_builders::GetBucketAcl {
        crate::client::fluent_builders::GetBucketAcl::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetBucketAnalyticsConfiguration`](crate::client::fluent_builders::GetBucketAnalyticsConfiguration) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`bucket(impl Into<String>)`](crate::client::fluent_builders::GetBucketAnalyticsConfiguration::bucket) / [`set_bucket(Option<String>)`](crate::client::fluent_builders::GetBucketAnalyticsConfiguration::set_bucket): <p>The name of the bucket from which an analytics configuration is retrieved.</p>
    ///   - [`id(impl Into<String>)`](crate::client::fluent_builders::GetBucketAnalyticsConfiguration::id) / [`set_id(Option<String>)`](crate::client::fluent_builders::GetBucketAnalyticsConfiguration::set_id): <p>The ID that identifies the analytics configuration.</p>
    ///   - [`expected_bucket_owner(impl Into<String>)`](crate::client::fluent_builders::GetBucketAnalyticsConfiguration::expected_bucket_owner) / [`set_expected_bucket_owner(Option<String>)`](crate::client::fluent_builders::GetBucketAnalyticsConfiguration::set_expected_bucket_owner): <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
    /// - On success, responds with [`GetBucketAnalyticsConfigurationOutput`](crate::output::GetBucketAnalyticsConfigurationOutput) with field(s):
    ///   - [`analytics_configuration(Option<AnalyticsConfiguration>)`](crate::output::GetBucketAnalyticsConfigurationOutput::analytics_configuration): <p>The configuration and any analyses for the analytics filter.</p>
    /// - On failure, responds with [`SdkError<GetBucketAnalyticsConfigurationError>`](crate::error::GetBucketAnalyticsConfigurationError)
    pub fn get_bucket_analytics_configuration(
        &self,
    ) -> crate::client::fluent_builders::GetBucketAnalyticsConfiguration {
        crate::client::fluent_builders::GetBucketAnalyticsConfiguration::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetBucketCors`](crate::client::fluent_builders::GetBucketCors) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`bucket(impl Into<String>)`](crate::client::fluent_builders::GetBucketCors::bucket) / [`set_bucket(Option<String>)`](crate::client::fluent_builders::GetBucketCors::set_bucket): <p>The bucket name for which to get the cors configuration.</p>
    ///   - [`expected_bucket_owner(impl Into<String>)`](crate::client::fluent_builders::GetBucketCors::expected_bucket_owner) / [`set_expected_bucket_owner(Option<String>)`](crate::client::fluent_builders::GetBucketCors::set_expected_bucket_owner): <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
    /// - On success, responds with [`GetBucketCorsOutput`](crate::output::GetBucketCorsOutput) with field(s):
    ///   - [`cors_rules(Option<Vec<CorsRule>>)`](crate::output::GetBucketCorsOutput::cors_rules): <p>A set of origins and methods (cross-origin access that you want to allow). You can add up to 100 rules to the configuration.</p>
    /// - On failure, responds with [`SdkError<GetBucketCorsError>`](crate::error::GetBucketCorsError)
    pub fn get_bucket_cors(&self) -> crate::client::fluent_builders::GetBucketCors {
        crate::client::fluent_builders::GetBucketCors::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetBucketEncryption`](crate::client::fluent_builders::GetBucketEncryption) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`bucket(impl Into<String>)`](crate::client::fluent_builders::GetBucketEncryption::bucket) / [`set_bucket(Option<String>)`](crate::client::fluent_builders::GetBucketEncryption::set_bucket): <p>The name of the bucket from which the server-side encryption configuration is retrieved.</p>
    ///   - [`expected_bucket_owner(impl Into<String>)`](crate::client::fluent_builders::GetBucketEncryption::expected_bucket_owner) / [`set_expected_bucket_owner(Option<String>)`](crate::client::fluent_builders::GetBucketEncryption::set_expected_bucket_owner): <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
    /// - On success, responds with [`GetBucketEncryptionOutput`](crate::output::GetBucketEncryptionOutput) with field(s):
    ///   - [`server_side_encryption_configuration(Option<ServerSideEncryptionConfiguration>)`](crate::output::GetBucketEncryptionOutput::server_side_encryption_configuration): <p>Specifies the default server-side-encryption configuration.</p>
    /// - On failure, responds with [`SdkError<GetBucketEncryptionError>`](crate::error::GetBucketEncryptionError)
    pub fn get_bucket_encryption(&self) -> crate::client::fluent_builders::GetBucketEncryption {
        crate::client::fluent_builders::GetBucketEncryption::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetBucketIntelligentTieringConfiguration`](crate::client::fluent_builders::GetBucketIntelligentTieringConfiguration) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`bucket(impl Into<String>)`](crate::client::fluent_builders::GetBucketIntelligentTieringConfiguration::bucket) / [`set_bucket(Option<String>)`](crate::client::fluent_builders::GetBucketIntelligentTieringConfiguration::set_bucket): <p>The name of the Amazon S3 bucket whose configuration you want to modify or retrieve.</p>
    ///   - [`id(impl Into<String>)`](crate::client::fluent_builders::GetBucketIntelligentTieringConfiguration::id) / [`set_id(Option<String>)`](crate::client::fluent_builders::GetBucketIntelligentTieringConfiguration::set_id): <p>The ID used to identify the S3 Intelligent-Tiering configuration.</p>
    /// - On success, responds with [`GetBucketIntelligentTieringConfigurationOutput`](crate::output::GetBucketIntelligentTieringConfigurationOutput) with field(s):
    ///   - [`intelligent_tiering_configuration(Option<IntelligentTieringConfiguration>)`](crate::output::GetBucketIntelligentTieringConfigurationOutput::intelligent_tiering_configuration): <p>Container for S3 Intelligent-Tiering configuration.</p>
    /// - On failure, responds with [`SdkError<GetBucketIntelligentTieringConfigurationError>`](crate::error::GetBucketIntelligentTieringConfigurationError)
    pub fn get_bucket_intelligent_tiering_configuration(
        &self,
    ) -> crate::client::fluent_builders::GetBucketIntelligentTieringConfiguration {
        crate::client::fluent_builders::GetBucketIntelligentTieringConfiguration::new(
            self.handle.clone(),
        )
    }
    /// Constructs a fluent builder for the [`GetBucketInventoryConfiguration`](crate::client::fluent_builders::GetBucketInventoryConfiguration) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`bucket(impl Into<String>)`](crate::client::fluent_builders::GetBucketInventoryConfiguration::bucket) / [`set_bucket(Option<String>)`](crate::client::fluent_builders::GetBucketInventoryConfiguration::set_bucket): <p>The name of the bucket containing the inventory configuration to retrieve.</p>
    ///   - [`id(impl Into<String>)`](crate::client::fluent_builders::GetBucketInventoryConfiguration::id) / [`set_id(Option<String>)`](crate::client::fluent_builders::GetBucketInventoryConfiguration::set_id): <p>The ID used to identify the inventory configuration.</p>
    ///   - [`expected_bucket_owner(impl Into<String>)`](crate::client::fluent_builders::GetBucketInventoryConfiguration::expected_bucket_owner) / [`set_expected_bucket_owner(Option<String>)`](crate::client::fluent_builders::GetBucketInventoryConfiguration::set_expected_bucket_owner): <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
    /// - On success, responds with [`GetBucketInventoryConfigurationOutput`](crate::output::GetBucketInventoryConfigurationOutput) with field(s):
    ///   - [`inventory_configuration(Option<InventoryConfiguration>)`](crate::output::GetBucketInventoryConfigurationOutput::inventory_configuration): <p>Specifies the inventory configuration.</p>
    /// - On failure, responds with [`SdkError<GetBucketInventoryConfigurationError>`](crate::error::GetBucketInventoryConfigurationError)
    pub fn get_bucket_inventory_configuration(
        &self,
    ) -> crate::client::fluent_builders::GetBucketInventoryConfiguration {
        crate::client::fluent_builders::GetBucketInventoryConfiguration::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetBucketLifecycleConfiguration`](crate::client::fluent_builders::GetBucketLifecycleConfiguration) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`bucket(impl Into<String>)`](crate::client::fluent_builders::GetBucketLifecycleConfiguration::bucket) / [`set_bucket(Option<String>)`](crate::client::fluent_builders::GetBucketLifecycleConfiguration::set_bucket): <p>The name of the bucket for which to get the lifecycle information.</p>
    ///   - [`expected_bucket_owner(impl Into<String>)`](crate::client::fluent_builders::GetBucketLifecycleConfiguration::expected_bucket_owner) / [`set_expected_bucket_owner(Option<String>)`](crate::client::fluent_builders::GetBucketLifecycleConfiguration::set_expected_bucket_owner): <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
    /// - On success, responds with [`GetBucketLifecycleConfigurationOutput`](crate::output::GetBucketLifecycleConfigurationOutput) with field(s):
    ///   - [`rules(Option<Vec<LifecycleRule>>)`](crate::output::GetBucketLifecycleConfigurationOutput::rules): <p>Container for a lifecycle rule.</p>
    /// - On failure, responds with [`SdkError<GetBucketLifecycleConfigurationError>`](crate::error::GetBucketLifecycleConfigurationError)
    pub fn get_bucket_lifecycle_configuration(
        &self,
    ) -> crate::client::fluent_builders::GetBucketLifecycleConfiguration {
        crate::client::fluent_builders::GetBucketLifecycleConfiguration::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetBucketLocation`](crate::client::fluent_builders::GetBucketLocation) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`bucket(impl Into<String>)`](crate::client::fluent_builders::GetBucketLocation::bucket) / [`set_bucket(Option<String>)`](crate::client::fluent_builders::GetBucketLocation::set_bucket): <p>The name of the bucket for which to get the location.</p>
    ///   - [`expected_bucket_owner(impl Into<String>)`](crate::client::fluent_builders::GetBucketLocation::expected_bucket_owner) / [`set_expected_bucket_owner(Option<String>)`](crate::client::fluent_builders::GetBucketLocation::set_expected_bucket_owner): <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
    /// - On success, responds with [`GetBucketLocationOutput`](crate::output::GetBucketLocationOutput) with field(s):
    ///   - [`location_constraint(Option<BucketLocationConstraint>)`](crate::output::GetBucketLocationOutput::location_constraint): <p>Specifies the Region where the bucket resides. For a list of all the Amazon S3 supported location constraints by Region, see <a href="https://docs.aws.amazon.com/general/latest/gr/rande.html#s3_region">Regions and Endpoints</a>. Buckets in Region <code>us-east-1</code> have a LocationConstraint of <code>null</code>.</p>
    /// - On failure, responds with [`SdkError<GetBucketLocationError>`](crate::error::GetBucketLocationError)
    pub fn get_bucket_location(&self) -> crate::client::fluent_builders::GetBucketLocation {
        crate::client::fluent_builders::GetBucketLocation::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetBucketLogging`](crate::client::fluent_builders::GetBucketLogging) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`bucket(impl Into<String>)`](crate::client::fluent_builders::GetBucketLogging::bucket) / [`set_bucket(Option<String>)`](crate::client::fluent_builders::GetBucketLogging::set_bucket): <p>The bucket name for which to get the logging information.</p>
    ///   - [`expected_bucket_owner(impl Into<String>)`](crate::client::fluent_builders::GetBucketLogging::expected_bucket_owner) / [`set_expected_bucket_owner(Option<String>)`](crate::client::fluent_builders::GetBucketLogging::set_expected_bucket_owner): <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
    /// - On success, responds with [`GetBucketLoggingOutput`](crate::output::GetBucketLoggingOutput) with field(s):
    ///   - [`logging_enabled(Option<LoggingEnabled>)`](crate::output::GetBucketLoggingOutput::logging_enabled): <p>Describes where logs are stored and the prefix that Amazon S3 assigns to all log object keys for a bucket. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTlogging.html">PUT Bucket logging</a> in the <i>Amazon S3 API Reference</i>.</p>
    /// - On failure, responds with [`SdkError<GetBucketLoggingError>`](crate::error::GetBucketLoggingError)
    pub fn get_bucket_logging(&self) -> crate::client::fluent_builders::GetBucketLogging {
        crate::client::fluent_builders::GetBucketLogging::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetBucketMetricsConfiguration`](crate::client::fluent_builders::GetBucketMetricsConfiguration) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`bucket(impl Into<String>)`](crate::client::fluent_builders::GetBucketMetricsConfiguration::bucket) / [`set_bucket(Option<String>)`](crate::client::fluent_builders::GetBucketMetricsConfiguration::set_bucket): <p>The name of the bucket containing the metrics configuration to retrieve.</p>
    ///   - [`id(impl Into<String>)`](crate::client::fluent_builders::GetBucketMetricsConfiguration::id) / [`set_id(Option<String>)`](crate::client::fluent_builders::GetBucketMetricsConfiguration::set_id): <p>The ID used to identify the metrics configuration.</p>
    ///   - [`expected_bucket_owner(impl Into<String>)`](crate::client::fluent_builders::GetBucketMetricsConfiguration::expected_bucket_owner) / [`set_expected_bucket_owner(Option<String>)`](crate::client::fluent_builders::GetBucketMetricsConfiguration::set_expected_bucket_owner): <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
    /// - On success, responds with [`GetBucketMetricsConfigurationOutput`](crate::output::GetBucketMetricsConfigurationOutput) with field(s):
    ///   - [`metrics_configuration(Option<MetricsConfiguration>)`](crate::output::GetBucketMetricsConfigurationOutput::metrics_configuration): <p>Specifies the metrics configuration.</p>
    /// - On failure, responds with [`SdkError<GetBucketMetricsConfigurationError>`](crate::error::GetBucketMetricsConfigurationError)
    pub fn get_bucket_metrics_configuration(
        &self,
    ) -> crate::client::fluent_builders::GetBucketMetricsConfiguration {
        crate::client::fluent_builders::GetBucketMetricsConfiguration::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetBucketNotificationConfiguration`](crate::client::fluent_builders::GetBucketNotificationConfiguration) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`bucket(impl Into<String>)`](crate::client::fluent_builders::GetBucketNotificationConfiguration::bucket) / [`set_bucket(Option<String>)`](crate::client::fluent_builders::GetBucketNotificationConfiguration::set_bucket): <p>The name of the bucket for which to get the notification configuration.</p>
    ///   - [`expected_bucket_owner(impl Into<String>)`](crate::client::fluent_builders::GetBucketNotificationConfiguration::expected_bucket_owner) / [`set_expected_bucket_owner(Option<String>)`](crate::client::fluent_builders::GetBucketNotificationConfiguration::set_expected_bucket_owner): <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
    /// - On success, responds with [`GetBucketNotificationConfigurationOutput`](crate::output::GetBucketNotificationConfigurationOutput) with field(s):
    ///   - [`topic_configurations(Option<Vec<TopicConfiguration>>)`](crate::output::GetBucketNotificationConfigurationOutput::topic_configurations): <p>The topic to which notifications are sent and the events for which notifications are generated.</p>
    ///   - [`queue_configurations(Option<Vec<QueueConfiguration>>)`](crate::output::GetBucketNotificationConfigurationOutput::queue_configurations): <p>The Amazon Simple Queue Service queues to publish messages to and the events for which to publish messages.</p>
    ///   - [`lambda_function_configurations(Option<Vec<LambdaFunctionConfiguration>>)`](crate::output::GetBucketNotificationConfigurationOutput::lambda_function_configurations): <p>Describes the Lambda functions to invoke and the events for which to invoke them.</p>
    ///   - [`event_bridge_configuration(Option<EventBridgeConfiguration>)`](crate::output::GetBucketNotificationConfigurationOutput::event_bridge_configuration): <p>Enables delivery of events to Amazon EventBridge.</p>
    /// - On failure, responds with [`SdkError<GetBucketNotificationConfigurationError>`](crate::error::GetBucketNotificationConfigurationError)
    pub fn get_bucket_notification_configuration(
        &self,
    ) -> crate::client::fluent_builders::GetBucketNotificationConfiguration {
        crate::client::fluent_builders::GetBucketNotificationConfiguration::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetBucketOwnershipControls`](crate::client::fluent_builders::GetBucketOwnershipControls) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`bucket(impl Into<String>)`](crate::client::fluent_builders::GetBucketOwnershipControls::bucket) / [`set_bucket(Option<String>)`](crate::client::fluent_builders::GetBucketOwnershipControls::set_bucket): <p>The name of the Amazon S3 bucket whose <code>OwnershipControls</code> you want to retrieve. </p>
    ///   - [`expected_bucket_owner(impl Into<String>)`](crate::client::fluent_builders::GetBucketOwnershipControls::expected_bucket_owner) / [`set_expected_bucket_owner(Option<String>)`](crate::client::fluent_builders::GetBucketOwnershipControls::set_expected_bucket_owner): <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
    /// - On success, responds with [`GetBucketOwnershipControlsOutput`](crate::output::GetBucketOwnershipControlsOutput) with field(s):
    ///   - [`ownership_controls(Option<OwnershipControls>)`](crate::output::GetBucketOwnershipControlsOutput::ownership_controls): <p>The <code>OwnershipControls</code> (BucketOwnerEnforced, BucketOwnerPreferred, or ObjectWriter) currently in effect for this Amazon S3 bucket.</p>
    /// - On failure, responds with [`SdkError<GetBucketOwnershipControlsError>`](crate::error::GetBucketOwnershipControlsError)
    pub fn get_bucket_ownership_controls(
        &self,
    ) -> crate::client::fluent_builders::GetBucketOwnershipControls {
        crate::client::fluent_builders::GetBucketOwnershipControls::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetBucketPolicy`](crate::client::fluent_builders::GetBucketPolicy) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`bucket(impl Into<String>)`](crate::client::fluent_builders::GetBucketPolicy::bucket) / [`set_bucket(Option<String>)`](crate::client::fluent_builders::GetBucketPolicy::set_bucket): <p>The bucket name for which to get the bucket policy.</p>
    ///   - [`expected_bucket_owner(impl Into<String>)`](crate::client::fluent_builders::GetBucketPolicy::expected_bucket_owner) / [`set_expected_bucket_owner(Option<String>)`](crate::client::fluent_builders::GetBucketPolicy::set_expected_bucket_owner): <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
    /// - On success, responds with [`GetBucketPolicyOutput`](crate::output::GetBucketPolicyOutput) with field(s):
    ///   - [`policy(Option<String>)`](crate::output::GetBucketPolicyOutput::policy): <p>The bucket policy as a JSON document.</p>
    /// - On failure, responds with [`SdkError<GetBucketPolicyError>`](crate::error::GetBucketPolicyError)
    pub fn get_bucket_policy(&self) -> crate::client::fluent_builders::GetBucketPolicy {
        crate::client::fluent_builders::GetBucketPolicy::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetBucketPolicyStatus`](crate::client::fluent_builders::GetBucketPolicyStatus) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`bucket(impl Into<String>)`](crate::client::fluent_builders::GetBucketPolicyStatus::bucket) / [`set_bucket(Option<String>)`](crate::client::fluent_builders::GetBucketPolicyStatus::set_bucket): <p>The name of the Amazon S3 bucket whose policy status you want to retrieve.</p>
    ///   - [`expected_bucket_owner(impl Into<String>)`](crate::client::fluent_builders::GetBucketPolicyStatus::expected_bucket_owner) / [`set_expected_bucket_owner(Option<String>)`](crate::client::fluent_builders::GetBucketPolicyStatus::set_expected_bucket_owner): <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
    /// - On success, responds with [`GetBucketPolicyStatusOutput`](crate::output::GetBucketPolicyStatusOutput) with field(s):
    ///   - [`policy_status(Option<PolicyStatus>)`](crate::output::GetBucketPolicyStatusOutput::policy_status): <p>The policy status for the specified bucket.</p>
    /// - On failure, responds with [`SdkError<GetBucketPolicyStatusError>`](crate::error::GetBucketPolicyStatusError)
    pub fn get_bucket_policy_status(
        &self,
    ) -> crate::client::fluent_builders::GetBucketPolicyStatus {
        crate::client::fluent_builders::GetBucketPolicyStatus::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetBucketReplication`](crate::client::fluent_builders::GetBucketReplication) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`bucket(impl Into<String>)`](crate::client::fluent_builders::GetBucketReplication::bucket) / [`set_bucket(Option<String>)`](crate::client::fluent_builders::GetBucketReplication::set_bucket): <p>The bucket name for which to get the replication information.</p>
    ///   - [`expected_bucket_owner(impl Into<String>)`](crate::client::fluent_builders::GetBucketReplication::expected_bucket_owner) / [`set_expected_bucket_owner(Option<String>)`](crate::client::fluent_builders::GetBucketReplication::set_expected_bucket_owner): <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
    /// - On success, responds with [`GetBucketReplicationOutput`](crate::output::GetBucketReplicationOutput) with field(s):
    ///   - [`replication_configuration(Option<ReplicationConfiguration>)`](crate::output::GetBucketReplicationOutput::replication_configuration): <p>A container for replication rules. You can add up to 1,000 rules. The maximum size of a replication configuration is 2 MB.</p>
    /// - On failure, responds with [`SdkError<GetBucketReplicationError>`](crate::error::GetBucketReplicationError)
    pub fn get_bucket_replication(&self) -> crate::client::fluent_builders::GetBucketReplication {
        crate::client::fluent_builders::GetBucketReplication::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetBucketRequestPayment`](crate::client::fluent_builders::GetBucketRequestPayment) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`bucket(impl Into<String>)`](crate::client::fluent_builders::GetBucketRequestPayment::bucket) / [`set_bucket(Option<String>)`](crate::client::fluent_builders::GetBucketRequestPayment::set_bucket): <p>The name of the bucket for which to get the payment request configuration</p>
    ///   - [`expected_bucket_owner(impl Into<String>)`](crate::client::fluent_builders::GetBucketRequestPayment::expected_bucket_owner) / [`set_expected_bucket_owner(Option<String>)`](crate::client::fluent_builders::GetBucketRequestPayment::set_expected_bucket_owner): <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
    /// - On success, responds with [`GetBucketRequestPaymentOutput`](crate::output::GetBucketRequestPaymentOutput) with field(s):
    ///   - [`payer(Option<Payer>)`](crate::output::GetBucketRequestPaymentOutput::payer): <p>Specifies who pays for the download and request fees.</p>
    /// - On failure, responds with [`SdkError<GetBucketRequestPaymentError>`](crate::error::GetBucketRequestPaymentError)
    pub fn get_bucket_request_payment(
        &self,
    ) -> crate::client::fluent_builders::GetBucketRequestPayment {
        crate::client::fluent_builders::GetBucketRequestPayment::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetBucketTagging`](crate::client::fluent_builders::GetBucketTagging) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`bucket(impl Into<String>)`](crate::client::fluent_builders::GetBucketTagging::bucket) / [`set_bucket(Option<String>)`](crate::client::fluent_builders::GetBucketTagging::set_bucket): <p>The name of the bucket for which to get the tagging information.</p>
    ///   - [`expected_bucket_owner(impl Into<String>)`](crate::client::fluent_builders::GetBucketTagging::expected_bucket_owner) / [`set_expected_bucket_owner(Option<String>)`](crate::client::fluent_builders::GetBucketTagging::set_expected_bucket_owner): <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
    /// - On success, responds with [`GetBucketTaggingOutput`](crate::output::GetBucketTaggingOutput) with field(s):
    ///   - [`tag_set(Option<Vec<Tag>>)`](crate::output::GetBucketTaggingOutput::tag_set): <p>Contains the tag set.</p>
    /// - On failure, responds with [`SdkError<GetBucketTaggingError>`](crate::error::GetBucketTaggingError)
    pub fn get_bucket_tagging(&self) -> crate::client::fluent_builders::GetBucketTagging {
        crate::client::fluent_builders::GetBucketTagging::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetBucketVersioning`](crate::client::fluent_builders::GetBucketVersioning) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`bucket(impl Into<String>)`](crate::client::fluent_builders::GetBucketVersioning::bucket) / [`set_bucket(Option<String>)`](crate::client::fluent_builders::GetBucketVersioning::set_bucket): <p>The name of the bucket for which to get the versioning information.</p>
    ///   - [`expected_bucket_owner(impl Into<String>)`](crate::client::fluent_builders::GetBucketVersioning::expected_bucket_owner) / [`set_expected_bucket_owner(Option<String>)`](crate::client::fluent_builders::GetBucketVersioning::set_expected_bucket_owner): <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
    /// - On success, responds with [`GetBucketVersioningOutput`](crate::output::GetBucketVersioningOutput) with field(s):
    ///   - [`status(Option<BucketVersioningStatus>)`](crate::output::GetBucketVersioningOutput::status): <p>The versioning state of the bucket.</p>
    ///   - [`mfa_delete(Option<MfaDeleteStatus>)`](crate::output::GetBucketVersioningOutput::mfa_delete): <p>Specifies whether MFA delete is enabled in the bucket versioning configuration. This element is only returned if the bucket has been configured with MFA delete. If the bucket has never been so configured, this element is not returned.</p>
    /// - On failure, responds with [`SdkError<GetBucketVersioningError>`](crate::error::GetBucketVersioningError)
    pub fn get_bucket_versioning(&self) -> crate::client::fluent_builders::GetBucketVersioning {
        crate::client::fluent_builders::GetBucketVersioning::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetBucketWebsite`](crate::client::fluent_builders::GetBucketWebsite) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`bucket(impl Into<String>)`](crate::client::fluent_builders::GetBucketWebsite::bucket) / [`set_bucket(Option<String>)`](crate::client::fluent_builders::GetBucketWebsite::set_bucket): <p>The bucket name for which to get the website configuration.</p>
    ///   - [`expected_bucket_owner(impl Into<String>)`](crate::client::fluent_builders::GetBucketWebsite::expected_bucket_owner) / [`set_expected_bucket_owner(Option<String>)`](crate::client::fluent_builders::GetBucketWebsite::set_expected_bucket_owner): <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
    /// - On success, responds with [`GetBucketWebsiteOutput`](crate::output::GetBucketWebsiteOutput) with field(s):
    ///   - [`redirect_all_requests_to(Option<RedirectAllRequestsTo>)`](crate::output::GetBucketWebsiteOutput::redirect_all_requests_to): <p>Specifies the redirect behavior of all requests to a website endpoint of an Amazon S3 bucket.</p>
    ///   - [`index_document(Option<IndexDocument>)`](crate::output::GetBucketWebsiteOutput::index_document): <p>The name of the index document for the website (for example <code>index.html</code>).</p>
    ///   - [`error_document(Option<ErrorDocument>)`](crate::output::GetBucketWebsiteOutput::error_document): <p>The object key name of the website error document to use for 4XX class errors.</p>
    ///   - [`routing_rules(Option<Vec<RoutingRule>>)`](crate::output::GetBucketWebsiteOutput::routing_rules): <p>Rules that define when a redirect is applied and the redirect behavior.</p>
    /// - On failure, responds with [`SdkError<GetBucketWebsiteError>`](crate::error::GetBucketWebsiteError)
    pub fn get_bucket_website(&self) -> crate::client::fluent_builders::GetBucketWebsite {
        crate::client::fluent_builders::GetBucketWebsite::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetObject`](crate::client::fluent_builders::GetObject) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`bucket(impl Into<String>)`](crate::client::fluent_builders::GetObject::bucket) / [`set_bucket(Option<String>)`](crate::client::fluent_builders::GetObject::set_bucket): <p>The bucket name containing the object. </p>  <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p>  <p>When using an Object Lambda access point the hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-object-lambda.<i>Region</i>.amazonaws.com.</p>  <p>When using this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <code> <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com</code>. When using this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts bucket ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">Using Amazon S3 on Outposts</a> in the <i>Amazon S3 User Guide</i>.</p>
    ///   - [`if_match(impl Into<String>)`](crate::client::fluent_builders::GetObject::if_match) / [`set_if_match(Option<String>)`](crate::client::fluent_builders::GetObject::set_if_match): <p>Return the object only if its entity tag (ETag) is the same as the one specified; otherwise, return a 412 (precondition failed) error.</p>
    ///   - [`if_modified_since(DateTime)`](crate::client::fluent_builders::GetObject::if_modified_since) / [`set_if_modified_since(Option<DateTime>)`](crate::client::fluent_builders::GetObject::set_if_modified_since): <p>Return the object only if it has been modified since the specified time; otherwise, return a 304 (not modified) error.</p>
    ///   - [`if_none_match(impl Into<String>)`](crate::client::fluent_builders::GetObject::if_none_match) / [`set_if_none_match(Option<String>)`](crate::client::fluent_builders::GetObject::set_if_none_match): <p>Return the object only if its entity tag (ETag) is different from the one specified; otherwise, return a 304 (not modified) error.</p>
    ///   - [`if_unmodified_since(DateTime)`](crate::client::fluent_builders::GetObject::if_unmodified_since) / [`set_if_unmodified_since(Option<DateTime>)`](crate::client::fluent_builders::GetObject::set_if_unmodified_since): <p>Return the object only if it has not been modified since the specified time; otherwise, return a 412 (precondition failed) error.</p>
    ///   - [`key(impl Into<String>)`](crate::client::fluent_builders::GetObject::key) / [`set_key(Option<String>)`](crate::client::fluent_builders::GetObject::set_key): <p>Key of the object to get.</p>
    ///   - [`range(impl Into<String>)`](crate::client::fluent_builders::GetObject::range) / [`set_range(Option<String>)`](crate::client::fluent_builders::GetObject::set_range): <p>Downloads the specified range bytes of an object. For more information about the HTTP Range header, see <a href="https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35">https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35</a>.</p> <note>   <p>Amazon S3 doesn't support retrieving multiple ranges of data per <code>GET</code> request.</p>  </note>
    ///   - [`response_cache_control(impl Into<String>)`](crate::client::fluent_builders::GetObject::response_cache_control) / [`set_response_cache_control(Option<String>)`](crate::client::fluent_builders::GetObject::set_response_cache_control): <p>Sets the <code>Cache-Control</code> header of the response.</p>
    ///   - [`response_content_disposition(impl Into<String>)`](crate::client::fluent_builders::GetObject::response_content_disposition) / [`set_response_content_disposition(Option<String>)`](crate::client::fluent_builders::GetObject::set_response_content_disposition): <p>Sets the <code>Content-Disposition</code> header of the response</p>
    ///   - [`response_content_encoding(impl Into<String>)`](crate::client::fluent_builders::GetObject::response_content_encoding) / [`set_response_content_encoding(Option<String>)`](crate::client::fluent_builders::GetObject::set_response_content_encoding): <p>Sets the <code>Content-Encoding</code> header of the response.</p>
    ///   - [`response_content_language(impl Into<String>)`](crate::client::fluent_builders::GetObject::response_content_language) / [`set_response_content_language(Option<String>)`](crate::client::fluent_builders::GetObject::set_response_content_language): <p>Sets the <code>Content-Language</code> header of the response.</p>
    ///   - [`response_content_type(impl Into<String>)`](crate::client::fluent_builders::GetObject::response_content_type) / [`set_response_content_type(Option<String>)`](crate::client::fluent_builders::GetObject::set_response_content_type): <p>Sets the <code>Content-Type</code> header of the response.</p>
    ///   - [`response_expires(DateTime)`](crate::client::fluent_builders::GetObject::response_expires) / [`set_response_expires(Option<DateTime>)`](crate::client::fluent_builders::GetObject::set_response_expires): <p>Sets the <code>Expires</code> header of the response.</p>
    ///   - [`version_id(impl Into<String>)`](crate::client::fluent_builders::GetObject::version_id) / [`set_version_id(Option<String>)`](crate::client::fluent_builders::GetObject::set_version_id): <p>VersionId used to reference a specific version of the object.</p>
    ///   - [`sse_customer_algorithm(impl Into<String>)`](crate::client::fluent_builders::GetObject::sse_customer_algorithm) / [`set_sse_customer_algorithm(Option<String>)`](crate::client::fluent_builders::GetObject::set_sse_customer_algorithm): <p>Specifies the algorithm to use to when decrypting the object (for example, AES256).</p>
    ///   - [`sse_customer_key(impl Into<String>)`](crate::client::fluent_builders::GetObject::sse_customer_key) / [`set_sse_customer_key(Option<String>)`](crate::client::fluent_builders::GetObject::set_sse_customer_key): <p>Specifies the customer-provided encryption key for Amazon S3 used to encrypt the data. This value is used to decrypt the object when recovering it and must match the one used when storing the data. The key must be appropriate for use with the algorithm specified in the <code>x-amz-server-side-encryption-customer-algorithm</code> header.</p>
    ///   - [`sse_customer_key_md5(impl Into<String>)`](crate::client::fluent_builders::GetObject::sse_customer_key_md5) / [`set_sse_customer_key_md5(Option<String>)`](crate::client::fluent_builders::GetObject::set_sse_customer_key_md5): <p>Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure that the encryption key was transmitted without error.</p>
    ///   - [`request_payer(RequestPayer)`](crate::client::fluent_builders::GetObject::request_payer) / [`set_request_payer(Option<RequestPayer>)`](crate::client::fluent_builders::GetObject::set_request_payer): <p>Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from Requester Pays buckets, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html">Downloading Objects in Requester Pays Buckets</a> in the <i>Amazon S3 User Guide</i>.</p>
    ///   - [`part_number(i32)`](crate::client::fluent_builders::GetObject::part_number) / [`set_part_number(i32)`](crate::client::fluent_builders::GetObject::set_part_number): <p>Part number of the object being read. This is a positive integer between 1 and 10,000. Effectively performs a 'ranged' GET request for the part specified. Useful for downloading just a part of an object.</p>
    ///   - [`expected_bucket_owner(impl Into<String>)`](crate::client::fluent_builders::GetObject::expected_bucket_owner) / [`set_expected_bucket_owner(Option<String>)`](crate::client::fluent_builders::GetObject::set_expected_bucket_owner): <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
    ///   - [`checksum_mode(ChecksumMode)`](crate::client::fluent_builders::GetObject::checksum_mode) / [`set_checksum_mode(Option<ChecksumMode>)`](crate::client::fluent_builders::GetObject::set_checksum_mode): <p>To retrieve the checksum, this mode must be enabled.</p>
    /// - On success, responds with [`GetObjectOutput`](crate::output::GetObjectOutput) with field(s):
    ///   - [`body(ByteStream)`](crate::output::GetObjectOutput::body): <p>Object data.</p>
    ///   - [`delete_marker(bool)`](crate::output::GetObjectOutput::delete_marker): <p>Specifies whether the object retrieved was (true) or was not (false) a Delete Marker. If false, this response header does not appear in the response.</p>
    ///   - [`accept_ranges(Option<String>)`](crate::output::GetObjectOutput::accept_ranges): <p>Indicates that a range of bytes was specified.</p>
    ///   - [`expiration(Option<String>)`](crate::output::GetObjectOutput::expiration): <p>If the object expiration is configured (see PUT Bucket lifecycle), the response includes this header. It includes the <code>expiry-date</code> and <code>rule-id</code> key-value pairs providing object expiration information. The value of the <code>rule-id</code> is URL-encoded.</p>
    ///   - [`restore(Option<String>)`](crate::output::GetObjectOutput::restore): <p>Provides information about object restoration action and expiration time of the restored object copy.</p>
    ///   - [`last_modified(Option<DateTime>)`](crate::output::GetObjectOutput::last_modified): <p>Creation date of the object.</p>
    ///   - [`content_length(i64)`](crate::output::GetObjectOutput::content_length): <p>Size of the body in bytes.</p>
    ///   - [`e_tag(Option<String>)`](crate::output::GetObjectOutput::e_tag): <p>An entity tag (ETag) is an opaque identifier assigned by a web server to a specific version of a resource found at a URL.</p>
    ///   - [`checksum_crc32(Option<String>)`](crate::output::GetObjectOutput::checksum_crc32): <p>The base64-encoded, 32-bit CRC32 checksum of the object. This will only be present if it was uploaded with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated with multipart uploads, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums"> Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
    ///   - [`checksum_crc32_c(Option<String>)`](crate::output::GetObjectOutput::checksum_crc32_c): <p>The base64-encoded, 32-bit CRC32C checksum of the object. This will only be present if it was uploaded with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated with multipart uploads, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums"> Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
    ///   - [`checksum_sha1(Option<String>)`](crate::output::GetObjectOutput::checksum_sha1): <p>The base64-encoded, 160-bit SHA-1 digest of the object. This will only be present if it was uploaded with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated with multipart uploads, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums"> Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
    ///   - [`checksum_sha256(Option<String>)`](crate::output::GetObjectOutput::checksum_sha256): <p>The base64-encoded, 256-bit SHA-256 digest of the object. This will only be present if it was uploaded with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated with multipart uploads, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums"> Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
    ///   - [`missing_meta(i32)`](crate::output::GetObjectOutput::missing_meta): <p>This is set to the number of metadata entries not returned in <code>x-amz-meta</code> headers. This can happen if you create metadata using an API like SOAP that supports more flexible metadata than the REST API. For example, using SOAP, you can create metadata whose values are not legal HTTP headers.</p>
    ///   - [`version_id(Option<String>)`](crate::output::GetObjectOutput::version_id): <p>Version of the object.</p>
    ///   - [`cache_control(Option<String>)`](crate::output::GetObjectOutput::cache_control): <p>Specifies caching behavior along the request/reply chain.</p>
    ///   - [`content_disposition(Option<String>)`](crate::output::GetObjectOutput::content_disposition): <p>Specifies presentational information for the object.</p>
    ///   - [`content_encoding(Option<String>)`](crate::output::GetObjectOutput::content_encoding): <p>Specifies what content encodings have been applied to the object and thus what decoding mechanisms must be applied to obtain the media-type referenced by the Content-Type header field.</p>
    ///   - [`content_language(Option<String>)`](crate::output::GetObjectOutput::content_language): <p>The language the content is in.</p>
    ///   - [`content_range(Option<String>)`](crate::output::GetObjectOutput::content_range): <p>The portion of the object returned in the response.</p>
    ///   - [`content_type(Option<String>)`](crate::output::GetObjectOutput::content_type): <p>A standard MIME type describing the format of the object data.</p>
    ///   - [`expires(Option<DateTime>)`](crate::output::GetObjectOutput::expires): <p>The date and time at which the object is no longer cacheable.</p>
    ///   - [`website_redirect_location(Option<String>)`](crate::output::GetObjectOutput::website_redirect_location): <p>If the bucket is configured as a website, redirects requests for this object to another object in the same bucket or to an external URL. Amazon S3 stores the value of this header in the object metadata.</p>
    ///   - [`server_side_encryption(Option<ServerSideEncryption>)`](crate::output::GetObjectOutput::server_side_encryption): <p>The server-side encryption algorithm used when storing this object in Amazon S3 (for example, AES256, aws:kms).</p>
    ///   - [`metadata(Option<HashMap<String, String>>)`](crate::output::GetObjectOutput::metadata): <p>A map of metadata to store with the object in S3.</p>
    ///   - [`sse_customer_algorithm(Option<String>)`](crate::output::GetObjectOutput::sse_customer_algorithm): <p>If server-side encryption with a customer-provided encryption key was requested, the response will include this header confirming the encryption algorithm used.</p>
    ///   - [`sse_customer_key_md5(Option<String>)`](crate::output::GetObjectOutput::sse_customer_key_md5): <p>If server-side encryption with a customer-provided encryption key was requested, the response will include this header to provide round-trip message integrity verification of the customer-provided encryption key.</p>
    ///   - [`ssekms_key_id(Option<String>)`](crate::output::GetObjectOutput::ssekms_key_id): <p>If present, specifies the ID of the Amazon Web Services Key Management Service (Amazon Web Services KMS) symmetric customer managed key that was used for the object.</p>
    ///   - [`bucket_key_enabled(bool)`](crate::output::GetObjectOutput::bucket_key_enabled): <p>Indicates whether the object uses an S3 Bucket Key for server-side encryption with Amazon Web Services KMS (SSE-KMS).</p>
    ///   - [`storage_class(Option<StorageClass>)`](crate::output::GetObjectOutput::storage_class): <p>Provides storage class information of the object. Amazon S3 returns this header for all objects except for S3 Standard storage class objects.</p>
    ///   - [`request_charged(Option<RequestCharged>)`](crate::output::GetObjectOutput::request_charged): <p>If present, indicates that the requester was successfully charged for the request.</p>
    ///   - [`replication_status(Option<ReplicationStatus>)`](crate::output::GetObjectOutput::replication_status): <p>Amazon S3 can return this if your request involves a bucket that is either a source or destination in a replication rule.</p>
    ///   - [`parts_count(i32)`](crate::output::GetObjectOutput::parts_count): <p>The count of parts this object has. This value is only returned if you specify <code>partNumber</code> in your request and the object was uploaded as a multipart upload.</p>
    ///   - [`tag_count(i32)`](crate::output::GetObjectOutput::tag_count): <p>The number of tags, if any, on the object.</p>
    ///   - [`object_lock_mode(Option<ObjectLockMode>)`](crate::output::GetObjectOutput::object_lock_mode): <p>The Object Lock mode currently in place for this object.</p>
    ///   - [`object_lock_retain_until_date(Option<DateTime>)`](crate::output::GetObjectOutput::object_lock_retain_until_date): <p>The date and time when this object's Object Lock will expire.</p>
    ///   - [`object_lock_legal_hold_status(Option<ObjectLockLegalHoldStatus>)`](crate::output::GetObjectOutput::object_lock_legal_hold_status): <p>Indicates whether this object has an active legal hold. This field is only returned if you have permission to view an object's legal hold status. </p>
    /// - On failure, responds with [`SdkError<GetObjectError>`](crate::error::GetObjectError)
    pub fn get_object(&self) -> crate::client::fluent_builders::GetObject {
        crate::client::fluent_builders::GetObject::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetObjectAcl`](crate::client::fluent_builders::GetObjectAcl) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`bucket(impl Into<String>)`](crate::client::fluent_builders::GetObjectAcl::bucket) / [`set_bucket(Option<String>)`](crate::client::fluent_builders::GetObjectAcl::set_bucket): <p>The bucket name that contains the object for which to get the ACL information. </p>  <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p>
    ///   - [`key(impl Into<String>)`](crate::client::fluent_builders::GetObjectAcl::key) / [`set_key(Option<String>)`](crate::client::fluent_builders::GetObjectAcl::set_key): <p>The key of the object for which to get the ACL information.</p>
    ///   - [`version_id(impl Into<String>)`](crate::client::fluent_builders::GetObjectAcl::version_id) / [`set_version_id(Option<String>)`](crate::client::fluent_builders::GetObjectAcl::set_version_id): <p>VersionId used to reference a specific version of the object.</p>
    ///   - [`request_payer(RequestPayer)`](crate::client::fluent_builders::GetObjectAcl::request_payer) / [`set_request_payer(Option<RequestPayer>)`](crate::client::fluent_builders::GetObjectAcl::set_request_payer): <p>Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from Requester Pays buckets, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html">Downloading Objects in Requester Pays Buckets</a> in the <i>Amazon S3 User Guide</i>.</p>
    ///   - [`expected_bucket_owner(impl Into<String>)`](crate::client::fluent_builders::GetObjectAcl::expected_bucket_owner) / [`set_expected_bucket_owner(Option<String>)`](crate::client::fluent_builders::GetObjectAcl::set_expected_bucket_owner): <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
    /// - On success, responds with [`GetObjectAclOutput`](crate::output::GetObjectAclOutput) with field(s):
    ///   - [`owner(Option<Owner>)`](crate::output::GetObjectAclOutput::owner): <p> Container for the bucket owner's display name and ID.</p>
    ///   - [`grants(Option<Vec<Grant>>)`](crate::output::GetObjectAclOutput::grants): <p>A list of grants.</p>
    ///   - [`request_charged(Option<RequestCharged>)`](crate::output::GetObjectAclOutput::request_charged): <p>If present, indicates that the requester was successfully charged for the request.</p>
    /// - On failure, responds with [`SdkError<GetObjectAclError>`](crate::error::GetObjectAclError)
    pub fn get_object_acl(&self) -> crate::client::fluent_builders::GetObjectAcl {
        crate::client::fluent_builders::GetObjectAcl::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetObjectAttributes`](crate::client::fluent_builders::GetObjectAttributes) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`bucket(impl Into<String>)`](crate::client::fluent_builders::GetObjectAttributes::bucket) / [`set_bucket(Option<String>)`](crate::client::fluent_builders::GetObjectAttributes::set_bucket): <p>The name of the bucket that contains the object.</p>  <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p>  <p>When using this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <code> <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com</code>. When using this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts bucket ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">Using Amazon S3 on Outposts</a> in the <i>Amazon S3 User Guide</i>.</p>
    ///   - [`key(impl Into<String>)`](crate::client::fluent_builders::GetObjectAttributes::key) / [`set_key(Option<String>)`](crate::client::fluent_builders::GetObjectAttributes::set_key): <p>The object key.</p>
    ///   - [`version_id(impl Into<String>)`](crate::client::fluent_builders::GetObjectAttributes::version_id) / [`set_version_id(Option<String>)`](crate::client::fluent_builders::GetObjectAttributes::set_version_id): <p>The version ID used to reference a specific version of the object.</p>
    ///   - [`max_parts(i32)`](crate::client::fluent_builders::GetObjectAttributes::max_parts) / [`set_max_parts(i32)`](crate::client::fluent_builders::GetObjectAttributes::set_max_parts): <p>Sets the maximum number of parts to return.</p>
    ///   - [`part_number_marker(impl Into<String>)`](crate::client::fluent_builders::GetObjectAttributes::part_number_marker) / [`set_part_number_marker(Option<String>)`](crate::client::fluent_builders::GetObjectAttributes::set_part_number_marker): <p>Specifies the part after which listing should begin. Only parts with higher part numbers will be listed.</p>
    ///   - [`sse_customer_algorithm(impl Into<String>)`](crate::client::fluent_builders::GetObjectAttributes::sse_customer_algorithm) / [`set_sse_customer_algorithm(Option<String>)`](crate::client::fluent_builders::GetObjectAttributes::set_sse_customer_algorithm): <p>Specifies the algorithm to use when encrypting the object (for example, AES256).</p>
    ///   - [`sse_customer_key(impl Into<String>)`](crate::client::fluent_builders::GetObjectAttributes::sse_customer_key) / [`set_sse_customer_key(Option<String>)`](crate::client::fluent_builders::GetObjectAttributes::set_sse_customer_key): <p>Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This value is used to store the object and then it is discarded; Amazon S3 does not store the encryption key. The key must be appropriate for use with the algorithm specified in the <code>x-amz-server-side-encryption-customer-algorithm</code> header.</p>
    ///   - [`sse_customer_key_md5(impl Into<String>)`](crate::client::fluent_builders::GetObjectAttributes::sse_customer_key_md5) / [`set_sse_customer_key_md5(Option<String>)`](crate::client::fluent_builders::GetObjectAttributes::set_sse_customer_key_md5): <p>Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure that the encryption key was transmitted without error.</p>
    ///   - [`request_payer(RequestPayer)`](crate::client::fluent_builders::GetObjectAttributes::request_payer) / [`set_request_payer(Option<RequestPayer>)`](crate::client::fluent_builders::GetObjectAttributes::set_request_payer): <p>Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from Requester Pays buckets, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html">Downloading Objects in Requester Pays Buckets</a> in the <i>Amazon S3 User Guide</i>.</p>
    ///   - [`expected_bucket_owner(impl Into<String>)`](crate::client::fluent_builders::GetObjectAttributes::expected_bucket_owner) / [`set_expected_bucket_owner(Option<String>)`](crate::client::fluent_builders::GetObjectAttributes::set_expected_bucket_owner): <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
    ///   - [`object_attributes(Vec<ObjectAttributes>)`](crate::client::fluent_builders::GetObjectAttributes::object_attributes) / [`set_object_attributes(Option<Vec<ObjectAttributes>>)`](crate::client::fluent_builders::GetObjectAttributes::set_object_attributes): <p>An XML header that specifies the fields at the root level that you want returned in the response. Fields that you do not specify are not returned.</p>
    /// - On success, responds with [`GetObjectAttributesOutput`](crate::output::GetObjectAttributesOutput) with field(s):
    ///   - [`delete_marker(bool)`](crate::output::GetObjectAttributesOutput::delete_marker): <p>Specifies whether the object retrieved was (<code>true</code>) or was not (<code>false</code>) a delete marker. If <code>false</code>, this response header does not appear in the response.</p>
    ///   - [`last_modified(Option<DateTime>)`](crate::output::GetObjectAttributesOutput::last_modified): <p>The creation date of the object.</p>
    ///   - [`version_id(Option<String>)`](crate::output::GetObjectAttributesOutput::version_id): <p>The version ID of the object.</p>
    ///   - [`request_charged(Option<RequestCharged>)`](crate::output::GetObjectAttributesOutput::request_charged): <p>If present, indicates that the requester was successfully charged for the request.</p>
    ///   - [`e_tag(Option<String>)`](crate::output::GetObjectAttributesOutput::e_tag): <p>An ETag is an opaque identifier assigned by a web server to a specific version of a resource found at a URL.</p>
    ///   - [`checksum(Option<Checksum>)`](crate::output::GetObjectAttributesOutput::checksum): <p>The checksum or digest of the object.</p>
    ///   - [`object_parts(Option<GetObjectAttributesParts>)`](crate::output::GetObjectAttributesOutput::object_parts): <p>A collection of parts associated with a multipart upload.</p>
    ///   - [`storage_class(Option<StorageClass>)`](crate::output::GetObjectAttributesOutput::storage_class): <p>Provides the storage class information of the object. Amazon S3 returns this header for all objects except for S3 Standard storage class objects.</p>  <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-class-intro.html">Storage Classes</a>.</p>
    ///   - [`object_size(i64)`](crate::output::GetObjectAttributesOutput::object_size): <p>The size of the object in bytes.</p>
    /// - On failure, responds with [`SdkError<GetObjectAttributesError>`](crate::error::GetObjectAttributesError)
    pub fn get_object_attributes(&self) -> crate::client::fluent_builders::GetObjectAttributes {
        crate::client::fluent_builders::GetObjectAttributes::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetObjectLegalHold`](crate::client::fluent_builders::GetObjectLegalHold) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`bucket(impl Into<String>)`](crate::client::fluent_builders::GetObjectLegalHold::bucket) / [`set_bucket(Option<String>)`](crate::client::fluent_builders::GetObjectLegalHold::set_bucket): <p>The bucket name containing the object whose legal hold status you want to retrieve. </p>  <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p>
    ///   - [`key(impl Into<String>)`](crate::client::fluent_builders::GetObjectLegalHold::key) / [`set_key(Option<String>)`](crate::client::fluent_builders::GetObjectLegalHold::set_key): <p>The key name for the object whose legal hold status you want to retrieve.</p>
    ///   - [`version_id(impl Into<String>)`](crate::client::fluent_builders::GetObjectLegalHold::version_id) / [`set_version_id(Option<String>)`](crate::client::fluent_builders::GetObjectLegalHold::set_version_id): <p>The version ID of the object whose legal hold status you want to retrieve.</p>
    ///   - [`request_payer(RequestPayer)`](crate::client::fluent_builders::GetObjectLegalHold::request_payer) / [`set_request_payer(Option<RequestPayer>)`](crate::client::fluent_builders::GetObjectLegalHold::set_request_payer): <p>Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from Requester Pays buckets, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html">Downloading Objects in Requester Pays Buckets</a> in the <i>Amazon S3 User Guide</i>.</p>
    ///   - [`expected_bucket_owner(impl Into<String>)`](crate::client::fluent_builders::GetObjectLegalHold::expected_bucket_owner) / [`set_expected_bucket_owner(Option<String>)`](crate::client::fluent_builders::GetObjectLegalHold::set_expected_bucket_owner): <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
    /// - On success, responds with [`GetObjectLegalHoldOutput`](crate::output::GetObjectLegalHoldOutput) with field(s):
    ///   - [`legal_hold(Option<ObjectLockLegalHold>)`](crate::output::GetObjectLegalHoldOutput::legal_hold): <p>The current legal hold status for the specified object.</p>
    /// - On failure, responds with [`SdkError<GetObjectLegalHoldError>`](crate::error::GetObjectLegalHoldError)
    pub fn get_object_legal_hold(&self) -> crate::client::fluent_builders::GetObjectLegalHold {
        crate::client::fluent_builders::GetObjectLegalHold::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetObjectLockConfiguration`](crate::client::fluent_builders::GetObjectLockConfiguration) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`bucket(impl Into<String>)`](crate::client::fluent_builders::GetObjectLockConfiguration::bucket) / [`set_bucket(Option<String>)`](crate::client::fluent_builders::GetObjectLockConfiguration::set_bucket): <p>The bucket whose Object Lock configuration you want to retrieve.</p>  <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p>
    ///   - [`expected_bucket_owner(impl Into<String>)`](crate::client::fluent_builders::GetObjectLockConfiguration::expected_bucket_owner) / [`set_expected_bucket_owner(Option<String>)`](crate::client::fluent_builders::GetObjectLockConfiguration::set_expected_bucket_owner): <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
    /// - On success, responds with [`GetObjectLockConfigurationOutput`](crate::output::GetObjectLockConfigurationOutput) with field(s):
    ///   - [`object_lock_configuration(Option<ObjectLockConfiguration>)`](crate::output::GetObjectLockConfigurationOutput::object_lock_configuration): <p>The specified bucket's Object Lock configuration.</p>
    /// - On failure, responds with [`SdkError<GetObjectLockConfigurationError>`](crate::error::GetObjectLockConfigurationError)
    pub fn get_object_lock_configuration(
        &self,
    ) -> crate::client::fluent_builders::GetObjectLockConfiguration {
        crate::client::fluent_builders::GetObjectLockConfiguration::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetObjectRetention`](crate::client::fluent_builders::GetObjectRetention) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`bucket(impl Into<String>)`](crate::client::fluent_builders::GetObjectRetention::bucket) / [`set_bucket(Option<String>)`](crate::client::fluent_builders::GetObjectRetention::set_bucket): <p>The bucket name containing the object whose retention settings you want to retrieve. </p>  <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p>
    ///   - [`key(impl Into<String>)`](crate::client::fluent_builders::GetObjectRetention::key) / [`set_key(Option<String>)`](crate::client::fluent_builders::GetObjectRetention::set_key): <p>The key name for the object whose retention settings you want to retrieve.</p>
    ///   - [`version_id(impl Into<String>)`](crate::client::fluent_builders::GetObjectRetention::version_id) / [`set_version_id(Option<String>)`](crate::client::fluent_builders::GetObjectRetention::set_version_id): <p>The version ID for the object whose retention settings you want to retrieve.</p>
    ///   - [`request_payer(RequestPayer)`](crate::client::fluent_builders::GetObjectRetention::request_payer) / [`set_request_payer(Option<RequestPayer>)`](crate::client::fluent_builders::GetObjectRetention::set_request_payer): <p>Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from Requester Pays buckets, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html">Downloading Objects in Requester Pays Buckets</a> in the <i>Amazon S3 User Guide</i>.</p>
    ///   - [`expected_bucket_owner(impl Into<String>)`](crate::client::fluent_builders::GetObjectRetention::expected_bucket_owner) / [`set_expected_bucket_owner(Option<String>)`](crate::client::fluent_builders::GetObjectRetention::set_expected_bucket_owner): <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
    /// - On success, responds with [`GetObjectRetentionOutput`](crate::output::GetObjectRetentionOutput) with field(s):
    ///   - [`retention(Option<ObjectLockRetention>)`](crate::output::GetObjectRetentionOutput::retention): <p>The container element for an object's retention settings.</p>
    /// - On failure, responds with [`SdkError<GetObjectRetentionError>`](crate::error::GetObjectRetentionError)
    pub fn get_object_retention(&self) -> crate::client::fluent_builders::GetObjectRetention {
        crate::client::fluent_builders::GetObjectRetention::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetObjectTagging`](crate::client::fluent_builders::GetObjectTagging) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`bucket(impl Into<String>)`](crate::client::fluent_builders::GetObjectTagging::bucket) / [`set_bucket(Option<String>)`](crate::client::fluent_builders::GetObjectTagging::set_bucket): <p>The bucket name containing the object for which to get the tagging information. </p>  <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p>  <p>When using this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <code> <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com</code>. When using this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts bucket ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">Using Amazon S3 on Outposts</a> in the <i>Amazon S3 User Guide</i>.</p>
    ///   - [`key(impl Into<String>)`](crate::client::fluent_builders::GetObjectTagging::key) / [`set_key(Option<String>)`](crate::client::fluent_builders::GetObjectTagging::set_key): <p>Object key for which to get the tagging information.</p>
    ///   - [`version_id(impl Into<String>)`](crate::client::fluent_builders::GetObjectTagging::version_id) / [`set_version_id(Option<String>)`](crate::client::fluent_builders::GetObjectTagging::set_version_id): <p>The versionId of the object for which to get the tagging information.</p>
    ///   - [`expected_bucket_owner(impl Into<String>)`](crate::client::fluent_builders::GetObjectTagging::expected_bucket_owner) / [`set_expected_bucket_owner(Option<String>)`](crate::client::fluent_builders::GetObjectTagging::set_expected_bucket_owner): <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
    ///   - [`request_payer(RequestPayer)`](crate::client::fluent_builders::GetObjectTagging::request_payer) / [`set_request_payer(Option<RequestPayer>)`](crate::client::fluent_builders::GetObjectTagging::set_request_payer): <p>Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from Requester Pays buckets, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html">Downloading Objects in Requester Pays Buckets</a> in the <i>Amazon S3 User Guide</i>.</p>
    /// - On success, responds with [`GetObjectTaggingOutput`](crate::output::GetObjectTaggingOutput) with field(s):
    ///   - [`version_id(Option<String>)`](crate::output::GetObjectTaggingOutput::version_id): <p>The versionId of the object for which you got the tagging information.</p>
    ///   - [`tag_set(Option<Vec<Tag>>)`](crate::output::GetObjectTaggingOutput::tag_set): <p>Contains the tag set.</p>
    /// - On failure, responds with [`SdkError<GetObjectTaggingError>`](crate::error::GetObjectTaggingError)
    pub fn get_object_tagging(&self) -> crate::client::fluent_builders::GetObjectTagging {
        crate::client::fluent_builders::GetObjectTagging::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetObjectTorrent`](crate::client::fluent_builders::GetObjectTorrent) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`bucket(impl Into<String>)`](crate::client::fluent_builders::GetObjectTorrent::bucket) / [`set_bucket(Option<String>)`](crate::client::fluent_builders::GetObjectTorrent::set_bucket): <p>The name of the bucket containing the object for which to get the torrent files.</p>
    ///   - [`key(impl Into<String>)`](crate::client::fluent_builders::GetObjectTorrent::key) / [`set_key(Option<String>)`](crate::client::fluent_builders::GetObjectTorrent::set_key): <p>The object key for which to get the information.</p>
    ///   - [`request_payer(RequestPayer)`](crate::client::fluent_builders::GetObjectTorrent::request_payer) / [`set_request_payer(Option<RequestPayer>)`](crate::client::fluent_builders::GetObjectTorrent::set_request_payer): <p>Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from Requester Pays buckets, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html">Downloading Objects in Requester Pays Buckets</a> in the <i>Amazon S3 User Guide</i>.</p>
    ///   - [`expected_bucket_owner(impl Into<String>)`](crate::client::fluent_builders::GetObjectTorrent::expected_bucket_owner) / [`set_expected_bucket_owner(Option<String>)`](crate::client::fluent_builders::GetObjectTorrent::set_expected_bucket_owner): <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
    /// - On success, responds with [`GetObjectTorrentOutput`](crate::output::GetObjectTorrentOutput) with field(s):
    ///   - [`body(ByteStream)`](crate::output::GetObjectTorrentOutput::body): <p>A Bencoded dictionary as defined by the BitTorrent specification</p>
    ///   - [`request_charged(Option<RequestCharged>)`](crate::output::GetObjectTorrentOutput::request_charged): <p>If present, indicates that the requester was successfully charged for the request.</p>
    /// - On failure, responds with [`SdkError<GetObjectTorrentError>`](crate::error::GetObjectTorrentError)
    pub fn get_object_torrent(&self) -> crate::client::fluent_builders::GetObjectTorrent {
        crate::client::fluent_builders::GetObjectTorrent::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetPublicAccessBlock`](crate::client::fluent_builders::GetPublicAccessBlock) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`bucket(impl Into<String>)`](crate::client::fluent_builders::GetPublicAccessBlock::bucket) / [`set_bucket(Option<String>)`](crate::client::fluent_builders::GetPublicAccessBlock::set_bucket): <p>The name of the Amazon S3 bucket whose <code>PublicAccessBlock</code> configuration you want to retrieve. </p>
    ///   - [`expected_bucket_owner(impl Into<String>)`](crate::client::fluent_builders::GetPublicAccessBlock::expected_bucket_owner) / [`set_expected_bucket_owner(Option<String>)`](crate::client::fluent_builders::GetPublicAccessBlock::set_expected_bucket_owner): <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
    /// - On success, responds with [`GetPublicAccessBlockOutput`](crate::output::GetPublicAccessBlockOutput) with field(s):
    ///   - [`public_access_block_configuration(Option<PublicAccessBlockConfiguration>)`](crate::output::GetPublicAccessBlockOutput::public_access_block_configuration): <p>The <code>PublicAccessBlock</code> configuration currently in effect for this Amazon S3 bucket.</p>
    /// - On failure, responds with [`SdkError<GetPublicAccessBlockError>`](crate::error::GetPublicAccessBlockError)
    pub fn get_public_access_block(&self) -> crate::client::fluent_builders::GetPublicAccessBlock {
        crate::client::fluent_builders::GetPublicAccessBlock::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`HeadBucket`](crate::client::fluent_builders::HeadBucket) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`bucket(impl Into<String>)`](crate::client::fluent_builders::HeadBucket::bucket) / [`set_bucket(Option<String>)`](crate::client::fluent_builders::HeadBucket::set_bucket): <p>The bucket name.</p>  <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p>  <p>When using this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <code> <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com</code>. When using this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts bucket ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">Using Amazon S3 on Outposts</a> in the <i>Amazon S3 User Guide</i>.</p>
    ///   - [`expected_bucket_owner(impl Into<String>)`](crate::client::fluent_builders::HeadBucket::expected_bucket_owner) / [`set_expected_bucket_owner(Option<String>)`](crate::client::fluent_builders::HeadBucket::set_expected_bucket_owner): <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
    /// - On success, responds with [`HeadBucketOutput`](crate::output::HeadBucketOutput)

    /// - On failure, responds with [`SdkError<HeadBucketError>`](crate::error::HeadBucketError)
    pub fn head_bucket(&self) -> crate::client::fluent_builders::HeadBucket {
        crate::client::fluent_builders::HeadBucket::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`HeadObject`](crate::client::fluent_builders::HeadObject) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`bucket(impl Into<String>)`](crate::client::fluent_builders::HeadObject::bucket) / [`set_bucket(Option<String>)`](crate::client::fluent_builders::HeadObject::set_bucket): <p>The name of the bucket containing the object.</p>  <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p>  <p>When using this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <code> <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com</code>. When using this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts bucket ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">Using Amazon S3 on Outposts</a> in the <i>Amazon S3 User Guide</i>.</p>
    ///   - [`if_match(impl Into<String>)`](crate::client::fluent_builders::HeadObject::if_match) / [`set_if_match(Option<String>)`](crate::client::fluent_builders::HeadObject::set_if_match): <p>Return the object only if its entity tag (ETag) is the same as the one specified; otherwise, return a 412 (precondition failed) error.</p>
    ///   - [`if_modified_since(DateTime)`](crate::client::fluent_builders::HeadObject::if_modified_since) / [`set_if_modified_since(Option<DateTime>)`](crate::client::fluent_builders::HeadObject::set_if_modified_since): <p>Return the object only if it has been modified since the specified time; otherwise, return a 304 (not modified) error.</p>
    ///   - [`if_none_match(impl Into<String>)`](crate::client::fluent_builders::HeadObject::if_none_match) / [`set_if_none_match(Option<String>)`](crate::client::fluent_builders::HeadObject::set_if_none_match): <p>Return the object only if its entity tag (ETag) is different from the one specified; otherwise, return a 304 (not modified) error.</p>
    ///   - [`if_unmodified_since(DateTime)`](crate::client::fluent_builders::HeadObject::if_unmodified_since) / [`set_if_unmodified_since(Option<DateTime>)`](crate::client::fluent_builders::HeadObject::set_if_unmodified_since): <p>Return the object only if it has not been modified since the specified time; otherwise, return a 412 (precondition failed) error.</p>
    ///   - [`key(impl Into<String>)`](crate::client::fluent_builders::HeadObject::key) / [`set_key(Option<String>)`](crate::client::fluent_builders::HeadObject::set_key): <p>The object key.</p>
    ///   - [`range(impl Into<String>)`](crate::client::fluent_builders::HeadObject::range) / [`set_range(Option<String>)`](crate::client::fluent_builders::HeadObject::set_range): <p>Because <code>HeadObject</code> returns only the metadata for an object, this parameter has no effect.</p>
    ///   - [`version_id(impl Into<String>)`](crate::client::fluent_builders::HeadObject::version_id) / [`set_version_id(Option<String>)`](crate::client::fluent_builders::HeadObject::set_version_id): <p>VersionId used to reference a specific version of the object.</p>
    ///   - [`sse_customer_algorithm(impl Into<String>)`](crate::client::fluent_builders::HeadObject::sse_customer_algorithm) / [`set_sse_customer_algorithm(Option<String>)`](crate::client::fluent_builders::HeadObject::set_sse_customer_algorithm): <p>Specifies the algorithm to use to when encrypting the object (for example, AES256).</p>
    ///   - [`sse_customer_key(impl Into<String>)`](crate::client::fluent_builders::HeadObject::sse_customer_key) / [`set_sse_customer_key(Option<String>)`](crate::client::fluent_builders::HeadObject::set_sse_customer_key): <p>Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This value is used to store the object and then it is discarded; Amazon S3 does not store the encryption key. The key must be appropriate for use with the algorithm specified in the <code>x-amz-server-side-encryption-customer-algorithm</code> header.</p>
    ///   - [`sse_customer_key_md5(impl Into<String>)`](crate::client::fluent_builders::HeadObject::sse_customer_key_md5) / [`set_sse_customer_key_md5(Option<String>)`](crate::client::fluent_builders::HeadObject::set_sse_customer_key_md5): <p>Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure that the encryption key was transmitted without error.</p>
    ///   - [`request_payer(RequestPayer)`](crate::client::fluent_builders::HeadObject::request_payer) / [`set_request_payer(Option<RequestPayer>)`](crate::client::fluent_builders::HeadObject::set_request_payer): <p>Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from Requester Pays buckets, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html">Downloading Objects in Requester Pays Buckets</a> in the <i>Amazon S3 User Guide</i>.</p>
    ///   - [`part_number(i32)`](crate::client::fluent_builders::HeadObject::part_number) / [`set_part_number(i32)`](crate::client::fluent_builders::HeadObject::set_part_number): <p>Part number of the object being read. This is a positive integer between 1 and 10,000. Effectively performs a 'ranged' HEAD request for the part specified. Useful querying about the size of the part and the number of parts in this object.</p>
    ///   - [`expected_bucket_owner(impl Into<String>)`](crate::client::fluent_builders::HeadObject::expected_bucket_owner) / [`set_expected_bucket_owner(Option<String>)`](crate::client::fluent_builders::HeadObject::set_expected_bucket_owner): <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
    ///   - [`checksum_mode(ChecksumMode)`](crate::client::fluent_builders::HeadObject::checksum_mode) / [`set_checksum_mode(Option<ChecksumMode>)`](crate::client::fluent_builders::HeadObject::set_checksum_mode): <p>To retrieve the checksum, this parameter must be enabled.</p>  <p>In addition, if you enable <code>ChecksumMode</code> and the object is encrypted with Amazon Web Services Key Management Service (Amazon Web Services KMS), you must have permission to use the <code>kms:Decrypt</code> action for the request to succeed.</p>
    /// - On success, responds with [`HeadObjectOutput`](crate::output::HeadObjectOutput) with field(s):
    ///   - [`delete_marker(bool)`](crate::output::HeadObjectOutput::delete_marker): <p>Specifies whether the object retrieved was (true) or was not (false) a Delete Marker. If false, this response header does not appear in the response.</p>
    ///   - [`accept_ranges(Option<String>)`](crate::output::HeadObjectOutput::accept_ranges): <p>Indicates that a range of bytes was specified.</p>
    ///   - [`expiration(Option<String>)`](crate::output::HeadObjectOutput::expiration): <p>If the object expiration is configured (see PUT Bucket lifecycle), the response includes this header. It includes the <code>expiry-date</code> and <code>rule-id</code> key-value pairs providing object expiration information. The value of the <code>rule-id</code> is URL-encoded.</p>
    ///   - [`restore(Option<String>)`](crate::output::HeadObjectOutput::restore): <p>If the object is an archived object (an object whose storage class is GLACIER), the response includes this header if either the archive restoration is in progress (see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_RestoreObject.html">RestoreObject</a> or an archive copy is already restored.</p>  <p> If an archive copy is already restored, the header value indicates when Amazon S3 is scheduled to delete the object copy. For example:</p>  <p> <code>x-amz-restore: ongoing-request="false", expiry-date="Fri, 21 Dec 2012 00:00:00 GMT"</code> </p>  <p>If the object restoration is in progress, the header returns the value <code>ongoing-request="true"</code>.</p>  <p>For more information about archiving objects, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html#lifecycle-transition-general-considerations">Transitioning Objects: General Considerations</a>.</p>
    ///   - [`archive_status(Option<ArchiveStatus>)`](crate::output::HeadObjectOutput::archive_status): <p>The archive state of the head object.</p>
    ///   - [`last_modified(Option<DateTime>)`](crate::output::HeadObjectOutput::last_modified): <p>Creation date of the object.</p>
    ///   - [`content_length(i64)`](crate::output::HeadObjectOutput::content_length): <p>Size of the body in bytes.</p>
    ///   - [`checksum_crc32(Option<String>)`](crate::output::HeadObjectOutput::checksum_crc32): <p>The base64-encoded, 32-bit CRC32 checksum of the object. This will only be present if it was uploaded with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated with multipart uploads, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums"> Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
    ///   - [`checksum_crc32_c(Option<String>)`](crate::output::HeadObjectOutput::checksum_crc32_c): <p>The base64-encoded, 32-bit CRC32C checksum of the object. This will only be present if it was uploaded with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated with multipart uploads, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums"> Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
    ///   - [`checksum_sha1(Option<String>)`](crate::output::HeadObjectOutput::checksum_sha1): <p>The base64-encoded, 160-bit SHA-1 digest of the object. This will only be present if it was uploaded with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated with multipart uploads, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums"> Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
    ///   - [`checksum_sha256(Option<String>)`](crate::output::HeadObjectOutput::checksum_sha256): <p>The base64-encoded, 256-bit SHA-256 digest of the object. This will only be present if it was uploaded with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated with multipart uploads, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums"> Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
    ///   - [`e_tag(Option<String>)`](crate::output::HeadObjectOutput::e_tag): <p>An entity tag (ETag) is an opaque identifier assigned by a web server to a specific version of a resource found at a URL.</p>
    ///   - [`missing_meta(i32)`](crate::output::HeadObjectOutput::missing_meta): <p>This is set to the number of metadata entries not returned in <code>x-amz-meta</code> headers. This can happen if you create metadata using an API like SOAP that supports more flexible metadata than the REST API. For example, using SOAP, you can create metadata whose values are not legal HTTP headers.</p>
    ///   - [`version_id(Option<String>)`](crate::output::HeadObjectOutput::version_id): <p>Version of the object.</p>
    ///   - [`cache_control(Option<String>)`](crate::output::HeadObjectOutput::cache_control): <p>Specifies caching behavior along the request/reply chain.</p>
    ///   - [`content_disposition(Option<String>)`](crate::output::HeadObjectOutput::content_disposition): <p>Specifies presentational information for the object.</p>
    ///   - [`content_encoding(Option<String>)`](crate::output::HeadObjectOutput::content_encoding): <p>Specifies what content encodings have been applied to the object and thus what decoding mechanisms must be applied to obtain the media-type referenced by the Content-Type header field.</p>
    ///   - [`content_language(Option<String>)`](crate::output::HeadObjectOutput::content_language): <p>The language the content is in.</p>
    ///   - [`content_type(Option<String>)`](crate::output::HeadObjectOutput::content_type): <p>A standard MIME type describing the format of the object data.</p>
    ///   - [`expires(Option<DateTime>)`](crate::output::HeadObjectOutput::expires): <p>The date and time at which the object is no longer cacheable.</p>
    ///   - [`website_redirect_location(Option<String>)`](crate::output::HeadObjectOutput::website_redirect_location): <p>If the bucket is configured as a website, redirects requests for this object to another object in the same bucket or to an external URL. Amazon S3 stores the value of this header in the object metadata.</p>
    ///   - [`server_side_encryption(Option<ServerSideEncryption>)`](crate::output::HeadObjectOutput::server_side_encryption): <p>If the object is stored using server-side encryption either with an Amazon Web Services KMS key or an Amazon S3-managed encryption key, the response includes this header with the value of the server-side encryption algorithm used when storing this object in Amazon S3 (for example, AES256, aws:kms).</p>
    ///   - [`metadata(Option<HashMap<String, String>>)`](crate::output::HeadObjectOutput::metadata): <p>A map of metadata to store with the object in S3.</p>
    ///   - [`sse_customer_algorithm(Option<String>)`](crate::output::HeadObjectOutput::sse_customer_algorithm): <p>If server-side encryption with a customer-provided encryption key was requested, the response will include this header confirming the encryption algorithm used.</p>
    ///   - [`sse_customer_key_md5(Option<String>)`](crate::output::HeadObjectOutput::sse_customer_key_md5): <p>If server-side encryption with a customer-provided encryption key was requested, the response will include this header to provide round-trip message integrity verification of the customer-provided encryption key.</p>
    ///   - [`ssekms_key_id(Option<String>)`](crate::output::HeadObjectOutput::ssekms_key_id): <p>If present, specifies the ID of the Amazon Web Services Key Management Service (Amazon Web Services KMS) symmetric customer managed key that was used for the object.</p>
    ///   - [`bucket_key_enabled(bool)`](crate::output::HeadObjectOutput::bucket_key_enabled): <p>Indicates whether the object uses an S3 Bucket Key for server-side encryption with Amazon Web Services KMS (SSE-KMS).</p>
    ///   - [`storage_class(Option<StorageClass>)`](crate::output::HeadObjectOutput::storage_class): <p>Provides storage class information of the object. Amazon S3 returns this header for all objects except for S3 Standard storage class objects.</p>  <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-class-intro.html">Storage Classes</a>.</p>
    ///   - [`request_charged(Option<RequestCharged>)`](crate::output::HeadObjectOutput::request_charged): <p>If present, indicates that the requester was successfully charged for the request.</p>
    ///   - [`replication_status(Option<ReplicationStatus>)`](crate::output::HeadObjectOutput::replication_status): <p>Amazon S3 can return this header if your request involves a bucket that is either a source or a destination in a replication rule.</p>  <p>In replication, you have a source bucket on which you configure replication and destination bucket or buckets where Amazon S3 stores object replicas. When you request an object (<code>GetObject</code>) or object metadata (<code>HeadObject</code>) from these buckets, Amazon S3 will return the <code>x-amz-replication-status</code> header in the response as follows:</p>  <ul>   <li> <p> <b>If requesting an object from the source bucket</b>, Amazon S3 will return the <code>x-amz-replication-status</code> header if the object in your request is eligible for replication.</p> <p> For example, suppose that in your replication configuration, you specify object prefix <code>TaxDocs</code> requesting Amazon S3 to replicate objects with key prefix <code>TaxDocs</code>. Any objects you upload with this key name prefix, for example <code>TaxDocs/document1.pdf</code>, are eligible for replication. For any object request with this key name prefix, Amazon S3 will return the <code>x-amz-replication-status</code> header with value PENDING, COMPLETED or FAILED indicating object replication status.</p> </li>   <li> <p> <b>If requesting an object from a destination bucket</b>, Amazon S3 will return the <code>x-amz-replication-status</code> header with value REPLICA if the object in your request is a replica that Amazon S3 created and there is no replica modification replication in progress.</p> </li>   <li> <p> <b>When replicating objects to multiple destination buckets</b>, the <code>x-amz-replication-status</code> header acts differently. The header of the source object will only return a value of COMPLETED when replication is successful to all destinations. The header will remain at value PENDING until replication has completed for all destinations. If one or more destinations fails replication the header will return FAILED. </p> </li>  </ul>  <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html">Replication</a>.</p>
    ///   - [`parts_count(i32)`](crate::output::HeadObjectOutput::parts_count): <p>The count of parts this object has. This value is only returned if you specify <code>partNumber</code> in your request and the object was uploaded as a multipart upload.</p>
    ///   - [`object_lock_mode(Option<ObjectLockMode>)`](crate::output::HeadObjectOutput::object_lock_mode): <p>The Object Lock mode, if any, that's in effect for this object. This header is only returned if the requester has the <code>s3:GetObjectRetention</code> permission. For more information about S3 Object Lock, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock.html">Object Lock</a>. </p>
    ///   - [`object_lock_retain_until_date(Option<DateTime>)`](crate::output::HeadObjectOutput::object_lock_retain_until_date): <p>The date and time when the Object Lock retention period expires. This header is only returned if the requester has the <code>s3:GetObjectRetention</code> permission.</p>
    ///   - [`object_lock_legal_hold_status(Option<ObjectLockLegalHoldStatus>)`](crate::output::HeadObjectOutput::object_lock_legal_hold_status): <p>Specifies whether a legal hold is in effect for this object. This header is only returned if the requester has the <code>s3:GetObjectLegalHold</code> permission. This header is not returned if the specified version of this object has never had a legal hold applied. For more information about S3 Object Lock, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock.html">Object Lock</a>.</p>
    /// - On failure, responds with [`SdkError<HeadObjectError>`](crate::error::HeadObjectError)
    pub fn head_object(&self) -> crate::client::fluent_builders::HeadObject {
        crate::client::fluent_builders::HeadObject::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListBucketAnalyticsConfigurations`](crate::client::fluent_builders::ListBucketAnalyticsConfigurations) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`bucket(impl Into<String>)`](crate::client::fluent_builders::ListBucketAnalyticsConfigurations::bucket) / [`set_bucket(Option<String>)`](crate::client::fluent_builders::ListBucketAnalyticsConfigurations::set_bucket): <p>The name of the bucket from which analytics configurations are retrieved.</p>
    ///   - [`continuation_token(impl Into<String>)`](crate::client::fluent_builders::ListBucketAnalyticsConfigurations::continuation_token) / [`set_continuation_token(Option<String>)`](crate::client::fluent_builders::ListBucketAnalyticsConfigurations::set_continuation_token): <p>The ContinuationToken that represents a placeholder from where this request should begin.</p>
    ///   - [`expected_bucket_owner(impl Into<String>)`](crate::client::fluent_builders::ListBucketAnalyticsConfigurations::expected_bucket_owner) / [`set_expected_bucket_owner(Option<String>)`](crate::client::fluent_builders::ListBucketAnalyticsConfigurations::set_expected_bucket_owner): <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
    /// - On success, responds with [`ListBucketAnalyticsConfigurationsOutput`](crate::output::ListBucketAnalyticsConfigurationsOutput) with field(s):
    ///   - [`is_truncated(bool)`](crate::output::ListBucketAnalyticsConfigurationsOutput::is_truncated): <p>Indicates whether the returned list of analytics configurations is complete. A value of true indicates that the list is not complete and the NextContinuationToken will be provided for a subsequent request.</p>
    ///   - [`continuation_token(Option<String>)`](crate::output::ListBucketAnalyticsConfigurationsOutput::continuation_token): <p>The marker that is used as a starting point for this analytics configuration list response. This value is present if it was sent in the request.</p>
    ///   - [`next_continuation_token(Option<String>)`](crate::output::ListBucketAnalyticsConfigurationsOutput::next_continuation_token): <p> <code>NextContinuationToken</code> is sent when <code>isTruncated</code> is true, which indicates that there are more analytics configurations to list. The next request must include this <code>NextContinuationToken</code>. The token is obfuscated and is not a usable value.</p>
    ///   - [`analytics_configuration_list(Option<Vec<AnalyticsConfiguration>>)`](crate::output::ListBucketAnalyticsConfigurationsOutput::analytics_configuration_list): <p>The list of analytics configurations for a bucket.</p>
    /// - On failure, responds with [`SdkError<ListBucketAnalyticsConfigurationsError>`](crate::error::ListBucketAnalyticsConfigurationsError)
    pub fn list_bucket_analytics_configurations(
        &self,
    ) -> crate::client::fluent_builders::ListBucketAnalyticsConfigurations {
        crate::client::fluent_builders::ListBucketAnalyticsConfigurations::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListBucketIntelligentTieringConfigurations`](crate::client::fluent_builders::ListBucketIntelligentTieringConfigurations) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`bucket(impl Into<String>)`](crate::client::fluent_builders::ListBucketIntelligentTieringConfigurations::bucket) / [`set_bucket(Option<String>)`](crate::client::fluent_builders::ListBucketIntelligentTieringConfigurations::set_bucket): <p>The name of the Amazon S3 bucket whose configuration you want to modify or retrieve.</p>
    ///   - [`continuation_token(impl Into<String>)`](crate::client::fluent_builders::ListBucketIntelligentTieringConfigurations::continuation_token) / [`set_continuation_token(Option<String>)`](crate::client::fluent_builders::ListBucketIntelligentTieringConfigurations::set_continuation_token): <p>The <code>ContinuationToken</code> that represents a placeholder from where this request should begin.</p>
    /// - On success, responds with [`ListBucketIntelligentTieringConfigurationsOutput`](crate::output::ListBucketIntelligentTieringConfigurationsOutput) with field(s):
    ///   - [`is_truncated(bool)`](crate::output::ListBucketIntelligentTieringConfigurationsOutput::is_truncated): <p>Indicates whether the returned list of analytics configurations is complete. A value of <code>true</code> indicates that the list is not complete and the <code>NextContinuationToken</code> will be provided for a subsequent request.</p>
    ///   - [`continuation_token(Option<String>)`](crate::output::ListBucketIntelligentTieringConfigurationsOutput::continuation_token): <p>The <code>ContinuationToken</code> that represents a placeholder from where this request should begin.</p>
    ///   - [`next_continuation_token(Option<String>)`](crate::output::ListBucketIntelligentTieringConfigurationsOutput::next_continuation_token): <p>The marker used to continue this inventory configuration listing. Use the <code>NextContinuationToken</code> from this response to continue the listing in a subsequent request. The continuation token is an opaque value that Amazon S3 understands.</p>
    ///   - [`intelligent_tiering_configuration_list(Option<Vec<IntelligentTieringConfiguration>>)`](crate::output::ListBucketIntelligentTieringConfigurationsOutput::intelligent_tiering_configuration_list): <p>The list of S3 Intelligent-Tiering configurations for a bucket.</p>
    /// - On failure, responds with [`SdkError<ListBucketIntelligentTieringConfigurationsError>`](crate::error::ListBucketIntelligentTieringConfigurationsError)
    pub fn list_bucket_intelligent_tiering_configurations(
        &self,
    ) -> crate::client::fluent_builders::ListBucketIntelligentTieringConfigurations {
        crate::client::fluent_builders::ListBucketIntelligentTieringConfigurations::new(
            self.handle.clone(),
        )
    }
    /// Constructs a fluent builder for the [`ListBucketInventoryConfigurations`](crate::client::fluent_builders::ListBucketInventoryConfigurations) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`bucket(impl Into<String>)`](crate::client::fluent_builders::ListBucketInventoryConfigurations::bucket) / [`set_bucket(Option<String>)`](crate::client::fluent_builders::ListBucketInventoryConfigurations::set_bucket): <p>The name of the bucket containing the inventory configurations to retrieve.</p>
    ///   - [`continuation_token(impl Into<String>)`](crate::client::fluent_builders::ListBucketInventoryConfigurations::continuation_token) / [`set_continuation_token(Option<String>)`](crate::client::fluent_builders::ListBucketInventoryConfigurations::set_continuation_token): <p>The marker used to continue an inventory configuration listing that has been truncated. Use the NextContinuationToken from a previously truncated list response to continue the listing. The continuation token is an opaque value that Amazon S3 understands.</p>
    ///   - [`expected_bucket_owner(impl Into<String>)`](crate::client::fluent_builders::ListBucketInventoryConfigurations::expected_bucket_owner) / [`set_expected_bucket_owner(Option<String>)`](crate::client::fluent_builders::ListBucketInventoryConfigurations::set_expected_bucket_owner): <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
    /// - On success, responds with [`ListBucketInventoryConfigurationsOutput`](crate::output::ListBucketInventoryConfigurationsOutput) with field(s):
    ///   - [`continuation_token(Option<String>)`](crate::output::ListBucketInventoryConfigurationsOutput::continuation_token): <p>If sent in the request, the marker that is used as a starting point for this inventory configuration list response.</p>
    ///   - [`inventory_configuration_list(Option<Vec<InventoryConfiguration>>)`](crate::output::ListBucketInventoryConfigurationsOutput::inventory_configuration_list): <p>The list of inventory configurations for a bucket.</p>
    ///   - [`is_truncated(bool)`](crate::output::ListBucketInventoryConfigurationsOutput::is_truncated): <p>Tells whether the returned list of inventory configurations is complete. A value of true indicates that the list is not complete and the NextContinuationToken is provided for a subsequent request.</p>
    ///   - [`next_continuation_token(Option<String>)`](crate::output::ListBucketInventoryConfigurationsOutput::next_continuation_token): <p>The marker used to continue this inventory configuration listing. Use the <code>NextContinuationToken</code> from this response to continue the listing in a subsequent request. The continuation token is an opaque value that Amazon S3 understands.</p>
    /// - On failure, responds with [`SdkError<ListBucketInventoryConfigurationsError>`](crate::error::ListBucketInventoryConfigurationsError)
    pub fn list_bucket_inventory_configurations(
        &self,
    ) -> crate::client::fluent_builders::ListBucketInventoryConfigurations {
        crate::client::fluent_builders::ListBucketInventoryConfigurations::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListBucketMetricsConfigurations`](crate::client::fluent_builders::ListBucketMetricsConfigurations) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`bucket(impl Into<String>)`](crate::client::fluent_builders::ListBucketMetricsConfigurations::bucket) / [`set_bucket(Option<String>)`](crate::client::fluent_builders::ListBucketMetricsConfigurations::set_bucket): <p>The name of the bucket containing the metrics configurations to retrieve.</p>
    ///   - [`continuation_token(impl Into<String>)`](crate::client::fluent_builders::ListBucketMetricsConfigurations::continuation_token) / [`set_continuation_token(Option<String>)`](crate::client::fluent_builders::ListBucketMetricsConfigurations::set_continuation_token): <p>The marker that is used to continue a metrics configuration listing that has been truncated. Use the NextContinuationToken from a previously truncated list response to continue the listing. The continuation token is an opaque value that Amazon S3 understands.</p>
    ///   - [`expected_bucket_owner(impl Into<String>)`](crate::client::fluent_builders::ListBucketMetricsConfigurations::expected_bucket_owner) / [`set_expected_bucket_owner(Option<String>)`](crate::client::fluent_builders::ListBucketMetricsConfigurations::set_expected_bucket_owner): <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
    /// - On success, responds with [`ListBucketMetricsConfigurationsOutput`](crate::output::ListBucketMetricsConfigurationsOutput) with field(s):
    ///   - [`is_truncated(bool)`](crate::output::ListBucketMetricsConfigurationsOutput::is_truncated): <p>Indicates whether the returned list of metrics configurations is complete. A value of true indicates that the list is not complete and the NextContinuationToken will be provided for a subsequent request.</p>
    ///   - [`continuation_token(Option<String>)`](crate::output::ListBucketMetricsConfigurationsOutput::continuation_token): <p>The marker that is used as a starting point for this metrics configuration list response. This value is present if it was sent in the request.</p>
    ///   - [`next_continuation_token(Option<String>)`](crate::output::ListBucketMetricsConfigurationsOutput::next_continuation_token): <p>The marker used to continue a metrics configuration listing that has been truncated. Use the <code>NextContinuationToken</code> from a previously truncated list response to continue the listing. The continuation token is an opaque value that Amazon S3 understands.</p>
    ///   - [`metrics_configuration_list(Option<Vec<MetricsConfiguration>>)`](crate::output::ListBucketMetricsConfigurationsOutput::metrics_configuration_list): <p>The list of metrics configurations for a bucket.</p>
    /// - On failure, responds with [`SdkError<ListBucketMetricsConfigurationsError>`](crate::error::ListBucketMetricsConfigurationsError)
    pub fn list_bucket_metrics_configurations(
        &self,
    ) -> crate::client::fluent_builders::ListBucketMetricsConfigurations {
        crate::client::fluent_builders::ListBucketMetricsConfigurations::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListBuckets`](crate::client::fluent_builders::ListBuckets) operation.
    ///
    /// - The fluent builder takes no input, just [`send`](crate::client::fluent_builders::ListBuckets::send) it.

    /// - On success, responds with [`ListBucketsOutput`](crate::output::ListBucketsOutput) with field(s):
    ///   - [`buckets(Option<Vec<Bucket>>)`](crate::output::ListBucketsOutput::buckets): <p>The list of buckets owned by the requester.</p>
    ///   - [`owner(Option<Owner>)`](crate::output::ListBucketsOutput::owner): <p>The owner of the buckets listed.</p>
    /// - On failure, responds with [`SdkError<ListBucketsError>`](crate::error::ListBucketsError)
    pub fn list_buckets(&self) -> crate::client::fluent_builders::ListBuckets {
        crate::client::fluent_builders::ListBuckets::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListMultipartUploads`](crate::client::fluent_builders::ListMultipartUploads) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`bucket(impl Into<String>)`](crate::client::fluent_builders::ListMultipartUploads::bucket) / [`set_bucket(Option<String>)`](crate::client::fluent_builders::ListMultipartUploads::set_bucket): <p>The name of the bucket to which the multipart upload was initiated. </p>  <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p>  <p>When using this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <code> <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com</code>. When using this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts bucket ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">Using Amazon S3 on Outposts</a> in the <i>Amazon S3 User Guide</i>.</p>
    ///   - [`delimiter(impl Into<String>)`](crate::client::fluent_builders::ListMultipartUploads::delimiter) / [`set_delimiter(Option<String>)`](crate::client::fluent_builders::ListMultipartUploads::set_delimiter): <p>Character you use to group keys.</p>  <p>All keys that contain the same string between the prefix, if specified, and the first occurrence of the delimiter after the prefix are grouped under a single result element, <code>CommonPrefixes</code>. If you don't specify the prefix parameter, then the substring starts at the beginning of the key. The keys that are grouped under <code>CommonPrefixes</code> result element are not returned elsewhere in the response.</p>
    ///   - [`encoding_type(EncodingType)`](crate::client::fluent_builders::ListMultipartUploads::encoding_type) / [`set_encoding_type(Option<EncodingType>)`](crate::client::fluent_builders::ListMultipartUploads::set_encoding_type): <p>Requests Amazon S3 to encode the object keys in the response and specifies the encoding method to use. An object key may contain any Unicode character; however, XML 1.0 parser cannot parse some characters, such as characters with an ASCII value from 0 to 10. For characters that are not supported in XML 1.0, you can add this parameter to request that Amazon S3 encode the keys in the response.</p>
    ///   - [`key_marker(impl Into<String>)`](crate::client::fluent_builders::ListMultipartUploads::key_marker) / [`set_key_marker(Option<String>)`](crate::client::fluent_builders::ListMultipartUploads::set_key_marker): <p>Together with upload-id-marker, this parameter specifies the multipart upload after which listing should begin.</p>  <p>If <code>upload-id-marker</code> is not specified, only the keys lexicographically greater than the specified <code>key-marker</code> will be included in the list.</p>  <p>If <code>upload-id-marker</code> is specified, any multipart uploads for a key equal to the <code>key-marker</code> might also be included, provided those multipart uploads have upload IDs lexicographically greater than the specified <code>upload-id-marker</code>.</p>
    ///   - [`max_uploads(i32)`](crate::client::fluent_builders::ListMultipartUploads::max_uploads) / [`set_max_uploads(i32)`](crate::client::fluent_builders::ListMultipartUploads::set_max_uploads): <p>Sets the maximum number of multipart uploads, from 1 to 1,000, to return in the response body. 1,000 is the maximum number of uploads that can be returned in a response.</p>
    ///   - [`prefix(impl Into<String>)`](crate::client::fluent_builders::ListMultipartUploads::prefix) / [`set_prefix(Option<String>)`](crate::client::fluent_builders::ListMultipartUploads::set_prefix): <p>Lists in-progress uploads only for those keys that begin with the specified prefix. You can use prefixes to separate a bucket into different grouping of keys. (You can think of using prefix to make groups in the same way you'd use a folder in a file system.)</p>
    ///   - [`upload_id_marker(impl Into<String>)`](crate::client::fluent_builders::ListMultipartUploads::upload_id_marker) / [`set_upload_id_marker(Option<String>)`](crate::client::fluent_builders::ListMultipartUploads::set_upload_id_marker): <p>Together with key-marker, specifies the multipart upload after which listing should begin. If key-marker is not specified, the upload-id-marker parameter is ignored. Otherwise, any multipart uploads for a key equal to the key-marker might be included in the list only if they have an upload ID lexicographically greater than the specified <code>upload-id-marker</code>.</p>
    ///   - [`expected_bucket_owner(impl Into<String>)`](crate::client::fluent_builders::ListMultipartUploads::expected_bucket_owner) / [`set_expected_bucket_owner(Option<String>)`](crate::client::fluent_builders::ListMultipartUploads::set_expected_bucket_owner): <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
    /// - On success, responds with [`ListMultipartUploadsOutput`](crate::output::ListMultipartUploadsOutput) with field(s):
    ///   - [`bucket(Option<String>)`](crate::output::ListMultipartUploadsOutput::bucket): <p>The name of the bucket to which the multipart upload was initiated. Does not return the access point ARN or access point alias if used.</p>
    ///   - [`key_marker(Option<String>)`](crate::output::ListMultipartUploadsOutput::key_marker): <p>The key at or after which the listing began.</p>
    ///   - [`upload_id_marker(Option<String>)`](crate::output::ListMultipartUploadsOutput::upload_id_marker): <p>Upload ID after which listing began.</p>
    ///   - [`next_key_marker(Option<String>)`](crate::output::ListMultipartUploadsOutput::next_key_marker): <p>When a list is truncated, this element specifies the value that should be used for the key-marker request parameter in a subsequent request.</p>
    ///   - [`prefix(Option<String>)`](crate::output::ListMultipartUploadsOutput::prefix): <p>When a prefix is provided in the request, this field contains the specified prefix. The result contains only keys starting with the specified prefix.</p>
    ///   - [`delimiter(Option<String>)`](crate::output::ListMultipartUploadsOutput::delimiter): <p>Contains the delimiter you specified in the request. If you don't specify a delimiter in your request, this element is absent from the response.</p>
    ///   - [`next_upload_id_marker(Option<String>)`](crate::output::ListMultipartUploadsOutput::next_upload_id_marker): <p>When a list is truncated, this element specifies the value that should be used for the <code>upload-id-marker</code> request parameter in a subsequent request.</p>
    ///   - [`max_uploads(i32)`](crate::output::ListMultipartUploadsOutput::max_uploads): <p>Maximum number of multipart uploads that could have been included in the response.</p>
    ///   - [`is_truncated(bool)`](crate::output::ListMultipartUploadsOutput::is_truncated): <p>Indicates whether the returned list of multipart uploads is truncated. A value of true indicates that the list was truncated. The list can be truncated if the number of multipart uploads exceeds the limit allowed or specified by max uploads.</p>
    ///   - [`uploads(Option<Vec<MultipartUpload>>)`](crate::output::ListMultipartUploadsOutput::uploads): <p>Container for elements related to a particular multipart upload. A response can contain zero or more <code>Upload</code> elements.</p>
    ///   - [`common_prefixes(Option<Vec<CommonPrefix>>)`](crate::output::ListMultipartUploadsOutput::common_prefixes): <p>If you specify a delimiter in the request, then the result returns each distinct key prefix containing the delimiter in a <code>CommonPrefixes</code> element. The distinct key prefixes are returned in the <code>Prefix</code> child element.</p>
    ///   - [`encoding_type(Option<EncodingType>)`](crate::output::ListMultipartUploadsOutput::encoding_type): <p>Encoding type used by Amazon S3 to encode object keys in the response.</p>  <p>If you specify <code>encoding-type</code> request parameter, Amazon S3 includes this element in the response, and returns encoded key name values in the following response elements:</p>  <p> <code>Delimiter</code>, <code>KeyMarker</code>, <code>Prefix</code>, <code>NextKeyMarker</code>, <code>Key</code>.</p>
    /// - On failure, responds with [`SdkError<ListMultipartUploadsError>`](crate::error::ListMultipartUploadsError)
    pub fn list_multipart_uploads(&self) -> crate::client::fluent_builders::ListMultipartUploads {
        crate::client::fluent_builders::ListMultipartUploads::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListObjects`](crate::client::fluent_builders::ListObjects) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`bucket(impl Into<String>)`](crate::client::fluent_builders::ListObjects::bucket) / [`set_bucket(Option<String>)`](crate::client::fluent_builders::ListObjects::set_bucket): <p>The name of the bucket containing the objects.</p>  <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p>  <p>When using this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <code> <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com</code>. When using this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts bucket ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">Using Amazon S3 on Outposts</a> in the <i>Amazon S3 User Guide</i>.</p>
    ///   - [`delimiter(impl Into<String>)`](crate::client::fluent_builders::ListObjects::delimiter) / [`set_delimiter(Option<String>)`](crate::client::fluent_builders::ListObjects::set_delimiter): <p>A delimiter is a character you use to group keys.</p>
    ///   - [`encoding_type(EncodingType)`](crate::client::fluent_builders::ListObjects::encoding_type) / [`set_encoding_type(Option<EncodingType>)`](crate::client::fluent_builders::ListObjects::set_encoding_type): <p>Requests Amazon S3 to encode the object keys in the response and specifies the encoding method to use. An object key may contain any Unicode character; however, XML 1.0 parser cannot parse some characters, such as characters with an ASCII value from 0 to 10. For characters that are not supported in XML 1.0, you can add this parameter to request that Amazon S3 encode the keys in the response.</p>
    ///   - [`marker(impl Into<String>)`](crate::client::fluent_builders::ListObjects::marker) / [`set_marker(Option<String>)`](crate::client::fluent_builders::ListObjects::set_marker): <p>Marker is where you want Amazon S3 to start listing from. Amazon S3 starts listing after this specified key. Marker can be any key in the bucket.</p>
    ///   - [`max_keys(i32)`](crate::client::fluent_builders::ListObjects::max_keys) / [`set_max_keys(i32)`](crate::client::fluent_builders::ListObjects::set_max_keys): <p>Sets the maximum number of keys returned in the response. By default the action returns up to 1,000 key names. The response might contain fewer keys but will never contain more. </p>
    ///   - [`prefix(impl Into<String>)`](crate::client::fluent_builders::ListObjects::prefix) / [`set_prefix(Option<String>)`](crate::client::fluent_builders::ListObjects::set_prefix): <p>Limits the response to keys that begin with the specified prefix.</p>
    ///   - [`request_payer(RequestPayer)`](crate::client::fluent_builders::ListObjects::request_payer) / [`set_request_payer(Option<RequestPayer>)`](crate::client::fluent_builders::ListObjects::set_request_payer): <p>Confirms that the requester knows that she or he will be charged for the list objects request. Bucket owners need not specify this parameter in their requests.</p>
    ///   - [`expected_bucket_owner(impl Into<String>)`](crate::client::fluent_builders::ListObjects::expected_bucket_owner) / [`set_expected_bucket_owner(Option<String>)`](crate::client::fluent_builders::ListObjects::set_expected_bucket_owner): <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
    /// - On success, responds with [`ListObjectsOutput`](crate::output::ListObjectsOutput) with field(s):
    ///   - [`is_truncated(bool)`](crate::output::ListObjectsOutput::is_truncated): <p>A flag that indicates whether Amazon S3 returned all of the results that satisfied the search criteria.</p>
    ///   - [`marker(Option<String>)`](crate::output::ListObjectsOutput::marker): <p>Indicates where in the bucket listing begins. Marker is included in the response if it was sent with the request.</p>
    ///   - [`next_marker(Option<String>)`](crate::output::ListObjectsOutput::next_marker): <p>When response is truncated (the IsTruncated element value in the response is true), you can use the key name in this field as marker in the subsequent request to get next set of objects. Amazon S3 lists objects in alphabetical order Note: This element is returned only if you have delimiter request parameter specified. If response does not include the NextMarker and it is truncated, you can use the value of the last Key in the response as the marker in the subsequent request to get the next set of object keys.</p>
    ///   - [`contents(Option<Vec<Object>>)`](crate::output::ListObjectsOutput::contents): <p>Metadata about each object returned.</p>
    ///   - [`name(Option<String>)`](crate::output::ListObjectsOutput::name): <p>The bucket name.</p>
    ///   - [`prefix(Option<String>)`](crate::output::ListObjectsOutput::prefix): <p>Keys that begin with the indicated prefix.</p>
    ///   - [`delimiter(Option<String>)`](crate::output::ListObjectsOutput::delimiter): <p>Causes keys that contain the same string between the prefix and the first occurrence of the delimiter to be rolled up into a single result element in the <code>CommonPrefixes</code> collection. These rolled-up keys are not returned elsewhere in the response. Each rolled-up result counts as only one return against the <code>MaxKeys</code> value.</p>
    ///   - [`max_keys(i32)`](crate::output::ListObjectsOutput::max_keys): <p>The maximum number of keys returned in the response body.</p>
    ///   - [`common_prefixes(Option<Vec<CommonPrefix>>)`](crate::output::ListObjectsOutput::common_prefixes): <p>All of the keys (up to 1,000) rolled up in a common prefix count as a single return when calculating the number of returns. </p>  <p>A response can contain CommonPrefixes only if you specify a delimiter.</p>  <p>CommonPrefixes contains all (if there are any) keys between Prefix and the next occurrence of the string specified by the delimiter.</p>  <p> CommonPrefixes lists keys that act like subdirectories in the directory specified by Prefix.</p>  <p>For example, if the prefix is notes/ and the delimiter is a slash (/) as in notes/summer/july, the common prefix is notes/summer/. All of the keys that roll up into a common prefix count as a single return when calculating the number of returns.</p>
    ///   - [`encoding_type(Option<EncodingType>)`](crate::output::ListObjectsOutput::encoding_type): <p>Encoding type used by Amazon S3 to encode object keys in the response.</p>
    /// - On failure, responds with [`SdkError<ListObjectsError>`](crate::error::ListObjectsError)
    pub fn list_objects(&self) -> crate::client::fluent_builders::ListObjects {
        crate::client::fluent_builders::ListObjects::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListObjectsV2`](crate::client::fluent_builders::ListObjectsV2) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListObjectsV2::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`bucket(impl Into<String>)`](crate::client::fluent_builders::ListObjectsV2::bucket) / [`set_bucket(Option<String>)`](crate::client::fluent_builders::ListObjectsV2::set_bucket): <p>Bucket name to list. </p>  <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p>  <p>When using this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <code> <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com</code>. When using this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts bucket ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">Using Amazon S3 on Outposts</a> in the <i>Amazon S3 User Guide</i>.</p>
    ///   - [`delimiter(impl Into<String>)`](crate::client::fluent_builders::ListObjectsV2::delimiter) / [`set_delimiter(Option<String>)`](crate::client::fluent_builders::ListObjectsV2::set_delimiter): <p>A delimiter is a character you use to group keys.</p>
    ///   - [`encoding_type(EncodingType)`](crate::client::fluent_builders::ListObjectsV2::encoding_type) / [`set_encoding_type(Option<EncodingType>)`](crate::client::fluent_builders::ListObjectsV2::set_encoding_type): <p>Encoding type used by Amazon S3 to encode object keys in the response.</p>
    ///   - [`max_keys(i32)`](crate::client::fluent_builders::ListObjectsV2::max_keys) / [`set_max_keys(i32)`](crate::client::fluent_builders::ListObjectsV2::set_max_keys): <p>Sets the maximum number of keys returned in the response. By default the action returns up to 1,000 key names. The response might contain fewer keys but will never contain more.</p>
    ///   - [`prefix(impl Into<String>)`](crate::client::fluent_builders::ListObjectsV2::prefix) / [`set_prefix(Option<String>)`](crate::client::fluent_builders::ListObjectsV2::set_prefix): <p>Limits the response to keys that begin with the specified prefix.</p>
    ///   - [`continuation_token(impl Into<String>)`](crate::client::fluent_builders::ListObjectsV2::continuation_token) / [`set_continuation_token(Option<String>)`](crate::client::fluent_builders::ListObjectsV2::set_continuation_token): <p>ContinuationToken indicates Amazon S3 that the list is being continued on this bucket with a token. ContinuationToken is obfuscated and is not a real key.</p>
    ///   - [`fetch_owner(bool)`](crate::client::fluent_builders::ListObjectsV2::fetch_owner) / [`set_fetch_owner(bool)`](crate::client::fluent_builders::ListObjectsV2::set_fetch_owner): <p>The owner field is not present in listV2 by default, if you want to return owner field with each key in the result then set the fetch owner field to true.</p>
    ///   - [`start_after(impl Into<String>)`](crate::client::fluent_builders::ListObjectsV2::start_after) / [`set_start_after(Option<String>)`](crate::client::fluent_builders::ListObjectsV2::set_start_after): <p>StartAfter is where you want Amazon S3 to start listing from. Amazon S3 starts listing after this specified key. StartAfter can be any key in the bucket.</p>
    ///   - [`request_payer(RequestPayer)`](crate::client::fluent_builders::ListObjectsV2::request_payer) / [`set_request_payer(Option<RequestPayer>)`](crate::client::fluent_builders::ListObjectsV2::set_request_payer): <p>Confirms that the requester knows that she or he will be charged for the list objects request in V2 style. Bucket owners need not specify this parameter in their requests.</p>
    ///   - [`expected_bucket_owner(impl Into<String>)`](crate::client::fluent_builders::ListObjectsV2::expected_bucket_owner) / [`set_expected_bucket_owner(Option<String>)`](crate::client::fluent_builders::ListObjectsV2::set_expected_bucket_owner): <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
    /// - On success, responds with [`ListObjectsV2Output`](crate::output::ListObjectsV2Output) with field(s):
    ///   - [`is_truncated(bool)`](crate::output::ListObjectsV2Output::is_truncated): <p>Set to false if all of the results were returned. Set to true if more keys are available to return. If the number of results exceeds that specified by MaxKeys, all of the results might not be returned.</p>
    ///   - [`contents(Option<Vec<Object>>)`](crate::output::ListObjectsV2Output::contents): <p>Metadata about each object returned.</p>
    ///   - [`name(Option<String>)`](crate::output::ListObjectsV2Output::name): <p>The bucket name.</p>  <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p>  <p>When using this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <code> <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com</code>. When using this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts bucket ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">Using Amazon S3 on Outposts</a> in the <i>Amazon S3 User Guide</i>.</p>
    ///   - [`prefix(Option<String>)`](crate::output::ListObjectsV2Output::prefix): <p> Keys that begin with the indicated prefix.</p>
    ///   - [`delimiter(Option<String>)`](crate::output::ListObjectsV2Output::delimiter): <p>Causes keys that contain the same string between the prefix and the first occurrence of the delimiter to be rolled up into a single result element in the CommonPrefixes collection. These rolled-up keys are not returned elsewhere in the response. Each rolled-up result counts as only one return against the <code>MaxKeys</code> value.</p>
    ///   - [`max_keys(i32)`](crate::output::ListObjectsV2Output::max_keys): <p>Sets the maximum number of keys returned in the response. By default the action returns up to 1,000 key names. The response might contain fewer keys but will never contain more.</p>
    ///   - [`common_prefixes(Option<Vec<CommonPrefix>>)`](crate::output::ListObjectsV2Output::common_prefixes): <p>All of the keys (up to 1,000) rolled up into a common prefix count as a single return when calculating the number of returns.</p>  <p>A response can contain <code>CommonPrefixes</code> only if you specify a delimiter.</p>  <p> <code>CommonPrefixes</code> contains all (if there are any) keys between <code>Prefix</code> and the next occurrence of the string specified by a delimiter.</p>  <p> <code>CommonPrefixes</code> lists keys that act like subdirectories in the directory specified by <code>Prefix</code>.</p>  <p>For example, if the prefix is <code>notes/</code> and the delimiter is a slash (<code>/</code>) as in <code>notes/summer/july</code>, the common prefix is <code>notes/summer/</code>. All of the keys that roll up into a common prefix count as a single return when calculating the number of returns. </p>
    ///   - [`encoding_type(Option<EncodingType>)`](crate::output::ListObjectsV2Output::encoding_type): <p>Encoding type used by Amazon S3 to encode object key names in the XML response.</p>  <p>If you specify the encoding-type request parameter, Amazon S3 includes this element in the response, and returns encoded key name values in the following response elements:</p>  <p> <code>Delimiter, Prefix, Key,</code> and <code>StartAfter</code>.</p>
    ///   - [`key_count(i32)`](crate::output::ListObjectsV2Output::key_count): <p>KeyCount is the number of keys returned with this request. KeyCount will always be less than or equals to MaxKeys field. Say you ask for 50 keys, your result will include less than equals 50 keys </p>
    ///   - [`continuation_token(Option<String>)`](crate::output::ListObjectsV2Output::continuation_token): <p> If ContinuationToken was sent with the request, it is included in the response.</p>
    ///   - [`next_continuation_token(Option<String>)`](crate::output::ListObjectsV2Output::next_continuation_token): <p> <code>NextContinuationToken</code> is sent when <code>isTruncated</code> is true, which means there are more keys in the bucket that can be listed. The next list requests to Amazon S3 can be continued with this <code>NextContinuationToken</code>. <code>NextContinuationToken</code> is obfuscated and is not a real key</p>
    ///   - [`start_after(Option<String>)`](crate::output::ListObjectsV2Output::start_after): <p>If StartAfter was sent with the request, it is included in the response.</p>
    /// - On failure, responds with [`SdkError<ListObjectsV2Error>`](crate::error::ListObjectsV2Error)
    pub fn list_objects_v2(&self) -> crate::client::fluent_builders::ListObjectsV2 {
        crate::client::fluent_builders::ListObjectsV2::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListObjectVersions`](crate::client::fluent_builders::ListObjectVersions) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`bucket(impl Into<String>)`](crate::client::fluent_builders::ListObjectVersions::bucket) / [`set_bucket(Option<String>)`](crate::client::fluent_builders::ListObjectVersions::set_bucket): <p>The bucket name that contains the objects. </p>
    ///   - [`delimiter(impl Into<String>)`](crate::client::fluent_builders::ListObjectVersions::delimiter) / [`set_delimiter(Option<String>)`](crate::client::fluent_builders::ListObjectVersions::set_delimiter): <p>A delimiter is a character that you specify to group keys. All keys that contain the same string between the <code>prefix</code> and the first occurrence of the delimiter are grouped under a single result element in CommonPrefixes. These groups are counted as one result against the max-keys limitation. These keys are not returned elsewhere in the response.</p>
    ///   - [`encoding_type(EncodingType)`](crate::client::fluent_builders::ListObjectVersions::encoding_type) / [`set_encoding_type(Option<EncodingType>)`](crate::client::fluent_builders::ListObjectVersions::set_encoding_type): <p>Requests Amazon S3 to encode the object keys in the response and specifies the encoding method to use. An object key may contain any Unicode character; however, XML 1.0 parser cannot parse some characters, such as characters with an ASCII value from 0 to 10. For characters that are not supported in XML 1.0, you can add this parameter to request that Amazon S3 encode the keys in the response.</p>
    ///   - [`key_marker(impl Into<String>)`](crate::client::fluent_builders::ListObjectVersions::key_marker) / [`set_key_marker(Option<String>)`](crate::client::fluent_builders::ListObjectVersions::set_key_marker): <p>Specifies the key to start with when listing objects in a bucket.</p>
    ///   - [`max_keys(i32)`](crate::client::fluent_builders::ListObjectVersions::max_keys) / [`set_max_keys(i32)`](crate::client::fluent_builders::ListObjectVersions::set_max_keys): <p>Sets the maximum number of keys returned in the response. By default the action returns up to 1,000 key names. The response might contain fewer keys but will never contain more. If additional keys satisfy the search criteria, but were not returned because max-keys was exceeded, the response contains <istruncated>   true  </istruncated>. To return the additional keys, see key-marker and version-id-marker.</p>
    ///   - [`prefix(impl Into<String>)`](crate::client::fluent_builders::ListObjectVersions::prefix) / [`set_prefix(Option<String>)`](crate::client::fluent_builders::ListObjectVersions::set_prefix): <p>Use this parameter to select only those keys that begin with the specified prefix. You can use prefixes to separate a bucket into different groupings of keys. (You can think of using prefix to make groups in the same way you'd use a folder in a file system.) You can use prefix with delimiter to roll up numerous objects into a single result under CommonPrefixes. </p>
    ///   - [`version_id_marker(impl Into<String>)`](crate::client::fluent_builders::ListObjectVersions::version_id_marker) / [`set_version_id_marker(Option<String>)`](crate::client::fluent_builders::ListObjectVersions::set_version_id_marker): <p>Specifies the object version you want to start listing from.</p>
    ///   - [`expected_bucket_owner(impl Into<String>)`](crate::client::fluent_builders::ListObjectVersions::expected_bucket_owner) / [`set_expected_bucket_owner(Option<String>)`](crate::client::fluent_builders::ListObjectVersions::set_expected_bucket_owner): <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
    /// - On success, responds with [`ListObjectVersionsOutput`](crate::output::ListObjectVersionsOutput) with field(s):
    ///   - [`is_truncated(bool)`](crate::output::ListObjectVersionsOutput::is_truncated): <p>A flag that indicates whether Amazon S3 returned all of the results that satisfied the search criteria. If your results were truncated, you can make a follow-up paginated request using the NextKeyMarker and NextVersionIdMarker response parameters as a starting place in another request to return the rest of the results.</p>
    ///   - [`key_marker(Option<String>)`](crate::output::ListObjectVersionsOutput::key_marker): <p>Marks the last key returned in a truncated response.</p>
    ///   - [`version_id_marker(Option<String>)`](crate::output::ListObjectVersionsOutput::version_id_marker): <p>Marks the last version of the key returned in a truncated response.</p>
    ///   - [`next_key_marker(Option<String>)`](crate::output::ListObjectVersionsOutput::next_key_marker): <p>When the number of responses exceeds the value of <code>MaxKeys</code>, <code>NextKeyMarker</code> specifies the first key not returned that satisfies the search criteria. Use this value for the key-marker request parameter in a subsequent request.</p>
    ///   - [`next_version_id_marker(Option<String>)`](crate::output::ListObjectVersionsOutput::next_version_id_marker): <p>When the number of responses exceeds the value of <code>MaxKeys</code>, <code>NextVersionIdMarker</code> specifies the first object version not returned that satisfies the search criteria. Use this value for the version-id-marker request parameter in a subsequent request.</p>
    ///   - [`versions(Option<Vec<ObjectVersion>>)`](crate::output::ListObjectVersionsOutput::versions): <p>Container for version information.</p>
    ///   - [`delete_markers(Option<Vec<DeleteMarkerEntry>>)`](crate::output::ListObjectVersionsOutput::delete_markers): <p>Container for an object that is a delete marker.</p>
    ///   - [`name(Option<String>)`](crate::output::ListObjectVersionsOutput::name): <p>The bucket name.</p>
    ///   - [`prefix(Option<String>)`](crate::output::ListObjectVersionsOutput::prefix): <p>Selects objects that start with the value supplied by this parameter.</p>
    ///   - [`delimiter(Option<String>)`](crate::output::ListObjectVersionsOutput::delimiter): <p>The delimiter grouping the included keys. A delimiter is a character that you specify to group keys. All keys that contain the same string between the prefix and the first occurrence of the delimiter are grouped under a single result element in <code>CommonPrefixes</code>. These groups are counted as one result against the max-keys limitation. These keys are not returned elsewhere in the response.</p>
    ///   - [`max_keys(i32)`](crate::output::ListObjectVersionsOutput::max_keys): <p>Specifies the maximum number of objects to return.</p>
    ///   - [`common_prefixes(Option<Vec<CommonPrefix>>)`](crate::output::ListObjectVersionsOutput::common_prefixes): <p>All of the keys rolled up into a common prefix count as a single return when calculating the number of returns.</p>
    ///   - [`encoding_type(Option<EncodingType>)`](crate::output::ListObjectVersionsOutput::encoding_type): <p> Encoding type used by Amazon S3 to encode object key names in the XML response.</p>  <p>If you specify encoding-type request parameter, Amazon S3 includes this element in the response, and returns encoded key name values in the following response elements:</p>  <p> <code>KeyMarker, NextKeyMarker, Prefix, Key</code>, and <code>Delimiter</code>.</p>
    /// - On failure, responds with [`SdkError<ListObjectVersionsError>`](crate::error::ListObjectVersionsError)
    pub fn list_object_versions(&self) -> crate::client::fluent_builders::ListObjectVersions {
        crate::client::fluent_builders::ListObjectVersions::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListParts`](crate::client::fluent_builders::ListParts) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListParts::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`bucket(impl Into<String>)`](crate::client::fluent_builders::ListParts::bucket) / [`set_bucket(Option<String>)`](crate::client::fluent_builders::ListParts::set_bucket): <p>The name of the bucket to which the parts are being uploaded. </p>  <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p>  <p>When using this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <code> <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com</code>. When using this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts bucket ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">Using Amazon S3 on Outposts</a> in the <i>Amazon S3 User Guide</i>.</p>
    ///   - [`key(impl Into<String>)`](crate::client::fluent_builders::ListParts::key) / [`set_key(Option<String>)`](crate::client::fluent_builders::ListParts::set_key): <p>Object key for which the multipart upload was initiated.</p>
    ///   - [`max_parts(i32)`](crate::client::fluent_builders::ListParts::max_parts) / [`set_max_parts(i32)`](crate::client::fluent_builders::ListParts::set_max_parts): <p>Sets the maximum number of parts to return.</p>
    ///   - [`part_number_marker(impl Into<String>)`](crate::client::fluent_builders::ListParts::part_number_marker) / [`set_part_number_marker(Option<String>)`](crate::client::fluent_builders::ListParts::set_part_number_marker): <p>Specifies the part after which listing should begin. Only parts with higher part numbers will be listed.</p>
    ///   - [`upload_id(impl Into<String>)`](crate::client::fluent_builders::ListParts::upload_id) / [`set_upload_id(Option<String>)`](crate::client::fluent_builders::ListParts::set_upload_id): <p>Upload ID identifying the multipart upload whose parts are being listed.</p>
    ///   - [`request_payer(RequestPayer)`](crate::client::fluent_builders::ListParts::request_payer) / [`set_request_payer(Option<RequestPayer>)`](crate::client::fluent_builders::ListParts::set_request_payer): <p>Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from Requester Pays buckets, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html">Downloading Objects in Requester Pays Buckets</a> in the <i>Amazon S3 User Guide</i>.</p>
    ///   - [`expected_bucket_owner(impl Into<String>)`](crate::client::fluent_builders::ListParts::expected_bucket_owner) / [`set_expected_bucket_owner(Option<String>)`](crate::client::fluent_builders::ListParts::set_expected_bucket_owner): <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
    ///   - [`sse_customer_algorithm(impl Into<String>)`](crate::client::fluent_builders::ListParts::sse_customer_algorithm) / [`set_sse_customer_algorithm(Option<String>)`](crate::client::fluent_builders::ListParts::set_sse_customer_algorithm): <p>The server-side encryption (SSE) algorithm used to encrypt the object. This parameter is needed only when the object was created using a checksum algorithm. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerSideEncryptionCustomerKeys.html">Protecting data using SSE-C keys</a> in the <i>Amazon S3 User Guide</i>.</p>
    ///   - [`sse_customer_key(impl Into<String>)`](crate::client::fluent_builders::ListParts::sse_customer_key) / [`set_sse_customer_key(Option<String>)`](crate::client::fluent_builders::ListParts::set_sse_customer_key): <p>The server-side encryption (SSE) customer managed key. This parameter is needed only when the object was created using a checksum algorithm. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerSideEncryptionCustomerKeys.html">Protecting data using SSE-C keys</a> in the <i>Amazon S3 User Guide</i>.</p>
    ///   - [`sse_customer_key_md5(impl Into<String>)`](crate::client::fluent_builders::ListParts::sse_customer_key_md5) / [`set_sse_customer_key_md5(Option<String>)`](crate::client::fluent_builders::ListParts::set_sse_customer_key_md5): <p>The MD5 server-side encryption (SSE) customer managed key. This parameter is needed only when the object was created using a checksum algorithm. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerSideEncryptionCustomerKeys.html">Protecting data using SSE-C keys</a> in the <i>Amazon S3 User Guide</i>.</p>
    /// - On success, responds with [`ListPartsOutput`](crate::output::ListPartsOutput) with field(s):
    ///   - [`abort_date(Option<DateTime>)`](crate::output::ListPartsOutput::abort_date): <p>If the bucket has a lifecycle rule configured with an action to abort incomplete multipart uploads and the prefix in the lifecycle rule matches the object name in the request, then the response includes this header indicating when the initiated multipart upload will become eligible for abort operation. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/mpuoverview.html#mpu-abort-incomplete-mpu-lifecycle-config">Aborting Incomplete Multipart Uploads Using a Bucket Lifecycle Policy</a>.</p>  <p>The response will also include the <code>x-amz-abort-rule-id</code> header that will provide the ID of the lifecycle configuration rule that defines this action.</p>
    ///   - [`abort_rule_id(Option<String>)`](crate::output::ListPartsOutput::abort_rule_id): <p>This header is returned along with the <code>x-amz-abort-date</code> header. It identifies applicable lifecycle configuration rule that defines the action to abort incomplete multipart uploads.</p>
    ///   - [`bucket(Option<String>)`](crate::output::ListPartsOutput::bucket): <p>The name of the bucket to which the multipart upload was initiated. Does not return the access point ARN or access point alias if used.</p>
    ///   - [`key(Option<String>)`](crate::output::ListPartsOutput::key): <p>Object key for which the multipart upload was initiated.</p>
    ///   - [`upload_id(Option<String>)`](crate::output::ListPartsOutput::upload_id): <p>Upload ID identifying the multipart upload whose parts are being listed.</p>
    ///   - [`part_number_marker(Option<String>)`](crate::output::ListPartsOutput::part_number_marker): <p>When a list is truncated, this element specifies the last part in the list, as well as the value to use for the part-number-marker request parameter in a subsequent request.</p>
    ///   - [`next_part_number_marker(Option<String>)`](crate::output::ListPartsOutput::next_part_number_marker): <p>When a list is truncated, this element specifies the last part in the list, as well as the value to use for the part-number-marker request parameter in a subsequent request.</p>
    ///   - [`max_parts(i32)`](crate::output::ListPartsOutput::max_parts): <p>Maximum number of parts that were allowed in the response.</p>
    ///   - [`is_truncated(bool)`](crate::output::ListPartsOutput::is_truncated): <p> Indicates whether the returned list of parts is truncated. A true value indicates that the list was truncated. A list can be truncated if the number of parts exceeds the limit returned in the MaxParts element.</p>
    ///   - [`parts(Option<Vec<Part>>)`](crate::output::ListPartsOutput::parts): <p> Container for elements related to a particular part. A response can contain zero or more <code>Part</code> elements.</p>
    ///   - [`initiator(Option<Initiator>)`](crate::output::ListPartsOutput::initiator): <p>Container element that identifies who initiated the multipart upload. If the initiator is an Amazon Web Services account, this element provides the same information as the <code>Owner</code> element. If the initiator is an IAM User, this element provides the user ARN and display name.</p>
    ///   - [`owner(Option<Owner>)`](crate::output::ListPartsOutput::owner): <p> Container element that identifies the object owner, after the object is created. If multipart upload is initiated by an IAM user, this element provides the parent account ID and display name.</p>
    ///   - [`storage_class(Option<StorageClass>)`](crate::output::ListPartsOutput::storage_class): <p>Class of storage (STANDARD or REDUCED_REDUNDANCY) used to store the uploaded object.</p>
    ///   - [`request_charged(Option<RequestCharged>)`](crate::output::ListPartsOutput::request_charged): <p>If present, indicates that the requester was successfully charged for the request.</p>
    ///   - [`checksum_algorithm(Option<ChecksumAlgorithm>)`](crate::output::ListPartsOutput::checksum_algorithm): <p>The algorithm that was used to create a checksum of the object.</p>
    /// - On failure, responds with [`SdkError<ListPartsError>`](crate::error::ListPartsError)
    pub fn list_parts(&self) -> crate::client::fluent_builders::ListParts {
        crate::client::fluent_builders::ListParts::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`PutBucketAccelerateConfiguration`](crate::client::fluent_builders::PutBucketAccelerateConfiguration) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`bucket(impl Into<String>)`](crate::client::fluent_builders::PutBucketAccelerateConfiguration::bucket) / [`set_bucket(Option<String>)`](crate::client::fluent_builders::PutBucketAccelerateConfiguration::set_bucket): <p>The name of the bucket for which the accelerate configuration is set.</p>
    ///   - [`accelerate_configuration(AccelerateConfiguration)`](crate::client::fluent_builders::PutBucketAccelerateConfiguration::accelerate_configuration) / [`set_accelerate_configuration(Option<AccelerateConfiguration>)`](crate::client::fluent_builders::PutBucketAccelerateConfiguration::set_accelerate_configuration): <p>Container for setting the transfer acceleration state.</p>
    ///   - [`expected_bucket_owner(impl Into<String>)`](crate::client::fluent_builders::PutBucketAccelerateConfiguration::expected_bucket_owner) / [`set_expected_bucket_owner(Option<String>)`](crate::client::fluent_builders::PutBucketAccelerateConfiguration::set_expected_bucket_owner): <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
    ///   - [`checksum_algorithm(ChecksumAlgorithm)`](crate::client::fluent_builders::PutBucketAccelerateConfiguration::checksum_algorithm) / [`set_checksum_algorithm(Option<ChecksumAlgorithm>)`](crate::client::fluent_builders::PutBucketAccelerateConfiguration::set_checksum_algorithm): <p>Indicates the algorithm used to create the checksum for the object when using the SDK. This header will not provide any additional functionality if not using the SDK. When sending this header, there must be a corresponding <code>x-amz-checksum</code> or <code>x-amz-trailer</code> header sent. Otherwise, Amazon S3 fails the request with the HTTP status code <code>400 Bad Request</code>. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>  <p>If you provide an individual checksum, Amazon S3 ignores any provided <code>ChecksumAlgorithm</code> parameter.</p>
    /// - On success, responds with [`PutBucketAccelerateConfigurationOutput`](crate::output::PutBucketAccelerateConfigurationOutput)

    /// - On failure, responds with [`SdkError<PutBucketAccelerateConfigurationError>`](crate::error::PutBucketAccelerateConfigurationError)
    pub fn put_bucket_accelerate_configuration(
        &self,
    ) -> crate::client::fluent_builders::PutBucketAccelerateConfiguration {
        crate::client::fluent_builders::PutBucketAccelerateConfiguration::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`PutBucketAcl`](crate::client::fluent_builders::PutBucketAcl) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`acl(BucketCannedAcl)`](crate::client::fluent_builders::PutBucketAcl::acl) / [`set_acl(Option<BucketCannedAcl>)`](crate::client::fluent_builders::PutBucketAcl::set_acl): <p>The canned ACL to apply to the bucket.</p>
    ///   - [`access_control_policy(AccessControlPolicy)`](crate::client::fluent_builders::PutBucketAcl::access_control_policy) / [`set_access_control_policy(Option<AccessControlPolicy>)`](crate::client::fluent_builders::PutBucketAcl::set_access_control_policy): <p>Contains the elements that set the ACL permissions for an object per grantee.</p>
    ///   - [`bucket(impl Into<String>)`](crate::client::fluent_builders::PutBucketAcl::bucket) / [`set_bucket(Option<String>)`](crate::client::fluent_builders::PutBucketAcl::set_bucket): <p>The bucket to which to apply the ACL.</p>
    ///   - [`content_md5(impl Into<String>)`](crate::client::fluent_builders::PutBucketAcl::content_md5) / [`set_content_md5(Option<String>)`](crate::client::fluent_builders::PutBucketAcl::set_content_md5): <p>The base64-encoded 128-bit MD5 digest of the data. This header must be used as a message integrity check to verify that the request body was not corrupted in transit. For more information, go to <a href="http://www.ietf.org/rfc/rfc1864.txt">RFC 1864.</a> </p>  <p>For requests made using the Amazon Web Services Command Line Interface (CLI) or Amazon Web Services SDKs, this field is calculated automatically.</p>
    ///   - [`checksum_algorithm(ChecksumAlgorithm)`](crate::client::fluent_builders::PutBucketAcl::checksum_algorithm) / [`set_checksum_algorithm(Option<ChecksumAlgorithm>)`](crate::client::fluent_builders::PutBucketAcl::set_checksum_algorithm): <p>Indicates the algorithm used to create the checksum for the object when using the SDK. This header will not provide any additional functionality if not using the SDK. When sending this header, there must be a corresponding <code>x-amz-checksum</code> or <code>x-amz-trailer</code> header sent. Otherwise, Amazon S3 fails the request with the HTTP status code <code>400 Bad Request</code>. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>  <p>If you provide an individual checksum, Amazon S3 ignores any provided <code>ChecksumAlgorithm</code> parameter.</p>
    ///   - [`grant_full_control(impl Into<String>)`](crate::client::fluent_builders::PutBucketAcl::grant_full_control) / [`set_grant_full_control(Option<String>)`](crate::client::fluent_builders::PutBucketAcl::set_grant_full_control): <p>Allows grantee the read, write, read ACP, and write ACP permissions on the bucket.</p>
    ///   - [`grant_read(impl Into<String>)`](crate::client::fluent_builders::PutBucketAcl::grant_read) / [`set_grant_read(Option<String>)`](crate::client::fluent_builders::PutBucketAcl::set_grant_read): <p>Allows grantee to list the objects in the bucket.</p>
    ///   - [`grant_read_acp(impl Into<String>)`](crate::client::fluent_builders::PutBucketAcl::grant_read_acp) / [`set_grant_read_acp(Option<String>)`](crate::client::fluent_builders::PutBucketAcl::set_grant_read_acp): <p>Allows grantee to read the bucket ACL.</p>
    ///   - [`grant_write(impl Into<String>)`](crate::client::fluent_builders::PutBucketAcl::grant_write) / [`set_grant_write(Option<String>)`](crate::client::fluent_builders::PutBucketAcl::set_grant_write): <p>Allows grantee to create new objects in the bucket.</p>  <p>For the bucket and object owners of existing objects, also allows deletions and overwrites of those objects.</p>
    ///   - [`grant_write_acp(impl Into<String>)`](crate::client::fluent_builders::PutBucketAcl::grant_write_acp) / [`set_grant_write_acp(Option<String>)`](crate::client::fluent_builders::PutBucketAcl::set_grant_write_acp): <p>Allows grantee to write the ACL for the applicable bucket.</p>
    ///   - [`expected_bucket_owner(impl Into<String>)`](crate::client::fluent_builders::PutBucketAcl::expected_bucket_owner) / [`set_expected_bucket_owner(Option<String>)`](crate::client::fluent_builders::PutBucketAcl::set_expected_bucket_owner): <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
    /// - On success, responds with [`PutBucketAclOutput`](crate::output::PutBucketAclOutput)

    /// - On failure, responds with [`SdkError<PutBucketAclError>`](crate::error::PutBucketAclError)
    pub fn put_bucket_acl(&self) -> crate::client::fluent_builders::PutBucketAcl {
        crate::client::fluent_builders::PutBucketAcl::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`PutBucketAnalyticsConfiguration`](crate::client::fluent_builders::PutBucketAnalyticsConfiguration) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`bucket(impl Into<String>)`](crate::client::fluent_builders::PutBucketAnalyticsConfiguration::bucket) / [`set_bucket(Option<String>)`](crate::client::fluent_builders::PutBucketAnalyticsConfiguration::set_bucket): <p>The name of the bucket to which an analytics configuration is stored.</p>
    ///   - [`id(impl Into<String>)`](crate::client::fluent_builders::PutBucketAnalyticsConfiguration::id) / [`set_id(Option<String>)`](crate::client::fluent_builders::PutBucketAnalyticsConfiguration::set_id): <p>The ID that identifies the analytics configuration.</p>
    ///   - [`analytics_configuration(AnalyticsConfiguration)`](crate::client::fluent_builders::PutBucketAnalyticsConfiguration::analytics_configuration) / [`set_analytics_configuration(Option<AnalyticsConfiguration>)`](crate::client::fluent_builders::PutBucketAnalyticsConfiguration::set_analytics_configuration): <p>The configuration and any analyses for the analytics filter.</p>
    ///   - [`expected_bucket_owner(impl Into<String>)`](crate::client::fluent_builders::PutBucketAnalyticsConfiguration::expected_bucket_owner) / [`set_expected_bucket_owner(Option<String>)`](crate::client::fluent_builders::PutBucketAnalyticsConfiguration::set_expected_bucket_owner): <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
    /// - On success, responds with [`PutBucketAnalyticsConfigurationOutput`](crate::output::PutBucketAnalyticsConfigurationOutput)

    /// - On failure, responds with [`SdkError<PutBucketAnalyticsConfigurationError>`](crate::error::PutBucketAnalyticsConfigurationError)
    pub fn put_bucket_analytics_configuration(
        &self,
    ) -> crate::client::fluent_builders::PutBucketAnalyticsConfiguration {
        crate::client::fluent_builders::PutBucketAnalyticsConfiguration::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`PutBucketCors`](crate::client::fluent_builders::PutBucketCors) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`bucket(impl Into<String>)`](crate::client::fluent_builders::PutBucketCors::bucket) / [`set_bucket(Option<String>)`](crate::client::fluent_builders::PutBucketCors::set_bucket): <p>Specifies the bucket impacted by the <code>cors</code>configuration.</p>
    ///   - [`cors_configuration(CorsConfiguration)`](crate::client::fluent_builders::PutBucketCors::cors_configuration) / [`set_cors_configuration(Option<CorsConfiguration>)`](crate::client::fluent_builders::PutBucketCors::set_cors_configuration): <p>Describes the cross-origin access configuration for objects in an Amazon S3 bucket. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/cors.html">Enabling Cross-Origin Resource Sharing</a> in the <i>Amazon S3 User Guide</i>.</p>
    ///   - [`content_md5(impl Into<String>)`](crate::client::fluent_builders::PutBucketCors::content_md5) / [`set_content_md5(Option<String>)`](crate::client::fluent_builders::PutBucketCors::set_content_md5): <p>The base64-encoded 128-bit MD5 digest of the data. This header must be used as a message integrity check to verify that the request body was not corrupted in transit. For more information, go to <a href="http://www.ietf.org/rfc/rfc1864.txt">RFC 1864.</a> </p>  <p>For requests made using the Amazon Web Services Command Line Interface (CLI) or Amazon Web Services SDKs, this field is calculated automatically.</p>
    ///   - [`checksum_algorithm(ChecksumAlgorithm)`](crate::client::fluent_builders::PutBucketCors::checksum_algorithm) / [`set_checksum_algorithm(Option<ChecksumAlgorithm>)`](crate::client::fluent_builders::PutBucketCors::set_checksum_algorithm): <p>Indicates the algorithm used to create the checksum for the object when using the SDK. This header will not provide any additional functionality if not using the SDK. When sending this header, there must be a corresponding <code>x-amz-checksum</code> or <code>x-amz-trailer</code> header sent. Otherwise, Amazon S3 fails the request with the HTTP status code <code>400 Bad Request</code>. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>  <p>If you provide an individual checksum, Amazon S3 ignores any provided <code>ChecksumAlgorithm</code> parameter.</p>
    ///   - [`expected_bucket_owner(impl Into<String>)`](crate::client::fluent_builders::PutBucketCors::expected_bucket_owner) / [`set_expected_bucket_owner(Option<String>)`](crate::client::fluent_builders::PutBucketCors::set_expected_bucket_owner): <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
    /// - On success, responds with [`PutBucketCorsOutput`](crate::output::PutBucketCorsOutput)

    /// - On failure, responds with [`SdkError<PutBucketCorsError>`](crate::error::PutBucketCorsError)
    pub fn put_bucket_cors(&self) -> crate::client::fluent_builders::PutBucketCors {
        crate::client::fluent_builders::PutBucketCors::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`PutBucketEncryption`](crate::client::fluent_builders::PutBucketEncryption) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`bucket(impl Into<String>)`](crate::client::fluent_builders::PutBucketEncryption::bucket) / [`set_bucket(Option<String>)`](crate::client::fluent_builders::PutBucketEncryption::set_bucket): <p>Specifies default encryption for a bucket using server-side encryption with Amazon S3-managed keys (SSE-S3) or customer managed keys (SSE-KMS). For information about the Amazon S3 default encryption feature, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-encryption.html">Amazon S3 Default Bucket Encryption</a> in the <i>Amazon S3 User Guide</i>.</p>
    ///   - [`content_md5(impl Into<String>)`](crate::client::fluent_builders::PutBucketEncryption::content_md5) / [`set_content_md5(Option<String>)`](crate::client::fluent_builders::PutBucketEncryption::set_content_md5): <p>The base64-encoded 128-bit MD5 digest of the server-side encryption configuration.</p>  <p>For requests made using the Amazon Web Services Command Line Interface (CLI) or Amazon Web Services SDKs, this field is calculated automatically.</p>
    ///   - [`checksum_algorithm(ChecksumAlgorithm)`](crate::client::fluent_builders::PutBucketEncryption::checksum_algorithm) / [`set_checksum_algorithm(Option<ChecksumAlgorithm>)`](crate::client::fluent_builders::PutBucketEncryption::set_checksum_algorithm): <p>Indicates the algorithm used to create the checksum for the object when using the SDK. This header will not provide any additional functionality if not using the SDK. When sending this header, there must be a corresponding <code>x-amz-checksum</code> or <code>x-amz-trailer</code> header sent. Otherwise, Amazon S3 fails the request with the HTTP status code <code>400 Bad Request</code>. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>  <p>If you provide an individual checksum, Amazon S3 ignores any provided <code>ChecksumAlgorithm</code> parameter.</p>
    ///   - [`server_side_encryption_configuration(ServerSideEncryptionConfiguration)`](crate::client::fluent_builders::PutBucketEncryption::server_side_encryption_configuration) / [`set_server_side_encryption_configuration(Option<ServerSideEncryptionConfiguration>)`](crate::client::fluent_builders::PutBucketEncryption::set_server_side_encryption_configuration): <p>Specifies the default server-side-encryption configuration.</p>
    ///   - [`expected_bucket_owner(impl Into<String>)`](crate::client::fluent_builders::PutBucketEncryption::expected_bucket_owner) / [`set_expected_bucket_owner(Option<String>)`](crate::client::fluent_builders::PutBucketEncryption::set_expected_bucket_owner): <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
    /// - On success, responds with [`PutBucketEncryptionOutput`](crate::output::PutBucketEncryptionOutput)

    /// - On failure, responds with [`SdkError<PutBucketEncryptionError>`](crate::error::PutBucketEncryptionError)
    pub fn put_bucket_encryption(&self) -> crate::client::fluent_builders::PutBucketEncryption {
        crate::client::fluent_builders::PutBucketEncryption::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`PutBucketIntelligentTieringConfiguration`](crate::client::fluent_builders::PutBucketIntelligentTieringConfiguration) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`bucket(impl Into<String>)`](crate::client::fluent_builders::PutBucketIntelligentTieringConfiguration::bucket) / [`set_bucket(Option<String>)`](crate::client::fluent_builders::PutBucketIntelligentTieringConfiguration::set_bucket): <p>The name of the Amazon S3 bucket whose configuration you want to modify or retrieve.</p>
    ///   - [`id(impl Into<String>)`](crate::client::fluent_builders::PutBucketIntelligentTieringConfiguration::id) / [`set_id(Option<String>)`](crate::client::fluent_builders::PutBucketIntelligentTieringConfiguration::set_id): <p>The ID used to identify the S3 Intelligent-Tiering configuration.</p>
    ///   - [`intelligent_tiering_configuration(IntelligentTieringConfiguration)`](crate::client::fluent_builders::PutBucketIntelligentTieringConfiguration::intelligent_tiering_configuration) / [`set_intelligent_tiering_configuration(Option<IntelligentTieringConfiguration>)`](crate::client::fluent_builders::PutBucketIntelligentTieringConfiguration::set_intelligent_tiering_configuration): <p>Container for S3 Intelligent-Tiering configuration.</p>
    /// - On success, responds with [`PutBucketIntelligentTieringConfigurationOutput`](crate::output::PutBucketIntelligentTieringConfigurationOutput)

    /// - On failure, responds with [`SdkError<PutBucketIntelligentTieringConfigurationError>`](crate::error::PutBucketIntelligentTieringConfigurationError)
    pub fn put_bucket_intelligent_tiering_configuration(
        &self,
    ) -> crate::client::fluent_builders::PutBucketIntelligentTieringConfiguration {
        crate::client::fluent_builders::PutBucketIntelligentTieringConfiguration::new(
            self.handle.clone(),
        )
    }
    /// Constructs a fluent builder for the [`PutBucketInventoryConfiguration`](crate::client::fluent_builders::PutBucketInventoryConfiguration) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`bucket(impl Into<String>)`](crate::client::fluent_builders::PutBucketInventoryConfiguration::bucket) / [`set_bucket(Option<String>)`](crate::client::fluent_builders::PutBucketInventoryConfiguration::set_bucket): <p>The name of the bucket where the inventory configuration will be stored.</p>
    ///   - [`id(impl Into<String>)`](crate::client::fluent_builders::PutBucketInventoryConfiguration::id) / [`set_id(Option<String>)`](crate::client::fluent_builders::PutBucketInventoryConfiguration::set_id): <p>The ID used to identify the inventory configuration.</p>
    ///   - [`inventory_configuration(InventoryConfiguration)`](crate::client::fluent_builders::PutBucketInventoryConfiguration::inventory_configuration) / [`set_inventory_configuration(Option<InventoryConfiguration>)`](crate::client::fluent_builders::PutBucketInventoryConfiguration::set_inventory_configuration): <p>Specifies the inventory configuration.</p>
    ///   - [`expected_bucket_owner(impl Into<String>)`](crate::client::fluent_builders::PutBucketInventoryConfiguration::expected_bucket_owner) / [`set_expected_bucket_owner(Option<String>)`](crate::client::fluent_builders::PutBucketInventoryConfiguration::set_expected_bucket_owner): <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
    /// - On success, responds with [`PutBucketInventoryConfigurationOutput`](crate::output::PutBucketInventoryConfigurationOutput)

    /// - On failure, responds with [`SdkError<PutBucketInventoryConfigurationError>`](crate::error::PutBucketInventoryConfigurationError)
    pub fn put_bucket_inventory_configuration(
        &self,
    ) -> crate::client::fluent_builders::PutBucketInventoryConfiguration {
        crate::client::fluent_builders::PutBucketInventoryConfiguration::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`PutBucketLifecycleConfiguration`](crate::client::fluent_builders::PutBucketLifecycleConfiguration) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`bucket(impl Into<String>)`](crate::client::fluent_builders::PutBucketLifecycleConfiguration::bucket) / [`set_bucket(Option<String>)`](crate::client::fluent_builders::PutBucketLifecycleConfiguration::set_bucket): <p>The name of the bucket for which to set the configuration.</p>
    ///   - [`checksum_algorithm(ChecksumAlgorithm)`](crate::client::fluent_builders::PutBucketLifecycleConfiguration::checksum_algorithm) / [`set_checksum_algorithm(Option<ChecksumAlgorithm>)`](crate::client::fluent_builders::PutBucketLifecycleConfiguration::set_checksum_algorithm): <p>Indicates the algorithm used to create the checksum for the object when using the SDK. This header will not provide any additional functionality if not using the SDK. When sending this header, there must be a corresponding <code>x-amz-checksum</code> or <code>x-amz-trailer</code> header sent. Otherwise, Amazon S3 fails the request with the HTTP status code <code>400 Bad Request</code>. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>  <p>If you provide an individual checksum, Amazon S3 ignores any provided <code>ChecksumAlgorithm</code> parameter.</p>
    ///   - [`lifecycle_configuration(BucketLifecycleConfiguration)`](crate::client::fluent_builders::PutBucketLifecycleConfiguration::lifecycle_configuration) / [`set_lifecycle_configuration(Option<BucketLifecycleConfiguration>)`](crate::client::fluent_builders::PutBucketLifecycleConfiguration::set_lifecycle_configuration): <p>Container for lifecycle rules. You can add as many as 1,000 rules.</p>
    ///   - [`expected_bucket_owner(impl Into<String>)`](crate::client::fluent_builders::PutBucketLifecycleConfiguration::expected_bucket_owner) / [`set_expected_bucket_owner(Option<String>)`](crate::client::fluent_builders::PutBucketLifecycleConfiguration::set_expected_bucket_owner): <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
    /// - On success, responds with [`PutBucketLifecycleConfigurationOutput`](crate::output::PutBucketLifecycleConfigurationOutput)

    /// - On failure, responds with [`SdkError<PutBucketLifecycleConfigurationError>`](crate::error::PutBucketLifecycleConfigurationError)
    pub fn put_bucket_lifecycle_configuration(
        &self,
    ) -> crate::client::fluent_builders::PutBucketLifecycleConfiguration {
        crate::client::fluent_builders::PutBucketLifecycleConfiguration::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`PutBucketLogging`](crate::client::fluent_builders::PutBucketLogging) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`bucket(impl Into<String>)`](crate::client::fluent_builders::PutBucketLogging::bucket) / [`set_bucket(Option<String>)`](crate::client::fluent_builders::PutBucketLogging::set_bucket): <p>The name of the bucket for which to set the logging parameters.</p>
    ///   - [`bucket_logging_status(BucketLoggingStatus)`](crate::client::fluent_builders::PutBucketLogging::bucket_logging_status) / [`set_bucket_logging_status(Option<BucketLoggingStatus>)`](crate::client::fluent_builders::PutBucketLogging::set_bucket_logging_status): <p>Container for logging status information.</p>
    ///   - [`content_md5(impl Into<String>)`](crate::client::fluent_builders::PutBucketLogging::content_md5) / [`set_content_md5(Option<String>)`](crate::client::fluent_builders::PutBucketLogging::set_content_md5): <p>The MD5 hash of the <code>PutBucketLogging</code> request body.</p>  <p>For requests made using the Amazon Web Services Command Line Interface (CLI) or Amazon Web Services SDKs, this field is calculated automatically.</p>
    ///   - [`checksum_algorithm(ChecksumAlgorithm)`](crate::client::fluent_builders::PutBucketLogging::checksum_algorithm) / [`set_checksum_algorithm(Option<ChecksumAlgorithm>)`](crate::client::fluent_builders::PutBucketLogging::set_checksum_algorithm): <p>Indicates the algorithm used to create the checksum for the object when using the SDK. This header will not provide any additional functionality if not using the SDK. When sending this header, there must be a corresponding <code>x-amz-checksum</code> or <code>x-amz-trailer</code> header sent. Otherwise, Amazon S3 fails the request with the HTTP status code <code>400 Bad Request</code>. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>  <p>If you provide an individual checksum, Amazon S3 ignores any provided <code>ChecksumAlgorithm</code> parameter.</p>
    ///   - [`expected_bucket_owner(impl Into<String>)`](crate::client::fluent_builders::PutBucketLogging::expected_bucket_owner) / [`set_expected_bucket_owner(Option<String>)`](crate::client::fluent_builders::PutBucketLogging::set_expected_bucket_owner): <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
    /// - On success, responds with [`PutBucketLoggingOutput`](crate::output::PutBucketLoggingOutput)

    /// - On failure, responds with [`SdkError<PutBucketLoggingError>`](crate::error::PutBucketLoggingError)
    pub fn put_bucket_logging(&self) -> crate::client::fluent_builders::PutBucketLogging {
        crate::client::fluent_builders::PutBucketLogging::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`PutBucketMetricsConfiguration`](crate::client::fluent_builders::PutBucketMetricsConfiguration) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`bucket(impl Into<String>)`](crate::client::fluent_builders::PutBucketMetricsConfiguration::bucket) / [`set_bucket(Option<String>)`](crate::client::fluent_builders::PutBucketMetricsConfiguration::set_bucket): <p>The name of the bucket for which the metrics configuration is set.</p>
    ///   - [`id(impl Into<String>)`](crate::client::fluent_builders::PutBucketMetricsConfiguration::id) / [`set_id(Option<String>)`](crate::client::fluent_builders::PutBucketMetricsConfiguration::set_id): <p>The ID used to identify the metrics configuration.</p>
    ///   - [`metrics_configuration(MetricsConfiguration)`](crate::client::fluent_builders::PutBucketMetricsConfiguration::metrics_configuration) / [`set_metrics_configuration(Option<MetricsConfiguration>)`](crate::client::fluent_builders::PutBucketMetricsConfiguration::set_metrics_configuration): <p>Specifies the metrics configuration.</p>
    ///   - [`expected_bucket_owner(impl Into<String>)`](crate::client::fluent_builders::PutBucketMetricsConfiguration::expected_bucket_owner) / [`set_expected_bucket_owner(Option<String>)`](crate::client::fluent_builders::PutBucketMetricsConfiguration::set_expected_bucket_owner): <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
    /// - On success, responds with [`PutBucketMetricsConfigurationOutput`](crate::output::PutBucketMetricsConfigurationOutput)

    /// - On failure, responds with [`SdkError<PutBucketMetricsConfigurationError>`](crate::error::PutBucketMetricsConfigurationError)
    pub fn put_bucket_metrics_configuration(
        &self,
    ) -> crate::client::fluent_builders::PutBucketMetricsConfiguration {
        crate::client::fluent_builders::PutBucketMetricsConfiguration::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`PutBucketNotificationConfiguration`](crate::client::fluent_builders::PutBucketNotificationConfiguration) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`bucket(impl Into<String>)`](crate::client::fluent_builders::PutBucketNotificationConfiguration::bucket) / [`set_bucket(Option<String>)`](crate::client::fluent_builders::PutBucketNotificationConfiguration::set_bucket): <p>The name of the bucket.</p>
    ///   - [`notification_configuration(NotificationConfiguration)`](crate::client::fluent_builders::PutBucketNotificationConfiguration::notification_configuration) / [`set_notification_configuration(Option<NotificationConfiguration>)`](crate::client::fluent_builders::PutBucketNotificationConfiguration::set_notification_configuration): <p>A container for specifying the notification configuration of the bucket. If this element is empty, notifications are turned off for the bucket.</p>
    ///   - [`expected_bucket_owner(impl Into<String>)`](crate::client::fluent_builders::PutBucketNotificationConfiguration::expected_bucket_owner) / [`set_expected_bucket_owner(Option<String>)`](crate::client::fluent_builders::PutBucketNotificationConfiguration::set_expected_bucket_owner): <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
    ///   - [`skip_destination_validation(bool)`](crate::client::fluent_builders::PutBucketNotificationConfiguration::skip_destination_validation) / [`set_skip_destination_validation(bool)`](crate::client::fluent_builders::PutBucketNotificationConfiguration::set_skip_destination_validation): <p>Skips validation of Amazon SQS, Amazon SNS, and Lambda destinations. True or false value.</p>
    /// - On success, responds with [`PutBucketNotificationConfigurationOutput`](crate::output::PutBucketNotificationConfigurationOutput)

    /// - On failure, responds with [`SdkError<PutBucketNotificationConfigurationError>`](crate::error::PutBucketNotificationConfigurationError)
    pub fn put_bucket_notification_configuration(
        &self,
    ) -> crate::client::fluent_builders::PutBucketNotificationConfiguration {
        crate::client::fluent_builders::PutBucketNotificationConfiguration::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`PutBucketOwnershipControls`](crate::client::fluent_builders::PutBucketOwnershipControls) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`bucket(impl Into<String>)`](crate::client::fluent_builders::PutBucketOwnershipControls::bucket) / [`set_bucket(Option<String>)`](crate::client::fluent_builders::PutBucketOwnershipControls::set_bucket): <p>The name of the Amazon S3 bucket whose <code>OwnershipControls</code> you want to set.</p>
    ///   - [`content_md5(impl Into<String>)`](crate::client::fluent_builders::PutBucketOwnershipControls::content_md5) / [`set_content_md5(Option<String>)`](crate::client::fluent_builders::PutBucketOwnershipControls::set_content_md5): <p>The MD5 hash of the <code>OwnershipControls</code> request body. </p>  <p>For requests made using the Amazon Web Services Command Line Interface (CLI) or Amazon Web Services SDKs, this field is calculated automatically.</p>
    ///   - [`expected_bucket_owner(impl Into<String>)`](crate::client::fluent_builders::PutBucketOwnershipControls::expected_bucket_owner) / [`set_expected_bucket_owner(Option<String>)`](crate::client::fluent_builders::PutBucketOwnershipControls::set_expected_bucket_owner): <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
    ///   - [`ownership_controls(OwnershipControls)`](crate::client::fluent_builders::PutBucketOwnershipControls::ownership_controls) / [`set_ownership_controls(Option<OwnershipControls>)`](crate::client::fluent_builders::PutBucketOwnershipControls::set_ownership_controls): <p>The <code>OwnershipControls</code> (BucketOwnerEnforced, BucketOwnerPreferred, or ObjectWriter) that you want to apply to this Amazon S3 bucket.</p>
    /// - On success, responds with [`PutBucketOwnershipControlsOutput`](crate::output::PutBucketOwnershipControlsOutput)

    /// - On failure, responds with [`SdkError<PutBucketOwnershipControlsError>`](crate::error::PutBucketOwnershipControlsError)
    pub fn put_bucket_ownership_controls(
        &self,
    ) -> crate::client::fluent_builders::PutBucketOwnershipControls {
        crate::client::fluent_builders::PutBucketOwnershipControls::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`PutBucketPolicy`](crate::client::fluent_builders::PutBucketPolicy) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`bucket(impl Into<String>)`](crate::client::fluent_builders::PutBucketPolicy::bucket) / [`set_bucket(Option<String>)`](crate::client::fluent_builders::PutBucketPolicy::set_bucket): <p>The name of the bucket.</p>
    ///   - [`content_md5(impl Into<String>)`](crate::client::fluent_builders::PutBucketPolicy::content_md5) / [`set_content_md5(Option<String>)`](crate::client::fluent_builders::PutBucketPolicy::set_content_md5): <p>The MD5 hash of the request body.</p>  <p>For requests made using the Amazon Web Services Command Line Interface (CLI) or Amazon Web Services SDKs, this field is calculated automatically.</p>
    ///   - [`checksum_algorithm(ChecksumAlgorithm)`](crate::client::fluent_builders::PutBucketPolicy::checksum_algorithm) / [`set_checksum_algorithm(Option<ChecksumAlgorithm>)`](crate::client::fluent_builders::PutBucketPolicy::set_checksum_algorithm): <p>Indicates the algorithm used to create the checksum for the object when using the SDK. This header will not provide any additional functionality if not using the SDK. When sending this header, there must be a corresponding <code>x-amz-checksum</code> or <code>x-amz-trailer</code> header sent. Otherwise, Amazon S3 fails the request with the HTTP status code <code>400 Bad Request</code>. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>  <p>If you provide an individual checksum, Amazon S3 ignores any provided <code>ChecksumAlgorithm</code> parameter.</p>
    ///   - [`confirm_remove_self_bucket_access(bool)`](crate::client::fluent_builders::PutBucketPolicy::confirm_remove_self_bucket_access) / [`set_confirm_remove_self_bucket_access(bool)`](crate::client::fluent_builders::PutBucketPolicy::set_confirm_remove_self_bucket_access): <p>Set this parameter to true to confirm that you want to remove your permissions to change this bucket policy in the future.</p>
    ///   - [`policy(impl Into<String>)`](crate::client::fluent_builders::PutBucketPolicy::policy) / [`set_policy(Option<String>)`](crate::client::fluent_builders::PutBucketPolicy::set_policy): <p>The bucket policy as a JSON document.</p>
    ///   - [`expected_bucket_owner(impl Into<String>)`](crate::client::fluent_builders::PutBucketPolicy::expected_bucket_owner) / [`set_expected_bucket_owner(Option<String>)`](crate::client::fluent_builders::PutBucketPolicy::set_expected_bucket_owner): <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
    /// - On success, responds with [`PutBucketPolicyOutput`](crate::output::PutBucketPolicyOutput)

    /// - On failure, responds with [`SdkError<PutBucketPolicyError>`](crate::error::PutBucketPolicyError)
    pub fn put_bucket_policy(&self) -> crate::client::fluent_builders::PutBucketPolicy {
        crate::client::fluent_builders::PutBucketPolicy::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`PutBucketReplication`](crate::client::fluent_builders::PutBucketReplication) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`bucket(impl Into<String>)`](crate::client::fluent_builders::PutBucketReplication::bucket) / [`set_bucket(Option<String>)`](crate::client::fluent_builders::PutBucketReplication::set_bucket): <p>The name of the bucket</p>
    ///   - [`content_md5(impl Into<String>)`](crate::client::fluent_builders::PutBucketReplication::content_md5) / [`set_content_md5(Option<String>)`](crate::client::fluent_builders::PutBucketReplication::set_content_md5): <p>The base64-encoded 128-bit MD5 digest of the data. You must use this header as a message integrity check to verify that the request body was not corrupted in transit. For more information, see <a href="http://www.ietf.org/rfc/rfc1864.txt">RFC 1864</a>.</p>  <p>For requests made using the Amazon Web Services Command Line Interface (CLI) or Amazon Web Services SDKs, this field is calculated automatically.</p>
    ///   - [`checksum_algorithm(ChecksumAlgorithm)`](crate::client::fluent_builders::PutBucketReplication::checksum_algorithm) / [`set_checksum_algorithm(Option<ChecksumAlgorithm>)`](crate::client::fluent_builders::PutBucketReplication::set_checksum_algorithm): <p>Indicates the algorithm used to create the checksum for the object when using the SDK. This header will not provide any additional functionality if not using the SDK. When sending this header, there must be a corresponding <code>x-amz-checksum</code> or <code>x-amz-trailer</code> header sent. Otherwise, Amazon S3 fails the request with the HTTP status code <code>400 Bad Request</code>. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>  <p>If you provide an individual checksum, Amazon S3 ignores any provided <code>ChecksumAlgorithm</code> parameter.</p>
    ///   - [`replication_configuration(ReplicationConfiguration)`](crate::client::fluent_builders::PutBucketReplication::replication_configuration) / [`set_replication_configuration(Option<ReplicationConfiguration>)`](crate::client::fluent_builders::PutBucketReplication::set_replication_configuration): <p>A container for replication rules. You can add up to 1,000 rules. The maximum size of a replication configuration is 2 MB.</p>
    ///   - [`token(impl Into<String>)`](crate::client::fluent_builders::PutBucketReplication::token) / [`set_token(Option<String>)`](crate::client::fluent_builders::PutBucketReplication::set_token): <p>A token to allow Object Lock to be enabled for an existing bucket.</p>
    ///   - [`expected_bucket_owner(impl Into<String>)`](crate::client::fluent_builders::PutBucketReplication::expected_bucket_owner) / [`set_expected_bucket_owner(Option<String>)`](crate::client::fluent_builders::PutBucketReplication::set_expected_bucket_owner): <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
    /// - On success, responds with [`PutBucketReplicationOutput`](crate::output::PutBucketReplicationOutput)

    /// - On failure, responds with [`SdkError<PutBucketReplicationError>`](crate::error::PutBucketReplicationError)
    pub fn put_bucket_replication(&self) -> crate::client::fluent_builders::PutBucketReplication {
        crate::client::fluent_builders::PutBucketReplication::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`PutBucketRequestPayment`](crate::client::fluent_builders::PutBucketRequestPayment) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`bucket(impl Into<String>)`](crate::client::fluent_builders::PutBucketRequestPayment::bucket) / [`set_bucket(Option<String>)`](crate::client::fluent_builders::PutBucketRequestPayment::set_bucket): <p>The bucket name.</p>
    ///   - [`content_md5(impl Into<String>)`](crate::client::fluent_builders::PutBucketRequestPayment::content_md5) / [`set_content_md5(Option<String>)`](crate::client::fluent_builders::PutBucketRequestPayment::set_content_md5): <p>The base64-encoded 128-bit MD5 digest of the data. You must use this header as a message integrity check to verify that the request body was not corrupted in transit. For more information, see <a href="http://www.ietf.org/rfc/rfc1864.txt">RFC 1864</a>.</p>  <p>For requests made using the Amazon Web Services Command Line Interface (CLI) or Amazon Web Services SDKs, this field is calculated automatically.</p>
    ///   - [`checksum_algorithm(ChecksumAlgorithm)`](crate::client::fluent_builders::PutBucketRequestPayment::checksum_algorithm) / [`set_checksum_algorithm(Option<ChecksumAlgorithm>)`](crate::client::fluent_builders::PutBucketRequestPayment::set_checksum_algorithm): <p>Indicates the algorithm used to create the checksum for the object when using the SDK. This header will not provide any additional functionality if not using the SDK. When sending this header, there must be a corresponding <code>x-amz-checksum</code> or <code>x-amz-trailer</code> header sent. Otherwise, Amazon S3 fails the request with the HTTP status code <code>400 Bad Request</code>. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>  <p>If you provide an individual checksum, Amazon S3 ignores any provided <code>ChecksumAlgorithm</code> parameter.</p>
    ///   - [`request_payment_configuration(RequestPaymentConfiguration)`](crate::client::fluent_builders::PutBucketRequestPayment::request_payment_configuration) / [`set_request_payment_configuration(Option<RequestPaymentConfiguration>)`](crate::client::fluent_builders::PutBucketRequestPayment::set_request_payment_configuration): <p>Container for Payer.</p>
    ///   - [`expected_bucket_owner(impl Into<String>)`](crate::client::fluent_builders::PutBucketRequestPayment::expected_bucket_owner) / [`set_expected_bucket_owner(Option<String>)`](crate::client::fluent_builders::PutBucketRequestPayment::set_expected_bucket_owner): <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
    /// - On success, responds with [`PutBucketRequestPaymentOutput`](crate::output::PutBucketRequestPaymentOutput)

    /// - On failure, responds with [`SdkError<PutBucketRequestPaymentError>`](crate::error::PutBucketRequestPaymentError)
    pub fn put_bucket_request_payment(
        &self,
    ) -> crate::client::fluent_builders::PutBucketRequestPayment {
        crate::client::fluent_builders::PutBucketRequestPayment::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`PutBucketTagging`](crate::client::fluent_builders::PutBucketTagging) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`bucket(impl Into<String>)`](crate::client::fluent_builders::PutBucketTagging::bucket) / [`set_bucket(Option<String>)`](crate::client::fluent_builders::PutBucketTagging::set_bucket): <p>The bucket name.</p>
    ///   - [`content_md5(impl Into<String>)`](crate::client::fluent_builders::PutBucketTagging::content_md5) / [`set_content_md5(Option<String>)`](crate::client::fluent_builders::PutBucketTagging::set_content_md5): <p>The base64-encoded 128-bit MD5 digest of the data. You must use this header as a message integrity check to verify that the request body was not corrupted in transit. For more information, see <a href="http://www.ietf.org/rfc/rfc1864.txt">RFC 1864</a>.</p>  <p>For requests made using the Amazon Web Services Command Line Interface (CLI) or Amazon Web Services SDKs, this field is calculated automatically.</p>
    ///   - [`checksum_algorithm(ChecksumAlgorithm)`](crate::client::fluent_builders::PutBucketTagging::checksum_algorithm) / [`set_checksum_algorithm(Option<ChecksumAlgorithm>)`](crate::client::fluent_builders::PutBucketTagging::set_checksum_algorithm): <p>Indicates the algorithm used to create the checksum for the object when using the SDK. This header will not provide any additional functionality if not using the SDK. When sending this header, there must be a corresponding <code>x-amz-checksum</code> or <code>x-amz-trailer</code> header sent. Otherwise, Amazon S3 fails the request with the HTTP status code <code>400 Bad Request</code>. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>  <p>If you provide an individual checksum, Amazon S3 ignores any provided <code>ChecksumAlgorithm</code> parameter.</p>
    ///   - [`tagging(Tagging)`](crate::client::fluent_builders::PutBucketTagging::tagging) / [`set_tagging(Option<Tagging>)`](crate::client::fluent_builders::PutBucketTagging::set_tagging): <p>Container for the <code>TagSet</code> and <code>Tag</code> elements.</p>
    ///   - [`expected_bucket_owner(impl Into<String>)`](crate::client::fluent_builders::PutBucketTagging::expected_bucket_owner) / [`set_expected_bucket_owner(Option<String>)`](crate::client::fluent_builders::PutBucketTagging::set_expected_bucket_owner): <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
    /// - On success, responds with [`PutBucketTaggingOutput`](crate::output::PutBucketTaggingOutput)

    /// - On failure, responds with [`SdkError<PutBucketTaggingError>`](crate::error::PutBucketTaggingError)
    pub fn put_bucket_tagging(&self) -> crate::client::fluent_builders::PutBucketTagging {
        crate::client::fluent_builders::PutBucketTagging::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`PutBucketVersioning`](crate::client::fluent_builders::PutBucketVersioning) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`bucket(impl Into<String>)`](crate::client::fluent_builders::PutBucketVersioning::bucket) / [`set_bucket(Option<String>)`](crate::client::fluent_builders::PutBucketVersioning::set_bucket): <p>The bucket name.</p>
    ///   - [`content_md5(impl Into<String>)`](crate::client::fluent_builders::PutBucketVersioning::content_md5) / [`set_content_md5(Option<String>)`](crate::client::fluent_builders::PutBucketVersioning::set_content_md5): <p>&gt;The base64-encoded 128-bit MD5 digest of the data. You must use this header as a message integrity check to verify that the request body was not corrupted in transit. For more information, see <a href="http://www.ietf.org/rfc/rfc1864.txt">RFC 1864</a>.</p>  <p>For requests made using the Amazon Web Services Command Line Interface (CLI) or Amazon Web Services SDKs, this field is calculated automatically.</p>
    ///   - [`checksum_algorithm(ChecksumAlgorithm)`](crate::client::fluent_builders::PutBucketVersioning::checksum_algorithm) / [`set_checksum_algorithm(Option<ChecksumAlgorithm>)`](crate::client::fluent_builders::PutBucketVersioning::set_checksum_algorithm): <p>Indicates the algorithm used to create the checksum for the object when using the SDK. This header will not provide any additional functionality if not using the SDK. When sending this header, there must be a corresponding <code>x-amz-checksum</code> or <code>x-amz-trailer</code> header sent. Otherwise, Amazon S3 fails the request with the HTTP status code <code>400 Bad Request</code>. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>  <p>If you provide an individual checksum, Amazon S3 ignores any provided <code>ChecksumAlgorithm</code> parameter.</p>
    ///   - [`mfa(impl Into<String>)`](crate::client::fluent_builders::PutBucketVersioning::mfa) / [`set_mfa(Option<String>)`](crate::client::fluent_builders::PutBucketVersioning::set_mfa): <p>The concatenation of the authentication device's serial number, a space, and the value that is displayed on your authentication device.</p>
    ///   - [`versioning_configuration(VersioningConfiguration)`](crate::client::fluent_builders::PutBucketVersioning::versioning_configuration) / [`set_versioning_configuration(Option<VersioningConfiguration>)`](crate::client::fluent_builders::PutBucketVersioning::set_versioning_configuration): <p>Container for setting the versioning state.</p>
    ///   - [`expected_bucket_owner(impl Into<String>)`](crate::client::fluent_builders::PutBucketVersioning::expected_bucket_owner) / [`set_expected_bucket_owner(Option<String>)`](crate::client::fluent_builders::PutBucketVersioning::set_expected_bucket_owner): <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
    /// - On success, responds with [`PutBucketVersioningOutput`](crate::output::PutBucketVersioningOutput)

    /// - On failure, responds with [`SdkError<PutBucketVersioningError>`](crate::error::PutBucketVersioningError)
    pub fn put_bucket_versioning(&self) -> crate::client::fluent_builders::PutBucketVersioning {
        crate::client::fluent_builders::PutBucketVersioning::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`PutBucketWebsite`](crate::client::fluent_builders::PutBucketWebsite) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`bucket(impl Into<String>)`](crate::client::fluent_builders::PutBucketWebsite::bucket) / [`set_bucket(Option<String>)`](crate::client::fluent_builders::PutBucketWebsite::set_bucket): <p>The bucket name.</p>
    ///   - [`content_md5(impl Into<String>)`](crate::client::fluent_builders::PutBucketWebsite::content_md5) / [`set_content_md5(Option<String>)`](crate::client::fluent_builders::PutBucketWebsite::set_content_md5): <p>The base64-encoded 128-bit MD5 digest of the data. You must use this header as a message integrity check to verify that the request body was not corrupted in transit. For more information, see <a href="http://www.ietf.org/rfc/rfc1864.txt">RFC 1864</a>.</p>  <p>For requests made using the Amazon Web Services Command Line Interface (CLI) or Amazon Web Services SDKs, this field is calculated automatically.</p>
    ///   - [`checksum_algorithm(ChecksumAlgorithm)`](crate::client::fluent_builders::PutBucketWebsite::checksum_algorithm) / [`set_checksum_algorithm(Option<ChecksumAlgorithm>)`](crate::client::fluent_builders::PutBucketWebsite::set_checksum_algorithm): <p>Indicates the algorithm used to create the checksum for the object when using the SDK. This header will not provide any additional functionality if not using the SDK. When sending this header, there must be a corresponding <code>x-amz-checksum</code> or <code>x-amz-trailer</code> header sent. Otherwise, Amazon S3 fails the request with the HTTP status code <code>400 Bad Request</code>. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>  <p>If you provide an individual checksum, Amazon S3 ignores any provided <code>ChecksumAlgorithm</code> parameter.</p>
    ///   - [`website_configuration(WebsiteConfiguration)`](crate::client::fluent_builders::PutBucketWebsite::website_configuration) / [`set_website_configuration(Option<WebsiteConfiguration>)`](crate::client::fluent_builders::PutBucketWebsite::set_website_configuration): <p>Container for the request.</p>
    ///   - [`expected_bucket_owner(impl Into<String>)`](crate::client::fluent_builders::PutBucketWebsite::expected_bucket_owner) / [`set_expected_bucket_owner(Option<String>)`](crate::client::fluent_builders::PutBucketWebsite::set_expected_bucket_owner): <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
    /// - On success, responds with [`PutBucketWebsiteOutput`](crate::output::PutBucketWebsiteOutput)

    /// - On failure, responds with [`SdkError<PutBucketWebsiteError>`](crate::error::PutBucketWebsiteError)
    pub fn put_bucket_website(&self) -> crate::client::fluent_builders::PutBucketWebsite {
        crate::client::fluent_builders::PutBucketWebsite::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`PutObject`](crate::client::fluent_builders::PutObject) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`acl(ObjectCannedAcl)`](crate::client::fluent_builders::PutObject::acl) / [`set_acl(Option<ObjectCannedAcl>)`](crate::client::fluent_builders::PutObject::set_acl): <p>The canned ACL to apply to the object. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#CannedACL">Canned ACL</a>.</p>  <p>This action is not supported by Amazon S3 on Outposts.</p>
    ///   - [`body(ByteStream)`](crate::client::fluent_builders::PutObject::body) / [`set_body(ByteStream)`](crate::client::fluent_builders::PutObject::set_body): <p>Object data.</p>
    ///   - [`bucket(impl Into<String>)`](crate::client::fluent_builders::PutObject::bucket) / [`set_bucket(Option<String>)`](crate::client::fluent_builders::PutObject::set_bucket): <p>The bucket name to which the PUT action was initiated. </p>  <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p>  <p>When using this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <code> <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com</code>. When using this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts bucket ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">Using Amazon S3 on Outposts</a> in the <i>Amazon S3 User Guide</i>.</p>
    ///   - [`cache_control(impl Into<String>)`](crate::client::fluent_builders::PutObject::cache_control) / [`set_cache_control(Option<String>)`](crate::client::fluent_builders::PutObject::set_cache_control): <p> Can be used to specify caching behavior along the request/reply chain. For more information, see <a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9">http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9</a>.</p>
    ///   - [`content_disposition(impl Into<String>)`](crate::client::fluent_builders::PutObject::content_disposition) / [`set_content_disposition(Option<String>)`](crate::client::fluent_builders::PutObject::set_content_disposition): <p>Specifies presentational information for the object. For more information, see <a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec19.html#sec19.5.1">http://www.w3.org/Protocols/rfc2616/rfc2616-sec19.html#sec19.5.1</a>.</p>
    ///   - [`content_encoding(impl Into<String>)`](crate::client::fluent_builders::PutObject::content_encoding) / [`set_content_encoding(Option<String>)`](crate::client::fluent_builders::PutObject::set_content_encoding): <p>Specifies what content encodings have been applied to the object and thus what decoding mechanisms must be applied to obtain the media-type referenced by the Content-Type header field. For more information, see <a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.11">http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.11</a>.</p>
    ///   - [`content_language(impl Into<String>)`](crate::client::fluent_builders::PutObject::content_language) / [`set_content_language(Option<String>)`](crate::client::fluent_builders::PutObject::set_content_language): <p>The language the content is in.</p>
    ///   - [`content_length(i64)`](crate::client::fluent_builders::PutObject::content_length) / [`set_content_length(i64)`](crate::client::fluent_builders::PutObject::set_content_length): <p>Size of the body in bytes. This parameter is useful when the size of the body cannot be determined automatically. For more information, see <a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.13">http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.13</a>.</p>
    ///   - [`content_md5(impl Into<String>)`](crate::client::fluent_builders::PutObject::content_md5) / [`set_content_md5(Option<String>)`](crate::client::fluent_builders::PutObject::set_content_md5): <p>The base64-encoded 128-bit MD5 digest of the message (without the headers) according to RFC 1864. This header can be used as a message integrity check to verify that the data is the same data that was originally sent. Although it is optional, we recommend using the Content-MD5 mechanism as an end-to-end integrity check. For more information about REST request authentication, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/RESTAuthentication.html">REST Authentication</a>.</p>
    ///   - [`content_type(impl Into<String>)`](crate::client::fluent_builders::PutObject::content_type) / [`set_content_type(Option<String>)`](crate::client::fluent_builders::PutObject::set_content_type): <p>A standard MIME type describing the format of the contents. For more information, see <a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.17">http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.17</a>.</p>
    ///   - [`checksum_algorithm(ChecksumAlgorithm)`](crate::client::fluent_builders::PutObject::checksum_algorithm) / [`set_checksum_algorithm(Option<ChecksumAlgorithm>)`](crate::client::fluent_builders::PutObject::set_checksum_algorithm): <p>Indicates the algorithm used to create the checksum for the object when using the SDK. This header will not provide any additional functionality if not using the SDK. When sending this header, there must be a corresponding <code>x-amz-checksum</code> or <code>x-amz-trailer</code> header sent. Otherwise, Amazon S3 fails the request with the HTTP status code <code>400 Bad Request</code>. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>  <p>If you provide an individual checksum, Amazon S3 ignores any provided <code>ChecksumAlgorithm</code> parameter.</p>
    ///   - [`checksum_crc32(impl Into<String>)`](crate::client::fluent_builders::PutObject::checksum_crc32) / [`set_checksum_crc32(Option<String>)`](crate::client::fluent_builders::PutObject::set_checksum_crc32): <p>This header can be used as a data integrity check to verify that the data received is the same data that was originally sent. This header specifies the base64-encoded, 32-bit CRC32 checksum of the object. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
    ///   - [`checksum_crc32_c(impl Into<String>)`](crate::client::fluent_builders::PutObject::checksum_crc32_c) / [`set_checksum_crc32_c(Option<String>)`](crate::client::fluent_builders::PutObject::set_checksum_crc32_c): <p>This header can be used as a data integrity check to verify that the data received is the same data that was originally sent. This header specifies the base64-encoded, 32-bit CRC32C checksum of the object. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
    ///   - [`checksum_sha1(impl Into<String>)`](crate::client::fluent_builders::PutObject::checksum_sha1) / [`set_checksum_sha1(Option<String>)`](crate::client::fluent_builders::PutObject::set_checksum_sha1): <p>This header can be used as a data integrity check to verify that the data received is the same data that was originally sent. This header specifies the base64-encoded, 160-bit SHA-1 digest of the object. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
    ///   - [`checksum_sha256(impl Into<String>)`](crate::client::fluent_builders::PutObject::checksum_sha256) / [`set_checksum_sha256(Option<String>)`](crate::client::fluent_builders::PutObject::set_checksum_sha256): <p>This header can be used as a data integrity check to verify that the data received is the same data that was originally sent. This header specifies the base64-encoded, 256-bit SHA-256 digest of the object. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
    ///   - [`expires(DateTime)`](crate::client::fluent_builders::PutObject::expires) / [`set_expires(Option<DateTime>)`](crate::client::fluent_builders::PutObject::set_expires): <p>The date and time at which the object is no longer cacheable. For more information, see <a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.21">http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.21</a>.</p>
    ///   - [`grant_full_control(impl Into<String>)`](crate::client::fluent_builders::PutObject::grant_full_control) / [`set_grant_full_control(Option<String>)`](crate::client::fluent_builders::PutObject::set_grant_full_control): <p>Gives the grantee READ, READ_ACP, and WRITE_ACP permissions on the object.</p>  <p>This action is not supported by Amazon S3 on Outposts.</p>
    ///   - [`grant_read(impl Into<String>)`](crate::client::fluent_builders::PutObject::grant_read) / [`set_grant_read(Option<String>)`](crate::client::fluent_builders::PutObject::set_grant_read): <p>Allows grantee to read the object data and its metadata.</p>  <p>This action is not supported by Amazon S3 on Outposts.</p>
    ///   - [`grant_read_acp(impl Into<String>)`](crate::client::fluent_builders::PutObject::grant_read_acp) / [`set_grant_read_acp(Option<String>)`](crate::client::fluent_builders::PutObject::set_grant_read_acp): <p>Allows grantee to read the object ACL.</p>  <p>This action is not supported by Amazon S3 on Outposts.</p>
    ///   - [`grant_write_acp(impl Into<String>)`](crate::client::fluent_builders::PutObject::grant_write_acp) / [`set_grant_write_acp(Option<String>)`](crate::client::fluent_builders::PutObject::set_grant_write_acp): <p>Allows grantee to write the ACL for the applicable object.</p>  <p>This action is not supported by Amazon S3 on Outposts.</p>
    ///   - [`key(impl Into<String>)`](crate::client::fluent_builders::PutObject::key) / [`set_key(Option<String>)`](crate::client::fluent_builders::PutObject::set_key): <p>Object key for which the PUT action was initiated.</p>
    ///   - [`metadata(HashMap<String, String>)`](crate::client::fluent_builders::PutObject::metadata) / [`set_metadata(Option<HashMap<String, String>>)`](crate::client::fluent_builders::PutObject::set_metadata): <p>A map of metadata to store with the object in S3.</p>
    ///   - [`server_side_encryption(ServerSideEncryption)`](crate::client::fluent_builders::PutObject::server_side_encryption) / [`set_server_side_encryption(Option<ServerSideEncryption>)`](crate::client::fluent_builders::PutObject::set_server_side_encryption): <p>The server-side encryption algorithm used when storing this object in Amazon S3 (for example, AES256, aws:kms).</p>
    ///   - [`storage_class(StorageClass)`](crate::client::fluent_builders::PutObject::storage_class) / [`set_storage_class(Option<StorageClass>)`](crate::client::fluent_builders::PutObject::set_storage_class): <p>By default, Amazon S3 uses the STANDARD Storage Class to store newly created objects. The STANDARD storage class provides high durability and high availability. Depending on performance needs, you can specify a different Storage Class. Amazon S3 on Outposts only uses the OUTPOSTS Storage Class. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-class-intro.html">Storage Classes</a> in the <i>Amazon S3 User Guide</i>.</p>
    ///   - [`website_redirect_location(impl Into<String>)`](crate::client::fluent_builders::PutObject::website_redirect_location) / [`set_website_redirect_location(Option<String>)`](crate::client::fluent_builders::PutObject::set_website_redirect_location): <p>If the bucket is configured as a website, redirects requests for this object to another object in the same bucket or to an external URL. Amazon S3 stores the value of this header in the object metadata. For information about object metadata, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMetadata.html">Object Key and Metadata</a>.</p>  <p>In the following example, the request header sets the redirect to an object (anotherPage.html) in the same bucket:</p>  <p> <code>x-amz-website-redirect-location: /anotherPage.html</code> </p>  <p>In the following example, the request header sets the object redirect to another website:</p>  <p> <code>x-amz-website-redirect-location: http://www.example.com/</code> </p>  <p>For more information about website hosting in Amazon S3, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/WebsiteHosting.html">Hosting Websites on Amazon S3</a> and <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/how-to-page-redirect.html">How to Configure Website Page Redirects</a>. </p>
    ///   - [`sse_customer_algorithm(impl Into<String>)`](crate::client::fluent_builders::PutObject::sse_customer_algorithm) / [`set_sse_customer_algorithm(Option<String>)`](crate::client::fluent_builders::PutObject::set_sse_customer_algorithm): <p>Specifies the algorithm to use to when encrypting the object (for example, AES256).</p>
    ///   - [`sse_customer_key(impl Into<String>)`](crate::client::fluent_builders::PutObject::sse_customer_key) / [`set_sse_customer_key(Option<String>)`](crate::client::fluent_builders::PutObject::set_sse_customer_key): <p>Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This value is used to store the object and then it is discarded; Amazon S3 does not store the encryption key. The key must be appropriate for use with the algorithm specified in the <code>x-amz-server-side-encryption-customer-algorithm</code> header.</p>
    ///   - [`sse_customer_key_md5(impl Into<String>)`](crate::client::fluent_builders::PutObject::sse_customer_key_md5) / [`set_sse_customer_key_md5(Option<String>)`](crate::client::fluent_builders::PutObject::set_sse_customer_key_md5): <p>Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure that the encryption key was transmitted without error.</p>
    ///   - [`ssekms_key_id(impl Into<String>)`](crate::client::fluent_builders::PutObject::ssekms_key_id) / [`set_ssekms_key_id(Option<String>)`](crate::client::fluent_builders::PutObject::set_ssekms_key_id): <p>If <code>x-amz-server-side-encryption</code> is present and has the value of <code>aws:kms</code>, this header specifies the ID of the Amazon Web Services Key Management Service (Amazon Web Services KMS) symmetrical customer managed key that was used for the object. If you specify <code>x-amz-server-side-encryption:aws:kms</code>, but do not provide<code> x-amz-server-side-encryption-aws-kms-key-id</code>, Amazon S3 uses the Amazon Web Services managed key to protect the data. If the KMS key does not exist in the same account issuing the command, you must use the full ARN and not just the ID. </p>
    ///   - [`ssekms_encryption_context(impl Into<String>)`](crate::client::fluent_builders::PutObject::ssekms_encryption_context) / [`set_ssekms_encryption_context(Option<String>)`](crate::client::fluent_builders::PutObject::set_ssekms_encryption_context): <p>Specifies the Amazon Web Services KMS Encryption Context to use for object encryption. The value of this header is a base64-encoded UTF-8 string holding JSON with the encryption context key-value pairs.</p>
    ///   - [`bucket_key_enabled(bool)`](crate::client::fluent_builders::PutObject::bucket_key_enabled) / [`set_bucket_key_enabled(bool)`](crate::client::fluent_builders::PutObject::set_bucket_key_enabled): <p>Specifies whether Amazon S3 should use an S3 Bucket Key for object encryption with server-side encryption using AWS KMS (SSE-KMS). Setting this header to <code>true</code> causes Amazon S3 to use an S3 Bucket Key for object encryption with SSE-KMS.</p>  <p>Specifying this header with a PUT action doesn’t affect bucket-level settings for S3 Bucket Key.</p>
    ///   - [`request_payer(RequestPayer)`](crate::client::fluent_builders::PutObject::request_payer) / [`set_request_payer(Option<RequestPayer>)`](crate::client::fluent_builders::PutObject::set_request_payer): <p>Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from Requester Pays buckets, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html">Downloading Objects in Requester Pays Buckets</a> in the <i>Amazon S3 User Guide</i>.</p>
    ///   - [`tagging(impl Into<String>)`](crate::client::fluent_builders::PutObject::tagging) / [`set_tagging(Option<String>)`](crate::client::fluent_builders::PutObject::set_tagging): <p>The tag-set for the object. The tag-set must be encoded as URL Query parameters. (For example, "Key1=Value1")</p>
    ///   - [`object_lock_mode(ObjectLockMode)`](crate::client::fluent_builders::PutObject::object_lock_mode) / [`set_object_lock_mode(Option<ObjectLockMode>)`](crate::client::fluent_builders::PutObject::set_object_lock_mode): <p>The Object Lock mode that you want to apply to this object.</p>
    ///   - [`object_lock_retain_until_date(DateTime)`](crate::client::fluent_builders::PutObject::object_lock_retain_until_date) / [`set_object_lock_retain_until_date(Option<DateTime>)`](crate::client::fluent_builders::PutObject::set_object_lock_retain_until_date): <p>The date and time when you want this object's Object Lock to expire. Must be formatted as a timestamp parameter.</p>
    ///   - [`object_lock_legal_hold_status(ObjectLockLegalHoldStatus)`](crate::client::fluent_builders::PutObject::object_lock_legal_hold_status) / [`set_object_lock_legal_hold_status(Option<ObjectLockLegalHoldStatus>)`](crate::client::fluent_builders::PutObject::set_object_lock_legal_hold_status): <p>Specifies whether a legal hold will be applied to this object. For more information about S3 Object Lock, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock.html">Object Lock</a>.</p>
    ///   - [`expected_bucket_owner(impl Into<String>)`](crate::client::fluent_builders::PutObject::expected_bucket_owner) / [`set_expected_bucket_owner(Option<String>)`](crate::client::fluent_builders::PutObject::set_expected_bucket_owner): <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
    /// - On success, responds with [`PutObjectOutput`](crate::output::PutObjectOutput) with field(s):
    ///   - [`expiration(Option<String>)`](crate::output::PutObjectOutput::expiration): <p>If the expiration is configured for the object (see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketLifecycleConfiguration.html">PutBucketLifecycleConfiguration</a>), the response includes this header. It includes the <code>expiry-date</code> and <code>rule-id</code> key-value pairs that provide information about object expiration. The value of the <code>rule-id</code> is URL-encoded.</p>
    ///   - [`e_tag(Option<String>)`](crate::output::PutObjectOutput::e_tag): <p>Entity tag for the uploaded object.</p>
    ///   - [`checksum_crc32(Option<String>)`](crate::output::PutObjectOutput::checksum_crc32): <p>The base64-encoded, 32-bit CRC32 checksum of the object. This will only be present if it was uploaded with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated with multipart uploads, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums"> Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
    ///   - [`checksum_crc32_c(Option<String>)`](crate::output::PutObjectOutput::checksum_crc32_c): <p>The base64-encoded, 32-bit CRC32C checksum of the object. This will only be present if it was uploaded with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated with multipart uploads, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums"> Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
    ///   - [`checksum_sha1(Option<String>)`](crate::output::PutObjectOutput::checksum_sha1): <p>The base64-encoded, 160-bit SHA-1 digest of the object. This will only be present if it was uploaded with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated with multipart uploads, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums"> Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
    ///   - [`checksum_sha256(Option<String>)`](crate::output::PutObjectOutput::checksum_sha256): <p>The base64-encoded, 256-bit SHA-256 digest of the object. This will only be present if it was uploaded with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated with multipart uploads, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums"> Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
    ///   - [`server_side_encryption(Option<ServerSideEncryption>)`](crate::output::PutObjectOutput::server_side_encryption): <p>If you specified server-side encryption either with an Amazon Web Services KMS key or Amazon S3-managed encryption key in your PUT request, the response includes this header. It confirms the encryption algorithm that Amazon S3 used to encrypt the object.</p>
    ///   - [`version_id(Option<String>)`](crate::output::PutObjectOutput::version_id): <p>Version of the object.</p>
    ///   - [`sse_customer_algorithm(Option<String>)`](crate::output::PutObjectOutput::sse_customer_algorithm): <p>If server-side encryption with a customer-provided encryption key was requested, the response will include this header confirming the encryption algorithm used.</p>
    ///   - [`sse_customer_key_md5(Option<String>)`](crate::output::PutObjectOutput::sse_customer_key_md5): <p>If server-side encryption with a customer-provided encryption key was requested, the response will include this header to provide round-trip message integrity verification of the customer-provided encryption key.</p>
    ///   - [`ssekms_key_id(Option<String>)`](crate::output::PutObjectOutput::ssekms_key_id): <p>If <code>x-amz-server-side-encryption</code> is present and has the value of <code>aws:kms</code>, this header specifies the ID of the Amazon Web Services Key Management Service (Amazon Web Services KMS) symmetric customer managed key that was used for the object. </p>
    ///   - [`ssekms_encryption_context(Option<String>)`](crate::output::PutObjectOutput::ssekms_encryption_context): <p>If present, specifies the Amazon Web Services KMS Encryption Context to use for object encryption. The value of this header is a base64-encoded UTF-8 string holding JSON with the encryption context key-value pairs.</p>
    ///   - [`bucket_key_enabled(bool)`](crate::output::PutObjectOutput::bucket_key_enabled): <p>Indicates whether the uploaded object uses an S3 Bucket Key for server-side encryption with Amazon Web Services KMS (SSE-KMS).</p>
    ///   - [`request_charged(Option<RequestCharged>)`](crate::output::PutObjectOutput::request_charged): <p>If present, indicates that the requester was successfully charged for the request.</p>
    /// - On failure, responds with [`SdkError<PutObjectError>`](crate::error::PutObjectError)
    pub fn put_object(&self) -> crate::client::fluent_builders::PutObject {
        crate::client::fluent_builders::PutObject::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`PutObjectAcl`](crate::client::fluent_builders::PutObjectAcl) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`acl(ObjectCannedAcl)`](crate::client::fluent_builders::PutObjectAcl::acl) / [`set_acl(Option<ObjectCannedAcl>)`](crate::client::fluent_builders::PutObjectAcl::set_acl): <p>The canned ACL to apply to the object. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#CannedACL">Canned ACL</a>.</p>
    ///   - [`access_control_policy(AccessControlPolicy)`](crate::client::fluent_builders::PutObjectAcl::access_control_policy) / [`set_access_control_policy(Option<AccessControlPolicy>)`](crate::client::fluent_builders::PutObjectAcl::set_access_control_policy): <p>Contains the elements that set the ACL permissions for an object per grantee.</p>
    ///   - [`bucket(impl Into<String>)`](crate::client::fluent_builders::PutObjectAcl::bucket) / [`set_bucket(Option<String>)`](crate::client::fluent_builders::PutObjectAcl::set_bucket): <p>The bucket name that contains the object to which you want to attach the ACL. </p>  <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p>
    ///   - [`content_md5(impl Into<String>)`](crate::client::fluent_builders::PutObjectAcl::content_md5) / [`set_content_md5(Option<String>)`](crate::client::fluent_builders::PutObjectAcl::set_content_md5): <p>The base64-encoded 128-bit MD5 digest of the data. This header must be used as a message integrity check to verify that the request body was not corrupted in transit. For more information, go to <a href="http://www.ietf.org/rfc/rfc1864.txt">RFC 1864.&gt;</a> </p>  <p>For requests made using the Amazon Web Services Command Line Interface (CLI) or Amazon Web Services SDKs, this field is calculated automatically.</p>
    ///   - [`checksum_algorithm(ChecksumAlgorithm)`](crate::client::fluent_builders::PutObjectAcl::checksum_algorithm) / [`set_checksum_algorithm(Option<ChecksumAlgorithm>)`](crate::client::fluent_builders::PutObjectAcl::set_checksum_algorithm): <p>Indicates the algorithm used to create the checksum for the object when using the SDK. This header will not provide any additional functionality if not using the SDK. When sending this header, there must be a corresponding <code>x-amz-checksum</code> or <code>x-amz-trailer</code> header sent. Otherwise, Amazon S3 fails the request with the HTTP status code <code>400 Bad Request</code>. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>  <p>If you provide an individual checksum, Amazon S3 ignores any provided <code>ChecksumAlgorithm</code> parameter.</p>
    ///   - [`grant_full_control(impl Into<String>)`](crate::client::fluent_builders::PutObjectAcl::grant_full_control) / [`set_grant_full_control(Option<String>)`](crate::client::fluent_builders::PutObjectAcl::set_grant_full_control): <p>Allows grantee the read, write, read ACP, and write ACP permissions on the bucket.</p>  <p>This action is not supported by Amazon S3 on Outposts.</p>
    ///   - [`grant_read(impl Into<String>)`](crate::client::fluent_builders::PutObjectAcl::grant_read) / [`set_grant_read(Option<String>)`](crate::client::fluent_builders::PutObjectAcl::set_grant_read): <p>Allows grantee to list the objects in the bucket.</p>  <p>This action is not supported by Amazon S3 on Outposts.</p>
    ///   - [`grant_read_acp(impl Into<String>)`](crate::client::fluent_builders::PutObjectAcl::grant_read_acp) / [`set_grant_read_acp(Option<String>)`](crate::client::fluent_builders::PutObjectAcl::set_grant_read_acp): <p>Allows grantee to read the bucket ACL.</p>  <p>This action is not supported by Amazon S3 on Outposts.</p>
    ///   - [`grant_write(impl Into<String>)`](crate::client::fluent_builders::PutObjectAcl::grant_write) / [`set_grant_write(Option<String>)`](crate::client::fluent_builders::PutObjectAcl::set_grant_write): <p>Allows grantee to create new objects in the bucket.</p>  <p>For the bucket and object owners of existing objects, also allows deletions and overwrites of those objects.</p>
    ///   - [`grant_write_acp(impl Into<String>)`](crate::client::fluent_builders::PutObjectAcl::grant_write_acp) / [`set_grant_write_acp(Option<String>)`](crate::client::fluent_builders::PutObjectAcl::set_grant_write_acp): <p>Allows grantee to write the ACL for the applicable bucket.</p>  <p>This action is not supported by Amazon S3 on Outposts.</p>
    ///   - [`key(impl Into<String>)`](crate::client::fluent_builders::PutObjectAcl::key) / [`set_key(Option<String>)`](crate::client::fluent_builders::PutObjectAcl::set_key): <p>Key for which the PUT action was initiated.</p>  <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p>  <p>When using this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <code> <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com</code>. When using this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts bucket ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">Using Amazon S3 on Outposts</a> in the <i>Amazon S3 User Guide</i>.</p>
    ///   - [`request_payer(RequestPayer)`](crate::client::fluent_builders::PutObjectAcl::request_payer) / [`set_request_payer(Option<RequestPayer>)`](crate::client::fluent_builders::PutObjectAcl::set_request_payer): <p>Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from Requester Pays buckets, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html">Downloading Objects in Requester Pays Buckets</a> in the <i>Amazon S3 User Guide</i>.</p>
    ///   - [`version_id(impl Into<String>)`](crate::client::fluent_builders::PutObjectAcl::version_id) / [`set_version_id(Option<String>)`](crate::client::fluent_builders::PutObjectAcl::set_version_id): <p>VersionId used to reference a specific version of the object.</p>
    ///   - [`expected_bucket_owner(impl Into<String>)`](crate::client::fluent_builders::PutObjectAcl::expected_bucket_owner) / [`set_expected_bucket_owner(Option<String>)`](crate::client::fluent_builders::PutObjectAcl::set_expected_bucket_owner): <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
    /// - On success, responds with [`PutObjectAclOutput`](crate::output::PutObjectAclOutput) with field(s):
    ///   - [`request_charged(Option<RequestCharged>)`](crate::output::PutObjectAclOutput::request_charged): <p>If present, indicates that the requester was successfully charged for the request.</p>
    /// - On failure, responds with [`SdkError<PutObjectAclError>`](crate::error::PutObjectAclError)
    pub fn put_object_acl(&self) -> crate::client::fluent_builders::PutObjectAcl {
        crate::client::fluent_builders::PutObjectAcl::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`PutObjectLegalHold`](crate::client::fluent_builders::PutObjectLegalHold) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`bucket(impl Into<String>)`](crate::client::fluent_builders::PutObjectLegalHold::bucket) / [`set_bucket(Option<String>)`](crate::client::fluent_builders::PutObjectLegalHold::set_bucket): <p>The bucket name containing the object that you want to place a legal hold on. </p>  <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p>
    ///   - [`key(impl Into<String>)`](crate::client::fluent_builders::PutObjectLegalHold::key) / [`set_key(Option<String>)`](crate::client::fluent_builders::PutObjectLegalHold::set_key): <p>The key name for the object that you want to place a legal hold on.</p>
    ///   - [`legal_hold(ObjectLockLegalHold)`](crate::client::fluent_builders::PutObjectLegalHold::legal_hold) / [`set_legal_hold(Option<ObjectLockLegalHold>)`](crate::client::fluent_builders::PutObjectLegalHold::set_legal_hold): <p>Container element for the legal hold configuration you want to apply to the specified object.</p>
    ///   - [`request_payer(RequestPayer)`](crate::client::fluent_builders::PutObjectLegalHold::request_payer) / [`set_request_payer(Option<RequestPayer>)`](crate::client::fluent_builders::PutObjectLegalHold::set_request_payer): <p>Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from Requester Pays buckets, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html">Downloading Objects in Requester Pays Buckets</a> in the <i>Amazon S3 User Guide</i>.</p>
    ///   - [`version_id(impl Into<String>)`](crate::client::fluent_builders::PutObjectLegalHold::version_id) / [`set_version_id(Option<String>)`](crate::client::fluent_builders::PutObjectLegalHold::set_version_id): <p>The version ID of the object that you want to place a legal hold on.</p>
    ///   - [`content_md5(impl Into<String>)`](crate::client::fluent_builders::PutObjectLegalHold::content_md5) / [`set_content_md5(Option<String>)`](crate::client::fluent_builders::PutObjectLegalHold::set_content_md5): <p>The MD5 hash for the request body.</p>  <p>For requests made using the Amazon Web Services Command Line Interface (CLI) or Amazon Web Services SDKs, this field is calculated automatically.</p>
    ///   - [`checksum_algorithm(ChecksumAlgorithm)`](crate::client::fluent_builders::PutObjectLegalHold::checksum_algorithm) / [`set_checksum_algorithm(Option<ChecksumAlgorithm>)`](crate::client::fluent_builders::PutObjectLegalHold::set_checksum_algorithm): <p>Indicates the algorithm used to create the checksum for the object when using the SDK. This header will not provide any additional functionality if not using the SDK. When sending this header, there must be a corresponding <code>x-amz-checksum</code> or <code>x-amz-trailer</code> header sent. Otherwise, Amazon S3 fails the request with the HTTP status code <code>400 Bad Request</code>. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>  <p>If you provide an individual checksum, Amazon S3 ignores any provided <code>ChecksumAlgorithm</code> parameter.</p>
    ///   - [`expected_bucket_owner(impl Into<String>)`](crate::client::fluent_builders::PutObjectLegalHold::expected_bucket_owner) / [`set_expected_bucket_owner(Option<String>)`](crate::client::fluent_builders::PutObjectLegalHold::set_expected_bucket_owner): <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
    /// - On success, responds with [`PutObjectLegalHoldOutput`](crate::output::PutObjectLegalHoldOutput) with field(s):
    ///   - [`request_charged(Option<RequestCharged>)`](crate::output::PutObjectLegalHoldOutput::request_charged): <p>If present, indicates that the requester was successfully charged for the request.</p>
    /// - On failure, responds with [`SdkError<PutObjectLegalHoldError>`](crate::error::PutObjectLegalHoldError)
    pub fn put_object_legal_hold(&self) -> crate::client::fluent_builders::PutObjectLegalHold {
        crate::client::fluent_builders::PutObjectLegalHold::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`PutObjectLockConfiguration`](crate::client::fluent_builders::PutObjectLockConfiguration) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`bucket(impl Into<String>)`](crate::client::fluent_builders::PutObjectLockConfiguration::bucket) / [`set_bucket(Option<String>)`](crate::client::fluent_builders::PutObjectLockConfiguration::set_bucket): <p>The bucket whose Object Lock configuration you want to create or replace.</p>
    ///   - [`object_lock_configuration(ObjectLockConfiguration)`](crate::client::fluent_builders::PutObjectLockConfiguration::object_lock_configuration) / [`set_object_lock_configuration(Option<ObjectLockConfiguration>)`](crate::client::fluent_builders::PutObjectLockConfiguration::set_object_lock_configuration): <p>The Object Lock configuration that you want to apply to the specified bucket.</p>
    ///   - [`request_payer(RequestPayer)`](crate::client::fluent_builders::PutObjectLockConfiguration::request_payer) / [`set_request_payer(Option<RequestPayer>)`](crate::client::fluent_builders::PutObjectLockConfiguration::set_request_payer): <p>Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from Requester Pays buckets, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html">Downloading Objects in Requester Pays Buckets</a> in the <i>Amazon S3 User Guide</i>.</p>
    ///   - [`token(impl Into<String>)`](crate::client::fluent_builders::PutObjectLockConfiguration::token) / [`set_token(Option<String>)`](crate::client::fluent_builders::PutObjectLockConfiguration::set_token): <p>A token to allow Object Lock to be enabled for an existing bucket.</p>
    ///   - [`content_md5(impl Into<String>)`](crate::client::fluent_builders::PutObjectLockConfiguration::content_md5) / [`set_content_md5(Option<String>)`](crate::client::fluent_builders::PutObjectLockConfiguration::set_content_md5): <p>The MD5 hash for the request body.</p>  <p>For requests made using the Amazon Web Services Command Line Interface (CLI) or Amazon Web Services SDKs, this field is calculated automatically.</p>
    ///   - [`checksum_algorithm(ChecksumAlgorithm)`](crate::client::fluent_builders::PutObjectLockConfiguration::checksum_algorithm) / [`set_checksum_algorithm(Option<ChecksumAlgorithm>)`](crate::client::fluent_builders::PutObjectLockConfiguration::set_checksum_algorithm): <p>Indicates the algorithm used to create the checksum for the object when using the SDK. This header will not provide any additional functionality if not using the SDK. When sending this header, there must be a corresponding <code>x-amz-checksum</code> or <code>x-amz-trailer</code> header sent. Otherwise, Amazon S3 fails the request with the HTTP status code <code>400 Bad Request</code>. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>  <p>If you provide an individual checksum, Amazon S3 ignores any provided <code>ChecksumAlgorithm</code> parameter.</p>
    ///   - [`expected_bucket_owner(impl Into<String>)`](crate::client::fluent_builders::PutObjectLockConfiguration::expected_bucket_owner) / [`set_expected_bucket_owner(Option<String>)`](crate::client::fluent_builders::PutObjectLockConfiguration::set_expected_bucket_owner): <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
    /// - On success, responds with [`PutObjectLockConfigurationOutput`](crate::output::PutObjectLockConfigurationOutput) with field(s):
    ///   - [`request_charged(Option<RequestCharged>)`](crate::output::PutObjectLockConfigurationOutput::request_charged): <p>If present, indicates that the requester was successfully charged for the request.</p>
    /// - On failure, responds with [`SdkError<PutObjectLockConfigurationError>`](crate::error::PutObjectLockConfigurationError)
    pub fn put_object_lock_configuration(
        &self,
    ) -> crate::client::fluent_builders::PutObjectLockConfiguration {
        crate::client::fluent_builders::PutObjectLockConfiguration::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`PutObjectRetention`](crate::client::fluent_builders::PutObjectRetention) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`bucket(impl Into<String>)`](crate::client::fluent_builders::PutObjectRetention::bucket) / [`set_bucket(Option<String>)`](crate::client::fluent_builders::PutObjectRetention::set_bucket): <p>The bucket name that contains the object you want to apply this Object Retention configuration to. </p>  <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p>
    ///   - [`key(impl Into<String>)`](crate::client::fluent_builders::PutObjectRetention::key) / [`set_key(Option<String>)`](crate::client::fluent_builders::PutObjectRetention::set_key): <p>The key name for the object that you want to apply this Object Retention configuration to.</p>
    ///   - [`retention(ObjectLockRetention)`](crate::client::fluent_builders::PutObjectRetention::retention) / [`set_retention(Option<ObjectLockRetention>)`](crate::client::fluent_builders::PutObjectRetention::set_retention): <p>The container element for the Object Retention configuration.</p>
    ///   - [`request_payer(RequestPayer)`](crate::client::fluent_builders::PutObjectRetention::request_payer) / [`set_request_payer(Option<RequestPayer>)`](crate::client::fluent_builders::PutObjectRetention::set_request_payer): <p>Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from Requester Pays buckets, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html">Downloading Objects in Requester Pays Buckets</a> in the <i>Amazon S3 User Guide</i>.</p>
    ///   - [`version_id(impl Into<String>)`](crate::client::fluent_builders::PutObjectRetention::version_id) / [`set_version_id(Option<String>)`](crate::client::fluent_builders::PutObjectRetention::set_version_id): <p>The version ID for the object that you want to apply this Object Retention configuration to.</p>
    ///   - [`bypass_governance_retention(bool)`](crate::client::fluent_builders::PutObjectRetention::bypass_governance_retention) / [`set_bypass_governance_retention(bool)`](crate::client::fluent_builders::PutObjectRetention::set_bypass_governance_retention): <p>Indicates whether this action should bypass Governance-mode restrictions.</p>
    ///   - [`content_md5(impl Into<String>)`](crate::client::fluent_builders::PutObjectRetention::content_md5) / [`set_content_md5(Option<String>)`](crate::client::fluent_builders::PutObjectRetention::set_content_md5): <p>The MD5 hash for the request body.</p>  <p>For requests made using the Amazon Web Services Command Line Interface (CLI) or Amazon Web Services SDKs, this field is calculated automatically.</p>
    ///   - [`checksum_algorithm(ChecksumAlgorithm)`](crate::client::fluent_builders::PutObjectRetention::checksum_algorithm) / [`set_checksum_algorithm(Option<ChecksumAlgorithm>)`](crate::client::fluent_builders::PutObjectRetention::set_checksum_algorithm): <p>Indicates the algorithm used to create the checksum for the object when using the SDK. This header will not provide any additional functionality if not using the SDK. When sending this header, there must be a corresponding <code>x-amz-checksum</code> or <code>x-amz-trailer</code> header sent. Otherwise, Amazon S3 fails the request with the HTTP status code <code>400 Bad Request</code>. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>  <p>If you provide an individual checksum, Amazon S3 ignores any provided <code>ChecksumAlgorithm</code> parameter.</p>
    ///   - [`expected_bucket_owner(impl Into<String>)`](crate::client::fluent_builders::PutObjectRetention::expected_bucket_owner) / [`set_expected_bucket_owner(Option<String>)`](crate::client::fluent_builders::PutObjectRetention::set_expected_bucket_owner): <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
    /// - On success, responds with [`PutObjectRetentionOutput`](crate::output::PutObjectRetentionOutput) with field(s):
    ///   - [`request_charged(Option<RequestCharged>)`](crate::output::PutObjectRetentionOutput::request_charged): <p>If present, indicates that the requester was successfully charged for the request.</p>
    /// - On failure, responds with [`SdkError<PutObjectRetentionError>`](crate::error::PutObjectRetentionError)
    pub fn put_object_retention(&self) -> crate::client::fluent_builders::PutObjectRetention {
        crate::client::fluent_builders::PutObjectRetention::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`PutObjectTagging`](crate::client::fluent_builders::PutObjectTagging) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`bucket(impl Into<String>)`](crate::client::fluent_builders::PutObjectTagging::bucket) / [`set_bucket(Option<String>)`](crate::client::fluent_builders::PutObjectTagging::set_bucket): <p>The bucket name containing the object. </p>  <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p>  <p>When using this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <code> <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com</code>. When using this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts bucket ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">Using Amazon S3 on Outposts</a> in the <i>Amazon S3 User Guide</i>.</p>
    ///   - [`key(impl Into<String>)`](crate::client::fluent_builders::PutObjectTagging::key) / [`set_key(Option<String>)`](crate::client::fluent_builders::PutObjectTagging::set_key): <p>Name of the object key.</p>
    ///   - [`version_id(impl Into<String>)`](crate::client::fluent_builders::PutObjectTagging::version_id) / [`set_version_id(Option<String>)`](crate::client::fluent_builders::PutObjectTagging::set_version_id): <p>The versionId of the object that the tag-set will be added to.</p>
    ///   - [`content_md5(impl Into<String>)`](crate::client::fluent_builders::PutObjectTagging::content_md5) / [`set_content_md5(Option<String>)`](crate::client::fluent_builders::PutObjectTagging::set_content_md5): <p>The MD5 hash for the request body.</p>  <p>For requests made using the Amazon Web Services Command Line Interface (CLI) or Amazon Web Services SDKs, this field is calculated automatically.</p>
    ///   - [`checksum_algorithm(ChecksumAlgorithm)`](crate::client::fluent_builders::PutObjectTagging::checksum_algorithm) / [`set_checksum_algorithm(Option<ChecksumAlgorithm>)`](crate::client::fluent_builders::PutObjectTagging::set_checksum_algorithm): <p>Indicates the algorithm used to create the checksum for the object when using the SDK. This header will not provide any additional functionality if not using the SDK. When sending this header, there must be a corresponding <code>x-amz-checksum</code> or <code>x-amz-trailer</code> header sent. Otherwise, Amazon S3 fails the request with the HTTP status code <code>400 Bad Request</code>. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>  <p>If you provide an individual checksum, Amazon S3 ignores any provided <code>ChecksumAlgorithm</code> parameter.</p>
    ///   - [`tagging(Tagging)`](crate::client::fluent_builders::PutObjectTagging::tagging) / [`set_tagging(Option<Tagging>)`](crate::client::fluent_builders::PutObjectTagging::set_tagging): <p>Container for the <code>TagSet</code> and <code>Tag</code> elements</p>
    ///   - [`expected_bucket_owner(impl Into<String>)`](crate::client::fluent_builders::PutObjectTagging::expected_bucket_owner) / [`set_expected_bucket_owner(Option<String>)`](crate::client::fluent_builders::PutObjectTagging::set_expected_bucket_owner): <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
    ///   - [`request_payer(RequestPayer)`](crate::client::fluent_builders::PutObjectTagging::request_payer) / [`set_request_payer(Option<RequestPayer>)`](crate::client::fluent_builders::PutObjectTagging::set_request_payer): <p>Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from Requester Pays buckets, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html">Downloading Objects in Requester Pays Buckets</a> in the <i>Amazon S3 User Guide</i>.</p>
    /// - On success, responds with [`PutObjectTaggingOutput`](crate::output::PutObjectTaggingOutput) with field(s):
    ///   - [`version_id(Option<String>)`](crate::output::PutObjectTaggingOutput::version_id): <p>The versionId of the object the tag-set was added to.</p>
    /// - On failure, responds with [`SdkError<PutObjectTaggingError>`](crate::error::PutObjectTaggingError)
    pub fn put_object_tagging(&self) -> crate::client::fluent_builders::PutObjectTagging {
        crate::client::fluent_builders::PutObjectTagging::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`PutPublicAccessBlock`](crate::client::fluent_builders::PutPublicAccessBlock) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`bucket(impl Into<String>)`](crate::client::fluent_builders::PutPublicAccessBlock::bucket) / [`set_bucket(Option<String>)`](crate::client::fluent_builders::PutPublicAccessBlock::set_bucket): <p>The name of the Amazon S3 bucket whose <code>PublicAccessBlock</code> configuration you want to set.</p>
    ///   - [`content_md5(impl Into<String>)`](crate::client::fluent_builders::PutPublicAccessBlock::content_md5) / [`set_content_md5(Option<String>)`](crate::client::fluent_builders::PutPublicAccessBlock::set_content_md5): <p>The MD5 hash of the <code>PutPublicAccessBlock</code> request body. </p>  <p>For requests made using the Amazon Web Services Command Line Interface (CLI) or Amazon Web Services SDKs, this field is calculated automatically.</p>
    ///   - [`checksum_algorithm(ChecksumAlgorithm)`](crate::client::fluent_builders::PutPublicAccessBlock::checksum_algorithm) / [`set_checksum_algorithm(Option<ChecksumAlgorithm>)`](crate::client::fluent_builders::PutPublicAccessBlock::set_checksum_algorithm): <p>Indicates the algorithm used to create the checksum for the object when using the SDK. This header will not provide any additional functionality if not using the SDK. When sending this header, there must be a corresponding <code>x-amz-checksum</code> or <code>x-amz-trailer</code> header sent. Otherwise, Amazon S3 fails the request with the HTTP status code <code>400 Bad Request</code>. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>  <p>If you provide an individual checksum, Amazon S3 ignores any provided <code>ChecksumAlgorithm</code> parameter.</p>
    ///   - [`public_access_block_configuration(PublicAccessBlockConfiguration)`](crate::client::fluent_builders::PutPublicAccessBlock::public_access_block_configuration) / [`set_public_access_block_configuration(Option<PublicAccessBlockConfiguration>)`](crate::client::fluent_builders::PutPublicAccessBlock::set_public_access_block_configuration): <p>The <code>PublicAccessBlock</code> configuration that you want to apply to this Amazon S3 bucket. You can enable the configuration options in any combination. For more information about when Amazon S3 considers a bucket or object public, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html#access-control-block-public-access-policy-status">The Meaning of "Public"</a> in the <i>Amazon S3 User Guide</i>.</p>
    ///   - [`expected_bucket_owner(impl Into<String>)`](crate::client::fluent_builders::PutPublicAccessBlock::expected_bucket_owner) / [`set_expected_bucket_owner(Option<String>)`](crate::client::fluent_builders::PutPublicAccessBlock::set_expected_bucket_owner): <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
    /// - On success, responds with [`PutPublicAccessBlockOutput`](crate::output::PutPublicAccessBlockOutput)

    /// - On failure, responds with [`SdkError<PutPublicAccessBlockError>`](crate::error::PutPublicAccessBlockError)
    pub fn put_public_access_block(&self) -> crate::client::fluent_builders::PutPublicAccessBlock {
        crate::client::fluent_builders::PutPublicAccessBlock::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`RestoreObject`](crate::client::fluent_builders::RestoreObject) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`bucket(impl Into<String>)`](crate::client::fluent_builders::RestoreObject::bucket) / [`set_bucket(Option<String>)`](crate::client::fluent_builders::RestoreObject::set_bucket): <p>The bucket name containing the object to restore. </p>  <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p>  <p>When using this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <code> <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com</code>. When using this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts bucket ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">Using Amazon S3 on Outposts</a> in the <i>Amazon S3 User Guide</i>.</p>
    ///   - [`key(impl Into<String>)`](crate::client::fluent_builders::RestoreObject::key) / [`set_key(Option<String>)`](crate::client::fluent_builders::RestoreObject::set_key): <p>Object key for which the action was initiated.</p>
    ///   - [`version_id(impl Into<String>)`](crate::client::fluent_builders::RestoreObject::version_id) / [`set_version_id(Option<String>)`](crate::client::fluent_builders::RestoreObject::set_version_id): <p>VersionId used to reference a specific version of the object.</p>
    ///   - [`restore_request(RestoreRequest)`](crate::client::fluent_builders::RestoreObject::restore_request) / [`set_restore_request(Option<RestoreRequest>)`](crate::client::fluent_builders::RestoreObject::set_restore_request): <p>Container for restore job parameters.</p>
    ///   - [`request_payer(RequestPayer)`](crate::client::fluent_builders::RestoreObject::request_payer) / [`set_request_payer(Option<RequestPayer>)`](crate::client::fluent_builders::RestoreObject::set_request_payer): <p>Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from Requester Pays buckets, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html">Downloading Objects in Requester Pays Buckets</a> in the <i>Amazon S3 User Guide</i>.</p>
    ///   - [`checksum_algorithm(ChecksumAlgorithm)`](crate::client::fluent_builders::RestoreObject::checksum_algorithm) / [`set_checksum_algorithm(Option<ChecksumAlgorithm>)`](crate::client::fluent_builders::RestoreObject::set_checksum_algorithm): <p>Indicates the algorithm used to create the checksum for the object when using the SDK. This header will not provide any additional functionality if not using the SDK. When sending this header, there must be a corresponding <code>x-amz-checksum</code> or <code>x-amz-trailer</code> header sent. Otherwise, Amazon S3 fails the request with the HTTP status code <code>400 Bad Request</code>. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>  <p>If you provide an individual checksum, Amazon S3 ignores any provided <code>ChecksumAlgorithm</code> parameter.</p>
    ///   - [`expected_bucket_owner(impl Into<String>)`](crate::client::fluent_builders::RestoreObject::expected_bucket_owner) / [`set_expected_bucket_owner(Option<String>)`](crate::client::fluent_builders::RestoreObject::set_expected_bucket_owner): <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
    /// - On success, responds with [`RestoreObjectOutput`](crate::output::RestoreObjectOutput) with field(s):
    ///   - [`request_charged(Option<RequestCharged>)`](crate::output::RestoreObjectOutput::request_charged): <p>If present, indicates that the requester was successfully charged for the request.</p>
    ///   - [`restore_output_path(Option<String>)`](crate::output::RestoreObjectOutput::restore_output_path): <p>Indicates the path in the provided S3 output location where Select results will be restored to.</p>
    /// - On failure, responds with [`SdkError<RestoreObjectError>`](crate::error::RestoreObjectError)
    pub fn restore_object(&self) -> crate::client::fluent_builders::RestoreObject {
        crate::client::fluent_builders::RestoreObject::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`SelectObjectContent`](crate::client::fluent_builders::SelectObjectContent) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`bucket(impl Into<String>)`](crate::client::fluent_builders::SelectObjectContent::bucket) / [`set_bucket(Option<String>)`](crate::client::fluent_builders::SelectObjectContent::set_bucket): <p>The S3 bucket.</p>
    ///   - [`key(impl Into<String>)`](crate::client::fluent_builders::SelectObjectContent::key) / [`set_key(Option<String>)`](crate::client::fluent_builders::SelectObjectContent::set_key): <p>The object key.</p>
    ///   - [`sse_customer_algorithm(impl Into<String>)`](crate::client::fluent_builders::SelectObjectContent::sse_customer_algorithm) / [`set_sse_customer_algorithm(Option<String>)`](crate::client::fluent_builders::SelectObjectContent::set_sse_customer_algorithm): <p>The server-side encryption (SSE) algorithm used to encrypt the object. This parameter is needed only when the object was created using a checksum algorithm. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerSideEncryptionCustomerKeys.html">Protecting data using SSE-C keys</a> in the <i>Amazon S3 User Guide</i>.</p>
    ///   - [`sse_customer_key(impl Into<String>)`](crate::client::fluent_builders::SelectObjectContent::sse_customer_key) / [`set_sse_customer_key(Option<String>)`](crate::client::fluent_builders::SelectObjectContent::set_sse_customer_key): <p>The server-side encryption (SSE) customer managed key. This parameter is needed only when the object was created using a checksum algorithm. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerSideEncryptionCustomerKeys.html">Protecting data using SSE-C keys</a> in the <i>Amazon S3 User Guide</i>.</p>
    ///   - [`sse_customer_key_md5(impl Into<String>)`](crate::client::fluent_builders::SelectObjectContent::sse_customer_key_md5) / [`set_sse_customer_key_md5(Option<String>)`](crate::client::fluent_builders::SelectObjectContent::set_sse_customer_key_md5): <p>The MD5 server-side encryption (SSE) customer managed key. This parameter is needed only when the object was created using a checksum algorithm. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerSideEncryptionCustomerKeys.html">Protecting data using SSE-C keys</a> in the <i>Amazon S3 User Guide</i>.</p>
    ///   - [`expression(impl Into<String>)`](crate::client::fluent_builders::SelectObjectContent::expression) / [`set_expression(Option<String>)`](crate::client::fluent_builders::SelectObjectContent::set_expression): <p>The expression that is used to query the object.</p>
    ///   - [`expression_type(ExpressionType)`](crate::client::fluent_builders::SelectObjectContent::expression_type) / [`set_expression_type(Option<ExpressionType>)`](crate::client::fluent_builders::SelectObjectContent::set_expression_type): <p>The type of the provided expression (for example, SQL).</p>
    ///   - [`request_progress(RequestProgress)`](crate::client::fluent_builders::SelectObjectContent::request_progress) / [`set_request_progress(Option<RequestProgress>)`](crate::client::fluent_builders::SelectObjectContent::set_request_progress): <p>Specifies if periodic request progress information should be enabled.</p>
    ///   - [`input_serialization(InputSerialization)`](crate::client::fluent_builders::SelectObjectContent::input_serialization) / [`set_input_serialization(Option<InputSerialization>)`](crate::client::fluent_builders::SelectObjectContent::set_input_serialization): <p>Describes the format of the data in the object that is being queried.</p>
    ///   - [`output_serialization(OutputSerialization)`](crate::client::fluent_builders::SelectObjectContent::output_serialization) / [`set_output_serialization(Option<OutputSerialization>)`](crate::client::fluent_builders::SelectObjectContent::set_output_serialization): <p>Describes the format of the data that you want Amazon S3 to return in response.</p>
    ///   - [`scan_range(ScanRange)`](crate::client::fluent_builders::SelectObjectContent::scan_range) / [`set_scan_range(Option<ScanRange>)`](crate::client::fluent_builders::SelectObjectContent::set_scan_range): <p>Specifies the byte range of the object to get the records from. A record is processed when its first byte is contained by the range. This parameter is optional, but when specified, it must not be empty. See RFC 2616, Section 14.35.1 about how to specify the start and end of the range.</p>  <p> <code>ScanRange</code>may be used in the following ways:</p>  <ul>   <li> <p> <code>     <scanrange>      <start>       50      </start>      <end>       100      </end>     </scanrange></code> - process only the records starting between the bytes 50 and 100 (inclusive, counting from zero)</p> </li>   <li> <p> <code>     <scanrange>      <start>       50      </start>     </scanrange></code> - process only the records starting after the byte 50</p> </li>   <li> <p> <code>     <scanrange>      <end>       50      </end>     </scanrange></code> - process only the records within the last 50 bytes of the file.</p> </li>  </ul>
    ///   - [`expected_bucket_owner(impl Into<String>)`](crate::client::fluent_builders::SelectObjectContent::expected_bucket_owner) / [`set_expected_bucket_owner(Option<String>)`](crate::client::fluent_builders::SelectObjectContent::set_expected_bucket_owner): <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
    /// - On success, responds with [`SelectObjectContentOutput`](crate::output::SelectObjectContentOutput) with field(s):
    ///   - [`payload(Receiver<crate::model::SelectObjectContentEventStream, crate::error::SelectObjectContentEventStreamError>)`](crate::output::SelectObjectContentOutput::payload): <p>The array of results.</p>
    /// - On failure, responds with [`SdkError<SelectObjectContentError>`](crate::error::SelectObjectContentError)
    pub fn select_object_content(&self) -> crate::client::fluent_builders::SelectObjectContent {
        crate::client::fluent_builders::SelectObjectContent::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`UploadPart`](crate::client::fluent_builders::UploadPart) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`body(ByteStream)`](crate::client::fluent_builders::UploadPart::body) / [`set_body(ByteStream)`](crate::client::fluent_builders::UploadPart::set_body): <p>Object data.</p>
    ///   - [`bucket(impl Into<String>)`](crate::client::fluent_builders::UploadPart::bucket) / [`set_bucket(Option<String>)`](crate::client::fluent_builders::UploadPart::set_bucket): <p>The name of the bucket to which the multipart upload was initiated.</p>  <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p>  <p>When using this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <code> <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com</code>. When using this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts bucket ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">Using Amazon S3 on Outposts</a> in the <i>Amazon S3 User Guide</i>.</p>
    ///   - [`content_length(i64)`](crate::client::fluent_builders::UploadPart::content_length) / [`set_content_length(i64)`](crate::client::fluent_builders::UploadPart::set_content_length): <p>Size of the body in bytes. This parameter is useful when the size of the body cannot be determined automatically.</p>
    ///   - [`content_md5(impl Into<String>)`](crate::client::fluent_builders::UploadPart::content_md5) / [`set_content_md5(Option<String>)`](crate::client::fluent_builders::UploadPart::set_content_md5): <p>The base64-encoded 128-bit MD5 digest of the part data. This parameter is auto-populated when using the command from the CLI. This parameter is required if object lock parameters are specified.</p>
    ///   - [`checksum_algorithm(ChecksumAlgorithm)`](crate::client::fluent_builders::UploadPart::checksum_algorithm) / [`set_checksum_algorithm(Option<ChecksumAlgorithm>)`](crate::client::fluent_builders::UploadPart::set_checksum_algorithm): <p>Indicates the algorithm used to create the checksum for the object when using the SDK. This header will not provide any additional functionality if not using the SDK. When sending this header, there must be a corresponding <code>x-amz-checksum</code> or <code>x-amz-trailer</code> header sent. Otherwise, Amazon S3 fails the request with the HTTP status code <code>400 Bad Request</code>. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>  <p>If you provide an individual checksum, Amazon S3 ignores any provided <code>ChecksumAlgorithm</code> parameter.</p>  <p>This checksum algorithm must be the same for all parts and it match the checksum value supplied in the <code>CreateMultipartUpload</code> request.</p>
    ///   - [`checksum_crc32(impl Into<String>)`](crate::client::fluent_builders::UploadPart::checksum_crc32) / [`set_checksum_crc32(Option<String>)`](crate::client::fluent_builders::UploadPart::set_checksum_crc32): <p>This header can be used as a data integrity check to verify that the data received is the same data that was originally sent. This header specifies the base64-encoded, 32-bit CRC32 checksum of the object. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
    ///   - [`checksum_crc32_c(impl Into<String>)`](crate::client::fluent_builders::UploadPart::checksum_crc32_c) / [`set_checksum_crc32_c(Option<String>)`](crate::client::fluent_builders::UploadPart::set_checksum_crc32_c): <p>This header can be used as a data integrity check to verify that the data received is the same data that was originally sent. This header specifies the base64-encoded, 32-bit CRC32C checksum of the object. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
    ///   - [`checksum_sha1(impl Into<String>)`](crate::client::fluent_builders::UploadPart::checksum_sha1) / [`set_checksum_sha1(Option<String>)`](crate::client::fluent_builders::UploadPart::set_checksum_sha1): <p>This header can be used as a data integrity check to verify that the data received is the same data that was originally sent. This header specifies the base64-encoded, 160-bit SHA-1 digest of the object. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
    ///   - [`checksum_sha256(impl Into<String>)`](crate::client::fluent_builders::UploadPart::checksum_sha256) / [`set_checksum_sha256(Option<String>)`](crate::client::fluent_builders::UploadPart::set_checksum_sha256): <p>This header can be used as a data integrity check to verify that the data received is the same data that was originally sent. This header specifies the base64-encoded, 256-bit SHA-256 digest of the object. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
    ///   - [`key(impl Into<String>)`](crate::client::fluent_builders::UploadPart::key) / [`set_key(Option<String>)`](crate::client::fluent_builders::UploadPart::set_key): <p>Object key for which the multipart upload was initiated.</p>
    ///   - [`part_number(i32)`](crate::client::fluent_builders::UploadPart::part_number) / [`set_part_number(i32)`](crate::client::fluent_builders::UploadPart::set_part_number): <p>Part number of part being uploaded. This is a positive integer between 1 and 10,000.</p>
    ///   - [`upload_id(impl Into<String>)`](crate::client::fluent_builders::UploadPart::upload_id) / [`set_upload_id(Option<String>)`](crate::client::fluent_builders::UploadPart::set_upload_id): <p>Upload ID identifying the multipart upload whose part is being uploaded.</p>
    ///   - [`sse_customer_algorithm(impl Into<String>)`](crate::client::fluent_builders::UploadPart::sse_customer_algorithm) / [`set_sse_customer_algorithm(Option<String>)`](crate::client::fluent_builders::UploadPart::set_sse_customer_algorithm): <p>Specifies the algorithm to use to when encrypting the object (for example, AES256).</p>
    ///   - [`sse_customer_key(impl Into<String>)`](crate::client::fluent_builders::UploadPart::sse_customer_key) / [`set_sse_customer_key(Option<String>)`](crate::client::fluent_builders::UploadPart::set_sse_customer_key): <p>Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This value is used to store the object and then it is discarded; Amazon S3 does not store the encryption key. The key must be appropriate for use with the algorithm specified in the <code>x-amz-server-side-encryption-customer-algorithm header</code>. This must be the same encryption key specified in the initiate multipart upload request.</p>
    ///   - [`sse_customer_key_md5(impl Into<String>)`](crate::client::fluent_builders::UploadPart::sse_customer_key_md5) / [`set_sse_customer_key_md5(Option<String>)`](crate::client::fluent_builders::UploadPart::set_sse_customer_key_md5): <p>Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure that the encryption key was transmitted without error.</p>
    ///   - [`request_payer(RequestPayer)`](crate::client::fluent_builders::UploadPart::request_payer) / [`set_request_payer(Option<RequestPayer>)`](crate::client::fluent_builders::UploadPart::set_request_payer): <p>Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from Requester Pays buckets, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html">Downloading Objects in Requester Pays Buckets</a> in the <i>Amazon S3 User Guide</i>.</p>
    ///   - [`expected_bucket_owner(impl Into<String>)`](crate::client::fluent_builders::UploadPart::expected_bucket_owner) / [`set_expected_bucket_owner(Option<String>)`](crate::client::fluent_builders::UploadPart::set_expected_bucket_owner): <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
    /// - On success, responds with [`UploadPartOutput`](crate::output::UploadPartOutput) with field(s):
    ///   - [`server_side_encryption(Option<ServerSideEncryption>)`](crate::output::UploadPartOutput::server_side_encryption): <p>The server-side encryption algorithm used when storing this object in Amazon S3 (for example, AES256, aws:kms).</p>
    ///   - [`e_tag(Option<String>)`](crate::output::UploadPartOutput::e_tag): <p>Entity tag for the uploaded object.</p>
    ///   - [`checksum_crc32(Option<String>)`](crate::output::UploadPartOutput::checksum_crc32): <p>The base64-encoded, 32-bit CRC32 checksum of the object. This will only be present if it was uploaded with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated with multipart uploads, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums"> Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
    ///   - [`checksum_crc32_c(Option<String>)`](crate::output::UploadPartOutput::checksum_crc32_c): <p>The base64-encoded, 32-bit CRC32C checksum of the object. This will only be present if it was uploaded with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated with multipart uploads, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums"> Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
    ///   - [`checksum_sha1(Option<String>)`](crate::output::UploadPartOutput::checksum_sha1): <p>The base64-encoded, 160-bit SHA-1 digest of the object. This will only be present if it was uploaded with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated with multipart uploads, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums"> Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
    ///   - [`checksum_sha256(Option<String>)`](crate::output::UploadPartOutput::checksum_sha256): <p>The base64-encoded, 256-bit SHA-256 digest of the object. This will only be present if it was uploaded with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated with multipart uploads, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums"> Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>
    ///   - [`sse_customer_algorithm(Option<String>)`](crate::output::UploadPartOutput::sse_customer_algorithm): <p>If server-side encryption with a customer-provided encryption key was requested, the response will include this header confirming the encryption algorithm used.</p>
    ///   - [`sse_customer_key_md5(Option<String>)`](crate::output::UploadPartOutput::sse_customer_key_md5): <p>If server-side encryption with a customer-provided encryption key was requested, the response will include this header to provide round-trip message integrity verification of the customer-provided encryption key.</p>
    ///   - [`ssekms_key_id(Option<String>)`](crate::output::UploadPartOutput::ssekms_key_id): <p>If present, specifies the ID of the Amazon Web Services Key Management Service (Amazon Web Services KMS) symmetric customer managed key was used for the object.</p>
    ///   - [`bucket_key_enabled(bool)`](crate::output::UploadPartOutput::bucket_key_enabled): <p>Indicates whether the multipart upload uses an S3 Bucket Key for server-side encryption with Amazon Web Services KMS (SSE-KMS).</p>
    ///   - [`request_charged(Option<RequestCharged>)`](crate::output::UploadPartOutput::request_charged): <p>If present, indicates that the requester was successfully charged for the request.</p>
    /// - On failure, responds with [`SdkError<UploadPartError>`](crate::error::UploadPartError)
    pub fn upload_part(&self) -> crate::client::fluent_builders::UploadPart {
        crate::client::fluent_builders::UploadPart::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`UploadPartCopy`](crate::client::fluent_builders::UploadPartCopy) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`bucket(impl Into<String>)`](crate::client::fluent_builders::UploadPartCopy::bucket) / [`set_bucket(Option<String>)`](crate::client::fluent_builders::UploadPartCopy::set_bucket): <p>The bucket name.</p>  <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p>  <p>When using this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <code> <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com</code>. When using this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts bucket ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">Using Amazon S3 on Outposts</a> in the <i>Amazon S3 User Guide</i>.</p>
    ///   - [`copy_source(impl Into<String>)`](crate::client::fluent_builders::UploadPartCopy::copy_source) / [`set_copy_source(Option<String>)`](crate::client::fluent_builders::UploadPartCopy::set_copy_source): <p>Specifies the source object for the copy operation. You specify the value in one of two formats, depending on whether you want to access the source object through an <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/access-points.html">access point</a>:</p>  <ul>   <li> <p>For objects not accessed through an access point, specify the name of the source bucket and key of the source object, separated by a slash (/). For example, to copy the object <code>reports/january.pdf</code> from the bucket <code>awsexamplebucket</code>, use <code>awsexamplebucket/reports/january.pdf</code>. The value must be URL-encoded.</p> </li>   <li> <p>For objects accessed through access points, specify the Amazon Resource Name (ARN) of the object as accessed through the access point, in the format <code>arn:aws:s3:     <region>      :      <account-id>       :accesspoint/       <access-point-name>        /object/        <key></key>       </access-point-name>      </account-id>     </region></code>. For example, to copy the object <code>reports/january.pdf</code> through access point <code>my-access-point</code> owned by account <code>123456789012</code> in Region <code>us-west-2</code>, use the URL encoding of <code>arn:aws:s3:us-west-2:123456789012:accesspoint/my-access-point/object/reports/january.pdf</code>. The value must be URL encoded.</p> <note>     <p>Amazon S3 supports copy operations using access points only when the source and destination buckets are in the same Amazon Web Services Region.</p>    </note> <p>Alternatively, for objects accessed through Amazon S3 on Outposts, specify the ARN of the object as accessed in the format <code>arn:aws:s3-outposts:     <region>      :      <account-id>       :outpost/       <outpost-id>        /object/        <key></key>       </outpost-id>      </account-id>     </region></code>. For example, to copy the object <code>reports/january.pdf</code> through outpost <code>my-outpost</code> owned by account <code>123456789012</code> in Region <code>us-west-2</code>, use the URL encoding of <code>arn:aws:s3-outposts:us-west-2:123456789012:outpost/my-outpost/object/reports/january.pdf</code>. The value must be URL-encoded. </p> </li>  </ul>  <p>To copy a specific version of an object, append <code>?versionId=   <version-id></version-id></code> to the value (for example, <code>awsexamplebucket/reports/january.pdf?versionId=QUpfdndhfd8438MNFDN93jdnJFkdmqnh893</code>). If you don't specify a version ID, Amazon S3 copies the latest version of the source object.</p>
    ///   - [`copy_source_if_match(impl Into<String>)`](crate::client::fluent_builders::UploadPartCopy::copy_source_if_match) / [`set_copy_source_if_match(Option<String>)`](crate::client::fluent_builders::UploadPartCopy::set_copy_source_if_match): <p>Copies the object if its entity tag (ETag) matches the specified tag.</p>
    ///   - [`copy_source_if_modified_since(DateTime)`](crate::client::fluent_builders::UploadPartCopy::copy_source_if_modified_since) / [`set_copy_source_if_modified_since(Option<DateTime>)`](crate::client::fluent_builders::UploadPartCopy::set_copy_source_if_modified_since): <p>Copies the object if it has been modified since the specified time.</p>
    ///   - [`copy_source_if_none_match(impl Into<String>)`](crate::client::fluent_builders::UploadPartCopy::copy_source_if_none_match) / [`set_copy_source_if_none_match(Option<String>)`](crate::client::fluent_builders::UploadPartCopy::set_copy_source_if_none_match): <p>Copies the object if its entity tag (ETag) is different than the specified ETag.</p>
    ///   - [`copy_source_if_unmodified_since(DateTime)`](crate::client::fluent_builders::UploadPartCopy::copy_source_if_unmodified_since) / [`set_copy_source_if_unmodified_since(Option<DateTime>)`](crate::client::fluent_builders::UploadPartCopy::set_copy_source_if_unmodified_since): <p>Copies the object if it hasn't been modified since the specified time.</p>
    ///   - [`copy_source_range(impl Into<String>)`](crate::client::fluent_builders::UploadPartCopy::copy_source_range) / [`set_copy_source_range(Option<String>)`](crate::client::fluent_builders::UploadPartCopy::set_copy_source_range): <p>The range of bytes to copy from the source object. The range value must use the form bytes=first-last, where the first and last are the zero-based byte offsets to copy. For example, bytes=0-9 indicates that you want to copy the first 10 bytes of the source. You can copy a range only if the source object is greater than 5 MB.</p>
    ///   - [`key(impl Into<String>)`](crate::client::fluent_builders::UploadPartCopy::key) / [`set_key(Option<String>)`](crate::client::fluent_builders::UploadPartCopy::set_key): <p>Object key for which the multipart upload was initiated.</p>
    ///   - [`part_number(i32)`](crate::client::fluent_builders::UploadPartCopy::part_number) / [`set_part_number(i32)`](crate::client::fluent_builders::UploadPartCopy::set_part_number): <p>Part number of part being copied. This is a positive integer between 1 and 10,000.</p>
    ///   - [`upload_id(impl Into<String>)`](crate::client::fluent_builders::UploadPartCopy::upload_id) / [`set_upload_id(Option<String>)`](crate::client::fluent_builders::UploadPartCopy::set_upload_id): <p>Upload ID identifying the multipart upload whose part is being copied.</p>
    ///   - [`sse_customer_algorithm(impl Into<String>)`](crate::client::fluent_builders::UploadPartCopy::sse_customer_algorithm) / [`set_sse_customer_algorithm(Option<String>)`](crate::client::fluent_builders::UploadPartCopy::set_sse_customer_algorithm): <p>Specifies the algorithm to use to when encrypting the object (for example, AES256).</p>
    ///   - [`sse_customer_key(impl Into<String>)`](crate::client::fluent_builders::UploadPartCopy::sse_customer_key) / [`set_sse_customer_key(Option<String>)`](crate::client::fluent_builders::UploadPartCopy::set_sse_customer_key): <p>Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This value is used to store the object and then it is discarded; Amazon S3 does not store the encryption key. The key must be appropriate for use with the algorithm specified in the <code>x-amz-server-side-encryption-customer-algorithm</code> header. This must be the same encryption key specified in the initiate multipart upload request.</p>
    ///   - [`sse_customer_key_md5(impl Into<String>)`](crate::client::fluent_builders::UploadPartCopy::sse_customer_key_md5) / [`set_sse_customer_key_md5(Option<String>)`](crate::client::fluent_builders::UploadPartCopy::set_sse_customer_key_md5): <p>Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure that the encryption key was transmitted without error.</p>
    ///   - [`copy_source_sse_customer_algorithm(impl Into<String>)`](crate::client::fluent_builders::UploadPartCopy::copy_source_sse_customer_algorithm) / [`set_copy_source_sse_customer_algorithm(Option<String>)`](crate::client::fluent_builders::UploadPartCopy::set_copy_source_sse_customer_algorithm): <p>Specifies the algorithm to use when decrypting the source object (for example, AES256).</p>
    ///   - [`copy_source_sse_customer_key(impl Into<String>)`](crate::client::fluent_builders::UploadPartCopy::copy_source_sse_customer_key) / [`set_copy_source_sse_customer_key(Option<String>)`](crate::client::fluent_builders::UploadPartCopy::set_copy_source_sse_customer_key): <p>Specifies the customer-provided encryption key for Amazon S3 to use to decrypt the source object. The encryption key provided in this header must be one that was used when the source object was created.</p>
    ///   - [`copy_source_sse_customer_key_md5(impl Into<String>)`](crate::client::fluent_builders::UploadPartCopy::copy_source_sse_customer_key_md5) / [`set_copy_source_sse_customer_key_md5(Option<String>)`](crate::client::fluent_builders::UploadPartCopy::set_copy_source_sse_customer_key_md5): <p>Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure that the encryption key was transmitted without error.</p>
    ///   - [`request_payer(RequestPayer)`](crate::client::fluent_builders::UploadPartCopy::request_payer) / [`set_request_payer(Option<RequestPayer>)`](crate::client::fluent_builders::UploadPartCopy::set_request_payer): <p>Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from Requester Pays buckets, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html">Downloading Objects in Requester Pays Buckets</a> in the <i>Amazon S3 User Guide</i>.</p>
    ///   - [`expected_bucket_owner(impl Into<String>)`](crate::client::fluent_builders::UploadPartCopy::expected_bucket_owner) / [`set_expected_bucket_owner(Option<String>)`](crate::client::fluent_builders::UploadPartCopy::set_expected_bucket_owner): <p>The account ID of the expected destination bucket owner. If the destination bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
    ///   - [`expected_source_bucket_owner(impl Into<String>)`](crate::client::fluent_builders::UploadPartCopy::expected_source_bucket_owner) / [`set_expected_source_bucket_owner(Option<String>)`](crate::client::fluent_builders::UploadPartCopy::set_expected_source_bucket_owner): <p>The account ID of the expected source bucket owner. If the source bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
    /// - On success, responds with [`UploadPartCopyOutput`](crate::output::UploadPartCopyOutput) with field(s):
    ///   - [`copy_source_version_id(Option<String>)`](crate::output::UploadPartCopyOutput::copy_source_version_id): <p>The version of the source object that was copied, if you have enabled versioning on the source bucket.</p>
    ///   - [`copy_part_result(Option<CopyPartResult>)`](crate::output::UploadPartCopyOutput::copy_part_result): <p>Container for all response elements.</p>
    ///   - [`server_side_encryption(Option<ServerSideEncryption>)`](crate::output::UploadPartCopyOutput::server_side_encryption): <p>The server-side encryption algorithm used when storing this object in Amazon S3 (for example, AES256, aws:kms).</p>
    ///   - [`sse_customer_algorithm(Option<String>)`](crate::output::UploadPartCopyOutput::sse_customer_algorithm): <p>If server-side encryption with a customer-provided encryption key was requested, the response will include this header confirming the encryption algorithm used.</p>
    ///   - [`sse_customer_key_md5(Option<String>)`](crate::output::UploadPartCopyOutput::sse_customer_key_md5): <p>If server-side encryption with a customer-provided encryption key was requested, the response will include this header to provide round-trip message integrity verification of the customer-provided encryption key.</p>
    ///   - [`ssekms_key_id(Option<String>)`](crate::output::UploadPartCopyOutput::ssekms_key_id): <p>If present, specifies the ID of the Amazon Web Services Key Management Service (Amazon Web Services KMS) symmetric customer managed key that was used for the object.</p>
    ///   - [`bucket_key_enabled(bool)`](crate::output::UploadPartCopyOutput::bucket_key_enabled): <p>Indicates whether the multipart upload uses an S3 Bucket Key for server-side encryption with Amazon Web Services KMS (SSE-KMS).</p>
    ///   - [`request_charged(Option<RequestCharged>)`](crate::output::UploadPartCopyOutput::request_charged): <p>If present, indicates that the requester was successfully charged for the request.</p>
    /// - On failure, responds with [`SdkError<UploadPartCopyError>`](crate::error::UploadPartCopyError)
    pub fn upload_part_copy(&self) -> crate::client::fluent_builders::UploadPartCopy {
        crate::client::fluent_builders::UploadPartCopy::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`WriteGetObjectResponse`](crate::client::fluent_builders::WriteGetObjectResponse) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`request_route(impl Into<String>)`](crate::client::fluent_builders::WriteGetObjectResponse::request_route) / [`set_request_route(Option<String>)`](crate::client::fluent_builders::WriteGetObjectResponse::set_request_route): <p>Route prefix to the HTTP URL generated.</p>
    ///   - [`request_token(impl Into<String>)`](crate::client::fluent_builders::WriteGetObjectResponse::request_token) / [`set_request_token(Option<String>)`](crate::client::fluent_builders::WriteGetObjectResponse::set_request_token): <p>A single use encrypted token that maps <code>WriteGetObjectResponse</code> to the end user <code>GetObject</code> request.</p>
    ///   - [`body(ByteStream)`](crate::client::fluent_builders::WriteGetObjectResponse::body) / [`set_body(ByteStream)`](crate::client::fluent_builders::WriteGetObjectResponse::set_body): <p>The object data.</p>
    ///   - [`status_code(i32)`](crate::client::fluent_builders::WriteGetObjectResponse::status_code) / [`set_status_code(i32)`](crate::client::fluent_builders::WriteGetObjectResponse::set_status_code): <p>The integer status code for an HTTP response of a corresponding <code>GetObject</code> request.</p>  <p class="title"> <b>Status Codes</b> </p>  <ul>   <li> <p> <code>200 - OK</code> </p> </li>   <li> <p> <code>206 - Partial Content</code> </p> </li>   <li> <p> <code>304 - Not Modified</code> </p> </li>   <li> <p> <code>400 - Bad Request</code> </p> </li>   <li> <p> <code>401 - Unauthorized</code> </p> </li>   <li> <p> <code>403 - Forbidden</code> </p> </li>   <li> <p> <code>404 - Not Found</code> </p> </li>   <li> <p> <code>405 - Method Not Allowed</code> </p> </li>   <li> <p> <code>409 - Conflict</code> </p> </li>   <li> <p> <code>411 - Length Required</code> </p> </li>   <li> <p> <code>412 - Precondition Failed</code> </p> </li>   <li> <p> <code>416 - Range Not Satisfiable</code> </p> </li>   <li> <p> <code>500 - Internal Server Error</code> </p> </li>   <li> <p> <code>503 - Service Unavailable</code> </p> </li>  </ul>
    ///   - [`error_code(impl Into<String>)`](crate::client::fluent_builders::WriteGetObjectResponse::error_code) / [`set_error_code(Option<String>)`](crate::client::fluent_builders::WriteGetObjectResponse::set_error_code): <p>A string that uniquely identifies an error condition. Returned in the <code> tag of the error XML response for a corresponding <code>GetObject</code> call. Cannot be used with a successful <code>StatusCode</code> header or when the transformed object is provided in the body. All error codes from S3 are sentence-cased. The regular expression (regex) value is <code>"^[A-Z][a-zA-Z]+$"</code>.</code></p>
    ///   - [`error_message(impl Into<String>)`](crate::client::fluent_builders::WriteGetObjectResponse::error_message) / [`set_error_message(Option<String>)`](crate::client::fluent_builders::WriteGetObjectResponse::set_error_message): <p>Contains a generic description of the error condition. Returned in the <message>    tag of the error XML response for a corresponding    <code>GetObject</code> call. Cannot be used with a successful    <code>StatusCode</code> header or when the transformed object is provided in body.  </message></p>
    ///   - [`accept_ranges(impl Into<String>)`](crate::client::fluent_builders::WriteGetObjectResponse::accept_ranges) / [`set_accept_ranges(Option<String>)`](crate::client::fluent_builders::WriteGetObjectResponse::set_accept_ranges): <p>Indicates that a range of bytes was specified.</p>
    ///   - [`cache_control(impl Into<String>)`](crate::client::fluent_builders::WriteGetObjectResponse::cache_control) / [`set_cache_control(Option<String>)`](crate::client::fluent_builders::WriteGetObjectResponse::set_cache_control): <p>Specifies caching behavior along the request/reply chain.</p>
    ///   - [`content_disposition(impl Into<String>)`](crate::client::fluent_builders::WriteGetObjectResponse::content_disposition) / [`set_content_disposition(Option<String>)`](crate::client::fluent_builders::WriteGetObjectResponse::set_content_disposition): <p>Specifies presentational information for the object.</p>
    ///   - [`content_encoding(impl Into<String>)`](crate::client::fluent_builders::WriteGetObjectResponse::content_encoding) / [`set_content_encoding(Option<String>)`](crate::client::fluent_builders::WriteGetObjectResponse::set_content_encoding): <p>Specifies what content encodings have been applied to the object and thus what decoding mechanisms must be applied to obtain the media-type referenced by the Content-Type header field.</p>
    ///   - [`content_language(impl Into<String>)`](crate::client::fluent_builders::WriteGetObjectResponse::content_language) / [`set_content_language(Option<String>)`](crate::client::fluent_builders::WriteGetObjectResponse::set_content_language): <p>The language the content is in.</p>
    ///   - [`content_length(i64)`](crate::client::fluent_builders::WriteGetObjectResponse::content_length) / [`set_content_length(i64)`](crate::client::fluent_builders::WriteGetObjectResponse::set_content_length): <p>The size of the content body in bytes.</p>
    ///   - [`content_range(impl Into<String>)`](crate::client::fluent_builders::WriteGetObjectResponse::content_range) / [`set_content_range(Option<String>)`](crate::client::fluent_builders::WriteGetObjectResponse::set_content_range): <p>The portion of the object returned in the response.</p>
    ///   - [`content_type(impl Into<String>)`](crate::client::fluent_builders::WriteGetObjectResponse::content_type) / [`set_content_type(Option<String>)`](crate::client::fluent_builders::WriteGetObjectResponse::set_content_type): <p>A standard MIME type describing the format of the object data.</p>
    ///   - [`checksum_crc32(impl Into<String>)`](crate::client::fluent_builders::WriteGetObjectResponse::checksum_crc32) / [`set_checksum_crc32(Option<String>)`](crate::client::fluent_builders::WriteGetObjectResponse::set_checksum_crc32): <p>This header can be used as a data integrity check to verify that the data received is the same data that was originally sent. This specifies the base64-encoded, 32-bit CRC32 checksum of the object returned by the Object Lambda function. This may not match the checksum for the object stored in Amazon S3. Amazon S3 will perform validation of the checksum values only when the original <code>GetObject</code> request required checksum validation. For more information about checksums, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>  <p>Only one checksum header can be specified at a time. If you supply multiple checksum headers, this request will fail.</p>  <p></p>
    ///   - [`checksum_crc32_c(impl Into<String>)`](crate::client::fluent_builders::WriteGetObjectResponse::checksum_crc32_c) / [`set_checksum_crc32_c(Option<String>)`](crate::client::fluent_builders::WriteGetObjectResponse::set_checksum_crc32_c): <p>This header can be used as a data integrity check to verify that the data received is the same data that was originally sent. This specifies the base64-encoded, 32-bit CRC32C checksum of the object returned by the Object Lambda function. This may not match the checksum for the object stored in Amazon S3. Amazon S3 will perform validation of the checksum values only when the original <code>GetObject</code> request required checksum validation. For more information about checksums, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>  <p>Only one checksum header can be specified at a time. If you supply multiple checksum headers, this request will fail.</p>
    ///   - [`checksum_sha1(impl Into<String>)`](crate::client::fluent_builders::WriteGetObjectResponse::checksum_sha1) / [`set_checksum_sha1(Option<String>)`](crate::client::fluent_builders::WriteGetObjectResponse::set_checksum_sha1): <p>This header can be used as a data integrity check to verify that the data received is the same data that was originally sent. This specifies the base64-encoded, 160-bit SHA-1 digest of the object returned by the Object Lambda function. This may not match the checksum for the object stored in Amazon S3. Amazon S3 will perform validation of the checksum values only when the original <code>GetObject</code> request required checksum validation. For more information about checksums, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>  <p>Only one checksum header can be specified at a time. If you supply multiple checksum headers, this request will fail.</p>
    ///   - [`checksum_sha256(impl Into<String>)`](crate::client::fluent_builders::WriteGetObjectResponse::checksum_sha256) / [`set_checksum_sha256(Option<String>)`](crate::client::fluent_builders::WriteGetObjectResponse::set_checksum_sha256): <p>This header can be used as a data integrity check to verify that the data received is the same data that was originally sent. This specifies the base64-encoded, 256-bit SHA-256 digest of the object returned by the Object Lambda function. This may not match the checksum for the object stored in Amazon S3. Amazon S3 will perform validation of the checksum values only when the original <code>GetObject</code> request required checksum validation. For more information about checksums, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>.</p>  <p>Only one checksum header can be specified at a time. If you supply multiple checksum headers, this request will fail.</p>
    ///   - [`delete_marker(bool)`](crate::client::fluent_builders::WriteGetObjectResponse::delete_marker) / [`set_delete_marker(bool)`](crate::client::fluent_builders::WriteGetObjectResponse::set_delete_marker): <p>Specifies whether an object stored in Amazon S3 is (<code>true</code>) or is not (<code>false</code>) a delete marker. </p>
    ///   - [`e_tag(impl Into<String>)`](crate::client::fluent_builders::WriteGetObjectResponse::e_tag) / [`set_e_tag(Option<String>)`](crate::client::fluent_builders::WriteGetObjectResponse::set_e_tag): <p>An opaque identifier assigned by a web server to a specific version of a resource found at a URL. </p>
    ///   - [`expires(DateTime)`](crate::client::fluent_builders::WriteGetObjectResponse::expires) / [`set_expires(Option<DateTime>)`](crate::client::fluent_builders::WriteGetObjectResponse::set_expires): <p>The date and time at which the object is no longer cacheable.</p>
    ///   - [`expiration(impl Into<String>)`](crate::client::fluent_builders::WriteGetObjectResponse::expiration) / [`set_expiration(Option<String>)`](crate::client::fluent_builders::WriteGetObjectResponse::set_expiration): <p>If the object expiration is configured (see PUT Bucket lifecycle), the response includes this header. It includes the <code>expiry-date</code> and <code>rule-id</code> key-value pairs that provide the object expiration information. The value of the <code>rule-id</code> is URL-encoded. </p>
    ///   - [`last_modified(DateTime)`](crate::client::fluent_builders::WriteGetObjectResponse::last_modified) / [`set_last_modified(Option<DateTime>)`](crate::client::fluent_builders::WriteGetObjectResponse::set_last_modified): <p>The date and time that the object was last modified.</p>
    ///   - [`missing_meta(i32)`](crate::client::fluent_builders::WriteGetObjectResponse::missing_meta) / [`set_missing_meta(i32)`](crate::client::fluent_builders::WriteGetObjectResponse::set_missing_meta): <p>Set to the number of metadata entries not returned in <code>x-amz-meta</code> headers. This can happen if you create metadata using an API like SOAP that supports more flexible metadata than the REST API. For example, using SOAP, you can create metadata whose values are not legal HTTP headers.</p>
    ///   - [`metadata(HashMap<String, String>)`](crate::client::fluent_builders::WriteGetObjectResponse::metadata) / [`set_metadata(Option<HashMap<String, String>>)`](crate::client::fluent_builders::WriteGetObjectResponse::set_metadata): <p>A map of metadata to store with the object in S3.</p>
    ///   - [`object_lock_mode(ObjectLockMode)`](crate::client::fluent_builders::WriteGetObjectResponse::object_lock_mode) / [`set_object_lock_mode(Option<ObjectLockMode>)`](crate::client::fluent_builders::WriteGetObjectResponse::set_object_lock_mode): <p>Indicates whether an object stored in Amazon S3 has Object Lock enabled. For more information about S3 Object Lock, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-lock.html">Object Lock</a>.</p>
    ///   - [`object_lock_legal_hold_status(ObjectLockLegalHoldStatus)`](crate::client::fluent_builders::WriteGetObjectResponse::object_lock_legal_hold_status) / [`set_object_lock_legal_hold_status(Option<ObjectLockLegalHoldStatus>)`](crate::client::fluent_builders::WriteGetObjectResponse::set_object_lock_legal_hold_status): <p>Indicates whether an object stored in Amazon S3 has an active legal hold.</p>
    ///   - [`object_lock_retain_until_date(DateTime)`](crate::client::fluent_builders::WriteGetObjectResponse::object_lock_retain_until_date) / [`set_object_lock_retain_until_date(Option<DateTime>)`](crate::client::fluent_builders::WriteGetObjectResponse::set_object_lock_retain_until_date): <p>The date and time when Object Lock is configured to expire.</p>
    ///   - [`parts_count(i32)`](crate::client::fluent_builders::WriteGetObjectResponse::parts_count) / [`set_parts_count(i32)`](crate::client::fluent_builders::WriteGetObjectResponse::set_parts_count): <p>The count of parts this object has.</p>
    ///   - [`replication_status(ReplicationStatus)`](crate::client::fluent_builders::WriteGetObjectResponse::replication_status) / [`set_replication_status(Option<ReplicationStatus>)`](crate::client::fluent_builders::WriteGetObjectResponse::set_replication_status): <p>Indicates if request involves bucket that is either a source or destination in a Replication rule. For more information about S3 Replication, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/replication.html">Replication</a>.</p>
    ///   - [`request_charged(RequestCharged)`](crate::client::fluent_builders::WriteGetObjectResponse::request_charged) / [`set_request_charged(Option<RequestCharged>)`](crate::client::fluent_builders::WriteGetObjectResponse::set_request_charged): <p>If present, indicates that the requester was successfully charged for the request.</p>
    ///   - [`restore(impl Into<String>)`](crate::client::fluent_builders::WriteGetObjectResponse::restore) / [`set_restore(Option<String>)`](crate::client::fluent_builders::WriteGetObjectResponse::set_restore): <p>Provides information about object restoration operation and expiration time of the restored object copy.</p>
    ///   - [`server_side_encryption(ServerSideEncryption)`](crate::client::fluent_builders::WriteGetObjectResponse::server_side_encryption) / [`set_server_side_encryption(Option<ServerSideEncryption>)`](crate::client::fluent_builders::WriteGetObjectResponse::set_server_side_encryption): <p> The server-side encryption algorithm used when storing requested object in Amazon S3 (for example, AES256, aws:kms).</p>
    ///   - [`sse_customer_algorithm(impl Into<String>)`](crate::client::fluent_builders::WriteGetObjectResponse::sse_customer_algorithm) / [`set_sse_customer_algorithm(Option<String>)`](crate::client::fluent_builders::WriteGetObjectResponse::set_sse_customer_algorithm): <p>Encryption algorithm used if server-side encryption with a customer-provided encryption key was specified for object stored in Amazon S3.</p>
    ///   - [`ssekms_key_id(impl Into<String>)`](crate::client::fluent_builders::WriteGetObjectResponse::ssekms_key_id) / [`set_ssekms_key_id(Option<String>)`](crate::client::fluent_builders::WriteGetObjectResponse::set_ssekms_key_id): <p> If present, specifies the ID of the Amazon Web Services Key Management Service (Amazon Web Services KMS) symmetric customer managed key that was used for stored in Amazon S3 object. </p>
    ///   - [`sse_customer_key_md5(impl Into<String>)`](crate::client::fluent_builders::WriteGetObjectResponse::sse_customer_key_md5) / [`set_sse_customer_key_md5(Option<String>)`](crate::client::fluent_builders::WriteGetObjectResponse::set_sse_customer_key_md5): <p> 128-bit MD5 digest of customer-provided encryption key used in Amazon S3 to encrypt data stored in S3. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/ServerSideEncryptionCustomerKeys.html">Protecting data using server-side encryption with customer-provided encryption keys (SSE-C)</a>.</p>
    ///   - [`storage_class(StorageClass)`](crate::client::fluent_builders::WriteGetObjectResponse::storage_class) / [`set_storage_class(Option<StorageClass>)`](crate::client::fluent_builders::WriteGetObjectResponse::set_storage_class): <p>Provides storage class information of the object. Amazon S3 returns this header for all objects except for S3 Standard storage class objects.</p>  <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-class-intro.html">Storage Classes</a>.</p>
    ///   - [`tag_count(i32)`](crate::client::fluent_builders::WriteGetObjectResponse::tag_count) / [`set_tag_count(i32)`](crate::client::fluent_builders::WriteGetObjectResponse::set_tag_count): <p>The number of tags, if any, on the object.</p>
    ///   - [`version_id(impl Into<String>)`](crate::client::fluent_builders::WriteGetObjectResponse::version_id) / [`set_version_id(Option<String>)`](crate::client::fluent_builders::WriteGetObjectResponse::set_version_id): <p>An ID used to reference a specific version of the object.</p>
    ///   - [`bucket_key_enabled(bool)`](crate::client::fluent_builders::WriteGetObjectResponse::bucket_key_enabled) / [`set_bucket_key_enabled(bool)`](crate::client::fluent_builders::WriteGetObjectResponse::set_bucket_key_enabled): <p> Indicates whether the object stored in Amazon S3 uses an S3 bucket key for server-side encryption with Amazon Web Services KMS (SSE-KMS).</p>
    /// - On success, responds with [`WriteGetObjectResponseOutput`](crate::output::WriteGetObjectResponseOutput)

    /// - On failure, responds with [`SdkError<WriteGetObjectResponseError>`](crate::error::WriteGetObjectResponseError)
    pub fn write_get_object_response(
        &self,
    ) -> crate::client::fluent_builders::WriteGetObjectResponse {
        crate::client::fluent_builders::WriteGetObjectResponse::new(self.handle.clone())
    }
}

impl Client {
    /// Creates a new client from an [SDK Config](aws_types::sdk_config::SdkConfig).
    ///
    /// # Panics
    ///
    /// - This method will panic if the `sdk_config` is missing an async sleep implementation. If you experience this panic, set
    ///     the `sleep_impl` on the Config passed into this function to fix it.
    /// - This method will panic if the `sdk_config` is missing an HTTP connector. If you experience this panic, set the
    ///     `http_connector` on the Config passed into this function to fix it.
    pub fn new(sdk_config: &aws_types::sdk_config::SdkConfig) -> Self {
        Self::from_conf(sdk_config.into())
    }

    /// Creates a new client from the service [`Config`](crate::Config).
    ///
    /// # Panics
    ///
    /// - This method will panic if the `conf` is missing an async sleep implementation. If you experience this panic, set
    ///     the `sleep_impl` on the Config passed into this function to fix it.
    /// - This method will panic if the `conf` is missing an HTTP connector. If you experience this panic, set the
    ///     `http_connector` on the Config passed into this function to fix it.
    pub fn from_conf(conf: crate::Config) -> Self {
        let retry_config = conf
            .retry_config()
            .cloned()
            .unwrap_or_else(aws_smithy_types::retry::RetryConfig::disabled);
        let timeout_config = conf
            .timeout_config()
            .cloned()
            .unwrap_or_else(aws_smithy_types::timeout::TimeoutConfig::disabled);
        let sleep_impl = conf.sleep_impl();
        if (retry_config.has_retry() || timeout_config.has_timeouts()) && sleep_impl.is_none() {
            panic!("An async sleep implementation is required for retries or timeouts to work. \
                                    Set the `sleep_impl` on the Config passed into this function to fix this panic.");
        }

        let connector = conf.http_connector().and_then(|c| {
            let timeout_config = conf
                .timeout_config()
                .cloned()
                .unwrap_or_else(aws_smithy_types::timeout::TimeoutConfig::disabled);
            let connector_settings =
                aws_smithy_client::http_connector::ConnectorSettings::from_timeout_config(
                    &timeout_config,
                );
            c.connector(&connector_settings, conf.sleep_impl())
        });

        let builder = aws_smithy_client::Builder::new();

        let builder = match connector {
            // Use provided connector
            Some(c) => builder.connector(c),
            None => {
                #[cfg(any(feature = "rustls", feature = "native-tls"))]
                {
                    // Use default connector based on enabled features
                    builder.dyn_https_connector(
                        aws_smithy_client::http_connector::ConnectorSettings::from_timeout_config(
                            &timeout_config,
                        ),
                    )
                }
                #[cfg(not(any(feature = "rustls", feature = "native-tls")))]
                {
                    panic!("No HTTP connector was available. Enable the `rustls` or `native-tls` crate feature or set a connector to fix this.");
                }
            }
        };
        let mut builder = builder
            .middleware(aws_smithy_client::erase::DynMiddleware::new(
                crate::middleware::DefaultMiddleware::new(),
            ))
            .retry_config(retry_config.into())
            .operation_timeout_config(timeout_config.into());
        builder.set_sleep_impl(sleep_impl);
        let client = builder.build();

        Self {
            handle: std::sync::Arc::new(Handle { client, conf }),
        }
    }
}

/// Utilities to ergonomically construct a request to the service.
///
/// Fluent builders are created through the [`Client`](crate::client::Client) by calling
/// one if its operation methods. After parameters are set using the builder methods,
/// the `send` method can be called to initiate the request.
pub mod fluent_builders;
