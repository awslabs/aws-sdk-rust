// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetBucketRequestPayment`](crate::client::fluent_builders::GetBucketRequestPayment) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`bucket(impl Into<String>)`](crate::client::fluent_builders::GetBucketRequestPayment::bucket) / [`set_bucket(Option<String>)`](crate::client::fluent_builders::GetBucketRequestPayment::set_bucket): <p>The name of the bucket for which to get the payment request configuration</p>
    ///   - [`expected_bucket_owner(impl Into<String>)`](crate::client::fluent_builders::GetBucketRequestPayment::expected_bucket_owner) / [`set_expected_bucket_owner(Option<String>)`](crate::client::fluent_builders::GetBucketRequestPayment::set_expected_bucket_owner): <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
    /// - On success, responds with [`GetBucketRequestPaymentOutput`](crate::output::GetBucketRequestPaymentOutput) with field(s):
    ///   - [`payer(Option<Payer>)`](crate::output::GetBucketRequestPaymentOutput::payer): <p>Specifies who pays for the download and request fees.</p>
    /// - On failure, responds with [`SdkError<GetBucketRequestPaymentError>`](crate::error::GetBucketRequestPaymentError)
    pub fn get_bucket_request_payment(
        &self,
    ) -> crate::client::fluent_builders::GetBucketRequestPayment {
        crate::client::fluent_builders::GetBucketRequestPayment::new(self.handle.clone())
    }
}
