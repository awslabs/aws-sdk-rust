// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`PutBucketNotificationConfiguration`](crate::client::fluent_builders::PutBucketNotificationConfiguration) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`bucket(impl Into<String>)`](crate::client::fluent_builders::PutBucketNotificationConfiguration::bucket) / [`set_bucket(Option<String>)`](crate::client::fluent_builders::PutBucketNotificationConfiguration::set_bucket): <p>The name of the bucket.</p>
    ///   - [`notification_configuration(NotificationConfiguration)`](crate::client::fluent_builders::PutBucketNotificationConfiguration::notification_configuration) / [`set_notification_configuration(Option<NotificationConfiguration>)`](crate::client::fluent_builders::PutBucketNotificationConfiguration::set_notification_configuration): <p>A container for specifying the notification configuration of the bucket. If this element is empty, notifications are turned off for the bucket.</p>
    ///   - [`expected_bucket_owner(impl Into<String>)`](crate::client::fluent_builders::PutBucketNotificationConfiguration::expected_bucket_owner) / [`set_expected_bucket_owner(Option<String>)`](crate::client::fluent_builders::PutBucketNotificationConfiguration::set_expected_bucket_owner): <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
    ///   - [`skip_destination_validation(bool)`](crate::client::fluent_builders::PutBucketNotificationConfiguration::skip_destination_validation) / [`set_skip_destination_validation(bool)`](crate::client::fluent_builders::PutBucketNotificationConfiguration::set_skip_destination_validation): <p>Skips validation of Amazon SQS, Amazon SNS, and Lambda destinations. True or false value.</p>
    /// - On success, responds with [`PutBucketNotificationConfigurationOutput`](crate::output::PutBucketNotificationConfigurationOutput)
    /// - On failure, responds with [`SdkError<PutBucketNotificationConfigurationError>`](crate::error::PutBucketNotificationConfigurationError)
    pub fn put_bucket_notification_configuration(
        &self,
    ) -> crate::client::fluent_builders::PutBucketNotificationConfiguration {
        crate::client::fluent_builders::PutBucketNotificationConfiguration::new(self.handle.clone())
    }
}
