// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetBucketPolicyStatus`](crate::operation::get_bucket_policy_status::builders::GetBucketPolicyStatusFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`bucket(impl Into<String>)`](crate::operation::get_bucket_policy_status::builders::GetBucketPolicyStatusFluentBuilder::bucket) / [`set_bucket(Option<String>)`](crate::operation::get_bucket_policy_status::builders::GetBucketPolicyStatusFluentBuilder::set_bucket): <p>The name of the Amazon S3 bucket whose policy status you want to retrieve.</p>
    ///   - [`expected_bucket_owner(impl Into<String>)`](crate::operation::get_bucket_policy_status::builders::GetBucketPolicyStatusFluentBuilder::expected_bucket_owner) / [`set_expected_bucket_owner(Option<String>)`](crate::operation::get_bucket_policy_status::builders::GetBucketPolicyStatusFluentBuilder::set_expected_bucket_owner): <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
    /// - On success, responds with [`GetBucketPolicyStatusOutput`](crate::operation::get_bucket_policy_status::GetBucketPolicyStatusOutput) with field(s):
    ///   - [`policy_status(Option<PolicyStatus>)`](crate::operation::get_bucket_policy_status::GetBucketPolicyStatusOutput::policy_status): <p>The policy status for the specified bucket.</p>
    /// - On failure, responds with [`SdkError<GetBucketPolicyStatusError>`](crate::operation::get_bucket_policy_status::GetBucketPolicyStatusError)
    pub fn get_bucket_policy_status(
        &self,
    ) -> crate::operation::get_bucket_policy_status::builders::GetBucketPolicyStatusFluentBuilder
    {
        crate::operation::get_bucket_policy_status::builders::GetBucketPolicyStatusFluentBuilder::new(self.handle.clone())
    }
}
