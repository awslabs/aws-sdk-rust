// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetBucketEncryption`](crate::client::fluent_builders::GetBucketEncryption) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`bucket(impl Into<String>)`](crate::client::fluent_builders::GetBucketEncryption::bucket) / [`set_bucket(Option<String>)`](crate::client::fluent_builders::GetBucketEncryption::set_bucket): <p>The name of the bucket from which the server-side encryption configuration is retrieved.</p>
    ///   - [`expected_bucket_owner(impl Into<String>)`](crate::client::fluent_builders::GetBucketEncryption::expected_bucket_owner) / [`set_expected_bucket_owner(Option<String>)`](crate::client::fluent_builders::GetBucketEncryption::set_expected_bucket_owner): <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
    /// - On success, responds with [`GetBucketEncryptionOutput`](crate::output::GetBucketEncryptionOutput) with field(s):
    ///   - [`server_side_encryption_configuration(Option<ServerSideEncryptionConfiguration>)`](crate::output::GetBucketEncryptionOutput::server_side_encryption_configuration): <p>Specifies the default server-side-encryption configuration.</p>
    /// - On failure, responds with [`SdkError<GetBucketEncryptionError>`](crate::error::GetBucketEncryptionError)
    pub fn get_bucket_encryption(&self) -> crate::client::fluent_builders::GetBucketEncryption {
        crate::client::fluent_builders::GetBucketEncryption::new(self.handle.clone())
    }
}
