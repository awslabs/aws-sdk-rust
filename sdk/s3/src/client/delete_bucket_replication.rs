// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeleteBucketReplication`](crate::operation::delete_bucket_replication::builders::DeleteBucketReplicationFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`bucket(impl Into<String>)`](crate::operation::delete_bucket_replication::builders::DeleteBucketReplicationFluentBuilder::bucket) / [`set_bucket(Option<String>)`](crate::operation::delete_bucket_replication::builders::DeleteBucketReplicationFluentBuilder::set_bucket): <p> The bucket name. </p>
    ///   - [`expected_bucket_owner(impl Into<String>)`](crate::operation::delete_bucket_replication::builders::DeleteBucketReplicationFluentBuilder::expected_bucket_owner) / [`set_expected_bucket_owner(Option<String>)`](crate::operation::delete_bucket_replication::builders::DeleteBucketReplicationFluentBuilder::set_expected_bucket_owner): <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
    /// - On success, responds with [`DeleteBucketReplicationOutput`](crate::operation::delete_bucket_replication::DeleteBucketReplicationOutput)
    /// - On failure, responds with [`SdkError<DeleteBucketReplicationError>`](crate::operation::delete_bucket_replication::DeleteBucketReplicationError)
    pub fn delete_bucket_replication(
        &self,
    ) -> crate::operation::delete_bucket_replication::builders::DeleteBucketReplicationFluentBuilder
    {
        crate::operation::delete_bucket_replication::builders::DeleteBucketReplicationFluentBuilder::new(self.handle.clone())
    }
}
