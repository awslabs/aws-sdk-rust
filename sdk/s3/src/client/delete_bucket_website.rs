// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeleteBucketWebsite`](crate::operation::delete_bucket_website::builders::DeleteBucketWebsiteFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`bucket(impl Into<String>)`](crate::operation::delete_bucket_website::builders::DeleteBucketWebsiteFluentBuilder::bucket) / [`set_bucket(Option<String>)`](crate::operation::delete_bucket_website::builders::DeleteBucketWebsiteFluentBuilder::set_bucket): <p>The bucket name for which you want to remove the website configuration. </p>
    ///   - [`expected_bucket_owner(impl Into<String>)`](crate::operation::delete_bucket_website::builders::DeleteBucketWebsiteFluentBuilder::expected_bucket_owner) / [`set_expected_bucket_owner(Option<String>)`](crate::operation::delete_bucket_website::builders::DeleteBucketWebsiteFluentBuilder::set_expected_bucket_owner): <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
    /// - On success, responds with [`DeleteBucketWebsiteOutput`](crate::operation::delete_bucket_website::DeleteBucketWebsiteOutput)
    /// - On failure, responds with [`SdkError<DeleteBucketWebsiteError>`](crate::operation::delete_bucket_website::DeleteBucketWebsiteError)
    pub fn delete_bucket_website(
        &self,
    ) -> crate::operation::delete_bucket_website::builders::DeleteBucketWebsiteFluentBuilder {
        crate::operation::delete_bucket_website::builders::DeleteBucketWebsiteFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
