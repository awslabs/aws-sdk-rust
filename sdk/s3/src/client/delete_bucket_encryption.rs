// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeleteBucketEncryption`](crate::client::fluent_builders::DeleteBucketEncryption) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`bucket(impl Into<String>)`](crate::client::fluent_builders::DeleteBucketEncryption::bucket) / [`set_bucket(Option<String>)`](crate::client::fluent_builders::DeleteBucketEncryption::set_bucket): <p>The name of the bucket containing the server-side encryption configuration to delete.</p>
    ///   - [`expected_bucket_owner(impl Into<String>)`](crate::client::fluent_builders::DeleteBucketEncryption::expected_bucket_owner) / [`set_expected_bucket_owner(Option<String>)`](crate::client::fluent_builders::DeleteBucketEncryption::set_expected_bucket_owner): <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
    /// - On success, responds with [`DeleteBucketEncryptionOutput`](crate::output::DeleteBucketEncryptionOutput)
    /// - On failure, responds with [`SdkError<DeleteBucketEncryptionError>`](crate::error::DeleteBucketEncryptionError)
    pub fn delete_bucket_encryption(
        &self,
    ) -> crate::client::fluent_builders::DeleteBucketEncryption {
        crate::client::fluent_builders::DeleteBucketEncryption::new(self.handle.clone())
    }
}
