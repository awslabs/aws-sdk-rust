// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeleteObject`](crate::client::fluent_builders::DeleteObject) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`bucket(impl Into<String>)`](crate::client::fluent_builders::DeleteObject::bucket) / [`set_bucket(Option<String>)`](crate::client::fluent_builders::DeleteObject::set_bucket): <p>The bucket name of the bucket containing the object. </p>  <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p>  <p>When using this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <code> <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com</code>. When using this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts bucket ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html">Using Amazon S3 on Outposts</a> in the <i>Amazon S3 User Guide</i>.</p>
    ///   - [`key(impl Into<String>)`](crate::client::fluent_builders::DeleteObject::key) / [`set_key(Option<String>)`](crate::client::fluent_builders::DeleteObject::set_key): <p>Key name of the object to delete.</p>
    ///   - [`mfa(impl Into<String>)`](crate::client::fluent_builders::DeleteObject::mfa) / [`set_mfa(Option<String>)`](crate::client::fluent_builders::DeleteObject::set_mfa): <p>The concatenation of the authentication device's serial number, a space, and the value that is displayed on your authentication device. Required to permanently delete a versioned object if versioning is configured with MFA delete enabled.</p>
    ///   - [`version_id(impl Into<String>)`](crate::client::fluent_builders::DeleteObject::version_id) / [`set_version_id(Option<String>)`](crate::client::fluent_builders::DeleteObject::set_version_id): <p>VersionId used to reference a specific version of the object.</p>
    ///   - [`request_payer(RequestPayer)`](crate::client::fluent_builders::DeleteObject::request_payer) / [`set_request_payer(Option<RequestPayer>)`](crate::client::fluent_builders::DeleteObject::set_request_payer): <p>Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from Requester Pays buckets, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html">Downloading Objects in Requester Pays Buckets</a> in the <i>Amazon S3 User Guide</i>.</p>
    ///   - [`bypass_governance_retention(bool)`](crate::client::fluent_builders::DeleteObject::bypass_governance_retention) / [`set_bypass_governance_retention(bool)`](crate::client::fluent_builders::DeleteObject::set_bypass_governance_retention): <p>Indicates whether S3 Object Lock should bypass Governance-mode restrictions to process this operation. To use this header, you must have the <code>s3:BypassGovernanceRetention</code> permission.</p>
    ///   - [`expected_bucket_owner(impl Into<String>)`](crate::client::fluent_builders::DeleteObject::expected_bucket_owner) / [`set_expected_bucket_owner(Option<String>)`](crate::client::fluent_builders::DeleteObject::set_expected_bucket_owner): <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
    /// - On success, responds with [`DeleteObjectOutput`](crate::output::DeleteObjectOutput) with field(s):
    ///   - [`delete_marker(bool)`](crate::output::DeleteObjectOutput::delete_marker): <p>Specifies whether the versioned object that was permanently deleted was (true) or was not (false) a delete marker.</p>
    ///   - [`version_id(Option<String>)`](crate::output::DeleteObjectOutput::version_id): <p>Returns the version ID of the delete marker created as a result of the DELETE operation.</p>
    ///   - [`request_charged(Option<RequestCharged>)`](crate::output::DeleteObjectOutput::request_charged): <p>If present, indicates that the requester was successfully charged for the request.</p>
    /// - On failure, responds with [`SdkError<DeleteObjectError>`](crate::error::DeleteObjectError)
    pub fn delete_object(&self) -> crate::client::fluent_builders::DeleteObject {
        crate::client::fluent_builders::DeleteObject::new(self.handle.clone())
    }
}
