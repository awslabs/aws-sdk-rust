// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetBucketCors`](crate::operation::get_bucket_cors::builders::GetBucketCorsFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`bucket(impl Into<String>)`](crate::operation::get_bucket_cors::builders::GetBucketCorsFluentBuilder::bucket) / [`set_bucket(Option<String>)`](crate::operation::get_bucket_cors::builders::GetBucketCorsFluentBuilder::set_bucket): <p>The bucket name for which to get the cors configuration.</p>
    ///   - [`expected_bucket_owner(impl Into<String>)`](crate::operation::get_bucket_cors::builders::GetBucketCorsFluentBuilder::expected_bucket_owner) / [`set_expected_bucket_owner(Option<String>)`](crate::operation::get_bucket_cors::builders::GetBucketCorsFluentBuilder::set_expected_bucket_owner): <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
    /// - On success, responds with [`GetBucketCorsOutput`](crate::operation::get_bucket_cors::GetBucketCorsOutput) with field(s):
    ///   - [`cors_rules(Option<Vec<CorsRule>>)`](crate::operation::get_bucket_cors::GetBucketCorsOutput::cors_rules): <p>A set of origins and methods (cross-origin access that you want to allow). You can add up to 100 rules to the configuration.</p>
    /// - On failure, responds with [`SdkError<GetBucketCorsError>`](crate::operation::get_bucket_cors::GetBucketCorsError)
    pub fn get_bucket_cors(
        &self,
    ) -> crate::operation::get_bucket_cors::builders::GetBucketCorsFluentBuilder {
        crate::operation::get_bucket_cors::builders::GetBucketCorsFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
