// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetBucketLocation`](crate::operation::get_bucket_location::builders::GetBucketLocationFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`bucket(impl Into<String>)`](crate::operation::get_bucket_location::builders::GetBucketLocationFluentBuilder::bucket) / [`set_bucket(Option<String>)`](crate::operation::get_bucket_location::builders::GetBucketLocationFluentBuilder::set_bucket): <p>The name of the bucket for which to get the location.</p>
    ///   - [`expected_bucket_owner(impl Into<String>)`](crate::operation::get_bucket_location::builders::GetBucketLocationFluentBuilder::expected_bucket_owner) / [`set_expected_bucket_owner(Option<String>)`](crate::operation::get_bucket_location::builders::GetBucketLocationFluentBuilder::set_expected_bucket_owner): <p>The account ID of the expected bucket owner. If the bucket is owned by a different account, the request fails with the HTTP status code <code>403 Forbidden</code> (access denied).</p>
    /// - On success, responds with [`GetBucketLocationOutput`](crate::operation::get_bucket_location::GetBucketLocationOutput) with field(s):
    ///   - [`location_constraint(Option<BucketLocationConstraint>)`](crate::operation::get_bucket_location::GetBucketLocationOutput::location_constraint): <p>Specifies the Region where the bucket resides. For a list of all the Amazon S3 supported location constraints by Region, see <a href="https://docs.aws.amazon.com/general/latest/gr/rande.html#s3_region">Regions and Endpoints</a>. Buckets in Region <code>us-east-1</code> have a LocationConstraint of <code>null</code>.</p>
    /// - On failure, responds with [`SdkError<GetBucketLocationError>`](crate::operation::get_bucket_location::GetBucketLocationError)
    pub fn get_bucket_location(
        &self,
    ) -> crate::operation::get_bucket_location::builders::GetBucketLocationFluentBuilder {
        crate::operation::get_bucket_location::builders::GetBucketLocationFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
