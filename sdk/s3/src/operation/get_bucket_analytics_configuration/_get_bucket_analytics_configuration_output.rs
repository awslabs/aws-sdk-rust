// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GetBucketAnalyticsConfigurationOutput {
    /// <p>The configuration and any analyses for the analytics filter.</p>
    #[doc(hidden)]
    pub analytics_configuration: std::option::Option<crate::types::AnalyticsConfiguration>,
    _extended_request_id: Option<String>,
    _request_id: Option<String>,
}
impl GetBucketAnalyticsConfigurationOutput {
    /// <p>The configuration and any analyses for the analytics filter.</p>
    pub fn analytics_configuration(
        &self,
    ) -> std::option::Option<&crate::types::AnalyticsConfiguration> {
        self.analytics_configuration.as_ref()
    }
}
impl crate::s3_request_id::RequestIdExt for GetBucketAnalyticsConfigurationOutput {
    fn extended_request_id(&self) -> Option<&str> {
        self._extended_request_id.as_deref()
    }
}
impl aws_http::request_id::RequestId for GetBucketAnalyticsConfigurationOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl GetBucketAnalyticsConfigurationOutput {
    /// Creates a new builder-style object to manufacture [`GetBucketAnalyticsConfigurationOutput`](crate::operation::get_bucket_analytics_configuration::GetBucketAnalyticsConfigurationOutput).
    pub fn builder() -> crate::operation::get_bucket_analytics_configuration::builders::GetBucketAnalyticsConfigurationOutputBuilder{
        crate::operation::get_bucket_analytics_configuration::builders::GetBucketAnalyticsConfigurationOutputBuilder::default()
    }
}

/// A builder for [`GetBucketAnalyticsConfigurationOutput`](crate::operation::get_bucket_analytics_configuration::GetBucketAnalyticsConfigurationOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct GetBucketAnalyticsConfigurationOutputBuilder {
    pub(crate) analytics_configuration: std::option::Option<crate::types::AnalyticsConfiguration>,
    _extended_request_id: Option<String>,
    _request_id: Option<String>,
}
impl GetBucketAnalyticsConfigurationOutputBuilder {
    /// <p>The configuration and any analyses for the analytics filter.</p>
    pub fn analytics_configuration(mut self, input: crate::types::AnalyticsConfiguration) -> Self {
        self.analytics_configuration = Some(input);
        self
    }
    /// <p>The configuration and any analyses for the analytics filter.</p>
    pub fn set_analytics_configuration(
        mut self,
        input: std::option::Option<crate::types::AnalyticsConfiguration>,
    ) -> Self {
        self.analytics_configuration = input;
        self
    }
    pub(crate) fn _extended_request_id(mut self, extended_request_id: impl Into<String>) -> Self {
        self._extended_request_id = Some(extended_request_id.into());
        self
    }

    pub(crate) fn _set_extended_request_id(
        &mut self,
        extended_request_id: Option<String>,
    ) -> &mut Self {
        self._extended_request_id = extended_request_id;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`GetBucketAnalyticsConfigurationOutput`](crate::operation::get_bucket_analytics_configuration::GetBucketAnalyticsConfigurationOutput).
    pub fn build(
        self,
    ) -> crate::operation::get_bucket_analytics_configuration::GetBucketAnalyticsConfigurationOutput
    {
        crate::operation::get_bucket_analytics_configuration::GetBucketAnalyticsConfigurationOutput {
            analytics_configuration: self.analytics_configuration
            ,
            _extended_request_id: self._extended_request_id,
            _request_id: self._request_id,
        }
    }
}
