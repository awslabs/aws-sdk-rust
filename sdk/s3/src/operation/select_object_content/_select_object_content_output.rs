// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::fmt::Debug)]
pub struct SelectObjectContentOutput {
    /// <p>The array of results.</p>
    pub payload: ::aws_smithy_http::event_stream::Receiver<
        crate::types::SelectObjectContentEventStream,
        crate::types::error::SelectObjectContentEventStreamError,
    >,
    _extended_request_id: Option<String>,
    _request_id: Option<String>,
}
impl SelectObjectContentOutput {
    /// <p>The array of results.</p>
    pub fn payload(
        &self,
    ) -> &::aws_smithy_http::event_stream::Receiver<
        crate::types::SelectObjectContentEventStream,
        crate::types::error::SelectObjectContentEventStreamError,
    > {
        &self.payload
    }
}
impl crate::s3_request_id::RequestIdExt for SelectObjectContentOutput {
    fn extended_request_id(&self) -> Option<&str> {
        self._extended_request_id.as_deref()
    }
}
impl ::aws_http::request_id::RequestId for SelectObjectContentOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl SelectObjectContentOutput {
    /// Creates a new builder-style object to manufacture [`SelectObjectContentOutput`](crate::operation::select_object_content::SelectObjectContentOutput).
    pub fn builder() -> crate::operation::select_object_content::builders::SelectObjectContentOutputBuilder {
        crate::operation::select_object_content::builders::SelectObjectContentOutputBuilder::default()
    }
}

/// A builder for [`SelectObjectContentOutput`](crate::operation::select_object_content::SelectObjectContentOutput).
#[non_exhaustive]
#[derive(::std::default::Default, ::std::fmt::Debug)]
pub struct SelectObjectContentOutputBuilder {
    pub(crate) payload: ::std::option::Option<
        ::aws_smithy_http::event_stream::Receiver<
            crate::types::SelectObjectContentEventStream,
            crate::types::error::SelectObjectContentEventStreamError,
        >,
    >,
    _extended_request_id: Option<String>,
    _request_id: Option<String>,
}
impl SelectObjectContentOutputBuilder {
    /// <p>The array of results.</p>
    pub fn payload(
        mut self,
        input: ::aws_smithy_http::event_stream::Receiver<
            crate::types::SelectObjectContentEventStream,
            crate::types::error::SelectObjectContentEventStreamError,
        >,
    ) -> Self {
        self.payload = ::std::option::Option::Some(input);
        self
    }
    /// <p>The array of results.</p>
    pub fn set_payload(
        mut self,
        input: ::std::option::Option<
            ::aws_smithy_http::event_stream::Receiver<
                crate::types::SelectObjectContentEventStream,
                crate::types::error::SelectObjectContentEventStreamError,
            >,
        >,
    ) -> Self {
        self.payload = input;
        self
    }
    /// <p>The array of results.</p>
    pub fn get_payload(
        &self,
    ) -> &::std::option::Option<
        ::aws_smithy_http::event_stream::Receiver<
            crate::types::SelectObjectContentEventStream,
            crate::types::error::SelectObjectContentEventStreamError,
        >,
    > {
        &self.payload
    }
    pub(crate) fn _extended_request_id(mut self, extended_request_id: impl Into<String>) -> Self {
        self._extended_request_id = Some(extended_request_id.into());
        self
    }

    pub(crate) fn _set_extended_request_id(&mut self, extended_request_id: Option<String>) -> &mut Self {
        self._extended_request_id = extended_request_id;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`SelectObjectContentOutput`](crate::operation::select_object_content::SelectObjectContentOutput).
    /// This method will fail if any of the following fields are not set:
    /// - [`payload`](crate::operation::select_object_content::builders::SelectObjectContentOutputBuilder::payload)
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::select_object_content::SelectObjectContentOutput, ::aws_smithy_types::error::operation::BuildError>
    {
        ::std::result::Result::Ok(crate::operation::select_object_content::SelectObjectContentOutput {
            payload: self.payload.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "payload",
                    "payload was not specified but it is required when building SelectObjectContentOutput",
                )
            })?,
            _extended_request_id: self._extended_request_id,
            _request_id: self._request_id,
        })
    }
}
