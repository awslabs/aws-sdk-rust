// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Summarizes all DDoS attacks for a specified time period.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AttackSummary {
    /// <p>The unique identifier (ID) of the attack.</p>
    #[doc(hidden)]
    pub attack_id: std::option::Option<std::string::String>,
    /// <p>The ARN (Amazon Resource Name) of the resource that was attacked.</p>
    #[doc(hidden)]
    pub resource_arn: std::option::Option<std::string::String>,
    /// <p>The start time of the attack, in Unix time in seconds. </p>
    #[doc(hidden)]
    pub start_time: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>The end time of the attack, in Unix time in seconds. </p>
    #[doc(hidden)]
    pub end_time: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>The list of attacks for a specified time period.</p>
    #[doc(hidden)]
    pub attack_vectors: std::option::Option<std::vec::Vec<crate::types::AttackVectorDescription>>,
}
impl AttackSummary {
    /// <p>The unique identifier (ID) of the attack.</p>
    pub fn attack_id(&self) -> std::option::Option<&str> {
        self.attack_id.as_deref()
    }
    /// <p>The ARN (Amazon Resource Name) of the resource that was attacked.</p>
    pub fn resource_arn(&self) -> std::option::Option<&str> {
        self.resource_arn.as_deref()
    }
    /// <p>The start time of the attack, in Unix time in seconds. </p>
    pub fn start_time(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.start_time.as_ref()
    }
    /// <p>The end time of the attack, in Unix time in seconds. </p>
    pub fn end_time(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.end_time.as_ref()
    }
    /// <p>The list of attacks for a specified time period.</p>
    pub fn attack_vectors(&self) -> std::option::Option<&[crate::types::AttackVectorDescription]> {
        self.attack_vectors.as_deref()
    }
}
impl AttackSummary {
    /// Creates a new builder-style object to manufacture [`AttackSummary`](crate::types::AttackSummary).
    pub fn builder() -> crate::types::builders::AttackSummaryBuilder {
        crate::types::builders::AttackSummaryBuilder::default()
    }
}

/// A builder for [`AttackSummary`](crate::types::AttackSummary).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AttackSummaryBuilder {
    pub(crate) attack_id: std::option::Option<std::string::String>,
    pub(crate) resource_arn: std::option::Option<std::string::String>,
    pub(crate) start_time: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) end_time: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) attack_vectors:
        std::option::Option<std::vec::Vec<crate::types::AttackVectorDescription>>,
}
impl AttackSummaryBuilder {
    /// <p>The unique identifier (ID) of the attack.</p>
    pub fn attack_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.attack_id = Some(input.into());
        self
    }
    /// <p>The unique identifier (ID) of the attack.</p>
    pub fn set_attack_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.attack_id = input;
        self
    }
    /// <p>The ARN (Amazon Resource Name) of the resource that was attacked.</p>
    pub fn resource_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.resource_arn = Some(input.into());
        self
    }
    /// <p>The ARN (Amazon Resource Name) of the resource that was attacked.</p>
    pub fn set_resource_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.resource_arn = input;
        self
    }
    /// <p>The start time of the attack, in Unix time in seconds. </p>
    pub fn start_time(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.start_time = Some(input);
        self
    }
    /// <p>The start time of the attack, in Unix time in seconds. </p>
    pub fn set_start_time(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.start_time = input;
        self
    }
    /// <p>The end time of the attack, in Unix time in seconds. </p>
    pub fn end_time(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.end_time = Some(input);
        self
    }
    /// <p>The end time of the attack, in Unix time in seconds. </p>
    pub fn set_end_time(mut self, input: std::option::Option<aws_smithy_types::DateTime>) -> Self {
        self.end_time = input;
        self
    }
    /// Appends an item to `attack_vectors`.
    ///
    /// To override the contents of this collection use [`set_attack_vectors`](Self::set_attack_vectors).
    ///
    /// <p>The list of attacks for a specified time period.</p>
    pub fn attack_vectors(mut self, input: crate::types::AttackVectorDescription) -> Self {
        let mut v = self.attack_vectors.unwrap_or_default();
        v.push(input);
        self.attack_vectors = Some(v);
        self
    }
    /// <p>The list of attacks for a specified time period.</p>
    pub fn set_attack_vectors(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::AttackVectorDescription>>,
    ) -> Self {
        self.attack_vectors = input;
        self
    }
    /// Consumes the builder and constructs a [`AttackSummary`](crate::types::AttackSummary).
    pub fn build(self) -> crate::types::AttackSummary {
        crate::types::AttackSummary {
            attack_id: self.attack_id,
            resource_arn: self.resource_arn,
            start_time: self.start_time,
            end_time: self.end_time,
            attack_vectors: self.attack_vectors,
        }
    }
}
