// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub use crate::operation::disassociate_health_check::_disassociate_health_check_output::DisassociateHealthCheckOutputBuilder;

pub use crate::operation::disassociate_health_check::_disassociate_health_check_input::DisassociateHealthCheckInputBuilder;

/// Fluent builder constructing a request to `DisassociateHealthCheck`.
///
/// <p>Removes health-based detection from the Shield Advanced protection for a resource. Shield Advanced health-based detection uses the health of your Amazon Web Services resource to improve responsiveness and accuracy in attack detection and response. </p>
/// <p>You define the health check in Route&nbsp;53 and then associate or disassociate it with your Shield Advanced protection. For more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/ddos-overview.html#ddos-advanced-health-check-option">Shield Advanced Health-Based Detection</a> in the <i>WAF Developer Guide</i>. </p>
#[derive(std::clone::Clone, std::fmt::Debug)]
pub struct DisassociateHealthCheckFluentBuilder {
    handle: std::sync::Arc<crate::client::Handle>,
    inner:
        crate::operation::disassociate_health_check::builders::DisassociateHealthCheckInputBuilder,
}
impl DisassociateHealthCheckFluentBuilder {
    /// Creates a new `DisassociateHealthCheck`.
    pub(crate) fn new(handle: std::sync::Arc<crate::client::Handle>) -> Self {
        Self {
            handle,
            inner: Default::default(),
        }
    }

    /// Consume this builder, creating a customizable operation that can be modified before being
    /// sent. The operation's inner [http::Request] can be modified as well.
    pub async fn customize(
        self,
    ) -> std::result::Result<
        crate::client::customize::CustomizableOperation<
            crate::operation::disassociate_health_check::DisassociateHealthCheck,
            aws_http::retry::AwsResponseRetryClassifier,
        >,
        aws_smithy_http::result::SdkError<
            crate::operation::disassociate_health_check::DisassociateHealthCheckError,
        >,
    > {
        let handle = self.handle.clone();
        let operation = self
            .inner
            .build()
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?
            .make_operation(&handle.conf)
            .await
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?;
        Ok(crate::client::customize::CustomizableOperation { handle, operation })
    }

    /// Sends the request and returns the response.
    ///
    /// If an error occurs, an `SdkError` will be returned with additional details that
    /// can be matched against.
    ///
    /// By default, any retryable failures will be retried twice. Retry behavior
    /// is configurable with the [RetryConfig](aws_smithy_types::retry::RetryConfig), which can be
    /// set when configuring the client.
    pub async fn send(
        self,
    ) -> std::result::Result<
        crate::operation::disassociate_health_check::DisassociateHealthCheckOutput,
        aws_smithy_http::result::SdkError<
            crate::operation::disassociate_health_check::DisassociateHealthCheckError,
        >,
    > {
        let op = self
            .inner
            .build()
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?
            .make_operation(&self.handle.conf)
            .await
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?;
        self.handle.client.call(op).await
    }
    /// <p>The unique identifier (ID) for the <code>Protection</code> object to remove the health check association from. </p>
    pub fn protection_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.inner = self.inner.protection_id(input.into());
        self
    }
    /// <p>The unique identifier (ID) for the <code>Protection</code> object to remove the health check association from. </p>
    pub fn set_protection_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.inner = self.inner.set_protection_id(input);
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the health check that is associated with the protection.</p>
    pub fn health_check_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.inner = self.inner.health_check_arn(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the health check that is associated with the protection.</p>
    pub fn set_health_check_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.inner = self.inner.set_health_check_arn(input);
        self
    }
}
