// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ListProtectionGroupsOutput {
    /// <p></p>
    #[doc(hidden)]
    pub protection_groups: std::option::Option<std::vec::Vec<crate::types::ProtectionGroup>>,
    /// <p>When you request a list of objects from Shield Advanced, if the response does not include all of the remaining available objects, Shield Advanced includes a <code>NextToken</code> value in the response. You can retrieve the next batch of objects by requesting the list again and providing the token that was returned by the prior call in your request. </p>
    /// <p>You can indicate the maximum number of objects that you want Shield Advanced to return for a single call with the <code>MaxResults</code> setting. Shield Advanced will not return more than <code>MaxResults</code> objects, but may return fewer, even if more objects are still available.</p>
    /// <p>Whenever more objects remain that Shield Advanced has not yet returned to you, the response will include a <code>NextToken</code> value.</p>
    #[doc(hidden)]
    pub next_token: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl ListProtectionGroupsOutput {
    /// <p></p>
    pub fn protection_groups(&self) -> std::option::Option<&[crate::types::ProtectionGroup]> {
        self.protection_groups.as_deref()
    }
    /// <p>When you request a list of objects from Shield Advanced, if the response does not include all of the remaining available objects, Shield Advanced includes a <code>NextToken</code> value in the response. You can retrieve the next batch of objects by requesting the list again and providing the token that was returned by the prior call in your request. </p>
    /// <p>You can indicate the maximum number of objects that you want Shield Advanced to return for a single call with the <code>MaxResults</code> setting. Shield Advanced will not return more than <code>MaxResults</code> objects, but may return fewer, even if more objects are still available.</p>
    /// <p>Whenever more objects remain that Shield Advanced has not yet returned to you, the response will include a <code>NextToken</code> value.</p>
    pub fn next_token(&self) -> std::option::Option<&str> {
        self.next_token.as_deref()
    }
}
impl aws_http::request_id::RequestId for ListProtectionGroupsOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl ListProtectionGroupsOutput {
    /// Creates a new builder-style object to manufacture [`ListProtectionGroupsOutput`](crate::operation::list_protection_groups::ListProtectionGroupsOutput).
    pub fn builder(
    ) -> crate::operation::list_protection_groups::builders::ListProtectionGroupsOutputBuilder {
        crate::operation::list_protection_groups::builders::ListProtectionGroupsOutputBuilder::default()
    }
}

/// A builder for [`ListProtectionGroupsOutput`](crate::operation::list_protection_groups::ListProtectionGroupsOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ListProtectionGroupsOutputBuilder {
    pub(crate) protection_groups: std::option::Option<std::vec::Vec<crate::types::ProtectionGroup>>,
    pub(crate) next_token: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl ListProtectionGroupsOutputBuilder {
    /// Appends an item to `protection_groups`.
    ///
    /// To override the contents of this collection use [`set_protection_groups`](Self::set_protection_groups).
    ///
    /// <p></p>
    pub fn protection_groups(mut self, input: crate::types::ProtectionGroup) -> Self {
        let mut v = self.protection_groups.unwrap_or_default();
        v.push(input);
        self.protection_groups = Some(v);
        self
    }
    /// <p></p>
    pub fn set_protection_groups(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::ProtectionGroup>>,
    ) -> Self {
        self.protection_groups = input;
        self
    }
    /// <p>When you request a list of objects from Shield Advanced, if the response does not include all of the remaining available objects, Shield Advanced includes a <code>NextToken</code> value in the response. You can retrieve the next batch of objects by requesting the list again and providing the token that was returned by the prior call in your request. </p>
    /// <p>You can indicate the maximum number of objects that you want Shield Advanced to return for a single call with the <code>MaxResults</code> setting. Shield Advanced will not return more than <code>MaxResults</code> objects, but may return fewer, even if more objects are still available.</p>
    /// <p>Whenever more objects remain that Shield Advanced has not yet returned to you, the response will include a <code>NextToken</code> value.</p>
    pub fn next_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.next_token = Some(input.into());
        self
    }
    /// <p>When you request a list of objects from Shield Advanced, if the response does not include all of the remaining available objects, Shield Advanced includes a <code>NextToken</code> value in the response. You can retrieve the next batch of objects by requesting the list again and providing the token that was returned by the prior call in your request. </p>
    /// <p>You can indicate the maximum number of objects that you want Shield Advanced to return for a single call with the <code>MaxResults</code> setting. Shield Advanced will not return more than <code>MaxResults</code> objects, but may return fewer, even if more objects are still available.</p>
    /// <p>Whenever more objects remain that Shield Advanced has not yet returned to you, the response will include a <code>NextToken</code> value.</p>
    pub fn set_next_token(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`ListProtectionGroupsOutput`](crate::operation::list_protection_groups::ListProtectionGroupsOutput).
    pub fn build(self) -> crate::operation::list_protection_groups::ListProtectionGroupsOutput {
        crate::operation::list_protection_groups::ListProtectionGroupsOutput {
            protection_groups: self.protection_groups,
            next_token: self.next_token,
            _request_id: self._request_id,
        }
    }
}
