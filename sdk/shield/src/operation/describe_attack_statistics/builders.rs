// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub use crate::operation::describe_attack_statistics::_describe_attack_statistics_output::DescribeAttackStatisticsOutputBuilder;

pub use crate::operation::describe_attack_statistics::_describe_attack_statistics_input::DescribeAttackStatisticsInputBuilder;

impl crate::operation::describe_attack_statistics::builders::DescribeAttackStatisticsInputBuilder {
    /// Sends a request with this input using the given client.
    pub async fn send_with(
        self,
        client: &crate::Client,
    ) -> ::std::result::Result<
        crate::operation::describe_attack_statistics::DescribeAttackStatisticsOutput,
        ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::describe_attack_statistics::DescribeAttackStatisticsError,
            ::aws_smithy_runtime_api::client::orchestrator::HttpResponse,
        >,
    > {
        let mut fluent_builder = client.describe_attack_statistics();
        fluent_builder.inner = self;
        fluent_builder.send().await
    }
}
/// Fluent builder constructing a request to `DescribeAttackStatistics`.
///
/// <p>Provides information about the number and type of attacks Shield has detected in the last year for all resources that belong to your account, regardless of whether you've defined Shield protections for them. This operation is available to Shield customers as well as to Shield Advanced customers.</p>
/// <p>The operation returns data for the time range of midnight UTC, one year ago, to midnight UTC, today. For example, if the current time is <code>2020-10-26 15:39:32 PDT</code>, equal to <code>2020-10-26 22:39:32 UTC</code>, then the time range for the attack data returned is from <code>2019-10-26 00:00:00 UTC</code> to <code>2020-10-26 00:00:00 UTC</code>.</p>
/// <p>The time range indicates the period covered by the attack statistics data items.</p>
#[derive(::std::clone::Clone, ::std::fmt::Debug)]
pub struct DescribeAttackStatisticsFluentBuilder {
    handle: ::std::sync::Arc<crate::client::Handle>,
    inner: crate::operation::describe_attack_statistics::builders::DescribeAttackStatisticsInputBuilder,
    config_override: ::std::option::Option<crate::config::Builder>,
}
impl
    crate::client::customize::internal::CustomizableSend<
        crate::operation::describe_attack_statistics::DescribeAttackStatisticsOutput,
        crate::operation::describe_attack_statistics::DescribeAttackStatisticsError,
    > for DescribeAttackStatisticsFluentBuilder
{
    fn send(
        self,
        config_override: crate::config::Builder,
    ) -> crate::client::customize::internal::BoxFuture<
        crate::client::customize::internal::SendResult<
            crate::operation::describe_attack_statistics::DescribeAttackStatisticsOutput,
            crate::operation::describe_attack_statistics::DescribeAttackStatisticsError,
        >,
    > {
        ::std::boxed::Box::pin(async move { self.config_override(config_override).send().await })
    }
}
impl DescribeAttackStatisticsFluentBuilder {
    /// Creates a new `DescribeAttackStatistics`.
    pub(crate) fn new(handle: ::std::sync::Arc<crate::client::Handle>) -> Self {
        Self {
            handle,
            inner: ::std::default::Default::default(),
            config_override: ::std::option::Option::None,
        }
    }
    /// Access the DescribeAttackStatistics as a reference.
    pub fn as_input(&self) -> &crate::operation::describe_attack_statistics::builders::DescribeAttackStatisticsInputBuilder {
        &self.inner
    }
    /// Sends the request and returns the response.
    ///
    /// If an error occurs, an `SdkError` will be returned with additional details that
    /// can be matched against.
    ///
    /// By default, any retryable failures will be retried twice. Retry behavior
    /// is configurable with the [RetryConfig](aws_smithy_types::retry::RetryConfig), which can be
    /// set when configuring the client.
    pub async fn send(
        self,
    ) -> ::std::result::Result<
        crate::operation::describe_attack_statistics::DescribeAttackStatisticsOutput,
        ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::describe_attack_statistics::DescribeAttackStatisticsError,
            ::aws_smithy_runtime_api::client::orchestrator::HttpResponse,
        >,
    > {
        let input = self
            .inner
            .build()
            .map_err(::aws_smithy_runtime_api::client::result::SdkError::construction_failure)?;
        let runtime_plugins = crate::operation::describe_attack_statistics::DescribeAttackStatistics::operation_runtime_plugins(
            self.handle.runtime_plugins.clone(),
            &self.handle.conf,
            self.config_override,
        );
        crate::operation::describe_attack_statistics::DescribeAttackStatistics::orchestrate(&runtime_plugins, input).await
    }

    /// Consumes this builder, creating a customizable operation that can be modified before being sent.
    pub fn customize(
        self,
    ) -> crate::client::customize::CustomizableOperation<
        crate::operation::describe_attack_statistics::DescribeAttackStatisticsOutput,
        crate::operation::describe_attack_statistics::DescribeAttackStatisticsError,
        Self,
    > {
        crate::client::customize::CustomizableOperation::new(self)
    }
    pub(crate) fn config_override(mut self, config_override: impl ::std::convert::Into<crate::config::Builder>) -> Self {
        self.set_config_override(::std::option::Option::Some(config_override.into()));
        self
    }

    pub(crate) fn set_config_override(&mut self, config_override: ::std::option::Option<crate::config::Builder>) -> &mut Self {
        self.config_override = config_override;
        self
    }
}
