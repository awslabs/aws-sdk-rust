// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct UpdateEmergencyContactSettingsInput {
    /// <p>A list of email addresses and phone numbers that the Shield Response Team (SRT) can use to contact you if you have proactive engagement enabled, for escalations to the SRT and to initiate proactive customer support.</p>
    /// <p>If you have proactive engagement enabled, the contact list must include at least one phone number.</p>
    #[doc(hidden)]
    pub emergency_contact_list: std::option::Option<std::vec::Vec<crate::types::EmergencyContact>>,
}
impl UpdateEmergencyContactSettingsInput {
    /// <p>A list of email addresses and phone numbers that the Shield Response Team (SRT) can use to contact you if you have proactive engagement enabled, for escalations to the SRT and to initiate proactive customer support.</p>
    /// <p>If you have proactive engagement enabled, the contact list must include at least one phone number.</p>
    pub fn emergency_contact_list(&self) -> std::option::Option<&[crate::types::EmergencyContact]> {
        self.emergency_contact_list.as_deref()
    }
}
impl UpdateEmergencyContactSettingsInput {
    /// Creates a new builder-style object to manufacture [`UpdateEmergencyContactSettingsInput`](crate::operation::update_emergency_contact_settings::UpdateEmergencyContactSettingsInput).
    pub fn builder() -> crate::operation::update_emergency_contact_settings::builders::UpdateEmergencyContactSettingsInputBuilder{
        crate::operation::update_emergency_contact_settings::builders::UpdateEmergencyContactSettingsInputBuilder::default()
    }
}

/// A builder for [`UpdateEmergencyContactSettingsInput`](crate::operation::update_emergency_contact_settings::UpdateEmergencyContactSettingsInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct UpdateEmergencyContactSettingsInputBuilder {
    pub(crate) emergency_contact_list:
        std::option::Option<std::vec::Vec<crate::types::EmergencyContact>>,
}
impl UpdateEmergencyContactSettingsInputBuilder {
    /// Appends an item to `emergency_contact_list`.
    ///
    /// To override the contents of this collection use [`set_emergency_contact_list`](Self::set_emergency_contact_list).
    ///
    /// <p>A list of email addresses and phone numbers that the Shield Response Team (SRT) can use to contact you if you have proactive engagement enabled, for escalations to the SRT and to initiate proactive customer support.</p>
    /// <p>If you have proactive engagement enabled, the contact list must include at least one phone number.</p>
    pub fn emergency_contact_list(mut self, input: crate::types::EmergencyContact) -> Self {
        let mut v = self.emergency_contact_list.unwrap_or_default();
        v.push(input);
        self.emergency_contact_list = Some(v);
        self
    }
    /// <p>A list of email addresses and phone numbers that the Shield Response Team (SRT) can use to contact you if you have proactive engagement enabled, for escalations to the SRT and to initiate proactive customer support.</p>
    /// <p>If you have proactive engagement enabled, the contact list must include at least one phone number.</p>
    pub fn set_emergency_contact_list(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::EmergencyContact>>,
    ) -> Self {
        self.emergency_contact_list = input;
        self
    }
    /// Consumes the builder and constructs a [`UpdateEmergencyContactSettingsInput`](crate::operation::update_emergency_contact_settings::UpdateEmergencyContactSettingsInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::update_emergency_contact_settings::UpdateEmergencyContactSettingsInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::update_emergency_contact_settings::UpdateEmergencyContactSettingsInput {
                emergency_contact_list: self.emergency_contact_list
                ,
            }
        )
    }
}
