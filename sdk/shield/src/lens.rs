// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) fn reflens_structure_crate_output_list_attacks_output_next_token(
    input: &crate::output::ListAttacksOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_structure_crate_output_list_protection_groups_output_next_token(
    input: &crate::output::ListProtectionGroupsOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_structure_crate_output_list_protections_output_next_token(
    input: &crate::output::ListProtectionsOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_structure_crate_output_list_resources_in_protection_group_output_next_token(
    input: &crate::output::ListResourcesInProtectionGroupOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn lens_structure_crate_output_list_attacks_output_attack_summaries(
    input: crate::output::ListAttacksOutput,
) -> std::option::Option<std::vec::Vec<crate::model::AttackSummary>> {
    let input = match input.attack_summaries {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn lens_structure_crate_output_list_protections_output_protections(
    input: crate::output::ListProtectionsOutput,
) -> std::option::Option<std::vec::Vec<crate::model::Protection>> {
    let input = match input.protections {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}
