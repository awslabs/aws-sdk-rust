// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn serialize_structure_crate_input_associate_drt_log_bucket_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::AssociateDrtLogBucketInput,
) {
    if let Some(var_1) = &input.log_bucket {
        object.key("LogBucket").string(var_1);
    }
}

pub fn serialize_structure_crate_input_associate_drt_role_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::AssociateDrtRoleInput,
) {
    if let Some(var_2) = &input.role_arn {
        object.key("RoleArn").string(var_2);
    }
}

pub fn serialize_structure_crate_input_associate_health_check_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::AssociateHealthCheckInput,
) {
    if let Some(var_3) = &input.protection_id {
        object.key("ProtectionId").string(var_3);
    }
    if let Some(var_4) = &input.health_check_arn {
        object.key("HealthCheckArn").string(var_4);
    }
}

pub fn serialize_structure_crate_input_associate_proactive_engagement_details_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::AssociateProactiveEngagementDetailsInput,
) {
    if let Some(var_5) = &input.emergency_contact_list {
        let mut array_6 = object.key("EmergencyContactList").start_array();
        for item_7 in var_5 {
            {
                let mut object_8 = array_6.value().start_object();
                crate::json_ser::serialize_structure_crate_model_emergency_contact(
                    &mut object_8,
                    item_7,
                );
                object_8.finish();
            }
        }
        array_6.finish();
    }
}

pub fn serialize_structure_crate_input_create_protection_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateProtectionInput,
) {
    if let Some(var_9) = &input.name {
        object.key("Name").string(var_9);
    }
    if let Some(var_10) = &input.resource_arn {
        object.key("ResourceArn").string(var_10);
    }
    if let Some(var_11) = &input.tags {
        let mut array_12 = object.key("Tags").start_array();
        for item_13 in var_11 {
            {
                let mut object_14 = array_12.value().start_object();
                crate::json_ser::serialize_structure_crate_model_tag(&mut object_14, item_13);
                object_14.finish();
            }
        }
        array_12.finish();
    }
}

pub fn serialize_structure_crate_input_create_protection_group_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateProtectionGroupInput,
) {
    if let Some(var_15) = &input.protection_group_id {
        object.key("ProtectionGroupId").string(var_15);
    }
    if let Some(var_16) = &input.aggregation {
        object.key("Aggregation").string(var_16.as_str());
    }
    if let Some(var_17) = &input.pattern {
        object.key("Pattern").string(var_17.as_str());
    }
    if let Some(var_18) = &input.resource_type {
        object.key("ResourceType").string(var_18.as_str());
    }
    if let Some(var_19) = &input.members {
        let mut array_20 = object.key("Members").start_array();
        for item_21 in var_19 {
            {
                array_20.value().string(item_21);
            }
        }
        array_20.finish();
    }
    if let Some(var_22) = &input.tags {
        let mut array_23 = object.key("Tags").start_array();
        for item_24 in var_22 {
            {
                let mut object_25 = array_23.value().start_object();
                crate::json_ser::serialize_structure_crate_model_tag(&mut object_25, item_24);
                object_25.finish();
            }
        }
        array_23.finish();
    }
}

pub fn serialize_structure_crate_input_delete_protection_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DeleteProtectionInput,
) {
    if let Some(var_26) = &input.protection_id {
        object.key("ProtectionId").string(var_26);
    }
}

pub fn serialize_structure_crate_input_delete_protection_group_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DeleteProtectionGroupInput,
) {
    if let Some(var_27) = &input.protection_group_id {
        object.key("ProtectionGroupId").string(var_27);
    }
}

pub fn serialize_structure_crate_input_describe_attack_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DescribeAttackInput,
) {
    if let Some(var_28) = &input.attack_id {
        object.key("AttackId").string(var_28);
    }
}

pub fn serialize_structure_crate_input_describe_protection_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DescribeProtectionInput,
) {
    if let Some(var_29) = &input.protection_id {
        object.key("ProtectionId").string(var_29);
    }
    if let Some(var_30) = &input.resource_arn {
        object.key("ResourceArn").string(var_30);
    }
}

pub fn serialize_structure_crate_input_describe_protection_group_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DescribeProtectionGroupInput,
) {
    if let Some(var_31) = &input.protection_group_id {
        object.key("ProtectionGroupId").string(var_31);
    }
}

pub fn serialize_structure_crate_input_disassociate_drt_log_bucket_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DisassociateDrtLogBucketInput,
) {
    if let Some(var_32) = &input.log_bucket {
        object.key("LogBucket").string(var_32);
    }
}

pub fn serialize_structure_crate_input_disassociate_health_check_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DisassociateHealthCheckInput,
) {
    if let Some(var_33) = &input.protection_id {
        object.key("ProtectionId").string(var_33);
    }
    if let Some(var_34) = &input.health_check_arn {
        object.key("HealthCheckArn").string(var_34);
    }
}

pub fn serialize_structure_crate_input_list_attacks_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::ListAttacksInput,
) {
    if let Some(var_35) = &input.resource_arns {
        let mut array_36 = object.key("ResourceArns").start_array();
        for item_37 in var_35 {
            {
                array_36.value().string(item_37);
            }
        }
        array_36.finish();
    }
    if let Some(var_38) = &input.start_time {
        let mut object_39 = object.key("StartTime").start_object();
        crate::json_ser::serialize_structure_crate_model_time_range(&mut object_39, var_38);
        object_39.finish();
    }
    if let Some(var_40) = &input.end_time {
        let mut object_41 = object.key("EndTime").start_object();
        crate::json_ser::serialize_structure_crate_model_time_range(&mut object_41, var_40);
        object_41.finish();
    }
    if let Some(var_42) = &input.next_token {
        object.key("NextToken").string(var_42);
    }
    if let Some(var_43) = &input.max_results {
        object.key("MaxResults").number(
            #[allow(clippy::useless_conversion)]
            smithy_types::Number::NegInt((*var_43).into()),
        );
    }
}

pub fn serialize_structure_crate_input_list_protection_groups_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::ListProtectionGroupsInput,
) {
    if let Some(var_44) = &input.next_token {
        object.key("NextToken").string(var_44);
    }
    if let Some(var_45) = &input.max_results {
        object.key("MaxResults").number(
            #[allow(clippy::useless_conversion)]
            smithy_types::Number::NegInt((*var_45).into()),
        );
    }
}

pub fn serialize_structure_crate_input_list_protections_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::ListProtectionsInput,
) {
    if let Some(var_46) = &input.next_token {
        object.key("NextToken").string(var_46);
    }
    if let Some(var_47) = &input.max_results {
        object.key("MaxResults").number(
            #[allow(clippy::useless_conversion)]
            smithy_types::Number::NegInt((*var_47).into()),
        );
    }
}

pub fn serialize_structure_crate_input_list_resources_in_protection_group_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::ListResourcesInProtectionGroupInput,
) {
    if let Some(var_48) = &input.protection_group_id {
        object.key("ProtectionGroupId").string(var_48);
    }
    if let Some(var_49) = &input.next_token {
        object.key("NextToken").string(var_49);
    }
    if let Some(var_50) = &input.max_results {
        object.key("MaxResults").number(
            #[allow(clippy::useless_conversion)]
            smithy_types::Number::NegInt((*var_50).into()),
        );
    }
}

pub fn serialize_structure_crate_input_list_tags_for_resource_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::ListTagsForResourceInput,
) {
    if let Some(var_51) = &input.resource_arn {
        object.key("ResourceARN").string(var_51);
    }
}

pub fn serialize_structure_crate_input_tag_resource_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::TagResourceInput,
) {
    if let Some(var_52) = &input.resource_arn {
        object.key("ResourceARN").string(var_52);
    }
    if let Some(var_53) = &input.tags {
        let mut array_54 = object.key("Tags").start_array();
        for item_55 in var_53 {
            {
                let mut object_56 = array_54.value().start_object();
                crate::json_ser::serialize_structure_crate_model_tag(&mut object_56, item_55);
                object_56.finish();
            }
        }
        array_54.finish();
    }
}

pub fn serialize_structure_crate_input_untag_resource_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UntagResourceInput,
) {
    if let Some(var_57) = &input.resource_arn {
        object.key("ResourceARN").string(var_57);
    }
    if let Some(var_58) = &input.tag_keys {
        let mut array_59 = object.key("TagKeys").start_array();
        for item_60 in var_58 {
            {
                array_59.value().string(item_60);
            }
        }
        array_59.finish();
    }
}

pub fn serialize_structure_crate_input_update_emergency_contact_settings_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateEmergencyContactSettingsInput,
) {
    if let Some(var_61) = &input.emergency_contact_list {
        let mut array_62 = object.key("EmergencyContactList").start_array();
        for item_63 in var_61 {
            {
                let mut object_64 = array_62.value().start_object();
                crate::json_ser::serialize_structure_crate_model_emergency_contact(
                    &mut object_64,
                    item_63,
                );
                object_64.finish();
            }
        }
        array_62.finish();
    }
}

pub fn serialize_structure_crate_input_update_protection_group_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateProtectionGroupInput,
) {
    if let Some(var_65) = &input.protection_group_id {
        object.key("ProtectionGroupId").string(var_65);
    }
    if let Some(var_66) = &input.aggregation {
        object.key("Aggregation").string(var_66.as_str());
    }
    if let Some(var_67) = &input.pattern {
        object.key("Pattern").string(var_67.as_str());
    }
    if let Some(var_68) = &input.resource_type {
        object.key("ResourceType").string(var_68.as_str());
    }
    if let Some(var_69) = &input.members {
        let mut array_70 = object.key("Members").start_array();
        for item_71 in var_69 {
            {
                array_70.value().string(item_71);
            }
        }
        array_70.finish();
    }
}

pub fn serialize_structure_crate_input_update_subscription_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateSubscriptionInput,
) {
    if let Some(var_72) = &input.auto_renew {
        object.key("AutoRenew").string(var_72.as_str());
    }
}

pub fn serialize_structure_crate_model_emergency_contact(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::EmergencyContact,
) {
    if let Some(var_73) = &input.email_address {
        object.key("EmailAddress").string(var_73);
    }
    if let Some(var_74) = &input.phone_number {
        object.key("PhoneNumber").string(var_74);
    }
    if let Some(var_75) = &input.contact_notes {
        object.key("ContactNotes").string(var_75);
    }
}

pub fn serialize_structure_crate_model_tag(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::Tag,
) {
    if let Some(var_76) = &input.key {
        object.key("Key").string(var_76);
    }
    if let Some(var_77) = &input.value {
        object.key("Value").string(var_77);
    }
}

pub fn serialize_structure_crate_model_time_range(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::TimeRange,
) {
    if let Some(var_78) = &input.from_inclusive {
        object
            .key("FromInclusive")
            .instant(var_78, smithy_types::instant::Format::EpochSeconds);
    }
    if let Some(var_79) = &input.to_exclusive {
        object
            .key("ToExclusive")
            .instant(var_79, smithy_types::instant::Format::EpochSeconds);
    }
}
