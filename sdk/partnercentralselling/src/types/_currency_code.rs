// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// When writing a match expression against `CurrencyCode`, it is important to ensure
/// your code is forward-compatible. That is, if a match arm handles a case for a
/// feature that is supported by the service but has not been represented as an enum
/// variant in a current version of SDK, your code should continue to work when you
/// upgrade SDK to a future version in which the enum does include a variant for that
/// feature.
///
/// Here is an example of how you can make a match expression forward-compatible:
///
/// ```text
/// # let currencycode = unimplemented!();
/// match currencycode {
///     CurrencyCode::Aed => { /* ... */ },
///     CurrencyCode::Afn => { /* ... */ },
///     CurrencyCode::All => { /* ... */ },
///     CurrencyCode::Amd => { /* ... */ },
///     CurrencyCode::Ang => { /* ... */ },
///     CurrencyCode::Aoa => { /* ... */ },
///     CurrencyCode::Ars => { /* ... */ },
///     CurrencyCode::Aud => { /* ... */ },
///     CurrencyCode::Awg => { /* ... */ },
///     CurrencyCode::Azn => { /* ... */ },
///     CurrencyCode::Bam => { /* ... */ },
///     CurrencyCode::Bbd => { /* ... */ },
///     CurrencyCode::Bdt => { /* ... */ },
///     CurrencyCode::Bgn => { /* ... */ },
///     CurrencyCode::Bhd => { /* ... */ },
///     CurrencyCode::Bif => { /* ... */ },
///     CurrencyCode::Bmd => { /* ... */ },
///     CurrencyCode::Bnd => { /* ... */ },
///     CurrencyCode::Bob => { /* ... */ },
///     CurrencyCode::Bov => { /* ... */ },
///     CurrencyCode::Brl => { /* ... */ },
///     CurrencyCode::Bsd => { /* ... */ },
///     CurrencyCode::Btn => { /* ... */ },
///     CurrencyCode::Bwp => { /* ... */ },
///     CurrencyCode::Byn => { /* ... */ },
///     CurrencyCode::Bzd => { /* ... */ },
///     CurrencyCode::Cad => { /* ... */ },
///     CurrencyCode::Cdf => { /* ... */ },
///     CurrencyCode::Che => { /* ... */ },
///     CurrencyCode::Chf => { /* ... */ },
///     CurrencyCode::Chw => { /* ... */ },
///     CurrencyCode::Clf => { /* ... */ },
///     CurrencyCode::Clp => { /* ... */ },
///     CurrencyCode::Cny => { /* ... */ },
///     CurrencyCode::Cop => { /* ... */ },
///     CurrencyCode::Cou => { /* ... */ },
///     CurrencyCode::Crc => { /* ... */ },
///     CurrencyCode::Cuc => { /* ... */ },
///     CurrencyCode::Cup => { /* ... */ },
///     CurrencyCode::Cve => { /* ... */ },
///     CurrencyCode::Czk => { /* ... */ },
///     CurrencyCode::Djf => { /* ... */ },
///     CurrencyCode::Dkk => { /* ... */ },
///     CurrencyCode::Dop => { /* ... */ },
///     CurrencyCode::Dzd => { /* ... */ },
///     CurrencyCode::Egp => { /* ... */ },
///     CurrencyCode::Ern => { /* ... */ },
///     CurrencyCode::Etb => { /* ... */ },
///     CurrencyCode::Eur => { /* ... */ },
///     CurrencyCode::Fjd => { /* ... */ },
///     CurrencyCode::Fkp => { /* ... */ },
///     CurrencyCode::Gbp => { /* ... */ },
///     CurrencyCode::Gel => { /* ... */ },
///     CurrencyCode::Ghs => { /* ... */ },
///     CurrencyCode::Gip => { /* ... */ },
///     CurrencyCode::Gmd => { /* ... */ },
///     CurrencyCode::Gnf => { /* ... */ },
///     CurrencyCode::Gtq => { /* ... */ },
///     CurrencyCode::Gyd => { /* ... */ },
///     CurrencyCode::Hkd => { /* ... */ },
///     CurrencyCode::Hnl => { /* ... */ },
///     CurrencyCode::Hrk => { /* ... */ },
///     CurrencyCode::Htg => { /* ... */ },
///     CurrencyCode::Huf => { /* ... */ },
///     CurrencyCode::Idr => { /* ... */ },
///     CurrencyCode::Ils => { /* ... */ },
///     CurrencyCode::Inr => { /* ... */ },
///     CurrencyCode::Iqd => { /* ... */ },
///     CurrencyCode::Irr => { /* ... */ },
///     CurrencyCode::Isk => { /* ... */ },
///     CurrencyCode::Jmd => { /* ... */ },
///     CurrencyCode::Jod => { /* ... */ },
///     CurrencyCode::Jpy => { /* ... */ },
///     CurrencyCode::Kes => { /* ... */ },
///     CurrencyCode::Kgs => { /* ... */ },
///     CurrencyCode::Khr => { /* ... */ },
///     CurrencyCode::Kmf => { /* ... */ },
///     CurrencyCode::Kpw => { /* ... */ },
///     CurrencyCode::Krw => { /* ... */ },
///     CurrencyCode::Kwd => { /* ... */ },
///     CurrencyCode::Kyd => { /* ... */ },
///     CurrencyCode::Kzt => { /* ... */ },
///     CurrencyCode::Lak => { /* ... */ },
///     CurrencyCode::Lbp => { /* ... */ },
///     CurrencyCode::Lkr => { /* ... */ },
///     CurrencyCode::Lrd => { /* ... */ },
///     CurrencyCode::Lsl => { /* ... */ },
///     CurrencyCode::Lyd => { /* ... */ },
///     CurrencyCode::Mad => { /* ... */ },
///     CurrencyCode::Mdl => { /* ... */ },
///     CurrencyCode::Mga => { /* ... */ },
///     CurrencyCode::Mkd => { /* ... */ },
///     CurrencyCode::Mmk => { /* ... */ },
///     CurrencyCode::Mnt => { /* ... */ },
///     CurrencyCode::Mop => { /* ... */ },
///     CurrencyCode::Mru => { /* ... */ },
///     CurrencyCode::Mur => { /* ... */ },
///     CurrencyCode::Mvr => { /* ... */ },
///     CurrencyCode::Mwk => { /* ... */ },
///     CurrencyCode::Mxn => { /* ... */ },
///     CurrencyCode::Mxv => { /* ... */ },
///     CurrencyCode::Myr => { /* ... */ },
///     CurrencyCode::Mzn => { /* ... */ },
///     CurrencyCode::Nad => { /* ... */ },
///     CurrencyCode::Ngn => { /* ... */ },
///     CurrencyCode::Nio => { /* ... */ },
///     CurrencyCode::Nok => { /* ... */ },
///     CurrencyCode::Npr => { /* ... */ },
///     CurrencyCode::Nzd => { /* ... */ },
///     CurrencyCode::Omr => { /* ... */ },
///     CurrencyCode::Pab => { /* ... */ },
///     CurrencyCode::Pen => { /* ... */ },
///     CurrencyCode::Pgk => { /* ... */ },
///     CurrencyCode::Php => { /* ... */ },
///     CurrencyCode::Pkr => { /* ... */ },
///     CurrencyCode::Pln => { /* ... */ },
///     CurrencyCode::Pyg => { /* ... */ },
///     CurrencyCode::Qar => { /* ... */ },
///     CurrencyCode::Ron => { /* ... */ },
///     CurrencyCode::Rsd => { /* ... */ },
///     CurrencyCode::Rub => { /* ... */ },
///     CurrencyCode::Rwf => { /* ... */ },
///     CurrencyCode::Sar => { /* ... */ },
///     CurrencyCode::Sbd => { /* ... */ },
///     CurrencyCode::Scr => { /* ... */ },
///     CurrencyCode::Sdg => { /* ... */ },
///     CurrencyCode::Sek => { /* ... */ },
///     CurrencyCode::Sgd => { /* ... */ },
///     CurrencyCode::Shp => { /* ... */ },
///     CurrencyCode::Sll => { /* ... */ },
///     CurrencyCode::Sos => { /* ... */ },
///     CurrencyCode::Srd => { /* ... */ },
///     CurrencyCode::Ssp => { /* ... */ },
///     CurrencyCode::Stn => { /* ... */ },
///     CurrencyCode::Svc => { /* ... */ },
///     CurrencyCode::Syp => { /* ... */ },
///     CurrencyCode::Szl => { /* ... */ },
///     CurrencyCode::Thb => { /* ... */ },
///     CurrencyCode::Tjs => { /* ... */ },
///     CurrencyCode::Tmt => { /* ... */ },
///     CurrencyCode::Tnd => { /* ... */ },
///     CurrencyCode::Top => { /* ... */ },
///     CurrencyCode::Try => { /* ... */ },
///     CurrencyCode::Ttd => { /* ... */ },
///     CurrencyCode::Twd => { /* ... */ },
///     CurrencyCode::Tzs => { /* ... */ },
///     CurrencyCode::Uah => { /* ... */ },
///     CurrencyCode::Ugx => { /* ... */ },
///     CurrencyCode::Usd => { /* ... */ },
///     CurrencyCode::Usn => { /* ... */ },
///     CurrencyCode::Uyi => { /* ... */ },
///     CurrencyCode::Uyu => { /* ... */ },
///     CurrencyCode::Uzs => { /* ... */ },
///     CurrencyCode::Vef => { /* ... */ },
///     CurrencyCode::Vnd => { /* ... */ },
///     CurrencyCode::Vuv => { /* ... */ },
///     CurrencyCode::Wst => { /* ... */ },
///     CurrencyCode::Xaf => { /* ... */ },
///     CurrencyCode::Xcd => { /* ... */ },
///     CurrencyCode::Xdr => { /* ... */ },
///     CurrencyCode::Xof => { /* ... */ },
///     CurrencyCode::Xpf => { /* ... */ },
///     CurrencyCode::Xsu => { /* ... */ },
///     CurrencyCode::Xua => { /* ... */ },
///     CurrencyCode::Yer => { /* ... */ },
///     CurrencyCode::Zar => { /* ... */ },
///     CurrencyCode::Zmw => { /* ... */ },
///     CurrencyCode::Zwl => { /* ... */ },
///     other @ _ if other.as_str() == "NewFeature" => { /* handles a case for `NewFeature` */ },
///     _ => { /* ... */ },
/// }
/// ```
/// The above code demonstrates that when `currencycode` represents
/// `NewFeature`, the execution path will lead to the second last match arm,
/// even though the enum does not contain a variant `CurrencyCode::NewFeature`
/// in the current version of SDK. The reason is that the variable `other`,
/// created by the `@` operator, is bound to
/// `CurrencyCode::Unknown(UnknownVariantValue("NewFeature".to_owned()))`
/// and calling `as_str` on it yields `"NewFeature"`.
/// This match expression is forward-compatible when executed with a newer
/// version of SDK where the variant `CurrencyCode::NewFeature` is defined.
/// Specifically, when `currencycode` represents `NewFeature`,
/// the execution path will hit the second last match arm as before by virtue of
/// calling `as_str` on `CurrencyCode::NewFeature` also yielding `"NewFeature"`.
///
/// Explicitly matching on the `Unknown` variant should
/// be avoided for two reasons:
/// - The inner data `UnknownVariantValue` is opaque, and no further information can be extracted.
/// - It might inadvertently shadow other intended match arms.
///
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::Eq, ::std::cmp::Ord, ::std::cmp::PartialEq, ::std::cmp::PartialOrd, ::std::hash::Hash)]
pub enum CurrencyCode {
    #[allow(missing_docs)] // documentation missing in model
    Aed,
    #[allow(missing_docs)] // documentation missing in model
    Afn,
    #[allow(missing_docs)] // documentation missing in model
    All,
    #[allow(missing_docs)] // documentation missing in model
    Amd,
    #[allow(missing_docs)] // documentation missing in model
    Ang,
    #[allow(missing_docs)] // documentation missing in model
    Aoa,
    #[allow(missing_docs)] // documentation missing in model
    Ars,
    #[allow(missing_docs)] // documentation missing in model
    Aud,
    #[allow(missing_docs)] // documentation missing in model
    Awg,
    #[allow(missing_docs)] // documentation missing in model
    Azn,
    #[allow(missing_docs)] // documentation missing in model
    Bam,
    #[allow(missing_docs)] // documentation missing in model
    Bbd,
    #[allow(missing_docs)] // documentation missing in model
    Bdt,
    #[allow(missing_docs)] // documentation missing in model
    Bgn,
    #[allow(missing_docs)] // documentation missing in model
    Bhd,
    #[allow(missing_docs)] // documentation missing in model
    Bif,
    #[allow(missing_docs)] // documentation missing in model
    Bmd,
    #[allow(missing_docs)] // documentation missing in model
    Bnd,
    #[allow(missing_docs)] // documentation missing in model
    Bob,
    #[allow(missing_docs)] // documentation missing in model
    Bov,
    #[allow(missing_docs)] // documentation missing in model
    Brl,
    #[allow(missing_docs)] // documentation missing in model
    Bsd,
    #[allow(missing_docs)] // documentation missing in model
    Btn,
    #[allow(missing_docs)] // documentation missing in model
    Bwp,
    #[allow(missing_docs)] // documentation missing in model
    Byn,
    #[allow(missing_docs)] // documentation missing in model
    Bzd,
    #[allow(missing_docs)] // documentation missing in model
    Cad,
    #[allow(missing_docs)] // documentation missing in model
    Cdf,
    #[allow(missing_docs)] // documentation missing in model
    Che,
    #[allow(missing_docs)] // documentation missing in model
    Chf,
    #[allow(missing_docs)] // documentation missing in model
    Chw,
    #[allow(missing_docs)] // documentation missing in model
    Clf,
    #[allow(missing_docs)] // documentation missing in model
    Clp,
    #[allow(missing_docs)] // documentation missing in model
    Cny,
    #[allow(missing_docs)] // documentation missing in model
    Cop,
    #[allow(missing_docs)] // documentation missing in model
    Cou,
    #[allow(missing_docs)] // documentation missing in model
    Crc,
    #[allow(missing_docs)] // documentation missing in model
    Cuc,
    #[allow(missing_docs)] // documentation missing in model
    Cup,
    #[allow(missing_docs)] // documentation missing in model
    Cve,
    #[allow(missing_docs)] // documentation missing in model
    Czk,
    #[allow(missing_docs)] // documentation missing in model
    Djf,
    #[allow(missing_docs)] // documentation missing in model
    Dkk,
    #[allow(missing_docs)] // documentation missing in model
    Dop,
    #[allow(missing_docs)] // documentation missing in model
    Dzd,
    #[allow(missing_docs)] // documentation missing in model
    Egp,
    #[allow(missing_docs)] // documentation missing in model
    Ern,
    #[allow(missing_docs)] // documentation missing in model
    Etb,
    #[allow(missing_docs)] // documentation missing in model
    Eur,
    #[allow(missing_docs)] // documentation missing in model
    Fjd,
    #[allow(missing_docs)] // documentation missing in model
    Fkp,
    #[allow(missing_docs)] // documentation missing in model
    Gbp,
    #[allow(missing_docs)] // documentation missing in model
    Gel,
    #[allow(missing_docs)] // documentation missing in model
    Ghs,
    #[allow(missing_docs)] // documentation missing in model
    Gip,
    #[allow(missing_docs)] // documentation missing in model
    Gmd,
    #[allow(missing_docs)] // documentation missing in model
    Gnf,
    #[allow(missing_docs)] // documentation missing in model
    Gtq,
    #[allow(missing_docs)] // documentation missing in model
    Gyd,
    #[allow(missing_docs)] // documentation missing in model
    Hkd,
    #[allow(missing_docs)] // documentation missing in model
    Hnl,
    #[allow(missing_docs)] // documentation missing in model
    Hrk,
    #[allow(missing_docs)] // documentation missing in model
    Htg,
    #[allow(missing_docs)] // documentation missing in model
    Huf,
    #[allow(missing_docs)] // documentation missing in model
    Idr,
    #[allow(missing_docs)] // documentation missing in model
    Ils,
    #[allow(missing_docs)] // documentation missing in model
    Inr,
    #[allow(missing_docs)] // documentation missing in model
    Iqd,
    #[allow(missing_docs)] // documentation missing in model
    Irr,
    #[allow(missing_docs)] // documentation missing in model
    Isk,
    #[allow(missing_docs)] // documentation missing in model
    Jmd,
    #[allow(missing_docs)] // documentation missing in model
    Jod,
    #[allow(missing_docs)] // documentation missing in model
    Jpy,
    #[allow(missing_docs)] // documentation missing in model
    Kes,
    #[allow(missing_docs)] // documentation missing in model
    Kgs,
    #[allow(missing_docs)] // documentation missing in model
    Khr,
    #[allow(missing_docs)] // documentation missing in model
    Kmf,
    #[allow(missing_docs)] // documentation missing in model
    Kpw,
    #[allow(missing_docs)] // documentation missing in model
    Krw,
    #[allow(missing_docs)] // documentation missing in model
    Kwd,
    #[allow(missing_docs)] // documentation missing in model
    Kyd,
    #[allow(missing_docs)] // documentation missing in model
    Kzt,
    #[allow(missing_docs)] // documentation missing in model
    Lak,
    #[allow(missing_docs)] // documentation missing in model
    Lbp,
    #[allow(missing_docs)] // documentation missing in model
    Lkr,
    #[allow(missing_docs)] // documentation missing in model
    Lrd,
    #[allow(missing_docs)] // documentation missing in model
    Lsl,
    #[allow(missing_docs)] // documentation missing in model
    Lyd,
    #[allow(missing_docs)] // documentation missing in model
    Mad,
    #[allow(missing_docs)] // documentation missing in model
    Mdl,
    #[allow(missing_docs)] // documentation missing in model
    Mga,
    #[allow(missing_docs)] // documentation missing in model
    Mkd,
    #[allow(missing_docs)] // documentation missing in model
    Mmk,
    #[allow(missing_docs)] // documentation missing in model
    Mnt,
    #[allow(missing_docs)] // documentation missing in model
    Mop,
    #[allow(missing_docs)] // documentation missing in model
    Mru,
    #[allow(missing_docs)] // documentation missing in model
    Mur,
    #[allow(missing_docs)] // documentation missing in model
    Mvr,
    #[allow(missing_docs)] // documentation missing in model
    Mwk,
    #[allow(missing_docs)] // documentation missing in model
    Mxn,
    #[allow(missing_docs)] // documentation missing in model
    Mxv,
    #[allow(missing_docs)] // documentation missing in model
    Myr,
    #[allow(missing_docs)] // documentation missing in model
    Mzn,
    #[allow(missing_docs)] // documentation missing in model
    Nad,
    #[allow(missing_docs)] // documentation missing in model
    Ngn,
    #[allow(missing_docs)] // documentation missing in model
    Nio,
    #[allow(missing_docs)] // documentation missing in model
    Nok,
    #[allow(missing_docs)] // documentation missing in model
    Npr,
    #[allow(missing_docs)] // documentation missing in model
    Nzd,
    #[allow(missing_docs)] // documentation missing in model
    Omr,
    #[allow(missing_docs)] // documentation missing in model
    Pab,
    #[allow(missing_docs)] // documentation missing in model
    Pen,
    #[allow(missing_docs)] // documentation missing in model
    Pgk,
    #[allow(missing_docs)] // documentation missing in model
    Php,
    #[allow(missing_docs)] // documentation missing in model
    Pkr,
    #[allow(missing_docs)] // documentation missing in model
    Pln,
    #[allow(missing_docs)] // documentation missing in model
    Pyg,
    #[allow(missing_docs)] // documentation missing in model
    Qar,
    #[allow(missing_docs)] // documentation missing in model
    Ron,
    #[allow(missing_docs)] // documentation missing in model
    Rsd,
    #[allow(missing_docs)] // documentation missing in model
    Rub,
    #[allow(missing_docs)] // documentation missing in model
    Rwf,
    #[allow(missing_docs)] // documentation missing in model
    Sar,
    #[allow(missing_docs)] // documentation missing in model
    Sbd,
    #[allow(missing_docs)] // documentation missing in model
    Scr,
    #[allow(missing_docs)] // documentation missing in model
    Sdg,
    #[allow(missing_docs)] // documentation missing in model
    Sek,
    #[allow(missing_docs)] // documentation missing in model
    Sgd,
    #[allow(missing_docs)] // documentation missing in model
    Shp,
    #[allow(missing_docs)] // documentation missing in model
    Sll,
    #[allow(missing_docs)] // documentation missing in model
    Sos,
    #[allow(missing_docs)] // documentation missing in model
    Srd,
    #[allow(missing_docs)] // documentation missing in model
    Ssp,
    #[allow(missing_docs)] // documentation missing in model
    Stn,
    #[allow(missing_docs)] // documentation missing in model
    Svc,
    #[allow(missing_docs)] // documentation missing in model
    Syp,
    #[allow(missing_docs)] // documentation missing in model
    Szl,
    #[allow(missing_docs)] // documentation missing in model
    Thb,
    #[allow(missing_docs)] // documentation missing in model
    Tjs,
    #[allow(missing_docs)] // documentation missing in model
    Tmt,
    #[allow(missing_docs)] // documentation missing in model
    Tnd,
    #[allow(missing_docs)] // documentation missing in model
    Top,
    #[allow(missing_docs)] // documentation missing in model
    Try,
    #[allow(missing_docs)] // documentation missing in model
    Ttd,
    #[allow(missing_docs)] // documentation missing in model
    Twd,
    #[allow(missing_docs)] // documentation missing in model
    Tzs,
    #[allow(missing_docs)] // documentation missing in model
    Uah,
    #[allow(missing_docs)] // documentation missing in model
    Ugx,
    #[allow(missing_docs)] // documentation missing in model
    Usd,
    #[allow(missing_docs)] // documentation missing in model
    Usn,
    #[allow(missing_docs)] // documentation missing in model
    Uyi,
    #[allow(missing_docs)] // documentation missing in model
    Uyu,
    #[allow(missing_docs)] // documentation missing in model
    Uzs,
    #[allow(missing_docs)] // documentation missing in model
    Vef,
    #[allow(missing_docs)] // documentation missing in model
    Vnd,
    #[allow(missing_docs)] // documentation missing in model
    Vuv,
    #[allow(missing_docs)] // documentation missing in model
    Wst,
    #[allow(missing_docs)] // documentation missing in model
    Xaf,
    #[allow(missing_docs)] // documentation missing in model
    Xcd,
    #[allow(missing_docs)] // documentation missing in model
    Xdr,
    #[allow(missing_docs)] // documentation missing in model
    Xof,
    #[allow(missing_docs)] // documentation missing in model
    Xpf,
    #[allow(missing_docs)] // documentation missing in model
    Xsu,
    #[allow(missing_docs)] // documentation missing in model
    Xua,
    #[allow(missing_docs)] // documentation missing in model
    Yer,
    #[allow(missing_docs)] // documentation missing in model
    Zar,
    #[allow(missing_docs)] // documentation missing in model
    Zmw,
    #[allow(missing_docs)] // documentation missing in model
    Zwl,
    /// `Unknown` contains new variants that have been added since this code was generated.
    #[deprecated(note = "Don't directly match on `Unknown`. See the docs on this enum for the correct way to handle unknown variants.")]
    Unknown(crate::primitives::sealed_enum_unknown::UnknownVariantValue),
}
impl ::std::convert::From<&str> for CurrencyCode {
    fn from(s: &str) -> Self {
        match s {
            "AED" => CurrencyCode::Aed,
            "AFN" => CurrencyCode::Afn,
            "ALL" => CurrencyCode::All,
            "AMD" => CurrencyCode::Amd,
            "ANG" => CurrencyCode::Ang,
            "AOA" => CurrencyCode::Aoa,
            "ARS" => CurrencyCode::Ars,
            "AUD" => CurrencyCode::Aud,
            "AWG" => CurrencyCode::Awg,
            "AZN" => CurrencyCode::Azn,
            "BAM" => CurrencyCode::Bam,
            "BBD" => CurrencyCode::Bbd,
            "BDT" => CurrencyCode::Bdt,
            "BGN" => CurrencyCode::Bgn,
            "BHD" => CurrencyCode::Bhd,
            "BIF" => CurrencyCode::Bif,
            "BMD" => CurrencyCode::Bmd,
            "BND" => CurrencyCode::Bnd,
            "BOB" => CurrencyCode::Bob,
            "BOV" => CurrencyCode::Bov,
            "BRL" => CurrencyCode::Brl,
            "BSD" => CurrencyCode::Bsd,
            "BTN" => CurrencyCode::Btn,
            "BWP" => CurrencyCode::Bwp,
            "BYN" => CurrencyCode::Byn,
            "BZD" => CurrencyCode::Bzd,
            "CAD" => CurrencyCode::Cad,
            "CDF" => CurrencyCode::Cdf,
            "CHE" => CurrencyCode::Che,
            "CHF" => CurrencyCode::Chf,
            "CHW" => CurrencyCode::Chw,
            "CLF" => CurrencyCode::Clf,
            "CLP" => CurrencyCode::Clp,
            "CNY" => CurrencyCode::Cny,
            "COP" => CurrencyCode::Cop,
            "COU" => CurrencyCode::Cou,
            "CRC" => CurrencyCode::Crc,
            "CUC" => CurrencyCode::Cuc,
            "CUP" => CurrencyCode::Cup,
            "CVE" => CurrencyCode::Cve,
            "CZK" => CurrencyCode::Czk,
            "DJF" => CurrencyCode::Djf,
            "DKK" => CurrencyCode::Dkk,
            "DOP" => CurrencyCode::Dop,
            "DZD" => CurrencyCode::Dzd,
            "EGP" => CurrencyCode::Egp,
            "ERN" => CurrencyCode::Ern,
            "ETB" => CurrencyCode::Etb,
            "EUR" => CurrencyCode::Eur,
            "FJD" => CurrencyCode::Fjd,
            "FKP" => CurrencyCode::Fkp,
            "GBP" => CurrencyCode::Gbp,
            "GEL" => CurrencyCode::Gel,
            "GHS" => CurrencyCode::Ghs,
            "GIP" => CurrencyCode::Gip,
            "GMD" => CurrencyCode::Gmd,
            "GNF" => CurrencyCode::Gnf,
            "GTQ" => CurrencyCode::Gtq,
            "GYD" => CurrencyCode::Gyd,
            "HKD" => CurrencyCode::Hkd,
            "HNL" => CurrencyCode::Hnl,
            "HRK" => CurrencyCode::Hrk,
            "HTG" => CurrencyCode::Htg,
            "HUF" => CurrencyCode::Huf,
            "IDR" => CurrencyCode::Idr,
            "ILS" => CurrencyCode::Ils,
            "INR" => CurrencyCode::Inr,
            "IQD" => CurrencyCode::Iqd,
            "IRR" => CurrencyCode::Irr,
            "ISK" => CurrencyCode::Isk,
            "JMD" => CurrencyCode::Jmd,
            "JOD" => CurrencyCode::Jod,
            "JPY" => CurrencyCode::Jpy,
            "KES" => CurrencyCode::Kes,
            "KGS" => CurrencyCode::Kgs,
            "KHR" => CurrencyCode::Khr,
            "KMF" => CurrencyCode::Kmf,
            "KPW" => CurrencyCode::Kpw,
            "KRW" => CurrencyCode::Krw,
            "KWD" => CurrencyCode::Kwd,
            "KYD" => CurrencyCode::Kyd,
            "KZT" => CurrencyCode::Kzt,
            "LAK" => CurrencyCode::Lak,
            "LBP" => CurrencyCode::Lbp,
            "LKR" => CurrencyCode::Lkr,
            "LRD" => CurrencyCode::Lrd,
            "LSL" => CurrencyCode::Lsl,
            "LYD" => CurrencyCode::Lyd,
            "MAD" => CurrencyCode::Mad,
            "MDL" => CurrencyCode::Mdl,
            "MGA" => CurrencyCode::Mga,
            "MKD" => CurrencyCode::Mkd,
            "MMK" => CurrencyCode::Mmk,
            "MNT" => CurrencyCode::Mnt,
            "MOP" => CurrencyCode::Mop,
            "MRU" => CurrencyCode::Mru,
            "MUR" => CurrencyCode::Mur,
            "MVR" => CurrencyCode::Mvr,
            "MWK" => CurrencyCode::Mwk,
            "MXN" => CurrencyCode::Mxn,
            "MXV" => CurrencyCode::Mxv,
            "MYR" => CurrencyCode::Myr,
            "MZN" => CurrencyCode::Mzn,
            "NAD" => CurrencyCode::Nad,
            "NGN" => CurrencyCode::Ngn,
            "NIO" => CurrencyCode::Nio,
            "NOK" => CurrencyCode::Nok,
            "NPR" => CurrencyCode::Npr,
            "NZD" => CurrencyCode::Nzd,
            "OMR" => CurrencyCode::Omr,
            "PAB" => CurrencyCode::Pab,
            "PEN" => CurrencyCode::Pen,
            "PGK" => CurrencyCode::Pgk,
            "PHP" => CurrencyCode::Php,
            "PKR" => CurrencyCode::Pkr,
            "PLN" => CurrencyCode::Pln,
            "PYG" => CurrencyCode::Pyg,
            "QAR" => CurrencyCode::Qar,
            "RON" => CurrencyCode::Ron,
            "RSD" => CurrencyCode::Rsd,
            "RUB" => CurrencyCode::Rub,
            "RWF" => CurrencyCode::Rwf,
            "SAR" => CurrencyCode::Sar,
            "SBD" => CurrencyCode::Sbd,
            "SCR" => CurrencyCode::Scr,
            "SDG" => CurrencyCode::Sdg,
            "SEK" => CurrencyCode::Sek,
            "SGD" => CurrencyCode::Sgd,
            "SHP" => CurrencyCode::Shp,
            "SLL" => CurrencyCode::Sll,
            "SOS" => CurrencyCode::Sos,
            "SRD" => CurrencyCode::Srd,
            "SSP" => CurrencyCode::Ssp,
            "STN" => CurrencyCode::Stn,
            "SVC" => CurrencyCode::Svc,
            "SYP" => CurrencyCode::Syp,
            "SZL" => CurrencyCode::Szl,
            "THB" => CurrencyCode::Thb,
            "TJS" => CurrencyCode::Tjs,
            "TMT" => CurrencyCode::Tmt,
            "TND" => CurrencyCode::Tnd,
            "TOP" => CurrencyCode::Top,
            "TRY" => CurrencyCode::Try,
            "TTD" => CurrencyCode::Ttd,
            "TWD" => CurrencyCode::Twd,
            "TZS" => CurrencyCode::Tzs,
            "UAH" => CurrencyCode::Uah,
            "UGX" => CurrencyCode::Ugx,
            "USD" => CurrencyCode::Usd,
            "USN" => CurrencyCode::Usn,
            "UYI" => CurrencyCode::Uyi,
            "UYU" => CurrencyCode::Uyu,
            "UZS" => CurrencyCode::Uzs,
            "VEF" => CurrencyCode::Vef,
            "VND" => CurrencyCode::Vnd,
            "VUV" => CurrencyCode::Vuv,
            "WST" => CurrencyCode::Wst,
            "XAF" => CurrencyCode::Xaf,
            "XCD" => CurrencyCode::Xcd,
            "XDR" => CurrencyCode::Xdr,
            "XOF" => CurrencyCode::Xof,
            "XPF" => CurrencyCode::Xpf,
            "XSU" => CurrencyCode::Xsu,
            "XUA" => CurrencyCode::Xua,
            "YER" => CurrencyCode::Yer,
            "ZAR" => CurrencyCode::Zar,
            "ZMW" => CurrencyCode::Zmw,
            "ZWL" => CurrencyCode::Zwl,
            other => CurrencyCode::Unknown(crate::primitives::sealed_enum_unknown::UnknownVariantValue(other.to_owned())),
        }
    }
}
impl ::std::str::FromStr for CurrencyCode {
    type Err = ::std::convert::Infallible;

    fn from_str(s: &str) -> ::std::result::Result<Self, <Self as ::std::str::FromStr>::Err> {
        ::std::result::Result::Ok(CurrencyCode::from(s))
    }
}
impl CurrencyCode {
    /// Returns the `&str` value of the enum member.
    pub fn as_str(&self) -> &str {
        match self {
            CurrencyCode::Aed => "AED",
            CurrencyCode::Afn => "AFN",
            CurrencyCode::All => "ALL",
            CurrencyCode::Amd => "AMD",
            CurrencyCode::Ang => "ANG",
            CurrencyCode::Aoa => "AOA",
            CurrencyCode::Ars => "ARS",
            CurrencyCode::Aud => "AUD",
            CurrencyCode::Awg => "AWG",
            CurrencyCode::Azn => "AZN",
            CurrencyCode::Bam => "BAM",
            CurrencyCode::Bbd => "BBD",
            CurrencyCode::Bdt => "BDT",
            CurrencyCode::Bgn => "BGN",
            CurrencyCode::Bhd => "BHD",
            CurrencyCode::Bif => "BIF",
            CurrencyCode::Bmd => "BMD",
            CurrencyCode::Bnd => "BND",
            CurrencyCode::Bob => "BOB",
            CurrencyCode::Bov => "BOV",
            CurrencyCode::Brl => "BRL",
            CurrencyCode::Bsd => "BSD",
            CurrencyCode::Btn => "BTN",
            CurrencyCode::Bwp => "BWP",
            CurrencyCode::Byn => "BYN",
            CurrencyCode::Bzd => "BZD",
            CurrencyCode::Cad => "CAD",
            CurrencyCode::Cdf => "CDF",
            CurrencyCode::Che => "CHE",
            CurrencyCode::Chf => "CHF",
            CurrencyCode::Chw => "CHW",
            CurrencyCode::Clf => "CLF",
            CurrencyCode::Clp => "CLP",
            CurrencyCode::Cny => "CNY",
            CurrencyCode::Cop => "COP",
            CurrencyCode::Cou => "COU",
            CurrencyCode::Crc => "CRC",
            CurrencyCode::Cuc => "CUC",
            CurrencyCode::Cup => "CUP",
            CurrencyCode::Cve => "CVE",
            CurrencyCode::Czk => "CZK",
            CurrencyCode::Djf => "DJF",
            CurrencyCode::Dkk => "DKK",
            CurrencyCode::Dop => "DOP",
            CurrencyCode::Dzd => "DZD",
            CurrencyCode::Egp => "EGP",
            CurrencyCode::Ern => "ERN",
            CurrencyCode::Etb => "ETB",
            CurrencyCode::Eur => "EUR",
            CurrencyCode::Fjd => "FJD",
            CurrencyCode::Fkp => "FKP",
            CurrencyCode::Gbp => "GBP",
            CurrencyCode::Gel => "GEL",
            CurrencyCode::Ghs => "GHS",
            CurrencyCode::Gip => "GIP",
            CurrencyCode::Gmd => "GMD",
            CurrencyCode::Gnf => "GNF",
            CurrencyCode::Gtq => "GTQ",
            CurrencyCode::Gyd => "GYD",
            CurrencyCode::Hkd => "HKD",
            CurrencyCode::Hnl => "HNL",
            CurrencyCode::Hrk => "HRK",
            CurrencyCode::Htg => "HTG",
            CurrencyCode::Huf => "HUF",
            CurrencyCode::Idr => "IDR",
            CurrencyCode::Ils => "ILS",
            CurrencyCode::Inr => "INR",
            CurrencyCode::Iqd => "IQD",
            CurrencyCode::Irr => "IRR",
            CurrencyCode::Isk => "ISK",
            CurrencyCode::Jmd => "JMD",
            CurrencyCode::Jod => "JOD",
            CurrencyCode::Jpy => "JPY",
            CurrencyCode::Kes => "KES",
            CurrencyCode::Kgs => "KGS",
            CurrencyCode::Khr => "KHR",
            CurrencyCode::Kmf => "KMF",
            CurrencyCode::Kpw => "KPW",
            CurrencyCode::Krw => "KRW",
            CurrencyCode::Kwd => "KWD",
            CurrencyCode::Kyd => "KYD",
            CurrencyCode::Kzt => "KZT",
            CurrencyCode::Lak => "LAK",
            CurrencyCode::Lbp => "LBP",
            CurrencyCode::Lkr => "LKR",
            CurrencyCode::Lrd => "LRD",
            CurrencyCode::Lsl => "LSL",
            CurrencyCode::Lyd => "LYD",
            CurrencyCode::Mad => "MAD",
            CurrencyCode::Mdl => "MDL",
            CurrencyCode::Mga => "MGA",
            CurrencyCode::Mkd => "MKD",
            CurrencyCode::Mmk => "MMK",
            CurrencyCode::Mnt => "MNT",
            CurrencyCode::Mop => "MOP",
            CurrencyCode::Mru => "MRU",
            CurrencyCode::Mur => "MUR",
            CurrencyCode::Mvr => "MVR",
            CurrencyCode::Mwk => "MWK",
            CurrencyCode::Mxn => "MXN",
            CurrencyCode::Mxv => "MXV",
            CurrencyCode::Myr => "MYR",
            CurrencyCode::Mzn => "MZN",
            CurrencyCode::Nad => "NAD",
            CurrencyCode::Ngn => "NGN",
            CurrencyCode::Nio => "NIO",
            CurrencyCode::Nok => "NOK",
            CurrencyCode::Npr => "NPR",
            CurrencyCode::Nzd => "NZD",
            CurrencyCode::Omr => "OMR",
            CurrencyCode::Pab => "PAB",
            CurrencyCode::Pen => "PEN",
            CurrencyCode::Pgk => "PGK",
            CurrencyCode::Php => "PHP",
            CurrencyCode::Pkr => "PKR",
            CurrencyCode::Pln => "PLN",
            CurrencyCode::Pyg => "PYG",
            CurrencyCode::Qar => "QAR",
            CurrencyCode::Ron => "RON",
            CurrencyCode::Rsd => "RSD",
            CurrencyCode::Rub => "RUB",
            CurrencyCode::Rwf => "RWF",
            CurrencyCode::Sar => "SAR",
            CurrencyCode::Sbd => "SBD",
            CurrencyCode::Scr => "SCR",
            CurrencyCode::Sdg => "SDG",
            CurrencyCode::Sek => "SEK",
            CurrencyCode::Sgd => "SGD",
            CurrencyCode::Shp => "SHP",
            CurrencyCode::Sll => "SLL",
            CurrencyCode::Sos => "SOS",
            CurrencyCode::Srd => "SRD",
            CurrencyCode::Ssp => "SSP",
            CurrencyCode::Stn => "STN",
            CurrencyCode::Svc => "SVC",
            CurrencyCode::Syp => "SYP",
            CurrencyCode::Szl => "SZL",
            CurrencyCode::Thb => "THB",
            CurrencyCode::Tjs => "TJS",
            CurrencyCode::Tmt => "TMT",
            CurrencyCode::Tnd => "TND",
            CurrencyCode::Top => "TOP",
            CurrencyCode::Try => "TRY",
            CurrencyCode::Ttd => "TTD",
            CurrencyCode::Twd => "TWD",
            CurrencyCode::Tzs => "TZS",
            CurrencyCode::Uah => "UAH",
            CurrencyCode::Ugx => "UGX",
            CurrencyCode::Usd => "USD",
            CurrencyCode::Usn => "USN",
            CurrencyCode::Uyi => "UYI",
            CurrencyCode::Uyu => "UYU",
            CurrencyCode::Uzs => "UZS",
            CurrencyCode::Vef => "VEF",
            CurrencyCode::Vnd => "VND",
            CurrencyCode::Vuv => "VUV",
            CurrencyCode::Wst => "WST",
            CurrencyCode::Xaf => "XAF",
            CurrencyCode::Xcd => "XCD",
            CurrencyCode::Xdr => "XDR",
            CurrencyCode::Xof => "XOF",
            CurrencyCode::Xpf => "XPF",
            CurrencyCode::Xsu => "XSU",
            CurrencyCode::Xua => "XUA",
            CurrencyCode::Yer => "YER",
            CurrencyCode::Zar => "ZAR",
            CurrencyCode::Zmw => "ZMW",
            CurrencyCode::Zwl => "ZWL",
            CurrencyCode::Unknown(value) => value.as_str(),
        }
    }
    /// Returns all the `&str` representations of the enum members.
    pub const fn values() -> &'static [&'static str] {
        &[
            "AED", "AFN", "ALL", "AMD", "ANG", "AOA", "ARS", "AUD", "AWG", "AZN", "BAM", "BBD", "BDT", "BGN", "BHD", "BIF", "BMD", "BND", "BOB",
            "BOV", "BRL", "BSD", "BTN", "BWP", "BYN", "BZD", "CAD", "CDF", "CHE", "CHF", "CHW", "CLF", "CLP", "CNY", "COP", "COU", "CRC", "CUC",
            "CUP", "CVE", "CZK", "DJF", "DKK", "DOP", "DZD", "EGP", "ERN", "ETB", "EUR", "FJD", "FKP", "GBP", "GEL", "GHS", "GIP", "GMD", "GNF",
            "GTQ", "GYD", "HKD", "HNL", "HRK", "HTG", "HUF", "IDR", "ILS", "INR", "IQD", "IRR", "ISK", "JMD", "JOD", "JPY", "KES", "KGS", "KHR",
            "KMF", "KPW", "KRW", "KWD", "KYD", "KZT", "LAK", "LBP", "LKR", "LRD", "LSL", "LYD", "MAD", "MDL", "MGA", "MKD", "MMK", "MNT", "MOP",
            "MRU", "MUR", "MVR", "MWK", "MXN", "MXV", "MYR", "MZN", "NAD", "NGN", "NIO", "NOK", "NPR", "NZD", "OMR", "PAB", "PEN", "PGK", "PHP",
            "PKR", "PLN", "PYG", "QAR", "RON", "RSD", "RUB", "RWF", "SAR", "SBD", "SCR", "SDG", "SEK", "SGD", "SHP", "SLL", "SOS", "SRD", "SSP",
            "STN", "SVC", "SYP", "SZL", "THB", "TJS", "TMT", "TND", "TOP", "TRY", "TTD", "TWD", "TZS", "UAH", "UGX", "USD", "USN", "UYI", "UYU",
            "UZS", "VEF", "VND", "VUV", "WST", "XAF", "XCD", "XDR", "XOF", "XPF", "XSU", "XUA", "YER", "ZAR", "ZMW", "ZWL",
        ]
    }
}
impl ::std::convert::AsRef<str> for CurrencyCode {
    fn as_ref(&self) -> &str {
        self.as_str()
    }
}
impl CurrencyCode {
    /// Parses the enum value while disallowing unknown variants.
    ///
    /// Unknown variants will result in an error.
    pub fn try_parse(value: &str) -> ::std::result::Result<Self, crate::error::UnknownVariantError> {
        match Self::from(value) {
            #[allow(deprecated)]
            Self::Unknown(_) => ::std::result::Result::Err(crate::error::UnknownVariantError::new(value)),
            known => Ok(known),
        }
    }
}
impl ::std::fmt::Display for CurrencyCode {
    fn fmt(&self, f: &mut ::std::fmt::Formatter) -> ::std::fmt::Result {
        match self {
            CurrencyCode::Aed => write!(f, "AED"),
            CurrencyCode::Afn => write!(f, "AFN"),
            CurrencyCode::All => write!(f, "ALL"),
            CurrencyCode::Amd => write!(f, "AMD"),
            CurrencyCode::Ang => write!(f, "ANG"),
            CurrencyCode::Aoa => write!(f, "AOA"),
            CurrencyCode::Ars => write!(f, "ARS"),
            CurrencyCode::Aud => write!(f, "AUD"),
            CurrencyCode::Awg => write!(f, "AWG"),
            CurrencyCode::Azn => write!(f, "AZN"),
            CurrencyCode::Bam => write!(f, "BAM"),
            CurrencyCode::Bbd => write!(f, "BBD"),
            CurrencyCode::Bdt => write!(f, "BDT"),
            CurrencyCode::Bgn => write!(f, "BGN"),
            CurrencyCode::Bhd => write!(f, "BHD"),
            CurrencyCode::Bif => write!(f, "BIF"),
            CurrencyCode::Bmd => write!(f, "BMD"),
            CurrencyCode::Bnd => write!(f, "BND"),
            CurrencyCode::Bob => write!(f, "BOB"),
            CurrencyCode::Bov => write!(f, "BOV"),
            CurrencyCode::Brl => write!(f, "BRL"),
            CurrencyCode::Bsd => write!(f, "BSD"),
            CurrencyCode::Btn => write!(f, "BTN"),
            CurrencyCode::Bwp => write!(f, "BWP"),
            CurrencyCode::Byn => write!(f, "BYN"),
            CurrencyCode::Bzd => write!(f, "BZD"),
            CurrencyCode::Cad => write!(f, "CAD"),
            CurrencyCode::Cdf => write!(f, "CDF"),
            CurrencyCode::Che => write!(f, "CHE"),
            CurrencyCode::Chf => write!(f, "CHF"),
            CurrencyCode::Chw => write!(f, "CHW"),
            CurrencyCode::Clf => write!(f, "CLF"),
            CurrencyCode::Clp => write!(f, "CLP"),
            CurrencyCode::Cny => write!(f, "CNY"),
            CurrencyCode::Cop => write!(f, "COP"),
            CurrencyCode::Cou => write!(f, "COU"),
            CurrencyCode::Crc => write!(f, "CRC"),
            CurrencyCode::Cuc => write!(f, "CUC"),
            CurrencyCode::Cup => write!(f, "CUP"),
            CurrencyCode::Cve => write!(f, "CVE"),
            CurrencyCode::Czk => write!(f, "CZK"),
            CurrencyCode::Djf => write!(f, "DJF"),
            CurrencyCode::Dkk => write!(f, "DKK"),
            CurrencyCode::Dop => write!(f, "DOP"),
            CurrencyCode::Dzd => write!(f, "DZD"),
            CurrencyCode::Egp => write!(f, "EGP"),
            CurrencyCode::Ern => write!(f, "ERN"),
            CurrencyCode::Etb => write!(f, "ETB"),
            CurrencyCode::Eur => write!(f, "EUR"),
            CurrencyCode::Fjd => write!(f, "FJD"),
            CurrencyCode::Fkp => write!(f, "FKP"),
            CurrencyCode::Gbp => write!(f, "GBP"),
            CurrencyCode::Gel => write!(f, "GEL"),
            CurrencyCode::Ghs => write!(f, "GHS"),
            CurrencyCode::Gip => write!(f, "GIP"),
            CurrencyCode::Gmd => write!(f, "GMD"),
            CurrencyCode::Gnf => write!(f, "GNF"),
            CurrencyCode::Gtq => write!(f, "GTQ"),
            CurrencyCode::Gyd => write!(f, "GYD"),
            CurrencyCode::Hkd => write!(f, "HKD"),
            CurrencyCode::Hnl => write!(f, "HNL"),
            CurrencyCode::Hrk => write!(f, "HRK"),
            CurrencyCode::Htg => write!(f, "HTG"),
            CurrencyCode::Huf => write!(f, "HUF"),
            CurrencyCode::Idr => write!(f, "IDR"),
            CurrencyCode::Ils => write!(f, "ILS"),
            CurrencyCode::Inr => write!(f, "INR"),
            CurrencyCode::Iqd => write!(f, "IQD"),
            CurrencyCode::Irr => write!(f, "IRR"),
            CurrencyCode::Isk => write!(f, "ISK"),
            CurrencyCode::Jmd => write!(f, "JMD"),
            CurrencyCode::Jod => write!(f, "JOD"),
            CurrencyCode::Jpy => write!(f, "JPY"),
            CurrencyCode::Kes => write!(f, "KES"),
            CurrencyCode::Kgs => write!(f, "KGS"),
            CurrencyCode::Khr => write!(f, "KHR"),
            CurrencyCode::Kmf => write!(f, "KMF"),
            CurrencyCode::Kpw => write!(f, "KPW"),
            CurrencyCode::Krw => write!(f, "KRW"),
            CurrencyCode::Kwd => write!(f, "KWD"),
            CurrencyCode::Kyd => write!(f, "KYD"),
            CurrencyCode::Kzt => write!(f, "KZT"),
            CurrencyCode::Lak => write!(f, "LAK"),
            CurrencyCode::Lbp => write!(f, "LBP"),
            CurrencyCode::Lkr => write!(f, "LKR"),
            CurrencyCode::Lrd => write!(f, "LRD"),
            CurrencyCode::Lsl => write!(f, "LSL"),
            CurrencyCode::Lyd => write!(f, "LYD"),
            CurrencyCode::Mad => write!(f, "MAD"),
            CurrencyCode::Mdl => write!(f, "MDL"),
            CurrencyCode::Mga => write!(f, "MGA"),
            CurrencyCode::Mkd => write!(f, "MKD"),
            CurrencyCode::Mmk => write!(f, "MMK"),
            CurrencyCode::Mnt => write!(f, "MNT"),
            CurrencyCode::Mop => write!(f, "MOP"),
            CurrencyCode::Mru => write!(f, "MRU"),
            CurrencyCode::Mur => write!(f, "MUR"),
            CurrencyCode::Mvr => write!(f, "MVR"),
            CurrencyCode::Mwk => write!(f, "MWK"),
            CurrencyCode::Mxn => write!(f, "MXN"),
            CurrencyCode::Mxv => write!(f, "MXV"),
            CurrencyCode::Myr => write!(f, "MYR"),
            CurrencyCode::Mzn => write!(f, "MZN"),
            CurrencyCode::Nad => write!(f, "NAD"),
            CurrencyCode::Ngn => write!(f, "NGN"),
            CurrencyCode::Nio => write!(f, "NIO"),
            CurrencyCode::Nok => write!(f, "NOK"),
            CurrencyCode::Npr => write!(f, "NPR"),
            CurrencyCode::Nzd => write!(f, "NZD"),
            CurrencyCode::Omr => write!(f, "OMR"),
            CurrencyCode::Pab => write!(f, "PAB"),
            CurrencyCode::Pen => write!(f, "PEN"),
            CurrencyCode::Pgk => write!(f, "PGK"),
            CurrencyCode::Php => write!(f, "PHP"),
            CurrencyCode::Pkr => write!(f, "PKR"),
            CurrencyCode::Pln => write!(f, "PLN"),
            CurrencyCode::Pyg => write!(f, "PYG"),
            CurrencyCode::Qar => write!(f, "QAR"),
            CurrencyCode::Ron => write!(f, "RON"),
            CurrencyCode::Rsd => write!(f, "RSD"),
            CurrencyCode::Rub => write!(f, "RUB"),
            CurrencyCode::Rwf => write!(f, "RWF"),
            CurrencyCode::Sar => write!(f, "SAR"),
            CurrencyCode::Sbd => write!(f, "SBD"),
            CurrencyCode::Scr => write!(f, "SCR"),
            CurrencyCode::Sdg => write!(f, "SDG"),
            CurrencyCode::Sek => write!(f, "SEK"),
            CurrencyCode::Sgd => write!(f, "SGD"),
            CurrencyCode::Shp => write!(f, "SHP"),
            CurrencyCode::Sll => write!(f, "SLL"),
            CurrencyCode::Sos => write!(f, "SOS"),
            CurrencyCode::Srd => write!(f, "SRD"),
            CurrencyCode::Ssp => write!(f, "SSP"),
            CurrencyCode::Stn => write!(f, "STN"),
            CurrencyCode::Svc => write!(f, "SVC"),
            CurrencyCode::Syp => write!(f, "SYP"),
            CurrencyCode::Szl => write!(f, "SZL"),
            CurrencyCode::Thb => write!(f, "THB"),
            CurrencyCode::Tjs => write!(f, "TJS"),
            CurrencyCode::Tmt => write!(f, "TMT"),
            CurrencyCode::Tnd => write!(f, "TND"),
            CurrencyCode::Top => write!(f, "TOP"),
            CurrencyCode::Try => write!(f, "TRY"),
            CurrencyCode::Ttd => write!(f, "TTD"),
            CurrencyCode::Twd => write!(f, "TWD"),
            CurrencyCode::Tzs => write!(f, "TZS"),
            CurrencyCode::Uah => write!(f, "UAH"),
            CurrencyCode::Ugx => write!(f, "UGX"),
            CurrencyCode::Usd => write!(f, "USD"),
            CurrencyCode::Usn => write!(f, "USN"),
            CurrencyCode::Uyi => write!(f, "UYI"),
            CurrencyCode::Uyu => write!(f, "UYU"),
            CurrencyCode::Uzs => write!(f, "UZS"),
            CurrencyCode::Vef => write!(f, "VEF"),
            CurrencyCode::Vnd => write!(f, "VND"),
            CurrencyCode::Vuv => write!(f, "VUV"),
            CurrencyCode::Wst => write!(f, "WST"),
            CurrencyCode::Xaf => write!(f, "XAF"),
            CurrencyCode::Xcd => write!(f, "XCD"),
            CurrencyCode::Xdr => write!(f, "XDR"),
            CurrencyCode::Xof => write!(f, "XOF"),
            CurrencyCode::Xpf => write!(f, "XPF"),
            CurrencyCode::Xsu => write!(f, "XSU"),
            CurrencyCode::Xua => write!(f, "XUA"),
            CurrencyCode::Yer => write!(f, "YER"),
            CurrencyCode::Zar => write!(f, "ZAR"),
            CurrencyCode::Zmw => write!(f, "ZMW"),
            CurrencyCode::Zwl => write!(f, "ZWL"),
            CurrencyCode::Unknown(value) => write!(f, "{value}"),
        }
    }
}
impl ::std::fmt::Debug for CurrencyCode {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        ::std::write!(f, "*** Sensitive Data Redacted ***")
    }
}
