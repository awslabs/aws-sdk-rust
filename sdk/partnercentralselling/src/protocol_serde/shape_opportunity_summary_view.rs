// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) fn de_opportunity_summary_view<'a, I>(
    tokens: &mut ::std::iter::Peekable<I>,
) -> ::std::result::Result<Option<crate::types::OpportunitySummaryView>, ::aws_smithy_json::deserialize::error::DeserializeError>
where
    I: Iterator<Item = Result<::aws_smithy_json::deserialize::Token<'a>, ::aws_smithy_json::deserialize::error::DeserializeError>>,
{
    match tokens.next().transpose()? {
        Some(::aws_smithy_json::deserialize::Token::ValueNull { .. }) => Ok(None),
        Some(::aws_smithy_json::deserialize::Token::StartObject { .. }) => {
            #[allow(unused_mut)]
            let mut builder = crate::types::builders::OpportunitySummaryViewBuilder::default();
            loop {
                match tokens.next().transpose()? {
                    Some(::aws_smithy_json::deserialize::Token::EndObject { .. }) => break,
                    Some(::aws_smithy_json::deserialize::Token::ObjectKey { key, .. }) => match key.to_unescaped()?.as_ref() {
                        "OpportunityType" => {
                            builder = builder.set_opportunity_type(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| crate::types::OpportunityType::from(u.as_ref())))
                                    .transpose()?,
                            );
                        }
                        "Lifecycle" => {
                            builder = builder.set_lifecycle(crate::protocol_serde::shape_life_cycle_for_view::de_life_cycle_for_view(tokens)?);
                        }
                        "OpportunityTeam" => {
                            builder = builder.set_opportunity_team(
                                crate::protocol_serde::shape_partner_opportunity_team_members_list::de_partner_opportunity_team_members_list(tokens)?,
                            );
                        }
                        "PrimaryNeedsFromAws" => {
                            builder = builder
                                .set_primary_needs_from_aws(crate::protocol_serde::shape_primary_needs_from_aws::de_primary_needs_from_aws(tokens)?);
                        }
                        "Customer" => {
                            builder = builder.set_customer(crate::protocol_serde::shape_customer::de_customer(tokens)?);
                        }
                        "Project" => {
                            builder = builder.set_project(crate::protocol_serde::shape_project_view::de_project_view(tokens)?);
                        }
                        "RelatedEntityIdentifiers" => {
                            builder = builder.set_related_entity_identifiers(
                                crate::protocol_serde::shape_related_entity_identifiers::de_related_entity_identifiers(tokens)?,
                            );
                        }
                        _ => ::aws_smithy_json::deserialize::token::skip_value(tokens)?,
                    },
                    other => {
                        return Err(::aws_smithy_json::deserialize::error::DeserializeError::custom(format!(
                            "expected object key or end object, found: {other:?}"
                        )))
                    }
                }
            }
            Ok(Some(builder.build()))
        }
        _ => Err(::aws_smithy_json::deserialize::error::DeserializeError::custom(
            "expected start object or null",
        )),
    }
}
