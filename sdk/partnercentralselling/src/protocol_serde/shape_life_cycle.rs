// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_life_cycle(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::types::LifeCycle,
) -> ::std::result::Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.stage {
        object.key("Stage").string(var_1.as_str());
    }
    if let Some(var_2) = &input.closed_lost_reason {
        object.key("ClosedLostReason").string(var_2.as_str());
    }
    if let Some(var_3) = &input.next_steps {
        object.key("NextSteps").string(var_3.as_str());
    }
    if let Some(var_4) = &input.target_close_date {
        object.key("TargetCloseDate").string(var_4.as_str());
    }
    if let Some(var_5) = &input.review_status {
        object.key("ReviewStatus").string(var_5.as_str());
    }
    if let Some(var_6) = &input.review_comments {
        object.key("ReviewComments").string(var_6.as_str());
    }
    if let Some(var_7) = &input.review_status_reason {
        object.key("ReviewStatusReason").string(var_7.as_str());
    }
    if let Some(var_8) = &input.next_steps_history {
        let mut array_9 = object.key("NextStepsHistory").start_array();
        for item_10 in var_8 {
            {
                #[allow(unused_mut)]
                let mut object_11 = array_9.value().start_object();
                crate::protocol_serde::shape_next_steps_history::ser_next_steps_history(&mut object_11, item_10)?;
                object_11.finish();
            }
        }
        array_9.finish();
    }
    Ok(())
}

pub(crate) fn de_life_cycle<'a, I>(
    tokens: &mut ::std::iter::Peekable<I>,
) -> ::std::result::Result<Option<crate::types::LifeCycle>, ::aws_smithy_json::deserialize::error::DeserializeError>
where
    I: Iterator<Item = Result<::aws_smithy_json::deserialize::Token<'a>, ::aws_smithy_json::deserialize::error::DeserializeError>>,
{
    match tokens.next().transpose()? {
        Some(::aws_smithy_json::deserialize::Token::ValueNull { .. }) => Ok(None),
        Some(::aws_smithy_json::deserialize::Token::StartObject { .. }) => {
            #[allow(unused_mut)]
            let mut builder = crate::types::builders::LifeCycleBuilder::default();
            loop {
                match tokens.next().transpose()? {
                    Some(::aws_smithy_json::deserialize::Token::EndObject { .. }) => break,
                    Some(::aws_smithy_json::deserialize::Token::ObjectKey { key, .. }) => match key.to_unescaped()?.as_ref() {
                        "Stage" => {
                            builder = builder.set_stage(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| crate::types::Stage::from(u.as_ref())))
                                    .transpose()?,
                            );
                        }
                        "ClosedLostReason" => {
                            builder = builder.set_closed_lost_reason(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| crate::types::ClosedLostReason::from(u.as_ref())))
                                    .transpose()?,
                            );
                        }
                        "NextSteps" => {
                            builder = builder.set_next_steps(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                            );
                        }
                        "TargetCloseDate" => {
                            builder = builder.set_target_close_date(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                            );
                        }
                        "ReviewStatus" => {
                            builder = builder.set_review_status(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| crate::types::ReviewStatus::from(u.as_ref())))
                                    .transpose()?,
                            );
                        }
                        "ReviewComments" => {
                            builder = builder.set_review_comments(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                            );
                        }
                        "ReviewStatusReason" => {
                            builder = builder.set_review_status_reason(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                            );
                        }
                        "NextStepsHistory" => {
                            builder =
                                builder.set_next_steps_history(crate::protocol_serde::shape_next_steps_histories::de_next_steps_histories(tokens)?);
                        }
                        _ => ::aws_smithy_json::deserialize::token::skip_value(tokens)?,
                    },
                    other => {
                        return Err(::aws_smithy_json::deserialize::error::DeserializeError::custom(format!(
                            "expected object key or end object, found: {other:?}"
                        )))
                    }
                }
            }
            Ok(Some(builder.build()))
        }
        _ => Err(::aws_smithy_json::deserialize::error::DeserializeError::custom(
            "expected start object or null",
        )),
    }
}
