// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct UpdateStateMachineOutput {
    /// <p>The date and time the state machine was updated.</p>
    #[doc(hidden)]
    pub update_date: std::option::Option<aws_smithy_types::DateTime>,
    _request_id: Option<String>,
}
impl UpdateStateMachineOutput {
    /// <p>The date and time the state machine was updated.</p>
    pub fn update_date(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.update_date.as_ref()
    }
}
impl aws_http::request_id::RequestId for UpdateStateMachineOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl UpdateStateMachineOutput {
    /// Creates a new builder-style object to manufacture [`UpdateStateMachineOutput`](crate::operation::update_state_machine::UpdateStateMachineOutput).
    pub fn builder(
    ) -> crate::operation::update_state_machine::builders::UpdateStateMachineOutputBuilder {
        crate::operation::update_state_machine::builders::UpdateStateMachineOutputBuilder::default()
    }
}

/// A builder for [`UpdateStateMachineOutput`](crate::operation::update_state_machine::UpdateStateMachineOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct UpdateStateMachineOutputBuilder {
    pub(crate) update_date: std::option::Option<aws_smithy_types::DateTime>,
    _request_id: Option<String>,
}
impl UpdateStateMachineOutputBuilder {
    /// <p>The date and time the state machine was updated.</p>
    pub fn update_date(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.update_date = Some(input);
        self
    }
    /// <p>The date and time the state machine was updated.</p>
    pub fn set_update_date(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.update_date = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`UpdateStateMachineOutput`](crate::operation::update_state_machine::UpdateStateMachineOutput).
    pub fn build(self) -> crate::operation::update_state_machine::UpdateStateMachineOutput {
        crate::operation::update_state_machine::UpdateStateMachineOutput {
            update_date: self.update_date,
            _request_id: self._request_id,
        }
    }
}
