// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq)]
pub struct DescribeStateMachineAliasOutput {
    /// <p>The Amazon Resource Name (ARN) of the state machine alias.</p>
    pub state_machine_alias_arn: ::std::option::Option<::std::string::String>,
    /// <p>The name of the state machine alias.</p>
    pub name: ::std::option::Option<::std::string::String>,
    /// <p>A description of the alias.</p>
    pub description: ::std::option::Option<::std::string::String>,
    /// <p>The routing configuration of the alias.</p>
    pub routing_configuration: ::std::option::Option<::std::vec::Vec<crate::types::RoutingConfigurationListItem>>,
    /// <p>The date the state machine alias was created.</p>
    pub creation_date: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>The date the state machine alias was last updated.</p>
    /// <p>For a newly created state machine, this is the same as the creation date.</p>
    pub update_date: ::std::option::Option<::aws_smithy_types::DateTime>,
    _request_id: Option<String>,
}
impl DescribeStateMachineAliasOutput {
    /// <p>The Amazon Resource Name (ARN) of the state machine alias.</p>
    pub fn state_machine_alias_arn(&self) -> ::std::option::Option<&str> {
        self.state_machine_alias_arn.as_deref()
    }
    /// <p>The name of the state machine alias.</p>
    pub fn name(&self) -> ::std::option::Option<&str> {
        self.name.as_deref()
    }
    /// <p>A description of the alias.</p>
    pub fn description(&self) -> ::std::option::Option<&str> {
        self.description.as_deref()
    }
    /// <p>The routing configuration of the alias.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.routing_configuration.is_none()`.
    pub fn routing_configuration(&self) -> &[crate::types::RoutingConfigurationListItem] {
        self.routing_configuration.as_deref().unwrap_or_default()
    }
    /// <p>The date the state machine alias was created.</p>
    pub fn creation_date(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.creation_date.as_ref()
    }
    /// <p>The date the state machine alias was last updated.</p>
    /// <p>For a newly created state machine, this is the same as the creation date.</p>
    pub fn update_date(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.update_date.as_ref()
    }
}
impl ::std::fmt::Debug for DescribeStateMachineAliasOutput {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("DescribeStateMachineAliasOutput");
        formatter.field("state_machine_alias_arn", &self.state_machine_alias_arn);
        formatter.field("name", &self.name);
        formatter.field("description", &"*** Sensitive Data Redacted ***");
        formatter.field("routing_configuration", &self.routing_configuration);
        formatter.field("creation_date", &self.creation_date);
        formatter.field("update_date", &self.update_date);
        formatter.field("_request_id", &self._request_id);
        formatter.finish()
    }
}
impl ::aws_http::request_id::RequestId for DescribeStateMachineAliasOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl DescribeStateMachineAliasOutput {
    /// Creates a new builder-style object to manufacture [`DescribeStateMachineAliasOutput`](crate::operation::describe_state_machine_alias::DescribeStateMachineAliasOutput).
    pub fn builder() -> crate::operation::describe_state_machine_alias::builders::DescribeStateMachineAliasOutputBuilder {
        crate::operation::describe_state_machine_alias::builders::DescribeStateMachineAliasOutputBuilder::default()
    }
}

/// A builder for [`DescribeStateMachineAliasOutput`](crate::operation::describe_state_machine_alias::DescribeStateMachineAliasOutput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default)]
pub struct DescribeStateMachineAliasOutputBuilder {
    pub(crate) state_machine_alias_arn: ::std::option::Option<::std::string::String>,
    pub(crate) name: ::std::option::Option<::std::string::String>,
    pub(crate) description: ::std::option::Option<::std::string::String>,
    pub(crate) routing_configuration: ::std::option::Option<::std::vec::Vec<crate::types::RoutingConfigurationListItem>>,
    pub(crate) creation_date: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) update_date: ::std::option::Option<::aws_smithy_types::DateTime>,
    _request_id: Option<String>,
}
impl DescribeStateMachineAliasOutputBuilder {
    /// <p>The Amazon Resource Name (ARN) of the state machine alias.</p>
    pub fn state_machine_alias_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.state_machine_alias_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the state machine alias.</p>
    pub fn set_state_machine_alias_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.state_machine_alias_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the state machine alias.</p>
    pub fn get_state_machine_alias_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.state_machine_alias_arn
    }
    /// <p>The name of the state machine alias.</p>
    pub fn name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the state machine alias.</p>
    pub fn set_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>The name of the state machine alias.</p>
    pub fn get_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.name
    }
    /// <p>A description of the alias.</p>
    pub fn description(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.description = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>A description of the alias.</p>
    pub fn set_description(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.description = input;
        self
    }
    /// <p>A description of the alias.</p>
    pub fn get_description(&self) -> &::std::option::Option<::std::string::String> {
        &self.description
    }
    /// Appends an item to `routing_configuration`.
    ///
    /// To override the contents of this collection use [`set_routing_configuration`](Self::set_routing_configuration).
    ///
    /// <p>The routing configuration of the alias.</p>
    pub fn routing_configuration(mut self, input: crate::types::RoutingConfigurationListItem) -> Self {
        let mut v = self.routing_configuration.unwrap_or_default();
        v.push(input);
        self.routing_configuration = ::std::option::Option::Some(v);
        self
    }
    /// <p>The routing configuration of the alias.</p>
    pub fn set_routing_configuration(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::RoutingConfigurationListItem>>) -> Self {
        self.routing_configuration = input;
        self
    }
    /// <p>The routing configuration of the alias.</p>
    pub fn get_routing_configuration(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::RoutingConfigurationListItem>> {
        &self.routing_configuration
    }
    /// <p>The date the state machine alias was created.</p>
    pub fn creation_date(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.creation_date = ::std::option::Option::Some(input);
        self
    }
    /// <p>The date the state machine alias was created.</p>
    pub fn set_creation_date(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.creation_date = input;
        self
    }
    /// <p>The date the state machine alias was created.</p>
    pub fn get_creation_date(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.creation_date
    }
    /// <p>The date the state machine alias was last updated.</p>
    /// <p>For a newly created state machine, this is the same as the creation date.</p>
    pub fn update_date(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.update_date = ::std::option::Option::Some(input);
        self
    }
    /// <p>The date the state machine alias was last updated.</p>
    /// <p>For a newly created state machine, this is the same as the creation date.</p>
    pub fn set_update_date(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.update_date = input;
        self
    }
    /// <p>The date the state machine alias was last updated.</p>
    /// <p>For a newly created state machine, this is the same as the creation date.</p>
    pub fn get_update_date(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.update_date
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`DescribeStateMachineAliasOutput`](crate::operation::describe_state_machine_alias::DescribeStateMachineAliasOutput).
    pub fn build(self) -> crate::operation::describe_state_machine_alias::DescribeStateMachineAliasOutput {
        crate::operation::describe_state_machine_alias::DescribeStateMachineAliasOutput {
            state_machine_alias_arn: self.state_machine_alias_arn,
            name: self.name,
            description: self.description,
            routing_configuration: self.routing_configuration,
            creation_date: self.creation_date,
            update_date: self.update_date,
            _request_id: self._request_id,
        }
    }
}
impl ::std::fmt::Debug for DescribeStateMachineAliasOutputBuilder {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("DescribeStateMachineAliasOutputBuilder");
        formatter.field("state_machine_alias_arn", &self.state_machine_alias_arn);
        formatter.field("name", &self.name);
        formatter.field("description", &"*** Sensitive Data Redacted ***");
        formatter.field("routing_configuration", &self.routing_configuration);
        formatter.field("creation_date", &self.creation_date);
        formatter.field("update_date", &self.update_date);
        formatter.field("_request_id", &self._request_id);
        formatter.finish()
    }
}
