// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn serialize_structure_crate_input_create_activity_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateActivityInput,
) {
    if let Some(var_1) = &input.name {
        object.key("name").string(var_1);
    }
    if let Some(var_2) = &input.tags {
        let mut array_3 = object.key("tags").start_array();
        for item_4 in var_2 {
            {
                let mut object_5 = array_3.value().start_object();
                crate::json_ser::serialize_structure_crate_model_tag(&mut object_5, item_4);
                object_5.finish();
            }
        }
        array_3.finish();
    }
}

pub fn serialize_structure_crate_input_create_state_machine_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateStateMachineInput,
) {
    if let Some(var_6) = &input.name {
        object.key("name").string(var_6);
    }
    if let Some(var_7) = &input.definition {
        object.key("definition").string(var_7);
    }
    if let Some(var_8) = &input.role_arn {
        object.key("roleArn").string(var_8);
    }
    if let Some(var_9) = &input.r#type {
        object.key("type").string(var_9.as_str());
    }
    if let Some(var_10) = &input.logging_configuration {
        let mut object_11 = object.key("loggingConfiguration").start_object();
        crate::json_ser::serialize_structure_crate_model_logging_configuration(
            &mut object_11,
            var_10,
        );
        object_11.finish();
    }
    if let Some(var_12) = &input.tags {
        let mut array_13 = object.key("tags").start_array();
        for item_14 in var_12 {
            {
                let mut object_15 = array_13.value().start_object();
                crate::json_ser::serialize_structure_crate_model_tag(&mut object_15, item_14);
                object_15.finish();
            }
        }
        array_13.finish();
    }
    if let Some(var_16) = &input.tracing_configuration {
        let mut object_17 = object.key("tracingConfiguration").start_object();
        crate::json_ser::serialize_structure_crate_model_tracing_configuration(
            &mut object_17,
            var_16,
        );
        object_17.finish();
    }
}

pub fn serialize_structure_crate_input_delete_activity_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DeleteActivityInput,
) {
    if let Some(var_18) = &input.activity_arn {
        object.key("activityArn").string(var_18);
    }
}

pub fn serialize_structure_crate_input_delete_state_machine_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DeleteStateMachineInput,
) {
    if let Some(var_19) = &input.state_machine_arn {
        object.key("stateMachineArn").string(var_19);
    }
}

pub fn serialize_structure_crate_input_describe_activity_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DescribeActivityInput,
) {
    if let Some(var_20) = &input.activity_arn {
        object.key("activityArn").string(var_20);
    }
}

pub fn serialize_structure_crate_input_describe_execution_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DescribeExecutionInput,
) {
    if let Some(var_21) = &input.execution_arn {
        object.key("executionArn").string(var_21);
    }
}

pub fn serialize_structure_crate_input_describe_state_machine_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DescribeStateMachineInput,
) {
    if let Some(var_22) = &input.state_machine_arn {
        object.key("stateMachineArn").string(var_22);
    }
}

pub fn serialize_structure_crate_input_describe_state_machine_for_execution_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DescribeStateMachineForExecutionInput,
) {
    if let Some(var_23) = &input.execution_arn {
        object.key("executionArn").string(var_23);
    }
}

pub fn serialize_structure_crate_input_get_activity_task_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::GetActivityTaskInput,
) {
    if let Some(var_24) = &input.activity_arn {
        object.key("activityArn").string(var_24);
    }
    if let Some(var_25) = &input.worker_name {
        object.key("workerName").string(var_25);
    }
}

pub fn serialize_structure_crate_input_get_execution_history_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::GetExecutionHistoryInput,
) {
    if let Some(var_26) = &input.execution_arn {
        object.key("executionArn").string(var_26);
    }
    if input.max_results != 0 {
        object.key("maxResults").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((input.max_results).into()),
        );
    }
    if input.reverse_order {
        object.key("reverseOrder").boolean(input.reverse_order);
    }
    if let Some(var_27) = &input.next_token {
        object.key("nextToken").string(var_27);
    }
    if let Some(var_28) = &input.include_execution_data {
        object.key("includeExecutionData").boolean(*var_28);
    }
}

pub fn serialize_structure_crate_input_list_activities_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::ListActivitiesInput,
) {
    if input.max_results != 0 {
        object.key("maxResults").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((input.max_results).into()),
        );
    }
    if let Some(var_29) = &input.next_token {
        object.key("nextToken").string(var_29);
    }
}

pub fn serialize_structure_crate_input_list_executions_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::ListExecutionsInput,
) {
    if let Some(var_30) = &input.state_machine_arn {
        object.key("stateMachineArn").string(var_30);
    }
    if let Some(var_31) = &input.status_filter {
        object.key("statusFilter").string(var_31.as_str());
    }
    if input.max_results != 0 {
        object.key("maxResults").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((input.max_results).into()),
        );
    }
    if let Some(var_32) = &input.next_token {
        object.key("nextToken").string(var_32);
    }
}

pub fn serialize_structure_crate_input_list_state_machines_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::ListStateMachinesInput,
) {
    if input.max_results != 0 {
        object.key("maxResults").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((input.max_results).into()),
        );
    }
    if let Some(var_33) = &input.next_token {
        object.key("nextToken").string(var_33);
    }
}

pub fn serialize_structure_crate_input_list_tags_for_resource_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::ListTagsForResourceInput,
) {
    if let Some(var_34) = &input.resource_arn {
        object.key("resourceArn").string(var_34);
    }
}

pub fn serialize_structure_crate_input_send_task_failure_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::SendTaskFailureInput,
) {
    if let Some(var_35) = &input.task_token {
        object.key("taskToken").string(var_35);
    }
    if let Some(var_36) = &input.error {
        object.key("error").string(var_36);
    }
    if let Some(var_37) = &input.cause {
        object.key("cause").string(var_37);
    }
}

pub fn serialize_structure_crate_input_send_task_heartbeat_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::SendTaskHeartbeatInput,
) {
    if let Some(var_38) = &input.task_token {
        object.key("taskToken").string(var_38);
    }
}

pub fn serialize_structure_crate_input_send_task_success_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::SendTaskSuccessInput,
) {
    if let Some(var_39) = &input.task_token {
        object.key("taskToken").string(var_39);
    }
    if let Some(var_40) = &input.output {
        object.key("output").string(var_40);
    }
}

pub fn serialize_structure_crate_input_start_execution_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::StartExecutionInput,
) {
    if let Some(var_41) = &input.state_machine_arn {
        object.key("stateMachineArn").string(var_41);
    }
    if let Some(var_42) = &input.name {
        object.key("name").string(var_42);
    }
    if let Some(var_43) = &input.input {
        object.key("input").string(var_43);
    }
    if let Some(var_44) = &input.trace_header {
        object.key("traceHeader").string(var_44);
    }
}

pub fn serialize_structure_crate_input_start_sync_execution_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::StartSyncExecutionInput,
) {
    if let Some(var_45) = &input.state_machine_arn {
        object.key("stateMachineArn").string(var_45);
    }
    if let Some(var_46) = &input.name {
        object.key("name").string(var_46);
    }
    if let Some(var_47) = &input.input {
        object.key("input").string(var_47);
    }
    if let Some(var_48) = &input.trace_header {
        object.key("traceHeader").string(var_48);
    }
}

pub fn serialize_structure_crate_input_stop_execution_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::StopExecutionInput,
) {
    if let Some(var_49) = &input.execution_arn {
        object.key("executionArn").string(var_49);
    }
    if let Some(var_50) = &input.error {
        object.key("error").string(var_50);
    }
    if let Some(var_51) = &input.cause {
        object.key("cause").string(var_51);
    }
}

pub fn serialize_structure_crate_input_tag_resource_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::TagResourceInput,
) {
    if let Some(var_52) = &input.resource_arn {
        object.key("resourceArn").string(var_52);
    }
    if let Some(var_53) = &input.tags {
        let mut array_54 = object.key("tags").start_array();
        for item_55 in var_53 {
            {
                let mut object_56 = array_54.value().start_object();
                crate::json_ser::serialize_structure_crate_model_tag(&mut object_56, item_55);
                object_56.finish();
            }
        }
        array_54.finish();
    }
}

pub fn serialize_structure_crate_input_untag_resource_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UntagResourceInput,
) {
    if let Some(var_57) = &input.resource_arn {
        object.key("resourceArn").string(var_57);
    }
    if let Some(var_58) = &input.tag_keys {
        let mut array_59 = object.key("tagKeys").start_array();
        for item_60 in var_58 {
            {
                array_59.value().string(item_60);
            }
        }
        array_59.finish();
    }
}

pub fn serialize_structure_crate_input_update_state_machine_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateStateMachineInput,
) {
    if let Some(var_61) = &input.state_machine_arn {
        object.key("stateMachineArn").string(var_61);
    }
    if let Some(var_62) = &input.definition {
        object.key("definition").string(var_62);
    }
    if let Some(var_63) = &input.role_arn {
        object.key("roleArn").string(var_63);
    }
    if let Some(var_64) = &input.logging_configuration {
        let mut object_65 = object.key("loggingConfiguration").start_object();
        crate::json_ser::serialize_structure_crate_model_logging_configuration(
            &mut object_65,
            var_64,
        );
        object_65.finish();
    }
    if let Some(var_66) = &input.tracing_configuration {
        let mut object_67 = object.key("tracingConfiguration").start_object();
        crate::json_ser::serialize_structure_crate_model_tracing_configuration(
            &mut object_67,
            var_66,
        );
        object_67.finish();
    }
}

pub fn serialize_structure_crate_model_tag(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::Tag,
) {
    if let Some(var_68) = &input.key {
        object.key("key").string(var_68);
    }
    if let Some(var_69) = &input.value {
        object.key("value").string(var_69);
    }
}

pub fn serialize_structure_crate_model_logging_configuration(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::LoggingConfiguration,
) {
    if let Some(var_70) = &input.level {
        object.key("level").string(var_70.as_str());
    }
    if input.include_execution_data {
        object
            .key("includeExecutionData")
            .boolean(input.include_execution_data);
    }
    if let Some(var_71) = &input.destinations {
        let mut array_72 = object.key("destinations").start_array();
        for item_73 in var_71 {
            {
                let mut object_74 = array_72.value().start_object();
                crate::json_ser::serialize_structure_crate_model_log_destination(
                    &mut object_74,
                    item_73,
                );
                object_74.finish();
            }
        }
        array_72.finish();
    }
}

pub fn serialize_structure_crate_model_tracing_configuration(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::TracingConfiguration,
) {
    if input.enabled {
        object.key("enabled").boolean(input.enabled);
    }
}

pub fn serialize_structure_crate_model_log_destination(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::LogDestination,
) {
    if let Some(var_75) = &input.cloud_watch_logs_log_group {
        let mut object_76 = object.key("cloudWatchLogsLogGroup").start_object();
        crate::json_ser::serialize_structure_crate_model_cloud_watch_logs_log_group(
            &mut object_76,
            var_75,
        );
        object_76.finish();
    }
}

pub fn serialize_structure_crate_model_cloud_watch_logs_log_group(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::CloudWatchLogsLogGroup,
) {
    if let Some(var_77) = &input.log_group_arn {
        object.key("logGroupArn").string(var_77);
    }
}
