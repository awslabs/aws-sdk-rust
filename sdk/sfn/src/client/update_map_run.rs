// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateMapRun`](crate::operation::update_map_run::builders::UpdateMapRunFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`map_run_arn(impl Into<String>)`](crate::operation::update_map_run::builders::UpdateMapRunFluentBuilder::map_run_arn) / [`set_map_run_arn(Option<String>)`](crate::operation::update_map_run::builders::UpdateMapRunFluentBuilder::set_map_run_arn): <p>The Amazon Resource Name (ARN) of a Map Run.</p>
    ///   - [`max_concurrency(i32)`](crate::operation::update_map_run::builders::UpdateMapRunFluentBuilder::max_concurrency) / [`set_max_concurrency(Option<i32>)`](crate::operation::update_map_run::builders::UpdateMapRunFluentBuilder::set_max_concurrency): <p>The maximum number of child workflow executions that can be specified to run in parallel for the Map Run at the same time.</p>
    ///   - [`tolerated_failure_percentage(f32)`](crate::operation::update_map_run::builders::UpdateMapRunFluentBuilder::tolerated_failure_percentage) / [`set_tolerated_failure_percentage(Option<f32>)`](crate::operation::update_map_run::builders::UpdateMapRunFluentBuilder::set_tolerated_failure_percentage): <p>The maximum percentage of failed items before the Map Run fails.</p>
    ///   - [`tolerated_failure_count(i64)`](crate::operation::update_map_run::builders::UpdateMapRunFluentBuilder::tolerated_failure_count) / [`set_tolerated_failure_count(Option<i64>)`](crate::operation::update_map_run::builders::UpdateMapRunFluentBuilder::set_tolerated_failure_count): <p>The maximum number of failed items before the Map Run fails.</p>
    /// - On success, responds with [`UpdateMapRunOutput`](crate::operation::update_map_run::UpdateMapRunOutput)
    /// - On failure, responds with [`SdkError<UpdateMapRunError>`](crate::operation::update_map_run::UpdateMapRunError)
    pub fn update_map_run(
        &self,
    ) -> crate::operation::update_map_run::builders::UpdateMapRunFluentBuilder {
        crate::operation::update_map_run::builders::UpdateMapRunFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
