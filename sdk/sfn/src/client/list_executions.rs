// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListExecutions`](crate::operation::list_executions::builders::ListExecutionsFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::list_executions::builders::ListExecutionsFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`state_machine_arn(impl Into<String>)`](crate::operation::list_executions::builders::ListExecutionsFluentBuilder::state_machine_arn) / [`set_state_machine_arn(Option<String>)`](crate::operation::list_executions::builders::ListExecutionsFluentBuilder::set_state_machine_arn): <p>The Amazon Resource Name (ARN) of the state machine whose executions is listed.</p>  <p>You can specify either a <code>mapRunArn</code> or a <code>stateMachineArn</code>, but not both.</p>
    ///   - [`status_filter(ExecutionStatus)`](crate::operation::list_executions::builders::ListExecutionsFluentBuilder::status_filter) / [`set_status_filter(Option<ExecutionStatus>)`](crate::operation::list_executions::builders::ListExecutionsFluentBuilder::set_status_filter): <p>If specified, only list the executions whose current execution status matches the given filter.</p>
    ///   - [`max_results(i32)`](crate::operation::list_executions::builders::ListExecutionsFluentBuilder::max_results) / [`set_max_results(i32)`](crate::operation::list_executions::builders::ListExecutionsFluentBuilder::set_max_results): <p>The maximum number of results that are returned per call. You can use <code>nextToken</code> to obtain further pages of results. The default is 100 and the maximum allowed page size is 1000. A value of 0 uses the default.</p>  <p>This is only an upper limit. The actual number of results returned per call might be fewer than the specified maximum.</p>
    ///   - [`next_token(impl Into<String>)`](crate::operation::list_executions::builders::ListExecutionsFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::list_executions::builders::ListExecutionsFluentBuilder::set_next_token): <p>If <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. Each pagination token expires after 24 hours. Using an expired pagination token will return an <i>HTTP 400 InvalidToken</i> error.</p>
    ///   - [`map_run_arn(impl Into<String>)`](crate::operation::list_executions::builders::ListExecutionsFluentBuilder::map_run_arn) / [`set_map_run_arn(Option<String>)`](crate::operation::list_executions::builders::ListExecutionsFluentBuilder::set_map_run_arn): <p>The Amazon Resource Name (ARN) of the Map Run that started the child workflow executions. If the <code>mapRunArn</code> field is specified, a list of all of the child workflow executions started by a Map Run is returned. For more information, see <a href="https://docs.aws.amazon.com/step-functions/latest/dg/concepts-examine-map-run.html">Examining Map Run</a> in the <i>Step Functions Developer Guide</i>.</p>  <p>You can specify either a <code>mapRunArn</code> or a <code>stateMachineArn</code>, but not both.</p>
    /// - On success, responds with [`ListExecutionsOutput`](crate::operation::list_executions::ListExecutionsOutput) with field(s):
    ///   - [`executions(Option<Vec<ExecutionListItem>>)`](crate::operation::list_executions::ListExecutionsOutput::executions): <p>The list of matching executions.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::list_executions::ListExecutionsOutput::next_token): <p>If <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. Each pagination token expires after 24 hours. Using an expired pagination token will return an <i>HTTP 400 InvalidToken</i> error.</p>
    /// - On failure, responds with [`SdkError<ListExecutionsError>`](crate::operation::list_executions::ListExecutionsError)
    pub fn list_executions(
        &self,
    ) -> crate::operation::list_executions::builders::ListExecutionsFluentBuilder {
        crate::operation::list_executions::builders::ListExecutionsFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
