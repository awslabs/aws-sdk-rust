// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains details about the credentials that Step Functions uses for a task.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct TaskCredentials {
    /// <p>The ARN of an IAM role that Step Functions assumes for the task. The role can allow cross-account access to resources.</p>
    #[doc(hidden)]
    pub role_arn: std::option::Option<std::string::String>,
}
impl TaskCredentials {
    /// <p>The ARN of an IAM role that Step Functions assumes for the task. The role can allow cross-account access to resources.</p>
    pub fn role_arn(&self) -> std::option::Option<&str> {
        self.role_arn.as_deref()
    }
}
impl TaskCredentials {
    /// Creates a new builder-style object to manufacture [`TaskCredentials`](crate::types::TaskCredentials).
    pub fn builder() -> crate::types::builders::TaskCredentialsBuilder {
        crate::types::builders::TaskCredentialsBuilder::default()
    }
}

/// A builder for [`TaskCredentials`](crate::types::TaskCredentials).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct TaskCredentialsBuilder {
    pub(crate) role_arn: std::option::Option<std::string::String>,
}
impl TaskCredentialsBuilder {
    /// <p>The ARN of an IAM role that Step Functions assumes for the task. The role can allow cross-account access to resources.</p>
    pub fn role_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.role_arn = Some(input.into());
        self
    }
    /// <p>The ARN of an IAM role that Step Functions assumes for the task. The role can allow cross-account access to resources.</p>
    pub fn set_role_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.role_arn = input;
        self
    }
    /// Consumes the builder and constructs a [`TaskCredentials`](crate::types::TaskCredentials).
    pub fn build(self) -> crate::types::TaskCredentials {
        crate::types::TaskCredentials {
            role_arn: self.role_arn,
        }
    }
}
