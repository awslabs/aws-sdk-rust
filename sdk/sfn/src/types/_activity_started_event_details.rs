// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains details about the start of an activity during an execution.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ActivityStartedEventDetails {
    /// <p>The name of the worker that the task is assigned to. These names are provided by the workers when calling <code>GetActivityTask</code>.</p>
    #[doc(hidden)]
    pub worker_name: std::option::Option<std::string::String>,
}
impl ActivityStartedEventDetails {
    /// <p>The name of the worker that the task is assigned to. These names are provided by the workers when calling <code>GetActivityTask</code>.</p>
    pub fn worker_name(&self) -> std::option::Option<&str> {
        self.worker_name.as_deref()
    }
}
impl ActivityStartedEventDetails {
    /// Creates a new builder-style object to manufacture [`ActivityStartedEventDetails`](crate::types::ActivityStartedEventDetails).
    pub fn builder() -> crate::types::builders::ActivityStartedEventDetailsBuilder {
        crate::types::builders::ActivityStartedEventDetailsBuilder::default()
    }
}

/// A builder for [`ActivityStartedEventDetails`](crate::types::ActivityStartedEventDetails).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ActivityStartedEventDetailsBuilder {
    pub(crate) worker_name: std::option::Option<std::string::String>,
}
impl ActivityStartedEventDetailsBuilder {
    /// <p>The name of the worker that the task is assigned to. These names are provided by the workers when calling <code>GetActivityTask</code>.</p>
    pub fn worker_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.worker_name = Some(input.into());
        self
    }
    /// <p>The name of the worker that the task is assigned to. These names are provided by the workers when calling <code>GetActivityTask</code>.</p>
    pub fn set_worker_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.worker_name = input;
        self
    }
    /// Consumes the builder and constructs a [`ActivityStartedEventDetails`](crate::types::ActivityStartedEventDetails).
    pub fn build(self) -> crate::types::ActivityStartedEventDetails {
        crate::types::ActivityStartedEventDetails {
            worker_name: self.worker_name,
        }
    }
}
