// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>An object that describes workflow billing details.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct BillingDetails {
    /// <p>Billed memory consumption of your workflow, in MB.</p>
    #[doc(hidden)]
    pub billed_memory_used_in_mb: i64,
    /// <p>Billed duration of your workflow, in milliseconds.</p>
    #[doc(hidden)]
    pub billed_duration_in_milliseconds: i64,
}
impl BillingDetails {
    /// <p>Billed memory consumption of your workflow, in MB.</p>
    pub fn billed_memory_used_in_mb(&self) -> i64 {
        self.billed_memory_used_in_mb
    }
    /// <p>Billed duration of your workflow, in milliseconds.</p>
    pub fn billed_duration_in_milliseconds(&self) -> i64 {
        self.billed_duration_in_milliseconds
    }
}
impl BillingDetails {
    /// Creates a new builder-style object to manufacture [`BillingDetails`](crate::types::BillingDetails).
    pub fn builder() -> crate::types::builders::BillingDetailsBuilder {
        crate::types::builders::BillingDetailsBuilder::default()
    }
}

/// A builder for [`BillingDetails`](crate::types::BillingDetails).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct BillingDetailsBuilder {
    pub(crate) billed_memory_used_in_mb: std::option::Option<i64>,
    pub(crate) billed_duration_in_milliseconds: std::option::Option<i64>,
}
impl BillingDetailsBuilder {
    /// <p>Billed memory consumption of your workflow, in MB.</p>
    pub fn billed_memory_used_in_mb(mut self, input: i64) -> Self {
        self.billed_memory_used_in_mb = Some(input);
        self
    }
    /// <p>Billed memory consumption of your workflow, in MB.</p>
    pub fn set_billed_memory_used_in_mb(mut self, input: std::option::Option<i64>) -> Self {
        self.billed_memory_used_in_mb = input;
        self
    }
    /// <p>Billed duration of your workflow, in milliseconds.</p>
    pub fn billed_duration_in_milliseconds(mut self, input: i64) -> Self {
        self.billed_duration_in_milliseconds = Some(input);
        self
    }
    /// <p>Billed duration of your workflow, in milliseconds.</p>
    pub fn set_billed_duration_in_milliseconds(mut self, input: std::option::Option<i64>) -> Self {
        self.billed_duration_in_milliseconds = input;
        self
    }
    /// Consumes the builder and constructs a [`BillingDetails`](crate::types::BillingDetails).
    pub fn build(self) -> crate::types::BillingDetails {
        crate::types::BillingDetails {
            billed_memory_used_in_mb: self.billed_memory_used_in_mb.unwrap_or_default(),
            billed_duration_in_milliseconds: self
                .billed_duration_in_milliseconds
                .unwrap_or_default(),
        }
    }
}
