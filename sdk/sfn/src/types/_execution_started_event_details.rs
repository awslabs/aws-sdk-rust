// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains details about the start of the execution.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq)]
pub struct ExecutionStartedEventDetails {
    /// <p>The JSON data input to the execution. Length constraints apply to the payload size, and are expressed as bytes in UTF-8 encoding.</p>
    #[doc(hidden)]
    pub input: std::option::Option<std::string::String>,
    /// <p>Contains details about the input for an execution history event.</p>
    #[doc(hidden)]
    pub input_details: std::option::Option<crate::types::HistoryEventExecutionDataDetails>,
    /// <p>The Amazon Resource Name (ARN) of the IAM role used for executing Lambda tasks.</p>
    #[doc(hidden)]
    pub role_arn: std::option::Option<std::string::String>,
}
impl ExecutionStartedEventDetails {
    /// <p>The JSON data input to the execution. Length constraints apply to the payload size, and are expressed as bytes in UTF-8 encoding.</p>
    pub fn input(&self) -> std::option::Option<&str> {
        self.input.as_deref()
    }
    /// <p>Contains details about the input for an execution history event.</p>
    pub fn input_details(
        &self,
    ) -> std::option::Option<&crate::types::HistoryEventExecutionDataDetails> {
        self.input_details.as_ref()
    }
    /// <p>The Amazon Resource Name (ARN) of the IAM role used for executing Lambda tasks.</p>
    pub fn role_arn(&self) -> std::option::Option<&str> {
        self.role_arn.as_deref()
    }
}
impl std::fmt::Debug for ExecutionStartedEventDetails {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        let mut formatter = f.debug_struct("ExecutionStartedEventDetails");
        formatter.field("input", &"*** Sensitive Data Redacted ***");
        formatter.field("input_details", &self.input_details);
        formatter.field("role_arn", &self.role_arn);
        formatter.finish()
    }
}
impl ExecutionStartedEventDetails {
    /// Creates a new builder-style object to manufacture [`ExecutionStartedEventDetails`](crate::types::ExecutionStartedEventDetails).
    pub fn builder() -> crate::types::builders::ExecutionStartedEventDetailsBuilder {
        crate::types::builders::ExecutionStartedEventDetailsBuilder::default()
    }
}

/// A builder for [`ExecutionStartedEventDetails`](crate::types::ExecutionStartedEventDetails).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default)]
pub struct ExecutionStartedEventDetailsBuilder {
    pub(crate) input: std::option::Option<std::string::String>,
    pub(crate) input_details: std::option::Option<crate::types::HistoryEventExecutionDataDetails>,
    pub(crate) role_arn: std::option::Option<std::string::String>,
}
impl ExecutionStartedEventDetailsBuilder {
    /// <p>The JSON data input to the execution. Length constraints apply to the payload size, and are expressed as bytes in UTF-8 encoding.</p>
    pub fn input(mut self, input: impl Into<std::string::String>) -> Self {
        self.input = Some(input.into());
        self
    }
    /// <p>The JSON data input to the execution. Length constraints apply to the payload size, and are expressed as bytes in UTF-8 encoding.</p>
    pub fn set_input(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.input = input;
        self
    }
    /// <p>Contains details about the input for an execution history event.</p>
    pub fn input_details(mut self, input: crate::types::HistoryEventExecutionDataDetails) -> Self {
        self.input_details = Some(input);
        self
    }
    /// <p>Contains details about the input for an execution history event.</p>
    pub fn set_input_details(
        mut self,
        input: std::option::Option<crate::types::HistoryEventExecutionDataDetails>,
    ) -> Self {
        self.input_details = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the IAM role used for executing Lambda tasks.</p>
    pub fn role_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.role_arn = Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the IAM role used for executing Lambda tasks.</p>
    pub fn set_role_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.role_arn = input;
        self
    }
    /// Consumes the builder and constructs a [`ExecutionStartedEventDetails`](crate::types::ExecutionStartedEventDetails).
    pub fn build(self) -> crate::types::ExecutionStartedEventDetails {
        crate::types::ExecutionStartedEventDetails {
            input: self.input,
            input_details: self.input_details,
            role_arn: self.role_arn,
        }
    }
}
impl std::fmt::Debug for ExecutionStartedEventDetailsBuilder {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        let mut formatter = f.debug_struct("ExecutionStartedEventDetailsBuilder");
        formatter.field("input", &"*** Sensitive Data Redacted ***");
        formatter.field("input_details", &self.input_details);
        formatter.field("role_arn", &self.role_arn);
        formatter.finish()
    }
}
