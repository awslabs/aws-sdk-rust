// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Provides details about input or output in an execution history event.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct HistoryEventExecutionDataDetails {
    /// <p>Indicates whether input or output was truncated in the response. Always <code>false</code> for API calls.</p>
    #[doc(hidden)]
    pub truncated: bool,
}
impl HistoryEventExecutionDataDetails {
    /// <p>Indicates whether input or output was truncated in the response. Always <code>false</code> for API calls.</p>
    pub fn truncated(&self) -> bool {
        self.truncated
    }
}
impl HistoryEventExecutionDataDetails {
    /// Creates a new builder-style object to manufacture [`HistoryEventExecutionDataDetails`](crate::types::HistoryEventExecutionDataDetails).
    pub fn builder() -> crate::types::builders::HistoryEventExecutionDataDetailsBuilder {
        crate::types::builders::HistoryEventExecutionDataDetailsBuilder::default()
    }
}

/// A builder for [`HistoryEventExecutionDataDetails`](crate::types::HistoryEventExecutionDataDetails).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct HistoryEventExecutionDataDetailsBuilder {
    pub(crate) truncated: std::option::Option<bool>,
}
impl HistoryEventExecutionDataDetailsBuilder {
    /// <p>Indicates whether input or output was truncated in the response. Always <code>false</code> for API calls.</p>
    pub fn truncated(mut self, input: bool) -> Self {
        self.truncated = Some(input);
        self
    }
    /// <p>Indicates whether input or output was truncated in the response. Always <code>false</code> for API calls.</p>
    pub fn set_truncated(mut self, input: std::option::Option<bool>) -> Self {
        self.truncated = input;
        self
    }
    /// Consumes the builder and constructs a [`HistoryEventExecutionDataDetails`](crate::types::HistoryEventExecutionDataDetails).
    pub fn build(self) -> crate::types::HistoryEventExecutionDataDetails {
        crate::types::HistoryEventExecutionDataDetails {
            truncated: self.truncated.unwrap_or_default(),
        }
    }
}
