// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Provides details about execution input or output.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct CloudWatchEventsExecutionDataDetails {
    /// <p>Indicates whether input or output was included in the response. Always <code>true</code> for API calls. </p>
    #[doc(hidden)]
    pub included: bool,
}
impl CloudWatchEventsExecutionDataDetails {
    /// <p>Indicates whether input or output was included in the response. Always <code>true</code> for API calls. </p>
    pub fn included(&self) -> bool {
        self.included
    }
}
impl CloudWatchEventsExecutionDataDetails {
    /// Creates a new builder-style object to manufacture [`CloudWatchEventsExecutionDataDetails`](crate::types::CloudWatchEventsExecutionDataDetails).
    pub fn builder() -> crate::types::builders::CloudWatchEventsExecutionDataDetailsBuilder {
        crate::types::builders::CloudWatchEventsExecutionDataDetailsBuilder::default()
    }
}

/// A builder for [`CloudWatchEventsExecutionDataDetails`](crate::types::CloudWatchEventsExecutionDataDetails).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct CloudWatchEventsExecutionDataDetailsBuilder {
    pub(crate) included: std::option::Option<bool>,
}
impl CloudWatchEventsExecutionDataDetailsBuilder {
    /// <p>Indicates whether input or output was included in the response. Always <code>true</code> for API calls. </p>
    pub fn included(mut self, input: bool) -> Self {
        self.included = Some(input);
        self
    }
    /// <p>Indicates whether input or output was included in the response. Always <code>true</code> for API calls. </p>
    pub fn set_included(mut self, input: std::option::Option<bool>) -> Self {
        self.included = input;
        self
    }
    /// Consumes the builder and constructs a [`CloudWatchEventsExecutionDataDetails`](crate::types::CloudWatchEventsExecutionDataDetails).
    pub fn build(self) -> crate::types::CloudWatchEventsExecutionDataDetails {
        crate::types::CloudWatchEventsExecutionDataDetails {
            included: self.included.unwrap_or_default(),
        }
    }
}
