// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains details about a specific Map Run.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct MapRunListItem {
    /// <p>The <code>executionArn</code> of the execution from which the Map Run was started.</p>
    pub execution_arn: ::std::string::String,
    /// <p>The Amazon Resource Name (ARN) of the Map Run.</p>
    pub map_run_arn: ::std::string::String,
    /// <p>The Amazon Resource Name (ARN) of the executed state machine.</p>
    pub state_machine_arn: ::std::string::String,
    /// <p>The date on which the Map Run started.</p>
    pub start_date: ::aws_smithy_types::DateTime,
    /// <p>The date on which the Map Run stopped.</p>
    pub stop_date: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl MapRunListItem {
    /// <p>The <code>executionArn</code> of the execution from which the Map Run was started.</p>
    pub fn execution_arn(&self) -> &str {
        use std::ops::Deref;
        self.execution_arn.deref()
    }
    /// <p>The Amazon Resource Name (ARN) of the Map Run.</p>
    pub fn map_run_arn(&self) -> &str {
        use std::ops::Deref;
        self.map_run_arn.deref()
    }
    /// <p>The Amazon Resource Name (ARN) of the executed state machine.</p>
    pub fn state_machine_arn(&self) -> &str {
        use std::ops::Deref;
        self.state_machine_arn.deref()
    }
    /// <p>The date on which the Map Run started.</p>
    pub fn start_date(&self) -> &::aws_smithy_types::DateTime {
        &self.start_date
    }
    /// <p>The date on which the Map Run stopped.</p>
    pub fn stop_date(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.stop_date.as_ref()
    }
}
impl MapRunListItem {
    /// Creates a new builder-style object to manufacture [`MapRunListItem`](crate::types::MapRunListItem).
    pub fn builder() -> crate::types::builders::MapRunListItemBuilder {
        crate::types::builders::MapRunListItemBuilder::default()
    }
}

/// A builder for [`MapRunListItem`](crate::types::MapRunListItem).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct MapRunListItemBuilder {
    pub(crate) execution_arn: ::std::option::Option<::std::string::String>,
    pub(crate) map_run_arn: ::std::option::Option<::std::string::String>,
    pub(crate) state_machine_arn: ::std::option::Option<::std::string::String>,
    pub(crate) start_date: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) stop_date: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl MapRunListItemBuilder {
    /// <p>The <code>executionArn</code> of the execution from which the Map Run was started.</p>
    /// This field is required.
    pub fn execution_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.execution_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The <code>executionArn</code> of the execution from which the Map Run was started.</p>
    pub fn set_execution_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.execution_arn = input;
        self
    }
    /// <p>The <code>executionArn</code> of the execution from which the Map Run was started.</p>
    pub fn get_execution_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.execution_arn
    }
    /// <p>The Amazon Resource Name (ARN) of the Map Run.</p>
    /// This field is required.
    pub fn map_run_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.map_run_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the Map Run.</p>
    pub fn set_map_run_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.map_run_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the Map Run.</p>
    pub fn get_map_run_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.map_run_arn
    }
    /// <p>The Amazon Resource Name (ARN) of the executed state machine.</p>
    /// This field is required.
    pub fn state_machine_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.state_machine_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the executed state machine.</p>
    pub fn set_state_machine_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.state_machine_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the executed state machine.</p>
    pub fn get_state_machine_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.state_machine_arn
    }
    /// <p>The date on which the Map Run started.</p>
    /// This field is required.
    pub fn start_date(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.start_date = ::std::option::Option::Some(input);
        self
    }
    /// <p>The date on which the Map Run started.</p>
    pub fn set_start_date(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.start_date = input;
        self
    }
    /// <p>The date on which the Map Run started.</p>
    pub fn get_start_date(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.start_date
    }
    /// <p>The date on which the Map Run stopped.</p>
    pub fn stop_date(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.stop_date = ::std::option::Option::Some(input);
        self
    }
    /// <p>The date on which the Map Run stopped.</p>
    pub fn set_stop_date(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.stop_date = input;
        self
    }
    /// <p>The date on which the Map Run stopped.</p>
    pub fn get_stop_date(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.stop_date
    }
    /// Consumes the builder and constructs a [`MapRunListItem`](crate::types::MapRunListItem).
    /// This method will fail if any of the following fields are not set:
    /// - [`execution_arn`](crate::types::builders::MapRunListItemBuilder::execution_arn)
    /// - [`map_run_arn`](crate::types::builders::MapRunListItemBuilder::map_run_arn)
    /// - [`state_machine_arn`](crate::types::builders::MapRunListItemBuilder::state_machine_arn)
    /// - [`start_date`](crate::types::builders::MapRunListItemBuilder::start_date)
    pub fn build(self) -> ::std::result::Result<crate::types::MapRunListItem, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::MapRunListItem {
            execution_arn: self.execution_arn.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "execution_arn",
                    "execution_arn was not specified but it is required when building MapRunListItem",
                )
            })?,
            map_run_arn: self.map_run_arn.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "map_run_arn",
                    "map_run_arn was not specified but it is required when building MapRunListItem",
                )
            })?,
            state_machine_arn: self.state_machine_arn.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "state_machine_arn",
                    "state_machine_arn was not specified but it is required when building MapRunListItem",
                )
            })?,
            start_date: self.start_date.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "start_date",
                    "start_date was not specified but it is required when building MapRunListItem",
                )
            })?,
            stop_date: self.stop_date,
        })
    }
}
