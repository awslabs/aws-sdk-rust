// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains details about the execution timeout that occurred during the execution.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq)]
pub struct ExecutionTimedOutEventDetails {
    /// <p>The error code of the failure.</p>
    #[doc(hidden)]
    pub error: std::option::Option<std::string::String>,
    /// <p>A more detailed explanation of the cause of the timeout.</p>
    #[doc(hidden)]
    pub cause: std::option::Option<std::string::String>,
}
impl ExecutionTimedOutEventDetails {
    /// <p>The error code of the failure.</p>
    pub fn error(&self) -> std::option::Option<&str> {
        self.error.as_deref()
    }
    /// <p>A more detailed explanation of the cause of the timeout.</p>
    pub fn cause(&self) -> std::option::Option<&str> {
        self.cause.as_deref()
    }
}
impl std::fmt::Debug for ExecutionTimedOutEventDetails {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        let mut formatter = f.debug_struct("ExecutionTimedOutEventDetails");
        formatter.field("error", &"*** Sensitive Data Redacted ***");
        formatter.field("cause", &"*** Sensitive Data Redacted ***");
        formatter.finish()
    }
}
impl ExecutionTimedOutEventDetails {
    /// Creates a new builder-style object to manufacture [`ExecutionTimedOutEventDetails`](crate::types::ExecutionTimedOutEventDetails).
    pub fn builder() -> crate::types::builders::ExecutionTimedOutEventDetailsBuilder {
        crate::types::builders::ExecutionTimedOutEventDetailsBuilder::default()
    }
}

/// A builder for [`ExecutionTimedOutEventDetails`](crate::types::ExecutionTimedOutEventDetails).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default)]
pub struct ExecutionTimedOutEventDetailsBuilder {
    pub(crate) error: std::option::Option<std::string::String>,
    pub(crate) cause: std::option::Option<std::string::String>,
}
impl ExecutionTimedOutEventDetailsBuilder {
    /// <p>The error code of the failure.</p>
    pub fn error(mut self, input: impl Into<std::string::String>) -> Self {
        self.error = Some(input.into());
        self
    }
    /// <p>The error code of the failure.</p>
    pub fn set_error(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.error = input;
        self
    }
    /// <p>A more detailed explanation of the cause of the timeout.</p>
    pub fn cause(mut self, input: impl Into<std::string::String>) -> Self {
        self.cause = Some(input.into());
        self
    }
    /// <p>A more detailed explanation of the cause of the timeout.</p>
    pub fn set_cause(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.cause = input;
        self
    }
    /// Consumes the builder and constructs a [`ExecutionTimedOutEventDetails`](crate::types::ExecutionTimedOutEventDetails).
    pub fn build(self) -> crate::types::ExecutionTimedOutEventDetails {
        crate::types::ExecutionTimedOutEventDetails {
            error: self.error,
            cause: self.cause,
        }
    }
}
impl std::fmt::Debug for ExecutionTimedOutEventDetailsBuilder {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        let mut formatter = f.debug_struct("ExecutionTimedOutEventDetailsBuilder");
        formatter.field("error", &"*** Sensitive Data Redacted ***");
        formatter.field("cause", &"*** Sensitive Data Redacted ***");
        formatter.finish()
    }
}
