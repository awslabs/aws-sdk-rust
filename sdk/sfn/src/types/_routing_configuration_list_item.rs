// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains details about the routing configuration of a state machine alias. In a routing configuration, you define an array of objects that specify up to two state machine versions. You also specify the percentage of traffic to be routed to each version.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct RoutingConfigurationListItem {
    /// <p>The Amazon Resource Name (ARN) that identifies one or two state machine versions defined in the routing configuration.</p>
    /// <p>If you specify the ARN of a second version, it must belong to the same state machine as the first version.</p>
    pub state_machine_version_arn: ::std::string::String,
    /// <p>The percentage of traffic you want to route to the second state machine version. The sum of the weights in the routing configuration must be equal to 100.</p>
    pub weight: i32,
}
impl RoutingConfigurationListItem {
    /// <p>The Amazon Resource Name (ARN) that identifies one or two state machine versions defined in the routing configuration.</p>
    /// <p>If you specify the ARN of a second version, it must belong to the same state machine as the first version.</p>
    pub fn state_machine_version_arn(&self) -> &str {
        use std::ops::Deref;
        self.state_machine_version_arn.deref()
    }
    /// <p>The percentage of traffic you want to route to the second state machine version. The sum of the weights in the routing configuration must be equal to 100.</p>
    pub fn weight(&self) -> i32 {
        self.weight
    }
}
impl RoutingConfigurationListItem {
    /// Creates a new builder-style object to manufacture [`RoutingConfigurationListItem`](crate::types::RoutingConfigurationListItem).
    pub fn builder() -> crate::types::builders::RoutingConfigurationListItemBuilder {
        crate::types::builders::RoutingConfigurationListItemBuilder::default()
    }
}

/// A builder for [`RoutingConfigurationListItem`](crate::types::RoutingConfigurationListItem).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct RoutingConfigurationListItemBuilder {
    pub(crate) state_machine_version_arn: ::std::option::Option<::std::string::String>,
    pub(crate) weight: ::std::option::Option<i32>,
}
impl RoutingConfigurationListItemBuilder {
    /// <p>The Amazon Resource Name (ARN) that identifies one or two state machine versions defined in the routing configuration.</p>
    /// <p>If you specify the ARN of a second version, it must belong to the same state machine as the first version.</p>
    /// This field is required.
    pub fn state_machine_version_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.state_machine_version_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) that identifies one or two state machine versions defined in the routing configuration.</p>
    /// <p>If you specify the ARN of a second version, it must belong to the same state machine as the first version.</p>
    pub fn set_state_machine_version_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.state_machine_version_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) that identifies one or two state machine versions defined in the routing configuration.</p>
    /// <p>If you specify the ARN of a second version, it must belong to the same state machine as the first version.</p>
    pub fn get_state_machine_version_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.state_machine_version_arn
    }
    /// <p>The percentage of traffic you want to route to the second state machine version. The sum of the weights in the routing configuration must be equal to 100.</p>
    /// This field is required.
    pub fn weight(mut self, input: i32) -> Self {
        self.weight = ::std::option::Option::Some(input);
        self
    }
    /// <p>The percentage of traffic you want to route to the second state machine version. The sum of the weights in the routing configuration must be equal to 100.</p>
    pub fn set_weight(mut self, input: ::std::option::Option<i32>) -> Self {
        self.weight = input;
        self
    }
    /// <p>The percentage of traffic you want to route to the second state machine version. The sum of the weights in the routing configuration must be equal to 100.</p>
    pub fn get_weight(&self) -> &::std::option::Option<i32> {
        &self.weight
    }
    /// Consumes the builder and constructs a [`RoutingConfigurationListItem`](crate::types::RoutingConfigurationListItem).
    /// This method will fail if any of the following fields are not set:
    /// - [`state_machine_version_arn`](crate::types::builders::RoutingConfigurationListItemBuilder::state_machine_version_arn)
    pub fn build(self) -> ::std::result::Result<crate::types::RoutingConfigurationListItem, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::RoutingConfigurationListItem {
            state_machine_version_arn: self.state_machine_version_arn.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "state_machine_version_arn",
                    "state_machine_version_arn was not specified but it is required when building RoutingConfigurationListItem",
                )
            })?,
            weight: self.weight.unwrap_or_default(),
        })
    }
}
