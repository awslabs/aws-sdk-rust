// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_update_state_machine_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::update_state_machine::UpdateStateMachineInput,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.state_machine_arn {
        object.key("stateMachineArn").string(var_1.as_str());
    }
    if let Some(var_2) = &input.definition {
        object.key("definition").string(var_2.as_str());
    }
    if let Some(var_3) = &input.role_arn {
        object.key("roleArn").string(var_3.as_str());
    }
    if let Some(var_4) = &input.logging_configuration {
        #[allow(unused_mut)]
        let mut object_5 = object.key("loggingConfiguration").start_object();
        crate::protocol_serde::shape_logging_configuration::ser_logging_configuration(&mut object_5, var_4)?;
        object_5.finish();
    }
    if let Some(var_6) = &input.tracing_configuration {
        #[allow(unused_mut)]
        let mut object_7 = object.key("tracingConfiguration").start_object();
        crate::protocol_serde::shape_tracing_configuration::ser_tracing_configuration(&mut object_7, var_6)?;
        object_7.finish();
    }
    if let Some(var_8) = &input.publish {
        object.key("publish").boolean(*var_8);
    }
    if let Some(var_9) = &input.version_description {
        object.key("versionDescription").string(var_9.as_str());
    }
    Ok(())
}
