// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[doc(inline)]
pub use aws_smithy_client::Builder;
#[derive(Debug)]
pub(crate) struct Handle {
    pub(crate) client: aws_smithy_client::Client<
        aws_smithy_client::erase::DynConnector,
        aws_smithy_client::erase::DynMiddleware<aws_smithy_client::erase::DynConnector>,
    >,
    pub(crate) conf: crate::Config,
}

/// Client for AWS Private 5G
///
/// Client for invoking operations on AWS Private 5G. Each operation on AWS Private 5G is a method on this
/// this struct. `.send()` MUST be invoked on the generated operations to dispatch the request to the service.
///
/// # Examples
/// **Constructing a client and invoking an operation**
/// ```rust,no_run
/// # async fn docs() {
///     // create a shared configuration. This can be used & shared between multiple service clients.
///     let shared_config = aws_config::load_from_env().await;
///     let client = aws_sdk_privatenetworks::Client::new(&shared_config);
///     // invoke an operation
///     /* let rsp = client
///         .<operation_name>().
///         .<param>("some value")
///         .send().await; */
/// # }
/// ```
/// **Constructing a client with custom configuration**
/// ```rust,no_run
/// use aws_config::retry::RetryConfig;
/// # async fn docs() {
/// let shared_config = aws_config::load_from_env().await;
/// let config = aws_sdk_privatenetworks::config::Builder::from(&shared_config)
///   .retry_config(RetryConfig::disabled())
///   .build();
/// let client = aws_sdk_privatenetworks::Client::from_conf(config);
/// # }
#[derive(std::fmt::Debug)]
pub struct Client {
    handle: std::sync::Arc<Handle>,
}

impl std::clone::Clone for Client {
    fn clone(&self) -> Self {
        Self {
            handle: self.handle.clone(),
        }
    }
}

impl
    From<
        aws_smithy_client::Client<
            aws_smithy_client::erase::DynConnector,
            aws_smithy_client::erase::DynMiddleware<aws_smithy_client::erase::DynConnector>,
        >,
    > for Client
{
    fn from(
        client: aws_smithy_client::Client<
            aws_smithy_client::erase::DynConnector,
            aws_smithy_client::erase::DynMiddleware<aws_smithy_client::erase::DynConnector>,
        >,
    ) -> Self {
        Self::with_config(client, crate::Config::builder().build())
    }
}

impl Client {
    /// Creates a client with the given service configuration.
    pub fn with_config(
        client: aws_smithy_client::Client<
            aws_smithy_client::erase::DynConnector,
            aws_smithy_client::erase::DynMiddleware<aws_smithy_client::erase::DynConnector>,
        >,
        conf: crate::Config,
    ) -> Self {
        Self {
            handle: std::sync::Arc::new(Handle { client, conf }),
        }
    }

    /// Returns the client's configuration.
    pub fn conf(&self) -> &crate::Config {
        &self.handle.conf
    }
}
impl Client {
    /// Constructs a fluent builder for the [`AcknowledgeOrderReceipt`](crate::client::fluent_builders::AcknowledgeOrderReceipt) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`order_arn(impl Into<String>)`](crate::client::fluent_builders::AcknowledgeOrderReceipt::order_arn) / [`set_order_arn(Option<String>)`](crate::client::fluent_builders::AcknowledgeOrderReceipt::set_order_arn): <p>The Amazon Resource Name (ARN) of the order.</p>
    /// - On success, responds with [`AcknowledgeOrderReceiptOutput`](crate::output::AcknowledgeOrderReceiptOutput) with field(s):
    ///   - [`order(Option<Order>)`](crate::output::AcknowledgeOrderReceiptOutput::order): <p>Information about the order.</p>
    /// - On failure, responds with [`SdkError<AcknowledgeOrderReceiptError>`](crate::error::AcknowledgeOrderReceiptError)
    pub fn acknowledge_order_receipt(
        &self,
    ) -> crate::client::fluent_builders::AcknowledgeOrderReceipt {
        crate::client::fluent_builders::AcknowledgeOrderReceipt::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ActivateDeviceIdentifier`](crate::client::fluent_builders::ActivateDeviceIdentifier) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`device_identifier_arn(impl Into<String>)`](crate::client::fluent_builders::ActivateDeviceIdentifier::device_identifier_arn) / [`set_device_identifier_arn(Option<String>)`](crate::client::fluent_builders::ActivateDeviceIdentifier::set_device_identifier_arn): <p>The Amazon Resource Name (ARN) of the device identifier.</p>
    ///   - [`client_token(impl Into<String>)`](crate::client::fluent_builders::ActivateDeviceIdentifier::client_token) / [`set_client_token(Option<String>)`](crate::client::fluent_builders::ActivateDeviceIdentifier::set_client_token): <p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html">How to ensure idempotency</a>.</p>
    /// - On success, responds with [`ActivateDeviceIdentifierOutput`](crate::output::ActivateDeviceIdentifierOutput) with field(s):
    ///   - [`device_identifier(Option<DeviceIdentifier>)`](crate::output::ActivateDeviceIdentifierOutput::device_identifier): <p>Information about the device identifier.</p>
    ///   - [`tags(Option<HashMap<String, String>>)`](crate::output::ActivateDeviceIdentifierOutput::tags): <p> The tags on the device identifier. </p>
    /// - On failure, responds with [`SdkError<ActivateDeviceIdentifierError>`](crate::error::ActivateDeviceIdentifierError)
    pub fn activate_device_identifier(
        &self,
    ) -> crate::client::fluent_builders::ActivateDeviceIdentifier {
        crate::client::fluent_builders::ActivateDeviceIdentifier::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ActivateNetworkSite`](crate::client::fluent_builders::ActivateNetworkSite) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`network_site_arn(impl Into<String>)`](crate::client::fluent_builders::ActivateNetworkSite::network_site_arn) / [`set_network_site_arn(Option<String>)`](crate::client::fluent_builders::ActivateNetworkSite::set_network_site_arn): <p>The Amazon Resource Name (ARN) of the network site.</p>
    ///   - [`shipping_address(Address)`](crate::client::fluent_builders::ActivateNetworkSite::shipping_address) / [`set_shipping_address(Option<Address>)`](crate::client::fluent_builders::ActivateNetworkSite::set_shipping_address): <p>The shipping address of the network site.</p>
    ///   - [`client_token(impl Into<String>)`](crate::client::fluent_builders::ActivateNetworkSite::client_token) / [`set_client_token(Option<String>)`](crate::client::fluent_builders::ActivateNetworkSite::set_client_token): <p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html">How to ensure idempotency</a>.</p>
    /// - On success, responds with [`ActivateNetworkSiteOutput`](crate::output::ActivateNetworkSiteOutput) with field(s):
    ///   - [`network_site(Option<NetworkSite>)`](crate::output::ActivateNetworkSiteOutput::network_site): <p>Information about the network site.</p>
    /// - On failure, responds with [`SdkError<ActivateNetworkSiteError>`](crate::error::ActivateNetworkSiteError)
    pub fn activate_network_site(&self) -> crate::client::fluent_builders::ActivateNetworkSite {
        crate::client::fluent_builders::ActivateNetworkSite::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ConfigureAccessPoint`](crate::client::fluent_builders::ConfigureAccessPoint) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`access_point_arn(impl Into<String>)`](crate::client::fluent_builders::ConfigureAccessPoint::access_point_arn) / [`set_access_point_arn(Option<String>)`](crate::client::fluent_builders::ConfigureAccessPoint::set_access_point_arn): <p>The Amazon Resource Name (ARN) of the network resource.</p>
    ///   - [`position(Position)`](crate::client::fluent_builders::ConfigureAccessPoint::position) / [`set_position(Option<Position>)`](crate::client::fluent_builders::ConfigureAccessPoint::set_position): <p>The position of the network resource.</p>
    ///   - [`cpi_username(impl Into<String>)`](crate::client::fluent_builders::ConfigureAccessPoint::cpi_username) / [`set_cpi_username(Option<String>)`](crate::client::fluent_builders::ConfigureAccessPoint::set_cpi_username): <p>The CPI user name of the CPI user who is certifying the coordinates of the radio unit.</p>
    ///   - [`cpi_user_id(impl Into<String>)`](crate::client::fluent_builders::ConfigureAccessPoint::cpi_user_id) / [`set_cpi_user_id(Option<String>)`](crate::client::fluent_builders::ConfigureAccessPoint::set_cpi_user_id): <p>The CPI user ID of the CPI user who is certifying the coordinates of the network resource. </p>
    ///   - [`cpi_user_password(impl Into<String>)`](crate::client::fluent_builders::ConfigureAccessPoint::cpi_user_password) / [`set_cpi_user_password(Option<String>)`](crate::client::fluent_builders::ConfigureAccessPoint::set_cpi_user_password): <p>The CPI password associated with the CPI certificate in <code>cpiSecretKey</code>.</p>
    ///   - [`cpi_secret_key(impl Into<String>)`](crate::client::fluent_builders::ConfigureAccessPoint::cpi_secret_key) / [`set_cpi_secret_key(Option<String>)`](crate::client::fluent_builders::ConfigureAccessPoint::set_cpi_secret_key): <p>A Base64 encoded string of the CPI certificate associated with the CPI user who is certifying the coordinates of the network resource. </p>
    /// - On success, responds with [`ConfigureAccessPointOutput`](crate::output::ConfigureAccessPointOutput) with field(s):
    ///   - [`access_point(Option<NetworkResource>)`](crate::output::ConfigureAccessPointOutput::access_point): <p>Information about the network resource.</p>
    /// - On failure, responds with [`SdkError<ConfigureAccessPointError>`](crate::error::ConfigureAccessPointError)
    pub fn configure_access_point(&self) -> crate::client::fluent_builders::ConfigureAccessPoint {
        crate::client::fluent_builders::ConfigureAccessPoint::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`CreateNetwork`](crate::client::fluent_builders::CreateNetwork) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`network_name(impl Into<String>)`](crate::client::fluent_builders::CreateNetwork::network_name) / [`set_network_name(Option<String>)`](crate::client::fluent_builders::CreateNetwork::set_network_name): <p>The name of the network. You can't change the name after you create the network.</p>
    ///   - [`description(impl Into<String>)`](crate::client::fluent_builders::CreateNetwork::description) / [`set_description(Option<String>)`](crate::client::fluent_builders::CreateNetwork::set_description): <p>The description of the network.</p>
    ///   - [`client_token(impl Into<String>)`](crate::client::fluent_builders::CreateNetwork::client_token) / [`set_client_token(Option<String>)`](crate::client::fluent_builders::CreateNetwork::set_client_token): <p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html">How to ensure idempotency</a>.</p>
    ///   - [`tags(HashMap<String, String>)`](crate::client::fluent_builders::CreateNetwork::tags) / [`set_tags(Option<HashMap<String, String>>)`](crate::client::fluent_builders::CreateNetwork::set_tags): <p> The tags to apply to the network. </p>
    /// - On success, responds with [`CreateNetworkOutput`](crate::output::CreateNetworkOutput) with field(s):
    ///   - [`network(Option<Network>)`](crate::output::CreateNetworkOutput::network): <p>Information about the network.</p>
    ///   - [`tags(Option<HashMap<String, String>>)`](crate::output::CreateNetworkOutput::tags): <p> The network tags. </p>
    /// - On failure, responds with [`SdkError<CreateNetworkError>`](crate::error::CreateNetworkError)
    pub fn create_network(&self) -> crate::client::fluent_builders::CreateNetwork {
        crate::client::fluent_builders::CreateNetwork::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`CreateNetworkSite`](crate::client::fluent_builders::CreateNetworkSite) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`network_site_name(impl Into<String>)`](crate::client::fluent_builders::CreateNetworkSite::network_site_name) / [`set_network_site_name(Option<String>)`](crate::client::fluent_builders::CreateNetworkSite::set_network_site_name): <p>The name of the site. You can't change the name after you create the site.</p>
    ///   - [`description(impl Into<String>)`](crate::client::fluent_builders::CreateNetworkSite::description) / [`set_description(Option<String>)`](crate::client::fluent_builders::CreateNetworkSite::set_description): <p>The description of the site.</p>
    ///   - [`network_arn(impl Into<String>)`](crate::client::fluent_builders::CreateNetworkSite::network_arn) / [`set_network_arn(Option<String>)`](crate::client::fluent_builders::CreateNetworkSite::set_network_arn): <p>The Amazon Resource Name (ARN) of the network.</p>
    ///   - [`pending_plan(SitePlan)`](crate::client::fluent_builders::CreateNetworkSite::pending_plan) / [`set_pending_plan(Option<SitePlan>)`](crate::client::fluent_builders::CreateNetworkSite::set_pending_plan): <p>Information about the pending plan for this site.</p>
    ///   - [`client_token(impl Into<String>)`](crate::client::fluent_builders::CreateNetworkSite::client_token) / [`set_client_token(Option<String>)`](crate::client::fluent_builders::CreateNetworkSite::set_client_token): <p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html">How to ensure idempotency</a>.</p>
    ///   - [`availability_zone(impl Into<String>)`](crate::client::fluent_builders::CreateNetworkSite::availability_zone) / [`set_availability_zone(Option<String>)`](crate::client::fluent_builders::CreateNetworkSite::set_availability_zone): <p>The Availability Zone that is the parent of this site. You can't change the Availability Zone after you create the site.</p>
    ///   - [`availability_zone_id(impl Into<String>)`](crate::client::fluent_builders::CreateNetworkSite::availability_zone_id) / [`set_availability_zone_id(Option<String>)`](crate::client::fluent_builders::CreateNetworkSite::set_availability_zone_id): <p>The ID of the Availability Zone that is the parent of this site. You can't change the Availability Zone after you create the site.</p>
    ///   - [`tags(HashMap<String, String>)`](crate::client::fluent_builders::CreateNetworkSite::tags) / [`set_tags(Option<HashMap<String, String>>)`](crate::client::fluent_builders::CreateNetworkSite::set_tags): <p> The tags to apply to the network site. </p>
    /// - On success, responds with [`CreateNetworkSiteOutput`](crate::output::CreateNetworkSiteOutput) with field(s):
    ///   - [`network_site(Option<NetworkSite>)`](crate::output::CreateNetworkSiteOutput::network_site): <p>Information about the network site.</p>
    ///   - [`tags(Option<HashMap<String, String>>)`](crate::output::CreateNetworkSiteOutput::tags): <p> The network site tags. </p>
    /// - On failure, responds with [`SdkError<CreateNetworkSiteError>`](crate::error::CreateNetworkSiteError)
    pub fn create_network_site(&self) -> crate::client::fluent_builders::CreateNetworkSite {
        crate::client::fluent_builders::CreateNetworkSite::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeactivateDeviceIdentifier`](crate::client::fluent_builders::DeactivateDeviceIdentifier) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`device_identifier_arn(impl Into<String>)`](crate::client::fluent_builders::DeactivateDeviceIdentifier::device_identifier_arn) / [`set_device_identifier_arn(Option<String>)`](crate::client::fluent_builders::DeactivateDeviceIdentifier::set_device_identifier_arn): <p>The Amazon Resource Name (ARN) of the device identifier.</p>
    ///   - [`client_token(impl Into<String>)`](crate::client::fluent_builders::DeactivateDeviceIdentifier::client_token) / [`set_client_token(Option<String>)`](crate::client::fluent_builders::DeactivateDeviceIdentifier::set_client_token): <p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html">How to ensure idempotency</a>.</p>
    /// - On success, responds with [`DeactivateDeviceIdentifierOutput`](crate::output::DeactivateDeviceIdentifierOutput) with field(s):
    ///   - [`device_identifier(Option<DeviceIdentifier>)`](crate::output::DeactivateDeviceIdentifierOutput::device_identifier): <p>Information about the device identifier.</p>
    /// - On failure, responds with [`SdkError<DeactivateDeviceIdentifierError>`](crate::error::DeactivateDeviceIdentifierError)
    pub fn deactivate_device_identifier(
        &self,
    ) -> crate::client::fluent_builders::DeactivateDeviceIdentifier {
        crate::client::fluent_builders::DeactivateDeviceIdentifier::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteNetwork`](crate::client::fluent_builders::DeleteNetwork) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`network_arn(impl Into<String>)`](crate::client::fluent_builders::DeleteNetwork::network_arn) / [`set_network_arn(Option<String>)`](crate::client::fluent_builders::DeleteNetwork::set_network_arn): <p>The Amazon Resource Name (ARN) of the network.</p>
    ///   - [`client_token(impl Into<String>)`](crate::client::fluent_builders::DeleteNetwork::client_token) / [`set_client_token(Option<String>)`](crate::client::fluent_builders::DeleteNetwork::set_client_token): <p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html">How to ensure idempotency</a>.</p>
    /// - On success, responds with [`DeleteNetworkOutput`](crate::output::DeleteNetworkOutput) with field(s):
    ///   - [`network(Option<Network>)`](crate::output::DeleteNetworkOutput::network): <p>Information about the network.</p>
    /// - On failure, responds with [`SdkError<DeleteNetworkError>`](crate::error::DeleteNetworkError)
    pub fn delete_network(&self) -> crate::client::fluent_builders::DeleteNetwork {
        crate::client::fluent_builders::DeleteNetwork::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteNetworkSite`](crate::client::fluent_builders::DeleteNetworkSite) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`network_site_arn(impl Into<String>)`](crate::client::fluent_builders::DeleteNetworkSite::network_site_arn) / [`set_network_site_arn(Option<String>)`](crate::client::fluent_builders::DeleteNetworkSite::set_network_site_arn): <p>The Amazon Resource Name (ARN) of the network site.</p>
    ///   - [`client_token(impl Into<String>)`](crate::client::fluent_builders::DeleteNetworkSite::client_token) / [`set_client_token(Option<String>)`](crate::client::fluent_builders::DeleteNetworkSite::set_client_token): <p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html">How to ensure idempotency</a>.</p>
    /// - On success, responds with [`DeleteNetworkSiteOutput`](crate::output::DeleteNetworkSiteOutput) with field(s):
    ///   - [`network_site(Option<NetworkSite>)`](crate::output::DeleteNetworkSiteOutput::network_site): <p>Information about the network site.</p>
    /// - On failure, responds with [`SdkError<DeleteNetworkSiteError>`](crate::error::DeleteNetworkSiteError)
    pub fn delete_network_site(&self) -> crate::client::fluent_builders::DeleteNetworkSite {
        crate::client::fluent_builders::DeleteNetworkSite::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetDeviceIdentifier`](crate::client::fluent_builders::GetDeviceIdentifier) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`device_identifier_arn(impl Into<String>)`](crate::client::fluent_builders::GetDeviceIdentifier::device_identifier_arn) / [`set_device_identifier_arn(Option<String>)`](crate::client::fluent_builders::GetDeviceIdentifier::set_device_identifier_arn): <p>The Amazon Resource Name (ARN) of the device identifier.</p>
    /// - On success, responds with [`GetDeviceIdentifierOutput`](crate::output::GetDeviceIdentifierOutput) with field(s):
    ///   - [`device_identifier(Option<DeviceIdentifier>)`](crate::output::GetDeviceIdentifierOutput::device_identifier): <p>Information about the device identifier.</p>
    ///   - [`tags(Option<HashMap<String, String>>)`](crate::output::GetDeviceIdentifierOutput::tags): <p> The device identifier tags. </p>
    /// - On failure, responds with [`SdkError<GetDeviceIdentifierError>`](crate::error::GetDeviceIdentifierError)
    pub fn get_device_identifier(&self) -> crate::client::fluent_builders::GetDeviceIdentifier {
        crate::client::fluent_builders::GetDeviceIdentifier::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetNetwork`](crate::client::fluent_builders::GetNetwork) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`network_arn(impl Into<String>)`](crate::client::fluent_builders::GetNetwork::network_arn) / [`set_network_arn(Option<String>)`](crate::client::fluent_builders::GetNetwork::set_network_arn): <p>The Amazon Resource Name (ARN) of the network.</p>
    /// - On success, responds with [`GetNetworkOutput`](crate::output::GetNetworkOutput) with field(s):
    ///   - [`network(Option<Network>)`](crate::output::GetNetworkOutput::network): <p>Information about the network.</p>
    ///   - [`tags(Option<HashMap<String, String>>)`](crate::output::GetNetworkOutput::tags): <p> The network tags. </p>
    /// - On failure, responds with [`SdkError<GetNetworkError>`](crate::error::GetNetworkError)
    pub fn get_network(&self) -> crate::client::fluent_builders::GetNetwork {
        crate::client::fluent_builders::GetNetwork::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetNetworkResource`](crate::client::fluent_builders::GetNetworkResource) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`network_resource_arn(impl Into<String>)`](crate::client::fluent_builders::GetNetworkResource::network_resource_arn) / [`set_network_resource_arn(Option<String>)`](crate::client::fluent_builders::GetNetworkResource::set_network_resource_arn): <p>The Amazon Resource Name (ARN) of the network resource.</p>
    /// - On success, responds with [`GetNetworkResourceOutput`](crate::output::GetNetworkResourceOutput) with field(s):
    ///   - [`network_resource(Option<NetworkResource>)`](crate::output::GetNetworkResourceOutput::network_resource): <p>Information about the network resource.</p>
    ///   - [`tags(Option<HashMap<String, String>>)`](crate::output::GetNetworkResourceOutput::tags): <p> The network resource tags. </p>
    /// - On failure, responds with [`SdkError<GetNetworkResourceError>`](crate::error::GetNetworkResourceError)
    pub fn get_network_resource(&self) -> crate::client::fluent_builders::GetNetworkResource {
        crate::client::fluent_builders::GetNetworkResource::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetNetworkSite`](crate::client::fluent_builders::GetNetworkSite) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`network_site_arn(impl Into<String>)`](crate::client::fluent_builders::GetNetworkSite::network_site_arn) / [`set_network_site_arn(Option<String>)`](crate::client::fluent_builders::GetNetworkSite::set_network_site_arn): <p>The Amazon Resource Name (ARN) of the network site.</p>
    /// - On success, responds with [`GetNetworkSiteOutput`](crate::output::GetNetworkSiteOutput) with field(s):
    ///   - [`network_site(Option<NetworkSite>)`](crate::output::GetNetworkSiteOutput::network_site): <p>Information about the network site.</p>
    ///   - [`tags(Option<HashMap<String, String>>)`](crate::output::GetNetworkSiteOutput::tags): <p> The network site tags. </p>
    /// - On failure, responds with [`SdkError<GetNetworkSiteError>`](crate::error::GetNetworkSiteError)
    pub fn get_network_site(&self) -> crate::client::fluent_builders::GetNetworkSite {
        crate::client::fluent_builders::GetNetworkSite::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetOrder`](crate::client::fluent_builders::GetOrder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`order_arn(impl Into<String>)`](crate::client::fluent_builders::GetOrder::order_arn) / [`set_order_arn(Option<String>)`](crate::client::fluent_builders::GetOrder::set_order_arn): <p>The Amazon Resource Name (ARN) of the order.</p>
    /// - On success, responds with [`GetOrderOutput`](crate::output::GetOrderOutput) with field(s):
    ///   - [`order(Option<Order>)`](crate::output::GetOrderOutput::order): <p>Information about the order.</p>
    ///   - [`tags(Option<HashMap<String, String>>)`](crate::output::GetOrderOutput::tags): <p> The order tags. </p>
    /// - On failure, responds with [`SdkError<GetOrderError>`](crate::error::GetOrderError)
    pub fn get_order(&self) -> crate::client::fluent_builders::GetOrder {
        crate::client::fluent_builders::GetOrder::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListDeviceIdentifiers`](crate::client::fluent_builders::ListDeviceIdentifiers) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListDeviceIdentifiers::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`filters(HashMap<DeviceIdentifierFilterKeys, Vec<String>>)`](crate::client::fluent_builders::ListDeviceIdentifiers::filters) / [`set_filters(Option<HashMap<DeviceIdentifierFilterKeys, Vec<String>>>)`](crate::client::fluent_builders::ListDeviceIdentifiers::set_filters): <p>The filters.</p>  <ul>   <li> <p> <code>ORDER</code> - The Amazon Resource Name (ARN) of the order.</p> </li>   <li> <p> <code>STATUS</code> - The status (<code>ACTIVE</code> | <code>INACTIVE</code>).</p> </li>   <li> <p> <code>TRAFFIC_GROUP</code> - The Amazon Resource Name (ARN) of the traffic group.</p> </li>  </ul>  <p>Filter values are case sensitive. If you specify multiple values for a filter, the values are joined with an <code>OR</code>, and the request returns all results that match any of the specified values.</p>
    ///   - [`network_arn(impl Into<String>)`](crate::client::fluent_builders::ListDeviceIdentifiers::network_arn) / [`set_network_arn(Option<String>)`](crate::client::fluent_builders::ListDeviceIdentifiers::set_network_arn): <p>The Amazon Resource Name (ARN) of the network.</p>
    ///   - [`start_token(impl Into<String>)`](crate::client::fluent_builders::ListDeviceIdentifiers::start_token) / [`set_start_token(Option<String>)`](crate::client::fluent_builders::ListDeviceIdentifiers::set_start_token): <p>The token for the next page of results.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListDeviceIdentifiers::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListDeviceIdentifiers::set_max_results): <p>The maximum number of results to return.</p>
    /// - On success, responds with [`ListDeviceIdentifiersOutput`](crate::output::ListDeviceIdentifiersOutput) with field(s):
    ///   - [`device_identifiers(Option<Vec<DeviceIdentifier>>)`](crate::output::ListDeviceIdentifiersOutput::device_identifiers): <p>Information about the device identifiers.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListDeviceIdentifiersOutput::next_token): <p>The token for the next page of results.</p>
    /// - On failure, responds with [`SdkError<ListDeviceIdentifiersError>`](crate::error::ListDeviceIdentifiersError)
    pub fn list_device_identifiers(&self) -> crate::client::fluent_builders::ListDeviceIdentifiers {
        crate::client::fluent_builders::ListDeviceIdentifiers::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListNetworkResources`](crate::client::fluent_builders::ListNetworkResources) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListNetworkResources::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`filters(HashMap<NetworkResourceFilterKeys, Vec<String>>)`](crate::client::fluent_builders::ListNetworkResources::filters) / [`set_filters(Option<HashMap<NetworkResourceFilterKeys, Vec<String>>>)`](crate::client::fluent_builders::ListNetworkResources::set_filters): <p>The filters.</p>  <ul>   <li> <p> <code>ORDER</code> - The Amazon Resource Name (ARN) of the order.</p> </li>   <li> <p> <code>STATUS</code> - The status (<code>AVAILABLE</code> | <code>DELETED</code> | <code>DELETING</code> | <code>PENDING</code> | <code>PENDING_RETURN</code> | <code>PROVISIONING</code> | <code>SHIPPED</code>).</p> </li>  </ul>  <p>Filter values are case sensitive. If you specify multiple values for a filter, the values are joined with an <code>OR</code>, and the request returns all results that match any of the specified values.</p>
    ///   - [`network_arn(impl Into<String>)`](crate::client::fluent_builders::ListNetworkResources::network_arn) / [`set_network_arn(Option<String>)`](crate::client::fluent_builders::ListNetworkResources::set_network_arn): <p>The Amazon Resource Name (ARN) of the network.</p>
    ///   - [`start_token(impl Into<String>)`](crate::client::fluent_builders::ListNetworkResources::start_token) / [`set_start_token(Option<String>)`](crate::client::fluent_builders::ListNetworkResources::set_start_token): <p>The token for the next page of results.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListNetworkResources::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListNetworkResources::set_max_results): <p>The maximum number of results to return.</p>
    /// - On success, responds with [`ListNetworkResourcesOutput`](crate::output::ListNetworkResourcesOutput) with field(s):
    ///   - [`network_resources(Option<Vec<NetworkResource>>)`](crate::output::ListNetworkResourcesOutput::network_resources): <p>Information about network resources.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListNetworkResourcesOutput::next_token): <p>The token for the next page of results.</p>
    /// - On failure, responds with [`SdkError<ListNetworkResourcesError>`](crate::error::ListNetworkResourcesError)
    pub fn list_network_resources(&self) -> crate::client::fluent_builders::ListNetworkResources {
        crate::client::fluent_builders::ListNetworkResources::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListNetworks`](crate::client::fluent_builders::ListNetworks) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListNetworks::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`filters(HashMap<NetworkFilterKeys, Vec<String>>)`](crate::client::fluent_builders::ListNetworks::filters) / [`set_filters(Option<HashMap<NetworkFilterKeys, Vec<String>>>)`](crate::client::fluent_builders::ListNetworks::set_filters): <p>The filters.</p>  <ul>   <li> <p> <code>STATUS</code> - The status (<code>AVAILABLE</code> | <code>CREATED</code> | <code>DELETED</code> | <code>DEPROVISIONING</code> | <code>PROVISIONING</code>).</p> </li>  </ul>  <p>Filter values are case sensitive. If you specify multiple values for a filter, the values are joined with an <code>OR</code>, and the request returns all results that match any of the specified values.</p>
    ///   - [`start_token(impl Into<String>)`](crate::client::fluent_builders::ListNetworks::start_token) / [`set_start_token(Option<String>)`](crate::client::fluent_builders::ListNetworks::set_start_token): <p>The token for the next page of results.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListNetworks::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListNetworks::set_max_results): <p>The maximum number of results to return.</p>
    /// - On success, responds with [`ListNetworksOutput`](crate::output::ListNetworksOutput) with field(s):
    ///   - [`networks(Option<Vec<Network>>)`](crate::output::ListNetworksOutput::networks): <p>The networks.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListNetworksOutput::next_token): <p>The token for the next page of results.</p>
    /// - On failure, responds with [`SdkError<ListNetworksError>`](crate::error::ListNetworksError)
    pub fn list_networks(&self) -> crate::client::fluent_builders::ListNetworks {
        crate::client::fluent_builders::ListNetworks::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListNetworkSites`](crate::client::fluent_builders::ListNetworkSites) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListNetworkSites::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`filters(HashMap<NetworkSiteFilterKeys, Vec<String>>)`](crate::client::fluent_builders::ListNetworkSites::filters) / [`set_filters(Option<HashMap<NetworkSiteFilterKeys, Vec<String>>>)`](crate::client::fluent_builders::ListNetworkSites::set_filters): <p>The filters. Add filters to your request to return a more specific list of results. Use filters to match the status of the network sites.</p>  <ul>   <li> <p> <code>STATUS</code> - The status (<code>AVAILABLE</code> | <code>CREATED</code> | <code>DELETED</code> | <code>DEPROVISIONING</code> | <code>PROVISIONING</code>).</p> </li>  </ul>  <p>Filter values are case sensitive. If you specify multiple values for a filter, the values are joined with an <code>OR</code>, and the request returns all results that match any of the specified values.</p>
    ///   - [`network_arn(impl Into<String>)`](crate::client::fluent_builders::ListNetworkSites::network_arn) / [`set_network_arn(Option<String>)`](crate::client::fluent_builders::ListNetworkSites::set_network_arn): <p>The Amazon Resource Name (ARN) of the network.</p>
    ///   - [`start_token(impl Into<String>)`](crate::client::fluent_builders::ListNetworkSites::start_token) / [`set_start_token(Option<String>)`](crate::client::fluent_builders::ListNetworkSites::set_start_token): <p>The token for the next page of results.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListNetworkSites::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListNetworkSites::set_max_results): <p>The maximum number of results to return.</p>
    /// - On success, responds with [`ListNetworkSitesOutput`](crate::output::ListNetworkSitesOutput) with field(s):
    ///   - [`network_sites(Option<Vec<NetworkSite>>)`](crate::output::ListNetworkSitesOutput::network_sites): <p>Information about the network sites.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListNetworkSitesOutput::next_token): <p>The token for the next page of results.</p>
    /// - On failure, responds with [`SdkError<ListNetworkSitesError>`](crate::error::ListNetworkSitesError)
    pub fn list_network_sites(&self) -> crate::client::fluent_builders::ListNetworkSites {
        crate::client::fluent_builders::ListNetworkSites::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListOrders`](crate::client::fluent_builders::ListOrders) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListOrders::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`network_arn(impl Into<String>)`](crate::client::fluent_builders::ListOrders::network_arn) / [`set_network_arn(Option<String>)`](crate::client::fluent_builders::ListOrders::set_network_arn): <p>The Amazon Resource Name (ARN) of the network.</p>
    ///   - [`start_token(impl Into<String>)`](crate::client::fluent_builders::ListOrders::start_token) / [`set_start_token(Option<String>)`](crate::client::fluent_builders::ListOrders::set_start_token): <p>The token for the next page of results.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListOrders::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListOrders::set_max_results): <p>The maximum number of results to return.</p>
    ///   - [`filters(HashMap<OrderFilterKeys, Vec<String>>)`](crate::client::fluent_builders::ListOrders::filters) / [`set_filters(Option<HashMap<OrderFilterKeys, Vec<String>>>)`](crate::client::fluent_builders::ListOrders::set_filters): <p>The filters.</p>  <ul>   <li> <p> <code>NETWORK_SITE</code> - The Amazon Resource Name (ARN) of the network site.</p> </li>   <li> <p> <code>STATUS</code> - The status (<code>ACKNOWLEDGING</code> | <code>ACKNOWLEDGED</code> | <code>UNACKNOWLEDGED</code>).</p> </li>  </ul>  <p>Filter values are case sensitive. If you specify multiple values for a filter, the values are joined with an <code>OR</code>, and the request returns all results that match any of the specified values.</p>
    /// - On success, responds with [`ListOrdersOutput`](crate::output::ListOrdersOutput) with field(s):
    ///   - [`orders(Option<Vec<Order>>)`](crate::output::ListOrdersOutput::orders): <p>Information about the orders.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListOrdersOutput::next_token): <p>The token for the next page of results.</p>
    /// - On failure, responds with [`SdkError<ListOrdersError>`](crate::error::ListOrdersError)
    pub fn list_orders(&self) -> crate::client::fluent_builders::ListOrders {
        crate::client::fluent_builders::ListOrders::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListTagsForResource`](crate::client::fluent_builders::ListTagsForResource) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`resource_arn(impl Into<String>)`](crate::client::fluent_builders::ListTagsForResource::resource_arn) / [`set_resource_arn(Option<String>)`](crate::client::fluent_builders::ListTagsForResource::set_resource_arn): <p>The Amazon Resource Name (ARN) of the resource.</p>
    /// - On success, responds with [`ListTagsForResourceOutput`](crate::output::ListTagsForResourceOutput) with field(s):
    ///   - [`tags(Option<HashMap<String, String>>)`](crate::output::ListTagsForResourceOutput::tags): <p>The resource tags.</p>
    /// - On failure, responds with [`SdkError<ListTagsForResourceError>`](crate::error::ListTagsForResourceError)
    pub fn list_tags_for_resource(&self) -> crate::client::fluent_builders::ListTagsForResource {
        crate::client::fluent_builders::ListTagsForResource::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`Ping`](crate::client::fluent_builders::Ping) operation.
    ///
    /// - The fluent builder takes no input, just [`send`](crate::client::fluent_builders::Ping::send) it.

    /// - On success, responds with [`PingOutput`](crate::output::PingOutput) with field(s):
    ///   - [`status(Option<String>)`](crate::output::PingOutput::status): <p>Information about the health of the service.</p>
    /// - On failure, responds with [`SdkError<PingError>`](crate::error::PingError)
    pub fn ping(&self) -> crate::client::fluent_builders::Ping {
        crate::client::fluent_builders::Ping::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`TagResource`](crate::client::fluent_builders::TagResource) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`resource_arn(impl Into<String>)`](crate::client::fluent_builders::TagResource::resource_arn) / [`set_resource_arn(Option<String>)`](crate::client::fluent_builders::TagResource::set_resource_arn): <p> The Amazon Resource Name (ARN) of the resource. </p>
    ///   - [`tags(HashMap<String, String>)`](crate::client::fluent_builders::TagResource::tags) / [`set_tags(Option<HashMap<String, String>>)`](crate::client::fluent_builders::TagResource::set_tags): <p>The tags to add to the resource.</p>
    /// - On success, responds with [`TagResourceOutput`](crate::output::TagResourceOutput)

    /// - On failure, responds with [`SdkError<TagResourceError>`](crate::error::TagResourceError)
    pub fn tag_resource(&self) -> crate::client::fluent_builders::TagResource {
        crate::client::fluent_builders::TagResource::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`UntagResource`](crate::client::fluent_builders::UntagResource) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`resource_arn(impl Into<String>)`](crate::client::fluent_builders::UntagResource::resource_arn) / [`set_resource_arn(Option<String>)`](crate::client::fluent_builders::UntagResource::set_resource_arn): <p>The Amazon Resource Name (ARN) of the resource.</p>
    ///   - [`tag_keys(Vec<String>)`](crate::client::fluent_builders::UntagResource::tag_keys) / [`set_tag_keys(Option<Vec<String>>)`](crate::client::fluent_builders::UntagResource::set_tag_keys): <p>The tag keys.</p>
    /// - On success, responds with [`UntagResourceOutput`](crate::output::UntagResourceOutput)

    /// - On failure, responds with [`SdkError<UntagResourceError>`](crate::error::UntagResourceError)
    pub fn untag_resource(&self) -> crate::client::fluent_builders::UntagResource {
        crate::client::fluent_builders::UntagResource::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`UpdateNetworkSite`](crate::client::fluent_builders::UpdateNetworkSite) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`network_site_arn(impl Into<String>)`](crate::client::fluent_builders::UpdateNetworkSite::network_site_arn) / [`set_network_site_arn(Option<String>)`](crate::client::fluent_builders::UpdateNetworkSite::set_network_site_arn): <p>The Amazon Resource Name (ARN) of the network site.</p>
    ///   - [`client_token(impl Into<String>)`](crate::client::fluent_builders::UpdateNetworkSite::client_token) / [`set_client_token(Option<String>)`](crate::client::fluent_builders::UpdateNetworkSite::set_client_token): <p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html">How to ensure idempotency</a>.</p>
    ///   - [`description(impl Into<String>)`](crate::client::fluent_builders::UpdateNetworkSite::description) / [`set_description(Option<String>)`](crate::client::fluent_builders::UpdateNetworkSite::set_description): <p>The description.</p>
    /// - On success, responds with [`UpdateNetworkSiteOutput`](crate::output::UpdateNetworkSiteOutput) with field(s):
    ///   - [`network_site(Option<NetworkSite>)`](crate::output::UpdateNetworkSiteOutput::network_site): <p>Information about the network site.</p>
    ///   - [`tags(Option<HashMap<String, String>>)`](crate::output::UpdateNetworkSiteOutput::tags): <p> The network site tags. </p>
    /// - On failure, responds with [`SdkError<UpdateNetworkSiteError>`](crate::error::UpdateNetworkSiteError)
    pub fn update_network_site(&self) -> crate::client::fluent_builders::UpdateNetworkSite {
        crate::client::fluent_builders::UpdateNetworkSite::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`UpdateNetworkSitePlan`](crate::client::fluent_builders::UpdateNetworkSitePlan) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`network_site_arn(impl Into<String>)`](crate::client::fluent_builders::UpdateNetworkSitePlan::network_site_arn) / [`set_network_site_arn(Option<String>)`](crate::client::fluent_builders::UpdateNetworkSitePlan::set_network_site_arn): <p>The Amazon Resource Name (ARN) of the network site.</p>
    ///   - [`pending_plan(SitePlan)`](crate::client::fluent_builders::UpdateNetworkSitePlan::pending_plan) / [`set_pending_plan(Option<SitePlan>)`](crate::client::fluent_builders::UpdateNetworkSitePlan::set_pending_plan): <p>The pending plan.</p>
    ///   - [`client_token(impl Into<String>)`](crate::client::fluent_builders::UpdateNetworkSitePlan::client_token) / [`set_client_token(Option<String>)`](crate::client::fluent_builders::UpdateNetworkSitePlan::set_client_token): <p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html">How to ensure idempotency</a>.</p>
    /// - On success, responds with [`UpdateNetworkSitePlanOutput`](crate::output::UpdateNetworkSitePlanOutput) with field(s):
    ///   - [`network_site(Option<NetworkSite>)`](crate::output::UpdateNetworkSitePlanOutput::network_site): <p>Information about the network site.</p>
    ///   - [`tags(Option<HashMap<String, String>>)`](crate::output::UpdateNetworkSitePlanOutput::tags): <p> The network site tags. </p>
    /// - On failure, responds with [`SdkError<UpdateNetworkSitePlanError>`](crate::error::UpdateNetworkSitePlanError)
    pub fn update_network_site_plan(
        &self,
    ) -> crate::client::fluent_builders::UpdateNetworkSitePlan {
        crate::client::fluent_builders::UpdateNetworkSitePlan::new(self.handle.clone())
    }
}

impl Client {
    /// Creates a new client from an [SDK Config](aws_types::sdk_config::SdkConfig).
    ///
    /// # Panics
    ///
    /// - This method will panic if the `sdk_config` is missing an async sleep implementation. If you experience this panic, set
    ///     the `sleep_impl` on the Config passed into this function to fix it.
    /// - This method will panic if the `sdk_config` is missing an HTTP connector. If you experience this panic, set the
    ///     `http_connector` on the Config passed into this function to fix it.
    pub fn new(sdk_config: &aws_types::sdk_config::SdkConfig) -> Self {
        Self::from_conf(sdk_config.into())
    }

    /// Creates a new client from the service [`Config`](crate::Config).
    ///
    /// # Panics
    ///
    /// - This method will panic if the `conf` is missing an async sleep implementation. If you experience this panic, set
    ///     the `sleep_impl` on the Config passed into this function to fix it.
    /// - This method will panic if the `conf` is missing an HTTP connector. If you experience this panic, set the
    ///     `http_connector` on the Config passed into this function to fix it.
    pub fn from_conf(conf: crate::Config) -> Self {
        let retry_config = conf
            .retry_config()
            .cloned()
            .unwrap_or_else(aws_smithy_types::retry::RetryConfig::disabled);
        let timeout_config = conf
            .timeout_config()
            .cloned()
            .unwrap_or_else(aws_smithy_types::timeout::TimeoutConfig::disabled);
        let sleep_impl = conf.sleep_impl();
        if (retry_config.has_retry() || timeout_config.has_timeouts()) && sleep_impl.is_none() {
            panic!("An async sleep implementation is required for retries or timeouts to work. \
                                    Set the `sleep_impl` on the Config passed into this function to fix this panic.");
        }

        let connector = conf.http_connector().and_then(|c| {
            let timeout_config = conf
                .timeout_config()
                .cloned()
                .unwrap_or_else(aws_smithy_types::timeout::TimeoutConfig::disabled);
            let connector_settings =
                aws_smithy_client::http_connector::ConnectorSettings::from_timeout_config(
                    &timeout_config,
                );
            c.connector(&connector_settings, conf.sleep_impl())
        });

        let builder = aws_smithy_client::Builder::new();

        let builder = match connector {
            // Use provided connector
            Some(c) => builder.connector(c),
            None => {
                #[cfg(any(feature = "rustls", feature = "native-tls"))]
                {
                    // Use default connector based on enabled features
                    builder.dyn_https_connector(
                        aws_smithy_client::http_connector::ConnectorSettings::from_timeout_config(
                            &timeout_config,
                        ),
                    )
                }
                #[cfg(not(any(feature = "rustls", feature = "native-tls")))]
                {
                    panic!("No HTTP connector was available. Enable the `rustls` or `native-tls` crate feature or set a connector to fix this.");
                }
            }
        };
        let mut builder = builder
            .middleware(aws_smithy_client::erase::DynMiddleware::new(
                crate::middleware::DefaultMiddleware::new(),
            ))
            .retry_config(retry_config.into())
            .operation_timeout_config(timeout_config.into());
        builder.set_sleep_impl(sleep_impl);
        let client = builder.build();

        Self {
            handle: std::sync::Arc::new(Handle { client, conf }),
        }
    }
}

/// Utilities to ergonomically construct a request to the service.
///
/// Fluent builders are created through the [`Client`](crate::client::Client) by calling
/// one if its operation methods. After parameters are set using the builder methods,
/// the `send` method can be called to initiate the request.
pub mod fluent_builders;
