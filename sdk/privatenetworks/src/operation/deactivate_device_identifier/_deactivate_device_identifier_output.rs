// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DeactivateDeviceIdentifierOutput {
    /// <p>Information about the device identifier.</p>
    #[doc(hidden)]
    pub device_identifier: std::option::Option<crate::types::DeviceIdentifier>,
    _request_id: Option<String>,
}
impl DeactivateDeviceIdentifierOutput {
    /// <p>Information about the device identifier.</p>
    pub fn device_identifier(&self) -> std::option::Option<&crate::types::DeviceIdentifier> {
        self.device_identifier.as_ref()
    }
}
impl aws_http::request_id::RequestId for DeactivateDeviceIdentifierOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl DeactivateDeviceIdentifierOutput {
    /// Creates a new builder-style object to manufacture [`DeactivateDeviceIdentifierOutput`](crate::operation::deactivate_device_identifier::DeactivateDeviceIdentifierOutput).
    pub fn builder() -> crate::operation::deactivate_device_identifier::builders::DeactivateDeviceIdentifierOutputBuilder{
        crate::operation::deactivate_device_identifier::builders::DeactivateDeviceIdentifierOutputBuilder::default()
    }
}

/// A builder for [`DeactivateDeviceIdentifierOutput`](crate::operation::deactivate_device_identifier::DeactivateDeviceIdentifierOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DeactivateDeviceIdentifierOutputBuilder {
    pub(crate) device_identifier: std::option::Option<crate::types::DeviceIdentifier>,
    _request_id: Option<String>,
}
impl DeactivateDeviceIdentifierOutputBuilder {
    /// <p>Information about the device identifier.</p>
    pub fn device_identifier(mut self, input: crate::types::DeviceIdentifier) -> Self {
        self.device_identifier = Some(input);
        self
    }
    /// <p>Information about the device identifier.</p>
    pub fn set_device_identifier(
        mut self,
        input: std::option::Option<crate::types::DeviceIdentifier>,
    ) -> Self {
        self.device_identifier = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`DeactivateDeviceIdentifierOutput`](crate::operation::deactivate_device_identifier::DeactivateDeviceIdentifierOutput).
    pub fn build(
        self,
    ) -> crate::operation::deactivate_device_identifier::DeactivateDeviceIdentifierOutput {
        crate::operation::deactivate_device_identifier::DeactivateDeviceIdentifierOutput {
            device_identifier: self.device_identifier,
            _request_id: self._request_id,
        }
    }
}
