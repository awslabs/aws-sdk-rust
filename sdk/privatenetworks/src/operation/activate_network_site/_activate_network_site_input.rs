// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ActivateNetworkSiteInput {
    /// <p>The Amazon Resource Name (ARN) of the network site.</p>
    pub network_site_arn: ::std::option::Option<::std::string::String>,
    /// <p>The shipping address of the network site.</p>
    pub shipping_address: ::std::option::Option<crate::types::Address>,
    /// <p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html">How to ensure idempotency</a>.</p>
    pub client_token: ::std::option::Option<::std::string::String>,
    /// <p>Determines the duration and renewal status of the commitment period for all pending radio units.</p>
    /// <p>If you include <code>commitmentConfiguration</code> in the <code>ActivateNetworkSiteRequest</code> action, you must specify the following:</p>
    /// <ul>
    /// <li> <p>The commitment period for the radio unit. You can choose a 60-day, 1-year, or 3-year period.</p> </li>
    /// <li> <p>Whether you want your commitment period to automatically renew for one more year after your current commitment period expires.</p> </li>
    /// </ul>
    /// <p>For pricing, see <a href="http://aws.amazon.com/private5g/pricing">Amazon Web Services Private 5G Pricing</a>.</p>
    /// <p>If you do not include <code>commitmentConfiguration</code> in the <code>ActivateNetworkSiteRequest</code> action, the commitment period is set to 60-days.</p>
    pub commitment_configuration: ::std::option::Option<crate::types::CommitmentConfiguration>,
}
impl ActivateNetworkSiteInput {
    /// <p>The Amazon Resource Name (ARN) of the network site.</p>
    pub fn network_site_arn(&self) -> ::std::option::Option<&str> {
        self.network_site_arn.as_deref()
    }
    /// <p>The shipping address of the network site.</p>
    pub fn shipping_address(&self) -> ::std::option::Option<&crate::types::Address> {
        self.shipping_address.as_ref()
    }
    /// <p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html">How to ensure idempotency</a>.</p>
    pub fn client_token(&self) -> ::std::option::Option<&str> {
        self.client_token.as_deref()
    }
    /// <p>Determines the duration and renewal status of the commitment period for all pending radio units.</p>
    /// <p>If you include <code>commitmentConfiguration</code> in the <code>ActivateNetworkSiteRequest</code> action, you must specify the following:</p>
    /// <ul>
    /// <li> <p>The commitment period for the radio unit. You can choose a 60-day, 1-year, or 3-year period.</p> </li>
    /// <li> <p>Whether you want your commitment period to automatically renew for one more year after your current commitment period expires.</p> </li>
    /// </ul>
    /// <p>For pricing, see <a href="http://aws.amazon.com/private5g/pricing">Amazon Web Services Private 5G Pricing</a>.</p>
    /// <p>If you do not include <code>commitmentConfiguration</code> in the <code>ActivateNetworkSiteRequest</code> action, the commitment period is set to 60-days.</p>
    pub fn commitment_configuration(&self) -> ::std::option::Option<&crate::types::CommitmentConfiguration> {
        self.commitment_configuration.as_ref()
    }
}
impl ActivateNetworkSiteInput {
    /// Creates a new builder-style object to manufacture [`ActivateNetworkSiteInput`](crate::operation::activate_network_site::ActivateNetworkSiteInput).
    pub fn builder() -> crate::operation::activate_network_site::builders::ActivateNetworkSiteInputBuilder {
        crate::operation::activate_network_site::builders::ActivateNetworkSiteInputBuilder::default()
    }
}

/// A builder for [`ActivateNetworkSiteInput`](crate::operation::activate_network_site::ActivateNetworkSiteInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ActivateNetworkSiteInputBuilder {
    pub(crate) network_site_arn: ::std::option::Option<::std::string::String>,
    pub(crate) shipping_address: ::std::option::Option<crate::types::Address>,
    pub(crate) client_token: ::std::option::Option<::std::string::String>,
    pub(crate) commitment_configuration: ::std::option::Option<crate::types::CommitmentConfiguration>,
}
impl ActivateNetworkSiteInputBuilder {
    /// <p>The Amazon Resource Name (ARN) of the network site.</p>
    /// This field is required.
    pub fn network_site_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.network_site_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the network site.</p>
    pub fn set_network_site_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.network_site_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the network site.</p>
    pub fn get_network_site_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.network_site_arn
    }
    /// <p>The shipping address of the network site.</p>
    /// This field is required.
    pub fn shipping_address(mut self, input: crate::types::Address) -> Self {
        self.shipping_address = ::std::option::Option::Some(input);
        self
    }
    /// <p>The shipping address of the network site.</p>
    pub fn set_shipping_address(mut self, input: ::std::option::Option<crate::types::Address>) -> Self {
        self.shipping_address = input;
        self
    }
    /// <p>The shipping address of the network site.</p>
    pub fn get_shipping_address(&self) -> &::std::option::Option<crate::types::Address> {
        &self.shipping_address
    }
    /// <p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html">How to ensure idempotency</a>.</p>
    pub fn client_token(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.client_token = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html">How to ensure idempotency</a>.</p>
    pub fn set_client_token(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.client_token = input;
        self
    }
    /// <p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html">How to ensure idempotency</a>.</p>
    pub fn get_client_token(&self) -> &::std::option::Option<::std::string::String> {
        &self.client_token
    }
    /// <p>Determines the duration and renewal status of the commitment period for all pending radio units.</p>
    /// <p>If you include <code>commitmentConfiguration</code> in the <code>ActivateNetworkSiteRequest</code> action, you must specify the following:</p>
    /// <ul>
    /// <li> <p>The commitment period for the radio unit. You can choose a 60-day, 1-year, or 3-year period.</p> </li>
    /// <li> <p>Whether you want your commitment period to automatically renew for one more year after your current commitment period expires.</p> </li>
    /// </ul>
    /// <p>For pricing, see <a href="http://aws.amazon.com/private5g/pricing">Amazon Web Services Private 5G Pricing</a>.</p>
    /// <p>If you do not include <code>commitmentConfiguration</code> in the <code>ActivateNetworkSiteRequest</code> action, the commitment period is set to 60-days.</p>
    pub fn commitment_configuration(mut self, input: crate::types::CommitmentConfiguration) -> Self {
        self.commitment_configuration = ::std::option::Option::Some(input);
        self
    }
    /// <p>Determines the duration and renewal status of the commitment period for all pending radio units.</p>
    /// <p>If you include <code>commitmentConfiguration</code> in the <code>ActivateNetworkSiteRequest</code> action, you must specify the following:</p>
    /// <ul>
    /// <li> <p>The commitment period for the radio unit. You can choose a 60-day, 1-year, or 3-year period.</p> </li>
    /// <li> <p>Whether you want your commitment period to automatically renew for one more year after your current commitment period expires.</p> </li>
    /// </ul>
    /// <p>For pricing, see <a href="http://aws.amazon.com/private5g/pricing">Amazon Web Services Private 5G Pricing</a>.</p>
    /// <p>If you do not include <code>commitmentConfiguration</code> in the <code>ActivateNetworkSiteRequest</code> action, the commitment period is set to 60-days.</p>
    pub fn set_commitment_configuration(mut self, input: ::std::option::Option<crate::types::CommitmentConfiguration>) -> Self {
        self.commitment_configuration = input;
        self
    }
    /// <p>Determines the duration and renewal status of the commitment period for all pending radio units.</p>
    /// <p>If you include <code>commitmentConfiguration</code> in the <code>ActivateNetworkSiteRequest</code> action, you must specify the following:</p>
    /// <ul>
    /// <li> <p>The commitment period for the radio unit. You can choose a 60-day, 1-year, or 3-year period.</p> </li>
    /// <li> <p>Whether you want your commitment period to automatically renew for one more year after your current commitment period expires.</p> </li>
    /// </ul>
    /// <p>For pricing, see <a href="http://aws.amazon.com/private5g/pricing">Amazon Web Services Private 5G Pricing</a>.</p>
    /// <p>If you do not include <code>commitmentConfiguration</code> in the <code>ActivateNetworkSiteRequest</code> action, the commitment period is set to 60-days.</p>
    pub fn get_commitment_configuration(&self) -> &::std::option::Option<crate::types::CommitmentConfiguration> {
        &self.commitment_configuration
    }
    /// Consumes the builder and constructs a [`ActivateNetworkSiteInput`](crate::operation::activate_network_site::ActivateNetworkSiteInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::activate_network_site::ActivateNetworkSiteInput, ::aws_smithy_types::error::operation::BuildError>
    {
        ::std::result::Result::Ok(crate::operation::activate_network_site::ActivateNetworkSiteInput {
            network_site_arn: self.network_site_arn,
            shipping_address: self.shipping_address,
            client_token: self.client_token,
            commitment_configuration: self.commitment_configuration,
        })
    }
}
