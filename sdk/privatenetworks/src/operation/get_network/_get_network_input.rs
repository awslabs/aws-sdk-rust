// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GetNetworkInput {
    /// <p>The Amazon Resource Name (ARN) of the network.</p>
    pub network_arn: ::std::option::Option<::std::string::String>,
}
impl GetNetworkInput {
    /// <p>The Amazon Resource Name (ARN) of the network.</p>
    pub fn network_arn(&self) -> ::std::option::Option<&str> {
        self.network_arn.as_deref()
    }
}
impl GetNetworkInput {
    /// Creates a new builder-style object to manufacture [`GetNetworkInput`](crate::operation::get_network::GetNetworkInput).
    pub fn builder() -> crate::operation::get_network::builders::GetNetworkInputBuilder {
        crate::operation::get_network::builders::GetNetworkInputBuilder::default()
    }
}

/// A builder for [`GetNetworkInput`](crate::operation::get_network::GetNetworkInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct GetNetworkInputBuilder {
    pub(crate) network_arn: ::std::option::Option<::std::string::String>,
}
impl GetNetworkInputBuilder {
    /// <p>The Amazon Resource Name (ARN) of the network.</p>
    /// This field is required.
    pub fn network_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.network_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the network.</p>
    pub fn set_network_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.network_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the network.</p>
    pub fn get_network_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.network_arn
    }
    /// Consumes the builder and constructs a [`GetNetworkInput`](crate::operation::get_network::GetNetworkInput).
    pub fn build(self) -> ::std::result::Result<crate::operation::get_network::GetNetworkInput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::operation::get_network::GetNetworkInput {
            network_arn: self.network_arn,
        })
    }
}
