// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about a network.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct Network {
    /// <p>The Amazon Resource Name (ARN) of the network.</p>
    #[doc(hidden)]
    pub network_arn: std::option::Option<std::string::String>,
    /// <p>The name of the network.</p>
    #[doc(hidden)]
    pub network_name: std::option::Option<std::string::String>,
    /// <p>The description of the network.</p>
    #[doc(hidden)]
    pub description: std::option::Option<std::string::String>,
    /// <p>The status of the network.</p>
    #[doc(hidden)]
    pub status: std::option::Option<crate::types::NetworkStatus>,
    /// <p>The status reason of the network.</p>
    #[doc(hidden)]
    pub status_reason: std::option::Option<std::string::String>,
    /// <p>The creation time of the network.</p>
    #[doc(hidden)]
    pub created_at: std::option::Option<aws_smithy_types::DateTime>,
}
impl Network {
    /// <p>The Amazon Resource Name (ARN) of the network.</p>
    pub fn network_arn(&self) -> std::option::Option<&str> {
        self.network_arn.as_deref()
    }
    /// <p>The name of the network.</p>
    pub fn network_name(&self) -> std::option::Option<&str> {
        self.network_name.as_deref()
    }
    /// <p>The description of the network.</p>
    pub fn description(&self) -> std::option::Option<&str> {
        self.description.as_deref()
    }
    /// <p>The status of the network.</p>
    pub fn status(&self) -> std::option::Option<&crate::types::NetworkStatus> {
        self.status.as_ref()
    }
    /// <p>The status reason of the network.</p>
    pub fn status_reason(&self) -> std::option::Option<&str> {
        self.status_reason.as_deref()
    }
    /// <p>The creation time of the network.</p>
    pub fn created_at(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.created_at.as_ref()
    }
}
impl Network {
    /// Creates a new builder-style object to manufacture [`Network`](crate::types::Network).
    pub fn builder() -> crate::types::builders::NetworkBuilder {
        crate::types::builders::NetworkBuilder::default()
    }
}

/// A builder for [`Network`](crate::types::Network).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct NetworkBuilder {
    pub(crate) network_arn: std::option::Option<std::string::String>,
    pub(crate) network_name: std::option::Option<std::string::String>,
    pub(crate) description: std::option::Option<std::string::String>,
    pub(crate) status: std::option::Option<crate::types::NetworkStatus>,
    pub(crate) status_reason: std::option::Option<std::string::String>,
    pub(crate) created_at: std::option::Option<aws_smithy_types::DateTime>,
}
impl NetworkBuilder {
    /// <p>The Amazon Resource Name (ARN) of the network.</p>
    pub fn network_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.network_arn = Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the network.</p>
    pub fn set_network_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.network_arn = input;
        self
    }
    /// <p>The name of the network.</p>
    pub fn network_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.network_name = Some(input.into());
        self
    }
    /// <p>The name of the network.</p>
    pub fn set_network_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.network_name = input;
        self
    }
    /// <p>The description of the network.</p>
    pub fn description(mut self, input: impl Into<std::string::String>) -> Self {
        self.description = Some(input.into());
        self
    }
    /// <p>The description of the network.</p>
    pub fn set_description(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.description = input;
        self
    }
    /// <p>The status of the network.</p>
    pub fn status(mut self, input: crate::types::NetworkStatus) -> Self {
        self.status = Some(input);
        self
    }
    /// <p>The status of the network.</p>
    pub fn set_status(mut self, input: std::option::Option<crate::types::NetworkStatus>) -> Self {
        self.status = input;
        self
    }
    /// <p>The status reason of the network.</p>
    pub fn status_reason(mut self, input: impl Into<std::string::String>) -> Self {
        self.status_reason = Some(input.into());
        self
    }
    /// <p>The status reason of the network.</p>
    pub fn set_status_reason(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.status_reason = input;
        self
    }
    /// <p>The creation time of the network.</p>
    pub fn created_at(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.created_at = Some(input);
        self
    }
    /// <p>The creation time of the network.</p>
    pub fn set_created_at(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.created_at = input;
        self
    }
    /// Consumes the builder and constructs a [`Network`](crate::types::Network).
    pub fn build(self) -> crate::types::Network {
        crate::types::Network {
            network_arn: self.network_arn,
            network_name: self.network_name,
            description: self.description,
            status: self.status,
            status_reason: self.status_reason,
            created_at: self.created_at,
        }
    }
}
