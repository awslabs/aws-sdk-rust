// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about tracking a shipment.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct TrackingInformation {
    /// <p>The tracking number of the shipment.</p>
    #[doc(hidden)]
    pub tracking_number: std::option::Option<std::string::String>,
}
impl TrackingInformation {
    /// <p>The tracking number of the shipment.</p>
    pub fn tracking_number(&self) -> std::option::Option<&str> {
        self.tracking_number.as_deref()
    }
}
impl TrackingInformation {
    /// Creates a new builder-style object to manufacture [`TrackingInformation`](crate::types::TrackingInformation).
    pub fn builder() -> crate::types::builders::TrackingInformationBuilder {
        crate::types::builders::TrackingInformationBuilder::default()
    }
}

/// A builder for [`TrackingInformation`](crate::types::TrackingInformation).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct TrackingInformationBuilder {
    pub(crate) tracking_number: std::option::Option<std::string::String>,
}
impl TrackingInformationBuilder {
    /// <p>The tracking number of the shipment.</p>
    pub fn tracking_number(mut self, input: impl Into<std::string::String>) -> Self {
        self.tracking_number = Some(input.into());
        self
    }
    /// <p>The tracking number of the shipment.</p>
    pub fn set_tracking_number(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.tracking_number = input;
        self
    }
    /// Consumes the builder and constructs a [`TrackingInformation`](crate::types::TrackingInformation).
    pub fn build(self) -> crate::types::TrackingInformation {
        crate::types::TrackingInformation {
            tracking_number: self.tracking_number,
        }
    }
}
