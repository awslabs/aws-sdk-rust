// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListOrders`](crate::operation::list_orders::builders::ListOrdersFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::list_orders::builders::ListOrdersFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`network_arn(impl Into<String>)`](crate::operation::list_orders::builders::ListOrdersFluentBuilder::network_arn) / [`set_network_arn(Option<String>)`](crate::operation::list_orders::builders::ListOrdersFluentBuilder::set_network_arn):<br>required: **true**<br><p>The Amazon Resource Name (ARN) of the network.</p><br>
    ///   - [`start_token(impl Into<String>)`](crate::operation::list_orders::builders::ListOrdersFluentBuilder::start_token) / [`set_start_token(Option<String>)`](crate::operation::list_orders::builders::ListOrdersFluentBuilder::set_start_token):<br>required: **false**<br><p>The token for the next page of results.</p><br>
    ///   - [`max_results(i32)`](crate::operation::list_orders::builders::ListOrdersFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::list_orders::builders::ListOrdersFluentBuilder::set_max_results):<br>required: **false**<br><p>The maximum number of results to return.</p><br>
    ///   - [`filters(OrderFilterKeys, Vec::<String>)`](crate::operation::list_orders::builders::ListOrdersFluentBuilder::filters) / [`set_filters(Option<HashMap::<OrderFilterKeys, Vec::<String>>>)`](crate::operation::list_orders::builders::ListOrdersFluentBuilder::set_filters):<br>required: **false**<br><p>The filters.</p>  <ul>   <li> <p> <code>NETWORK_SITE</code> - The Amazon Resource Name (ARN) of the network site.</p> </li>   <li> <p> <code>STATUS</code> - The status (<code>ACKNOWLEDGING</code> | <code>ACKNOWLEDGED</code> | <code>UNACKNOWLEDGED</code>).</p> </li>  </ul>  <p>Filter values are case sensitive. If you specify multiple values for a filter, the values are joined with an <code>OR</code>, and the request returns all results that match any of the specified values.</p><br>
    /// - On success, responds with [`ListOrdersOutput`](crate::operation::list_orders::ListOrdersOutput) with field(s):
    ///   - [`orders(Option<Vec::<Order>>)`](crate::operation::list_orders::ListOrdersOutput::orders): <p>Information about the orders.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::list_orders::ListOrdersOutput::next_token): <p>The token for the next page of results.</p>
    /// - On failure, responds with [`SdkError<ListOrdersError>`](crate::operation::list_orders::ListOrdersError)
    pub fn list_orders(&self) -> crate::operation::list_orders::builders::ListOrdersFluentBuilder {
        crate::operation::list_orders::builders::ListOrdersFluentBuilder::new(self.handle.clone())
    }
}
