// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListHumanLoops`](crate::operation::list_human_loops::builders::ListHumanLoopsFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::list_human_loops::builders::ListHumanLoopsFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`creation_time_after(DateTime)`](crate::operation::list_human_loops::builders::ListHumanLoopsFluentBuilder::creation_time_after) / [`set_creation_time_after(Option<DateTime>)`](crate::operation::list_human_loops::builders::ListHumanLoopsFluentBuilder::set_creation_time_after):<br>required: **false**<br><p>(Optional) The timestamp of the date when you want the human loops to begin in ISO 8601 format. For example, <code>2020-02-24</code>.</p><br>
    ///   - [`creation_time_before(DateTime)`](crate::operation::list_human_loops::builders::ListHumanLoopsFluentBuilder::creation_time_before) / [`set_creation_time_before(Option<DateTime>)`](crate::operation::list_human_loops::builders::ListHumanLoopsFluentBuilder::set_creation_time_before):<br>required: **false**<br><p>(Optional) The timestamp of the date before which you want the human loops to begin in ISO 8601 format. For example, <code>2020-02-24</code>.</p><br>
    ///   - [`flow_definition_arn(impl Into<String>)`](crate::operation::list_human_loops::builders::ListHumanLoopsFluentBuilder::flow_definition_arn) / [`set_flow_definition_arn(Option<String>)`](crate::operation::list_human_loops::builders::ListHumanLoopsFluentBuilder::set_flow_definition_arn):<br>required: **true**<br><p>The Amazon Resource Name (ARN) of a flow definition.</p><br>
    ///   - [`sort_order(SortOrder)`](crate::operation::list_human_loops::builders::ListHumanLoopsFluentBuilder::sort_order) / [`set_sort_order(Option<SortOrder>)`](crate::operation::list_human_loops::builders::ListHumanLoopsFluentBuilder::set_sort_order):<br>required: **false**<br><p>Optional. The order for displaying results. Valid values: <code>Ascending</code> and <code>Descending</code>.</p><br>
    ///   - [`next_token(impl Into<String>)`](crate::operation::list_human_loops::builders::ListHumanLoopsFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::list_human_loops::builders::ListHumanLoopsFluentBuilder::set_next_token):<br>required: **false**<br><p>A token to display the next page of results.</p><br>
    ///   - [`max_results(i32)`](crate::operation::list_human_loops::builders::ListHumanLoopsFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::list_human_loops::builders::ListHumanLoopsFluentBuilder::set_max_results):<br>required: **false**<br><p>The total number of items to return. If the total number of available items is more than the value specified in <code>MaxResults</code>, then a <code>NextToken</code> is returned in the output. You can use this token to display the next page of results. </p><br>
    /// - On success, responds with [`ListHumanLoopsOutput`](crate::operation::list_human_loops::ListHumanLoopsOutput) with field(s):
    ///   - [`human_loop_summaries(Option<Vec::<HumanLoopSummary>>)`](crate::operation::list_human_loops::ListHumanLoopsOutput::human_loop_summaries): <p>An array of objects that contain information about the human loops.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::list_human_loops::ListHumanLoopsOutput::next_token): <p>A token to display the next page of results.</p>
    /// - On failure, responds with [`SdkError<ListHumanLoopsError>`](crate::operation::list_human_loops::ListHumanLoopsError)
    pub fn list_human_loops(&self) -> crate::operation::list_human_loops::builders::ListHumanLoopsFluentBuilder {
        crate::operation::list_human_loops::builders::ListHumanLoopsFluentBuilder::new(self.handle.clone())
    }
}
