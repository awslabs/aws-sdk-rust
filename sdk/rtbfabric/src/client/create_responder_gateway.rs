// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateResponderGateway`](crate::operation::create_responder_gateway::builders::CreateResponderGatewayFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`vpc_id(impl Into<String>)`](crate::operation::create_responder_gateway::builders::CreateResponderGatewayFluentBuilder::vpc_id) / [`set_vpc_id(Option<String>)`](crate::operation::create_responder_gateway::builders::CreateResponderGatewayFluentBuilder::set_vpc_id):<br>required: **true**<br><p>The unique identifier of the Virtual Private Cloud (VPC).</p><br>
    ///   - [`subnet_ids(impl Into<String>)`](crate::operation::create_responder_gateway::builders::CreateResponderGatewayFluentBuilder::subnet_ids) / [`set_subnet_ids(Option<Vec::<String>>)`](crate::operation::create_responder_gateway::builders::CreateResponderGatewayFluentBuilder::set_subnet_ids):<br>required: **true**<br><p>The unique identifiers of the subnets.</p><br>
    ///   - [`security_group_ids(impl Into<String>)`](crate::operation::create_responder_gateway::builders::CreateResponderGatewayFluentBuilder::security_group_ids) / [`set_security_group_ids(Option<Vec::<String>>)`](crate::operation::create_responder_gateway::builders::CreateResponderGatewayFluentBuilder::set_security_group_ids):<br>required: **true**<br><p>The unique identifiers of the security groups.</p><br>
    ///   - [`domain_name(impl Into<String>)`](crate::operation::create_responder_gateway::builders::CreateResponderGatewayFluentBuilder::domain_name) / [`set_domain_name(Option<String>)`](crate::operation::create_responder_gateway::builders::CreateResponderGatewayFluentBuilder::set_domain_name):<br>required: **false**<br><p>The domain name for the responder gateway.</p><br>
    ///   - [`port(i32)`](crate::operation::create_responder_gateway::builders::CreateResponderGatewayFluentBuilder::port) / [`set_port(Option<i32>)`](crate::operation::create_responder_gateway::builders::CreateResponderGatewayFluentBuilder::set_port):<br>required: **true**<br><p>The networking port to use.</p><br>
    ///   - [`protocol(Protocol)`](crate::operation::create_responder_gateway::builders::CreateResponderGatewayFluentBuilder::protocol) / [`set_protocol(Option<Protocol>)`](crate::operation::create_responder_gateway::builders::CreateResponderGatewayFluentBuilder::set_protocol):<br>required: **true**<br><p>The networking protocol to use.</p><br>
    ///   - [`trust_store_configuration(TrustStoreConfiguration)`](crate::operation::create_responder_gateway::builders::CreateResponderGatewayFluentBuilder::trust_store_configuration) / [`set_trust_store_configuration(Option<TrustStoreConfiguration>)`](crate::operation::create_responder_gateway::builders::CreateResponderGatewayFluentBuilder::set_trust_store_configuration):<br>required: **false**<br><p>The configuration of the trust store.</p><br>
    ///   - [`managed_endpoint_configuration(ManagedEndpointConfiguration)`](crate::operation::create_responder_gateway::builders::CreateResponderGatewayFluentBuilder::managed_endpoint_configuration) / [`set_managed_endpoint_configuration(Option<ManagedEndpointConfiguration>)`](crate::operation::create_responder_gateway::builders::CreateResponderGatewayFluentBuilder::set_managed_endpoint_configuration):<br>required: **false**<br><p>The configuration for the managed endpoint.</p><br>
    ///   - [`client_token(impl Into<String>)`](crate::operation::create_responder_gateway::builders::CreateResponderGatewayFluentBuilder::client_token) / [`set_client_token(Option<String>)`](crate::operation::create_responder_gateway::builders::CreateResponderGatewayFluentBuilder::set_client_token):<br>required: **true**<br><p>The unique client token.</p><br>
    ///   - [`description(impl Into<String>)`](crate::operation::create_responder_gateway::builders::CreateResponderGatewayFluentBuilder::description) / [`set_description(Option<String>)`](crate::operation::create_responder_gateway::builders::CreateResponderGatewayFluentBuilder::set_description):<br>required: **false**<br><p>An optional description for the responder gateway.</p><br>
    ///   - [`tags(impl Into<String>, impl Into<String>)`](crate::operation::create_responder_gateway::builders::CreateResponderGatewayFluentBuilder::tags) / [`set_tags(Option<HashMap::<String, String>>)`](crate::operation::create_responder_gateway::builders::CreateResponderGatewayFluentBuilder::set_tags):<br>required: **false**<br><p>A map of the key-value pairs of the tag or tags to assign to the resource.</p><br>
    /// - On success, responds with [`CreateResponderGatewayOutput`](crate::operation::create_responder_gateway::CreateResponderGatewayOutput) with field(s):
    ///   - [`gateway_id(String)`](crate::operation::create_responder_gateway::CreateResponderGatewayOutput::gateway_id): <p>The unique identifier of the gateway.</p>
    ///   - [`status(ResponderGatewayStatus)`](crate::operation::create_responder_gateway::CreateResponderGatewayOutput::status): <p>The status of the request.</p>
    /// - On failure, responds with [`SdkError<CreateResponderGatewayError>`](crate::operation::create_responder_gateway::CreateResponderGatewayError)
    pub fn create_responder_gateway(&self) -> crate::operation::create_responder_gateway::builders::CreateResponderGatewayFluentBuilder {
        crate::operation::create_responder_gateway::builders::CreateResponderGatewayFluentBuilder::new(self.handle.clone())
    }
}
