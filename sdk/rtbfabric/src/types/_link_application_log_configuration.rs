// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Describes the configuration of a link application log.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct LinkApplicationLogConfiguration {
    /// <p>Describes a link application log sample.</p>
    pub sampling: ::std::option::Option<crate::types::LinkApplicationLogSampling>,
}
impl LinkApplicationLogConfiguration {
    /// <p>Describes a link application log sample.</p>
    pub fn sampling(&self) -> ::std::option::Option<&crate::types::LinkApplicationLogSampling> {
        self.sampling.as_ref()
    }
}
impl LinkApplicationLogConfiguration {
    /// Creates a new builder-style object to manufacture [`LinkApplicationLogConfiguration`](crate::types::LinkApplicationLogConfiguration).
    pub fn builder() -> crate::types::builders::LinkApplicationLogConfigurationBuilder {
        crate::types::builders::LinkApplicationLogConfigurationBuilder::default()
    }
}

/// A builder for [`LinkApplicationLogConfiguration`](crate::types::LinkApplicationLogConfiguration).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct LinkApplicationLogConfigurationBuilder {
    pub(crate) sampling: ::std::option::Option<crate::types::LinkApplicationLogSampling>,
}
impl LinkApplicationLogConfigurationBuilder {
    /// <p>Describes a link application log sample.</p>
    /// This field is required.
    pub fn sampling(mut self, input: crate::types::LinkApplicationLogSampling) -> Self {
        self.sampling = ::std::option::Option::Some(input);
        self
    }
    /// <p>Describes a link application log sample.</p>
    pub fn set_sampling(mut self, input: ::std::option::Option<crate::types::LinkApplicationLogSampling>) -> Self {
        self.sampling = input;
        self
    }
    /// <p>Describes a link application log sample.</p>
    pub fn get_sampling(&self) -> &::std::option::Option<crate::types::LinkApplicationLogSampling> {
        &self.sampling
    }
    /// Consumes the builder and constructs a [`LinkApplicationLogConfiguration`](crate::types::LinkApplicationLogConfiguration).
    pub fn build(self) -> crate::types::LinkApplicationLogConfiguration {
        crate::types::LinkApplicationLogConfiguration { sampling: self.sampling }
    }
}
