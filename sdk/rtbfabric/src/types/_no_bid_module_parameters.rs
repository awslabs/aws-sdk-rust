// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Describes the parameters of a no bid module.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct NoBidModuleParameters {
    /// <p>The reason description.</p>
    pub reason: ::std::option::Option<::std::string::String>,
    /// <p>The reason code.</p>
    pub reason_code: ::std::option::Option<i32>,
    /// <p>The pass through percentage.</p>
    pub pass_through_percentage: ::std::option::Option<f32>,
}
impl NoBidModuleParameters {
    /// <p>The reason description.</p>
    pub fn reason(&self) -> ::std::option::Option<&str> {
        self.reason.as_deref()
    }
    /// <p>The reason code.</p>
    pub fn reason_code(&self) -> ::std::option::Option<i32> {
        self.reason_code
    }
    /// <p>The pass through percentage.</p>
    pub fn pass_through_percentage(&self) -> ::std::option::Option<f32> {
        self.pass_through_percentage
    }
}
impl NoBidModuleParameters {
    /// Creates a new builder-style object to manufacture [`NoBidModuleParameters`](crate::types::NoBidModuleParameters).
    pub fn builder() -> crate::types::builders::NoBidModuleParametersBuilder {
        crate::types::builders::NoBidModuleParametersBuilder::default()
    }
}

/// A builder for [`NoBidModuleParameters`](crate::types::NoBidModuleParameters).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct NoBidModuleParametersBuilder {
    pub(crate) reason: ::std::option::Option<::std::string::String>,
    pub(crate) reason_code: ::std::option::Option<i32>,
    pub(crate) pass_through_percentage: ::std::option::Option<f32>,
}
impl NoBidModuleParametersBuilder {
    /// <p>The reason description.</p>
    pub fn reason(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.reason = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The reason description.</p>
    pub fn set_reason(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.reason = input;
        self
    }
    /// <p>The reason description.</p>
    pub fn get_reason(&self) -> &::std::option::Option<::std::string::String> {
        &self.reason
    }
    /// <p>The reason code.</p>
    pub fn reason_code(mut self, input: i32) -> Self {
        self.reason_code = ::std::option::Option::Some(input);
        self
    }
    /// <p>The reason code.</p>
    pub fn set_reason_code(mut self, input: ::std::option::Option<i32>) -> Self {
        self.reason_code = input;
        self
    }
    /// <p>The reason code.</p>
    pub fn get_reason_code(&self) -> &::std::option::Option<i32> {
        &self.reason_code
    }
    /// <p>The pass through percentage.</p>
    pub fn pass_through_percentage(mut self, input: f32) -> Self {
        self.pass_through_percentage = ::std::option::Option::Some(input);
        self
    }
    /// <p>The pass through percentage.</p>
    pub fn set_pass_through_percentage(mut self, input: ::std::option::Option<f32>) -> Self {
        self.pass_through_percentage = input;
        self
    }
    /// <p>The pass through percentage.</p>
    pub fn get_pass_through_percentage(&self) -> &::std::option::Option<f32> {
        &self.pass_through_percentage
    }
    /// Consumes the builder and constructs a [`NoBidModuleParameters`](crate::types::NoBidModuleParameters).
    pub fn build(self) -> crate::types::NoBidModuleParameters {
        crate::types::NoBidModuleParameters {
            reason: self.reason,
            reason_code: self.reason_code,
            pass_through_percentage: self.pass_through_percentage,
        }
    }
}
