// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p> Specifies configuration information for the output results from for the inference, including KMS key ID and output S3 location. </p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct InferenceOutputConfiguration {
    /// <p> Specifies configuration information for the output results from for the inference, output S3 location. </p>
    #[doc(hidden)]
    pub s3_output_configuration: std::option::Option<crate::types::InferenceS3OutputConfiguration>,
    /// <p>The ID number for the AWS KMS key used to encrypt the inference output. </p>
    #[doc(hidden)]
    pub kms_key_id: std::option::Option<std::string::String>,
}
impl InferenceOutputConfiguration {
    /// <p> Specifies configuration information for the output results from for the inference, output S3 location. </p>
    pub fn s3_output_configuration(
        &self,
    ) -> std::option::Option<&crate::types::InferenceS3OutputConfiguration> {
        self.s3_output_configuration.as_ref()
    }
    /// <p>The ID number for the AWS KMS key used to encrypt the inference output. </p>
    pub fn kms_key_id(&self) -> std::option::Option<&str> {
        self.kms_key_id.as_deref()
    }
}
impl InferenceOutputConfiguration {
    /// Creates a new builder-style object to manufacture [`InferenceOutputConfiguration`](crate::types::InferenceOutputConfiguration).
    pub fn builder() -> crate::types::builders::InferenceOutputConfigurationBuilder {
        crate::types::builders::InferenceOutputConfigurationBuilder::default()
    }
}

/// A builder for [`InferenceOutputConfiguration`](crate::types::InferenceOutputConfiguration).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct InferenceOutputConfigurationBuilder {
    pub(crate) s3_output_configuration:
        std::option::Option<crate::types::InferenceS3OutputConfiguration>,
    pub(crate) kms_key_id: std::option::Option<std::string::String>,
}
impl InferenceOutputConfigurationBuilder {
    /// <p> Specifies configuration information for the output results from for the inference, output S3 location. </p>
    pub fn s3_output_configuration(
        mut self,
        input: crate::types::InferenceS3OutputConfiguration,
    ) -> Self {
        self.s3_output_configuration = Some(input);
        self
    }
    /// <p> Specifies configuration information for the output results from for the inference, output S3 location. </p>
    pub fn set_s3_output_configuration(
        mut self,
        input: std::option::Option<crate::types::InferenceS3OutputConfiguration>,
    ) -> Self {
        self.s3_output_configuration = input;
        self
    }
    /// <p>The ID number for the AWS KMS key used to encrypt the inference output. </p>
    pub fn kms_key_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.kms_key_id = Some(input.into());
        self
    }
    /// <p>The ID number for the AWS KMS key used to encrypt the inference output. </p>
    pub fn set_kms_key_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.kms_key_id = input;
        self
    }
    /// Consumes the builder and constructs a [`InferenceOutputConfiguration`](crate::types::InferenceOutputConfiguration).
    pub fn build(self) -> crate::types::InferenceOutputConfiguration {
        crate::types::InferenceOutputConfiguration {
            s3_output_configuration: self.s3_output_configuration,
            kms_key_id: self.kms_key_id,
        }
    }
}
