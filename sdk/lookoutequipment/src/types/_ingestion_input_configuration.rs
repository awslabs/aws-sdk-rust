// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p> Specifies configuration information for the input data for the data ingestion job, including input data S3 location. </p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct IngestionInputConfiguration {
    /// <p>The location information for the S3 bucket used for input data for the data ingestion. </p>
    #[doc(hidden)]
    pub s3_input_configuration: std::option::Option<crate::types::IngestionS3InputConfiguration>,
}
impl IngestionInputConfiguration {
    /// <p>The location information for the S3 bucket used for input data for the data ingestion. </p>
    pub fn s3_input_configuration(
        &self,
    ) -> std::option::Option<&crate::types::IngestionS3InputConfiguration> {
        self.s3_input_configuration.as_ref()
    }
}
impl IngestionInputConfiguration {
    /// Creates a new builder-style object to manufacture [`IngestionInputConfiguration`](crate::types::IngestionInputConfiguration).
    pub fn builder() -> crate::types::builders::IngestionInputConfigurationBuilder {
        crate::types::builders::IngestionInputConfigurationBuilder::default()
    }
}

/// A builder for [`IngestionInputConfiguration`](crate::types::IngestionInputConfiguration).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct IngestionInputConfigurationBuilder {
    pub(crate) s3_input_configuration:
        std::option::Option<crate::types::IngestionS3InputConfiguration>,
}
impl IngestionInputConfigurationBuilder {
    /// <p>The location information for the S3 bucket used for input data for the data ingestion. </p>
    pub fn s3_input_configuration(
        mut self,
        input: crate::types::IngestionS3InputConfiguration,
    ) -> Self {
        self.s3_input_configuration = Some(input);
        self
    }
    /// <p>The location information for the S3 bucket used for input data for the data ingestion. </p>
    pub fn set_s3_input_configuration(
        mut self,
        input: std::option::Option<crate::types::IngestionS3InputConfiguration>,
    ) -> Self {
        self.s3_input_configuration = input;
        self
    }
    /// Consumes the builder and constructs a [`IngestionInputConfiguration`](crate::types::IngestionInputConfiguration).
    pub fn build(self) -> crate::types::IngestionInputConfiguration {
        crate::types::IngestionInputConfiguration {
            s3_input_configuration: self.s3_input_configuration,
        }
    }
}
