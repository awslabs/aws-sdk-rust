// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Provides information about the data schema used with the given dataset. </p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DatasetSchema {
    /// <p> </p>
    #[doc(hidden)]
    pub inline_data_schema: std::option::Option<std::string::String>,
}
impl DatasetSchema {
    /// <p> </p>
    pub fn inline_data_schema(&self) -> std::option::Option<&str> {
        self.inline_data_schema.as_deref()
    }
}
impl DatasetSchema {
    /// Creates a new builder-style object to manufacture [`DatasetSchema`](crate::types::DatasetSchema).
    pub fn builder() -> crate::types::builders::DatasetSchemaBuilder {
        crate::types::builders::DatasetSchemaBuilder::default()
    }
}

/// A builder for [`DatasetSchema`](crate::types::DatasetSchema).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DatasetSchemaBuilder {
    pub(crate) inline_data_schema: std::option::Option<std::string::String>,
}
impl DatasetSchemaBuilder {
    /// <p> </p>
    pub fn inline_data_schema(mut self, input: impl Into<std::string::String>) -> Self {
        self.inline_data_schema = Some(input.into());
        self
    }
    /// <p> </p>
    pub fn set_inline_data_schema(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.inline_data_schema = input;
        self
    }
    /// Consumes the builder and constructs a [`DatasetSchema`](crate::types::DatasetSchema).
    pub fn build(self) -> crate::types::DatasetSchema {
        crate::types::DatasetSchema {
            inline_data_schema: self.inline_data_schema,
        }
    }
}
