// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeDataIngestionJob`](crate::operation::describe_data_ingestion_job::builders::DescribeDataIngestionJobFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`job_id(impl Into<String>)`](crate::operation::describe_data_ingestion_job::builders::DescribeDataIngestionJobFluentBuilder::job_id) / [`set_job_id(Option<String>)`](crate::operation::describe_data_ingestion_job::builders::DescribeDataIngestionJobFluentBuilder::set_job_id): <p>The job ID of the data ingestion job. </p>
    /// - On success, responds with [`DescribeDataIngestionJobOutput`](crate::operation::describe_data_ingestion_job::DescribeDataIngestionJobOutput) with field(s):
    ///   - [`job_id(Option<String>)`](crate::operation::describe_data_ingestion_job::DescribeDataIngestionJobOutput::job_id): <p>Indicates the job ID of the data ingestion job. </p>
    ///   - [`dataset_arn(Option<String>)`](crate::operation::describe_data_ingestion_job::DescribeDataIngestionJobOutput::dataset_arn): <p>The Amazon Resource Name (ARN) of the dataset being used in the data ingestion job. </p>
    ///   - [`ingestion_input_configuration(Option<IngestionInputConfiguration>)`](crate::operation::describe_data_ingestion_job::DescribeDataIngestionJobOutput::ingestion_input_configuration): <p>Specifies the S3 location configuration for the data input for the data ingestion job. </p>
    ///   - [`role_arn(Option<String>)`](crate::operation::describe_data_ingestion_job::DescribeDataIngestionJobOutput::role_arn): <p>The Amazon Resource Name (ARN) of an IAM role with permission to access the data source being ingested. </p>
    ///   - [`created_at(Option<DateTime>)`](crate::operation::describe_data_ingestion_job::DescribeDataIngestionJobOutput::created_at): <p>The time at which the data ingestion job was created. </p>
    ///   - [`status(Option<IngestionJobStatus>)`](crate::operation::describe_data_ingestion_job::DescribeDataIngestionJobOutput::status): <p>Indicates the status of the <code>DataIngestionJob</code> operation. </p>
    ///   - [`failed_reason(Option<String>)`](crate::operation::describe_data_ingestion_job::DescribeDataIngestionJobOutput::failed_reason): <p>Specifies the reason for failure when a data ingestion job has failed. </p>
    ///   - [`data_quality_summary(Option<DataQualitySummary>)`](crate::operation::describe_data_ingestion_job::DescribeDataIngestionJobOutput::data_quality_summary): <p> Gives statistics about a completed ingestion job. These statistics primarily relate to quantifying incorrect data such as MissingCompleteSensorData, MissingSensorData, UnsupportedDateFormats, InsufficientSensorData, and DuplicateTimeStamps. </p>
    ///   - [`ingested_files_summary(Option<IngestedFilesSummary>)`](crate::operation::describe_data_ingestion_job::DescribeDataIngestionJobOutput::ingested_files_summary): <p>Gives statistics about how many files have been ingested, and which files have not been ingested, for a particular ingestion job.</p>
    ///   - [`status_detail(Option<String>)`](crate::operation::describe_data_ingestion_job::DescribeDataIngestionJobOutput::status_detail): <p> Provides details about status of the ingestion job that is currently in progress. </p>
    ///   - [`ingested_data_size(Option<i64>)`](crate::operation::describe_data_ingestion_job::DescribeDataIngestionJobOutput::ingested_data_size): <p> Indicates the size of the ingested dataset. </p>
    ///   - [`data_start_time(Option<DateTime>)`](crate::operation::describe_data_ingestion_job::DescribeDataIngestionJobOutput::data_start_time): <p> Indicates the earliest timestamp corresponding to data that was successfully ingested during this specific ingestion job. </p>
    ///   - [`data_end_time(Option<DateTime>)`](crate::operation::describe_data_ingestion_job::DescribeDataIngestionJobOutput::data_end_time): <p> Indicates the latest timestamp corresponding to data that was successfully ingested during this specific ingestion job. </p>
    /// - On failure, responds with [`SdkError<DescribeDataIngestionJobError>`](crate::operation::describe_data_ingestion_job::DescribeDataIngestionJobError)
    pub fn describe_data_ingestion_job(&self) -> crate::operation::describe_data_ingestion_job::builders::DescribeDataIngestionJobFluentBuilder{
        crate::operation::describe_data_ingestion_job::builders::DescribeDataIngestionJobFluentBuilder::new(self.handle.clone())
    }
}
