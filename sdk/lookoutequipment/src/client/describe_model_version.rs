// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeModelVersion`](crate::operation::describe_model_version::builders::DescribeModelVersionFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`model_name(impl Into<String>)`](crate::operation::describe_model_version::builders::DescribeModelVersionFluentBuilder::model_name) / [`set_model_name(Option<String>)`](crate::operation::describe_model_version::builders::DescribeModelVersionFluentBuilder::set_model_name):<br>required: **true**<br><p>The name of the machine learning model that this version belongs to.</p><br>
    ///   - [`model_version(i64)`](crate::operation::describe_model_version::builders::DescribeModelVersionFluentBuilder::model_version) / [`set_model_version(Option<i64>)`](crate::operation::describe_model_version::builders::DescribeModelVersionFluentBuilder::set_model_version):<br>required: **true**<br><p>The version of the machine learning model.</p><br>
    /// - On success, responds with [`DescribeModelVersionOutput`](crate::operation::describe_model_version::DescribeModelVersionOutput) with field(s):
    ///   - [`model_name(Option<String>)`](crate::operation::describe_model_version::DescribeModelVersionOutput::model_name): <p>The name of the machine learning model that this version belongs to.</p>
    ///   - [`model_arn(Option<String>)`](crate::operation::describe_model_version::DescribeModelVersionOutput::model_arn): <p>The Amazon Resource Name (ARN) of the parent machine learning model that this version belong to.</p>
    ///   - [`model_version(Option<i64>)`](crate::operation::describe_model_version::DescribeModelVersionOutput::model_version): <p>The version of the machine learning model.</p>
    ///   - [`model_version_arn(Option<String>)`](crate::operation::describe_model_version::DescribeModelVersionOutput::model_version_arn): <p>The Amazon Resource Name (ARN) of the model version.</p>
    ///   - [`status(Option<ModelVersionStatus>)`](crate::operation::describe_model_version::DescribeModelVersionOutput::status): <p>The current status of the model version.</p>
    ///   - [`source_type(Option<ModelVersionSourceType>)`](crate::operation::describe_model_version::DescribeModelVersionOutput::source_type): <p>Indicates whether this model version was created by training or by importing.</p>
    ///   - [`dataset_name(Option<String>)`](crate::operation::describe_model_version::DescribeModelVersionOutput::dataset_name): <p>The name of the dataset used to train the model version.</p>
    ///   - [`dataset_arn(Option<String>)`](crate::operation::describe_model_version::DescribeModelVersionOutput::dataset_arn): <p>The Amazon Resource Name (ARN) of the dataset used to train the model version.</p>
    ///   - [`schema(Option<String>)`](crate::operation::describe_model_version::DescribeModelVersionOutput::schema): <p>The schema of the data used to train the model version.</p>
    ///   - [`labels_input_configuration(Option<LabelsInputConfiguration>)`](crate::operation::describe_model_version::DescribeModelVersionOutput::labels_input_configuration): <p>Contains the configuration information for the S3 location being used to hold label data. </p>
    ///   - [`training_data_start_time(Option<DateTime>)`](crate::operation::describe_model_version::DescribeModelVersionOutput::training_data_start_time): <p>The date on which the training data began being gathered. If you imported the version, this is the date that the training data in the source version began being gathered.</p>
    ///   - [`training_data_end_time(Option<DateTime>)`](crate::operation::describe_model_version::DescribeModelVersionOutput::training_data_end_time): <p>The date on which the training data finished being gathered. If you imported the version, this is the date that the training data in the source version finished being gathered.</p>
    ///   - [`evaluation_data_start_time(Option<DateTime>)`](crate::operation::describe_model_version::DescribeModelVersionOutput::evaluation_data_start_time): <p>The date on which the data in the evaluation set began being gathered. If you imported the version, this is the date that the evaluation set data in the source version began being gathered.</p>
    ///   - [`evaluation_data_end_time(Option<DateTime>)`](crate::operation::describe_model_version::DescribeModelVersionOutput::evaluation_data_end_time): <p>The date on which the data in the evaluation set began being gathered. If you imported the version, this is the date that the evaluation set data in the source version finished being gathered.</p>
    ///   - [`role_arn(Option<String>)`](crate::operation::describe_model_version::DescribeModelVersionOutput::role_arn): <p>The Amazon Resource Name (ARN) of the role that was used to train the model version.</p>
    ///   - [`data_pre_processing_configuration(Option<DataPreProcessingConfiguration>)`](crate::operation::describe_model_version::DescribeModelVersionOutput::data_pre_processing_configuration): <p>The configuration is the <code>TargetSamplingRate</code>, which is the sampling rate of the data after post processing by Amazon Lookout for Equipment. For example, if you provide data that has been collected at a 1 second level and you want the system to resample the data at a 1 minute rate before training, the <code>TargetSamplingRate</code> is 1 minute.</p>  <p>When providing a value for the <code>TargetSamplingRate</code>, you must attach the prefix "PT" to the rate you want. The value for a 1 second rate is therefore <i>PT1S</i>, the value for a 15 minute rate is <i>PT15M</i>, and the value for a 1 hour rate is <i>PT1H</i> </p>
    ///   - [`training_execution_start_time(Option<DateTime>)`](crate::operation::describe_model_version::DescribeModelVersionOutput::training_execution_start_time): <p>The time when the training of the version began.</p>
    ///   - [`training_execution_end_time(Option<DateTime>)`](crate::operation::describe_model_version::DescribeModelVersionOutput::training_execution_end_time): <p>The time when the training of the version completed.</p>
    ///   - [`failed_reason(Option<String>)`](crate::operation::describe_model_version::DescribeModelVersionOutput::failed_reason): <p>The failure message if the training of the model version failed.</p>
    ///   - [`model_metrics(Option<String>)`](crate::operation::describe_model_version::DescribeModelVersionOutput::model_metrics): <p>Shows an aggregated summary, in JSON format, of the model's performance within the evaluation time range. These metrics are created when evaluating the model.</p>
    ///   - [`last_updated_time(Option<DateTime>)`](crate::operation::describe_model_version::DescribeModelVersionOutput::last_updated_time): <p>Indicates the last time the machine learning model version was updated.</p>
    ///   - [`created_at(Option<DateTime>)`](crate::operation::describe_model_version::DescribeModelVersionOutput::created_at): <p>Indicates the time and date at which the machine learning model version was created.</p>
    ///   - [`server_side_kms_key_id(Option<String>)`](crate::operation::describe_model_version::DescribeModelVersionOutput::server_side_kms_key_id): <p>The identifier of the KMS key key used to encrypt model version data by Amazon Lookout for Equipment.</p>
    ///   - [`off_condition(Option<String>)`](crate::operation::describe_model_version::DescribeModelVersionOutput::off_condition): <p>Indicates that the asset associated with this sensor has been shut off. As long as this condition is met, Lookout for Equipment will not use data from this asset for training, evaluation, or inference.</p>
    ///   - [`source_model_version_arn(Option<String>)`](crate::operation::describe_model_version::DescribeModelVersionOutput::source_model_version_arn): <p>If model version was imported, then this field is the arn of the source model version.</p>
    ///   - [`import_job_start_time(Option<DateTime>)`](crate::operation::describe_model_version::DescribeModelVersionOutput::import_job_start_time): <p>The date and time when the import job began. This field appears if the model version was imported.</p>
    ///   - [`import_job_end_time(Option<DateTime>)`](crate::operation::describe_model_version::DescribeModelVersionOutput::import_job_end_time): <p>The date and time when the import job completed. This field appears if the model version was imported.</p>
    ///   - [`imported_data_size_in_bytes(Option<i64>)`](crate::operation::describe_model_version::DescribeModelVersionOutput::imported_data_size_in_bytes): <p>The size in bytes of the imported data. This field appears if the model version was imported.</p>
    ///   - [`prior_model_metrics(Option<String>)`](crate::operation::describe_model_version::DescribeModelVersionOutput::prior_model_metrics): <p>If the model version was retrained, this field shows a summary of the performance of the prior model on the new training range. You can use the information in this JSON-formatted object to compare the new model version and the prior model version.</p>
    ///   - [`retraining_available_data_in_days(Option<i32>)`](crate::operation::describe_model_version::DescribeModelVersionOutput::retraining_available_data_in_days): <p>Indicates the number of days of data used in the most recent scheduled retraining run. </p>
    ///   - [`auto_promotion_result(Option<AutoPromotionResult>)`](crate::operation::describe_model_version::DescribeModelVersionOutput::auto_promotion_result): <p>Indicates whether the model version was promoted to be the active version after retraining or if there was an error with or cancellation of the retraining. </p>
    ///   - [`auto_promotion_result_reason(Option<String>)`](crate::operation::describe_model_version::DescribeModelVersionOutput::auto_promotion_result_reason): <p>Indicates the reason for the <code>AutoPromotionResult</code>. For example, a model might not be promoted if its performance was worse than the active version, if there was an error during training, or if the retraining scheduler was using <code>MANUAL</code> promote mode. The model will be promoted in <code>MANAGED</code> promote mode if the performance is better than the previous model. </p>
    /// - On failure, responds with [`SdkError<DescribeModelVersionError>`](crate::operation::describe_model_version::DescribeModelVersionError)
    pub fn describe_model_version(&self) -> crate::operation::describe_model_version::builders::DescribeModelVersionFluentBuilder {
        crate::operation::describe_model_version::builders::DescribeModelVersionFluentBuilder::new(self.handle.clone())
    }
}
