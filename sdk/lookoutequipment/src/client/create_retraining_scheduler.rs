// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateRetrainingScheduler`](crate::operation::create_retraining_scheduler::builders::CreateRetrainingSchedulerFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`model_name(impl Into<String>)`](crate::operation::create_retraining_scheduler::builders::CreateRetrainingSchedulerFluentBuilder::model_name) / [`set_model_name(Option<String>)`](crate::operation::create_retraining_scheduler::builders::CreateRetrainingSchedulerFluentBuilder::set_model_name):<br>required: **true**<br><p>The name of the model to add the retraining scheduler to. </p><br>
    ///   - [`retraining_start_date(DateTime)`](crate::operation::create_retraining_scheduler::builders::CreateRetrainingSchedulerFluentBuilder::retraining_start_date) / [`set_retraining_start_date(Option<DateTime>)`](crate::operation::create_retraining_scheduler::builders::CreateRetrainingSchedulerFluentBuilder::set_retraining_start_date):<br>required: **false**<br><p>The start date for the retraining scheduler. Lookout for Equipment truncates the time you provide to the nearest UTC day.</p><br>
    ///   - [`retraining_frequency(impl Into<String>)`](crate::operation::create_retraining_scheduler::builders::CreateRetrainingSchedulerFluentBuilder::retraining_frequency) / [`set_retraining_frequency(Option<String>)`](crate::operation::create_retraining_scheduler::builders::CreateRetrainingSchedulerFluentBuilder::set_retraining_frequency):<br>required: **true**<br><p>This parameter uses the <a href="https://en.wikipedia.org/wiki/ISO_8601#Durations">ISO 8601</a> standard to set the frequency at which you want retraining to occur in terms of Years, Months, and/or Days (note: other parameters like Time are not currently supported). The minimum value is 30 days (P30D) and the maximum value is 1 year (P1Y). For example, the following values are valid:</p>  <ul>   <li> <p>P3M15D – Every 3 months and 15 days</p> </li>   <li> <p>P2M – Every 2 months</p> </li>   <li> <p>P150D – Every 150 days</p> </li>  </ul><br>
    ///   - [`lookback_window(impl Into<String>)`](crate::operation::create_retraining_scheduler::builders::CreateRetrainingSchedulerFluentBuilder::lookback_window) / [`set_lookback_window(Option<String>)`](crate::operation::create_retraining_scheduler::builders::CreateRetrainingSchedulerFluentBuilder::set_lookback_window):<br>required: **true**<br><p>The number of past days of data that will be used for retraining.</p><br>
    ///   - [`promote_mode(ModelPromoteMode)`](crate::operation::create_retraining_scheduler::builders::CreateRetrainingSchedulerFluentBuilder::promote_mode) / [`set_promote_mode(Option<ModelPromoteMode>)`](crate::operation::create_retraining_scheduler::builders::CreateRetrainingSchedulerFluentBuilder::set_promote_mode):<br>required: **false**<br><p>Indicates how the service will use new models. In <code>MANAGED</code> mode, new models will automatically be used for inference if they have better performance than the current model. In <code>MANUAL</code> mode, the new models will not be used <a href="https://docs.aws.amazon.com/lookout-for-equipment/latest/ug/versioning-model.html#model-activation">until they are manually activated</a>.</p><br>
    ///   - [`client_token(impl Into<String>)`](crate::operation::create_retraining_scheduler::builders::CreateRetrainingSchedulerFluentBuilder::client_token) / [`set_client_token(Option<String>)`](crate::operation::create_retraining_scheduler::builders::CreateRetrainingSchedulerFluentBuilder::set_client_token):<br>required: **true**<br><p>A unique identifier for the request. If you do not set the client request token, Amazon Lookout for Equipment generates one. </p><br>
    /// - On success, responds with [`CreateRetrainingSchedulerOutput`](crate::operation::create_retraining_scheduler::CreateRetrainingSchedulerOutput) with field(s):
    ///   - [`model_name(Option<String>)`](crate::operation::create_retraining_scheduler::CreateRetrainingSchedulerOutput::model_name): <p>The name of the model that you added the retraining scheduler to. </p>
    ///   - [`model_arn(Option<String>)`](crate::operation::create_retraining_scheduler::CreateRetrainingSchedulerOutput::model_arn): <p>The ARN of the model that you added the retraining scheduler to. </p>
    ///   - [`status(Option<RetrainingSchedulerStatus>)`](crate::operation::create_retraining_scheduler::CreateRetrainingSchedulerOutput::status): <p>The status of the retraining scheduler. </p>
    /// - On failure, responds with [`SdkError<CreateRetrainingSchedulerError>`](crate::operation::create_retraining_scheduler::CreateRetrainingSchedulerError)
    pub fn create_retraining_scheduler(&self) -> crate::operation::create_retraining_scheduler::builders::CreateRetrainingSchedulerFluentBuilder {
        crate::operation::create_retraining_scheduler::builders::CreateRetrainingSchedulerFluentBuilder::new(self.handle.clone())
    }
}
