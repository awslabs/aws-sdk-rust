// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ImportDataset`](crate::operation::import_dataset::builders::ImportDatasetFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`source_dataset_arn(impl Into<String>)`](crate::operation::import_dataset::builders::ImportDatasetFluentBuilder::source_dataset_arn) / [`set_source_dataset_arn(Option<String>)`](crate::operation::import_dataset::builders::ImportDatasetFluentBuilder::set_source_dataset_arn):<br>required: **true**<br><p>The Amazon Resource Name (ARN) of the dataset to import.</p><br>
    ///   - [`dataset_name(impl Into<String>)`](crate::operation::import_dataset::builders::ImportDatasetFluentBuilder::dataset_name) / [`set_dataset_name(Option<String>)`](crate::operation::import_dataset::builders::ImportDatasetFluentBuilder::set_dataset_name):<br>required: **false**<br><p>The name of the machine learning dataset to be created. If the dataset already exists, Amazon Lookout for Equipment overwrites the existing dataset. If you don't specify this field, it is filled with the name of the source dataset.</p><br>
    ///   - [`client_token(impl Into<String>)`](crate::operation::import_dataset::builders::ImportDatasetFluentBuilder::client_token) / [`set_client_token(Option<String>)`](crate::operation::import_dataset::builders::ImportDatasetFluentBuilder::set_client_token):<br>required: **true**<br><p>A unique identifier for the request. If you do not set the client request token, Amazon Lookout for Equipment generates one. </p><br>
    ///   - [`server_side_kms_key_id(impl Into<String>)`](crate::operation::import_dataset::builders::ImportDatasetFluentBuilder::server_side_kms_key_id) / [`set_server_side_kms_key_id(Option<String>)`](crate::operation::import_dataset::builders::ImportDatasetFluentBuilder::set_server_side_kms_key_id):<br>required: **false**<br><p>Provides the identifier of the KMS key key used to encrypt model data by Amazon Lookout for Equipment. </p><br>
    ///   - [`tags(Tag)`](crate::operation::import_dataset::builders::ImportDatasetFluentBuilder::tags) / [`set_tags(Option<Vec::<Tag>>)`](crate::operation::import_dataset::builders::ImportDatasetFluentBuilder::set_tags):<br>required: **false**<br><p>Any tags associated with the dataset to be created.</p><br>
    /// - On success, responds with [`ImportDatasetOutput`](crate::operation::import_dataset::ImportDatasetOutput) with field(s):
    ///   - [`dataset_name(Option<String>)`](crate::operation::import_dataset::ImportDatasetOutput::dataset_name): <p>The name of the created machine learning dataset.</p>
    ///   - [`dataset_arn(Option<String>)`](crate::operation::import_dataset::ImportDatasetOutput::dataset_arn): <p>The Amazon Resource Name (ARN) of the dataset that was imported.</p>
    ///   - [`status(Option<DatasetStatus>)`](crate::operation::import_dataset::ImportDatasetOutput::status): <p>The status of the <code>ImportDataset</code> operation.</p>
    ///   - [`job_id(Option<String>)`](crate::operation::import_dataset::ImportDatasetOutput::job_id): <p>A unique identifier for the job of importing the dataset.</p>
    /// - On failure, responds with [`SdkError<ImportDatasetError>`](crate::operation::import_dataset::ImportDatasetError)
    pub fn import_dataset(&self) -> crate::operation::import_dataset::builders::ImportDatasetFluentBuilder {
        crate::operation::import_dataset::builders::ImportDatasetFluentBuilder::new(self.handle.clone())
    }
}
