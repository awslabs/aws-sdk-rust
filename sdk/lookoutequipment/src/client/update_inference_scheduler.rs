// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateInferenceScheduler`](crate::operation::update_inference_scheduler::builders::UpdateInferenceSchedulerFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`inference_scheduler_name(impl Into<String>)`](crate::operation::update_inference_scheduler::builders::UpdateInferenceSchedulerFluentBuilder::inference_scheduler_name) / [`set_inference_scheduler_name(Option<String>)`](crate::operation::update_inference_scheduler::builders::UpdateInferenceSchedulerFluentBuilder::set_inference_scheduler_name): <p>The name of the inference scheduler to be updated. </p>
    ///   - [`data_delay_offset_in_minutes(i64)`](crate::operation::update_inference_scheduler::builders::UpdateInferenceSchedulerFluentBuilder::data_delay_offset_in_minutes) / [`set_data_delay_offset_in_minutes(Option<i64>)`](crate::operation::update_inference_scheduler::builders::UpdateInferenceSchedulerFluentBuilder::set_data_delay_offset_in_minutes): <p> A period of time (in minutes) by which inference on the data is delayed after the data starts. For instance, if you select an offset delay time of five minutes, inference will not begin on the data until the first data measurement after the five minute mark. For example, if five minutes is selected, the inference scheduler will wake up at the configured frequency with the additional five minute delay time to check the customer S3 bucket. The customer can upload data at the same frequency and they don't need to stop and restart the scheduler when uploading new data.</p>
    ///   - [`data_upload_frequency(DataUploadFrequency)`](crate::operation::update_inference_scheduler::builders::UpdateInferenceSchedulerFluentBuilder::data_upload_frequency) / [`set_data_upload_frequency(Option<DataUploadFrequency>)`](crate::operation::update_inference_scheduler::builders::UpdateInferenceSchedulerFluentBuilder::set_data_upload_frequency): <p>How often data is uploaded to the source S3 bucket for the input data. The value chosen is the length of time between data uploads. For instance, if you select 5 minutes, Amazon Lookout for Equipment will upload the real-time data to the source bucket once every 5 minutes. This frequency also determines how often Amazon Lookout for Equipment starts a scheduled inference on your data. In this example, it starts once every 5 minutes. </p>
    ///   - [`data_input_configuration(InferenceInputConfiguration)`](crate::operation::update_inference_scheduler::builders::UpdateInferenceSchedulerFluentBuilder::data_input_configuration) / [`set_data_input_configuration(Option<InferenceInputConfiguration>)`](crate::operation::update_inference_scheduler::builders::UpdateInferenceSchedulerFluentBuilder::set_data_input_configuration): <p> Specifies information for the input data for the inference scheduler, including delimiter, format, and dataset location. </p>
    ///   - [`data_output_configuration(InferenceOutputConfiguration)`](crate::operation::update_inference_scheduler::builders::UpdateInferenceSchedulerFluentBuilder::data_output_configuration) / [`set_data_output_configuration(Option<InferenceOutputConfiguration>)`](crate::operation::update_inference_scheduler::builders::UpdateInferenceSchedulerFluentBuilder::set_data_output_configuration): <p> Specifies information for the output results from the inference scheduler, including the output S3 location. </p>
    ///   - [`role_arn(impl Into<String>)`](crate::operation::update_inference_scheduler::builders::UpdateInferenceSchedulerFluentBuilder::role_arn) / [`set_role_arn(Option<String>)`](crate::operation::update_inference_scheduler::builders::UpdateInferenceSchedulerFluentBuilder::set_role_arn): <p> The Amazon Resource Name (ARN) of a role with permission to access the data source for the inference scheduler. </p>
    /// - On success, responds with [`UpdateInferenceSchedulerOutput`](crate::operation::update_inference_scheduler::UpdateInferenceSchedulerOutput)
    /// - On failure, responds with [`SdkError<UpdateInferenceSchedulerError>`](crate::operation::update_inference_scheduler::UpdateInferenceSchedulerError)
    pub fn update_inference_scheduler(
        &self,
    ) -> crate::operation::update_inference_scheduler::builders::UpdateInferenceSchedulerFluentBuilder
    {
        crate::operation::update_inference_scheduler::builders::UpdateInferenceSchedulerFluentBuilder::new(self.handle.clone())
    }
}
