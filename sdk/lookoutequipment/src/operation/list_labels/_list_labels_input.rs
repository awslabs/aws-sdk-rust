// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ListLabelsInput {
    /// <p> Retruns the name of the label group. </p>
    #[doc(hidden)]
    pub label_group_name: std::option::Option<std::string::String>,
    /// <p> Returns all the labels with a end time equal to or later than the start time given. </p>
    #[doc(hidden)]
    pub interval_start_time: std::option::Option<aws_smithy_types::DateTime>,
    /// <p> Returns all labels with a start time earlier than the end time given. </p>
    #[doc(hidden)]
    pub interval_end_time: std::option::Option<aws_smithy_types::DateTime>,
    /// <p> Returns labels with a particular fault code. </p>
    #[doc(hidden)]
    pub fault_code: std::option::Option<std::string::String>,
    /// <p> Lists the labels that pertain to a particular piece of equipment. </p>
    #[doc(hidden)]
    pub equipment: std::option::Option<std::string::String>,
    /// <p> An opaque pagination token indicating where to continue the listing of label groups. </p>
    #[doc(hidden)]
    pub next_token: std::option::Option<std::string::String>,
    /// <p> Specifies the maximum number of labels to list. </p>
    #[doc(hidden)]
    pub max_results: std::option::Option<i32>,
}
impl ListLabelsInput {
    /// <p> Retruns the name of the label group. </p>
    pub fn label_group_name(&self) -> std::option::Option<&str> {
        self.label_group_name.as_deref()
    }
    /// <p> Returns all the labels with a end time equal to or later than the start time given. </p>
    pub fn interval_start_time(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.interval_start_time.as_ref()
    }
    /// <p> Returns all labels with a start time earlier than the end time given. </p>
    pub fn interval_end_time(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.interval_end_time.as_ref()
    }
    /// <p> Returns labels with a particular fault code. </p>
    pub fn fault_code(&self) -> std::option::Option<&str> {
        self.fault_code.as_deref()
    }
    /// <p> Lists the labels that pertain to a particular piece of equipment. </p>
    pub fn equipment(&self) -> std::option::Option<&str> {
        self.equipment.as_deref()
    }
    /// <p> An opaque pagination token indicating where to continue the listing of label groups. </p>
    pub fn next_token(&self) -> std::option::Option<&str> {
        self.next_token.as_deref()
    }
    /// <p> Specifies the maximum number of labels to list. </p>
    pub fn max_results(&self) -> std::option::Option<i32> {
        self.max_results
    }
}
impl ListLabelsInput {
    /// Creates a new builder-style object to manufacture [`ListLabelsInput`](crate::operation::list_labels::ListLabelsInput).
    pub fn builder() -> crate::operation::list_labels::builders::ListLabelsInputBuilder {
        crate::operation::list_labels::builders::ListLabelsInputBuilder::default()
    }
}

/// A builder for [`ListLabelsInput`](crate::operation::list_labels::ListLabelsInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ListLabelsInputBuilder {
    pub(crate) label_group_name: std::option::Option<std::string::String>,
    pub(crate) interval_start_time: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) interval_end_time: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) fault_code: std::option::Option<std::string::String>,
    pub(crate) equipment: std::option::Option<std::string::String>,
    pub(crate) next_token: std::option::Option<std::string::String>,
    pub(crate) max_results: std::option::Option<i32>,
}
impl ListLabelsInputBuilder {
    /// <p> Retruns the name of the label group. </p>
    pub fn label_group_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.label_group_name = Some(input.into());
        self
    }
    /// <p> Retruns the name of the label group. </p>
    pub fn set_label_group_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.label_group_name = input;
        self
    }
    /// <p> Returns all the labels with a end time equal to or later than the start time given. </p>
    pub fn interval_start_time(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.interval_start_time = Some(input);
        self
    }
    /// <p> Returns all the labels with a end time equal to or later than the start time given. </p>
    pub fn set_interval_start_time(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.interval_start_time = input;
        self
    }
    /// <p> Returns all labels with a start time earlier than the end time given. </p>
    pub fn interval_end_time(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.interval_end_time = Some(input);
        self
    }
    /// <p> Returns all labels with a start time earlier than the end time given. </p>
    pub fn set_interval_end_time(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.interval_end_time = input;
        self
    }
    /// <p> Returns labels with a particular fault code. </p>
    pub fn fault_code(mut self, input: impl Into<std::string::String>) -> Self {
        self.fault_code = Some(input.into());
        self
    }
    /// <p> Returns labels with a particular fault code. </p>
    pub fn set_fault_code(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.fault_code = input;
        self
    }
    /// <p> Lists the labels that pertain to a particular piece of equipment. </p>
    pub fn equipment(mut self, input: impl Into<std::string::String>) -> Self {
        self.equipment = Some(input.into());
        self
    }
    /// <p> Lists the labels that pertain to a particular piece of equipment. </p>
    pub fn set_equipment(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.equipment = input;
        self
    }
    /// <p> An opaque pagination token indicating where to continue the listing of label groups. </p>
    pub fn next_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.next_token = Some(input.into());
        self
    }
    /// <p> An opaque pagination token indicating where to continue the listing of label groups. </p>
    pub fn set_next_token(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// <p> Specifies the maximum number of labels to list. </p>
    pub fn max_results(mut self, input: i32) -> Self {
        self.max_results = Some(input);
        self
    }
    /// <p> Specifies the maximum number of labels to list. </p>
    pub fn set_max_results(mut self, input: std::option::Option<i32>) -> Self {
        self.max_results = input;
        self
    }
    /// Consumes the builder and constructs a [`ListLabelsInput`](crate::operation::list_labels::ListLabelsInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::list_labels::ListLabelsInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(crate::operation::list_labels::ListLabelsInput {
            label_group_name: self.label_group_name,
            interval_start_time: self.interval_start_time,
            interval_end_time: self.interval_end_time,
            fault_code: self.fault_code,
            equipment: self.equipment,
            next_token: self.next_token,
            max_results: self.max_results,
        })
    }
}
