// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetGeneratedPolicy`](crate::operation::get_generated_policy::builders::GetGeneratedPolicyFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`job_id(impl Into<String>)`](crate::operation::get_generated_policy::builders::GetGeneratedPolicyFluentBuilder::job_id) / [`set_job_id(Option<String>)`](crate::operation::get_generated_policy::builders::GetGeneratedPolicyFluentBuilder::set_job_id):<br>required: **true**<br><p>The <code>JobId</code> that is returned by the <code>StartPolicyGeneration</code> operation. The <code>JobId</code> can be used with <code>GetGeneratedPolicy</code> to retrieve the generated policies or used with <code>CancelPolicyGeneration</code> to cancel the policy generation request.</p><br>
    ///   - [`include_resource_placeholders(bool)`](crate::operation::get_generated_policy::builders::GetGeneratedPolicyFluentBuilder::include_resource_placeholders) / [`set_include_resource_placeholders(Option<bool>)`](crate::operation::get_generated_policy::builders::GetGeneratedPolicyFluentBuilder::set_include_resource_placeholders):<br>required: **false**<br><p>The level of detail that you want to generate. You can specify whether to generate policies with placeholders for resource ARNs for actions that support resource level granularity in policies.</p>  <p>For example, in the resource section of a policy, you can receive a placeholder such as <code>"Resource":"arn:aws:s3:::${BucketName}"</code> instead of <code>"*"</code>.</p><br>
    ///   - [`include_service_level_template(bool)`](crate::operation::get_generated_policy::builders::GetGeneratedPolicyFluentBuilder::include_service_level_template) / [`set_include_service_level_template(Option<bool>)`](crate::operation::get_generated_policy::builders::GetGeneratedPolicyFluentBuilder::set_include_service_level_template):<br>required: **false**<br><p>The level of detail that you want to generate. You can specify whether to generate service-level policies. </p>  <p>IAM Access Analyzer uses <code>iam:servicelastaccessed</code> to identify services that have been used recently to create this service-level template.</p><br>
    /// - On success, responds with [`GetGeneratedPolicyOutput`](crate::operation::get_generated_policy::GetGeneratedPolicyOutput) with field(s):
    ///   - [`job_details(Option<JobDetails>)`](crate::operation::get_generated_policy::GetGeneratedPolicyOutput::job_details): <p>A <code>GeneratedPolicyDetails</code> object that contains details about the generated policy.</p>
    ///   - [`generated_policy_result(Option<GeneratedPolicyResult>)`](crate::operation::get_generated_policy::GetGeneratedPolicyOutput::generated_policy_result): <p>A <code>GeneratedPolicyResult</code> object that contains the generated policies and associated details.</p>
    /// - On failure, responds with [`SdkError<GetGeneratedPolicyError>`](crate::operation::get_generated_policy::GetGeneratedPolicyError)
    pub fn get_generated_policy(&self) -> crate::operation::get_generated_policy::builders::GetGeneratedPolicyFluentBuilder {
        crate::operation::get_generated_policy::builders::GetGeneratedPolicyFluentBuilder::new(self.handle.clone())
    }
}
