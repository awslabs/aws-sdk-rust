// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A position in a policy.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct Position {
    /// <p>The line of the position, starting from 1.</p>
    #[doc(hidden)]
    pub line: std::option::Option<i32>,
    /// <p>The column of the position, starting from 0.</p>
    #[doc(hidden)]
    pub column: std::option::Option<i32>,
    /// <p>The offset within the policy that corresponds to the position, starting from 0.</p>
    #[doc(hidden)]
    pub offset: std::option::Option<i32>,
}
impl Position {
    /// <p>The line of the position, starting from 1.</p>
    pub fn line(&self) -> std::option::Option<i32> {
        self.line
    }
    /// <p>The column of the position, starting from 0.</p>
    pub fn column(&self) -> std::option::Option<i32> {
        self.column
    }
    /// <p>The offset within the policy that corresponds to the position, starting from 0.</p>
    pub fn offset(&self) -> std::option::Option<i32> {
        self.offset
    }
}
impl Position {
    /// Creates a new builder-style object to manufacture [`Position`](crate::types::Position).
    pub fn builder() -> crate::types::builders::PositionBuilder {
        crate::types::builders::PositionBuilder::default()
    }
}

/// A builder for [`Position`](crate::types::Position).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct PositionBuilder {
    pub(crate) line: std::option::Option<i32>,
    pub(crate) column: std::option::Option<i32>,
    pub(crate) offset: std::option::Option<i32>,
}
impl PositionBuilder {
    /// <p>The line of the position, starting from 1.</p>
    pub fn line(mut self, input: i32) -> Self {
        self.line = Some(input);
        self
    }
    /// <p>The line of the position, starting from 1.</p>
    pub fn set_line(mut self, input: std::option::Option<i32>) -> Self {
        self.line = input;
        self
    }
    /// <p>The column of the position, starting from 0.</p>
    pub fn column(mut self, input: i32) -> Self {
        self.column = Some(input);
        self
    }
    /// <p>The column of the position, starting from 0.</p>
    pub fn set_column(mut self, input: std::option::Option<i32>) -> Self {
        self.column = input;
        self
    }
    /// <p>The offset within the policy that corresponds to the position, starting from 0.</p>
    pub fn offset(mut self, input: i32) -> Self {
        self.offset = Some(input);
        self
    }
    /// <p>The offset within the policy that corresponds to the position, starting from 0.</p>
    pub fn set_offset(mut self, input: std::option::Option<i32>) -> Self {
        self.offset = input;
        self
    }
    /// Consumes the builder and constructs a [`Position`](crate::types::Position).
    pub fn build(self) -> crate::types::Position {
        crate::types::Position {
            line: self.line,
            column: self.column,
            offset: self.offset,
        }
    }
}
