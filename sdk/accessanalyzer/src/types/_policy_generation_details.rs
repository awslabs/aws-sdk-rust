// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains the ARN details about the IAM entity for which the policy is generated.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct PolicyGenerationDetails {
    /// <p>The ARN of the IAM entity (user or role) for which you are generating a policy.</p>
    #[doc(hidden)]
    pub principal_arn: std::option::Option<std::string::String>,
}
impl PolicyGenerationDetails {
    /// <p>The ARN of the IAM entity (user or role) for which you are generating a policy.</p>
    pub fn principal_arn(&self) -> std::option::Option<&str> {
        self.principal_arn.as_deref()
    }
}
impl PolicyGenerationDetails {
    /// Creates a new builder-style object to manufacture [`PolicyGenerationDetails`](crate::types::PolicyGenerationDetails).
    pub fn builder() -> crate::types::builders::PolicyGenerationDetailsBuilder {
        crate::types::builders::PolicyGenerationDetailsBuilder::default()
    }
}

/// A builder for [`PolicyGenerationDetails`](crate::types::PolicyGenerationDetails).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct PolicyGenerationDetailsBuilder {
    pub(crate) principal_arn: std::option::Option<std::string::String>,
}
impl PolicyGenerationDetailsBuilder {
    /// <p>The ARN of the IAM entity (user or role) for which you are generating a policy.</p>
    pub fn principal_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.principal_arn = Some(input.into());
        self
    }
    /// <p>The ARN of the IAM entity (user or role) for which you are generating a policy.</p>
    pub fn set_principal_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.principal_arn = input;
        self
    }
    /// Consumes the builder and constructs a [`PolicyGenerationDetails`](crate::types::PolicyGenerationDetails).
    pub fn build(self) -> crate::types::PolicyGenerationDetails {
        crate::types::PolicyGenerationDetails {
            principal_arn: self.principal_arn,
        }
    }
}
