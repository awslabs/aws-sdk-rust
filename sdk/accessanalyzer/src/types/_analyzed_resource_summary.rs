// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains the ARN of the analyzed resource.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AnalyzedResourceSummary {
    /// <p>The ARN of the analyzed resource.</p>
    #[doc(hidden)]
    pub resource_arn: std::option::Option<std::string::String>,
    /// <p>The Amazon Web Services account ID that owns the resource.</p>
    #[doc(hidden)]
    pub resource_owner_account: std::option::Option<std::string::String>,
    /// <p>The type of resource that was analyzed.</p>
    #[doc(hidden)]
    pub resource_type: std::option::Option<crate::types::ResourceType>,
}
impl AnalyzedResourceSummary {
    /// <p>The ARN of the analyzed resource.</p>
    pub fn resource_arn(&self) -> std::option::Option<&str> {
        self.resource_arn.as_deref()
    }
    /// <p>The Amazon Web Services account ID that owns the resource.</p>
    pub fn resource_owner_account(&self) -> std::option::Option<&str> {
        self.resource_owner_account.as_deref()
    }
    /// <p>The type of resource that was analyzed.</p>
    pub fn resource_type(&self) -> std::option::Option<&crate::types::ResourceType> {
        self.resource_type.as_ref()
    }
}
impl AnalyzedResourceSummary {
    /// Creates a new builder-style object to manufacture [`AnalyzedResourceSummary`](crate::types::AnalyzedResourceSummary).
    pub fn builder() -> crate::types::builders::AnalyzedResourceSummaryBuilder {
        crate::types::builders::AnalyzedResourceSummaryBuilder::default()
    }
}

/// A builder for [`AnalyzedResourceSummary`](crate::types::AnalyzedResourceSummary).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AnalyzedResourceSummaryBuilder {
    pub(crate) resource_arn: std::option::Option<std::string::String>,
    pub(crate) resource_owner_account: std::option::Option<std::string::String>,
    pub(crate) resource_type: std::option::Option<crate::types::ResourceType>,
}
impl AnalyzedResourceSummaryBuilder {
    /// <p>The ARN of the analyzed resource.</p>
    pub fn resource_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.resource_arn = Some(input.into());
        self
    }
    /// <p>The ARN of the analyzed resource.</p>
    pub fn set_resource_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.resource_arn = input;
        self
    }
    /// <p>The Amazon Web Services account ID that owns the resource.</p>
    pub fn resource_owner_account(mut self, input: impl Into<std::string::String>) -> Self {
        self.resource_owner_account = Some(input.into());
        self
    }
    /// <p>The Amazon Web Services account ID that owns the resource.</p>
    pub fn set_resource_owner_account(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.resource_owner_account = input;
        self
    }
    /// <p>The type of resource that was analyzed.</p>
    pub fn resource_type(mut self, input: crate::types::ResourceType) -> Self {
        self.resource_type = Some(input);
        self
    }
    /// <p>The type of resource that was analyzed.</p>
    pub fn set_resource_type(
        mut self,
        input: std::option::Option<crate::types::ResourceType>,
    ) -> Self {
        self.resource_type = input;
        self
    }
    /// Consumes the builder and constructs a [`AnalyzedResourceSummary`](crate::types::AnalyzedResourceSummary).
    pub fn build(self) -> crate::types::AnalyzedResourceSummary {
        crate::types::AnalyzedResourceSummary {
            resource_arn: self.resource_arn,
            resource_owner_account: self.resource_owner_account,
            resource_type: self.resource_type,
        }
    }
}
