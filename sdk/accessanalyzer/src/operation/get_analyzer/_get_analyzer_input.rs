// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Retrieves an analyzer.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GetAnalyzerInput {
    /// <p>The name of the analyzer retrieved.</p>
    pub analyzer_name: ::std::option::Option<::std::string::String>,
}
impl GetAnalyzerInput {
    /// <p>The name of the analyzer retrieved.</p>
    pub fn analyzer_name(&self) -> ::std::option::Option<&str> {
        self.analyzer_name.as_deref()
    }
}
impl GetAnalyzerInput {
    /// Creates a new builder-style object to manufacture [`GetAnalyzerInput`](crate::operation::get_analyzer::GetAnalyzerInput).
    pub fn builder() -> crate::operation::get_analyzer::builders::GetAnalyzerInputBuilder {
        crate::operation::get_analyzer::builders::GetAnalyzerInputBuilder::default()
    }
}

/// A builder for [`GetAnalyzerInput`](crate::operation::get_analyzer::GetAnalyzerInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct GetAnalyzerInputBuilder {
    pub(crate) analyzer_name: ::std::option::Option<::std::string::String>,
}
impl GetAnalyzerInputBuilder {
    /// <p>The name of the analyzer retrieved.</p>
    /// This field is required.
    pub fn analyzer_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.analyzer_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the analyzer retrieved.</p>
    pub fn set_analyzer_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.analyzer_name = input;
        self
    }
    /// <p>The name of the analyzer retrieved.</p>
    pub fn get_analyzer_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.analyzer_name
    }
    /// Consumes the builder and constructs a [`GetAnalyzerInput`](crate::operation::get_analyzer::GetAnalyzerInput).
    pub fn build(self) -> ::std::result::Result<crate::operation::get_analyzer::GetAnalyzerInput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::operation::get_analyzer::GetAnalyzerInput {
            analyzer_name: self.analyzer_name,
        })
    }
}
