// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Starts a scan of the policies applied to the specified resource.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct StartResourceScanInput {
    /// <p>The <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-getting-started.html#permission-resources">ARN of the analyzer</a> to use to scan the policies applied to the specified resource.</p>
    #[doc(hidden)]
    pub analyzer_arn: std::option::Option<std::string::String>,
    /// <p>The ARN of the resource to scan.</p>
    #[doc(hidden)]
    pub resource_arn: std::option::Option<std::string::String>,
    /// <p>The Amazon Web Services account ID that owns the resource. For most Amazon Web Services resources, the owning account is the account in which the resource was created.</p>
    #[doc(hidden)]
    pub resource_owner_account: std::option::Option<std::string::String>,
}
impl StartResourceScanInput {
    /// <p>The <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-getting-started.html#permission-resources">ARN of the analyzer</a> to use to scan the policies applied to the specified resource.</p>
    pub fn analyzer_arn(&self) -> std::option::Option<&str> {
        self.analyzer_arn.as_deref()
    }
    /// <p>The ARN of the resource to scan.</p>
    pub fn resource_arn(&self) -> std::option::Option<&str> {
        self.resource_arn.as_deref()
    }
    /// <p>The Amazon Web Services account ID that owns the resource. For most Amazon Web Services resources, the owning account is the account in which the resource was created.</p>
    pub fn resource_owner_account(&self) -> std::option::Option<&str> {
        self.resource_owner_account.as_deref()
    }
}
impl StartResourceScanInput {
    /// Creates a new builder-style object to manufacture [`StartResourceScanInput`](crate::operation::start_resource_scan::StartResourceScanInput).
    pub fn builder(
    ) -> crate::operation::start_resource_scan::builders::StartResourceScanInputBuilder {
        crate::operation::start_resource_scan::builders::StartResourceScanInputBuilder::default()
    }
}

/// A builder for [`StartResourceScanInput`](crate::operation::start_resource_scan::StartResourceScanInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct StartResourceScanInputBuilder {
    pub(crate) analyzer_arn: std::option::Option<std::string::String>,
    pub(crate) resource_arn: std::option::Option<std::string::String>,
    pub(crate) resource_owner_account: std::option::Option<std::string::String>,
}
impl StartResourceScanInputBuilder {
    /// <p>The <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-getting-started.html#permission-resources">ARN of the analyzer</a> to use to scan the policies applied to the specified resource.</p>
    pub fn analyzer_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.analyzer_arn = Some(input.into());
        self
    }
    /// <p>The <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-getting-started.html#permission-resources">ARN of the analyzer</a> to use to scan the policies applied to the specified resource.</p>
    pub fn set_analyzer_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.analyzer_arn = input;
        self
    }
    /// <p>The ARN of the resource to scan.</p>
    pub fn resource_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.resource_arn = Some(input.into());
        self
    }
    /// <p>The ARN of the resource to scan.</p>
    pub fn set_resource_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.resource_arn = input;
        self
    }
    /// <p>The Amazon Web Services account ID that owns the resource. For most Amazon Web Services resources, the owning account is the account in which the resource was created.</p>
    pub fn resource_owner_account(mut self, input: impl Into<std::string::String>) -> Self {
        self.resource_owner_account = Some(input.into());
        self
    }
    /// <p>The Amazon Web Services account ID that owns the resource. For most Amazon Web Services resources, the owning account is the account in which the resource was created.</p>
    pub fn set_resource_owner_account(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.resource_owner_account = input;
        self
    }
    /// Consumes the builder and constructs a [`StartResourceScanInput`](crate::operation::start_resource_scan::StartResourceScanInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::start_resource_scan::StartResourceScanInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::start_resource_scan::StartResourceScanInput {
                analyzer_arn: self.analyzer_arn,
                resource_arn: self.resource_arn,
                resource_owner_account: self.resource_owner_account,
            },
        )
    }
}
