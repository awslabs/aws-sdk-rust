// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`PutEvaluations`](crate::client::fluent_builders::PutEvaluations) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`evaluations(Vec<Evaluation>)`](crate::client::fluent_builders::PutEvaluations::evaluations) / [`set_evaluations(Option<Vec<Evaluation>>)`](crate::client::fluent_builders::PutEvaluations::set_evaluations): <p>The assessments that the Lambda function performs. Each evaluation identifies an Amazon Web Services resource and indicates whether it complies with the Config rule that invokes the Lambda function.</p>
    ///   - [`result_token(impl Into<String>)`](crate::client::fluent_builders::PutEvaluations::result_token) / [`set_result_token(Option<String>)`](crate::client::fluent_builders::PutEvaluations::set_result_token): <p>An encrypted token that associates an evaluation with an Config rule. Identifies the rule and the event that triggered the evaluation.</p>
    ///   - [`test_mode(bool)`](crate::client::fluent_builders::PutEvaluations::test_mode) / [`set_test_mode(bool)`](crate::client::fluent_builders::PutEvaluations::set_test_mode): <p>Use this parameter to specify a test run for <code>PutEvaluations</code>. You can verify whether your Lambda function will deliver evaluation results to Config. No updates occur to your existing evaluations, and evaluation results are not sent to Config.</p> <note>   <p>When <code>TestMode</code> is <code>true</code>, <code>PutEvaluations</code> doesn't require a valid value for the <code>ResultToken</code> parameter, but the value cannot be null.</p>  </note>
    /// - On success, responds with [`PutEvaluationsOutput`](crate::output::PutEvaluationsOutput) with field(s):
    ///   - [`failed_evaluations(Option<Vec<Evaluation>>)`](crate::output::PutEvaluationsOutput::failed_evaluations): <p>Requests that failed because of a client or server error.</p>
    /// - On failure, responds with [`SdkError<PutEvaluationsError>`](crate::error::PutEvaluationsError)
    pub fn put_evaluations(&self) -> crate::client::fluent_builders::PutEvaluations {
        crate::client::fluent_builders::PutEvaluations::new(self.handle.clone())
    }
}
