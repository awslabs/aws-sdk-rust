// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListStoredQueries`](crate::client::fluent_builders::ListStoredQueries) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListStoredQueries::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListStoredQueries::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListStoredQueries::set_next_token): <p>The nextToken string returned in a previous request that you use to request the next page of results in a paginated response.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListStoredQueries::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListStoredQueries::set_max_results): <p>The maximum number of results to be returned with a single call.</p>
    /// - On success, responds with [`ListStoredQueriesOutput`](crate::output::ListStoredQueriesOutput) with field(s):
    ///   - [`stored_query_metadata(Option<Vec<StoredQueryMetadata>>)`](crate::output::ListStoredQueriesOutput::stored_query_metadata): <p>A list of <code>StoredQueryMetadata</code> objects.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListStoredQueriesOutput::next_token): <p>If the previous paginated request didn't return all of the remaining results, the response object's <code>NextToken</code> parameter value is set to a token. To retrieve the next set of results, call this action again and assign that token to the request object's <code>NextToken</code> parameter. If there are no remaining results, the previous response object's <code>NextToken</code> parameter is set to <code>null</code>. </p>
    /// - On failure, responds with [`SdkError<ListStoredQueriesError>`](crate::error::ListStoredQueriesError)
    pub fn list_stored_queries(&self) -> crate::client::fluent_builders::ListStoredQueries {
        crate::client::fluent_builders::ListStoredQueries::new(self.handle.clone())
    }
}
