// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`BatchGetResourceConfig`](crate::client::fluent_builders::BatchGetResourceConfig) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`resource_keys(Vec<ResourceKey>)`](crate::client::fluent_builders::BatchGetResourceConfig::resource_keys) / [`set_resource_keys(Option<Vec<ResourceKey>>)`](crate::client::fluent_builders::BatchGetResourceConfig::set_resource_keys): <p>A list of resource keys to be processed with the current request. Each element in the list consists of the resource type and resource ID.</p>
    /// - On success, responds with [`BatchGetResourceConfigOutput`](crate::output::BatchGetResourceConfigOutput) with field(s):
    ///   - [`base_configuration_items(Option<Vec<BaseConfigurationItem>>)`](crate::output::BatchGetResourceConfigOutput::base_configuration_items): <p>A list that contains the current configuration of one or more resources.</p>
    ///   - [`unprocessed_resource_keys(Option<Vec<ResourceKey>>)`](crate::output::BatchGetResourceConfigOutput::unprocessed_resource_keys): <p>A list of resource keys that were not processed with the current response. The unprocessesResourceKeys value is in the same form as ResourceKeys, so the value can be directly provided to a subsequent BatchGetResourceConfig operation. If there are no unprocessed resource keys, the response contains an empty unprocessedResourceKeys list. </p>
    /// - On failure, responds with [`SdkError<BatchGetResourceConfigError>`](crate::error::BatchGetResourceConfigError)
    pub fn batch_get_resource_config(
        &self,
    ) -> crate::client::fluent_builders::BatchGetResourceConfig {
        crate::client::fluent_builders::BatchGetResourceConfig::new(self.handle.clone())
    }
}
