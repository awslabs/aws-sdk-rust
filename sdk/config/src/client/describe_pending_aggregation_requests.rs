// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribePendingAggregationRequests`](crate::client::fluent_builders::DescribePendingAggregationRequests) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::DescribePendingAggregationRequests::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`limit(i32)`](crate::client::fluent_builders::DescribePendingAggregationRequests::limit) / [`set_limit(i32)`](crate::client::fluent_builders::DescribePendingAggregationRequests::set_limit): <p>The maximum number of evaluation results returned on each page. The default is maximum. If you specify 0, Config uses the default.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::DescribePendingAggregationRequests::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::DescribePendingAggregationRequests::set_next_token): <p>The <code>nextToken</code> string returned on a previous page that you use to get the next page of results in a paginated response.</p>
    /// - On success, responds with [`DescribePendingAggregationRequestsOutput`](crate::output::DescribePendingAggregationRequestsOutput) with field(s):
    ///   - [`pending_aggregation_requests(Option<Vec<PendingAggregationRequest>>)`](crate::output::DescribePendingAggregationRequestsOutput::pending_aggregation_requests): <p>Returns a PendingAggregationRequests object.</p>
    ///   - [`next_token(Option<String>)`](crate::output::DescribePendingAggregationRequestsOutput::next_token): <p>The <code>nextToken</code> string returned on a previous page that you use to get the next page of results in a paginated response.</p>
    /// - On failure, responds with [`SdkError<DescribePendingAggregationRequestsError>`](crate::error::DescribePendingAggregationRequestsError)
    pub fn describe_pending_aggregation_requests(
        &self,
    ) -> crate::client::fluent_builders::DescribePendingAggregationRequests {
        crate::client::fluent_builders::DescribePendingAggregationRequests::new(self.handle.clone())
    }
}
