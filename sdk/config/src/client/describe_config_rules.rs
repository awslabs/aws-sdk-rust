// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeConfigRules`](crate::client::fluent_builders::DescribeConfigRules) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::DescribeConfigRules::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`config_rule_names(Vec<String>)`](crate::client::fluent_builders::DescribeConfigRules::config_rule_names) / [`set_config_rule_names(Option<Vec<String>>)`](crate::client::fluent_builders::DescribeConfigRules::set_config_rule_names): <p>The names of the Config rules for which you want details. If you do not specify any names, Config returns details for all your rules.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::DescribeConfigRules::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::DescribeConfigRules::set_next_token): <p>The <code>nextToken</code> string returned on a previous page that you use to get the next page of results in a paginated response.</p>
    ///   - [`filters(DescribeConfigRulesFilters)`](crate::client::fluent_builders::DescribeConfigRules::filters) / [`set_filters(Option<DescribeConfigRulesFilters>)`](crate::client::fluent_builders::DescribeConfigRules::set_filters): <p>Returns a list of Detecive or Proactive Config rules. By default, this API returns an unfiltered list.</p>
    /// - On success, responds with [`DescribeConfigRulesOutput`](crate::output::DescribeConfigRulesOutput) with field(s):
    ///   - [`config_rules(Option<Vec<ConfigRule>>)`](crate::output::DescribeConfigRulesOutput::config_rules): <p>The details about your Config rules.</p>
    ///   - [`next_token(Option<String>)`](crate::output::DescribeConfigRulesOutput::next_token): <p>The string that you use in a subsequent request to get the next page of results in a paginated response.</p>
    /// - On failure, responds with [`SdkError<DescribeConfigRulesError>`](crate::error::DescribeConfigRulesError)
    pub fn describe_config_rules(&self) -> crate::client::fluent_builders::DescribeConfigRules {
        crate::client::fluent_builders::DescribeConfigRules::new(self.handle.clone())
    }
}
