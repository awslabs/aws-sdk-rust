// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The controls that Config uses for executing remediations.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ExecutionControls {
    /// <p>A SsmControls object.</p>
    #[doc(hidden)]
    pub ssm_controls: std::option::Option<crate::types::SsmControls>,
}
impl ExecutionControls {
    /// <p>A SsmControls object.</p>
    pub fn ssm_controls(&self) -> std::option::Option<&crate::types::SsmControls> {
        self.ssm_controls.as_ref()
    }
}
impl ExecutionControls {
    /// Creates a new builder-style object to manufacture [`ExecutionControls`](crate::types::ExecutionControls).
    pub fn builder() -> crate::types::builders::ExecutionControlsBuilder {
        crate::types::builders::ExecutionControlsBuilder::default()
    }
}

/// A builder for [`ExecutionControls`](crate::types::ExecutionControls).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ExecutionControlsBuilder {
    pub(crate) ssm_controls: std::option::Option<crate::types::SsmControls>,
}
impl ExecutionControlsBuilder {
    /// <p>A SsmControls object.</p>
    pub fn ssm_controls(mut self, input: crate::types::SsmControls) -> Self {
        self.ssm_controls = Some(input);
        self
    }
    /// <p>A SsmControls object.</p>
    pub fn set_ssm_controls(
        mut self,
        input: std::option::Option<crate::types::SsmControls>,
    ) -> Self {
        self.ssm_controls = input;
        self
    }
    /// Consumes the builder and constructs a [`ExecutionControls`](crate::types::ExecutionControls).
    pub fn build(self) -> crate::types::ExecutionControls {
        crate::types::ExecutionControls {
            ssm_controls: self.ssm_controls,
        }
    }
}
