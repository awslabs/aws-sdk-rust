// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Use EvaluationContext to group independently initiated proactive resource evaluations. For example, CFN Stack. If you want to check just a resource definition, you do not need to provide evaluation context.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct EvaluationContext {
    /// <p>A unique EvaluationContextIdentifier ID for an EvaluationContext.</p>
    #[doc(hidden)]
    pub evaluation_context_identifier: std::option::Option<std::string::String>,
}
impl EvaluationContext {
    /// <p>A unique EvaluationContextIdentifier ID for an EvaluationContext.</p>
    pub fn evaluation_context_identifier(&self) -> std::option::Option<&str> {
        self.evaluation_context_identifier.as_deref()
    }
}
impl EvaluationContext {
    /// Creates a new builder-style object to manufacture [`EvaluationContext`](crate::types::EvaluationContext).
    pub fn builder() -> crate::types::builders::EvaluationContextBuilder {
        crate::types::builders::EvaluationContextBuilder::default()
    }
}

/// A builder for [`EvaluationContext`](crate::types::EvaluationContext).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct EvaluationContextBuilder {
    pub(crate) evaluation_context_identifier: std::option::Option<std::string::String>,
}
impl EvaluationContextBuilder {
    /// <p>A unique EvaluationContextIdentifier ID for an EvaluationContext.</p>
    pub fn evaluation_context_identifier(mut self, input: impl Into<std::string::String>) -> Self {
        self.evaluation_context_identifier = Some(input.into());
        self
    }
    /// <p>A unique EvaluationContextIdentifier ID for an EvaluationContext.</p>
    pub fn set_evaluation_context_identifier(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.evaluation_context_identifier = input;
        self
    }
    /// Consumes the builder and constructs a [`EvaluationContext`](crate::types::EvaluationContext).
    pub fn build(self) -> crate::types::EvaluationContext {
        crate::types::EvaluationContext {
            evaluation_context_identifier: self.evaluation_context_identifier,
        }
    }
}
