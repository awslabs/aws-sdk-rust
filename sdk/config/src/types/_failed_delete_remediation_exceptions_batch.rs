// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>List of each of the failed delete remediation exceptions with specific reasons.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct FailedDeleteRemediationExceptionsBatch {
    /// <p>Returns a failure message for delete remediation exception. For example, Config creates an exception due to an internal error.</p>
    #[doc(hidden)]
    pub failure_message: std::option::Option<std::string::String>,
    /// <p>Returns remediation exception resource key object of the failed items.</p>
    #[doc(hidden)]
    pub failed_items:
        std::option::Option<std::vec::Vec<crate::types::RemediationExceptionResourceKey>>,
}
impl FailedDeleteRemediationExceptionsBatch {
    /// <p>Returns a failure message for delete remediation exception. For example, Config creates an exception due to an internal error.</p>
    pub fn failure_message(&self) -> std::option::Option<&str> {
        self.failure_message.as_deref()
    }
    /// <p>Returns remediation exception resource key object of the failed items.</p>
    pub fn failed_items(
        &self,
    ) -> std::option::Option<&[crate::types::RemediationExceptionResourceKey]> {
        self.failed_items.as_deref()
    }
}
impl FailedDeleteRemediationExceptionsBatch {
    /// Creates a new builder-style object to manufacture [`FailedDeleteRemediationExceptionsBatch`](crate::types::FailedDeleteRemediationExceptionsBatch).
    pub fn builder() -> crate::types::builders::FailedDeleteRemediationExceptionsBatchBuilder {
        crate::types::builders::FailedDeleteRemediationExceptionsBatchBuilder::default()
    }
}

/// A builder for [`FailedDeleteRemediationExceptionsBatch`](crate::types::FailedDeleteRemediationExceptionsBatch).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct FailedDeleteRemediationExceptionsBatchBuilder {
    pub(crate) failure_message: std::option::Option<std::string::String>,
    pub(crate) failed_items:
        std::option::Option<std::vec::Vec<crate::types::RemediationExceptionResourceKey>>,
}
impl FailedDeleteRemediationExceptionsBatchBuilder {
    /// <p>Returns a failure message for delete remediation exception. For example, Config creates an exception due to an internal error.</p>
    pub fn failure_message(mut self, input: impl Into<std::string::String>) -> Self {
        self.failure_message = Some(input.into());
        self
    }
    /// <p>Returns a failure message for delete remediation exception. For example, Config creates an exception due to an internal error.</p>
    pub fn set_failure_message(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.failure_message = input;
        self
    }
    /// Appends an item to `failed_items`.
    ///
    /// To override the contents of this collection use [`set_failed_items`](Self::set_failed_items).
    ///
    /// <p>Returns remediation exception resource key object of the failed items.</p>
    pub fn failed_items(mut self, input: crate::types::RemediationExceptionResourceKey) -> Self {
        let mut v = self.failed_items.unwrap_or_default();
        v.push(input);
        self.failed_items = Some(v);
        self
    }
    /// <p>Returns remediation exception resource key object of the failed items.</p>
    pub fn set_failed_items(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::RemediationExceptionResourceKey>>,
    ) -> Self {
        self.failed_items = input;
        self
    }
    /// Consumes the builder and constructs a [`FailedDeleteRemediationExceptionsBatch`](crate::types::FailedDeleteRemediationExceptionsBatch).
    pub fn build(self) -> crate::types::FailedDeleteRemediationExceptionsBatch {
        crate::types::FailedDeleteRemediationExceptionsBatch {
            failure_message: self.failure_message,
            failed_items: self.failed_items,
        }
    }
}
