// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The value is either a dynamic (resource) value or a static value. You must select either a dynamic value or a static value.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct RemediationParameterValue {
    /// <p>The value is dynamic and changes at run-time.</p>
    #[doc(hidden)]
    pub resource_value: std::option::Option<crate::types::ResourceValue>,
    /// <p>The value is static and does not change at run-time.</p>
    #[doc(hidden)]
    pub static_value: std::option::Option<crate::types::StaticValue>,
}
impl RemediationParameterValue {
    /// <p>The value is dynamic and changes at run-time.</p>
    pub fn resource_value(&self) -> std::option::Option<&crate::types::ResourceValue> {
        self.resource_value.as_ref()
    }
    /// <p>The value is static and does not change at run-time.</p>
    pub fn static_value(&self) -> std::option::Option<&crate::types::StaticValue> {
        self.static_value.as_ref()
    }
}
impl RemediationParameterValue {
    /// Creates a new builder-style object to manufacture [`RemediationParameterValue`](crate::types::RemediationParameterValue).
    pub fn builder() -> crate::types::builders::RemediationParameterValueBuilder {
        crate::types::builders::RemediationParameterValueBuilder::default()
    }
}

/// A builder for [`RemediationParameterValue`](crate::types::RemediationParameterValue).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct RemediationParameterValueBuilder {
    pub(crate) resource_value: std::option::Option<crate::types::ResourceValue>,
    pub(crate) static_value: std::option::Option<crate::types::StaticValue>,
}
impl RemediationParameterValueBuilder {
    /// <p>The value is dynamic and changes at run-time.</p>
    pub fn resource_value(mut self, input: crate::types::ResourceValue) -> Self {
        self.resource_value = Some(input);
        self
    }
    /// <p>The value is dynamic and changes at run-time.</p>
    pub fn set_resource_value(
        mut self,
        input: std::option::Option<crate::types::ResourceValue>,
    ) -> Self {
        self.resource_value = input;
        self
    }
    /// <p>The value is static and does not change at run-time.</p>
    pub fn static_value(mut self, input: crate::types::StaticValue) -> Self {
        self.static_value = Some(input);
        self
    }
    /// <p>The value is static and does not change at run-time.</p>
    pub fn set_static_value(
        mut self,
        input: std::option::Option<crate::types::StaticValue>,
    ) -> Self {
        self.static_value = input;
        self
    }
    /// Consumes the builder and constructs a [`RemediationParameterValue`](crate::types::RemediationParameterValue).
    pub fn build(self) -> crate::types::RemediationParameterValue {
        crate::types::RemediationParameterValue {
            resource_value: self.resource_value,
            static_value: self.static_value,
        }
    }
}
