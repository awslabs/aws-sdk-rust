// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The dynamic value of the resource.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ResourceValue {
    /// <p>The value is a resource ID.</p>
    #[doc(hidden)]
    pub value: std::option::Option<crate::types::ResourceValueType>,
}
impl ResourceValue {
    /// <p>The value is a resource ID.</p>
    pub fn value(&self) -> std::option::Option<&crate::types::ResourceValueType> {
        self.value.as_ref()
    }
}
impl ResourceValue {
    /// Creates a new builder-style object to manufacture [`ResourceValue`](crate::types::ResourceValue).
    pub fn builder() -> crate::types::builders::ResourceValueBuilder {
        crate::types::builders::ResourceValueBuilder::default()
    }
}

/// A builder for [`ResourceValue`](crate::types::ResourceValue).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ResourceValueBuilder {
    pub(crate) value: std::option::Option<crate::types::ResourceValueType>,
}
impl ResourceValueBuilder {
    /// <p>The value is a resource ID.</p>
    pub fn value(mut self, input: crate::types::ResourceValueType) -> Self {
        self.value = Some(input);
        self
    }
    /// <p>The value is a resource ID.</p>
    pub fn set_value(
        mut self,
        input: std::option::Option<crate::types::ResourceValueType>,
    ) -> Self {
        self.value = input;
        self
    }
    /// Consumes the builder and constructs a [`ResourceValue`](crate::types::ResourceValue).
    pub fn build(self) -> crate::types::ResourceValue {
        crate::types::ResourceValue { value: self.value }
    }
}
