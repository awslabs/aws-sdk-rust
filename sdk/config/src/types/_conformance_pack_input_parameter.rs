// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Input parameters in the form of key-value pairs for the conformance pack, both of which you define. Keys can have a maximum character length of 255 characters, and values can have a maximum length of 4096 characters.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ConformancePackInputParameter {
    /// <p>One part of a key-value pair.</p>
    #[doc(hidden)]
    pub parameter_name: std::option::Option<std::string::String>,
    /// <p>Another part of the key-value pair. </p>
    #[doc(hidden)]
    pub parameter_value: std::option::Option<std::string::String>,
}
impl ConformancePackInputParameter {
    /// <p>One part of a key-value pair.</p>
    pub fn parameter_name(&self) -> std::option::Option<&str> {
        self.parameter_name.as_deref()
    }
    /// <p>Another part of the key-value pair. </p>
    pub fn parameter_value(&self) -> std::option::Option<&str> {
        self.parameter_value.as_deref()
    }
}
impl ConformancePackInputParameter {
    /// Creates a new builder-style object to manufacture [`ConformancePackInputParameter`](crate::types::ConformancePackInputParameter).
    pub fn builder() -> crate::types::builders::ConformancePackInputParameterBuilder {
        crate::types::builders::ConformancePackInputParameterBuilder::default()
    }
}

/// A builder for [`ConformancePackInputParameter`](crate::types::ConformancePackInputParameter).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ConformancePackInputParameterBuilder {
    pub(crate) parameter_name: std::option::Option<std::string::String>,
    pub(crate) parameter_value: std::option::Option<std::string::String>,
}
impl ConformancePackInputParameterBuilder {
    /// <p>One part of a key-value pair.</p>
    pub fn parameter_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.parameter_name = Some(input.into());
        self
    }
    /// <p>One part of a key-value pair.</p>
    pub fn set_parameter_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.parameter_name = input;
        self
    }
    /// <p>Another part of the key-value pair. </p>
    pub fn parameter_value(mut self, input: impl Into<std::string::String>) -> Self {
        self.parameter_value = Some(input.into());
        self
    }
    /// <p>Another part of the key-value pair. </p>
    pub fn set_parameter_value(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.parameter_value = input;
        self
    }
    /// Consumes the builder and constructs a [`ConformancePackInputParameter`](crate::types::ConformancePackInputParameter).
    pub fn build(self) -> crate::types::ConformancePackInputParameter {
        crate::types::ConformancePackInputParameter {
            parameter_name: self.parameter_name,
            parameter_value: self.parameter_value,
        }
    }
}
