// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct PutConfigurationAggregatorOutput {
    /// <p>Returns a ConfigurationAggregator object.</p>
    #[doc(hidden)]
    pub configuration_aggregator: std::option::Option<crate::types::ConfigurationAggregator>,
    _request_id: Option<String>,
}
impl PutConfigurationAggregatorOutput {
    /// <p>Returns a ConfigurationAggregator object.</p>
    pub fn configuration_aggregator(
        &self,
    ) -> std::option::Option<&crate::types::ConfigurationAggregator> {
        self.configuration_aggregator.as_ref()
    }
}
impl aws_http::request_id::RequestId for PutConfigurationAggregatorOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl PutConfigurationAggregatorOutput {
    /// Creates a new builder-style object to manufacture [`PutConfigurationAggregatorOutput`](crate::operation::put_configuration_aggregator::PutConfigurationAggregatorOutput).
    pub fn builder() -> crate::operation::put_configuration_aggregator::builders::PutConfigurationAggregatorOutputBuilder{
        crate::operation::put_configuration_aggregator::builders::PutConfigurationAggregatorOutputBuilder::default()
    }
}

/// A builder for [`PutConfigurationAggregatorOutput`](crate::operation::put_configuration_aggregator::PutConfigurationAggregatorOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct PutConfigurationAggregatorOutputBuilder {
    pub(crate) configuration_aggregator: std::option::Option<crate::types::ConfigurationAggregator>,
    _request_id: Option<String>,
}
impl PutConfigurationAggregatorOutputBuilder {
    /// <p>Returns a ConfigurationAggregator object.</p>
    pub fn configuration_aggregator(
        mut self,
        input: crate::types::ConfigurationAggregator,
    ) -> Self {
        self.configuration_aggregator = Some(input);
        self
    }
    /// <p>Returns a ConfigurationAggregator object.</p>
    pub fn set_configuration_aggregator(
        mut self,
        input: std::option::Option<crate::types::ConfigurationAggregator>,
    ) -> Self {
        self.configuration_aggregator = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`PutConfigurationAggregatorOutput`](crate::operation::put_configuration_aggregator::PutConfigurationAggregatorOutput).
    pub fn build(
        self,
    ) -> crate::operation::put_configuration_aggregator::PutConfigurationAggregatorOutput {
        crate::operation::put_configuration_aggregator::PutConfigurationAggregatorOutput {
            configuration_aggregator: self.configuration_aggregator,
            _request_id: self._request_id,
        }
    }
}
