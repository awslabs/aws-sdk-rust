// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The output for the <code>DescribeConfigurationRecorders</code> action.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DescribeConfigurationRecordersOutput {
    /// <p>A list that contains the descriptions of the specified configuration recorders.</p>
    #[doc(hidden)]
    pub configuration_recorders:
        std::option::Option<std::vec::Vec<crate::types::ConfigurationRecorder>>,
    _request_id: Option<String>,
}
impl DescribeConfigurationRecordersOutput {
    /// <p>A list that contains the descriptions of the specified configuration recorders.</p>
    pub fn configuration_recorders(
        &self,
    ) -> std::option::Option<&[crate::types::ConfigurationRecorder]> {
        self.configuration_recorders.as_deref()
    }
}
impl aws_http::request_id::RequestId for DescribeConfigurationRecordersOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl DescribeConfigurationRecordersOutput {
    /// Creates a new builder-style object to manufacture [`DescribeConfigurationRecordersOutput`](crate::operation::describe_configuration_recorders::DescribeConfigurationRecordersOutput).
    pub fn builder() -> crate::operation::describe_configuration_recorders::builders::DescribeConfigurationRecordersOutputBuilder{
        crate::operation::describe_configuration_recorders::builders::DescribeConfigurationRecordersOutputBuilder::default()
    }
}

/// A builder for [`DescribeConfigurationRecordersOutput`](crate::operation::describe_configuration_recorders::DescribeConfigurationRecordersOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DescribeConfigurationRecordersOutputBuilder {
    pub(crate) configuration_recorders:
        std::option::Option<std::vec::Vec<crate::types::ConfigurationRecorder>>,
    _request_id: Option<String>,
}
impl DescribeConfigurationRecordersOutputBuilder {
    /// Appends an item to `configuration_recorders`.
    ///
    /// To override the contents of this collection use [`set_configuration_recorders`](Self::set_configuration_recorders).
    ///
    /// <p>A list that contains the descriptions of the specified configuration recorders.</p>
    pub fn configuration_recorders(mut self, input: crate::types::ConfigurationRecorder) -> Self {
        let mut v = self.configuration_recorders.unwrap_or_default();
        v.push(input);
        self.configuration_recorders = Some(v);
        self
    }
    /// <p>A list that contains the descriptions of the specified configuration recorders.</p>
    pub fn set_configuration_recorders(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::ConfigurationRecorder>>,
    ) -> Self {
        self.configuration_recorders = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`DescribeConfigurationRecordersOutput`](crate::operation::describe_configuration_recorders::DescribeConfigurationRecordersOutput).
    pub fn build(
        self,
    ) -> crate::operation::describe_configuration_recorders::DescribeConfigurationRecordersOutput
    {
        crate::operation::describe_configuration_recorders::DescribeConfigurationRecordersOutput {
            configuration_recorders: self.configuration_recorders,
            _request_id: self._request_id,
        }
    }
}
