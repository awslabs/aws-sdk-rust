// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DeleteRemediationConfigurationInput {
    /// <p>The name of the Config rule for which you want to delete remediation configuration.</p>
    pub config_rule_name: ::std::option::Option<::std::string::String>,
    /// <p>The type of a resource.</p>
    pub resource_type: ::std::option::Option<::std::string::String>,
}
impl DeleteRemediationConfigurationInput {
    /// <p>The name of the Config rule for which you want to delete remediation configuration.</p>
    pub fn config_rule_name(&self) -> ::std::option::Option<&str> {
        self.config_rule_name.as_deref()
    }
    /// <p>The type of a resource.</p>
    pub fn resource_type(&self) -> ::std::option::Option<&str> {
        self.resource_type.as_deref()
    }
}
impl DeleteRemediationConfigurationInput {
    /// Creates a new builder-style object to manufacture [`DeleteRemediationConfigurationInput`](crate::operation::delete_remediation_configuration::DeleteRemediationConfigurationInput).
    pub fn builder() -> crate::operation::delete_remediation_configuration::builders::DeleteRemediationConfigurationInputBuilder {
        crate::operation::delete_remediation_configuration::builders::DeleteRemediationConfigurationInputBuilder::default()
    }
}

/// A builder for [`DeleteRemediationConfigurationInput`](crate::operation::delete_remediation_configuration::DeleteRemediationConfigurationInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DeleteRemediationConfigurationInputBuilder {
    pub(crate) config_rule_name: ::std::option::Option<::std::string::String>,
    pub(crate) resource_type: ::std::option::Option<::std::string::String>,
}
impl DeleteRemediationConfigurationInputBuilder {
    /// <p>The name of the Config rule for which you want to delete remediation configuration.</p>
    /// This field is required.
    pub fn config_rule_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.config_rule_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the Config rule for which you want to delete remediation configuration.</p>
    pub fn set_config_rule_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.config_rule_name = input;
        self
    }
    /// <p>The name of the Config rule for which you want to delete remediation configuration.</p>
    pub fn get_config_rule_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.config_rule_name
    }
    /// <p>The type of a resource.</p>
    pub fn resource_type(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.resource_type = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The type of a resource.</p>
    pub fn set_resource_type(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.resource_type = input;
        self
    }
    /// <p>The type of a resource.</p>
    pub fn get_resource_type(&self) -> &::std::option::Option<::std::string::String> {
        &self.resource_type
    }
    /// Consumes the builder and constructs a [`DeleteRemediationConfigurationInput`](crate::operation::delete_remediation_configuration::DeleteRemediationConfigurationInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::delete_remediation_configuration::DeleteRemediationConfigurationInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::delete_remediation_configuration::DeleteRemediationConfigurationInput {
            config_rule_name: self.config_rule_name,
            resource_type: self.resource_type,
        })
    }
}
