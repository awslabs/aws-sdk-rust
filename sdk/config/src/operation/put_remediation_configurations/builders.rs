// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub use crate::operation::put_remediation_configurations::_put_remediation_configurations_output::PutRemediationConfigurationsOutputBuilder;

pub use crate::operation::put_remediation_configurations::_put_remediation_configurations_input::PutRemediationConfigurationsInputBuilder;

/// Fluent builder constructing a request to `PutRemediationConfigurations`.
///
/// <p>Adds or updates the remediation configuration with a specific Config rule with the selected target or action. The API creates the <code>RemediationConfiguration</code> object for the Config rule. The Config rule must already exist for you to add a remediation configuration. The target (SSM document) must exist and have permissions to use the target. </p> <note>
/// <p>If you make backward incompatible changes to the SSM document, you must call this again to ensure the remediations can run.</p>
/// <p>This API does not support adding remediation configurations for service-linked Config Rules such as Organization Config rules, the rules deployed by conformance packs, and rules deployed by Amazon Web Services Security Hub.</p>
/// </note> <note>
/// <p>For manual remediation configuration, you need to provide a value for <code>automationAssumeRole</code> or use a value in the <code>assumeRole</code>field to remediate your resources. The SSM automation document can use either as long as it maps to a valid parameter.</p>
/// <p>However, for automatic remediation configuration, the only valid <code>assumeRole</code> field value is <code>AutomationAssumeRole</code> and you need to provide a value for <code>AutomationAssumeRole</code> to remediate your resources.</p>
/// </note>
#[derive(std::clone::Clone, std::fmt::Debug)]
pub struct PutRemediationConfigurationsFluentBuilder {
                handle: std::sync::Arc<crate::client::Handle>,
                inner: crate::operation::put_remediation_configurations::builders::PutRemediationConfigurationsInputBuilder
            }
impl PutRemediationConfigurationsFluentBuilder {
    /// Creates a new `PutRemediationConfigurations`.
    pub(crate) fn new(handle: std::sync::Arc<crate::client::Handle>) -> Self {
        Self {
            handle,
            inner: Default::default(),
        }
    }

    /// Consume this builder, creating a customizable operation that can be modified before being
    /// sent. The operation's inner [http::Request] can be modified as well.
    pub async fn customize(
        self,
    ) -> std::result::Result<
        crate::client::customize::CustomizableOperation<
            crate::operation::put_remediation_configurations::PutRemediationConfigurations,
            aws_http::retry::AwsResponseRetryClassifier,
        >,
        aws_smithy_http::result::SdkError<
            crate::operation::put_remediation_configurations::PutRemediationConfigurationsError,
        >,
    > {
        let handle = self.handle.clone();
        let operation = self
            .inner
            .build()
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?
            .make_operation(&handle.conf)
            .await
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?;
        Ok(crate::client::customize::CustomizableOperation { handle, operation })
    }

    /// Sends the request and returns the response.
    ///
    /// If an error occurs, an `SdkError` will be returned with additional details that
    /// can be matched against.
    ///
    /// By default, any retryable failures will be retried twice. Retry behavior
    /// is configurable with the [RetryConfig](aws_smithy_types::retry::RetryConfig), which can be
    /// set when configuring the client.
    pub async fn send(
        self,
    ) -> std::result::Result<
        crate::operation::put_remediation_configurations::PutRemediationConfigurationsOutput,
        aws_smithy_http::result::SdkError<
            crate::operation::put_remediation_configurations::PutRemediationConfigurationsError,
        >,
    > {
        let op = self
            .inner
            .build()
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?
            .make_operation(&self.handle.conf)
            .await
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?;
        self.handle.client.call(op).await
    }
    /// Appends an item to `RemediationConfigurations`.
    ///
    /// To override the contents of this collection use [`set_remediation_configurations`](Self::set_remediation_configurations).
    ///
    /// <p>A list of remediation configuration objects.</p>
    pub fn remediation_configurations(
        mut self,
        input: crate::types::RemediationConfiguration,
    ) -> Self {
        self.inner = self.inner.remediation_configurations(input);
        self
    }
    /// <p>A list of remediation configuration objects.</p>
    pub fn set_remediation_configurations(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::RemediationConfiguration>>,
    ) -> Self {
        self.inner = self.inner.set_remediation_configurations(input);
        self
    }
}
