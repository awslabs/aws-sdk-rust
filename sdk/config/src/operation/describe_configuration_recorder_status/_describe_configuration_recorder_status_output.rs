// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The output for the <code>DescribeConfigurationRecorderStatus</code> action, in JSON format.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DescribeConfigurationRecorderStatusOutput {
    /// <p>A list that contains status of the specified recorders.</p>
    #[doc(hidden)]
    pub configuration_recorders_status:
        std::option::Option<std::vec::Vec<crate::types::ConfigurationRecorderStatus>>,
    _request_id: Option<String>,
}
impl DescribeConfigurationRecorderStatusOutput {
    /// <p>A list that contains status of the specified recorders.</p>
    pub fn configuration_recorders_status(
        &self,
    ) -> std::option::Option<&[crate::types::ConfigurationRecorderStatus]> {
        self.configuration_recorders_status.as_deref()
    }
}
impl aws_http::request_id::RequestId for DescribeConfigurationRecorderStatusOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl DescribeConfigurationRecorderStatusOutput {
    /// Creates a new builder-style object to manufacture [`DescribeConfigurationRecorderStatusOutput`](crate::operation::describe_configuration_recorder_status::DescribeConfigurationRecorderStatusOutput).
    pub fn builder() -> crate::operation::describe_configuration_recorder_status::builders::DescribeConfigurationRecorderStatusOutputBuilder{
        crate::operation::describe_configuration_recorder_status::builders::DescribeConfigurationRecorderStatusOutputBuilder::default()
    }
}

/// A builder for [`DescribeConfigurationRecorderStatusOutput`](crate::operation::describe_configuration_recorder_status::DescribeConfigurationRecorderStatusOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DescribeConfigurationRecorderStatusOutputBuilder {
    pub(crate) configuration_recorders_status:
        std::option::Option<std::vec::Vec<crate::types::ConfigurationRecorderStatus>>,
    _request_id: Option<String>,
}
impl DescribeConfigurationRecorderStatusOutputBuilder {
    /// Appends an item to `configuration_recorders_status`.
    ///
    /// To override the contents of this collection use [`set_configuration_recorders_status`](Self::set_configuration_recorders_status).
    ///
    /// <p>A list that contains status of the specified recorders.</p>
    pub fn configuration_recorders_status(
        mut self,
        input: crate::types::ConfigurationRecorderStatus,
    ) -> Self {
        let mut v = self.configuration_recorders_status.unwrap_or_default();
        v.push(input);
        self.configuration_recorders_status = Some(v);
        self
    }
    /// <p>A list that contains status of the specified recorders.</p>
    pub fn set_configuration_recorders_status(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::ConfigurationRecorderStatus>>,
    ) -> Self {
        self.configuration_recorders_status = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`DescribeConfigurationRecorderStatusOutput`](crate::operation::describe_configuration_recorder_status::DescribeConfigurationRecorderStatusOutput).
    pub fn build(self) -> crate::operation::describe_configuration_recorder_status::DescribeConfigurationRecorderStatusOutput{
        crate::operation::describe_configuration_recorder_status::DescribeConfigurationRecorderStatusOutput {
            configuration_recorders_status: self.configuration_recorders_status
            ,
            _request_id: self._request_id,
        }
    }
}
