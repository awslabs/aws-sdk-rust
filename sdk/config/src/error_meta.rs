// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[non_exhaustive]
#[derive(std::fmt::Debug)]
pub enum Error {
    ConformancePackTemplateValidationException(
        crate::error::ConformancePackTemplateValidationException,
    ),
    InsufficientDeliveryPolicyException(crate::error::InsufficientDeliveryPolicyException),
    InsufficientPermissionsException(crate::error::InsufficientPermissionsException),
    InvalidConfigurationRecorderNameException(
        crate::error::InvalidConfigurationRecorderNameException,
    ),
    InvalidDeliveryChannelNameException(crate::error::InvalidDeliveryChannelNameException),
    InvalidExpressionException(crate::error::InvalidExpressionException),
    InvalidLimitException(crate::error::InvalidLimitException),
    InvalidNextTokenException(crate::error::InvalidNextTokenException),
    InvalidParameterValueException(crate::error::InvalidParameterValueException),
    InvalidRecordingGroupException(crate::error::InvalidRecordingGroupException),
    InvalidResultTokenException(crate::error::InvalidResultTokenException),
    InvalidRoleException(crate::error::InvalidRoleException),
    InvalidS3KeyPrefixException(crate::error::InvalidS3KeyPrefixException),
    InvalidS3KmsKeyArnException(crate::error::InvalidS3KmsKeyArnException),
    InvalidSnsTopicArnException(crate::error::InvalidSnsTopicArnException),
    InvalidTimeRangeException(crate::error::InvalidTimeRangeException),
    LastDeliveryChannelDeleteFailedException(
        crate::error::LastDeliveryChannelDeleteFailedException,
    ),
    LimitExceededException(crate::error::LimitExceededException),
    MaxActiveResourcesExceededException(crate::error::MaxActiveResourcesExceededException),
    MaxNumberOfConfigRulesExceededException(crate::error::MaxNumberOfConfigRulesExceededException),
    MaxNumberOfConfigurationRecordersExceededException(
        crate::error::MaxNumberOfConfigurationRecordersExceededException,
    ),
    MaxNumberOfConformancePacksExceededException(
        crate::error::MaxNumberOfConformancePacksExceededException,
    ),
    MaxNumberOfDeliveryChannelsExceededException(
        crate::error::MaxNumberOfDeliveryChannelsExceededException,
    ),
    MaxNumberOfOrganizationConfigRulesExceededException(
        crate::error::MaxNumberOfOrganizationConfigRulesExceededException,
    ),
    MaxNumberOfOrganizationConformancePacksExceededException(
        crate::error::MaxNumberOfOrganizationConformancePacksExceededException,
    ),
    MaxNumberOfRetentionConfigurationsExceededException(
        crate::error::MaxNumberOfRetentionConfigurationsExceededException,
    ),
    NoAvailableConfigurationRecorderException(
        crate::error::NoAvailableConfigurationRecorderException,
    ),
    NoAvailableDeliveryChannelException(crate::error::NoAvailableDeliveryChannelException),
    NoAvailableOrganizationException(crate::error::NoAvailableOrganizationException),
    NoRunningConfigurationRecorderException(crate::error::NoRunningConfigurationRecorderException),
    NoSuchBucketException(crate::error::NoSuchBucketException),
    NoSuchConfigRuleException(crate::error::NoSuchConfigRuleException),
    NoSuchConfigRuleInConformancePackException(
        crate::error::NoSuchConfigRuleInConformancePackException,
    ),
    NoSuchConfigurationAggregatorException(crate::error::NoSuchConfigurationAggregatorException),
    NoSuchConfigurationRecorderException(crate::error::NoSuchConfigurationRecorderException),
    NoSuchConformancePackException(crate::error::NoSuchConformancePackException),
    NoSuchDeliveryChannelException(crate::error::NoSuchDeliveryChannelException),
    NoSuchOrganizationConfigRuleException(crate::error::NoSuchOrganizationConfigRuleException),
    NoSuchOrganizationConformancePackException(
        crate::error::NoSuchOrganizationConformancePackException,
    ),
    NoSuchRemediationConfigurationException(crate::error::NoSuchRemediationConfigurationException),
    NoSuchRemediationExceptionException(crate::error::NoSuchRemediationExceptionException),
    NoSuchRetentionConfigurationException(crate::error::NoSuchRetentionConfigurationException),
    OrganizationAccessDeniedException(crate::error::OrganizationAccessDeniedException),
    OrganizationAllFeaturesNotEnabledException(
        crate::error::OrganizationAllFeaturesNotEnabledException,
    ),
    OrganizationConformancePackTemplateValidationException(
        crate::error::OrganizationConformancePackTemplateValidationException,
    ),
    OversizedConfigurationItemException(crate::error::OversizedConfigurationItemException),
    RemediationInProgressException(crate::error::RemediationInProgressException),
    ResourceConcurrentModificationException(crate::error::ResourceConcurrentModificationException),
    ResourceInUseException(crate::error::ResourceInUseException),
    ResourceNotDiscoveredException(crate::error::ResourceNotDiscoveredException),
    ResourceNotFoundException(crate::error::ResourceNotFoundException),
    TooManyTagsException(crate::error::TooManyTagsException),
    ValidationException(crate::error::ValidationException),
    Unhandled(Box<dyn std::error::Error + Send + Sync + 'static>),
}
impl std::fmt::Display for Error {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        match self {
            Error::ConformancePackTemplateValidationException(inner) => inner.fmt(f),
            Error::InsufficientDeliveryPolicyException(inner) => inner.fmt(f),
            Error::InsufficientPermissionsException(inner) => inner.fmt(f),
            Error::InvalidConfigurationRecorderNameException(inner) => inner.fmt(f),
            Error::InvalidDeliveryChannelNameException(inner) => inner.fmt(f),
            Error::InvalidExpressionException(inner) => inner.fmt(f),
            Error::InvalidLimitException(inner) => inner.fmt(f),
            Error::InvalidNextTokenException(inner) => inner.fmt(f),
            Error::InvalidParameterValueException(inner) => inner.fmt(f),
            Error::InvalidRecordingGroupException(inner) => inner.fmt(f),
            Error::InvalidResultTokenException(inner) => inner.fmt(f),
            Error::InvalidRoleException(inner) => inner.fmt(f),
            Error::InvalidS3KeyPrefixException(inner) => inner.fmt(f),
            Error::InvalidS3KmsKeyArnException(inner) => inner.fmt(f),
            Error::InvalidSnsTopicArnException(inner) => inner.fmt(f),
            Error::InvalidTimeRangeException(inner) => inner.fmt(f),
            Error::LastDeliveryChannelDeleteFailedException(inner) => inner.fmt(f),
            Error::LimitExceededException(inner) => inner.fmt(f),
            Error::MaxActiveResourcesExceededException(inner) => inner.fmt(f),
            Error::MaxNumberOfConfigRulesExceededException(inner) => inner.fmt(f),
            Error::MaxNumberOfConfigurationRecordersExceededException(inner) => inner.fmt(f),
            Error::MaxNumberOfConformancePacksExceededException(inner) => inner.fmt(f),
            Error::MaxNumberOfDeliveryChannelsExceededException(inner) => inner.fmt(f),
            Error::MaxNumberOfOrganizationConfigRulesExceededException(inner) => inner.fmt(f),
            Error::MaxNumberOfOrganizationConformancePacksExceededException(inner) => inner.fmt(f),
            Error::MaxNumberOfRetentionConfigurationsExceededException(inner) => inner.fmt(f),
            Error::NoAvailableConfigurationRecorderException(inner) => inner.fmt(f),
            Error::NoAvailableDeliveryChannelException(inner) => inner.fmt(f),
            Error::NoAvailableOrganizationException(inner) => inner.fmt(f),
            Error::NoRunningConfigurationRecorderException(inner) => inner.fmt(f),
            Error::NoSuchBucketException(inner) => inner.fmt(f),
            Error::NoSuchConfigRuleException(inner) => inner.fmt(f),
            Error::NoSuchConfigRuleInConformancePackException(inner) => inner.fmt(f),
            Error::NoSuchConfigurationAggregatorException(inner) => inner.fmt(f),
            Error::NoSuchConfigurationRecorderException(inner) => inner.fmt(f),
            Error::NoSuchConformancePackException(inner) => inner.fmt(f),
            Error::NoSuchDeliveryChannelException(inner) => inner.fmt(f),
            Error::NoSuchOrganizationConfigRuleException(inner) => inner.fmt(f),
            Error::NoSuchOrganizationConformancePackException(inner) => inner.fmt(f),
            Error::NoSuchRemediationConfigurationException(inner) => inner.fmt(f),
            Error::NoSuchRemediationExceptionException(inner) => inner.fmt(f),
            Error::NoSuchRetentionConfigurationException(inner) => inner.fmt(f),
            Error::OrganizationAccessDeniedException(inner) => inner.fmt(f),
            Error::OrganizationAllFeaturesNotEnabledException(inner) => inner.fmt(f),
            Error::OrganizationConformancePackTemplateValidationException(inner) => inner.fmt(f),
            Error::OversizedConfigurationItemException(inner) => inner.fmt(f),
            Error::RemediationInProgressException(inner) => inner.fmt(f),
            Error::ResourceConcurrentModificationException(inner) => inner.fmt(f),
            Error::ResourceInUseException(inner) => inner.fmt(f),
            Error::ResourceNotDiscoveredException(inner) => inner.fmt(f),
            Error::ResourceNotFoundException(inner) => inner.fmt(f),
            Error::TooManyTagsException(inner) => inner.fmt(f),
            Error::ValidationException(inner) => inner.fmt(f),
            Error::Unhandled(inner) => inner.fmt(f),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::BatchGetAggregateResourceConfigError>>
    for Error
{
    fn from(
        err: smithy_http::result::SdkError<crate::error::BatchGetAggregateResourceConfigError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::BatchGetAggregateResourceConfigErrorKind::NoSuchConfigurationAggregatorException(inner) => Error::NoSuchConfigurationAggregatorException(inner),
                crate::error::BatchGetAggregateResourceConfigErrorKind::ValidationException(inner) => Error::ValidationException(inner),
                crate::error::BatchGetAggregateResourceConfigErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::BatchGetResourceConfigError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::BatchGetResourceConfigError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::BatchGetResourceConfigErrorKind::NoAvailableConfigurationRecorderException(inner) => Error::NoAvailableConfigurationRecorderException(inner),
                crate::error::BatchGetResourceConfigErrorKind::ValidationException(inner) => Error::ValidationException(inner),
                crate::error::BatchGetResourceConfigErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DeleteAggregationAuthorizationError>>
    for Error
{
    fn from(
        err: smithy_http::result::SdkError<crate::error::DeleteAggregationAuthorizationError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::DeleteAggregationAuthorizationErrorKind::InvalidParameterValueException(inner) => Error::InvalidParameterValueException(inner),
                crate::error::DeleteAggregationAuthorizationErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DeleteConfigRuleError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::DeleteConfigRuleError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::DeleteConfigRuleErrorKind::NoSuchConfigRuleException(inner) => {
                    Error::NoSuchConfigRuleException(inner)
                }
                crate::error::DeleteConfigRuleErrorKind::ResourceInUseException(inner) => {
                    Error::ResourceInUseException(inner)
                }
                crate::error::DeleteConfigRuleErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DeleteConfigurationAggregatorError>>
    for Error
{
    fn from(
        err: smithy_http::result::SdkError<crate::error::DeleteConfigurationAggregatorError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::DeleteConfigurationAggregatorErrorKind::NoSuchConfigurationAggregatorException(inner) => Error::NoSuchConfigurationAggregatorException(inner),
                crate::error::DeleteConfigurationAggregatorErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DeleteConfigurationRecorderError>> for Error {
    fn from(
        err: smithy_http::result::SdkError<crate::error::DeleteConfigurationRecorderError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::DeleteConfigurationRecorderErrorKind::NoSuchConfigurationRecorderException(inner) => Error::NoSuchConfigurationRecorderException(inner),
                crate::error::DeleteConfigurationRecorderErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DeleteConformancePackError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::DeleteConformancePackError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::DeleteConformancePackErrorKind::NoSuchConformancePackException(
                    inner,
                ) => Error::NoSuchConformancePackException(inner),
                crate::error::DeleteConformancePackErrorKind::ResourceInUseException(inner) => {
                    Error::ResourceInUseException(inner)
                }
                crate::error::DeleteConformancePackErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DeleteDeliveryChannelError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::DeleteDeliveryChannelError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::DeleteDeliveryChannelErrorKind::LastDeliveryChannelDeleteFailedException(inner) => Error::LastDeliveryChannelDeleteFailedException(inner),
                crate::error::DeleteDeliveryChannelErrorKind::NoSuchDeliveryChannelException(inner) => Error::NoSuchDeliveryChannelException(inner),
                crate::error::DeleteDeliveryChannelErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DeleteEvaluationResultsError>> for Error {
    fn from(
        err: smithy_http::result::SdkError<crate::error::DeleteEvaluationResultsError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::DeleteEvaluationResultsErrorKind::NoSuchConfigRuleException(
                    inner,
                ) => Error::NoSuchConfigRuleException(inner),
                crate::error::DeleteEvaluationResultsErrorKind::ResourceInUseException(inner) => {
                    Error::ResourceInUseException(inner)
                }
                crate::error::DeleteEvaluationResultsErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DeleteOrganizationConfigRuleError>>
    for Error
{
    fn from(
        err: smithy_http::result::SdkError<crate::error::DeleteOrganizationConfigRuleError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::DeleteOrganizationConfigRuleErrorKind::NoSuchOrganizationConfigRuleException(inner) => Error::NoSuchOrganizationConfigRuleException(inner),
                crate::error::DeleteOrganizationConfigRuleErrorKind::OrganizationAccessDeniedException(inner) => Error::OrganizationAccessDeniedException(inner),
                crate::error::DeleteOrganizationConfigRuleErrorKind::ResourceInUseException(inner) => Error::ResourceInUseException(inner),
                crate::error::DeleteOrganizationConfigRuleErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DeleteOrganizationConformancePackError>>
    for Error
{
    fn from(
        err: smithy_http::result::SdkError<crate::error::DeleteOrganizationConformancePackError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::DeleteOrganizationConformancePackErrorKind::NoSuchOrganizationConformancePackException(inner) => Error::NoSuchOrganizationConformancePackException(inner),
                crate::error::DeleteOrganizationConformancePackErrorKind::OrganizationAccessDeniedException(inner) => Error::OrganizationAccessDeniedException(inner),
                crate::error::DeleteOrganizationConformancePackErrorKind::ResourceInUseException(inner) => Error::ResourceInUseException(inner),
                crate::error::DeleteOrganizationConformancePackErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DeletePendingAggregationRequestError>>
    for Error
{
    fn from(
        err: smithy_http::result::SdkError<crate::error::DeletePendingAggregationRequestError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::DeletePendingAggregationRequestErrorKind::InvalidParameterValueException(inner) => Error::InvalidParameterValueException(inner),
                crate::error::DeletePendingAggregationRequestErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DeleteRemediationConfigurationError>>
    for Error
{
    fn from(
        err: smithy_http::result::SdkError<crate::error::DeleteRemediationConfigurationError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::DeleteRemediationConfigurationErrorKind::InsufficientPermissionsException(inner) => Error::InsufficientPermissionsException(inner),
                crate::error::DeleteRemediationConfigurationErrorKind::InvalidParameterValueException(inner) => Error::InvalidParameterValueException(inner),
                crate::error::DeleteRemediationConfigurationErrorKind::NoSuchRemediationConfigurationException(inner) => Error::NoSuchRemediationConfigurationException(inner),
                crate::error::DeleteRemediationConfigurationErrorKind::RemediationInProgressException(inner) => Error::RemediationInProgressException(inner),
                crate::error::DeleteRemediationConfigurationErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DeleteRemediationExceptionsError>> for Error {
    fn from(
        err: smithy_http::result::SdkError<crate::error::DeleteRemediationExceptionsError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::DeleteRemediationExceptionsErrorKind::NoSuchRemediationExceptionException(inner) => Error::NoSuchRemediationExceptionException(inner),
                crate::error::DeleteRemediationExceptionsErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DeleteResourceConfigError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::DeleteResourceConfigError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::DeleteResourceConfigErrorKind::NoRunningConfigurationRecorderException(inner) => Error::NoRunningConfigurationRecorderException(inner),
                crate::error::DeleteResourceConfigErrorKind::ValidationException(inner) => Error::ValidationException(inner),
                crate::error::DeleteResourceConfigErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DeleteRetentionConfigurationError>>
    for Error
{
    fn from(
        err: smithy_http::result::SdkError<crate::error::DeleteRetentionConfigurationError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::DeleteRetentionConfigurationErrorKind::InvalidParameterValueException(inner) => Error::InvalidParameterValueException(inner),
                crate::error::DeleteRetentionConfigurationErrorKind::NoSuchRetentionConfigurationException(inner) => Error::NoSuchRetentionConfigurationException(inner),
                crate::error::DeleteRetentionConfigurationErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DeleteStoredQueryError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::DeleteStoredQueryError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::DeleteStoredQueryErrorKind::ResourceNotFoundException(inner) => {
                    Error::ResourceNotFoundException(inner)
                }
                crate::error::DeleteStoredQueryErrorKind::ValidationException(inner) => {
                    Error::ValidationException(inner)
                }
                crate::error::DeleteStoredQueryErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DeliverConfigSnapshotError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::DeliverConfigSnapshotError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::DeliverConfigSnapshotErrorKind::NoAvailableConfigurationRecorderException(inner) => Error::NoAvailableConfigurationRecorderException(inner),
                crate::error::DeliverConfigSnapshotErrorKind::NoRunningConfigurationRecorderException(inner) => Error::NoRunningConfigurationRecorderException(inner),
                crate::error::DeliverConfigSnapshotErrorKind::NoSuchDeliveryChannelException(inner) => Error::NoSuchDeliveryChannelException(inner),
                crate::error::DeliverConfigSnapshotErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl
    From<smithy_http::result::SdkError<crate::error::DescribeAggregateComplianceByConfigRulesError>>
    for Error
{
    fn from(
        err: smithy_http::result::SdkError<
            crate::error::DescribeAggregateComplianceByConfigRulesError,
        >,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::DescribeAggregateComplianceByConfigRulesErrorKind::InvalidLimitException(inner) => Error::InvalidLimitException(inner),
                crate::error::DescribeAggregateComplianceByConfigRulesErrorKind::InvalidNextTokenException(inner) => Error::InvalidNextTokenException(inner),
                crate::error::DescribeAggregateComplianceByConfigRulesErrorKind::NoSuchConfigurationAggregatorException(inner) => Error::NoSuchConfigurationAggregatorException(inner),
                crate::error::DescribeAggregateComplianceByConfigRulesErrorKind::ValidationException(inner) => Error::ValidationException(inner),
                crate::error::DescribeAggregateComplianceByConfigRulesErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl
    From<
        smithy_http::result::SdkError<
            crate::error::DescribeAggregateComplianceByConformancePacksError,
        >,
    > for Error
{
    fn from(
        err: smithy_http::result::SdkError<
            crate::error::DescribeAggregateComplianceByConformancePacksError,
        >,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::DescribeAggregateComplianceByConformancePacksErrorKind::InvalidLimitException(inner) => Error::InvalidLimitException(inner),
                crate::error::DescribeAggregateComplianceByConformancePacksErrorKind::InvalidNextTokenException(inner) => Error::InvalidNextTokenException(inner),
                crate::error::DescribeAggregateComplianceByConformancePacksErrorKind::NoSuchConfigurationAggregatorException(inner) => Error::NoSuchConfigurationAggregatorException(inner),
                crate::error::DescribeAggregateComplianceByConformancePacksErrorKind::ValidationException(inner) => Error::ValidationException(inner),
                crate::error::DescribeAggregateComplianceByConformancePacksErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DescribeAggregationAuthorizationsError>>
    for Error
{
    fn from(
        err: smithy_http::result::SdkError<crate::error::DescribeAggregationAuthorizationsError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::DescribeAggregationAuthorizationsErrorKind::InvalidLimitException(inner) => Error::InvalidLimitException(inner),
                crate::error::DescribeAggregationAuthorizationsErrorKind::InvalidNextTokenException(inner) => Error::InvalidNextTokenException(inner),
                crate::error::DescribeAggregationAuthorizationsErrorKind::InvalidParameterValueException(inner) => Error::InvalidParameterValueException(inner),
                crate::error::DescribeAggregationAuthorizationsErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DescribeComplianceByConfigRuleError>>
    for Error
{
    fn from(
        err: smithy_http::result::SdkError<crate::error::DescribeComplianceByConfigRuleError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::DescribeComplianceByConfigRuleErrorKind::InvalidNextTokenException(inner) => Error::InvalidNextTokenException(inner),
                crate::error::DescribeComplianceByConfigRuleErrorKind::InvalidParameterValueException(inner) => Error::InvalidParameterValueException(inner),
                crate::error::DescribeComplianceByConfigRuleErrorKind::NoSuchConfigRuleException(inner) => Error::NoSuchConfigRuleException(inner),
                crate::error::DescribeComplianceByConfigRuleErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DescribeComplianceByResourceError>>
    for Error
{
    fn from(
        err: smithy_http::result::SdkError<crate::error::DescribeComplianceByResourceError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::DescribeComplianceByResourceErrorKind::InvalidNextTokenException(inner) => Error::InvalidNextTokenException(inner),
                crate::error::DescribeComplianceByResourceErrorKind::InvalidParameterValueException(inner) => Error::InvalidParameterValueException(inner),
                crate::error::DescribeComplianceByResourceErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DescribeConfigRuleEvaluationStatusError>>
    for Error
{
    fn from(
        err: smithy_http::result::SdkError<crate::error::DescribeConfigRuleEvaluationStatusError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::DescribeConfigRuleEvaluationStatusErrorKind::InvalidNextTokenException(inner) => Error::InvalidNextTokenException(inner),
                crate::error::DescribeConfigRuleEvaluationStatusErrorKind::InvalidParameterValueException(inner) => Error::InvalidParameterValueException(inner),
                crate::error::DescribeConfigRuleEvaluationStatusErrorKind::NoSuchConfigRuleException(inner) => Error::NoSuchConfigRuleException(inner),
                crate::error::DescribeConfigRuleEvaluationStatusErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DescribeConfigRulesError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::DescribeConfigRulesError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::DescribeConfigRulesErrorKind::InvalidNextTokenException(inner) => {
                    Error::InvalidNextTokenException(inner)
                }
                crate::error::DescribeConfigRulesErrorKind::NoSuchConfigRuleException(inner) => {
                    Error::NoSuchConfigRuleException(inner)
                }
                crate::error::DescribeConfigRulesErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DescribeConfigurationAggregatorsError>>
    for Error
{
    fn from(
        err: smithy_http::result::SdkError<crate::error::DescribeConfigurationAggregatorsError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::DescribeConfigurationAggregatorsErrorKind::InvalidLimitException(inner) => Error::InvalidLimitException(inner),
                crate::error::DescribeConfigurationAggregatorsErrorKind::InvalidNextTokenException(inner) => Error::InvalidNextTokenException(inner),
                crate::error::DescribeConfigurationAggregatorsErrorKind::InvalidParameterValueException(inner) => Error::InvalidParameterValueException(inner),
                crate::error::DescribeConfigurationAggregatorsErrorKind::NoSuchConfigurationAggregatorException(inner) => Error::NoSuchConfigurationAggregatorException(inner),
                crate::error::DescribeConfigurationAggregatorsErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl
    From<
        smithy_http::result::SdkError<
            crate::error::DescribeConfigurationAggregatorSourcesStatusError,
        >,
    > for Error
{
    fn from(
        err: smithy_http::result::SdkError<
            crate::error::DescribeConfigurationAggregatorSourcesStatusError,
        >,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::DescribeConfigurationAggregatorSourcesStatusErrorKind::InvalidLimitException(inner) => Error::InvalidLimitException(inner),
                crate::error::DescribeConfigurationAggregatorSourcesStatusErrorKind::InvalidNextTokenException(inner) => Error::InvalidNextTokenException(inner),
                crate::error::DescribeConfigurationAggregatorSourcesStatusErrorKind::InvalidParameterValueException(inner) => Error::InvalidParameterValueException(inner),
                crate::error::DescribeConfigurationAggregatorSourcesStatusErrorKind::NoSuchConfigurationAggregatorException(inner) => Error::NoSuchConfigurationAggregatorException(inner),
                crate::error::DescribeConfigurationAggregatorSourcesStatusErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DescribeConfigurationRecordersError>>
    for Error
{
    fn from(
        err: smithy_http::result::SdkError<crate::error::DescribeConfigurationRecordersError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::DescribeConfigurationRecordersErrorKind::NoSuchConfigurationRecorderException(inner) => Error::NoSuchConfigurationRecorderException(inner),
                crate::error::DescribeConfigurationRecordersErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DescribeConfigurationRecorderStatusError>>
    for Error
{
    fn from(
        err: smithy_http::result::SdkError<crate::error::DescribeConfigurationRecorderStatusError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::DescribeConfigurationRecorderStatusErrorKind::NoSuchConfigurationRecorderException(inner) => Error::NoSuchConfigurationRecorderException(inner),
                crate::error::DescribeConfigurationRecorderStatusErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DescribeConformancePackComplianceError>>
    for Error
{
    fn from(
        err: smithy_http::result::SdkError<crate::error::DescribeConformancePackComplianceError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::DescribeConformancePackComplianceErrorKind::InvalidLimitException(inner) => Error::InvalidLimitException(inner),
                crate::error::DescribeConformancePackComplianceErrorKind::InvalidNextTokenException(inner) => Error::InvalidNextTokenException(inner),
                crate::error::DescribeConformancePackComplianceErrorKind::InvalidParameterValueException(inner) => Error::InvalidParameterValueException(inner),
                crate::error::DescribeConformancePackComplianceErrorKind::NoSuchConfigRuleInConformancePackException(inner) => Error::NoSuchConfigRuleInConformancePackException(inner),
                crate::error::DescribeConformancePackComplianceErrorKind::NoSuchConformancePackException(inner) => Error::NoSuchConformancePackException(inner),
                crate::error::DescribeConformancePackComplianceErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DescribeConformancePacksError>> for Error {
    fn from(
        err: smithy_http::result::SdkError<crate::error::DescribeConformancePacksError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::DescribeConformancePacksErrorKind::InvalidLimitException(inner) => {
                    Error::InvalidLimitException(inner)
                }
                crate::error::DescribeConformancePacksErrorKind::InvalidNextTokenException(
                    inner,
                ) => Error::InvalidNextTokenException(inner),
                crate::error::DescribeConformancePacksErrorKind::InvalidParameterValueException(
                    inner,
                ) => Error::InvalidParameterValueException(inner),
                crate::error::DescribeConformancePacksErrorKind::NoSuchConformancePackException(
                    inner,
                ) => Error::NoSuchConformancePackException(inner),
                crate::error::DescribeConformancePacksErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DescribeConformancePackStatusError>>
    for Error
{
    fn from(
        err: smithy_http::result::SdkError<crate::error::DescribeConformancePackStatusError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::DescribeConformancePackStatusErrorKind::InvalidLimitException(inner) => Error::InvalidLimitException(inner),
                crate::error::DescribeConformancePackStatusErrorKind::InvalidNextTokenException(inner) => Error::InvalidNextTokenException(inner),
                crate::error::DescribeConformancePackStatusErrorKind::InvalidParameterValueException(inner) => Error::InvalidParameterValueException(inner),
                crate::error::DescribeConformancePackStatusErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DescribeDeliveryChannelsError>> for Error {
    fn from(
        err: smithy_http::result::SdkError<crate::error::DescribeDeliveryChannelsError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::DescribeDeliveryChannelsErrorKind::NoSuchDeliveryChannelException(
                    inner,
                ) => Error::NoSuchDeliveryChannelException(inner),
                crate::error::DescribeDeliveryChannelsErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DescribeDeliveryChannelStatusError>>
    for Error
{
    fn from(
        err: smithy_http::result::SdkError<crate::error::DescribeDeliveryChannelStatusError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::DescribeDeliveryChannelStatusErrorKind::NoSuchDeliveryChannelException(inner) => Error::NoSuchDeliveryChannelException(inner),
                crate::error::DescribeDeliveryChannelStatusErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DescribeOrganizationConfigRulesError>>
    for Error
{
    fn from(
        err: smithy_http::result::SdkError<crate::error::DescribeOrganizationConfigRulesError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::DescribeOrganizationConfigRulesErrorKind::InvalidLimitException(inner) => Error::InvalidLimitException(inner),
                crate::error::DescribeOrganizationConfigRulesErrorKind::InvalidNextTokenException(inner) => Error::InvalidNextTokenException(inner),
                crate::error::DescribeOrganizationConfigRulesErrorKind::NoSuchOrganizationConfigRuleException(inner) => Error::NoSuchOrganizationConfigRuleException(inner),
                crate::error::DescribeOrganizationConfigRulesErrorKind::OrganizationAccessDeniedException(inner) => Error::OrganizationAccessDeniedException(inner),
                crate::error::DescribeOrganizationConfigRulesErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DescribeOrganizationConfigRuleStatusesError>>
    for Error
{
    fn from(
        err: smithy_http::result::SdkError<
            crate::error::DescribeOrganizationConfigRuleStatusesError,
        >,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::DescribeOrganizationConfigRuleStatusesErrorKind::InvalidLimitException(inner) => Error::InvalidLimitException(inner),
                crate::error::DescribeOrganizationConfigRuleStatusesErrorKind::InvalidNextTokenException(inner) => Error::InvalidNextTokenException(inner),
                crate::error::DescribeOrganizationConfigRuleStatusesErrorKind::NoSuchOrganizationConfigRuleException(inner) => Error::NoSuchOrganizationConfigRuleException(inner),
                crate::error::DescribeOrganizationConfigRuleStatusesErrorKind::OrganizationAccessDeniedException(inner) => Error::OrganizationAccessDeniedException(inner),
                crate::error::DescribeOrganizationConfigRuleStatusesErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DescribeOrganizationConformancePacksError>>
    for Error
{
    fn from(
        err: smithy_http::result::SdkError<crate::error::DescribeOrganizationConformancePacksError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::DescribeOrganizationConformancePacksErrorKind::InvalidLimitException(inner) => Error::InvalidLimitException(inner),
                crate::error::DescribeOrganizationConformancePacksErrorKind::InvalidNextTokenException(inner) => Error::InvalidNextTokenException(inner),
                crate::error::DescribeOrganizationConformancePacksErrorKind::NoSuchOrganizationConformancePackException(inner) => Error::NoSuchOrganizationConformancePackException(inner),
                crate::error::DescribeOrganizationConformancePacksErrorKind::OrganizationAccessDeniedException(inner) => Error::OrganizationAccessDeniedException(inner),
                crate::error::DescribeOrganizationConformancePacksErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl
    From<
        smithy_http::result::SdkError<
            crate::error::DescribeOrganizationConformancePackStatusesError,
        >,
    > for Error
{
    fn from(
        err: smithy_http::result::SdkError<
            crate::error::DescribeOrganizationConformancePackStatusesError,
        >,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::DescribeOrganizationConformancePackStatusesErrorKind::InvalidLimitException(inner) => Error::InvalidLimitException(inner),
                crate::error::DescribeOrganizationConformancePackStatusesErrorKind::InvalidNextTokenException(inner) => Error::InvalidNextTokenException(inner),
                crate::error::DescribeOrganizationConformancePackStatusesErrorKind::NoSuchOrganizationConformancePackException(inner) => Error::NoSuchOrganizationConformancePackException(inner),
                crate::error::DescribeOrganizationConformancePackStatusesErrorKind::OrganizationAccessDeniedException(inner) => Error::OrganizationAccessDeniedException(inner),
                crate::error::DescribeOrganizationConformancePackStatusesErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DescribePendingAggregationRequestsError>>
    for Error
{
    fn from(
        err: smithy_http::result::SdkError<crate::error::DescribePendingAggregationRequestsError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::DescribePendingAggregationRequestsErrorKind::InvalidLimitException(inner) => Error::InvalidLimitException(inner),
                crate::error::DescribePendingAggregationRequestsErrorKind::InvalidNextTokenException(inner) => Error::InvalidNextTokenException(inner),
                crate::error::DescribePendingAggregationRequestsErrorKind::InvalidParameterValueException(inner) => Error::InvalidParameterValueException(inner),
                crate::error::DescribePendingAggregationRequestsErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DescribeRemediationConfigurationsError>>
    for Error
{
    fn from(
        err: smithy_http::result::SdkError<crate::error::DescribeRemediationConfigurationsError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::DescribeRemediationConfigurationsErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DescribeRemediationExceptionsError>>
    for Error
{
    fn from(
        err: smithy_http::result::SdkError<crate::error::DescribeRemediationExceptionsError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::DescribeRemediationExceptionsErrorKind::InvalidNextTokenException(inner) => Error::InvalidNextTokenException(inner),
                crate::error::DescribeRemediationExceptionsErrorKind::InvalidParameterValueException(inner) => Error::InvalidParameterValueException(inner),
                crate::error::DescribeRemediationExceptionsErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DescribeRemediationExecutionStatusError>>
    for Error
{
    fn from(
        err: smithy_http::result::SdkError<crate::error::DescribeRemediationExecutionStatusError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::DescribeRemediationExecutionStatusErrorKind::InvalidNextTokenException(inner) => Error::InvalidNextTokenException(inner),
                crate::error::DescribeRemediationExecutionStatusErrorKind::InvalidParameterValueException(inner) => Error::InvalidParameterValueException(inner),
                crate::error::DescribeRemediationExecutionStatusErrorKind::NoSuchRemediationConfigurationException(inner) => Error::NoSuchRemediationConfigurationException(inner),
                crate::error::DescribeRemediationExecutionStatusErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DescribeRetentionConfigurationsError>>
    for Error
{
    fn from(
        err: smithy_http::result::SdkError<crate::error::DescribeRetentionConfigurationsError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::DescribeRetentionConfigurationsErrorKind::InvalidNextTokenException(inner) => Error::InvalidNextTokenException(inner),
                crate::error::DescribeRetentionConfigurationsErrorKind::InvalidParameterValueException(inner) => Error::InvalidParameterValueException(inner),
                crate::error::DescribeRetentionConfigurationsErrorKind::NoSuchRetentionConfigurationException(inner) => Error::NoSuchRetentionConfigurationException(inner),
                crate::error::DescribeRetentionConfigurationsErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl
    From<
        smithy_http::result::SdkError<crate::error::GetAggregateComplianceDetailsByConfigRuleError>,
    > for Error
{
    fn from(
        err: smithy_http::result::SdkError<
            crate::error::GetAggregateComplianceDetailsByConfigRuleError,
        >,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::GetAggregateComplianceDetailsByConfigRuleErrorKind::InvalidLimitException(inner) => Error::InvalidLimitException(inner),
                crate::error::GetAggregateComplianceDetailsByConfigRuleErrorKind::InvalidNextTokenException(inner) => Error::InvalidNextTokenException(inner),
                crate::error::GetAggregateComplianceDetailsByConfigRuleErrorKind::NoSuchConfigurationAggregatorException(inner) => Error::NoSuchConfigurationAggregatorException(inner),
                crate::error::GetAggregateComplianceDetailsByConfigRuleErrorKind::ValidationException(inner) => Error::ValidationException(inner),
                crate::error::GetAggregateComplianceDetailsByConfigRuleErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::GetAggregateConfigRuleComplianceSummaryError>>
    for Error
{
    fn from(
        err: smithy_http::result::SdkError<
            crate::error::GetAggregateConfigRuleComplianceSummaryError,
        >,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::GetAggregateConfigRuleComplianceSummaryErrorKind::InvalidLimitException(inner) => Error::InvalidLimitException(inner),
                crate::error::GetAggregateConfigRuleComplianceSummaryErrorKind::InvalidNextTokenException(inner) => Error::InvalidNextTokenException(inner),
                crate::error::GetAggregateConfigRuleComplianceSummaryErrorKind::NoSuchConfigurationAggregatorException(inner) => Error::NoSuchConfigurationAggregatorException(inner),
                crate::error::GetAggregateConfigRuleComplianceSummaryErrorKind::ValidationException(inner) => Error::ValidationException(inner),
                crate::error::GetAggregateConfigRuleComplianceSummaryErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl
    From<
        smithy_http::result::SdkError<
            crate::error::GetAggregateConformancePackComplianceSummaryError,
        >,
    > for Error
{
    fn from(
        err: smithy_http::result::SdkError<
            crate::error::GetAggregateConformancePackComplianceSummaryError,
        >,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::GetAggregateConformancePackComplianceSummaryErrorKind::InvalidLimitException(inner) => Error::InvalidLimitException(inner),
                crate::error::GetAggregateConformancePackComplianceSummaryErrorKind::InvalidNextTokenException(inner) => Error::InvalidNextTokenException(inner),
                crate::error::GetAggregateConformancePackComplianceSummaryErrorKind::NoSuchConfigurationAggregatorException(inner) => Error::NoSuchConfigurationAggregatorException(inner),
                crate::error::GetAggregateConformancePackComplianceSummaryErrorKind::ValidationException(inner) => Error::ValidationException(inner),
                crate::error::GetAggregateConformancePackComplianceSummaryErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::GetAggregateDiscoveredResourceCountsError>>
    for Error
{
    fn from(
        err: smithy_http::result::SdkError<crate::error::GetAggregateDiscoveredResourceCountsError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::GetAggregateDiscoveredResourceCountsErrorKind::InvalidLimitException(inner) => Error::InvalidLimitException(inner),
                crate::error::GetAggregateDiscoveredResourceCountsErrorKind::InvalidNextTokenException(inner) => Error::InvalidNextTokenException(inner),
                crate::error::GetAggregateDiscoveredResourceCountsErrorKind::NoSuchConfigurationAggregatorException(inner) => Error::NoSuchConfigurationAggregatorException(inner),
                crate::error::GetAggregateDiscoveredResourceCountsErrorKind::ValidationException(inner) => Error::ValidationException(inner),
                crate::error::GetAggregateDiscoveredResourceCountsErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::GetAggregateResourceConfigError>> for Error {
    fn from(
        err: smithy_http::result::SdkError<crate::error::GetAggregateResourceConfigError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::GetAggregateResourceConfigErrorKind::NoSuchConfigurationAggregatorException(inner) => Error::NoSuchConfigurationAggregatorException(inner),
                crate::error::GetAggregateResourceConfigErrorKind::OversizedConfigurationItemException(inner) => Error::OversizedConfigurationItemException(inner),
                crate::error::GetAggregateResourceConfigErrorKind::ResourceNotDiscoveredException(inner) => Error::ResourceNotDiscoveredException(inner),
                crate::error::GetAggregateResourceConfigErrorKind::ValidationException(inner) => Error::ValidationException(inner),
                crate::error::GetAggregateResourceConfigErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::GetComplianceDetailsByConfigRuleError>>
    for Error
{
    fn from(
        err: smithy_http::result::SdkError<crate::error::GetComplianceDetailsByConfigRuleError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::GetComplianceDetailsByConfigRuleErrorKind::InvalidNextTokenException(inner) => Error::InvalidNextTokenException(inner),
                crate::error::GetComplianceDetailsByConfigRuleErrorKind::InvalidParameterValueException(inner) => Error::InvalidParameterValueException(inner),
                crate::error::GetComplianceDetailsByConfigRuleErrorKind::NoSuchConfigRuleException(inner) => Error::NoSuchConfigRuleException(inner),
                crate::error::GetComplianceDetailsByConfigRuleErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::GetComplianceDetailsByResourceError>>
    for Error
{
    fn from(
        err: smithy_http::result::SdkError<crate::error::GetComplianceDetailsByResourceError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::GetComplianceDetailsByResourceErrorKind::InvalidParameterValueException(inner) => Error::InvalidParameterValueException(inner),
                crate::error::GetComplianceDetailsByResourceErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::GetComplianceSummaryByConfigRuleError>>
    for Error
{
    fn from(
        err: smithy_http::result::SdkError<crate::error::GetComplianceSummaryByConfigRuleError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::GetComplianceSummaryByConfigRuleErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::GetComplianceSummaryByResourceTypeError>>
    for Error
{
    fn from(
        err: smithy_http::result::SdkError<crate::error::GetComplianceSummaryByResourceTypeError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::GetComplianceSummaryByResourceTypeErrorKind::InvalidParameterValueException(inner) => Error::InvalidParameterValueException(inner),
                crate::error::GetComplianceSummaryByResourceTypeErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::GetConformancePackComplianceDetailsError>>
    for Error
{
    fn from(
        err: smithy_http::result::SdkError<crate::error::GetConformancePackComplianceDetailsError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::GetConformancePackComplianceDetailsErrorKind::InvalidLimitException(inner) => Error::InvalidLimitException(inner),
                crate::error::GetConformancePackComplianceDetailsErrorKind::InvalidNextTokenException(inner) => Error::InvalidNextTokenException(inner),
                crate::error::GetConformancePackComplianceDetailsErrorKind::InvalidParameterValueException(inner) => Error::InvalidParameterValueException(inner),
                crate::error::GetConformancePackComplianceDetailsErrorKind::NoSuchConfigRuleInConformancePackException(inner) => Error::NoSuchConfigRuleInConformancePackException(inner),
                crate::error::GetConformancePackComplianceDetailsErrorKind::NoSuchConformancePackException(inner) => Error::NoSuchConformancePackException(inner),
                crate::error::GetConformancePackComplianceDetailsErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::GetConformancePackComplianceSummaryError>>
    for Error
{
    fn from(
        err: smithy_http::result::SdkError<crate::error::GetConformancePackComplianceSummaryError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::GetConformancePackComplianceSummaryErrorKind::InvalidLimitException(inner) => Error::InvalidLimitException(inner),
                crate::error::GetConformancePackComplianceSummaryErrorKind::InvalidNextTokenException(inner) => Error::InvalidNextTokenException(inner),
                crate::error::GetConformancePackComplianceSummaryErrorKind::NoSuchConformancePackException(inner) => Error::NoSuchConformancePackException(inner),
                crate::error::GetConformancePackComplianceSummaryErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::GetDiscoveredResourceCountsError>> for Error {
    fn from(
        err: smithy_http::result::SdkError<crate::error::GetDiscoveredResourceCountsError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::GetDiscoveredResourceCountsErrorKind::InvalidLimitException(
                    inner,
                ) => Error::InvalidLimitException(inner),
                crate::error::GetDiscoveredResourceCountsErrorKind::InvalidNextTokenException(
                    inner,
                ) => Error::InvalidNextTokenException(inner),
                crate::error::GetDiscoveredResourceCountsErrorKind::ValidationException(inner) => {
                    Error::ValidationException(inner)
                }
                crate::error::GetDiscoveredResourceCountsErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::GetOrganizationConfigRuleDetailedStatusError>>
    for Error
{
    fn from(
        err: smithy_http::result::SdkError<
            crate::error::GetOrganizationConfigRuleDetailedStatusError,
        >,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::GetOrganizationConfigRuleDetailedStatusErrorKind::InvalidLimitException(inner) => Error::InvalidLimitException(inner),
                crate::error::GetOrganizationConfigRuleDetailedStatusErrorKind::InvalidNextTokenException(inner) => Error::InvalidNextTokenException(inner),
                crate::error::GetOrganizationConfigRuleDetailedStatusErrorKind::NoSuchOrganizationConfigRuleException(inner) => Error::NoSuchOrganizationConfigRuleException(inner),
                crate::error::GetOrganizationConfigRuleDetailedStatusErrorKind::OrganizationAccessDeniedException(inner) => Error::OrganizationAccessDeniedException(inner),
                crate::error::GetOrganizationConfigRuleDetailedStatusErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl
    From<
        smithy_http::result::SdkError<
            crate::error::GetOrganizationConformancePackDetailedStatusError,
        >,
    > for Error
{
    fn from(
        err: smithy_http::result::SdkError<
            crate::error::GetOrganizationConformancePackDetailedStatusError,
        >,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::GetOrganizationConformancePackDetailedStatusErrorKind::InvalidLimitException(inner) => Error::InvalidLimitException(inner),
                crate::error::GetOrganizationConformancePackDetailedStatusErrorKind::InvalidNextTokenException(inner) => Error::InvalidNextTokenException(inner),
                crate::error::GetOrganizationConformancePackDetailedStatusErrorKind::NoSuchOrganizationConformancePackException(inner) => Error::NoSuchOrganizationConformancePackException(inner),
                crate::error::GetOrganizationConformancePackDetailedStatusErrorKind::OrganizationAccessDeniedException(inner) => Error::OrganizationAccessDeniedException(inner),
                crate::error::GetOrganizationConformancePackDetailedStatusErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::GetResourceConfigHistoryError>> for Error {
    fn from(
        err: smithy_http::result::SdkError<crate::error::GetResourceConfigHistoryError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::GetResourceConfigHistoryErrorKind::InvalidLimitException(inner) => Error::InvalidLimitException(inner),
                crate::error::GetResourceConfigHistoryErrorKind::InvalidNextTokenException(inner) => Error::InvalidNextTokenException(inner),
                crate::error::GetResourceConfigHistoryErrorKind::InvalidTimeRangeException(inner) => Error::InvalidTimeRangeException(inner),
                crate::error::GetResourceConfigHistoryErrorKind::NoAvailableConfigurationRecorderException(inner) => Error::NoAvailableConfigurationRecorderException(inner),
                crate::error::GetResourceConfigHistoryErrorKind::ResourceNotDiscoveredException(inner) => Error::ResourceNotDiscoveredException(inner),
                crate::error::GetResourceConfigHistoryErrorKind::ValidationException(inner) => Error::ValidationException(inner),
                crate::error::GetResourceConfigHistoryErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::GetStoredQueryError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::GetStoredQueryError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::GetStoredQueryErrorKind::ResourceNotFoundException(inner) => {
                    Error::ResourceNotFoundException(inner)
                }
                crate::error::GetStoredQueryErrorKind::ValidationException(inner) => {
                    Error::ValidationException(inner)
                }
                crate::error::GetStoredQueryErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::ListAggregateDiscoveredResourcesError>>
    for Error
{
    fn from(
        err: smithy_http::result::SdkError<crate::error::ListAggregateDiscoveredResourcesError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::ListAggregateDiscoveredResourcesErrorKind::InvalidLimitException(inner) => Error::InvalidLimitException(inner),
                crate::error::ListAggregateDiscoveredResourcesErrorKind::InvalidNextTokenException(inner) => Error::InvalidNextTokenException(inner),
                crate::error::ListAggregateDiscoveredResourcesErrorKind::NoSuchConfigurationAggregatorException(inner) => Error::NoSuchConfigurationAggregatorException(inner),
                crate::error::ListAggregateDiscoveredResourcesErrorKind::ValidationException(inner) => Error::ValidationException(inner),
                crate::error::ListAggregateDiscoveredResourcesErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::ListDiscoveredResourcesError>> for Error {
    fn from(
        err: smithy_http::result::SdkError<crate::error::ListDiscoveredResourcesError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::ListDiscoveredResourcesErrorKind::InvalidLimitException(inner) => Error::InvalidLimitException(inner),
                crate::error::ListDiscoveredResourcesErrorKind::InvalidNextTokenException(inner) => Error::InvalidNextTokenException(inner),
                crate::error::ListDiscoveredResourcesErrorKind::NoAvailableConfigurationRecorderException(inner) => Error::NoAvailableConfigurationRecorderException(inner),
                crate::error::ListDiscoveredResourcesErrorKind::ValidationException(inner) => Error::ValidationException(inner),
                crate::error::ListDiscoveredResourcesErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::ListStoredQueriesError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::ListStoredQueriesError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::ListStoredQueriesErrorKind::InvalidNextTokenException(inner) => {
                    Error::InvalidNextTokenException(inner)
                }
                crate::error::ListStoredQueriesErrorKind::ValidationException(inner) => {
                    Error::ValidationException(inner)
                }
                crate::error::ListStoredQueriesErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::ListTagsForResourceError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::ListTagsForResourceError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::ListTagsForResourceErrorKind::InvalidLimitException(inner) => {
                    Error::InvalidLimitException(inner)
                }
                crate::error::ListTagsForResourceErrorKind::InvalidNextTokenException(inner) => {
                    Error::InvalidNextTokenException(inner)
                }
                crate::error::ListTagsForResourceErrorKind::ResourceNotFoundException(inner) => {
                    Error::ResourceNotFoundException(inner)
                }
                crate::error::ListTagsForResourceErrorKind::ValidationException(inner) => {
                    Error::ValidationException(inner)
                }
                crate::error::ListTagsForResourceErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::PutAggregationAuthorizationError>> for Error {
    fn from(
        err: smithy_http::result::SdkError<crate::error::PutAggregationAuthorizationError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::PutAggregationAuthorizationErrorKind::InvalidParameterValueException(inner) => Error::InvalidParameterValueException(inner),
                crate::error::PutAggregationAuthorizationErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::PutConfigRuleError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::PutConfigRuleError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::PutConfigRuleErrorKind::InsufficientPermissionsException(inner) => {
                    Error::InsufficientPermissionsException(inner)
                }
                crate::error::PutConfigRuleErrorKind::InvalidParameterValueException(inner) => {
                    Error::InvalidParameterValueException(inner)
                }
                crate::error::PutConfigRuleErrorKind::MaxNumberOfConfigRulesExceededException(
                    inner,
                ) => Error::MaxNumberOfConfigRulesExceededException(inner),
                crate::error::PutConfigRuleErrorKind::NoAvailableConfigurationRecorderException(
                    inner,
                ) => Error::NoAvailableConfigurationRecorderException(inner),
                crate::error::PutConfigRuleErrorKind::ResourceInUseException(inner) => {
                    Error::ResourceInUseException(inner)
                }
                crate::error::PutConfigRuleErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::PutConfigurationAggregatorError>> for Error {
    fn from(
        err: smithy_http::result::SdkError<crate::error::PutConfigurationAggregatorError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::PutConfigurationAggregatorErrorKind::InvalidParameterValueException(inner) => Error::InvalidParameterValueException(inner),
                crate::error::PutConfigurationAggregatorErrorKind::InvalidRoleException(inner) => Error::InvalidRoleException(inner),
                crate::error::PutConfigurationAggregatorErrorKind::LimitExceededException(inner) => Error::LimitExceededException(inner),
                crate::error::PutConfigurationAggregatorErrorKind::NoAvailableOrganizationException(inner) => Error::NoAvailableOrganizationException(inner),
                crate::error::PutConfigurationAggregatorErrorKind::OrganizationAccessDeniedException(inner) => Error::OrganizationAccessDeniedException(inner),
                crate::error::PutConfigurationAggregatorErrorKind::OrganizationAllFeaturesNotEnabledException(inner) => Error::OrganizationAllFeaturesNotEnabledException(inner),
                crate::error::PutConfigurationAggregatorErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::PutConfigurationRecorderError>> for Error {
    fn from(
        err: smithy_http::result::SdkError<crate::error::PutConfigurationRecorderError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::PutConfigurationRecorderErrorKind::InvalidConfigurationRecorderNameException(inner) => Error::InvalidConfigurationRecorderNameException(inner),
                crate::error::PutConfigurationRecorderErrorKind::InvalidRecordingGroupException(inner) => Error::InvalidRecordingGroupException(inner),
                crate::error::PutConfigurationRecorderErrorKind::InvalidRoleException(inner) => Error::InvalidRoleException(inner),
                crate::error::PutConfigurationRecorderErrorKind::MaxNumberOfConfigurationRecordersExceededException(inner) => Error::MaxNumberOfConfigurationRecordersExceededException(inner),
                crate::error::PutConfigurationRecorderErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::PutConformancePackError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::PutConformancePackError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::PutConformancePackErrorKind::ConformancePackTemplateValidationException(inner) => Error::ConformancePackTemplateValidationException(inner),
                crate::error::PutConformancePackErrorKind::InsufficientPermissionsException(inner) => Error::InsufficientPermissionsException(inner),
                crate::error::PutConformancePackErrorKind::InvalidParameterValueException(inner) => Error::InvalidParameterValueException(inner),
                crate::error::PutConformancePackErrorKind::MaxNumberOfConformancePacksExceededException(inner) => Error::MaxNumberOfConformancePacksExceededException(inner),
                crate::error::PutConformancePackErrorKind::ResourceInUseException(inner) => Error::ResourceInUseException(inner),
                crate::error::PutConformancePackErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::PutDeliveryChannelError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::PutDeliveryChannelError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::PutDeliveryChannelErrorKind::InsufficientDeliveryPolicyException(inner) => Error::InsufficientDeliveryPolicyException(inner),
                crate::error::PutDeliveryChannelErrorKind::InvalidDeliveryChannelNameException(inner) => Error::InvalidDeliveryChannelNameException(inner),
                crate::error::PutDeliveryChannelErrorKind::InvalidS3KeyPrefixException(inner) => Error::InvalidS3KeyPrefixException(inner),
                crate::error::PutDeliveryChannelErrorKind::InvalidS3KmsKeyArnException(inner) => Error::InvalidS3KmsKeyArnException(inner),
                crate::error::PutDeliveryChannelErrorKind::InvalidSnsTopicArnException(inner) => Error::InvalidSnsTopicArnException(inner),
                crate::error::PutDeliveryChannelErrorKind::MaxNumberOfDeliveryChannelsExceededException(inner) => Error::MaxNumberOfDeliveryChannelsExceededException(inner),
                crate::error::PutDeliveryChannelErrorKind::NoAvailableConfigurationRecorderException(inner) => Error::NoAvailableConfigurationRecorderException(inner),
                crate::error::PutDeliveryChannelErrorKind::NoSuchBucketException(inner) => Error::NoSuchBucketException(inner),
                crate::error::PutDeliveryChannelErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::PutEvaluationsError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::PutEvaluationsError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::PutEvaluationsErrorKind::InvalidParameterValueException(inner) => {
                    Error::InvalidParameterValueException(inner)
                }
                crate::error::PutEvaluationsErrorKind::InvalidResultTokenException(inner) => {
                    Error::InvalidResultTokenException(inner)
                }
                crate::error::PutEvaluationsErrorKind::NoSuchConfigRuleException(inner) => {
                    Error::NoSuchConfigRuleException(inner)
                }
                crate::error::PutEvaluationsErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::PutExternalEvaluationError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::PutExternalEvaluationError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::PutExternalEvaluationErrorKind::InvalidParameterValueException(
                    inner,
                ) => Error::InvalidParameterValueException(inner),
                crate::error::PutExternalEvaluationErrorKind::NoSuchConfigRuleException(inner) => {
                    Error::NoSuchConfigRuleException(inner)
                }
                crate::error::PutExternalEvaluationErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::PutOrganizationConfigRuleError>> for Error {
    fn from(
        err: smithy_http::result::SdkError<crate::error::PutOrganizationConfigRuleError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::PutOrganizationConfigRuleErrorKind::InsufficientPermissionsException(inner) => Error::InsufficientPermissionsException(inner),
                crate::error::PutOrganizationConfigRuleErrorKind::InvalidParameterValueException(inner) => Error::InvalidParameterValueException(inner),
                crate::error::PutOrganizationConfigRuleErrorKind::MaxNumberOfOrganizationConfigRulesExceededException(inner) => Error::MaxNumberOfOrganizationConfigRulesExceededException(inner),
                crate::error::PutOrganizationConfigRuleErrorKind::NoAvailableOrganizationException(inner) => Error::NoAvailableOrganizationException(inner),
                crate::error::PutOrganizationConfigRuleErrorKind::OrganizationAccessDeniedException(inner) => Error::OrganizationAccessDeniedException(inner),
                crate::error::PutOrganizationConfigRuleErrorKind::OrganizationAllFeaturesNotEnabledException(inner) => Error::OrganizationAllFeaturesNotEnabledException(inner),
                crate::error::PutOrganizationConfigRuleErrorKind::ResourceInUseException(inner) => Error::ResourceInUseException(inner),
                crate::error::PutOrganizationConfigRuleErrorKind::ValidationException(inner) => Error::ValidationException(inner),
                crate::error::PutOrganizationConfigRuleErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::PutOrganizationConformancePackError>>
    for Error
{
    fn from(
        err: smithy_http::result::SdkError<crate::error::PutOrganizationConformancePackError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::PutOrganizationConformancePackErrorKind::InsufficientPermissionsException(inner) => Error::InsufficientPermissionsException(inner),
                crate::error::PutOrganizationConformancePackErrorKind::MaxNumberOfOrganizationConformancePacksExceededException(inner) => Error::MaxNumberOfOrganizationConformancePacksExceededException(inner),
                crate::error::PutOrganizationConformancePackErrorKind::NoAvailableOrganizationException(inner) => Error::NoAvailableOrganizationException(inner),
                crate::error::PutOrganizationConformancePackErrorKind::OrganizationAccessDeniedException(inner) => Error::OrganizationAccessDeniedException(inner),
                crate::error::PutOrganizationConformancePackErrorKind::OrganizationAllFeaturesNotEnabledException(inner) => Error::OrganizationAllFeaturesNotEnabledException(inner),
                crate::error::PutOrganizationConformancePackErrorKind::OrganizationConformancePackTemplateValidationException(inner) => Error::OrganizationConformancePackTemplateValidationException(inner),
                crate::error::PutOrganizationConformancePackErrorKind::ResourceInUseException(inner) => Error::ResourceInUseException(inner),
                crate::error::PutOrganizationConformancePackErrorKind::ValidationException(inner) => Error::ValidationException(inner),
                crate::error::PutOrganizationConformancePackErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::PutRemediationConfigurationsError>>
    for Error
{
    fn from(
        err: smithy_http::result::SdkError<crate::error::PutRemediationConfigurationsError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::PutRemediationConfigurationsErrorKind::InsufficientPermissionsException(inner) => Error::InsufficientPermissionsException(inner),
                crate::error::PutRemediationConfigurationsErrorKind::InvalidParameterValueException(inner) => Error::InvalidParameterValueException(inner),
                crate::error::PutRemediationConfigurationsErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::PutRemediationExceptionsError>> for Error {
    fn from(
        err: smithy_http::result::SdkError<crate::error::PutRemediationExceptionsError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::PutRemediationExceptionsErrorKind::InsufficientPermissionsException(inner) => Error::InsufficientPermissionsException(inner),
                crate::error::PutRemediationExceptionsErrorKind::InvalidParameterValueException(inner) => Error::InvalidParameterValueException(inner),
                crate::error::PutRemediationExceptionsErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::PutResourceConfigError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::PutResourceConfigError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::PutResourceConfigErrorKind::InsufficientPermissionsException(inner) => Error::InsufficientPermissionsException(inner),
                crate::error::PutResourceConfigErrorKind::MaxActiveResourcesExceededException(inner) => Error::MaxActiveResourcesExceededException(inner),
                crate::error::PutResourceConfigErrorKind::NoRunningConfigurationRecorderException(inner) => Error::NoRunningConfigurationRecorderException(inner),
                crate::error::PutResourceConfigErrorKind::ValidationException(inner) => Error::ValidationException(inner),
                crate::error::PutResourceConfigErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::PutRetentionConfigurationError>> for Error {
    fn from(
        err: smithy_http::result::SdkError<crate::error::PutRetentionConfigurationError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::PutRetentionConfigurationErrorKind::InvalidParameterValueException(inner) => Error::InvalidParameterValueException(inner),
                crate::error::PutRetentionConfigurationErrorKind::MaxNumberOfRetentionConfigurationsExceededException(inner) => Error::MaxNumberOfRetentionConfigurationsExceededException(inner),
                crate::error::PutRetentionConfigurationErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::PutStoredQueryError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::PutStoredQueryError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::PutStoredQueryErrorKind::ResourceConcurrentModificationException(
                    inner,
                ) => Error::ResourceConcurrentModificationException(inner),
                crate::error::PutStoredQueryErrorKind::TooManyTagsException(inner) => {
                    Error::TooManyTagsException(inner)
                }
                crate::error::PutStoredQueryErrorKind::ValidationException(inner) => {
                    Error::ValidationException(inner)
                }
                crate::error::PutStoredQueryErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::SelectAggregateResourceConfigError>>
    for Error
{
    fn from(
        err: smithy_http::result::SdkError<crate::error::SelectAggregateResourceConfigError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::SelectAggregateResourceConfigErrorKind::InvalidExpressionException(inner) => Error::InvalidExpressionException(inner),
                crate::error::SelectAggregateResourceConfigErrorKind::InvalidLimitException(inner) => Error::InvalidLimitException(inner),
                crate::error::SelectAggregateResourceConfigErrorKind::InvalidNextTokenException(inner) => Error::InvalidNextTokenException(inner),
                crate::error::SelectAggregateResourceConfigErrorKind::NoSuchConfigurationAggregatorException(inner) => Error::NoSuchConfigurationAggregatorException(inner),
                crate::error::SelectAggregateResourceConfigErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::SelectResourceConfigError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::SelectResourceConfigError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::SelectResourceConfigErrorKind::InvalidExpressionException(inner) => {
                    Error::InvalidExpressionException(inner)
                }
                crate::error::SelectResourceConfigErrorKind::InvalidLimitException(inner) => {
                    Error::InvalidLimitException(inner)
                }
                crate::error::SelectResourceConfigErrorKind::InvalidNextTokenException(inner) => {
                    Error::InvalidNextTokenException(inner)
                }
                crate::error::SelectResourceConfigErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::StartConfigRulesEvaluationError>> for Error {
    fn from(
        err: smithy_http::result::SdkError<crate::error::StartConfigRulesEvaluationError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::StartConfigRulesEvaluationErrorKind::InvalidParameterValueException(inner) => Error::InvalidParameterValueException(inner),
                crate::error::StartConfigRulesEvaluationErrorKind::LimitExceededException(inner) => Error::LimitExceededException(inner),
                crate::error::StartConfigRulesEvaluationErrorKind::NoSuchConfigRuleException(inner) => Error::NoSuchConfigRuleException(inner),
                crate::error::StartConfigRulesEvaluationErrorKind::ResourceInUseException(inner) => Error::ResourceInUseException(inner),
                crate::error::StartConfigRulesEvaluationErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::StartConfigurationRecorderError>> for Error {
    fn from(
        err: smithy_http::result::SdkError<crate::error::StartConfigurationRecorderError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::StartConfigurationRecorderErrorKind::NoAvailableDeliveryChannelException(inner) => Error::NoAvailableDeliveryChannelException(inner),
                crate::error::StartConfigurationRecorderErrorKind::NoSuchConfigurationRecorderException(inner) => Error::NoSuchConfigurationRecorderException(inner),
                crate::error::StartConfigurationRecorderErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::StartRemediationExecutionError>> for Error {
    fn from(
        err: smithy_http::result::SdkError<crate::error::StartRemediationExecutionError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::StartRemediationExecutionErrorKind::InsufficientPermissionsException(inner) => Error::InsufficientPermissionsException(inner),
                crate::error::StartRemediationExecutionErrorKind::InvalidParameterValueException(inner) => Error::InvalidParameterValueException(inner),
                crate::error::StartRemediationExecutionErrorKind::NoSuchRemediationConfigurationException(inner) => Error::NoSuchRemediationConfigurationException(inner),
                crate::error::StartRemediationExecutionErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::StopConfigurationRecorderError>> for Error {
    fn from(
        err: smithy_http::result::SdkError<crate::error::StopConfigurationRecorderError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::StopConfigurationRecorderErrorKind::NoSuchConfigurationRecorderException(inner) => Error::NoSuchConfigurationRecorderException(inner),
                crate::error::StopConfigurationRecorderErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::TagResourceError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::TagResourceError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::TagResourceErrorKind::ResourceNotFoundException(inner) => {
                    Error::ResourceNotFoundException(inner)
                }
                crate::error::TagResourceErrorKind::TooManyTagsException(inner) => {
                    Error::TooManyTagsException(inner)
                }
                crate::error::TagResourceErrorKind::ValidationException(inner) => {
                    Error::ValidationException(inner)
                }
                crate::error::TagResourceErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::UntagResourceError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::UntagResourceError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::UntagResourceErrorKind::ResourceNotFoundException(inner) => {
                    Error::ResourceNotFoundException(inner)
                }
                crate::error::UntagResourceErrorKind::ValidationException(inner) => {
                    Error::ValidationException(inner)
                }
                crate::error::UntagResourceErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl std::error::Error for Error {}
