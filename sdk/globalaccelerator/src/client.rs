// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[doc(inline)]
pub use aws_smithy_client::Builder;
#[derive(Debug)]
pub(crate) struct Handle {
    pub(crate) client: aws_smithy_client::Client<
        aws_smithy_client::erase::DynConnector,
        aws_smithy_client::erase::DynMiddleware<aws_smithy_client::erase::DynConnector>,
    >,
    pub(crate) conf: crate::Config,
}

/// Client for AWS Global Accelerator
///
/// Client for invoking operations on AWS Global Accelerator. Each operation on AWS Global Accelerator is a method on this
/// this struct. `.send()` MUST be invoked on the generated operations to dispatch the request to the service.
///
/// # Examples
/// **Constructing a client and invoking an operation**
/// ```rust,no_run
/// # async fn docs() {
///     // create a shared configuration. This can be used & shared between multiple service clients.
///     let shared_config = aws_config::load_from_env().await;
///     let client = aws_sdk_globalaccelerator::Client::new(&shared_config);
///     // invoke an operation
///     /* let rsp = client
///         .<operation_name>().
///         .<param>("some value")
///         .send().await; */
/// # }
/// ```
/// **Constructing a client with custom configuration**
/// ```rust,no_run
/// use aws_config::retry::RetryConfig;
/// # async fn docs() {
/// let shared_config = aws_config::load_from_env().await;
/// let config = aws_sdk_globalaccelerator::config::Builder::from(&shared_config)
///   .retry_config(RetryConfig::disabled())
///   .build();
/// let client = aws_sdk_globalaccelerator::Client::from_conf(config);
/// # }
#[derive(std::fmt::Debug)]
pub struct Client {
    handle: std::sync::Arc<Handle>,
}

impl std::clone::Clone for Client {
    fn clone(&self) -> Self {
        Self {
            handle: self.handle.clone(),
        }
    }
}

impl
    From<
        aws_smithy_client::Client<
            aws_smithy_client::erase::DynConnector,
            aws_smithy_client::erase::DynMiddleware<aws_smithy_client::erase::DynConnector>,
        >,
    > for Client
{
    fn from(
        client: aws_smithy_client::Client<
            aws_smithy_client::erase::DynConnector,
            aws_smithy_client::erase::DynMiddleware<aws_smithy_client::erase::DynConnector>,
        >,
    ) -> Self {
        Self::with_config(client, crate::Config::builder().build())
    }
}

impl Client {
    /// Creates a client with the given service configuration.
    pub fn with_config(
        client: aws_smithy_client::Client<
            aws_smithy_client::erase::DynConnector,
            aws_smithy_client::erase::DynMiddleware<aws_smithy_client::erase::DynConnector>,
        >,
        conf: crate::Config,
    ) -> Self {
        Self {
            handle: std::sync::Arc::new(Handle { client, conf }),
        }
    }

    /// Returns the client's configuration.
    pub fn conf(&self) -> &crate::Config {
        &self.handle.conf
    }
}
impl Client {
    /// Constructs a fluent builder for the [`AddCustomRoutingEndpoints`](crate::client::fluent_builders::AddCustomRoutingEndpoints) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`endpoint_configurations(Vec<CustomRoutingEndpointConfiguration>)`](crate::client::fluent_builders::AddCustomRoutingEndpoints::endpoint_configurations) / [`set_endpoint_configurations(Option<Vec<CustomRoutingEndpointConfiguration>>)`](crate::client::fluent_builders::AddCustomRoutingEndpoints::set_endpoint_configurations): <p>The list of endpoint objects to add to a custom routing accelerator.</p>
    ///   - [`endpoint_group_arn(impl Into<String>)`](crate::client::fluent_builders::AddCustomRoutingEndpoints::endpoint_group_arn) / [`set_endpoint_group_arn(Option<String>)`](crate::client::fluent_builders::AddCustomRoutingEndpoints::set_endpoint_group_arn): <p>The Amazon Resource Name (ARN) of the endpoint group for the custom routing endpoint.</p>
    /// - On success, responds with [`AddCustomRoutingEndpointsOutput`](crate::output::AddCustomRoutingEndpointsOutput) with field(s):
    ///   - [`endpoint_descriptions(Option<Vec<CustomRoutingEndpointDescription>>)`](crate::output::AddCustomRoutingEndpointsOutput::endpoint_descriptions): <p>The endpoint objects added to the custom routing accelerator.</p>
    ///   - [`endpoint_group_arn(Option<String>)`](crate::output::AddCustomRoutingEndpointsOutput::endpoint_group_arn): <p>The Amazon Resource Name (ARN) of the endpoint group for the custom routing endpoint.</p>
    /// - On failure, responds with [`SdkError<AddCustomRoutingEndpointsError>`](crate::error::AddCustomRoutingEndpointsError)
    pub fn add_custom_routing_endpoints(
        &self,
    ) -> crate::client::fluent_builders::AddCustomRoutingEndpoints {
        crate::client::fluent_builders::AddCustomRoutingEndpoints::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`AddEndpoints`](crate::client::fluent_builders::AddEndpoints) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`endpoint_configurations(Vec<EndpointConfiguration>)`](crate::client::fluent_builders::AddEndpoints::endpoint_configurations) / [`set_endpoint_configurations(Option<Vec<EndpointConfiguration>>)`](crate::client::fluent_builders::AddEndpoints::set_endpoint_configurations): <p>The list of endpoint objects.</p>
    ///   - [`endpoint_group_arn(impl Into<String>)`](crate::client::fluent_builders::AddEndpoints::endpoint_group_arn) / [`set_endpoint_group_arn(Option<String>)`](crate::client::fluent_builders::AddEndpoints::set_endpoint_group_arn): <p>The Amazon Resource Name (ARN) of the endpoint group.</p>
    /// - On success, responds with [`AddEndpointsOutput`](crate::output::AddEndpointsOutput) with field(s):
    ///   - [`endpoint_descriptions(Option<Vec<EndpointDescription>>)`](crate::output::AddEndpointsOutput::endpoint_descriptions): <p>The list of endpoint objects.</p>
    ///   - [`endpoint_group_arn(Option<String>)`](crate::output::AddEndpointsOutput::endpoint_group_arn): <p>The Amazon Resource Name (ARN) of the endpoint group.</p>
    /// - On failure, responds with [`SdkError<AddEndpointsError>`](crate::error::AddEndpointsError)
    pub fn add_endpoints(&self) -> crate::client::fluent_builders::AddEndpoints {
        crate::client::fluent_builders::AddEndpoints::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`AdvertiseByoipCidr`](crate::client::fluent_builders::AdvertiseByoipCidr) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`cidr(impl Into<String>)`](crate::client::fluent_builders::AdvertiseByoipCidr::cidr) / [`set_cidr(Option<String>)`](crate::client::fluent_builders::AdvertiseByoipCidr::set_cidr): <p>The address range, in CIDR notation. This must be the exact range that you provisioned. You can't advertise only a portion of the provisioned range.</p>
    /// - On success, responds with [`AdvertiseByoipCidrOutput`](crate::output::AdvertiseByoipCidrOutput) with field(s):
    ///   - [`byoip_cidr(Option<ByoipCidr>)`](crate::output::AdvertiseByoipCidrOutput::byoip_cidr): <p>Information about the address range.</p>
    /// - On failure, responds with [`SdkError<AdvertiseByoipCidrError>`](crate::error::AdvertiseByoipCidrError)
    pub fn advertise_byoip_cidr(&self) -> crate::client::fluent_builders::AdvertiseByoipCidr {
        crate::client::fluent_builders::AdvertiseByoipCidr::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`AllowCustomRoutingTraffic`](crate::client::fluent_builders::AllowCustomRoutingTraffic) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`endpoint_group_arn(impl Into<String>)`](crate::client::fluent_builders::AllowCustomRoutingTraffic::endpoint_group_arn) / [`set_endpoint_group_arn(Option<String>)`](crate::client::fluent_builders::AllowCustomRoutingTraffic::set_endpoint_group_arn): <p>The Amazon Resource Name (ARN) of the endpoint group.</p>
    ///   - [`endpoint_id(impl Into<String>)`](crate::client::fluent_builders::AllowCustomRoutingTraffic::endpoint_id) / [`set_endpoint_id(Option<String>)`](crate::client::fluent_builders::AllowCustomRoutingTraffic::set_endpoint_id): <p>An ID for the endpoint. For custom routing accelerators, this is the virtual private cloud (VPC) subnet ID.</p>
    ///   - [`destination_addresses(Vec<String>)`](crate::client::fluent_builders::AllowCustomRoutingTraffic::destination_addresses) / [`set_destination_addresses(Option<Vec<String>>)`](crate::client::fluent_builders::AllowCustomRoutingTraffic::set_destination_addresses): <p>A list of specific Amazon EC2 instance IP addresses (destination addresses) in a subnet that you want to allow to receive traffic. The IP addresses must be a subset of the IP addresses that you specified for the endpoint group.</p>  <p> <code>DestinationAddresses</code> is required if <code>AllowAllTrafficToEndpoint</code> is <code>FALSE</code> or is not specified.</p>
    ///   - [`destination_ports(Vec<i32>)`](crate::client::fluent_builders::AllowCustomRoutingTraffic::destination_ports) / [`set_destination_ports(Option<Vec<i32>>)`](crate::client::fluent_builders::AllowCustomRoutingTraffic::set_destination_ports): <p>A list of specific Amazon EC2 instance ports (destination ports) that you want to allow to receive traffic.</p>
    ///   - [`allow_all_traffic_to_endpoint(bool)`](crate::client::fluent_builders::AllowCustomRoutingTraffic::allow_all_traffic_to_endpoint) / [`set_allow_all_traffic_to_endpoint(Option<bool>)`](crate::client::fluent_builders::AllowCustomRoutingTraffic::set_allow_all_traffic_to_endpoint): <p>Indicates whether all destination IP addresses and ports for a specified VPC subnet endpoint can receive traffic from a custom routing accelerator. The value is TRUE or FALSE. </p>  <p>When set to TRUE, <i>all</i> destinations in the custom routing VPC subnet can receive traffic. Note that you cannot specify destination IP addresses and ports when the value is set to TRUE.</p>  <p>When set to FALSE (or not specified), you <i>must</i> specify a list of destination IP addresses that are allowed to receive traffic. A list of ports is optional. If you don't specify a list of ports, the ports that can accept traffic is the same as the ports configured for the endpoint group.</p>  <p>The default value is FALSE.</p>
    /// - On success, responds with [`AllowCustomRoutingTrafficOutput`](crate::output::AllowCustomRoutingTrafficOutput)

    /// - On failure, responds with [`SdkError<AllowCustomRoutingTrafficError>`](crate::error::AllowCustomRoutingTrafficError)
    pub fn allow_custom_routing_traffic(
        &self,
    ) -> crate::client::fluent_builders::AllowCustomRoutingTraffic {
        crate::client::fluent_builders::AllowCustomRoutingTraffic::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`CreateAccelerator`](crate::client::fluent_builders::CreateAccelerator) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(impl Into<String>)`](crate::client::fluent_builders::CreateAccelerator::name) / [`set_name(Option<String>)`](crate::client::fluent_builders::CreateAccelerator::set_name): <p>The name of the accelerator. The name can have a maximum of 64 characters, must contain only alphanumeric characters, periods (.), or hyphens (-), and must not begin or end with a hyphen or period.</p>
    ///   - [`ip_address_type(IpAddressType)`](crate::client::fluent_builders::CreateAccelerator::ip_address_type) / [`set_ip_address_type(Option<IpAddressType>)`](crate::client::fluent_builders::CreateAccelerator::set_ip_address_type): <p>The IP address type that an accelerator supports. For a standard accelerator, the value can be IPV4 or DUAL_STACK.</p>
    ///   - [`ip_addresses(Vec<String>)`](crate::client::fluent_builders::CreateAccelerator::ip_addresses) / [`set_ip_addresses(Option<Vec<String>>)`](crate::client::fluent_builders::CreateAccelerator::set_ip_addresses): <p>Optionally, if you've added your own IP address pool to Global Accelerator (BYOIP), you can choose an IPv4 address from your own pool to use for the accelerator's static IPv4 address when you create an accelerator. </p>  <p>After you bring an address range to Amazon Web Services, it appears in your account as an address pool. When you create an accelerator, you can assign one IPv4 address from your range to it. Global Accelerator assigns you a second static IPv4 address from an Amazon IP address range. If you bring two IPv4 address ranges to Amazon Web Services, you can assign one IPv4 address from each range to your accelerator. This restriction is because Global Accelerator assigns each address range to a different network zone, for high availability.</p>  <p>You can specify one or two addresses, separated by a space. Do not include the /32 suffix.</p>  <p>Note that you can't update IP addresses for an existing accelerator. To change them, you must create a new accelerator with the new addresses.</p>  <p>For more information, see <a href="https://docs.aws.amazon.com/global-accelerator/latest/dg/using-byoip.html">Bring your own IP addresses (BYOIP)</a> in the <i>Global Accelerator Developer Guide</i>.</p>
    ///   - [`enabled(bool)`](crate::client::fluent_builders::CreateAccelerator::enabled) / [`set_enabled(Option<bool>)`](crate::client::fluent_builders::CreateAccelerator::set_enabled): <p>Indicates whether an accelerator is enabled. The value is true or false. The default value is true. </p>  <p>If the value is set to true, an accelerator cannot be deleted. If set to false, the accelerator can be deleted.</p>
    ///   - [`idempotency_token(impl Into<String>)`](crate::client::fluent_builders::CreateAccelerator::idempotency_token) / [`set_idempotency_token(Option<String>)`](crate::client::fluent_builders::CreateAccelerator::set_idempotency_token): <p>A unique, case-sensitive identifier that you provide to ensure the idempotency—that is, the uniqueness—of an accelerator.</p>
    ///   - [`tags(Vec<Tag>)`](crate::client::fluent_builders::CreateAccelerator::tags) / [`set_tags(Option<Vec<Tag>>)`](crate::client::fluent_builders::CreateAccelerator::set_tags): <p>Create tags for an accelerator.</p>  <p>For more information, see <a href="https://docs.aws.amazon.com/global-accelerator/latest/dg/tagging-in-global-accelerator.html">Tagging in Global Accelerator</a> in the <i>Global Accelerator Developer Guide</i>.</p>
    /// - On success, responds with [`CreateAcceleratorOutput`](crate::output::CreateAcceleratorOutput) with field(s):
    ///   - [`accelerator(Option<Accelerator>)`](crate::output::CreateAcceleratorOutput::accelerator): <p>The accelerator that is created by specifying a listener and the supported IP address types.</p>
    /// - On failure, responds with [`SdkError<CreateAcceleratorError>`](crate::error::CreateAcceleratorError)
    pub fn create_accelerator(&self) -> crate::client::fluent_builders::CreateAccelerator {
        crate::client::fluent_builders::CreateAccelerator::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`CreateCustomRoutingAccelerator`](crate::client::fluent_builders::CreateCustomRoutingAccelerator) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(impl Into<String>)`](crate::client::fluent_builders::CreateCustomRoutingAccelerator::name) / [`set_name(Option<String>)`](crate::client::fluent_builders::CreateCustomRoutingAccelerator::set_name): <p>The name of a custom routing accelerator. The name can have a maximum of 64 characters, must contain only alphanumeric characters or hyphens (-), and must not begin or end with a hyphen.</p>
    ///   - [`ip_address_type(IpAddressType)`](crate::client::fluent_builders::CreateCustomRoutingAccelerator::ip_address_type) / [`set_ip_address_type(Option<IpAddressType>)`](crate::client::fluent_builders::CreateCustomRoutingAccelerator::set_ip_address_type): <p>The IP address type that an accelerator supports. For a custom routing accelerator, the value must be IPV4.</p>
    ///   - [`ip_addresses(Vec<String>)`](crate::client::fluent_builders::CreateCustomRoutingAccelerator::ip_addresses) / [`set_ip_addresses(Option<Vec<String>>)`](crate::client::fluent_builders::CreateCustomRoutingAccelerator::set_ip_addresses): <p>Optionally, if you've added your own IP address pool to Global Accelerator (BYOIP), you can choose an IPv4 address from your own pool to use for the accelerator's static IPv4 address when you create an accelerator. </p>  <p>After you bring an address range to Amazon Web Services, it appears in your account as an address pool. When you create an accelerator, you can assign one IPv4 address from your range to it. Global Accelerator assigns you a second static IPv4 address from an Amazon IP address range. If you bring two IPv4 address ranges to Amazon Web Services, you can assign one IPv4 address from each range to your accelerator. This restriction is because Global Accelerator assigns each address range to a different network zone, for high availability.</p>  <p>You can specify one or two addresses, separated by a space. Do not include the /32 suffix.</p>  <p>Note that you can't update IP addresses for an existing accelerator. To change them, you must create a new accelerator with the new addresses.</p>  <p>For more information, see <a href="https://docs.aws.amazon.com/global-accelerator/latest/dg/using-byoip.html">Bring your own IP addresses (BYOIP)</a> in the <i>Global Accelerator Developer Guide</i>.</p>
    ///   - [`enabled(bool)`](crate::client::fluent_builders::CreateCustomRoutingAccelerator::enabled) / [`set_enabled(Option<bool>)`](crate::client::fluent_builders::CreateCustomRoutingAccelerator::set_enabled): <p>Indicates whether an accelerator is enabled. The value is true or false. The default value is true. </p>  <p>If the value is set to true, an accelerator cannot be deleted. If set to false, the accelerator can be deleted.</p>
    ///   - [`idempotency_token(impl Into<String>)`](crate::client::fluent_builders::CreateCustomRoutingAccelerator::idempotency_token) / [`set_idempotency_token(Option<String>)`](crate::client::fluent_builders::CreateCustomRoutingAccelerator::set_idempotency_token): <p>A unique, case-sensitive identifier that you provide to ensure the idempotency—that is, the uniqueness—of the request.</p>
    ///   - [`tags(Vec<Tag>)`](crate::client::fluent_builders::CreateCustomRoutingAccelerator::tags) / [`set_tags(Option<Vec<Tag>>)`](crate::client::fluent_builders::CreateCustomRoutingAccelerator::set_tags): <p>Create tags for an accelerator.</p>  <p>For more information, see <a href="https://docs.aws.amazon.com/global-accelerator/latest/dg/tagging-in-global-accelerator.html">Tagging in Global Accelerator</a> in the <i>Global Accelerator Developer Guide</i>.</p>
    /// - On success, responds with [`CreateCustomRoutingAcceleratorOutput`](crate::output::CreateCustomRoutingAcceleratorOutput) with field(s):
    ///   - [`accelerator(Option<CustomRoutingAccelerator>)`](crate::output::CreateCustomRoutingAcceleratorOutput::accelerator): <p>The accelerator that is created.</p>
    /// - On failure, responds with [`SdkError<CreateCustomRoutingAcceleratorError>`](crate::error::CreateCustomRoutingAcceleratorError)
    pub fn create_custom_routing_accelerator(
        &self,
    ) -> crate::client::fluent_builders::CreateCustomRoutingAccelerator {
        crate::client::fluent_builders::CreateCustomRoutingAccelerator::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`CreateCustomRoutingEndpointGroup`](crate::client::fluent_builders::CreateCustomRoutingEndpointGroup) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`listener_arn(impl Into<String>)`](crate::client::fluent_builders::CreateCustomRoutingEndpointGroup::listener_arn) / [`set_listener_arn(Option<String>)`](crate::client::fluent_builders::CreateCustomRoutingEndpointGroup::set_listener_arn): <p>The Amazon Resource Name (ARN) of the listener for a custom routing endpoint.</p>
    ///   - [`endpoint_group_region(impl Into<String>)`](crate::client::fluent_builders::CreateCustomRoutingEndpointGroup::endpoint_group_region) / [`set_endpoint_group_region(Option<String>)`](crate::client::fluent_builders::CreateCustomRoutingEndpointGroup::set_endpoint_group_region): <p>The Amazon Web Services Region where the endpoint group is located. A listener can have only one endpoint group in a specific Region.</p>
    ///   - [`destination_configurations(Vec<CustomRoutingDestinationConfiguration>)`](crate::client::fluent_builders::CreateCustomRoutingEndpointGroup::destination_configurations) / [`set_destination_configurations(Option<Vec<CustomRoutingDestinationConfiguration>>)`](crate::client::fluent_builders::CreateCustomRoutingEndpointGroup::set_destination_configurations): <p>Sets the port range and protocol for all endpoints (virtual private cloud subnets) in a custom routing endpoint group to accept client traffic on.</p>
    ///   - [`idempotency_token(impl Into<String>)`](crate::client::fluent_builders::CreateCustomRoutingEndpointGroup::idempotency_token) / [`set_idempotency_token(Option<String>)`](crate::client::fluent_builders::CreateCustomRoutingEndpointGroup::set_idempotency_token): <p>A unique, case-sensitive identifier that you provide to ensure the idempotency—that is, the uniqueness—of the request.</p>
    /// - On success, responds with [`CreateCustomRoutingEndpointGroupOutput`](crate::output::CreateCustomRoutingEndpointGroupOutput) with field(s):
    ///   - [`endpoint_group(Option<CustomRoutingEndpointGroup>)`](crate::output::CreateCustomRoutingEndpointGroupOutput::endpoint_group): <p>The information about the endpoint group created for a custom routing accelerator.</p>
    /// - On failure, responds with [`SdkError<CreateCustomRoutingEndpointGroupError>`](crate::error::CreateCustomRoutingEndpointGroupError)
    pub fn create_custom_routing_endpoint_group(
        &self,
    ) -> crate::client::fluent_builders::CreateCustomRoutingEndpointGroup {
        crate::client::fluent_builders::CreateCustomRoutingEndpointGroup::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`CreateCustomRoutingListener`](crate::client::fluent_builders::CreateCustomRoutingListener) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`accelerator_arn(impl Into<String>)`](crate::client::fluent_builders::CreateCustomRoutingListener::accelerator_arn) / [`set_accelerator_arn(Option<String>)`](crate::client::fluent_builders::CreateCustomRoutingListener::set_accelerator_arn): <p>The Amazon Resource Name (ARN) of the accelerator for a custom routing listener.</p>
    ///   - [`port_ranges(Vec<PortRange>)`](crate::client::fluent_builders::CreateCustomRoutingListener::port_ranges) / [`set_port_ranges(Option<Vec<PortRange>>)`](crate::client::fluent_builders::CreateCustomRoutingListener::set_port_ranges): <p>The port range to support for connections from clients to your accelerator.</p>  <p>Separately, you set port ranges for endpoints. For more information, see <a href="https://docs.aws.amazon.com/global-accelerator/latest/dg/about-custom-routing-endpoints.html">About endpoints for custom routing accelerators</a>.</p>
    ///   - [`idempotency_token(impl Into<String>)`](crate::client::fluent_builders::CreateCustomRoutingListener::idempotency_token) / [`set_idempotency_token(Option<String>)`](crate::client::fluent_builders::CreateCustomRoutingListener::set_idempotency_token): <p>A unique, case-sensitive identifier that you provide to ensure the idempotency—that is, the uniqueness—of the request.</p>
    /// - On success, responds with [`CreateCustomRoutingListenerOutput`](crate::output::CreateCustomRoutingListenerOutput) with field(s):
    ///   - [`listener(Option<CustomRoutingListener>)`](crate::output::CreateCustomRoutingListenerOutput::listener): <p>The listener that you've created for a custom routing accelerator.</p>
    /// - On failure, responds with [`SdkError<CreateCustomRoutingListenerError>`](crate::error::CreateCustomRoutingListenerError)
    pub fn create_custom_routing_listener(
        &self,
    ) -> crate::client::fluent_builders::CreateCustomRoutingListener {
        crate::client::fluent_builders::CreateCustomRoutingListener::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`CreateEndpointGroup`](crate::client::fluent_builders::CreateEndpointGroup) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`listener_arn(impl Into<String>)`](crate::client::fluent_builders::CreateEndpointGroup::listener_arn) / [`set_listener_arn(Option<String>)`](crate::client::fluent_builders::CreateEndpointGroup::set_listener_arn): <p>The Amazon Resource Name (ARN) of the listener.</p>
    ///   - [`endpoint_group_region(impl Into<String>)`](crate::client::fluent_builders::CreateEndpointGroup::endpoint_group_region) / [`set_endpoint_group_region(Option<String>)`](crate::client::fluent_builders::CreateEndpointGroup::set_endpoint_group_region): <p>The Amazon Web Services Region where the endpoint group is located. A listener can have only one endpoint group in a specific Region.</p>
    ///   - [`endpoint_configurations(Vec<EndpointConfiguration>)`](crate::client::fluent_builders::CreateEndpointGroup::endpoint_configurations) / [`set_endpoint_configurations(Option<Vec<EndpointConfiguration>>)`](crate::client::fluent_builders::CreateEndpointGroup::set_endpoint_configurations): <p>The list of endpoint objects.</p>
    ///   - [`traffic_dial_percentage(f32)`](crate::client::fluent_builders::CreateEndpointGroup::traffic_dial_percentage) / [`set_traffic_dial_percentage(Option<f32>)`](crate::client::fluent_builders::CreateEndpointGroup::set_traffic_dial_percentage): <p>The percentage of traffic to send to an Amazon Web Services Region. Additional traffic is distributed to other endpoint groups for this listener. </p>  <p>Use this action to increase (dial up) or decrease (dial down) traffic to a specific Region. The percentage is applied to the traffic that would otherwise have been routed to the Region based on optimal routing.</p>  <p>The default value is 100.</p>
    ///   - [`health_check_port(i32)`](crate::client::fluent_builders::CreateEndpointGroup::health_check_port) / [`set_health_check_port(Option<i32>)`](crate::client::fluent_builders::CreateEndpointGroup::set_health_check_port): <p>The port that Global Accelerator uses to check the health of endpoints that are part of this endpoint group. The default port is the listener port that this endpoint group is associated with. If listener port is a list of ports, Global Accelerator uses the first port in the list.</p>
    ///   - [`health_check_protocol(HealthCheckProtocol)`](crate::client::fluent_builders::CreateEndpointGroup::health_check_protocol) / [`set_health_check_protocol(Option<HealthCheckProtocol>)`](crate::client::fluent_builders::CreateEndpointGroup::set_health_check_protocol): <p>The protocol that Global Accelerator uses to check the health of endpoints that are part of this endpoint group. The default value is TCP.</p>
    ///   - [`health_check_path(impl Into<String>)`](crate::client::fluent_builders::CreateEndpointGroup::health_check_path) / [`set_health_check_path(Option<String>)`](crate::client::fluent_builders::CreateEndpointGroup::set_health_check_path): <p>If the protocol is HTTP/S, then this specifies the path that is the destination for health check targets. The default value is slash (/).</p>
    ///   - [`health_check_interval_seconds(i32)`](crate::client::fluent_builders::CreateEndpointGroup::health_check_interval_seconds) / [`set_health_check_interval_seconds(Option<i32>)`](crate::client::fluent_builders::CreateEndpointGroup::set_health_check_interval_seconds): <p>The time—10 seconds or 30 seconds—between each health check for an endpoint. The default value is 30.</p>
    ///   - [`threshold_count(i32)`](crate::client::fluent_builders::CreateEndpointGroup::threshold_count) / [`set_threshold_count(Option<i32>)`](crate::client::fluent_builders::CreateEndpointGroup::set_threshold_count): <p>The number of consecutive health checks required to set the state of a healthy endpoint to unhealthy, or to set an unhealthy endpoint to healthy. The default value is 3.</p>
    ///   - [`idempotency_token(impl Into<String>)`](crate::client::fluent_builders::CreateEndpointGroup::idempotency_token) / [`set_idempotency_token(Option<String>)`](crate::client::fluent_builders::CreateEndpointGroup::set_idempotency_token): <p>A unique, case-sensitive identifier that you provide to ensure the idempotency—that is, the uniqueness—of the request.</p>
    ///   - [`port_overrides(Vec<PortOverride>)`](crate::client::fluent_builders::CreateEndpointGroup::port_overrides) / [`set_port_overrides(Option<Vec<PortOverride>>)`](crate::client::fluent_builders::CreateEndpointGroup::set_port_overrides): <p>Override specific listener ports used to route traffic to endpoints that are part of this endpoint group. For example, you can create a port override in which the listener receives user traffic on ports 80 and 443, but your accelerator routes that traffic to ports 1080 and 1443, respectively, on the endpoints.</p>  <p>For more information, see <a href="https://docs.aws.amazon.com/global-accelerator/latest/dg/about-endpoint-groups-port-override.html"> Overriding listener ports</a> in the <i>Global Accelerator Developer Guide</i>.</p>
    /// - On success, responds with [`CreateEndpointGroupOutput`](crate::output::CreateEndpointGroupOutput) with field(s):
    ///   - [`endpoint_group(Option<EndpointGroup>)`](crate::output::CreateEndpointGroupOutput::endpoint_group): <p>The information about the endpoint group that was created.</p>
    /// - On failure, responds with [`SdkError<CreateEndpointGroupError>`](crate::error::CreateEndpointGroupError)
    pub fn create_endpoint_group(&self) -> crate::client::fluent_builders::CreateEndpointGroup {
        crate::client::fluent_builders::CreateEndpointGroup::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`CreateListener`](crate::client::fluent_builders::CreateListener) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`accelerator_arn(impl Into<String>)`](crate::client::fluent_builders::CreateListener::accelerator_arn) / [`set_accelerator_arn(Option<String>)`](crate::client::fluent_builders::CreateListener::set_accelerator_arn): <p>The Amazon Resource Name (ARN) of your accelerator.</p>
    ///   - [`port_ranges(Vec<PortRange>)`](crate::client::fluent_builders::CreateListener::port_ranges) / [`set_port_ranges(Option<Vec<PortRange>>)`](crate::client::fluent_builders::CreateListener::set_port_ranges): <p>The list of port ranges to support for connections from clients to your accelerator.</p>
    ///   - [`protocol(Protocol)`](crate::client::fluent_builders::CreateListener::protocol) / [`set_protocol(Option<Protocol>)`](crate::client::fluent_builders::CreateListener::set_protocol): <p>The protocol for connections from clients to your accelerator.</p>
    ///   - [`client_affinity(ClientAffinity)`](crate::client::fluent_builders::CreateListener::client_affinity) / [`set_client_affinity(Option<ClientAffinity>)`](crate::client::fluent_builders::CreateListener::set_client_affinity): <p>Client affinity lets you direct all requests from a user to the same endpoint, if you have stateful applications, regardless of the port and protocol of the client request. Client affinity gives you control over whether to always route each client to the same specific endpoint.</p>  <p>Global Accelerator uses a consistent-flow hashing algorithm to choose the optimal endpoint for a connection. If client affinity is <code>NONE</code>, Global Accelerator uses the "five-tuple" (5-tuple) properties—source IP address, source port, destination IP address, destination port, and protocol—to select the hash value, and then chooses the best endpoint. However, with this setting, if someone uses different ports to connect to Global Accelerator, their connections might not be always routed to the same endpoint because the hash value changes. </p>  <p>If you want a given client to always be routed to the same endpoint, set client affinity to <code>SOURCE_IP</code> instead. When you use the <code>SOURCE_IP</code> setting, Global Accelerator uses the "two-tuple" (2-tuple) properties— source (client) IP address and destination IP address—to select the hash value.</p>  <p>The default value is <code>NONE</code>.</p>
    ///   - [`idempotency_token(impl Into<String>)`](crate::client::fluent_builders::CreateListener::idempotency_token) / [`set_idempotency_token(Option<String>)`](crate::client::fluent_builders::CreateListener::set_idempotency_token): <p>A unique, case-sensitive identifier that you provide to ensure the idempotency—that is, the uniqueness—of the request.</p>
    /// - On success, responds with [`CreateListenerOutput`](crate::output::CreateListenerOutput) with field(s):
    ///   - [`listener(Option<Listener>)`](crate::output::CreateListenerOutput::listener): <p>The listener that you've created.</p>
    /// - On failure, responds with [`SdkError<CreateListenerError>`](crate::error::CreateListenerError)
    pub fn create_listener(&self) -> crate::client::fluent_builders::CreateListener {
        crate::client::fluent_builders::CreateListener::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteAccelerator`](crate::client::fluent_builders::DeleteAccelerator) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`accelerator_arn(impl Into<String>)`](crate::client::fluent_builders::DeleteAccelerator::accelerator_arn) / [`set_accelerator_arn(Option<String>)`](crate::client::fluent_builders::DeleteAccelerator::set_accelerator_arn): <p>The Amazon Resource Name (ARN) of an accelerator.</p>
    /// - On success, responds with [`DeleteAcceleratorOutput`](crate::output::DeleteAcceleratorOutput)

    /// - On failure, responds with [`SdkError<DeleteAcceleratorError>`](crate::error::DeleteAcceleratorError)
    pub fn delete_accelerator(&self) -> crate::client::fluent_builders::DeleteAccelerator {
        crate::client::fluent_builders::DeleteAccelerator::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteCustomRoutingAccelerator`](crate::client::fluent_builders::DeleteCustomRoutingAccelerator) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`accelerator_arn(impl Into<String>)`](crate::client::fluent_builders::DeleteCustomRoutingAccelerator::accelerator_arn) / [`set_accelerator_arn(Option<String>)`](crate::client::fluent_builders::DeleteCustomRoutingAccelerator::set_accelerator_arn): <p>The Amazon Resource Name (ARN) of the custom routing accelerator to delete.</p>
    /// - On success, responds with [`DeleteCustomRoutingAcceleratorOutput`](crate::output::DeleteCustomRoutingAcceleratorOutput)

    /// - On failure, responds with [`SdkError<DeleteCustomRoutingAcceleratorError>`](crate::error::DeleteCustomRoutingAcceleratorError)
    pub fn delete_custom_routing_accelerator(
        &self,
    ) -> crate::client::fluent_builders::DeleteCustomRoutingAccelerator {
        crate::client::fluent_builders::DeleteCustomRoutingAccelerator::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteCustomRoutingEndpointGroup`](crate::client::fluent_builders::DeleteCustomRoutingEndpointGroup) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`endpoint_group_arn(impl Into<String>)`](crate::client::fluent_builders::DeleteCustomRoutingEndpointGroup::endpoint_group_arn) / [`set_endpoint_group_arn(Option<String>)`](crate::client::fluent_builders::DeleteCustomRoutingEndpointGroup::set_endpoint_group_arn): <p>The Amazon Resource Name (ARN) of the endpoint group to delete.</p>
    /// - On success, responds with [`DeleteCustomRoutingEndpointGroupOutput`](crate::output::DeleteCustomRoutingEndpointGroupOutput)

    /// - On failure, responds with [`SdkError<DeleteCustomRoutingEndpointGroupError>`](crate::error::DeleteCustomRoutingEndpointGroupError)
    pub fn delete_custom_routing_endpoint_group(
        &self,
    ) -> crate::client::fluent_builders::DeleteCustomRoutingEndpointGroup {
        crate::client::fluent_builders::DeleteCustomRoutingEndpointGroup::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteCustomRoutingListener`](crate::client::fluent_builders::DeleteCustomRoutingListener) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`listener_arn(impl Into<String>)`](crate::client::fluent_builders::DeleteCustomRoutingListener::listener_arn) / [`set_listener_arn(Option<String>)`](crate::client::fluent_builders::DeleteCustomRoutingListener::set_listener_arn): <p>The Amazon Resource Name (ARN) of the listener to delete.</p>
    /// - On success, responds with [`DeleteCustomRoutingListenerOutput`](crate::output::DeleteCustomRoutingListenerOutput)

    /// - On failure, responds with [`SdkError<DeleteCustomRoutingListenerError>`](crate::error::DeleteCustomRoutingListenerError)
    pub fn delete_custom_routing_listener(
        &self,
    ) -> crate::client::fluent_builders::DeleteCustomRoutingListener {
        crate::client::fluent_builders::DeleteCustomRoutingListener::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteEndpointGroup`](crate::client::fluent_builders::DeleteEndpointGroup) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`endpoint_group_arn(impl Into<String>)`](crate::client::fluent_builders::DeleteEndpointGroup::endpoint_group_arn) / [`set_endpoint_group_arn(Option<String>)`](crate::client::fluent_builders::DeleteEndpointGroup::set_endpoint_group_arn): <p>The Amazon Resource Name (ARN) of the endpoint group to delete.</p>
    /// - On success, responds with [`DeleteEndpointGroupOutput`](crate::output::DeleteEndpointGroupOutput)

    /// - On failure, responds with [`SdkError<DeleteEndpointGroupError>`](crate::error::DeleteEndpointGroupError)
    pub fn delete_endpoint_group(&self) -> crate::client::fluent_builders::DeleteEndpointGroup {
        crate::client::fluent_builders::DeleteEndpointGroup::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteListener`](crate::client::fluent_builders::DeleteListener) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`listener_arn(impl Into<String>)`](crate::client::fluent_builders::DeleteListener::listener_arn) / [`set_listener_arn(Option<String>)`](crate::client::fluent_builders::DeleteListener::set_listener_arn): <p>The Amazon Resource Name (ARN) of the listener.</p>
    /// - On success, responds with [`DeleteListenerOutput`](crate::output::DeleteListenerOutput)

    /// - On failure, responds with [`SdkError<DeleteListenerError>`](crate::error::DeleteListenerError)
    pub fn delete_listener(&self) -> crate::client::fluent_builders::DeleteListener {
        crate::client::fluent_builders::DeleteListener::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DenyCustomRoutingTraffic`](crate::client::fluent_builders::DenyCustomRoutingTraffic) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`endpoint_group_arn(impl Into<String>)`](crate::client::fluent_builders::DenyCustomRoutingTraffic::endpoint_group_arn) / [`set_endpoint_group_arn(Option<String>)`](crate::client::fluent_builders::DenyCustomRoutingTraffic::set_endpoint_group_arn): <p>The Amazon Resource Name (ARN) of the endpoint group.</p>
    ///   - [`endpoint_id(impl Into<String>)`](crate::client::fluent_builders::DenyCustomRoutingTraffic::endpoint_id) / [`set_endpoint_id(Option<String>)`](crate::client::fluent_builders::DenyCustomRoutingTraffic::set_endpoint_id): <p>An ID for the endpoint. For custom routing accelerators, this is the virtual private cloud (VPC) subnet ID.</p>
    ///   - [`destination_addresses(Vec<String>)`](crate::client::fluent_builders::DenyCustomRoutingTraffic::destination_addresses) / [`set_destination_addresses(Option<Vec<String>>)`](crate::client::fluent_builders::DenyCustomRoutingTraffic::set_destination_addresses): <p>A list of specific Amazon EC2 instance IP addresses (destination addresses) in a subnet that you want to prevent from receiving traffic. The IP addresses must be a subset of the IP addresses allowed for the VPC subnet associated with the endpoint group.</p>
    ///   - [`destination_ports(Vec<i32>)`](crate::client::fluent_builders::DenyCustomRoutingTraffic::destination_ports) / [`set_destination_ports(Option<Vec<i32>>)`](crate::client::fluent_builders::DenyCustomRoutingTraffic::set_destination_ports): <p>A list of specific Amazon EC2 instance ports (destination ports) in a subnet endpoint that you want to prevent from receiving traffic.</p>
    ///   - [`deny_all_traffic_to_endpoint(bool)`](crate::client::fluent_builders::DenyCustomRoutingTraffic::deny_all_traffic_to_endpoint) / [`set_deny_all_traffic_to_endpoint(Option<bool>)`](crate::client::fluent_builders::DenyCustomRoutingTraffic::set_deny_all_traffic_to_endpoint): <p>Indicates whether all destination IP addresses and ports for a specified VPC subnet endpoint <i>cannot</i> receive traffic from a custom routing accelerator. The value is TRUE or FALSE. </p>  <p>When set to TRUE, <i>no</i> destinations in the custom routing VPC subnet can receive traffic. Note that you cannot specify destination IP addresses and ports when the value is set to TRUE.</p>  <p>When set to FALSE (or not specified), you <i>must</i> specify a list of destination IP addresses that cannot receive traffic. A list of ports is optional. If you don't specify a list of ports, the ports that can accept traffic is the same as the ports configured for the endpoint group.</p>  <p>The default value is FALSE.</p>
    /// - On success, responds with [`DenyCustomRoutingTrafficOutput`](crate::output::DenyCustomRoutingTrafficOutput)

    /// - On failure, responds with [`SdkError<DenyCustomRoutingTrafficError>`](crate::error::DenyCustomRoutingTrafficError)
    pub fn deny_custom_routing_traffic(
        &self,
    ) -> crate::client::fluent_builders::DenyCustomRoutingTraffic {
        crate::client::fluent_builders::DenyCustomRoutingTraffic::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeprovisionByoipCidr`](crate::client::fluent_builders::DeprovisionByoipCidr) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`cidr(impl Into<String>)`](crate::client::fluent_builders::DeprovisionByoipCidr::cidr) / [`set_cidr(Option<String>)`](crate::client::fluent_builders::DeprovisionByoipCidr::set_cidr): <p>The address range, in CIDR notation. The prefix must be the same prefix that you specified when you provisioned the address range.</p>
    /// - On success, responds with [`DeprovisionByoipCidrOutput`](crate::output::DeprovisionByoipCidrOutput) with field(s):
    ///   - [`byoip_cidr(Option<ByoipCidr>)`](crate::output::DeprovisionByoipCidrOutput::byoip_cidr): <p>Information about the address range.</p>
    /// - On failure, responds with [`SdkError<DeprovisionByoipCidrError>`](crate::error::DeprovisionByoipCidrError)
    pub fn deprovision_byoip_cidr(&self) -> crate::client::fluent_builders::DeprovisionByoipCidr {
        crate::client::fluent_builders::DeprovisionByoipCidr::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DescribeAccelerator`](crate::client::fluent_builders::DescribeAccelerator) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`accelerator_arn(impl Into<String>)`](crate::client::fluent_builders::DescribeAccelerator::accelerator_arn) / [`set_accelerator_arn(Option<String>)`](crate::client::fluent_builders::DescribeAccelerator::set_accelerator_arn): <p>The Amazon Resource Name (ARN) of the accelerator to describe.</p>
    /// - On success, responds with [`DescribeAcceleratorOutput`](crate::output::DescribeAcceleratorOutput) with field(s):
    ///   - [`accelerator(Option<Accelerator>)`](crate::output::DescribeAcceleratorOutput::accelerator): <p>The description of the accelerator.</p>
    /// - On failure, responds with [`SdkError<DescribeAcceleratorError>`](crate::error::DescribeAcceleratorError)
    pub fn describe_accelerator(&self) -> crate::client::fluent_builders::DescribeAccelerator {
        crate::client::fluent_builders::DescribeAccelerator::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DescribeAcceleratorAttributes`](crate::client::fluent_builders::DescribeAcceleratorAttributes) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`accelerator_arn(impl Into<String>)`](crate::client::fluent_builders::DescribeAcceleratorAttributes::accelerator_arn) / [`set_accelerator_arn(Option<String>)`](crate::client::fluent_builders::DescribeAcceleratorAttributes::set_accelerator_arn): <p>The Amazon Resource Name (ARN) of the accelerator with the attributes that you want to describe.</p>
    /// - On success, responds with [`DescribeAcceleratorAttributesOutput`](crate::output::DescribeAcceleratorAttributesOutput) with field(s):
    ///   - [`accelerator_attributes(Option<AcceleratorAttributes>)`](crate::output::DescribeAcceleratorAttributesOutput::accelerator_attributes): <p>The attributes of the accelerator.</p>
    /// - On failure, responds with [`SdkError<DescribeAcceleratorAttributesError>`](crate::error::DescribeAcceleratorAttributesError)
    pub fn describe_accelerator_attributes(
        &self,
    ) -> crate::client::fluent_builders::DescribeAcceleratorAttributes {
        crate::client::fluent_builders::DescribeAcceleratorAttributes::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DescribeCustomRoutingAccelerator`](crate::client::fluent_builders::DescribeCustomRoutingAccelerator) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`accelerator_arn(impl Into<String>)`](crate::client::fluent_builders::DescribeCustomRoutingAccelerator::accelerator_arn) / [`set_accelerator_arn(Option<String>)`](crate::client::fluent_builders::DescribeCustomRoutingAccelerator::set_accelerator_arn): <p>The Amazon Resource Name (ARN) of the accelerator to describe.</p>
    /// - On success, responds with [`DescribeCustomRoutingAcceleratorOutput`](crate::output::DescribeCustomRoutingAcceleratorOutput) with field(s):
    ///   - [`accelerator(Option<CustomRoutingAccelerator>)`](crate::output::DescribeCustomRoutingAcceleratorOutput::accelerator): <p>The description of the custom routing accelerator.</p>
    /// - On failure, responds with [`SdkError<DescribeCustomRoutingAcceleratorError>`](crate::error::DescribeCustomRoutingAcceleratorError)
    pub fn describe_custom_routing_accelerator(
        &self,
    ) -> crate::client::fluent_builders::DescribeCustomRoutingAccelerator {
        crate::client::fluent_builders::DescribeCustomRoutingAccelerator::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DescribeCustomRoutingAcceleratorAttributes`](crate::client::fluent_builders::DescribeCustomRoutingAcceleratorAttributes) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`accelerator_arn(impl Into<String>)`](crate::client::fluent_builders::DescribeCustomRoutingAcceleratorAttributes::accelerator_arn) / [`set_accelerator_arn(Option<String>)`](crate::client::fluent_builders::DescribeCustomRoutingAcceleratorAttributes::set_accelerator_arn): <p>The Amazon Resource Name (ARN) of the custom routing accelerator to describe the attributes for.</p>
    /// - On success, responds with [`DescribeCustomRoutingAcceleratorAttributesOutput`](crate::output::DescribeCustomRoutingAcceleratorAttributesOutput) with field(s):
    ///   - [`accelerator_attributes(Option<CustomRoutingAcceleratorAttributes>)`](crate::output::DescribeCustomRoutingAcceleratorAttributesOutput::accelerator_attributes): <p>The attributes of the custom routing accelerator.</p>
    /// - On failure, responds with [`SdkError<DescribeCustomRoutingAcceleratorAttributesError>`](crate::error::DescribeCustomRoutingAcceleratorAttributesError)
    pub fn describe_custom_routing_accelerator_attributes(
        &self,
    ) -> crate::client::fluent_builders::DescribeCustomRoutingAcceleratorAttributes {
        crate::client::fluent_builders::DescribeCustomRoutingAcceleratorAttributes::new(
            self.handle.clone(),
        )
    }
    /// Constructs a fluent builder for the [`DescribeCustomRoutingEndpointGroup`](crate::client::fluent_builders::DescribeCustomRoutingEndpointGroup) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`endpoint_group_arn(impl Into<String>)`](crate::client::fluent_builders::DescribeCustomRoutingEndpointGroup::endpoint_group_arn) / [`set_endpoint_group_arn(Option<String>)`](crate::client::fluent_builders::DescribeCustomRoutingEndpointGroup::set_endpoint_group_arn): <p>The Amazon Resource Name (ARN) of the endpoint group to describe.</p>
    /// - On success, responds with [`DescribeCustomRoutingEndpointGroupOutput`](crate::output::DescribeCustomRoutingEndpointGroupOutput) with field(s):
    ///   - [`endpoint_group(Option<CustomRoutingEndpointGroup>)`](crate::output::DescribeCustomRoutingEndpointGroupOutput::endpoint_group): <p>The description of an endpoint group for a custom routing accelerator.</p>
    /// - On failure, responds with [`SdkError<DescribeCustomRoutingEndpointGroupError>`](crate::error::DescribeCustomRoutingEndpointGroupError)
    pub fn describe_custom_routing_endpoint_group(
        &self,
    ) -> crate::client::fluent_builders::DescribeCustomRoutingEndpointGroup {
        crate::client::fluent_builders::DescribeCustomRoutingEndpointGroup::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DescribeCustomRoutingListener`](crate::client::fluent_builders::DescribeCustomRoutingListener) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`listener_arn(impl Into<String>)`](crate::client::fluent_builders::DescribeCustomRoutingListener::listener_arn) / [`set_listener_arn(Option<String>)`](crate::client::fluent_builders::DescribeCustomRoutingListener::set_listener_arn): <p>The Amazon Resource Name (ARN) of the listener to describe.</p>
    /// - On success, responds with [`DescribeCustomRoutingListenerOutput`](crate::output::DescribeCustomRoutingListenerOutput) with field(s):
    ///   - [`listener(Option<CustomRoutingListener>)`](crate::output::DescribeCustomRoutingListenerOutput::listener): <p>The description of a listener for a custom routing accelerator.</p>
    /// - On failure, responds with [`SdkError<DescribeCustomRoutingListenerError>`](crate::error::DescribeCustomRoutingListenerError)
    pub fn describe_custom_routing_listener(
        &self,
    ) -> crate::client::fluent_builders::DescribeCustomRoutingListener {
        crate::client::fluent_builders::DescribeCustomRoutingListener::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DescribeEndpointGroup`](crate::client::fluent_builders::DescribeEndpointGroup) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`endpoint_group_arn(impl Into<String>)`](crate::client::fluent_builders::DescribeEndpointGroup::endpoint_group_arn) / [`set_endpoint_group_arn(Option<String>)`](crate::client::fluent_builders::DescribeEndpointGroup::set_endpoint_group_arn): <p>The Amazon Resource Name (ARN) of the endpoint group to describe.</p>
    /// - On success, responds with [`DescribeEndpointGroupOutput`](crate::output::DescribeEndpointGroupOutput) with field(s):
    ///   - [`endpoint_group(Option<EndpointGroup>)`](crate::output::DescribeEndpointGroupOutput::endpoint_group): <p>The description of an endpoint group.</p>
    /// - On failure, responds with [`SdkError<DescribeEndpointGroupError>`](crate::error::DescribeEndpointGroupError)
    pub fn describe_endpoint_group(&self) -> crate::client::fluent_builders::DescribeEndpointGroup {
        crate::client::fluent_builders::DescribeEndpointGroup::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DescribeListener`](crate::client::fluent_builders::DescribeListener) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`listener_arn(impl Into<String>)`](crate::client::fluent_builders::DescribeListener::listener_arn) / [`set_listener_arn(Option<String>)`](crate::client::fluent_builders::DescribeListener::set_listener_arn): <p>The Amazon Resource Name (ARN) of the listener to describe.</p>
    /// - On success, responds with [`DescribeListenerOutput`](crate::output::DescribeListenerOutput) with field(s):
    ///   - [`listener(Option<Listener>)`](crate::output::DescribeListenerOutput::listener): <p>The description of a listener.</p>
    /// - On failure, responds with [`SdkError<DescribeListenerError>`](crate::error::DescribeListenerError)
    pub fn describe_listener(&self) -> crate::client::fluent_builders::DescribeListener {
        crate::client::fluent_builders::DescribeListener::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListAccelerators`](crate::client::fluent_builders::ListAccelerators) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListAccelerators::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListAccelerators::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListAccelerators::set_max_results): <p>The number of Global Accelerator objects that you want to return with this call. The default value is 10.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListAccelerators::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListAccelerators::set_next_token): <p>The token for the next set of results. You receive this token from a previous call.</p>
    /// - On success, responds with [`ListAcceleratorsOutput`](crate::output::ListAcceleratorsOutput) with field(s):
    ///   - [`accelerators(Option<Vec<Accelerator>>)`](crate::output::ListAcceleratorsOutput::accelerators): <p>The list of accelerators for a customer account.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListAcceleratorsOutput::next_token): <p>The token for the next set of results. You receive this token from a previous call.</p>
    /// - On failure, responds with [`SdkError<ListAcceleratorsError>`](crate::error::ListAcceleratorsError)
    pub fn list_accelerators(&self) -> crate::client::fluent_builders::ListAccelerators {
        crate::client::fluent_builders::ListAccelerators::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListByoipCidrs`](crate::client::fluent_builders::ListByoipCidrs) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListByoipCidrs::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListByoipCidrs::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListByoipCidrs::set_max_results): <p>The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListByoipCidrs::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListByoipCidrs::set_next_token): <p>The token for the next page of results.</p>
    /// - On success, responds with [`ListByoipCidrsOutput`](crate::output::ListByoipCidrsOutput) with field(s):
    ///   - [`byoip_cidrs(Option<Vec<ByoipCidr>>)`](crate::output::ListByoipCidrsOutput::byoip_cidrs): <p>Information about your address ranges.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListByoipCidrsOutput::next_token): <p>The token for the next page of results.</p>
    /// - On failure, responds with [`SdkError<ListByoipCidrsError>`](crate::error::ListByoipCidrsError)
    pub fn list_byoip_cidrs(&self) -> crate::client::fluent_builders::ListByoipCidrs {
        crate::client::fluent_builders::ListByoipCidrs::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListCustomRoutingAccelerators`](crate::client::fluent_builders::ListCustomRoutingAccelerators) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListCustomRoutingAccelerators::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListCustomRoutingAccelerators::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListCustomRoutingAccelerators::set_max_results): <p>The number of custom routing Global Accelerator objects that you want to return with this call. The default value is 10.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListCustomRoutingAccelerators::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListCustomRoutingAccelerators::set_next_token): <p>The token for the next set of results. You receive this token from a previous call.</p>
    /// - On success, responds with [`ListCustomRoutingAcceleratorsOutput`](crate::output::ListCustomRoutingAcceleratorsOutput) with field(s):
    ///   - [`accelerators(Option<Vec<CustomRoutingAccelerator>>)`](crate::output::ListCustomRoutingAcceleratorsOutput::accelerators): <p>The list of custom routing accelerators for a customer account.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListCustomRoutingAcceleratorsOutput::next_token): <p>The token for the next set of results. You receive this token from a previous call.</p>
    /// - On failure, responds with [`SdkError<ListCustomRoutingAcceleratorsError>`](crate::error::ListCustomRoutingAcceleratorsError)
    pub fn list_custom_routing_accelerators(
        &self,
    ) -> crate::client::fluent_builders::ListCustomRoutingAccelerators {
        crate::client::fluent_builders::ListCustomRoutingAccelerators::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListCustomRoutingEndpointGroups`](crate::client::fluent_builders::ListCustomRoutingEndpointGroups) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListCustomRoutingEndpointGroups::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`listener_arn(impl Into<String>)`](crate::client::fluent_builders::ListCustomRoutingEndpointGroups::listener_arn) / [`set_listener_arn(Option<String>)`](crate::client::fluent_builders::ListCustomRoutingEndpointGroups::set_listener_arn): <p>The Amazon Resource Name (ARN) of the listener to list endpoint groups for.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListCustomRoutingEndpointGroups::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListCustomRoutingEndpointGroups::set_max_results): <p>The number of endpoint group objects that you want to return with this call. The default value is 10.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListCustomRoutingEndpointGroups::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListCustomRoutingEndpointGroups::set_next_token): <p>The token for the next set of results. You receive this token from a previous call.</p>
    /// - On success, responds with [`ListCustomRoutingEndpointGroupsOutput`](crate::output::ListCustomRoutingEndpointGroupsOutput) with field(s):
    ///   - [`endpoint_groups(Option<Vec<CustomRoutingEndpointGroup>>)`](crate::output::ListCustomRoutingEndpointGroupsOutput::endpoint_groups): <p>The list of the endpoint groups associated with a listener for a custom routing accelerator.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListCustomRoutingEndpointGroupsOutput::next_token): <p>The token for the next set of results. You receive this token from a previous call.</p>
    /// - On failure, responds with [`SdkError<ListCustomRoutingEndpointGroupsError>`](crate::error::ListCustomRoutingEndpointGroupsError)
    pub fn list_custom_routing_endpoint_groups(
        &self,
    ) -> crate::client::fluent_builders::ListCustomRoutingEndpointGroups {
        crate::client::fluent_builders::ListCustomRoutingEndpointGroups::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListCustomRoutingListeners`](crate::client::fluent_builders::ListCustomRoutingListeners) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListCustomRoutingListeners::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`accelerator_arn(impl Into<String>)`](crate::client::fluent_builders::ListCustomRoutingListeners::accelerator_arn) / [`set_accelerator_arn(Option<String>)`](crate::client::fluent_builders::ListCustomRoutingListeners::set_accelerator_arn): <p>The Amazon Resource Name (ARN) of the accelerator to list listeners for.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListCustomRoutingListeners::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListCustomRoutingListeners::set_max_results): <p>The number of listener objects that you want to return with this call. The default value is 10.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListCustomRoutingListeners::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListCustomRoutingListeners::set_next_token): <p>The token for the next set of results. You receive this token from a previous call.</p>
    /// - On success, responds with [`ListCustomRoutingListenersOutput`](crate::output::ListCustomRoutingListenersOutput) with field(s):
    ///   - [`listeners(Option<Vec<CustomRoutingListener>>)`](crate::output::ListCustomRoutingListenersOutput::listeners): <p>The list of listeners for a custom routing accelerator.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListCustomRoutingListenersOutput::next_token): <p>The token for the next set of results. You receive this token from a previous call.</p>
    /// - On failure, responds with [`SdkError<ListCustomRoutingListenersError>`](crate::error::ListCustomRoutingListenersError)
    pub fn list_custom_routing_listeners(
        &self,
    ) -> crate::client::fluent_builders::ListCustomRoutingListeners {
        crate::client::fluent_builders::ListCustomRoutingListeners::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListCustomRoutingPortMappings`](crate::client::fluent_builders::ListCustomRoutingPortMappings) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListCustomRoutingPortMappings::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`accelerator_arn(impl Into<String>)`](crate::client::fluent_builders::ListCustomRoutingPortMappings::accelerator_arn) / [`set_accelerator_arn(Option<String>)`](crate::client::fluent_builders::ListCustomRoutingPortMappings::set_accelerator_arn): <p>The Amazon Resource Name (ARN) of the accelerator to list the custom routing port mappings for.</p>
    ///   - [`endpoint_group_arn(impl Into<String>)`](crate::client::fluent_builders::ListCustomRoutingPortMappings::endpoint_group_arn) / [`set_endpoint_group_arn(Option<String>)`](crate::client::fluent_builders::ListCustomRoutingPortMappings::set_endpoint_group_arn): <p>The Amazon Resource Name (ARN) of the endpoint group to list the custom routing port mappings for.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListCustomRoutingPortMappings::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListCustomRoutingPortMappings::set_max_results): <p>The number of destination port mappings that you want to return with this call. The default value is 10.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListCustomRoutingPortMappings::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListCustomRoutingPortMappings::set_next_token): <p>The token for the next set of results. You receive this token from a previous call.</p>
    /// - On success, responds with [`ListCustomRoutingPortMappingsOutput`](crate::output::ListCustomRoutingPortMappingsOutput) with field(s):
    ///   - [`port_mappings(Option<Vec<PortMapping>>)`](crate::output::ListCustomRoutingPortMappingsOutput::port_mappings): <p>The port mappings for a custom routing accelerator.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListCustomRoutingPortMappingsOutput::next_token): <p>The token for the next set of results. You receive this token from a previous call.</p>
    /// - On failure, responds with [`SdkError<ListCustomRoutingPortMappingsError>`](crate::error::ListCustomRoutingPortMappingsError)
    pub fn list_custom_routing_port_mappings(
        &self,
    ) -> crate::client::fluent_builders::ListCustomRoutingPortMappings {
        crate::client::fluent_builders::ListCustomRoutingPortMappings::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListCustomRoutingPortMappingsByDestination`](crate::client::fluent_builders::ListCustomRoutingPortMappingsByDestination) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListCustomRoutingPortMappingsByDestination::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`endpoint_id(impl Into<String>)`](crate::client::fluent_builders::ListCustomRoutingPortMappingsByDestination::endpoint_id) / [`set_endpoint_id(Option<String>)`](crate::client::fluent_builders::ListCustomRoutingPortMappingsByDestination::set_endpoint_id): <p>The ID for the virtual private cloud (VPC) subnet.</p>
    ///   - [`destination_address(impl Into<String>)`](crate::client::fluent_builders::ListCustomRoutingPortMappingsByDestination::destination_address) / [`set_destination_address(Option<String>)`](crate::client::fluent_builders::ListCustomRoutingPortMappingsByDestination::set_destination_address): <p>The endpoint IP address in a virtual private cloud (VPC) subnet for which you want to receive back port mappings.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListCustomRoutingPortMappingsByDestination::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListCustomRoutingPortMappingsByDestination::set_max_results): <p>The number of destination port mappings that you want to return with this call. The default value is 10.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListCustomRoutingPortMappingsByDestination::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListCustomRoutingPortMappingsByDestination::set_next_token): <p>The token for the next set of results. You receive this token from a previous call.</p>
    /// - On success, responds with [`ListCustomRoutingPortMappingsByDestinationOutput`](crate::output::ListCustomRoutingPortMappingsByDestinationOutput) with field(s):
    ///   - [`destination_port_mappings(Option<Vec<DestinationPortMapping>>)`](crate::output::ListCustomRoutingPortMappingsByDestinationOutput::destination_port_mappings): <p>The port mappings for the endpoint IP address that you specified in the request.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListCustomRoutingPortMappingsByDestinationOutput::next_token): <p>The token for the next set of results. You receive this token from a previous call.</p>
    /// - On failure, responds with [`SdkError<ListCustomRoutingPortMappingsByDestinationError>`](crate::error::ListCustomRoutingPortMappingsByDestinationError)
    pub fn list_custom_routing_port_mappings_by_destination(
        &self,
    ) -> crate::client::fluent_builders::ListCustomRoutingPortMappingsByDestination {
        crate::client::fluent_builders::ListCustomRoutingPortMappingsByDestination::new(
            self.handle.clone(),
        )
    }
    /// Constructs a fluent builder for the [`ListEndpointGroups`](crate::client::fluent_builders::ListEndpointGroups) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListEndpointGroups::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`listener_arn(impl Into<String>)`](crate::client::fluent_builders::ListEndpointGroups::listener_arn) / [`set_listener_arn(Option<String>)`](crate::client::fluent_builders::ListEndpointGroups::set_listener_arn): <p>The Amazon Resource Name (ARN) of the listener.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListEndpointGroups::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListEndpointGroups::set_max_results): <p>The number of endpoint group objects that you want to return with this call. The default value is 10.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListEndpointGroups::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListEndpointGroups::set_next_token): <p>The token for the next set of results. You receive this token from a previous call.</p>
    /// - On success, responds with [`ListEndpointGroupsOutput`](crate::output::ListEndpointGroupsOutput) with field(s):
    ///   - [`endpoint_groups(Option<Vec<EndpointGroup>>)`](crate::output::ListEndpointGroupsOutput::endpoint_groups): <p>The list of the endpoint groups associated with a listener.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListEndpointGroupsOutput::next_token): <p>The token for the next set of results. You receive this token from a previous call.</p>
    /// - On failure, responds with [`SdkError<ListEndpointGroupsError>`](crate::error::ListEndpointGroupsError)
    pub fn list_endpoint_groups(&self) -> crate::client::fluent_builders::ListEndpointGroups {
        crate::client::fluent_builders::ListEndpointGroups::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListListeners`](crate::client::fluent_builders::ListListeners) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListListeners::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`accelerator_arn(impl Into<String>)`](crate::client::fluent_builders::ListListeners::accelerator_arn) / [`set_accelerator_arn(Option<String>)`](crate::client::fluent_builders::ListListeners::set_accelerator_arn): <p>The Amazon Resource Name (ARN) of the accelerator for which you want to list listener objects.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListListeners::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListListeners::set_max_results): <p>The number of listener objects that you want to return with this call. The default value is 10.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListListeners::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListListeners::set_next_token): <p>The token for the next set of results. You receive this token from a previous call.</p>
    /// - On success, responds with [`ListListenersOutput`](crate::output::ListListenersOutput) with field(s):
    ///   - [`listeners(Option<Vec<Listener>>)`](crate::output::ListListenersOutput::listeners): <p>The list of listeners for an accelerator.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListListenersOutput::next_token): <p>The token for the next set of results. You receive this token from a previous call.</p>
    /// - On failure, responds with [`SdkError<ListListenersError>`](crate::error::ListListenersError)
    pub fn list_listeners(&self) -> crate::client::fluent_builders::ListListeners {
        crate::client::fluent_builders::ListListeners::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListTagsForResource`](crate::client::fluent_builders::ListTagsForResource) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`resource_arn(impl Into<String>)`](crate::client::fluent_builders::ListTagsForResource::resource_arn) / [`set_resource_arn(Option<String>)`](crate::client::fluent_builders::ListTagsForResource::set_resource_arn): <p>The Amazon Resource Name (ARN) of the accelerator to list tags for. An ARN uniquely identifies an accelerator.</p>
    /// - On success, responds with [`ListTagsForResourceOutput`](crate::output::ListTagsForResourceOutput) with field(s):
    ///   - [`tags(Option<Vec<Tag>>)`](crate::output::ListTagsForResourceOutput::tags): <p>Root level tag for the Tags parameters.</p>
    /// - On failure, responds with [`SdkError<ListTagsForResourceError>`](crate::error::ListTagsForResourceError)
    pub fn list_tags_for_resource(&self) -> crate::client::fluent_builders::ListTagsForResource {
        crate::client::fluent_builders::ListTagsForResource::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ProvisionByoipCidr`](crate::client::fluent_builders::ProvisionByoipCidr) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`cidr(impl Into<String>)`](crate::client::fluent_builders::ProvisionByoipCidr::cidr) / [`set_cidr(Option<String>)`](crate::client::fluent_builders::ProvisionByoipCidr::set_cidr): <p>The public IPv4 address range, in CIDR notation. The most specific IP prefix that you can specify is /24. The address range cannot overlap with another address range that you've brought to this or another Region.</p>
    ///   - [`cidr_authorization_context(CidrAuthorizationContext)`](crate::client::fluent_builders::ProvisionByoipCidr::cidr_authorization_context) / [`set_cidr_authorization_context(Option<CidrAuthorizationContext>)`](crate::client::fluent_builders::ProvisionByoipCidr::set_cidr_authorization_context): <p>A signed document that proves that you are authorized to bring the specified IP address range to Amazon using BYOIP. </p>
    /// - On success, responds with [`ProvisionByoipCidrOutput`](crate::output::ProvisionByoipCidrOutput) with field(s):
    ///   - [`byoip_cidr(Option<ByoipCidr>)`](crate::output::ProvisionByoipCidrOutput::byoip_cidr): <p>Information about the address range.</p>
    /// - On failure, responds with [`SdkError<ProvisionByoipCidrError>`](crate::error::ProvisionByoipCidrError)
    pub fn provision_byoip_cidr(&self) -> crate::client::fluent_builders::ProvisionByoipCidr {
        crate::client::fluent_builders::ProvisionByoipCidr::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`RemoveCustomRoutingEndpoints`](crate::client::fluent_builders::RemoveCustomRoutingEndpoints) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`endpoint_ids(Vec<String>)`](crate::client::fluent_builders::RemoveCustomRoutingEndpoints::endpoint_ids) / [`set_endpoint_ids(Option<Vec<String>>)`](crate::client::fluent_builders::RemoveCustomRoutingEndpoints::set_endpoint_ids): <p>The IDs for the endpoints. For custom routing accelerators, endpoint IDs are the virtual private cloud (VPC) subnet IDs. </p>
    ///   - [`endpoint_group_arn(impl Into<String>)`](crate::client::fluent_builders::RemoveCustomRoutingEndpoints::endpoint_group_arn) / [`set_endpoint_group_arn(Option<String>)`](crate::client::fluent_builders::RemoveCustomRoutingEndpoints::set_endpoint_group_arn): <p>The Amazon Resource Name (ARN) of the endpoint group to remove endpoints from.</p>
    /// - On success, responds with [`RemoveCustomRoutingEndpointsOutput`](crate::output::RemoveCustomRoutingEndpointsOutput)

    /// - On failure, responds with [`SdkError<RemoveCustomRoutingEndpointsError>`](crate::error::RemoveCustomRoutingEndpointsError)
    pub fn remove_custom_routing_endpoints(
        &self,
    ) -> crate::client::fluent_builders::RemoveCustomRoutingEndpoints {
        crate::client::fluent_builders::RemoveCustomRoutingEndpoints::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`RemoveEndpoints`](crate::client::fluent_builders::RemoveEndpoints) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`endpoint_identifiers(Vec<EndpointIdentifier>)`](crate::client::fluent_builders::RemoveEndpoints::endpoint_identifiers) / [`set_endpoint_identifiers(Option<Vec<EndpointIdentifier>>)`](crate::client::fluent_builders::RemoveEndpoints::set_endpoint_identifiers): <p>The identifiers of the endpoints that you want to remove.</p>
    ///   - [`endpoint_group_arn(impl Into<String>)`](crate::client::fluent_builders::RemoveEndpoints::endpoint_group_arn) / [`set_endpoint_group_arn(Option<String>)`](crate::client::fluent_builders::RemoveEndpoints::set_endpoint_group_arn): <p>The Amazon Resource Name (ARN) of the endpoint group.</p>
    /// - On success, responds with [`RemoveEndpointsOutput`](crate::output::RemoveEndpointsOutput)

    /// - On failure, responds with [`SdkError<RemoveEndpointsError>`](crate::error::RemoveEndpointsError)
    pub fn remove_endpoints(&self) -> crate::client::fluent_builders::RemoveEndpoints {
        crate::client::fluent_builders::RemoveEndpoints::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`TagResource`](crate::client::fluent_builders::TagResource) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`resource_arn(impl Into<String>)`](crate::client::fluent_builders::TagResource::resource_arn) / [`set_resource_arn(Option<String>)`](crate::client::fluent_builders::TagResource::set_resource_arn): <p>The Amazon Resource Name (ARN) of the Global Accelerator resource to add tags to. An ARN uniquely identifies a resource.</p>
    ///   - [`tags(Vec<Tag>)`](crate::client::fluent_builders::TagResource::tags) / [`set_tags(Option<Vec<Tag>>)`](crate::client::fluent_builders::TagResource::set_tags): <p>The tags to add to a resource. A tag consists of a key and a value that you define.</p>
    /// - On success, responds with [`TagResourceOutput`](crate::output::TagResourceOutput)

    /// - On failure, responds with [`SdkError<TagResourceError>`](crate::error::TagResourceError)
    pub fn tag_resource(&self) -> crate::client::fluent_builders::TagResource {
        crate::client::fluent_builders::TagResource::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`UntagResource`](crate::client::fluent_builders::UntagResource) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`resource_arn(impl Into<String>)`](crate::client::fluent_builders::UntagResource::resource_arn) / [`set_resource_arn(Option<String>)`](crate::client::fluent_builders::UntagResource::set_resource_arn): <p>The Amazon Resource Name (ARN) of the Global Accelerator resource to remove tags from. An ARN uniquely identifies a resource.</p>
    ///   - [`tag_keys(Vec<String>)`](crate::client::fluent_builders::UntagResource::tag_keys) / [`set_tag_keys(Option<Vec<String>>)`](crate::client::fluent_builders::UntagResource::set_tag_keys): <p>The tag key pairs that you want to remove from the specified resources.</p>
    /// - On success, responds with [`UntagResourceOutput`](crate::output::UntagResourceOutput)

    /// - On failure, responds with [`SdkError<UntagResourceError>`](crate::error::UntagResourceError)
    pub fn untag_resource(&self) -> crate::client::fluent_builders::UntagResource {
        crate::client::fluent_builders::UntagResource::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`UpdateAccelerator`](crate::client::fluent_builders::UpdateAccelerator) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`accelerator_arn(impl Into<String>)`](crate::client::fluent_builders::UpdateAccelerator::accelerator_arn) / [`set_accelerator_arn(Option<String>)`](crate::client::fluent_builders::UpdateAccelerator::set_accelerator_arn): <p>The Amazon Resource Name (ARN) of the accelerator to update.</p>
    ///   - [`name(impl Into<String>)`](crate::client::fluent_builders::UpdateAccelerator::name) / [`set_name(Option<String>)`](crate::client::fluent_builders::UpdateAccelerator::set_name): <p>The name of the accelerator. The name can have a maximum of 64 characters, must contain only alphanumeric characters, periods (.), or hyphens (-), and must not begin or end with a hyphen or period.</p>
    ///   - [`ip_address_type(IpAddressType)`](crate::client::fluent_builders::UpdateAccelerator::ip_address_type) / [`set_ip_address_type(Option<IpAddressType>)`](crate::client::fluent_builders::UpdateAccelerator::set_ip_address_type): <p>The IP address type that an accelerator supports. For a standard accelerator, the value can be IPV4 or DUAL_STACK.</p>
    ///   - [`enabled(bool)`](crate::client::fluent_builders::UpdateAccelerator::enabled) / [`set_enabled(Option<bool>)`](crate::client::fluent_builders::UpdateAccelerator::set_enabled): <p>Indicates whether an accelerator is enabled. The value is true or false. The default value is true. </p>  <p>If the value is set to true, the accelerator cannot be deleted. If set to false, the accelerator can be deleted.</p>
    /// - On success, responds with [`UpdateAcceleratorOutput`](crate::output::UpdateAcceleratorOutput) with field(s):
    ///   - [`accelerator(Option<Accelerator>)`](crate::output::UpdateAcceleratorOutput::accelerator): <p>Information about the updated accelerator.</p>
    /// - On failure, responds with [`SdkError<UpdateAcceleratorError>`](crate::error::UpdateAcceleratorError)
    pub fn update_accelerator(&self) -> crate::client::fluent_builders::UpdateAccelerator {
        crate::client::fluent_builders::UpdateAccelerator::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`UpdateAcceleratorAttributes`](crate::client::fluent_builders::UpdateAcceleratorAttributes) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`accelerator_arn(impl Into<String>)`](crate::client::fluent_builders::UpdateAcceleratorAttributes::accelerator_arn) / [`set_accelerator_arn(Option<String>)`](crate::client::fluent_builders::UpdateAcceleratorAttributes::set_accelerator_arn): <p>The Amazon Resource Name (ARN) of the accelerator that you want to update.</p>
    ///   - [`flow_logs_enabled(bool)`](crate::client::fluent_builders::UpdateAcceleratorAttributes::flow_logs_enabled) / [`set_flow_logs_enabled(Option<bool>)`](crate::client::fluent_builders::UpdateAcceleratorAttributes::set_flow_logs_enabled): <p>Update whether flow logs are enabled. The default value is false. If the value is true, <code>FlowLogsS3Bucket</code> and <code>FlowLogsS3Prefix</code> must be specified.</p>  <p>For more information, see <a href="https://docs.aws.amazon.com/global-accelerator/latest/dg/monitoring-global-accelerator.flow-logs.html">Flow Logs</a> in the <i>Global Accelerator Developer Guide</i>.</p>
    ///   - [`flow_logs_s3_bucket(impl Into<String>)`](crate::client::fluent_builders::UpdateAcceleratorAttributes::flow_logs_s3_bucket) / [`set_flow_logs_s3_bucket(Option<String>)`](crate::client::fluent_builders::UpdateAcceleratorAttributes::set_flow_logs_s3_bucket): <p>The name of the Amazon S3 bucket for the flow logs. Attribute is required if <code>FlowLogsEnabled</code> is <code>true</code>. The bucket must exist and have a bucket policy that grants Global Accelerator permission to write to the bucket.</p>
    ///   - [`flow_logs_s3_prefix(impl Into<String>)`](crate::client::fluent_builders::UpdateAcceleratorAttributes::flow_logs_s3_prefix) / [`set_flow_logs_s3_prefix(Option<String>)`](crate::client::fluent_builders::UpdateAcceleratorAttributes::set_flow_logs_s3_prefix): <p>Update the prefix for the location in the Amazon S3 bucket for the flow logs. Attribute is required if <code>FlowLogsEnabled</code> is <code>true</code>. </p>  <p>If you specify slash (/) for the S3 bucket prefix, the log file bucket folder structure will include a double slash (//), like the following:</p>  <p>s3-bucket_name//AWSLogs/aws_account_id</p>
    /// - On success, responds with [`UpdateAcceleratorAttributesOutput`](crate::output::UpdateAcceleratorAttributesOutput) with field(s):
    ///   - [`accelerator_attributes(Option<AcceleratorAttributes>)`](crate::output::UpdateAcceleratorAttributesOutput::accelerator_attributes): <p>Updated attributes for the accelerator.</p>
    /// - On failure, responds with [`SdkError<UpdateAcceleratorAttributesError>`](crate::error::UpdateAcceleratorAttributesError)
    pub fn update_accelerator_attributes(
        &self,
    ) -> crate::client::fluent_builders::UpdateAcceleratorAttributes {
        crate::client::fluent_builders::UpdateAcceleratorAttributes::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`UpdateCustomRoutingAccelerator`](crate::client::fluent_builders::UpdateCustomRoutingAccelerator) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`accelerator_arn(impl Into<String>)`](crate::client::fluent_builders::UpdateCustomRoutingAccelerator::accelerator_arn) / [`set_accelerator_arn(Option<String>)`](crate::client::fluent_builders::UpdateCustomRoutingAccelerator::set_accelerator_arn): <p>The Amazon Resource Name (ARN) of the accelerator to update.</p>
    ///   - [`name(impl Into<String>)`](crate::client::fluent_builders::UpdateCustomRoutingAccelerator::name) / [`set_name(Option<String>)`](crate::client::fluent_builders::UpdateCustomRoutingAccelerator::set_name): <p>The name of the accelerator. The name can have a maximum of 64 characters, must contain only alphanumeric characters, periods (.), or hyphens (-), and must not begin or end with a hyphen or period.</p>
    ///   - [`ip_address_type(IpAddressType)`](crate::client::fluent_builders::UpdateCustomRoutingAccelerator::ip_address_type) / [`set_ip_address_type(Option<IpAddressType>)`](crate::client::fluent_builders::UpdateCustomRoutingAccelerator::set_ip_address_type): <p>The IP address type that an accelerator supports. For a custom routing accelerator, the value must be IPV4.</p>
    ///   - [`enabled(bool)`](crate::client::fluent_builders::UpdateCustomRoutingAccelerator::enabled) / [`set_enabled(Option<bool>)`](crate::client::fluent_builders::UpdateCustomRoutingAccelerator::set_enabled): <p>Indicates whether an accelerator is enabled. The value is true or false. The default value is true. </p>  <p>If the value is set to true, the accelerator cannot be deleted. If set to false, the accelerator can be deleted.</p>
    /// - On success, responds with [`UpdateCustomRoutingAcceleratorOutput`](crate::output::UpdateCustomRoutingAcceleratorOutput) with field(s):
    ///   - [`accelerator(Option<CustomRoutingAccelerator>)`](crate::output::UpdateCustomRoutingAcceleratorOutput::accelerator): <p>Information about the updated custom routing accelerator.</p>
    /// - On failure, responds with [`SdkError<UpdateCustomRoutingAcceleratorError>`](crate::error::UpdateCustomRoutingAcceleratorError)
    pub fn update_custom_routing_accelerator(
        &self,
    ) -> crate::client::fluent_builders::UpdateCustomRoutingAccelerator {
        crate::client::fluent_builders::UpdateCustomRoutingAccelerator::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`UpdateCustomRoutingAcceleratorAttributes`](crate::client::fluent_builders::UpdateCustomRoutingAcceleratorAttributes) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`accelerator_arn(impl Into<String>)`](crate::client::fluent_builders::UpdateCustomRoutingAcceleratorAttributes::accelerator_arn) / [`set_accelerator_arn(Option<String>)`](crate::client::fluent_builders::UpdateCustomRoutingAcceleratorAttributes::set_accelerator_arn): <p>The Amazon Resource Name (ARN) of the custom routing accelerator to update attributes for.</p>
    ///   - [`flow_logs_enabled(bool)`](crate::client::fluent_builders::UpdateCustomRoutingAcceleratorAttributes::flow_logs_enabled) / [`set_flow_logs_enabled(Option<bool>)`](crate::client::fluent_builders::UpdateCustomRoutingAcceleratorAttributes::set_flow_logs_enabled): <p>Update whether flow logs are enabled. The default value is false. If the value is true, <code>FlowLogsS3Bucket</code> and <code>FlowLogsS3Prefix</code> must be specified.</p>  <p>For more information, see <a href="https://docs.aws.amazon.com/global-accelerator/latest/dg/monitoring-global-accelerator.flow-logs.html">Flow logs</a> in the <i>Global Accelerator Developer Guide</i>.</p>
    ///   - [`flow_logs_s3_bucket(impl Into<String>)`](crate::client::fluent_builders::UpdateCustomRoutingAcceleratorAttributes::flow_logs_s3_bucket) / [`set_flow_logs_s3_bucket(Option<String>)`](crate::client::fluent_builders::UpdateCustomRoutingAcceleratorAttributes::set_flow_logs_s3_bucket): <p>The name of the Amazon S3 bucket for the flow logs. Attribute is required if <code>FlowLogsEnabled</code> is <code>true</code>. The bucket must exist and have a bucket policy that grants Global Accelerator permission to write to the bucket.</p>
    ///   - [`flow_logs_s3_prefix(impl Into<String>)`](crate::client::fluent_builders::UpdateCustomRoutingAcceleratorAttributes::flow_logs_s3_prefix) / [`set_flow_logs_s3_prefix(Option<String>)`](crate::client::fluent_builders::UpdateCustomRoutingAcceleratorAttributes::set_flow_logs_s3_prefix): <p>Update the prefix for the location in the Amazon S3 bucket for the flow logs. Attribute is required if <code>FlowLogsEnabled</code> is <code>true</code>. </p>  <p>If you don’t specify a prefix, the flow logs are stored in the root of the bucket. If you specify slash (/) for the S3 bucket prefix, the log file bucket folder structure will include a double slash (//), like the following:</p>  <p>DOC-EXAMPLE-BUCKET//AWSLogs/aws_account_id</p>
    /// - On success, responds with [`UpdateCustomRoutingAcceleratorAttributesOutput`](crate::output::UpdateCustomRoutingAcceleratorAttributesOutput) with field(s):
    ///   - [`accelerator_attributes(Option<CustomRoutingAcceleratorAttributes>)`](crate::output::UpdateCustomRoutingAcceleratorAttributesOutput::accelerator_attributes): <p>Updated custom routing accelerator.</p>
    /// - On failure, responds with [`SdkError<UpdateCustomRoutingAcceleratorAttributesError>`](crate::error::UpdateCustomRoutingAcceleratorAttributesError)
    pub fn update_custom_routing_accelerator_attributes(
        &self,
    ) -> crate::client::fluent_builders::UpdateCustomRoutingAcceleratorAttributes {
        crate::client::fluent_builders::UpdateCustomRoutingAcceleratorAttributes::new(
            self.handle.clone(),
        )
    }
    /// Constructs a fluent builder for the [`UpdateCustomRoutingListener`](crate::client::fluent_builders::UpdateCustomRoutingListener) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`listener_arn(impl Into<String>)`](crate::client::fluent_builders::UpdateCustomRoutingListener::listener_arn) / [`set_listener_arn(Option<String>)`](crate::client::fluent_builders::UpdateCustomRoutingListener::set_listener_arn): <p>The Amazon Resource Name (ARN) of the listener to update.</p>
    ///   - [`port_ranges(Vec<PortRange>)`](crate::client::fluent_builders::UpdateCustomRoutingListener::port_ranges) / [`set_port_ranges(Option<Vec<PortRange>>)`](crate::client::fluent_builders::UpdateCustomRoutingListener::set_port_ranges): <p>The updated port range to support for connections from clients to your accelerator. If you remove ports that are currently being used by a subnet endpoint, the call fails.</p>  <p>Separately, you set port ranges for endpoints. For more information, see <a href="https://docs.aws.amazon.com/global-accelerator/latest/dg/about-custom-routing-endpoints.html">About endpoints for custom routing accelerators</a>.</p>
    /// - On success, responds with [`UpdateCustomRoutingListenerOutput`](crate::output::UpdateCustomRoutingListenerOutput) with field(s):
    ///   - [`listener(Option<CustomRoutingListener>)`](crate::output::UpdateCustomRoutingListenerOutput::listener): <p>Information for the updated listener for a custom routing accelerator.</p>
    /// - On failure, responds with [`SdkError<UpdateCustomRoutingListenerError>`](crate::error::UpdateCustomRoutingListenerError)
    pub fn update_custom_routing_listener(
        &self,
    ) -> crate::client::fluent_builders::UpdateCustomRoutingListener {
        crate::client::fluent_builders::UpdateCustomRoutingListener::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`UpdateEndpointGroup`](crate::client::fluent_builders::UpdateEndpointGroup) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`endpoint_group_arn(impl Into<String>)`](crate::client::fluent_builders::UpdateEndpointGroup::endpoint_group_arn) / [`set_endpoint_group_arn(Option<String>)`](crate::client::fluent_builders::UpdateEndpointGroup::set_endpoint_group_arn): <p>The Amazon Resource Name (ARN) of the endpoint group.</p>
    ///   - [`endpoint_configurations(Vec<EndpointConfiguration>)`](crate::client::fluent_builders::UpdateEndpointGroup::endpoint_configurations) / [`set_endpoint_configurations(Option<Vec<EndpointConfiguration>>)`](crate::client::fluent_builders::UpdateEndpointGroup::set_endpoint_configurations): <p>The list of endpoint objects. A resource must be valid and active when you add it as an endpoint.</p>
    ///   - [`traffic_dial_percentage(f32)`](crate::client::fluent_builders::UpdateEndpointGroup::traffic_dial_percentage) / [`set_traffic_dial_percentage(Option<f32>)`](crate::client::fluent_builders::UpdateEndpointGroup::set_traffic_dial_percentage): <p>The percentage of traffic to send to an Amazon Web Services Region. Additional traffic is distributed to other endpoint groups for this listener. </p>  <p>Use this action to increase (dial up) or decrease (dial down) traffic to a specific Region. The percentage is applied to the traffic that would otherwise have been routed to the Region based on optimal routing.</p>  <p>The default value is 100.</p>
    ///   - [`health_check_port(i32)`](crate::client::fluent_builders::UpdateEndpointGroup::health_check_port) / [`set_health_check_port(Option<i32>)`](crate::client::fluent_builders::UpdateEndpointGroup::set_health_check_port): <p>The port that Global Accelerator uses to check the health of endpoints that are part of this endpoint group. The default port is the listener port that this endpoint group is associated with. If the listener port is a list of ports, Global Accelerator uses the first port in the list.</p>
    ///   - [`health_check_protocol(HealthCheckProtocol)`](crate::client::fluent_builders::UpdateEndpointGroup::health_check_protocol) / [`set_health_check_protocol(Option<HealthCheckProtocol>)`](crate::client::fluent_builders::UpdateEndpointGroup::set_health_check_protocol): <p>The protocol that Global Accelerator uses to check the health of endpoints that are part of this endpoint group. The default value is TCP.</p>
    ///   - [`health_check_path(impl Into<String>)`](crate::client::fluent_builders::UpdateEndpointGroup::health_check_path) / [`set_health_check_path(Option<String>)`](crate::client::fluent_builders::UpdateEndpointGroup::set_health_check_path): <p>If the protocol is HTTP/S, then this specifies the path that is the destination for health check targets. The default value is slash (/).</p>
    ///   - [`health_check_interval_seconds(i32)`](crate::client::fluent_builders::UpdateEndpointGroup::health_check_interval_seconds) / [`set_health_check_interval_seconds(Option<i32>)`](crate::client::fluent_builders::UpdateEndpointGroup::set_health_check_interval_seconds): <p>The time—10 seconds or 30 seconds—between each health check for an endpoint. The default value is 30.</p>
    ///   - [`threshold_count(i32)`](crate::client::fluent_builders::UpdateEndpointGroup::threshold_count) / [`set_threshold_count(Option<i32>)`](crate::client::fluent_builders::UpdateEndpointGroup::set_threshold_count): <p>The number of consecutive health checks required to set the state of a healthy endpoint to unhealthy, or to set an unhealthy endpoint to healthy. The default value is 3.</p>
    ///   - [`port_overrides(Vec<PortOverride>)`](crate::client::fluent_builders::UpdateEndpointGroup::port_overrides) / [`set_port_overrides(Option<Vec<PortOverride>>)`](crate::client::fluent_builders::UpdateEndpointGroup::set_port_overrides): <p>Override specific listener ports used to route traffic to endpoints that are part of this endpoint group. For example, you can create a port override in which the listener receives user traffic on ports 80 and 443, but your accelerator routes that traffic to ports 1080 and 1443, respectively, on the endpoints.</p>  <p>For more information, see <a href="https://docs.aws.amazon.com/global-accelerator/latest/dg/about-endpoint-groups-port-override.html"> Overriding listener ports</a> in the <i>Global Accelerator Developer Guide</i>.</p>
    /// - On success, responds with [`UpdateEndpointGroupOutput`](crate::output::UpdateEndpointGroupOutput) with field(s):
    ///   - [`endpoint_group(Option<EndpointGroup>)`](crate::output::UpdateEndpointGroupOutput::endpoint_group): <p>The information about the endpoint group that was updated.</p>
    /// - On failure, responds with [`SdkError<UpdateEndpointGroupError>`](crate::error::UpdateEndpointGroupError)
    pub fn update_endpoint_group(&self) -> crate::client::fluent_builders::UpdateEndpointGroup {
        crate::client::fluent_builders::UpdateEndpointGroup::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`UpdateListener`](crate::client::fluent_builders::UpdateListener) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`listener_arn(impl Into<String>)`](crate::client::fluent_builders::UpdateListener::listener_arn) / [`set_listener_arn(Option<String>)`](crate::client::fluent_builders::UpdateListener::set_listener_arn): <p>The Amazon Resource Name (ARN) of the listener to update.</p>
    ///   - [`port_ranges(Vec<PortRange>)`](crate::client::fluent_builders::UpdateListener::port_ranges) / [`set_port_ranges(Option<Vec<PortRange>>)`](crate::client::fluent_builders::UpdateListener::set_port_ranges): <p>The updated list of port ranges for the connections from clients to the accelerator.</p>
    ///   - [`protocol(Protocol)`](crate::client::fluent_builders::UpdateListener::protocol) / [`set_protocol(Option<Protocol>)`](crate::client::fluent_builders::UpdateListener::set_protocol): <p>The updated protocol for the connections from clients to the accelerator.</p>
    ///   - [`client_affinity(ClientAffinity)`](crate::client::fluent_builders::UpdateListener::client_affinity) / [`set_client_affinity(Option<ClientAffinity>)`](crate::client::fluent_builders::UpdateListener::set_client_affinity): <p>Client affinity lets you direct all requests from a user to the same endpoint, if you have stateful applications, regardless of the port and protocol of the client request. Client affinity gives you control over whether to always route each client to the same specific endpoint.</p>  <p>Global Accelerator uses a consistent-flow hashing algorithm to choose the optimal endpoint for a connection. If client affinity is <code>NONE</code>, Global Accelerator uses the "five-tuple" (5-tuple) properties—source IP address, source port, destination IP address, destination port, and protocol—to select the hash value, and then chooses the best endpoint. However, with this setting, if someone uses different ports to connect to Global Accelerator, their connections might not be always routed to the same endpoint because the hash value changes. </p>  <p>If you want a given client to always be routed to the same endpoint, set client affinity to <code>SOURCE_IP</code> instead. When you use the <code>SOURCE_IP</code> setting, Global Accelerator uses the "two-tuple" (2-tuple) properties— source (client) IP address and destination IP address—to select the hash value.</p>  <p>The default value is <code>NONE</code>.</p>
    /// - On success, responds with [`UpdateListenerOutput`](crate::output::UpdateListenerOutput) with field(s):
    ///   - [`listener(Option<Listener>)`](crate::output::UpdateListenerOutput::listener): <p>Information for the updated listener.</p>
    /// - On failure, responds with [`SdkError<UpdateListenerError>`](crate::error::UpdateListenerError)
    pub fn update_listener(&self) -> crate::client::fluent_builders::UpdateListener {
        crate::client::fluent_builders::UpdateListener::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`WithdrawByoipCidr`](crate::client::fluent_builders::WithdrawByoipCidr) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`cidr(impl Into<String>)`](crate::client::fluent_builders::WithdrawByoipCidr::cidr) / [`set_cidr(Option<String>)`](crate::client::fluent_builders::WithdrawByoipCidr::set_cidr): <p>The address range, in CIDR notation.</p>
    /// - On success, responds with [`WithdrawByoipCidrOutput`](crate::output::WithdrawByoipCidrOutput) with field(s):
    ///   - [`byoip_cidr(Option<ByoipCidr>)`](crate::output::WithdrawByoipCidrOutput::byoip_cidr): <p>Information about the address pool.</p>
    /// - On failure, responds with [`SdkError<WithdrawByoipCidrError>`](crate::error::WithdrawByoipCidrError)
    pub fn withdraw_byoip_cidr(&self) -> crate::client::fluent_builders::WithdrawByoipCidr {
        crate::client::fluent_builders::WithdrawByoipCidr::new(self.handle.clone())
    }
}

impl Client {
    /// Creates a new client from an [SDK Config](aws_types::sdk_config::SdkConfig).
    ///
    /// # Panics
    ///
    /// - This method will panic if the `sdk_config` is missing an async sleep implementation. If you experience this panic, set
    ///     the `sleep_impl` on the Config passed into this function to fix it.
    /// - This method will panic if the `sdk_config` is missing an HTTP connector. If you experience this panic, set the
    ///     `http_connector` on the Config passed into this function to fix it.
    pub fn new(sdk_config: &aws_types::sdk_config::SdkConfig) -> Self {
        Self::from_conf(sdk_config.into())
    }

    /// Creates a new client from the service [`Config`](crate::Config).
    ///
    /// # Panics
    ///
    /// - This method will panic if the `conf` is missing an async sleep implementation. If you experience this panic, set
    ///     the `sleep_impl` on the Config passed into this function to fix it.
    /// - This method will panic if the `conf` is missing an HTTP connector. If you experience this panic, set the
    ///     `http_connector` on the Config passed into this function to fix it.
    pub fn from_conf(conf: crate::Config) -> Self {
        let retry_config = conf
            .retry_config()
            .cloned()
            .unwrap_or_else(aws_smithy_types::retry::RetryConfig::disabled);
        let timeout_config = conf
            .timeout_config()
            .cloned()
            .unwrap_or_else(aws_smithy_types::timeout::TimeoutConfig::disabled);
        let sleep_impl = conf.sleep_impl();
        if (retry_config.has_retry() || timeout_config.has_timeouts()) && sleep_impl.is_none() {
            panic!("An async sleep implementation is required for retries or timeouts to work. \
                                    Set the `sleep_impl` on the Config passed into this function to fix this panic.");
        }

        let connector = conf.http_connector().and_then(|c| {
            let timeout_config = conf
                .timeout_config()
                .cloned()
                .unwrap_or_else(aws_smithy_types::timeout::TimeoutConfig::disabled);
            let connector_settings =
                aws_smithy_client::http_connector::ConnectorSettings::from_timeout_config(
                    &timeout_config,
                );
            c.connector(&connector_settings, conf.sleep_impl())
        });

        let builder = aws_smithy_client::Builder::new();

        let builder = match connector {
            // Use provided connector
            Some(c) => builder.connector(c),
            None => {
                #[cfg(any(feature = "rustls", feature = "native-tls"))]
                {
                    // Use default connector based on enabled features
                    builder.dyn_https_connector(
                        aws_smithy_client::http_connector::ConnectorSettings::from_timeout_config(
                            &timeout_config,
                        ),
                    )
                }
                #[cfg(not(any(feature = "rustls", feature = "native-tls")))]
                {
                    panic!("No HTTP connector was available. Enable the `rustls` or `native-tls` crate feature or set a connector to fix this.");
                }
            }
        };
        let mut builder = builder
            .middleware(aws_smithy_client::erase::DynMiddleware::new(
                crate::middleware::DefaultMiddleware::new(),
            ))
            .retry_config(retry_config.into())
            .operation_timeout_config(timeout_config.into());
        builder.set_sleep_impl(sleep_impl);
        let client = builder.build();

        Self {
            handle: std::sync::Arc::new(Handle { client, conf }),
        }
    }
}

/// Utilities to ergonomically construct a request to the service.
///
/// Fluent builders are created through the [`Client`](crate::client::Client) by calling
/// one if its operation methods. After parameters are set using the builder methods,
/// the `send` method can be called to initiate the request.
pub mod fluent_builders;
