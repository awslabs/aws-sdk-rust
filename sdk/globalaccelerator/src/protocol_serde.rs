// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) mod shape_add_custom_routing_endpoints;

pub fn parse_http_error_metadata(
    response: &http::Response<bytes::Bytes>,
) -> Result<
    aws_smithy_types::error::metadata::Builder,
    aws_smithy_json::deserialize::error::DeserializeError,
> {
    crate::json_errors::parse_error_metadata(response.body(), response.headers())
}

pub(crate) mod shape_add_endpoints;

pub(crate) mod shape_advertise_byoip_cidr;

pub(crate) mod shape_allow_custom_routing_traffic;

pub(crate) mod shape_create_accelerator;

pub(crate) mod shape_create_custom_routing_accelerator;

pub(crate) mod shape_create_custom_routing_endpoint_group;

pub(crate) mod shape_create_custom_routing_listener;

pub(crate) mod shape_create_endpoint_group;

pub(crate) mod shape_create_listener;

pub(crate) mod shape_delete_accelerator;

pub(crate) mod shape_delete_custom_routing_accelerator;

pub(crate) mod shape_delete_custom_routing_endpoint_group;

pub(crate) mod shape_delete_custom_routing_listener;

pub(crate) mod shape_delete_endpoint_group;

pub(crate) mod shape_delete_listener;

pub(crate) mod shape_deny_custom_routing_traffic;

pub(crate) mod shape_deprovision_byoip_cidr;

pub(crate) mod shape_describe_accelerator;

pub(crate) mod shape_describe_accelerator_attributes;

pub(crate) mod shape_describe_custom_routing_accelerator;

pub(crate) mod shape_describe_custom_routing_accelerator_attributes;

pub(crate) mod shape_describe_custom_routing_endpoint_group;

pub(crate) mod shape_describe_custom_routing_listener;

pub(crate) mod shape_describe_endpoint_group;

pub(crate) mod shape_describe_listener;

pub(crate) mod shape_list_accelerators;

pub(crate) mod shape_list_byoip_cidrs;

pub(crate) mod shape_list_custom_routing_accelerators;

pub(crate) mod shape_list_custom_routing_endpoint_groups;

pub(crate) mod shape_list_custom_routing_listeners;

pub(crate) mod shape_list_custom_routing_port_mappings;

pub(crate) mod shape_list_custom_routing_port_mappings_by_destination;

pub(crate) mod shape_list_endpoint_groups;

pub(crate) mod shape_list_listeners;

pub(crate) mod shape_list_tags_for_resource;

pub(crate) mod shape_provision_byoip_cidr;

pub(crate) mod shape_remove_custom_routing_endpoints;

pub(crate) mod shape_remove_endpoints;

pub(crate) mod shape_tag_resource;

pub(crate) mod shape_untag_resource;

pub(crate) mod shape_update_accelerator;

pub(crate) mod shape_update_accelerator_attributes;

pub(crate) mod shape_update_custom_routing_accelerator;

pub(crate) mod shape_update_custom_routing_accelerator_attributes;

pub(crate) mod shape_update_custom_routing_listener;

pub(crate) mod shape_update_endpoint_group;

pub(crate) mod shape_update_listener;

pub(crate) mod shape_withdraw_byoip_cidr;

pub(crate) fn or_empty_doc(data: &[u8]) -> &[u8] {
    if data.is_empty() {
        b"{}"
    } else {
        data
    }
}

pub(crate) mod shape_accelerator_not_disabled_exception;

pub(crate) mod shape_accelerator_not_found_exception;

pub(crate) mod shape_access_denied_exception;

pub(crate) mod shape_add_custom_routing_endpoints_input;

pub(crate) mod shape_add_endpoints_input;

pub(crate) mod shape_advertise_byoip_cidr_input;

pub(crate) mod shape_allow_custom_routing_traffic_input;

pub(crate) mod shape_associated_endpoint_group_found_exception;

pub(crate) mod shape_associated_listener_found_exception;

pub(crate) mod shape_byoip_cidr_not_found_exception;

pub(crate) mod shape_conflict_exception;

pub(crate) mod shape_create_accelerator_input;

pub(crate) mod shape_create_custom_routing_accelerator_input;

pub(crate) mod shape_create_custom_routing_endpoint_group_input;

pub(crate) mod shape_create_custom_routing_listener_input;

pub(crate) mod shape_create_endpoint_group_input;

pub(crate) mod shape_create_listener_input;

pub(crate) mod shape_delete_accelerator_input;

pub(crate) mod shape_delete_custom_routing_accelerator_input;

pub(crate) mod shape_delete_custom_routing_endpoint_group_input;

pub(crate) mod shape_delete_custom_routing_listener_input;

pub(crate) mod shape_delete_endpoint_group_input;

pub(crate) mod shape_delete_listener_input;

pub(crate) mod shape_deny_custom_routing_traffic_input;

pub(crate) mod shape_deprovision_byoip_cidr_input;

pub(crate) mod shape_describe_accelerator_attributes_input;

pub(crate) mod shape_describe_accelerator_input;

pub(crate) mod shape_describe_custom_routing_accelerator_attributes_input;

pub(crate) mod shape_describe_custom_routing_accelerator_input;

pub(crate) mod shape_describe_custom_routing_endpoint_group_input;

pub(crate) mod shape_describe_custom_routing_listener_input;

pub(crate) mod shape_describe_endpoint_group_input;

pub(crate) mod shape_describe_listener_input;

pub(crate) mod shape_endpoint_already_exists_exception;

pub(crate) mod shape_endpoint_group_already_exists_exception;

pub(crate) mod shape_endpoint_group_not_found_exception;

pub(crate) mod shape_endpoint_not_found_exception;

pub(crate) mod shape_incorrect_cidr_state_exception;

pub(crate) mod shape_internal_service_error_exception;

pub(crate) mod shape_invalid_argument_exception;

pub(crate) mod shape_invalid_next_token_exception;

pub(crate) mod shape_invalid_port_range_exception;

pub(crate) mod shape_limit_exceeded_exception;

pub(crate) mod shape_list_accelerators_input;

pub(crate) mod shape_list_byoip_cidrs_input;

pub(crate) mod shape_list_custom_routing_accelerators_input;

pub(crate) mod shape_list_custom_routing_endpoint_groups_input;

pub(crate) mod shape_list_custom_routing_listeners_input;

pub(crate) mod shape_list_custom_routing_port_mappings_by_destination_input;

pub(crate) mod shape_list_custom_routing_port_mappings_input;

pub(crate) mod shape_list_endpoint_groups_input;

pub(crate) mod shape_list_listeners_input;

pub(crate) mod shape_list_tags_for_resource_input;

pub(crate) mod shape_listener_not_found_exception;

pub(crate) mod shape_provision_byoip_cidr_input;

pub(crate) mod shape_remove_custom_routing_endpoints_input;

pub(crate) mod shape_remove_endpoints_input;

pub(crate) mod shape_tag_resource_input;

pub(crate) mod shape_transaction_in_progress_exception;

pub(crate) mod shape_untag_resource_input;

pub(crate) mod shape_update_accelerator_attributes_input;

pub(crate) mod shape_update_accelerator_input;

pub(crate) mod shape_update_custom_routing_accelerator_attributes_input;

pub(crate) mod shape_update_custom_routing_accelerator_input;

pub(crate) mod shape_update_custom_routing_listener_input;

pub(crate) mod shape_update_endpoint_group_input;

pub(crate) mod shape_update_listener_input;

pub(crate) mod shape_withdraw_byoip_cidr_input;

pub(crate) mod shape_accelerator;

pub(crate) mod shape_accelerator_attributes;

pub(crate) mod shape_accelerators;

pub(crate) mod shape_byoip_cidr;

pub(crate) mod shape_byoip_cidrs;

pub(crate) mod shape_cidr_authorization_context;

pub(crate) mod shape_custom_routing_accelerator;

pub(crate) mod shape_custom_routing_accelerator_attributes;

pub(crate) mod shape_custom_routing_accelerators;

pub(crate) mod shape_custom_routing_destination_configuration;

pub(crate) mod shape_custom_routing_endpoint_configuration;

pub(crate) mod shape_custom_routing_endpoint_descriptions;

pub(crate) mod shape_custom_routing_endpoint_group;

pub(crate) mod shape_custom_routing_endpoint_groups;

pub(crate) mod shape_custom_routing_listener;

pub(crate) mod shape_custom_routing_listeners;

pub(crate) mod shape_destination_port_mappings;

pub(crate) mod shape_endpoint_configuration;

pub(crate) mod shape_endpoint_descriptions;

pub(crate) mod shape_endpoint_group;

pub(crate) mod shape_endpoint_groups;

pub(crate) mod shape_endpoint_identifier;

pub(crate) mod shape_listener;

pub(crate) mod shape_listeners;

pub(crate) mod shape_port_mappings;

pub(crate) mod shape_port_override;

pub(crate) mod shape_port_range;

pub(crate) mod shape_tag;

pub(crate) mod shape_tags;

pub(crate) mod shape_accelerator_events;

pub(crate) mod shape_byoip_cidr_events;

pub(crate) mod shape_custom_routing_destination_descriptions;

pub(crate) mod shape_custom_routing_endpoint_description;

pub(crate) mod shape_destination_port_mapping;

pub(crate) mod shape_endpoint_description;

pub(crate) mod shape_ip_sets;

pub(crate) mod shape_port_mapping;

pub(crate) mod shape_port_overrides;

pub(crate) mod shape_port_ranges;

pub(crate) mod shape_accelerator_event;

pub(crate) mod shape_byoip_cidr_event;

pub(crate) mod shape_custom_routing_destination_description;

pub(crate) mod shape_custom_routing_protocols;

pub(crate) mod shape_ip_set;

pub(crate) mod shape_socket_address;

pub(crate) mod shape_socket_addresses;

pub(crate) mod shape_ip_addresses;

pub(crate) mod shape_protocols;
