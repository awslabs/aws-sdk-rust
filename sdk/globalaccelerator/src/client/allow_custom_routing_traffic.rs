// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`AllowCustomRoutingTraffic`](crate::operation::allow_custom_routing_traffic::builders::AllowCustomRoutingTrafficFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`endpoint_group_arn(impl Into<String>)`](crate::operation::allow_custom_routing_traffic::builders::AllowCustomRoutingTrafficFluentBuilder::endpoint_group_arn) / [`set_endpoint_group_arn(Option<String>)`](crate::operation::allow_custom_routing_traffic::builders::AllowCustomRoutingTrafficFluentBuilder::set_endpoint_group_arn):<br>required: **true**<br><p>The Amazon Resource Name (ARN) of the endpoint group.</p><br>
    ///   - [`endpoint_id(impl Into<String>)`](crate::operation::allow_custom_routing_traffic::builders::AllowCustomRoutingTrafficFluentBuilder::endpoint_id) / [`set_endpoint_id(Option<String>)`](crate::operation::allow_custom_routing_traffic::builders::AllowCustomRoutingTrafficFluentBuilder::set_endpoint_id):<br>required: **true**<br><p>An ID for the endpoint. For custom routing accelerators, this is the virtual private cloud (VPC) subnet ID.</p><br>
    ///   - [`destination_addresses(impl Into<String>)`](crate::operation::allow_custom_routing_traffic::builders::AllowCustomRoutingTrafficFluentBuilder::destination_addresses) / [`set_destination_addresses(Option<Vec::<String>>)`](crate::operation::allow_custom_routing_traffic::builders::AllowCustomRoutingTrafficFluentBuilder::set_destination_addresses):<br>required: **false**<br><p>A list of specific Amazon EC2 instance IP addresses (destination addresses) in a subnet that you want to allow to receive traffic. The IP addresses must be a subset of the IP addresses that you specified for the endpoint group.</p>  <p> <code>DestinationAddresses</code> is required if <code>AllowAllTrafficToEndpoint</code> is <code>FALSE</code> or is not specified.</p><br>
    ///   - [`destination_ports(i32)`](crate::operation::allow_custom_routing_traffic::builders::AllowCustomRoutingTrafficFluentBuilder::destination_ports) / [`set_destination_ports(Option<Vec::<i32>>)`](crate::operation::allow_custom_routing_traffic::builders::AllowCustomRoutingTrafficFluentBuilder::set_destination_ports):<br>required: **false**<br><p>A list of specific Amazon EC2 instance ports (destination ports) that you want to allow to receive traffic.</p><br>
    ///   - [`allow_all_traffic_to_endpoint(bool)`](crate::operation::allow_custom_routing_traffic::builders::AllowCustomRoutingTrafficFluentBuilder::allow_all_traffic_to_endpoint) / [`set_allow_all_traffic_to_endpoint(Option<bool>)`](crate::operation::allow_custom_routing_traffic::builders::AllowCustomRoutingTrafficFluentBuilder::set_allow_all_traffic_to_endpoint):<br>required: **false**<br><p>Indicates whether all destination IP addresses and ports for a specified VPC subnet endpoint can receive traffic from a custom routing accelerator. The value is TRUE or FALSE. </p>  <p>When set to TRUE, <i>all</i> destinations in the custom routing VPC subnet can receive traffic. Note that you cannot specify destination IP addresses and ports when the value is set to TRUE.</p>  <p>When set to FALSE (or not specified), you <i>must</i> specify a list of destination IP addresses that are allowed to receive traffic. A list of ports is optional. If you don't specify a list of ports, the ports that can accept traffic is the same as the ports configured for the endpoint group.</p>  <p>The default value is FALSE.</p><br>
    /// - On success, responds with [`AllowCustomRoutingTrafficOutput`](crate::operation::allow_custom_routing_traffic::AllowCustomRoutingTrafficOutput)
    /// - On failure, responds with [`SdkError<AllowCustomRoutingTrafficError>`](crate::operation::allow_custom_routing_traffic::AllowCustomRoutingTrafficError)
    pub fn allow_custom_routing_traffic(&self) -> crate::operation::allow_custom_routing_traffic::builders::AllowCustomRoutingTrafficFluentBuilder {
        crate::operation::allow_custom_routing_traffic::builders::AllowCustomRoutingTrafficFluentBuilder::new(self.handle.clone())
    }
}
