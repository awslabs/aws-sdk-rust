// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[non_exhaustive]
#[derive(std::fmt::Debug)]
pub enum Error {
    AcceleratorNotDisabledException(crate::error::AcceleratorNotDisabledException),
    AcceleratorNotFoundException(crate::error::AcceleratorNotFoundException),
    AccessDeniedException(crate::error::AccessDeniedException),
    AssociatedEndpointGroupFoundException(crate::error::AssociatedEndpointGroupFoundException),
    AssociatedListenerFoundException(crate::error::AssociatedListenerFoundException),
    ByoipCidrNotFoundException(crate::error::ByoipCidrNotFoundException),
    ConflictException(crate::error::ConflictException),
    EndpointAlreadyExistsException(crate::error::EndpointAlreadyExistsException),
    EndpointGroupAlreadyExistsException(crate::error::EndpointGroupAlreadyExistsException),
    EndpointGroupNotFoundException(crate::error::EndpointGroupNotFoundException),
    EndpointNotFoundException(crate::error::EndpointNotFoundException),
    IncorrectCidrStateException(crate::error::IncorrectCidrStateException),
    InternalServiceErrorException(crate::error::InternalServiceErrorException),
    InvalidArgumentException(crate::error::InvalidArgumentException),
    InvalidNextTokenException(crate::error::InvalidNextTokenException),
    InvalidPortRangeException(crate::error::InvalidPortRangeException),
    LimitExceededException(crate::error::LimitExceededException),
    ListenerNotFoundException(crate::error::ListenerNotFoundException),
    Unhandled(Box<dyn std::error::Error + Send + Sync + 'static>),
}
impl std::fmt::Display for Error {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        match self {
            Error::AcceleratorNotDisabledException(inner) => inner.fmt(f),
            Error::AcceleratorNotFoundException(inner) => inner.fmt(f),
            Error::AccessDeniedException(inner) => inner.fmt(f),
            Error::AssociatedEndpointGroupFoundException(inner) => inner.fmt(f),
            Error::AssociatedListenerFoundException(inner) => inner.fmt(f),
            Error::ByoipCidrNotFoundException(inner) => inner.fmt(f),
            Error::ConflictException(inner) => inner.fmt(f),
            Error::EndpointAlreadyExistsException(inner) => inner.fmt(f),
            Error::EndpointGroupAlreadyExistsException(inner) => inner.fmt(f),
            Error::EndpointGroupNotFoundException(inner) => inner.fmt(f),
            Error::EndpointNotFoundException(inner) => inner.fmt(f),
            Error::IncorrectCidrStateException(inner) => inner.fmt(f),
            Error::InternalServiceErrorException(inner) => inner.fmt(f),
            Error::InvalidArgumentException(inner) => inner.fmt(f),
            Error::InvalidNextTokenException(inner) => inner.fmt(f),
            Error::InvalidPortRangeException(inner) => inner.fmt(f),
            Error::LimitExceededException(inner) => inner.fmt(f),
            Error::ListenerNotFoundException(inner) => inner.fmt(f),
            Error::Unhandled(inner) => inner.fmt(f),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::AddCustomRoutingEndpointsError>> for Error {
    fn from(
        err: smithy_http::result::SdkError<crate::error::AddCustomRoutingEndpointsError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::AddCustomRoutingEndpointsErrorKind::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
                crate::error::AddCustomRoutingEndpointsErrorKind::ConflictException(inner) => Error::ConflictException(inner),
                crate::error::AddCustomRoutingEndpointsErrorKind::EndpointAlreadyExistsException(inner) => Error::EndpointAlreadyExistsException(inner),
                crate::error::AddCustomRoutingEndpointsErrorKind::EndpointGroupNotFoundException(inner) => Error::EndpointGroupNotFoundException(inner),
                crate::error::AddCustomRoutingEndpointsErrorKind::InternalServiceErrorException(inner) => Error::InternalServiceErrorException(inner),
                crate::error::AddCustomRoutingEndpointsErrorKind::InvalidArgumentException(inner) => Error::InvalidArgumentException(inner),
                crate::error::AddCustomRoutingEndpointsErrorKind::LimitExceededException(inner) => Error::LimitExceededException(inner),
                crate::error::AddCustomRoutingEndpointsErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::AdvertiseByoipCidrError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::AdvertiseByoipCidrError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::AdvertiseByoipCidrErrorKind::AccessDeniedException(inner) => {
                    Error::AccessDeniedException(inner)
                }
                crate::error::AdvertiseByoipCidrErrorKind::ByoipCidrNotFoundException(inner) => {
                    Error::ByoipCidrNotFoundException(inner)
                }
                crate::error::AdvertiseByoipCidrErrorKind::IncorrectCidrStateException(inner) => {
                    Error::IncorrectCidrStateException(inner)
                }
                crate::error::AdvertiseByoipCidrErrorKind::InternalServiceErrorException(inner) => {
                    Error::InternalServiceErrorException(inner)
                }
                crate::error::AdvertiseByoipCidrErrorKind::InvalidArgumentException(inner) => {
                    Error::InvalidArgumentException(inner)
                }
                crate::error::AdvertiseByoipCidrErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::AllowCustomRoutingTrafficError>> for Error {
    fn from(
        err: smithy_http::result::SdkError<crate::error::AllowCustomRoutingTrafficError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::AllowCustomRoutingTrafficErrorKind::InternalServiceErrorException(
                    inner,
                ) => Error::InternalServiceErrorException(inner),
                crate::error::AllowCustomRoutingTrafficErrorKind::InvalidArgumentException(
                    inner,
                ) => Error::InvalidArgumentException(inner),
                crate::error::AllowCustomRoutingTrafficErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::CreateAcceleratorError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::CreateAcceleratorError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::CreateAcceleratorErrorKind::InternalServiceErrorException(inner) => {
                    Error::InternalServiceErrorException(inner)
                }
                crate::error::CreateAcceleratorErrorKind::InvalidArgumentException(inner) => {
                    Error::InvalidArgumentException(inner)
                }
                crate::error::CreateAcceleratorErrorKind::LimitExceededException(inner) => {
                    Error::LimitExceededException(inner)
                }
                crate::error::CreateAcceleratorErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::CreateCustomRoutingAcceleratorError>>
    for Error
{
    fn from(
        err: smithy_http::result::SdkError<crate::error::CreateCustomRoutingAcceleratorError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::CreateCustomRoutingAcceleratorErrorKind::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
                crate::error::CreateCustomRoutingAcceleratorErrorKind::InternalServiceErrorException(inner) => Error::InternalServiceErrorException(inner),
                crate::error::CreateCustomRoutingAcceleratorErrorKind::InvalidArgumentException(inner) => Error::InvalidArgumentException(inner),
                crate::error::CreateCustomRoutingAcceleratorErrorKind::LimitExceededException(inner) => Error::LimitExceededException(inner),
                crate::error::CreateCustomRoutingAcceleratorErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::CreateCustomRoutingEndpointGroupError>>
    for Error
{
    fn from(
        err: smithy_http::result::SdkError<crate::error::CreateCustomRoutingEndpointGroupError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::CreateCustomRoutingEndpointGroupErrorKind::AcceleratorNotFoundException(inner) => Error::AcceleratorNotFoundException(inner),
                crate::error::CreateCustomRoutingEndpointGroupErrorKind::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
                crate::error::CreateCustomRoutingEndpointGroupErrorKind::EndpointGroupAlreadyExistsException(inner) => Error::EndpointGroupAlreadyExistsException(inner),
                crate::error::CreateCustomRoutingEndpointGroupErrorKind::InternalServiceErrorException(inner) => Error::InternalServiceErrorException(inner),
                crate::error::CreateCustomRoutingEndpointGroupErrorKind::InvalidArgumentException(inner) => Error::InvalidArgumentException(inner),
                crate::error::CreateCustomRoutingEndpointGroupErrorKind::InvalidPortRangeException(inner) => Error::InvalidPortRangeException(inner),
                crate::error::CreateCustomRoutingEndpointGroupErrorKind::LimitExceededException(inner) => Error::LimitExceededException(inner),
                crate::error::CreateCustomRoutingEndpointGroupErrorKind::ListenerNotFoundException(inner) => Error::ListenerNotFoundException(inner),
                crate::error::CreateCustomRoutingEndpointGroupErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::CreateCustomRoutingListenerError>> for Error {
    fn from(
        err: smithy_http::result::SdkError<crate::error::CreateCustomRoutingListenerError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::CreateCustomRoutingListenerErrorKind::AcceleratorNotFoundException(inner) => Error::AcceleratorNotFoundException(inner),
                crate::error::CreateCustomRoutingListenerErrorKind::InternalServiceErrorException(inner) => Error::InternalServiceErrorException(inner),
                crate::error::CreateCustomRoutingListenerErrorKind::InvalidArgumentException(inner) => Error::InvalidArgumentException(inner),
                crate::error::CreateCustomRoutingListenerErrorKind::InvalidPortRangeException(inner) => Error::InvalidPortRangeException(inner),
                crate::error::CreateCustomRoutingListenerErrorKind::LimitExceededException(inner) => Error::LimitExceededException(inner),
                crate::error::CreateCustomRoutingListenerErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::CreateEndpointGroupError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::CreateEndpointGroupError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::CreateEndpointGroupErrorKind::AcceleratorNotFoundException(inner) => {
                    Error::AcceleratorNotFoundException(inner)
                }
                crate::error::CreateEndpointGroupErrorKind::AccessDeniedException(inner) => {
                    Error::AccessDeniedException(inner)
                }
                crate::error::CreateEndpointGroupErrorKind::EndpointGroupAlreadyExistsException(
                    inner,
                ) => Error::EndpointGroupAlreadyExistsException(inner),
                crate::error::CreateEndpointGroupErrorKind::InternalServiceErrorException(
                    inner,
                ) => Error::InternalServiceErrorException(inner),
                crate::error::CreateEndpointGroupErrorKind::InvalidArgumentException(inner) => {
                    Error::InvalidArgumentException(inner)
                }
                crate::error::CreateEndpointGroupErrorKind::LimitExceededException(inner) => {
                    Error::LimitExceededException(inner)
                }
                crate::error::CreateEndpointGroupErrorKind::ListenerNotFoundException(inner) => {
                    Error::ListenerNotFoundException(inner)
                }
                crate::error::CreateEndpointGroupErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::CreateListenerError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::CreateListenerError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::CreateListenerErrorKind::AcceleratorNotFoundException(inner) => {
                    Error::AcceleratorNotFoundException(inner)
                }
                crate::error::CreateListenerErrorKind::InternalServiceErrorException(inner) => {
                    Error::InternalServiceErrorException(inner)
                }
                crate::error::CreateListenerErrorKind::InvalidArgumentException(inner) => {
                    Error::InvalidArgumentException(inner)
                }
                crate::error::CreateListenerErrorKind::InvalidPortRangeException(inner) => {
                    Error::InvalidPortRangeException(inner)
                }
                crate::error::CreateListenerErrorKind::LimitExceededException(inner) => {
                    Error::LimitExceededException(inner)
                }
                crate::error::CreateListenerErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DeleteAcceleratorError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::DeleteAcceleratorError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::DeleteAcceleratorErrorKind::AcceleratorNotDisabledException(
                    inner,
                ) => Error::AcceleratorNotDisabledException(inner),
                crate::error::DeleteAcceleratorErrorKind::AcceleratorNotFoundException(inner) => {
                    Error::AcceleratorNotFoundException(inner)
                }
                crate::error::DeleteAcceleratorErrorKind::AssociatedListenerFoundException(
                    inner,
                ) => Error::AssociatedListenerFoundException(inner),
                crate::error::DeleteAcceleratorErrorKind::InternalServiceErrorException(inner) => {
                    Error::InternalServiceErrorException(inner)
                }
                crate::error::DeleteAcceleratorErrorKind::InvalidArgumentException(inner) => {
                    Error::InvalidArgumentException(inner)
                }
                crate::error::DeleteAcceleratorErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DeleteCustomRoutingAcceleratorError>>
    for Error
{
    fn from(
        err: smithy_http::result::SdkError<crate::error::DeleteCustomRoutingAcceleratorError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::DeleteCustomRoutingAcceleratorErrorKind::AcceleratorNotDisabledException(inner) => Error::AcceleratorNotDisabledException(inner),
                crate::error::DeleteCustomRoutingAcceleratorErrorKind::AcceleratorNotFoundException(inner) => Error::AcceleratorNotFoundException(inner),
                crate::error::DeleteCustomRoutingAcceleratorErrorKind::AssociatedListenerFoundException(inner) => Error::AssociatedListenerFoundException(inner),
                crate::error::DeleteCustomRoutingAcceleratorErrorKind::InternalServiceErrorException(inner) => Error::InternalServiceErrorException(inner),
                crate::error::DeleteCustomRoutingAcceleratorErrorKind::InvalidArgumentException(inner) => Error::InvalidArgumentException(inner),
                crate::error::DeleteCustomRoutingAcceleratorErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DeleteCustomRoutingEndpointGroupError>>
    for Error
{
    fn from(
        err: smithy_http::result::SdkError<crate::error::DeleteCustomRoutingEndpointGroupError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::DeleteCustomRoutingEndpointGroupErrorKind::EndpointGroupNotFoundException(inner) => Error::EndpointGroupNotFoundException(inner),
                crate::error::DeleteCustomRoutingEndpointGroupErrorKind::InternalServiceErrorException(inner) => Error::InternalServiceErrorException(inner),
                crate::error::DeleteCustomRoutingEndpointGroupErrorKind::InvalidArgumentException(inner) => Error::InvalidArgumentException(inner),
                crate::error::DeleteCustomRoutingEndpointGroupErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DeleteCustomRoutingListenerError>> for Error {
    fn from(
        err: smithy_http::result::SdkError<crate::error::DeleteCustomRoutingListenerError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::DeleteCustomRoutingListenerErrorKind::AssociatedEndpointGroupFoundException(inner) => Error::AssociatedEndpointGroupFoundException(inner),
                crate::error::DeleteCustomRoutingListenerErrorKind::InternalServiceErrorException(inner) => Error::InternalServiceErrorException(inner),
                crate::error::DeleteCustomRoutingListenerErrorKind::InvalidArgumentException(inner) => Error::InvalidArgumentException(inner),
                crate::error::DeleteCustomRoutingListenerErrorKind::ListenerNotFoundException(inner) => Error::ListenerNotFoundException(inner),
                crate::error::DeleteCustomRoutingListenerErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DeleteEndpointGroupError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::DeleteEndpointGroupError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::DeleteEndpointGroupErrorKind::EndpointGroupNotFoundException(
                    inner,
                ) => Error::EndpointGroupNotFoundException(inner),
                crate::error::DeleteEndpointGroupErrorKind::InternalServiceErrorException(
                    inner,
                ) => Error::InternalServiceErrorException(inner),
                crate::error::DeleteEndpointGroupErrorKind::InvalidArgumentException(inner) => {
                    Error::InvalidArgumentException(inner)
                }
                crate::error::DeleteEndpointGroupErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DeleteListenerError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::DeleteListenerError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::DeleteListenerErrorKind::AssociatedEndpointGroupFoundException(
                    inner,
                ) => Error::AssociatedEndpointGroupFoundException(inner),
                crate::error::DeleteListenerErrorKind::InternalServiceErrorException(inner) => {
                    Error::InternalServiceErrorException(inner)
                }
                crate::error::DeleteListenerErrorKind::InvalidArgumentException(inner) => {
                    Error::InvalidArgumentException(inner)
                }
                crate::error::DeleteListenerErrorKind::ListenerNotFoundException(inner) => {
                    Error::ListenerNotFoundException(inner)
                }
                crate::error::DeleteListenerErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DenyCustomRoutingTrafficError>> for Error {
    fn from(
        err: smithy_http::result::SdkError<crate::error::DenyCustomRoutingTrafficError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::DenyCustomRoutingTrafficErrorKind::InternalServiceErrorException(
                    inner,
                ) => Error::InternalServiceErrorException(inner),
                crate::error::DenyCustomRoutingTrafficErrorKind::InvalidArgumentException(
                    inner,
                ) => Error::InvalidArgumentException(inner),
                crate::error::DenyCustomRoutingTrafficErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DeprovisionByoipCidrError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::DeprovisionByoipCidrError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::DeprovisionByoipCidrErrorKind::AccessDeniedException(inner) => {
                    Error::AccessDeniedException(inner)
                }
                crate::error::DeprovisionByoipCidrErrorKind::ByoipCidrNotFoundException(inner) => {
                    Error::ByoipCidrNotFoundException(inner)
                }
                crate::error::DeprovisionByoipCidrErrorKind::IncorrectCidrStateException(inner) => {
                    Error::IncorrectCidrStateException(inner)
                }
                crate::error::DeprovisionByoipCidrErrorKind::InternalServiceErrorException(
                    inner,
                ) => Error::InternalServiceErrorException(inner),
                crate::error::DeprovisionByoipCidrErrorKind::InvalidArgumentException(inner) => {
                    Error::InvalidArgumentException(inner)
                }
                crate::error::DeprovisionByoipCidrErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DescribeAcceleratorError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::DescribeAcceleratorError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::DescribeAcceleratorErrorKind::AcceleratorNotFoundException(inner) => {
                    Error::AcceleratorNotFoundException(inner)
                }
                crate::error::DescribeAcceleratorErrorKind::InternalServiceErrorException(
                    inner,
                ) => Error::InternalServiceErrorException(inner),
                crate::error::DescribeAcceleratorErrorKind::InvalidArgumentException(inner) => {
                    Error::InvalidArgumentException(inner)
                }
                crate::error::DescribeAcceleratorErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DescribeAcceleratorAttributesError>>
    for Error
{
    fn from(
        err: smithy_http::result::SdkError<crate::error::DescribeAcceleratorAttributesError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::DescribeAcceleratorAttributesErrorKind::AcceleratorNotFoundException(inner) => Error::AcceleratorNotFoundException(inner),
                crate::error::DescribeAcceleratorAttributesErrorKind::InternalServiceErrorException(inner) => Error::InternalServiceErrorException(inner),
                crate::error::DescribeAcceleratorAttributesErrorKind::InvalidArgumentException(inner) => Error::InvalidArgumentException(inner),
                crate::error::DescribeAcceleratorAttributesErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DescribeCustomRoutingAcceleratorError>>
    for Error
{
    fn from(
        err: smithy_http::result::SdkError<crate::error::DescribeCustomRoutingAcceleratorError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::DescribeCustomRoutingAcceleratorErrorKind::AcceleratorNotFoundException(inner) => Error::AcceleratorNotFoundException(inner),
                crate::error::DescribeCustomRoutingAcceleratorErrorKind::InternalServiceErrorException(inner) => Error::InternalServiceErrorException(inner),
                crate::error::DescribeCustomRoutingAcceleratorErrorKind::InvalidArgumentException(inner) => Error::InvalidArgumentException(inner),
                crate::error::DescribeCustomRoutingAcceleratorErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl
    From<
        smithy_http::result::SdkError<
            crate::error::DescribeCustomRoutingAcceleratorAttributesError,
        >,
    > for Error
{
    fn from(
        err: smithy_http::result::SdkError<
            crate::error::DescribeCustomRoutingAcceleratorAttributesError,
        >,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::DescribeCustomRoutingAcceleratorAttributesErrorKind::AcceleratorNotFoundException(inner) => Error::AcceleratorNotFoundException(inner),
                crate::error::DescribeCustomRoutingAcceleratorAttributesErrorKind::InternalServiceErrorException(inner) => Error::InternalServiceErrorException(inner),
                crate::error::DescribeCustomRoutingAcceleratorAttributesErrorKind::InvalidArgumentException(inner) => Error::InvalidArgumentException(inner),
                crate::error::DescribeCustomRoutingAcceleratorAttributesErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DescribeCustomRoutingEndpointGroupError>>
    for Error
{
    fn from(
        err: smithy_http::result::SdkError<crate::error::DescribeCustomRoutingEndpointGroupError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::DescribeCustomRoutingEndpointGroupErrorKind::EndpointGroupNotFoundException(inner) => Error::EndpointGroupNotFoundException(inner),
                crate::error::DescribeCustomRoutingEndpointGroupErrorKind::InternalServiceErrorException(inner) => Error::InternalServiceErrorException(inner),
                crate::error::DescribeCustomRoutingEndpointGroupErrorKind::InvalidArgumentException(inner) => Error::InvalidArgumentException(inner),
                crate::error::DescribeCustomRoutingEndpointGroupErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DescribeCustomRoutingListenerError>>
    for Error
{
    fn from(
        err: smithy_http::result::SdkError<crate::error::DescribeCustomRoutingListenerError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::DescribeCustomRoutingListenerErrorKind::InternalServiceErrorException(inner) => Error::InternalServiceErrorException(inner),
                crate::error::DescribeCustomRoutingListenerErrorKind::InvalidArgumentException(inner) => Error::InvalidArgumentException(inner),
                crate::error::DescribeCustomRoutingListenerErrorKind::ListenerNotFoundException(inner) => Error::ListenerNotFoundException(inner),
                crate::error::DescribeCustomRoutingListenerErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DescribeEndpointGroupError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::DescribeEndpointGroupError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::DescribeEndpointGroupErrorKind::EndpointGroupNotFoundException(
                    inner,
                ) => Error::EndpointGroupNotFoundException(inner),
                crate::error::DescribeEndpointGroupErrorKind::InternalServiceErrorException(
                    inner,
                ) => Error::InternalServiceErrorException(inner),
                crate::error::DescribeEndpointGroupErrorKind::InvalidArgumentException(inner) => {
                    Error::InvalidArgumentException(inner)
                }
                crate::error::DescribeEndpointGroupErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DescribeListenerError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::DescribeListenerError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::DescribeListenerErrorKind::InternalServiceErrorException(inner) => {
                    Error::InternalServiceErrorException(inner)
                }
                crate::error::DescribeListenerErrorKind::InvalidArgumentException(inner) => {
                    Error::InvalidArgumentException(inner)
                }
                crate::error::DescribeListenerErrorKind::ListenerNotFoundException(inner) => {
                    Error::ListenerNotFoundException(inner)
                }
                crate::error::DescribeListenerErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::ListAcceleratorsError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::ListAcceleratorsError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::ListAcceleratorsErrorKind::InternalServiceErrorException(inner) => {
                    Error::InternalServiceErrorException(inner)
                }
                crate::error::ListAcceleratorsErrorKind::InvalidArgumentException(inner) => {
                    Error::InvalidArgumentException(inner)
                }
                crate::error::ListAcceleratorsErrorKind::InvalidNextTokenException(inner) => {
                    Error::InvalidNextTokenException(inner)
                }
                crate::error::ListAcceleratorsErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::ListByoipCidrsError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::ListByoipCidrsError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::ListByoipCidrsErrorKind::AccessDeniedException(inner) => {
                    Error::AccessDeniedException(inner)
                }
                crate::error::ListByoipCidrsErrorKind::InternalServiceErrorException(inner) => {
                    Error::InternalServiceErrorException(inner)
                }
                crate::error::ListByoipCidrsErrorKind::InvalidArgumentException(inner) => {
                    Error::InvalidArgumentException(inner)
                }
                crate::error::ListByoipCidrsErrorKind::InvalidNextTokenException(inner) => {
                    Error::InvalidNextTokenException(inner)
                }
                crate::error::ListByoipCidrsErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::ListCustomRoutingAcceleratorsError>>
    for Error
{
    fn from(
        err: smithy_http::result::SdkError<crate::error::ListCustomRoutingAcceleratorsError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::ListCustomRoutingAcceleratorsErrorKind::InternalServiceErrorException(inner) => Error::InternalServiceErrorException(inner),
                crate::error::ListCustomRoutingAcceleratorsErrorKind::InvalidArgumentException(inner) => Error::InvalidArgumentException(inner),
                crate::error::ListCustomRoutingAcceleratorsErrorKind::InvalidNextTokenException(inner) => Error::InvalidNextTokenException(inner),
                crate::error::ListCustomRoutingAcceleratorsErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::ListCustomRoutingEndpointGroupsError>>
    for Error
{
    fn from(
        err: smithy_http::result::SdkError<crate::error::ListCustomRoutingEndpointGroupsError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::ListCustomRoutingEndpointGroupsErrorKind::InternalServiceErrorException(inner) => Error::InternalServiceErrorException(inner),
                crate::error::ListCustomRoutingEndpointGroupsErrorKind::InvalidArgumentException(inner) => Error::InvalidArgumentException(inner),
                crate::error::ListCustomRoutingEndpointGroupsErrorKind::InvalidNextTokenException(inner) => Error::InvalidNextTokenException(inner),
                crate::error::ListCustomRoutingEndpointGroupsErrorKind::ListenerNotFoundException(inner) => Error::ListenerNotFoundException(inner),
                crate::error::ListCustomRoutingEndpointGroupsErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::ListCustomRoutingListenersError>> for Error {
    fn from(
        err: smithy_http::result::SdkError<crate::error::ListCustomRoutingListenersError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::ListCustomRoutingListenersErrorKind::AcceleratorNotFoundException(inner) => Error::AcceleratorNotFoundException(inner),
                crate::error::ListCustomRoutingListenersErrorKind::InternalServiceErrorException(inner) => Error::InternalServiceErrorException(inner),
                crate::error::ListCustomRoutingListenersErrorKind::InvalidArgumentException(inner) => Error::InvalidArgumentException(inner),
                crate::error::ListCustomRoutingListenersErrorKind::InvalidNextTokenException(inner) => Error::InvalidNextTokenException(inner),
                crate::error::ListCustomRoutingListenersErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::ListCustomRoutingPortMappingsError>>
    for Error
{
    fn from(
        err: smithy_http::result::SdkError<crate::error::ListCustomRoutingPortMappingsError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::ListCustomRoutingPortMappingsErrorKind::AcceleratorNotFoundException(inner) => Error::AcceleratorNotFoundException(inner),
                crate::error::ListCustomRoutingPortMappingsErrorKind::EndpointGroupNotFoundException(inner) => Error::EndpointGroupNotFoundException(inner),
                crate::error::ListCustomRoutingPortMappingsErrorKind::InternalServiceErrorException(inner) => Error::InternalServiceErrorException(inner),
                crate::error::ListCustomRoutingPortMappingsErrorKind::InvalidArgumentException(inner) => Error::InvalidArgumentException(inner),
                crate::error::ListCustomRoutingPortMappingsErrorKind::InvalidNextTokenException(inner) => Error::InvalidNextTokenException(inner),
                crate::error::ListCustomRoutingPortMappingsErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl
    From<
        smithy_http::result::SdkError<
            crate::error::ListCustomRoutingPortMappingsByDestinationError,
        >,
    > for Error
{
    fn from(
        err: smithy_http::result::SdkError<
            crate::error::ListCustomRoutingPortMappingsByDestinationError,
        >,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::ListCustomRoutingPortMappingsByDestinationErrorKind::EndpointNotFoundException(inner) => Error::EndpointNotFoundException(inner),
                crate::error::ListCustomRoutingPortMappingsByDestinationErrorKind::InternalServiceErrorException(inner) => Error::InternalServiceErrorException(inner),
                crate::error::ListCustomRoutingPortMappingsByDestinationErrorKind::InvalidArgumentException(inner) => Error::InvalidArgumentException(inner),
                crate::error::ListCustomRoutingPortMappingsByDestinationErrorKind::InvalidNextTokenException(inner) => Error::InvalidNextTokenException(inner),
                crate::error::ListCustomRoutingPortMappingsByDestinationErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::ListEndpointGroupsError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::ListEndpointGroupsError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::ListEndpointGroupsErrorKind::InternalServiceErrorException(inner) => {
                    Error::InternalServiceErrorException(inner)
                }
                crate::error::ListEndpointGroupsErrorKind::InvalidArgumentException(inner) => {
                    Error::InvalidArgumentException(inner)
                }
                crate::error::ListEndpointGroupsErrorKind::InvalidNextTokenException(inner) => {
                    Error::InvalidNextTokenException(inner)
                }
                crate::error::ListEndpointGroupsErrorKind::ListenerNotFoundException(inner) => {
                    Error::ListenerNotFoundException(inner)
                }
                crate::error::ListEndpointGroupsErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::ListListenersError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::ListListenersError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::ListListenersErrorKind::AcceleratorNotFoundException(inner) => {
                    Error::AcceleratorNotFoundException(inner)
                }
                crate::error::ListListenersErrorKind::InternalServiceErrorException(inner) => {
                    Error::InternalServiceErrorException(inner)
                }
                crate::error::ListListenersErrorKind::InvalidArgumentException(inner) => {
                    Error::InvalidArgumentException(inner)
                }
                crate::error::ListListenersErrorKind::InvalidNextTokenException(inner) => {
                    Error::InvalidNextTokenException(inner)
                }
                crate::error::ListListenersErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::ListTagsForResourceError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::ListTagsForResourceError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::ListTagsForResourceErrorKind::AcceleratorNotFoundException(inner) => {
                    Error::AcceleratorNotFoundException(inner)
                }
                crate::error::ListTagsForResourceErrorKind::InternalServiceErrorException(
                    inner,
                ) => Error::InternalServiceErrorException(inner),
                crate::error::ListTagsForResourceErrorKind::InvalidArgumentException(inner) => {
                    Error::InvalidArgumentException(inner)
                }
                crate::error::ListTagsForResourceErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::ProvisionByoipCidrError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::ProvisionByoipCidrError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::ProvisionByoipCidrErrorKind::AccessDeniedException(inner) => {
                    Error::AccessDeniedException(inner)
                }
                crate::error::ProvisionByoipCidrErrorKind::IncorrectCidrStateException(inner) => {
                    Error::IncorrectCidrStateException(inner)
                }
                crate::error::ProvisionByoipCidrErrorKind::InternalServiceErrorException(inner) => {
                    Error::InternalServiceErrorException(inner)
                }
                crate::error::ProvisionByoipCidrErrorKind::InvalidArgumentException(inner) => {
                    Error::InvalidArgumentException(inner)
                }
                crate::error::ProvisionByoipCidrErrorKind::LimitExceededException(inner) => {
                    Error::LimitExceededException(inner)
                }
                crate::error::ProvisionByoipCidrErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::RemoveCustomRoutingEndpointsError>>
    for Error
{
    fn from(
        err: smithy_http::result::SdkError<crate::error::RemoveCustomRoutingEndpointsError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::RemoveCustomRoutingEndpointsErrorKind::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
                crate::error::RemoveCustomRoutingEndpointsErrorKind::ConflictException(inner) => Error::ConflictException(inner),
                crate::error::RemoveCustomRoutingEndpointsErrorKind::EndpointGroupNotFoundException(inner) => Error::EndpointGroupNotFoundException(inner),
                crate::error::RemoveCustomRoutingEndpointsErrorKind::EndpointNotFoundException(inner) => Error::EndpointNotFoundException(inner),
                crate::error::RemoveCustomRoutingEndpointsErrorKind::InternalServiceErrorException(inner) => Error::InternalServiceErrorException(inner),
                crate::error::RemoveCustomRoutingEndpointsErrorKind::InvalidArgumentException(inner) => Error::InvalidArgumentException(inner),
                crate::error::RemoveCustomRoutingEndpointsErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::TagResourceError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::TagResourceError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::TagResourceErrorKind::AcceleratorNotFoundException(inner) => {
                    Error::AcceleratorNotFoundException(inner)
                }
                crate::error::TagResourceErrorKind::InternalServiceErrorException(inner) => {
                    Error::InternalServiceErrorException(inner)
                }
                crate::error::TagResourceErrorKind::InvalidArgumentException(inner) => {
                    Error::InvalidArgumentException(inner)
                }
                crate::error::TagResourceErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::UntagResourceError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::UntagResourceError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::UntagResourceErrorKind::AcceleratorNotFoundException(inner) => {
                    Error::AcceleratorNotFoundException(inner)
                }
                crate::error::UntagResourceErrorKind::InternalServiceErrorException(inner) => {
                    Error::InternalServiceErrorException(inner)
                }
                crate::error::UntagResourceErrorKind::InvalidArgumentException(inner) => {
                    Error::InvalidArgumentException(inner)
                }
                crate::error::UntagResourceErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::UpdateAcceleratorError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::UpdateAcceleratorError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::UpdateAcceleratorErrorKind::AcceleratorNotFoundException(inner) => {
                    Error::AcceleratorNotFoundException(inner)
                }
                crate::error::UpdateAcceleratorErrorKind::InternalServiceErrorException(inner) => {
                    Error::InternalServiceErrorException(inner)
                }
                crate::error::UpdateAcceleratorErrorKind::InvalidArgumentException(inner) => {
                    Error::InvalidArgumentException(inner)
                }
                crate::error::UpdateAcceleratorErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::UpdateAcceleratorAttributesError>> for Error {
    fn from(
        err: smithy_http::result::SdkError<crate::error::UpdateAcceleratorAttributesError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::UpdateAcceleratorAttributesErrorKind::AcceleratorNotFoundException(inner) => Error::AcceleratorNotFoundException(inner),
                crate::error::UpdateAcceleratorAttributesErrorKind::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
                crate::error::UpdateAcceleratorAttributesErrorKind::InternalServiceErrorException(inner) => Error::InternalServiceErrorException(inner),
                crate::error::UpdateAcceleratorAttributesErrorKind::InvalidArgumentException(inner) => Error::InvalidArgumentException(inner),
                crate::error::UpdateAcceleratorAttributesErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::UpdateCustomRoutingAcceleratorError>>
    for Error
{
    fn from(
        err: smithy_http::result::SdkError<crate::error::UpdateCustomRoutingAcceleratorError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::UpdateCustomRoutingAcceleratorErrorKind::AcceleratorNotFoundException(inner) => Error::AcceleratorNotFoundException(inner),
                crate::error::UpdateCustomRoutingAcceleratorErrorKind::InternalServiceErrorException(inner) => Error::InternalServiceErrorException(inner),
                crate::error::UpdateCustomRoutingAcceleratorErrorKind::InvalidArgumentException(inner) => Error::InvalidArgumentException(inner),
                crate::error::UpdateCustomRoutingAcceleratorErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl
    From<smithy_http::result::SdkError<crate::error::UpdateCustomRoutingAcceleratorAttributesError>>
    for Error
{
    fn from(
        err: smithy_http::result::SdkError<
            crate::error::UpdateCustomRoutingAcceleratorAttributesError,
        >,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::UpdateCustomRoutingAcceleratorAttributesErrorKind::AcceleratorNotFoundException(inner) => Error::AcceleratorNotFoundException(inner),
                crate::error::UpdateCustomRoutingAcceleratorAttributesErrorKind::AccessDeniedException(inner) => Error::AccessDeniedException(inner),
                crate::error::UpdateCustomRoutingAcceleratorAttributesErrorKind::InternalServiceErrorException(inner) => Error::InternalServiceErrorException(inner),
                crate::error::UpdateCustomRoutingAcceleratorAttributesErrorKind::InvalidArgumentException(inner) => Error::InvalidArgumentException(inner),
                crate::error::UpdateCustomRoutingAcceleratorAttributesErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::UpdateCustomRoutingListenerError>> for Error {
    fn from(
        err: smithy_http::result::SdkError<crate::error::UpdateCustomRoutingListenerError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::UpdateCustomRoutingListenerErrorKind::InternalServiceErrorException(inner) => Error::InternalServiceErrorException(inner),
                crate::error::UpdateCustomRoutingListenerErrorKind::InvalidArgumentException(inner) => Error::InvalidArgumentException(inner),
                crate::error::UpdateCustomRoutingListenerErrorKind::InvalidPortRangeException(inner) => Error::InvalidPortRangeException(inner),
                crate::error::UpdateCustomRoutingListenerErrorKind::LimitExceededException(inner) => Error::LimitExceededException(inner),
                crate::error::UpdateCustomRoutingListenerErrorKind::ListenerNotFoundException(inner) => Error::ListenerNotFoundException(inner),
                crate::error::UpdateCustomRoutingListenerErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::UpdateEndpointGroupError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::UpdateEndpointGroupError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::UpdateEndpointGroupErrorKind::AccessDeniedException(inner) => {
                    Error::AccessDeniedException(inner)
                }
                crate::error::UpdateEndpointGroupErrorKind::EndpointGroupNotFoundException(
                    inner,
                ) => Error::EndpointGroupNotFoundException(inner),
                crate::error::UpdateEndpointGroupErrorKind::InternalServiceErrorException(
                    inner,
                ) => Error::InternalServiceErrorException(inner),
                crate::error::UpdateEndpointGroupErrorKind::InvalidArgumentException(inner) => {
                    Error::InvalidArgumentException(inner)
                }
                crate::error::UpdateEndpointGroupErrorKind::LimitExceededException(inner) => {
                    Error::LimitExceededException(inner)
                }
                crate::error::UpdateEndpointGroupErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::UpdateListenerError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::UpdateListenerError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::UpdateListenerErrorKind::InternalServiceErrorException(inner) => {
                    Error::InternalServiceErrorException(inner)
                }
                crate::error::UpdateListenerErrorKind::InvalidArgumentException(inner) => {
                    Error::InvalidArgumentException(inner)
                }
                crate::error::UpdateListenerErrorKind::InvalidPortRangeException(inner) => {
                    Error::InvalidPortRangeException(inner)
                }
                crate::error::UpdateListenerErrorKind::LimitExceededException(inner) => {
                    Error::LimitExceededException(inner)
                }
                crate::error::UpdateListenerErrorKind::ListenerNotFoundException(inner) => {
                    Error::ListenerNotFoundException(inner)
                }
                crate::error::UpdateListenerErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::WithdrawByoipCidrError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::WithdrawByoipCidrError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::WithdrawByoipCidrErrorKind::AccessDeniedException(inner) => {
                    Error::AccessDeniedException(inner)
                }
                crate::error::WithdrawByoipCidrErrorKind::ByoipCidrNotFoundException(inner) => {
                    Error::ByoipCidrNotFoundException(inner)
                }
                crate::error::WithdrawByoipCidrErrorKind::IncorrectCidrStateException(inner) => {
                    Error::IncorrectCidrStateException(inner)
                }
                crate::error::WithdrawByoipCidrErrorKind::InternalServiceErrorException(inner) => {
                    Error::InternalServiceErrorException(inner)
                }
                crate::error::WithdrawByoipCidrErrorKind::InvalidArgumentException(inner) => {
                    Error::InvalidArgumentException(inner)
                }
                crate::error::WithdrawByoipCidrErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl std::error::Error for Error {}
