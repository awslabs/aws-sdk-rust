// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A complex type that contains a <code>Message</code> and a <code>Timestamp</code> value for changes that you make in the status of an IP address range that you bring to Global Accelerator through bring your own IP address (BYOIP).</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ByoipCidrEvent {
    /// <p>A string that contains an <code>Event</code> message describing changes that you make in the status of an IP address range that you bring to Global Accelerator through bring your own IP address (BYOIP).</p>
    #[doc(hidden)]
    pub message: std::option::Option<std::string::String>,
    /// <p>A timestamp for when you make a status change for an IP address range that you bring to Global Accelerator through bring your own IP address (BYOIP).</p>
    #[doc(hidden)]
    pub timestamp: std::option::Option<aws_smithy_types::DateTime>,
}
impl ByoipCidrEvent {
    /// <p>A string that contains an <code>Event</code> message describing changes that you make in the status of an IP address range that you bring to Global Accelerator through bring your own IP address (BYOIP).</p>
    pub fn message(&self) -> std::option::Option<&str> {
        self.message.as_deref()
    }
    /// <p>A timestamp for when you make a status change for an IP address range that you bring to Global Accelerator through bring your own IP address (BYOIP).</p>
    pub fn timestamp(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.timestamp.as_ref()
    }
}
impl ByoipCidrEvent {
    /// Creates a new builder-style object to manufacture [`ByoipCidrEvent`](crate::types::ByoipCidrEvent).
    pub fn builder() -> crate::types::builders::ByoipCidrEventBuilder {
        crate::types::builders::ByoipCidrEventBuilder::default()
    }
}

/// A builder for [`ByoipCidrEvent`](crate::types::ByoipCidrEvent).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ByoipCidrEventBuilder {
    pub(crate) message: std::option::Option<std::string::String>,
    pub(crate) timestamp: std::option::Option<aws_smithy_types::DateTime>,
}
impl ByoipCidrEventBuilder {
    /// <p>A string that contains an <code>Event</code> message describing changes that you make in the status of an IP address range that you bring to Global Accelerator through bring your own IP address (BYOIP).</p>
    pub fn message(mut self, input: impl Into<std::string::String>) -> Self {
        self.message = Some(input.into());
        self
    }
    /// <p>A string that contains an <code>Event</code> message describing changes that you make in the status of an IP address range that you bring to Global Accelerator through bring your own IP address (BYOIP).</p>
    pub fn set_message(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.message = input;
        self
    }
    /// <p>A timestamp for when you make a status change for an IP address range that you bring to Global Accelerator through bring your own IP address (BYOIP).</p>
    pub fn timestamp(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.timestamp = Some(input);
        self
    }
    /// <p>A timestamp for when you make a status change for an IP address range that you bring to Global Accelerator through bring your own IP address (BYOIP).</p>
    pub fn set_timestamp(mut self, input: std::option::Option<aws_smithy_types::DateTime>) -> Self {
        self.timestamp = input;
        self
    }
    /// Consumes the builder and constructs a [`ByoipCidrEvent`](crate::types::ByoipCidrEvent).
    pub fn build(self) -> crate::types::ByoipCidrEvent {
        crate::types::ByoipCidrEvent {
            message: self.message,
            timestamp: self.timestamp,
        }
    }
}
