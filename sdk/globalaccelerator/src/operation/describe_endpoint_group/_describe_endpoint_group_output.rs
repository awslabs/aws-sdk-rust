// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DescribeEndpointGroupOutput {
    /// <p>The description of an endpoint group.</p>
    #[doc(hidden)]
    pub endpoint_group: std::option::Option<crate::types::EndpointGroup>,
    _request_id: Option<String>,
}
impl DescribeEndpointGroupOutput {
    /// <p>The description of an endpoint group.</p>
    pub fn endpoint_group(&self) -> std::option::Option<&crate::types::EndpointGroup> {
        self.endpoint_group.as_ref()
    }
}
impl aws_http::request_id::RequestId for DescribeEndpointGroupOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl DescribeEndpointGroupOutput {
    /// Creates a new builder-style object to manufacture [`DescribeEndpointGroupOutput`](crate::operation::describe_endpoint_group::DescribeEndpointGroupOutput).
    pub fn builder(
    ) -> crate::operation::describe_endpoint_group::builders::DescribeEndpointGroupOutputBuilder
    {
        crate::operation::describe_endpoint_group::builders::DescribeEndpointGroupOutputBuilder::default()
    }
}

/// A builder for [`DescribeEndpointGroupOutput`](crate::operation::describe_endpoint_group::DescribeEndpointGroupOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DescribeEndpointGroupOutputBuilder {
    pub(crate) endpoint_group: std::option::Option<crate::types::EndpointGroup>,
    _request_id: Option<String>,
}
impl DescribeEndpointGroupOutputBuilder {
    /// <p>The description of an endpoint group.</p>
    pub fn endpoint_group(mut self, input: crate::types::EndpointGroup) -> Self {
        self.endpoint_group = Some(input);
        self
    }
    /// <p>The description of an endpoint group.</p>
    pub fn set_endpoint_group(
        mut self,
        input: std::option::Option<crate::types::EndpointGroup>,
    ) -> Self {
        self.endpoint_group = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`DescribeEndpointGroupOutput`](crate::operation::describe_endpoint_group::DescribeEndpointGroupOutput).
    pub fn build(self) -> crate::operation::describe_endpoint_group::DescribeEndpointGroupOutput {
        crate::operation::describe_endpoint_group::DescribeEndpointGroupOutput {
            endpoint_group: self.endpoint_group,
            _request_id: self._request_id,
        }
    }
}
