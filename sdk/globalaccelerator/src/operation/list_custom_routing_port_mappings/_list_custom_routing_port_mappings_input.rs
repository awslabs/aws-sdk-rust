// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ListCustomRoutingPortMappingsInput {
    /// <p>The Amazon Resource Name (ARN) of the accelerator to list the custom routing port mappings for.</p>
    pub accelerator_arn: ::std::option::Option<::std::string::String>,
    /// <p>The Amazon Resource Name (ARN) of the endpoint group to list the custom routing port mappings for.</p>
    pub endpoint_group_arn: ::std::option::Option<::std::string::String>,
    /// <p>The number of destination port mappings that you want to return with this call. The default value is 10.</p>
    pub max_results: ::std::option::Option<i32>,
    /// <p>The token for the next set of results. You receive this token from a previous call.</p>
    pub next_token: ::std::option::Option<::std::string::String>,
}
impl ListCustomRoutingPortMappingsInput {
    /// <p>The Amazon Resource Name (ARN) of the accelerator to list the custom routing port mappings for.</p>
    pub fn accelerator_arn(&self) -> ::std::option::Option<&str> {
        self.accelerator_arn.as_deref()
    }
    /// <p>The Amazon Resource Name (ARN) of the endpoint group to list the custom routing port mappings for.</p>
    pub fn endpoint_group_arn(&self) -> ::std::option::Option<&str> {
        self.endpoint_group_arn.as_deref()
    }
    /// <p>The number of destination port mappings that you want to return with this call. The default value is 10.</p>
    pub fn max_results(&self) -> ::std::option::Option<i32> {
        self.max_results
    }
    /// <p>The token for the next set of results. You receive this token from a previous call.</p>
    pub fn next_token(&self) -> ::std::option::Option<&str> {
        self.next_token.as_deref()
    }
}
impl ListCustomRoutingPortMappingsInput {
    /// Creates a new builder-style object to manufacture [`ListCustomRoutingPortMappingsInput`](crate::operation::list_custom_routing_port_mappings::ListCustomRoutingPortMappingsInput).
    pub fn builder() -> crate::operation::list_custom_routing_port_mappings::builders::ListCustomRoutingPortMappingsInputBuilder {
        crate::operation::list_custom_routing_port_mappings::builders::ListCustomRoutingPortMappingsInputBuilder::default()
    }
}

/// A builder for [`ListCustomRoutingPortMappingsInput`](crate::operation::list_custom_routing_port_mappings::ListCustomRoutingPortMappingsInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ListCustomRoutingPortMappingsInputBuilder {
    pub(crate) accelerator_arn: ::std::option::Option<::std::string::String>,
    pub(crate) endpoint_group_arn: ::std::option::Option<::std::string::String>,
    pub(crate) max_results: ::std::option::Option<i32>,
    pub(crate) next_token: ::std::option::Option<::std::string::String>,
}
impl ListCustomRoutingPortMappingsInputBuilder {
    /// <p>The Amazon Resource Name (ARN) of the accelerator to list the custom routing port mappings for.</p>
    /// This field is required.
    pub fn accelerator_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.accelerator_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the accelerator to list the custom routing port mappings for.</p>
    pub fn set_accelerator_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.accelerator_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the accelerator to list the custom routing port mappings for.</p>
    pub fn get_accelerator_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.accelerator_arn
    }
    /// <p>The Amazon Resource Name (ARN) of the endpoint group to list the custom routing port mappings for.</p>
    pub fn endpoint_group_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.endpoint_group_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the endpoint group to list the custom routing port mappings for.</p>
    pub fn set_endpoint_group_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.endpoint_group_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the endpoint group to list the custom routing port mappings for.</p>
    pub fn get_endpoint_group_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.endpoint_group_arn
    }
    /// <p>The number of destination port mappings that you want to return with this call. The default value is 10.</p>
    pub fn max_results(mut self, input: i32) -> Self {
        self.max_results = ::std::option::Option::Some(input);
        self
    }
    /// <p>The number of destination port mappings that you want to return with this call. The default value is 10.</p>
    pub fn set_max_results(mut self, input: ::std::option::Option<i32>) -> Self {
        self.max_results = input;
        self
    }
    /// <p>The number of destination port mappings that you want to return with this call. The default value is 10.</p>
    pub fn get_max_results(&self) -> &::std::option::Option<i32> {
        &self.max_results
    }
    /// <p>The token for the next set of results. You receive this token from a previous call.</p>
    pub fn next_token(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.next_token = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The token for the next set of results. You receive this token from a previous call.</p>
    pub fn set_next_token(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// <p>The token for the next set of results. You receive this token from a previous call.</p>
    pub fn get_next_token(&self) -> &::std::option::Option<::std::string::String> {
        &self.next_token
    }
    /// Consumes the builder and constructs a [`ListCustomRoutingPortMappingsInput`](crate::operation::list_custom_routing_port_mappings::ListCustomRoutingPortMappingsInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::list_custom_routing_port_mappings::ListCustomRoutingPortMappingsInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::list_custom_routing_port_mappings::ListCustomRoutingPortMappingsInput {
            accelerator_arn: self.accelerator_arn,
            endpoint_group_arn: self.endpoint_group_arn,
            max_results: self.max_results,
            next_token: self.next_token,
        })
    }
}
