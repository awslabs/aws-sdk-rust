// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn parse_http_error_metadata(
    response: &http::Response<bytes::Bytes>,
) -> Result<
    aws_smithy_types::error::metadata::Builder,
    aws_smithy_json::deserialize::error::DeserializeError,
> {
    crate::json_errors::parse_error_metadata(response.body(), response.headers())
}

pub(crate) mod shape_delete_session;

pub(crate) mod shape_get_session;

pub(crate) mod shape_post_content;

pub(crate) mod shape_post_content_input;

pub(crate) mod shape_post_text;

pub(crate) mod shape_put_session;

pub(crate) fn or_empty_doc(data: &[u8]) -> &[u8] {
    if data.is_empty() {
        b"{}"
    } else {
        data
    }
}

pub(crate) mod shape_bad_gateway_exception;

pub(crate) mod shape_bad_request_exception;

pub(crate) mod shape_conflict_exception;

pub(crate) mod shape_dependency_failed_exception;

pub(crate) mod shape_internal_failure_exception;

pub(crate) mod shape_limit_exceeded_exception;

pub(crate) mod shape_loop_detected_exception;

pub(crate) mod shape_not_acceptable_exception;

pub(crate) mod shape_not_found_exception;

pub(crate) mod shape_post_content_output;

pub(crate) mod shape_post_text_input;

pub(crate) mod shape_put_session_input;

pub(crate) mod shape_put_session_output;

pub(crate) mod shape_request_timeout_exception;

pub(crate) mod shape_unsupported_media_type_exception;

pub(crate) mod shape_active_context;

pub(crate) mod shape_active_contexts_list;

pub(crate) mod shape_dialog_action;

pub(crate) mod shape_intent_confidence;

pub(crate) mod shape_intent_list;

pub(crate) mod shape_intent_summary;

pub(crate) mod shape_intent_summary_list;

pub(crate) mod shape_response_card;

pub(crate) mod shape_sentiment_response;

pub(crate) mod shape_string_map;

pub(crate) mod shape_active_context_time_to_live;

pub(crate) mod shape_generic_attachment_list;

pub(crate) mod shape_predicted_intent;

pub(crate) mod shape_active_context_parameters_map;

pub(crate) mod shape_generic_attachment;

pub(crate) mod shape_list_of_buttons;

pub(crate) mod shape_button;
