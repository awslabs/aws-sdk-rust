// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GetRegexMatchSetInput {
    /// <p>The <code>RegexMatchSetId</code> of the <code>RegexMatchSet</code> that you want to get. <code>RegexMatchSetId</code> is returned by <code>CreateRegexMatchSet</code> and by <code>ListRegexMatchSets</code>.</p>
    #[doc(hidden)]
    pub regex_match_set_id: std::option::Option<std::string::String>,
}
impl GetRegexMatchSetInput {
    /// <p>The <code>RegexMatchSetId</code> of the <code>RegexMatchSet</code> that you want to get. <code>RegexMatchSetId</code> is returned by <code>CreateRegexMatchSet</code> and by <code>ListRegexMatchSets</code>.</p>
    pub fn regex_match_set_id(&self) -> std::option::Option<&str> {
        self.regex_match_set_id.as_deref()
    }
}
impl GetRegexMatchSetInput {
    /// Creates a new builder-style object to manufacture [`GetRegexMatchSetInput`](crate::operation::get_regex_match_set::GetRegexMatchSetInput).
    pub fn builder() -> crate::operation::get_regex_match_set::builders::GetRegexMatchSetInputBuilder
    {
        crate::operation::get_regex_match_set::builders::GetRegexMatchSetInputBuilder::default()
    }
}

/// A builder for [`GetRegexMatchSetInput`](crate::operation::get_regex_match_set::GetRegexMatchSetInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct GetRegexMatchSetInputBuilder {
    pub(crate) regex_match_set_id: std::option::Option<std::string::String>,
}
impl GetRegexMatchSetInputBuilder {
    /// <p>The <code>RegexMatchSetId</code> of the <code>RegexMatchSet</code> that you want to get. <code>RegexMatchSetId</code> is returned by <code>CreateRegexMatchSet</code> and by <code>ListRegexMatchSets</code>.</p>
    pub fn regex_match_set_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.regex_match_set_id = Some(input.into());
        self
    }
    /// <p>The <code>RegexMatchSetId</code> of the <code>RegexMatchSet</code> that you want to get. <code>RegexMatchSetId</code> is returned by <code>CreateRegexMatchSet</code> and by <code>ListRegexMatchSets</code>.</p>
    pub fn set_regex_match_set_id(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.regex_match_set_id = input;
        self
    }
    /// Consumes the builder and constructs a [`GetRegexMatchSetInput`](crate::operation::get_regex_match_set::GetRegexMatchSetInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::get_regex_match_set::GetRegexMatchSetInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::get_regex_match_set::GetRegexMatchSetInput {
                regex_match_set_id: self.regex_match_set_id,
            },
        )
    }
}
