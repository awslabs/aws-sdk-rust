// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateRegexPatternSet`](crate::client::fluent_builders::UpdateRegexPatternSet) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`regex_pattern_set_id(impl Into<String>)`](crate::client::fluent_builders::UpdateRegexPatternSet::regex_pattern_set_id) / [`set_regex_pattern_set_id(Option<String>)`](crate::client::fluent_builders::UpdateRegexPatternSet::set_regex_pattern_set_id): <p>The <code>RegexPatternSetId</code> of the <code>RegexPatternSet</code> that you want to update. <code>RegexPatternSetId</code> is returned by <code>CreateRegexPatternSet</code> and by <code>ListRegexPatternSets</code>.</p>
    ///   - [`updates(Vec<RegexPatternSetUpdate>)`](crate::client::fluent_builders::UpdateRegexPatternSet::updates) / [`set_updates(Option<Vec<RegexPatternSetUpdate>>)`](crate::client::fluent_builders::UpdateRegexPatternSet::set_updates): <p>An array of <code>RegexPatternSetUpdate</code> objects that you want to insert into or delete from a <code>RegexPatternSet</code>.</p>
    ///   - [`change_token(impl Into<String>)`](crate::client::fluent_builders::UpdateRegexPatternSet::change_token) / [`set_change_token(Option<String>)`](crate::client::fluent_builders::UpdateRegexPatternSet::set_change_token): <p>The value returned by the most recent call to <code>GetChangeToken</code>.</p>
    /// - On success, responds with [`UpdateRegexPatternSetOutput`](crate::output::UpdateRegexPatternSetOutput) with field(s):
    ///   - [`change_token(Option<String>)`](crate::output::UpdateRegexPatternSetOutput::change_token): <p>The <code>ChangeToken</code> that you used to submit the <code>UpdateRegexPatternSet</code> request. You can also use this value to query the status of the request. For more information, see <code>GetChangeTokenStatus</code>.</p>
    /// - On failure, responds with [`SdkError<UpdateRegexPatternSetError>`](crate::error::UpdateRegexPatternSetError)
    pub fn update_regex_pattern_set(
        &self,
    ) -> crate::client::fluent_builders::UpdateRegexPatternSet {
        crate::client::fluent_builders::UpdateRegexPatternSet::new(self.handle.clone())
    }
}
