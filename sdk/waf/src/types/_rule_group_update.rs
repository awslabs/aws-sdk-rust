// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <note>
/// <p>This is <b>AWS WAF Classic</b> documentation. For more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS WAF Classic</a> in the developer guide.</p>
/// <p> <b>For the latest version of AWS WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
/// </note>
/// <p>Specifies an <code>ActivatedRule</code> and indicates whether you want to add it to a <code>RuleGroup</code> or delete it from a <code>RuleGroup</code>.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct RuleGroupUpdate {
    /// <p>Specify <code>INSERT</code> to add an <code>ActivatedRule</code> to a <code>RuleGroup</code>. Use <code>DELETE</code> to remove an <code>ActivatedRule</code> from a <code>RuleGroup</code>.</p>
    #[doc(hidden)]
    pub action: std::option::Option<crate::types::ChangeAction>,
    /// <p>The <code>ActivatedRule</code> object specifies a <code>Rule</code> that you want to insert or delete, the priority of the <code>Rule</code> in the <code>WebACL</code>, and the action that you want AWS WAF to take when a web request matches the <code>Rule</code> (<code>ALLOW</code>, <code>BLOCK</code>, or <code>COUNT</code>).</p>
    #[doc(hidden)]
    pub activated_rule: std::option::Option<crate::types::ActivatedRule>,
}
impl RuleGroupUpdate {
    /// <p>Specify <code>INSERT</code> to add an <code>ActivatedRule</code> to a <code>RuleGroup</code>. Use <code>DELETE</code> to remove an <code>ActivatedRule</code> from a <code>RuleGroup</code>.</p>
    pub fn action(&self) -> std::option::Option<&crate::types::ChangeAction> {
        self.action.as_ref()
    }
    /// <p>The <code>ActivatedRule</code> object specifies a <code>Rule</code> that you want to insert or delete, the priority of the <code>Rule</code> in the <code>WebACL</code>, and the action that you want AWS WAF to take when a web request matches the <code>Rule</code> (<code>ALLOW</code>, <code>BLOCK</code>, or <code>COUNT</code>).</p>
    pub fn activated_rule(&self) -> std::option::Option<&crate::types::ActivatedRule> {
        self.activated_rule.as_ref()
    }
}
impl RuleGroupUpdate {
    /// Creates a new builder-style object to manufacture [`RuleGroupUpdate`](crate::types::RuleGroupUpdate).
    pub fn builder() -> crate::types::builders::RuleGroupUpdateBuilder {
        crate::types::builders::RuleGroupUpdateBuilder::default()
    }
}

/// A builder for [`RuleGroupUpdate`](crate::types::RuleGroupUpdate).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct RuleGroupUpdateBuilder {
    pub(crate) action: std::option::Option<crate::types::ChangeAction>,
    pub(crate) activated_rule: std::option::Option<crate::types::ActivatedRule>,
}
impl RuleGroupUpdateBuilder {
    /// <p>Specify <code>INSERT</code> to add an <code>ActivatedRule</code> to a <code>RuleGroup</code>. Use <code>DELETE</code> to remove an <code>ActivatedRule</code> from a <code>RuleGroup</code>.</p>
    pub fn action(mut self, input: crate::types::ChangeAction) -> Self {
        self.action = Some(input);
        self
    }
    /// <p>Specify <code>INSERT</code> to add an <code>ActivatedRule</code> to a <code>RuleGroup</code>. Use <code>DELETE</code> to remove an <code>ActivatedRule</code> from a <code>RuleGroup</code>.</p>
    pub fn set_action(mut self, input: std::option::Option<crate::types::ChangeAction>) -> Self {
        self.action = input;
        self
    }
    /// <p>The <code>ActivatedRule</code> object specifies a <code>Rule</code> that you want to insert or delete, the priority of the <code>Rule</code> in the <code>WebACL</code>, and the action that you want AWS WAF to take when a web request matches the <code>Rule</code> (<code>ALLOW</code>, <code>BLOCK</code>, or <code>COUNT</code>).</p>
    pub fn activated_rule(mut self, input: crate::types::ActivatedRule) -> Self {
        self.activated_rule = Some(input);
        self
    }
    /// <p>The <code>ActivatedRule</code> object specifies a <code>Rule</code> that you want to insert or delete, the priority of the <code>Rule</code> in the <code>WebACL</code>, and the action that you want AWS WAF to take when a web request matches the <code>Rule</code> (<code>ALLOW</code>, <code>BLOCK</code>, or <code>COUNT</code>).</p>
    pub fn set_activated_rule(
        mut self,
        input: std::option::Option<crate::types::ActivatedRule>,
    ) -> Self {
        self.activated_rule = input;
        self
    }
    /// Consumes the builder and constructs a [`RuleGroupUpdate`](crate::types::RuleGroupUpdate).
    pub fn build(self) -> crate::types::RuleGroupUpdate {
        crate::types::RuleGroupUpdate {
            action: self.action,
            activated_rule: self.activated_rule,
        }
    }
}
