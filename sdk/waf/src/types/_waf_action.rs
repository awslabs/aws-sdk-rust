// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <note>
/// <p>This is <b>AWS WAF Classic</b> documentation. For more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS WAF Classic</a> in the developer guide.</p>
/// <p> <b>For the latest version of AWS WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p>
/// </note>
/// <p>For the action that is associated with a rule in a <code>WebACL</code>, specifies the action that you want AWS WAF to perform when a web request matches all of the conditions in a rule. For the default action in a <code>WebACL</code>, specifies the action that you want AWS WAF to take when a web request doesn't match all of the conditions in any of the rules in a <code>WebACL</code>. </p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct WafAction {
    /// <p>Specifies how you want AWS WAF to respond to requests that match the settings in a <code>Rule</code>. Valid settings include the following:</p>
    /// <ul>
    /// <li> <p> <code>ALLOW</code>: AWS WAF allows requests</p> </li>
    /// <li> <p> <code>BLOCK</code>: AWS WAF blocks requests</p> </li>
    /// <li> <p> <code>COUNT</code>: AWS WAF increments a counter of the requests that match all of the conditions in the rule. AWS WAF then continues to inspect the web request based on the remaining rules in the web ACL. You can't specify <code>COUNT</code> for the default action for a <code>WebACL</code>.</p> </li>
    /// </ul>
    pub r#type: crate::types::WafActionType,
}
impl WafAction {
    /// <p>Specifies how you want AWS WAF to respond to requests that match the settings in a <code>Rule</code>. Valid settings include the following:</p>
    /// <ul>
    /// <li> <p> <code>ALLOW</code>: AWS WAF allows requests</p> </li>
    /// <li> <p> <code>BLOCK</code>: AWS WAF blocks requests</p> </li>
    /// <li> <p> <code>COUNT</code>: AWS WAF increments a counter of the requests that match all of the conditions in the rule. AWS WAF then continues to inspect the web request based on the remaining rules in the web ACL. You can't specify <code>COUNT</code> for the default action for a <code>WebACL</code>.</p> </li>
    /// </ul>
    pub fn r#type(&self) -> &crate::types::WafActionType {
        &self.r#type
    }
}
impl WafAction {
    /// Creates a new builder-style object to manufacture [`WafAction`](crate::types::WafAction).
    pub fn builder() -> crate::types::builders::WafActionBuilder {
        crate::types::builders::WafActionBuilder::default()
    }
}

/// A builder for [`WafAction`](crate::types::WafAction).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct WafActionBuilder {
    pub(crate) r#type: ::std::option::Option<crate::types::WafActionType>,
}
impl WafActionBuilder {
    /// <p>Specifies how you want AWS WAF to respond to requests that match the settings in a <code>Rule</code>. Valid settings include the following:</p>
    /// <ul>
    /// <li> <p> <code>ALLOW</code>: AWS WAF allows requests</p> </li>
    /// <li> <p> <code>BLOCK</code>: AWS WAF blocks requests</p> </li>
    /// <li> <p> <code>COUNT</code>: AWS WAF increments a counter of the requests that match all of the conditions in the rule. AWS WAF then continues to inspect the web request based on the remaining rules in the web ACL. You can't specify <code>COUNT</code> for the default action for a <code>WebACL</code>.</p> </li>
    /// </ul>
    /// This field is required.
    pub fn r#type(mut self, input: crate::types::WafActionType) -> Self {
        self.r#type = ::std::option::Option::Some(input);
        self
    }
    /// <p>Specifies how you want AWS WAF to respond to requests that match the settings in a <code>Rule</code>. Valid settings include the following:</p>
    /// <ul>
    /// <li> <p> <code>ALLOW</code>: AWS WAF allows requests</p> </li>
    /// <li> <p> <code>BLOCK</code>: AWS WAF blocks requests</p> </li>
    /// <li> <p> <code>COUNT</code>: AWS WAF increments a counter of the requests that match all of the conditions in the rule. AWS WAF then continues to inspect the web request based on the remaining rules in the web ACL. You can't specify <code>COUNT</code> for the default action for a <code>WebACL</code>.</p> </li>
    /// </ul>
    pub fn set_type(mut self, input: ::std::option::Option<crate::types::WafActionType>) -> Self {
        self.r#type = input;
        self
    }
    /// <p>Specifies how you want AWS WAF to respond to requests that match the settings in a <code>Rule</code>. Valid settings include the following:</p>
    /// <ul>
    /// <li> <p> <code>ALLOW</code>: AWS WAF allows requests</p> </li>
    /// <li> <p> <code>BLOCK</code>: AWS WAF blocks requests</p> </li>
    /// <li> <p> <code>COUNT</code>: AWS WAF increments a counter of the requests that match all of the conditions in the rule. AWS WAF then continues to inspect the web request based on the remaining rules in the web ACL. You can't specify <code>COUNT</code> for the default action for a <code>WebACL</code>.</p> </li>
    /// </ul>
    pub fn get_type(&self) -> &::std::option::Option<crate::types::WafActionType> {
        &self.r#type
    }
    /// Consumes the builder and constructs a [`WafAction`](crate::types::WafAction).
    /// This method will fail if any of the following fields are not set:
    /// - [`r#type`](crate::types::builders::WafActionBuilder::r#type)
    pub fn build(self) -> ::std::result::Result<crate::types::WafAction, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::WafAction {
            r#type: self.r#type.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "r#type",
                    "r#type was not specified but it is required when building WafAction",
                )
            })?,
        })
    }
}
