// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[non_exhaustive]
#[derive(std::fmt::Debug)]
pub enum Error {
    WafBadRequestException(crate::error::WafBadRequestException),
    WafDisallowedNameException(crate::error::WafDisallowedNameException),
    WafEntityMigrationException(crate::error::WafEntityMigrationException),
    WafInternalErrorException(crate::error::WafInternalErrorException),
    WafInvalidAccountException(crate::error::WafInvalidAccountException),
    WafInvalidOperationException(crate::error::WafInvalidOperationException),
    WafInvalidParameterException(crate::error::WafInvalidParameterException),
    WafInvalidPermissionPolicyException(crate::error::WafInvalidPermissionPolicyException),
    WafInvalidRegexPatternException(crate::error::WafInvalidRegexPatternException),
    WafLimitsExceededException(crate::error::WafLimitsExceededException),
    WafNonEmptyEntityException(crate::error::WafNonEmptyEntityException),
    WafNonexistentContainerException(crate::error::WafNonexistentContainerException),
    WafNonexistentItemException(crate::error::WafNonexistentItemException),
    WafReferencedItemException(crate::error::WafReferencedItemException),
    WafServiceLinkedRoleErrorException(crate::error::WafServiceLinkedRoleErrorException),
    WafStaleDataException(crate::error::WafStaleDataException),
    WafSubscriptionNotFoundException(crate::error::WafSubscriptionNotFoundException),
    WafTagOperationException(crate::error::WafTagOperationException),
    WafTagOperationInternalErrorException(crate::error::WafTagOperationInternalErrorException),
    Unhandled(Box<dyn std::error::Error + Send + Sync + 'static>),
}
impl std::fmt::Display for Error {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        match self {
            Error::WafBadRequestException(inner) => inner.fmt(f),
            Error::WafDisallowedNameException(inner) => inner.fmt(f),
            Error::WafEntityMigrationException(inner) => inner.fmt(f),
            Error::WafInternalErrorException(inner) => inner.fmt(f),
            Error::WafInvalidAccountException(inner) => inner.fmt(f),
            Error::WafInvalidOperationException(inner) => inner.fmt(f),
            Error::WafInvalidParameterException(inner) => inner.fmt(f),
            Error::WafInvalidPermissionPolicyException(inner) => inner.fmt(f),
            Error::WafInvalidRegexPatternException(inner) => inner.fmt(f),
            Error::WafLimitsExceededException(inner) => inner.fmt(f),
            Error::WafNonEmptyEntityException(inner) => inner.fmt(f),
            Error::WafNonexistentContainerException(inner) => inner.fmt(f),
            Error::WafNonexistentItemException(inner) => inner.fmt(f),
            Error::WafReferencedItemException(inner) => inner.fmt(f),
            Error::WafServiceLinkedRoleErrorException(inner) => inner.fmt(f),
            Error::WafStaleDataException(inner) => inner.fmt(f),
            Error::WafSubscriptionNotFoundException(inner) => inner.fmt(f),
            Error::WafTagOperationException(inner) => inner.fmt(f),
            Error::WafTagOperationInternalErrorException(inner) => inner.fmt(f),
            Error::Unhandled(inner) => inner.fmt(f),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::CreateByteMatchSetError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::CreateByteMatchSetError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::CreateByteMatchSetErrorKind::WafDisallowedNameException(inner) => {
                    Error::WafDisallowedNameException(inner)
                }
                crate::error::CreateByteMatchSetErrorKind::WafInternalErrorException(inner) => {
                    Error::WafInternalErrorException(inner)
                }
                crate::error::CreateByteMatchSetErrorKind::WafInvalidAccountException(inner) => {
                    Error::WafInvalidAccountException(inner)
                }
                crate::error::CreateByteMatchSetErrorKind::WafInvalidParameterException(inner) => {
                    Error::WafInvalidParameterException(inner)
                }
                crate::error::CreateByteMatchSetErrorKind::WafLimitsExceededException(inner) => {
                    Error::WafLimitsExceededException(inner)
                }
                crate::error::CreateByteMatchSetErrorKind::WafStaleDataException(inner) => {
                    Error::WafStaleDataException(inner)
                }
                crate::error::CreateByteMatchSetErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::CreateGeoMatchSetError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::CreateGeoMatchSetError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::CreateGeoMatchSetErrorKind::WafDisallowedNameException(inner) => {
                    Error::WafDisallowedNameException(inner)
                }
                crate::error::CreateGeoMatchSetErrorKind::WafInternalErrorException(inner) => {
                    Error::WafInternalErrorException(inner)
                }
                crate::error::CreateGeoMatchSetErrorKind::WafInvalidAccountException(inner) => {
                    Error::WafInvalidAccountException(inner)
                }
                crate::error::CreateGeoMatchSetErrorKind::WafInvalidParameterException(inner) => {
                    Error::WafInvalidParameterException(inner)
                }
                crate::error::CreateGeoMatchSetErrorKind::WafLimitsExceededException(inner) => {
                    Error::WafLimitsExceededException(inner)
                }
                crate::error::CreateGeoMatchSetErrorKind::WafStaleDataException(inner) => {
                    Error::WafStaleDataException(inner)
                }
                crate::error::CreateGeoMatchSetErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::CreateIPSetError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::CreateIPSetError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::CreateIPSetErrorKind::WafDisallowedNameException(inner) => {
                    Error::WafDisallowedNameException(inner)
                }
                crate::error::CreateIPSetErrorKind::WafInternalErrorException(inner) => {
                    Error::WafInternalErrorException(inner)
                }
                crate::error::CreateIPSetErrorKind::WafInvalidAccountException(inner) => {
                    Error::WafInvalidAccountException(inner)
                }
                crate::error::CreateIPSetErrorKind::WafInvalidParameterException(inner) => {
                    Error::WafInvalidParameterException(inner)
                }
                crate::error::CreateIPSetErrorKind::WafLimitsExceededException(inner) => {
                    Error::WafLimitsExceededException(inner)
                }
                crate::error::CreateIPSetErrorKind::WafStaleDataException(inner) => {
                    Error::WafStaleDataException(inner)
                }
                crate::error::CreateIPSetErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::CreateRateBasedRuleError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::CreateRateBasedRuleError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::CreateRateBasedRuleErrorKind::WafBadRequestException(inner) => Error::WafBadRequestException(inner),
                crate::error::CreateRateBasedRuleErrorKind::WafDisallowedNameException(inner) => Error::WafDisallowedNameException(inner),
                crate::error::CreateRateBasedRuleErrorKind::WafInternalErrorException(inner) => Error::WafInternalErrorException(inner),
                crate::error::CreateRateBasedRuleErrorKind::WafInvalidParameterException(inner) => Error::WafInvalidParameterException(inner),
                crate::error::CreateRateBasedRuleErrorKind::WafLimitsExceededException(inner) => Error::WafLimitsExceededException(inner),
                crate::error::CreateRateBasedRuleErrorKind::WafStaleDataException(inner) => Error::WafStaleDataException(inner),
                crate::error::CreateRateBasedRuleErrorKind::WafTagOperationException(inner) => Error::WafTagOperationException(inner),
                crate::error::CreateRateBasedRuleErrorKind::WafTagOperationInternalErrorException(inner) => Error::WafTagOperationInternalErrorException(inner),
                crate::error::CreateRateBasedRuleErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::CreateRegexMatchSetError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::CreateRegexMatchSetError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::CreateRegexMatchSetErrorKind::WafDisallowedNameException(inner) => {
                    Error::WafDisallowedNameException(inner)
                }
                crate::error::CreateRegexMatchSetErrorKind::WafInternalErrorException(inner) => {
                    Error::WafInternalErrorException(inner)
                }
                crate::error::CreateRegexMatchSetErrorKind::WafLimitsExceededException(inner) => {
                    Error::WafLimitsExceededException(inner)
                }
                crate::error::CreateRegexMatchSetErrorKind::WafStaleDataException(inner) => {
                    Error::WafStaleDataException(inner)
                }
                crate::error::CreateRegexMatchSetErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::CreateRegexPatternSetError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::CreateRegexPatternSetError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::CreateRegexPatternSetErrorKind::WafDisallowedNameException(inner) => {
                    Error::WafDisallowedNameException(inner)
                }
                crate::error::CreateRegexPatternSetErrorKind::WafInternalErrorException(inner) => {
                    Error::WafInternalErrorException(inner)
                }
                crate::error::CreateRegexPatternSetErrorKind::WafLimitsExceededException(inner) => {
                    Error::WafLimitsExceededException(inner)
                }
                crate::error::CreateRegexPatternSetErrorKind::WafStaleDataException(inner) => {
                    Error::WafStaleDataException(inner)
                }
                crate::error::CreateRegexPatternSetErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::CreateRuleError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::CreateRuleError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::CreateRuleErrorKind::WafBadRequestException(inner) => {
                    Error::WafBadRequestException(inner)
                }
                crate::error::CreateRuleErrorKind::WafDisallowedNameException(inner) => {
                    Error::WafDisallowedNameException(inner)
                }
                crate::error::CreateRuleErrorKind::WafInternalErrorException(inner) => {
                    Error::WafInternalErrorException(inner)
                }
                crate::error::CreateRuleErrorKind::WafInvalidParameterException(inner) => {
                    Error::WafInvalidParameterException(inner)
                }
                crate::error::CreateRuleErrorKind::WafLimitsExceededException(inner) => {
                    Error::WafLimitsExceededException(inner)
                }
                crate::error::CreateRuleErrorKind::WafStaleDataException(inner) => {
                    Error::WafStaleDataException(inner)
                }
                crate::error::CreateRuleErrorKind::WafTagOperationException(inner) => {
                    Error::WafTagOperationException(inner)
                }
                crate::error::CreateRuleErrorKind::WafTagOperationInternalErrorException(inner) => {
                    Error::WafTagOperationInternalErrorException(inner)
                }
                crate::error::CreateRuleErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::CreateRuleGroupError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::CreateRuleGroupError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::CreateRuleGroupErrorKind::WafBadRequestException(inner) => {
                    Error::WafBadRequestException(inner)
                }
                crate::error::CreateRuleGroupErrorKind::WafDisallowedNameException(inner) => {
                    Error::WafDisallowedNameException(inner)
                }
                crate::error::CreateRuleGroupErrorKind::WafInternalErrorException(inner) => {
                    Error::WafInternalErrorException(inner)
                }
                crate::error::CreateRuleGroupErrorKind::WafLimitsExceededException(inner) => {
                    Error::WafLimitsExceededException(inner)
                }
                crate::error::CreateRuleGroupErrorKind::WafStaleDataException(inner) => {
                    Error::WafStaleDataException(inner)
                }
                crate::error::CreateRuleGroupErrorKind::WafTagOperationException(inner) => {
                    Error::WafTagOperationException(inner)
                }
                crate::error::CreateRuleGroupErrorKind::WafTagOperationInternalErrorException(
                    inner,
                ) => Error::WafTagOperationInternalErrorException(inner),
                crate::error::CreateRuleGroupErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::CreateSizeConstraintSetError>> for Error {
    fn from(
        err: smithy_http::result::SdkError<crate::error::CreateSizeConstraintSetError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::CreateSizeConstraintSetErrorKind::WafDisallowedNameException(
                    inner,
                ) => Error::WafDisallowedNameException(inner),
                crate::error::CreateSizeConstraintSetErrorKind::WafInternalErrorException(
                    inner,
                ) => Error::WafInternalErrorException(inner),
                crate::error::CreateSizeConstraintSetErrorKind::WafInvalidAccountException(
                    inner,
                ) => Error::WafInvalidAccountException(inner),
                crate::error::CreateSizeConstraintSetErrorKind::WafInvalidParameterException(
                    inner,
                ) => Error::WafInvalidParameterException(inner),
                crate::error::CreateSizeConstraintSetErrorKind::WafLimitsExceededException(
                    inner,
                ) => Error::WafLimitsExceededException(inner),
                crate::error::CreateSizeConstraintSetErrorKind::WafStaleDataException(inner) => {
                    Error::WafStaleDataException(inner)
                }
                crate::error::CreateSizeConstraintSetErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::CreateSqlInjectionMatchSetError>> for Error {
    fn from(
        err: smithy_http::result::SdkError<crate::error::CreateSqlInjectionMatchSetError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::CreateSqlInjectionMatchSetErrorKind::WafDisallowedNameException(
                    inner,
                ) => Error::WafDisallowedNameException(inner),
                crate::error::CreateSqlInjectionMatchSetErrorKind::WafInternalErrorException(
                    inner,
                ) => Error::WafInternalErrorException(inner),
                crate::error::CreateSqlInjectionMatchSetErrorKind::WafInvalidAccountException(
                    inner,
                ) => Error::WafInvalidAccountException(inner),
                crate::error::CreateSqlInjectionMatchSetErrorKind::WafInvalidParameterException(
                    inner,
                ) => Error::WafInvalidParameterException(inner),
                crate::error::CreateSqlInjectionMatchSetErrorKind::WafLimitsExceededException(
                    inner,
                ) => Error::WafLimitsExceededException(inner),
                crate::error::CreateSqlInjectionMatchSetErrorKind::WafStaleDataException(inner) => {
                    Error::WafStaleDataException(inner)
                }
                crate::error::CreateSqlInjectionMatchSetErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::CreateWebACLError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::CreateWebACLError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::CreateWebACLErrorKind::WafBadRequestException(inner) => {
                    Error::WafBadRequestException(inner)
                }
                crate::error::CreateWebACLErrorKind::WafDisallowedNameException(inner) => {
                    Error::WafDisallowedNameException(inner)
                }
                crate::error::CreateWebACLErrorKind::WafInternalErrorException(inner) => {
                    Error::WafInternalErrorException(inner)
                }
                crate::error::CreateWebACLErrorKind::WafInvalidAccountException(inner) => {
                    Error::WafInvalidAccountException(inner)
                }
                crate::error::CreateWebACLErrorKind::WafInvalidParameterException(inner) => {
                    Error::WafInvalidParameterException(inner)
                }
                crate::error::CreateWebACLErrorKind::WafLimitsExceededException(inner) => {
                    Error::WafLimitsExceededException(inner)
                }
                crate::error::CreateWebACLErrorKind::WafStaleDataException(inner) => {
                    Error::WafStaleDataException(inner)
                }
                crate::error::CreateWebACLErrorKind::WafTagOperationException(inner) => {
                    Error::WafTagOperationException(inner)
                }
                crate::error::CreateWebACLErrorKind::WafTagOperationInternalErrorException(
                    inner,
                ) => Error::WafTagOperationInternalErrorException(inner),
                crate::error::CreateWebACLErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::CreateWebACLMigrationStackError>> for Error {
    fn from(
        err: smithy_http::result::SdkError<crate::error::CreateWebACLMigrationStackError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::CreateWebACLMigrationStackErrorKind::WafEntityMigrationException(
                    inner,
                ) => Error::WafEntityMigrationException(inner),
                crate::error::CreateWebACLMigrationStackErrorKind::WafInternalErrorException(
                    inner,
                ) => Error::WafInternalErrorException(inner),
                crate::error::CreateWebACLMigrationStackErrorKind::WafInvalidOperationException(
                    inner,
                ) => Error::WafInvalidOperationException(inner),
                crate::error::CreateWebACLMigrationStackErrorKind::WafInvalidParameterException(
                    inner,
                ) => Error::WafInvalidParameterException(inner),
                crate::error::CreateWebACLMigrationStackErrorKind::WafNonexistentItemException(
                    inner,
                ) => Error::WafNonexistentItemException(inner),
                crate::error::CreateWebACLMigrationStackErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::CreateXssMatchSetError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::CreateXssMatchSetError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::CreateXssMatchSetErrorKind::WafDisallowedNameException(inner) => {
                    Error::WafDisallowedNameException(inner)
                }
                crate::error::CreateXssMatchSetErrorKind::WafInternalErrorException(inner) => {
                    Error::WafInternalErrorException(inner)
                }
                crate::error::CreateXssMatchSetErrorKind::WafInvalidAccountException(inner) => {
                    Error::WafInvalidAccountException(inner)
                }
                crate::error::CreateXssMatchSetErrorKind::WafInvalidParameterException(inner) => {
                    Error::WafInvalidParameterException(inner)
                }
                crate::error::CreateXssMatchSetErrorKind::WafLimitsExceededException(inner) => {
                    Error::WafLimitsExceededException(inner)
                }
                crate::error::CreateXssMatchSetErrorKind::WafStaleDataException(inner) => {
                    Error::WafStaleDataException(inner)
                }
                crate::error::CreateXssMatchSetErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DeleteByteMatchSetError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::DeleteByteMatchSetError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::DeleteByteMatchSetErrorKind::WafInternalErrorException(inner) => {
                    Error::WafInternalErrorException(inner)
                }
                crate::error::DeleteByteMatchSetErrorKind::WafInvalidAccountException(inner) => {
                    Error::WafInvalidAccountException(inner)
                }
                crate::error::DeleteByteMatchSetErrorKind::WafNonEmptyEntityException(inner) => {
                    Error::WafNonEmptyEntityException(inner)
                }
                crate::error::DeleteByteMatchSetErrorKind::WafNonexistentItemException(inner) => {
                    Error::WafNonexistentItemException(inner)
                }
                crate::error::DeleteByteMatchSetErrorKind::WafReferencedItemException(inner) => {
                    Error::WafReferencedItemException(inner)
                }
                crate::error::DeleteByteMatchSetErrorKind::WafStaleDataException(inner) => {
                    Error::WafStaleDataException(inner)
                }
                crate::error::DeleteByteMatchSetErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DeleteGeoMatchSetError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::DeleteGeoMatchSetError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::DeleteGeoMatchSetErrorKind::WafInternalErrorException(inner) => {
                    Error::WafInternalErrorException(inner)
                }
                crate::error::DeleteGeoMatchSetErrorKind::WafInvalidAccountException(inner) => {
                    Error::WafInvalidAccountException(inner)
                }
                crate::error::DeleteGeoMatchSetErrorKind::WafNonEmptyEntityException(inner) => {
                    Error::WafNonEmptyEntityException(inner)
                }
                crate::error::DeleteGeoMatchSetErrorKind::WafNonexistentItemException(inner) => {
                    Error::WafNonexistentItemException(inner)
                }
                crate::error::DeleteGeoMatchSetErrorKind::WafReferencedItemException(inner) => {
                    Error::WafReferencedItemException(inner)
                }
                crate::error::DeleteGeoMatchSetErrorKind::WafStaleDataException(inner) => {
                    Error::WafStaleDataException(inner)
                }
                crate::error::DeleteGeoMatchSetErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DeleteIPSetError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::DeleteIPSetError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::DeleteIPSetErrorKind::WafInternalErrorException(inner) => {
                    Error::WafInternalErrorException(inner)
                }
                crate::error::DeleteIPSetErrorKind::WafInvalidAccountException(inner) => {
                    Error::WafInvalidAccountException(inner)
                }
                crate::error::DeleteIPSetErrorKind::WafNonEmptyEntityException(inner) => {
                    Error::WafNonEmptyEntityException(inner)
                }
                crate::error::DeleteIPSetErrorKind::WafNonexistentItemException(inner) => {
                    Error::WafNonexistentItemException(inner)
                }
                crate::error::DeleteIPSetErrorKind::WafReferencedItemException(inner) => {
                    Error::WafReferencedItemException(inner)
                }
                crate::error::DeleteIPSetErrorKind::WafStaleDataException(inner) => {
                    Error::WafStaleDataException(inner)
                }
                crate::error::DeleteIPSetErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DeleteLoggingConfigurationError>> for Error {
    fn from(
        err: smithy_http::result::SdkError<crate::error::DeleteLoggingConfigurationError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::DeleteLoggingConfigurationErrorKind::WafInternalErrorException(
                    inner,
                ) => Error::WafInternalErrorException(inner),
                crate::error::DeleteLoggingConfigurationErrorKind::WafNonexistentItemException(
                    inner,
                ) => Error::WafNonexistentItemException(inner),
                crate::error::DeleteLoggingConfigurationErrorKind::WafStaleDataException(inner) => {
                    Error::WafStaleDataException(inner)
                }
                crate::error::DeleteLoggingConfigurationErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DeletePermissionPolicyError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::DeletePermissionPolicyError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::DeletePermissionPolicyErrorKind::WafInternalErrorException(inner) => {
                    Error::WafInternalErrorException(inner)
                }
                crate::error::DeletePermissionPolicyErrorKind::WafNonexistentItemException(
                    inner,
                ) => Error::WafNonexistentItemException(inner),
                crate::error::DeletePermissionPolicyErrorKind::WafStaleDataException(inner) => {
                    Error::WafStaleDataException(inner)
                }
                crate::error::DeletePermissionPolicyErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DeleteRateBasedRuleError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::DeleteRateBasedRuleError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::DeleteRateBasedRuleErrorKind::WafInternalErrorException(inner) => Error::WafInternalErrorException(inner),
                crate::error::DeleteRateBasedRuleErrorKind::WafInvalidAccountException(inner) => Error::WafInvalidAccountException(inner),
                crate::error::DeleteRateBasedRuleErrorKind::WafNonEmptyEntityException(inner) => Error::WafNonEmptyEntityException(inner),
                crate::error::DeleteRateBasedRuleErrorKind::WafNonexistentItemException(inner) => Error::WafNonexistentItemException(inner),
                crate::error::DeleteRateBasedRuleErrorKind::WafReferencedItemException(inner) => Error::WafReferencedItemException(inner),
                crate::error::DeleteRateBasedRuleErrorKind::WafStaleDataException(inner) => Error::WafStaleDataException(inner),
                crate::error::DeleteRateBasedRuleErrorKind::WafTagOperationException(inner) => Error::WafTagOperationException(inner),
                crate::error::DeleteRateBasedRuleErrorKind::WafTagOperationInternalErrorException(inner) => Error::WafTagOperationInternalErrorException(inner),
                crate::error::DeleteRateBasedRuleErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DeleteRegexMatchSetError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::DeleteRegexMatchSetError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::DeleteRegexMatchSetErrorKind::WafInternalErrorException(inner) => {
                    Error::WafInternalErrorException(inner)
                }
                crate::error::DeleteRegexMatchSetErrorKind::WafInvalidAccountException(inner) => {
                    Error::WafInvalidAccountException(inner)
                }
                crate::error::DeleteRegexMatchSetErrorKind::WafNonEmptyEntityException(inner) => {
                    Error::WafNonEmptyEntityException(inner)
                }
                crate::error::DeleteRegexMatchSetErrorKind::WafNonexistentItemException(inner) => {
                    Error::WafNonexistentItemException(inner)
                }
                crate::error::DeleteRegexMatchSetErrorKind::WafReferencedItemException(inner) => {
                    Error::WafReferencedItemException(inner)
                }
                crate::error::DeleteRegexMatchSetErrorKind::WafStaleDataException(inner) => {
                    Error::WafStaleDataException(inner)
                }
                crate::error::DeleteRegexMatchSetErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DeleteRegexPatternSetError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::DeleteRegexPatternSetError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::DeleteRegexPatternSetErrorKind::WafInternalErrorException(inner) => {
                    Error::WafInternalErrorException(inner)
                }
                crate::error::DeleteRegexPatternSetErrorKind::WafInvalidAccountException(inner) => {
                    Error::WafInvalidAccountException(inner)
                }
                crate::error::DeleteRegexPatternSetErrorKind::WafNonEmptyEntityException(inner) => {
                    Error::WafNonEmptyEntityException(inner)
                }
                crate::error::DeleteRegexPatternSetErrorKind::WafNonexistentItemException(
                    inner,
                ) => Error::WafNonexistentItemException(inner),
                crate::error::DeleteRegexPatternSetErrorKind::WafReferencedItemException(inner) => {
                    Error::WafReferencedItemException(inner)
                }
                crate::error::DeleteRegexPatternSetErrorKind::WafStaleDataException(inner) => {
                    Error::WafStaleDataException(inner)
                }
                crate::error::DeleteRegexPatternSetErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DeleteRuleError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::DeleteRuleError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::DeleteRuleErrorKind::WafInternalErrorException(inner) => {
                    Error::WafInternalErrorException(inner)
                }
                crate::error::DeleteRuleErrorKind::WafInvalidAccountException(inner) => {
                    Error::WafInvalidAccountException(inner)
                }
                crate::error::DeleteRuleErrorKind::WafNonEmptyEntityException(inner) => {
                    Error::WafNonEmptyEntityException(inner)
                }
                crate::error::DeleteRuleErrorKind::WafNonexistentItemException(inner) => {
                    Error::WafNonexistentItemException(inner)
                }
                crate::error::DeleteRuleErrorKind::WafReferencedItemException(inner) => {
                    Error::WafReferencedItemException(inner)
                }
                crate::error::DeleteRuleErrorKind::WafStaleDataException(inner) => {
                    Error::WafStaleDataException(inner)
                }
                crate::error::DeleteRuleErrorKind::WafTagOperationException(inner) => {
                    Error::WafTagOperationException(inner)
                }
                crate::error::DeleteRuleErrorKind::WafTagOperationInternalErrorException(inner) => {
                    Error::WafTagOperationInternalErrorException(inner)
                }
                crate::error::DeleteRuleErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DeleteRuleGroupError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::DeleteRuleGroupError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::DeleteRuleGroupErrorKind::WafInternalErrorException(inner) => {
                    Error::WafInternalErrorException(inner)
                }
                crate::error::DeleteRuleGroupErrorKind::WafInvalidOperationException(inner) => {
                    Error::WafInvalidOperationException(inner)
                }
                crate::error::DeleteRuleGroupErrorKind::WafNonEmptyEntityException(inner) => {
                    Error::WafNonEmptyEntityException(inner)
                }
                crate::error::DeleteRuleGroupErrorKind::WafNonexistentItemException(inner) => {
                    Error::WafNonexistentItemException(inner)
                }
                crate::error::DeleteRuleGroupErrorKind::WafReferencedItemException(inner) => {
                    Error::WafReferencedItemException(inner)
                }
                crate::error::DeleteRuleGroupErrorKind::WafStaleDataException(inner) => {
                    Error::WafStaleDataException(inner)
                }
                crate::error::DeleteRuleGroupErrorKind::WafTagOperationException(inner) => {
                    Error::WafTagOperationException(inner)
                }
                crate::error::DeleteRuleGroupErrorKind::WafTagOperationInternalErrorException(
                    inner,
                ) => Error::WafTagOperationInternalErrorException(inner),
                crate::error::DeleteRuleGroupErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DeleteSizeConstraintSetError>> for Error {
    fn from(
        err: smithy_http::result::SdkError<crate::error::DeleteSizeConstraintSetError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::DeleteSizeConstraintSetErrorKind::WafInternalErrorException(
                    inner,
                ) => Error::WafInternalErrorException(inner),
                crate::error::DeleteSizeConstraintSetErrorKind::WafInvalidAccountException(
                    inner,
                ) => Error::WafInvalidAccountException(inner),
                crate::error::DeleteSizeConstraintSetErrorKind::WafNonEmptyEntityException(
                    inner,
                ) => Error::WafNonEmptyEntityException(inner),
                crate::error::DeleteSizeConstraintSetErrorKind::WafNonexistentItemException(
                    inner,
                ) => Error::WafNonexistentItemException(inner),
                crate::error::DeleteSizeConstraintSetErrorKind::WafReferencedItemException(
                    inner,
                ) => Error::WafReferencedItemException(inner),
                crate::error::DeleteSizeConstraintSetErrorKind::WafStaleDataException(inner) => {
                    Error::WafStaleDataException(inner)
                }
                crate::error::DeleteSizeConstraintSetErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DeleteSqlInjectionMatchSetError>> for Error {
    fn from(
        err: smithy_http::result::SdkError<crate::error::DeleteSqlInjectionMatchSetError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::DeleteSqlInjectionMatchSetErrorKind::WafInternalErrorException(
                    inner,
                ) => Error::WafInternalErrorException(inner),
                crate::error::DeleteSqlInjectionMatchSetErrorKind::WafInvalidAccountException(
                    inner,
                ) => Error::WafInvalidAccountException(inner),
                crate::error::DeleteSqlInjectionMatchSetErrorKind::WafNonEmptyEntityException(
                    inner,
                ) => Error::WafNonEmptyEntityException(inner),
                crate::error::DeleteSqlInjectionMatchSetErrorKind::WafNonexistentItemException(
                    inner,
                ) => Error::WafNonexistentItemException(inner),
                crate::error::DeleteSqlInjectionMatchSetErrorKind::WafReferencedItemException(
                    inner,
                ) => Error::WafReferencedItemException(inner),
                crate::error::DeleteSqlInjectionMatchSetErrorKind::WafStaleDataException(inner) => {
                    Error::WafStaleDataException(inner)
                }
                crate::error::DeleteSqlInjectionMatchSetErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DeleteWebACLError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::DeleteWebACLError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::DeleteWebACLErrorKind::WafInternalErrorException(inner) => {
                    Error::WafInternalErrorException(inner)
                }
                crate::error::DeleteWebACLErrorKind::WafInvalidAccountException(inner) => {
                    Error::WafInvalidAccountException(inner)
                }
                crate::error::DeleteWebACLErrorKind::WafNonEmptyEntityException(inner) => {
                    Error::WafNonEmptyEntityException(inner)
                }
                crate::error::DeleteWebACLErrorKind::WafNonexistentItemException(inner) => {
                    Error::WafNonexistentItemException(inner)
                }
                crate::error::DeleteWebACLErrorKind::WafReferencedItemException(inner) => {
                    Error::WafReferencedItemException(inner)
                }
                crate::error::DeleteWebACLErrorKind::WafStaleDataException(inner) => {
                    Error::WafStaleDataException(inner)
                }
                crate::error::DeleteWebACLErrorKind::WafTagOperationException(inner) => {
                    Error::WafTagOperationException(inner)
                }
                crate::error::DeleteWebACLErrorKind::WafTagOperationInternalErrorException(
                    inner,
                ) => Error::WafTagOperationInternalErrorException(inner),
                crate::error::DeleteWebACLErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DeleteXssMatchSetError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::DeleteXssMatchSetError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::DeleteXssMatchSetErrorKind::WafInternalErrorException(inner) => {
                    Error::WafInternalErrorException(inner)
                }
                crate::error::DeleteXssMatchSetErrorKind::WafInvalidAccountException(inner) => {
                    Error::WafInvalidAccountException(inner)
                }
                crate::error::DeleteXssMatchSetErrorKind::WafNonEmptyEntityException(inner) => {
                    Error::WafNonEmptyEntityException(inner)
                }
                crate::error::DeleteXssMatchSetErrorKind::WafNonexistentItemException(inner) => {
                    Error::WafNonexistentItemException(inner)
                }
                crate::error::DeleteXssMatchSetErrorKind::WafReferencedItemException(inner) => {
                    Error::WafReferencedItemException(inner)
                }
                crate::error::DeleteXssMatchSetErrorKind::WafStaleDataException(inner) => {
                    Error::WafStaleDataException(inner)
                }
                crate::error::DeleteXssMatchSetErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::GetByteMatchSetError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::GetByteMatchSetError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::GetByteMatchSetErrorKind::WafInternalErrorException(inner) => {
                    Error::WafInternalErrorException(inner)
                }
                crate::error::GetByteMatchSetErrorKind::WafInvalidAccountException(inner) => {
                    Error::WafInvalidAccountException(inner)
                }
                crate::error::GetByteMatchSetErrorKind::WafNonexistentItemException(inner) => {
                    Error::WafNonexistentItemException(inner)
                }
                crate::error::GetByteMatchSetErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::GetChangeTokenError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::GetChangeTokenError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::GetChangeTokenErrorKind::WafInternalErrorException(inner) => {
                    Error::WafInternalErrorException(inner)
                }
                crate::error::GetChangeTokenErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::GetChangeTokenStatusError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::GetChangeTokenStatusError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::GetChangeTokenStatusErrorKind::WafInternalErrorException(inner) => {
                    Error::WafInternalErrorException(inner)
                }
                crate::error::GetChangeTokenStatusErrorKind::WafNonexistentItemException(inner) => {
                    Error::WafNonexistentItemException(inner)
                }
                crate::error::GetChangeTokenStatusErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::GetGeoMatchSetError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::GetGeoMatchSetError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::GetGeoMatchSetErrorKind::WafInternalErrorException(inner) => {
                    Error::WafInternalErrorException(inner)
                }
                crate::error::GetGeoMatchSetErrorKind::WafInvalidAccountException(inner) => {
                    Error::WafInvalidAccountException(inner)
                }
                crate::error::GetGeoMatchSetErrorKind::WafNonexistentItemException(inner) => {
                    Error::WafNonexistentItemException(inner)
                }
                crate::error::GetGeoMatchSetErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::GetIPSetError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::GetIPSetError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::GetIPSetErrorKind::WafInternalErrorException(inner) => {
                    Error::WafInternalErrorException(inner)
                }
                crate::error::GetIPSetErrorKind::WafInvalidAccountException(inner) => {
                    Error::WafInvalidAccountException(inner)
                }
                crate::error::GetIPSetErrorKind::WafNonexistentItemException(inner) => {
                    Error::WafNonexistentItemException(inner)
                }
                crate::error::GetIPSetErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::GetLoggingConfigurationError>> for Error {
    fn from(
        err: smithy_http::result::SdkError<crate::error::GetLoggingConfigurationError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::GetLoggingConfigurationErrorKind::WafInternalErrorException(
                    inner,
                ) => Error::WafInternalErrorException(inner),
                crate::error::GetLoggingConfigurationErrorKind::WafNonexistentItemException(
                    inner,
                ) => Error::WafNonexistentItemException(inner),
                crate::error::GetLoggingConfigurationErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::GetPermissionPolicyError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::GetPermissionPolicyError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::GetPermissionPolicyErrorKind::WafInternalErrorException(inner) => {
                    Error::WafInternalErrorException(inner)
                }
                crate::error::GetPermissionPolicyErrorKind::WafNonexistentItemException(inner) => {
                    Error::WafNonexistentItemException(inner)
                }
                crate::error::GetPermissionPolicyErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::GetRateBasedRuleError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::GetRateBasedRuleError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::GetRateBasedRuleErrorKind::WafInternalErrorException(inner) => {
                    Error::WafInternalErrorException(inner)
                }
                crate::error::GetRateBasedRuleErrorKind::WafInvalidAccountException(inner) => {
                    Error::WafInvalidAccountException(inner)
                }
                crate::error::GetRateBasedRuleErrorKind::WafNonexistentItemException(inner) => {
                    Error::WafNonexistentItemException(inner)
                }
                crate::error::GetRateBasedRuleErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::GetRateBasedRuleManagedKeysError>> for Error {
    fn from(
        err: smithy_http::result::SdkError<crate::error::GetRateBasedRuleManagedKeysError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::GetRateBasedRuleManagedKeysErrorKind::WafInternalErrorException(inner) => Error::WafInternalErrorException(inner),
                crate::error::GetRateBasedRuleManagedKeysErrorKind::WafInvalidAccountException(inner) => Error::WafInvalidAccountException(inner),
                crate::error::GetRateBasedRuleManagedKeysErrorKind::WafInvalidParameterException(inner) => Error::WafInvalidParameterException(inner),
                crate::error::GetRateBasedRuleManagedKeysErrorKind::WafNonexistentItemException(inner) => Error::WafNonexistentItemException(inner),
                crate::error::GetRateBasedRuleManagedKeysErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::GetRegexMatchSetError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::GetRegexMatchSetError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::GetRegexMatchSetErrorKind::WafInternalErrorException(inner) => {
                    Error::WafInternalErrorException(inner)
                }
                crate::error::GetRegexMatchSetErrorKind::WafInvalidAccountException(inner) => {
                    Error::WafInvalidAccountException(inner)
                }
                crate::error::GetRegexMatchSetErrorKind::WafNonexistentItemException(inner) => {
                    Error::WafNonexistentItemException(inner)
                }
                crate::error::GetRegexMatchSetErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::GetRegexPatternSetError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::GetRegexPatternSetError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::GetRegexPatternSetErrorKind::WafInternalErrorException(inner) => {
                    Error::WafInternalErrorException(inner)
                }
                crate::error::GetRegexPatternSetErrorKind::WafInvalidAccountException(inner) => {
                    Error::WafInvalidAccountException(inner)
                }
                crate::error::GetRegexPatternSetErrorKind::WafNonexistentItemException(inner) => {
                    Error::WafNonexistentItemException(inner)
                }
                crate::error::GetRegexPatternSetErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::GetRuleError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::GetRuleError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::GetRuleErrorKind::WafInternalErrorException(inner) => {
                    Error::WafInternalErrorException(inner)
                }
                crate::error::GetRuleErrorKind::WafInvalidAccountException(inner) => {
                    Error::WafInvalidAccountException(inner)
                }
                crate::error::GetRuleErrorKind::WafNonexistentItemException(inner) => {
                    Error::WafNonexistentItemException(inner)
                }
                crate::error::GetRuleErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::GetRuleGroupError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::GetRuleGroupError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::GetRuleGroupErrorKind::WafInternalErrorException(inner) => {
                    Error::WafInternalErrorException(inner)
                }
                crate::error::GetRuleGroupErrorKind::WafNonexistentItemException(inner) => {
                    Error::WafNonexistentItemException(inner)
                }
                crate::error::GetRuleGroupErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::GetSampledRequestsError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::GetSampledRequestsError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::GetSampledRequestsErrorKind::WafInternalErrorException(inner) => {
                    Error::WafInternalErrorException(inner)
                }
                crate::error::GetSampledRequestsErrorKind::WafNonexistentItemException(inner) => {
                    Error::WafNonexistentItemException(inner)
                }
                crate::error::GetSampledRequestsErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::GetSizeConstraintSetError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::GetSizeConstraintSetError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::GetSizeConstraintSetErrorKind::WafInternalErrorException(inner) => {
                    Error::WafInternalErrorException(inner)
                }
                crate::error::GetSizeConstraintSetErrorKind::WafInvalidAccountException(inner) => {
                    Error::WafInvalidAccountException(inner)
                }
                crate::error::GetSizeConstraintSetErrorKind::WafNonexistentItemException(inner) => {
                    Error::WafNonexistentItemException(inner)
                }
                crate::error::GetSizeConstraintSetErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::GetSqlInjectionMatchSetError>> for Error {
    fn from(
        err: smithy_http::result::SdkError<crate::error::GetSqlInjectionMatchSetError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::GetSqlInjectionMatchSetErrorKind::WafInternalErrorException(
                    inner,
                ) => Error::WafInternalErrorException(inner),
                crate::error::GetSqlInjectionMatchSetErrorKind::WafInvalidAccountException(
                    inner,
                ) => Error::WafInvalidAccountException(inner),
                crate::error::GetSqlInjectionMatchSetErrorKind::WafNonexistentItemException(
                    inner,
                ) => Error::WafNonexistentItemException(inner),
                crate::error::GetSqlInjectionMatchSetErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::GetWebACLError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::GetWebACLError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::GetWebACLErrorKind::WafInternalErrorException(inner) => {
                    Error::WafInternalErrorException(inner)
                }
                crate::error::GetWebACLErrorKind::WafInvalidAccountException(inner) => {
                    Error::WafInvalidAccountException(inner)
                }
                crate::error::GetWebACLErrorKind::WafNonexistentItemException(inner) => {
                    Error::WafNonexistentItemException(inner)
                }
                crate::error::GetWebACLErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::GetXssMatchSetError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::GetXssMatchSetError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::GetXssMatchSetErrorKind::WafInternalErrorException(inner) => {
                    Error::WafInternalErrorException(inner)
                }
                crate::error::GetXssMatchSetErrorKind::WafInvalidAccountException(inner) => {
                    Error::WafInvalidAccountException(inner)
                }
                crate::error::GetXssMatchSetErrorKind::WafNonexistentItemException(inner) => {
                    Error::WafNonexistentItemException(inner)
                }
                crate::error::GetXssMatchSetErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::ListActivatedRulesInRuleGroupError>>
    for Error
{
    fn from(
        err: smithy_http::result::SdkError<crate::error::ListActivatedRulesInRuleGroupError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::ListActivatedRulesInRuleGroupErrorKind::WafInternalErrorException(inner) => Error::WafInternalErrorException(inner),
                crate::error::ListActivatedRulesInRuleGroupErrorKind::WafInvalidParameterException(inner) => Error::WafInvalidParameterException(inner),
                crate::error::ListActivatedRulesInRuleGroupErrorKind::WafNonexistentItemException(inner) => Error::WafNonexistentItemException(inner),
                crate::error::ListActivatedRulesInRuleGroupErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::ListByteMatchSetsError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::ListByteMatchSetsError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::ListByteMatchSetsErrorKind::WafInternalErrorException(inner) => {
                    Error::WafInternalErrorException(inner)
                }
                crate::error::ListByteMatchSetsErrorKind::WafInvalidAccountException(inner) => {
                    Error::WafInvalidAccountException(inner)
                }
                crate::error::ListByteMatchSetsErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::ListGeoMatchSetsError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::ListGeoMatchSetsError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::ListGeoMatchSetsErrorKind::WafInternalErrorException(inner) => {
                    Error::WafInternalErrorException(inner)
                }
                crate::error::ListGeoMatchSetsErrorKind::WafInvalidAccountException(inner) => {
                    Error::WafInvalidAccountException(inner)
                }
                crate::error::ListGeoMatchSetsErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::ListIPSetsError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::ListIPSetsError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::ListIPSetsErrorKind::WafInternalErrorException(inner) => {
                    Error::WafInternalErrorException(inner)
                }
                crate::error::ListIPSetsErrorKind::WafInvalidAccountException(inner) => {
                    Error::WafInvalidAccountException(inner)
                }
                crate::error::ListIPSetsErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::ListLoggingConfigurationsError>> for Error {
    fn from(
        err: smithy_http::result::SdkError<crate::error::ListLoggingConfigurationsError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::ListLoggingConfigurationsErrorKind::WafInternalErrorException(
                    inner,
                ) => Error::WafInternalErrorException(inner),
                crate::error::ListLoggingConfigurationsErrorKind::WafInvalidParameterException(
                    inner,
                ) => Error::WafInvalidParameterException(inner),
                crate::error::ListLoggingConfigurationsErrorKind::WafNonexistentItemException(
                    inner,
                ) => Error::WafNonexistentItemException(inner),
                crate::error::ListLoggingConfigurationsErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::ListRateBasedRulesError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::ListRateBasedRulesError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::ListRateBasedRulesErrorKind::WafInternalErrorException(inner) => {
                    Error::WafInternalErrorException(inner)
                }
                crate::error::ListRateBasedRulesErrorKind::WafInvalidAccountException(inner) => {
                    Error::WafInvalidAccountException(inner)
                }
                crate::error::ListRateBasedRulesErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::ListRegexMatchSetsError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::ListRegexMatchSetsError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::ListRegexMatchSetsErrorKind::WafInternalErrorException(inner) => {
                    Error::WafInternalErrorException(inner)
                }
                crate::error::ListRegexMatchSetsErrorKind::WafInvalidAccountException(inner) => {
                    Error::WafInvalidAccountException(inner)
                }
                crate::error::ListRegexMatchSetsErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::ListRegexPatternSetsError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::ListRegexPatternSetsError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::ListRegexPatternSetsErrorKind::WafInternalErrorException(inner) => {
                    Error::WafInternalErrorException(inner)
                }
                crate::error::ListRegexPatternSetsErrorKind::WafInvalidAccountException(inner) => {
                    Error::WafInvalidAccountException(inner)
                }
                crate::error::ListRegexPatternSetsErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::ListRuleGroupsError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::ListRuleGroupsError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::ListRuleGroupsErrorKind::WafInternalErrorException(inner) => {
                    Error::WafInternalErrorException(inner)
                }
                crate::error::ListRuleGroupsErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::ListRulesError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::ListRulesError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::ListRulesErrorKind::WafInternalErrorException(inner) => {
                    Error::WafInternalErrorException(inner)
                }
                crate::error::ListRulesErrorKind::WafInvalidAccountException(inner) => {
                    Error::WafInvalidAccountException(inner)
                }
                crate::error::ListRulesErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::ListSizeConstraintSetsError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::ListSizeConstraintSetsError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::ListSizeConstraintSetsErrorKind::WafInternalErrorException(inner) => {
                    Error::WafInternalErrorException(inner)
                }
                crate::error::ListSizeConstraintSetsErrorKind::WafInvalidAccountException(
                    inner,
                ) => Error::WafInvalidAccountException(inner),
                crate::error::ListSizeConstraintSetsErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::ListSqlInjectionMatchSetsError>> for Error {
    fn from(
        err: smithy_http::result::SdkError<crate::error::ListSqlInjectionMatchSetsError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::ListSqlInjectionMatchSetsErrorKind::WafInternalErrorException(
                    inner,
                ) => Error::WafInternalErrorException(inner),
                crate::error::ListSqlInjectionMatchSetsErrorKind::WafInvalidAccountException(
                    inner,
                ) => Error::WafInvalidAccountException(inner),
                crate::error::ListSqlInjectionMatchSetsErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::ListSubscribedRuleGroupsError>> for Error {
    fn from(
        err: smithy_http::result::SdkError<crate::error::ListSubscribedRuleGroupsError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::ListSubscribedRuleGroupsErrorKind::WafInternalErrorException(
                    inner,
                ) => Error::WafInternalErrorException(inner),
                crate::error::ListSubscribedRuleGroupsErrorKind::WafNonexistentItemException(
                    inner,
                ) => Error::WafNonexistentItemException(inner),
                crate::error::ListSubscribedRuleGroupsErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::ListTagsForResourceError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::ListTagsForResourceError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::ListTagsForResourceErrorKind::WafBadRequestException(inner) => Error::WafBadRequestException(inner),
                crate::error::ListTagsForResourceErrorKind::WafInternalErrorException(inner) => Error::WafInternalErrorException(inner),
                crate::error::ListTagsForResourceErrorKind::WafInvalidParameterException(inner) => Error::WafInvalidParameterException(inner),
                crate::error::ListTagsForResourceErrorKind::WafNonexistentItemException(inner) => Error::WafNonexistentItemException(inner),
                crate::error::ListTagsForResourceErrorKind::WafTagOperationException(inner) => Error::WafTagOperationException(inner),
                crate::error::ListTagsForResourceErrorKind::WafTagOperationInternalErrorException(inner) => Error::WafTagOperationInternalErrorException(inner),
                crate::error::ListTagsForResourceErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::ListWebACLsError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::ListWebACLsError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::ListWebACLsErrorKind::WafInternalErrorException(inner) => {
                    Error::WafInternalErrorException(inner)
                }
                crate::error::ListWebACLsErrorKind::WafInvalidAccountException(inner) => {
                    Error::WafInvalidAccountException(inner)
                }
                crate::error::ListWebACLsErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::ListXssMatchSetsError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::ListXssMatchSetsError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::ListXssMatchSetsErrorKind::WafInternalErrorException(inner) => {
                    Error::WafInternalErrorException(inner)
                }
                crate::error::ListXssMatchSetsErrorKind::WafInvalidAccountException(inner) => {
                    Error::WafInvalidAccountException(inner)
                }
                crate::error::ListXssMatchSetsErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::PutLoggingConfigurationError>> for Error {
    fn from(
        err: smithy_http::result::SdkError<crate::error::PutLoggingConfigurationError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::PutLoggingConfigurationErrorKind::WafInternalErrorException(inner) => Error::WafInternalErrorException(inner),
                crate::error::PutLoggingConfigurationErrorKind::WafNonexistentItemException(inner) => Error::WafNonexistentItemException(inner),
                crate::error::PutLoggingConfigurationErrorKind::WafServiceLinkedRoleErrorException(inner) => Error::WafServiceLinkedRoleErrorException(inner),
                crate::error::PutLoggingConfigurationErrorKind::WafStaleDataException(inner) => Error::WafStaleDataException(inner),
                crate::error::PutLoggingConfigurationErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::PutPermissionPolicyError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::PutPermissionPolicyError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::PutPermissionPolicyErrorKind::WafInternalErrorException(inner) => {
                    Error::WafInternalErrorException(inner)
                }
                crate::error::PutPermissionPolicyErrorKind::WafInvalidPermissionPolicyException(
                    inner,
                ) => Error::WafInvalidPermissionPolicyException(inner),
                crate::error::PutPermissionPolicyErrorKind::WafNonexistentItemException(inner) => {
                    Error::WafNonexistentItemException(inner)
                }
                crate::error::PutPermissionPolicyErrorKind::WafStaleDataException(inner) => {
                    Error::WafStaleDataException(inner)
                }
                crate::error::PutPermissionPolicyErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::TagResourceError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::TagResourceError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::TagResourceErrorKind::WafBadRequestException(inner) => {
                    Error::WafBadRequestException(inner)
                }
                crate::error::TagResourceErrorKind::WafInternalErrorException(inner) => {
                    Error::WafInternalErrorException(inner)
                }
                crate::error::TagResourceErrorKind::WafInvalidParameterException(inner) => {
                    Error::WafInvalidParameterException(inner)
                }
                crate::error::TagResourceErrorKind::WafLimitsExceededException(inner) => {
                    Error::WafLimitsExceededException(inner)
                }
                crate::error::TagResourceErrorKind::WafNonexistentItemException(inner) => {
                    Error::WafNonexistentItemException(inner)
                }
                crate::error::TagResourceErrorKind::WafTagOperationException(inner) => {
                    Error::WafTagOperationException(inner)
                }
                crate::error::TagResourceErrorKind::WafTagOperationInternalErrorException(
                    inner,
                ) => Error::WafTagOperationInternalErrorException(inner),
                crate::error::TagResourceErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::UntagResourceError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::UntagResourceError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::UntagResourceErrorKind::WafBadRequestException(inner) => {
                    Error::WafBadRequestException(inner)
                }
                crate::error::UntagResourceErrorKind::WafInternalErrorException(inner) => {
                    Error::WafInternalErrorException(inner)
                }
                crate::error::UntagResourceErrorKind::WafInvalidParameterException(inner) => {
                    Error::WafInvalidParameterException(inner)
                }
                crate::error::UntagResourceErrorKind::WafNonexistentItemException(inner) => {
                    Error::WafNonexistentItemException(inner)
                }
                crate::error::UntagResourceErrorKind::WafTagOperationException(inner) => {
                    Error::WafTagOperationException(inner)
                }
                crate::error::UntagResourceErrorKind::WafTagOperationInternalErrorException(
                    inner,
                ) => Error::WafTagOperationInternalErrorException(inner),
                crate::error::UntagResourceErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::UpdateByteMatchSetError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::UpdateByteMatchSetError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::UpdateByteMatchSetErrorKind::WafInternalErrorException(inner) => {
                    Error::WafInternalErrorException(inner)
                }
                crate::error::UpdateByteMatchSetErrorKind::WafInvalidAccountException(inner) => {
                    Error::WafInvalidAccountException(inner)
                }
                crate::error::UpdateByteMatchSetErrorKind::WafInvalidOperationException(inner) => {
                    Error::WafInvalidOperationException(inner)
                }
                crate::error::UpdateByteMatchSetErrorKind::WafInvalidParameterException(inner) => {
                    Error::WafInvalidParameterException(inner)
                }
                crate::error::UpdateByteMatchSetErrorKind::WafLimitsExceededException(inner) => {
                    Error::WafLimitsExceededException(inner)
                }
                crate::error::UpdateByteMatchSetErrorKind::WafNonexistentContainerException(
                    inner,
                ) => Error::WafNonexistentContainerException(inner),
                crate::error::UpdateByteMatchSetErrorKind::WafNonexistentItemException(inner) => {
                    Error::WafNonexistentItemException(inner)
                }
                crate::error::UpdateByteMatchSetErrorKind::WafStaleDataException(inner) => {
                    Error::WafStaleDataException(inner)
                }
                crate::error::UpdateByteMatchSetErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::UpdateGeoMatchSetError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::UpdateGeoMatchSetError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::UpdateGeoMatchSetErrorKind::WafInternalErrorException(inner) => {
                    Error::WafInternalErrorException(inner)
                }
                crate::error::UpdateGeoMatchSetErrorKind::WafInvalidAccountException(inner) => {
                    Error::WafInvalidAccountException(inner)
                }
                crate::error::UpdateGeoMatchSetErrorKind::WafInvalidOperationException(inner) => {
                    Error::WafInvalidOperationException(inner)
                }
                crate::error::UpdateGeoMatchSetErrorKind::WafInvalidParameterException(inner) => {
                    Error::WafInvalidParameterException(inner)
                }
                crate::error::UpdateGeoMatchSetErrorKind::WafLimitsExceededException(inner) => {
                    Error::WafLimitsExceededException(inner)
                }
                crate::error::UpdateGeoMatchSetErrorKind::WafNonexistentContainerException(
                    inner,
                ) => Error::WafNonexistentContainerException(inner),
                crate::error::UpdateGeoMatchSetErrorKind::WafNonexistentItemException(inner) => {
                    Error::WafNonexistentItemException(inner)
                }
                crate::error::UpdateGeoMatchSetErrorKind::WafReferencedItemException(inner) => {
                    Error::WafReferencedItemException(inner)
                }
                crate::error::UpdateGeoMatchSetErrorKind::WafStaleDataException(inner) => {
                    Error::WafStaleDataException(inner)
                }
                crate::error::UpdateGeoMatchSetErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::UpdateIPSetError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::UpdateIPSetError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::UpdateIPSetErrorKind::WafInternalErrorException(inner) => {
                    Error::WafInternalErrorException(inner)
                }
                crate::error::UpdateIPSetErrorKind::WafInvalidAccountException(inner) => {
                    Error::WafInvalidAccountException(inner)
                }
                crate::error::UpdateIPSetErrorKind::WafInvalidOperationException(inner) => {
                    Error::WafInvalidOperationException(inner)
                }
                crate::error::UpdateIPSetErrorKind::WafInvalidParameterException(inner) => {
                    Error::WafInvalidParameterException(inner)
                }
                crate::error::UpdateIPSetErrorKind::WafLimitsExceededException(inner) => {
                    Error::WafLimitsExceededException(inner)
                }
                crate::error::UpdateIPSetErrorKind::WafNonexistentContainerException(inner) => {
                    Error::WafNonexistentContainerException(inner)
                }
                crate::error::UpdateIPSetErrorKind::WafNonexistentItemException(inner) => {
                    Error::WafNonexistentItemException(inner)
                }
                crate::error::UpdateIPSetErrorKind::WafReferencedItemException(inner) => {
                    Error::WafReferencedItemException(inner)
                }
                crate::error::UpdateIPSetErrorKind::WafStaleDataException(inner) => {
                    Error::WafStaleDataException(inner)
                }
                crate::error::UpdateIPSetErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::UpdateRateBasedRuleError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::UpdateRateBasedRuleError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::UpdateRateBasedRuleErrorKind::WafInternalErrorException(inner) => {
                    Error::WafInternalErrorException(inner)
                }
                crate::error::UpdateRateBasedRuleErrorKind::WafInvalidAccountException(inner) => {
                    Error::WafInvalidAccountException(inner)
                }
                crate::error::UpdateRateBasedRuleErrorKind::WafInvalidOperationException(inner) => {
                    Error::WafInvalidOperationException(inner)
                }
                crate::error::UpdateRateBasedRuleErrorKind::WafInvalidParameterException(inner) => {
                    Error::WafInvalidParameterException(inner)
                }
                crate::error::UpdateRateBasedRuleErrorKind::WafLimitsExceededException(inner) => {
                    Error::WafLimitsExceededException(inner)
                }
                crate::error::UpdateRateBasedRuleErrorKind::WafNonexistentContainerException(
                    inner,
                ) => Error::WafNonexistentContainerException(inner),
                crate::error::UpdateRateBasedRuleErrorKind::WafNonexistentItemException(inner) => {
                    Error::WafNonexistentItemException(inner)
                }
                crate::error::UpdateRateBasedRuleErrorKind::WafReferencedItemException(inner) => {
                    Error::WafReferencedItemException(inner)
                }
                crate::error::UpdateRateBasedRuleErrorKind::WafStaleDataException(inner) => {
                    Error::WafStaleDataException(inner)
                }
                crate::error::UpdateRateBasedRuleErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::UpdateRegexMatchSetError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::UpdateRegexMatchSetError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::UpdateRegexMatchSetErrorKind::WafDisallowedNameException(inner) => {
                    Error::WafDisallowedNameException(inner)
                }
                crate::error::UpdateRegexMatchSetErrorKind::WafInternalErrorException(inner) => {
                    Error::WafInternalErrorException(inner)
                }
                crate::error::UpdateRegexMatchSetErrorKind::WafInvalidAccountException(inner) => {
                    Error::WafInvalidAccountException(inner)
                }
                crate::error::UpdateRegexMatchSetErrorKind::WafInvalidOperationException(inner) => {
                    Error::WafInvalidOperationException(inner)
                }
                crate::error::UpdateRegexMatchSetErrorKind::WafLimitsExceededException(inner) => {
                    Error::WafLimitsExceededException(inner)
                }
                crate::error::UpdateRegexMatchSetErrorKind::WafNonexistentContainerException(
                    inner,
                ) => Error::WafNonexistentContainerException(inner),
                crate::error::UpdateRegexMatchSetErrorKind::WafNonexistentItemException(inner) => {
                    Error::WafNonexistentItemException(inner)
                }
                crate::error::UpdateRegexMatchSetErrorKind::WafStaleDataException(inner) => {
                    Error::WafStaleDataException(inner)
                }
                crate::error::UpdateRegexMatchSetErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::UpdateRegexPatternSetError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::UpdateRegexPatternSetError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::UpdateRegexPatternSetErrorKind::WafInternalErrorException(inner) => {
                    Error::WafInternalErrorException(inner)
                }
                crate::error::UpdateRegexPatternSetErrorKind::WafInvalidAccountException(inner) => {
                    Error::WafInvalidAccountException(inner)
                }
                crate::error::UpdateRegexPatternSetErrorKind::WafInvalidOperationException(
                    inner,
                ) => Error::WafInvalidOperationException(inner),
                crate::error::UpdateRegexPatternSetErrorKind::WafInvalidRegexPatternException(
                    inner,
                ) => Error::WafInvalidRegexPatternException(inner),
                crate::error::UpdateRegexPatternSetErrorKind::WafLimitsExceededException(inner) => {
                    Error::WafLimitsExceededException(inner)
                }
                crate::error::UpdateRegexPatternSetErrorKind::WafNonexistentContainerException(
                    inner,
                ) => Error::WafNonexistentContainerException(inner),
                crate::error::UpdateRegexPatternSetErrorKind::WafNonexistentItemException(
                    inner,
                ) => Error::WafNonexistentItemException(inner),
                crate::error::UpdateRegexPatternSetErrorKind::WafStaleDataException(inner) => {
                    Error::WafStaleDataException(inner)
                }
                crate::error::UpdateRegexPatternSetErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::UpdateRuleError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::UpdateRuleError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::UpdateRuleErrorKind::WafInternalErrorException(inner) => {
                    Error::WafInternalErrorException(inner)
                }
                crate::error::UpdateRuleErrorKind::WafInvalidAccountException(inner) => {
                    Error::WafInvalidAccountException(inner)
                }
                crate::error::UpdateRuleErrorKind::WafInvalidOperationException(inner) => {
                    Error::WafInvalidOperationException(inner)
                }
                crate::error::UpdateRuleErrorKind::WafInvalidParameterException(inner) => {
                    Error::WafInvalidParameterException(inner)
                }
                crate::error::UpdateRuleErrorKind::WafLimitsExceededException(inner) => {
                    Error::WafLimitsExceededException(inner)
                }
                crate::error::UpdateRuleErrorKind::WafNonexistentContainerException(inner) => {
                    Error::WafNonexistentContainerException(inner)
                }
                crate::error::UpdateRuleErrorKind::WafNonexistentItemException(inner) => {
                    Error::WafNonexistentItemException(inner)
                }
                crate::error::UpdateRuleErrorKind::WafReferencedItemException(inner) => {
                    Error::WafReferencedItemException(inner)
                }
                crate::error::UpdateRuleErrorKind::WafStaleDataException(inner) => {
                    Error::WafStaleDataException(inner)
                }
                crate::error::UpdateRuleErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::UpdateRuleGroupError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::UpdateRuleGroupError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::UpdateRuleGroupErrorKind::WafInternalErrorException(inner) => {
                    Error::WafInternalErrorException(inner)
                }
                crate::error::UpdateRuleGroupErrorKind::WafInvalidOperationException(inner) => {
                    Error::WafInvalidOperationException(inner)
                }
                crate::error::UpdateRuleGroupErrorKind::WafInvalidParameterException(inner) => {
                    Error::WafInvalidParameterException(inner)
                }
                crate::error::UpdateRuleGroupErrorKind::WafLimitsExceededException(inner) => {
                    Error::WafLimitsExceededException(inner)
                }
                crate::error::UpdateRuleGroupErrorKind::WafNonexistentContainerException(inner) => {
                    Error::WafNonexistentContainerException(inner)
                }
                crate::error::UpdateRuleGroupErrorKind::WafNonexistentItemException(inner) => {
                    Error::WafNonexistentItemException(inner)
                }
                crate::error::UpdateRuleGroupErrorKind::WafStaleDataException(inner) => {
                    Error::WafStaleDataException(inner)
                }
                crate::error::UpdateRuleGroupErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::UpdateSizeConstraintSetError>> for Error {
    fn from(
        err: smithy_http::result::SdkError<crate::error::UpdateSizeConstraintSetError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::UpdateSizeConstraintSetErrorKind::WafInternalErrorException(inner) => Error::WafInternalErrorException(inner),
                crate::error::UpdateSizeConstraintSetErrorKind::WafInvalidAccountException(inner) => Error::WafInvalidAccountException(inner),
                crate::error::UpdateSizeConstraintSetErrorKind::WafInvalidOperationException(inner) => Error::WafInvalidOperationException(inner),
                crate::error::UpdateSizeConstraintSetErrorKind::WafInvalidParameterException(inner) => Error::WafInvalidParameterException(inner),
                crate::error::UpdateSizeConstraintSetErrorKind::WafLimitsExceededException(inner) => Error::WafLimitsExceededException(inner),
                crate::error::UpdateSizeConstraintSetErrorKind::WafNonexistentContainerException(inner) => Error::WafNonexistentContainerException(inner),
                crate::error::UpdateSizeConstraintSetErrorKind::WafNonexistentItemException(inner) => Error::WafNonexistentItemException(inner),
                crate::error::UpdateSizeConstraintSetErrorKind::WafReferencedItemException(inner) => Error::WafReferencedItemException(inner),
                crate::error::UpdateSizeConstraintSetErrorKind::WafStaleDataException(inner) => Error::WafStaleDataException(inner),
                crate::error::UpdateSizeConstraintSetErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::UpdateSqlInjectionMatchSetError>> for Error {
    fn from(
        err: smithy_http::result::SdkError<crate::error::UpdateSqlInjectionMatchSetError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::UpdateSqlInjectionMatchSetErrorKind::WafInternalErrorException(inner) => Error::WafInternalErrorException(inner),
                crate::error::UpdateSqlInjectionMatchSetErrorKind::WafInvalidAccountException(inner) => Error::WafInvalidAccountException(inner),
                crate::error::UpdateSqlInjectionMatchSetErrorKind::WafInvalidOperationException(inner) => Error::WafInvalidOperationException(inner),
                crate::error::UpdateSqlInjectionMatchSetErrorKind::WafInvalidParameterException(inner) => Error::WafInvalidParameterException(inner),
                crate::error::UpdateSqlInjectionMatchSetErrorKind::WafLimitsExceededException(inner) => Error::WafLimitsExceededException(inner),
                crate::error::UpdateSqlInjectionMatchSetErrorKind::WafNonexistentContainerException(inner) => Error::WafNonexistentContainerException(inner),
                crate::error::UpdateSqlInjectionMatchSetErrorKind::WafNonexistentItemException(inner) => Error::WafNonexistentItemException(inner),
                crate::error::UpdateSqlInjectionMatchSetErrorKind::WafStaleDataException(inner) => Error::WafStaleDataException(inner),
                crate::error::UpdateSqlInjectionMatchSetErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::UpdateWebACLError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::UpdateWebACLError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::UpdateWebACLErrorKind::WafInternalErrorException(inner) => {
                    Error::WafInternalErrorException(inner)
                }
                crate::error::UpdateWebACLErrorKind::WafInvalidAccountException(inner) => {
                    Error::WafInvalidAccountException(inner)
                }
                crate::error::UpdateWebACLErrorKind::WafInvalidOperationException(inner) => {
                    Error::WafInvalidOperationException(inner)
                }
                crate::error::UpdateWebACLErrorKind::WafInvalidParameterException(inner) => {
                    Error::WafInvalidParameterException(inner)
                }
                crate::error::UpdateWebACLErrorKind::WafLimitsExceededException(inner) => {
                    Error::WafLimitsExceededException(inner)
                }
                crate::error::UpdateWebACLErrorKind::WafNonexistentContainerException(inner) => {
                    Error::WafNonexistentContainerException(inner)
                }
                crate::error::UpdateWebACLErrorKind::WafNonexistentItemException(inner) => {
                    Error::WafNonexistentItemException(inner)
                }
                crate::error::UpdateWebACLErrorKind::WafReferencedItemException(inner) => {
                    Error::WafReferencedItemException(inner)
                }
                crate::error::UpdateWebACLErrorKind::WafStaleDataException(inner) => {
                    Error::WafStaleDataException(inner)
                }
                crate::error::UpdateWebACLErrorKind::WafSubscriptionNotFoundException(inner) => {
                    Error::WafSubscriptionNotFoundException(inner)
                }
                crate::error::UpdateWebACLErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::UpdateXssMatchSetError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::UpdateXssMatchSetError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::UpdateXssMatchSetErrorKind::WafInternalErrorException(inner) => {
                    Error::WafInternalErrorException(inner)
                }
                crate::error::UpdateXssMatchSetErrorKind::WafInvalidAccountException(inner) => {
                    Error::WafInvalidAccountException(inner)
                }
                crate::error::UpdateXssMatchSetErrorKind::WafInvalidOperationException(inner) => {
                    Error::WafInvalidOperationException(inner)
                }
                crate::error::UpdateXssMatchSetErrorKind::WafInvalidParameterException(inner) => {
                    Error::WafInvalidParameterException(inner)
                }
                crate::error::UpdateXssMatchSetErrorKind::WafLimitsExceededException(inner) => {
                    Error::WafLimitsExceededException(inner)
                }
                crate::error::UpdateXssMatchSetErrorKind::WafNonexistentContainerException(
                    inner,
                ) => Error::WafNonexistentContainerException(inner),
                crate::error::UpdateXssMatchSetErrorKind::WafNonexistentItemException(inner) => {
                    Error::WafNonexistentItemException(inner)
                }
                crate::error::UpdateXssMatchSetErrorKind::WafStaleDataException(inner) => {
                    Error::WafStaleDataException(inner)
                }
                crate::error::UpdateXssMatchSetErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl std::error::Error for Error {}
