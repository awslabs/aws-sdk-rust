// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Details about the type and time events occurred related to the Amazon Braket job.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct JobEventDetails {
    /// <p>The type of event that occurred related to the Amazon Braket job.</p>
    #[doc(hidden)]
    pub event_type: std::option::Option<crate::types::JobEventType>,
    /// <p>TThe type of event that occurred related to the Amazon Braket job.</p>
    #[doc(hidden)]
    pub time_of_event: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>A message describing the event that occurred related to the Amazon Braket job.</p>
    #[doc(hidden)]
    pub message: std::option::Option<std::string::String>,
}
impl JobEventDetails {
    /// <p>The type of event that occurred related to the Amazon Braket job.</p>
    pub fn event_type(&self) -> std::option::Option<&crate::types::JobEventType> {
        self.event_type.as_ref()
    }
    /// <p>TThe type of event that occurred related to the Amazon Braket job.</p>
    pub fn time_of_event(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.time_of_event.as_ref()
    }
    /// <p>A message describing the event that occurred related to the Amazon Braket job.</p>
    pub fn message(&self) -> std::option::Option<&str> {
        self.message.as_deref()
    }
}
impl JobEventDetails {
    /// Creates a new builder-style object to manufacture [`JobEventDetails`](crate::types::JobEventDetails).
    pub fn builder() -> crate::types::builders::JobEventDetailsBuilder {
        crate::types::builders::JobEventDetailsBuilder::default()
    }
}

/// A builder for [`JobEventDetails`](crate::types::JobEventDetails).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct JobEventDetailsBuilder {
    pub(crate) event_type: std::option::Option<crate::types::JobEventType>,
    pub(crate) time_of_event: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) message: std::option::Option<std::string::String>,
}
impl JobEventDetailsBuilder {
    /// <p>The type of event that occurred related to the Amazon Braket job.</p>
    pub fn event_type(mut self, input: crate::types::JobEventType) -> Self {
        self.event_type = Some(input);
        self
    }
    /// <p>The type of event that occurred related to the Amazon Braket job.</p>
    pub fn set_event_type(
        mut self,
        input: std::option::Option<crate::types::JobEventType>,
    ) -> Self {
        self.event_type = input;
        self
    }
    /// <p>TThe type of event that occurred related to the Amazon Braket job.</p>
    pub fn time_of_event(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.time_of_event = Some(input);
        self
    }
    /// <p>TThe type of event that occurred related to the Amazon Braket job.</p>
    pub fn set_time_of_event(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.time_of_event = input;
        self
    }
    /// <p>A message describing the event that occurred related to the Amazon Braket job.</p>
    pub fn message(mut self, input: impl Into<std::string::String>) -> Self {
        self.message = Some(input.into());
        self
    }
    /// <p>A message describing the event that occurred related to the Amazon Braket job.</p>
    pub fn set_message(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.message = input;
        self
    }
    /// Consumes the builder and constructs a [`JobEventDetails`](crate::types::JobEventDetails).
    pub fn build(self) -> crate::types::JobEventDetails {
        crate::types::JobEventDetails {
            event_type: self.event_type,
            time_of_event: self.time_of_event,
            message: self.message,
        }
    }
}
