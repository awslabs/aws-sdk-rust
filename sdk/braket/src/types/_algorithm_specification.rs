// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Defines the Amazon Braket job to be created. Specifies the container image the job uses and the paths to the Python scripts used for entry and training.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AlgorithmSpecification {
    /// <p>Configures the paths to the Python scripts used for entry and training.</p>
    #[doc(hidden)]
    pub script_mode_config: std::option::Option<crate::types::ScriptModeConfig>,
    /// <p>The container image used to create an Amazon Braket job.</p>
    #[doc(hidden)]
    pub container_image: std::option::Option<crate::types::ContainerImage>,
}
impl AlgorithmSpecification {
    /// <p>Configures the paths to the Python scripts used for entry and training.</p>
    pub fn script_mode_config(&self) -> std::option::Option<&crate::types::ScriptModeConfig> {
        self.script_mode_config.as_ref()
    }
    /// <p>The container image used to create an Amazon Braket job.</p>
    pub fn container_image(&self) -> std::option::Option<&crate::types::ContainerImage> {
        self.container_image.as_ref()
    }
}
impl AlgorithmSpecification {
    /// Creates a new builder-style object to manufacture [`AlgorithmSpecification`](crate::types::AlgorithmSpecification).
    pub fn builder() -> crate::types::builders::AlgorithmSpecificationBuilder {
        crate::types::builders::AlgorithmSpecificationBuilder::default()
    }
}

/// A builder for [`AlgorithmSpecification`](crate::types::AlgorithmSpecification).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AlgorithmSpecificationBuilder {
    pub(crate) script_mode_config: std::option::Option<crate::types::ScriptModeConfig>,
    pub(crate) container_image: std::option::Option<crate::types::ContainerImage>,
}
impl AlgorithmSpecificationBuilder {
    /// <p>Configures the paths to the Python scripts used for entry and training.</p>
    pub fn script_mode_config(mut self, input: crate::types::ScriptModeConfig) -> Self {
        self.script_mode_config = Some(input);
        self
    }
    /// <p>Configures the paths to the Python scripts used for entry and training.</p>
    pub fn set_script_mode_config(
        mut self,
        input: std::option::Option<crate::types::ScriptModeConfig>,
    ) -> Self {
        self.script_mode_config = input;
        self
    }
    /// <p>The container image used to create an Amazon Braket job.</p>
    pub fn container_image(mut self, input: crate::types::ContainerImage) -> Self {
        self.container_image = Some(input);
        self
    }
    /// <p>The container image used to create an Amazon Braket job.</p>
    pub fn set_container_image(
        mut self,
        input: std::option::Option<crate::types::ContainerImage>,
    ) -> Self {
        self.container_image = input;
        self
    }
    /// Consumes the builder and constructs a [`AlgorithmSpecification`](crate::types::AlgorithmSpecification).
    pub fn build(self) -> crate::types::AlgorithmSpecification {
        crate::types::AlgorithmSpecification {
            script_mode_config: self.script_mode_config,
            container_image: self.container_image,
        }
    }
}
