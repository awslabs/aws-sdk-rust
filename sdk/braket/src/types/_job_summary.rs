// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Provides summary information about an Amazon Braket job.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct JobSummary {
    /// <p>The status of the Amazon Braket job.</p>
    #[doc(hidden)]
    pub status: std::option::Option<crate::types::JobPrimaryStatus>,
    /// <p>The ARN of the Amazon Braket job.</p>
    #[doc(hidden)]
    pub job_arn: std::option::Option<std::string::String>,
    /// <p>The name of the Amazon Braket job.</p>
    #[doc(hidden)]
    pub job_name: std::option::Option<std::string::String>,
    /// <p>Provides summary information about the primary device used by an Amazon Braket job.</p>
    #[doc(hidden)]
    pub device: std::option::Option<std::string::String>,
    /// <p>The date and time that the Amazon Braket job was created.</p>
    #[doc(hidden)]
    pub created_at: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>The date and time that the Amazon Braket job was started.</p>
    #[doc(hidden)]
    pub started_at: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>The date and time that the Amazon Braket job ended.</p>
    #[doc(hidden)]
    pub ended_at: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>A tag object that consists of a key and an optional value, used to manage metadata for Amazon Braket resources.</p>
    #[doc(hidden)]
    pub tags:
        std::option::Option<std::collections::HashMap<std::string::String, std::string::String>>,
}
impl JobSummary {
    /// <p>The status of the Amazon Braket job.</p>
    pub fn status(&self) -> std::option::Option<&crate::types::JobPrimaryStatus> {
        self.status.as_ref()
    }
    /// <p>The ARN of the Amazon Braket job.</p>
    pub fn job_arn(&self) -> std::option::Option<&str> {
        self.job_arn.as_deref()
    }
    /// <p>The name of the Amazon Braket job.</p>
    pub fn job_name(&self) -> std::option::Option<&str> {
        self.job_name.as_deref()
    }
    /// <p>Provides summary information about the primary device used by an Amazon Braket job.</p>
    pub fn device(&self) -> std::option::Option<&str> {
        self.device.as_deref()
    }
    /// <p>The date and time that the Amazon Braket job was created.</p>
    pub fn created_at(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.created_at.as_ref()
    }
    /// <p>The date and time that the Amazon Braket job was started.</p>
    pub fn started_at(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.started_at.as_ref()
    }
    /// <p>The date and time that the Amazon Braket job ended.</p>
    pub fn ended_at(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.ended_at.as_ref()
    }
    /// <p>A tag object that consists of a key and an optional value, used to manage metadata for Amazon Braket resources.</p>
    pub fn tags(
        &self,
    ) -> std::option::Option<&std::collections::HashMap<std::string::String, std::string::String>>
    {
        self.tags.as_ref()
    }
}
impl JobSummary {
    /// Creates a new builder-style object to manufacture [`JobSummary`](crate::types::JobSummary).
    pub fn builder() -> crate::types::builders::JobSummaryBuilder {
        crate::types::builders::JobSummaryBuilder::default()
    }
}

/// A builder for [`JobSummary`](crate::types::JobSummary).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct JobSummaryBuilder {
    pub(crate) status: std::option::Option<crate::types::JobPrimaryStatus>,
    pub(crate) job_arn: std::option::Option<std::string::String>,
    pub(crate) job_name: std::option::Option<std::string::String>,
    pub(crate) device: std::option::Option<std::string::String>,
    pub(crate) created_at: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) started_at: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) ended_at: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) tags:
        std::option::Option<std::collections::HashMap<std::string::String, std::string::String>>,
}
impl JobSummaryBuilder {
    /// <p>The status of the Amazon Braket job.</p>
    pub fn status(mut self, input: crate::types::JobPrimaryStatus) -> Self {
        self.status = Some(input);
        self
    }
    /// <p>The status of the Amazon Braket job.</p>
    pub fn set_status(
        mut self,
        input: std::option::Option<crate::types::JobPrimaryStatus>,
    ) -> Self {
        self.status = input;
        self
    }
    /// <p>The ARN of the Amazon Braket job.</p>
    pub fn job_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.job_arn = Some(input.into());
        self
    }
    /// <p>The ARN of the Amazon Braket job.</p>
    pub fn set_job_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.job_arn = input;
        self
    }
    /// <p>The name of the Amazon Braket job.</p>
    pub fn job_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.job_name = Some(input.into());
        self
    }
    /// <p>The name of the Amazon Braket job.</p>
    pub fn set_job_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.job_name = input;
        self
    }
    /// <p>Provides summary information about the primary device used by an Amazon Braket job.</p>
    pub fn device(mut self, input: impl Into<std::string::String>) -> Self {
        self.device = Some(input.into());
        self
    }
    /// <p>Provides summary information about the primary device used by an Amazon Braket job.</p>
    pub fn set_device(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.device = input;
        self
    }
    /// <p>The date and time that the Amazon Braket job was created.</p>
    pub fn created_at(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.created_at = Some(input);
        self
    }
    /// <p>The date and time that the Amazon Braket job was created.</p>
    pub fn set_created_at(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.created_at = input;
        self
    }
    /// <p>The date and time that the Amazon Braket job was started.</p>
    pub fn started_at(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.started_at = Some(input);
        self
    }
    /// <p>The date and time that the Amazon Braket job was started.</p>
    pub fn set_started_at(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.started_at = input;
        self
    }
    /// <p>The date and time that the Amazon Braket job ended.</p>
    pub fn ended_at(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.ended_at = Some(input);
        self
    }
    /// <p>The date and time that the Amazon Braket job ended.</p>
    pub fn set_ended_at(mut self, input: std::option::Option<aws_smithy_types::DateTime>) -> Self {
        self.ended_at = input;
        self
    }
    /// Adds a key-value pair to `tags`.
    ///
    /// To override the contents of this collection use [`set_tags`](Self::set_tags).
    ///
    /// <p>A tag object that consists of a key and an optional value, used to manage metadata for Amazon Braket resources.</p>
    pub fn tags(
        mut self,
        k: impl Into<std::string::String>,
        v: impl Into<std::string::String>,
    ) -> Self {
        let mut hash_map = self.tags.unwrap_or_default();
        hash_map.insert(k.into(), v.into());
        self.tags = Some(hash_map);
        self
    }
    /// <p>A tag object that consists of a key and an optional value, used to manage metadata for Amazon Braket resources.</p>
    pub fn set_tags(
        mut self,
        input: std::option::Option<
            std::collections::HashMap<std::string::String, std::string::String>,
        >,
    ) -> Self {
        self.tags = input;
        self
    }
    /// Consumes the builder and constructs a [`JobSummary`](crate::types::JobSummary).
    pub fn build(self) -> crate::types::JobSummary {
        crate::types::JobSummary {
            status: self.status,
            job_arn: self.job_arn,
            job_name: self.job_name,
            device: self.device,
            created_at: self.created_at,
            started_at: self.started_at,
            ended_at: self.ended_at,
            tags: self.tags,
        }
    }
}
