// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) fn reflens_search_devices_output_next_token(
    input: &crate::operation::search_devices::SearchDevicesOutput,
) -> ::std::option::Option<&::std::string::String> {
    let input = match &input.next_token {
        ::std::option::Option::None => return ::std::option::Option::None,
        ::std::option::Option::Some(t) => t,
    };
    ::std::option::Option::Some(input)
}

pub(crate) fn reflens_search_jobs_output_next_token(
    input: &crate::operation::search_jobs::SearchJobsOutput,
) -> ::std::option::Option<&::std::string::String> {
    let input = match &input.next_token {
        ::std::option::Option::None => return ::std::option::Option::None,
        ::std::option::Option::Some(t) => t,
    };
    ::std::option::Option::Some(input)
}

pub(crate) fn reflens_search_quantum_tasks_output_next_token(
    input: &crate::operation::search_quantum_tasks::SearchQuantumTasksOutput,
) -> ::std::option::Option<&::std::string::String> {
    let input = match &input.next_token {
        ::std::option::Option::None => return ::std::option::Option::None,
        ::std::option::Option::Some(t) => t,
    };
    ::std::option::Option::Some(input)
}

pub(crate) fn lens_search_devices_output_devices(
    input: crate::operation::search_devices::SearchDevicesOutput,
) -> ::std::option::Option<::std::vec::Vec<crate::types::DeviceSummary>> {
    let input = input.devices;
    ::std::option::Option::Some(input)
}

pub(crate) fn lens_search_jobs_output_jobs(
    input: crate::operation::search_jobs::SearchJobsOutput,
) -> ::std::option::Option<::std::vec::Vec<crate::types::JobSummary>> {
    let input = input.jobs;
    ::std::option::Option::Some(input)
}

pub(crate) fn lens_search_quantum_tasks_output_quantum_tasks(
    input: crate::operation::search_quantum_tasks::SearchQuantumTasksOutput,
) -> ::std::option::Option<::std::vec::Vec<crate::types::QuantumTaskSummary>> {
    let input = input.quantum_tasks;
    ::std::option::Option::Some(input)
}
