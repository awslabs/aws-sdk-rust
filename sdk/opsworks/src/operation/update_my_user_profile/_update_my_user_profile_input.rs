// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct UpdateMyUserProfileInput {
    /// <p>The user's SSH public key.</p>
    pub ssh_public_key: ::std::option::Option<::std::string::String>,
}
impl UpdateMyUserProfileInput {
    /// <p>The user's SSH public key.</p>
    pub fn ssh_public_key(&self) -> ::std::option::Option<&str> {
        self.ssh_public_key.as_deref()
    }
}
impl UpdateMyUserProfileInput {
    /// Creates a new builder-style object to manufacture [`UpdateMyUserProfileInput`](crate::operation::update_my_user_profile::UpdateMyUserProfileInput).
    pub fn builder() -> crate::operation::update_my_user_profile::builders::UpdateMyUserProfileInputBuilder {
        crate::operation::update_my_user_profile::builders::UpdateMyUserProfileInputBuilder::default()
    }
}

/// A builder for [`UpdateMyUserProfileInput`](crate::operation::update_my_user_profile::UpdateMyUserProfileInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct UpdateMyUserProfileInputBuilder {
    pub(crate) ssh_public_key: ::std::option::Option<::std::string::String>,
}
impl UpdateMyUserProfileInputBuilder {
    /// <p>The user's SSH public key.</p>
    pub fn ssh_public_key(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.ssh_public_key = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The user's SSH public key.</p>
    pub fn set_ssh_public_key(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.ssh_public_key = input;
        self
    }
    /// <p>The user's SSH public key.</p>
    pub fn get_ssh_public_key(&self) -> &::std::option::Option<::std::string::String> {
        &self.ssh_public_key
    }
    /// Consumes the builder and constructs a [`UpdateMyUserProfileInput`](crate::operation::update_my_user_profile::UpdateMyUserProfileInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::update_my_user_profile::UpdateMyUserProfileInput, ::aws_smithy_types::error::operation::BuildError>
    {
        ::std::result::Result::Ok(crate::operation::update_my_user_profile::UpdateMyUserProfileInput {
            ssh_public_key: self.ssh_public_key,
        })
    }
}
