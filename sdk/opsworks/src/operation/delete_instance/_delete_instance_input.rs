// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DeleteInstanceInput {
    /// <p>The instance ID.</p>
    pub instance_id: ::std::option::Option<::std::string::String>,
    /// <p>Whether to delete the instance Elastic IP address.</p>
    pub delete_elastic_ip: ::std::option::Option<bool>,
    /// <p>Whether to delete the instance's Amazon EBS volumes.</p>
    pub delete_volumes: ::std::option::Option<bool>,
}
impl DeleteInstanceInput {
    /// <p>The instance ID.</p>
    pub fn instance_id(&self) -> ::std::option::Option<&str> {
        self.instance_id.as_deref()
    }
    /// <p>Whether to delete the instance Elastic IP address.</p>
    pub fn delete_elastic_ip(&self) -> ::std::option::Option<bool> {
        self.delete_elastic_ip
    }
    /// <p>Whether to delete the instance's Amazon EBS volumes.</p>
    pub fn delete_volumes(&self) -> ::std::option::Option<bool> {
        self.delete_volumes
    }
}
impl DeleteInstanceInput {
    /// Creates a new builder-style object to manufacture [`DeleteInstanceInput`](crate::operation::delete_instance::DeleteInstanceInput).
    pub fn builder() -> crate::operation::delete_instance::builders::DeleteInstanceInputBuilder {
        crate::operation::delete_instance::builders::DeleteInstanceInputBuilder::default()
    }
}

/// A builder for [`DeleteInstanceInput`](crate::operation::delete_instance::DeleteInstanceInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DeleteInstanceInputBuilder {
    pub(crate) instance_id: ::std::option::Option<::std::string::String>,
    pub(crate) delete_elastic_ip: ::std::option::Option<bool>,
    pub(crate) delete_volumes: ::std::option::Option<bool>,
}
impl DeleteInstanceInputBuilder {
    /// <p>The instance ID.</p>
    /// This field is required.
    pub fn instance_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.instance_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The instance ID.</p>
    pub fn set_instance_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.instance_id = input;
        self
    }
    /// <p>The instance ID.</p>
    pub fn get_instance_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.instance_id
    }
    /// <p>Whether to delete the instance Elastic IP address.</p>
    pub fn delete_elastic_ip(mut self, input: bool) -> Self {
        self.delete_elastic_ip = ::std::option::Option::Some(input);
        self
    }
    /// <p>Whether to delete the instance Elastic IP address.</p>
    pub fn set_delete_elastic_ip(mut self, input: ::std::option::Option<bool>) -> Self {
        self.delete_elastic_ip = input;
        self
    }
    /// <p>Whether to delete the instance Elastic IP address.</p>
    pub fn get_delete_elastic_ip(&self) -> &::std::option::Option<bool> {
        &self.delete_elastic_ip
    }
    /// <p>Whether to delete the instance's Amazon EBS volumes.</p>
    pub fn delete_volumes(mut self, input: bool) -> Self {
        self.delete_volumes = ::std::option::Option::Some(input);
        self
    }
    /// <p>Whether to delete the instance's Amazon EBS volumes.</p>
    pub fn set_delete_volumes(mut self, input: ::std::option::Option<bool>) -> Self {
        self.delete_volumes = input;
        self
    }
    /// <p>Whether to delete the instance's Amazon EBS volumes.</p>
    pub fn get_delete_volumes(&self) -> &::std::option::Option<bool> {
        &self.delete_volumes
    }
    /// Consumes the builder and constructs a [`DeleteInstanceInput`](crate::operation::delete_instance::DeleteInstanceInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::delete_instance::DeleteInstanceInput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::operation::delete_instance::DeleteInstanceInput {
            instance_id: self.instance_id,
            delete_elastic_ip: self.delete_elastic_ip,
            delete_volumes: self.delete_volumes,
        })
    }
}
