// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct UpdateElasticIpInput {
    /// <p>The IP address for which you want to update the name.</p>
    #[doc(hidden)]
    pub elastic_ip: std::option::Option<std::string::String>,
    /// <p>The new name.</p>
    #[doc(hidden)]
    pub name: std::option::Option<std::string::String>,
}
impl UpdateElasticIpInput {
    /// <p>The IP address for which you want to update the name.</p>
    pub fn elastic_ip(&self) -> std::option::Option<&str> {
        self.elastic_ip.as_deref()
    }
    /// <p>The new name.</p>
    pub fn name(&self) -> std::option::Option<&str> {
        self.name.as_deref()
    }
}
impl UpdateElasticIpInput {
    /// Creates a new builder-style object to manufacture [`UpdateElasticIpInput`](crate::operation::update_elastic_ip::UpdateElasticIpInput).
    pub fn builder() -> crate::operation::update_elastic_ip::builders::UpdateElasticIpInputBuilder {
        crate::operation::update_elastic_ip::builders::UpdateElasticIpInputBuilder::default()
    }
}

/// A builder for [`UpdateElasticIpInput`](crate::operation::update_elastic_ip::UpdateElasticIpInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct UpdateElasticIpInputBuilder {
    pub(crate) elastic_ip: std::option::Option<std::string::String>,
    pub(crate) name: std::option::Option<std::string::String>,
}
impl UpdateElasticIpInputBuilder {
    /// <p>The IP address for which you want to update the name.</p>
    pub fn elastic_ip(mut self, input: impl Into<std::string::String>) -> Self {
        self.elastic_ip = Some(input.into());
        self
    }
    /// <p>The IP address for which you want to update the name.</p>
    pub fn set_elastic_ip(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.elastic_ip = input;
        self
    }
    /// <p>The new name.</p>
    pub fn name(mut self, input: impl Into<std::string::String>) -> Self {
        self.name = Some(input.into());
        self
    }
    /// <p>The new name.</p>
    pub fn set_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// Consumes the builder and constructs a [`UpdateElasticIpInput`](crate::operation::update_elastic_ip::UpdateElasticIpInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::update_elastic_ip::UpdateElasticIpInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(crate::operation::update_elastic_ip::UpdateElasticIpInput {
            elastic_ip: self.elastic_ip,
            name: self.name,
        })
    }
}
