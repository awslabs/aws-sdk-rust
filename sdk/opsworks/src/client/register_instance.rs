// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`RegisterInstance`](crate::operation::register_instance::builders::RegisterInstanceFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`stack_id(impl Into<String>)`](crate::operation::register_instance::builders::RegisterInstanceFluentBuilder::stack_id) / [`set_stack_id(Option<String>)`](crate::operation::register_instance::builders::RegisterInstanceFluentBuilder::set_stack_id):<br>required: **true**<br><p>The ID of the stack that the instance is to be registered with.</p><br>
    ///   - [`hostname(impl Into<String>)`](crate::operation::register_instance::builders::RegisterInstanceFluentBuilder::hostname) / [`set_hostname(Option<String>)`](crate::operation::register_instance::builders::RegisterInstanceFluentBuilder::set_hostname):<br>required: **false**<br><p>The instance's hostname.</p><br>
    ///   - [`public_ip(impl Into<String>)`](crate::operation::register_instance::builders::RegisterInstanceFluentBuilder::public_ip) / [`set_public_ip(Option<String>)`](crate::operation::register_instance::builders::RegisterInstanceFluentBuilder::set_public_ip):<br>required: **false**<br><p>The instance's public IP address.</p><br>
    ///   - [`private_ip(impl Into<String>)`](crate::operation::register_instance::builders::RegisterInstanceFluentBuilder::private_ip) / [`set_private_ip(Option<String>)`](crate::operation::register_instance::builders::RegisterInstanceFluentBuilder::set_private_ip):<br>required: **false**<br><p>The instance's private IP address.</p><br>
    ///   - [`rsa_public_key(impl Into<String>)`](crate::operation::register_instance::builders::RegisterInstanceFluentBuilder::rsa_public_key) / [`set_rsa_public_key(Option<String>)`](crate::operation::register_instance::builders::RegisterInstanceFluentBuilder::set_rsa_public_key):<br>required: **false**<br><p>The instances public RSA key. This key is used to encrypt communication between the instance and the service.</p><br>
    ///   - [`rsa_public_key_fingerprint(impl Into<String>)`](crate::operation::register_instance::builders::RegisterInstanceFluentBuilder::rsa_public_key_fingerprint) / [`set_rsa_public_key_fingerprint(Option<String>)`](crate::operation::register_instance::builders::RegisterInstanceFluentBuilder::set_rsa_public_key_fingerprint):<br>required: **false**<br><p>The instances public RSA key fingerprint.</p><br>
    ///   - [`instance_identity(InstanceIdentity)`](crate::operation::register_instance::builders::RegisterInstanceFluentBuilder::instance_identity) / [`set_instance_identity(Option<InstanceIdentity>)`](crate::operation::register_instance::builders::RegisterInstanceFluentBuilder::set_instance_identity):<br>required: **false**<br><p>An InstanceIdentity object that contains the instance's identity.</p><br>
    /// - On success, responds with [`RegisterInstanceOutput`](crate::operation::register_instance::RegisterInstanceOutput) with field(s):
    ///   - [`instance_id(Option<String>)`](crate::operation::register_instance::RegisterInstanceOutput::instance_id): <p>The registered instance's AWS OpsWorks Stacks ID.</p>
    /// - On failure, responds with [`SdkError<RegisterInstanceError>`](crate::operation::register_instance::RegisterInstanceError)
    pub fn register_instance(&self) -> crate::operation::register_instance::builders::RegisterInstanceFluentBuilder {
        crate::operation::register_instance::builders::RegisterInstanceFluentBuilder::new(self.handle.clone())
    }
}
