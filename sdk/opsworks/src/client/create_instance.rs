// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateInstance`](crate::operation::create_instance::builders::CreateInstanceFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`stack_id(impl Into<String>)`](crate::operation::create_instance::builders::CreateInstanceFluentBuilder::stack_id) / [`set_stack_id(Option<String>)`](crate::operation::create_instance::builders::CreateInstanceFluentBuilder::set_stack_id): <p>The stack ID.</p>
    ///   - [`layer_ids(Vec<String>)`](crate::operation::create_instance::builders::CreateInstanceFluentBuilder::layer_ids) / [`set_layer_ids(Option<Vec<String>>)`](crate::operation::create_instance::builders::CreateInstanceFluentBuilder::set_layer_ids): <p>An array that contains the instance's layer IDs.</p>
    ///   - [`instance_type(impl Into<String>)`](crate::operation::create_instance::builders::CreateInstanceFluentBuilder::instance_type) / [`set_instance_type(Option<String>)`](crate::operation::create_instance::builders::CreateInstanceFluentBuilder::set_instance_type): <p>The instance type, such as <code>t2.micro</code>. For a list of supported instance types, open the stack in the console, choose <b>Instances</b>, and choose <b>+ Instance</b>. The <b>Size</b> list contains the currently supported types. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html">Instance Families and Types</a>. The parameter values that you use to specify the various types are in the <b>API Name</b> column of the <b>Available Instance Types</b> table.</p>
    ///   - [`auto_scaling_type(AutoScalingType)`](crate::operation::create_instance::builders::CreateInstanceFluentBuilder::auto_scaling_type) / [`set_auto_scaling_type(Option<AutoScalingType>)`](crate::operation::create_instance::builders::CreateInstanceFluentBuilder::set_auto_scaling_type): <p>For load-based or time-based instances, the type. Windows stacks can use only time-based instances.</p>
    ///   - [`hostname(impl Into<String>)`](crate::operation::create_instance::builders::CreateInstanceFluentBuilder::hostname) / [`set_hostname(Option<String>)`](crate::operation::create_instance::builders::CreateInstanceFluentBuilder::set_hostname): <p>The instance host name.</p>
    ///   - [`os(impl Into<String>)`](crate::operation::create_instance::builders::CreateInstanceFluentBuilder::os) / [`set_os(Option<String>)`](crate::operation::create_instance::builders::CreateInstanceFluentBuilder::set_os): <p>The instance's operating system, which must be set to one of the following.</p>  <ul>   <li> <p>A supported Linux operating system: An Amazon Linux version, such as <code>Amazon Linux 2018.03</code>, <code>Amazon Linux 2017.09</code>, <code>Amazon Linux 2017.03</code>, <code>Amazon Linux 2016.09</code>, <code>Amazon Linux 2016.03</code>, <code>Amazon Linux 2015.09</code>, or <code>Amazon Linux 2015.03</code>.</p> </li>   <li> <p>A supported Ubuntu operating system, such as <code>Ubuntu 16.04 LTS</code>, <code>Ubuntu 14.04 LTS</code>, or <code>Ubuntu 12.04 LTS</code>.</p> </li>   <li> <p> <code>CentOS Linux 7</code> </p> </li>   <li> <p> <code>Red Hat Enterprise Linux 7</code> </p> </li>   <li> <p>A supported Windows operating system, such as <code>Microsoft Windows Server 2012 R2 Base</code>, <code>Microsoft Windows Server 2012 R2 with SQL Server Express</code>, <code>Microsoft Windows Server 2012 R2 with SQL Server Standard</code>, or <code>Microsoft Windows Server 2012 R2 with SQL Server Web</code>.</p> </li>   <li> <p>A custom AMI: <code>Custom</code>.</p> </li>  </ul>  <p>For more information about the supported operating systems, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/workinginstances-os.html">AWS OpsWorks Stacks Operating Systems</a>.</p>  <p>The default option is the current Amazon Linux version. If you set this parameter to <code>Custom</code>, you must use the <code>CreateInstance</code> action's AmiId parameter to specify the custom AMI that you want to use. Block device mappings are not supported if the value is <code>Custom</code>. For more information about supported operating systems, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/workinginstances-os.html">Operating Systems</a>For more information about how to use custom AMIs with AWS OpsWorks Stacks, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/workinginstances-custom-ami.html">Using Custom AMIs</a>.</p>
    ///   - [`ami_id(impl Into<String>)`](crate::operation::create_instance::builders::CreateInstanceFluentBuilder::ami_id) / [`set_ami_id(Option<String>)`](crate::operation::create_instance::builders::CreateInstanceFluentBuilder::set_ami_id): <p>A custom AMI ID to be used to create the instance. The AMI should be based on one of the supported operating systems. For more information, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/workinginstances-custom-ami.html">Using Custom AMIs</a>.</p> <note>   <p>If you specify a custom AMI, you must set <code>Os</code> to <code>Custom</code>.</p>  </note>
    ///   - [`ssh_key_name(impl Into<String>)`](crate::operation::create_instance::builders::CreateInstanceFluentBuilder::ssh_key_name) / [`set_ssh_key_name(Option<String>)`](crate::operation::create_instance::builders::CreateInstanceFluentBuilder::set_ssh_key_name): <p>The instance's Amazon EC2 key-pair name.</p>
    ///   - [`availability_zone(impl Into<String>)`](crate::operation::create_instance::builders::CreateInstanceFluentBuilder::availability_zone) / [`set_availability_zone(Option<String>)`](crate::operation::create_instance::builders::CreateInstanceFluentBuilder::set_availability_zone): <p>The instance Availability Zone. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/rande.html">Regions and Endpoints</a>.</p>
    ///   - [`virtualization_type(impl Into<String>)`](crate::operation::create_instance::builders::CreateInstanceFluentBuilder::virtualization_type) / [`set_virtualization_type(Option<String>)`](crate::operation::create_instance::builders::CreateInstanceFluentBuilder::set_virtualization_type): <p>The instance's virtualization type, <code>paravirtual</code> or <code>hvm</code>.</p>
    ///   - [`subnet_id(impl Into<String>)`](crate::operation::create_instance::builders::CreateInstanceFluentBuilder::subnet_id) / [`set_subnet_id(Option<String>)`](crate::operation::create_instance::builders::CreateInstanceFluentBuilder::set_subnet_id): <p>The ID of the instance's subnet. If the stack is running in a VPC, you can use this parameter to override the stack's default subnet ID value and direct AWS OpsWorks Stacks to launch the instance in a different subnet.</p>
    ///   - [`architecture(Architecture)`](crate::operation::create_instance::builders::CreateInstanceFluentBuilder::architecture) / [`set_architecture(Option<Architecture>)`](crate::operation::create_instance::builders::CreateInstanceFluentBuilder::set_architecture): <p>The instance architecture. The default option is <code>x86_64</code>. Instance types do not necessarily support both architectures. For a list of the architectures that are supported by the different instance types, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html">Instance Families and Types</a>.</p>
    ///   - [`root_device_type(RootDeviceType)`](crate::operation::create_instance::builders::CreateInstanceFluentBuilder::root_device_type) / [`set_root_device_type(Option<RootDeviceType>)`](crate::operation::create_instance::builders::CreateInstanceFluentBuilder::set_root_device_type): <p>The instance root device type. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ComponentsAMIs.html#storage-for-the-root-device">Storage for the Root Device</a>.</p>
    ///   - [`block_device_mappings(Vec<BlockDeviceMapping>)`](crate::operation::create_instance::builders::CreateInstanceFluentBuilder::block_device_mappings) / [`set_block_device_mappings(Option<Vec<BlockDeviceMapping>>)`](crate::operation::create_instance::builders::CreateInstanceFluentBuilder::set_block_device_mappings): <p>An array of <code>BlockDeviceMapping</code> objects that specify the instance's block devices. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/block-device-mapping-concepts.html">Block Device Mapping</a>. Note that block device mappings are not supported for custom AMIs.</p>
    ///   - [`install_updates_on_boot(bool)`](crate::operation::create_instance::builders::CreateInstanceFluentBuilder::install_updates_on_boot) / [`set_install_updates_on_boot(Option<bool>)`](crate::operation::create_instance::builders::CreateInstanceFluentBuilder::set_install_updates_on_boot): <p>Whether to install operating system and package updates when the instance boots. The default value is <code>true</code>. To control when updates are installed, set this value to <code>false</code>. You must then update your instances manually by using <code>CreateDeployment</code> to run the <code>update_dependencies</code> stack command or by manually running <code>yum</code> (Amazon Linux) or <code>apt-get</code> (Ubuntu) on the instances. </p> <note>   <p>We strongly recommend using the default value of <code>true</code> to ensure that your instances have the latest security updates.</p>  </note>
    ///   - [`ebs_optimized(bool)`](crate::operation::create_instance::builders::CreateInstanceFluentBuilder::ebs_optimized) / [`set_ebs_optimized(Option<bool>)`](crate::operation::create_instance::builders::CreateInstanceFluentBuilder::set_ebs_optimized): <p>Whether to create an Amazon EBS-optimized instance.</p>
    ///   - [`agent_version(impl Into<String>)`](crate::operation::create_instance::builders::CreateInstanceFluentBuilder::agent_version) / [`set_agent_version(Option<String>)`](crate::operation::create_instance::builders::CreateInstanceFluentBuilder::set_agent_version): <p>The default AWS OpsWorks Stacks agent version. You have the following options:</p>  <ul>   <li> <p> <code>INHERIT</code> - Use the stack's default agent version setting.</p> </li>   <li> <p> <i>version_number</i> - Use the specified agent version. This value overrides the stack's default setting. To update the agent version, edit the instance configuration and specify a new version. AWS OpsWorks Stacks then automatically installs that version on the instance.</p> </li>  </ul>  <p>The default setting is <code>INHERIT</code>. To specify an agent version, you must use the complete version number, not the abbreviated number shown on the console. For a list of available agent version numbers, call <code>DescribeAgentVersions</code>. AgentVersion cannot be set to Chef 12.2.</p>
    ///   - [`tenancy(impl Into<String>)`](crate::operation::create_instance::builders::CreateInstanceFluentBuilder::tenancy) / [`set_tenancy(Option<String>)`](crate::operation::create_instance::builders::CreateInstanceFluentBuilder::set_tenancy): <p>The instance's tenancy option. The default option is no tenancy, or if the instance is running in a VPC, inherit tenancy settings from the VPC. The following are valid values for this parameter: <code>dedicated</code>, <code>default</code>, or <code>host</code>. Because there are costs associated with changes in tenancy options, we recommend that you research tenancy options before choosing them for your instances. For more information about dedicated hosts, see <a href="http://aws.amazon.com/ec2/dedicated-hosts/">Dedicated Hosts Overview</a> and <a href="http://aws.amazon.com/ec2/dedicated-hosts/">Amazon EC2 Dedicated Hosts</a>. For more information about dedicated instances, see <a href="https://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/dedicated-instance.html">Dedicated Instances</a> and <a href="http://aws.amazon.com/ec2/purchasing-options/dedicated-instances/">Amazon EC2 Dedicated Instances</a>.</p>
    /// - On success, responds with [`CreateInstanceOutput`](crate::operation::create_instance::CreateInstanceOutput) with field(s):
    ///   - [`instance_id(Option<String>)`](crate::operation::create_instance::CreateInstanceOutput::instance_id): <p>The instance ID.</p>
    /// - On failure, responds with [`SdkError<CreateInstanceError>`](crate::operation::create_instance::CreateInstanceError)
    pub fn create_instance(
        &self,
    ) -> crate::operation::create_instance::builders::CreateInstanceFluentBuilder {
        crate::operation::create_instance::builders::CreateInstanceFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
