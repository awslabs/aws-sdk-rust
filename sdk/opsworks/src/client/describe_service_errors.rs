// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeServiceErrors`](crate::client::fluent_builders::DescribeServiceErrors) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`stack_id(impl Into<String>)`](crate::client::fluent_builders::DescribeServiceErrors::stack_id) / [`set_stack_id(Option<String>)`](crate::client::fluent_builders::DescribeServiceErrors::set_stack_id): <p>The stack ID. If you use this parameter, <code>DescribeServiceErrors</code> returns descriptions of the errors associated with the specified stack.</p>
    ///   - [`instance_id(impl Into<String>)`](crate::client::fluent_builders::DescribeServiceErrors::instance_id) / [`set_instance_id(Option<String>)`](crate::client::fluent_builders::DescribeServiceErrors::set_instance_id): <p>The instance ID. If you use this parameter, <code>DescribeServiceErrors</code> returns descriptions of the errors associated with the specified instance.</p>
    ///   - [`service_error_ids(Vec<String>)`](crate::client::fluent_builders::DescribeServiceErrors::service_error_ids) / [`set_service_error_ids(Option<Vec<String>>)`](crate::client::fluent_builders::DescribeServiceErrors::set_service_error_ids): <p>An array of service error IDs. If you use this parameter, <code>DescribeServiceErrors</code> returns descriptions of the specified errors. Otherwise, it returns a description of every error.</p>
    /// - On success, responds with [`DescribeServiceErrorsOutput`](crate::output::DescribeServiceErrorsOutput) with field(s):
    ///   - [`service_errors(Option<Vec<ServiceError>>)`](crate::output::DescribeServiceErrorsOutput::service_errors): <p>An array of <code>ServiceError</code> objects that describe the specified service errors.</p>
    /// - On failure, responds with [`SdkError<DescribeServiceErrorsError>`](crate::error::DescribeServiceErrorsError)
    pub fn describe_service_errors(&self) -> crate::client::fluent_builders::DescribeServiceErrors {
        crate::client::fluent_builders::DescribeServiceErrors::new(self.handle.clone())
    }
}
