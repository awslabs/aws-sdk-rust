// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeCommands`](crate::operation::describe_commands::builders::DescribeCommandsFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`deployment_id(impl Into<String>)`](crate::operation::describe_commands::builders::DescribeCommandsFluentBuilder::deployment_id) / [`set_deployment_id(Option<String>)`](crate::operation::describe_commands::builders::DescribeCommandsFluentBuilder::set_deployment_id):<br>required: **false**<br><p>The deployment ID. If you include this parameter, <code>DescribeCommands</code> returns a description of the commands associated with the specified deployment.</p><br>
    ///   - [`instance_id(impl Into<String>)`](crate::operation::describe_commands::builders::DescribeCommandsFluentBuilder::instance_id) / [`set_instance_id(Option<String>)`](crate::operation::describe_commands::builders::DescribeCommandsFluentBuilder::set_instance_id):<br>required: **false**<br><p>The instance ID. If you include this parameter, <code>DescribeCommands</code> returns a description of the commands associated with the specified instance.</p><br>
    ///   - [`command_ids(impl Into<String>)`](crate::operation::describe_commands::builders::DescribeCommandsFluentBuilder::command_ids) / [`set_command_ids(Option<Vec::<String>>)`](crate::operation::describe_commands::builders::DescribeCommandsFluentBuilder::set_command_ids):<br>required: **false**<br><p>An array of command IDs. If you include this parameter, <code>DescribeCommands</code> returns a description of the specified commands. Otherwise, it returns a description of every command.</p><br>
    /// - On success, responds with [`DescribeCommandsOutput`](crate::operation::describe_commands::DescribeCommandsOutput) with field(s):
    ///   - [`commands(Option<Vec::<Command>>)`](crate::operation::describe_commands::DescribeCommandsOutput::commands): <p>An array of <code>Command</code> objects that describe each of the specified commands.</p>
    /// - On failure, responds with [`SdkError<DescribeCommandsError>`](crate::operation::describe_commands::DescribeCommandsError)
    pub fn describe_commands(&self) -> crate::operation::describe_commands::builders::DescribeCommandsFluentBuilder {
        crate::operation::describe_commands::builders::DescribeCommandsFluentBuilder::new(self.handle.clone())
    }
}
