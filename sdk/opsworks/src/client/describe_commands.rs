// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeCommands`](crate::client::fluent_builders::DescribeCommands) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`deployment_id(impl Into<String>)`](crate::client::fluent_builders::DescribeCommands::deployment_id) / [`set_deployment_id(Option<String>)`](crate::client::fluent_builders::DescribeCommands::set_deployment_id): <p>The deployment ID. If you include this parameter, <code>DescribeCommands</code> returns a description of the commands associated with the specified deployment.</p>
    ///   - [`instance_id(impl Into<String>)`](crate::client::fluent_builders::DescribeCommands::instance_id) / [`set_instance_id(Option<String>)`](crate::client::fluent_builders::DescribeCommands::set_instance_id): <p>The instance ID. If you include this parameter, <code>DescribeCommands</code> returns a description of the commands associated with the specified instance.</p>
    ///   - [`command_ids(Vec<String>)`](crate::client::fluent_builders::DescribeCommands::command_ids) / [`set_command_ids(Option<Vec<String>>)`](crate::client::fluent_builders::DescribeCommands::set_command_ids): <p>An array of command IDs. If you include this parameter, <code>DescribeCommands</code> returns a description of the specified commands. Otherwise, it returns a description of every command.</p>
    /// - On success, responds with [`DescribeCommandsOutput`](crate::output::DescribeCommandsOutput) with field(s):
    ///   - [`commands(Option<Vec<Command>>)`](crate::output::DescribeCommandsOutput::commands): <p>An array of <code>Command</code> objects that describe each of the specified commands.</p>
    /// - On failure, responds with [`SdkError<DescribeCommandsError>`](crate::error::DescribeCommandsError)
    pub fn describe_commands(&self) -> crate::client::fluent_builders::DescribeCommands {
        crate::client::fluent_builders::DescribeCommands::new(self.handle.clone())
    }
}
