// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DetachElasticLoadBalancer`](crate::client::fluent_builders::DetachElasticLoadBalancer) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`elastic_load_balancer_name(impl Into<String>)`](crate::client::fluent_builders::DetachElasticLoadBalancer::elastic_load_balancer_name) / [`set_elastic_load_balancer_name(Option<String>)`](crate::client::fluent_builders::DetachElasticLoadBalancer::set_elastic_load_balancer_name): <p>The Elastic Load Balancing instance's name.</p>
    ///   - [`layer_id(impl Into<String>)`](crate::client::fluent_builders::DetachElasticLoadBalancer::layer_id) / [`set_layer_id(Option<String>)`](crate::client::fluent_builders::DetachElasticLoadBalancer::set_layer_id): <p>The ID of the layer that the Elastic Load Balancing instance is attached to.</p>
    /// - On success, responds with [`DetachElasticLoadBalancerOutput`](crate::output::DetachElasticLoadBalancerOutput)
    /// - On failure, responds with [`SdkError<DetachElasticLoadBalancerError>`](crate::error::DetachElasticLoadBalancerError)
    pub fn detach_elastic_load_balancer(
        &self,
    ) -> crate::client::fluent_builders::DetachElasticLoadBalancer {
        crate::client::fluent_builders::DetachElasticLoadBalancer::new(self.handle.clone())
    }
}
