// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`RegisterElasticIp`](crate::client::fluent_builders::RegisterElasticIp) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`elastic_ip(impl Into<String>)`](crate::client::fluent_builders::RegisterElasticIp::elastic_ip) / [`set_elastic_ip(Option<String>)`](crate::client::fluent_builders::RegisterElasticIp::set_elastic_ip): <p>The Elastic IP address.</p>
    ///   - [`stack_id(impl Into<String>)`](crate::client::fluent_builders::RegisterElasticIp::stack_id) / [`set_stack_id(Option<String>)`](crate::client::fluent_builders::RegisterElasticIp::set_stack_id): <p>The stack ID.</p>
    /// - On success, responds with [`RegisterElasticIpOutput`](crate::output::RegisterElasticIpOutput) with field(s):
    ///   - [`elastic_ip(Option<String>)`](crate::output::RegisterElasticIpOutput::elastic_ip): <p>The Elastic IP address.</p>
    /// - On failure, responds with [`SdkError<RegisterElasticIpError>`](crate::error::RegisterElasticIpError)
    pub fn register_elastic_ip(&self) -> crate::client::fluent_builders::RegisterElasticIp {
        crate::client::fluent_builders::RegisterElasticIp::new(self.handle.clone())
    }
}
