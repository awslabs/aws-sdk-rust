// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A block that contains information about the configuration manager (Chef) and the versions of the configuration manager that are supported for an operating system.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct OperatingSystemConfigurationManager {
    /// <p>The name of the configuration manager, which is Chef.</p>
    #[doc(hidden)]
    pub name: std::option::Option<std::string::String>,
    /// <p>The versions of the configuration manager that are supported by an operating system.</p>
    #[doc(hidden)]
    pub version: std::option::Option<std::string::String>,
}
impl OperatingSystemConfigurationManager {
    /// <p>The name of the configuration manager, which is Chef.</p>
    pub fn name(&self) -> std::option::Option<&str> {
        self.name.as_deref()
    }
    /// <p>The versions of the configuration manager that are supported by an operating system.</p>
    pub fn version(&self) -> std::option::Option<&str> {
        self.version.as_deref()
    }
}
impl OperatingSystemConfigurationManager {
    /// Creates a new builder-style object to manufacture [`OperatingSystemConfigurationManager`](crate::types::OperatingSystemConfigurationManager).
    pub fn builder() -> crate::types::builders::OperatingSystemConfigurationManagerBuilder {
        crate::types::builders::OperatingSystemConfigurationManagerBuilder::default()
    }
}

/// A builder for [`OperatingSystemConfigurationManager`](crate::types::OperatingSystemConfigurationManager).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct OperatingSystemConfigurationManagerBuilder {
    pub(crate) name: std::option::Option<std::string::String>,
    pub(crate) version: std::option::Option<std::string::String>,
}
impl OperatingSystemConfigurationManagerBuilder {
    /// <p>The name of the configuration manager, which is Chef.</p>
    pub fn name(mut self, input: impl Into<std::string::String>) -> Self {
        self.name = Some(input.into());
        self
    }
    /// <p>The name of the configuration manager, which is Chef.</p>
    pub fn set_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>The versions of the configuration manager that are supported by an operating system.</p>
    pub fn version(mut self, input: impl Into<std::string::String>) -> Self {
        self.version = Some(input.into());
        self
    }
    /// <p>The versions of the configuration manager that are supported by an operating system.</p>
    pub fn set_version(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.version = input;
        self
    }
    /// Consumes the builder and constructs a [`OperatingSystemConfigurationManager`](crate::types::OperatingSystemConfigurationManager).
    pub fn build(self) -> crate::types::OperatingSystemConfigurationManager {
        crate::types::OperatingSystemConfigurationManager {
            name: self.name,
            version: self.version,
        }
    }
}
