// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains a description of an Amazon EC2 instance from the Amazon EC2 metadata service. For more information, see <a href="https://docs.aws.amazon.com/sdkfornet/latest/apidocs/Index.html">Instance Metadata and User Data</a>.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct InstanceIdentity {
    /// <p>A JSON document that contains the metadata.</p>
    #[doc(hidden)]
    pub document: std::option::Option<std::string::String>,
    /// <p>A signature that can be used to verify the document's accuracy and authenticity.</p>
    #[doc(hidden)]
    pub signature: std::option::Option<std::string::String>,
}
impl InstanceIdentity {
    /// <p>A JSON document that contains the metadata.</p>
    pub fn document(&self) -> std::option::Option<&str> {
        self.document.as_deref()
    }
    /// <p>A signature that can be used to verify the document's accuracy and authenticity.</p>
    pub fn signature(&self) -> std::option::Option<&str> {
        self.signature.as_deref()
    }
}
impl InstanceIdentity {
    /// Creates a new builder-style object to manufacture [`InstanceIdentity`](crate::types::InstanceIdentity).
    pub fn builder() -> crate::types::builders::InstanceIdentityBuilder {
        crate::types::builders::InstanceIdentityBuilder::default()
    }
}

/// A builder for [`InstanceIdentity`](crate::types::InstanceIdentity).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct InstanceIdentityBuilder {
    pub(crate) document: std::option::Option<std::string::String>,
    pub(crate) signature: std::option::Option<std::string::String>,
}
impl InstanceIdentityBuilder {
    /// <p>A JSON document that contains the metadata.</p>
    pub fn document(mut self, input: impl Into<std::string::String>) -> Self {
        self.document = Some(input.into());
        self
    }
    /// <p>A JSON document that contains the metadata.</p>
    pub fn set_document(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.document = input;
        self
    }
    /// <p>A signature that can be used to verify the document's accuracy and authenticity.</p>
    pub fn signature(mut self, input: impl Into<std::string::String>) -> Self {
        self.signature = Some(input.into());
        self
    }
    /// <p>A signature that can be used to verify the document's accuracy and authenticity.</p>
    pub fn set_signature(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.signature = input;
        self
    }
    /// Consumes the builder and constructs a [`InstanceIdentity`](crate::types::InstanceIdentity).
    pub fn build(self) -> crate::types::InstanceIdentity {
        crate::types::InstanceIdentity {
            document: self.document,
            signature: self.signature,
        }
    }
}
