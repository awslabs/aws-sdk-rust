// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A reference value to compare Performance Insights metrics against to determine if the metrics demonstrate anomalous behavior.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct PerformanceInsightsReferenceScalar {
    /// <p>The reference value.</p>
    #[doc(hidden)]
    pub value: std::option::Option<f64>,
}
impl PerformanceInsightsReferenceScalar {
    /// <p>The reference value.</p>
    pub fn value(&self) -> std::option::Option<f64> {
        self.value
    }
}
impl PerformanceInsightsReferenceScalar {
    /// Creates a new builder-style object to manufacture [`PerformanceInsightsReferenceScalar`](crate::types::PerformanceInsightsReferenceScalar).
    pub fn builder() -> crate::types::builders::PerformanceInsightsReferenceScalarBuilder {
        crate::types::builders::PerformanceInsightsReferenceScalarBuilder::default()
    }
}

/// A builder for [`PerformanceInsightsReferenceScalar`](crate::types::PerformanceInsightsReferenceScalar).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct PerformanceInsightsReferenceScalarBuilder {
    pub(crate) value: std::option::Option<f64>,
}
impl PerformanceInsightsReferenceScalarBuilder {
    /// <p>The reference value.</p>
    pub fn value(mut self, input: f64) -> Self {
        self.value = Some(input);
        self
    }
    /// <p>The reference value.</p>
    pub fn set_value(mut self, input: std::option::Option<f64>) -> Self {
        self.value = input;
        self
    }
    /// Consumes the builder and constructs a [`PerformanceInsightsReferenceScalar`](crate::types::PerformanceInsightsReferenceScalar).
    pub fn build(self) -> crate::types::PerformanceInsightsReferenceScalar {
        crate::types::PerformanceInsightsReferenceScalar { value: self.value }
    }
}
