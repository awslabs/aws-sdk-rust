// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A collection of the names of Amazon Web Services services.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ServiceCollection {
    /// <p>An array of strings that each specifies the name of an Amazon Web Services service.</p>
    #[doc(hidden)]
    pub service_names: std::option::Option<std::vec::Vec<crate::types::ServiceName>>,
}
impl ServiceCollection {
    /// <p>An array of strings that each specifies the name of an Amazon Web Services service.</p>
    pub fn service_names(&self) -> std::option::Option<&[crate::types::ServiceName]> {
        self.service_names.as_deref()
    }
}
impl ServiceCollection {
    /// Creates a new builder-style object to manufacture [`ServiceCollection`](crate::types::ServiceCollection).
    pub fn builder() -> crate::types::builders::ServiceCollectionBuilder {
        crate::types::builders::ServiceCollectionBuilder::default()
    }
}

/// A builder for [`ServiceCollection`](crate::types::ServiceCollection).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ServiceCollectionBuilder {
    pub(crate) service_names: std::option::Option<std::vec::Vec<crate::types::ServiceName>>,
}
impl ServiceCollectionBuilder {
    /// Appends an item to `service_names`.
    ///
    /// To override the contents of this collection use [`set_service_names`](Self::set_service_names).
    ///
    /// <p>An array of strings that each specifies the name of an Amazon Web Services service.</p>
    pub fn service_names(mut self, input: crate::types::ServiceName) -> Self {
        let mut v = self.service_names.unwrap_or_default();
        v.push(input);
        self.service_names = Some(v);
        self
    }
    /// <p>An array of strings that each specifies the name of an Amazon Web Services service.</p>
    pub fn set_service_names(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::ServiceName>>,
    ) -> Self {
        self.service_names = input;
        self
    }
    /// Consumes the builder and constructs a [`ServiceCollection`](crate::types::ServiceCollection).
    pub fn build(self) -> crate::types::ServiceCollection {
        crate::types::ServiceCollection {
            service_names: self.service_names,
        }
    }
}
