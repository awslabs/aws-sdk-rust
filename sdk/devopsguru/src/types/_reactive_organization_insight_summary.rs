// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about a reactive insight. This object is returned by <code>DescribeInsight</code>.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ReactiveOrganizationInsightSummary {
    /// <p>The ID of the insight summary.</p>
    #[doc(hidden)]
    pub id: std::option::Option<std::string::String>,
    /// <p>The ID of the Amazon Web Services account. </p>
    #[doc(hidden)]
    pub account_id: std::option::Option<std::string::String>,
    /// <p>The ID of the organizational unit.</p>
    #[doc(hidden)]
    pub organizational_unit_id: std::option::Option<std::string::String>,
    /// <p>The name of the insight summary.</p>
    #[doc(hidden)]
    pub name: std::option::Option<std::string::String>,
    /// <p> An array of severity values used to search for insights. For more information, see <a href="https://docs.aws.amazon.com/devops-guru/latest/userguide/working-with-insights.html#understanding-insights-severities">Understanding insight severities</a> in the <i>Amazon DevOps Guru User Guide</i>.</p>
    #[doc(hidden)]
    pub severity: std::option::Option<crate::types::InsightSeverity>,
    /// <p> An array of status values used to search for insights. </p>
    #[doc(hidden)]
    pub status: std::option::Option<crate::types::InsightStatus>,
    /// <p> A time ranged that specifies when the observed behavior in an insight started and ended. </p>
    #[doc(hidden)]
    pub insight_time_range: std::option::Option<crate::types::InsightTimeRange>,
    /// <p> A collection of Amazon Web Services resources supported by DevOps Guru. The two types of Amazon Web Services resource collections supported are Amazon Web Services CloudFormation stacks and Amazon Web Services resources that contain the same Amazon Web Services tag. DevOps Guru can be configured to analyze the Amazon Web Services resources that are defined in the stacks or that are tagged using the same tag <i>key</i>. You can specify up to 500 Amazon Web Services CloudFormation stacks. </p>
    #[doc(hidden)]
    pub resource_collection: std::option::Option<crate::types::ResourceCollection>,
    /// <p>A collection of the names of Amazon Web Services services.</p>
    #[doc(hidden)]
    pub service_collection: std::option::Option<crate::types::ServiceCollection>,
}
impl ReactiveOrganizationInsightSummary {
    /// <p>The ID of the insight summary.</p>
    pub fn id(&self) -> std::option::Option<&str> {
        self.id.as_deref()
    }
    /// <p>The ID of the Amazon Web Services account. </p>
    pub fn account_id(&self) -> std::option::Option<&str> {
        self.account_id.as_deref()
    }
    /// <p>The ID of the organizational unit.</p>
    pub fn organizational_unit_id(&self) -> std::option::Option<&str> {
        self.organizational_unit_id.as_deref()
    }
    /// <p>The name of the insight summary.</p>
    pub fn name(&self) -> std::option::Option<&str> {
        self.name.as_deref()
    }
    /// <p> An array of severity values used to search for insights. For more information, see <a href="https://docs.aws.amazon.com/devops-guru/latest/userguide/working-with-insights.html#understanding-insights-severities">Understanding insight severities</a> in the <i>Amazon DevOps Guru User Guide</i>.</p>
    pub fn severity(&self) -> std::option::Option<&crate::types::InsightSeverity> {
        self.severity.as_ref()
    }
    /// <p> An array of status values used to search for insights. </p>
    pub fn status(&self) -> std::option::Option<&crate::types::InsightStatus> {
        self.status.as_ref()
    }
    /// <p> A time ranged that specifies when the observed behavior in an insight started and ended. </p>
    pub fn insight_time_range(&self) -> std::option::Option<&crate::types::InsightTimeRange> {
        self.insight_time_range.as_ref()
    }
    /// <p> A collection of Amazon Web Services resources supported by DevOps Guru. The two types of Amazon Web Services resource collections supported are Amazon Web Services CloudFormation stacks and Amazon Web Services resources that contain the same Amazon Web Services tag. DevOps Guru can be configured to analyze the Amazon Web Services resources that are defined in the stacks or that are tagged using the same tag <i>key</i>. You can specify up to 500 Amazon Web Services CloudFormation stacks. </p>
    pub fn resource_collection(&self) -> std::option::Option<&crate::types::ResourceCollection> {
        self.resource_collection.as_ref()
    }
    /// <p>A collection of the names of Amazon Web Services services.</p>
    pub fn service_collection(&self) -> std::option::Option<&crate::types::ServiceCollection> {
        self.service_collection.as_ref()
    }
}
impl ReactiveOrganizationInsightSummary {
    /// Creates a new builder-style object to manufacture [`ReactiveOrganizationInsightSummary`](crate::types::ReactiveOrganizationInsightSummary).
    pub fn builder() -> crate::types::builders::ReactiveOrganizationInsightSummaryBuilder {
        crate::types::builders::ReactiveOrganizationInsightSummaryBuilder::default()
    }
}

/// A builder for [`ReactiveOrganizationInsightSummary`](crate::types::ReactiveOrganizationInsightSummary).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ReactiveOrganizationInsightSummaryBuilder {
    pub(crate) id: std::option::Option<std::string::String>,
    pub(crate) account_id: std::option::Option<std::string::String>,
    pub(crate) organizational_unit_id: std::option::Option<std::string::String>,
    pub(crate) name: std::option::Option<std::string::String>,
    pub(crate) severity: std::option::Option<crate::types::InsightSeverity>,
    pub(crate) status: std::option::Option<crate::types::InsightStatus>,
    pub(crate) insight_time_range: std::option::Option<crate::types::InsightTimeRange>,
    pub(crate) resource_collection: std::option::Option<crate::types::ResourceCollection>,
    pub(crate) service_collection: std::option::Option<crate::types::ServiceCollection>,
}
impl ReactiveOrganizationInsightSummaryBuilder {
    /// <p>The ID of the insight summary.</p>
    pub fn id(mut self, input: impl Into<std::string::String>) -> Self {
        self.id = Some(input.into());
        self
    }
    /// <p>The ID of the insight summary.</p>
    pub fn set_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.id = input;
        self
    }
    /// <p>The ID of the Amazon Web Services account. </p>
    pub fn account_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.account_id = Some(input.into());
        self
    }
    /// <p>The ID of the Amazon Web Services account. </p>
    pub fn set_account_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.account_id = input;
        self
    }
    /// <p>The ID of the organizational unit.</p>
    pub fn organizational_unit_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.organizational_unit_id = Some(input.into());
        self
    }
    /// <p>The ID of the organizational unit.</p>
    pub fn set_organizational_unit_id(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.organizational_unit_id = input;
        self
    }
    /// <p>The name of the insight summary.</p>
    pub fn name(mut self, input: impl Into<std::string::String>) -> Self {
        self.name = Some(input.into());
        self
    }
    /// <p>The name of the insight summary.</p>
    pub fn set_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p> An array of severity values used to search for insights. For more information, see <a href="https://docs.aws.amazon.com/devops-guru/latest/userguide/working-with-insights.html#understanding-insights-severities">Understanding insight severities</a> in the <i>Amazon DevOps Guru User Guide</i>.</p>
    pub fn severity(mut self, input: crate::types::InsightSeverity) -> Self {
        self.severity = Some(input);
        self
    }
    /// <p> An array of severity values used to search for insights. For more information, see <a href="https://docs.aws.amazon.com/devops-guru/latest/userguide/working-with-insights.html#understanding-insights-severities">Understanding insight severities</a> in the <i>Amazon DevOps Guru User Guide</i>.</p>
    pub fn set_severity(
        mut self,
        input: std::option::Option<crate::types::InsightSeverity>,
    ) -> Self {
        self.severity = input;
        self
    }
    /// <p> An array of status values used to search for insights. </p>
    pub fn status(mut self, input: crate::types::InsightStatus) -> Self {
        self.status = Some(input);
        self
    }
    /// <p> An array of status values used to search for insights. </p>
    pub fn set_status(mut self, input: std::option::Option<crate::types::InsightStatus>) -> Self {
        self.status = input;
        self
    }
    /// <p> A time ranged that specifies when the observed behavior in an insight started and ended. </p>
    pub fn insight_time_range(mut self, input: crate::types::InsightTimeRange) -> Self {
        self.insight_time_range = Some(input);
        self
    }
    /// <p> A time ranged that specifies when the observed behavior in an insight started and ended. </p>
    pub fn set_insight_time_range(
        mut self,
        input: std::option::Option<crate::types::InsightTimeRange>,
    ) -> Self {
        self.insight_time_range = input;
        self
    }
    /// <p> A collection of Amazon Web Services resources supported by DevOps Guru. The two types of Amazon Web Services resource collections supported are Amazon Web Services CloudFormation stacks and Amazon Web Services resources that contain the same Amazon Web Services tag. DevOps Guru can be configured to analyze the Amazon Web Services resources that are defined in the stacks or that are tagged using the same tag <i>key</i>. You can specify up to 500 Amazon Web Services CloudFormation stacks. </p>
    pub fn resource_collection(mut self, input: crate::types::ResourceCollection) -> Self {
        self.resource_collection = Some(input);
        self
    }
    /// <p> A collection of Amazon Web Services resources supported by DevOps Guru. The two types of Amazon Web Services resource collections supported are Amazon Web Services CloudFormation stacks and Amazon Web Services resources that contain the same Amazon Web Services tag. DevOps Guru can be configured to analyze the Amazon Web Services resources that are defined in the stacks or that are tagged using the same tag <i>key</i>. You can specify up to 500 Amazon Web Services CloudFormation stacks. </p>
    pub fn set_resource_collection(
        mut self,
        input: std::option::Option<crate::types::ResourceCollection>,
    ) -> Self {
        self.resource_collection = input;
        self
    }
    /// <p>A collection of the names of Amazon Web Services services.</p>
    pub fn service_collection(mut self, input: crate::types::ServiceCollection) -> Self {
        self.service_collection = Some(input);
        self
    }
    /// <p>A collection of the names of Amazon Web Services services.</p>
    pub fn set_service_collection(
        mut self,
        input: std::option::Option<crate::types::ServiceCollection>,
    ) -> Self {
        self.service_collection = input;
        self
    }
    /// Consumes the builder and constructs a [`ReactiveOrganizationInsightSummary`](crate::types::ReactiveOrganizationInsightSummary).
    pub fn build(self) -> crate::types::ReactiveOrganizationInsightSummary {
        crate::types::ReactiveOrganizationInsightSummary {
            id: self.id,
            account_id: self.account_id,
            organizational_unit_id: self.organizational_unit_id,
            name: self.name,
            severity: self.severity,
            status: self.status,
            insight_time_range: self.insight_time_range,
            resource_collection: self.resource_collection,
            service_collection: self.service_collection,
        }
    }
}
