// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The Amazon Web Services resources in which DevOps Guru detected unusual behavior that resulted in the generation of an anomaly. When DevOps Guru detects multiple related anomalies, it creates and insight with details about the anomalous behavior and suggestions about how to correct the problem.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AnomalyResource {
    /// <p>The name of the Amazon Web Services resource.</p>
    #[doc(hidden)]
    pub name: std::option::Option<std::string::String>,
    /// <p>The type of the Amazon Web Services resource.</p>
    #[doc(hidden)]
    pub r#type: std::option::Option<std::string::String>,
}
impl AnomalyResource {
    /// <p>The name of the Amazon Web Services resource.</p>
    pub fn name(&self) -> std::option::Option<&str> {
        self.name.as_deref()
    }
    /// <p>The type of the Amazon Web Services resource.</p>
    pub fn r#type(&self) -> std::option::Option<&str> {
        self.r#type.as_deref()
    }
}
impl AnomalyResource {
    /// Creates a new builder-style object to manufacture [`AnomalyResource`](crate::types::AnomalyResource).
    pub fn builder() -> crate::types::builders::AnomalyResourceBuilder {
        crate::types::builders::AnomalyResourceBuilder::default()
    }
}

/// A builder for [`AnomalyResource`](crate::types::AnomalyResource).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AnomalyResourceBuilder {
    pub(crate) name: std::option::Option<std::string::String>,
    pub(crate) r#type: std::option::Option<std::string::String>,
}
impl AnomalyResourceBuilder {
    /// <p>The name of the Amazon Web Services resource.</p>
    pub fn name(mut self, input: impl Into<std::string::String>) -> Self {
        self.name = Some(input.into());
        self
    }
    /// <p>The name of the Amazon Web Services resource.</p>
    pub fn set_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>The type of the Amazon Web Services resource.</p>
    pub fn r#type(mut self, input: impl Into<std::string::String>) -> Self {
        self.r#type = Some(input.into());
        self
    }
    /// <p>The type of the Amazon Web Services resource.</p>
    pub fn set_type(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.r#type = input;
        self
    }
    /// Consumes the builder and constructs a [`AnomalyResource`](crate::types::AnomalyResource).
    pub fn build(self) -> crate::types::AnomalyResource {
        crate::types::AnomalyResource {
            name: self.name,
            r#type: self.r#type,
        }
    }
}
