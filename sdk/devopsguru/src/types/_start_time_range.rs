// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p> A time range used to specify when the behavior of an insight or anomaly started. </p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct StartTimeRange {
    /// <p> The start time of the time range. </p>
    #[doc(hidden)]
    pub from_time: std::option::Option<aws_smithy_types::DateTime>,
    /// <p> The end time of the time range. </p>
    #[doc(hidden)]
    pub to_time: std::option::Option<aws_smithy_types::DateTime>,
}
impl StartTimeRange {
    /// <p> The start time of the time range. </p>
    pub fn from_time(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.from_time.as_ref()
    }
    /// <p> The end time of the time range. </p>
    pub fn to_time(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.to_time.as_ref()
    }
}
impl StartTimeRange {
    /// Creates a new builder-style object to manufacture [`StartTimeRange`](crate::types::StartTimeRange).
    pub fn builder() -> crate::types::builders::StartTimeRangeBuilder {
        crate::types::builders::StartTimeRangeBuilder::default()
    }
}

/// A builder for [`StartTimeRange`](crate::types::StartTimeRange).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct StartTimeRangeBuilder {
    pub(crate) from_time: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) to_time: std::option::Option<aws_smithy_types::DateTime>,
}
impl StartTimeRangeBuilder {
    /// <p> The start time of the time range. </p>
    pub fn from_time(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.from_time = Some(input);
        self
    }
    /// <p> The start time of the time range. </p>
    pub fn set_from_time(mut self, input: std::option::Option<aws_smithy_types::DateTime>) -> Self {
        self.from_time = input;
        self
    }
    /// <p> The end time of the time range. </p>
    pub fn to_time(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.to_time = Some(input);
        self
    }
    /// <p> The end time of the time range. </p>
    pub fn set_to_time(mut self, input: std::option::Option<aws_smithy_types::DateTime>) -> Self {
        self.to_time = input;
        self
    }
    /// Consumes the builder and constructs a [`StartTimeRange`](crate::types::StartTimeRange).
    pub fn build(self) -> crate::types::StartTimeRange {
        crate::types::StartTimeRange {
            from_time: self.from_time,
            to_time: self.to_time,
        }
    }
}
