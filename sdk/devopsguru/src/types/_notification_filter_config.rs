// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p> The filter configurations for the Amazon SNS notification topic you use with DevOps Guru. You can choose to specify which events or message types to receive notifications for. You can also choose to specify which severity levels to receive notifications for. </p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct NotificationFilterConfig {
    /// <p> The severity levels that you want to receive notifications for. For example, you can choose to receive notifications only for insights with <code>HIGH</code> and <code>MEDIUM</code> severity levels. For more information, see <a href="https://docs.aws.amazon.com/devops-guru/latest/userguide/working-with-insights.html#understanding-insights-severities">Understanding insight severities</a>. </p>
    #[doc(hidden)]
    pub severities: std::option::Option<std::vec::Vec<crate::types::InsightSeverity>>,
    /// <p> The events that you want to receive notifications for. For example, you can choose to receive notifications only when the severity level is upgraded or a new insight is created. </p>
    #[doc(hidden)]
    pub message_types: std::option::Option<std::vec::Vec<crate::types::NotificationMessageType>>,
}
impl NotificationFilterConfig {
    /// <p> The severity levels that you want to receive notifications for. For example, you can choose to receive notifications only for insights with <code>HIGH</code> and <code>MEDIUM</code> severity levels. For more information, see <a href="https://docs.aws.amazon.com/devops-guru/latest/userguide/working-with-insights.html#understanding-insights-severities">Understanding insight severities</a>. </p>
    pub fn severities(&self) -> std::option::Option<&[crate::types::InsightSeverity]> {
        self.severities.as_deref()
    }
    /// <p> The events that you want to receive notifications for. For example, you can choose to receive notifications only when the severity level is upgraded or a new insight is created. </p>
    pub fn message_types(&self) -> std::option::Option<&[crate::types::NotificationMessageType]> {
        self.message_types.as_deref()
    }
}
impl NotificationFilterConfig {
    /// Creates a new builder-style object to manufacture [`NotificationFilterConfig`](crate::types::NotificationFilterConfig).
    pub fn builder() -> crate::types::builders::NotificationFilterConfigBuilder {
        crate::types::builders::NotificationFilterConfigBuilder::default()
    }
}

/// A builder for [`NotificationFilterConfig`](crate::types::NotificationFilterConfig).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct NotificationFilterConfigBuilder {
    pub(crate) severities: std::option::Option<std::vec::Vec<crate::types::InsightSeverity>>,
    pub(crate) message_types:
        std::option::Option<std::vec::Vec<crate::types::NotificationMessageType>>,
}
impl NotificationFilterConfigBuilder {
    /// Appends an item to `severities`.
    ///
    /// To override the contents of this collection use [`set_severities`](Self::set_severities).
    ///
    /// <p> The severity levels that you want to receive notifications for. For example, you can choose to receive notifications only for insights with <code>HIGH</code> and <code>MEDIUM</code> severity levels. For more information, see <a href="https://docs.aws.amazon.com/devops-guru/latest/userguide/working-with-insights.html#understanding-insights-severities">Understanding insight severities</a>. </p>
    pub fn severities(mut self, input: crate::types::InsightSeverity) -> Self {
        let mut v = self.severities.unwrap_or_default();
        v.push(input);
        self.severities = Some(v);
        self
    }
    /// <p> The severity levels that you want to receive notifications for. For example, you can choose to receive notifications only for insights with <code>HIGH</code> and <code>MEDIUM</code> severity levels. For more information, see <a href="https://docs.aws.amazon.com/devops-guru/latest/userguide/working-with-insights.html#understanding-insights-severities">Understanding insight severities</a>. </p>
    pub fn set_severities(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::InsightSeverity>>,
    ) -> Self {
        self.severities = input;
        self
    }
    /// Appends an item to `message_types`.
    ///
    /// To override the contents of this collection use [`set_message_types`](Self::set_message_types).
    ///
    /// <p> The events that you want to receive notifications for. For example, you can choose to receive notifications only when the severity level is upgraded or a new insight is created. </p>
    pub fn message_types(mut self, input: crate::types::NotificationMessageType) -> Self {
        let mut v = self.message_types.unwrap_or_default();
        v.push(input);
        self.message_types = Some(v);
        self
    }
    /// <p> The events that you want to receive notifications for. For example, you can choose to receive notifications only when the severity level is upgraded or a new insight is created. </p>
    pub fn set_message_types(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::NotificationMessageType>>,
    ) -> Self {
        self.message_types = input;
        self
    }
    /// Consumes the builder and constructs a [`NotificationFilterConfig`](crate::types::NotificationFilterConfig).
    pub fn build(self) -> crate::types::NotificationFilterConfig {
        crate::types::NotificationFilterConfig {
            severities: self.severities,
            message_types: self.message_types,
        }
    }
}
