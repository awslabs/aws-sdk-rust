// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p> Information about Amazon Web Services CloudFormation stacks. You can use up to 500 stacks to specify which Amazon Web Services resources in your account to analyze. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacks.html">Stacks</a> in the <i>Amazon Web Services CloudFormation User Guide</i>. </p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct CloudFormationCollection {
    /// <p> An array of CloudFormation stack names. </p>
    pub stack_names: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
}
impl CloudFormationCollection {
    /// <p> An array of CloudFormation stack names. </p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.stack_names.is_none()`.
    pub fn stack_names(&self) -> &[::std::string::String] {
        self.stack_names.as_deref().unwrap_or_default()
    }
}
impl CloudFormationCollection {
    /// Creates a new builder-style object to manufacture [`CloudFormationCollection`](crate::types::CloudFormationCollection).
    pub fn builder() -> crate::types::builders::CloudFormationCollectionBuilder {
        crate::types::builders::CloudFormationCollectionBuilder::default()
    }
}

/// A builder for [`CloudFormationCollection`](crate::types::CloudFormationCollection).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct CloudFormationCollectionBuilder {
    pub(crate) stack_names: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
}
impl CloudFormationCollectionBuilder {
    /// Appends an item to `stack_names`.
    ///
    /// To override the contents of this collection use [`set_stack_names`](Self::set_stack_names).
    ///
    /// <p> An array of CloudFormation stack names. </p>
    pub fn stack_names(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        let mut v = self.stack_names.unwrap_or_default();
        v.push(input.into());
        self.stack_names = ::std::option::Option::Some(v);
        self
    }
    /// <p> An array of CloudFormation stack names. </p>
    pub fn set_stack_names(mut self, input: ::std::option::Option<::std::vec::Vec<::std::string::String>>) -> Self {
        self.stack_names = input;
        self
    }
    /// <p> An array of CloudFormation stack names. </p>
    pub fn get_stack_names(&self) -> &::std::option::Option<::std::vec::Vec<::std::string::String>> {
        &self.stack_names
    }
    /// Consumes the builder and constructs a [`CloudFormationCollection`](crate::types::CloudFormationCollection).
    pub fn build(self) -> crate::types::CloudFormationCollection {
        crate::types::CloudFormationCollection {
            stack_names: self.stack_names,
        }
    }
}
