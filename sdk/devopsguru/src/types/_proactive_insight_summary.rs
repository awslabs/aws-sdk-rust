// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Details about a proactive insight. This object is returned by <code>DescribeInsight.</code> </p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ProactiveInsightSummary {
    /// <p>The ID of the proactive insight. </p>
    pub id: ::std::option::Option<::std::string::String>,
    /// <p>The name of the proactive insight. </p>
    pub name: ::std::option::Option<::std::string::String>,
    /// <p>The severity of the insight. For more information, see <a href="https://docs.aws.amazon.com/devops-guru/latest/userguide/working-with-insights.html#understanding-insights-severities">Understanding insight severities</a> in the <i>Amazon DevOps Guru User Guide</i>.</p>
    pub severity: ::std::option::Option<crate::types::InsightSeverity>,
    /// <p>The status of the proactive insight. </p>
    pub status: ::std::option::Option<crate::types::InsightStatus>,
    /// <p> A time ranged that specifies when the observed behavior in an insight started and ended. </p>
    pub insight_time_range: ::std::option::Option<crate::types::InsightTimeRange>,
    /// <p> The time range during which anomalous behavior in a proactive anomaly or an insight is expected to occur. </p>
    pub prediction_time_range: ::std::option::Option<crate::types::PredictionTimeRange>,
    /// <p> A collection of Amazon Web Services resources supported by DevOps Guru. The two types of Amazon Web Services resource collections supported are Amazon Web Services CloudFormation stacks and Amazon Web Services resources that contain the same Amazon Web Services tag. DevOps Guru can be configured to analyze the Amazon Web Services resources that are defined in the stacks or that are tagged using the same tag <i>key</i>. You can specify up to 500 Amazon Web Services CloudFormation stacks. </p>
    pub resource_collection: ::std::option::Option<crate::types::ResourceCollection>,
    /// <p>A collection of the names of Amazon Web Services services.</p>
    pub service_collection: ::std::option::Option<crate::types::ServiceCollection>,
    /// <p>The Amazon Resource Names (ARNs) of the Amazon Web Services resources that generated this insight.</p>
    pub associated_resource_arns: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
}
impl ProactiveInsightSummary {
    /// <p>The ID of the proactive insight. </p>
    pub fn id(&self) -> ::std::option::Option<&str> {
        self.id.as_deref()
    }
    /// <p>The name of the proactive insight. </p>
    pub fn name(&self) -> ::std::option::Option<&str> {
        self.name.as_deref()
    }
    /// <p>The severity of the insight. For more information, see <a href="https://docs.aws.amazon.com/devops-guru/latest/userguide/working-with-insights.html#understanding-insights-severities">Understanding insight severities</a> in the <i>Amazon DevOps Guru User Guide</i>.</p>
    pub fn severity(&self) -> ::std::option::Option<&crate::types::InsightSeverity> {
        self.severity.as_ref()
    }
    /// <p>The status of the proactive insight. </p>
    pub fn status(&self) -> ::std::option::Option<&crate::types::InsightStatus> {
        self.status.as_ref()
    }
    /// <p> A time ranged that specifies when the observed behavior in an insight started and ended. </p>
    pub fn insight_time_range(&self) -> ::std::option::Option<&crate::types::InsightTimeRange> {
        self.insight_time_range.as_ref()
    }
    /// <p> The time range during which anomalous behavior in a proactive anomaly or an insight is expected to occur. </p>
    pub fn prediction_time_range(&self) -> ::std::option::Option<&crate::types::PredictionTimeRange> {
        self.prediction_time_range.as_ref()
    }
    /// <p> A collection of Amazon Web Services resources supported by DevOps Guru. The two types of Amazon Web Services resource collections supported are Amazon Web Services CloudFormation stacks and Amazon Web Services resources that contain the same Amazon Web Services tag. DevOps Guru can be configured to analyze the Amazon Web Services resources that are defined in the stacks or that are tagged using the same tag <i>key</i>. You can specify up to 500 Amazon Web Services CloudFormation stacks. </p>
    pub fn resource_collection(&self) -> ::std::option::Option<&crate::types::ResourceCollection> {
        self.resource_collection.as_ref()
    }
    /// <p>A collection of the names of Amazon Web Services services.</p>
    pub fn service_collection(&self) -> ::std::option::Option<&crate::types::ServiceCollection> {
        self.service_collection.as_ref()
    }
    /// <p>The Amazon Resource Names (ARNs) of the Amazon Web Services resources that generated this insight.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.associated_resource_arns.is_none()`.
    pub fn associated_resource_arns(&self) -> &[::std::string::String] {
        self.associated_resource_arns.as_deref().unwrap_or_default()
    }
}
impl ProactiveInsightSummary {
    /// Creates a new builder-style object to manufacture [`ProactiveInsightSummary`](crate::types::ProactiveInsightSummary).
    pub fn builder() -> crate::types::builders::ProactiveInsightSummaryBuilder {
        crate::types::builders::ProactiveInsightSummaryBuilder::default()
    }
}

/// A builder for [`ProactiveInsightSummary`](crate::types::ProactiveInsightSummary).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ProactiveInsightSummaryBuilder {
    pub(crate) id: ::std::option::Option<::std::string::String>,
    pub(crate) name: ::std::option::Option<::std::string::String>,
    pub(crate) severity: ::std::option::Option<crate::types::InsightSeverity>,
    pub(crate) status: ::std::option::Option<crate::types::InsightStatus>,
    pub(crate) insight_time_range: ::std::option::Option<crate::types::InsightTimeRange>,
    pub(crate) prediction_time_range: ::std::option::Option<crate::types::PredictionTimeRange>,
    pub(crate) resource_collection: ::std::option::Option<crate::types::ResourceCollection>,
    pub(crate) service_collection: ::std::option::Option<crate::types::ServiceCollection>,
    pub(crate) associated_resource_arns: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
}
impl ProactiveInsightSummaryBuilder {
    /// <p>The ID of the proactive insight. </p>
    pub fn id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of the proactive insight. </p>
    pub fn set_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.id = input;
        self
    }
    /// <p>The ID of the proactive insight. </p>
    pub fn get_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.id
    }
    /// <p>The name of the proactive insight. </p>
    pub fn name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the proactive insight. </p>
    pub fn set_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>The name of the proactive insight. </p>
    pub fn get_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.name
    }
    /// <p>The severity of the insight. For more information, see <a href="https://docs.aws.amazon.com/devops-guru/latest/userguide/working-with-insights.html#understanding-insights-severities">Understanding insight severities</a> in the <i>Amazon DevOps Guru User Guide</i>.</p>
    pub fn severity(mut self, input: crate::types::InsightSeverity) -> Self {
        self.severity = ::std::option::Option::Some(input);
        self
    }
    /// <p>The severity of the insight. For more information, see <a href="https://docs.aws.amazon.com/devops-guru/latest/userguide/working-with-insights.html#understanding-insights-severities">Understanding insight severities</a> in the <i>Amazon DevOps Guru User Guide</i>.</p>
    pub fn set_severity(mut self, input: ::std::option::Option<crate::types::InsightSeverity>) -> Self {
        self.severity = input;
        self
    }
    /// <p>The severity of the insight. For more information, see <a href="https://docs.aws.amazon.com/devops-guru/latest/userguide/working-with-insights.html#understanding-insights-severities">Understanding insight severities</a> in the <i>Amazon DevOps Guru User Guide</i>.</p>
    pub fn get_severity(&self) -> &::std::option::Option<crate::types::InsightSeverity> {
        &self.severity
    }
    /// <p>The status of the proactive insight. </p>
    pub fn status(mut self, input: crate::types::InsightStatus) -> Self {
        self.status = ::std::option::Option::Some(input);
        self
    }
    /// <p>The status of the proactive insight. </p>
    pub fn set_status(mut self, input: ::std::option::Option<crate::types::InsightStatus>) -> Self {
        self.status = input;
        self
    }
    /// <p>The status of the proactive insight. </p>
    pub fn get_status(&self) -> &::std::option::Option<crate::types::InsightStatus> {
        &self.status
    }
    /// <p> A time ranged that specifies when the observed behavior in an insight started and ended. </p>
    pub fn insight_time_range(mut self, input: crate::types::InsightTimeRange) -> Self {
        self.insight_time_range = ::std::option::Option::Some(input);
        self
    }
    /// <p> A time ranged that specifies when the observed behavior in an insight started and ended. </p>
    pub fn set_insight_time_range(mut self, input: ::std::option::Option<crate::types::InsightTimeRange>) -> Self {
        self.insight_time_range = input;
        self
    }
    /// <p> A time ranged that specifies when the observed behavior in an insight started and ended. </p>
    pub fn get_insight_time_range(&self) -> &::std::option::Option<crate::types::InsightTimeRange> {
        &self.insight_time_range
    }
    /// <p> The time range during which anomalous behavior in a proactive anomaly or an insight is expected to occur. </p>
    pub fn prediction_time_range(mut self, input: crate::types::PredictionTimeRange) -> Self {
        self.prediction_time_range = ::std::option::Option::Some(input);
        self
    }
    /// <p> The time range during which anomalous behavior in a proactive anomaly or an insight is expected to occur. </p>
    pub fn set_prediction_time_range(mut self, input: ::std::option::Option<crate::types::PredictionTimeRange>) -> Self {
        self.prediction_time_range = input;
        self
    }
    /// <p> The time range during which anomalous behavior in a proactive anomaly or an insight is expected to occur. </p>
    pub fn get_prediction_time_range(&self) -> &::std::option::Option<crate::types::PredictionTimeRange> {
        &self.prediction_time_range
    }
    /// <p> A collection of Amazon Web Services resources supported by DevOps Guru. The two types of Amazon Web Services resource collections supported are Amazon Web Services CloudFormation stacks and Amazon Web Services resources that contain the same Amazon Web Services tag. DevOps Guru can be configured to analyze the Amazon Web Services resources that are defined in the stacks or that are tagged using the same tag <i>key</i>. You can specify up to 500 Amazon Web Services CloudFormation stacks. </p>
    pub fn resource_collection(mut self, input: crate::types::ResourceCollection) -> Self {
        self.resource_collection = ::std::option::Option::Some(input);
        self
    }
    /// <p> A collection of Amazon Web Services resources supported by DevOps Guru. The two types of Amazon Web Services resource collections supported are Amazon Web Services CloudFormation stacks and Amazon Web Services resources that contain the same Amazon Web Services tag. DevOps Guru can be configured to analyze the Amazon Web Services resources that are defined in the stacks or that are tagged using the same tag <i>key</i>. You can specify up to 500 Amazon Web Services CloudFormation stacks. </p>
    pub fn set_resource_collection(mut self, input: ::std::option::Option<crate::types::ResourceCollection>) -> Self {
        self.resource_collection = input;
        self
    }
    /// <p> A collection of Amazon Web Services resources supported by DevOps Guru. The two types of Amazon Web Services resource collections supported are Amazon Web Services CloudFormation stacks and Amazon Web Services resources that contain the same Amazon Web Services tag. DevOps Guru can be configured to analyze the Amazon Web Services resources that are defined in the stacks or that are tagged using the same tag <i>key</i>. You can specify up to 500 Amazon Web Services CloudFormation stacks. </p>
    pub fn get_resource_collection(&self) -> &::std::option::Option<crate::types::ResourceCollection> {
        &self.resource_collection
    }
    /// <p>A collection of the names of Amazon Web Services services.</p>
    pub fn service_collection(mut self, input: crate::types::ServiceCollection) -> Self {
        self.service_collection = ::std::option::Option::Some(input);
        self
    }
    /// <p>A collection of the names of Amazon Web Services services.</p>
    pub fn set_service_collection(mut self, input: ::std::option::Option<crate::types::ServiceCollection>) -> Self {
        self.service_collection = input;
        self
    }
    /// <p>A collection of the names of Amazon Web Services services.</p>
    pub fn get_service_collection(&self) -> &::std::option::Option<crate::types::ServiceCollection> {
        &self.service_collection
    }
    /// Appends an item to `associated_resource_arns`.
    ///
    /// To override the contents of this collection use [`set_associated_resource_arns`](Self::set_associated_resource_arns).
    ///
    /// <p>The Amazon Resource Names (ARNs) of the Amazon Web Services resources that generated this insight.</p>
    pub fn associated_resource_arns(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        let mut v = self.associated_resource_arns.unwrap_or_default();
        v.push(input.into());
        self.associated_resource_arns = ::std::option::Option::Some(v);
        self
    }
    /// <p>The Amazon Resource Names (ARNs) of the Amazon Web Services resources that generated this insight.</p>
    pub fn set_associated_resource_arns(mut self, input: ::std::option::Option<::std::vec::Vec<::std::string::String>>) -> Self {
        self.associated_resource_arns = input;
        self
    }
    /// <p>The Amazon Resource Names (ARNs) of the Amazon Web Services resources that generated this insight.</p>
    pub fn get_associated_resource_arns(&self) -> &::std::option::Option<::std::vec::Vec<::std::string::String>> {
        &self.associated_resource_arns
    }
    /// Consumes the builder and constructs a [`ProactiveInsightSummary`](crate::types::ProactiveInsightSummary).
    pub fn build(self) -> crate::types::ProactiveInsightSummary {
        crate::types::ProactiveInsightSummary {
            id: self.id,
            name: self.name,
            severity: self.severity,
            status: self.status,
            insight_time_range: self.insight_time_range,
            prediction_time_range: self.prediction_time_range,
            resource_collection: self.resource_collection,
            service_collection: self.service_collection,
            associated_resource_arns: self.associated_resource_arns,
        }
    }
}
