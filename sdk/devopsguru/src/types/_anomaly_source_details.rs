// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p> Details about the source of the anomalous operational data that triggered the anomaly.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AnomalySourceDetails {
    /// <p>An array of <code>CloudWatchMetricsDetail</code> objects that contain information about analyzed CloudWatch metrics that show anomalous behavior. </p>
    pub cloud_watch_metrics: ::std::option::Option<::std::vec::Vec<crate::types::CloudWatchMetricsDetail>>,
    /// <p>An array of <code>PerformanceInsightsMetricsDetail</code> objects that contain information about analyzed Performance Insights metrics that show anomalous behavior.</p>
    pub performance_insights_metrics: ::std::option::Option<::std::vec::Vec<crate::types::PerformanceInsightsMetricsDetail>>,
}
impl AnomalySourceDetails {
    /// <p>An array of <code>CloudWatchMetricsDetail</code> objects that contain information about analyzed CloudWatch metrics that show anomalous behavior. </p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.cloud_watch_metrics.is_none()`.
    pub fn cloud_watch_metrics(&self) -> &[crate::types::CloudWatchMetricsDetail] {
        self.cloud_watch_metrics.as_deref().unwrap_or_default()
    }
    /// <p>An array of <code>PerformanceInsightsMetricsDetail</code> objects that contain information about analyzed Performance Insights metrics that show anomalous behavior.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.performance_insights_metrics.is_none()`.
    pub fn performance_insights_metrics(&self) -> &[crate::types::PerformanceInsightsMetricsDetail] {
        self.performance_insights_metrics.as_deref().unwrap_or_default()
    }
}
impl AnomalySourceDetails {
    /// Creates a new builder-style object to manufacture [`AnomalySourceDetails`](crate::types::AnomalySourceDetails).
    pub fn builder() -> crate::types::builders::AnomalySourceDetailsBuilder {
        crate::types::builders::AnomalySourceDetailsBuilder::default()
    }
}

/// A builder for [`AnomalySourceDetails`](crate::types::AnomalySourceDetails).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct AnomalySourceDetailsBuilder {
    pub(crate) cloud_watch_metrics: ::std::option::Option<::std::vec::Vec<crate::types::CloudWatchMetricsDetail>>,
    pub(crate) performance_insights_metrics: ::std::option::Option<::std::vec::Vec<crate::types::PerformanceInsightsMetricsDetail>>,
}
impl AnomalySourceDetailsBuilder {
    /// Appends an item to `cloud_watch_metrics`.
    ///
    /// To override the contents of this collection use [`set_cloud_watch_metrics`](Self::set_cloud_watch_metrics).
    ///
    /// <p>An array of <code>CloudWatchMetricsDetail</code> objects that contain information about analyzed CloudWatch metrics that show anomalous behavior. </p>
    pub fn cloud_watch_metrics(mut self, input: crate::types::CloudWatchMetricsDetail) -> Self {
        let mut v = self.cloud_watch_metrics.unwrap_or_default();
        v.push(input);
        self.cloud_watch_metrics = ::std::option::Option::Some(v);
        self
    }
    /// <p>An array of <code>CloudWatchMetricsDetail</code> objects that contain information about analyzed CloudWatch metrics that show anomalous behavior. </p>
    pub fn set_cloud_watch_metrics(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::CloudWatchMetricsDetail>>) -> Self {
        self.cloud_watch_metrics = input;
        self
    }
    /// <p>An array of <code>CloudWatchMetricsDetail</code> objects that contain information about analyzed CloudWatch metrics that show anomalous behavior. </p>
    pub fn get_cloud_watch_metrics(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::CloudWatchMetricsDetail>> {
        &self.cloud_watch_metrics
    }
    /// Appends an item to `performance_insights_metrics`.
    ///
    /// To override the contents of this collection use [`set_performance_insights_metrics`](Self::set_performance_insights_metrics).
    ///
    /// <p>An array of <code>PerformanceInsightsMetricsDetail</code> objects that contain information about analyzed Performance Insights metrics that show anomalous behavior.</p>
    pub fn performance_insights_metrics(mut self, input: crate::types::PerformanceInsightsMetricsDetail) -> Self {
        let mut v = self.performance_insights_metrics.unwrap_or_default();
        v.push(input);
        self.performance_insights_metrics = ::std::option::Option::Some(v);
        self
    }
    /// <p>An array of <code>PerformanceInsightsMetricsDetail</code> objects that contain information about analyzed Performance Insights metrics that show anomalous behavior.</p>
    pub fn set_performance_insights_metrics(
        mut self,
        input: ::std::option::Option<::std::vec::Vec<crate::types::PerformanceInsightsMetricsDetail>>,
    ) -> Self {
        self.performance_insights_metrics = input;
        self
    }
    /// <p>An array of <code>PerformanceInsightsMetricsDetail</code> objects that contain information about analyzed Performance Insights metrics that show anomalous behavior.</p>
    pub fn get_performance_insights_metrics(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::PerformanceInsightsMetricsDetail>> {
        &self.performance_insights_metrics
    }
    /// Consumes the builder and constructs a [`AnomalySourceDetails`](crate::types::AnomalySourceDetails).
    pub fn build(self) -> crate::types::AnomalySourceDetails {
        crate::types::AnomalySourceDetails {
            cloud_watch_metrics: self.cloud_watch_metrics,
            performance_insights_metrics: self.performance_insights_metrics,
        }
    }
}
