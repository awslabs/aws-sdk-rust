// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A statistic in a Performance Insights collection.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct PerformanceInsightsStat {
    /// <p>The statistic type.</p>
    #[doc(hidden)]
    pub r#type: std::option::Option<std::string::String>,
    /// <p>The value of the statistic.</p>
    #[doc(hidden)]
    pub value: std::option::Option<f64>,
}
impl PerformanceInsightsStat {
    /// <p>The statistic type.</p>
    pub fn r#type(&self) -> std::option::Option<&str> {
        self.r#type.as_deref()
    }
    /// <p>The value of the statistic.</p>
    pub fn value(&self) -> std::option::Option<f64> {
        self.value
    }
}
impl PerformanceInsightsStat {
    /// Creates a new builder-style object to manufacture [`PerformanceInsightsStat`](crate::types::PerformanceInsightsStat).
    pub fn builder() -> crate::types::builders::PerformanceInsightsStatBuilder {
        crate::types::builders::PerformanceInsightsStatBuilder::default()
    }
}

/// A builder for [`PerformanceInsightsStat`](crate::types::PerformanceInsightsStat).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct PerformanceInsightsStatBuilder {
    pub(crate) r#type: std::option::Option<std::string::String>,
    pub(crate) value: std::option::Option<f64>,
}
impl PerformanceInsightsStatBuilder {
    /// <p>The statistic type.</p>
    pub fn r#type(mut self, input: impl Into<std::string::String>) -> Self {
        self.r#type = Some(input.into());
        self
    }
    /// <p>The statistic type.</p>
    pub fn set_type(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.r#type = input;
        self
    }
    /// <p>The value of the statistic.</p>
    pub fn value(mut self, input: f64) -> Self {
        self.value = Some(input);
        self
    }
    /// <p>The value of the statistic.</p>
    pub fn set_value(mut self, input: std::option::Option<f64>) -> Self {
        self.value = input;
        self
    }
    /// Consumes the builder and constructs a [`PerformanceInsightsStat`](crate::types::PerformanceInsightsStat).
    pub fn build(self) -> crate::types::PerformanceInsightsStat {
        crate::types::PerformanceInsightsStat {
            r#type: self.r#type,
            value: self.value,
        }
    }
}
