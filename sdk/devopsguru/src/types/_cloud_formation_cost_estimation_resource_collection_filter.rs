// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about an Amazon Web Services CloudFormation stack used to create a monthly cost estimate for DevOps Guru to analyze Amazon Web Services resources. The maximum number of stacks you can specify for a cost estimate is one. The estimate created is for the cost to analyze the Amazon Web Services resources defined by the stack. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacks.html">Stacks</a> in the <i>Amazon Web Services CloudFormation User Guide</i>.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct CloudFormationCostEstimationResourceCollectionFilter {
    /// <p>An array of CloudFormation stack names. Its size is fixed at 1 item.</p>
    #[doc(hidden)]
    pub stack_names: std::option::Option<std::vec::Vec<std::string::String>>,
}
impl CloudFormationCostEstimationResourceCollectionFilter {
    /// <p>An array of CloudFormation stack names. Its size is fixed at 1 item.</p>
    pub fn stack_names(&self) -> std::option::Option<&[std::string::String]> {
        self.stack_names.as_deref()
    }
}
impl CloudFormationCostEstimationResourceCollectionFilter {
    /// Creates a new builder-style object to manufacture [`CloudFormationCostEstimationResourceCollectionFilter`](crate::types::CloudFormationCostEstimationResourceCollectionFilter).
    pub fn builder(
    ) -> crate::types::builders::CloudFormationCostEstimationResourceCollectionFilterBuilder {
        crate::types::builders::CloudFormationCostEstimationResourceCollectionFilterBuilder::default(
        )
    }
}

/// A builder for [`CloudFormationCostEstimationResourceCollectionFilter`](crate::types::CloudFormationCostEstimationResourceCollectionFilter).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct CloudFormationCostEstimationResourceCollectionFilterBuilder {
    pub(crate) stack_names: std::option::Option<std::vec::Vec<std::string::String>>,
}
impl CloudFormationCostEstimationResourceCollectionFilterBuilder {
    /// Appends an item to `stack_names`.
    ///
    /// To override the contents of this collection use [`set_stack_names`](Self::set_stack_names).
    ///
    /// <p>An array of CloudFormation stack names. Its size is fixed at 1 item.</p>
    pub fn stack_names(mut self, input: impl Into<std::string::String>) -> Self {
        let mut v = self.stack_names.unwrap_or_default();
        v.push(input.into());
        self.stack_names = Some(v);
        self
    }
    /// <p>An array of CloudFormation stack names. Its size is fixed at 1 item.</p>
    pub fn set_stack_names(
        mut self,
        input: std::option::Option<std::vec::Vec<std::string::String>>,
    ) -> Self {
        self.stack_names = input;
        self
    }
    /// Consumes the builder and constructs a [`CloudFormationCostEstimationResourceCollectionFilter`](crate::types::CloudFormationCostEstimationResourceCollectionFilter).
    pub fn build(self) -> crate::types::CloudFormationCostEstimationResourceCollectionFilter {
        crate::types::CloudFormationCostEstimationResourceCollectionFilter {
            stack_names: self.stack_names,
        }
    }
}
