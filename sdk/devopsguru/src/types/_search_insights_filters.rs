// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p> Specifies one or more severity values and one or more status values that are used to search for insights. </p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct SearchInsightsFilters {
    /// <p> An array of severity values used to search for insights. </p>
    #[doc(hidden)]
    pub severities: std::option::Option<std::vec::Vec<crate::types::InsightSeverity>>,
    /// <p> An array of status values used to search for insights. </p>
    #[doc(hidden)]
    pub statuses: std::option::Option<std::vec::Vec<crate::types::InsightStatus>>,
    /// <p> A collection of Amazon Web Services resources supported by DevOps Guru. The two types of Amazon Web Services resource collections supported are Amazon Web Services CloudFormation stacks and Amazon Web Services resources that contain the same Amazon Web Services tag. DevOps Guru can be configured to analyze the Amazon Web Services resources that are defined in the stacks or that are tagged using the same tag <i>key</i>. You can specify up to 500 Amazon Web Services CloudFormation stacks. </p>
    #[doc(hidden)]
    pub resource_collection: std::option::Option<crate::types::ResourceCollection>,
    /// <p>A collection of the names of Amazon Web Services services.</p>
    #[doc(hidden)]
    pub service_collection: std::option::Option<crate::types::ServiceCollection>,
}
impl SearchInsightsFilters {
    /// <p> An array of severity values used to search for insights. </p>
    pub fn severities(&self) -> std::option::Option<&[crate::types::InsightSeverity]> {
        self.severities.as_deref()
    }
    /// <p> An array of status values used to search for insights. </p>
    pub fn statuses(&self) -> std::option::Option<&[crate::types::InsightStatus]> {
        self.statuses.as_deref()
    }
    /// <p> A collection of Amazon Web Services resources supported by DevOps Guru. The two types of Amazon Web Services resource collections supported are Amazon Web Services CloudFormation stacks and Amazon Web Services resources that contain the same Amazon Web Services tag. DevOps Guru can be configured to analyze the Amazon Web Services resources that are defined in the stacks or that are tagged using the same tag <i>key</i>. You can specify up to 500 Amazon Web Services CloudFormation stacks. </p>
    pub fn resource_collection(&self) -> std::option::Option<&crate::types::ResourceCollection> {
        self.resource_collection.as_ref()
    }
    /// <p>A collection of the names of Amazon Web Services services.</p>
    pub fn service_collection(&self) -> std::option::Option<&crate::types::ServiceCollection> {
        self.service_collection.as_ref()
    }
}
impl SearchInsightsFilters {
    /// Creates a new builder-style object to manufacture [`SearchInsightsFilters`](crate::types::SearchInsightsFilters).
    pub fn builder() -> crate::types::builders::SearchInsightsFiltersBuilder {
        crate::types::builders::SearchInsightsFiltersBuilder::default()
    }
}

/// A builder for [`SearchInsightsFilters`](crate::types::SearchInsightsFilters).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct SearchInsightsFiltersBuilder {
    pub(crate) severities: std::option::Option<std::vec::Vec<crate::types::InsightSeverity>>,
    pub(crate) statuses: std::option::Option<std::vec::Vec<crate::types::InsightStatus>>,
    pub(crate) resource_collection: std::option::Option<crate::types::ResourceCollection>,
    pub(crate) service_collection: std::option::Option<crate::types::ServiceCollection>,
}
impl SearchInsightsFiltersBuilder {
    /// Appends an item to `severities`.
    ///
    /// To override the contents of this collection use [`set_severities`](Self::set_severities).
    ///
    /// <p> An array of severity values used to search for insights. </p>
    pub fn severities(mut self, input: crate::types::InsightSeverity) -> Self {
        let mut v = self.severities.unwrap_or_default();
        v.push(input);
        self.severities = Some(v);
        self
    }
    /// <p> An array of severity values used to search for insights. </p>
    pub fn set_severities(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::InsightSeverity>>,
    ) -> Self {
        self.severities = input;
        self
    }
    /// Appends an item to `statuses`.
    ///
    /// To override the contents of this collection use [`set_statuses`](Self::set_statuses).
    ///
    /// <p> An array of status values used to search for insights. </p>
    pub fn statuses(mut self, input: crate::types::InsightStatus) -> Self {
        let mut v = self.statuses.unwrap_or_default();
        v.push(input);
        self.statuses = Some(v);
        self
    }
    /// <p> An array of status values used to search for insights. </p>
    pub fn set_statuses(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::InsightStatus>>,
    ) -> Self {
        self.statuses = input;
        self
    }
    /// <p> A collection of Amazon Web Services resources supported by DevOps Guru. The two types of Amazon Web Services resource collections supported are Amazon Web Services CloudFormation stacks and Amazon Web Services resources that contain the same Amazon Web Services tag. DevOps Guru can be configured to analyze the Amazon Web Services resources that are defined in the stacks or that are tagged using the same tag <i>key</i>. You can specify up to 500 Amazon Web Services CloudFormation stacks. </p>
    pub fn resource_collection(mut self, input: crate::types::ResourceCollection) -> Self {
        self.resource_collection = Some(input);
        self
    }
    /// <p> A collection of Amazon Web Services resources supported by DevOps Guru. The two types of Amazon Web Services resource collections supported are Amazon Web Services CloudFormation stacks and Amazon Web Services resources that contain the same Amazon Web Services tag. DevOps Guru can be configured to analyze the Amazon Web Services resources that are defined in the stacks or that are tagged using the same tag <i>key</i>. You can specify up to 500 Amazon Web Services CloudFormation stacks. </p>
    pub fn set_resource_collection(
        mut self,
        input: std::option::Option<crate::types::ResourceCollection>,
    ) -> Self {
        self.resource_collection = input;
        self
    }
    /// <p>A collection of the names of Amazon Web Services services.</p>
    pub fn service_collection(mut self, input: crate::types::ServiceCollection) -> Self {
        self.service_collection = Some(input);
        self
    }
    /// <p>A collection of the names of Amazon Web Services services.</p>
    pub fn set_service_collection(
        mut self,
        input: std::option::Option<crate::types::ServiceCollection>,
    ) -> Self {
        self.service_collection = input;
        self
    }
    /// Consumes the builder and constructs a [`SearchInsightsFilters`](crate::types::SearchInsightsFilters).
    pub fn build(self) -> crate::types::SearchInsightsFilters {
        crate::types::SearchInsightsFilters {
            severities: self.severities,
            statuses: self.statuses,
            resource_collection: self.resource_collection,
            service_collection: self.service_collection,
        }
    }
}
