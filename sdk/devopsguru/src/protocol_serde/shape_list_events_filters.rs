// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_list_events_filters(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::types::ListEventsFilters,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.insight_id {
        object.key("InsightId").string(var_1.as_str());
    }
    if let Some(var_2) = &input.event_time_range {
        #[allow(unused_mut)]
        let mut object_3 = object.key("EventTimeRange").start_object();
        crate::protocol_serde::shape_event_time_range::ser_event_time_range(&mut object_3, var_2)?;
        object_3.finish();
    }
    if let Some(var_4) = &input.event_class {
        object.key("EventClass").string(var_4.as_str());
    }
    if let Some(var_5) = &input.event_source {
        object.key("EventSource").string(var_5.as_str());
    }
    if let Some(var_6) = &input.data_source {
        object.key("DataSource").string(var_6.as_str());
    }
    if let Some(var_7) = &input.resource_collection {
        #[allow(unused_mut)]
        let mut object_8 = object.key("ResourceCollection").start_object();
        crate::protocol_serde::shape_resource_collection::ser_resource_collection(&mut object_8, var_7)?;
        object_8.finish();
    }
    Ok(())
}
