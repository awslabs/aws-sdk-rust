// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeOrganizationResourceCollectionHealth`](crate::operation::describe_organization_resource_collection_health::builders::DescribeOrganizationResourceCollectionHealthFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::describe_organization_resource_collection_health::builders::DescribeOrganizationResourceCollectionHealthFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`organization_resource_collection_type(OrganizationResourceCollectionType)`](crate::operation::describe_organization_resource_collection_health::builders::DescribeOrganizationResourceCollectionHealthFluentBuilder::organization_resource_collection_type) / [`set_organization_resource_collection_type(Option<OrganizationResourceCollectionType>)`](crate::operation::describe_organization_resource_collection_health::builders::DescribeOrganizationResourceCollectionHealthFluentBuilder::set_organization_resource_collection_type):<br>required: **true**<br><p> An Amazon Web Services resource collection type. This type specifies how analyzed Amazon Web Services resources are defined. The two types of Amazon Web Services resource collections supported are Amazon Web Services CloudFormation stacks and Amazon Web Services resources that contain the same Amazon Web Services tag. DevOps Guru can be configured to analyze the Amazon Web Services resources that are defined in the stacks or that are tagged using the same tag <i>key</i>. You can specify up to 500 Amazon Web Services CloudFormation stacks. </p><br>
    ///   - [`account_ids(impl Into<String>)`](crate::operation::describe_organization_resource_collection_health::builders::DescribeOrganizationResourceCollectionHealthFluentBuilder::account_ids) / [`set_account_ids(Option<Vec::<String>>)`](crate::operation::describe_organization_resource_collection_health::builders::DescribeOrganizationResourceCollectionHealthFluentBuilder::set_account_ids):<br>required: **false**<br><p>The ID of the Amazon Web Services account.</p><br>
    ///   - [`organizational_unit_ids(impl Into<String>)`](crate::operation::describe_organization_resource_collection_health::builders::DescribeOrganizationResourceCollectionHealthFluentBuilder::organizational_unit_ids) / [`set_organizational_unit_ids(Option<Vec::<String>>)`](crate::operation::describe_organization_resource_collection_health::builders::DescribeOrganizationResourceCollectionHealthFluentBuilder::set_organizational_unit_ids):<br>required: **false**<br><p>The ID of the organizational unit.</p><br>
    ///   - [`next_token(impl Into<String>)`](crate::operation::describe_organization_resource_collection_health::builders::DescribeOrganizationResourceCollectionHealthFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::describe_organization_resource_collection_health::builders::DescribeOrganizationResourceCollectionHealthFluentBuilder::set_next_token):<br>required: **false**<br><p>The pagination token to use to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.</p><br>
    ///   - [`max_results(i32)`](crate::operation::describe_organization_resource_collection_health::builders::DescribeOrganizationResourceCollectionHealthFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::describe_organization_resource_collection_health::builders::DescribeOrganizationResourceCollectionHealthFluentBuilder::set_max_results):<br>required: **false**<br><p>The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.</p><br>
    /// - On success, responds with [`DescribeOrganizationResourceCollectionHealthOutput`](crate::operation::describe_organization_resource_collection_health::DescribeOrganizationResourceCollectionHealthOutput) with field(s):
    ///   - [`cloud_formation(Option<Vec::<CloudFormationHealth>>)`](crate::operation::describe_organization_resource_collection_health::DescribeOrganizationResourceCollectionHealthOutput::cloud_formation): <p>The returned <code>CloudFormationHealthOverview</code> object that contains an <code>InsightHealthOverview</code> object with the requested system health information.</p>
    ///   - [`service(Option<Vec::<ServiceHealth>>)`](crate::operation::describe_organization_resource_collection_health::DescribeOrganizationResourceCollectionHealthOutput::service): <p>An array of <code>ServiceHealth</code> objects that describes the health of the Amazon Web Services services associated with the resources in the collection.</p>
    ///   - [`account(Option<Vec::<AccountHealth>>)`](crate::operation::describe_organization_resource_collection_health::DescribeOrganizationResourceCollectionHealthOutput::account): <p>The name of the organization's account.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::describe_organization_resource_collection_health::DescribeOrganizationResourceCollectionHealthOutput::next_token): <p>The pagination token to use to retrieve the next page of results for this operation. If there are no more pages, this value is null.</p>
    ///   - [`tags(Option<Vec::<TagHealth>>)`](crate::operation::describe_organization_resource_collection_health::DescribeOrganizationResourceCollectionHealthOutput::tags): <p>Tags help you identify and organize your Amazon Web Services resources. Many Amazon Web Services services support tagging, so you can assign the same tag to resources from different services to indicate that the resources are related. For example, you can assign the same tag to an Amazon DynamoDB table resource that you assign to an Lambda function. For more information about using tags, see the <a href="https://docs.aws.amazon.com/whitepapers/latest/tagging-best-practices/tagging-best-practices.html">Tagging best practices</a> whitepaper. </p>  <p>Each Amazon Web Services tag has two parts. </p>  <ul>   <li> <p>A tag <i>key</i> (for example, <code>CostCenter</code>, <code>Environment</code>, <code>Project</code>, or <code>Secret</code>). Tag <i>keys</i> are case-sensitive.</p> </li>   <li> <p>An optional field known as a tag <i>value</i> (for example, <code>111122223333</code>, <code>Production</code>, or a team name). Omitting the tag <i>value</i> is the same as using an empty string. Like tag <i>keys</i>, tag <i>values</i> are case-sensitive.</p> </li>  </ul>  <p>Together these are known as <i>key</i>-<i>value</i> pairs.</p> <important>   <p>The string used for a <i>key</i> in a tag that you use to define your resource coverage must begin with the prefix <code>Devops-guru-</code>. The tag <i>key</i> might be <code>DevOps-Guru-deployment-application</code> or <code>devops-guru-rds-application</code>. When you create a <i>key</i>, the case of characters in the <i>key</i> can be whatever you choose. After you create a <i>key</i>, it is case-sensitive. For example, DevOps Guru works with a <i>key</i> named <code>devops-guru-rds</code> and a <i>key</i> named <code>DevOps-Guru-RDS</code>, and these act as two different <i>keys</i>. Possible <i>key</i>/<i>value</i> pairs in your application might be <code>Devops-Guru-production-application/RDS</code> or <code>Devops-Guru-production-application/containers</code>.</p>  </important>
    /// - On failure, responds with [`SdkError<DescribeOrganizationResourceCollectionHealthError>`](crate::operation::describe_organization_resource_collection_health::DescribeOrganizationResourceCollectionHealthError)
    pub fn describe_organization_resource_collection_health(
        &self,
    ) -> crate::operation::describe_organization_resource_collection_health::builders::DescribeOrganizationResourceCollectionHealthFluentBuilder {
        crate::operation::describe_organization_resource_collection_health::builders::DescribeOrganizationResourceCollectionHealthFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
