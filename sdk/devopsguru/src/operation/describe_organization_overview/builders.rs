// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub use crate::operation::describe_organization_overview::_describe_organization_overview_output::DescribeOrganizationOverviewOutputBuilder;

pub use crate::operation::describe_organization_overview::_describe_organization_overview_input::DescribeOrganizationOverviewInputBuilder;

/// Fluent builder constructing a request to `DescribeOrganizationOverview`.
///
/// <p>Returns an overview of your organization's history based on the specified time range. The overview includes the total reactive and proactive insights.</p>
#[derive(std::clone::Clone, std::fmt::Debug)]
pub struct DescribeOrganizationOverviewFluentBuilder {
                handle: std::sync::Arc<crate::client::Handle>,
                inner: crate::operation::describe_organization_overview::builders::DescribeOrganizationOverviewInputBuilder
            }
impl DescribeOrganizationOverviewFluentBuilder {
    /// Creates a new `DescribeOrganizationOverview`.
    pub(crate) fn new(handle: std::sync::Arc<crate::client::Handle>) -> Self {
        Self {
            handle,
            inner: Default::default(),
        }
    }

    /// Consume this builder, creating a customizable operation that can be modified before being
    /// sent. The operation's inner [http::Request] can be modified as well.
    pub async fn customize(
        self,
    ) -> std::result::Result<
        crate::client::customize::CustomizableOperation<
            crate::operation::describe_organization_overview::DescribeOrganizationOverview,
            aws_http::retry::AwsResponseRetryClassifier,
        >,
        aws_smithy_http::result::SdkError<
            crate::operation::describe_organization_overview::DescribeOrganizationOverviewError,
        >,
    > {
        let handle = self.handle.clone();
        let operation = self
            .inner
            .build()
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?
            .make_operation(&handle.conf)
            .await
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?;
        Ok(crate::client::customize::CustomizableOperation { handle, operation })
    }

    /// Sends the request and returns the response.
    ///
    /// If an error occurs, an `SdkError` will be returned with additional details that
    /// can be matched against.
    ///
    /// By default, any retryable failures will be retried twice. Retry behavior
    /// is configurable with the [RetryConfig](aws_smithy_types::retry::RetryConfig), which can be
    /// set when configuring the client.
    pub async fn send(
        self,
    ) -> std::result::Result<
        crate::operation::describe_organization_overview::DescribeOrganizationOverviewOutput,
        aws_smithy_http::result::SdkError<
            crate::operation::describe_organization_overview::DescribeOrganizationOverviewError,
        >,
    > {
        let op = self
            .inner
            .build()
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?
            .make_operation(&self.handle.conf)
            .await
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?;
        self.handle.client.call(op).await
    }
    /// <p> The start of the time range passed in. The start time granularity is at the day level. The floor of the start time is used. Returned information occurred after this day. </p>
    pub fn from_time(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.inner = self.inner.from_time(input);
        self
    }
    /// <p> The start of the time range passed in. The start time granularity is at the day level. The floor of the start time is used. Returned information occurred after this day. </p>
    pub fn set_from_time(mut self, input: std::option::Option<aws_smithy_types::DateTime>) -> Self {
        self.inner = self.inner.set_from_time(input);
        self
    }
    /// <p> The end of the time range passed in. The start time granularity is at the day level. The floor of the start time is used. Returned information occurred before this day. If this is not specified, then the current day is used. </p>
    pub fn to_time(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.inner = self.inner.to_time(input);
        self
    }
    /// <p> The end of the time range passed in. The start time granularity is at the day level. The floor of the start time is used. Returned information occurred before this day. If this is not specified, then the current day is used. </p>
    pub fn set_to_time(mut self, input: std::option::Option<aws_smithy_types::DateTime>) -> Self {
        self.inner = self.inner.set_to_time(input);
        self
    }
    /// Appends an item to `AccountIds`.
    ///
    /// To override the contents of this collection use [`set_account_ids`](Self::set_account_ids).
    ///
    /// <p>The ID of the Amazon Web Services account.</p>
    pub fn account_ids(mut self, input: impl Into<std::string::String>) -> Self {
        self.inner = self.inner.account_ids(input.into());
        self
    }
    /// <p>The ID of the Amazon Web Services account.</p>
    pub fn set_account_ids(
        mut self,
        input: std::option::Option<std::vec::Vec<std::string::String>>,
    ) -> Self {
        self.inner = self.inner.set_account_ids(input);
        self
    }
    /// Appends an item to `OrganizationalUnitIds`.
    ///
    /// To override the contents of this collection use [`set_organizational_unit_ids`](Self::set_organizational_unit_ids).
    ///
    /// <p>The ID of the organizational unit.</p>
    pub fn organizational_unit_ids(mut self, input: impl Into<std::string::String>) -> Self {
        self.inner = self.inner.organizational_unit_ids(input.into());
        self
    }
    /// <p>The ID of the organizational unit.</p>
    pub fn set_organizational_unit_ids(
        mut self,
        input: std::option::Option<std::vec::Vec<std::string::String>>,
    ) -> Self {
        self.inner = self.inner.set_organizational_unit_ids(input);
        self
    }
}
