// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub use crate::operation::describe_organization_overview::_describe_organization_overview_output::DescribeOrganizationOverviewOutputBuilder;

pub use crate::operation::describe_organization_overview::_describe_organization_overview_input::DescribeOrganizationOverviewInputBuilder;

impl crate::operation::describe_organization_overview::builders::DescribeOrganizationOverviewInputBuilder {
    /// Sends a request with this input using the given client.
    pub async fn send_with(
        self,
        client: &crate::Client,
    ) -> ::std::result::Result<
        crate::operation::describe_organization_overview::DescribeOrganizationOverviewOutput,
        ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::describe_organization_overview::DescribeOrganizationOverviewError,
            ::aws_smithy_runtime_api::client::orchestrator::HttpResponse,
        >,
    > {
        let mut fluent_builder = client.describe_organization_overview();
        fluent_builder.inner = self;
        fluent_builder.send().await
    }
}
/// Fluent builder constructing a request to `DescribeOrganizationOverview`.
///
/// <p>Returns an overview of your organization's history based on the specified time range. The overview includes the total reactive and proactive insights.</p>
#[derive(::std::clone::Clone, ::std::fmt::Debug)]
pub struct DescribeOrganizationOverviewFluentBuilder {
    handle: ::std::sync::Arc<crate::client::Handle>,
    inner: crate::operation::describe_organization_overview::builders::DescribeOrganizationOverviewInputBuilder,
    config_override: ::std::option::Option<crate::config::Builder>,
}
impl
    crate::client::customize::internal::CustomizableSend<
        crate::operation::describe_organization_overview::DescribeOrganizationOverviewOutput,
        crate::operation::describe_organization_overview::DescribeOrganizationOverviewError,
    > for DescribeOrganizationOverviewFluentBuilder
{
    fn send(
        self,
        config_override: crate::config::Builder,
    ) -> crate::client::customize::internal::BoxFuture<
        crate::client::customize::internal::SendResult<
            crate::operation::describe_organization_overview::DescribeOrganizationOverviewOutput,
            crate::operation::describe_organization_overview::DescribeOrganizationOverviewError,
        >,
    > {
        ::std::boxed::Box::pin(async move { self.config_override(config_override).send().await })
    }
}
impl DescribeOrganizationOverviewFluentBuilder {
    /// Creates a new `DescribeOrganizationOverview`.
    pub(crate) fn new(handle: ::std::sync::Arc<crate::client::Handle>) -> Self {
        Self {
            handle,
            inner: ::std::default::Default::default(),
            config_override: ::std::option::Option::None,
        }
    }
    /// Access the DescribeOrganizationOverview as a reference.
    pub fn as_input(&self) -> &crate::operation::describe_organization_overview::builders::DescribeOrganizationOverviewInputBuilder {
        &self.inner
    }
    /// Sends the request and returns the response.
    ///
    /// If an error occurs, an `SdkError` will be returned with additional details that
    /// can be matched against.
    ///
    /// By default, any retryable failures will be retried twice. Retry behavior
    /// is configurable with the [RetryConfig](aws_smithy_types::retry::RetryConfig), which can be
    /// set when configuring the client.
    pub async fn send(
        self,
    ) -> ::std::result::Result<
        crate::operation::describe_organization_overview::DescribeOrganizationOverviewOutput,
        ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::describe_organization_overview::DescribeOrganizationOverviewError,
            ::aws_smithy_runtime_api::client::orchestrator::HttpResponse,
        >,
    > {
        let input = self
            .inner
            .build()
            .map_err(::aws_smithy_runtime_api::client::result::SdkError::construction_failure)?;
        let runtime_plugins = crate::operation::describe_organization_overview::DescribeOrganizationOverview::operation_runtime_plugins(
            self.handle.runtime_plugins.clone(),
            &self.handle.conf,
            self.config_override,
        );
        crate::operation::describe_organization_overview::DescribeOrganizationOverview::orchestrate(&runtime_plugins, input).await
    }

    /// Consumes this builder, creating a customizable operation that can be modified before being sent.
    pub fn customize(
        self,
    ) -> crate::client::customize::CustomizableOperation<
        crate::operation::describe_organization_overview::DescribeOrganizationOverviewOutput,
        crate::operation::describe_organization_overview::DescribeOrganizationOverviewError,
        Self,
    > {
        crate::client::customize::CustomizableOperation::new(self)
    }
    pub(crate) fn config_override(mut self, config_override: impl ::std::convert::Into<crate::config::Builder>) -> Self {
        self.set_config_override(::std::option::Option::Some(config_override.into()));
        self
    }

    pub(crate) fn set_config_override(&mut self, config_override: ::std::option::Option<crate::config::Builder>) -> &mut Self {
        self.config_override = config_override;
        self
    }
    /// <p>The start of the time range passed in. The start time granularity is at the day level. The floor of the start time is used. Returned information occurred after this day.</p>
    pub fn from_time(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.inner = self.inner.from_time(input);
        self
    }
    /// <p>The start of the time range passed in. The start time granularity is at the day level. The floor of the start time is used. Returned information occurred after this day.</p>
    pub fn set_from_time(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.inner = self.inner.set_from_time(input);
        self
    }
    /// <p>The start of the time range passed in. The start time granularity is at the day level. The floor of the start time is used. Returned information occurred after this day.</p>
    pub fn get_from_time(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        self.inner.get_from_time()
    }
    /// <p>The end of the time range passed in. The start time granularity is at the day level. The floor of the start time is used. Returned information occurred before this day. If this is not specified, then the current day is used.</p>
    pub fn to_time(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.inner = self.inner.to_time(input);
        self
    }
    /// <p>The end of the time range passed in. The start time granularity is at the day level. The floor of the start time is used. Returned information occurred before this day. If this is not specified, then the current day is used.</p>
    pub fn set_to_time(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.inner = self.inner.set_to_time(input);
        self
    }
    /// <p>The end of the time range passed in. The start time granularity is at the day level. The floor of the start time is used. Returned information occurred before this day. If this is not specified, then the current day is used.</p>
    pub fn get_to_time(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        self.inner.get_to_time()
    }
    ///
    /// Appends an item to `AccountIds`.
    ///
    /// To override the contents of this collection use [`set_account_ids`](Self::set_account_ids).
    ///
    /// <p>The ID of the Amazon Web Services account.</p>
    pub fn account_ids(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.inner = self.inner.account_ids(input.into());
        self
    }
    /// <p>The ID of the Amazon Web Services account.</p>
    pub fn set_account_ids(mut self, input: ::std::option::Option<::std::vec::Vec<::std::string::String>>) -> Self {
        self.inner = self.inner.set_account_ids(input);
        self
    }
    /// <p>The ID of the Amazon Web Services account.</p>
    pub fn get_account_ids(&self) -> &::std::option::Option<::std::vec::Vec<::std::string::String>> {
        self.inner.get_account_ids()
    }
    ///
    /// Appends an item to `OrganizationalUnitIds`.
    ///
    /// To override the contents of this collection use [`set_organizational_unit_ids`](Self::set_organizational_unit_ids).
    ///
    /// <p>The ID of the organizational unit.</p>
    pub fn organizational_unit_ids(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.inner = self.inner.organizational_unit_ids(input.into());
        self
    }
    /// <p>The ID of the organizational unit.</p>
    pub fn set_organizational_unit_ids(mut self, input: ::std::option::Option<::std::vec::Vec<::std::string::String>>) -> Self {
        self.inner = self.inner.set_organizational_unit_ids(input);
        self
    }
    /// <p>The ID of the organizational unit.</p>
    pub fn get_organizational_unit_ids(&self) -> &::std::option::Option<::std::vec::Vec<::std::string::String>> {
        self.inner.get_organizational_unit_ids()
    }
}
