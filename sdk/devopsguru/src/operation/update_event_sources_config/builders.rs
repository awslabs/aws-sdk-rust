// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub use crate::operation::update_event_sources_config::_update_event_sources_config_output::UpdateEventSourcesConfigOutputBuilder;

pub use crate::operation::update_event_sources_config::_update_event_sources_config_input::UpdateEventSourcesConfigInputBuilder;

/// Fluent builder constructing a request to `UpdateEventSourcesConfig`.
///
/// <p>Enables or disables integration with a service that can be integrated with DevOps Guru. The one service that can be integrated with DevOps Guru is Amazon CodeGuru Profiler, which can produce proactive recommendations which can be stored and viewed in DevOps Guru.</p>
#[derive(std::clone::Clone, std::fmt::Debug)]
pub struct UpdateEventSourcesConfigFluentBuilder {
                handle: std::sync::Arc<crate::client::Handle>,
                inner: crate::operation::update_event_sources_config::builders::UpdateEventSourcesConfigInputBuilder
            }
impl UpdateEventSourcesConfigFluentBuilder {
    /// Creates a new `UpdateEventSourcesConfig`.
    pub(crate) fn new(handle: std::sync::Arc<crate::client::Handle>) -> Self {
        Self {
            handle,
            inner: Default::default(),
        }
    }

    /// Consume this builder, creating a customizable operation that can be modified before being
    /// sent. The operation's inner [http::Request] can be modified as well.
    pub async fn customize(
        self,
    ) -> std::result::Result<
        crate::client::customize::CustomizableOperation<
            crate::operation::update_event_sources_config::UpdateEventSourcesConfig,
            aws_http::retry::AwsResponseRetryClassifier,
        >,
        aws_smithy_http::result::SdkError<
            crate::operation::update_event_sources_config::UpdateEventSourcesConfigError,
        >,
    > {
        let handle = self.handle.clone();
        let operation = self
            .inner
            .build()
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?
            .make_operation(&handle.conf)
            .await
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?;
        Ok(crate::client::customize::CustomizableOperation { handle, operation })
    }

    /// Sends the request and returns the response.
    ///
    /// If an error occurs, an `SdkError` will be returned with additional details that
    /// can be matched against.
    ///
    /// By default, any retryable failures will be retried twice. Retry behavior
    /// is configurable with the [RetryConfig](aws_smithy_types::retry::RetryConfig), which can be
    /// set when configuring the client.
    pub async fn send(
        self,
    ) -> std::result::Result<
        crate::operation::update_event_sources_config::UpdateEventSourcesConfigOutput,
        aws_smithy_http::result::SdkError<
            crate::operation::update_event_sources_config::UpdateEventSourcesConfigError,
        >,
    > {
        let op = self
            .inner
            .build()
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?
            .make_operation(&self.handle.conf)
            .await
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?;
        self.handle.client.call(op).await
    }
    /// <p>Configuration information about the integration of DevOps Guru as the Consumer via EventBridge with another AWS Service.</p>
    pub fn event_sources(mut self, input: crate::types::EventSourcesConfig) -> Self {
        self.inner = self.inner.event_sources(input);
        self
    }
    /// <p>Configuration information about the integration of DevOps Guru as the Consumer via EventBridge with another AWS Service.</p>
    pub fn set_event_sources(
        mut self,
        input: std::option::Option<crate::types::EventSourcesConfig>,
    ) -> Self {
        self.inner = self.inner.set_event_sources(input);
        self
    }
}
