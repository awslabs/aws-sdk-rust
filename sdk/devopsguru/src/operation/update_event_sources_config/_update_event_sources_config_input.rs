// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct UpdateEventSourcesConfigInput {
    /// <p>Configuration information about the integration of DevOps Guru as the Consumer via EventBridge with another AWS Service.</p>
    #[doc(hidden)]
    pub event_sources: std::option::Option<crate::types::EventSourcesConfig>,
}
impl UpdateEventSourcesConfigInput {
    /// <p>Configuration information about the integration of DevOps Guru as the Consumer via EventBridge with another AWS Service.</p>
    pub fn event_sources(&self) -> std::option::Option<&crate::types::EventSourcesConfig> {
        self.event_sources.as_ref()
    }
}
impl UpdateEventSourcesConfigInput {
    /// Creates a new builder-style object to manufacture [`UpdateEventSourcesConfigInput`](crate::operation::update_event_sources_config::UpdateEventSourcesConfigInput).
    pub fn builder(
    ) -> crate::operation::update_event_sources_config::builders::UpdateEventSourcesConfigInputBuilder
    {
        crate::operation::update_event_sources_config::builders::UpdateEventSourcesConfigInputBuilder::default()
    }
}

/// A builder for [`UpdateEventSourcesConfigInput`](crate::operation::update_event_sources_config::UpdateEventSourcesConfigInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct UpdateEventSourcesConfigInputBuilder {
    pub(crate) event_sources: std::option::Option<crate::types::EventSourcesConfig>,
}
impl UpdateEventSourcesConfigInputBuilder {
    /// <p>Configuration information about the integration of DevOps Guru as the Consumer via EventBridge with another AWS Service.</p>
    pub fn event_sources(mut self, input: crate::types::EventSourcesConfig) -> Self {
        self.event_sources = Some(input);
        self
    }
    /// <p>Configuration information about the integration of DevOps Guru as the Consumer via EventBridge with another AWS Service.</p>
    pub fn set_event_sources(
        mut self,
        input: std::option::Option<crate::types::EventSourcesConfig>,
    ) -> Self {
        self.event_sources = input;
        self
    }
    /// Consumes the builder and constructs a [`UpdateEventSourcesConfigInput`](crate::operation::update_event_sources_config::UpdateEventSourcesConfigInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::update_event_sources_config::UpdateEventSourcesConfigInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::update_event_sources_config::UpdateEventSourcesConfigInput {
                event_sources: self.event_sources,
            },
        )
    }
}
