// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ListMonitoredResourcesInput {
    /// <p> Filters to determine which monitored resources you want to retrieve. You can filter by resource type or resource permission status. </p>
    #[doc(hidden)]
    pub filters: std::option::Option<crate::types::ListMonitoredResourcesFilters>,
    /// <p>The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.</p>
    #[doc(hidden)]
    pub max_results: std::option::Option<i32>,
    /// <p>The pagination token to use to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.</p>
    #[doc(hidden)]
    pub next_token: std::option::Option<std::string::String>,
}
impl ListMonitoredResourcesInput {
    /// <p> Filters to determine which monitored resources you want to retrieve. You can filter by resource type or resource permission status. </p>
    pub fn filters(&self) -> std::option::Option<&crate::types::ListMonitoredResourcesFilters> {
        self.filters.as_ref()
    }
    /// <p>The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.</p>
    pub fn max_results(&self) -> std::option::Option<i32> {
        self.max_results
    }
    /// <p>The pagination token to use to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.</p>
    pub fn next_token(&self) -> std::option::Option<&str> {
        self.next_token.as_deref()
    }
}
impl ListMonitoredResourcesInput {
    /// Creates a new builder-style object to manufacture [`ListMonitoredResourcesInput`](crate::operation::list_monitored_resources::ListMonitoredResourcesInput).
    pub fn builder(
    ) -> crate::operation::list_monitored_resources::builders::ListMonitoredResourcesInputBuilder
    {
        crate::operation::list_monitored_resources::builders::ListMonitoredResourcesInputBuilder::default()
    }
}

/// A builder for [`ListMonitoredResourcesInput`](crate::operation::list_monitored_resources::ListMonitoredResourcesInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ListMonitoredResourcesInputBuilder {
    pub(crate) filters: std::option::Option<crate::types::ListMonitoredResourcesFilters>,
    pub(crate) max_results: std::option::Option<i32>,
    pub(crate) next_token: std::option::Option<std::string::String>,
}
impl ListMonitoredResourcesInputBuilder {
    /// <p> Filters to determine which monitored resources you want to retrieve. You can filter by resource type or resource permission status. </p>
    pub fn filters(mut self, input: crate::types::ListMonitoredResourcesFilters) -> Self {
        self.filters = Some(input);
        self
    }
    /// <p> Filters to determine which monitored resources you want to retrieve. You can filter by resource type or resource permission status. </p>
    pub fn set_filters(
        mut self,
        input: std::option::Option<crate::types::ListMonitoredResourcesFilters>,
    ) -> Self {
        self.filters = input;
        self
    }
    /// <p>The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.</p>
    pub fn max_results(mut self, input: i32) -> Self {
        self.max_results = Some(input);
        self
    }
    /// <p>The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.</p>
    pub fn set_max_results(mut self, input: std::option::Option<i32>) -> Self {
        self.max_results = input;
        self
    }
    /// <p>The pagination token to use to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.</p>
    pub fn next_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.next_token = Some(input.into());
        self
    }
    /// <p>The pagination token to use to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.</p>
    pub fn set_next_token(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// Consumes the builder and constructs a [`ListMonitoredResourcesInput`](crate::operation::list_monitored_resources::ListMonitoredResourcesInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::list_monitored_resources::ListMonitoredResourcesInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::list_monitored_resources::ListMonitoredResourcesInput {
                filters: self.filters,
                max_results: self.max_results,
                next_token: self.next_token,
            },
        )
    }
}
