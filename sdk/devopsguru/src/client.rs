// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[doc(inline)]
pub use aws_smithy_client::Builder;
#[derive(Debug)]
pub(crate) struct Handle {
    pub(crate) client: aws_smithy_client::Client<
        aws_smithy_client::erase::DynConnector,
        aws_smithy_client::erase::DynMiddleware<aws_smithy_client::erase::DynConnector>,
    >,
    pub(crate) conf: crate::Config,
}

/// Client for Amazon DevOps Guru
///
/// Client for invoking operations on Amazon DevOps Guru. Each operation on Amazon DevOps Guru is a method on this
/// this struct. `.send()` MUST be invoked on the generated operations to dispatch the request to the service.
///
/// # Examples
/// **Constructing a client and invoking an operation**
/// ```rust,no_run
/// # async fn docs() {
///     // create a shared configuration. This can be used & shared between multiple service clients.
///     let shared_config = aws_config::load_from_env().await;
///     let client = aws_sdk_devopsguru::Client::new(&shared_config);
///     // invoke an operation
///     /* let rsp = client
///         .<operation_name>().
///         .<param>("some value")
///         .send().await; */
/// # }
/// ```
/// **Constructing a client with custom configuration**
/// ```rust,no_run
/// use aws_config::retry::RetryConfig;
/// # async fn docs() {
/// let shared_config = aws_config::load_from_env().await;
/// let config = aws_sdk_devopsguru::config::Builder::from(&shared_config)
///   .retry_config(RetryConfig::disabled())
///   .build();
/// let client = aws_sdk_devopsguru::Client::from_conf(config);
/// # }
#[derive(std::fmt::Debug)]
pub struct Client {
    handle: std::sync::Arc<Handle>,
}

impl std::clone::Clone for Client {
    fn clone(&self) -> Self {
        Self {
            handle: self.handle.clone(),
        }
    }
}

impl
    From<
        aws_smithy_client::Client<
            aws_smithy_client::erase::DynConnector,
            aws_smithy_client::erase::DynMiddleware<aws_smithy_client::erase::DynConnector>,
        >,
    > for Client
{
    fn from(
        client: aws_smithy_client::Client<
            aws_smithy_client::erase::DynConnector,
            aws_smithy_client::erase::DynMiddleware<aws_smithy_client::erase::DynConnector>,
        >,
    ) -> Self {
        Self::with_config(client, crate::Config::builder().build())
    }
}

impl Client {
    /// Creates a client with the given service configuration.
    pub fn with_config(
        client: aws_smithy_client::Client<
            aws_smithy_client::erase::DynConnector,
            aws_smithy_client::erase::DynMiddleware<aws_smithy_client::erase::DynConnector>,
        >,
        conf: crate::Config,
    ) -> Self {
        Self {
            handle: std::sync::Arc::new(Handle { client, conf }),
        }
    }

    /// Returns the client's configuration.
    pub fn conf(&self) -> &crate::Config {
        &self.handle.conf
    }
}
impl Client {
    /// Constructs a fluent builder for the [`AddNotificationChannel`](crate::client::fluent_builders::AddNotificationChannel) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`config(NotificationChannelConfig)`](crate::client::fluent_builders::AddNotificationChannel::config) / [`set_config(Option<NotificationChannelConfig>)`](crate::client::fluent_builders::AddNotificationChannel::set_config): <p> A <code>NotificationChannelConfig</code> object that specifies what type of notification channel to add. The one supported notification channel is Amazon Simple Notification Service (Amazon SNS). </p>
    /// - On success, responds with [`AddNotificationChannelOutput`](crate::output::AddNotificationChannelOutput) with field(s):
    ///   - [`id(Option<String>)`](crate::output::AddNotificationChannelOutput::id): <p> The ID of the added notification channel. </p>
    /// - On failure, responds with [`SdkError<AddNotificationChannelError>`](crate::error::AddNotificationChannelError)
    pub fn add_notification_channel(
        &self,
    ) -> crate::client::fluent_builders::AddNotificationChannel {
        crate::client::fluent_builders::AddNotificationChannel::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteInsight`](crate::client::fluent_builders::DeleteInsight) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`id(impl Into<String>)`](crate::client::fluent_builders::DeleteInsight::id) / [`set_id(Option<String>)`](crate::client::fluent_builders::DeleteInsight::set_id): <p>The ID of the insight.</p>
    /// - On success, responds with [`DeleteInsightOutput`](crate::output::DeleteInsightOutput)

    /// - On failure, responds with [`SdkError<DeleteInsightError>`](crate::error::DeleteInsightError)
    pub fn delete_insight(&self) -> crate::client::fluent_builders::DeleteInsight {
        crate::client::fluent_builders::DeleteInsight::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DescribeAccountHealth`](crate::client::fluent_builders::DescribeAccountHealth) operation.
    ///
    /// - The fluent builder takes no input, just [`send`](crate::client::fluent_builders::DescribeAccountHealth::send) it.

    /// - On success, responds with [`DescribeAccountHealthOutput`](crate::output::DescribeAccountHealthOutput) with field(s):
    ///   - [`open_reactive_insights(i32)`](crate::output::DescribeAccountHealthOutput::open_reactive_insights): <p> An integer that specifies the number of open reactive insights in your Amazon Web Services account. </p>
    ///   - [`open_proactive_insights(i32)`](crate::output::DescribeAccountHealthOutput::open_proactive_insights): <p> An integer that specifies the number of open proactive insights in your Amazon Web Services account. </p>
    ///   - [`metrics_analyzed(i32)`](crate::output::DescribeAccountHealthOutput::metrics_analyzed): <p> An integer that specifies the number of metrics that have been analyzed in your Amazon Web Services account. </p>
    ///   - [`resource_hours(Option<i64>)`](crate::output::DescribeAccountHealthOutput::resource_hours): <p>The number of Amazon DevOps Guru resource analysis hours billed to the current Amazon Web Services account in the last hour. </p>
    ///   - [`analyzed_resource_count(Option<i64>)`](crate::output::DescribeAccountHealthOutput::analyzed_resource_count): <p> Number of resources that DevOps Guru is monitoring in your Amazon Web Services account. </p>
    /// - On failure, responds with [`SdkError<DescribeAccountHealthError>`](crate::error::DescribeAccountHealthError)
    pub fn describe_account_health(&self) -> crate::client::fluent_builders::DescribeAccountHealth {
        crate::client::fluent_builders::DescribeAccountHealth::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DescribeAccountOverview`](crate::client::fluent_builders::DescribeAccountOverview) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`from_time(DateTime)`](crate::client::fluent_builders::DescribeAccountOverview::from_time) / [`set_from_time(Option<DateTime>)`](crate::client::fluent_builders::DescribeAccountOverview::set_from_time): <p> The start of the time range passed in. The start time granularity is at the day level. The floor of the start time is used. Returned information occurred after this day. </p>
    ///   - [`to_time(DateTime)`](crate::client::fluent_builders::DescribeAccountOverview::to_time) / [`set_to_time(Option<DateTime>)`](crate::client::fluent_builders::DescribeAccountOverview::set_to_time): <p> The end of the time range passed in. The start time granularity is at the day level. The floor of the start time is used. Returned information occurred before this day. If this is not specified, then the current day is used. </p>
    /// - On success, responds with [`DescribeAccountOverviewOutput`](crate::output::DescribeAccountOverviewOutput) with field(s):
    ///   - [`reactive_insights(i32)`](crate::output::DescribeAccountOverviewOutput::reactive_insights): <p> An integer that specifies the number of open reactive insights in your Amazon Web Services account that were created during the time range passed in. </p>
    ///   - [`proactive_insights(i32)`](crate::output::DescribeAccountOverviewOutput::proactive_insights): <p> An integer that specifies the number of open proactive insights in your Amazon Web Services account that were created during the time range passed in. </p>
    ///   - [`mean_time_to_recover_in_milliseconds(Option<i64>)`](crate::output::DescribeAccountOverviewOutput::mean_time_to_recover_in_milliseconds): <p> The Mean Time to Recover (MTTR) for all closed insights that were created during the time range passed in. </p>
    /// - On failure, responds with [`SdkError<DescribeAccountOverviewError>`](crate::error::DescribeAccountOverviewError)
    pub fn describe_account_overview(
        &self,
    ) -> crate::client::fluent_builders::DescribeAccountOverview {
        crate::client::fluent_builders::DescribeAccountOverview::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DescribeAnomaly`](crate::client::fluent_builders::DescribeAnomaly) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`id(impl Into<String>)`](crate::client::fluent_builders::DescribeAnomaly::id) / [`set_id(Option<String>)`](crate::client::fluent_builders::DescribeAnomaly::set_id): <p> The ID of the anomaly. </p>
    ///   - [`account_id(impl Into<String>)`](crate::client::fluent_builders::DescribeAnomaly::account_id) / [`set_account_id(Option<String>)`](crate::client::fluent_builders::DescribeAnomaly::set_account_id): <p>The ID of the member account.</p>
    /// - On success, responds with [`DescribeAnomalyOutput`](crate::output::DescribeAnomalyOutput) with field(s):
    ///   - [`proactive_anomaly(Option<ProactiveAnomaly>)`](crate::output::DescribeAnomalyOutput::proactive_anomaly): <p> A <code>ProactiveAnomaly</code> object that represents the requested anomaly. </p>
    ///   - [`reactive_anomaly(Option<ReactiveAnomaly>)`](crate::output::DescribeAnomalyOutput::reactive_anomaly): <p> A <code>ReactiveAnomaly</code> object that represents the requested anomaly. </p>
    /// - On failure, responds with [`SdkError<DescribeAnomalyError>`](crate::error::DescribeAnomalyError)
    pub fn describe_anomaly(&self) -> crate::client::fluent_builders::DescribeAnomaly {
        crate::client::fluent_builders::DescribeAnomaly::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DescribeEventSourcesConfig`](crate::client::fluent_builders::DescribeEventSourcesConfig) operation.
    ///
    /// - The fluent builder takes no input, just [`send`](crate::client::fluent_builders::DescribeEventSourcesConfig::send) it.

    /// - On success, responds with [`DescribeEventSourcesConfigOutput`](crate::output::DescribeEventSourcesConfigOutput) with field(s):
    ///   - [`event_sources(Option<EventSourcesConfig>)`](crate::output::DescribeEventSourcesConfigOutput::event_sources): <p>Lists the event sources in the configuration.</p>
    /// - On failure, responds with [`SdkError<DescribeEventSourcesConfigError>`](crate::error::DescribeEventSourcesConfigError)
    pub fn describe_event_sources_config(
        &self,
    ) -> crate::client::fluent_builders::DescribeEventSourcesConfig {
        crate::client::fluent_builders::DescribeEventSourcesConfig::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DescribeFeedback`](crate::client::fluent_builders::DescribeFeedback) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`insight_id(impl Into<String>)`](crate::client::fluent_builders::DescribeFeedback::insight_id) / [`set_insight_id(Option<String>)`](crate::client::fluent_builders::DescribeFeedback::set_insight_id): <p> The ID of the insight for which the feedback was provided. </p>
    /// - On success, responds with [`DescribeFeedbackOutput`](crate::output::DescribeFeedbackOutput) with field(s):
    ///   - [`insight_feedback(Option<InsightFeedback>)`](crate::output::DescribeFeedbackOutput::insight_feedback): <p> Information about insight feedback received from a customer. </p>
    /// - On failure, responds with [`SdkError<DescribeFeedbackError>`](crate::error::DescribeFeedbackError)
    pub fn describe_feedback(&self) -> crate::client::fluent_builders::DescribeFeedback {
        crate::client::fluent_builders::DescribeFeedback::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DescribeInsight`](crate::client::fluent_builders::DescribeInsight) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`id(impl Into<String>)`](crate::client::fluent_builders::DescribeInsight::id) / [`set_id(Option<String>)`](crate::client::fluent_builders::DescribeInsight::set_id): <p> The ID of the insight. </p>
    ///   - [`account_id(impl Into<String>)`](crate::client::fluent_builders::DescribeInsight::account_id) / [`set_account_id(Option<String>)`](crate::client::fluent_builders::DescribeInsight::set_account_id): <p>The ID of the member account in the organization.</p>
    /// - On success, responds with [`DescribeInsightOutput`](crate::output::DescribeInsightOutput) with field(s):
    ///   - [`proactive_insight(Option<ProactiveInsight>)`](crate::output::DescribeInsightOutput::proactive_insight): <p> A <code>ProactiveInsight</code> object that represents the requested insight. </p>
    ///   - [`reactive_insight(Option<ReactiveInsight>)`](crate::output::DescribeInsightOutput::reactive_insight): <p> A <code>ReactiveInsight</code> object that represents the requested insight. </p>
    /// - On failure, responds with [`SdkError<DescribeInsightError>`](crate::error::DescribeInsightError)
    pub fn describe_insight(&self) -> crate::client::fluent_builders::DescribeInsight {
        crate::client::fluent_builders::DescribeInsight::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DescribeOrganizationHealth`](crate::client::fluent_builders::DescribeOrganizationHealth) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`account_ids(Vec<String>)`](crate::client::fluent_builders::DescribeOrganizationHealth::account_ids) / [`set_account_ids(Option<Vec<String>>)`](crate::client::fluent_builders::DescribeOrganizationHealth::set_account_ids): <p>The ID of the Amazon Web Services account.</p>
    ///   - [`organizational_unit_ids(Vec<String>)`](crate::client::fluent_builders::DescribeOrganizationHealth::organizational_unit_ids) / [`set_organizational_unit_ids(Option<Vec<String>>)`](crate::client::fluent_builders::DescribeOrganizationHealth::set_organizational_unit_ids): <p>The ID of the organizational unit.</p>
    /// - On success, responds with [`DescribeOrganizationHealthOutput`](crate::output::DescribeOrganizationHealthOutput) with field(s):
    ///   - [`open_reactive_insights(i32)`](crate::output::DescribeOrganizationHealthOutput::open_reactive_insights): <p>An integer that specifies the number of open reactive insights in your Amazon Web Services account.</p>
    ///   - [`open_proactive_insights(i32)`](crate::output::DescribeOrganizationHealthOutput::open_proactive_insights): <p>An integer that specifies the number of open proactive insights in your Amazon Web Services account.</p>
    ///   - [`metrics_analyzed(i32)`](crate::output::DescribeOrganizationHealthOutput::metrics_analyzed): <p>An integer that specifies the number of metrics that have been analyzed in your organization.</p>
    ///   - [`resource_hours(Option<i64>)`](crate::output::DescribeOrganizationHealthOutput::resource_hours): <p>The number of Amazon DevOps Guru resource analysis hours billed to the current Amazon Web Services account in the last hour. </p>
    /// - On failure, responds with [`SdkError<DescribeOrganizationHealthError>`](crate::error::DescribeOrganizationHealthError)
    pub fn describe_organization_health(
        &self,
    ) -> crate::client::fluent_builders::DescribeOrganizationHealth {
        crate::client::fluent_builders::DescribeOrganizationHealth::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DescribeOrganizationOverview`](crate::client::fluent_builders::DescribeOrganizationOverview) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`from_time(DateTime)`](crate::client::fluent_builders::DescribeOrganizationOverview::from_time) / [`set_from_time(Option<DateTime>)`](crate::client::fluent_builders::DescribeOrganizationOverview::set_from_time): <p> The start of the time range passed in. The start time granularity is at the day level. The floor of the start time is used. Returned information occurred after this day. </p>
    ///   - [`to_time(DateTime)`](crate::client::fluent_builders::DescribeOrganizationOverview::to_time) / [`set_to_time(Option<DateTime>)`](crate::client::fluent_builders::DescribeOrganizationOverview::set_to_time): <p> The end of the time range passed in. The start time granularity is at the day level. The floor of the start time is used. Returned information occurred before this day. If this is not specified, then the current day is used. </p>
    ///   - [`account_ids(Vec<String>)`](crate::client::fluent_builders::DescribeOrganizationOverview::account_ids) / [`set_account_ids(Option<Vec<String>>)`](crate::client::fluent_builders::DescribeOrganizationOverview::set_account_ids): <p>The ID of the Amazon Web Services account.</p>
    ///   - [`organizational_unit_ids(Vec<String>)`](crate::client::fluent_builders::DescribeOrganizationOverview::organizational_unit_ids) / [`set_organizational_unit_ids(Option<Vec<String>>)`](crate::client::fluent_builders::DescribeOrganizationOverview::set_organizational_unit_ids): <p>The ID of the organizational unit.</p>
    /// - On success, responds with [`DescribeOrganizationOverviewOutput`](crate::output::DescribeOrganizationOverviewOutput) with field(s):
    ///   - [`reactive_insights(i32)`](crate::output::DescribeOrganizationOverviewOutput::reactive_insights): <p>An integer that specifies the number of open reactive insights in your Amazon Web Services account.</p>
    ///   - [`proactive_insights(i32)`](crate::output::DescribeOrganizationOverviewOutput::proactive_insights): <p>An integer that specifies the number of open proactive insights in your Amazon Web Services account.</p>
    /// - On failure, responds with [`SdkError<DescribeOrganizationOverviewError>`](crate::error::DescribeOrganizationOverviewError)
    pub fn describe_organization_overview(
        &self,
    ) -> crate::client::fluent_builders::DescribeOrganizationOverview {
        crate::client::fluent_builders::DescribeOrganizationOverview::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DescribeOrganizationResourceCollectionHealth`](crate::client::fluent_builders::DescribeOrganizationResourceCollectionHealth) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::DescribeOrganizationResourceCollectionHealth::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`organization_resource_collection_type(OrganizationResourceCollectionType)`](crate::client::fluent_builders::DescribeOrganizationResourceCollectionHealth::organization_resource_collection_type) / [`set_organization_resource_collection_type(Option<OrganizationResourceCollectionType>)`](crate::client::fluent_builders::DescribeOrganizationResourceCollectionHealth::set_organization_resource_collection_type): <p> An Amazon Web Services resource collection type. This type specifies how analyzed Amazon Web Services resources are defined. The two types of Amazon Web Services resource collections supported are Amazon Web Services CloudFormation stacks and Amazon Web Services resources that contain the same Amazon Web Services tag. DevOps Guru can be configured to analyze the Amazon Web Services resources that are defined in the stacks or that are tagged using the same tag <i>key</i>. You can specify up to 500 Amazon Web Services CloudFormation stacks. </p>
    ///   - [`account_ids(Vec<String>)`](crate::client::fluent_builders::DescribeOrganizationResourceCollectionHealth::account_ids) / [`set_account_ids(Option<Vec<String>>)`](crate::client::fluent_builders::DescribeOrganizationResourceCollectionHealth::set_account_ids): <p>The ID of the Amazon Web Services account.</p>
    ///   - [`organizational_unit_ids(Vec<String>)`](crate::client::fluent_builders::DescribeOrganizationResourceCollectionHealth::organizational_unit_ids) / [`set_organizational_unit_ids(Option<Vec<String>>)`](crate::client::fluent_builders::DescribeOrganizationResourceCollectionHealth::set_organizational_unit_ids): <p>The ID of the organizational unit.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::DescribeOrganizationResourceCollectionHealth::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::DescribeOrganizationResourceCollectionHealth::set_next_token): <p>The pagination token to use to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::DescribeOrganizationResourceCollectionHealth::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::DescribeOrganizationResourceCollectionHealth::set_max_results): <p>The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.</p>
    /// - On success, responds with [`DescribeOrganizationResourceCollectionHealthOutput`](crate::output::DescribeOrganizationResourceCollectionHealthOutput) with field(s):
    ///   - [`cloud_formation(Option<Vec<CloudFormationHealth>>)`](crate::output::DescribeOrganizationResourceCollectionHealthOutput::cloud_formation): <p>The returned <code>CloudFormationHealthOverview</code> object that contains an <code>InsightHealthOverview</code> object with the requested system health information.</p>
    ///   - [`service(Option<Vec<ServiceHealth>>)`](crate::output::DescribeOrganizationResourceCollectionHealthOutput::service): <p>An array of <code>ServiceHealth</code> objects that describes the health of the Amazon Web Services services associated with the resources in the collection.</p>
    ///   - [`account(Option<Vec<AccountHealth>>)`](crate::output::DescribeOrganizationResourceCollectionHealthOutput::account): <p>The name of the organization's account.</p>
    ///   - [`next_token(Option<String>)`](crate::output::DescribeOrganizationResourceCollectionHealthOutput::next_token): <p>The pagination token to use to retrieve the next page of results for this operation. If there are no more pages, this value is null.</p>
    ///   - [`tags(Option<Vec<TagHealth>>)`](crate::output::DescribeOrganizationResourceCollectionHealthOutput::tags): <p>Tags help you identify and organize your Amazon Web Services resources. Many Amazon Web Services services support tagging, so you can assign the same tag to resources from different services to indicate that the resources are related. For example, you can assign the same tag to an Amazon DynamoDB table resource that you assign to an Lambda function. For more information about using tags, see the <a href="https://d1.awsstatic.com/whitepapers/aws-tagging-best-practices.pdf">Tagging best practices</a> whitepaper. </p>  <p>Each Amazon Web Services tag has two parts. </p>  <ul>   <li> <p>A tag <i>key</i> (for example, <code>CostCenter</code>, <code>Environment</code>, <code>Project</code>, or <code>Secret</code>). Tag <i>keys</i> are case-sensitive.</p> </li>   <li> <p>An optional field known as a tag <i>value</i> (for example, <code>111122223333</code>, <code>Production</code>, or a team name). Omitting the tag <i>value</i> is the same as using an empty string. Like tag <i>keys</i>, tag <i>values</i> are case-sensitive.</p> </li>  </ul>  <p>Together these are known as <i>key</i>-<i>value</i> pairs.</p> <important>   <p>The string used for a <i>key</i> in a tag that you use to define your resource coverage must begin with the prefix <code>Devops-guru-</code>. The tag <i>key</i> might be <code>DevOps-Guru-deployment-application</code> or <code>devops-guru-rds-application</code>. When you create a <i>key</i>, the case of characters in the <i>key</i> can be whatever you choose. After you create a <i>key</i>, it is case-sensitive. For example, DevOps Guru works with a <i>key</i> named <code>devops-guru-rds</code> and a <i>key</i> named <code>DevOps-Guru-RDS</code>, and these act as two different <i>keys</i>. Possible <i>key</i>/<i>value</i> pairs in your application might be <code>Devops-Guru-production-application/RDS</code> or <code>Devops-Guru-production-application/containers</code>.</p>  </important>
    /// - On failure, responds with [`SdkError<DescribeOrganizationResourceCollectionHealthError>`](crate::error::DescribeOrganizationResourceCollectionHealthError)
    pub fn describe_organization_resource_collection_health(
        &self,
    ) -> crate::client::fluent_builders::DescribeOrganizationResourceCollectionHealth {
        crate::client::fluent_builders::DescribeOrganizationResourceCollectionHealth::new(
            self.handle.clone(),
        )
    }
    /// Constructs a fluent builder for the [`DescribeResourceCollectionHealth`](crate::client::fluent_builders::DescribeResourceCollectionHealth) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::DescribeResourceCollectionHealth::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`resource_collection_type(ResourceCollectionType)`](crate::client::fluent_builders::DescribeResourceCollectionHealth::resource_collection_type) / [`set_resource_collection_type(Option<ResourceCollectionType>)`](crate::client::fluent_builders::DescribeResourceCollectionHealth::set_resource_collection_type): <p> An Amazon Web Services resource collection type. This type specifies how analyzed Amazon Web Services resources are defined. The two types of Amazon Web Services resource collections supported are Amazon Web Services CloudFormation stacks and Amazon Web Services resources that contain the same Amazon Web Services tag. DevOps Guru can be configured to analyze the Amazon Web Services resources that are defined in the stacks or that are tagged using the same tag <i>key</i>. You can specify up to 500 Amazon Web Services CloudFormation stacks. </p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::DescribeResourceCollectionHealth::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::DescribeResourceCollectionHealth::set_next_token): <p>The pagination token to use to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.</p>
    /// - On success, responds with [`DescribeResourceCollectionHealthOutput`](crate::output::DescribeResourceCollectionHealthOutput) with field(s):
    ///   - [`cloud_formation(Option<Vec<CloudFormationHealth>>)`](crate::output::DescribeResourceCollectionHealthOutput::cloud_formation): <p> The returned <code>CloudFormationHealthOverview</code> object that contains an <code>InsightHealthOverview</code> object with the requested system health information. </p>
    ///   - [`service(Option<Vec<ServiceHealth>>)`](crate::output::DescribeResourceCollectionHealthOutput::service): <p>An array of <code>ServiceHealth</code> objects that describes the health of the Amazon Web Services services associated with the resources in the collection.</p>
    ///   - [`next_token(Option<String>)`](crate::output::DescribeResourceCollectionHealthOutput::next_token): <p>The pagination token to use to retrieve the next page of results for this operation. If there are no more pages, this value is null.</p>
    ///   - [`tags(Option<Vec<TagHealth>>)`](crate::output::DescribeResourceCollectionHealthOutput::tags): <p>The Amazon Web Services tags that are used by resources in the resource collection.</p>  <p>Tags help you identify and organize your Amazon Web Services resources. Many Amazon Web Services services support tagging, so you can assign the same tag to resources from different services to indicate that the resources are related. For example, you can assign the same tag to an Amazon DynamoDB table resource that you assign to an Lambda function. For more information about using tags, see the <a href="https://d1.awsstatic.com/whitepapers/aws-tagging-best-practices.pdf">Tagging best practices</a> whitepaper. </p>  <p>Each Amazon Web Services tag has two parts. </p>  <ul>   <li> <p>A tag <i>key</i> (for example, <code>CostCenter</code>, <code>Environment</code>, <code>Project</code>, or <code>Secret</code>). Tag <i>keys</i> are case-sensitive.</p> </li>   <li> <p>An optional field known as a tag <i>value</i> (for example, <code>111122223333</code>, <code>Production</code>, or a team name). Omitting the tag <i>value</i> is the same as using an empty string. Like tag <i>keys</i>, tag <i>values</i> are case-sensitive.</p> </li>  </ul>  <p>Together these are known as <i>key</i>-<i>value</i> pairs.</p> <important>   <p>The string used for a <i>key</i> in a tag that you use to define your resource coverage must begin with the prefix <code>Devops-guru-</code>. The tag <i>key</i> might be <code>DevOps-Guru-deployment-application</code> or <code>devops-guru-rds-application</code>. When you create a <i>key</i>, the case of characters in the <i>key</i> can be whatever you choose. After you create a <i>key</i>, it is case-sensitive. For example, DevOps Guru works with a <i>key</i> named <code>devops-guru-rds</code> and a <i>key</i> named <code>DevOps-Guru-RDS</code>, and these act as two different <i>keys</i>. Possible <i>key</i>/<i>value</i> pairs in your application might be <code>Devops-Guru-production-application/RDS</code> or <code>Devops-Guru-production-application/containers</code>.</p>  </important>
    /// - On failure, responds with [`SdkError<DescribeResourceCollectionHealthError>`](crate::error::DescribeResourceCollectionHealthError)
    pub fn describe_resource_collection_health(
        &self,
    ) -> crate::client::fluent_builders::DescribeResourceCollectionHealth {
        crate::client::fluent_builders::DescribeResourceCollectionHealth::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DescribeServiceIntegration`](crate::client::fluent_builders::DescribeServiceIntegration) operation.
    ///
    /// - The fluent builder takes no input, just [`send`](crate::client::fluent_builders::DescribeServiceIntegration::send) it.

    /// - On success, responds with [`DescribeServiceIntegrationOutput`](crate::output::DescribeServiceIntegrationOutput) with field(s):
    ///   - [`service_integration(Option<ServiceIntegrationConfig>)`](crate::output::DescribeServiceIntegrationOutput::service_integration): <p> Information about the integration of DevOps Guru with another Amazon Web Services service, such as Amazon Web Services Systems Manager. </p>
    /// - On failure, responds with [`SdkError<DescribeServiceIntegrationError>`](crate::error::DescribeServiceIntegrationError)
    pub fn describe_service_integration(
        &self,
    ) -> crate::client::fluent_builders::DescribeServiceIntegration {
        crate::client::fluent_builders::DescribeServiceIntegration::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetCostEstimation`](crate::client::fluent_builders::GetCostEstimation) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::GetCostEstimation::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::GetCostEstimation::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::GetCostEstimation::set_next_token): <p>The pagination token to use to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.</p>
    /// - On success, responds with [`GetCostEstimationOutput`](crate::output::GetCostEstimationOutput) with field(s):
    ///   - [`resource_collection(Option<CostEstimationResourceCollectionFilter>)`](crate::output::GetCostEstimationOutput::resource_collection): <p>The collection of the Amazon Web Services resources used to create your monthly DevOps Guru cost estimate.</p>
    ///   - [`status(Option<CostEstimationStatus>)`](crate::output::GetCostEstimationOutput::status): <p>The status of creating this cost estimate. If it's still in progress, the status <code>ONGOING</code> is returned. If it is finished, the status <code>COMPLETED</code> is returned.</p>
    ///   - [`costs(Option<Vec<ServiceResourceCost>>)`](crate::output::GetCostEstimationOutput::costs): <p>An array of <code>ResourceCost</code> objects that each contains details about the monthly cost estimate to analyze one of your Amazon Web Services resources.</p>
    ///   - [`time_range(Option<CostEstimationTimeRange>)`](crate::output::GetCostEstimationOutput::time_range): <p>The start and end time of the cost estimation.</p>
    ///   - [`total_cost(f64)`](crate::output::GetCostEstimationOutput::total_cost): <p>The estimated monthly cost to analyze the Amazon Web Services resources. This value is the sum of the estimated costs to analyze each resource in the <code>Costs</code> object in this response.</p>
    ///   - [`next_token(Option<String>)`](crate::output::GetCostEstimationOutput::next_token): <p>The pagination token to use to retrieve the next page of results for this operation. If there are no more pages, this value is null.</p>
    /// - On failure, responds with [`SdkError<GetCostEstimationError>`](crate::error::GetCostEstimationError)
    pub fn get_cost_estimation(&self) -> crate::client::fluent_builders::GetCostEstimation {
        crate::client::fluent_builders::GetCostEstimation::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetResourceCollection`](crate::client::fluent_builders::GetResourceCollection) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::GetResourceCollection::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`resource_collection_type(ResourceCollectionType)`](crate::client::fluent_builders::GetResourceCollection::resource_collection_type) / [`set_resource_collection_type(Option<ResourceCollectionType>)`](crate::client::fluent_builders::GetResourceCollection::set_resource_collection_type): <p> The type of Amazon Web Services resource collections to return. The one valid value is <code>CLOUD_FORMATION</code> for Amazon Web Services CloudFormation stacks. </p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::GetResourceCollection::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::GetResourceCollection::set_next_token): <p>The pagination token to use to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.</p>
    /// - On success, responds with [`GetResourceCollectionOutput`](crate::output::GetResourceCollectionOutput) with field(s):
    ///   - [`resource_collection(Option<ResourceCollectionFilter>)`](crate::output::GetResourceCollectionOutput::resource_collection): <p> The requested list of Amazon Web Services resource collections. The two types of Amazon Web Services resource collections supported are Amazon Web Services CloudFormation stacks and Amazon Web Services resources that contain the same Amazon Web Services tag. DevOps Guru can be configured to analyze the Amazon Web Services resources that are defined in the stacks or that are tagged using the same tag <i>key</i>. You can specify up to 500 Amazon Web Services CloudFormation stacks. </p>
    ///   - [`next_token(Option<String>)`](crate::output::GetResourceCollectionOutput::next_token): <p>The pagination token to use to retrieve the next page of results for this operation. If there are no more pages, this value is null.</p>
    /// - On failure, responds with [`SdkError<GetResourceCollectionError>`](crate::error::GetResourceCollectionError)
    pub fn get_resource_collection(&self) -> crate::client::fluent_builders::GetResourceCollection {
        crate::client::fluent_builders::GetResourceCollection::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListAnomaliesForInsight`](crate::client::fluent_builders::ListAnomaliesForInsight) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListAnomaliesForInsight::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`insight_id(impl Into<String>)`](crate::client::fluent_builders::ListAnomaliesForInsight::insight_id) / [`set_insight_id(Option<String>)`](crate::client::fluent_builders::ListAnomaliesForInsight::set_insight_id): <p> The ID of the insight. The returned anomalies belong to this insight. </p>
    ///   - [`start_time_range(StartTimeRange)`](crate::client::fluent_builders::ListAnomaliesForInsight::start_time_range) / [`set_start_time_range(Option<StartTimeRange>)`](crate::client::fluent_builders::ListAnomaliesForInsight::set_start_time_range): <p> A time range used to specify when the requested anomalies started. All returned anomalies started during this time range. </p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListAnomaliesForInsight::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListAnomaliesForInsight::set_max_results): <p>The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListAnomaliesForInsight::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListAnomaliesForInsight::set_next_token): <p>The pagination token to use to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.</p>
    ///   - [`account_id(impl Into<String>)`](crate::client::fluent_builders::ListAnomaliesForInsight::account_id) / [`set_account_id(Option<String>)`](crate::client::fluent_builders::ListAnomaliesForInsight::set_account_id): <p>The ID of the Amazon Web Services account. </p>
    /// - On success, responds with [`ListAnomaliesForInsightOutput`](crate::output::ListAnomaliesForInsightOutput) with field(s):
    ///   - [`proactive_anomalies(Option<Vec<ProactiveAnomalySummary>>)`](crate::output::ListAnomaliesForInsightOutput::proactive_anomalies): <p> An array of <code>ProactiveAnomalySummary</code> objects that represent the requested anomalies </p>
    ///   - [`reactive_anomalies(Option<Vec<ReactiveAnomalySummary>>)`](crate::output::ListAnomaliesForInsightOutput::reactive_anomalies): <p> An array of <code>ReactiveAnomalySummary</code> objects that represent the requested anomalies </p>
    ///   - [`next_token(Option<String>)`](crate::output::ListAnomaliesForInsightOutput::next_token): <p>The pagination token to use to retrieve the next page of results for this operation. If there are no more pages, this value is null.</p>
    /// - On failure, responds with [`SdkError<ListAnomaliesForInsightError>`](crate::error::ListAnomaliesForInsightError)
    pub fn list_anomalies_for_insight(
        &self,
    ) -> crate::client::fluent_builders::ListAnomaliesForInsight {
        crate::client::fluent_builders::ListAnomaliesForInsight::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListAnomalousLogGroups`](crate::client::fluent_builders::ListAnomalousLogGroups) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListAnomalousLogGroups::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`insight_id(impl Into<String>)`](crate::client::fluent_builders::ListAnomalousLogGroups::insight_id) / [`set_insight_id(Option<String>)`](crate::client::fluent_builders::ListAnomalousLogGroups::set_insight_id): <p> The ID of the insight containing the log groups. </p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListAnomalousLogGroups::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListAnomalousLogGroups::set_max_results): <p>The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListAnomalousLogGroups::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListAnomalousLogGroups::set_next_token): <p>The pagination token to use to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.</p>
    /// - On success, responds with [`ListAnomalousLogGroupsOutput`](crate::output::ListAnomalousLogGroupsOutput) with field(s):
    ///   - [`insight_id(Option<String>)`](crate::output::ListAnomalousLogGroupsOutput::insight_id): <p> The ID of the insight containing the log groups. </p>
    ///   - [`anomalous_log_groups(Option<Vec<AnomalousLogGroup>>)`](crate::output::ListAnomalousLogGroupsOutput::anomalous_log_groups): <p> The list of Amazon CloudWatch log groups that are related to an insight. </p>
    ///   - [`next_token(Option<String>)`](crate::output::ListAnomalousLogGroupsOutput::next_token): <p>The pagination token to use to retrieve the next page of results for this operation. If there are no more pages, this value is null.</p>
    /// - On failure, responds with [`SdkError<ListAnomalousLogGroupsError>`](crate::error::ListAnomalousLogGroupsError)
    pub fn list_anomalous_log_groups(
        &self,
    ) -> crate::client::fluent_builders::ListAnomalousLogGroups {
        crate::client::fluent_builders::ListAnomalousLogGroups::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListEvents`](crate::client::fluent_builders::ListEvents) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListEvents::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`filters(ListEventsFilters)`](crate::client::fluent_builders::ListEvents::filters) / [`set_filters(Option<ListEventsFilters>)`](crate::client::fluent_builders::ListEvents::set_filters): <p> A <code>ListEventsFilters</code> object used to specify which events to return. </p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListEvents::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListEvents::set_max_results): <p>The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListEvents::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListEvents::set_next_token): <p>The pagination token to use to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.</p>
    ///   - [`account_id(impl Into<String>)`](crate::client::fluent_builders::ListEvents::account_id) / [`set_account_id(Option<String>)`](crate::client::fluent_builders::ListEvents::set_account_id): <p>The ID of the Amazon Web Services account. </p>
    /// - On success, responds with [`ListEventsOutput`](crate::output::ListEventsOutput) with field(s):
    ///   - [`events(Option<Vec<Event>>)`](crate::output::ListEventsOutput::events): <p> A list of the requested events. </p>
    ///   - [`next_token(Option<String>)`](crate::output::ListEventsOutput::next_token): <p>The pagination token to use to retrieve the next page of results for this operation. If there are no more pages, this value is null.</p>
    /// - On failure, responds with [`SdkError<ListEventsError>`](crate::error::ListEventsError)
    pub fn list_events(&self) -> crate::client::fluent_builders::ListEvents {
        crate::client::fluent_builders::ListEvents::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListInsights`](crate::client::fluent_builders::ListInsights) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListInsights::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`status_filter(ListInsightsStatusFilter)`](crate::client::fluent_builders::ListInsights::status_filter) / [`set_status_filter(Option<ListInsightsStatusFilter>)`](crate::client::fluent_builders::ListInsights::set_status_filter): <p> A filter used to filter the returned insights by their status. You can specify one status filter. </p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListInsights::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListInsights::set_max_results): <p>The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListInsights::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListInsights::set_next_token): <p>The pagination token to use to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.</p>
    /// - On success, responds with [`ListInsightsOutput`](crate::output::ListInsightsOutput) with field(s):
    ///   - [`proactive_insights(Option<Vec<ProactiveInsightSummary>>)`](crate::output::ListInsightsOutput::proactive_insights): <p> The returned list of proactive insights. </p>
    ///   - [`reactive_insights(Option<Vec<ReactiveInsightSummary>>)`](crate::output::ListInsightsOutput::reactive_insights): <p> The returned list of reactive insights. </p>
    ///   - [`next_token(Option<String>)`](crate::output::ListInsightsOutput::next_token): <p>The pagination token to use to retrieve the next page of results for this operation. If there are no more pages, this value is null.</p>
    /// - On failure, responds with [`SdkError<ListInsightsError>`](crate::error::ListInsightsError)
    pub fn list_insights(&self) -> crate::client::fluent_builders::ListInsights {
        crate::client::fluent_builders::ListInsights::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListMonitoredResources`](crate::client::fluent_builders::ListMonitoredResources) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListMonitoredResources::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`filters(ListMonitoredResourcesFilters)`](crate::client::fluent_builders::ListMonitoredResources::filters) / [`set_filters(Option<ListMonitoredResourcesFilters>)`](crate::client::fluent_builders::ListMonitoredResources::set_filters): <p> Filters to determine which monitored resources you want to retrieve. You can filter by resource type or resource permission status. </p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListMonitoredResources::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListMonitoredResources::set_max_results): <p>The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListMonitoredResources::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListMonitoredResources::set_next_token): <p>The pagination token to use to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.</p>
    /// - On success, responds with [`ListMonitoredResourcesOutput`](crate::output::ListMonitoredResourcesOutput) with field(s):
    ///   - [`monitored_resource_identifiers(Option<Vec<MonitoredResourceIdentifier>>)`](crate::output::ListMonitoredResourcesOutput::monitored_resource_identifiers): <p> Information about the resource that is being monitored, including the name of the resource, the type of resource, and whether or not permission is given to DevOps Guru to access that resource. </p>
    ///   - [`next_token(Option<String>)`](crate::output::ListMonitoredResourcesOutput::next_token): <p>The pagination token to use to retrieve the next page of results for this operation. If there are no more pages, this value is null.</p>
    /// - On failure, responds with [`SdkError<ListMonitoredResourcesError>`](crate::error::ListMonitoredResourcesError)
    pub fn list_monitored_resources(
        &self,
    ) -> crate::client::fluent_builders::ListMonitoredResources {
        crate::client::fluent_builders::ListMonitoredResources::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListNotificationChannels`](crate::client::fluent_builders::ListNotificationChannels) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListNotificationChannels::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListNotificationChannels::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListNotificationChannels::set_next_token): <p>The pagination token to use to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.</p>
    /// - On success, responds with [`ListNotificationChannelsOutput`](crate::output::ListNotificationChannelsOutput) with field(s):
    ///   - [`channels(Option<Vec<NotificationChannel>>)`](crate::output::ListNotificationChannelsOutput::channels): <p> An array that contains the requested notification channels. </p>
    ///   - [`next_token(Option<String>)`](crate::output::ListNotificationChannelsOutput::next_token): <p>The pagination token to use to retrieve the next page of results for this operation. If there are no more pages, this value is null.</p>
    /// - On failure, responds with [`SdkError<ListNotificationChannelsError>`](crate::error::ListNotificationChannelsError)
    pub fn list_notification_channels(
        &self,
    ) -> crate::client::fluent_builders::ListNotificationChannels {
        crate::client::fluent_builders::ListNotificationChannels::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListOrganizationInsights`](crate::client::fluent_builders::ListOrganizationInsights) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListOrganizationInsights::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`status_filter(ListInsightsStatusFilter)`](crate::client::fluent_builders::ListOrganizationInsights::status_filter) / [`set_status_filter(Option<ListInsightsStatusFilter>)`](crate::client::fluent_builders::ListOrganizationInsights::set_status_filter): <p> A filter used by <code>ListInsights</code> to specify which insights to return. </p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListOrganizationInsights::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListOrganizationInsights::set_max_results): <p>The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.</p>
    ///   - [`account_ids(Vec<String>)`](crate::client::fluent_builders::ListOrganizationInsights::account_ids) / [`set_account_ids(Option<Vec<String>>)`](crate::client::fluent_builders::ListOrganizationInsights::set_account_ids): <p>The ID of the Amazon Web Services account. </p>
    ///   - [`organizational_unit_ids(Vec<String>)`](crate::client::fluent_builders::ListOrganizationInsights::organizational_unit_ids) / [`set_organizational_unit_ids(Option<Vec<String>>)`](crate::client::fluent_builders::ListOrganizationInsights::set_organizational_unit_ids): <p>The ID of the organizational unit.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListOrganizationInsights::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListOrganizationInsights::set_next_token): <p>The pagination token to use to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.</p>
    /// - On success, responds with [`ListOrganizationInsightsOutput`](crate::output::ListOrganizationInsightsOutput) with field(s):
    ///   - [`proactive_insights(Option<Vec<ProactiveOrganizationInsightSummary>>)`](crate::output::ListOrganizationInsightsOutput::proactive_insights): <p>An integer that specifies the number of open proactive insights in your Amazon Web Services account.</p>
    ///   - [`reactive_insights(Option<Vec<ReactiveOrganizationInsightSummary>>)`](crate::output::ListOrganizationInsightsOutput::reactive_insights): <p>An integer that specifies the number of open reactive insights in your Amazon Web Services account.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListOrganizationInsightsOutput::next_token): <p>The pagination token to use to retrieve the next page of results for this operation. If there are no more pages, this value is null.</p>
    /// - On failure, responds with [`SdkError<ListOrganizationInsightsError>`](crate::error::ListOrganizationInsightsError)
    pub fn list_organization_insights(
        &self,
    ) -> crate::client::fluent_builders::ListOrganizationInsights {
        crate::client::fluent_builders::ListOrganizationInsights::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListRecommendations`](crate::client::fluent_builders::ListRecommendations) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListRecommendations::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`insight_id(impl Into<String>)`](crate::client::fluent_builders::ListRecommendations::insight_id) / [`set_insight_id(Option<String>)`](crate::client::fluent_builders::ListRecommendations::set_insight_id): <p> The ID of the requested insight. </p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListRecommendations::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListRecommendations::set_next_token): <p>The pagination token to use to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.</p>
    ///   - [`locale(Locale)`](crate::client::fluent_builders::ListRecommendations::locale) / [`set_locale(Option<Locale>)`](crate::client::fluent_builders::ListRecommendations::set_locale): <p>A locale that specifies the language to use for recommendations.</p>
    ///   - [`account_id(impl Into<String>)`](crate::client::fluent_builders::ListRecommendations::account_id) / [`set_account_id(Option<String>)`](crate::client::fluent_builders::ListRecommendations::set_account_id): <p>The ID of the Amazon Web Services account. </p>
    /// - On success, responds with [`ListRecommendationsOutput`](crate::output::ListRecommendationsOutput) with field(s):
    ///   - [`recommendations(Option<Vec<Recommendation>>)`](crate::output::ListRecommendationsOutput::recommendations): <p> An array of the requested recommendations. </p>
    ///   - [`next_token(Option<String>)`](crate::output::ListRecommendationsOutput::next_token): <p>The pagination token to use to retrieve the next page of results for this operation. If there are no more pages, this value is null.</p>
    /// - On failure, responds with [`SdkError<ListRecommendationsError>`](crate::error::ListRecommendationsError)
    pub fn list_recommendations(&self) -> crate::client::fluent_builders::ListRecommendations {
        crate::client::fluent_builders::ListRecommendations::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`PutFeedback`](crate::client::fluent_builders::PutFeedback) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`insight_feedback(InsightFeedback)`](crate::client::fluent_builders::PutFeedback::insight_feedback) / [`set_insight_feedback(Option<InsightFeedback>)`](crate::client::fluent_builders::PutFeedback::set_insight_feedback): <p> The feedback from customers is about the recommendations in this insight. </p>
    /// - On success, responds with [`PutFeedbackOutput`](crate::output::PutFeedbackOutput)

    /// - On failure, responds with [`SdkError<PutFeedbackError>`](crate::error::PutFeedbackError)
    pub fn put_feedback(&self) -> crate::client::fluent_builders::PutFeedback {
        crate::client::fluent_builders::PutFeedback::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`RemoveNotificationChannel`](crate::client::fluent_builders::RemoveNotificationChannel) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`id(impl Into<String>)`](crate::client::fluent_builders::RemoveNotificationChannel::id) / [`set_id(Option<String>)`](crate::client::fluent_builders::RemoveNotificationChannel::set_id): <p> The ID of the notification channel to be removed. </p>
    /// - On success, responds with [`RemoveNotificationChannelOutput`](crate::output::RemoveNotificationChannelOutput)

    /// - On failure, responds with [`SdkError<RemoveNotificationChannelError>`](crate::error::RemoveNotificationChannelError)
    pub fn remove_notification_channel(
        &self,
    ) -> crate::client::fluent_builders::RemoveNotificationChannel {
        crate::client::fluent_builders::RemoveNotificationChannel::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`SearchInsights`](crate::client::fluent_builders::SearchInsights) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::SearchInsights::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`start_time_range(StartTimeRange)`](crate::client::fluent_builders::SearchInsights::start_time_range) / [`set_start_time_range(Option<StartTimeRange>)`](crate::client::fluent_builders::SearchInsights::set_start_time_range): <p> The start of the time range passed in. Returned insights occurred after this time. </p>
    ///   - [`filters(SearchInsightsFilters)`](crate::client::fluent_builders::SearchInsights::filters) / [`set_filters(Option<SearchInsightsFilters>)`](crate::client::fluent_builders::SearchInsights::set_filters): <p> A <code>SearchInsightsFilters</code> object that is used to set the severity and status filters on your insight search. </p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::SearchInsights::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::SearchInsights::set_max_results): <p>The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::SearchInsights::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::SearchInsights::set_next_token): <p>The pagination token to use to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.</p>
    ///   - [`r#type(InsightType)`](crate::client::fluent_builders::SearchInsights::type) / [`set_type(Option<InsightType>)`](crate::client::fluent_builders::SearchInsights::set_type): <p> The type of insights you are searching for (<code>REACTIVE</code> or <code>PROACTIVE</code>). </p>
    /// - On success, responds with [`SearchInsightsOutput`](crate::output::SearchInsightsOutput) with field(s):
    ///   - [`proactive_insights(Option<Vec<ProactiveInsightSummary>>)`](crate::output::SearchInsightsOutput::proactive_insights): <p> The returned proactive insights. </p>
    ///   - [`reactive_insights(Option<Vec<ReactiveInsightSummary>>)`](crate::output::SearchInsightsOutput::reactive_insights): <p> The returned reactive insights. </p>
    ///   - [`next_token(Option<String>)`](crate::output::SearchInsightsOutput::next_token): <p>The pagination token to use to retrieve the next page of results for this operation. If there are no more pages, this value is null.</p>
    /// - On failure, responds with [`SdkError<SearchInsightsError>`](crate::error::SearchInsightsError)
    pub fn search_insights(&self) -> crate::client::fluent_builders::SearchInsights {
        crate::client::fluent_builders::SearchInsights::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`SearchOrganizationInsights`](crate::client::fluent_builders::SearchOrganizationInsights) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::SearchOrganizationInsights::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`account_ids(Vec<String>)`](crate::client::fluent_builders::SearchOrganizationInsights::account_ids) / [`set_account_ids(Option<Vec<String>>)`](crate::client::fluent_builders::SearchOrganizationInsights::set_account_ids): <p>The ID of the Amazon Web Services account. </p>
    ///   - [`start_time_range(StartTimeRange)`](crate::client::fluent_builders::SearchOrganizationInsights::start_time_range) / [`set_start_time_range(Option<StartTimeRange>)`](crate::client::fluent_builders::SearchOrganizationInsights::set_start_time_range): <p> A time range used to specify when the behavior of an insight or anomaly started. </p>
    ///   - [`filters(SearchOrganizationInsightsFilters)`](crate::client::fluent_builders::SearchOrganizationInsights::filters) / [`set_filters(Option<SearchOrganizationInsightsFilters>)`](crate::client::fluent_builders::SearchOrganizationInsights::set_filters): <p> A <code>SearchOrganizationInsightsFilters</code> object that is used to set the severity and status filters on your insight search. </p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::SearchOrganizationInsights::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::SearchOrganizationInsights::set_max_results): <p>The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::SearchOrganizationInsights::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::SearchOrganizationInsights::set_next_token): <p>The pagination token to use to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.</p>
    ///   - [`r#type(InsightType)`](crate::client::fluent_builders::SearchOrganizationInsights::type) / [`set_type(Option<InsightType>)`](crate::client::fluent_builders::SearchOrganizationInsights::set_type): <p> The type of insights you are searching for (<code>REACTIVE</code> or <code>PROACTIVE</code>). </p>
    /// - On success, responds with [`SearchOrganizationInsightsOutput`](crate::output::SearchOrganizationInsightsOutput) with field(s):
    ///   - [`proactive_insights(Option<Vec<ProactiveInsightSummary>>)`](crate::output::SearchOrganizationInsightsOutput::proactive_insights): <p>An integer that specifies the number of open proactive insights in your Amazon Web Services account.</p>
    ///   - [`reactive_insights(Option<Vec<ReactiveInsightSummary>>)`](crate::output::SearchOrganizationInsightsOutput::reactive_insights): <p>An integer that specifies the number of open reactive insights in your Amazon Web Services account.</p>
    ///   - [`next_token(Option<String>)`](crate::output::SearchOrganizationInsightsOutput::next_token): <p>The pagination token to use to retrieve the next page of results for this operation. If there are no more pages, this value is null.</p>
    /// - On failure, responds with [`SdkError<SearchOrganizationInsightsError>`](crate::error::SearchOrganizationInsightsError)
    pub fn search_organization_insights(
        &self,
    ) -> crate::client::fluent_builders::SearchOrganizationInsights {
        crate::client::fluent_builders::SearchOrganizationInsights::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`StartCostEstimation`](crate::client::fluent_builders::StartCostEstimation) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`resource_collection(CostEstimationResourceCollectionFilter)`](crate::client::fluent_builders::StartCostEstimation::resource_collection) / [`set_resource_collection(Option<CostEstimationResourceCollectionFilter>)`](crate::client::fluent_builders::StartCostEstimation::set_resource_collection): <p>The collection of Amazon Web Services resources used to create a monthly DevOps Guru cost estimate.</p>
    ///   - [`client_token(impl Into<String>)`](crate::client::fluent_builders::StartCostEstimation::client_token) / [`set_client_token(Option<String>)`](crate::client::fluent_builders::StartCostEstimation::set_client_token): <p>The idempotency token used to identify each cost estimate request.</p>
    /// - On success, responds with [`StartCostEstimationOutput`](crate::output::StartCostEstimationOutput)

    /// - On failure, responds with [`SdkError<StartCostEstimationError>`](crate::error::StartCostEstimationError)
    pub fn start_cost_estimation(&self) -> crate::client::fluent_builders::StartCostEstimation {
        crate::client::fluent_builders::StartCostEstimation::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`UpdateEventSourcesConfig`](crate::client::fluent_builders::UpdateEventSourcesConfig) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`event_sources(EventSourcesConfig)`](crate::client::fluent_builders::UpdateEventSourcesConfig::event_sources) / [`set_event_sources(Option<EventSourcesConfig>)`](crate::client::fluent_builders::UpdateEventSourcesConfig::set_event_sources): <p>Configuration information about the integration of DevOps Guru as the Consumer via EventBridge with another AWS Service.</p>
    /// - On success, responds with [`UpdateEventSourcesConfigOutput`](crate::output::UpdateEventSourcesConfigOutput)

    /// - On failure, responds with [`SdkError<UpdateEventSourcesConfigError>`](crate::error::UpdateEventSourcesConfigError)
    pub fn update_event_sources_config(
        &self,
    ) -> crate::client::fluent_builders::UpdateEventSourcesConfig {
        crate::client::fluent_builders::UpdateEventSourcesConfig::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`UpdateResourceCollection`](crate::client::fluent_builders::UpdateResourceCollection) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`action(UpdateResourceCollectionAction)`](crate::client::fluent_builders::UpdateResourceCollection::action) / [`set_action(Option<UpdateResourceCollectionAction>)`](crate::client::fluent_builders::UpdateResourceCollection::set_action): <p> Specifies if the resource collection in the request is added or deleted to the resource collection. </p>
    ///   - [`resource_collection(UpdateResourceCollectionFilter)`](crate::client::fluent_builders::UpdateResourceCollection::resource_collection) / [`set_resource_collection(Option<UpdateResourceCollectionFilter>)`](crate::client::fluent_builders::UpdateResourceCollection::set_resource_collection): <p> Contains information used to update a collection of Amazon Web Services resources. </p>
    /// - On success, responds with [`UpdateResourceCollectionOutput`](crate::output::UpdateResourceCollectionOutput)

    /// - On failure, responds with [`SdkError<UpdateResourceCollectionError>`](crate::error::UpdateResourceCollectionError)
    pub fn update_resource_collection(
        &self,
    ) -> crate::client::fluent_builders::UpdateResourceCollection {
        crate::client::fluent_builders::UpdateResourceCollection::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`UpdateServiceIntegration`](crate::client::fluent_builders::UpdateServiceIntegration) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`service_integration(UpdateServiceIntegrationConfig)`](crate::client::fluent_builders::UpdateServiceIntegration::service_integration) / [`set_service_integration(Option<UpdateServiceIntegrationConfig>)`](crate::client::fluent_builders::UpdateServiceIntegration::set_service_integration): <p> An <code>IntegratedServiceConfig</code> object used to specify the integrated service you want to update, and whether you want to update it to enabled or disabled. </p>
    /// - On success, responds with [`UpdateServiceIntegrationOutput`](crate::output::UpdateServiceIntegrationOutput)

    /// - On failure, responds with [`SdkError<UpdateServiceIntegrationError>`](crate::error::UpdateServiceIntegrationError)
    pub fn update_service_integration(
        &self,
    ) -> crate::client::fluent_builders::UpdateServiceIntegration {
        crate::client::fluent_builders::UpdateServiceIntegration::new(self.handle.clone())
    }
}

impl Client {
    /// Creates a new client from an [SDK Config](aws_types::sdk_config::SdkConfig).
    ///
    /// # Panics
    ///
    /// - This method will panic if the `sdk_config` is missing an async sleep implementation. If you experience this panic, set
    ///     the `sleep_impl` on the Config passed into this function to fix it.
    /// - This method will panic if the `sdk_config` is missing an HTTP connector. If you experience this panic, set the
    ///     `http_connector` on the Config passed into this function to fix it.
    pub fn new(sdk_config: &aws_types::sdk_config::SdkConfig) -> Self {
        Self::from_conf(sdk_config.into())
    }

    /// Creates a new client from the service [`Config`](crate::Config).
    ///
    /// # Panics
    ///
    /// - This method will panic if the `conf` is missing an async sleep implementation. If you experience this panic, set
    ///     the `sleep_impl` on the Config passed into this function to fix it.
    /// - This method will panic if the `conf` is missing an HTTP connector. If you experience this panic, set the
    ///     `http_connector` on the Config passed into this function to fix it.
    pub fn from_conf(conf: crate::Config) -> Self {
        let retry_config = conf
            .retry_config()
            .cloned()
            .unwrap_or_else(aws_smithy_types::retry::RetryConfig::disabled);
        let timeout_config = conf
            .timeout_config()
            .cloned()
            .unwrap_or_else(aws_smithy_types::timeout::TimeoutConfig::disabled);
        let sleep_impl = conf.sleep_impl();
        if (retry_config.has_retry() || timeout_config.has_timeouts()) && sleep_impl.is_none() {
            panic!("An async sleep implementation is required for retries or timeouts to work. \
                                    Set the `sleep_impl` on the Config passed into this function to fix this panic.");
        }

        let connector = conf.http_connector().and_then(|c| {
            let timeout_config = conf
                .timeout_config()
                .cloned()
                .unwrap_or_else(aws_smithy_types::timeout::TimeoutConfig::disabled);
            let connector_settings =
                aws_smithy_client::http_connector::ConnectorSettings::from_timeout_config(
                    &timeout_config,
                );
            c.connector(&connector_settings, conf.sleep_impl())
        });

        let builder = aws_smithy_client::Builder::new();

        let builder = match connector {
            // Use provided connector
            Some(c) => builder.connector(c),
            None => {
                #[cfg(any(feature = "rustls", feature = "native-tls"))]
                {
                    // Use default connector based on enabled features
                    builder.dyn_https_connector(
                        aws_smithy_client::http_connector::ConnectorSettings::from_timeout_config(
                            &timeout_config,
                        ),
                    )
                }
                #[cfg(not(any(feature = "rustls", feature = "native-tls")))]
                {
                    panic!("No HTTP connector was available. Enable the `rustls` or `native-tls` crate feature or set a connector to fix this.");
                }
            }
        };
        let mut builder = builder
            .middleware(aws_smithy_client::erase::DynMiddleware::new(
                crate::middleware::DefaultMiddleware::new(),
            ))
            .retry_config(retry_config.into())
            .operation_timeout_config(timeout_config.into());
        builder.set_sleep_impl(sleep_impl);
        let client = builder.build();

        Self {
            handle: std::sync::Arc::new(Handle { client, conf }),
        }
    }
}

/// Utilities to ergonomically construct a request to the service.
///
/// Fluent builders are created through the [`Client`](crate::client::Client) by calling
/// one if its operation methods. After parameters are set using the builder methods,
/// the `send` method can be called to initiate the request.
pub mod fluent_builders;
