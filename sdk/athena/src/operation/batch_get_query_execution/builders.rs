// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub use crate::operation::batch_get_query_execution::_batch_get_query_execution_output::BatchGetQueryExecutionOutputBuilder;

pub use crate::operation::batch_get_query_execution::_batch_get_query_execution_input::BatchGetQueryExecutionInputBuilder;

/// Fluent builder constructing a request to `BatchGetQueryExecution`.
///
/// <p>Returns the details of a single query execution or a list of up to 50 query executions, which you provide as an array of query execution ID strings. Requires you to have access to the workgroup in which the queries ran. To get a list of query execution IDs, use <code>ListQueryExecutionsInput$WorkGroup</code>. Query executions differ from named (saved) queries. Use <code>BatchGetNamedQueryInput</code> to get details about named queries.</p>
#[derive(std::clone::Clone, std::fmt::Debug)]
pub struct BatchGetQueryExecutionFluentBuilder {
    handle: std::sync::Arc<crate::client::Handle>,
    inner:
        crate::operation::batch_get_query_execution::builders::BatchGetQueryExecutionInputBuilder,
}
impl BatchGetQueryExecutionFluentBuilder {
    /// Creates a new `BatchGetQueryExecution`.
    pub(crate) fn new(handle: std::sync::Arc<crate::client::Handle>) -> Self {
        Self {
            handle,
            inner: Default::default(),
        }
    }

    /// Consume this builder, creating a customizable operation that can be modified before being
    /// sent. The operation's inner [http::Request] can be modified as well.
    pub async fn customize(
        self,
    ) -> std::result::Result<
        crate::client::customize::CustomizableOperation<
            crate::operation::batch_get_query_execution::BatchGetQueryExecution,
            aws_http::retry::AwsResponseRetryClassifier,
        >,
        aws_smithy_http::result::SdkError<
            crate::operation::batch_get_query_execution::BatchGetQueryExecutionError,
        >,
    > {
        let handle = self.handle.clone();
        let operation = self
            .inner
            .build()
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?
            .make_operation(&handle.conf)
            .await
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?;
        Ok(crate::client::customize::CustomizableOperation { handle, operation })
    }

    /// Sends the request and returns the response.
    ///
    /// If an error occurs, an `SdkError` will be returned with additional details that
    /// can be matched against.
    ///
    /// By default, any retryable failures will be retried twice. Retry behavior
    /// is configurable with the [RetryConfig](aws_smithy_types::retry::RetryConfig), which can be
    /// set when configuring the client.
    pub async fn send(
        self,
    ) -> std::result::Result<
        crate::operation::batch_get_query_execution::BatchGetQueryExecutionOutput,
        aws_smithy_http::result::SdkError<
            crate::operation::batch_get_query_execution::BatchGetQueryExecutionError,
        >,
    > {
        let op = self
            .inner
            .build()
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?
            .make_operation(&self.handle.conf)
            .await
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?;
        self.handle.client.call(op).await
    }
    /// Appends an item to `QueryExecutionIds`.
    ///
    /// To override the contents of this collection use [`set_query_execution_ids`](Self::set_query_execution_ids).
    ///
    /// <p>An array of query execution IDs.</p>
    pub fn query_execution_ids(mut self, input: impl Into<std::string::String>) -> Self {
        self.inner = self.inner.query_execution_ids(input.into());
        self
    }
    /// <p>An array of query execution IDs.</p>
    pub fn set_query_execution_ids(
        mut self,
        input: std::option::Option<std::vec::Vec<std::string::String>>,
    ) -> Self {
        self.inner = self.inner.set_query_execution_ids(input);
        self
    }
}
