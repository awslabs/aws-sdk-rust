// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub use crate::operation::batch_get_named_query::_batch_get_named_query_output::BatchGetNamedQueryOutputBuilder;

pub use crate::operation::batch_get_named_query::_batch_get_named_query_input::BatchGetNamedQueryInputBuilder;

impl BatchGetNamedQueryInputBuilder {
    /// Sends a request with this input using the given client.
    pub async fn send_with(
        self,
        client: &crate::Client,
    ) -> ::std::result::Result<
        crate::operation::batch_get_named_query::BatchGetNamedQueryOutput,
        ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::batch_get_named_query::BatchGetNamedQueryError,
            ::aws_smithy_runtime_api::client::orchestrator::HttpResponse,
        >,
    > {
        let mut fluent_builder = client.batch_get_named_query();
        fluent_builder.inner = self;
        fluent_builder.send().await
    }
}
/// Fluent builder constructing a request to `BatchGetNamedQuery`.
///
/// <p>Returns the details of a single named query or a list of up to 50 queries, which you provide as an array of query ID strings. Requires you to have access to the workgroup in which the queries were saved. Use <code>ListNamedQueriesInput</code> to get the list of named query IDs in the specified workgroup. If information could not be retrieved for a submitted query ID, information about the query ID submitted is listed under <code>UnprocessedNamedQueryId</code>. Named queries differ from executed queries. Use <code>BatchGetQueryExecutionInput</code> to get details about each unique query execution, and <code>ListQueryExecutionsInput</code> to get a list of query execution IDs.</p>
#[derive(::std::clone::Clone, ::std::fmt::Debug)]
pub struct BatchGetNamedQueryFluentBuilder {
    handle: ::std::sync::Arc<crate::client::Handle>,
    inner: crate::operation::batch_get_named_query::builders::BatchGetNamedQueryInputBuilder,
    config_override: ::std::option::Option<crate::config::Builder>,
}
impl
    crate::client::customize::internal::CustomizableSend<
        crate::operation::batch_get_named_query::BatchGetNamedQueryOutput,
        crate::operation::batch_get_named_query::BatchGetNamedQueryError,
    > for BatchGetNamedQueryFluentBuilder
{
    fn send(
        self,
        config_override: crate::config::Builder,
    ) -> crate::client::customize::internal::BoxFuture<
        crate::client::customize::internal::SendResult<
            crate::operation::batch_get_named_query::BatchGetNamedQueryOutput,
            crate::operation::batch_get_named_query::BatchGetNamedQueryError,
        >,
    > {
        ::std::boxed::Box::pin(async move { self.config_override(config_override).send().await })
    }
}
impl BatchGetNamedQueryFluentBuilder {
    /// Creates a new `BatchGetNamedQuery`.
    pub(crate) fn new(handle: ::std::sync::Arc<crate::client::Handle>) -> Self {
        Self {
            handle,
            inner: ::std::default::Default::default(),
            config_override: ::std::option::Option::None,
        }
    }
    /// Access the BatchGetNamedQuery as a reference.
    pub fn as_input(&self) -> &crate::operation::batch_get_named_query::builders::BatchGetNamedQueryInputBuilder {
        &self.inner
    }
    /// Sends the request and returns the response.
    ///
    /// If an error occurs, an `SdkError` will be returned with additional details that
    /// can be matched against.
    ///
    /// By default, any retryable failures will be retried twice. Retry behavior
    /// is configurable with the [RetryConfig](aws_smithy_types::retry::RetryConfig), which can be
    /// set when configuring the client.
    pub async fn send(
        self,
    ) -> ::std::result::Result<
        crate::operation::batch_get_named_query::BatchGetNamedQueryOutput,
        ::aws_smithy_runtime_api::client::result::SdkError<
            crate::operation::batch_get_named_query::BatchGetNamedQueryError,
            ::aws_smithy_runtime_api::client::orchestrator::HttpResponse,
        >,
    > {
        let input = self
            .inner
            .build()
            .map_err(::aws_smithy_runtime_api::client::result::SdkError::construction_failure)?;
        let runtime_plugins = crate::operation::batch_get_named_query::BatchGetNamedQuery::operation_runtime_plugins(
            self.handle.runtime_plugins.clone(),
            &self.handle.conf,
            self.config_override,
        );
        crate::operation::batch_get_named_query::BatchGetNamedQuery::orchestrate(&runtime_plugins, input).await
    }

    /// Consumes this builder, creating a customizable operation that can be modified before being sent.
    pub fn customize(
        self,
    ) -> crate::client::customize::CustomizableOperation<
        crate::operation::batch_get_named_query::BatchGetNamedQueryOutput,
        crate::operation::batch_get_named_query::BatchGetNamedQueryError,
        Self,
    > {
        crate::client::customize::CustomizableOperation::new(self)
    }
    pub(crate) fn config_override(mut self, config_override: impl Into<crate::config::Builder>) -> Self {
        self.set_config_override(Some(config_override.into()));
        self
    }

    pub(crate) fn set_config_override(&mut self, config_override: Option<crate::config::Builder>) -> &mut Self {
        self.config_override = config_override;
        self
    }
    /// Appends an item to `NamedQueryIds`.
    ///
    /// To override the contents of this collection use [`set_named_query_ids`](Self::set_named_query_ids).
    ///
    /// <p>An array of query IDs.</p>
    pub fn named_query_ids(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.inner = self.inner.named_query_ids(input.into());
        self
    }
    /// <p>An array of query IDs.</p>
    pub fn set_named_query_ids(mut self, input: ::std::option::Option<::std::vec::Vec<::std::string::String>>) -> Self {
        self.inner = self.inner.set_named_query_ids(input);
        self
    }
    /// <p>An array of query IDs.</p>
    pub fn get_named_query_ids(&self) -> &::std::option::Option<::std::vec::Vec<::std::string::String>> {
        self.inner.get_named_query_ids()
    }
}
