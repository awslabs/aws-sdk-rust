// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct CreateDataCatalogOutput {
    /// <p>Contains information about a data catalog in an Amazon Web Services account.</p><note>
    /// <p>In the Athena console, data catalogs are listed as "data sources" on the <b>Data sources</b> page under the <b>Data source name</b> column.</p>
    /// </note>
    pub data_catalog: ::std::option::Option<crate::types::DataCatalog>,
    _request_id: Option<String>,
}
impl CreateDataCatalogOutput {
    /// <p>Contains information about a data catalog in an Amazon Web Services account.</p><note>
    /// <p>In the Athena console, data catalogs are listed as "data sources" on the <b>Data sources</b> page under the <b>Data source name</b> column.</p>
    /// </note>
    pub fn data_catalog(&self) -> ::std::option::Option<&crate::types::DataCatalog> {
        self.data_catalog.as_ref()
    }
}
impl ::aws_types::request_id::RequestId for CreateDataCatalogOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl CreateDataCatalogOutput {
    /// Creates a new builder-style object to manufacture [`CreateDataCatalogOutput`](crate::operation::create_data_catalog::CreateDataCatalogOutput).
    pub fn builder() -> crate::operation::create_data_catalog::builders::CreateDataCatalogOutputBuilder {
        crate::operation::create_data_catalog::builders::CreateDataCatalogOutputBuilder::default()
    }
}

/// A builder for [`CreateDataCatalogOutput`](crate::operation::create_data_catalog::CreateDataCatalogOutput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct CreateDataCatalogOutputBuilder {
    pub(crate) data_catalog: ::std::option::Option<crate::types::DataCatalog>,
    _request_id: Option<String>,
}
impl CreateDataCatalogOutputBuilder {
    /// <p>Contains information about a data catalog in an Amazon Web Services account.</p><note>
    /// <p>In the Athena console, data catalogs are listed as "data sources" on the <b>Data sources</b> page under the <b>Data source name</b> column.</p>
    /// </note>
    pub fn data_catalog(mut self, input: crate::types::DataCatalog) -> Self {
        self.data_catalog = ::std::option::Option::Some(input);
        self
    }
    /// <p>Contains information about a data catalog in an Amazon Web Services account.</p><note>
    /// <p>In the Athena console, data catalogs are listed as "data sources" on the <b>Data sources</b> page under the <b>Data source name</b> column.</p>
    /// </note>
    pub fn set_data_catalog(mut self, input: ::std::option::Option<crate::types::DataCatalog>) -> Self {
        self.data_catalog = input;
        self
    }
    /// <p>Contains information about a data catalog in an Amazon Web Services account.</p><note>
    /// <p>In the Athena console, data catalogs are listed as "data sources" on the <b>Data sources</b> page under the <b>Data source name</b> column.</p>
    /// </note>
    pub fn get_data_catalog(&self) -> &::std::option::Option<crate::types::DataCatalog> {
        &self.data_catalog
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`CreateDataCatalogOutput`](crate::operation::create_data_catalog::CreateDataCatalogOutput).
    pub fn build(self) -> crate::operation::create_data_catalog::CreateDataCatalogOutput {
        crate::operation::create_data_catalog::CreateDataCatalogOutput {
            data_catalog: self.data_catalog,
            _request_id: self._request_id,
        }
    }
}
