// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ListNamedQueriesOutput {
    /// <p>The list of unique query IDs.</p>
    #[doc(hidden)]
    pub named_query_ids: std::option::Option<std::vec::Vec<std::string::String>>,
    /// <p>A token generated by the Athena service that specifies where to continue pagination if a previous request was truncated. To obtain the next set of pages, pass in the <code>NextToken</code> from the response object of the previous page call.</p>
    #[doc(hidden)]
    pub next_token: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl ListNamedQueriesOutput {
    /// <p>The list of unique query IDs.</p>
    pub fn named_query_ids(&self) -> std::option::Option<&[std::string::String]> {
        self.named_query_ids.as_deref()
    }
    /// <p>A token generated by the Athena service that specifies where to continue pagination if a previous request was truncated. To obtain the next set of pages, pass in the <code>NextToken</code> from the response object of the previous page call.</p>
    pub fn next_token(&self) -> std::option::Option<&str> {
        self.next_token.as_deref()
    }
}
impl aws_http::request_id::RequestId for ListNamedQueriesOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl ListNamedQueriesOutput {
    /// Creates a new builder-style object to manufacture [`ListNamedQueriesOutput`](crate::operation::list_named_queries::ListNamedQueriesOutput).
    pub fn builder() -> crate::operation::list_named_queries::builders::ListNamedQueriesOutputBuilder
    {
        crate::operation::list_named_queries::builders::ListNamedQueriesOutputBuilder::default()
    }
}

/// A builder for [`ListNamedQueriesOutput`](crate::operation::list_named_queries::ListNamedQueriesOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ListNamedQueriesOutputBuilder {
    pub(crate) named_query_ids: std::option::Option<std::vec::Vec<std::string::String>>,
    pub(crate) next_token: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl ListNamedQueriesOutputBuilder {
    /// Appends an item to `named_query_ids`.
    ///
    /// To override the contents of this collection use [`set_named_query_ids`](Self::set_named_query_ids).
    ///
    /// <p>The list of unique query IDs.</p>
    pub fn named_query_ids(mut self, input: impl Into<std::string::String>) -> Self {
        let mut v = self.named_query_ids.unwrap_or_default();
        v.push(input.into());
        self.named_query_ids = Some(v);
        self
    }
    /// <p>The list of unique query IDs.</p>
    pub fn set_named_query_ids(
        mut self,
        input: std::option::Option<std::vec::Vec<std::string::String>>,
    ) -> Self {
        self.named_query_ids = input;
        self
    }
    /// <p>A token generated by the Athena service that specifies where to continue pagination if a previous request was truncated. To obtain the next set of pages, pass in the <code>NextToken</code> from the response object of the previous page call.</p>
    pub fn next_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.next_token = Some(input.into());
        self
    }
    /// <p>A token generated by the Athena service that specifies where to continue pagination if a previous request was truncated. To obtain the next set of pages, pass in the <code>NextToken</code> from the response object of the previous page call.</p>
    pub fn set_next_token(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`ListNamedQueriesOutput`](crate::operation::list_named_queries::ListNamedQueriesOutput).
    pub fn build(self) -> crate::operation::list_named_queries::ListNamedQueriesOutput {
        crate::operation::list_named_queries::ListNamedQueriesOutput {
            named_query_ids: self.named_query_ids,
            next_token: self.next_token,
            _request_id: self._request_id,
        }
    }
}
