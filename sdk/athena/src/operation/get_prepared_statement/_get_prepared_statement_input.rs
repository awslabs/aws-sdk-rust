// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GetPreparedStatementInput {
    /// <p>The name of the prepared statement to retrieve.</p>
    #[doc(hidden)]
    pub statement_name: std::option::Option<std::string::String>,
    /// <p>The workgroup to which the statement to be retrieved belongs.</p>
    #[doc(hidden)]
    pub work_group: std::option::Option<std::string::String>,
}
impl GetPreparedStatementInput {
    /// <p>The name of the prepared statement to retrieve.</p>
    pub fn statement_name(&self) -> std::option::Option<&str> {
        self.statement_name.as_deref()
    }
    /// <p>The workgroup to which the statement to be retrieved belongs.</p>
    pub fn work_group(&self) -> std::option::Option<&str> {
        self.work_group.as_deref()
    }
}
impl GetPreparedStatementInput {
    /// Creates a new builder-style object to manufacture [`GetPreparedStatementInput`](crate::operation::get_prepared_statement::GetPreparedStatementInput).
    pub fn builder(
    ) -> crate::operation::get_prepared_statement::builders::GetPreparedStatementInputBuilder {
        crate::operation::get_prepared_statement::builders::GetPreparedStatementInputBuilder::default()
    }
}

/// A builder for [`GetPreparedStatementInput`](crate::operation::get_prepared_statement::GetPreparedStatementInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct GetPreparedStatementInputBuilder {
    pub(crate) statement_name: std::option::Option<std::string::String>,
    pub(crate) work_group: std::option::Option<std::string::String>,
}
impl GetPreparedStatementInputBuilder {
    /// <p>The name of the prepared statement to retrieve.</p>
    pub fn statement_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.statement_name = Some(input.into());
        self
    }
    /// <p>The name of the prepared statement to retrieve.</p>
    pub fn set_statement_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.statement_name = input;
        self
    }
    /// <p>The workgroup to which the statement to be retrieved belongs.</p>
    pub fn work_group(mut self, input: impl Into<std::string::String>) -> Self {
        self.work_group = Some(input.into());
        self
    }
    /// <p>The workgroup to which the statement to be retrieved belongs.</p>
    pub fn set_work_group(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.work_group = input;
        self
    }
    /// Consumes the builder and constructs a [`GetPreparedStatementInput`](crate::operation::get_prepared_statement::GetPreparedStatementInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::get_prepared_statement::GetPreparedStatementInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::get_prepared_statement::GetPreparedStatementInput {
                statement_name: self.statement_name,
                work_group: self.work_group,
            },
        )
    }
}
