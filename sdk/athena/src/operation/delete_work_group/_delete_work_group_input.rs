// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DeleteWorkGroupInput {
    /// <p>The unique name of the workgroup to delete.</p>
    #[doc(hidden)]
    pub work_group: std::option::Option<std::string::String>,
    /// <p>The option to delete the workgroup and its contents even if the workgroup contains any named queries or query executions.</p>
    #[doc(hidden)]
    pub recursive_delete_option: std::option::Option<bool>,
}
impl DeleteWorkGroupInput {
    /// <p>The unique name of the workgroup to delete.</p>
    pub fn work_group(&self) -> std::option::Option<&str> {
        self.work_group.as_deref()
    }
    /// <p>The option to delete the workgroup and its contents even if the workgroup contains any named queries or query executions.</p>
    pub fn recursive_delete_option(&self) -> std::option::Option<bool> {
        self.recursive_delete_option
    }
}
impl DeleteWorkGroupInput {
    /// Creates a new builder-style object to manufacture [`DeleteWorkGroupInput`](crate::operation::delete_work_group::DeleteWorkGroupInput).
    pub fn builder() -> crate::operation::delete_work_group::builders::DeleteWorkGroupInputBuilder {
        crate::operation::delete_work_group::builders::DeleteWorkGroupInputBuilder::default()
    }
}

/// A builder for [`DeleteWorkGroupInput`](crate::operation::delete_work_group::DeleteWorkGroupInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DeleteWorkGroupInputBuilder {
    pub(crate) work_group: std::option::Option<std::string::String>,
    pub(crate) recursive_delete_option: std::option::Option<bool>,
}
impl DeleteWorkGroupInputBuilder {
    /// <p>The unique name of the workgroup to delete.</p>
    pub fn work_group(mut self, input: impl Into<std::string::String>) -> Self {
        self.work_group = Some(input.into());
        self
    }
    /// <p>The unique name of the workgroup to delete.</p>
    pub fn set_work_group(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.work_group = input;
        self
    }
    /// <p>The option to delete the workgroup and its contents even if the workgroup contains any named queries or query executions.</p>
    pub fn recursive_delete_option(mut self, input: bool) -> Self {
        self.recursive_delete_option = Some(input);
        self
    }
    /// <p>The option to delete the workgroup and its contents even if the workgroup contains any named queries or query executions.</p>
    pub fn set_recursive_delete_option(mut self, input: std::option::Option<bool>) -> Self {
        self.recursive_delete_option = input;
        self
    }
    /// Consumes the builder and constructs a [`DeleteWorkGroupInput`](crate::operation::delete_work_group::DeleteWorkGroupInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::delete_work_group::DeleteWorkGroupInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(crate::operation::delete_work_group::DeleteWorkGroupInput {
            work_group: self.work_group,
            recursive_delete_option: self.recursive_delete_option,
        })
    }
}
