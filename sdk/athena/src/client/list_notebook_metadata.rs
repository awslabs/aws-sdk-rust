// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListNotebookMetadata`](crate::client::fluent_builders::ListNotebookMetadata) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`filters(FilterDefinition)`](crate::client::fluent_builders::ListNotebookMetadata::filters) / [`set_filters(Option<FilterDefinition>)`](crate::client::fluent_builders::ListNotebookMetadata::set_filters): <p>Search filter string.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListNotebookMetadata::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListNotebookMetadata::set_next_token): <p>A token generated by the Athena service that specifies where to continue pagination if a previous request was truncated.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListNotebookMetadata::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListNotebookMetadata::set_max_results): <p>Specifies the maximum number of results to return.</p>
    ///   - [`work_group(impl Into<String>)`](crate::client::fluent_builders::ListNotebookMetadata::work_group) / [`set_work_group(Option<String>)`](crate::client::fluent_builders::ListNotebookMetadata::set_work_group): <p>The name of the Spark enabled workgroup to retrieve notebook metadata for.</p>
    /// - On success, responds with [`ListNotebookMetadataOutput`](crate::output::ListNotebookMetadataOutput) with field(s):
    ///   - [`next_token(Option<String>)`](crate::output::ListNotebookMetadataOutput::next_token): <p>A token generated by the Athena service that specifies where to continue pagination if a previous request was truncated. To obtain the next set of pages, pass in the <code>NextToken</code> from the response object of the previous page call.</p>
    ///   - [`notebook_metadata_list(Option<Vec<NotebookMetadata>>)`](crate::output::ListNotebookMetadataOutput::notebook_metadata_list): <p>The list of notebook metadata for the specified workgroup.</p>
    /// - On failure, responds with [`SdkError<ListNotebookMetadataError>`](crate::error::ListNotebookMetadataError)
    pub fn list_notebook_metadata(&self) -> crate::client::fluent_builders::ListNotebookMetadata {
        crate::client::fluent_builders::ListNotebookMetadata::new(self.handle.clone())
    }
}
