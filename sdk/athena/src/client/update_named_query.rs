// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateNamedQuery`](crate::operation::update_named_query::builders::UpdateNamedQueryFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`named_query_id(impl Into<String>)`](crate::operation::update_named_query::builders::UpdateNamedQueryFluentBuilder::named_query_id) / [`set_named_query_id(Option<String>)`](crate::operation::update_named_query::builders::UpdateNamedQueryFluentBuilder::set_named_query_id): <p>The unique identifier (UUID) of the query.</p>
    ///   - [`name(impl Into<String>)`](crate::operation::update_named_query::builders::UpdateNamedQueryFluentBuilder::name) / [`set_name(Option<String>)`](crate::operation::update_named_query::builders::UpdateNamedQueryFluentBuilder::set_name): <p>The name of the query.</p>
    ///   - [`description(impl Into<String>)`](crate::operation::update_named_query::builders::UpdateNamedQueryFluentBuilder::description) / [`set_description(Option<String>)`](crate::operation::update_named_query::builders::UpdateNamedQueryFluentBuilder::set_description): <p>The query description.</p>
    ///   - [`query_string(impl Into<String>)`](crate::operation::update_named_query::builders::UpdateNamedQueryFluentBuilder::query_string) / [`set_query_string(Option<String>)`](crate::operation::update_named_query::builders::UpdateNamedQueryFluentBuilder::set_query_string): <p>The contents of the query with all query statements.</p>
    /// - On success, responds with [`UpdateNamedQueryOutput`](crate::operation::update_named_query::UpdateNamedQueryOutput)
    /// - On failure, responds with [`SdkError<UpdateNamedQueryError>`](crate::operation::update_named_query::UpdateNamedQueryError)
    pub fn update_named_query(
        &self,
    ) -> crate::operation::update_named_query::builders::UpdateNamedQueryFluentBuilder {
        crate::operation::update_named_query::builders::UpdateNamedQueryFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
