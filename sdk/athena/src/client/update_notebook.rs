// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateNotebook`](crate::client::fluent_builders::UpdateNotebook) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`notebook_id(impl Into<String>)`](crate::client::fluent_builders::UpdateNotebook::notebook_id) / [`set_notebook_id(Option<String>)`](crate::client::fluent_builders::UpdateNotebook::set_notebook_id): <p>The ID of the notebook to update.</p>
    ///   - [`payload(impl Into<String>)`](crate::client::fluent_builders::UpdateNotebook::payload) / [`set_payload(Option<String>)`](crate::client::fluent_builders::UpdateNotebook::set_payload): <p>The updated content for the notebook.</p>
    ///   - [`r#type(NotebookType)`](crate::client::fluent_builders::UpdateNotebook::type) / [`set_type(Option<NotebookType>)`](crate::client::fluent_builders::UpdateNotebook::set_type): <p>The notebook content type. Currently, the only valid type is <code>IPYNB</code>.</p>
    ///   - [`session_id(impl Into<String>)`](crate::client::fluent_builders::UpdateNotebook::session_id) / [`set_session_id(Option<String>)`](crate::client::fluent_builders::UpdateNotebook::set_session_id): <p>The ID of the session in which the notebook will be updated.</p>
    ///   - [`client_request_token(impl Into<String>)`](crate::client::fluent_builders::UpdateNotebook::client_request_token) / [`set_client_request_token(Option<String>)`](crate::client::fluent_builders::UpdateNotebook::set_client_request_token): <p>A unique case-sensitive string used to ensure the request to create the notebook is idempotent (executes only once).</p> <important>   <p>This token is listed as not required because Amazon Web Services SDKs (for example the Amazon Web Services SDK for Java) auto-generate the token for you. If you are not using the Amazon Web Services SDK or the Amazon Web Services CLI, you must provide this token or the action will fail.</p>  </important>
    /// - On success, responds with [`UpdateNotebookOutput`](crate::output::UpdateNotebookOutput)
    /// - On failure, responds with [`SdkError<UpdateNotebookError>`](crate::error::UpdateNotebookError)
    pub fn update_notebook(&self) -> crate::client::fluent_builders::UpdateNotebook {
        crate::client::fluent_builders::UpdateNotebook::new(self.handle.clone())
    }
}
