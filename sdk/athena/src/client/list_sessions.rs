// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListSessions`](crate::operation::list_sessions::builders::ListSessionsFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::list_sessions::builders::ListSessionsFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`work_group(impl Into<String>)`](crate::operation::list_sessions::builders::ListSessionsFluentBuilder::work_group) / [`set_work_group(Option<String>)`](crate::operation::list_sessions::builders::ListSessionsFluentBuilder::set_work_group):<br>required: **true**<br><p>The workgroup to which the session belongs.</p><br>
    ///   - [`state_filter(SessionState)`](crate::operation::list_sessions::builders::ListSessionsFluentBuilder::state_filter) / [`set_state_filter(Option<SessionState>)`](crate::operation::list_sessions::builders::ListSessionsFluentBuilder::set_state_filter):<br>required: **false**<br><p>A filter for a specific session state. A description of each state follows.</p>  <p> <code>CREATING</code> - The session is being started, including acquiring resources.</p>  <p> <code>CREATED</code> - The session has been started.</p>  <p> <code>IDLE</code> - The session is able to accept a calculation.</p>  <p> <code>BUSY</code> - The session is processing another task and is unable to accept a calculation.</p>  <p> <code>TERMINATING</code> - The session is in the process of shutting down.</p>  <p> <code>TERMINATED</code> - The session and its resources are no longer running.</p>  <p> <code>DEGRADED</code> - The session has no healthy coordinators.</p>  <p> <code>FAILED</code> - Due to a failure, the session and its resources are no longer running.</p><br>
    ///   - [`max_results(i32)`](crate::operation::list_sessions::builders::ListSessionsFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::list_sessions::builders::ListSessionsFluentBuilder::set_max_results):<br>required: **false**<br><p>The maximum number of sessions to return.</p><br>
    ///   - [`next_token(impl Into<String>)`](crate::operation::list_sessions::builders::ListSessionsFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::list_sessions::builders::ListSessionsFluentBuilder::set_next_token):<br>required: **false**<br><p>A token generated by the Athena service that specifies where to continue pagination if a previous request was truncated. To obtain the next set of pages, pass in the <code>NextToken</code> from the response object of the previous page call.</p><br>
    /// - On success, responds with [`ListSessionsOutput`](crate::operation::list_sessions::ListSessionsOutput) with field(s):
    ///   - [`next_token(Option<String>)`](crate::operation::list_sessions::ListSessionsOutput::next_token): <p>A token generated by the Athena service that specifies where to continue pagination if a previous request was truncated. To obtain the next set of pages, pass in the <code>NextToken</code> from the response object of the previous page call.</p>
    ///   - [`sessions(Option<Vec::<SessionSummary>>)`](crate::operation::list_sessions::ListSessionsOutput::sessions): <p>A list of sessions.</p>
    /// - On failure, responds with [`SdkError<ListSessionsError>`](crate::operation::list_sessions::ListSessionsError)
    pub fn list_sessions(&self) -> crate::operation::list_sessions::builders::ListSessionsFluentBuilder {
        crate::operation::list_sessions::builders::ListSessionsFluentBuilder::new(self.handle.clone())
    }
}
