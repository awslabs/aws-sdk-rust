// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListDatabases`](crate::operation::list_databases::builders::ListDatabasesFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::list_databases::builders::ListDatabasesFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`catalog_name(impl Into<String>)`](crate::operation::list_databases::builders::ListDatabasesFluentBuilder::catalog_name) / [`set_catalog_name(Option<String>)`](crate::operation::list_databases::builders::ListDatabasesFluentBuilder::set_catalog_name): <p>The name of the data catalog that contains the databases to return.</p>
    ///   - [`next_token(impl Into<String>)`](crate::operation::list_databases::builders::ListDatabasesFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::list_databases::builders::ListDatabasesFluentBuilder::set_next_token): <p>A token generated by the Athena service that specifies where to continue pagination if a previous request was truncated. To obtain the next set of pages, pass in the <code>NextToken</code> from the response object of the previous page call.</p>
    ///   - [`max_results(i32)`](crate::operation::list_databases::builders::ListDatabasesFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::list_databases::builders::ListDatabasesFluentBuilder::set_max_results): <p>Specifies the maximum number of results to return.</p>
    /// - On success, responds with [`ListDatabasesOutput`](crate::operation::list_databases::ListDatabasesOutput) with field(s):
    ///   - [`database_list(Option<Vec<Database>>)`](crate::operation::list_databases::ListDatabasesOutput::database_list): <p>A list of databases from a data catalog.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::list_databases::ListDatabasesOutput::next_token): <p>A token generated by the Athena service that specifies where to continue pagination if a previous request was truncated. To obtain the next set of pages, pass in the NextToken from the response object of the previous page call.</p>
    /// - On failure, responds with [`SdkError<ListDatabasesError>`](crate::operation::list_databases::ListDatabasesError)
    pub fn list_databases(
        &self,
    ) -> crate::operation::list_databases::builders::ListDatabasesFluentBuilder {
        crate::operation::list_databases::builders::ListDatabasesFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
