// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListExecutors`](crate::client::fluent_builders::ListExecutors) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListExecutors::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`session_id(impl Into<String>)`](crate::client::fluent_builders::ListExecutors::session_id) / [`set_session_id(Option<String>)`](crate::client::fluent_builders::ListExecutors::set_session_id): <p>The session ID.</p>
    ///   - [`executor_state_filter(ExecutorState)`](crate::client::fluent_builders::ListExecutors::executor_state_filter) / [`set_executor_state_filter(Option<ExecutorState>)`](crate::client::fluent_builders::ListExecutors::set_executor_state_filter): <p>A filter for a specific executor state. A description of each state follows.</p>  <p> <code>CREATING</code> - The executor is being started, including acquiring resources.</p>  <p> <code>CREATED</code> - The executor has been started.</p>  <p> <code>REGISTERED</code> - The executor has been registered.</p>  <p> <code>TERMINATING</code> - The executor is in the process of shutting down.</p>  <p> <code>TERMINATED</code> - The executor is no longer running.</p>  <p> <code>FAILED</code> - Due to a failure, the executor is no longer running.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListExecutors::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListExecutors::set_max_results): <p>The maximum number of executors to return.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListExecutors::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListExecutors::set_next_token): <p>A token generated by the Athena service that specifies where to continue pagination if a previous request was truncated. To obtain the next set of pages, pass in the <code>NextToken</code> from the response object of the previous page call.</p>
    /// - On success, responds with [`ListExecutorsOutput`](crate::output::ListExecutorsOutput) with field(s):
    ///   - [`session_id(Option<String>)`](crate::output::ListExecutorsOutput::session_id): <p>The session ID.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListExecutorsOutput::next_token): <p>A token generated by the Athena service that specifies where to continue pagination if a previous request was truncated. To obtain the next set of pages, pass in the <code>NextToken</code> from the response object of the previous page call.</p>
    ///   - [`executors_summary(Option<Vec<ExecutorsSummary>>)`](crate::output::ListExecutorsOutput::executors_summary): <p>Contains summary information about the executor.</p>
    /// - On failure, responds with [`SdkError<ListExecutorsError>`](crate::error::ListExecutorsError)
    pub fn list_executors(&self) -> crate::client::fluent_builders::ListExecutors {
        crate::client::fluent_builders::ListExecutors::new(self.handle.clone())
    }
}
