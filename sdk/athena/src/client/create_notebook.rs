// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateNotebook`](crate::operation::create_notebook::builders::CreateNotebookFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`work_group(impl Into<String>)`](crate::operation::create_notebook::builders::CreateNotebookFluentBuilder::work_group) / [`set_work_group(Option<String>)`](crate::operation::create_notebook::builders::CreateNotebookFluentBuilder::set_work_group):<br>required: **true**<br><p>The name of the Spark enabled workgroup in which the notebook will be created.</p><br>
    ///   - [`name(impl Into<String>)`](crate::operation::create_notebook::builders::CreateNotebookFluentBuilder::name) / [`set_name(Option<String>)`](crate::operation::create_notebook::builders::CreateNotebookFluentBuilder::set_name):<br>required: **true**<br><p>The name of the <code>ipynb</code> file to be created in the Spark workgroup, without the <code>.ipynb</code> extension.</p><br>
    ///   - [`client_request_token(impl Into<String>)`](crate::operation::create_notebook::builders::CreateNotebookFluentBuilder::client_request_token) / [`set_client_request_token(Option<String>)`](crate::operation::create_notebook::builders::CreateNotebookFluentBuilder::set_client_request_token):<br>required: **false**<br><p>A unique case-sensitive string used to ensure the request to create the notebook is idempotent (executes only once).</p> <important>   <p>This token is listed as not required because Amazon Web Services SDKs (for example the Amazon Web Services SDK for Java) auto-generate the token for you. If you are not using the Amazon Web Services SDK or the Amazon Web Services CLI, you must provide this token or the action will fail.</p>  </important><br>
    /// - On success, responds with [`CreateNotebookOutput`](crate::operation::create_notebook::CreateNotebookOutput) with field(s):
    ///   - [`notebook_id(Option<String>)`](crate::operation::create_notebook::CreateNotebookOutput::notebook_id): <p>A unique identifier for the notebook.</p>
    /// - On failure, responds with [`SdkError<CreateNotebookError>`](crate::operation::create_notebook::CreateNotebookError)
    pub fn create_notebook(&self) -> crate::operation::create_notebook::builders::CreateNotebookFluentBuilder {
        crate::operation::create_notebook::builders::CreateNotebookFluentBuilder::new(self.handle.clone())
    }
}
