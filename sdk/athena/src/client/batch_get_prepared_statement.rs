// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`BatchGetPreparedStatement`](crate::client::fluent_builders::BatchGetPreparedStatement) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`prepared_statement_names(Vec<String>)`](crate::client::fluent_builders::BatchGetPreparedStatement::prepared_statement_names) / [`set_prepared_statement_names(Option<Vec<String>>)`](crate::client::fluent_builders::BatchGetPreparedStatement::set_prepared_statement_names): <p>A list of prepared statement names to return.</p>
    ///   - [`work_group(impl Into<String>)`](crate::client::fluent_builders::BatchGetPreparedStatement::work_group) / [`set_work_group(Option<String>)`](crate::client::fluent_builders::BatchGetPreparedStatement::set_work_group): <p>The name of the workgroup to which the prepared statements belong.</p>
    /// - On success, responds with [`BatchGetPreparedStatementOutput`](crate::output::BatchGetPreparedStatementOutput) with field(s):
    ///   - [`prepared_statements(Option<Vec<PreparedStatement>>)`](crate::output::BatchGetPreparedStatementOutput::prepared_statements): <p>The list of prepared statements returned.</p>
    ///   - [`unprocessed_prepared_statement_names(Option<Vec<UnprocessedPreparedStatementName>>)`](crate::output::BatchGetPreparedStatementOutput::unprocessed_prepared_statement_names): <p>A list of one or more prepared statements that were requested but could not be returned.</p>
    /// - On failure, responds with [`SdkError<BatchGetPreparedStatementError>`](crate::error::BatchGetPreparedStatementError)
    pub fn batch_get_prepared_statement(
        &self,
    ) -> crate::client::fluent_builders::BatchGetPreparedStatement {
        crate::client::fluent_builders::BatchGetPreparedStatement::new(self.handle.clone())
    }
}
