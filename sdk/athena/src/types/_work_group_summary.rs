// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The summary information for the workgroup, which includes its name, state, description, and the date and time it was created.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct WorkGroupSummary {
    /// <p>The name of the workgroup.</p>
    #[doc(hidden)]
    pub name: std::option::Option<std::string::String>,
    /// <p>The state of the workgroup.</p>
    #[doc(hidden)]
    pub state: std::option::Option<crate::types::WorkGroupState>,
    /// <p>The workgroup description.</p>
    #[doc(hidden)]
    pub description: std::option::Option<std::string::String>,
    /// <p>The workgroup creation date and time.</p>
    #[doc(hidden)]
    pub creation_time: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>The engine version setting for all queries on the workgroup. Queries on the <code>AmazonAthenaPreviewFunctionality</code> workgroup run on the preview engine regardless of this setting.</p>
    #[doc(hidden)]
    pub engine_version: std::option::Option<crate::types::EngineVersion>,
}
impl WorkGroupSummary {
    /// <p>The name of the workgroup.</p>
    pub fn name(&self) -> std::option::Option<&str> {
        self.name.as_deref()
    }
    /// <p>The state of the workgroup.</p>
    pub fn state(&self) -> std::option::Option<&crate::types::WorkGroupState> {
        self.state.as_ref()
    }
    /// <p>The workgroup description.</p>
    pub fn description(&self) -> std::option::Option<&str> {
        self.description.as_deref()
    }
    /// <p>The workgroup creation date and time.</p>
    pub fn creation_time(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.creation_time.as_ref()
    }
    /// <p>The engine version setting for all queries on the workgroup. Queries on the <code>AmazonAthenaPreviewFunctionality</code> workgroup run on the preview engine regardless of this setting.</p>
    pub fn engine_version(&self) -> std::option::Option<&crate::types::EngineVersion> {
        self.engine_version.as_ref()
    }
}
impl WorkGroupSummary {
    /// Creates a new builder-style object to manufacture [`WorkGroupSummary`](crate::types::WorkGroupSummary).
    pub fn builder() -> crate::types::builders::WorkGroupSummaryBuilder {
        crate::types::builders::WorkGroupSummaryBuilder::default()
    }
}

/// A builder for [`WorkGroupSummary`](crate::types::WorkGroupSummary).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct WorkGroupSummaryBuilder {
    pub(crate) name: std::option::Option<std::string::String>,
    pub(crate) state: std::option::Option<crate::types::WorkGroupState>,
    pub(crate) description: std::option::Option<std::string::String>,
    pub(crate) creation_time: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) engine_version: std::option::Option<crate::types::EngineVersion>,
}
impl WorkGroupSummaryBuilder {
    /// <p>The name of the workgroup.</p>
    pub fn name(mut self, input: impl Into<std::string::String>) -> Self {
        self.name = Some(input.into());
        self
    }
    /// <p>The name of the workgroup.</p>
    pub fn set_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>The state of the workgroup.</p>
    pub fn state(mut self, input: crate::types::WorkGroupState) -> Self {
        self.state = Some(input);
        self
    }
    /// <p>The state of the workgroup.</p>
    pub fn set_state(mut self, input: std::option::Option<crate::types::WorkGroupState>) -> Self {
        self.state = input;
        self
    }
    /// <p>The workgroup description.</p>
    pub fn description(mut self, input: impl Into<std::string::String>) -> Self {
        self.description = Some(input.into());
        self
    }
    /// <p>The workgroup description.</p>
    pub fn set_description(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.description = input;
        self
    }
    /// <p>The workgroup creation date and time.</p>
    pub fn creation_time(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.creation_time = Some(input);
        self
    }
    /// <p>The workgroup creation date and time.</p>
    pub fn set_creation_time(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.creation_time = input;
        self
    }
    /// <p>The engine version setting for all queries on the workgroup. Queries on the <code>AmazonAthenaPreviewFunctionality</code> workgroup run on the preview engine regardless of this setting.</p>
    pub fn engine_version(mut self, input: crate::types::EngineVersion) -> Self {
        self.engine_version = Some(input);
        self
    }
    /// <p>The engine version setting for all queries on the workgroup. Queries on the <code>AmazonAthenaPreviewFunctionality</code> workgroup run on the preview engine regardless of this setting.</p>
    pub fn set_engine_version(
        mut self,
        input: std::option::Option<crate::types::EngineVersion>,
    ) -> Self {
        self.engine_version = input;
        self
    }
    /// Consumes the builder and constructs a [`WorkGroupSummary`](crate::types::WorkGroupSummary).
    pub fn build(self) -> crate::types::WorkGroupSummary {
        crate::types::WorkGroupSummary {
            name: self.name,
            state: self.state,
            description: self.description,
            creation_time: self.creation_time,
            engine_version: self.engine_version,
        }
    }
}
