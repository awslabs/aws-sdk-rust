// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains statistics for a notebook session.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct SessionStatistics {
    /// <p>The data processing unit execution time for a session in milliseconds.</p>
    #[doc(hidden)]
    pub dpu_execution_in_millis: std::option::Option<i64>,
}
impl SessionStatistics {
    /// <p>The data processing unit execution time for a session in milliseconds.</p>
    pub fn dpu_execution_in_millis(&self) -> std::option::Option<i64> {
        self.dpu_execution_in_millis
    }
}
impl SessionStatistics {
    /// Creates a new builder-style object to manufacture [`SessionStatistics`](crate::types::SessionStatistics).
    pub fn builder() -> crate::types::builders::SessionStatisticsBuilder {
        crate::types::builders::SessionStatisticsBuilder::default()
    }
}

/// A builder for [`SessionStatistics`](crate::types::SessionStatistics).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct SessionStatisticsBuilder {
    pub(crate) dpu_execution_in_millis: std::option::Option<i64>,
}
impl SessionStatisticsBuilder {
    /// <p>The data processing unit execution time for a session in milliseconds.</p>
    pub fn dpu_execution_in_millis(mut self, input: i64) -> Self {
        self.dpu_execution_in_millis = Some(input);
        self
    }
    /// <p>The data processing unit execution time for a session in milliseconds.</p>
    pub fn set_dpu_execution_in_millis(mut self, input: std::option::Option<i64>) -> Self {
        self.dpu_execution_in_millis = input;
        self
    }
    /// Consumes the builder and constructs a [`SessionStatistics`](crate::types::SessionStatistics).
    pub fn build(self) -> crate::types::SessionStatistics {
        crate::types::SessionStatistics {
            dpu_execution_in_millis: self.dpu_execution_in_millis,
        }
    }
}
