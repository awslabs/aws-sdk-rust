// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A piece of data (a field in the table).</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct Datum {
    /// <p>The value of the datum.</p>
    #[doc(hidden)]
    pub var_char_value: std::option::Option<std::string::String>,
}
impl Datum {
    /// <p>The value of the datum.</p>
    pub fn var_char_value(&self) -> std::option::Option<&str> {
        self.var_char_value.as_deref()
    }
}
impl Datum {
    /// Creates a new builder-style object to manufacture [`Datum`](crate::types::Datum).
    pub fn builder() -> crate::types::builders::DatumBuilder {
        crate::types::builders::DatumBuilder::default()
    }
}

/// A builder for [`Datum`](crate::types::Datum).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DatumBuilder {
    pub(crate) var_char_value: std::option::Option<std::string::String>,
}
impl DatumBuilder {
    /// <p>The value of the datum.</p>
    pub fn var_char_value(mut self, input: impl Into<std::string::String>) -> Self {
        self.var_char_value = Some(input.into());
        self
    }
    /// <p>The value of the datum.</p>
    pub fn set_var_char_value(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.var_char_value = input;
        self
    }
    /// Consumes the builder and constructs a [`Datum`](crate::types::Datum).
    pub fn build(self) -> crate::types::Datum {
        crate::types::Datum {
            var_char_value: self.var_char_value,
        }
    }
}
