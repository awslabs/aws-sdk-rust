// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ListTagsForCertificateInput {
    /// <p>String that contains the ARN of the ACM certificate for which you want to list the tags. This must have the following form:</p>
    /// <p> <code>arn:aws:acm:region:123456789012:certificate/12345678-1234-1234-1234-123456789012</code> </p>
    /// <p>For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs)</a>.</p>
    #[doc(hidden)]
    pub certificate_arn: std::option::Option<std::string::String>,
}
impl ListTagsForCertificateInput {
    /// <p>String that contains the ARN of the ACM certificate for which you want to list the tags. This must have the following form:</p>
    /// <p> <code>arn:aws:acm:region:123456789012:certificate/12345678-1234-1234-1234-123456789012</code> </p>
    /// <p>For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs)</a>.</p>
    pub fn certificate_arn(&self) -> std::option::Option<&str> {
        self.certificate_arn.as_deref()
    }
}
impl ListTagsForCertificateInput {
    /// Creates a new builder-style object to manufacture [`ListTagsForCertificateInput`](crate::operation::list_tags_for_certificate::ListTagsForCertificateInput).
    pub fn builder(
    ) -> crate::operation::list_tags_for_certificate::builders::ListTagsForCertificateInputBuilder
    {
        crate::operation::list_tags_for_certificate::builders::ListTagsForCertificateInputBuilder::default()
    }
}

/// A builder for [`ListTagsForCertificateInput`](crate::operation::list_tags_for_certificate::ListTagsForCertificateInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ListTagsForCertificateInputBuilder {
    pub(crate) certificate_arn: std::option::Option<std::string::String>,
}
impl ListTagsForCertificateInputBuilder {
    /// <p>String that contains the ARN of the ACM certificate for which you want to list the tags. This must have the following form:</p>
    /// <p> <code>arn:aws:acm:region:123456789012:certificate/12345678-1234-1234-1234-123456789012</code> </p>
    /// <p>For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs)</a>.</p>
    pub fn certificate_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.certificate_arn = Some(input.into());
        self
    }
    /// <p>String that contains the ARN of the ACM certificate for which you want to list the tags. This must have the following form:</p>
    /// <p> <code>arn:aws:acm:region:123456789012:certificate/12345678-1234-1234-1234-123456789012</code> </p>
    /// <p>For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs)</a>.</p>
    pub fn set_certificate_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.certificate_arn = input;
        self
    }
    /// Consumes the builder and constructs a [`ListTagsForCertificateInput`](crate::operation::list_tags_for_certificate::ListTagsForCertificateInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::list_tags_for_certificate::ListTagsForCertificateInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::list_tags_for_certificate::ListTagsForCertificateInput {
                certificate_arn: self.certificate_arn,
            },
        )
    }
}
