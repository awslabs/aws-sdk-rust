// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) mod shape_add_tags_to_certificate;

pub fn parse_http_error_metadata(
    response: &http::Response<bytes::Bytes>,
) -> Result<
    aws_smithy_types::error::metadata::Builder,
    aws_smithy_json::deserialize::error::DeserializeError,
> {
    crate::json_errors::parse_error_metadata(response.body(), response.headers())
}

pub(crate) mod shape_delete_certificate;

pub(crate) mod shape_describe_certificate;

pub(crate) mod shape_export_certificate;

pub(crate) mod shape_get_account_configuration;

pub(crate) mod shape_get_certificate;

pub(crate) mod shape_import_certificate;

pub(crate) mod shape_list_certificates;

pub(crate) mod shape_list_tags_for_certificate;

pub(crate) mod shape_put_account_configuration;

pub(crate) mod shape_remove_tags_from_certificate;

pub(crate) mod shape_renew_certificate;

pub(crate) mod shape_request_certificate;

pub(crate) mod shape_resend_validation_email;

pub(crate) mod shape_update_certificate_options;

pub(crate) fn or_empty_doc(data: &[u8]) -> &[u8] {
    if data.is_empty() {
        b"{}"
    } else {
        data
    }
}

pub(crate) mod shape_access_denied_exception;

pub(crate) mod shape_add_tags_to_certificate_input;

pub(crate) mod shape_conflict_exception;

pub(crate) mod shape_delete_certificate_input;

pub(crate) mod shape_describe_certificate_input;

pub(crate) mod shape_export_certificate_input;

pub(crate) mod shape_get_certificate_input;

pub(crate) mod shape_import_certificate_input;

pub(crate) mod shape_invalid_args_exception;

pub(crate) mod shape_invalid_arn_exception;

pub(crate) mod shape_invalid_domain_validation_options_exception;

pub(crate) mod shape_invalid_parameter_exception;

pub(crate) mod shape_invalid_state_exception;

pub(crate) mod shape_invalid_tag_exception;

pub(crate) mod shape_limit_exceeded_exception;

pub(crate) mod shape_list_certificates_input;

pub(crate) mod shape_list_tags_for_certificate_input;

pub(crate) mod shape_put_account_configuration_input;

pub(crate) mod shape_remove_tags_from_certificate_input;

pub(crate) mod shape_renew_certificate_input;

pub(crate) mod shape_request_certificate_input;

pub(crate) mod shape_request_in_progress_exception;

pub(crate) mod shape_resend_validation_email_input;

pub(crate) mod shape_resource_in_use_exception;

pub(crate) mod shape_resource_not_found_exception;

pub(crate) mod shape_tag_policy_exception;

pub(crate) mod shape_throttling_exception;

pub(crate) mod shape_too_many_tags_exception;

pub(crate) mod shape_update_certificate_options_input;

pub(crate) mod shape_validation_exception;

pub(crate) mod shape_certificate_detail;

pub(crate) mod shape_certificate_options;

pub(crate) mod shape_certificate_summary_list;

pub(crate) mod shape_domain_validation_option;

pub(crate) mod shape_expiry_events_configuration;

pub(crate) mod shape_filters;

pub(crate) mod shape_tag;

pub(crate) mod shape_tag_list;

pub(crate) mod shape_certificate_summary;

pub(crate) mod shape_domain_list;

pub(crate) mod shape_domain_validation_list;

pub(crate) mod shape_extended_key_usage_list;

pub(crate) mod shape_in_use_list;

pub(crate) mod shape_key_usage_list;

pub(crate) mod shape_renewal_summary;

pub(crate) mod shape_domain_validation;

pub(crate) mod shape_extended_key_usage;

pub(crate) mod shape_extended_key_usage_names;

pub(crate) mod shape_key_usage;

pub(crate) mod shape_key_usage_names;

pub(crate) mod shape_resource_record;

pub(crate) mod shape_validation_email_list;
