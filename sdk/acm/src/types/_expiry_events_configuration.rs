// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Object containing expiration events options associated with an Amazon Web Services account.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ExpiryEventsConfiguration {
    /// <p>Specifies the number of days prior to certificate expiration when ACM starts generating <code>EventBridge</code> events. ACM sends one event per day per certificate until the certificate expires. By default, accounts receive events starting 45 days before certificate expiration.</p>
    #[doc(hidden)]
    pub days_before_expiry: std::option::Option<i32>,
}
impl ExpiryEventsConfiguration {
    /// <p>Specifies the number of days prior to certificate expiration when ACM starts generating <code>EventBridge</code> events. ACM sends one event per day per certificate until the certificate expires. By default, accounts receive events starting 45 days before certificate expiration.</p>
    pub fn days_before_expiry(&self) -> std::option::Option<i32> {
        self.days_before_expiry
    }
}
impl ExpiryEventsConfiguration {
    /// Creates a new builder-style object to manufacture [`ExpiryEventsConfiguration`](crate::types::ExpiryEventsConfiguration).
    pub fn builder() -> crate::types::builders::ExpiryEventsConfigurationBuilder {
        crate::types::builders::ExpiryEventsConfigurationBuilder::default()
    }
}

/// A builder for [`ExpiryEventsConfiguration`](crate::types::ExpiryEventsConfiguration).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ExpiryEventsConfigurationBuilder {
    pub(crate) days_before_expiry: std::option::Option<i32>,
}
impl ExpiryEventsConfigurationBuilder {
    /// <p>Specifies the number of days prior to certificate expiration when ACM starts generating <code>EventBridge</code> events. ACM sends one event per day per certificate until the certificate expires. By default, accounts receive events starting 45 days before certificate expiration.</p>
    pub fn days_before_expiry(mut self, input: i32) -> Self {
        self.days_before_expiry = Some(input);
        self
    }
    /// <p>Specifies the number of days prior to certificate expiration when ACM starts generating <code>EventBridge</code> events. ACM sends one event per day per certificate until the certificate expires. By default, accounts receive events starting 45 days before certificate expiration.</p>
    pub fn set_days_before_expiry(mut self, input: std::option::Option<i32>) -> Self {
        self.days_before_expiry = input;
        self
    }
    /// Consumes the builder and constructs a [`ExpiryEventsConfiguration`](crate::types::ExpiryEventsConfiguration).
    pub fn build(self) -> crate::types::ExpiryEventsConfiguration {
        crate::types::ExpiryEventsConfiguration {
            days_before_expiry: self.days_before_expiry,
        }
    }
}
