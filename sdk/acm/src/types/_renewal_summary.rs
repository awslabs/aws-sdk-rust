// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains information about the status of ACM's <a href="https://docs.aws.amazon.com/acm/latest/userguide/acm-renewal.html">managed renewal</a> for the certificate. This structure exists only when the certificate type is <code>AMAZON_ISSUED</code>.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct RenewalSummary {
    /// <p>The status of ACM's <a href="https://docs.aws.amazon.com/acm/latest/userguide/acm-renewal.html">managed renewal</a> of the certificate.</p>
    #[doc(hidden)]
    pub renewal_status: std::option::Option<crate::types::RenewalStatus>,
    /// <p>Contains information about the validation of each domain name in the certificate, as it pertains to ACM's <a href="https://docs.aws.amazon.com/acm/latest/userguide/acm-renewal.html">managed renewal</a>. This is different from the initial validation that occurs as a result of the <code>RequestCertificate</code> request. This field exists only when the certificate type is <code>AMAZON_ISSUED</code>.</p>
    #[doc(hidden)]
    pub domain_validation_options:
        std::option::Option<std::vec::Vec<crate::types::DomainValidation>>,
    /// <p>The reason that a renewal request was unsuccessful.</p>
    #[doc(hidden)]
    pub renewal_status_reason: std::option::Option<crate::types::FailureReason>,
    /// <p>The time at which the renewal summary was last updated.</p>
    #[doc(hidden)]
    pub updated_at: std::option::Option<aws_smithy_types::DateTime>,
}
impl RenewalSummary {
    /// <p>The status of ACM's <a href="https://docs.aws.amazon.com/acm/latest/userguide/acm-renewal.html">managed renewal</a> of the certificate.</p>
    pub fn renewal_status(&self) -> std::option::Option<&crate::types::RenewalStatus> {
        self.renewal_status.as_ref()
    }
    /// <p>Contains information about the validation of each domain name in the certificate, as it pertains to ACM's <a href="https://docs.aws.amazon.com/acm/latest/userguide/acm-renewal.html">managed renewal</a>. This is different from the initial validation that occurs as a result of the <code>RequestCertificate</code> request. This field exists only when the certificate type is <code>AMAZON_ISSUED</code>.</p>
    pub fn domain_validation_options(
        &self,
    ) -> std::option::Option<&[crate::types::DomainValidation]> {
        self.domain_validation_options.as_deref()
    }
    /// <p>The reason that a renewal request was unsuccessful.</p>
    pub fn renewal_status_reason(&self) -> std::option::Option<&crate::types::FailureReason> {
        self.renewal_status_reason.as_ref()
    }
    /// <p>The time at which the renewal summary was last updated.</p>
    pub fn updated_at(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.updated_at.as_ref()
    }
}
impl RenewalSummary {
    /// Creates a new builder-style object to manufacture [`RenewalSummary`](crate::types::RenewalSummary).
    pub fn builder() -> crate::types::builders::RenewalSummaryBuilder {
        crate::types::builders::RenewalSummaryBuilder::default()
    }
}

/// A builder for [`RenewalSummary`](crate::types::RenewalSummary).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct RenewalSummaryBuilder {
    pub(crate) renewal_status: std::option::Option<crate::types::RenewalStatus>,
    pub(crate) domain_validation_options:
        std::option::Option<std::vec::Vec<crate::types::DomainValidation>>,
    pub(crate) renewal_status_reason: std::option::Option<crate::types::FailureReason>,
    pub(crate) updated_at: std::option::Option<aws_smithy_types::DateTime>,
}
impl RenewalSummaryBuilder {
    /// <p>The status of ACM's <a href="https://docs.aws.amazon.com/acm/latest/userguide/acm-renewal.html">managed renewal</a> of the certificate.</p>
    pub fn renewal_status(mut self, input: crate::types::RenewalStatus) -> Self {
        self.renewal_status = Some(input);
        self
    }
    /// <p>The status of ACM's <a href="https://docs.aws.amazon.com/acm/latest/userguide/acm-renewal.html">managed renewal</a> of the certificate.</p>
    pub fn set_renewal_status(
        mut self,
        input: std::option::Option<crate::types::RenewalStatus>,
    ) -> Self {
        self.renewal_status = input;
        self
    }
    /// Appends an item to `domain_validation_options`.
    ///
    /// To override the contents of this collection use [`set_domain_validation_options`](Self::set_domain_validation_options).
    ///
    /// <p>Contains information about the validation of each domain name in the certificate, as it pertains to ACM's <a href="https://docs.aws.amazon.com/acm/latest/userguide/acm-renewal.html">managed renewal</a>. This is different from the initial validation that occurs as a result of the <code>RequestCertificate</code> request. This field exists only when the certificate type is <code>AMAZON_ISSUED</code>.</p>
    pub fn domain_validation_options(mut self, input: crate::types::DomainValidation) -> Self {
        let mut v = self.domain_validation_options.unwrap_or_default();
        v.push(input);
        self.domain_validation_options = Some(v);
        self
    }
    /// <p>Contains information about the validation of each domain name in the certificate, as it pertains to ACM's <a href="https://docs.aws.amazon.com/acm/latest/userguide/acm-renewal.html">managed renewal</a>. This is different from the initial validation that occurs as a result of the <code>RequestCertificate</code> request. This field exists only when the certificate type is <code>AMAZON_ISSUED</code>.</p>
    pub fn set_domain_validation_options(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::DomainValidation>>,
    ) -> Self {
        self.domain_validation_options = input;
        self
    }
    /// <p>The reason that a renewal request was unsuccessful.</p>
    pub fn renewal_status_reason(mut self, input: crate::types::FailureReason) -> Self {
        self.renewal_status_reason = Some(input);
        self
    }
    /// <p>The reason that a renewal request was unsuccessful.</p>
    pub fn set_renewal_status_reason(
        mut self,
        input: std::option::Option<crate::types::FailureReason>,
    ) -> Self {
        self.renewal_status_reason = input;
        self
    }
    /// <p>The time at which the renewal summary was last updated.</p>
    pub fn updated_at(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.updated_at = Some(input);
        self
    }
    /// <p>The time at which the renewal summary was last updated.</p>
    pub fn set_updated_at(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.updated_at = input;
        self
    }
    /// Consumes the builder and constructs a [`RenewalSummary`](crate::types::RenewalSummary).
    pub fn build(self) -> crate::types::RenewalSummary {
        crate::types::RenewalSummary {
            renewal_status: self.renewal_status,
            domain_validation_options: self.domain_validation_options,
            renewal_status_reason: self.renewal_status_reason,
            updated_at: self.updated_at,
        }
    }
}
