// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains the parameters for ReportTaskProgress.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ReportTaskProgressInput {
    /// <p>The ID of the task assigned to the task runner. This value is provided in the response for <code>PollForTask</code>.</p>
    #[doc(hidden)]
    pub task_id: std::option::Option<std::string::String>,
    /// <p>Key-value pairs that define the properties of the ReportTaskProgressInput object.</p>
    #[doc(hidden)]
    pub fields: std::option::Option<std::vec::Vec<crate::types::Field>>,
}
impl ReportTaskProgressInput {
    /// <p>The ID of the task assigned to the task runner. This value is provided in the response for <code>PollForTask</code>.</p>
    pub fn task_id(&self) -> std::option::Option<&str> {
        self.task_id.as_deref()
    }
    /// <p>Key-value pairs that define the properties of the ReportTaskProgressInput object.</p>
    pub fn fields(&self) -> std::option::Option<&[crate::types::Field]> {
        self.fields.as_deref()
    }
}
impl ReportTaskProgressInput {
    /// Creates a new builder-style object to manufacture [`ReportTaskProgressInput`](crate::operation::report_task_progress::ReportTaskProgressInput).
    pub fn builder(
    ) -> crate::operation::report_task_progress::builders::ReportTaskProgressInputBuilder {
        crate::operation::report_task_progress::builders::ReportTaskProgressInputBuilder::default()
    }
}

/// A builder for [`ReportTaskProgressInput`](crate::operation::report_task_progress::ReportTaskProgressInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ReportTaskProgressInputBuilder {
    pub(crate) task_id: std::option::Option<std::string::String>,
    pub(crate) fields: std::option::Option<std::vec::Vec<crate::types::Field>>,
}
impl ReportTaskProgressInputBuilder {
    /// <p>The ID of the task assigned to the task runner. This value is provided in the response for <code>PollForTask</code>.</p>
    pub fn task_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.task_id = Some(input.into());
        self
    }
    /// <p>The ID of the task assigned to the task runner. This value is provided in the response for <code>PollForTask</code>.</p>
    pub fn set_task_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.task_id = input;
        self
    }
    /// Appends an item to `fields`.
    ///
    /// To override the contents of this collection use [`set_fields`](Self::set_fields).
    ///
    /// <p>Key-value pairs that define the properties of the ReportTaskProgressInput object.</p>
    pub fn fields(mut self, input: crate::types::Field) -> Self {
        let mut v = self.fields.unwrap_or_default();
        v.push(input);
        self.fields = Some(v);
        self
    }
    /// <p>Key-value pairs that define the properties of the ReportTaskProgressInput object.</p>
    pub fn set_fields(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::Field>>,
    ) -> Self {
        self.fields = input;
        self
    }
    /// Consumes the builder and constructs a [`ReportTaskProgressInput`](crate::operation::report_task_progress::ReportTaskProgressInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::report_task_progress::ReportTaskProgressInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::report_task_progress::ReportTaskProgressInput {
                task_id: self.task_id,
                fields: self.fields,
            },
        )
    }
}
