// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains the parameters for ValidatePipelineDefinition.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ValidatePipelineDefinitionInput {
    /// <p>The ID of the pipeline.</p>
    #[doc(hidden)]
    pub pipeline_id: std::option::Option<std::string::String>,
    /// <p>The objects that define the pipeline changes to validate against the pipeline.</p>
    #[doc(hidden)]
    pub pipeline_objects: std::option::Option<std::vec::Vec<crate::types::PipelineObject>>,
    /// <p>The parameter objects used with the pipeline.</p>
    #[doc(hidden)]
    pub parameter_objects: std::option::Option<std::vec::Vec<crate::types::ParameterObject>>,
    /// <p>The parameter values used with the pipeline.</p>
    #[doc(hidden)]
    pub parameter_values: std::option::Option<std::vec::Vec<crate::types::ParameterValue>>,
}
impl ValidatePipelineDefinitionInput {
    /// <p>The ID of the pipeline.</p>
    pub fn pipeline_id(&self) -> std::option::Option<&str> {
        self.pipeline_id.as_deref()
    }
    /// <p>The objects that define the pipeline changes to validate against the pipeline.</p>
    pub fn pipeline_objects(&self) -> std::option::Option<&[crate::types::PipelineObject]> {
        self.pipeline_objects.as_deref()
    }
    /// <p>The parameter objects used with the pipeline.</p>
    pub fn parameter_objects(&self) -> std::option::Option<&[crate::types::ParameterObject]> {
        self.parameter_objects.as_deref()
    }
    /// <p>The parameter values used with the pipeline.</p>
    pub fn parameter_values(&self) -> std::option::Option<&[crate::types::ParameterValue]> {
        self.parameter_values.as_deref()
    }
}
impl ValidatePipelineDefinitionInput {
    /// Creates a new builder-style object to manufacture [`ValidatePipelineDefinitionInput`](crate::operation::validate_pipeline_definition::ValidatePipelineDefinitionInput).
    pub fn builder() -> crate::operation::validate_pipeline_definition::builders::ValidatePipelineDefinitionInputBuilder{
        crate::operation::validate_pipeline_definition::builders::ValidatePipelineDefinitionInputBuilder::default()
    }
}

/// A builder for [`ValidatePipelineDefinitionInput`](crate::operation::validate_pipeline_definition::ValidatePipelineDefinitionInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ValidatePipelineDefinitionInputBuilder {
    pub(crate) pipeline_id: std::option::Option<std::string::String>,
    pub(crate) pipeline_objects: std::option::Option<std::vec::Vec<crate::types::PipelineObject>>,
    pub(crate) parameter_objects: std::option::Option<std::vec::Vec<crate::types::ParameterObject>>,
    pub(crate) parameter_values: std::option::Option<std::vec::Vec<crate::types::ParameterValue>>,
}
impl ValidatePipelineDefinitionInputBuilder {
    /// <p>The ID of the pipeline.</p>
    pub fn pipeline_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.pipeline_id = Some(input.into());
        self
    }
    /// <p>The ID of the pipeline.</p>
    pub fn set_pipeline_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.pipeline_id = input;
        self
    }
    /// Appends an item to `pipeline_objects`.
    ///
    /// To override the contents of this collection use [`set_pipeline_objects`](Self::set_pipeline_objects).
    ///
    /// <p>The objects that define the pipeline changes to validate against the pipeline.</p>
    pub fn pipeline_objects(mut self, input: crate::types::PipelineObject) -> Self {
        let mut v = self.pipeline_objects.unwrap_or_default();
        v.push(input);
        self.pipeline_objects = Some(v);
        self
    }
    /// <p>The objects that define the pipeline changes to validate against the pipeline.</p>
    pub fn set_pipeline_objects(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::PipelineObject>>,
    ) -> Self {
        self.pipeline_objects = input;
        self
    }
    /// Appends an item to `parameter_objects`.
    ///
    /// To override the contents of this collection use [`set_parameter_objects`](Self::set_parameter_objects).
    ///
    /// <p>The parameter objects used with the pipeline.</p>
    pub fn parameter_objects(mut self, input: crate::types::ParameterObject) -> Self {
        let mut v = self.parameter_objects.unwrap_or_default();
        v.push(input);
        self.parameter_objects = Some(v);
        self
    }
    /// <p>The parameter objects used with the pipeline.</p>
    pub fn set_parameter_objects(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::ParameterObject>>,
    ) -> Self {
        self.parameter_objects = input;
        self
    }
    /// Appends an item to `parameter_values`.
    ///
    /// To override the contents of this collection use [`set_parameter_values`](Self::set_parameter_values).
    ///
    /// <p>The parameter values used with the pipeline.</p>
    pub fn parameter_values(mut self, input: crate::types::ParameterValue) -> Self {
        let mut v = self.parameter_values.unwrap_or_default();
        v.push(input);
        self.parameter_values = Some(v);
        self
    }
    /// <p>The parameter values used with the pipeline.</p>
    pub fn set_parameter_values(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::ParameterValue>>,
    ) -> Self {
        self.parameter_values = input;
        self
    }
    /// Consumes the builder and constructs a [`ValidatePipelineDefinitionInput`](crate::operation::validate_pipeline_definition::ValidatePipelineDefinitionInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::validate_pipeline_definition::ValidatePipelineDefinitionInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::validate_pipeline_definition::ValidatePipelineDefinitionInput {
                pipeline_id: self.pipeline_id,
                pipeline_objects: self.pipeline_objects,
                parameter_objects: self.parameter_objects,
                parameter_values: self.parameter_values,
            },
        )
    }
}
