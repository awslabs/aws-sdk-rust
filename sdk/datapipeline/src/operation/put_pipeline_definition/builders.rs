// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub use crate::operation::put_pipeline_definition::_put_pipeline_definition_output::PutPipelineDefinitionOutputBuilder;

pub use crate::operation::put_pipeline_definition::_put_pipeline_definition_input::PutPipelineDefinitionInputBuilder;

/// Fluent builder constructing a request to `PutPipelineDefinition`.
///
/// <p>Adds tasks, schedules, and preconditions to the specified pipeline. You can use <code>PutPipelineDefinition</code> to populate a new pipeline.</p>
/// <p> <code>PutPipelineDefinition</code> also validates the configuration as it adds it to the pipeline. Changes to the pipeline are saved unless one of the following three validation errors exists in the pipeline. </p>
/// <ol>
/// <li>An object is missing a name or identifier field.</li>
/// <li>A string or reference field is empty.</li>
/// <li>The number of objects in the pipeline exceeds the maximum allowed objects.</li>
/// <li>The pipeline is in a FINISHED state.</li>
/// </ol>
/// <p> Pipeline object definitions are passed to the <code>PutPipelineDefinition</code> action and returned by the <code>GetPipelineDefinition</code> action. </p> <examples>
/// <example>
/// <name>
/// Example 1
/// </name>
/// <description>
/// This example sets an valid pipeline configuration and returns success.
/// </description>
/// <request>
/// POST / HTTP/1.1 Content-Type: application/x-amz-json-1.1 X-Amz-Target: DataPipeline.PutPipelineDefinition Content-Length: 914 Host: datapipeline.us-east-1.amazonaws.com X-Amz-Date: Mon, 12 Nov 2012 17:49:52 GMT Authorization: AuthParams {"pipelineId": "df-0937003356ZJEXAMPLE", "pipelineObjects": [ {"id": "Default", "name": "Default", "fields": [ {"key": "workerGroup", "stringValue": "workerGroup"} ] }, {"id": "Schedule", "name": "Schedule", "fields": [ {"key": "startDateTime", "stringValue": "2012-12-12T00:00:00"}, {"key": "type", "stringValue": "Schedule"}, {"key": "period", "stringValue": "1 hour"}, {"key": "endDateTime", "stringValue": "2012-12-21T18:00:00"} ] }, {"id": "SayHello", "name": "SayHello", "fields": [ {"key": "type", "stringValue": "ShellCommandActivity"}, {"key": "command", "stringValue": "echo hello"}, {"key": "parent", "refValue": "Default"}, {"key": "schedule", "refValue": "Schedule"} ] } ] }
/// </request>
/// <response>
/// HTTP/1.1 200 x-amzn-RequestId: f74afc14-0754-11e2-af6f-6bc7a6be60d9 Content-Type: application/x-amz-json-1.1 Content-Length: 18 Date: Mon, 12 Nov 2012 17:50:53 GMT {"errored": false}
/// </response>
/// </example>
/// <example>
/// <name>
/// Example 2
/// </name>
/// <description>
/// This example sets an invalid pipeline configuration (the value for
/// <code>workerGroup</code> is an empty string) and returns an error message.
/// </description>
/// <request>
/// POST / HTTP/1.1 Content-Type: application/x-amz-json-1.1 X-Amz-Target: DataPipeline.PutPipelineDefinition Content-Length: 903 Host: datapipeline.us-east-1.amazonaws.com X-Amz-Date: Mon, 12 Nov 2012 17:49:52 GMT Authorization: AuthParams {"pipelineId": "df-06372391ZG65EXAMPLE", "pipelineObjects": [ {"id": "Default", "name": "Default", "fields": [ {"key": "workerGroup", "stringValue": ""} ] }, {"id": "Schedule", "name": "Schedule", "fields": [ {"key": "startDateTime", "stringValue": "2012-09-25T17:00:00"}, {"key": "type", "stringValue": "Schedule"}, {"key": "period", "stringValue": "1 hour"}, {"key": "endDateTime", "stringValue": "2012-09-25T18:00:00"} ] }, {"id": "SayHello", "name": "SayHello", "fields": [ {"key": "type", "stringValue": "ShellCommandActivity"}, {"key": "command", "stringValue": "echo hello"}, {"key": "parent", "refValue": "Default"}, {"key": "schedule", "refValue": "Schedule"} ] } ] }
/// </request>
/// <response>
/// HTTP/1.1 200 x-amzn-RequestId: f74afc14-0754-11e2-af6f-6bc7a6be60d9 Content-Type: application/x-amz-json-1.1 Content-Length: 18 Date: Mon, 12 Nov 2012 17:50:53 GMT {"__type": "com.amazon.setl.webservice#InvalidRequestException", "message": "Pipeline definition has errors: Could not save the pipeline definition due to FATAL errors: [com.amazon.setl.webservice.ValidationError@108d7ea9] Please call Validate to validate your pipeline"}
/// </response>
/// </example>
/// </examples>
#[derive(std::clone::Clone, std::fmt::Debug)]
pub struct PutPipelineDefinitionFluentBuilder {
    handle: std::sync::Arc<crate::client::Handle>,
    inner: crate::operation::put_pipeline_definition::builders::PutPipelineDefinitionInputBuilder,
}
impl PutPipelineDefinitionFluentBuilder {
    /// Creates a new `PutPipelineDefinition`.
    pub(crate) fn new(handle: std::sync::Arc<crate::client::Handle>) -> Self {
        Self {
            handle,
            inner: Default::default(),
        }
    }

    /// Consume this builder, creating a customizable operation that can be modified before being
    /// sent. The operation's inner [http::Request] can be modified as well.
    pub async fn customize(
        self,
    ) -> std::result::Result<
        crate::client::customize::CustomizableOperation<
            crate::operation::put_pipeline_definition::PutPipelineDefinition,
            aws_http::retry::AwsResponseRetryClassifier,
        >,
        aws_smithy_http::result::SdkError<
            crate::operation::put_pipeline_definition::PutPipelineDefinitionError,
        >,
    > {
        let handle = self.handle.clone();
        let operation = self
            .inner
            .build()
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?
            .make_operation(&handle.conf)
            .await
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?;
        Ok(crate::client::customize::CustomizableOperation { handle, operation })
    }

    /// Sends the request and returns the response.
    ///
    /// If an error occurs, an `SdkError` will be returned with additional details that
    /// can be matched against.
    ///
    /// By default, any retryable failures will be retried twice. Retry behavior
    /// is configurable with the [RetryConfig](aws_smithy_types::retry::RetryConfig), which can be
    /// set when configuring the client.
    pub async fn send(
        self,
    ) -> std::result::Result<
        crate::operation::put_pipeline_definition::PutPipelineDefinitionOutput,
        aws_smithy_http::result::SdkError<
            crate::operation::put_pipeline_definition::PutPipelineDefinitionError,
        >,
    > {
        let op = self
            .inner
            .build()
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?
            .make_operation(&self.handle.conf)
            .await
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?;
        self.handle.client.call(op).await
    }
    /// <p>The ID of the pipeline.</p>
    pub fn pipeline_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.inner = self.inner.pipeline_id(input.into());
        self
    }
    /// <p>The ID of the pipeline.</p>
    pub fn set_pipeline_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.inner = self.inner.set_pipeline_id(input);
        self
    }
    /// Appends an item to `pipelineObjects`.
    ///
    /// To override the contents of this collection use [`set_pipeline_objects`](Self::set_pipeline_objects).
    ///
    /// <p>The objects that define the pipeline. These objects overwrite the existing pipeline definition.</p>
    pub fn pipeline_objects(mut self, input: crate::types::PipelineObject) -> Self {
        self.inner = self.inner.pipeline_objects(input);
        self
    }
    /// <p>The objects that define the pipeline. These objects overwrite the existing pipeline definition.</p>
    pub fn set_pipeline_objects(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::PipelineObject>>,
    ) -> Self {
        self.inner = self.inner.set_pipeline_objects(input);
        self
    }
    /// Appends an item to `parameterObjects`.
    ///
    /// To override the contents of this collection use [`set_parameter_objects`](Self::set_parameter_objects).
    ///
    /// <p>The parameter objects used with the pipeline.</p>
    pub fn parameter_objects(mut self, input: crate::types::ParameterObject) -> Self {
        self.inner = self.inner.parameter_objects(input);
        self
    }
    /// <p>The parameter objects used with the pipeline.</p>
    pub fn set_parameter_objects(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::ParameterObject>>,
    ) -> Self {
        self.inner = self.inner.set_parameter_objects(input);
        self
    }
    /// Appends an item to `parameterValues`.
    ///
    /// To override the contents of this collection use [`set_parameter_values`](Self::set_parameter_values).
    ///
    /// <p>The parameter values used with the pipeline.</p>
    pub fn parameter_values(mut self, input: crate::types::ParameterValue) -> Self {
        self.inner = self.inner.parameter_values(input);
        self
    }
    /// <p>The parameter values used with the pipeline.</p>
    pub fn set_parameter_values(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::ParameterValue>>,
    ) -> Self {
        self.inner = self.inner.set_parameter_values(input);
        self
    }
}
