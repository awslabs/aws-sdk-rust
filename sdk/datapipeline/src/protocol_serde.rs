// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) mod shape_activate_pipeline;

pub fn parse_http_error_metadata(
    response: &http::Response<bytes::Bytes>,
) -> Result<
    aws_smithy_types::error::metadata::Builder,
    aws_smithy_json::deserialize::error::DeserializeError,
> {
    crate::json_errors::parse_error_metadata(response.body(), response.headers())
}

pub(crate) mod shape_add_tags;

pub(crate) mod shape_create_pipeline;

pub(crate) mod shape_deactivate_pipeline;

pub(crate) mod shape_delete_pipeline;

pub(crate) mod shape_describe_objects;

pub(crate) mod shape_describe_pipelines;

pub(crate) mod shape_evaluate_expression;

pub(crate) mod shape_get_pipeline_definition;

pub(crate) mod shape_list_pipelines;

pub(crate) mod shape_poll_for_task;

pub(crate) mod shape_put_pipeline_definition;

pub(crate) mod shape_query_objects;

pub(crate) mod shape_remove_tags;

pub(crate) mod shape_report_task_progress;

pub(crate) mod shape_report_task_runner_heartbeat;

pub(crate) mod shape_set_status;

pub(crate) mod shape_set_task_status;

pub(crate) mod shape_validate_pipeline_definition;

pub(crate) mod shape_activate_pipeline_input;

pub(crate) mod shape_add_tags_input;

pub(crate) fn or_empty_doc(data: &[u8]) -> &[u8] {
    if data.is_empty() {
        b"{}"
    } else {
        data
    }
}

pub(crate) mod shape_create_pipeline_input;

pub(crate) mod shape_deactivate_pipeline_input;

pub(crate) mod shape_delete_pipeline_input;

pub(crate) mod shape_describe_objects_input;

pub(crate) mod shape_describe_pipelines_input;

pub(crate) mod shape_evaluate_expression_input;

pub(crate) mod shape_get_pipeline_definition_input;

pub(crate) mod shape_internal_service_error;

pub(crate) mod shape_invalid_request_exception;

pub(crate) mod shape_list_pipelines_input;

pub(crate) mod shape_pipeline_deleted_exception;

pub(crate) mod shape_pipeline_not_found_exception;

pub(crate) mod shape_poll_for_task_input;

pub(crate) mod shape_put_pipeline_definition_input;

pub(crate) mod shape_query_objects_input;

pub(crate) mod shape_remove_tags_input;

pub(crate) mod shape_report_task_progress_input;

pub(crate) mod shape_report_task_runner_heartbeat_input;

pub(crate) mod shape_set_status_input;

pub(crate) mod shape_set_task_status_input;

pub(crate) mod shape_task_not_found_exception;

pub(crate) mod shape_validate_pipeline_definition_input;

pub(crate) mod shape_field;

pub(crate) mod shape_id_list;

pub(crate) mod shape_instance_identity;

pub(crate) mod shape_parameter_object;

pub(crate) mod shape_parameter_object_list;

pub(crate) mod shape_parameter_value;

pub(crate) mod shape_parameter_value_list;

pub(crate) mod shape_pipeline_description_list;

pub(crate) mod shape_pipeline_list;

pub(crate) mod shape_pipeline_object;

pub(crate) mod shape_pipeline_object_list;

pub(crate) mod shape_query;

pub(crate) mod shape_tag;

pub(crate) mod shape_task_object;

pub(crate) mod shape_validation_errors;

pub(crate) mod shape_validation_warnings;

pub(crate) mod shape_parameter_attribute;

pub(crate) mod shape_pipeline_description;

pub(crate) mod shape_pipeline_id_name;

pub(crate) mod shape_pipeline_object_map;

pub(crate) mod shape_selector;

pub(crate) mod shape_validation_error;

pub(crate) mod shape_validation_warning;

pub(crate) mod shape_field_list;

pub(crate) mod shape_operator;

pub(crate) mod shape_parameter_attribute_list;

pub(crate) mod shape_tag_list;

pub(crate) mod shape_validation_messages;
