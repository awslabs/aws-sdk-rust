// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`QueryObjects`](crate::operation::query_objects::builders::QueryObjectsFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::query_objects::builders::QueryObjectsFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`pipeline_id(impl Into<String>)`](crate::operation::query_objects::builders::QueryObjectsFluentBuilder::pipeline_id) / [`set_pipeline_id(Option<String>)`](crate::operation::query_objects::builders::QueryObjectsFluentBuilder::set_pipeline_id): <p>The ID of the pipeline.</p>
    ///   - [`query(Query)`](crate::operation::query_objects::builders::QueryObjectsFluentBuilder::query) / [`set_query(Option<Query>)`](crate::operation::query_objects::builders::QueryObjectsFluentBuilder::set_query): <p>The query that defines the objects to be returned. The <code>Query</code> object can contain a maximum of ten selectors. The conditions in the query are limited to top-level String fields in the object. These filters can be applied to components, instances, and attempts.</p>
    ///   - [`sphere(impl Into<String>)`](crate::operation::query_objects::builders::QueryObjectsFluentBuilder::sphere) / [`set_sphere(Option<String>)`](crate::operation::query_objects::builders::QueryObjectsFluentBuilder::set_sphere): <p>Indicates whether the query applies to components or instances. The possible values are: <code>COMPONENT</code>, <code>INSTANCE</code>, and <code>ATTEMPT</code>.</p>
    ///   - [`marker(impl Into<String>)`](crate::operation::query_objects::builders::QueryObjectsFluentBuilder::marker) / [`set_marker(Option<String>)`](crate::operation::query_objects::builders::QueryObjectsFluentBuilder::set_marker): <p>The starting point for the results to be returned. For the first call, this value should be empty. As long as there are more results, continue to call <code>QueryObjects</code> with the marker value from the previous call to retrieve the next set of results.</p>
    ///   - [`limit(i32)`](crate::operation::query_objects::builders::QueryObjectsFluentBuilder::limit) / [`set_limit(Option<i32>)`](crate::operation::query_objects::builders::QueryObjectsFluentBuilder::set_limit): <p>The maximum number of object names that <code>QueryObjects</code> will return in a single call. The default value is 100. </p>
    /// - On success, responds with [`QueryObjectsOutput`](crate::operation::query_objects::QueryObjectsOutput) with field(s):
    ///   - [`ids(Option<Vec<String>>)`](crate::operation::query_objects::QueryObjectsOutput::ids): <p>The identifiers that match the query selectors.</p>
    ///   - [`marker(Option<String>)`](crate::operation::query_objects::QueryObjectsOutput::marker): <p>The starting point for the next page of results. To view the next page of results, call <code>QueryObjects</code> again with this marker value. If the value is null, there are no more results.</p>
    ///   - [`has_more_results(bool)`](crate::operation::query_objects::QueryObjectsOutput::has_more_results): <p>Indicates whether there are more results that can be obtained by a subsequent call.</p>
    /// - On failure, responds with [`SdkError<QueryObjectsError>`](crate::operation::query_objects::QueryObjectsError)
    pub fn query_objects(
        &self,
    ) -> crate::operation::query_objects::builders::QueryObjectsFluentBuilder {
        crate::operation::query_objects::builders::QueryObjectsFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
