// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) fn de_route_vehicle_travel_step<'a, I>(
    tokens: &mut ::std::iter::Peekable<I>,
) -> ::std::result::Result<Option<crate::types::RouteVehicleTravelStep>, ::aws_smithy_json::deserialize::error::DeserializeError>
where
    I: Iterator<Item = Result<::aws_smithy_json::deserialize::Token<'a>, ::aws_smithy_json::deserialize::error::DeserializeError>>,
{
    match tokens.next().transpose()? {
        Some(::aws_smithy_json::deserialize::Token::ValueNull { .. }) => Ok(None),
        Some(::aws_smithy_json::deserialize::Token::StartObject { .. }) => {
            #[allow(unused_mut)]
            let mut builder = crate::types::builders::RouteVehicleTravelStepBuilder::default();
            loop {
                match tokens.next().transpose()? {
                    Some(::aws_smithy_json::deserialize::Token::EndObject { .. }) => break,
                    Some(::aws_smithy_json::deserialize::Token::ObjectKey { key, .. }) => match key.to_unescaped()?.as_ref() {
                        "ContinueHighwayStepDetails" => {
                            builder = builder.set_continue_highway_step_details(
                                crate::protocol_serde::shape_route_continue_highway_step_details::de_route_continue_highway_step_details(tokens)?,
                            );
                        }
                        "ContinueStepDetails" => {
                            builder = builder.set_continue_step_details(
                                crate::protocol_serde::shape_route_continue_step_details::de_route_continue_step_details(tokens)?,
                            );
                        }
                        "CurrentRoad" => {
                            builder = builder.set_current_road(crate::protocol_serde::shape_route_road::de_route_road(tokens)?);
                        }
                        "Distance" => {
                            builder = builder.set_distance(
                                ::aws_smithy_json::deserialize::token::expect_number_or_null(tokens.next())?
                                    .map(i64::try_from)
                                    .transpose()?,
                            );
                        }
                        "Duration" => {
                            builder = builder.set_duration(
                                ::aws_smithy_json::deserialize::token::expect_number_or_null(tokens.next())?
                                    .map(i64::try_from)
                                    .transpose()?,
                            );
                        }
                        "EnterHighwayStepDetails" => {
                            builder = builder.set_enter_highway_step_details(
                                crate::protocol_serde::shape_route_enter_highway_step_details::de_route_enter_highway_step_details(tokens)?,
                            );
                        }
                        "ExitNumber" => {
                            builder = builder.set_exit_number(crate::protocol_serde::shape_localized_string_list::de_localized_string_list(tokens)?);
                        }
                        "ExitStepDetails" => {
                            builder = builder
                                .set_exit_step_details(crate::protocol_serde::shape_route_exit_step_details::de_route_exit_step_details(tokens)?);
                        }
                        "GeometryOffset" => {
                            builder = builder.set_geometry_offset(
                                ::aws_smithy_json::deserialize::token::expect_number_or_null(tokens.next())?
                                    .map(i32::try_from)
                                    .transpose()?,
                            );
                        }
                        "Instruction" => {
                            builder = builder.set_instruction(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                            );
                        }
                        "KeepStepDetails" => {
                            builder = builder
                                .set_keep_step_details(crate::protocol_serde::shape_route_keep_step_details::de_route_keep_step_details(tokens)?);
                        }
                        "NextRoad" => {
                            builder = builder.set_next_road(crate::protocol_serde::shape_route_road::de_route_road(tokens)?);
                        }
                        "RampStepDetails" => {
                            builder = builder
                                .set_ramp_step_details(crate::protocol_serde::shape_route_ramp_step_details::de_route_ramp_step_details(tokens)?);
                        }
                        "RoundaboutEnterStepDetails" => {
                            builder = builder.set_roundabout_enter_step_details(
                                crate::protocol_serde::shape_route_roundabout_enter_step_details::de_route_roundabout_enter_step_details(tokens)?,
                            );
                        }
                        "RoundaboutExitStepDetails" => {
                            builder = builder.set_roundabout_exit_step_details(
                                crate::protocol_serde::shape_route_roundabout_exit_step_details::de_route_roundabout_exit_step_details(tokens)?,
                            );
                        }
                        "RoundaboutPassStepDetails" => {
                            builder = builder.set_roundabout_pass_step_details(
                                crate::protocol_serde::shape_route_roundabout_pass_step_details::de_route_roundabout_pass_step_details(tokens)?,
                            );
                        }
                        "Signpost" => {
                            builder = builder.set_signpost(crate::protocol_serde::shape_route_signpost::de_route_signpost(tokens)?);
                        }
                        "TurnStepDetails" => {
                            builder = builder
                                .set_turn_step_details(crate::protocol_serde::shape_route_turn_step_details::de_route_turn_step_details(tokens)?);
                        }
                        "Type" => {
                            builder = builder.set_type(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| crate::types::RouteVehicleTravelStepType::from(u.as_ref())))
                                    .transpose()?,
                            );
                        }
                        "UTurnStepDetails" => {
                            builder = builder.set_u_turn_step_details(
                                crate::protocol_serde::shape_route_u_turn_step_details::de_route_u_turn_step_details(tokens)?,
                            );
                        }
                        _ => ::aws_smithy_json::deserialize::token::skip_value(tokens)?,
                    },
                    other => {
                        return Err(::aws_smithy_json::deserialize::error::DeserializeError::custom(format!(
                            "expected object key or end object, found: {other:?}"
                        )))
                    }
                }
            }
            Ok(Some(
                crate::serde_util::route_vehicle_travel_step_correct_errors(builder)
                    .build()
                    .map_err(|err| ::aws_smithy_json::deserialize::error::DeserializeError::custom_source("Response was invalid", err))?,
            ))
        }
        _ => Err(::aws_smithy_json::deserialize::error::DeserializeError::custom(
            "expected start object or null",
        )),
    }
}
