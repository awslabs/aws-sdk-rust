// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateObservabilityConfiguration`](crate::operation::create_observability_configuration::builders::CreateObservabilityConfigurationFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`observability_configuration_name(impl Into<String>)`](crate::operation::create_observability_configuration::builders::CreateObservabilityConfigurationFluentBuilder::observability_configuration_name) / [`set_observability_configuration_name(Option<String>)`](crate::operation::create_observability_configuration::builders::CreateObservabilityConfigurationFluentBuilder::set_observability_configuration_name):<br>required: **true**<br><p>A name for the observability configuration. When you use it for the first time in an Amazon Web Services Region, App Runner creates revision number <code>1</code> of this name. When you use the same name in subsequent calls, App Runner creates incremental revisions of the configuration.</p> <note>   <p>The name <code>DefaultConfiguration</code> is reserved. You can't use it to create a new observability configuration, and you can't create a revision of it.</p>   <p>When you want to use your own observability configuration for your App Runner service, <i>create a configuration with a different name</i>, and then provide it when you create or update your service.</p>  </note><br>
    ///   - [`trace_configuration(TraceConfiguration)`](crate::operation::create_observability_configuration::builders::CreateObservabilityConfigurationFluentBuilder::trace_configuration) / [`set_trace_configuration(Option<TraceConfiguration>)`](crate::operation::create_observability_configuration::builders::CreateObservabilityConfigurationFluentBuilder::set_trace_configuration):<br>required: **false**<br><p>The configuration of the tracing feature within this observability configuration. If you don't specify it, App Runner doesn't enable tracing.</p><br>
    ///   - [`tags(Tag)`](crate::operation::create_observability_configuration::builders::CreateObservabilityConfigurationFluentBuilder::tags) / [`set_tags(Option<Vec::<Tag>>)`](crate::operation::create_observability_configuration::builders::CreateObservabilityConfigurationFluentBuilder::set_tags):<br>required: **false**<br><p>A list of metadata items that you can associate with your observability configuration resource. A tag is a key-value pair.</p><br>
    /// - On success, responds with [`CreateObservabilityConfigurationOutput`](crate::operation::create_observability_configuration::CreateObservabilityConfigurationOutput) with field(s):
    ///   - [`observability_configuration(Option<ObservabilityConfiguration>)`](crate::operation::create_observability_configuration::CreateObservabilityConfigurationOutput::observability_configuration): <p>A description of the App Runner observability configuration that's created by this request.</p>
    /// - On failure, responds with [`SdkError<CreateObservabilityConfigurationError>`](crate::operation::create_observability_configuration::CreateObservabilityConfigurationError)
    pub fn create_observability_configuration(
        &self,
    ) -> crate::operation::create_observability_configuration::builders::CreateObservabilityConfigurationFluentBuilder {
        crate::operation::create_observability_configuration::builders::CreateObservabilityConfigurationFluentBuilder::new(self.handle.clone())
    }
}
