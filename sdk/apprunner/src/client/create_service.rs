// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateService`](crate::operation::create_service::builders::CreateServiceFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`service_name(impl Into<String>)`](crate::operation::create_service::builders::CreateServiceFluentBuilder::service_name) / [`set_service_name(Option<String>)`](crate::operation::create_service::builders::CreateServiceFluentBuilder::set_service_name):<br>required: **true**<br><p>A name for the App Runner service. It must be unique across all the running App Runner services in your Amazon Web Services account in the Amazon Web Services Region.</p><br>
    ///   - [`source_configuration(SourceConfiguration)`](crate::operation::create_service::builders::CreateServiceFluentBuilder::source_configuration) / [`set_source_configuration(Option<SourceConfiguration>)`](crate::operation::create_service::builders::CreateServiceFluentBuilder::set_source_configuration):<br>required: **true**<br><p>The source to deploy to the App Runner service. It can be a code or an image repository.</p><br>
    ///   - [`instance_configuration(InstanceConfiguration)`](crate::operation::create_service::builders::CreateServiceFluentBuilder::instance_configuration) / [`set_instance_configuration(Option<InstanceConfiguration>)`](crate::operation::create_service::builders::CreateServiceFluentBuilder::set_instance_configuration):<br>required: **false**<br><p>The runtime configuration of instances (scaling units) of your service.</p><br>
    ///   - [`tags(Tag)`](crate::operation::create_service::builders::CreateServiceFluentBuilder::tags) / [`set_tags(Option<Vec::<Tag>>)`](crate::operation::create_service::builders::CreateServiceFluentBuilder::set_tags):<br>required: **false**<br><p>An optional list of metadata items that you can associate with the App Runner service resource. A tag is a key-value pair.</p><br>
    ///   - [`encryption_configuration(EncryptionConfiguration)`](crate::operation::create_service::builders::CreateServiceFluentBuilder::encryption_configuration) / [`set_encryption_configuration(Option<EncryptionConfiguration>)`](crate::operation::create_service::builders::CreateServiceFluentBuilder::set_encryption_configuration):<br>required: **false**<br><p>An optional custom encryption key that App Runner uses to encrypt the copy of your source repository that it maintains and your service logs. By default, App Runner uses an Amazon Web Services managed key.</p><br>
    ///   - [`health_check_configuration(HealthCheckConfiguration)`](crate::operation::create_service::builders::CreateServiceFluentBuilder::health_check_configuration) / [`set_health_check_configuration(Option<HealthCheckConfiguration>)`](crate::operation::create_service::builders::CreateServiceFluentBuilder::set_health_check_configuration):<br>required: **false**<br><p>The settings for the health check that App Runner performs to monitor the health of the App Runner service.</p><br>
    ///   - [`auto_scaling_configuration_arn(impl Into<String>)`](crate::operation::create_service::builders::CreateServiceFluentBuilder::auto_scaling_configuration_arn) / [`set_auto_scaling_configuration_arn(Option<String>)`](crate::operation::create_service::builders::CreateServiceFluentBuilder::set_auto_scaling_configuration_arn):<br>required: **false**<br><p>The Amazon Resource Name (ARN) of an App Runner automatic scaling configuration resource that you want to associate with your service. If not provided, App Runner associates the latest revision of a default auto scaling configuration.</p>  <p>Specify an ARN with a name and a revision number to associate that revision. For example: <code>arn:aws:apprunner:us-east-1:123456789012:autoscalingconfiguration/high-availability/3</code> </p>  <p>Specify just the name to associate the latest revision. For example: <code>arn:aws:apprunner:us-east-1:123456789012:autoscalingconfiguration/high-availability</code> </p><br>
    ///   - [`network_configuration(NetworkConfiguration)`](crate::operation::create_service::builders::CreateServiceFluentBuilder::network_configuration) / [`set_network_configuration(Option<NetworkConfiguration>)`](crate::operation::create_service::builders::CreateServiceFluentBuilder::set_network_configuration):<br>required: **false**<br><p>Configuration settings related to network traffic of the web application that the App Runner service runs.</p><br>
    ///   - [`observability_configuration(ServiceObservabilityConfiguration)`](crate::operation::create_service::builders::CreateServiceFluentBuilder::observability_configuration) / [`set_observability_configuration(Option<ServiceObservabilityConfiguration>)`](crate::operation::create_service::builders::CreateServiceFluentBuilder::set_observability_configuration):<br>required: **false**<br><p>The observability configuration of your service.</p><br>
    /// - On success, responds with [`CreateServiceOutput`](crate::operation::create_service::CreateServiceOutput) with field(s):
    ///   - [`service(Option<Service>)`](crate::operation::create_service::CreateServiceOutput::service): <p>A description of the App Runner service that's created by this request.</p>
    ///   - [`operation_id(String)`](crate::operation::create_service::CreateServiceOutput::operation_id): <p>The unique ID of the asynchronous operation that this request started. You can use it combined with the <a href="https://docs.aws.amazon.com/apprunner/latest/api/API_ListOperations.html">ListOperations</a> call to track the operation's progress.</p>
    /// - On failure, responds with [`SdkError<CreateServiceError>`](crate::operation::create_service::CreateServiceError)
    pub fn create_service(&self) -> crate::operation::create_service::builders::CreateServiceFluentBuilder {
        crate::operation::create_service::builders::CreateServiceFluentBuilder::new(self.handle.clone())
    }
}
