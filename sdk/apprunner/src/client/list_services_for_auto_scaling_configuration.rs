// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListServicesForAutoScalingConfiguration`](crate::operation::list_services_for_auto_scaling_configuration::builders::ListServicesForAutoScalingConfigurationFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::list_services_for_auto_scaling_configuration::builders::ListServicesForAutoScalingConfigurationFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`auto_scaling_configuration_arn(impl Into<String>)`](crate::operation::list_services_for_auto_scaling_configuration::builders::ListServicesForAutoScalingConfigurationFluentBuilder::auto_scaling_configuration_arn) / [`set_auto_scaling_configuration_arn(Option<String>)`](crate::operation::list_services_for_auto_scaling_configuration::builders::ListServicesForAutoScalingConfigurationFluentBuilder::set_auto_scaling_configuration_arn):<br>required: **true**<br><p>The Amazon Resource Name (ARN) of the App Runner auto scaling configuration that you want to list the services for.</p>  <p>The ARN can be a full auto scaling configuration ARN, or a partial ARN ending with either <code>.../<i>name</i> </code> or <code>.../<i>name</i>/<i>revision</i> </code>. If a revision isn't specified, the latest active revision is used.</p><br>
    ///   - [`max_results(i32)`](crate::operation::list_services_for_auto_scaling_configuration::builders::ListServicesForAutoScalingConfigurationFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::list_services_for_auto_scaling_configuration::builders::ListServicesForAutoScalingConfigurationFluentBuilder::set_max_results):<br>required: **false**<br><p>The maximum number of results to include in each response (result page). It's used for a paginated request.</p>  <p>If you don't specify <code>MaxResults</code>, the request retrieves all available results in a single response.</p><br>
    ///   - [`next_token(impl Into<String>)`](crate::operation::list_services_for_auto_scaling_configuration::builders::ListServicesForAutoScalingConfigurationFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::list_services_for_auto_scaling_configuration::builders::ListServicesForAutoScalingConfigurationFluentBuilder::set_next_token):<br>required: **false**<br><p>A token from a previous result page. It's used for a paginated request. The request retrieves the next result page. All other parameter values must be identical to the ones specified in the initial request.</p>  <p>If you don't specify <code>NextToken</code>, the request retrieves the first result page.</p><br>
    /// - On success, responds with [`ListServicesForAutoScalingConfigurationOutput`](crate::operation::list_services_for_auto_scaling_configuration::ListServicesForAutoScalingConfigurationOutput) with field(s):
    ///   - [`service_arn_list(Vec::<String>)`](crate::operation::list_services_for_auto_scaling_configuration::ListServicesForAutoScalingConfigurationOutput::service_arn_list): <p>A list of service ARN records. In a paginated request, the request returns up to <code>MaxResults</code> records for each call.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::list_services_for_auto_scaling_configuration::ListServicesForAutoScalingConfigurationOutput::next_token): <p>The token that you can pass in a subsequent request to get the next result page. It's returned in a paginated request.</p>
    /// - On failure, responds with [`SdkError<ListServicesForAutoScalingConfigurationError>`](crate::operation::list_services_for_auto_scaling_configuration::ListServicesForAutoScalingConfigurationError)
    pub fn list_services_for_auto_scaling_configuration(
        &self,
    ) -> crate::operation::list_services_for_auto_scaling_configuration::builders::ListServicesForAutoScalingConfigurationFluentBuilder {
        crate::operation::list_services_for_auto_scaling_configuration::builders::ListServicesForAutoScalingConfigurationFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
