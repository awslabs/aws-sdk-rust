// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Describes the configuration of the tracing feature within an App Runner observability configuration.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct TraceConfiguration {
    /// <p>The implementation provider chosen for tracing App Runner services.</p>
    pub vendor: crate::types::TracingVendor,
}
impl TraceConfiguration {
    /// <p>The implementation provider chosen for tracing App Runner services.</p>
    pub fn vendor(&self) -> &crate::types::TracingVendor {
        &self.vendor
    }
}
impl TraceConfiguration {
    /// Creates a new builder-style object to manufacture [`TraceConfiguration`](crate::types::TraceConfiguration).
    pub fn builder() -> crate::types::builders::TraceConfigurationBuilder {
        crate::types::builders::TraceConfigurationBuilder::default()
    }
}

/// A builder for [`TraceConfiguration`](crate::types::TraceConfiguration).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct TraceConfigurationBuilder {
    pub(crate) vendor: ::std::option::Option<crate::types::TracingVendor>,
}
impl TraceConfigurationBuilder {
    /// <p>The implementation provider chosen for tracing App Runner services.</p>
    /// This field is required.
    pub fn vendor(mut self, input: crate::types::TracingVendor) -> Self {
        self.vendor = ::std::option::Option::Some(input);
        self
    }
    /// <p>The implementation provider chosen for tracing App Runner services.</p>
    pub fn set_vendor(mut self, input: ::std::option::Option<crate::types::TracingVendor>) -> Self {
        self.vendor = input;
        self
    }
    /// <p>The implementation provider chosen for tracing App Runner services.</p>
    pub fn get_vendor(&self) -> &::std::option::Option<crate::types::TracingVendor> {
        &self.vendor
    }
    /// Consumes the builder and constructs a [`TraceConfiguration`](crate::types::TraceConfiguration).
    /// This method will fail if any of the following fields are not set:
    /// - [`vendor`](crate::types::builders::TraceConfigurationBuilder::vendor)
    pub fn build(self) -> ::std::result::Result<crate::types::TraceConfiguration, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::TraceConfiguration {
            vendor: self.vendor.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "vendor",
                    "vendor was not specified but it is required when building TraceConfiguration",
                )
            })?,
        })
    }
}
