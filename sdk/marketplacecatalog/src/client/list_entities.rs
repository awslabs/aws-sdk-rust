// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListEntities`](crate::operation::list_entities::builders::ListEntitiesFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::list_entities::builders::ListEntitiesFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`catalog(impl Into<String>)`](crate::operation::list_entities::builders::ListEntitiesFluentBuilder::catalog) / [`set_catalog(Option<String>)`](crate::operation::list_entities::builders::ListEntitiesFluentBuilder::set_catalog):<br>required: **true**<br><p>The catalog related to the request. Fixed value: <code>AWSMarketplace</code></p><br>
    ///   - [`entity_type(impl Into<String>)`](crate::operation::list_entities::builders::ListEntitiesFluentBuilder::entity_type) / [`set_entity_type(Option<String>)`](crate::operation::list_entities::builders::ListEntitiesFluentBuilder::set_entity_type):<br>required: **true**<br><p>The type of entities to retrieve. Valid values are: <code>AmiProduct</code>, <code>ContainerProduct</code>, <code>DataProduct</code>, <code>SaaSProduct</code>, <code>ProcurementPolicy</code>, <code>Experience</code>, <code>Audience</code>, <code>BrandingSettings</code>, <code>Offer</code>, <code>Seller</code>, <code>ResaleAuthorization</code>.</p><br>
    ///   - [`filter_list(Filter)`](crate::operation::list_entities::builders::ListEntitiesFluentBuilder::filter_list) / [`set_filter_list(Option<Vec::<Filter>>)`](crate::operation::list_entities::builders::ListEntitiesFluentBuilder::set_filter_list):<br>required: **false**<br><p>An array of filter objects. Each filter object contains two attributes, <code>filterName</code> and <code>filterValues</code>.</p><br>
    ///   - [`sort(Sort)`](crate::operation::list_entities::builders::ListEntitiesFluentBuilder::sort) / [`set_sort(Option<Sort>)`](crate::operation::list_entities::builders::ListEntitiesFluentBuilder::set_sort):<br>required: **false**<br><p>An object that contains two attributes, <code>SortBy</code> and <code>SortOrder</code>.</p><br>
    ///   - [`next_token(impl Into<String>)`](crate::operation::list_entities::builders::ListEntitiesFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::list_entities::builders::ListEntitiesFluentBuilder::set_next_token):<br>required: **false**<br><p>The value of the next token, if it exists. Null if there are no more results.</p><br>
    ///   - [`max_results(i32)`](crate::operation::list_entities::builders::ListEntitiesFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::list_entities::builders::ListEntitiesFluentBuilder::set_max_results):<br>required: **false**<br><p>Specifies the upper limit of the elements on a single page. If a value isn't provided, the default value is 20.</p><br>
    ///   - [`ownership_type(OwnershipType)`](crate::operation::list_entities::builders::ListEntitiesFluentBuilder::ownership_type) / [`set_ownership_type(Option<OwnershipType>)`](crate::operation::list_entities::builders::ListEntitiesFluentBuilder::set_ownership_type):<br>required: **false**<br><p>Filters the returned set of entities based on their owner. The default is <code>SELF</code>. To list entities shared with you through AWS Resource Access Manager (AWS RAM), set to <code>SHARED</code>. Entities shared through the AWS Marketplace Catalog API <code>PutResourcePolicy</code> operation can't be discovered through the <code>SHARED</code> parameter.</p><br>
    ///   - [`entity_type_filters(EntityTypeFilters)`](crate::operation::list_entities::builders::ListEntitiesFluentBuilder::entity_type_filters) / [`set_entity_type_filters(Option<EntityTypeFilters>)`](crate::operation::list_entities::builders::ListEntitiesFluentBuilder::set_entity_type_filters):<br>required: **false**<br><p>A Union object containing filter shapes for all <code>EntityType</code>s. Each <code>EntityTypeFilter</code> shape will have filters applicable for that <code>EntityType</code> that can be used to search or filter entities.</p><br>
    ///   - [`entity_type_sort(EntityTypeSort)`](crate::operation::list_entities::builders::ListEntitiesFluentBuilder::entity_type_sort) / [`set_entity_type_sort(Option<EntityTypeSort>)`](crate::operation::list_entities::builders::ListEntitiesFluentBuilder::set_entity_type_sort):<br>required: **false**<br><p>A Union object containing <code>Sort</code> shapes for all <code>EntityType</code>s. Each <code>EntityTypeSort</code> shape will have <code>SortBy</code> and <code>SortOrder</code> applicable for fields on that <code>EntityType</code>. This can be used to sort the results of the filter query.</p><br>
    /// - On success, responds with [`ListEntitiesOutput`](crate::operation::list_entities::ListEntitiesOutput) with field(s):
    ///   - [`entity_summary_list(Option<Vec::<EntitySummary>>)`](crate::operation::list_entities::ListEntitiesOutput::entity_summary_list): <p>Array of <code>EntitySummary</code> objects.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::list_entities::ListEntitiesOutput::next_token): <p>The value of the next token if it exists. Null if there is no more result.</p>
    /// - On failure, responds with [`SdkError<ListEntitiesError>`](crate::operation::list_entities::ListEntitiesError)
    pub fn list_entities(&self) -> crate::operation::list_entities::builders::ListEntitiesFluentBuilder {
        crate::operation::list_entities::builders::ListEntitiesFluentBuilder::new(self.handle.clone())
    }
}
