// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct BatchDescribeEntitiesInput {
    /// <p>List of entity IDs and the catalogs the entities are present in.</p>
    pub entity_request_list: ::std::option::Option<::std::vec::Vec<crate::types::EntityRequest>>,
}
impl BatchDescribeEntitiesInput {
    /// <p>List of entity IDs and the catalogs the entities are present in.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.entity_request_list.is_none()`.
    pub fn entity_request_list(&self) -> &[crate::types::EntityRequest] {
        self.entity_request_list.as_deref().unwrap_or_default()
    }
}
impl BatchDescribeEntitiesInput {
    /// Creates a new builder-style object to manufacture [`BatchDescribeEntitiesInput`](crate::operation::batch_describe_entities::BatchDescribeEntitiesInput).
    pub fn builder() -> crate::operation::batch_describe_entities::builders::BatchDescribeEntitiesInputBuilder {
        crate::operation::batch_describe_entities::builders::BatchDescribeEntitiesInputBuilder::default()
    }
}

/// A builder for [`BatchDescribeEntitiesInput`](crate::operation::batch_describe_entities::BatchDescribeEntitiesInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct BatchDescribeEntitiesInputBuilder {
    pub(crate) entity_request_list: ::std::option::Option<::std::vec::Vec<crate::types::EntityRequest>>,
}
impl BatchDescribeEntitiesInputBuilder {
    /// Appends an item to `entity_request_list`.
    ///
    /// To override the contents of this collection use [`set_entity_request_list`](Self::set_entity_request_list).
    ///
    /// <p>List of entity IDs and the catalogs the entities are present in.</p>
    pub fn entity_request_list(mut self, input: crate::types::EntityRequest) -> Self {
        let mut v = self.entity_request_list.unwrap_or_default();
        v.push(input);
        self.entity_request_list = ::std::option::Option::Some(v);
        self
    }
    /// <p>List of entity IDs and the catalogs the entities are present in.</p>
    pub fn set_entity_request_list(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::EntityRequest>>) -> Self {
        self.entity_request_list = input;
        self
    }
    /// <p>List of entity IDs and the catalogs the entities are present in.</p>
    pub fn get_entity_request_list(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::EntityRequest>> {
        &self.entity_request_list
    }
    /// Consumes the builder and constructs a [`BatchDescribeEntitiesInput`](crate::operation::batch_describe_entities::BatchDescribeEntitiesInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::batch_describe_entities::BatchDescribeEntitiesInput, ::aws_smithy_types::error::operation::BuildError>
    {
        ::std::result::Result::Ok(crate::operation::batch_describe_entities::BatchDescribeEntitiesInput {
            entity_request_list: self.entity_request_list,
        })
    }
}
