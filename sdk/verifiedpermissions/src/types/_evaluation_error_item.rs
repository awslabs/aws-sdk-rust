// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains a description of an evaluation error.</p>
/// <p>This data type is used as a request parameter in the <a href="https://docs.aws.amazon.com/verifiedpermissions/latest/apireference/API_IsAuthorized.html">IsAuthorized</a> and <a href="https://docs.aws.amazon.com/verifiedpermissions/latest/apireference/API_IsAuthorizedWithToken.html">IsAuthorizedWithToken</a> operations.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq)]
pub struct EvaluationErrorItem {
    /// <p>The error description.</p>
    pub error_description: ::std::string::String,
}
impl EvaluationErrorItem {
    /// <p>The error description.</p>
    pub fn error_description(&self) -> &str {
        use std::ops::Deref;
        self.error_description.deref()
    }
}
impl ::std::fmt::Debug for EvaluationErrorItem {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("EvaluationErrorItem");
        formatter.field("error_description", &"*** Sensitive Data Redacted ***");
        formatter.finish()
    }
}
impl EvaluationErrorItem {
    /// Creates a new builder-style object to manufacture [`EvaluationErrorItem`](crate::types::EvaluationErrorItem).
    pub fn builder() -> crate::types::builders::EvaluationErrorItemBuilder {
        crate::types::builders::EvaluationErrorItemBuilder::default()
    }
}

/// A builder for [`EvaluationErrorItem`](crate::types::EvaluationErrorItem).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default)]
pub struct EvaluationErrorItemBuilder {
    pub(crate) error_description: ::std::option::Option<::std::string::String>,
}
impl EvaluationErrorItemBuilder {
    /// <p>The error description.</p>
    /// This field is required.
    pub fn error_description(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.error_description = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The error description.</p>
    pub fn set_error_description(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.error_description = input;
        self
    }
    /// <p>The error description.</p>
    pub fn get_error_description(&self) -> &::std::option::Option<::std::string::String> {
        &self.error_description
    }
    /// Consumes the builder and constructs a [`EvaluationErrorItem`](crate::types::EvaluationErrorItem).
    /// This method will fail if any of the following fields are not set:
    /// - [`error_description`](crate::types::builders::EvaluationErrorItemBuilder::error_description)
    pub fn build(self) -> ::std::result::Result<crate::types::EvaluationErrorItem, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::EvaluationErrorItem {
            error_description: self.error_description.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "error_description",
                    "error_description was not specified but it is required when building EvaluationErrorItem",
                )
            })?,
        })
    }
}
impl ::std::fmt::Debug for EvaluationErrorItemBuilder {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("EvaluationErrorItemBuilder");
        formatter.field("error_description", &"*** Sensitive Data Redacted ***");
        formatter.finish()
    }
}
