// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A structure that contains configuration of the identity source.</p>
/// <p>This data type is used as a response parameter for the <a href="https://docs.aws.amazon.com/verifiedpermissions/latest/apireference/API_CreateIdentitySource.html">CreateIdentitySource</a> operation.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct IdentitySourceDetails {
    /// <p>The application client IDs associated with the specified Amazon Cognito user pool that are enabled for this identity source.</p>
    pub client_ids: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
    /// <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Name (ARN)</a> of the Amazon Cognito user pool whose identities are accessible to this Verified Permissions policy store.</p>
    pub user_pool_arn: ::std::option::Option<::std::string::String>,
    /// <p>The well-known URL that points to this user pool's OIDC discovery endpoint. This is a URL string in the following format. This URL replaces the placeholders for both the Amazon Web Services Region and the user pool identifier with those appropriate for this user pool.</p>
    /// <p> <code>https://cognito-idp.<i>&lt;region&gt;</i>.amazonaws.com/<i>&lt;user-pool-id&gt;</i>/.well-known/openid-configuration</code> </p>
    pub discovery_url: ::std::option::Option<::std::string::String>,
    /// <p>A string that identifies the type of OIDC service represented by this identity source. </p>
    /// <p>At this time, the only valid value is <code>cognito</code>.</p>
    pub open_id_issuer: ::std::option::Option<crate::types::OpenIdIssuer>,
}
impl IdentitySourceDetails {
    /// <p>The application client IDs associated with the specified Amazon Cognito user pool that are enabled for this identity source.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.client_ids.is_none()`.
    pub fn client_ids(&self) -> &[::std::string::String] {
        self.client_ids.as_deref().unwrap_or_default()
    }
    /// <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Name (ARN)</a> of the Amazon Cognito user pool whose identities are accessible to this Verified Permissions policy store.</p>
    pub fn user_pool_arn(&self) -> ::std::option::Option<&str> {
        self.user_pool_arn.as_deref()
    }
    /// <p>The well-known URL that points to this user pool's OIDC discovery endpoint. This is a URL string in the following format. This URL replaces the placeholders for both the Amazon Web Services Region and the user pool identifier with those appropriate for this user pool.</p>
    /// <p> <code>https://cognito-idp.<i>&lt;region&gt;</i>.amazonaws.com/<i>&lt;user-pool-id&gt;</i>/.well-known/openid-configuration</code> </p>
    pub fn discovery_url(&self) -> ::std::option::Option<&str> {
        self.discovery_url.as_deref()
    }
    /// <p>A string that identifies the type of OIDC service represented by this identity source. </p>
    /// <p>At this time, the only valid value is <code>cognito</code>.</p>
    pub fn open_id_issuer(&self) -> ::std::option::Option<&crate::types::OpenIdIssuer> {
        self.open_id_issuer.as_ref()
    }
}
impl IdentitySourceDetails {
    /// Creates a new builder-style object to manufacture [`IdentitySourceDetails`](crate::types::IdentitySourceDetails).
    pub fn builder() -> crate::types::builders::IdentitySourceDetailsBuilder {
        crate::types::builders::IdentitySourceDetailsBuilder::default()
    }
}

/// A builder for [`IdentitySourceDetails`](crate::types::IdentitySourceDetails).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct IdentitySourceDetailsBuilder {
    pub(crate) client_ids: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
    pub(crate) user_pool_arn: ::std::option::Option<::std::string::String>,
    pub(crate) discovery_url: ::std::option::Option<::std::string::String>,
    pub(crate) open_id_issuer: ::std::option::Option<crate::types::OpenIdIssuer>,
}
impl IdentitySourceDetailsBuilder {
    /// Appends an item to `client_ids`.
    ///
    /// To override the contents of this collection use [`set_client_ids`](Self::set_client_ids).
    ///
    /// <p>The application client IDs associated with the specified Amazon Cognito user pool that are enabled for this identity source.</p>
    pub fn client_ids(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        let mut v = self.client_ids.unwrap_or_default();
        v.push(input.into());
        self.client_ids = ::std::option::Option::Some(v);
        self
    }
    /// <p>The application client IDs associated with the specified Amazon Cognito user pool that are enabled for this identity source.</p>
    pub fn set_client_ids(mut self, input: ::std::option::Option<::std::vec::Vec<::std::string::String>>) -> Self {
        self.client_ids = input;
        self
    }
    /// <p>The application client IDs associated with the specified Amazon Cognito user pool that are enabled for this identity source.</p>
    pub fn get_client_ids(&self) -> &::std::option::Option<::std::vec::Vec<::std::string::String>> {
        &self.client_ids
    }
    /// <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Name (ARN)</a> of the Amazon Cognito user pool whose identities are accessible to this Verified Permissions policy store.</p>
    pub fn user_pool_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.user_pool_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Name (ARN)</a> of the Amazon Cognito user pool whose identities are accessible to this Verified Permissions policy store.</p>
    pub fn set_user_pool_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.user_pool_arn = input;
        self
    }
    /// <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Name (ARN)</a> of the Amazon Cognito user pool whose identities are accessible to this Verified Permissions policy store.</p>
    pub fn get_user_pool_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.user_pool_arn
    }
    /// <p>The well-known URL that points to this user pool's OIDC discovery endpoint. This is a URL string in the following format. This URL replaces the placeholders for both the Amazon Web Services Region and the user pool identifier with those appropriate for this user pool.</p>
    /// <p> <code>https://cognito-idp.<i>&lt;region&gt;</i>.amazonaws.com/<i>&lt;user-pool-id&gt;</i>/.well-known/openid-configuration</code> </p>
    pub fn discovery_url(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.discovery_url = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The well-known URL that points to this user pool's OIDC discovery endpoint. This is a URL string in the following format. This URL replaces the placeholders for both the Amazon Web Services Region and the user pool identifier with those appropriate for this user pool.</p>
    /// <p> <code>https://cognito-idp.<i>&lt;region&gt;</i>.amazonaws.com/<i>&lt;user-pool-id&gt;</i>/.well-known/openid-configuration</code> </p>
    pub fn set_discovery_url(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.discovery_url = input;
        self
    }
    /// <p>The well-known URL that points to this user pool's OIDC discovery endpoint. This is a URL string in the following format. This URL replaces the placeholders for both the Amazon Web Services Region and the user pool identifier with those appropriate for this user pool.</p>
    /// <p> <code>https://cognito-idp.<i>&lt;region&gt;</i>.amazonaws.com/<i>&lt;user-pool-id&gt;</i>/.well-known/openid-configuration</code> </p>
    pub fn get_discovery_url(&self) -> &::std::option::Option<::std::string::String> {
        &self.discovery_url
    }
    /// <p>A string that identifies the type of OIDC service represented by this identity source. </p>
    /// <p>At this time, the only valid value is <code>cognito</code>.</p>
    pub fn open_id_issuer(mut self, input: crate::types::OpenIdIssuer) -> Self {
        self.open_id_issuer = ::std::option::Option::Some(input);
        self
    }
    /// <p>A string that identifies the type of OIDC service represented by this identity source. </p>
    /// <p>At this time, the only valid value is <code>cognito</code>.</p>
    pub fn set_open_id_issuer(mut self, input: ::std::option::Option<crate::types::OpenIdIssuer>) -> Self {
        self.open_id_issuer = input;
        self
    }
    /// <p>A string that identifies the type of OIDC service represented by this identity source. </p>
    /// <p>At this time, the only valid value is <code>cognito</code>.</p>
    pub fn get_open_id_issuer(&self) -> &::std::option::Option<crate::types::OpenIdIssuer> {
        &self.open_id_issuer
    }
    /// Consumes the builder and constructs a [`IdentitySourceDetails`](crate::types::IdentitySourceDetails).
    pub fn build(self) -> crate::types::IdentitySourceDetails {
        crate::types::IdentitySourceDetails {
            client_ids: self.client_ids,
            user_pool_arn: self.user_pool_arn,
            discovery_url: self.discovery_url,
            open_id_issuer: self.open_id_issuer,
        }
    }
}
