// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeletePolicy`](crate::operation::delete_policy::builders::DeletePolicyFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`policy_store_id(impl Into<String>)`](crate::operation::delete_policy::builders::DeletePolicyFluentBuilder::policy_store_id) / [`set_policy_store_id(Option<String>)`](crate::operation::delete_policy::builders::DeletePolicyFluentBuilder::set_policy_store_id):<br>required: **true**<br><p>Specifies the ID of the policy store that contains the policy that you want to delete.</p><br>
    ///   - [`policy_id(impl Into<String>)`](crate::operation::delete_policy::builders::DeletePolicyFluentBuilder::policy_id) / [`set_policy_id(Option<String>)`](crate::operation::delete_policy::builders::DeletePolicyFluentBuilder::set_policy_id):<br>required: **true**<br><p>Specifies the ID of the policy that you want to delete.</p><br>
    /// - On success, responds with [`DeletePolicyOutput`](crate::operation::delete_policy::DeletePolicyOutput)
    /// - On failure, responds with [`SdkError<DeletePolicyError>`](crate::operation::delete_policy::DeletePolicyError)
    pub fn delete_policy(&self) -> crate::operation::delete_policy::builders::DeletePolicyFluentBuilder {
        crate::operation::delete_policy::builders::DeletePolicyFluentBuilder::new(self.handle.clone())
    }
}
