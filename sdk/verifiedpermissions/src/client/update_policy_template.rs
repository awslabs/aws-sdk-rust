// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdatePolicyTemplate`](crate::operation::update_policy_template::builders::UpdatePolicyTemplateFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`policy_store_id(impl Into<String>)`](crate::operation::update_policy_template::builders::UpdatePolicyTemplateFluentBuilder::policy_store_id) / [`set_policy_store_id(Option<String>)`](crate::operation::update_policy_template::builders::UpdatePolicyTemplateFluentBuilder::set_policy_store_id):<br>required: **true**<br><p>Specifies the ID of the policy store that contains the policy template that you want to update.</p><br>
    ///   - [`policy_template_id(impl Into<String>)`](crate::operation::update_policy_template::builders::UpdatePolicyTemplateFluentBuilder::policy_template_id) / [`set_policy_template_id(Option<String>)`](crate::operation::update_policy_template::builders::UpdatePolicyTemplateFluentBuilder::set_policy_template_id):<br>required: **true**<br><p>Specifies the ID of the policy template that you want to update.</p><br>
    ///   - [`description(impl Into<String>)`](crate::operation::update_policy_template::builders::UpdatePolicyTemplateFluentBuilder::description) / [`set_description(Option<String>)`](crate::operation::update_policy_template::builders::UpdatePolicyTemplateFluentBuilder::set_description):<br>required: **false**<br><p>Specifies a new description to apply to the policy template.</p><br>
    ///   - [`statement(impl Into<String>)`](crate::operation::update_policy_template::builders::UpdatePolicyTemplateFluentBuilder::statement) / [`set_statement(Option<String>)`](crate::operation::update_policy_template::builders::UpdatePolicyTemplateFluentBuilder::set_statement):<br>required: **true**<br><p>Specifies new statement content written in Cedar policy language to replace the current body of the policy template.</p>  <p>You can change only the following elements of the policy body:</p>  <ul>   <li> <p>The <code>action</code> referenced by the policy template.</p> </li>   <li> <p>Any conditional clauses, such as <code>when</code> or <code>unless</code> clauses.</p> </li>  </ul>  <p>You <b>can't</b> change the following elements:</p>  <ul>   <li> <p>The effect (<code>permit</code> or <code>forbid</code>) of the policy template.</p> </li>   <li> <p>The <code>principal</code> referenced by the policy template.</p> </li>   <li> <p>The <code>resource</code> referenced by the policy template.</p> </li>  </ul><br>
    /// - On success, responds with [`UpdatePolicyTemplateOutput`](crate::operation::update_policy_template::UpdatePolicyTemplateOutput) with field(s):
    ///   - [`policy_store_id(String)`](crate::operation::update_policy_template::UpdatePolicyTemplateOutput::policy_store_id): <p>The ID of the policy store that contains the updated policy template.</p>
    ///   - [`policy_template_id(String)`](crate::operation::update_policy_template::UpdatePolicyTemplateOutput::policy_template_id): <p>The ID of the updated policy template.</p>
    ///   - [`created_date(DateTime)`](crate::operation::update_policy_template::UpdatePolicyTemplateOutput::created_date): <p>The date and time that the policy template was originally created.</p>
    ///   - [`last_updated_date(DateTime)`](crate::operation::update_policy_template::UpdatePolicyTemplateOutput::last_updated_date): <p>The date and time that the policy template was most recently updated.</p>
    /// - On failure, responds with [`SdkError<UpdatePolicyTemplateError>`](crate::operation::update_policy_template::UpdatePolicyTemplateError)
    pub fn update_policy_template(&self) -> crate::operation::update_policy_template::builders::UpdatePolicyTemplateFluentBuilder {
        crate::operation::update_policy_template::builders::UpdatePolicyTemplateFluentBuilder::new(self.handle.clone())
    }
}
