// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_policy_filter(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::types::PolicyFilter,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.principal {
        #[allow(unused_mut)]
        let mut object_2 = object.key("principal").start_object();
        crate::protocol_serde::shape_entity_reference::ser_entity_reference(&mut object_2, var_1)?;
        object_2.finish();
    }
    if let Some(var_3) = &input.resource {
        #[allow(unused_mut)]
        let mut object_4 = object.key("resource").start_object();
        crate::protocol_serde::shape_entity_reference::ser_entity_reference(&mut object_4, var_3)?;
        object_4.finish();
    }
    if let Some(var_5) = &input.policy_type {
        object.key("policyType").string(var_5.as_str());
    }
    if let Some(var_6) = &input.policy_template_id {
        object.key("policyTemplateId").string(var_6.as_str());
    }
    Ok(())
}
