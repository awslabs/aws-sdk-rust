// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_attribute_value(
    object_4: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::types::AttributeValue,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    match input {
        crate::types::AttributeValue::Boolean(inner) => {
            object_4.key("boolean").boolean(*inner);
        }
        crate::types::AttributeValue::EntityIdentifier(inner) => {
            #[allow(unused_mut)]
            let mut object_1 = object_4.key("entityIdentifier").start_object();
            crate::protocol_serde::shape_entity_identifier::ser_entity_identifier(&mut object_1, inner)?;
            object_1.finish();
        }
        crate::types::AttributeValue::Long(inner) => {
            object_4.key("long").number(
                #[allow(clippy::useless_conversion)]
                ::aws_smithy_types::Number::NegInt((*inner).into()),
            );
        }
        crate::types::AttributeValue::String(inner) => {
            object_4.key("string").string(inner.as_str());
        }
        crate::types::AttributeValue::Set(inner) => {
            let mut array_2 = object_4.key("set").start_array();
            for item_3 in inner {
                {
                    #[allow(unused_mut)]
                    let mut object_4 = array_2.value().start_object();
                    crate::protocol_serde::shape_attribute_value::ser_attribute_value(&mut object_4, item_3)?;
                    object_4.finish();
                }
            }
            array_2.finish();
        }
        crate::types::AttributeValue::Record(inner) => {
            #[allow(unused_mut)]
            let mut object_5 = object_4.key("record").start_object();
            for (key_6, value_7) in inner {
                {
                    #[allow(unused_mut)]
                    let mut object_8 = object_5.key(key_6.as_str()).start_object();
                    crate::protocol_serde::shape_attribute_value::ser_attribute_value(&mut object_8, value_7)?;
                    object_8.finish();
                }
            }
            object_5.finish();
        }
        crate::types::AttributeValue::Unknown => {
            return Err(::aws_smithy_types::error::operation::SerializationError::unknown_variant(
                "AttributeValue",
            ))
        }
    }
    Ok(())
}
