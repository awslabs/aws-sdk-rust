// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DeleteSlotTypeVersionInput {
    /// <p>The name of the slot type.</p>
    pub name: ::std::option::Option<::std::string::String>,
    /// <p>The version of the slot type to delete. You cannot delete the <code>$LATEST</code> version of the slot type. To delete the <code>$LATEST</code> version, use the <code>DeleteSlotType</code> operation.</p>
    pub version: ::std::option::Option<::std::string::String>,
}
impl DeleteSlotTypeVersionInput {
    /// <p>The name of the slot type.</p>
    pub fn name(&self) -> ::std::option::Option<&str> {
        self.name.as_deref()
    }
    /// <p>The version of the slot type to delete. You cannot delete the <code>$LATEST</code> version of the slot type. To delete the <code>$LATEST</code> version, use the <code>DeleteSlotType</code> operation.</p>
    pub fn version(&self) -> ::std::option::Option<&str> {
        self.version.as_deref()
    }
}
impl DeleteSlotTypeVersionInput {
    /// Creates a new builder-style object to manufacture [`DeleteSlotTypeVersionInput`](crate::operation::delete_slot_type_version::DeleteSlotTypeVersionInput).
    pub fn builder() -> crate::operation::delete_slot_type_version::builders::DeleteSlotTypeVersionInputBuilder {
        crate::operation::delete_slot_type_version::builders::DeleteSlotTypeVersionInputBuilder::default()
    }
}

/// A builder for [`DeleteSlotTypeVersionInput`](crate::operation::delete_slot_type_version::DeleteSlotTypeVersionInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DeleteSlotTypeVersionInputBuilder {
    pub(crate) name: ::std::option::Option<::std::string::String>,
    pub(crate) version: ::std::option::Option<::std::string::String>,
}
impl DeleteSlotTypeVersionInputBuilder {
    /// <p>The name of the slot type.</p>
    /// This field is required.
    pub fn name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the slot type.</p>
    pub fn set_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>The name of the slot type.</p>
    pub fn get_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.name
    }
    /// <p>The version of the slot type to delete. You cannot delete the <code>$LATEST</code> version of the slot type. To delete the <code>$LATEST</code> version, use the <code>DeleteSlotType</code> operation.</p>
    /// This field is required.
    pub fn version(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.version = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The version of the slot type to delete. You cannot delete the <code>$LATEST</code> version of the slot type. To delete the <code>$LATEST</code> version, use the <code>DeleteSlotType</code> operation.</p>
    pub fn set_version(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.version = input;
        self
    }
    /// <p>The version of the slot type to delete. You cannot delete the <code>$LATEST</code> version of the slot type. To delete the <code>$LATEST</code> version, use the <code>DeleteSlotType</code> operation.</p>
    pub fn get_version(&self) -> &::std::option::Option<::std::string::String> {
        &self.version
    }
    /// Consumes the builder and constructs a [`DeleteSlotTypeVersionInput`](crate::operation::delete_slot_type_version::DeleteSlotTypeVersionInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::delete_slot_type_version::DeleteSlotTypeVersionInput, ::aws_smithy_types::error::operation::BuildError>
    {
        ::std::result::Result::Ok(crate::operation::delete_slot_type_version::DeleteSlotTypeVersionInput {
            name: self.name,
            version: self.version,
        })
    }
}
