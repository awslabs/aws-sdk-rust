// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GetBotAliasInput {
    /// <p>The name of the bot alias. The name is case sensitive.</p>
    #[doc(hidden)]
    pub name: std::option::Option<std::string::String>,
    /// <p>The name of the bot.</p>
    #[doc(hidden)]
    pub bot_name: std::option::Option<std::string::String>,
}
impl GetBotAliasInput {
    /// <p>The name of the bot alias. The name is case sensitive.</p>
    pub fn name(&self) -> std::option::Option<&str> {
        self.name.as_deref()
    }
    /// <p>The name of the bot.</p>
    pub fn bot_name(&self) -> std::option::Option<&str> {
        self.bot_name.as_deref()
    }
}
impl GetBotAliasInput {
    /// Creates a new builder-style object to manufacture [`GetBotAliasInput`](crate::operation::get_bot_alias::GetBotAliasInput).
    pub fn builder() -> crate::operation::get_bot_alias::builders::GetBotAliasInputBuilder {
        crate::operation::get_bot_alias::builders::GetBotAliasInputBuilder::default()
    }
}

/// A builder for [`GetBotAliasInput`](crate::operation::get_bot_alias::GetBotAliasInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct GetBotAliasInputBuilder {
    pub(crate) name: std::option::Option<std::string::String>,
    pub(crate) bot_name: std::option::Option<std::string::String>,
}
impl GetBotAliasInputBuilder {
    /// <p>The name of the bot alias. The name is case sensitive.</p>
    pub fn name(mut self, input: impl Into<std::string::String>) -> Self {
        self.name = Some(input.into());
        self
    }
    /// <p>The name of the bot alias. The name is case sensitive.</p>
    pub fn set_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>The name of the bot.</p>
    pub fn bot_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.bot_name = Some(input.into());
        self
    }
    /// <p>The name of the bot.</p>
    pub fn set_bot_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.bot_name = input;
        self
    }
    /// Consumes the builder and constructs a [`GetBotAliasInput`](crate::operation::get_bot_alias::GetBotAliasInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::get_bot_alias::GetBotAliasInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(crate::operation::get_bot_alias::GetBotAliasInput {
            name: self.name,
            bot_name: self.bot_name,
        })
    }
}
