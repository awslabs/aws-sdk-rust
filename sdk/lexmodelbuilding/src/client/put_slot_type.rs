// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`PutSlotType`](crate::operation::put_slot_type::builders::PutSlotTypeFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(impl Into<String>)`](crate::operation::put_slot_type::builders::PutSlotTypeFluentBuilder::name) / [`set_name(Option<String>)`](crate::operation::put_slot_type::builders::PutSlotTypeFluentBuilder::set_name):<br>required: **true**<br><p>The name of the slot type. The name is <i>not</i> case sensitive. </p>  <p>The name can't match a built-in slot type name, or a built-in slot type name with "AMAZON." removed. For example, because there is a built-in slot type called <code>AMAZON.DATE</code>, you can't create a custom slot type called <code>DATE</code>.</p>  <p>For a list of built-in slot types, see <a href="https://developer.amazon.com/public/solutions/alexa/alexa-skills-kit/docs/built-in-intent-ref/slot-type-reference">Slot Type Reference</a> in the <i>Alexa Skills Kit</i>.</p><br>
    ///   - [`description(impl Into<String>)`](crate::operation::put_slot_type::builders::PutSlotTypeFluentBuilder::description) / [`set_description(Option<String>)`](crate::operation::put_slot_type::builders::PutSlotTypeFluentBuilder::set_description):<br>required: **false**<br><p>A description of the slot type.</p><br>
    ///   - [`enumeration_values(EnumerationValue)`](crate::operation::put_slot_type::builders::PutSlotTypeFluentBuilder::enumeration_values) / [`set_enumeration_values(Option<Vec::<EnumerationValue>>)`](crate::operation::put_slot_type::builders::PutSlotTypeFluentBuilder::set_enumeration_values):<br>required: **false**<br><p>A list of <code>EnumerationValue</code> objects that defines the values that the slot type can take. Each value can have a list of <code>synonyms</code>, which are additional values that help train the machine learning model about the values that it resolves for a slot. </p>  <p>A regular expression slot type doesn't require enumeration values. All other slot types require a list of enumeration values.</p>  <p>When Amazon Lex resolves a slot value, it generates a resolution list that contains up to five possible values for the slot. If you are using a Lambda function, this resolution list is passed to the function. If you are not using a Lambda function you can choose to return the value that the user entered or the first value in the resolution list as the slot value. The <code>valueSelectionStrategy</code> field indicates the option to use. </p><br>
    ///   - [`checksum(impl Into<String>)`](crate::operation::put_slot_type::builders::PutSlotTypeFluentBuilder::checksum) / [`set_checksum(Option<String>)`](crate::operation::put_slot_type::builders::PutSlotTypeFluentBuilder::set_checksum):<br>required: **false**<br><p>Identifies a specific revision of the <code>$LATEST</code> version.</p>  <p>When you create a new slot type, leave the <code>checksum</code> field blank. If you specify a checksum you get a <code>BadRequestException</code> exception.</p>  <p>When you want to update a slot type, set the <code>checksum</code> field to the checksum of the most recent revision of the <code>$LATEST</code> version. If you don't specify the <code> checksum</code> field, or if the checksum does not match the <code>$LATEST</code> version, you get a <code>PreconditionFailedException</code> exception.</p><br>
    ///   - [`value_selection_strategy(SlotValueSelectionStrategy)`](crate::operation::put_slot_type::builders::PutSlotTypeFluentBuilder::value_selection_strategy) / [`set_value_selection_strategy(Option<SlotValueSelectionStrategy>)`](crate::operation::put_slot_type::builders::PutSlotTypeFluentBuilder::set_value_selection_strategy):<br>required: **false**<br><p>Determines the slot resolution strategy that Amazon Lex uses to return slot type values. The field can be set to one of the following values:</p>  <ul>   <li> <p> <code>ORIGINAL_VALUE</code> - Returns the value entered by the user, if the user value is similar to the slot value.</p> </li>   <li> <p> <code>TOP_RESOLUTION</code> - If there is a resolution list for the slot, return the first value in the resolution list as the slot type value. If there is no resolution list, null is returned.</p> </li>  </ul>  <p>If you don't specify the <code>valueSelectionStrategy</code>, the default is <code>ORIGINAL_VALUE</code>.</p><br>
    ///   - [`create_version(bool)`](crate::operation::put_slot_type::builders::PutSlotTypeFluentBuilder::create_version) / [`set_create_version(Option<bool>)`](crate::operation::put_slot_type::builders::PutSlotTypeFluentBuilder::set_create_version):<br>required: **false**<br><p>When set to <code>true</code> a new numbered version of the slot type is created. This is the same as calling the <code>CreateSlotTypeVersion</code> operation. If you do not specify <code>createVersion</code>, the default is <code>false</code>.</p><br>
    ///   - [`parent_slot_type_signature(impl Into<String>)`](crate::operation::put_slot_type::builders::PutSlotTypeFluentBuilder::parent_slot_type_signature) / [`set_parent_slot_type_signature(Option<String>)`](crate::operation::put_slot_type::builders::PutSlotTypeFluentBuilder::set_parent_slot_type_signature):<br>required: **false**<br><p>The built-in slot type used as the parent of the slot type. When you define a parent slot type, the new slot type has all of the same configuration as the parent.</p>  <p>Only <code>AMAZON.AlphaNumeric</code> is supported.</p><br>
    ///   - [`slot_type_configurations(SlotTypeConfiguration)`](crate::operation::put_slot_type::builders::PutSlotTypeFluentBuilder::slot_type_configurations) / [`set_slot_type_configurations(Option<Vec::<SlotTypeConfiguration>>)`](crate::operation::put_slot_type::builders::PutSlotTypeFluentBuilder::set_slot_type_configurations):<br>required: **false**<br><p>Configuration information that extends the parent built-in slot type. The configuration is added to the settings for the parent slot type.</p><br>
    /// - On success, responds with [`PutSlotTypeOutput`](crate::operation::put_slot_type::PutSlotTypeOutput) with field(s):
    ///   - [`name(Option<String>)`](crate::operation::put_slot_type::PutSlotTypeOutput::name): <p>The name of the slot type.</p>
    ///   - [`description(Option<String>)`](crate::operation::put_slot_type::PutSlotTypeOutput::description): <p>A description of the slot type.</p>
    ///   - [`enumeration_values(Option<Vec::<EnumerationValue>>)`](crate::operation::put_slot_type::PutSlotTypeOutput::enumeration_values): <p>A list of <code>EnumerationValue</code> objects that defines the values that the slot type can take.</p>
    ///   - [`last_updated_date(Option<DateTime>)`](crate::operation::put_slot_type::PutSlotTypeOutput::last_updated_date): <p>The date that the slot type was updated. When you create a slot type, the creation date and last update date are the same.</p>
    ///   - [`created_date(Option<DateTime>)`](crate::operation::put_slot_type::PutSlotTypeOutput::created_date): <p>The date that the slot type was created.</p>
    ///   - [`version(Option<String>)`](crate::operation::put_slot_type::PutSlotTypeOutput::version): <p>The version of the slot type. For a new slot type, the version is always <code>$LATEST</code>. </p>
    ///   - [`checksum(Option<String>)`](crate::operation::put_slot_type::PutSlotTypeOutput::checksum): <p>Checksum of the <code>$LATEST</code> version of the slot type.</p>
    ///   - [`value_selection_strategy(Option<SlotValueSelectionStrategy>)`](crate::operation::put_slot_type::PutSlotTypeOutput::value_selection_strategy): <p>The slot resolution strategy that Amazon Lex uses to determine the value of the slot. For more information, see <code>PutSlotType</code>.</p>
    ///   - [`create_version(Option<bool>)`](crate::operation::put_slot_type::PutSlotTypeOutput::create_version): <p> <code>True</code> if a new version of the slot type was created. If the <code>createVersion</code> field was not specified in the request, the <code>createVersion</code> field is set to false in the response.</p>
    ///   - [`parent_slot_type_signature(Option<String>)`](crate::operation::put_slot_type::PutSlotTypeOutput::parent_slot_type_signature): <p>The built-in slot type used as the parent of the slot type.</p>
    ///   - [`slot_type_configurations(Option<Vec::<SlotTypeConfiguration>>)`](crate::operation::put_slot_type::PutSlotTypeOutput::slot_type_configurations): <p>Configuration information that extends the parent built-in slot type.</p>
    /// - On failure, responds with [`SdkError<PutSlotTypeError>`](crate::operation::put_slot_type::PutSlotTypeError)
    pub fn put_slot_type(&self) -> crate::operation::put_slot_type::builders::PutSlotTypeFluentBuilder {
        crate::operation::put_slot_type::builders::PutSlotTypeFluentBuilder::new(self.handle.clone())
    }
}
