// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetBotAliases`](crate::operation::get_bot_aliases::builders::GetBotAliasesFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::get_bot_aliases::builders::GetBotAliasesFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`bot_name(impl Into<String>)`](crate::operation::get_bot_aliases::builders::GetBotAliasesFluentBuilder::bot_name) / [`set_bot_name(Option<String>)`](crate::operation::get_bot_aliases::builders::GetBotAliasesFluentBuilder::set_bot_name):<br>required: **true**<br><p>The name of the bot.</p><br>
    ///   - [`next_token(impl Into<String>)`](crate::operation::get_bot_aliases::builders::GetBotAliasesFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::get_bot_aliases::builders::GetBotAliasesFluentBuilder::set_next_token):<br>required: **false**<br><p>A pagination token for fetching the next page of aliases. If the response to this call is truncated, Amazon Lex returns a pagination token in the response. To fetch the next page of aliases, specify the pagination token in the next request. </p><br>
    ///   - [`max_results(i32)`](crate::operation::get_bot_aliases::builders::GetBotAliasesFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::get_bot_aliases::builders::GetBotAliasesFluentBuilder::set_max_results):<br>required: **false**<br><p>The maximum number of aliases to return in the response. The default is 50. . </p><br>
    ///   - [`name_contains(impl Into<String>)`](crate::operation::get_bot_aliases::builders::GetBotAliasesFluentBuilder::name_contains) / [`set_name_contains(Option<String>)`](crate::operation::get_bot_aliases::builders::GetBotAliasesFluentBuilder::set_name_contains):<br>required: **false**<br><p>Substring to match in bot alias names. An alias will be returned if any part of its name matches the substring. For example, "xyz" matches both "xyzabc" and "abcxyz."</p><br>
    /// - On success, responds with [`GetBotAliasesOutput`](crate::operation::get_bot_aliases::GetBotAliasesOutput) with field(s):
    ///   - [`bot_aliases(Option<Vec::<BotAliasMetadata>>)`](crate::operation::get_bot_aliases::GetBotAliasesOutput::bot_aliases): <p>An array of <code>BotAliasMetadata</code> objects, each describing a bot alias.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::get_bot_aliases::GetBotAliasesOutput::next_token): <p>A pagination token for fetching next page of aliases. If the response to this call is truncated, Amazon Lex returns a pagination token in the response. To fetch the next page of aliases, specify the pagination token in the next request. </p>
    /// - On failure, responds with [`SdkError<GetBotAliasesError>`](crate::operation::get_bot_aliases::GetBotAliasesError)
    pub fn get_bot_aliases(&self) -> crate::operation::get_bot_aliases::builders::GetBotAliasesFluentBuilder {
        crate::operation::get_bot_aliases::builders::GetBotAliasesFluentBuilder::new(self.handle.clone())
    }
}
