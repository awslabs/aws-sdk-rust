// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetIntent`](crate::client::fluent_builders::GetIntent) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(impl Into<String>)`](crate::client::fluent_builders::GetIntent::name) / [`set_name(Option<String>)`](crate::client::fluent_builders::GetIntent::set_name): <p>The name of the intent. The name is case sensitive. </p>
    ///   - [`version(impl Into<String>)`](crate::client::fluent_builders::GetIntent::version) / [`set_version(Option<String>)`](crate::client::fluent_builders::GetIntent::set_version): <p>The version of the intent.</p>
    /// - On success, responds with [`GetIntentOutput`](crate::output::GetIntentOutput) with field(s):
    ///   - [`name(Option<String>)`](crate::output::GetIntentOutput::name): <p>The name of the intent.</p>
    ///   - [`description(Option<String>)`](crate::output::GetIntentOutput::description): <p>A description of the intent.</p>
    ///   - [`slots(Option<Vec<Slot>>)`](crate::output::GetIntentOutput::slots): <p>An array of intent slots configured for the intent.</p>
    ///   - [`sample_utterances(Option<Vec<String>>)`](crate::output::GetIntentOutput::sample_utterances): <p>An array of sample utterances configured for the intent.</p>
    ///   - [`confirmation_prompt(Option<Prompt>)`](crate::output::GetIntentOutput::confirmation_prompt): <p>If defined in the bot, Amazon Lex uses prompt to confirm the intent before fulfilling the user's request. For more information, see <code>PutIntent</code>. </p>
    ///   - [`rejection_statement(Option<Statement>)`](crate::output::GetIntentOutput::rejection_statement): <p>If the user answers "no" to the question defined in <code>confirmationPrompt</code>, Amazon Lex responds with this statement to acknowledge that the intent was canceled. </p>
    ///   - [`follow_up_prompt(Option<FollowUpPrompt>)`](crate::output::GetIntentOutput::follow_up_prompt): <p>If defined in the bot, Amazon Lex uses this prompt to solicit additional user activity after the intent is fulfilled. For more information, see <code>PutIntent</code>.</p>
    ///   - [`conclusion_statement(Option<Statement>)`](crate::output::GetIntentOutput::conclusion_statement): <p>After the Lambda function specified in the <code>fulfillmentActivity</code> element fulfills the intent, Amazon Lex conveys this statement to the user.</p>
    ///   - [`dialog_code_hook(Option<CodeHook>)`](crate::output::GetIntentOutput::dialog_code_hook): <p>If defined in the bot, Amazon Amazon Lex invokes this Lambda function for each user input. For more information, see <code>PutIntent</code>. </p>
    ///   - [`fulfillment_activity(Option<FulfillmentActivity>)`](crate::output::GetIntentOutput::fulfillment_activity): <p>Describes how the intent is fulfilled. For more information, see <code>PutIntent</code>. </p>
    ///   - [`parent_intent_signature(Option<String>)`](crate::output::GetIntentOutput::parent_intent_signature): <p>A unique identifier for a built-in intent.</p>
    ///   - [`last_updated_date(Option<DateTime>)`](crate::output::GetIntentOutput::last_updated_date): <p>The date that the intent was updated. When you create a resource, the creation date and the last updated date are the same. </p>
    ///   - [`created_date(Option<DateTime>)`](crate::output::GetIntentOutput::created_date): <p>The date that the intent was created.</p>
    ///   - [`version(Option<String>)`](crate::output::GetIntentOutput::version): <p>The version of the intent.</p>
    ///   - [`checksum(Option<String>)`](crate::output::GetIntentOutput::checksum): <p>Checksum of the intent.</p>
    ///   - [`kendra_configuration(Option<KendraConfiguration>)`](crate::output::GetIntentOutput::kendra_configuration): <p>Configuration information, if any, to connect to an Amazon Kendra index with the <code>AMAZON.KendraSearchIntent</code> intent.</p>
    ///   - [`input_contexts(Option<Vec<InputContext>>)`](crate::output::GetIntentOutput::input_contexts): <p>An array of <code>InputContext</code> objects that lists the contexts that must be active for Amazon Lex to choose the intent in a conversation with the user.</p>
    ///   - [`output_contexts(Option<Vec<OutputContext>>)`](crate::output::GetIntentOutput::output_contexts): <p>An array of <code>OutputContext</code> objects that lists the contexts that the intent activates when the intent is fulfilled.</p>
    /// - On failure, responds with [`SdkError<GetIntentError>`](crate::error::GetIntentError)
    pub fn get_intent(&self) -> crate::client::fluent_builders::GetIntent {
        crate::client::fluent_builders::GetIntent::new(self.handle.clone())
    }
}
