// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetBotChannelAssociation`](crate::operation::get_bot_channel_association::builders::GetBotChannelAssociationFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(impl Into<String>)`](crate::operation::get_bot_channel_association::builders::GetBotChannelAssociationFluentBuilder::name) / [`set_name(Option<String>)`](crate::operation::get_bot_channel_association::builders::GetBotChannelAssociationFluentBuilder::set_name): <p>The name of the association between the bot and the channel. The name is case sensitive. </p>
    ///   - [`bot_name(impl Into<String>)`](crate::operation::get_bot_channel_association::builders::GetBotChannelAssociationFluentBuilder::bot_name) / [`set_bot_name(Option<String>)`](crate::operation::get_bot_channel_association::builders::GetBotChannelAssociationFluentBuilder::set_bot_name): <p>The name of the Amazon Lex bot.</p>
    ///   - [`bot_alias(impl Into<String>)`](crate::operation::get_bot_channel_association::builders::GetBotChannelAssociationFluentBuilder::bot_alias) / [`set_bot_alias(Option<String>)`](crate::operation::get_bot_channel_association::builders::GetBotChannelAssociationFluentBuilder::set_bot_alias): <p>An alias pointing to the specific version of the Amazon Lex bot to which this association is being made.</p>
    /// - On success, responds with [`GetBotChannelAssociationOutput`](crate::operation::get_bot_channel_association::GetBotChannelAssociationOutput) with field(s):
    ///   - [`name(Option<String>)`](crate::operation::get_bot_channel_association::GetBotChannelAssociationOutput::name): <p>The name of the association between the bot and the channel.</p>
    ///   - [`description(Option<String>)`](crate::operation::get_bot_channel_association::GetBotChannelAssociationOutput::description): <p>A description of the association between the bot and the channel.</p>
    ///   - [`bot_alias(Option<String>)`](crate::operation::get_bot_channel_association::GetBotChannelAssociationOutput::bot_alias): <p>An alias pointing to the specific version of the Amazon Lex bot to which this association is being made.</p>
    ///   - [`bot_name(Option<String>)`](crate::operation::get_bot_channel_association::GetBotChannelAssociationOutput::bot_name): <p>The name of the Amazon Lex bot.</p>
    ///   - [`created_date(Option<DateTime>)`](crate::operation::get_bot_channel_association::GetBotChannelAssociationOutput::created_date): <p>The date that the association between the bot and the channel was created.</p>
    ///   - [`r#type(Option<ChannelType>)`](crate::operation::get_bot_channel_association::GetBotChannelAssociationOutput::type): <p>The type of the messaging platform.</p>
    ///   - [`bot_configuration(Option<HashMap<String, String>>)`](crate::operation::get_bot_channel_association::GetBotChannelAssociationOutput::bot_configuration): <p>Provides information that the messaging platform needs to communicate with the Amazon Lex bot.</p>
    ///   - [`status(Option<ChannelStatus>)`](crate::operation::get_bot_channel_association::GetBotChannelAssociationOutput::status): <p>The status of the bot channel. </p>  <ul>   <li> <p> <code>CREATED</code> - The channel has been created and is ready for use.</p> </li>   <li> <p> <code>IN_PROGRESS</code> - Channel creation is in progress.</p> </li>   <li> <p> <code>FAILED</code> - There was an error creating the channel. For information about the reason for the failure, see the <code>failureReason</code> field.</p> </li>  </ul>
    ///   - [`failure_reason(Option<String>)`](crate::operation::get_bot_channel_association::GetBotChannelAssociationOutput::failure_reason): <p>If <code>status</code> is <code>FAILED</code>, Amazon Lex provides the reason that it failed to create the association.</p>
    /// - On failure, responds with [`SdkError<GetBotChannelAssociationError>`](crate::operation::get_bot_channel_association::GetBotChannelAssociationError)
    pub fn get_bot_channel_association(&self) -> crate::operation::get_bot_channel_association::builders::GetBotChannelAssociationFluentBuilder{
        crate::operation::get_bot_channel_association::builders::GetBotChannelAssociationFluentBuilder::new(self.handle.clone())
    }
}
