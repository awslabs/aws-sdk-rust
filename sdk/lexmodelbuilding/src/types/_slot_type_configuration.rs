// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Provides configuration information for a slot type.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct SlotTypeConfiguration {
    /// <p>A regular expression used to validate the value of a slot.</p>
    #[doc(hidden)]
    pub regex_configuration: std::option::Option<crate::types::SlotTypeRegexConfiguration>,
}
impl SlotTypeConfiguration {
    /// <p>A regular expression used to validate the value of a slot.</p>
    pub fn regex_configuration(
        &self,
    ) -> std::option::Option<&crate::types::SlotTypeRegexConfiguration> {
        self.regex_configuration.as_ref()
    }
}
impl SlotTypeConfiguration {
    /// Creates a new builder-style object to manufacture [`SlotTypeConfiguration`](crate::types::SlotTypeConfiguration).
    pub fn builder() -> crate::types::builders::SlotTypeConfigurationBuilder {
        crate::types::builders::SlotTypeConfigurationBuilder::default()
    }
}

/// A builder for [`SlotTypeConfiguration`](crate::types::SlotTypeConfiguration).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct SlotTypeConfigurationBuilder {
    pub(crate) regex_configuration: std::option::Option<crate::types::SlotTypeRegexConfiguration>,
}
impl SlotTypeConfigurationBuilder {
    /// <p>A regular expression used to validate the value of a slot.</p>
    pub fn regex_configuration(mut self, input: crate::types::SlotTypeRegexConfiguration) -> Self {
        self.regex_configuration = Some(input);
        self
    }
    /// <p>A regular expression used to validate the value of a slot.</p>
    pub fn set_regex_configuration(
        mut self,
        input: std::option::Option<crate::types::SlotTypeRegexConfiguration>,
    ) -> Self {
        self.regex_configuration = input;
        self
    }
    /// Consumes the builder and constructs a [`SlotTypeConfiguration`](crate::types::SlotTypeConfiguration).
    pub fn build(self) -> crate::types::SlotTypeConfiguration {
        crate::types::SlotTypeConfiguration {
            regex_configuration: self.regex_configuration,
        }
    }
}
