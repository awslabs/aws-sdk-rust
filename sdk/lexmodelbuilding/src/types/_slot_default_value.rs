// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A default value for a slot.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct SlotDefaultValue {
    /// <p>The default value for the slot. You can specify one of the following:</p>
    /// <ul>
    /// <li> <p> <code>#context-name.slot-name</code> - The slot value "slot-name" in the context "context-name."</p> </li>
    /// <li> <p> <code>{attribute}</code> - The slot value of the session attribute "attribute."</p> </li>
    /// <li> <p> <code>'value'</code> - The discrete value "value."</p> </li>
    /// </ul>
    #[doc(hidden)]
    pub default_value: std::option::Option<std::string::String>,
}
impl SlotDefaultValue {
    /// <p>The default value for the slot. You can specify one of the following:</p>
    /// <ul>
    /// <li> <p> <code>#context-name.slot-name</code> - The slot value "slot-name" in the context "context-name."</p> </li>
    /// <li> <p> <code>{attribute}</code> - The slot value of the session attribute "attribute."</p> </li>
    /// <li> <p> <code>'value'</code> - The discrete value "value."</p> </li>
    /// </ul>
    pub fn default_value(&self) -> std::option::Option<&str> {
        self.default_value.as_deref()
    }
}
impl SlotDefaultValue {
    /// Creates a new builder-style object to manufacture [`SlotDefaultValue`](crate::types::SlotDefaultValue).
    pub fn builder() -> crate::types::builders::SlotDefaultValueBuilder {
        crate::types::builders::SlotDefaultValueBuilder::default()
    }
}

/// A builder for [`SlotDefaultValue`](crate::types::SlotDefaultValue).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct SlotDefaultValueBuilder {
    pub(crate) default_value: std::option::Option<std::string::String>,
}
impl SlotDefaultValueBuilder {
    /// <p>The default value for the slot. You can specify one of the following:</p>
    /// <ul>
    /// <li> <p> <code>#context-name.slot-name</code> - The slot value "slot-name" in the context "context-name."</p> </li>
    /// <li> <p> <code>{attribute}</code> - The slot value of the session attribute "attribute."</p> </li>
    /// <li> <p> <code>'value'</code> - The discrete value "value."</p> </li>
    /// </ul>
    pub fn default_value(mut self, input: impl Into<std::string::String>) -> Self {
        self.default_value = Some(input.into());
        self
    }
    /// <p>The default value for the slot. You can specify one of the following:</p>
    /// <ul>
    /// <li> <p> <code>#context-name.slot-name</code> - The slot value "slot-name" in the context "context-name."</p> </li>
    /// <li> <p> <code>{attribute}</code> - The slot value of the session attribute "attribute."</p> </li>
    /// <li> <p> <code>'value'</code> - The discrete value "value."</p> </li>
    /// </ul>
    pub fn set_default_value(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.default_value = input;
        self
    }
    /// Consumes the builder and constructs a [`SlotDefaultValue`](crate::types::SlotDefaultValue).
    pub fn build(self) -> crate::types::SlotDefaultValue {
        crate::types::SlotDefaultValue {
            default_value: self.default_value,
        }
    }
}
