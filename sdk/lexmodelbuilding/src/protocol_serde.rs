// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) fn type_erase_result<O, E>(
    result: ::std::result::Result<O, E>,
) -> ::std::result::Result<
    ::aws_smithy_runtime_api::client::interceptors::context::Output,
    ::aws_smithy_runtime_api::client::orchestrator::OrchestratorError<::aws_smithy_runtime_api::client::interceptors::context::Error>,
>
where
    O: ::std::fmt::Debug + ::std::marker::Send + ::std::marker::Sync + 'static,
    E: ::std::error::Error + std::fmt::Debug + ::std::marker::Send + ::std::marker::Sync + 'static,
{
    result
        .map(|output| ::aws_smithy_runtime_api::client::interceptors::context::Output::erase(output))
        .map_err(|error| ::aws_smithy_runtime_api::client::interceptors::context::Error::erase(error))
        .map_err(::std::convert::Into::into)
}

pub fn parse_http_error_metadata(
    _response_status: u16,
    response_headers: &::http::HeaderMap,
    response_body: &[u8],
) -> Result<::aws_smithy_types::error::metadata::Builder, ::aws_smithy_json::deserialize::error::DeserializeError> {
    crate::json_errors::parse_error_metadata(response_body, response_headers)
}

pub(crate) mod shape_create_bot_version;

pub(crate) mod shape_create_intent_version;

pub(crate) mod shape_create_slot_type_version;

pub(crate) mod shape_delete_bot;

pub(crate) mod shape_delete_bot_alias;

pub(crate) mod shape_delete_bot_channel_association;

pub(crate) mod shape_delete_bot_version;

pub(crate) mod shape_delete_intent;

pub(crate) mod shape_delete_intent_version;

pub(crate) mod shape_delete_slot_type;

pub(crate) mod shape_delete_slot_type_version;

pub(crate) mod shape_delete_utterances;

pub(crate) mod shape_get_bot;

pub(crate) mod shape_get_bot_alias;

pub(crate) mod shape_get_bot_aliases;

pub(crate) mod shape_get_bot_channel_association;

pub(crate) mod shape_get_bot_channel_associations;

pub(crate) mod shape_get_bot_versions;

pub(crate) mod shape_get_bots;

pub(crate) mod shape_get_builtin_intent;

pub(crate) mod shape_get_builtin_intents;

pub(crate) mod shape_get_builtin_slot_types;

pub(crate) mod shape_get_export;

pub(crate) mod shape_get_import;

pub(crate) mod shape_get_intent;

pub(crate) mod shape_get_intent_versions;

pub(crate) mod shape_get_intents;

pub(crate) mod shape_get_migration;

pub(crate) mod shape_get_migrations;

pub(crate) mod shape_get_slot_type;

pub(crate) mod shape_get_slot_type_versions;

pub(crate) mod shape_get_slot_types;

pub(crate) mod shape_get_utterances_view;

pub(crate) mod shape_list_tags_for_resource;

pub(crate) mod shape_put_bot;

pub(crate) mod shape_put_bot_alias;

pub(crate) mod shape_put_intent;

pub(crate) mod shape_put_slot_type;

pub(crate) mod shape_start_import;

pub(crate) mod shape_start_migration;

pub(crate) mod shape_tag_resource;

pub(crate) mod shape_untag_resource;

pub(crate) fn or_empty_doc(data: &[u8]) -> &[u8] {
    if data.is_empty() {
        b"{}"
    } else {
        data
    }
}

pub(crate) mod shape_access_denied_exception;

pub(crate) mod shape_bad_request_exception;

pub(crate) mod shape_conflict_exception;

pub(crate) mod shape_create_bot_version_input;

pub(crate) mod shape_create_intent_version_input;

pub(crate) mod shape_create_slot_type_version_input;

pub(crate) mod shape_internal_failure_exception;

pub(crate) mod shape_limit_exceeded_exception;

pub(crate) mod shape_not_found_exception;

pub(crate) mod shape_precondition_failed_exception;

pub(crate) mod shape_put_bot_alias_input;

pub(crate) mod shape_put_bot_input;

pub(crate) mod shape_put_intent_input;

pub(crate) mod shape_put_slot_type_input;

pub(crate) mod shape_resource_in_use_exception;

pub(crate) mod shape_start_import_input;

pub(crate) mod shape_start_migration_input;

pub(crate) mod shape_tag_resource_input;

pub(crate) mod shape_bot_alias_metadata_list;

pub(crate) mod shape_bot_channel_association_list;

pub(crate) mod shape_bot_metadata_list;

pub(crate) mod shape_builtin_intent_metadata_list;

pub(crate) mod shape_builtin_intent_slot_list;

pub(crate) mod shape_builtin_slot_type_metadata_list;

pub(crate) mod shape_channel_configuration_map;

pub(crate) mod shape_code_hook;

pub(crate) mod shape_conversation_logs_request;

pub(crate) mod shape_conversation_logs_response;

pub(crate) mod shape_enumeration_value;

pub(crate) mod shape_enumeration_values;

pub(crate) mod shape_follow_up_prompt;

pub(crate) mod shape_fulfillment_activity;

pub(crate) mod shape_input_context;

pub(crate) mod shape_input_context_list;

pub(crate) mod shape_intent;

pub(crate) mod shape_intent_list;

pub(crate) mod shape_intent_metadata_list;

pub(crate) mod shape_intent_utterance_list;

pub(crate) mod shape_kendra_configuration;

pub(crate) mod shape_lists_of_utterances;

pub(crate) mod shape_locale_list;

pub(crate) mod shape_migration_alerts;

pub(crate) mod shape_migration_summary_list;

pub(crate) mod shape_output_context;

pub(crate) mod shape_output_context_list;

pub(crate) mod shape_prompt;

pub(crate) mod shape_resource_reference;

pub(crate) mod shape_slot;

pub(crate) mod shape_slot_list;

pub(crate) mod shape_slot_type_configuration;

pub(crate) mod shape_slot_type_configurations;

pub(crate) mod shape_slot_type_metadata_list;

pub(crate) mod shape_statement;

pub(crate) mod shape_string_list;

pub(crate) mod shape_tag;

pub(crate) mod shape_tag_list;

pub(crate) mod shape_bot_alias_metadata;

pub(crate) mod shape_bot_channel_association;

pub(crate) mod shape_bot_metadata;

pub(crate) mod shape_builtin_intent_metadata;

pub(crate) mod shape_builtin_intent_slot;

pub(crate) mod shape_builtin_slot_type_metadata;

pub(crate) mod shape_intent_metadata;

pub(crate) mod shape_log_settings_request;

pub(crate) mod shape_log_settings_response_list;

pub(crate) mod shape_message;

pub(crate) mod shape_message_list;

pub(crate) mod shape_migration_alert;

pub(crate) mod shape_migration_summary;

pub(crate) mod shape_slot_default_value_spec;

pub(crate) mod shape_slot_type_metadata;

pub(crate) mod shape_slot_type_regex_configuration;

pub(crate) mod shape_utterance_list;

pub(crate) mod shape_list_of_utterance;

pub(crate) mod shape_log_settings_response;

pub(crate) mod shape_migration_alert_details;

pub(crate) mod shape_migration_alert_reference_urls;

pub(crate) mod shape_slot_default_value;

pub(crate) mod shape_slot_utterance_list;

pub(crate) mod shape_synonym_list;

pub(crate) mod shape_slot_default_value_list;

pub(crate) mod shape_utterance_data;
