// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_service_now_configuration(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::types::ServiceNowConfiguration,
) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    if let Some(var_1) = &input.host_url {
        object.key("HostUrl").string(var_1.as_str());
    }
    if let Some(var_2) = &input.secret_arn {
        object.key("SecretArn").string(var_2.as_str());
    }
    if let Some(var_3) = &input.service_now_build_version {
        object.key("ServiceNowBuildVersion").string(var_3.as_str());
    }
    if let Some(var_4) = &input.knowledge_article_configuration {
        #[allow(unused_mut)]
        let mut object_5 = object.key("KnowledgeArticleConfiguration").start_object();
        crate::protocol_serde::shape_service_now_knowledge_article_configuration::ser_service_now_knowledge_article_configuration(&mut object_5, var_4)?;
        object_5.finish();
    }
    if let Some(var_6) = &input.service_catalog_configuration {
        #[allow(unused_mut)]
        let mut object_7 = object.key("ServiceCatalogConfiguration").start_object();
        crate::protocol_serde::shape_service_now_service_catalog_configuration::ser_service_now_service_catalog_configuration(&mut object_7, var_6)?;
        object_7.finish();
    }
    if let Some(var_8) = &input.authentication_type {
        object.key("AuthenticationType").string(var_8.as_str());
    }
    Ok(())
}

pub(crate) fn de_service_now_configuration<'a, I>(
    tokens: &mut std::iter::Peekable<I>,
) -> Result<
    Option<crate::types::ServiceNowConfiguration>,
    aws_smithy_json::deserialize::error::DeserializeError,
>
where
    I: Iterator<
        Item = Result<
            aws_smithy_json::deserialize::Token<'a>,
            aws_smithy_json::deserialize::error::DeserializeError,
        >,
    >,
{
    match tokens.next().transpose()? {
        Some(aws_smithy_json::deserialize::Token::ValueNull { .. }) => Ok(None),
        Some(aws_smithy_json::deserialize::Token::StartObject { .. }) => {
            #[allow(unused_mut)]
            let mut builder = crate::types::builders::ServiceNowConfigurationBuilder::default();
            loop {
                match tokens.next().transpose()? {
                    Some(aws_smithy_json::deserialize::Token::EndObject { .. }) => break,
                    Some(aws_smithy_json::deserialize::Token::ObjectKey { key, .. }) => {
                        match key.to_unescaped()?.as_ref() {
                            "HostUrl" => {
                                builder = builder.set_host_url(
                                    aws_smithy_json::deserialize::token::expect_string_or_null(
                                        tokens.next(),
                                    )?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                                );
                            }
                            "SecretArn" => {
                                builder = builder.set_secret_arn(
                                    aws_smithy_json::deserialize::token::expect_string_or_null(
                                        tokens.next(),
                                    )?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                                );
                            }
                            "ServiceNowBuildVersion" => {
                                builder = builder.set_service_now_build_version(
                                    aws_smithy_json::deserialize::token::expect_string_or_null(
                                        tokens.next(),
                                    )?
                                    .map(|s| {
                                        s.to_unescaped().map(|u| {
                                            crate::types::ServiceNowBuildVersionType::from(
                                                u.as_ref(),
                                            )
                                        })
                                    })
                                    .transpose()?,
                                );
                            }
                            "KnowledgeArticleConfiguration" => {
                                builder = builder.set_knowledge_article_configuration(
                                    crate::protocol_serde::shape_service_now_knowledge_article_configuration::de_service_now_knowledge_article_configuration(tokens)?
                                );
                            }
                            "ServiceCatalogConfiguration" => {
                                builder = builder.set_service_catalog_configuration(
                                    crate::protocol_serde::shape_service_now_service_catalog_configuration::de_service_now_service_catalog_configuration(tokens)?
                                );
                            }
                            "AuthenticationType" => {
                                builder = builder.set_authentication_type(
                                    aws_smithy_json::deserialize::token::expect_string_or_null(
                                        tokens.next(),
                                    )?
                                    .map(|s| {
                                        s.to_unescaped().map(|u| {
                                            crate::types::ServiceNowAuthenticationType::from(
                                                u.as_ref(),
                                            )
                                        })
                                    })
                                    .transpose()?,
                                );
                            }
                            _ => aws_smithy_json::deserialize::token::skip_value(tokens)?,
                        }
                    }
                    other => {
                        return Err(
                            aws_smithy_json::deserialize::error::DeserializeError::custom(format!(
                                "expected object key or end object, found: {:?}",
                                other
                            )),
                        )
                    }
                }
            }
            Ok(Some(builder.build()))
        }
        _ => Err(
            aws_smithy_json::deserialize::error::DeserializeError::custom(
                "expected start object or null",
            ),
        ),
    }
}
