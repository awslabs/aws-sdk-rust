// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_attribute_suggestions_get_config(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::types::AttributeSuggestionsGetConfig,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.suggestion_attributes {
        let mut array_2 = object.key("SuggestionAttributes").start_array();
        for item_3 in var_1 {
            {
                array_2.value().string(item_3.as_str());
            }
        }
        array_2.finish();
    }
    if let Some(var_4) = &input.additional_response_attributes {
        let mut array_5 = object.key("AdditionalResponseAttributes").start_array();
        for item_6 in var_4 {
            {
                array_5.value().string(item_6.as_str());
            }
        }
        array_5.finish();
    }
    if let Some(var_7) = &input.attribute_filter {
        #[allow(unused_mut)]
        let mut object_8 = object.key("AttributeFilter").start_object();
        crate::protocol_serde::shape_attribute_filter::ser_attribute_filter(&mut object_8, var_7)?;
        object_8.finish();
    }
    if let Some(var_9) = &input.user_context {
        #[allow(unused_mut)]
        let mut object_10 = object.key("UserContext").start_object();
        crate::protocol_serde::shape_user_context::ser_user_context(&mut object_10, var_9)?;
        object_10.finish();
    }
    Ok(())
}
