// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_update_featured_results_set_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::update_featured_results_set::UpdateFeaturedResultsSetInput,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.index_id {
        object.key("IndexId").string(var_1.as_str());
    }
    if let Some(var_2) = &input.featured_results_set_id {
        object.key("FeaturedResultsSetId").string(var_2.as_str());
    }
    if let Some(var_3) = &input.featured_results_set_name {
        object.key("FeaturedResultsSetName").string(var_3.as_str());
    }
    if let Some(var_4) = &input.description {
        object.key("Description").string(var_4.as_str());
    }
    if let Some(var_5) = &input.status {
        object.key("Status").string(var_5.as_str());
    }
    if let Some(var_6) = &input.query_texts {
        let mut array_7 = object.key("QueryTexts").start_array();
        for item_8 in var_6 {
            {
                array_7.value().string(item_8.as_str());
            }
        }
        array_7.finish();
    }
    if let Some(var_9) = &input.featured_documents {
        let mut array_10 = object.key("FeaturedDocuments").start_array();
        for item_11 in var_9 {
            {
                #[allow(unused_mut)]
                let mut object_12 = array_10.value().start_object();
                crate::protocol_serde::shape_featured_document::ser_featured_document(&mut object_12, item_11)?;
                object_12.finish();
            }
        }
        array_10.finish();
    }
    Ok(())
}
