// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_git_hub_document_crawl_properties(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::types::GitHubDocumentCrawlProperties,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if input.crawl_repository_documents {
        object.key("CrawlRepositoryDocuments").boolean(input.crawl_repository_documents);
    }
    if input.crawl_issue {
        object.key("CrawlIssue").boolean(input.crawl_issue);
    }
    if input.crawl_issue_comment {
        object.key("CrawlIssueComment").boolean(input.crawl_issue_comment);
    }
    if input.crawl_issue_comment_attachment {
        object.key("CrawlIssueCommentAttachment").boolean(input.crawl_issue_comment_attachment);
    }
    if input.crawl_pull_request {
        object.key("CrawlPullRequest").boolean(input.crawl_pull_request);
    }
    if input.crawl_pull_request_comment {
        object.key("CrawlPullRequestComment").boolean(input.crawl_pull_request_comment);
    }
    if input.crawl_pull_request_comment_attachment {
        object
            .key("CrawlPullRequestCommentAttachment")
            .boolean(input.crawl_pull_request_comment_attachment);
    }
    Ok(())
}

pub(crate) fn de_git_hub_document_crawl_properties<'a, I>(
    tokens: &mut ::std::iter::Peekable<I>,
) -> Result<Option<crate::types::GitHubDocumentCrawlProperties>, ::aws_smithy_json::deserialize::error::DeserializeError>
where
    I: Iterator<Item = Result<::aws_smithy_json::deserialize::Token<'a>, ::aws_smithy_json::deserialize::error::DeserializeError>>,
{
    match tokens.next().transpose()? {
        Some(::aws_smithy_json::deserialize::Token::ValueNull { .. }) => Ok(None),
        Some(::aws_smithy_json::deserialize::Token::StartObject { .. }) => {
            #[allow(unused_mut)]
            let mut builder = crate::types::builders::GitHubDocumentCrawlPropertiesBuilder::default();
            loop {
                match tokens.next().transpose()? {
                    Some(::aws_smithy_json::deserialize::Token::EndObject { .. }) => break,
                    Some(::aws_smithy_json::deserialize::Token::ObjectKey { key, .. }) => match key.to_unescaped()?.as_ref() {
                        "CrawlRepositoryDocuments" => {
                            builder =
                                builder.set_crawl_repository_documents(::aws_smithy_json::deserialize::token::expect_bool_or_null(tokens.next())?);
                        }
                        "CrawlIssue" => {
                            builder = builder.set_crawl_issue(::aws_smithy_json::deserialize::token::expect_bool_or_null(tokens.next())?);
                        }
                        "CrawlIssueComment" => {
                            builder = builder.set_crawl_issue_comment(::aws_smithy_json::deserialize::token::expect_bool_or_null(tokens.next())?);
                        }
                        "CrawlIssueCommentAttachment" => {
                            builder = builder
                                .set_crawl_issue_comment_attachment(::aws_smithy_json::deserialize::token::expect_bool_or_null(tokens.next())?);
                        }
                        "CrawlPullRequest" => {
                            builder = builder.set_crawl_pull_request(::aws_smithy_json::deserialize::token::expect_bool_or_null(tokens.next())?);
                        }
                        "CrawlPullRequestComment" => {
                            builder =
                                builder.set_crawl_pull_request_comment(::aws_smithy_json::deserialize::token::expect_bool_or_null(tokens.next())?);
                        }
                        "CrawlPullRequestCommentAttachment" => {
                            builder = builder.set_crawl_pull_request_comment_attachment(::aws_smithy_json::deserialize::token::expect_bool_or_null(
                                tokens.next(),
                            )?);
                        }
                        _ => ::aws_smithy_json::deserialize::token::skip_value(tokens)?,
                    },
                    other => {
                        return Err(::aws_smithy_json::deserialize::error::DeserializeError::custom(format!(
                            "expected object key or end object, found: {:?}",
                            other
                        )))
                    }
                }
            }
            Ok(Some(builder.build()))
        }
        _ => Err(::aws_smithy_json::deserialize::error::DeserializeError::custom(
            "expected start object or null",
        )),
    }
}
