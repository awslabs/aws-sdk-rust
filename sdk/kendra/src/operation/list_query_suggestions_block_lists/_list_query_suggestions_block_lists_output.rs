// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ListQuerySuggestionsBlockListsOutput {
    /// <p>Summary items for a block list.</p>
    /// <p>This includes summary items on the block list ID, block list name, when the block list was created, when the block list was last updated, and the count of block words/phrases in the block list.</p>
    /// <p>For information on the current quota limits for block lists, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/quotas.html">Quotas for Amazon Kendra</a>.</p>
    pub block_list_summary_items: ::std::option::Option<::std::vec::Vec<crate::types::QuerySuggestionsBlockListSummary>>,
    /// <p>If the response is truncated, Amazon Kendra returns this token that you can use in the subsequent request to retrieve the next set of block lists.</p>
    pub next_token: ::std::option::Option<::std::string::String>,
    _request_id: Option<String>,
}
impl ListQuerySuggestionsBlockListsOutput {
    /// <p>Summary items for a block list.</p>
    /// <p>This includes summary items on the block list ID, block list name, when the block list was created, when the block list was last updated, and the count of block words/phrases in the block list.</p>
    /// <p>For information on the current quota limits for block lists, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/quotas.html">Quotas for Amazon Kendra</a>.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.block_list_summary_items.is_none()`.
    pub fn block_list_summary_items(&self) -> &[crate::types::QuerySuggestionsBlockListSummary] {
        self.block_list_summary_items.as_deref().unwrap_or_default()
    }
    /// <p>If the response is truncated, Amazon Kendra returns this token that you can use in the subsequent request to retrieve the next set of block lists.</p>
    pub fn next_token(&self) -> ::std::option::Option<&str> {
        self.next_token.as_deref()
    }
}
impl ::aws_http::request_id::RequestId for ListQuerySuggestionsBlockListsOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl ListQuerySuggestionsBlockListsOutput {
    /// Creates a new builder-style object to manufacture [`ListQuerySuggestionsBlockListsOutput`](crate::operation::list_query_suggestions_block_lists::ListQuerySuggestionsBlockListsOutput).
    pub fn builder() -> crate::operation::list_query_suggestions_block_lists::builders::ListQuerySuggestionsBlockListsOutputBuilder {
        crate::operation::list_query_suggestions_block_lists::builders::ListQuerySuggestionsBlockListsOutputBuilder::default()
    }
}

/// A builder for [`ListQuerySuggestionsBlockListsOutput`](crate::operation::list_query_suggestions_block_lists::ListQuerySuggestionsBlockListsOutput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ListQuerySuggestionsBlockListsOutputBuilder {
    pub(crate) block_list_summary_items: ::std::option::Option<::std::vec::Vec<crate::types::QuerySuggestionsBlockListSummary>>,
    pub(crate) next_token: ::std::option::Option<::std::string::String>,
    _request_id: Option<String>,
}
impl ListQuerySuggestionsBlockListsOutputBuilder {
    /// Appends an item to `block_list_summary_items`.
    ///
    /// To override the contents of this collection use [`set_block_list_summary_items`](Self::set_block_list_summary_items).
    ///
    /// <p>Summary items for a block list.</p>
    /// <p>This includes summary items on the block list ID, block list name, when the block list was created, when the block list was last updated, and the count of block words/phrases in the block list.</p>
    /// <p>For information on the current quota limits for block lists, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/quotas.html">Quotas for Amazon Kendra</a>.</p>
    pub fn block_list_summary_items(mut self, input: crate::types::QuerySuggestionsBlockListSummary) -> Self {
        let mut v = self.block_list_summary_items.unwrap_or_default();
        v.push(input);
        self.block_list_summary_items = ::std::option::Option::Some(v);
        self
    }
    /// <p>Summary items for a block list.</p>
    /// <p>This includes summary items on the block list ID, block list name, when the block list was created, when the block list was last updated, and the count of block words/phrases in the block list.</p>
    /// <p>For information on the current quota limits for block lists, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/quotas.html">Quotas for Amazon Kendra</a>.</p>
    pub fn set_block_list_summary_items(
        mut self,
        input: ::std::option::Option<::std::vec::Vec<crate::types::QuerySuggestionsBlockListSummary>>,
    ) -> Self {
        self.block_list_summary_items = input;
        self
    }
    /// <p>Summary items for a block list.</p>
    /// <p>This includes summary items on the block list ID, block list name, when the block list was created, when the block list was last updated, and the count of block words/phrases in the block list.</p>
    /// <p>For information on the current quota limits for block lists, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/quotas.html">Quotas for Amazon Kendra</a>.</p>
    pub fn get_block_list_summary_items(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::QuerySuggestionsBlockListSummary>> {
        &self.block_list_summary_items
    }
    /// <p>If the response is truncated, Amazon Kendra returns this token that you can use in the subsequent request to retrieve the next set of block lists.</p>
    pub fn next_token(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.next_token = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>If the response is truncated, Amazon Kendra returns this token that you can use in the subsequent request to retrieve the next set of block lists.</p>
    pub fn set_next_token(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// <p>If the response is truncated, Amazon Kendra returns this token that you can use in the subsequent request to retrieve the next set of block lists.</p>
    pub fn get_next_token(&self) -> &::std::option::Option<::std::string::String> {
        &self.next_token
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`ListQuerySuggestionsBlockListsOutput`](crate::operation::list_query_suggestions_block_lists::ListQuerySuggestionsBlockListsOutput).
    pub fn build(self) -> crate::operation::list_query_suggestions_block_lists::ListQuerySuggestionsBlockListsOutput {
        crate::operation::list_query_suggestions_block_lists::ListQuerySuggestionsBlockListsOutput {
            block_list_summary_items: self.block_list_summary_items,
            next_token: self.next_token,
            _request_id: self._request_id,
        }
    }
}
