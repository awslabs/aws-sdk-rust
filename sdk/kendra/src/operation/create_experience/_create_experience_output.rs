// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct CreateExperienceOutput {
    /// <p>The identifier of your Amazon Kendra experience.</p>
    pub id: ::std::string::String,
    _request_id: Option<String>,
}
impl CreateExperienceOutput {
    /// <p>The identifier of your Amazon Kendra experience.</p>
    pub fn id(&self) -> &str {
        use std::ops::Deref;
        self.id.deref()
    }
}
impl ::aws_http::request_id::RequestId for CreateExperienceOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl CreateExperienceOutput {
    /// Creates a new builder-style object to manufacture [`CreateExperienceOutput`](crate::operation::create_experience::CreateExperienceOutput).
    pub fn builder() -> crate::operation::create_experience::builders::CreateExperienceOutputBuilder {
        crate::operation::create_experience::builders::CreateExperienceOutputBuilder::default()
    }
}

/// A builder for [`CreateExperienceOutput`](crate::operation::create_experience::CreateExperienceOutput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct CreateExperienceOutputBuilder {
    pub(crate) id: ::std::option::Option<::std::string::String>,
    _request_id: Option<String>,
}
impl CreateExperienceOutputBuilder {
    /// <p>The identifier of your Amazon Kendra experience.</p>
    /// This field is required.
    pub fn id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The identifier of your Amazon Kendra experience.</p>
    pub fn set_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.id = input;
        self
    }
    /// <p>The identifier of your Amazon Kendra experience.</p>
    pub fn get_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.id
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`CreateExperienceOutput`](crate::operation::create_experience::CreateExperienceOutput).
    /// This method will fail if any of the following fields are not set:
    /// - [`id`](crate::operation::create_experience::builders::CreateExperienceOutputBuilder::id)
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::create_experience::CreateExperienceOutput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::operation::create_experience::CreateExperienceOutput {
            id: self.id.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "id",
                    "id was not specified but it is required when building CreateExperienceOutput",
                )
            })?,
            _request_id: self._request_id,
        })
    }
}
