// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct BatchDeleteFeaturedResultsSetInput {
    /// <p>The identifier of the index used for featuring results.</p>
    pub index_id: ::std::option::Option<::std::string::String>,
    /// <p>The identifiers of the featured results sets that you want to delete.</p>
    pub featured_results_set_ids: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
}
impl BatchDeleteFeaturedResultsSetInput {
    /// <p>The identifier of the index used for featuring results.</p>
    pub fn index_id(&self) -> ::std::option::Option<&str> {
        self.index_id.as_deref()
    }
    /// <p>The identifiers of the featured results sets that you want to delete.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.featured_results_set_ids.is_none()`.
    pub fn featured_results_set_ids(&self) -> &[::std::string::String] {
        self.featured_results_set_ids.as_deref().unwrap_or_default()
    }
}
impl BatchDeleteFeaturedResultsSetInput {
    /// Creates a new builder-style object to manufacture [`BatchDeleteFeaturedResultsSetInput`](crate::operation::batch_delete_featured_results_set::BatchDeleteFeaturedResultsSetInput).
    pub fn builder() -> crate::operation::batch_delete_featured_results_set::builders::BatchDeleteFeaturedResultsSetInputBuilder {
        crate::operation::batch_delete_featured_results_set::builders::BatchDeleteFeaturedResultsSetInputBuilder::default()
    }
}

/// A builder for [`BatchDeleteFeaturedResultsSetInput`](crate::operation::batch_delete_featured_results_set::BatchDeleteFeaturedResultsSetInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct BatchDeleteFeaturedResultsSetInputBuilder {
    pub(crate) index_id: ::std::option::Option<::std::string::String>,
    pub(crate) featured_results_set_ids: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
}
impl BatchDeleteFeaturedResultsSetInputBuilder {
    /// <p>The identifier of the index used for featuring results.</p>
    /// This field is required.
    pub fn index_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.index_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The identifier of the index used for featuring results.</p>
    pub fn set_index_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.index_id = input;
        self
    }
    /// <p>The identifier of the index used for featuring results.</p>
    pub fn get_index_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.index_id
    }
    /// Appends an item to `featured_results_set_ids`.
    ///
    /// To override the contents of this collection use [`set_featured_results_set_ids`](Self::set_featured_results_set_ids).
    ///
    /// <p>The identifiers of the featured results sets that you want to delete.</p>
    pub fn featured_results_set_ids(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        let mut v = self.featured_results_set_ids.unwrap_or_default();
        v.push(input.into());
        self.featured_results_set_ids = ::std::option::Option::Some(v);
        self
    }
    /// <p>The identifiers of the featured results sets that you want to delete.</p>
    pub fn set_featured_results_set_ids(mut self, input: ::std::option::Option<::std::vec::Vec<::std::string::String>>) -> Self {
        self.featured_results_set_ids = input;
        self
    }
    /// <p>The identifiers of the featured results sets that you want to delete.</p>
    pub fn get_featured_results_set_ids(&self) -> &::std::option::Option<::std::vec::Vec<::std::string::String>> {
        &self.featured_results_set_ids
    }
    /// Consumes the builder and constructs a [`BatchDeleteFeaturedResultsSetInput`](crate::operation::batch_delete_featured_results_set::BatchDeleteFeaturedResultsSetInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::batch_delete_featured_results_set::BatchDeleteFeaturedResultsSetInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::batch_delete_featured_results_set::BatchDeleteFeaturedResultsSetInput {
            index_id: self.index_id,
            featured_results_set_ids: self.featured_results_set_ids,
        })
    }
}
