// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AssociatePersonasToEntitiesInput {
    /// <p>The identifier of your Amazon Kendra experience.</p>
    #[doc(hidden)]
    pub id: std::option::Option<std::string::String>,
    /// <p>The identifier of the index for your Amazon Kendra experience.</p>
    #[doc(hidden)]
    pub index_id: std::option::Option<std::string::String>,
    /// <p>The personas that define the specific permissions of users or groups in your IAM Identity Center identity source. The available personas or access roles are <code>Owner</code> and <code>Viewer</code>. For more information on these personas, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/deploying-search-experience-no-code.html#access-search-experience">Providing access to your search page</a>.</p>
    #[doc(hidden)]
    pub personas: std::option::Option<std::vec::Vec<crate::types::EntityPersonaConfiguration>>,
}
impl AssociatePersonasToEntitiesInput {
    /// <p>The identifier of your Amazon Kendra experience.</p>
    pub fn id(&self) -> std::option::Option<&str> {
        self.id.as_deref()
    }
    /// <p>The identifier of the index for your Amazon Kendra experience.</p>
    pub fn index_id(&self) -> std::option::Option<&str> {
        self.index_id.as_deref()
    }
    /// <p>The personas that define the specific permissions of users or groups in your IAM Identity Center identity source. The available personas or access roles are <code>Owner</code> and <code>Viewer</code>. For more information on these personas, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/deploying-search-experience-no-code.html#access-search-experience">Providing access to your search page</a>.</p>
    pub fn personas(&self) -> std::option::Option<&[crate::types::EntityPersonaConfiguration]> {
        self.personas.as_deref()
    }
}
impl AssociatePersonasToEntitiesInput {
    /// Creates a new builder-style object to manufacture [`AssociatePersonasToEntitiesInput`](crate::operation::associate_personas_to_entities::AssociatePersonasToEntitiesInput).
    pub fn builder() -> crate::operation::associate_personas_to_entities::builders::AssociatePersonasToEntitiesInputBuilder{
        crate::operation::associate_personas_to_entities::builders::AssociatePersonasToEntitiesInputBuilder::default()
    }
}

/// A builder for [`AssociatePersonasToEntitiesInput`](crate::operation::associate_personas_to_entities::AssociatePersonasToEntitiesInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AssociatePersonasToEntitiesInputBuilder {
    pub(crate) id: std::option::Option<std::string::String>,
    pub(crate) index_id: std::option::Option<std::string::String>,
    pub(crate) personas:
        std::option::Option<std::vec::Vec<crate::types::EntityPersonaConfiguration>>,
}
impl AssociatePersonasToEntitiesInputBuilder {
    /// <p>The identifier of your Amazon Kendra experience.</p>
    pub fn id(mut self, input: impl Into<std::string::String>) -> Self {
        self.id = Some(input.into());
        self
    }
    /// <p>The identifier of your Amazon Kendra experience.</p>
    pub fn set_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.id = input;
        self
    }
    /// <p>The identifier of the index for your Amazon Kendra experience.</p>
    pub fn index_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.index_id = Some(input.into());
        self
    }
    /// <p>The identifier of the index for your Amazon Kendra experience.</p>
    pub fn set_index_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.index_id = input;
        self
    }
    /// Appends an item to `personas`.
    ///
    /// To override the contents of this collection use [`set_personas`](Self::set_personas).
    ///
    /// <p>The personas that define the specific permissions of users or groups in your IAM Identity Center identity source. The available personas or access roles are <code>Owner</code> and <code>Viewer</code>. For more information on these personas, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/deploying-search-experience-no-code.html#access-search-experience">Providing access to your search page</a>.</p>
    pub fn personas(mut self, input: crate::types::EntityPersonaConfiguration) -> Self {
        let mut v = self.personas.unwrap_or_default();
        v.push(input);
        self.personas = Some(v);
        self
    }
    /// <p>The personas that define the specific permissions of users or groups in your IAM Identity Center identity source. The available personas or access roles are <code>Owner</code> and <code>Viewer</code>. For more information on these personas, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/deploying-search-experience-no-code.html#access-search-experience">Providing access to your search page</a>.</p>
    pub fn set_personas(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::EntityPersonaConfiguration>>,
    ) -> Self {
        self.personas = input;
        self
    }
    /// Consumes the builder and constructs a [`AssociatePersonasToEntitiesInput`](crate::operation::associate_personas_to_entities::AssociatePersonasToEntitiesInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::associate_personas_to_entities::AssociatePersonasToEntitiesInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::associate_personas_to_entities::AssociatePersonasToEntitiesInput {
                id: self.id,
                index_id: self.index_id,
                personas: self.personas,
            },
        )
    }
}
