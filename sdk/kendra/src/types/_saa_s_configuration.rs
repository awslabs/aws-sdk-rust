// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Provides the configuration information to connect to GitHub Enterprise Cloud (SaaS).</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct SaaSConfiguration {
    /// <p>The name of the organization of the GitHub Enterprise Cloud (SaaS) account you want to connect to. You can find your organization name by logging into GitHub desktop and selecting <b>Your organizations</b> under your profile picture dropdown.</p>
    pub organization_name: ::std::string::String,
    /// <p>The GitHub host URL or API endpoint URL. For example, <i>https://api.github.com</i>.</p>
    pub host_url: ::std::string::String,
}
impl SaaSConfiguration {
    /// <p>The name of the organization of the GitHub Enterprise Cloud (SaaS) account you want to connect to. You can find your organization name by logging into GitHub desktop and selecting <b>Your organizations</b> under your profile picture dropdown.</p>
    pub fn organization_name(&self) -> &str {
        use std::ops::Deref;
        self.organization_name.deref()
    }
    /// <p>The GitHub host URL or API endpoint URL. For example, <i>https://api.github.com</i>.</p>
    pub fn host_url(&self) -> &str {
        use std::ops::Deref;
        self.host_url.deref()
    }
}
impl SaaSConfiguration {
    /// Creates a new builder-style object to manufacture [`SaaSConfiguration`](crate::types::SaaSConfiguration).
    pub fn builder() -> crate::types::builders::SaaSConfigurationBuilder {
        crate::types::builders::SaaSConfigurationBuilder::default()
    }
}

/// A builder for [`SaaSConfiguration`](crate::types::SaaSConfiguration).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct SaaSConfigurationBuilder {
    pub(crate) organization_name: ::std::option::Option<::std::string::String>,
    pub(crate) host_url: ::std::option::Option<::std::string::String>,
}
impl SaaSConfigurationBuilder {
    /// <p>The name of the organization of the GitHub Enterprise Cloud (SaaS) account you want to connect to. You can find your organization name by logging into GitHub desktop and selecting <b>Your organizations</b> under your profile picture dropdown.</p>
    /// This field is required.
    pub fn organization_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.organization_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the organization of the GitHub Enterprise Cloud (SaaS) account you want to connect to. You can find your organization name by logging into GitHub desktop and selecting <b>Your organizations</b> under your profile picture dropdown.</p>
    pub fn set_organization_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.organization_name = input;
        self
    }
    /// <p>The name of the organization of the GitHub Enterprise Cloud (SaaS) account you want to connect to. You can find your organization name by logging into GitHub desktop and selecting <b>Your organizations</b> under your profile picture dropdown.</p>
    pub fn get_organization_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.organization_name
    }
    /// <p>The GitHub host URL or API endpoint URL. For example, <i>https://api.github.com</i>.</p>
    /// This field is required.
    pub fn host_url(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.host_url = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The GitHub host URL or API endpoint URL. For example, <i>https://api.github.com</i>.</p>
    pub fn set_host_url(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.host_url = input;
        self
    }
    /// <p>The GitHub host URL or API endpoint URL. For example, <i>https://api.github.com</i>.</p>
    pub fn get_host_url(&self) -> &::std::option::Option<::std::string::String> {
        &self.host_url
    }
    /// Consumes the builder and constructs a [`SaaSConfiguration`](crate::types::SaaSConfiguration).
    /// This method will fail if any of the following fields are not set:
    /// - [`organization_name`](crate::types::builders::SaaSConfigurationBuilder::organization_name)
    /// - [`host_url`](crate::types::builders::SaaSConfigurationBuilder::host_url)
    pub fn build(self) -> ::std::result::Result<crate::types::SaaSConfiguration, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::SaaSConfiguration {
            organization_name: self.organization_name.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "organization_name",
                    "organization_name was not specified but it is required when building SaaSConfiguration",
                )
            })?,
            host_url: self.host_url.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "host_url",
                    "host_url was not specified but it is required when building SaaSConfiguration",
                )
            })?,
        })
    }
}
