// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Provides the configuration information for suggested query spell corrections.</p>
/// <p>Suggested spell corrections are based on words that appear in your indexed documents and how closely a corrected word matches a misspelled word.</p>
/// <p>This feature is designed with certain defaults or limits. For information on the current limits and how to request more support for some limits, see the <a href="https://docs.aws.amazon.com/kendra/latest/dg/query-spell-check.html">Spell Checker documentation</a>.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct SpellCorrectionConfiguration {
    /// <p> <code>TRUE</code> to suggest spell corrections for queries.</p>
    #[doc(hidden)]
    pub include_query_spell_check_suggestions: bool,
}
impl SpellCorrectionConfiguration {
    /// <p> <code>TRUE</code> to suggest spell corrections for queries.</p>
    pub fn include_query_spell_check_suggestions(&self) -> bool {
        self.include_query_spell_check_suggestions
    }
}
impl SpellCorrectionConfiguration {
    /// Creates a new builder-style object to manufacture [`SpellCorrectionConfiguration`](crate::types::SpellCorrectionConfiguration).
    pub fn builder() -> crate::types::builders::SpellCorrectionConfigurationBuilder {
        crate::types::builders::SpellCorrectionConfigurationBuilder::default()
    }
}

/// A builder for [`SpellCorrectionConfiguration`](crate::types::SpellCorrectionConfiguration).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct SpellCorrectionConfigurationBuilder {
    pub(crate) include_query_spell_check_suggestions: std::option::Option<bool>,
}
impl SpellCorrectionConfigurationBuilder {
    /// <p> <code>TRUE</code> to suggest spell corrections for queries.</p>
    pub fn include_query_spell_check_suggestions(mut self, input: bool) -> Self {
        self.include_query_spell_check_suggestions = Some(input);
        self
    }
    /// <p> <code>TRUE</code> to suggest spell corrections for queries.</p>
    pub fn set_include_query_spell_check_suggestions(
        mut self,
        input: std::option::Option<bool>,
    ) -> Self {
        self.include_query_spell_check_suggestions = input;
        self
    }
    /// Consumes the builder and constructs a [`SpellCorrectionConfiguration`](crate::types::SpellCorrectionConfiguration).
    pub fn build(self) -> crate::types::SpellCorrectionConfiguration {
        crate::types::SpellCorrectionConfiguration {
            include_query_spell_check_suggestions: self
                .include_query_spell_check_suggestions
                .unwrap_or_default(),
        }
    }
}
