// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>User accounts whose documents should be indexed.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct OneDriveUsers {
    /// <p>A list of users whose documents should be indexed. Specify the user names in email format, for example, <code>username@tenantdomain</code>. If you need to index the documents of more than 100 users, use the <code>OneDriveUserS3Path</code> field to specify the location of a file containing a list of users.</p>
    #[doc(hidden)]
    pub one_drive_user_list: std::option::Option<std::vec::Vec<std::string::String>>,
    /// <p>The S3 bucket location of a file containing a list of users whose documents should be indexed.</p>
    #[doc(hidden)]
    pub one_drive_user_s3_path: std::option::Option<crate::types::S3Path>,
}
impl OneDriveUsers {
    /// <p>A list of users whose documents should be indexed. Specify the user names in email format, for example, <code>username@tenantdomain</code>. If you need to index the documents of more than 100 users, use the <code>OneDriveUserS3Path</code> field to specify the location of a file containing a list of users.</p>
    pub fn one_drive_user_list(&self) -> std::option::Option<&[std::string::String]> {
        self.one_drive_user_list.as_deref()
    }
    /// <p>The S3 bucket location of a file containing a list of users whose documents should be indexed.</p>
    pub fn one_drive_user_s3_path(&self) -> std::option::Option<&crate::types::S3Path> {
        self.one_drive_user_s3_path.as_ref()
    }
}
impl OneDriveUsers {
    /// Creates a new builder-style object to manufacture [`OneDriveUsers`](crate::types::OneDriveUsers).
    pub fn builder() -> crate::types::builders::OneDriveUsersBuilder {
        crate::types::builders::OneDriveUsersBuilder::default()
    }
}

/// A builder for [`OneDriveUsers`](crate::types::OneDriveUsers).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct OneDriveUsersBuilder {
    pub(crate) one_drive_user_list: std::option::Option<std::vec::Vec<std::string::String>>,
    pub(crate) one_drive_user_s3_path: std::option::Option<crate::types::S3Path>,
}
impl OneDriveUsersBuilder {
    /// Appends an item to `one_drive_user_list`.
    ///
    /// To override the contents of this collection use [`set_one_drive_user_list`](Self::set_one_drive_user_list).
    ///
    /// <p>A list of users whose documents should be indexed. Specify the user names in email format, for example, <code>username@tenantdomain</code>. If you need to index the documents of more than 100 users, use the <code>OneDriveUserS3Path</code> field to specify the location of a file containing a list of users.</p>
    pub fn one_drive_user_list(mut self, input: impl Into<std::string::String>) -> Self {
        let mut v = self.one_drive_user_list.unwrap_or_default();
        v.push(input.into());
        self.one_drive_user_list = Some(v);
        self
    }
    /// <p>A list of users whose documents should be indexed. Specify the user names in email format, for example, <code>username@tenantdomain</code>. If you need to index the documents of more than 100 users, use the <code>OneDriveUserS3Path</code> field to specify the location of a file containing a list of users.</p>
    pub fn set_one_drive_user_list(
        mut self,
        input: std::option::Option<std::vec::Vec<std::string::String>>,
    ) -> Self {
        self.one_drive_user_list = input;
        self
    }
    /// <p>The S3 bucket location of a file containing a list of users whose documents should be indexed.</p>
    pub fn one_drive_user_s3_path(mut self, input: crate::types::S3Path) -> Self {
        self.one_drive_user_s3_path = Some(input);
        self
    }
    /// <p>The S3 bucket location of a file containing a list of users whose documents should be indexed.</p>
    pub fn set_one_drive_user_s3_path(
        mut self,
        input: std::option::Option<crate::types::S3Path>,
    ) -> Self {
        self.one_drive_user_s3_path = input;
        self
    }
    /// Consumes the builder and constructs a [`OneDriveUsers`](crate::types::OneDriveUsers).
    pub fn build(self) -> crate::types::OneDriveUsers {
        crate::types::OneDriveUsers {
            one_drive_user_list: self.one_drive_user_list,
            one_drive_user_s3_path: self.one_drive_user_s3_path,
        }
    }
}
