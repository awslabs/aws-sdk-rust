// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The <code>SuggestionTextWithHighlights</code> structure information.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct SuggestionValue {
    /// <p>The <code>SuggestionTextWithHighlights</code> structure that contains the query suggestion text and highlights.</p>
    #[doc(hidden)]
    pub text: std::option::Option<crate::types::SuggestionTextWithHighlights>,
}
impl SuggestionValue {
    /// <p>The <code>SuggestionTextWithHighlights</code> structure that contains the query suggestion text and highlights.</p>
    pub fn text(&self) -> std::option::Option<&crate::types::SuggestionTextWithHighlights> {
        self.text.as_ref()
    }
}
impl SuggestionValue {
    /// Creates a new builder-style object to manufacture [`SuggestionValue`](crate::types::SuggestionValue).
    pub fn builder() -> crate::types::builders::SuggestionValueBuilder {
        crate::types::builders::SuggestionValueBuilder::default()
    }
}

/// A builder for [`SuggestionValue`](crate::types::SuggestionValue).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct SuggestionValueBuilder {
    pub(crate) text: std::option::Option<crate::types::SuggestionTextWithHighlights>,
}
impl SuggestionValueBuilder {
    /// <p>The <code>SuggestionTextWithHighlights</code> structure that contains the query suggestion text and highlights.</p>
    pub fn text(mut self, input: crate::types::SuggestionTextWithHighlights) -> Self {
        self.text = Some(input);
        self
    }
    /// <p>The <code>SuggestionTextWithHighlights</code> structure that contains the query suggestion text and highlights.</p>
    pub fn set_text(
        mut self,
        input: std::option::Option<crate::types::SuggestionTextWithHighlights>,
    ) -> Self {
        self.text = input;
        self
    }
    /// Consumes the builder and constructs a [`SuggestionValue`](crate::types::SuggestionValue).
    pub fn build(self) -> crate::types::SuggestionValue {
        crate::types::SuggestionValue { text: self.text }
    }
}
