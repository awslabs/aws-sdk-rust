// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Overrides the document relevance properties of a custom index field.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DocumentRelevanceConfiguration {
    /// <p>The name of the index field.</p>
    #[doc(hidden)]
    pub name: std::option::Option<std::string::String>,
    /// <p>Provides information for tuning the relevance of a field in a search. When a query includes terms that match the field, the results are given a boost in the response based on these tuning parameters.</p>
    #[doc(hidden)]
    pub relevance: std::option::Option<crate::types::Relevance>,
}
impl DocumentRelevanceConfiguration {
    /// <p>The name of the index field.</p>
    pub fn name(&self) -> std::option::Option<&str> {
        self.name.as_deref()
    }
    /// <p>Provides information for tuning the relevance of a field in a search. When a query includes terms that match the field, the results are given a boost in the response based on these tuning parameters.</p>
    pub fn relevance(&self) -> std::option::Option<&crate::types::Relevance> {
        self.relevance.as_ref()
    }
}
impl DocumentRelevanceConfiguration {
    /// Creates a new builder-style object to manufacture [`DocumentRelevanceConfiguration`](crate::types::DocumentRelevanceConfiguration).
    pub fn builder() -> crate::types::builders::DocumentRelevanceConfigurationBuilder {
        crate::types::builders::DocumentRelevanceConfigurationBuilder::default()
    }
}

/// A builder for [`DocumentRelevanceConfiguration`](crate::types::DocumentRelevanceConfiguration).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DocumentRelevanceConfigurationBuilder {
    pub(crate) name: std::option::Option<std::string::String>,
    pub(crate) relevance: std::option::Option<crate::types::Relevance>,
}
impl DocumentRelevanceConfigurationBuilder {
    /// <p>The name of the index field.</p>
    pub fn name(mut self, input: impl Into<std::string::String>) -> Self {
        self.name = Some(input.into());
        self
    }
    /// <p>The name of the index field.</p>
    pub fn set_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>Provides information for tuning the relevance of a field in a search. When a query includes terms that match the field, the results are given a boost in the response based on these tuning parameters.</p>
    pub fn relevance(mut self, input: crate::types::Relevance) -> Self {
        self.relevance = Some(input);
        self
    }
    /// <p>Provides information for tuning the relevance of a field in a search. When a query includes terms that match the field, the results are given a boost in the response based on these tuning parameters.</p>
    pub fn set_relevance(mut self, input: std::option::Option<crate::types::Relevance>) -> Self {
        self.relevance = input;
        self
    }
    /// Consumes the builder and constructs a [`DocumentRelevanceConfiguration`](crate::types::DocumentRelevanceConfiguration).
    pub fn build(self) -> crate::types::DocumentRelevanceConfiguration {
        crate::types::DocumentRelevanceConfiguration {
            name: self.name,
            relevance: self.relevance,
        }
    }
}
