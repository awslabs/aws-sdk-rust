// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Provides the configuration information of the URLs to crawl.</p>
/// <p>You can only crawl websites that use the secure communication protocol, Hypertext Transfer Protocol Secure (HTTPS). If you receive an error when crawling a website, it could be that the website is blocked from crawling.</p>
/// <p> <i>When selecting websites to index, you must adhere to the <a href="https://aws.amazon.com/aup/">Amazon Acceptable Use Policy</a> and all other Amazon terms. Remember that you must only use Amazon Kendra Web Crawler to index your own webpages, or webpages that you have authorization to index.</i> </p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct Urls {
    /// <p>Configuration of the seed or starting point URLs of the websites you want to crawl.</p>
    /// <p>You can choose to crawl only the website host names, or the website host names with subdomains, or the website host names with subdomains and other domains that the webpages link to.</p>
    /// <p>You can list up to 100 seed URLs.</p>
    #[doc(hidden)]
    pub seed_url_configuration: std::option::Option<crate::types::SeedUrlConfiguration>,
    /// <p>Configuration of the sitemap URLs of the websites you want to crawl.</p>
    /// <p>Only URLs belonging to the same website host names are crawled. You can list up to three sitemap URLs.</p>
    #[doc(hidden)]
    pub site_maps_configuration: std::option::Option<crate::types::SiteMapsConfiguration>,
}
impl Urls {
    /// <p>Configuration of the seed or starting point URLs of the websites you want to crawl.</p>
    /// <p>You can choose to crawl only the website host names, or the website host names with subdomains, or the website host names with subdomains and other domains that the webpages link to.</p>
    /// <p>You can list up to 100 seed URLs.</p>
    pub fn seed_url_configuration(
        &self,
    ) -> std::option::Option<&crate::types::SeedUrlConfiguration> {
        self.seed_url_configuration.as_ref()
    }
    /// <p>Configuration of the sitemap URLs of the websites you want to crawl.</p>
    /// <p>Only URLs belonging to the same website host names are crawled. You can list up to three sitemap URLs.</p>
    pub fn site_maps_configuration(
        &self,
    ) -> std::option::Option<&crate::types::SiteMapsConfiguration> {
        self.site_maps_configuration.as_ref()
    }
}
impl Urls {
    /// Creates a new builder-style object to manufacture [`Urls`](crate::types::Urls).
    pub fn builder() -> crate::types::builders::UrlsBuilder {
        crate::types::builders::UrlsBuilder::default()
    }
}

/// A builder for [`Urls`](crate::types::Urls).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct UrlsBuilder {
    pub(crate) seed_url_configuration: std::option::Option<crate::types::SeedUrlConfiguration>,
    pub(crate) site_maps_configuration: std::option::Option<crate::types::SiteMapsConfiguration>,
}
impl UrlsBuilder {
    /// <p>Configuration of the seed or starting point URLs of the websites you want to crawl.</p>
    /// <p>You can choose to crawl only the website host names, or the website host names with subdomains, or the website host names with subdomains and other domains that the webpages link to.</p>
    /// <p>You can list up to 100 seed URLs.</p>
    pub fn seed_url_configuration(mut self, input: crate::types::SeedUrlConfiguration) -> Self {
        self.seed_url_configuration = Some(input);
        self
    }
    /// <p>Configuration of the seed or starting point URLs of the websites you want to crawl.</p>
    /// <p>You can choose to crawl only the website host names, or the website host names with subdomains, or the website host names with subdomains and other domains that the webpages link to.</p>
    /// <p>You can list up to 100 seed URLs.</p>
    pub fn set_seed_url_configuration(
        mut self,
        input: std::option::Option<crate::types::SeedUrlConfiguration>,
    ) -> Self {
        self.seed_url_configuration = input;
        self
    }
    /// <p>Configuration of the sitemap URLs of the websites you want to crawl.</p>
    /// <p>Only URLs belonging to the same website host names are crawled. You can list up to three sitemap URLs.</p>
    pub fn site_maps_configuration(mut self, input: crate::types::SiteMapsConfiguration) -> Self {
        self.site_maps_configuration = Some(input);
        self
    }
    /// <p>Configuration of the sitemap URLs of the websites you want to crawl.</p>
    /// <p>Only URLs belonging to the same website host names are crawled. You can list up to three sitemap URLs.</p>
    pub fn set_site_maps_configuration(
        mut self,
        input: std::option::Option<crate::types::SiteMapsConfiguration>,
    ) -> Self {
        self.site_maps_configuration = input;
        self
    }
    /// Consumes the builder and constructs a [`Urls`](crate::types::Urls).
    pub fn build(self) -> crate::types::Urls {
        crate::types::Urls {
            seed_url_configuration: self.seed_url_configuration,
            site_maps_configuration: self.site_maps_configuration,
        }
    }
}
