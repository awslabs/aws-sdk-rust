// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Provides the configuration information for users or groups in your IAM Identity Center identity source for access to your Amazon Kendra experience. Specific permissions are defined for each user or group once they are granted access to your Amazon Kendra experience.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct EntityPersonaConfiguration {
    /// <p>The identifier of a user or group in your IAM Identity Center identity source. For example, a user ID could be an email.</p>
    #[doc(hidden)]
    pub entity_id: std::option::Option<std::string::String>,
    /// <p>The persona that defines the specific permissions of the user or group in your IAM Identity Center identity source. The available personas or access roles are <code>Owner</code> and <code>Viewer</code>. For more information on these personas, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/deploying-search-experience-no-code.html#access-search-experience">Providing access to your search page</a>.</p>
    #[doc(hidden)]
    pub persona: std::option::Option<crate::types::Persona>,
}
impl EntityPersonaConfiguration {
    /// <p>The identifier of a user or group in your IAM Identity Center identity source. For example, a user ID could be an email.</p>
    pub fn entity_id(&self) -> std::option::Option<&str> {
        self.entity_id.as_deref()
    }
    /// <p>The persona that defines the specific permissions of the user or group in your IAM Identity Center identity source. The available personas or access roles are <code>Owner</code> and <code>Viewer</code>. For more information on these personas, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/deploying-search-experience-no-code.html#access-search-experience">Providing access to your search page</a>.</p>
    pub fn persona(&self) -> std::option::Option<&crate::types::Persona> {
        self.persona.as_ref()
    }
}
impl EntityPersonaConfiguration {
    /// Creates a new builder-style object to manufacture [`EntityPersonaConfiguration`](crate::types::EntityPersonaConfiguration).
    pub fn builder() -> crate::types::builders::EntityPersonaConfigurationBuilder {
        crate::types::builders::EntityPersonaConfigurationBuilder::default()
    }
}

/// A builder for [`EntityPersonaConfiguration`](crate::types::EntityPersonaConfiguration).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct EntityPersonaConfigurationBuilder {
    pub(crate) entity_id: std::option::Option<std::string::String>,
    pub(crate) persona: std::option::Option<crate::types::Persona>,
}
impl EntityPersonaConfigurationBuilder {
    /// <p>The identifier of a user or group in your IAM Identity Center identity source. For example, a user ID could be an email.</p>
    pub fn entity_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.entity_id = Some(input.into());
        self
    }
    /// <p>The identifier of a user or group in your IAM Identity Center identity source. For example, a user ID could be an email.</p>
    pub fn set_entity_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.entity_id = input;
        self
    }
    /// <p>The persona that defines the specific permissions of the user or group in your IAM Identity Center identity source. The available personas or access roles are <code>Owner</code> and <code>Viewer</code>. For more information on these personas, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/deploying-search-experience-no-code.html#access-search-experience">Providing access to your search page</a>.</p>
    pub fn persona(mut self, input: crate::types::Persona) -> Self {
        self.persona = Some(input);
        self
    }
    /// <p>The persona that defines the specific permissions of the user or group in your IAM Identity Center identity source. The available personas or access roles are <code>Owner</code> and <code>Viewer</code>. For more information on these personas, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/deploying-search-experience-no-code.html#access-search-experience">Providing access to your search page</a>.</p>
    pub fn set_persona(mut self, input: std::option::Option<crate::types::Persona>) -> Self {
        self.persona = input;
        self
    }
    /// Consumes the builder and constructs a [`EntityPersonaConfiguration`](crate::types::EntityPersonaConfiguration).
    pub fn build(self) -> crate::types::EntityPersonaConfiguration {
        crate::types::EntityPersonaConfiguration {
            entity_id: self.entity_id,
            persona: self.persona,
        }
    }
}
