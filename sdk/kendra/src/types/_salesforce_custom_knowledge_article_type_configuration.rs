// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Provides the configuration information for indexing Salesforce custom articles.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct SalesforceCustomKnowledgeArticleTypeConfiguration {
    /// <p>The name of the configuration.</p>
    #[doc(hidden)]
    pub name: std::option::Option<std::string::String>,
    /// <p>The name of the field in the custom knowledge article that contains the document data to index.</p>
    #[doc(hidden)]
    pub document_data_field_name: std::option::Option<std::string::String>,
    /// <p>The name of the field in the custom knowledge article that contains the document title.</p>
    #[doc(hidden)]
    pub document_title_field_name: std::option::Option<std::string::String>,
    /// <p>Maps attributes or field names of the custom knowledge article to Amazon Kendra index field names. To create custom fields, use the <code>UpdateIndex</code> API before you map to Salesforce fields. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/field-mapping.html">Mapping data source fields</a>. The Salesforce data source field names must exist in your Salesforce custom metadata.</p>
    #[doc(hidden)]
    pub field_mappings:
        std::option::Option<std::vec::Vec<crate::types::DataSourceToIndexFieldMapping>>,
}
impl SalesforceCustomKnowledgeArticleTypeConfiguration {
    /// <p>The name of the configuration.</p>
    pub fn name(&self) -> std::option::Option<&str> {
        self.name.as_deref()
    }
    /// <p>The name of the field in the custom knowledge article that contains the document data to index.</p>
    pub fn document_data_field_name(&self) -> std::option::Option<&str> {
        self.document_data_field_name.as_deref()
    }
    /// <p>The name of the field in the custom knowledge article that contains the document title.</p>
    pub fn document_title_field_name(&self) -> std::option::Option<&str> {
        self.document_title_field_name.as_deref()
    }
    /// <p>Maps attributes or field names of the custom knowledge article to Amazon Kendra index field names. To create custom fields, use the <code>UpdateIndex</code> API before you map to Salesforce fields. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/field-mapping.html">Mapping data source fields</a>. The Salesforce data source field names must exist in your Salesforce custom metadata.</p>
    pub fn field_mappings(
        &self,
    ) -> std::option::Option<&[crate::types::DataSourceToIndexFieldMapping]> {
        self.field_mappings.as_deref()
    }
}
impl SalesforceCustomKnowledgeArticleTypeConfiguration {
    /// Creates a new builder-style object to manufacture [`SalesforceCustomKnowledgeArticleTypeConfiguration`](crate::types::SalesforceCustomKnowledgeArticleTypeConfiguration).
    pub fn builder(
    ) -> crate::types::builders::SalesforceCustomKnowledgeArticleTypeConfigurationBuilder {
        crate::types::builders::SalesforceCustomKnowledgeArticleTypeConfigurationBuilder::default()
    }
}

/// A builder for [`SalesforceCustomKnowledgeArticleTypeConfiguration`](crate::types::SalesforceCustomKnowledgeArticleTypeConfiguration).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct SalesforceCustomKnowledgeArticleTypeConfigurationBuilder {
    pub(crate) name: std::option::Option<std::string::String>,
    pub(crate) document_data_field_name: std::option::Option<std::string::String>,
    pub(crate) document_title_field_name: std::option::Option<std::string::String>,
    pub(crate) field_mappings:
        std::option::Option<std::vec::Vec<crate::types::DataSourceToIndexFieldMapping>>,
}
impl SalesforceCustomKnowledgeArticleTypeConfigurationBuilder {
    /// <p>The name of the configuration.</p>
    pub fn name(mut self, input: impl Into<std::string::String>) -> Self {
        self.name = Some(input.into());
        self
    }
    /// <p>The name of the configuration.</p>
    pub fn set_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>The name of the field in the custom knowledge article that contains the document data to index.</p>
    pub fn document_data_field_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.document_data_field_name = Some(input.into());
        self
    }
    /// <p>The name of the field in the custom knowledge article that contains the document data to index.</p>
    pub fn set_document_data_field_name(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.document_data_field_name = input;
        self
    }
    /// <p>The name of the field in the custom knowledge article that contains the document title.</p>
    pub fn document_title_field_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.document_title_field_name = Some(input.into());
        self
    }
    /// <p>The name of the field in the custom knowledge article that contains the document title.</p>
    pub fn set_document_title_field_name(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.document_title_field_name = input;
        self
    }
    /// Appends an item to `field_mappings`.
    ///
    /// To override the contents of this collection use [`set_field_mappings`](Self::set_field_mappings).
    ///
    /// <p>Maps attributes or field names of the custom knowledge article to Amazon Kendra index field names. To create custom fields, use the <code>UpdateIndex</code> API before you map to Salesforce fields. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/field-mapping.html">Mapping data source fields</a>. The Salesforce data source field names must exist in your Salesforce custom metadata.</p>
    pub fn field_mappings(mut self, input: crate::types::DataSourceToIndexFieldMapping) -> Self {
        let mut v = self.field_mappings.unwrap_or_default();
        v.push(input);
        self.field_mappings = Some(v);
        self
    }
    /// <p>Maps attributes or field names of the custom knowledge article to Amazon Kendra index field names. To create custom fields, use the <code>UpdateIndex</code> API before you map to Salesforce fields. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/field-mapping.html">Mapping data source fields</a>. The Salesforce data source field names must exist in your Salesforce custom metadata.</p>
    pub fn set_field_mappings(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::DataSourceToIndexFieldMapping>>,
    ) -> Self {
        self.field_mappings = input;
        self
    }
    /// Consumes the builder and constructs a [`SalesforceCustomKnowledgeArticleTypeConfiguration`](crate::types::SalesforceCustomKnowledgeArticleTypeConfiguration).
    pub fn build(self) -> crate::types::SalesforceCustomKnowledgeArticleTypeConfiguration {
        crate::types::SalesforceCustomKnowledgeArticleTypeConfiguration {
            name: self.name,
            document_data_field_name: self.document_data_field_name,
            document_title_field_name: self.document_title_field_name,
            field_mappings: self.field_mappings,
        }
    }
}
