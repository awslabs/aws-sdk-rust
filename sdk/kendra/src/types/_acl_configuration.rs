// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Provides information about the column that should be used for filtering the query response by groups.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AclConfiguration {
    /// <p>A list of groups, separated by semi-colons, that filters a query response based on user context. The document is only returned to users that are in one of the groups specified in the <code>UserContext</code> field of the <code>Query</code> API.</p>
    #[doc(hidden)]
    pub allowed_groups_column_name: std::option::Option<std::string::String>,
}
impl AclConfiguration {
    /// <p>A list of groups, separated by semi-colons, that filters a query response based on user context. The document is only returned to users that are in one of the groups specified in the <code>UserContext</code> field of the <code>Query</code> API.</p>
    pub fn allowed_groups_column_name(&self) -> std::option::Option<&str> {
        self.allowed_groups_column_name.as_deref()
    }
}
impl AclConfiguration {
    /// Creates a new builder-style object to manufacture [`AclConfiguration`](crate::types::AclConfiguration).
    pub fn builder() -> crate::types::builders::AclConfigurationBuilder {
        crate::types::builders::AclConfigurationBuilder::default()
    }
}

/// A builder for [`AclConfiguration`](crate::types::AclConfiguration).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AclConfigurationBuilder {
    pub(crate) allowed_groups_column_name: std::option::Option<std::string::String>,
}
impl AclConfigurationBuilder {
    /// <p>A list of groups, separated by semi-colons, that filters a query response based on user context. The document is only returned to users that are in one of the groups specified in the <code>UserContext</code> field of the <code>Query</code> API.</p>
    pub fn allowed_groups_column_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.allowed_groups_column_name = Some(input.into());
        self
    }
    /// <p>A list of groups, separated by semi-colons, that filters a query response based on user context. The document is only returned to users that are in one of the groups specified in the <code>UserContext</code> field of the <code>Query</code> API.</p>
    pub fn set_allowed_groups_column_name(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.allowed_groups_column_name = input;
        self
    }
    /// Consumes the builder and constructs a [`AclConfiguration`](crate::types::AclConfiguration).
    pub fn build(self) -> crate::types::AclConfiguration {
        crate::types::AclConfiguration {
            allowed_groups_column_name: self.allowed_groups_column_name,
        }
    }
}
