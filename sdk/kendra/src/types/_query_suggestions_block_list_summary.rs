// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Summary information on a query suggestions block list.</p>
/// <p>This includes information on the block list ID, block list name, when the block list was created, when the block list was last updated, and the count of block words/phrases in the block list.</p>
/// <p>For information on the current quota limits for block lists, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/quotas.html">Quotas for Amazon Kendra</a>.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct QuerySuggestionsBlockListSummary {
    /// <p>The identifier of a block list.</p>
    #[doc(hidden)]
    pub id: std::option::Option<std::string::String>,
    /// <p>The name of the block list.</p>
    #[doc(hidden)]
    pub name: std::option::Option<std::string::String>,
    /// <p>The status of the block list.</p>
    #[doc(hidden)]
    pub status: std::option::Option<crate::types::QuerySuggestionsBlockListStatus>,
    /// <p>The date-time summary information for a query suggestions block list was last created.</p>
    #[doc(hidden)]
    pub created_at: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>The date-time the block list was last updated.</p>
    #[doc(hidden)]
    pub updated_at: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>The number of items in the block list file.</p>
    #[doc(hidden)]
    pub item_count: std::option::Option<i32>,
}
impl QuerySuggestionsBlockListSummary {
    /// <p>The identifier of a block list.</p>
    pub fn id(&self) -> std::option::Option<&str> {
        self.id.as_deref()
    }
    /// <p>The name of the block list.</p>
    pub fn name(&self) -> std::option::Option<&str> {
        self.name.as_deref()
    }
    /// <p>The status of the block list.</p>
    pub fn status(&self) -> std::option::Option<&crate::types::QuerySuggestionsBlockListStatus> {
        self.status.as_ref()
    }
    /// <p>The date-time summary information for a query suggestions block list was last created.</p>
    pub fn created_at(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.created_at.as_ref()
    }
    /// <p>The date-time the block list was last updated.</p>
    pub fn updated_at(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.updated_at.as_ref()
    }
    /// <p>The number of items in the block list file.</p>
    pub fn item_count(&self) -> std::option::Option<i32> {
        self.item_count
    }
}
impl QuerySuggestionsBlockListSummary {
    /// Creates a new builder-style object to manufacture [`QuerySuggestionsBlockListSummary`](crate::types::QuerySuggestionsBlockListSummary).
    pub fn builder() -> crate::types::builders::QuerySuggestionsBlockListSummaryBuilder {
        crate::types::builders::QuerySuggestionsBlockListSummaryBuilder::default()
    }
}

/// A builder for [`QuerySuggestionsBlockListSummary`](crate::types::QuerySuggestionsBlockListSummary).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct QuerySuggestionsBlockListSummaryBuilder {
    pub(crate) id: std::option::Option<std::string::String>,
    pub(crate) name: std::option::Option<std::string::String>,
    pub(crate) status: std::option::Option<crate::types::QuerySuggestionsBlockListStatus>,
    pub(crate) created_at: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) updated_at: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) item_count: std::option::Option<i32>,
}
impl QuerySuggestionsBlockListSummaryBuilder {
    /// <p>The identifier of a block list.</p>
    pub fn id(mut self, input: impl Into<std::string::String>) -> Self {
        self.id = Some(input.into());
        self
    }
    /// <p>The identifier of a block list.</p>
    pub fn set_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.id = input;
        self
    }
    /// <p>The name of the block list.</p>
    pub fn name(mut self, input: impl Into<std::string::String>) -> Self {
        self.name = Some(input.into());
        self
    }
    /// <p>The name of the block list.</p>
    pub fn set_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>The status of the block list.</p>
    pub fn status(mut self, input: crate::types::QuerySuggestionsBlockListStatus) -> Self {
        self.status = Some(input);
        self
    }
    /// <p>The status of the block list.</p>
    pub fn set_status(
        mut self,
        input: std::option::Option<crate::types::QuerySuggestionsBlockListStatus>,
    ) -> Self {
        self.status = input;
        self
    }
    /// <p>The date-time summary information for a query suggestions block list was last created.</p>
    pub fn created_at(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.created_at = Some(input);
        self
    }
    /// <p>The date-time summary information for a query suggestions block list was last created.</p>
    pub fn set_created_at(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.created_at = input;
        self
    }
    /// <p>The date-time the block list was last updated.</p>
    pub fn updated_at(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.updated_at = Some(input);
        self
    }
    /// <p>The date-time the block list was last updated.</p>
    pub fn set_updated_at(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.updated_at = input;
        self
    }
    /// <p>The number of items in the block list file.</p>
    pub fn item_count(mut self, input: i32) -> Self {
        self.item_count = Some(input);
        self
    }
    /// <p>The number of items in the block list file.</p>
    pub fn set_item_count(mut self, input: std::option::Option<i32>) -> Self {
        self.item_count = input;
        self
    }
    /// Consumes the builder and constructs a [`QuerySuggestionsBlockListSummary`](crate::types::QuerySuggestionsBlockListSummary).
    pub fn build(self) -> crate::types::QuerySuggestionsBlockListSummary {
        crate::types::QuerySuggestionsBlockListSummary {
            id: self.id,
            name: self.name,
            status: self.status,
            created_at: self.created_at,
            updated_at: self.updated_at,
            item_count: self.item_count,
        }
    }
}
