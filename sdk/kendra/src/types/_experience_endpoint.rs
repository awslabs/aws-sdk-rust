// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Provides the configuration information for the endpoint for your Amazon Kendra experience.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ExperienceEndpoint {
    /// <p>The type of endpoint for your Amazon Kendra experience. The type currently available is <code>HOME</code>, which is a unique and fully hosted URL to the home page of your Amazon Kendra experience.</p>
    #[doc(hidden)]
    pub endpoint_type: std::option::Option<crate::types::EndpointType>,
    /// <p>The endpoint of your Amazon Kendra experience.</p>
    #[doc(hidden)]
    pub endpoint: std::option::Option<std::string::String>,
}
impl ExperienceEndpoint {
    /// <p>The type of endpoint for your Amazon Kendra experience. The type currently available is <code>HOME</code>, which is a unique and fully hosted URL to the home page of your Amazon Kendra experience.</p>
    pub fn endpoint_type(&self) -> std::option::Option<&crate::types::EndpointType> {
        self.endpoint_type.as_ref()
    }
    /// <p>The endpoint of your Amazon Kendra experience.</p>
    pub fn endpoint(&self) -> std::option::Option<&str> {
        self.endpoint.as_deref()
    }
}
impl ExperienceEndpoint {
    /// Creates a new builder-style object to manufacture [`ExperienceEndpoint`](crate::types::ExperienceEndpoint).
    pub fn builder() -> crate::types::builders::ExperienceEndpointBuilder {
        crate::types::builders::ExperienceEndpointBuilder::default()
    }
}

/// A builder for [`ExperienceEndpoint`](crate::types::ExperienceEndpoint).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ExperienceEndpointBuilder {
    pub(crate) endpoint_type: std::option::Option<crate::types::EndpointType>,
    pub(crate) endpoint: std::option::Option<std::string::String>,
}
impl ExperienceEndpointBuilder {
    /// <p>The type of endpoint for your Amazon Kendra experience. The type currently available is <code>HOME</code>, which is a unique and fully hosted URL to the home page of your Amazon Kendra experience.</p>
    pub fn endpoint_type(mut self, input: crate::types::EndpointType) -> Self {
        self.endpoint_type = Some(input);
        self
    }
    /// <p>The type of endpoint for your Amazon Kendra experience. The type currently available is <code>HOME</code>, which is a unique and fully hosted URL to the home page of your Amazon Kendra experience.</p>
    pub fn set_endpoint_type(
        mut self,
        input: std::option::Option<crate::types::EndpointType>,
    ) -> Self {
        self.endpoint_type = input;
        self
    }
    /// <p>The endpoint of your Amazon Kendra experience.</p>
    pub fn endpoint(mut self, input: impl Into<std::string::String>) -> Self {
        self.endpoint = Some(input.into());
        self
    }
    /// <p>The endpoint of your Amazon Kendra experience.</p>
    pub fn set_endpoint(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.endpoint = input;
        self
    }
    /// Consumes the builder and constructs a [`ExperienceEndpoint`](crate::types::ExperienceEndpoint).
    pub fn build(self) -> crate::types::ExperienceEndpoint {
        crate::types::ExperienceEndpoint {
            endpoint_type: self.endpoint_type,
            endpoint: self.endpoint,
        }
    }
}
