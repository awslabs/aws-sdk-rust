// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Provides information about text documents indexed in an index.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct TextDocumentStatistics {
    /// <p>The number of text documents indexed.</p>
    #[doc(hidden)]
    pub indexed_text_documents_count: i32,
    /// <p>The total size, in bytes, of the indexed documents.</p>
    #[doc(hidden)]
    pub indexed_text_bytes: i64,
}
impl TextDocumentStatistics {
    /// <p>The number of text documents indexed.</p>
    pub fn indexed_text_documents_count(&self) -> i32 {
        self.indexed_text_documents_count
    }
    /// <p>The total size, in bytes, of the indexed documents.</p>
    pub fn indexed_text_bytes(&self) -> i64 {
        self.indexed_text_bytes
    }
}
impl TextDocumentStatistics {
    /// Creates a new builder-style object to manufacture [`TextDocumentStatistics`](crate::types::TextDocumentStatistics).
    pub fn builder() -> crate::types::builders::TextDocumentStatisticsBuilder {
        crate::types::builders::TextDocumentStatisticsBuilder::default()
    }
}

/// A builder for [`TextDocumentStatistics`](crate::types::TextDocumentStatistics).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct TextDocumentStatisticsBuilder {
    pub(crate) indexed_text_documents_count: std::option::Option<i32>,
    pub(crate) indexed_text_bytes: std::option::Option<i64>,
}
impl TextDocumentStatisticsBuilder {
    /// <p>The number of text documents indexed.</p>
    pub fn indexed_text_documents_count(mut self, input: i32) -> Self {
        self.indexed_text_documents_count = Some(input);
        self
    }
    /// <p>The number of text documents indexed.</p>
    pub fn set_indexed_text_documents_count(mut self, input: std::option::Option<i32>) -> Self {
        self.indexed_text_documents_count = input;
        self
    }
    /// <p>The total size, in bytes, of the indexed documents.</p>
    pub fn indexed_text_bytes(mut self, input: i64) -> Self {
        self.indexed_text_bytes = Some(input);
        self
    }
    /// <p>The total size, in bytes, of the indexed documents.</p>
    pub fn set_indexed_text_bytes(mut self, input: std::option::Option<i64>) -> Self {
        self.indexed_text_bytes = input;
        self
    }
    /// Consumes the builder and constructs a [`TextDocumentStatistics`](crate::types::TextDocumentStatistics).
    pub fn build(self) -> crate::types::TextDocumentStatistics {
        crate::types::TextDocumentStatistics {
            indexed_text_documents_count: self.indexed_text_documents_count.unwrap_or_default(),
            indexed_text_bytes: self.indexed_text_bytes.unwrap_or_default(),
        }
    }
}
