// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Provides the configuration information to use a SQL database.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct SqlConfiguration {
    /// <p>Determines whether Amazon Kendra encloses SQL identifiers for tables and column names in double quotes (") when making a database query.</p>
    /// <p>By default, Amazon Kendra passes SQL identifiers the way that they are entered into the data source configuration. It does not change the case of identifiers or enclose them in quotes.</p>
    /// <p>PostgreSQL internally converts uppercase characters to lower case characters in identifiers unless they are quoted. Choosing this option encloses identifiers in quotes so that PostgreSQL does not convert the character's case.</p>
    /// <p>For MySQL databases, you must enable the <code>ansi_quotes</code> option when you set this field to <code>DOUBLE_QUOTES</code>.</p>
    #[doc(hidden)]
    pub query_identifiers_enclosing_option:
        std::option::Option<crate::types::QueryIdentifiersEnclosingOption>,
}
impl SqlConfiguration {
    /// <p>Determines whether Amazon Kendra encloses SQL identifiers for tables and column names in double quotes (") when making a database query.</p>
    /// <p>By default, Amazon Kendra passes SQL identifiers the way that they are entered into the data source configuration. It does not change the case of identifiers or enclose them in quotes.</p>
    /// <p>PostgreSQL internally converts uppercase characters to lower case characters in identifiers unless they are quoted. Choosing this option encloses identifiers in quotes so that PostgreSQL does not convert the character's case.</p>
    /// <p>For MySQL databases, you must enable the <code>ansi_quotes</code> option when you set this field to <code>DOUBLE_QUOTES</code>.</p>
    pub fn query_identifiers_enclosing_option(
        &self,
    ) -> std::option::Option<&crate::types::QueryIdentifiersEnclosingOption> {
        self.query_identifiers_enclosing_option.as_ref()
    }
}
impl SqlConfiguration {
    /// Creates a new builder-style object to manufacture [`SqlConfiguration`](crate::types::SqlConfiguration).
    pub fn builder() -> crate::types::builders::SqlConfigurationBuilder {
        crate::types::builders::SqlConfigurationBuilder::default()
    }
}

/// A builder for [`SqlConfiguration`](crate::types::SqlConfiguration).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct SqlConfigurationBuilder {
    pub(crate) query_identifiers_enclosing_option:
        std::option::Option<crate::types::QueryIdentifiersEnclosingOption>,
}
impl SqlConfigurationBuilder {
    /// <p>Determines whether Amazon Kendra encloses SQL identifiers for tables and column names in double quotes (") when making a database query.</p>
    /// <p>By default, Amazon Kendra passes SQL identifiers the way that they are entered into the data source configuration. It does not change the case of identifiers or enclose them in quotes.</p>
    /// <p>PostgreSQL internally converts uppercase characters to lower case characters in identifiers unless they are quoted. Choosing this option encloses identifiers in quotes so that PostgreSQL does not convert the character's case.</p>
    /// <p>For MySQL databases, you must enable the <code>ansi_quotes</code> option when you set this field to <code>DOUBLE_QUOTES</code>.</p>
    pub fn query_identifiers_enclosing_option(
        mut self,
        input: crate::types::QueryIdentifiersEnclosingOption,
    ) -> Self {
        self.query_identifiers_enclosing_option = Some(input);
        self
    }
    /// <p>Determines whether Amazon Kendra encloses SQL identifiers for tables and column names in double quotes (") when making a database query.</p>
    /// <p>By default, Amazon Kendra passes SQL identifiers the way that they are entered into the data source configuration. It does not change the case of identifiers or enclose them in quotes.</p>
    /// <p>PostgreSQL internally converts uppercase characters to lower case characters in identifiers unless they are quoted. Choosing this option encloses identifiers in quotes so that PostgreSQL does not convert the character's case.</p>
    /// <p>For MySQL databases, you must enable the <code>ansi_quotes</code> option when you set this field to <code>DOUBLE_QUOTES</code>.</p>
    pub fn set_query_identifiers_enclosing_option(
        mut self,
        input: std::option::Option<crate::types::QueryIdentifiersEnclosingOption>,
    ) -> Self {
        self.query_identifiers_enclosing_option = input;
        self
    }
    /// Consumes the builder and constructs a [`SqlConfiguration`](crate::types::SqlConfiguration).
    pub fn build(self) -> crate::types::SqlConfiguration {
        crate::types::SqlConfiguration {
            query_identifiers_enclosing_option: self.query_identifiers_enclosing_option,
        }
    }
}
