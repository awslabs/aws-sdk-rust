// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Provides the configuration information for the identifiers of your users.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct UserIdentityConfiguration {
    /// <p>The IAM Identity Center field name that contains the identifiers of your users, such as their emails. This is used for <a href="https://docs.aws.amazon.com/kendra/latest/dg/user-context-filter.html">user context filtering</a> and for granting access to your Amazon Kendra experience. You must set up IAM Identity Center with Amazon Kendra. You must include your users and groups in your Access Control List when you ingest documents into your index. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/getting-started-aws-sso.html">Getting started with an IAM Identity Center identity source</a>.</p>
    #[doc(hidden)]
    pub identity_attribute_name: std::option::Option<std::string::String>,
}
impl UserIdentityConfiguration {
    /// <p>The IAM Identity Center field name that contains the identifiers of your users, such as their emails. This is used for <a href="https://docs.aws.amazon.com/kendra/latest/dg/user-context-filter.html">user context filtering</a> and for granting access to your Amazon Kendra experience. You must set up IAM Identity Center with Amazon Kendra. You must include your users and groups in your Access Control List when you ingest documents into your index. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/getting-started-aws-sso.html">Getting started with an IAM Identity Center identity source</a>.</p>
    pub fn identity_attribute_name(&self) -> std::option::Option<&str> {
        self.identity_attribute_name.as_deref()
    }
}
impl UserIdentityConfiguration {
    /// Creates a new builder-style object to manufacture [`UserIdentityConfiguration`](crate::types::UserIdentityConfiguration).
    pub fn builder() -> crate::types::builders::UserIdentityConfigurationBuilder {
        crate::types::builders::UserIdentityConfigurationBuilder::default()
    }
}

/// A builder for [`UserIdentityConfiguration`](crate::types::UserIdentityConfiguration).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct UserIdentityConfigurationBuilder {
    pub(crate) identity_attribute_name: std::option::Option<std::string::String>,
}
impl UserIdentityConfigurationBuilder {
    /// <p>The IAM Identity Center field name that contains the identifiers of your users, such as their emails. This is used for <a href="https://docs.aws.amazon.com/kendra/latest/dg/user-context-filter.html">user context filtering</a> and for granting access to your Amazon Kendra experience. You must set up IAM Identity Center with Amazon Kendra. You must include your users and groups in your Access Control List when you ingest documents into your index. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/getting-started-aws-sso.html">Getting started with an IAM Identity Center identity source</a>.</p>
    pub fn identity_attribute_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.identity_attribute_name = Some(input.into());
        self
    }
    /// <p>The IAM Identity Center field name that contains the identifiers of your users, such as their emails. This is used for <a href="https://docs.aws.amazon.com/kendra/latest/dg/user-context-filter.html">user context filtering</a> and for granting access to your Amazon Kendra experience. You must set up IAM Identity Center with Amazon Kendra. You must include your users and groups in your Access Control List when you ingest documents into your index. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/getting-started-aws-sso.html">Getting started with an IAM Identity Center identity source</a>.</p>
    pub fn set_identity_attribute_name(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.identity_attribute_name = input;
        self
    }
    /// Consumes the builder and constructs a [`UserIdentityConfiguration`](crate::types::UserIdentityConfiguration).
    pub fn build(self) -> crate::types::UserIdentityConfiguration {
        crate::types::UserIdentityConfiguration {
            identity_attribute_name: self.identity_attribute_name,
        }
    }
}
