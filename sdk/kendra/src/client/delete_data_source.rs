// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeleteDataSource`](crate::operation::delete_data_source::builders::DeleteDataSourceFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`id(impl Into<String>)`](crate::operation::delete_data_source::builders::DeleteDataSourceFluentBuilder::id) / [`set_id(Option<String>)`](crate::operation::delete_data_source::builders::DeleteDataSourceFluentBuilder::set_id): <p>The identifier of the data source connector you want to delete.</p>
    ///   - [`index_id(impl Into<String>)`](crate::operation::delete_data_source::builders::DeleteDataSourceFluentBuilder::index_id) / [`set_index_id(Option<String>)`](crate::operation::delete_data_source::builders::DeleteDataSourceFluentBuilder::set_index_id): <p>The identifier of the index used with the data source connector.</p>
    /// - On success, responds with [`DeleteDataSourceOutput`](crate::operation::delete_data_source::DeleteDataSourceOutput)
    /// - On failure, responds with [`SdkError<DeleteDataSourceError>`](crate::operation::delete_data_source::DeleteDataSourceError)
    pub fn delete_data_source(
        &self,
    ) -> crate::operation::delete_data_source::builders::DeleteDataSourceFluentBuilder {
        crate::operation::delete_data_source::builders::DeleteDataSourceFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
