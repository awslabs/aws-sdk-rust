// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeQuerySuggestionsConfig`](crate::client::fluent_builders::DescribeQuerySuggestionsConfig) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`index_id(impl Into<String>)`](crate::client::fluent_builders::DescribeQuerySuggestionsConfig::index_id) / [`set_index_id(Option<String>)`](crate::client::fluent_builders::DescribeQuerySuggestionsConfig::set_index_id): <p>The identifier of the index with query suggestions that you want to get information on.</p>
    /// - On success, responds with [`DescribeQuerySuggestionsConfigOutput`](crate::output::DescribeQuerySuggestionsConfigOutput) with field(s):
    ///   - [`mode(Option<Mode>)`](crate::output::DescribeQuerySuggestionsConfigOutput::mode): <p>Whether query suggestions are currently in <code>ENABLED</code> mode or <code>LEARN_ONLY</code> mode.</p>  <p>By default, Amazon Kendra enables query suggestions.<code>LEARN_ONLY</code> turns off query suggestions for your users. You can change the mode using the <a href="https://docs.aws.amazon.com/kendra/latest/dg/API_UpdateQuerySuggestionsConfig.html">UpdateQuerySuggestionsConfig</a> API.</p>
    ///   - [`status(Option<QuerySuggestionsStatus>)`](crate::output::DescribeQuerySuggestionsConfigOutput::status): <p>Whether the status of query suggestions settings is currently <code>ACTIVE</code> or <code>UPDATING</code>.</p>  <p>Active means the current settings apply and Updating means your changed settings are in the process of applying.</p>
    ///   - [`query_log_look_back_window_in_days(Option<i32>)`](crate::output::DescribeQuerySuggestionsConfigOutput::query_log_look_back_window_in_days): <p>How recent your queries are in your query log time window (in days).</p>
    ///   - [`include_queries_without_user_information(Option<bool>)`](crate::output::DescribeQuerySuggestionsConfigOutput::include_queries_without_user_information): <p> <code>TRUE</code> to use all queries, otherwise use only queries that include user information to generate the query suggestions.</p>
    ///   - [`minimum_number_of_querying_users(Option<i32>)`](crate::output::DescribeQuerySuggestionsConfigOutput::minimum_number_of_querying_users): <p>The minimum number of unique users who must search a query in order for the query to be eligible to suggest to your users.</p>
    ///   - [`minimum_query_count(Option<i32>)`](crate::output::DescribeQuerySuggestionsConfigOutput::minimum_query_count): <p>The minimum number of times a query must be searched in order for the query to be eligible to suggest to your users.</p>
    ///   - [`last_suggestions_build_time(Option<DateTime>)`](crate::output::DescribeQuerySuggestionsConfigOutput::last_suggestions_build_time): <p>The date-time query suggestions for an index was last updated.</p>
    ///   - [`last_clear_time(Option<DateTime>)`](crate::output::DescribeQuerySuggestionsConfigOutput::last_clear_time): <p>The date-time query suggestions for an index was last cleared.</p>  <p>After you clear suggestions, Amazon Kendra learns new suggestions based on new queries added to the query log from the time you cleared suggestions. Amazon Kendra only considers re-occurences of a query from the time you cleared suggestions. </p>
    ///   - [`total_suggestions_count(Option<i32>)`](crate::output::DescribeQuerySuggestionsConfigOutput::total_suggestions_count): <p>The current total count of query suggestions for an index.</p>  <p>This count can change when you update your query suggestions settings, if you filter out certain queries from suggestions using a block list, and as the query log accumulates more queries for Amazon Kendra to learn from.</p>
    /// - On failure, responds with [`SdkError<DescribeQuerySuggestionsConfigError>`](crate::error::DescribeQuerySuggestionsConfigError)
    pub fn describe_query_suggestions_config(
        &self,
    ) -> crate::client::fluent_builders::DescribeQuerySuggestionsConfig {
        crate::client::fluent_builders::DescribeQuerySuggestionsConfig::new(self.handle.clone())
    }
}
