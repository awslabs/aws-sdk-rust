// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) fn reflens_get_snapshots_output_next_token(
    input: &crate::operation::get_snapshots::GetSnapshotsOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_access_control_configurations_output_next_token(
    input: &crate::operation::list_access_control_configurations::ListAccessControlConfigurationsOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_data_source_sync_jobs_output_next_token(
    input: &crate::operation::list_data_source_sync_jobs::ListDataSourceSyncJobsOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_data_sources_output_next_token(
    input: &crate::operation::list_data_sources::ListDataSourcesOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_entity_personas_output_next_token(
    input: &crate::operation::list_entity_personas::ListEntityPersonasOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_experience_entities_output_next_token(
    input: &crate::operation::list_experience_entities::ListExperienceEntitiesOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_experiences_output_next_token(
    input: &crate::operation::list_experiences::ListExperiencesOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_faqs_output_next_token(
    input: &crate::operation::list_faqs::ListFaqsOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_groups_older_than_ordering_id_output_next_token(
    input: &crate::operation::list_groups_older_than_ordering_id::ListGroupsOlderThanOrderingIdOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_indices_output_next_token(
    input: &crate::operation::list_indices::ListIndicesOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_query_suggestions_block_lists_output_next_token(
    input: &crate::operation::list_query_suggestions_block_lists::ListQuerySuggestionsBlockListsOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_thesauri_output_next_token(
    input: &crate::operation::list_thesauri::ListThesauriOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}
