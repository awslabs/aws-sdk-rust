// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GetQualificationTypeInput {
    /// <p>The ID of the QualificationType.</p>
    pub qualification_type_id: ::std::option::Option<::std::string::String>,
}
impl GetQualificationTypeInput {
    /// <p>The ID of the QualificationType.</p>
    pub fn qualification_type_id(&self) -> ::std::option::Option<&str> {
        self.qualification_type_id.as_deref()
    }
}
impl GetQualificationTypeInput {
    /// Creates a new builder-style object to manufacture [`GetQualificationTypeInput`](crate::operation::get_qualification_type::GetQualificationTypeInput).
    pub fn builder() -> crate::operation::get_qualification_type::builders::GetQualificationTypeInputBuilder {
        crate::operation::get_qualification_type::builders::GetQualificationTypeInputBuilder::default()
    }
}

/// A builder for [`GetQualificationTypeInput`](crate::operation::get_qualification_type::GetQualificationTypeInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct GetQualificationTypeInputBuilder {
    pub(crate) qualification_type_id: ::std::option::Option<::std::string::String>,
}
impl GetQualificationTypeInputBuilder {
    /// <p>The ID of the QualificationType.</p>
    /// This field is required.
    pub fn qualification_type_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.qualification_type_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of the QualificationType.</p>
    pub fn set_qualification_type_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.qualification_type_id = input;
        self
    }
    /// <p>The ID of the QualificationType.</p>
    pub fn get_qualification_type_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.qualification_type_id
    }
    /// Consumes the builder and constructs a [`GetQualificationTypeInput`](crate::operation::get_qualification_type::GetQualificationTypeInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::get_qualification_type::GetQualificationTypeInput, ::aws_smithy_types::error::operation::BuildError>
    {
        ::std::result::Result::Ok(crate::operation::get_qualification_type::GetQualificationTypeInput {
            qualification_type_id: self.qualification_type_id,
        })
    }
}
