// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GetFileUploadUrlOutput {
    /// <p> A temporary URL for the file that the Worker uploaded for the answer. </p>
    #[doc(hidden)]
    pub file_upload_url: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl GetFileUploadUrlOutput {
    /// <p> A temporary URL for the file that the Worker uploaded for the answer. </p>
    pub fn file_upload_url(&self) -> std::option::Option<&str> {
        self.file_upload_url.as_deref()
    }
}
impl aws_http::request_id::RequestId for GetFileUploadUrlOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl GetFileUploadUrlOutput {
    /// Creates a new builder-style object to manufacture [`GetFileUploadUrlOutput`](crate::operation::get_file_upload_url::GetFileUploadUrlOutput).
    pub fn builder(
    ) -> crate::operation::get_file_upload_url::builders::GetFileUploadUrlOutputBuilder {
        crate::operation::get_file_upload_url::builders::GetFileUploadUrlOutputBuilder::default()
    }
}

/// A builder for [`GetFileUploadUrlOutput`](crate::operation::get_file_upload_url::GetFileUploadUrlOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct GetFileUploadUrlOutputBuilder {
    pub(crate) file_upload_url: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl GetFileUploadUrlOutputBuilder {
    /// <p> A temporary URL for the file that the Worker uploaded for the answer. </p>
    pub fn file_upload_url(mut self, input: impl Into<std::string::String>) -> Self {
        self.file_upload_url = Some(input.into());
        self
    }
    /// <p> A temporary URL for the file that the Worker uploaded for the answer. </p>
    pub fn set_file_upload_url(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.file_upload_url = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`GetFileUploadUrlOutput`](crate::operation::get_file_upload_url::GetFileUploadUrlOutput).
    pub fn build(self) -> crate::operation::get_file_upload_url::GetFileUploadUrlOutput {
        crate::operation::get_file_upload_url::GetFileUploadUrlOutput {
            file_upload_url: self.file_upload_url,
            _request_id: self._request_id,
        }
    }
}
