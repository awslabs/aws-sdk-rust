// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GetFileUploadUrlInput {
    /// <p>The ID of the assignment that contains the question with a FileUploadAnswer.</p>
    #[doc(hidden)]
    pub assignment_id: std::option::Option<std::string::String>,
    /// <p>The identifier of the question with a FileUploadAnswer, as specified in the QuestionForm of the HIT.</p>
    #[doc(hidden)]
    pub question_identifier: std::option::Option<std::string::String>,
}
impl GetFileUploadUrlInput {
    /// <p>The ID of the assignment that contains the question with a FileUploadAnswer.</p>
    pub fn assignment_id(&self) -> std::option::Option<&str> {
        self.assignment_id.as_deref()
    }
    /// <p>The identifier of the question with a FileUploadAnswer, as specified in the QuestionForm of the HIT.</p>
    pub fn question_identifier(&self) -> std::option::Option<&str> {
        self.question_identifier.as_deref()
    }
}
impl GetFileUploadUrlInput {
    /// Creates a new builder-style object to manufacture [`GetFileUploadUrlInput`](crate::operation::get_file_upload_url::GetFileUploadUrlInput).
    pub fn builder() -> crate::operation::get_file_upload_url::builders::GetFileUploadUrlInputBuilder
    {
        crate::operation::get_file_upload_url::builders::GetFileUploadUrlInputBuilder::default()
    }
}

/// A builder for [`GetFileUploadUrlInput`](crate::operation::get_file_upload_url::GetFileUploadUrlInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct GetFileUploadUrlInputBuilder {
    pub(crate) assignment_id: std::option::Option<std::string::String>,
    pub(crate) question_identifier: std::option::Option<std::string::String>,
}
impl GetFileUploadUrlInputBuilder {
    /// <p>The ID of the assignment that contains the question with a FileUploadAnswer.</p>
    pub fn assignment_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.assignment_id = Some(input.into());
        self
    }
    /// <p>The ID of the assignment that contains the question with a FileUploadAnswer.</p>
    pub fn set_assignment_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.assignment_id = input;
        self
    }
    /// <p>The identifier of the question with a FileUploadAnswer, as specified in the QuestionForm of the HIT.</p>
    pub fn question_identifier(mut self, input: impl Into<std::string::String>) -> Self {
        self.question_identifier = Some(input.into());
        self
    }
    /// <p>The identifier of the question with a FileUploadAnswer, as specified in the QuestionForm of the HIT.</p>
    pub fn set_question_identifier(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.question_identifier = input;
        self
    }
    /// Consumes the builder and constructs a [`GetFileUploadUrlInput`](crate::operation::get_file_upload_url::GetFileUploadUrlInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::get_file_upload_url::GetFileUploadUrlInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::get_file_upload_url::GetFileUploadUrlInput {
                assignment_id: self.assignment_id,
                question_identifier: self.question_identifier,
            },
        )
    }
}
