// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DeleteWorkerBlockInput {
    /// <p>The ID of the Worker to unblock.</p>
    #[doc(hidden)]
    pub worker_id: std::option::Option<std::string::String>,
    /// <p>A message that explains the reason for unblocking the Worker. The Worker does not see this message.</p>
    #[doc(hidden)]
    pub reason: std::option::Option<std::string::String>,
}
impl DeleteWorkerBlockInput {
    /// <p>The ID of the Worker to unblock.</p>
    pub fn worker_id(&self) -> std::option::Option<&str> {
        self.worker_id.as_deref()
    }
    /// <p>A message that explains the reason for unblocking the Worker. The Worker does not see this message.</p>
    pub fn reason(&self) -> std::option::Option<&str> {
        self.reason.as_deref()
    }
}
impl DeleteWorkerBlockInput {
    /// Creates a new builder-style object to manufacture [`DeleteWorkerBlockInput`](crate::operation::delete_worker_block::DeleteWorkerBlockInput).
    pub fn builder(
    ) -> crate::operation::delete_worker_block::builders::DeleteWorkerBlockInputBuilder {
        crate::operation::delete_worker_block::builders::DeleteWorkerBlockInputBuilder::default()
    }
}

/// A builder for [`DeleteWorkerBlockInput`](crate::operation::delete_worker_block::DeleteWorkerBlockInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DeleteWorkerBlockInputBuilder {
    pub(crate) worker_id: std::option::Option<std::string::String>,
    pub(crate) reason: std::option::Option<std::string::String>,
}
impl DeleteWorkerBlockInputBuilder {
    /// <p>The ID of the Worker to unblock.</p>
    pub fn worker_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.worker_id = Some(input.into());
        self
    }
    /// <p>The ID of the Worker to unblock.</p>
    pub fn set_worker_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.worker_id = input;
        self
    }
    /// <p>A message that explains the reason for unblocking the Worker. The Worker does not see this message.</p>
    pub fn reason(mut self, input: impl Into<std::string::String>) -> Self {
        self.reason = Some(input.into());
        self
    }
    /// <p>A message that explains the reason for unblocking the Worker. The Worker does not see this message.</p>
    pub fn set_reason(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.reason = input;
        self
    }
    /// Consumes the builder and constructs a [`DeleteWorkerBlockInput`](crate::operation::delete_worker_block::DeleteWorkerBlockInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::delete_worker_block::DeleteWorkerBlockInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::delete_worker_block::DeleteWorkerBlockInput {
                worker_id: self.worker_id,
                reason: self.reason,
            },
        )
    }
}
