// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AcceptQualificationRequestInput {
    /// <p>The ID of the Qualification request, as returned by the <code>GetQualificationRequests</code> operation.</p>
    pub qualification_request_id: ::std::option::Option<::std::string::String>,
    /// <p> The value of the Qualification. You can omit this value if you are using the presence or absence of the Qualification as the basis for a HIT requirement. </p>
    pub integer_value: ::std::option::Option<i32>,
}
impl AcceptQualificationRequestInput {
    /// <p>The ID of the Qualification request, as returned by the <code>GetQualificationRequests</code> operation.</p>
    pub fn qualification_request_id(&self) -> ::std::option::Option<&str> {
        self.qualification_request_id.as_deref()
    }
    /// <p> The value of the Qualification. You can omit this value if you are using the presence or absence of the Qualification as the basis for a HIT requirement. </p>
    pub fn integer_value(&self) -> ::std::option::Option<i32> {
        self.integer_value
    }
}
impl AcceptQualificationRequestInput {
    /// Creates a new builder-style object to manufacture [`AcceptQualificationRequestInput`](crate::operation::accept_qualification_request::AcceptQualificationRequestInput).
    pub fn builder() -> crate::operation::accept_qualification_request::builders::AcceptQualificationRequestInputBuilder {
        crate::operation::accept_qualification_request::builders::AcceptQualificationRequestInputBuilder::default()
    }
}

/// A builder for [`AcceptQualificationRequestInput`](crate::operation::accept_qualification_request::AcceptQualificationRequestInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct AcceptQualificationRequestInputBuilder {
    pub(crate) qualification_request_id: ::std::option::Option<::std::string::String>,
    pub(crate) integer_value: ::std::option::Option<i32>,
}
impl AcceptQualificationRequestInputBuilder {
    /// <p>The ID of the Qualification request, as returned by the <code>GetQualificationRequests</code> operation.</p>
    /// This field is required.
    pub fn qualification_request_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.qualification_request_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of the Qualification request, as returned by the <code>GetQualificationRequests</code> operation.</p>
    pub fn set_qualification_request_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.qualification_request_id = input;
        self
    }
    /// <p>The ID of the Qualification request, as returned by the <code>GetQualificationRequests</code> operation.</p>
    pub fn get_qualification_request_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.qualification_request_id
    }
    /// <p> The value of the Qualification. You can omit this value if you are using the presence or absence of the Qualification as the basis for a HIT requirement. </p>
    pub fn integer_value(mut self, input: i32) -> Self {
        self.integer_value = ::std::option::Option::Some(input);
        self
    }
    /// <p> The value of the Qualification. You can omit this value if you are using the presence or absence of the Qualification as the basis for a HIT requirement. </p>
    pub fn set_integer_value(mut self, input: ::std::option::Option<i32>) -> Self {
        self.integer_value = input;
        self
    }
    /// <p> The value of the Qualification. You can omit this value if you are using the presence or absence of the Qualification as the basis for a HIT requirement. </p>
    pub fn get_integer_value(&self) -> &::std::option::Option<i32> {
        &self.integer_value
    }
    /// Consumes the builder and constructs a [`AcceptQualificationRequestInput`](crate::operation::accept_qualification_request::AcceptQualificationRequestInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::accept_qualification_request::AcceptQualificationRequestInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::accept_qualification_request::AcceptQualificationRequestInput {
            qualification_request_id: self.qualification_request_id,
            integer_value: self.integer_value,
        })
    }
}
