// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_create_qualification_type_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::create_qualification_type::CreateQualificationTypeInput,
) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    if let Some(var_1) = &input.name {
        object.key("Name").string(var_1.as_str());
    }
    if let Some(var_2) = &input.keywords {
        object.key("Keywords").string(var_2.as_str());
    }
    if let Some(var_3) = &input.description {
        object.key("Description").string(var_3.as_str());
    }
    if let Some(var_4) = &input.qualification_type_status {
        object.key("QualificationTypeStatus").string(var_4.as_str());
    }
    if let Some(var_5) = &input.retry_delay_in_seconds {
        object.key("RetryDelayInSeconds").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_5).into()),
        );
    }
    if let Some(var_6) = &input.test {
        object.key("Test").string(var_6.as_str());
    }
    if let Some(var_7) = &input.answer_key {
        object.key("AnswerKey").string(var_7.as_str());
    }
    if let Some(var_8) = &input.test_duration_in_seconds {
        object.key("TestDurationInSeconds").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_8).into()),
        );
    }
    if let Some(var_9) = &input.auto_granted {
        object.key("AutoGranted").boolean(*var_9);
    }
    if let Some(var_10) = &input.auto_granted_value {
        object.key("AutoGrantedValue").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_10).into()),
        );
    }
    Ok(())
}
