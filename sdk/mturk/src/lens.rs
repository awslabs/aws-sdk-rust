// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) fn reflens_list_assignments_for_hit_output_next_token(
    input: &crate::operation::list_assignments_for_hit::ListAssignmentsForHitOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_bonus_payments_output_next_token(
    input: &crate::operation::list_bonus_payments::ListBonusPaymentsOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_hi_ts_output_next_token(
    input: &crate::operation::list_hi_ts::ListHiTsOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_hi_ts_for_qualification_type_output_next_token(
    input: &crate::operation::list_hi_ts_for_qualification_type::ListHiTsForQualificationTypeOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_qualification_requests_output_next_token(
    input: &crate::operation::list_qualification_requests::ListQualificationRequestsOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_qualification_types_output_next_token(
    input: &crate::operation::list_qualification_types::ListQualificationTypesOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_review_policy_results_for_hit_output_next_token(
    input: &crate::operation::list_review_policy_results_for_hit::ListReviewPolicyResultsForHitOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_reviewable_hi_ts_output_next_token(
    input: &crate::operation::list_reviewable_hi_ts::ListReviewableHiTsOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_worker_blocks_output_next_token(
    input: &crate::operation::list_worker_blocks::ListWorkerBlocksOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_workers_with_qualification_type_output_next_token(
    input: &crate::operation::list_workers_with_qualification_type::ListWorkersWithQualificationTypeOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}
