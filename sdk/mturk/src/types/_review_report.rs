// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p> Contains both ReviewResult and ReviewAction elements for a particular HIT. </p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ReviewReport {
    /// <p> A list of ReviewResults objects for each action specified in the Review Policy. </p>
    #[doc(hidden)]
    pub review_results: std::option::Option<std::vec::Vec<crate::types::ReviewResultDetail>>,
    /// <p> A list of ReviewAction objects for each action specified in the Review Policy. </p>
    #[doc(hidden)]
    pub review_actions: std::option::Option<std::vec::Vec<crate::types::ReviewActionDetail>>,
}
impl ReviewReport {
    /// <p> A list of ReviewResults objects for each action specified in the Review Policy. </p>
    pub fn review_results(&self) -> std::option::Option<&[crate::types::ReviewResultDetail]> {
        self.review_results.as_deref()
    }
    /// <p> A list of ReviewAction objects for each action specified in the Review Policy. </p>
    pub fn review_actions(&self) -> std::option::Option<&[crate::types::ReviewActionDetail]> {
        self.review_actions.as_deref()
    }
}
impl ReviewReport {
    /// Creates a new builder-style object to manufacture [`ReviewReport`](crate::types::ReviewReport).
    pub fn builder() -> crate::types::builders::ReviewReportBuilder {
        crate::types::builders::ReviewReportBuilder::default()
    }
}

/// A builder for [`ReviewReport`](crate::types::ReviewReport).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ReviewReportBuilder {
    pub(crate) review_results: std::option::Option<std::vec::Vec<crate::types::ReviewResultDetail>>,
    pub(crate) review_actions: std::option::Option<std::vec::Vec<crate::types::ReviewActionDetail>>,
}
impl ReviewReportBuilder {
    /// Appends an item to `review_results`.
    ///
    /// To override the contents of this collection use [`set_review_results`](Self::set_review_results).
    ///
    /// <p> A list of ReviewResults objects for each action specified in the Review Policy. </p>
    pub fn review_results(mut self, input: crate::types::ReviewResultDetail) -> Self {
        let mut v = self.review_results.unwrap_or_default();
        v.push(input);
        self.review_results = Some(v);
        self
    }
    /// <p> A list of ReviewResults objects for each action specified in the Review Policy. </p>
    pub fn set_review_results(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::ReviewResultDetail>>,
    ) -> Self {
        self.review_results = input;
        self
    }
    /// Appends an item to `review_actions`.
    ///
    /// To override the contents of this collection use [`set_review_actions`](Self::set_review_actions).
    ///
    /// <p> A list of ReviewAction objects for each action specified in the Review Policy. </p>
    pub fn review_actions(mut self, input: crate::types::ReviewActionDetail) -> Self {
        let mut v = self.review_actions.unwrap_or_default();
        v.push(input);
        self.review_actions = Some(v);
        self
    }
    /// <p> A list of ReviewAction objects for each action specified in the Review Policy. </p>
    pub fn set_review_actions(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::ReviewActionDetail>>,
    ) -> Self {
        self.review_actions = input;
        self
    }
    /// Consumes the builder and constructs a [`ReviewReport`](crate::types::ReviewReport).
    pub fn build(self) -> crate::types::ReviewReport {
        crate::types::ReviewReport {
            review_results: self.review_results,
            review_actions: self.review_actions,
        }
    }
}
