// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListQualificationTypes`](crate::operation::list_qualification_types::builders::ListQualificationTypesFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::list_qualification_types::builders::ListQualificationTypesFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`query(impl Into<String>)`](crate::operation::list_qualification_types::builders::ListQualificationTypesFluentBuilder::query) / [`set_query(Option<String>)`](crate::operation::list_qualification_types::builders::ListQualificationTypesFluentBuilder::set_query):<br>required: **false**<br><p> A text query against all of the searchable attributes of Qualification types. </p><br>
    ///   - [`must_be_requestable(bool)`](crate::operation::list_qualification_types::builders::ListQualificationTypesFluentBuilder::must_be_requestable) / [`set_must_be_requestable(Option<bool>)`](crate::operation::list_qualification_types::builders::ListQualificationTypesFluentBuilder::set_must_be_requestable):<br>required: **true**<br><p>Specifies that only Qualification types that a user can request through the Amazon Mechanical Turk web site, such as by taking a Qualification test, are returned as results of the search. Some Qualification types, such as those assigned automatically by the system, cannot be requested directly by users. If false, all Qualification types, including those managed by the system, are considered. Valid values are True | False. </p><br>
    ///   - [`must_be_owned_by_caller(bool)`](crate::operation::list_qualification_types::builders::ListQualificationTypesFluentBuilder::must_be_owned_by_caller) / [`set_must_be_owned_by_caller(Option<bool>)`](crate::operation::list_qualification_types::builders::ListQualificationTypesFluentBuilder::set_must_be_owned_by_caller):<br>required: **false**<br><p> Specifies that only Qualification types that the Requester created are returned. If false, the operation returns all Qualification types. </p><br>
    ///   - [`next_token(impl Into<String>)`](crate::operation::list_qualification_types::builders::ListQualificationTypesFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::list_qualification_types::builders::ListQualificationTypesFluentBuilder::set_next_token):<br>required: **false**<br><p>If the previous response was incomplete (because there is more data to retrieve), Amazon Mechanical Turk returns a pagination token in the response. You can use this pagination token to retrieve the next set of results. </p><br>
    ///   - [`max_results(i32)`](crate::operation::list_qualification_types::builders::ListQualificationTypesFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::list_qualification_types::builders::ListQualificationTypesFluentBuilder::set_max_results):<br>required: **false**<br><p> The maximum number of results to return in a single call. </p><br>
    /// - On success, responds with [`ListQualificationTypesOutput`](crate::operation::list_qualification_types::ListQualificationTypesOutput) with field(s):
    ///   - [`num_results(Option<i32>)`](crate::operation::list_qualification_types::ListQualificationTypesOutput::num_results): <p> The number of Qualification types on this page in the filtered results list, equivalent to the number of types this operation returns. </p>
    ///   - [`next_token(Option<String>)`](crate::operation::list_qualification_types::ListQualificationTypesOutput::next_token): <p>If the previous response was incomplete (because there is more data to retrieve), Amazon Mechanical Turk returns a pagination token in the response. You can use this pagination token to retrieve the next set of results. </p>
    ///   - [`qualification_types(Option<Vec::<QualificationType>>)`](crate::operation::list_qualification_types::ListQualificationTypesOutput::qualification_types): <p> The list of QualificationType elements returned by the query. </p>
    /// - On failure, responds with [`SdkError<ListQualificationTypesError>`](crate::operation::list_qualification_types::ListQualificationTypesError)
    pub fn list_qualification_types(&self) -> crate::operation::list_qualification_types::builders::ListQualificationTypesFluentBuilder {
        crate::operation::list_qualification_types::builders::ListQualificationTypesFluentBuilder::new(self.handle.clone())
    }
}
