// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListBonusPayments`](crate::client::fluent_builders::ListBonusPayments) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListBonusPayments::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`hit_id(impl Into<String>)`](crate::client::fluent_builders::ListBonusPayments::hit_id) / [`set_hit_id(Option<String>)`](crate::client::fluent_builders::ListBonusPayments::set_hit_id): <p>The ID of the HIT associated with the bonus payments to retrieve. If not specified, all bonus payments for all assignments for the given HIT are returned. Either the HITId parameter or the AssignmentId parameter must be specified</p>
    ///   - [`assignment_id(impl Into<String>)`](crate::client::fluent_builders::ListBonusPayments::assignment_id) / [`set_assignment_id(Option<String>)`](crate::client::fluent_builders::ListBonusPayments::set_assignment_id): <p>The ID of the assignment associated with the bonus payments to retrieve. If specified, only bonus payments for the given assignment are returned. Either the HITId parameter or the AssignmentId parameter must be specified</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListBonusPayments::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListBonusPayments::set_next_token): <p>Pagination token</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListBonusPayments::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListBonusPayments::set_max_results): (undocumented)
    /// - On success, responds with [`ListBonusPaymentsOutput`](crate::output::ListBonusPaymentsOutput) with field(s):
    ///   - [`num_results(Option<i32>)`](crate::output::ListBonusPaymentsOutput::num_results): <p>The number of bonus payments on this page in the filtered results list, equivalent to the number of bonus payments being returned by this call. </p>
    ///   - [`next_token(Option<String>)`](crate::output::ListBonusPaymentsOutput::next_token): <p>If the previous response was incomplete (because there is more data to retrieve), Amazon Mechanical Turk returns a pagination token in the response. You can use this pagination token to retrieve the next set of results. </p>
    ///   - [`bonus_payments(Option<Vec<BonusPayment>>)`](crate::output::ListBonusPaymentsOutput::bonus_payments): <p>A successful request to the ListBonusPayments operation returns a list of BonusPayment objects. </p>
    /// - On failure, responds with [`SdkError<ListBonusPaymentsError>`](crate::error::ListBonusPaymentsError)
    pub fn list_bonus_payments(&self) -> crate::client::fluent_builders::ListBonusPayments {
        crate::client::fluent_builders::ListBonusPayments::new(self.handle.clone())
    }
}
