// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateQualificationType`](crate::operation::update_qualification_type::builders::UpdateQualificationTypeFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`qualification_type_id(impl Into<String>)`](crate::operation::update_qualification_type::builders::UpdateQualificationTypeFluentBuilder::qualification_type_id) / [`set_qualification_type_id(Option<String>)`](crate::operation::update_qualification_type::builders::UpdateQualificationTypeFluentBuilder::set_qualification_type_id):<br>required: **true**<br><p>The ID of the Qualification type to update.</p><br>
    ///   - [`description(impl Into<String>)`](crate::operation::update_qualification_type::builders::UpdateQualificationTypeFluentBuilder::description) / [`set_description(Option<String>)`](crate::operation::update_qualification_type::builders::UpdateQualificationTypeFluentBuilder::set_description):<br>required: **false**<br><p>The new description of the Qualification type.</p><br>
    ///   - [`qualification_type_status(QualificationTypeStatus)`](crate::operation::update_qualification_type::builders::UpdateQualificationTypeFluentBuilder::qualification_type_status) / [`set_qualification_type_status(Option<QualificationTypeStatus>)`](crate::operation::update_qualification_type::builders::UpdateQualificationTypeFluentBuilder::set_qualification_type_status):<br>required: **false**<br><p>The new status of the Qualification type - Active | Inactive</p><br>
    ///   - [`test(impl Into<String>)`](crate::operation::update_qualification_type::builders::UpdateQualificationTypeFluentBuilder::test) / [`set_test(Option<String>)`](crate::operation::update_qualification_type::builders::UpdateQualificationTypeFluentBuilder::set_test):<br>required: **false**<br><p>The questions for the Qualification test a Worker must answer correctly to obtain a Qualification of this type. If this parameter is specified, <code>TestDurationInSeconds</code> must also be specified.</p>  <p>Constraints: Must not be longer than 65535 bytes. Must be a QuestionForm data structure. This parameter cannot be specified if AutoGranted is true.</p>  <p>Constraints: None. If not specified, the Worker may request the Qualification without answering any questions.</p><br>
    ///   - [`answer_key(impl Into<String>)`](crate::operation::update_qualification_type::builders::UpdateQualificationTypeFluentBuilder::answer_key) / [`set_answer_key(Option<String>)`](crate::operation::update_qualification_type::builders::UpdateQualificationTypeFluentBuilder::set_answer_key):<br>required: **false**<br><p>The answers to the Qualification test specified in the Test parameter, in the form of an AnswerKey data structure.</p><br>
    ///   - [`test_duration_in_seconds(i64)`](crate::operation::update_qualification_type::builders::UpdateQualificationTypeFluentBuilder::test_duration_in_seconds) / [`set_test_duration_in_seconds(Option<i64>)`](crate::operation::update_qualification_type::builders::UpdateQualificationTypeFluentBuilder::set_test_duration_in_seconds):<br>required: **false**<br><p>The number of seconds the Worker has to complete the Qualification test, starting from the time the Worker requests the Qualification.</p><br>
    ///   - [`retry_delay_in_seconds(i64)`](crate::operation::update_qualification_type::builders::UpdateQualificationTypeFluentBuilder::retry_delay_in_seconds) / [`set_retry_delay_in_seconds(Option<i64>)`](crate::operation::update_qualification_type::builders::UpdateQualificationTypeFluentBuilder::set_retry_delay_in_seconds):<br>required: **false**<br><p>The amount of time, in seconds, that Workers must wait after requesting a Qualification of the specified Qualification type before they can retry the Qualification request. It is not possible to disable retries for a Qualification type after it has been created with retries enabled. If you want to disable retries, you must dispose of the existing retry-enabled Qualification type using DisposeQualificationType and then create a new Qualification type with retries disabled using CreateQualificationType.</p><br>
    ///   - [`auto_granted(bool)`](crate::operation::update_qualification_type::builders::UpdateQualificationTypeFluentBuilder::auto_granted) / [`set_auto_granted(Option<bool>)`](crate::operation::update_qualification_type::builders::UpdateQualificationTypeFluentBuilder::set_auto_granted):<br>required: **false**<br><p>Specifies whether requests for the Qualification type are granted immediately, without prompting the Worker with a Qualification test.</p>  <p>Constraints: If the Test parameter is specified, this parameter cannot be true.</p><br>
    ///   - [`auto_granted_value(i32)`](crate::operation::update_qualification_type::builders::UpdateQualificationTypeFluentBuilder::auto_granted_value) / [`set_auto_granted_value(Option<i32>)`](crate::operation::update_qualification_type::builders::UpdateQualificationTypeFluentBuilder::set_auto_granted_value):<br>required: **false**<br><p>The Qualification value to use for automatically granted Qualifications. This parameter is used only if the AutoGranted parameter is true.</p><br>
    /// - On success, responds with [`UpdateQualificationTypeOutput`](crate::operation::update_qualification_type::UpdateQualificationTypeOutput) with field(s):
    ///   - [`qualification_type(Option<QualificationType>)`](crate::operation::update_qualification_type::UpdateQualificationTypeOutput::qualification_type): <p> Contains a QualificationType data structure.</p>
    /// - On failure, responds with [`SdkError<UpdateQualificationTypeError>`](crate::operation::update_qualification_type::UpdateQualificationTypeError)
    pub fn update_qualification_type(&self) -> crate::operation::update_qualification_type::builders::UpdateQualificationTypeFluentBuilder {
        crate::operation::update_qualification_type::builders::UpdateQualificationTypeFluentBuilder::new(self.handle.clone())
    }
}
