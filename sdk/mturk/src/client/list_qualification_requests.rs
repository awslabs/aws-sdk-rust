// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListQualificationRequests`](crate::client::fluent_builders::ListQualificationRequests) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListQualificationRequests::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`qualification_type_id(impl Into<String>)`](crate::client::fluent_builders::ListQualificationRequests::qualification_type_id) / [`set_qualification_type_id(Option<String>)`](crate::client::fluent_builders::ListQualificationRequests::set_qualification_type_id): <p>The ID of the QualificationType.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListQualificationRequests::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListQualificationRequests::set_next_token): <p>If the previous response was incomplete (because there is more data to retrieve), Amazon Mechanical Turk returns a pagination token in the response. You can use this pagination token to retrieve the next set of results. </p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListQualificationRequests::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListQualificationRequests::set_max_results): <p> The maximum number of results to return in a single call. </p>
    /// - On success, responds with [`ListQualificationRequestsOutput`](crate::output::ListQualificationRequestsOutput) with field(s):
    ///   - [`num_results(Option<i32>)`](crate::output::ListQualificationRequestsOutput::num_results): <p>The number of Qualification requests on this page in the filtered results list, equivalent to the number of Qualification requests being returned by this call.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListQualificationRequestsOutput::next_token): <p>If the previous response was incomplete (because there is more data to retrieve), Amazon Mechanical Turk returns a pagination token in the response. You can use this pagination token to retrieve the next set of results. </p>
    ///   - [`qualification_requests(Option<Vec<QualificationRequest>>)`](crate::output::ListQualificationRequestsOutput::qualification_requests): <p>The Qualification request. The response includes one QualificationRequest element for each Qualification request returned by the query.</p>
    /// - On failure, responds with [`SdkError<ListQualificationRequestsError>`](crate::error::ListQualificationRequestsError)
    pub fn list_qualification_requests(
        &self,
    ) -> crate::client::fluent_builders::ListQualificationRequests {
        crate::client::fluent_builders::ListQualificationRequests::new(self.handle.clone())
    }
}
