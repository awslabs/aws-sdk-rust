// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`NotifyWorkers`](crate::operation::notify_workers::builders::NotifyWorkersFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`subject(impl Into<String>)`](crate::operation::notify_workers::builders::NotifyWorkersFluentBuilder::subject) / [`set_subject(Option<String>)`](crate::operation::notify_workers::builders::NotifyWorkersFluentBuilder::set_subject):<br>required: **true**<br><p>The subject line of the email message to send. Can include up to 200 characters.</p><br>
    ///   - [`message_text(impl Into<String>)`](crate::operation::notify_workers::builders::NotifyWorkersFluentBuilder::message_text) / [`set_message_text(Option<String>)`](crate::operation::notify_workers::builders::NotifyWorkersFluentBuilder::set_message_text):<br>required: **true**<br><p>The text of the email message to send. Can include up to 4,096 characters</p><br>
    ///   - [`worker_ids(impl Into<String>)`](crate::operation::notify_workers::builders::NotifyWorkersFluentBuilder::worker_ids) / [`set_worker_ids(Option<Vec::<String>>)`](crate::operation::notify_workers::builders::NotifyWorkersFluentBuilder::set_worker_ids):<br>required: **true**<br><p>A list of Worker IDs you wish to notify. You can notify upto 100 Workers at a time.</p><br>
    /// - On success, responds with [`NotifyWorkersOutput`](crate::operation::notify_workers::NotifyWorkersOutput) with field(s):
    ///   - [`notify_workers_failure_statuses(Option<Vec::<NotifyWorkersFailureStatus>>)`](crate::operation::notify_workers::NotifyWorkersOutput::notify_workers_failure_statuses): <p> When MTurk sends notifications to the list of Workers, it returns back any failures it encounters in this list of NotifyWorkersFailureStatus objects. </p>
    /// - On failure, responds with [`SdkError<NotifyWorkersError>`](crate::operation::notify_workers::NotifyWorkersError)
    pub fn notify_workers(&self) -> crate::operation::notify_workers::builders::NotifyWorkersFluentBuilder {
        crate::operation::notify_workers::builders::NotifyWorkersFluentBuilder::new(self.handle.clone())
    }
}
