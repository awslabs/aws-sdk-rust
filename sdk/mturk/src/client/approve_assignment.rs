// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ApproveAssignment`](crate::operation::approve_assignment::builders::ApproveAssignmentFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`assignment_id(impl Into<String>)`](crate::operation::approve_assignment::builders::ApproveAssignmentFluentBuilder::assignment_id) / [`set_assignment_id(Option<String>)`](crate::operation::approve_assignment::builders::ApproveAssignmentFluentBuilder::set_assignment_id): <p> The ID of the assignment. The assignment must correspond to a HIT created by the Requester. </p>
    ///   - [`requester_feedback(impl Into<String>)`](crate::operation::approve_assignment::builders::ApproveAssignmentFluentBuilder::requester_feedback) / [`set_requester_feedback(Option<String>)`](crate::operation::approve_assignment::builders::ApproveAssignmentFluentBuilder::set_requester_feedback): <p> A message for the Worker, which the Worker can see in the Status section of the web site. </p>
    ///   - [`override_rejection(bool)`](crate::operation::approve_assignment::builders::ApproveAssignmentFluentBuilder::override_rejection) / [`set_override_rejection(Option<bool>)`](crate::operation::approve_assignment::builders::ApproveAssignmentFluentBuilder::set_override_rejection): <p> A flag indicating that an assignment should be approved even if it was previously rejected. Defaults to <code>False</code>. </p>
    /// - On success, responds with [`ApproveAssignmentOutput`](crate::operation::approve_assignment::ApproveAssignmentOutput)
    /// - On failure, responds with [`SdkError<ApproveAssignmentError>`](crate::operation::approve_assignment::ApproveAssignmentError)
    pub fn approve_assignment(
        &self,
    ) -> crate::operation::approve_assignment::builders::ApproveAssignmentFluentBuilder {
        crate::operation::approve_assignment::builders::ApproveAssignmentFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
