// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListPolicies`](crate::operation::list_policies::builders::ListPoliciesFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::list_policies::builders::ListPoliciesFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`filter(PolicyType)`](crate::operation::list_policies::builders::ListPoliciesFluentBuilder::filter) / [`set_filter(Option<PolicyType>)`](crate::operation::list_policies::builders::ListPoliciesFluentBuilder::set_filter):<br>required: **true**<br><p>Specifies the type of policy that you want to include in the response. You must specify one of the following values:</p>  <ul>   <li> <p> <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_ai-opt-out.html">AISERVICES_OPT_OUT_POLICY</a> </p> </li>   <li> <p> <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_backup.html">BACKUP_POLICY</a> </p> </li>   <li> <p> <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_scp.html">SERVICE_CONTROL_POLICY</a> </p> </li>   <li> <p> <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_tag-policies.html">TAG_POLICY</a> </p> </li>  </ul><br>
    ///   - [`next_token(impl Into<String>)`](crate::operation::list_policies::builders::ListPoliciesFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::list_policies::builders::ListPoliciesFluentBuilder::set_next_token):<br>required: **false**<br><p>The parameter for receiving additional results if you receive a <code>NextToken</code> response in a previous request. A <code>NextToken</code> response indicates that more output is available. Set this parameter to the value of the previous call's <code>NextToken</code> response to indicate where the output should continue from.</p><br>
    ///   - [`max_results(i32)`](crate::operation::list_policies::builders::ListPoliciesFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::list_policies::builders::ListPoliciesFluentBuilder::set_max_results):<br>required: **false**<br><p>The total number of results that you want included on each page of the response. If you do not include this parameter, it defaults to a value that is specific to the operation. If additional items exist beyond the maximum you specify, the <code>NextToken</code> response element is present and has a value (is not null). Include that value as the <code>NextToken</code> request parameter in the next call to the operation to get the next part of the results. Note that Organizations might return fewer results than the maximum even when there are more results available. You should check <code>NextToken</code> after every operation to ensure that you receive all of the results.</p><br>
    /// - On success, responds with [`ListPoliciesOutput`](crate::operation::list_policies::ListPoliciesOutput) with field(s):
    ///   - [`policies(Option<Vec::<PolicySummary>>)`](crate::operation::list_policies::ListPoliciesOutput::policies): <p>A list of policies that match the filter criteria in the request. The output list doesn't include the policy contents. To see the content for a policy, see <code>DescribePolicy</code>.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::list_policies::ListPoliciesOutput::next_token): <p>If present, indicates that more output is available than is included in the current response. Use this value in the <code>NextToken</code> request parameter in a subsequent call to the operation to get the next part of the output. You should repeat this until the <code>NextToken</code> response element comes back as <code>null</code>.</p>
    /// - On failure, responds with [`SdkError<ListPoliciesError>`](crate::operation::list_policies::ListPoliciesError)
    pub fn list_policies(&self) -> crate::operation::list_policies::builders::ListPoliciesFluentBuilder {
        crate::operation::list_policies::builders::ListPoliciesFluentBuilder::new(self.handle.clone())
    }
}
