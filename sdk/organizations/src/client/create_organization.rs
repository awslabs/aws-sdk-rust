// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateOrganization`](crate::operation::create_organization::builders::CreateOrganizationFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`feature_set(OrganizationFeatureSet)`](crate::operation::create_organization::builders::CreateOrganizationFluentBuilder::feature_set) / [`set_feature_set(Option<OrganizationFeatureSet>)`](crate::operation::create_organization::builders::CreateOrganizationFluentBuilder::set_feature_set): <p>Specifies the feature set supported by the new organization. Each feature set supports different levels of functionality.</p>  <ul>   <li> <p> <code>CONSOLIDATED_BILLING</code>: All member accounts have their bills consolidated to and paid by the management account. For more information, see <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_getting-started_concepts.html#feature-set-cb-only">Consolidated billing</a> in the <i>Organizations User Guide.</i> </p> <p> The consolidated billing feature subset isn't available for organizations in the Amazon Web Services GovCloud (US) Region.</p> </li>   <li> <p> <code>ALL</code>: In addition to all the features supported by the consolidated billing feature set, the management account can also apply any policy type to any member account in the organization. For more information, see <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_getting-started_concepts.html#feature-set-all">All features</a> in the <i>Organizations User Guide.</i> </p> </li>  </ul>
    /// - On success, responds with [`CreateOrganizationOutput`](crate::operation::create_organization::CreateOrganizationOutput) with field(s):
    ///   - [`organization(Option<Organization>)`](crate::operation::create_organization::CreateOrganizationOutput::organization): <p>A structure that contains details about the newly created organization.</p>
    /// - On failure, responds with [`SdkError<CreateOrganizationError>`](crate::operation::create_organization::CreateOrganizationError)
    pub fn create_organization(
        &self,
    ) -> crate::operation::create_organization::builders::CreateOrganizationFluentBuilder {
        crate::operation::create_organization::builders::CreateOrganizationFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
