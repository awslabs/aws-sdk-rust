// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeregisterDelegatedAdministrator`](crate::client::fluent_builders::DeregisterDelegatedAdministrator) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`account_id(impl Into<String>)`](crate::client::fluent_builders::DeregisterDelegatedAdministrator::account_id) / [`set_account_id(Option<String>)`](crate::client::fluent_builders::DeregisterDelegatedAdministrator::set_account_id): <p>The account ID number of the member account in the organization that you want to deregister as a delegated administrator.</p>
    ///   - [`service_principal(impl Into<String>)`](crate::client::fluent_builders::DeregisterDelegatedAdministrator::service_principal) / [`set_service_principal(Option<String>)`](crate::client::fluent_builders::DeregisterDelegatedAdministrator::set_service_principal): <p>The service principal name of an Amazon Web Services service for which the account is a delegated administrator.</p>  <p>Delegated administrator privileges are revoked for only the specified Amazon Web Services service from the member account. If the specified service is the only service for which the member account is a delegated administrator, the operation also revokes Organizations read action permissions.</p>
    /// - On success, responds with [`DeregisterDelegatedAdministratorOutput`](crate::output::DeregisterDelegatedAdministratorOutput)
    /// - On failure, responds with [`SdkError<DeregisterDelegatedAdministratorError>`](crate::error::DeregisterDelegatedAdministratorError)
    pub fn deregister_delegated_administrator(
        &self,
    ) -> crate::client::fluent_builders::DeregisterDelegatedAdministrator {
        crate::client::fluent_builders::DeregisterDelegatedAdministrator::new(self.handle.clone())
    }
}
