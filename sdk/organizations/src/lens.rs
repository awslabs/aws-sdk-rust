// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) fn reflens_structure_crate_output_list_accounts_output_next_token(
    input: &crate::output::ListAccountsOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_structure_crate_output_list_accounts_for_parent_output_next_token(
    input: &crate::output::ListAccountsForParentOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_structure_crate_output_list_aws_service_access_for_organization_output_next_token(
    input: &crate::output::ListAwsServiceAccessForOrganizationOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_structure_crate_output_list_children_output_next_token(
    input: &crate::output::ListChildrenOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_structure_crate_output_list_create_account_status_output_next_token(
    input: &crate::output::ListCreateAccountStatusOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_structure_crate_output_list_delegated_administrators_output_next_token(
    input: &crate::output::ListDelegatedAdministratorsOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_structure_crate_output_list_delegated_services_for_account_output_next_token(
    input: &crate::output::ListDelegatedServicesForAccountOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_structure_crate_output_list_handshakes_for_account_output_next_token(
    input: &crate::output::ListHandshakesForAccountOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_structure_crate_output_list_handshakes_for_organization_output_next_token(
    input: &crate::output::ListHandshakesForOrganizationOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_structure_crate_output_list_organizational_units_for_parent_output_next_token(
    input: &crate::output::ListOrganizationalUnitsForParentOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_structure_crate_output_list_parents_output_next_token(
    input: &crate::output::ListParentsOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_structure_crate_output_list_policies_output_next_token(
    input: &crate::output::ListPoliciesOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_structure_crate_output_list_policies_for_target_output_next_token(
    input: &crate::output::ListPoliciesForTargetOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_structure_crate_output_list_roots_output_next_token(
    input: &crate::output::ListRootsOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_structure_crate_output_list_tags_for_resource_output_next_token(
    input: &crate::output::ListTagsForResourceOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_structure_crate_output_list_targets_for_policy_output_next_token(
    input: &crate::output::ListTargetsForPolicyOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn lens_structure_crate_output_list_delegated_administrators_output_delegated_administrators(
    input: crate::output::ListDelegatedAdministratorsOutput,
) -> std::option::Option<std::vec::Vec<crate::model::DelegatedAdministrator>> {
    let input = match input.delegated_administrators {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn lens_structure_crate_output_list_delegated_services_for_account_output_delegated_services(
    input: crate::output::ListDelegatedServicesForAccountOutput,
) -> std::option::Option<std::vec::Vec<crate::model::DelegatedService>> {
    let input = match input.delegated_services {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn lens_structure_crate_output_list_tags_for_resource_output_tags(
    input: crate::output::ListTagsForResourceOutput,
) -> std::option::Option<std::vec::Vec<crate::model::Tag>> {
    let input = match input.tags {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}
