// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A structure that contains details of a service principal that represents an Amazon Web Services service that is enabled to integrate with Organizations.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct EnabledServicePrincipal {
    /// <p>The name of the service principal. This is typically in the form of a URL, such as: <code> <i>servicename</i>.amazonaws.com</code>.</p>
    #[doc(hidden)]
    pub service_principal: std::option::Option<std::string::String>,
    /// <p>The date that the service principal was enabled for integration with Organizations.</p>
    #[doc(hidden)]
    pub date_enabled: std::option::Option<aws_smithy_types::DateTime>,
}
impl EnabledServicePrincipal {
    /// <p>The name of the service principal. This is typically in the form of a URL, such as: <code> <i>servicename</i>.amazonaws.com</code>.</p>
    pub fn service_principal(&self) -> std::option::Option<&str> {
        self.service_principal.as_deref()
    }
    /// <p>The date that the service principal was enabled for integration with Organizations.</p>
    pub fn date_enabled(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.date_enabled.as_ref()
    }
}
impl EnabledServicePrincipal {
    /// Creates a new builder-style object to manufacture [`EnabledServicePrincipal`](crate::types::EnabledServicePrincipal).
    pub fn builder() -> crate::types::builders::EnabledServicePrincipalBuilder {
        crate::types::builders::EnabledServicePrincipalBuilder::default()
    }
}

/// A builder for [`EnabledServicePrincipal`](crate::types::EnabledServicePrincipal).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct EnabledServicePrincipalBuilder {
    pub(crate) service_principal: std::option::Option<std::string::String>,
    pub(crate) date_enabled: std::option::Option<aws_smithy_types::DateTime>,
}
impl EnabledServicePrincipalBuilder {
    /// <p>The name of the service principal. This is typically in the form of a URL, such as: <code> <i>servicename</i>.amazonaws.com</code>.</p>
    pub fn service_principal(mut self, input: impl Into<std::string::String>) -> Self {
        self.service_principal = Some(input.into());
        self
    }
    /// <p>The name of the service principal. This is typically in the form of a URL, such as: <code> <i>servicename</i>.amazonaws.com</code>.</p>
    pub fn set_service_principal(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.service_principal = input;
        self
    }
    /// <p>The date that the service principal was enabled for integration with Organizations.</p>
    pub fn date_enabled(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.date_enabled = Some(input);
        self
    }
    /// <p>The date that the service principal was enabled for integration with Organizations.</p>
    pub fn set_date_enabled(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.date_enabled = input;
        self
    }
    /// Consumes the builder and constructs a [`EnabledServicePrincipal`](crate::types::EnabledServicePrincipal).
    pub fn build(self) -> crate::types::EnabledServicePrincipal {
        crate::types::EnabledServicePrincipal {
            service_principal: self.service_principal,
            date_enabled: self.date_enabled,
        }
    }
}
