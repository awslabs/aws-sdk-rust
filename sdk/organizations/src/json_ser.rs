// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn serialize_structure_crate_input_accept_handshake_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::AcceptHandshakeInput,
) {
    if let Some(var_1) = &input.handshake_id {
        object.key("HandshakeId").string(var_1);
    }
}

pub fn serialize_structure_crate_input_attach_policy_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::AttachPolicyInput,
) {
    if let Some(var_2) = &input.policy_id {
        object.key("PolicyId").string(var_2);
    }
    if let Some(var_3) = &input.target_id {
        object.key("TargetId").string(var_3);
    }
}

pub fn serialize_structure_crate_input_cancel_handshake_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CancelHandshakeInput,
) {
    if let Some(var_4) = &input.handshake_id {
        object.key("HandshakeId").string(var_4);
    }
}

pub fn serialize_structure_crate_input_create_account_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateAccountInput,
) {
    if let Some(var_5) = &input.email {
        object.key("Email").string(var_5);
    }
    if let Some(var_6) = &input.account_name {
        object.key("AccountName").string(var_6);
    }
    if let Some(var_7) = &input.role_name {
        object.key("RoleName").string(var_7);
    }
    if let Some(var_8) = &input.iam_user_access_to_billing {
        object.key("IamUserAccessToBilling").string(var_8.as_str());
    }
    if let Some(var_9) = &input.tags {
        let mut array_10 = object.key("Tags").start_array();
        for item_11 in var_9 {
            {
                let mut object_12 = array_10.value().start_object();
                crate::json_ser::serialize_structure_crate_model_tag(&mut object_12, item_11);
                object_12.finish();
            }
        }
        array_10.finish();
    }
}

pub fn serialize_structure_crate_input_create_gov_cloud_account_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateGovCloudAccountInput,
) {
    if let Some(var_13) = &input.email {
        object.key("Email").string(var_13);
    }
    if let Some(var_14) = &input.account_name {
        object.key("AccountName").string(var_14);
    }
    if let Some(var_15) = &input.role_name {
        object.key("RoleName").string(var_15);
    }
    if let Some(var_16) = &input.iam_user_access_to_billing {
        object.key("IamUserAccessToBilling").string(var_16.as_str());
    }
    if let Some(var_17) = &input.tags {
        let mut array_18 = object.key("Tags").start_array();
        for item_19 in var_17 {
            {
                let mut object_20 = array_18.value().start_object();
                crate::json_ser::serialize_structure_crate_model_tag(&mut object_20, item_19);
                object_20.finish();
            }
        }
        array_18.finish();
    }
}

pub fn serialize_structure_crate_input_create_organization_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateOrganizationInput,
) {
    if let Some(var_21) = &input.feature_set {
        object.key("FeatureSet").string(var_21.as_str());
    }
}

pub fn serialize_structure_crate_input_create_organizational_unit_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateOrganizationalUnitInput,
) {
    if let Some(var_22) = &input.parent_id {
        object.key("ParentId").string(var_22);
    }
    if let Some(var_23) = &input.name {
        object.key("Name").string(var_23);
    }
    if let Some(var_24) = &input.tags {
        let mut array_25 = object.key("Tags").start_array();
        for item_26 in var_24 {
            {
                let mut object_27 = array_25.value().start_object();
                crate::json_ser::serialize_structure_crate_model_tag(&mut object_27, item_26);
                object_27.finish();
            }
        }
        array_25.finish();
    }
}

pub fn serialize_structure_crate_input_create_policy_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreatePolicyInput,
) {
    if let Some(var_28) = &input.content {
        object.key("Content").string(var_28);
    }
    if let Some(var_29) = &input.description {
        object.key("Description").string(var_29);
    }
    if let Some(var_30) = &input.name {
        object.key("Name").string(var_30);
    }
    if let Some(var_31) = &input.r#type {
        object.key("Type").string(var_31.as_str());
    }
    if let Some(var_32) = &input.tags {
        let mut array_33 = object.key("Tags").start_array();
        for item_34 in var_32 {
            {
                let mut object_35 = array_33.value().start_object();
                crate::json_ser::serialize_structure_crate_model_tag(&mut object_35, item_34);
                object_35.finish();
            }
        }
        array_33.finish();
    }
}

pub fn serialize_structure_crate_input_decline_handshake_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DeclineHandshakeInput,
) {
    if let Some(var_36) = &input.handshake_id {
        object.key("HandshakeId").string(var_36);
    }
}

pub fn serialize_structure_crate_input_delete_organizational_unit_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DeleteOrganizationalUnitInput,
) {
    if let Some(var_37) = &input.organizational_unit_id {
        object.key("OrganizationalUnitId").string(var_37);
    }
}

pub fn serialize_structure_crate_input_delete_policy_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DeletePolicyInput,
) {
    if let Some(var_38) = &input.policy_id {
        object.key("PolicyId").string(var_38);
    }
}

pub fn serialize_structure_crate_input_deregister_delegated_administrator_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DeregisterDelegatedAdministratorInput,
) {
    if let Some(var_39) = &input.account_id {
        object.key("AccountId").string(var_39);
    }
    if let Some(var_40) = &input.service_principal {
        object.key("ServicePrincipal").string(var_40);
    }
}

pub fn serialize_structure_crate_input_describe_account_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DescribeAccountInput,
) {
    if let Some(var_41) = &input.account_id {
        object.key("AccountId").string(var_41);
    }
}

pub fn serialize_structure_crate_input_describe_create_account_status_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DescribeCreateAccountStatusInput,
) {
    if let Some(var_42) = &input.create_account_request_id {
        object.key("CreateAccountRequestId").string(var_42);
    }
}

pub fn serialize_structure_crate_input_describe_effective_policy_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DescribeEffectivePolicyInput,
) {
    if let Some(var_43) = &input.policy_type {
        object.key("PolicyType").string(var_43.as_str());
    }
    if let Some(var_44) = &input.target_id {
        object.key("TargetId").string(var_44);
    }
}

pub fn serialize_structure_crate_input_describe_handshake_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DescribeHandshakeInput,
) {
    if let Some(var_45) = &input.handshake_id {
        object.key("HandshakeId").string(var_45);
    }
}

pub fn serialize_structure_crate_input_describe_organizational_unit_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DescribeOrganizationalUnitInput,
) {
    if let Some(var_46) = &input.organizational_unit_id {
        object.key("OrganizationalUnitId").string(var_46);
    }
}

pub fn serialize_structure_crate_input_describe_policy_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DescribePolicyInput,
) {
    if let Some(var_47) = &input.policy_id {
        object.key("PolicyId").string(var_47);
    }
}

pub fn serialize_structure_crate_input_detach_policy_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DetachPolicyInput,
) {
    if let Some(var_48) = &input.policy_id {
        object.key("PolicyId").string(var_48);
    }
    if let Some(var_49) = &input.target_id {
        object.key("TargetId").string(var_49);
    }
}

pub fn serialize_structure_crate_input_disable_aws_service_access_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DisableAwsServiceAccessInput,
) {
    if let Some(var_50) = &input.service_principal {
        object.key("ServicePrincipal").string(var_50);
    }
}

pub fn serialize_structure_crate_input_disable_policy_type_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DisablePolicyTypeInput,
) {
    if let Some(var_51) = &input.root_id {
        object.key("RootId").string(var_51);
    }
    if let Some(var_52) = &input.policy_type {
        object.key("PolicyType").string(var_52.as_str());
    }
}

pub fn serialize_structure_crate_input_enable_aws_service_access_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::EnableAwsServiceAccessInput,
) {
    if let Some(var_53) = &input.service_principal {
        object.key("ServicePrincipal").string(var_53);
    }
}

pub fn serialize_structure_crate_input_enable_policy_type_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::EnablePolicyTypeInput,
) {
    if let Some(var_54) = &input.root_id {
        object.key("RootId").string(var_54);
    }
    if let Some(var_55) = &input.policy_type {
        object.key("PolicyType").string(var_55.as_str());
    }
}

pub fn serialize_structure_crate_input_invite_account_to_organization_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::InviteAccountToOrganizationInput,
) {
    if let Some(var_56) = &input.target {
        let mut object_57 = object.key("Target").start_object();
        crate::json_ser::serialize_structure_crate_model_handshake_party(&mut object_57, var_56);
        object_57.finish();
    }
    if let Some(var_58) = &input.notes {
        object.key("Notes").string(var_58);
    }
    if let Some(var_59) = &input.tags {
        let mut array_60 = object.key("Tags").start_array();
        for item_61 in var_59 {
            {
                let mut object_62 = array_60.value().start_object();
                crate::json_ser::serialize_structure_crate_model_tag(&mut object_62, item_61);
                object_62.finish();
            }
        }
        array_60.finish();
    }
}

pub fn serialize_structure_crate_input_list_accounts_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::ListAccountsInput,
) {
    if let Some(var_63) = &input.next_token {
        object.key("NextToken").string(var_63);
    }
    if let Some(var_64) = &input.max_results {
        object.key("MaxResults").number(
            #[allow(clippy::useless_conversion)]
            smithy_types::Number::NegInt((*var_64).into()),
        );
    }
}

pub fn serialize_structure_crate_input_list_accounts_for_parent_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::ListAccountsForParentInput,
) {
    if let Some(var_65) = &input.parent_id {
        object.key("ParentId").string(var_65);
    }
    if let Some(var_66) = &input.next_token {
        object.key("NextToken").string(var_66);
    }
    if let Some(var_67) = &input.max_results {
        object.key("MaxResults").number(
            #[allow(clippy::useless_conversion)]
            smithy_types::Number::NegInt((*var_67).into()),
        );
    }
}

pub fn serialize_structure_crate_input_list_aws_service_access_for_organization_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::ListAwsServiceAccessForOrganizationInput,
) {
    if let Some(var_68) = &input.next_token {
        object.key("NextToken").string(var_68);
    }
    if let Some(var_69) = &input.max_results {
        object.key("MaxResults").number(
            #[allow(clippy::useless_conversion)]
            smithy_types::Number::NegInt((*var_69).into()),
        );
    }
}

pub fn serialize_structure_crate_input_list_children_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::ListChildrenInput,
) {
    if let Some(var_70) = &input.parent_id {
        object.key("ParentId").string(var_70);
    }
    if let Some(var_71) = &input.child_type {
        object.key("ChildType").string(var_71.as_str());
    }
    if let Some(var_72) = &input.next_token {
        object.key("NextToken").string(var_72);
    }
    if let Some(var_73) = &input.max_results {
        object.key("MaxResults").number(
            #[allow(clippy::useless_conversion)]
            smithy_types::Number::NegInt((*var_73).into()),
        );
    }
}

pub fn serialize_structure_crate_input_list_create_account_status_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::ListCreateAccountStatusInput,
) {
    if let Some(var_74) = &input.states {
        let mut array_75 = object.key("States").start_array();
        for item_76 in var_74 {
            {
                array_75.value().string(item_76.as_str());
            }
        }
        array_75.finish();
    }
    if let Some(var_77) = &input.next_token {
        object.key("NextToken").string(var_77);
    }
    if let Some(var_78) = &input.max_results {
        object.key("MaxResults").number(
            #[allow(clippy::useless_conversion)]
            smithy_types::Number::NegInt((*var_78).into()),
        );
    }
}

pub fn serialize_structure_crate_input_list_delegated_administrators_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::ListDelegatedAdministratorsInput,
) {
    if let Some(var_79) = &input.service_principal {
        object.key("ServicePrincipal").string(var_79);
    }
    if let Some(var_80) = &input.next_token {
        object.key("NextToken").string(var_80);
    }
    if let Some(var_81) = &input.max_results {
        object.key("MaxResults").number(
            #[allow(clippy::useless_conversion)]
            smithy_types::Number::NegInt((*var_81).into()),
        );
    }
}

pub fn serialize_structure_crate_input_list_delegated_services_for_account_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::ListDelegatedServicesForAccountInput,
) {
    if let Some(var_82) = &input.account_id {
        object.key("AccountId").string(var_82);
    }
    if let Some(var_83) = &input.next_token {
        object.key("NextToken").string(var_83);
    }
    if let Some(var_84) = &input.max_results {
        object.key("MaxResults").number(
            #[allow(clippy::useless_conversion)]
            smithy_types::Number::NegInt((*var_84).into()),
        );
    }
}

pub fn serialize_structure_crate_input_list_handshakes_for_account_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::ListHandshakesForAccountInput,
) {
    if let Some(var_85) = &input.filter {
        let mut object_86 = object.key("Filter").start_object();
        crate::json_ser::serialize_structure_crate_model_handshake_filter(&mut object_86, var_85);
        object_86.finish();
    }
    if let Some(var_87) = &input.next_token {
        object.key("NextToken").string(var_87);
    }
    if let Some(var_88) = &input.max_results {
        object.key("MaxResults").number(
            #[allow(clippy::useless_conversion)]
            smithy_types::Number::NegInt((*var_88).into()),
        );
    }
}

pub fn serialize_structure_crate_input_list_handshakes_for_organization_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::ListHandshakesForOrganizationInput,
) {
    if let Some(var_89) = &input.filter {
        let mut object_90 = object.key("Filter").start_object();
        crate::json_ser::serialize_structure_crate_model_handshake_filter(&mut object_90, var_89);
        object_90.finish();
    }
    if let Some(var_91) = &input.next_token {
        object.key("NextToken").string(var_91);
    }
    if let Some(var_92) = &input.max_results {
        object.key("MaxResults").number(
            #[allow(clippy::useless_conversion)]
            smithy_types::Number::NegInt((*var_92).into()),
        );
    }
}

pub fn serialize_structure_crate_input_list_organizational_units_for_parent_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::ListOrganizationalUnitsForParentInput,
) {
    if let Some(var_93) = &input.parent_id {
        object.key("ParentId").string(var_93);
    }
    if let Some(var_94) = &input.next_token {
        object.key("NextToken").string(var_94);
    }
    if let Some(var_95) = &input.max_results {
        object.key("MaxResults").number(
            #[allow(clippy::useless_conversion)]
            smithy_types::Number::NegInt((*var_95).into()),
        );
    }
}

pub fn serialize_structure_crate_input_list_parents_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::ListParentsInput,
) {
    if let Some(var_96) = &input.child_id {
        object.key("ChildId").string(var_96);
    }
    if let Some(var_97) = &input.next_token {
        object.key("NextToken").string(var_97);
    }
    if let Some(var_98) = &input.max_results {
        object.key("MaxResults").number(
            #[allow(clippy::useless_conversion)]
            smithy_types::Number::NegInt((*var_98).into()),
        );
    }
}

pub fn serialize_structure_crate_input_list_policies_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::ListPoliciesInput,
) {
    if let Some(var_99) = &input.filter {
        object.key("Filter").string(var_99.as_str());
    }
    if let Some(var_100) = &input.next_token {
        object.key("NextToken").string(var_100);
    }
    if let Some(var_101) = &input.max_results {
        object.key("MaxResults").number(
            #[allow(clippy::useless_conversion)]
            smithy_types::Number::NegInt((*var_101).into()),
        );
    }
}

pub fn serialize_structure_crate_input_list_policies_for_target_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::ListPoliciesForTargetInput,
) {
    if let Some(var_102) = &input.target_id {
        object.key("TargetId").string(var_102);
    }
    if let Some(var_103) = &input.filter {
        object.key("Filter").string(var_103.as_str());
    }
    if let Some(var_104) = &input.next_token {
        object.key("NextToken").string(var_104);
    }
    if let Some(var_105) = &input.max_results {
        object.key("MaxResults").number(
            #[allow(clippy::useless_conversion)]
            smithy_types::Number::NegInt((*var_105).into()),
        );
    }
}

pub fn serialize_structure_crate_input_list_roots_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::ListRootsInput,
) {
    if let Some(var_106) = &input.next_token {
        object.key("NextToken").string(var_106);
    }
    if let Some(var_107) = &input.max_results {
        object.key("MaxResults").number(
            #[allow(clippy::useless_conversion)]
            smithy_types::Number::NegInt((*var_107).into()),
        );
    }
}

pub fn serialize_structure_crate_input_list_tags_for_resource_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::ListTagsForResourceInput,
) {
    if let Some(var_108) = &input.resource_id {
        object.key("ResourceId").string(var_108);
    }
    if let Some(var_109) = &input.next_token {
        object.key("NextToken").string(var_109);
    }
}

pub fn serialize_structure_crate_input_list_targets_for_policy_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::ListTargetsForPolicyInput,
) {
    if let Some(var_110) = &input.policy_id {
        object.key("PolicyId").string(var_110);
    }
    if let Some(var_111) = &input.next_token {
        object.key("NextToken").string(var_111);
    }
    if let Some(var_112) = &input.max_results {
        object.key("MaxResults").number(
            #[allow(clippy::useless_conversion)]
            smithy_types::Number::NegInt((*var_112).into()),
        );
    }
}

pub fn serialize_structure_crate_input_move_account_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::MoveAccountInput,
) {
    if let Some(var_113) = &input.account_id {
        object.key("AccountId").string(var_113);
    }
    if let Some(var_114) = &input.source_parent_id {
        object.key("SourceParentId").string(var_114);
    }
    if let Some(var_115) = &input.destination_parent_id {
        object.key("DestinationParentId").string(var_115);
    }
}

pub fn serialize_structure_crate_input_register_delegated_administrator_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::RegisterDelegatedAdministratorInput,
) {
    if let Some(var_116) = &input.account_id {
        object.key("AccountId").string(var_116);
    }
    if let Some(var_117) = &input.service_principal {
        object.key("ServicePrincipal").string(var_117);
    }
}

pub fn serialize_structure_crate_input_remove_account_from_organization_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::RemoveAccountFromOrganizationInput,
) {
    if let Some(var_118) = &input.account_id {
        object.key("AccountId").string(var_118);
    }
}

pub fn serialize_structure_crate_input_tag_resource_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::TagResourceInput,
) {
    if let Some(var_119) = &input.resource_id {
        object.key("ResourceId").string(var_119);
    }
    if let Some(var_120) = &input.tags {
        let mut array_121 = object.key("Tags").start_array();
        for item_122 in var_120 {
            {
                let mut object_123 = array_121.value().start_object();
                crate::json_ser::serialize_structure_crate_model_tag(&mut object_123, item_122);
                object_123.finish();
            }
        }
        array_121.finish();
    }
}

pub fn serialize_structure_crate_input_untag_resource_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UntagResourceInput,
) {
    if let Some(var_124) = &input.resource_id {
        object.key("ResourceId").string(var_124);
    }
    if let Some(var_125) = &input.tag_keys {
        let mut array_126 = object.key("TagKeys").start_array();
        for item_127 in var_125 {
            {
                array_126.value().string(item_127);
            }
        }
        array_126.finish();
    }
}

pub fn serialize_structure_crate_input_update_organizational_unit_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateOrganizationalUnitInput,
) {
    if let Some(var_128) = &input.organizational_unit_id {
        object.key("OrganizationalUnitId").string(var_128);
    }
    if let Some(var_129) = &input.name {
        object.key("Name").string(var_129);
    }
}

pub fn serialize_structure_crate_input_update_policy_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdatePolicyInput,
) {
    if let Some(var_130) = &input.policy_id {
        object.key("PolicyId").string(var_130);
    }
    if let Some(var_131) = &input.name {
        object.key("Name").string(var_131);
    }
    if let Some(var_132) = &input.description {
        object.key("Description").string(var_132);
    }
    if let Some(var_133) = &input.content {
        object.key("Content").string(var_133);
    }
}

pub fn serialize_structure_crate_model_tag(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::Tag,
) {
    if let Some(var_134) = &input.key {
        object.key("Key").string(var_134);
    }
    if let Some(var_135) = &input.value {
        object.key("Value").string(var_135);
    }
}

pub fn serialize_structure_crate_model_handshake_party(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::HandshakeParty,
) {
    if let Some(var_136) = &input.id {
        object.key("Id").string(var_136);
    }
    if let Some(var_137) = &input.r#type {
        object.key("Type").string(var_137.as_str());
    }
}

pub fn serialize_structure_crate_model_handshake_filter(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::HandshakeFilter,
) {
    if let Some(var_138) = &input.action_type {
        object.key("ActionType").string(var_138.as_str());
    }
    if let Some(var_139) = &input.parent_handshake_id {
        object.key("ParentHandshakeId").string(var_139);
    }
}
