// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct SetDefaultAuthorizerInput {
    /// <p>The authorizer name.</p>
    pub authorizer_name: ::std::option::Option<::std::string::String>,
}
impl SetDefaultAuthorizerInput {
    /// <p>The authorizer name.</p>
    pub fn authorizer_name(&self) -> ::std::option::Option<&str> {
        self.authorizer_name.as_deref()
    }
}
impl SetDefaultAuthorizerInput {
    /// Creates a new builder-style object to manufacture [`SetDefaultAuthorizerInput`](crate::operation::set_default_authorizer::SetDefaultAuthorizerInput).
    pub fn builder() -> crate::operation::set_default_authorizer::builders::SetDefaultAuthorizerInputBuilder {
        crate::operation::set_default_authorizer::builders::SetDefaultAuthorizerInputBuilder::default()
    }
}

/// A builder for [`SetDefaultAuthorizerInput`](crate::operation::set_default_authorizer::SetDefaultAuthorizerInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct SetDefaultAuthorizerInputBuilder {
    pub(crate) authorizer_name: ::std::option::Option<::std::string::String>,
}
impl SetDefaultAuthorizerInputBuilder {
    /// <p>The authorizer name.</p>
    /// This field is required.
    pub fn authorizer_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.authorizer_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The authorizer name.</p>
    pub fn set_authorizer_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.authorizer_name = input;
        self
    }
    /// <p>The authorizer name.</p>
    pub fn get_authorizer_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.authorizer_name
    }
    /// Consumes the builder and constructs a [`SetDefaultAuthorizerInput`](crate::operation::set_default_authorizer::SetDefaultAuthorizerInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::set_default_authorizer::SetDefaultAuthorizerInput, ::aws_smithy_types::error::operation::BuildError>
    {
        ::std::result::Result::Ok(crate::operation::set_default_authorizer::SetDefaultAuthorizerInput {
            authorizer_name: self.authorizer_name,
        })
    }
}
