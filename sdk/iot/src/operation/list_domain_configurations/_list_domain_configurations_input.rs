// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ListDomainConfigurationsInput {
    /// <p>The marker for the next set of results.</p>
    #[doc(hidden)]
    pub marker: std::option::Option<std::string::String>,
    /// <p>The result page size.</p>
    #[doc(hidden)]
    pub page_size: std::option::Option<i32>,
    /// <p>The type of service delivered by the endpoint.</p>
    #[doc(hidden)]
    pub service_type: std::option::Option<crate::types::ServiceType>,
}
impl ListDomainConfigurationsInput {
    /// <p>The marker for the next set of results.</p>
    pub fn marker(&self) -> std::option::Option<&str> {
        self.marker.as_deref()
    }
    /// <p>The result page size.</p>
    pub fn page_size(&self) -> std::option::Option<i32> {
        self.page_size
    }
    /// <p>The type of service delivered by the endpoint.</p>
    pub fn service_type(&self) -> std::option::Option<&crate::types::ServiceType> {
        self.service_type.as_ref()
    }
}
impl ListDomainConfigurationsInput {
    /// Creates a new builder-style object to manufacture [`ListDomainConfigurationsInput`](crate::operation::list_domain_configurations::ListDomainConfigurationsInput).
    pub fn builder(
    ) -> crate::operation::list_domain_configurations::builders::ListDomainConfigurationsInputBuilder
    {
        crate::operation::list_domain_configurations::builders::ListDomainConfigurationsInputBuilder::default()
    }
}

/// A builder for [`ListDomainConfigurationsInput`](crate::operation::list_domain_configurations::ListDomainConfigurationsInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ListDomainConfigurationsInputBuilder {
    pub(crate) marker: std::option::Option<std::string::String>,
    pub(crate) page_size: std::option::Option<i32>,
    pub(crate) service_type: std::option::Option<crate::types::ServiceType>,
}
impl ListDomainConfigurationsInputBuilder {
    /// <p>The marker for the next set of results.</p>
    pub fn marker(mut self, input: impl Into<std::string::String>) -> Self {
        self.marker = Some(input.into());
        self
    }
    /// <p>The marker for the next set of results.</p>
    pub fn set_marker(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.marker = input;
        self
    }
    /// <p>The result page size.</p>
    pub fn page_size(mut self, input: i32) -> Self {
        self.page_size = Some(input);
        self
    }
    /// <p>The result page size.</p>
    pub fn set_page_size(mut self, input: std::option::Option<i32>) -> Self {
        self.page_size = input;
        self
    }
    /// <p>The type of service delivered by the endpoint.</p>
    pub fn service_type(mut self, input: crate::types::ServiceType) -> Self {
        self.service_type = Some(input);
        self
    }
    /// <p>The type of service delivered by the endpoint.</p>
    pub fn set_service_type(
        mut self,
        input: std::option::Option<crate::types::ServiceType>,
    ) -> Self {
        self.service_type = input;
        self
    }
    /// Consumes the builder and constructs a [`ListDomainConfigurationsInput`](crate::operation::list_domain_configurations::ListDomainConfigurationsInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::list_domain_configurations::ListDomainConfigurationsInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::list_domain_configurations::ListDomainConfigurationsInput {
                marker: self.marker,
                page_size: self.page_size,
                service_type: self.service_type,
            },
        )
    }
}
