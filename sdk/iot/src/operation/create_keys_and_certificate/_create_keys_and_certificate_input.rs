// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The input for the CreateKeysAndCertificate operation.</p>
/// <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">CreateKeysAndCertificateRequest</a> action.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct CreateKeysAndCertificateInput {
    /// <p>Specifies whether the certificate is active.</p>
    pub set_as_active: ::std::option::Option<bool>,
}
impl CreateKeysAndCertificateInput {
    /// <p>Specifies whether the certificate is active.</p>
    pub fn set_as_active(&self) -> ::std::option::Option<bool> {
        self.set_as_active
    }
}
impl CreateKeysAndCertificateInput {
    /// Creates a new builder-style object to manufacture [`CreateKeysAndCertificateInput`](crate::operation::create_keys_and_certificate::CreateKeysAndCertificateInput).
    pub fn builder() -> crate::operation::create_keys_and_certificate::builders::CreateKeysAndCertificateInputBuilder {
        crate::operation::create_keys_and_certificate::builders::CreateKeysAndCertificateInputBuilder::default()
    }
}

/// A builder for [`CreateKeysAndCertificateInput`](crate::operation::create_keys_and_certificate::CreateKeysAndCertificateInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct CreateKeysAndCertificateInputBuilder {
    pub(crate) set_as_active: ::std::option::Option<bool>,
}
impl CreateKeysAndCertificateInputBuilder {
    /// <p>Specifies whether the certificate is active.</p>
    pub fn set_as_active(mut self, input: bool) -> Self {
        self.set_as_active = ::std::option::Option::Some(input);
        self
    }
    /// <p>Specifies whether the certificate is active.</p>
    pub fn set_set_as_active(mut self, input: ::std::option::Option<bool>) -> Self {
        self.set_as_active = input;
        self
    }
    /// <p>Specifies whether the certificate is active.</p>
    pub fn get_set_as_active(&self) -> &::std::option::Option<bool> {
        &self.set_as_active
    }
    /// Consumes the builder and constructs a [`CreateKeysAndCertificateInput`](crate::operation::create_keys_and_certificate::CreateKeysAndCertificateInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::create_keys_and_certificate::CreateKeysAndCertificateInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::create_keys_and_certificate::CreateKeysAndCertificateInput {
            set_as_active: self.set_as_active,
        })
    }
}
