// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct UpdateRoleAliasInput {
    /// <p>The role alias to update.</p>
    pub role_alias: ::std::option::Option<::std::string::String>,
    /// <p>The role ARN.</p>
    pub role_arn: ::std::option::Option<::std::string::String>,
    /// <p>The number of seconds the credential will be valid.</p>
    /// <p>This value must be less than or equal to the maximum session duration of the IAM role that the role alias references.</p>
    pub credential_duration_seconds: ::std::option::Option<i32>,
}
impl UpdateRoleAliasInput {
    /// <p>The role alias to update.</p>
    pub fn role_alias(&self) -> ::std::option::Option<&str> {
        self.role_alias.as_deref()
    }
    /// <p>The role ARN.</p>
    pub fn role_arn(&self) -> ::std::option::Option<&str> {
        self.role_arn.as_deref()
    }
    /// <p>The number of seconds the credential will be valid.</p>
    /// <p>This value must be less than or equal to the maximum session duration of the IAM role that the role alias references.</p>
    pub fn credential_duration_seconds(&self) -> ::std::option::Option<i32> {
        self.credential_duration_seconds
    }
}
impl UpdateRoleAliasInput {
    /// Creates a new builder-style object to manufacture [`UpdateRoleAliasInput`](crate::operation::update_role_alias::UpdateRoleAliasInput).
    pub fn builder() -> crate::operation::update_role_alias::builders::UpdateRoleAliasInputBuilder {
        crate::operation::update_role_alias::builders::UpdateRoleAliasInputBuilder::default()
    }
}

/// A builder for [`UpdateRoleAliasInput`](crate::operation::update_role_alias::UpdateRoleAliasInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct UpdateRoleAliasInputBuilder {
    pub(crate) role_alias: ::std::option::Option<::std::string::String>,
    pub(crate) role_arn: ::std::option::Option<::std::string::String>,
    pub(crate) credential_duration_seconds: ::std::option::Option<i32>,
}
impl UpdateRoleAliasInputBuilder {
    /// <p>The role alias to update.</p>
    /// This field is required.
    pub fn role_alias(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.role_alias = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The role alias to update.</p>
    pub fn set_role_alias(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.role_alias = input;
        self
    }
    /// <p>The role alias to update.</p>
    pub fn get_role_alias(&self) -> &::std::option::Option<::std::string::String> {
        &self.role_alias
    }
    /// <p>The role ARN.</p>
    pub fn role_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.role_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The role ARN.</p>
    pub fn set_role_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.role_arn = input;
        self
    }
    /// <p>The role ARN.</p>
    pub fn get_role_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.role_arn
    }
    /// <p>The number of seconds the credential will be valid.</p>
    /// <p>This value must be less than or equal to the maximum session duration of the IAM role that the role alias references.</p>
    pub fn credential_duration_seconds(mut self, input: i32) -> Self {
        self.credential_duration_seconds = ::std::option::Option::Some(input);
        self
    }
    /// <p>The number of seconds the credential will be valid.</p>
    /// <p>This value must be less than or equal to the maximum session duration of the IAM role that the role alias references.</p>
    pub fn set_credential_duration_seconds(mut self, input: ::std::option::Option<i32>) -> Self {
        self.credential_duration_seconds = input;
        self
    }
    /// <p>The number of seconds the credential will be valid.</p>
    /// <p>This value must be less than or equal to the maximum session duration of the IAM role that the role alias references.</p>
    pub fn get_credential_duration_seconds(&self) -> &::std::option::Option<i32> {
        &self.credential_duration_seconds
    }
    /// Consumes the builder and constructs a [`UpdateRoleAliasInput`](crate::operation::update_role_alias::UpdateRoleAliasInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::update_role_alias::UpdateRoleAliasInput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::operation::update_role_alias::UpdateRoleAliasInput {
            role_alias: self.role_alias,
            role_arn: self.role_arn,
            credential_duration_seconds: self.credential_duration_seconds,
        })
    }
}
