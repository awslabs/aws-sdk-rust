// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ListMetricValuesInput {
    /// <p>The name of the thing for which security profile metric values are returned.</p>
    #[doc(hidden)]
    pub thing_name: std::option::Option<std::string::String>,
    /// <p>The name of the security profile metric for which values are returned.</p>
    #[doc(hidden)]
    pub metric_name: std::option::Option<std::string::String>,
    /// <p>The dimension name.</p>
    #[doc(hidden)]
    pub dimension_name: std::option::Option<std::string::String>,
    /// <p>The dimension value operator.</p>
    #[doc(hidden)]
    pub dimension_value_operator: std::option::Option<crate::types::DimensionValueOperator>,
    /// <p>The start of the time period for which metric values are returned.</p>
    #[doc(hidden)]
    pub start_time: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>The end of the time period for which metric values are returned.</p>
    #[doc(hidden)]
    pub end_time: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>The maximum number of results to return at one time.</p>
    #[doc(hidden)]
    pub max_results: std::option::Option<i32>,
    /// <p>The token for the next set of results.</p>
    #[doc(hidden)]
    pub next_token: std::option::Option<std::string::String>,
}
impl ListMetricValuesInput {
    /// <p>The name of the thing for which security profile metric values are returned.</p>
    pub fn thing_name(&self) -> std::option::Option<&str> {
        self.thing_name.as_deref()
    }
    /// <p>The name of the security profile metric for which values are returned.</p>
    pub fn metric_name(&self) -> std::option::Option<&str> {
        self.metric_name.as_deref()
    }
    /// <p>The dimension name.</p>
    pub fn dimension_name(&self) -> std::option::Option<&str> {
        self.dimension_name.as_deref()
    }
    /// <p>The dimension value operator.</p>
    pub fn dimension_value_operator(
        &self,
    ) -> std::option::Option<&crate::types::DimensionValueOperator> {
        self.dimension_value_operator.as_ref()
    }
    /// <p>The start of the time period for which metric values are returned.</p>
    pub fn start_time(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.start_time.as_ref()
    }
    /// <p>The end of the time period for which metric values are returned.</p>
    pub fn end_time(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.end_time.as_ref()
    }
    /// <p>The maximum number of results to return at one time.</p>
    pub fn max_results(&self) -> std::option::Option<i32> {
        self.max_results
    }
    /// <p>The token for the next set of results.</p>
    pub fn next_token(&self) -> std::option::Option<&str> {
        self.next_token.as_deref()
    }
}
impl ListMetricValuesInput {
    /// Creates a new builder-style object to manufacture [`ListMetricValuesInput`](crate::operation::list_metric_values::ListMetricValuesInput).
    pub fn builder() -> crate::operation::list_metric_values::builders::ListMetricValuesInputBuilder
    {
        crate::operation::list_metric_values::builders::ListMetricValuesInputBuilder::default()
    }
}

/// A builder for [`ListMetricValuesInput`](crate::operation::list_metric_values::ListMetricValuesInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ListMetricValuesInputBuilder {
    pub(crate) thing_name: std::option::Option<std::string::String>,
    pub(crate) metric_name: std::option::Option<std::string::String>,
    pub(crate) dimension_name: std::option::Option<std::string::String>,
    pub(crate) dimension_value_operator: std::option::Option<crate::types::DimensionValueOperator>,
    pub(crate) start_time: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) end_time: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) max_results: std::option::Option<i32>,
    pub(crate) next_token: std::option::Option<std::string::String>,
}
impl ListMetricValuesInputBuilder {
    /// <p>The name of the thing for which security profile metric values are returned.</p>
    pub fn thing_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.thing_name = Some(input.into());
        self
    }
    /// <p>The name of the thing for which security profile metric values are returned.</p>
    pub fn set_thing_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.thing_name = input;
        self
    }
    /// <p>The name of the security profile metric for which values are returned.</p>
    pub fn metric_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.metric_name = Some(input.into());
        self
    }
    /// <p>The name of the security profile metric for which values are returned.</p>
    pub fn set_metric_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.metric_name = input;
        self
    }
    /// <p>The dimension name.</p>
    pub fn dimension_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.dimension_name = Some(input.into());
        self
    }
    /// <p>The dimension name.</p>
    pub fn set_dimension_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.dimension_name = input;
        self
    }
    /// <p>The dimension value operator.</p>
    pub fn dimension_value_operator(mut self, input: crate::types::DimensionValueOperator) -> Self {
        self.dimension_value_operator = Some(input);
        self
    }
    /// <p>The dimension value operator.</p>
    pub fn set_dimension_value_operator(
        mut self,
        input: std::option::Option<crate::types::DimensionValueOperator>,
    ) -> Self {
        self.dimension_value_operator = input;
        self
    }
    /// <p>The start of the time period for which metric values are returned.</p>
    pub fn start_time(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.start_time = Some(input);
        self
    }
    /// <p>The start of the time period for which metric values are returned.</p>
    pub fn set_start_time(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.start_time = input;
        self
    }
    /// <p>The end of the time period for which metric values are returned.</p>
    pub fn end_time(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.end_time = Some(input);
        self
    }
    /// <p>The end of the time period for which metric values are returned.</p>
    pub fn set_end_time(mut self, input: std::option::Option<aws_smithy_types::DateTime>) -> Self {
        self.end_time = input;
        self
    }
    /// <p>The maximum number of results to return at one time.</p>
    pub fn max_results(mut self, input: i32) -> Self {
        self.max_results = Some(input);
        self
    }
    /// <p>The maximum number of results to return at one time.</p>
    pub fn set_max_results(mut self, input: std::option::Option<i32>) -> Self {
        self.max_results = input;
        self
    }
    /// <p>The token for the next set of results.</p>
    pub fn next_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.next_token = Some(input.into());
        self
    }
    /// <p>The token for the next set of results.</p>
    pub fn set_next_token(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// Consumes the builder and constructs a [`ListMetricValuesInput`](crate::operation::list_metric_values::ListMetricValuesInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::list_metric_values::ListMetricValuesInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::list_metric_values::ListMetricValuesInput {
                thing_name: self.thing_name,
                metric_name: self.metric_name,
                dimension_name: self.dimension_name,
                dimension_value_operator: self.dimension_value_operator,
                start_time: self.start_time,
                end_time: self.end_time,
                max_results: self.max_results,
                next_token: self.next_token,
            },
        )
    }
}
