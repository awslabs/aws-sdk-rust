// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DeleteFleetMetricInput {
    /// <p>The name of the fleet metric to delete.</p>
    pub metric_name: ::std::option::Option<::std::string::String>,
    /// <p>The expected version of the fleet metric to delete.</p>
    pub expected_version: ::std::option::Option<i64>,
}
impl DeleteFleetMetricInput {
    /// <p>The name of the fleet metric to delete.</p>
    pub fn metric_name(&self) -> ::std::option::Option<&str> {
        self.metric_name.as_deref()
    }
    /// <p>The expected version of the fleet metric to delete.</p>
    pub fn expected_version(&self) -> ::std::option::Option<i64> {
        self.expected_version
    }
}
impl DeleteFleetMetricInput {
    /// Creates a new builder-style object to manufacture [`DeleteFleetMetricInput`](crate::operation::delete_fleet_metric::DeleteFleetMetricInput).
    pub fn builder() -> crate::operation::delete_fleet_metric::builders::DeleteFleetMetricInputBuilder {
        crate::operation::delete_fleet_metric::builders::DeleteFleetMetricInputBuilder::default()
    }
}

/// A builder for [`DeleteFleetMetricInput`](crate::operation::delete_fleet_metric::DeleteFleetMetricInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DeleteFleetMetricInputBuilder {
    pub(crate) metric_name: ::std::option::Option<::std::string::String>,
    pub(crate) expected_version: ::std::option::Option<i64>,
}
impl DeleteFleetMetricInputBuilder {
    /// <p>The name of the fleet metric to delete.</p>
    /// This field is required.
    pub fn metric_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.metric_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the fleet metric to delete.</p>
    pub fn set_metric_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.metric_name = input;
        self
    }
    /// <p>The name of the fleet metric to delete.</p>
    pub fn get_metric_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.metric_name
    }
    /// <p>The expected version of the fleet metric to delete.</p>
    pub fn expected_version(mut self, input: i64) -> Self {
        self.expected_version = ::std::option::Option::Some(input);
        self
    }
    /// <p>The expected version of the fleet metric to delete.</p>
    pub fn set_expected_version(mut self, input: ::std::option::Option<i64>) -> Self {
        self.expected_version = input;
        self
    }
    /// <p>The expected version of the fleet metric to delete.</p>
    pub fn get_expected_version(&self) -> &::std::option::Option<i64> {
        &self.expected_version
    }
    /// Consumes the builder and constructs a [`DeleteFleetMetricInput`](crate::operation::delete_fleet_metric::DeleteFleetMetricInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::delete_fleet_metric::DeleteFleetMetricInput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::operation::delete_fleet_metric::DeleteFleetMetricInput {
            metric_name: self.metric_name,
            expected_version: self.expected_version,
        })
    }
}
