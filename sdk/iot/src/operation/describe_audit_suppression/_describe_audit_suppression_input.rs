// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DescribeAuditSuppressionInput {
    /// <p>An audit check name. Checks must be enabled for your account. (Use <code>DescribeAccountAuditConfiguration</code> to see the list of all checks, including those that are enabled or use <code>UpdateAccountAuditConfiguration</code> to select which checks are enabled.)</p>
    pub check_name: ::std::option::Option<::std::string::String>,
    /// <p>Information that identifies the noncompliant resource.</p>
    pub resource_identifier: ::std::option::Option<crate::types::ResourceIdentifier>,
}
impl DescribeAuditSuppressionInput {
    /// <p>An audit check name. Checks must be enabled for your account. (Use <code>DescribeAccountAuditConfiguration</code> to see the list of all checks, including those that are enabled or use <code>UpdateAccountAuditConfiguration</code> to select which checks are enabled.)</p>
    pub fn check_name(&self) -> ::std::option::Option<&str> {
        self.check_name.as_deref()
    }
    /// <p>Information that identifies the noncompliant resource.</p>
    pub fn resource_identifier(&self) -> ::std::option::Option<&crate::types::ResourceIdentifier> {
        self.resource_identifier.as_ref()
    }
}
impl DescribeAuditSuppressionInput {
    /// Creates a new builder-style object to manufacture [`DescribeAuditSuppressionInput`](crate::operation::describe_audit_suppression::DescribeAuditSuppressionInput).
    pub fn builder() -> crate::operation::describe_audit_suppression::builders::DescribeAuditSuppressionInputBuilder {
        crate::operation::describe_audit_suppression::builders::DescribeAuditSuppressionInputBuilder::default()
    }
}

/// A builder for [`DescribeAuditSuppressionInput`](crate::operation::describe_audit_suppression::DescribeAuditSuppressionInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DescribeAuditSuppressionInputBuilder {
    pub(crate) check_name: ::std::option::Option<::std::string::String>,
    pub(crate) resource_identifier: ::std::option::Option<crate::types::ResourceIdentifier>,
}
impl DescribeAuditSuppressionInputBuilder {
    /// <p>An audit check name. Checks must be enabled for your account. (Use <code>DescribeAccountAuditConfiguration</code> to see the list of all checks, including those that are enabled or use <code>UpdateAccountAuditConfiguration</code> to select which checks are enabled.)</p>
    /// This field is required.
    pub fn check_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.check_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>An audit check name. Checks must be enabled for your account. (Use <code>DescribeAccountAuditConfiguration</code> to see the list of all checks, including those that are enabled or use <code>UpdateAccountAuditConfiguration</code> to select which checks are enabled.)</p>
    pub fn set_check_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.check_name = input;
        self
    }
    /// <p>An audit check name. Checks must be enabled for your account. (Use <code>DescribeAccountAuditConfiguration</code> to see the list of all checks, including those that are enabled or use <code>UpdateAccountAuditConfiguration</code> to select which checks are enabled.)</p>
    pub fn get_check_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.check_name
    }
    /// <p>Information that identifies the noncompliant resource.</p>
    /// This field is required.
    pub fn resource_identifier(mut self, input: crate::types::ResourceIdentifier) -> Self {
        self.resource_identifier = ::std::option::Option::Some(input);
        self
    }
    /// <p>Information that identifies the noncompliant resource.</p>
    pub fn set_resource_identifier(mut self, input: ::std::option::Option<crate::types::ResourceIdentifier>) -> Self {
        self.resource_identifier = input;
        self
    }
    /// <p>Information that identifies the noncompliant resource.</p>
    pub fn get_resource_identifier(&self) -> &::std::option::Option<crate::types::ResourceIdentifier> {
        &self.resource_identifier
    }
    /// Consumes the builder and constructs a [`DescribeAuditSuppressionInput`](crate::operation::describe_audit_suppression::DescribeAuditSuppressionInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::describe_audit_suppression::DescribeAuditSuppressionInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::describe_audit_suppression::DescribeAuditSuppressionInput {
            check_name: self.check_name,
            resource_identifier: self.resource_identifier,
        })
    }
}
