// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ValidateSecurityProfileBehaviorsOutput {
    /// <p>True if the behaviors were valid.</p>
    #[doc(hidden)]
    pub valid: bool,
    /// <p>The list of any errors found in the behaviors.</p>
    #[doc(hidden)]
    pub validation_errors: std::option::Option<std::vec::Vec<crate::types::ValidationError>>,
    _request_id: Option<String>,
}
impl ValidateSecurityProfileBehaviorsOutput {
    /// <p>True if the behaviors were valid.</p>
    pub fn valid(&self) -> bool {
        self.valid
    }
    /// <p>The list of any errors found in the behaviors.</p>
    pub fn validation_errors(&self) -> std::option::Option<&[crate::types::ValidationError]> {
        self.validation_errors.as_deref()
    }
}
impl aws_http::request_id::RequestId for ValidateSecurityProfileBehaviorsOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl ValidateSecurityProfileBehaviorsOutput {
    /// Creates a new builder-style object to manufacture [`ValidateSecurityProfileBehaviorsOutput`](crate::operation::validate_security_profile_behaviors::ValidateSecurityProfileBehaviorsOutput).
    pub fn builder() -> crate::operation::validate_security_profile_behaviors::builders::ValidateSecurityProfileBehaviorsOutputBuilder{
        crate::operation::validate_security_profile_behaviors::builders::ValidateSecurityProfileBehaviorsOutputBuilder::default()
    }
}

/// A builder for [`ValidateSecurityProfileBehaviorsOutput`](crate::operation::validate_security_profile_behaviors::ValidateSecurityProfileBehaviorsOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ValidateSecurityProfileBehaviorsOutputBuilder {
    pub(crate) valid: std::option::Option<bool>,
    pub(crate) validation_errors: std::option::Option<std::vec::Vec<crate::types::ValidationError>>,
    _request_id: Option<String>,
}
impl ValidateSecurityProfileBehaviorsOutputBuilder {
    /// <p>True if the behaviors were valid.</p>
    pub fn valid(mut self, input: bool) -> Self {
        self.valid = Some(input);
        self
    }
    /// <p>True if the behaviors were valid.</p>
    pub fn set_valid(mut self, input: std::option::Option<bool>) -> Self {
        self.valid = input;
        self
    }
    /// Appends an item to `validation_errors`.
    ///
    /// To override the contents of this collection use [`set_validation_errors`](Self::set_validation_errors).
    ///
    /// <p>The list of any errors found in the behaviors.</p>
    pub fn validation_errors(mut self, input: crate::types::ValidationError) -> Self {
        let mut v = self.validation_errors.unwrap_or_default();
        v.push(input);
        self.validation_errors = Some(v);
        self
    }
    /// <p>The list of any errors found in the behaviors.</p>
    pub fn set_validation_errors(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::ValidationError>>,
    ) -> Self {
        self.validation_errors = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`ValidateSecurityProfileBehaviorsOutput`](crate::operation::validate_security_profile_behaviors::ValidateSecurityProfileBehaviorsOutput).
    pub fn build(
        self,
    ) -> crate::operation::validate_security_profile_behaviors::ValidateSecurityProfileBehaviorsOutput
    {
        crate::operation::validate_security_profile_behaviors::ValidateSecurityProfileBehaviorsOutput {
            valid: self.valid
                .unwrap_or_default()
            ,
            validation_errors: self.validation_errors
            ,
            _request_id: self._request_id,
        }
    }
}
