// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ListManagedJobTemplatesOutput {
    /// <p>A list of managed job templates that are returned.</p>
    #[doc(hidden)]
    pub managed_job_templates:
        std::option::Option<std::vec::Vec<crate::types::ManagedJobTemplateSummary>>,
    /// <p>The token to retrieve the next set of results.</p>
    #[doc(hidden)]
    pub next_token: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl ListManagedJobTemplatesOutput {
    /// <p>A list of managed job templates that are returned.</p>
    pub fn managed_job_templates(
        &self,
    ) -> std::option::Option<&[crate::types::ManagedJobTemplateSummary]> {
        self.managed_job_templates.as_deref()
    }
    /// <p>The token to retrieve the next set of results.</p>
    pub fn next_token(&self) -> std::option::Option<&str> {
        self.next_token.as_deref()
    }
}
impl aws_http::request_id::RequestId for ListManagedJobTemplatesOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl ListManagedJobTemplatesOutput {
    /// Creates a new builder-style object to manufacture [`ListManagedJobTemplatesOutput`](crate::operation::list_managed_job_templates::ListManagedJobTemplatesOutput).
    pub fn builder(
    ) -> crate::operation::list_managed_job_templates::builders::ListManagedJobTemplatesOutputBuilder
    {
        crate::operation::list_managed_job_templates::builders::ListManagedJobTemplatesOutputBuilder::default()
    }
}

/// A builder for [`ListManagedJobTemplatesOutput`](crate::operation::list_managed_job_templates::ListManagedJobTemplatesOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ListManagedJobTemplatesOutputBuilder {
    pub(crate) managed_job_templates:
        std::option::Option<std::vec::Vec<crate::types::ManagedJobTemplateSummary>>,
    pub(crate) next_token: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl ListManagedJobTemplatesOutputBuilder {
    /// Appends an item to `managed_job_templates`.
    ///
    /// To override the contents of this collection use [`set_managed_job_templates`](Self::set_managed_job_templates).
    ///
    /// <p>A list of managed job templates that are returned.</p>
    pub fn managed_job_templates(mut self, input: crate::types::ManagedJobTemplateSummary) -> Self {
        let mut v = self.managed_job_templates.unwrap_or_default();
        v.push(input);
        self.managed_job_templates = Some(v);
        self
    }
    /// <p>A list of managed job templates that are returned.</p>
    pub fn set_managed_job_templates(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::ManagedJobTemplateSummary>>,
    ) -> Self {
        self.managed_job_templates = input;
        self
    }
    /// <p>The token to retrieve the next set of results.</p>
    pub fn next_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.next_token = Some(input.into());
        self
    }
    /// <p>The token to retrieve the next set of results.</p>
    pub fn set_next_token(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`ListManagedJobTemplatesOutput`](crate::operation::list_managed_job_templates::ListManagedJobTemplatesOutput).
    pub fn build(
        self,
    ) -> crate::operation::list_managed_job_templates::ListManagedJobTemplatesOutput {
        crate::operation::list_managed_job_templates::ListManagedJobTemplatesOutput {
            managed_job_templates: self.managed_job_templates,
            next_token: self.next_token,
            _request_id: self._request_id,
        }
    }
}
