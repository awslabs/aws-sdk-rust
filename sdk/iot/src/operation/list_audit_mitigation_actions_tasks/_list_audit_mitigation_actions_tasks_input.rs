// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ListAuditMitigationActionsTasksInput {
    /// <p>Specify this filter to limit results to tasks that were applied to results for a specific audit.</p>
    #[doc(hidden)]
    pub audit_task_id: std::option::Option<std::string::String>,
    /// <p>Specify this filter to limit results to tasks that were applied to a specific audit finding.</p>
    #[doc(hidden)]
    pub finding_id: std::option::Option<std::string::String>,
    /// <p>Specify this filter to limit results to tasks that are in a specific state.</p>
    #[doc(hidden)]
    pub task_status: std::option::Option<crate::types::AuditMitigationActionsTaskStatus>,
    /// <p>The maximum number of results to return at one time. The default is 25.</p>
    #[doc(hidden)]
    pub max_results: std::option::Option<i32>,
    /// <p>The token for the next set of results.</p>
    #[doc(hidden)]
    pub next_token: std::option::Option<std::string::String>,
    /// <p>Specify this filter to limit results to tasks that began on or after a specific date and time.</p>
    #[doc(hidden)]
    pub start_time: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>Specify this filter to limit results to tasks that were completed or canceled on or before a specific date and time.</p>
    #[doc(hidden)]
    pub end_time: std::option::Option<aws_smithy_types::DateTime>,
}
impl ListAuditMitigationActionsTasksInput {
    /// <p>Specify this filter to limit results to tasks that were applied to results for a specific audit.</p>
    pub fn audit_task_id(&self) -> std::option::Option<&str> {
        self.audit_task_id.as_deref()
    }
    /// <p>Specify this filter to limit results to tasks that were applied to a specific audit finding.</p>
    pub fn finding_id(&self) -> std::option::Option<&str> {
        self.finding_id.as_deref()
    }
    /// <p>Specify this filter to limit results to tasks that are in a specific state.</p>
    pub fn task_status(
        &self,
    ) -> std::option::Option<&crate::types::AuditMitigationActionsTaskStatus> {
        self.task_status.as_ref()
    }
    /// <p>The maximum number of results to return at one time. The default is 25.</p>
    pub fn max_results(&self) -> std::option::Option<i32> {
        self.max_results
    }
    /// <p>The token for the next set of results.</p>
    pub fn next_token(&self) -> std::option::Option<&str> {
        self.next_token.as_deref()
    }
    /// <p>Specify this filter to limit results to tasks that began on or after a specific date and time.</p>
    pub fn start_time(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.start_time.as_ref()
    }
    /// <p>Specify this filter to limit results to tasks that were completed or canceled on or before a specific date and time.</p>
    pub fn end_time(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.end_time.as_ref()
    }
}
impl ListAuditMitigationActionsTasksInput {
    /// Creates a new builder-style object to manufacture [`ListAuditMitigationActionsTasksInput`](crate::operation::list_audit_mitigation_actions_tasks::ListAuditMitigationActionsTasksInput).
    pub fn builder() -> crate::operation::list_audit_mitigation_actions_tasks::builders::ListAuditMitigationActionsTasksInputBuilder{
        crate::operation::list_audit_mitigation_actions_tasks::builders::ListAuditMitigationActionsTasksInputBuilder::default()
    }
}

/// A builder for [`ListAuditMitigationActionsTasksInput`](crate::operation::list_audit_mitigation_actions_tasks::ListAuditMitigationActionsTasksInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ListAuditMitigationActionsTasksInputBuilder {
    pub(crate) audit_task_id: std::option::Option<std::string::String>,
    pub(crate) finding_id: std::option::Option<std::string::String>,
    pub(crate) task_status: std::option::Option<crate::types::AuditMitigationActionsTaskStatus>,
    pub(crate) max_results: std::option::Option<i32>,
    pub(crate) next_token: std::option::Option<std::string::String>,
    pub(crate) start_time: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) end_time: std::option::Option<aws_smithy_types::DateTime>,
}
impl ListAuditMitigationActionsTasksInputBuilder {
    /// <p>Specify this filter to limit results to tasks that were applied to results for a specific audit.</p>
    pub fn audit_task_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.audit_task_id = Some(input.into());
        self
    }
    /// <p>Specify this filter to limit results to tasks that were applied to results for a specific audit.</p>
    pub fn set_audit_task_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.audit_task_id = input;
        self
    }
    /// <p>Specify this filter to limit results to tasks that were applied to a specific audit finding.</p>
    pub fn finding_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.finding_id = Some(input.into());
        self
    }
    /// <p>Specify this filter to limit results to tasks that were applied to a specific audit finding.</p>
    pub fn set_finding_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.finding_id = input;
        self
    }
    /// <p>Specify this filter to limit results to tasks that are in a specific state.</p>
    pub fn task_status(mut self, input: crate::types::AuditMitigationActionsTaskStatus) -> Self {
        self.task_status = Some(input);
        self
    }
    /// <p>Specify this filter to limit results to tasks that are in a specific state.</p>
    pub fn set_task_status(
        mut self,
        input: std::option::Option<crate::types::AuditMitigationActionsTaskStatus>,
    ) -> Self {
        self.task_status = input;
        self
    }
    /// <p>The maximum number of results to return at one time. The default is 25.</p>
    pub fn max_results(mut self, input: i32) -> Self {
        self.max_results = Some(input);
        self
    }
    /// <p>The maximum number of results to return at one time. The default is 25.</p>
    pub fn set_max_results(mut self, input: std::option::Option<i32>) -> Self {
        self.max_results = input;
        self
    }
    /// <p>The token for the next set of results.</p>
    pub fn next_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.next_token = Some(input.into());
        self
    }
    /// <p>The token for the next set of results.</p>
    pub fn set_next_token(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// <p>Specify this filter to limit results to tasks that began on or after a specific date and time.</p>
    pub fn start_time(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.start_time = Some(input);
        self
    }
    /// <p>Specify this filter to limit results to tasks that began on or after a specific date and time.</p>
    pub fn set_start_time(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.start_time = input;
        self
    }
    /// <p>Specify this filter to limit results to tasks that were completed or canceled on or before a specific date and time.</p>
    pub fn end_time(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.end_time = Some(input);
        self
    }
    /// <p>Specify this filter to limit results to tasks that were completed or canceled on or before a specific date and time.</p>
    pub fn set_end_time(mut self, input: std::option::Option<aws_smithy_types::DateTime>) -> Self {
        self.end_time = input;
        self
    }
    /// Consumes the builder and constructs a [`ListAuditMitigationActionsTasksInput`](crate::operation::list_audit_mitigation_actions_tasks::ListAuditMitigationActionsTasksInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::list_audit_mitigation_actions_tasks::ListAuditMitigationActionsTasksInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::list_audit_mitigation_actions_tasks::ListAuditMitigationActionsTasksInput {
                audit_task_id: self.audit_task_id
                ,
                finding_id: self.finding_id
                ,
                task_status: self.task_status
                ,
                max_results: self.max_results
                ,
                next_token: self.next_token
                ,
                start_time: self.start_time
                ,
                end_time: self.end_time
                ,
            }
        )
    }
}
