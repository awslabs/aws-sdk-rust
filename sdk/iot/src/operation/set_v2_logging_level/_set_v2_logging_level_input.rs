// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct SetV2LoggingLevelInput {
    /// <p>The log target.</p>
    #[doc(hidden)]
    pub log_target: std::option::Option<crate::types::LogTarget>,
    /// <p>The log level.</p>
    #[doc(hidden)]
    pub log_level: std::option::Option<crate::types::LogLevel>,
}
impl SetV2LoggingLevelInput {
    /// <p>The log target.</p>
    pub fn log_target(&self) -> std::option::Option<&crate::types::LogTarget> {
        self.log_target.as_ref()
    }
    /// <p>The log level.</p>
    pub fn log_level(&self) -> std::option::Option<&crate::types::LogLevel> {
        self.log_level.as_ref()
    }
}
impl SetV2LoggingLevelInput {
    /// Creates a new builder-style object to manufacture [`SetV2LoggingLevelInput`](crate::operation::set_v2_logging_level::SetV2LoggingLevelInput).
    pub fn builder(
    ) -> crate::operation::set_v2_logging_level::builders::SetV2LoggingLevelInputBuilder {
        crate::operation::set_v2_logging_level::builders::SetV2LoggingLevelInputBuilder::default()
    }
}

/// A builder for [`SetV2LoggingLevelInput`](crate::operation::set_v2_logging_level::SetV2LoggingLevelInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct SetV2LoggingLevelInputBuilder {
    pub(crate) log_target: std::option::Option<crate::types::LogTarget>,
    pub(crate) log_level: std::option::Option<crate::types::LogLevel>,
}
impl SetV2LoggingLevelInputBuilder {
    /// <p>The log target.</p>
    pub fn log_target(mut self, input: crate::types::LogTarget) -> Self {
        self.log_target = Some(input);
        self
    }
    /// <p>The log target.</p>
    pub fn set_log_target(mut self, input: std::option::Option<crate::types::LogTarget>) -> Self {
        self.log_target = input;
        self
    }
    /// <p>The log level.</p>
    pub fn log_level(mut self, input: crate::types::LogLevel) -> Self {
        self.log_level = Some(input);
        self
    }
    /// <p>The log level.</p>
    pub fn set_log_level(mut self, input: std::option::Option<crate::types::LogLevel>) -> Self {
        self.log_level = input;
        self
    }
    /// Consumes the builder and constructs a [`SetV2LoggingLevelInput`](crate::operation::set_v2_logging_level::SetV2LoggingLevelInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::set_v2_logging_level::SetV2LoggingLevelInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::set_v2_logging_level::SetV2LoggingLevelInput {
                log_target: self.log_target,
                log_level: self.log_level,
            },
        )
    }
}
