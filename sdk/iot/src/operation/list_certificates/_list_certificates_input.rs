// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The input for the ListCertificates operation.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ListCertificatesInput {
    /// <p>The result page size.</p>
    #[doc(hidden)]
    pub page_size: std::option::Option<i32>,
    /// <p>The marker for the next set of results.</p>
    #[doc(hidden)]
    pub marker: std::option::Option<std::string::String>,
    /// <p>Specifies the order for results. If True, the results are returned in ascending order, based on the creation date.</p>
    #[doc(hidden)]
    pub ascending_order: bool,
}
impl ListCertificatesInput {
    /// <p>The result page size.</p>
    pub fn page_size(&self) -> std::option::Option<i32> {
        self.page_size
    }
    /// <p>The marker for the next set of results.</p>
    pub fn marker(&self) -> std::option::Option<&str> {
        self.marker.as_deref()
    }
    /// <p>Specifies the order for results. If True, the results are returned in ascending order, based on the creation date.</p>
    pub fn ascending_order(&self) -> bool {
        self.ascending_order
    }
}
impl ListCertificatesInput {
    /// Creates a new builder-style object to manufacture [`ListCertificatesInput`](crate::operation::list_certificates::ListCertificatesInput).
    pub fn builder() -> crate::operation::list_certificates::builders::ListCertificatesInputBuilder
    {
        crate::operation::list_certificates::builders::ListCertificatesInputBuilder::default()
    }
}

/// A builder for [`ListCertificatesInput`](crate::operation::list_certificates::ListCertificatesInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ListCertificatesInputBuilder {
    pub(crate) page_size: std::option::Option<i32>,
    pub(crate) marker: std::option::Option<std::string::String>,
    pub(crate) ascending_order: std::option::Option<bool>,
}
impl ListCertificatesInputBuilder {
    /// <p>The result page size.</p>
    pub fn page_size(mut self, input: i32) -> Self {
        self.page_size = Some(input);
        self
    }
    /// <p>The result page size.</p>
    pub fn set_page_size(mut self, input: std::option::Option<i32>) -> Self {
        self.page_size = input;
        self
    }
    /// <p>The marker for the next set of results.</p>
    pub fn marker(mut self, input: impl Into<std::string::String>) -> Self {
        self.marker = Some(input.into());
        self
    }
    /// <p>The marker for the next set of results.</p>
    pub fn set_marker(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.marker = input;
        self
    }
    /// <p>Specifies the order for results. If True, the results are returned in ascending order, based on the creation date.</p>
    pub fn ascending_order(mut self, input: bool) -> Self {
        self.ascending_order = Some(input);
        self
    }
    /// <p>Specifies the order for results. If True, the results are returned in ascending order, based on the creation date.</p>
    pub fn set_ascending_order(mut self, input: std::option::Option<bool>) -> Self {
        self.ascending_order = input;
        self
    }
    /// Consumes the builder and constructs a [`ListCertificatesInput`](crate::operation::list_certificates::ListCertificatesInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::list_certificates::ListCertificatesInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(crate::operation::list_certificates::ListCertificatesInput {
            page_size: self.page_size,
            marker: self.marker,
            ascending_order: self.ascending_order.unwrap_or_default(),
        })
    }
}
