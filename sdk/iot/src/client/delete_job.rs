// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeleteJob`](crate::operation::delete_job::builders::DeleteJobFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`job_id(impl Into<String>)`](crate::operation::delete_job::builders::DeleteJobFluentBuilder::job_id) / [`set_job_id(Option<String>)`](crate::operation::delete_job::builders::DeleteJobFluentBuilder::set_job_id): <p>The ID of the job to be deleted.</p>  <p>After a job deletion is completed, you may reuse this jobId when you create a new job. However, this is not recommended, and you must ensure that your devices are not using the jobId to refer to the deleted job.</p>
    ///   - [`force(bool)`](crate::operation::delete_job::builders::DeleteJobFluentBuilder::force) / [`set_force(bool)`](crate::operation::delete_job::builders::DeleteJobFluentBuilder::set_force): <p>(Optional) When true, you can delete a job which is "IN_PROGRESS". Otherwise, you can only delete a job which is in a terminal state ("COMPLETED" or "CANCELED") or an exception will occur. The default is false.</p> <note>   <p>Deleting a job which is "IN_PROGRESS", will cause a device which is executing the job to be unable to access job information or update the job execution status. Use caution and ensure that each device executing a job which is deleted is able to recover to a valid state.</p>  </note>
    ///   - [`namespace_id(impl Into<String>)`](crate::operation::delete_job::builders::DeleteJobFluentBuilder::namespace_id) / [`set_namespace_id(Option<String>)`](crate::operation::delete_job::builders::DeleteJobFluentBuilder::set_namespace_id): <p>The namespace used to indicate that a job is a customer-managed job.</p>  <p>When you specify a value for this parameter, Amazon Web Services IoT Core sends jobs notifications to MQTT topics that contain the value in the following format.</p>  <p> <code>$aws/things/<i>THING_NAME</i>/jobs/<i>JOB_ID</i>/notify-namespace-<i>NAMESPACE_ID</i>/</code> </p> <note>   <p>The <code>namespaceId</code> feature is in public preview.</p>  </note>
    /// - On success, responds with [`DeleteJobOutput`](crate::operation::delete_job::DeleteJobOutput)
    /// - On failure, responds with [`SdkError<DeleteJobError>`](crate::operation::delete_job::DeleteJobError)
    pub fn delete_job(&self) -> crate::operation::delete_job::builders::DeleteJobFluentBuilder {
        crate::operation::delete_job::builders::DeleteJobFluentBuilder::new(self.handle.clone())
    }
}
