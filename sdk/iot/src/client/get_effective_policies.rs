// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetEffectivePolicies`](crate::client::fluent_builders::GetEffectivePolicies) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`principal(impl Into<String>)`](crate::client::fluent_builders::GetEffectivePolicies::principal) / [`set_principal(Option<String>)`](crate::client::fluent_builders::GetEffectivePolicies::set_principal): <p>The principal. Valid principals are CertificateArn (arn:aws:iot:<i>region</i>:<i>accountId</i>:cert/<i>certificateId</i>), thingGroupArn (arn:aws:iot:<i>region</i>:<i>accountId</i>:thinggroup/<i>groupName</i>) and CognitoId (<i>region</i>:<i>id</i>).</p>
    ///   - [`cognito_identity_pool_id(impl Into<String>)`](crate::client::fluent_builders::GetEffectivePolicies::cognito_identity_pool_id) / [`set_cognito_identity_pool_id(Option<String>)`](crate::client::fluent_builders::GetEffectivePolicies::set_cognito_identity_pool_id): <p>The Cognito identity pool ID.</p>
    ///   - [`thing_name(impl Into<String>)`](crate::client::fluent_builders::GetEffectivePolicies::thing_name) / [`set_thing_name(Option<String>)`](crate::client::fluent_builders::GetEffectivePolicies::set_thing_name): <p>The thing name.</p>
    /// - On success, responds with [`GetEffectivePoliciesOutput`](crate::output::GetEffectivePoliciesOutput) with field(s):
    ///   - [`effective_policies(Option<Vec<EffectivePolicy>>)`](crate::output::GetEffectivePoliciesOutput::effective_policies): <p>The effective policies.</p>
    /// - On failure, responds with [`SdkError<GetEffectivePoliciesError>`](crate::error::GetEffectivePoliciesError)
    pub fn get_effective_policies(&self) -> crate::client::fluent_builders::GetEffectivePolicies {
        crate::client::fluent_builders::GetEffectivePolicies::new(self.handle.clone())
    }
}
