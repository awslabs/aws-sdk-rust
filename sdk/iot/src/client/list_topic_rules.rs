// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListTopicRules`](crate::client::fluent_builders::ListTopicRules) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListTopicRules::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`topic(impl Into<String>)`](crate::client::fluent_builders::ListTopicRules::topic) / [`set_topic(Option<String>)`](crate::client::fluent_builders::ListTopicRules::set_topic): <p>The topic.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListTopicRules::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListTopicRules::set_max_results): <p>The maximum number of results to return.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListTopicRules::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListTopicRules::set_next_token): <p>To retrieve the next set of results, the <code>nextToken</code> value from a previous response; otherwise <b>null</b> to receive the first set of results.</p>
    ///   - [`rule_disabled(bool)`](crate::client::fluent_builders::ListTopicRules::rule_disabled) / [`set_rule_disabled(Option<bool>)`](crate::client::fluent_builders::ListTopicRules::set_rule_disabled): <p>Specifies whether the rule is disabled.</p>
    /// - On success, responds with [`ListTopicRulesOutput`](crate::output::ListTopicRulesOutput) with field(s):
    ///   - [`rules(Option<Vec<TopicRuleListItem>>)`](crate::output::ListTopicRulesOutput::rules): <p>The rules.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListTopicRulesOutput::next_token): <p>The token to use to get the next set of results, or <b>null</b> if there are no additional results.</p>
    /// - On failure, responds with [`SdkError<ListTopicRulesError>`](crate::error::ListTopicRulesError)
    pub fn list_topic_rules(&self) -> crate::client::fluent_builders::ListTopicRules {
        crate::client::fluent_builders::ListTopicRules::new(self.handle.clone())
    }
}
