// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListActiveViolations`](crate::operation::list_active_violations::builders::ListActiveViolationsFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::list_active_violations::builders::ListActiveViolationsFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`thing_name(impl Into<String>)`](crate::operation::list_active_violations::builders::ListActiveViolationsFluentBuilder::thing_name) / [`set_thing_name(Option<String>)`](crate::operation::list_active_violations::builders::ListActiveViolationsFluentBuilder::set_thing_name):<br>required: **false**<br><p>The name of the thing whose active violations are listed.</p><br>
    ///   - [`security_profile_name(impl Into<String>)`](crate::operation::list_active_violations::builders::ListActiveViolationsFluentBuilder::security_profile_name) / [`set_security_profile_name(Option<String>)`](crate::operation::list_active_violations::builders::ListActiveViolationsFluentBuilder::set_security_profile_name):<br>required: **false**<br><p>The name of the Device Defender security profile for which violations are listed.</p><br>
    ///   - [`behavior_criteria_type(BehaviorCriteriaType)`](crate::operation::list_active_violations::builders::ListActiveViolationsFluentBuilder::behavior_criteria_type) / [`set_behavior_criteria_type(Option<BehaviorCriteriaType>)`](crate::operation::list_active_violations::builders::ListActiveViolationsFluentBuilder::set_behavior_criteria_type):<br>required: **false**<br><p> The criteria for a behavior. </p><br>
    ///   - [`list_suppressed_alerts(bool)`](crate::operation::list_active_violations::builders::ListActiveViolationsFluentBuilder::list_suppressed_alerts) / [`set_list_suppressed_alerts(Option<bool>)`](crate::operation::list_active_violations::builders::ListActiveViolationsFluentBuilder::set_list_suppressed_alerts):<br>required: **false**<br><p> A list of all suppressed alerts. </p><br>
    ///   - [`verification_state(VerificationState)`](crate::operation::list_active_violations::builders::ListActiveViolationsFluentBuilder::verification_state) / [`set_verification_state(Option<VerificationState>)`](crate::operation::list_active_violations::builders::ListActiveViolationsFluentBuilder::set_verification_state):<br>required: **false**<br><p>The verification state of the violation (detect alarm).</p><br>
    ///   - [`next_token(impl Into<String>)`](crate::operation::list_active_violations::builders::ListActiveViolationsFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::list_active_violations::builders::ListActiveViolationsFluentBuilder::set_next_token):<br>required: **false**<br><p>The token for the next set of results.</p><br>
    ///   - [`max_results(i32)`](crate::operation::list_active_violations::builders::ListActiveViolationsFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::list_active_violations::builders::ListActiveViolationsFluentBuilder::set_max_results):<br>required: **false**<br><p>The maximum number of results to return at one time.</p><br>
    /// - On success, responds with [`ListActiveViolationsOutput`](crate::operation::list_active_violations::ListActiveViolationsOutput) with field(s):
    ///   - [`active_violations(Option<Vec::<ActiveViolation>>)`](crate::operation::list_active_violations::ListActiveViolationsOutput::active_violations): <p>The list of active violations.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::list_active_violations::ListActiveViolationsOutput::next_token): <p>A token that can be used to retrieve the next set of results, or <code>null</code> if there are no additional results.</p>
    /// - On failure, responds with [`SdkError<ListActiveViolationsError>`](crate::operation::list_active_violations::ListActiveViolationsError)
    pub fn list_active_violations(&self) -> crate::operation::list_active_violations::builders::ListActiveViolationsFluentBuilder {
        crate::operation::list_active_violations::builders::ListActiveViolationsFluentBuilder::new(self.handle.clone())
    }
}
