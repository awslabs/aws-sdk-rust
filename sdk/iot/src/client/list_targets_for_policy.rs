// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListTargetsForPolicy`](crate::client::fluent_builders::ListTargetsForPolicy) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListTargetsForPolicy::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`policy_name(impl Into<String>)`](crate::client::fluent_builders::ListTargetsForPolicy::policy_name) / [`set_policy_name(Option<String>)`](crate::client::fluent_builders::ListTargetsForPolicy::set_policy_name): <p>The policy name.</p>
    ///   - [`marker(impl Into<String>)`](crate::client::fluent_builders::ListTargetsForPolicy::marker) / [`set_marker(Option<String>)`](crate::client::fluent_builders::ListTargetsForPolicy::set_marker): <p>A marker used to get the next set of results.</p>
    ///   - [`page_size(i32)`](crate::client::fluent_builders::ListTargetsForPolicy::page_size) / [`set_page_size(Option<i32>)`](crate::client::fluent_builders::ListTargetsForPolicy::set_page_size): <p>The maximum number of results to return at one time.</p>
    /// - On success, responds with [`ListTargetsForPolicyOutput`](crate::output::ListTargetsForPolicyOutput) with field(s):
    ///   - [`targets(Option<Vec<String>>)`](crate::output::ListTargetsForPolicyOutput::targets): <p>The policy targets.</p>
    ///   - [`next_marker(Option<String>)`](crate::output::ListTargetsForPolicyOutput::next_marker): <p>A marker used to get the next set of results.</p>
    /// - On failure, responds with [`SdkError<ListTargetsForPolicyError>`](crate::error::ListTargetsForPolicyError)
    pub fn list_targets_for_policy(&self) -> crate::client::fluent_builders::ListTargetsForPolicy {
        crate::client::fluent_builders::ListTargetsForPolicy::new(self.handle.clone())
    }
}
