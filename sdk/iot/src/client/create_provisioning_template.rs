// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateProvisioningTemplate`](crate::client::fluent_builders::CreateProvisioningTemplate) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`template_name(impl Into<String>)`](crate::client::fluent_builders::CreateProvisioningTemplate::template_name) / [`set_template_name(Option<String>)`](crate::client::fluent_builders::CreateProvisioningTemplate::set_template_name): <p>The name of the provisioning template.</p>
    ///   - [`description(impl Into<String>)`](crate::client::fluent_builders::CreateProvisioningTemplate::description) / [`set_description(Option<String>)`](crate::client::fluent_builders::CreateProvisioningTemplate::set_description): <p>The description of the provisioning template.</p>
    ///   - [`template_body(impl Into<String>)`](crate::client::fluent_builders::CreateProvisioningTemplate::template_body) / [`set_template_body(Option<String>)`](crate::client::fluent_builders::CreateProvisioningTemplate::set_template_body): <p>The JSON formatted contents of the provisioning template.</p>
    ///   - [`enabled(bool)`](crate::client::fluent_builders::CreateProvisioningTemplate::enabled) / [`set_enabled(bool)`](crate::client::fluent_builders::CreateProvisioningTemplate::set_enabled): <p>True to enable the provisioning template, otherwise false.</p>
    ///   - [`provisioning_role_arn(impl Into<String>)`](crate::client::fluent_builders::CreateProvisioningTemplate::provisioning_role_arn) / [`set_provisioning_role_arn(Option<String>)`](crate::client::fluent_builders::CreateProvisioningTemplate::set_provisioning_role_arn): <p>The role ARN for the role associated with the provisioning template. This IoT role grants permission to provision a device.</p>
    ///   - [`pre_provisioning_hook(ProvisioningHook)`](crate::client::fluent_builders::CreateProvisioningTemplate::pre_provisioning_hook) / [`set_pre_provisioning_hook(Option<ProvisioningHook>)`](crate::client::fluent_builders::CreateProvisioningTemplate::set_pre_provisioning_hook): <p>Creates a pre-provisioning hook template. Only supports template of type <code>FLEET_PROVISIONING</code>. For more information about provisioning template types, see <a href="https://docs.aws.amazon.com/iot/latest/apireference/API_CreateProvisioningTemplate.html#iot-CreateProvisioningTemplate-request-type">type</a>.</p>
    ///   - [`tags(Vec<Tag>)`](crate::client::fluent_builders::CreateProvisioningTemplate::tags) / [`set_tags(Option<Vec<Tag>>)`](crate::client::fluent_builders::CreateProvisioningTemplate::set_tags): <p>Metadata which can be used to manage the provisioning template.</p> <note>   <p>For URI Request parameters use format: ...key1=value1&amp;key2=value2...</p>   <p>For the CLI command-line parameter use format: &amp;&amp;tags "key1=value1&amp;key2=value2..."</p>   <p>For the cli-input-json file use format: "tags": "key1=value1&amp;key2=value2..."</p>  </note>
    ///   - [`r#type(TemplateType)`](crate::client::fluent_builders::CreateProvisioningTemplate::type) / [`set_type(Option<TemplateType>)`](crate::client::fluent_builders::CreateProvisioningTemplate::set_type): <p>The type you define in a provisioning template. You can create a template with only one type. You can't change the template type after its creation. The default value is <code>FLEET_PROVISIONING</code>. For more information about provisioning template, see: <a href="https://docs.aws.amazon.com/iot/latest/developerguide/provision-template.html">Provisioning template</a>. </p>
    /// - On success, responds with [`CreateProvisioningTemplateOutput`](crate::output::CreateProvisioningTemplateOutput) with field(s):
    ///   - [`template_arn(Option<String>)`](crate::output::CreateProvisioningTemplateOutput::template_arn): <p>The ARN that identifies the provisioning template.</p>
    ///   - [`template_name(Option<String>)`](crate::output::CreateProvisioningTemplateOutput::template_name): <p>The name of the provisioning template.</p>
    ///   - [`default_version_id(Option<i32>)`](crate::output::CreateProvisioningTemplateOutput::default_version_id): <p>The default version of the provisioning template.</p>
    /// - On failure, responds with [`SdkError<CreateProvisioningTemplateError>`](crate::error::CreateProvisioningTemplateError)
    pub fn create_provisioning_template(
        &self,
    ) -> crate::client::fluent_builders::CreateProvisioningTemplate {
        crate::client::fluent_builders::CreateProvisioningTemplate::new(self.handle.clone())
    }
}
