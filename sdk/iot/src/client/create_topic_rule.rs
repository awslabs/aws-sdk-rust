// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateTopicRule`](crate::operation::create_topic_rule::builders::CreateTopicRuleFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`rule_name(impl Into<String>)`](crate::operation::create_topic_rule::builders::CreateTopicRuleFluentBuilder::rule_name) / [`set_rule_name(Option<String>)`](crate::operation::create_topic_rule::builders::CreateTopicRuleFluentBuilder::set_rule_name): <p>The name of the rule.</p>
    ///   - [`topic_rule_payload(TopicRulePayload)`](crate::operation::create_topic_rule::builders::CreateTopicRuleFluentBuilder::topic_rule_payload) / [`set_topic_rule_payload(Option<TopicRulePayload>)`](crate::operation::create_topic_rule::builders::CreateTopicRuleFluentBuilder::set_topic_rule_payload): <p>The rule payload.</p>
    ///   - [`tags(impl Into<String>)`](crate::operation::create_topic_rule::builders::CreateTopicRuleFluentBuilder::tags) / [`set_tags(Option<String>)`](crate::operation::create_topic_rule::builders::CreateTopicRuleFluentBuilder::set_tags): <p>Metadata which can be used to manage the topic rule.</p> <note>   <p>For URI Request parameters use format: ...key1=value1&amp;key2=value2...</p>   <p>For the CLI command-line parameter use format: --tags "key1=value1&amp;key2=value2..."</p>   <p>For the cli-input-json file use format: "tags": "key1=value1&amp;key2=value2..."</p>  </note>
    /// - On success, responds with [`CreateTopicRuleOutput`](crate::operation::create_topic_rule::CreateTopicRuleOutput)
    /// - On failure, responds with [`SdkError<CreateTopicRuleError>`](crate::operation::create_topic_rule::CreateTopicRuleError)
    pub fn create_topic_rule(
        &self,
    ) -> crate::operation::create_topic_rule::builders::CreateTopicRuleFluentBuilder {
        crate::operation::create_topic_rule::builders::CreateTopicRuleFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
