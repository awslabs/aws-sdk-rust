// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeleteCertificate`](crate::operation::delete_certificate::builders::DeleteCertificateFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`certificate_id(impl Into<String>)`](crate::operation::delete_certificate::builders::DeleteCertificateFluentBuilder::certificate_id) / [`set_certificate_id(Option<String>)`](crate::operation::delete_certificate::builders::DeleteCertificateFluentBuilder::set_certificate_id):<br>required: **true**<br><p>The ID of the certificate. (The last part of the certificate ARN contains the certificate ID.)</p><br>
    ///   - [`force_delete(bool)`](crate::operation::delete_certificate::builders::DeleteCertificateFluentBuilder::force_delete) / [`set_force_delete(Option<bool>)`](crate::operation::delete_certificate::builders::DeleteCertificateFluentBuilder::set_force_delete):<br>required: **false**<br><p>Forces the deletion of a certificate if it is inactive and is not attached to an IoT thing.</p><br>
    /// - On success, responds with [`DeleteCertificateOutput`](crate::operation::delete_certificate::DeleteCertificateOutput)
    /// - On failure, responds with [`SdkError<DeleteCertificateError>`](crate::operation::delete_certificate::DeleteCertificateError)
    pub fn delete_certificate(&self) -> crate::operation::delete_certificate::builders::DeleteCertificateFluentBuilder {
        crate::operation::delete_certificate::builders::DeleteCertificateFluentBuilder::new(self.handle.clone())
    }
}
