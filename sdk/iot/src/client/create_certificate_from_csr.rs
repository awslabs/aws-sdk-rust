// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateCertificateFromCsr`](crate::operation::create_certificate_from_csr::builders::CreateCertificateFromCsrFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`certificate_signing_request(impl Into<String>)`](crate::operation::create_certificate_from_csr::builders::CreateCertificateFromCsrFluentBuilder::certificate_signing_request) / [`set_certificate_signing_request(Option<String>)`](crate::operation::create_certificate_from_csr::builders::CreateCertificateFromCsrFluentBuilder::set_certificate_signing_request): <p>The certificate signing request (CSR).</p>
    ///   - [`set_as_active(bool)`](crate::operation::create_certificate_from_csr::builders::CreateCertificateFromCsrFluentBuilder::set_as_active) / [`set_set_as_active(bool)`](crate::operation::create_certificate_from_csr::builders::CreateCertificateFromCsrFluentBuilder::set_set_as_active): <p>Specifies whether the certificate is active.</p>
    /// - On success, responds with [`CreateCertificateFromCsrOutput`](crate::operation::create_certificate_from_csr::CreateCertificateFromCsrOutput) with field(s):
    ///   - [`certificate_arn(Option<String>)`](crate::operation::create_certificate_from_csr::CreateCertificateFromCsrOutput::certificate_arn): <p>The Amazon Resource Name (ARN) of the certificate. You can use the ARN as a principal for policy operations.</p>
    ///   - [`certificate_id(Option<String>)`](crate::operation::create_certificate_from_csr::CreateCertificateFromCsrOutput::certificate_id): <p>The ID of the certificate. Certificate management operations only take a certificateId.</p>
    ///   - [`certificate_pem(Option<String>)`](crate::operation::create_certificate_from_csr::CreateCertificateFromCsrOutput::certificate_pem): <p>The certificate data, in PEM format.</p>
    /// - On failure, responds with [`SdkError<CreateCertificateFromCsrError>`](crate::operation::create_certificate_from_csr::CreateCertificateFromCsrError)
    pub fn create_certificate_from_csr(&self) -> crate::operation::create_certificate_from_csr::builders::CreateCertificateFromCsrFluentBuilder{
        crate::operation::create_certificate_from_csr::builders::CreateCertificateFromCsrFluentBuilder::new(self.handle.clone())
    }
}
