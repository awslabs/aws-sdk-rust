// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListOutgoingCertificates`](crate::client::fluent_builders::ListOutgoingCertificates) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListOutgoingCertificates::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`page_size(i32)`](crate::client::fluent_builders::ListOutgoingCertificates::page_size) / [`set_page_size(Option<i32>)`](crate::client::fluent_builders::ListOutgoingCertificates::set_page_size): <p>The result page size.</p>
    ///   - [`marker(impl Into<String>)`](crate::client::fluent_builders::ListOutgoingCertificates::marker) / [`set_marker(Option<String>)`](crate::client::fluent_builders::ListOutgoingCertificates::set_marker): <p>The marker for the next set of results.</p>
    ///   - [`ascending_order(bool)`](crate::client::fluent_builders::ListOutgoingCertificates::ascending_order) / [`set_ascending_order(bool)`](crate::client::fluent_builders::ListOutgoingCertificates::set_ascending_order): <p>Specifies the order for results. If True, the results are returned in ascending order, based on the creation date.</p>
    /// - On success, responds with [`ListOutgoingCertificatesOutput`](crate::output::ListOutgoingCertificatesOutput) with field(s):
    ///   - [`outgoing_certificates(Option<Vec<OutgoingCertificate>>)`](crate::output::ListOutgoingCertificatesOutput::outgoing_certificates): <p>The certificates that are being transferred but not yet accepted.</p>
    ///   - [`next_marker(Option<String>)`](crate::output::ListOutgoingCertificatesOutput::next_marker): <p>The marker for the next set of results.</p>
    /// - On failure, responds with [`SdkError<ListOutgoingCertificatesError>`](crate::error::ListOutgoingCertificatesError)
    pub fn list_outgoing_certificates(
        &self,
    ) -> crate::client::fluent_builders::ListOutgoingCertificates {
        crate::client::fluent_builders::ListOutgoingCertificates::new(self.handle.clone())
    }
}
