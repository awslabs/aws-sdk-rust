// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DetachPrincipalPolicy`](crate::operation::detach_principal_policy::builders::DetachPrincipalPolicyFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`policy_name(impl Into<String>)`](crate::operation::detach_principal_policy::builders::DetachPrincipalPolicyFluentBuilder::policy_name) / [`set_policy_name(Option<String>)`](crate::operation::detach_principal_policy::builders::DetachPrincipalPolicyFluentBuilder::set_policy_name):<br>required: **true**<br><p>The name of the policy to detach.</p><br>
    ///   - [`principal(impl Into<String>)`](crate::operation::detach_principal_policy::builders::DetachPrincipalPolicyFluentBuilder::principal) / [`set_principal(Option<String>)`](crate::operation::detach_principal_policy::builders::DetachPrincipalPolicyFluentBuilder::set_principal):<br>required: **true**<br><p>The principal.</p>  <p>Valid principals are CertificateArn (arn:aws:iot:<i>region</i>:<i>accountId</i>:cert/<i>certificateId</i>), thingGroupArn (arn:aws:iot:<i>region</i>:<i>accountId</i>:thinggroup/<i>groupName</i>) and CognitoId (<i>region</i>:<i>id</i>).</p><br>
    /// - On success, responds with [`DetachPrincipalPolicyOutput`](crate::operation::detach_principal_policy::DetachPrincipalPolicyOutput)
    /// - On failure, responds with [`SdkError<DetachPrincipalPolicyError>`](crate::operation::detach_principal_policy::DetachPrincipalPolicyError)
    #[deprecated]
    pub fn detach_principal_policy(&self) -> crate::operation::detach_principal_policy::builders::DetachPrincipalPolicyFluentBuilder {
        crate::operation::detach_principal_policy::builders::DetachPrincipalPolicyFluentBuilder::new(self.handle.clone())
    }
}
