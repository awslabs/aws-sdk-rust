// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateThingGroup`](crate::client::fluent_builders::CreateThingGroup) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`thing_group_name(impl Into<String>)`](crate::client::fluent_builders::CreateThingGroup::thing_group_name) / [`set_thing_group_name(Option<String>)`](crate::client::fluent_builders::CreateThingGroup::set_thing_group_name): <p>The thing group name to create.</p>
    ///   - [`parent_group_name(impl Into<String>)`](crate::client::fluent_builders::CreateThingGroup::parent_group_name) / [`set_parent_group_name(Option<String>)`](crate::client::fluent_builders::CreateThingGroup::set_parent_group_name): <p>The name of the parent thing group.</p>
    ///   - [`thing_group_properties(ThingGroupProperties)`](crate::client::fluent_builders::CreateThingGroup::thing_group_properties) / [`set_thing_group_properties(Option<ThingGroupProperties>)`](crate::client::fluent_builders::CreateThingGroup::set_thing_group_properties): <p>The thing group properties.</p>
    ///   - [`tags(Vec<Tag>)`](crate::client::fluent_builders::CreateThingGroup::tags) / [`set_tags(Option<Vec<Tag>>)`](crate::client::fluent_builders::CreateThingGroup::set_tags): <p>Metadata which can be used to manage the thing group.</p>
    /// - On success, responds with [`CreateThingGroupOutput`](crate::output::CreateThingGroupOutput) with field(s):
    ///   - [`thing_group_name(Option<String>)`](crate::output::CreateThingGroupOutput::thing_group_name): <p>The thing group name.</p>
    ///   - [`thing_group_arn(Option<String>)`](crate::output::CreateThingGroupOutput::thing_group_arn): <p>The thing group ARN.</p>
    ///   - [`thing_group_id(Option<String>)`](crate::output::CreateThingGroupOutput::thing_group_id): <p>The thing group ID.</p>
    /// - On failure, responds with [`SdkError<CreateThingGroupError>`](crate::error::CreateThingGroupError)
    pub fn create_thing_group(&self) -> crate::client::fluent_builders::CreateThingGroup {
        crate::client::fluent_builders::CreateThingGroup::new(self.handle.clone())
    }
}
