// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`RegisterCertificate`](crate::operation::register_certificate::builders::RegisterCertificateFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`certificate_pem(impl Into<String>)`](crate::operation::register_certificate::builders::RegisterCertificateFluentBuilder::certificate_pem) / [`set_certificate_pem(Option<String>)`](crate::operation::register_certificate::builders::RegisterCertificateFluentBuilder::set_certificate_pem): <p>The certificate data, in PEM format.</p>
    ///   - [`ca_certificate_pem(impl Into<String>)`](crate::operation::register_certificate::builders::RegisterCertificateFluentBuilder::ca_certificate_pem) / [`set_ca_certificate_pem(Option<String>)`](crate::operation::register_certificate::builders::RegisterCertificateFluentBuilder::set_ca_certificate_pem): <p>The CA certificate used to sign the device certificate being registered.</p>
    ///   - [`set_as_active(bool)`](crate::operation::register_certificate::builders::RegisterCertificateFluentBuilder::set_as_active) / [`set_set_as_active(Option<bool>)`](crate::operation::register_certificate::builders::RegisterCertificateFluentBuilder::set_set_as_active): <p>A boolean value that specifies if the certificate is set to active.</p>  <p>Valid values: <code>ACTIVE | INACTIVE</code> </p>
    ///   - [`status(CertificateStatus)`](crate::operation::register_certificate::builders::RegisterCertificateFluentBuilder::status) / [`set_status(Option<CertificateStatus>)`](crate::operation::register_certificate::builders::RegisterCertificateFluentBuilder::set_status): <p>The status of the register certificate request. Valid values that you can use include <code>ACTIVE</code>, <code>INACTIVE</code>, and <code>REVOKED</code>.</p>
    /// - On success, responds with [`RegisterCertificateOutput`](crate::operation::register_certificate::RegisterCertificateOutput) with field(s):
    ///   - [`certificate_arn(Option<String>)`](crate::operation::register_certificate::RegisterCertificateOutput::certificate_arn): <p>The certificate ARN.</p>
    ///   - [`certificate_id(Option<String>)`](crate::operation::register_certificate::RegisterCertificateOutput::certificate_id): <p>The certificate identifier.</p>
    /// - On failure, responds with [`SdkError<RegisterCertificateError>`](crate::operation::register_certificate::RegisterCertificateError)
    pub fn register_certificate(
        &self,
    ) -> crate::operation::register_certificate::builders::RegisterCertificateFluentBuilder {
        crate::operation::register_certificate::builders::RegisterCertificateFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
