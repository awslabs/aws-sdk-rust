// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeleteOTAUpdate`](crate::client::fluent_builders::DeleteOTAUpdate) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`ota_update_id(impl Into<String>)`](crate::client::fluent_builders::DeleteOTAUpdate::ota_update_id) / [`set_ota_update_id(Option<String>)`](crate::client::fluent_builders::DeleteOTAUpdate::set_ota_update_id): <p>The ID of the OTA update to delete.</p>
    ///   - [`delete_stream(bool)`](crate::client::fluent_builders::DeleteOTAUpdate::delete_stream) / [`set_delete_stream(bool)`](crate::client::fluent_builders::DeleteOTAUpdate::set_delete_stream): <p>When true, the stream created by the OTAUpdate process is deleted when the OTA update is deleted. Ignored if the stream specified in the OTAUpdate is supplied by the user.</p>
    ///   - [`force_delete_aws_job(bool)`](crate::client::fluent_builders::DeleteOTAUpdate::force_delete_aws_job) / [`set_force_delete_aws_job(bool)`](crate::client::fluent_builders::DeleteOTAUpdate::set_force_delete_aws_job): <p>When true, deletes the IoT job created by the OTAUpdate process even if it is "IN_PROGRESS". Otherwise, if the job is not in a terminal state ("COMPLETED" or "CANCELED") an exception will occur. The default is false.</p>
    /// - On success, responds with [`DeleteOtaUpdateOutput`](crate::output::DeleteOtaUpdateOutput)
    /// - On failure, responds with [`SdkError<DeleteOTAUpdateError>`](crate::error::DeleteOTAUpdateError)
    pub fn delete_ota_update(&self) -> crate::client::fluent_builders::DeleteOTAUpdate {
        crate::client::fluent_builders::DeleteOTAUpdate::new(self.handle.clone())
    }
}
