// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListThingRegistrationTasks`](crate::client::fluent_builders::ListThingRegistrationTasks) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListThingRegistrationTasks::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListThingRegistrationTasks::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListThingRegistrationTasks::set_next_token): <p>To retrieve the next set of results, the <code>nextToken</code> value from a previous response; otherwise <b>null</b> to receive the first set of results.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListThingRegistrationTasks::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListThingRegistrationTasks::set_max_results): <p>The maximum number of results to return at one time.</p>
    ///   - [`status(Status)`](crate::client::fluent_builders::ListThingRegistrationTasks::status) / [`set_status(Option<Status>)`](crate::client::fluent_builders::ListThingRegistrationTasks::set_status): <p>The status of the bulk thing provisioning task.</p>
    /// - On success, responds with [`ListThingRegistrationTasksOutput`](crate::output::ListThingRegistrationTasksOutput) with field(s):
    ///   - [`task_ids(Option<Vec<String>>)`](crate::output::ListThingRegistrationTasksOutput::task_ids): <p>A list of bulk thing provisioning task IDs.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListThingRegistrationTasksOutput::next_token): <p>The token to use to get the next set of results, or <b>null</b> if there are no additional results.</p>
    /// - On failure, responds with [`SdkError<ListThingRegistrationTasksError>`](crate::error::ListThingRegistrationTasksError)
    pub fn list_thing_registration_tasks(
        &self,
    ) -> crate::client::fluent_builders::ListThingRegistrationTasks {
        crate::client::fluent_builders::ListThingRegistrationTasks::new(self.handle.clone())
    }
}
