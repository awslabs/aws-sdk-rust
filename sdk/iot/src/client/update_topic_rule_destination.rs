// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateTopicRuleDestination`](crate::operation::update_topic_rule_destination::builders::UpdateTopicRuleDestinationFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`arn(impl Into<String>)`](crate::operation::update_topic_rule_destination::builders::UpdateTopicRuleDestinationFluentBuilder::arn) / [`set_arn(Option<String>)`](crate::operation::update_topic_rule_destination::builders::UpdateTopicRuleDestinationFluentBuilder::set_arn):<br>required: **true**<br><p>The ARN of the topic rule destination.</p><br>
    ///   - [`status(TopicRuleDestinationStatus)`](crate::operation::update_topic_rule_destination::builders::UpdateTopicRuleDestinationFluentBuilder::status) / [`set_status(Option<TopicRuleDestinationStatus>)`](crate::operation::update_topic_rule_destination::builders::UpdateTopicRuleDestinationFluentBuilder::set_status):<br>required: **true**<br><p>The status of the topic rule destination. Valid values are:</p>  <dl>   <dt>   IN_PROGRESS  </dt>   <dd>    <p>A topic rule destination was created but has not been confirmed. You can set <code>status</code> to <code>IN_PROGRESS</code> by calling <code>UpdateTopicRuleDestination</code>. Calling <code>UpdateTopicRuleDestination</code> causes a new confirmation challenge to be sent to your confirmation endpoint.</p>   </dd>   <dt>   ENABLED  </dt>   <dd>    <p>Confirmation was completed, and traffic to this destination is allowed. You can set <code>status</code> to <code>DISABLED</code> by calling <code>UpdateTopicRuleDestination</code>.</p>   </dd>   <dt>   DISABLED  </dt>   <dd>    <p>Confirmation was completed, and traffic to this destination is not allowed. You can set <code>status</code> to <code>ENABLED</code> by calling <code>UpdateTopicRuleDestination</code>.</p>   </dd>   <dt>   ERROR  </dt>   <dd>    <p>Confirmation could not be completed, for example if the confirmation timed out. You can call <code>GetTopicRuleDestination</code> for details about the error. You can set <code>status</code> to <code>IN_PROGRESS</code> by calling <code>UpdateTopicRuleDestination</code>. Calling <code>UpdateTopicRuleDestination</code> causes a new confirmation challenge to be sent to your confirmation endpoint.</p>   </dd>  </dl><br>
    /// - On success, responds with [`UpdateTopicRuleDestinationOutput`](crate::operation::update_topic_rule_destination::UpdateTopicRuleDestinationOutput)
    /// - On failure, responds with [`SdkError<UpdateTopicRuleDestinationError>`](crate::operation::update_topic_rule_destination::UpdateTopicRuleDestinationError)
    pub fn update_topic_rule_destination(
        &self,
    ) -> crate::operation::update_topic_rule_destination::builders::UpdateTopicRuleDestinationFluentBuilder {
        crate::operation::update_topic_rule_destination::builders::UpdateTopicRuleDestinationFluentBuilder::new(self.handle.clone())
    }
}
