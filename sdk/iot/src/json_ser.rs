// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn serialize_structure_crate_input_add_thing_to_billing_group_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::AddThingToBillingGroupInput,
) {
    if let Some(var_1) = &input.billing_group_arn {
        object.key("billingGroupArn").string(var_1);
    }
    if let Some(var_2) = &input.billing_group_name {
        object.key("billingGroupName").string(var_2);
    }
    if let Some(var_3) = &input.thing_arn {
        object.key("thingArn").string(var_3);
    }
    if let Some(var_4) = &input.thing_name {
        object.key("thingName").string(var_4);
    }
}

pub fn serialize_structure_crate_input_add_thing_to_thing_group_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::AddThingToThingGroupInput,
) {
    if input.override_dynamic_groups {
        object
            .key("overrideDynamicGroups")
            .boolean(input.override_dynamic_groups);
    }
    if let Some(var_5) = &input.thing_arn {
        object.key("thingArn").string(var_5);
    }
    if let Some(var_6) = &input.thing_group_arn {
        object.key("thingGroupArn").string(var_6);
    }
    if let Some(var_7) = &input.thing_group_name {
        object.key("thingGroupName").string(var_7);
    }
    if let Some(var_8) = &input.thing_name {
        object.key("thingName").string(var_8);
    }
}

pub fn serialize_structure_crate_input_associate_targets_with_job_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::AssociateTargetsWithJobInput,
) {
    if let Some(var_9) = &input.comment {
        object.key("comment").string(var_9);
    }
    if let Some(var_10) = &input.targets {
        let mut array_11 = object.key("targets").start_array();
        for item_12 in var_10 {
            {
                array_11.value().string(item_12);
            }
        }
        array_11.finish();
    }
}

pub fn serialize_structure_crate_input_attach_policy_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::AttachPolicyInput,
) {
    if let Some(var_13) = &input.target {
        object.key("target").string(var_13);
    }
}

pub fn serialize_structure_crate_input_cancel_job_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CancelJobInput,
) {
    if let Some(var_14) = &input.comment {
        object.key("comment").string(var_14);
    }
    if let Some(var_15) = &input.reason_code {
        object.key("reasonCode").string(var_15);
    }
}

pub fn serialize_structure_crate_input_cancel_job_execution_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CancelJobExecutionInput,
) {
    if let Some(var_16) = &input.expected_version {
        object.key("expectedVersion").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_16).into()),
        );
    }
    if let Some(var_17) = &input.status_details {
        let mut object_18 = object.key("statusDetails").start_object();
        for (key_19, value_20) in var_17 {
            {
                object_18.key(key_19).string(value_20);
            }
        }
        object_18.finish();
    }
}

pub fn serialize_structure_crate_input_create_audit_suppression_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateAuditSuppressionInput,
) {
    if let Some(var_21) = &input.check_name {
        object.key("checkName").string(var_21);
    }
    if let Some(var_22) = &input.client_request_token {
        object.key("clientRequestToken").string(var_22);
    }
    if let Some(var_23) = &input.description {
        object.key("description").string(var_23);
    }
    if let Some(var_24) = &input.expiration_date {
        object
            .key("expirationDate")
            .instant(var_24, aws_smithy_types::instant::Format::EpochSeconds);
    }
    if let Some(var_25) = &input.resource_identifier {
        let mut object_26 = object.key("resourceIdentifier").start_object();
        crate::json_ser::serialize_structure_crate_model_resource_identifier(
            &mut object_26,
            var_25,
        );
        object_26.finish();
    }
    if let Some(var_27) = &input.suppress_indefinitely {
        object.key("suppressIndefinitely").boolean(*var_27);
    }
}

pub fn serialize_structure_crate_input_create_authorizer_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateAuthorizerInput,
) {
    if let Some(var_28) = &input.authorizer_function_arn {
        object.key("authorizerFunctionArn").string(var_28);
    }
    if let Some(var_29) = &input.signing_disabled {
        object.key("signingDisabled").boolean(*var_29);
    }
    if let Some(var_30) = &input.status {
        object.key("status").string(var_30.as_str());
    }
    if let Some(var_31) = &input.tags {
        let mut array_32 = object.key("tags").start_array();
        for item_33 in var_31 {
            {
                let mut object_34 = array_32.value().start_object();
                crate::json_ser::serialize_structure_crate_model_tag(&mut object_34, item_33);
                object_34.finish();
            }
        }
        array_32.finish();
    }
    if let Some(var_35) = &input.token_key_name {
        object.key("tokenKeyName").string(var_35);
    }
    if let Some(var_36) = &input.token_signing_public_keys {
        let mut object_37 = object.key("tokenSigningPublicKeys").start_object();
        for (key_38, value_39) in var_36 {
            {
                object_37.key(key_38).string(value_39);
            }
        }
        object_37.finish();
    }
}

pub fn serialize_structure_crate_input_create_billing_group_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateBillingGroupInput,
) {
    if let Some(var_40) = &input.billing_group_properties {
        let mut object_41 = object.key("billingGroupProperties").start_object();
        crate::json_ser::serialize_structure_crate_model_billing_group_properties(
            &mut object_41,
            var_40,
        );
        object_41.finish();
    }
    if let Some(var_42) = &input.tags {
        let mut array_43 = object.key("tags").start_array();
        for item_44 in var_42 {
            {
                let mut object_45 = array_43.value().start_object();
                crate::json_ser::serialize_structure_crate_model_tag(&mut object_45, item_44);
                object_45.finish();
            }
        }
        array_43.finish();
    }
}

pub fn serialize_structure_crate_input_create_certificate_from_csr_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateCertificateFromCsrInput,
) {
    if let Some(var_46) = &input.certificate_signing_request {
        object.key("certificateSigningRequest").string(var_46);
    }
}

pub fn serialize_structure_crate_input_create_custom_metric_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateCustomMetricInput,
) {
    if let Some(var_47) = &input.client_request_token {
        object.key("clientRequestToken").string(var_47);
    }
    if let Some(var_48) = &input.display_name {
        object.key("displayName").string(var_48);
    }
    if let Some(var_49) = &input.metric_type {
        object.key("metricType").string(var_49.as_str());
    }
    if let Some(var_50) = &input.tags {
        let mut array_51 = object.key("tags").start_array();
        for item_52 in var_50 {
            {
                let mut object_53 = array_51.value().start_object();
                crate::json_ser::serialize_structure_crate_model_tag(&mut object_53, item_52);
                object_53.finish();
            }
        }
        array_51.finish();
    }
}

pub fn serialize_structure_crate_input_create_dimension_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateDimensionInput,
) {
    if let Some(var_54) = &input.client_request_token {
        object.key("clientRequestToken").string(var_54);
    }
    if let Some(var_55) = &input.string_values {
        let mut array_56 = object.key("stringValues").start_array();
        for item_57 in var_55 {
            {
                array_56.value().string(item_57);
            }
        }
        array_56.finish();
    }
    if let Some(var_58) = &input.tags {
        let mut array_59 = object.key("tags").start_array();
        for item_60 in var_58 {
            {
                let mut object_61 = array_59.value().start_object();
                crate::json_ser::serialize_structure_crate_model_tag(&mut object_61, item_60);
                object_61.finish();
            }
        }
        array_59.finish();
    }
    if let Some(var_62) = &input.r#type {
        object.key("type").string(var_62.as_str());
    }
}

pub fn serialize_structure_crate_input_create_domain_configuration_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateDomainConfigurationInput,
) {
    if let Some(var_63) = &input.authorizer_config {
        let mut object_64 = object.key("authorizerConfig").start_object();
        crate::json_ser::serialize_structure_crate_model_authorizer_config(&mut object_64, var_63);
        object_64.finish();
    }
    if let Some(var_65) = &input.domain_name {
        object.key("domainName").string(var_65);
    }
    if let Some(var_66) = &input.server_certificate_arns {
        let mut array_67 = object.key("serverCertificateArns").start_array();
        for item_68 in var_66 {
            {
                array_67.value().string(item_68);
            }
        }
        array_67.finish();
    }
    if let Some(var_69) = &input.service_type {
        object.key("serviceType").string(var_69.as_str());
    }
    if let Some(var_70) = &input.tags {
        let mut array_71 = object.key("tags").start_array();
        for item_72 in var_70 {
            {
                let mut object_73 = array_71.value().start_object();
                crate::json_ser::serialize_structure_crate_model_tag(&mut object_73, item_72);
                object_73.finish();
            }
        }
        array_71.finish();
    }
    if let Some(var_74) = &input.validation_certificate_arn {
        object.key("validationCertificateArn").string(var_74);
    }
}

pub fn serialize_structure_crate_input_create_dynamic_thing_group_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateDynamicThingGroupInput,
) {
    if let Some(var_75) = &input.index_name {
        object.key("indexName").string(var_75);
    }
    if let Some(var_76) = &input.query_string {
        object.key("queryString").string(var_76);
    }
    if let Some(var_77) = &input.query_version {
        object.key("queryVersion").string(var_77);
    }
    if let Some(var_78) = &input.tags {
        let mut array_79 = object.key("tags").start_array();
        for item_80 in var_78 {
            {
                let mut object_81 = array_79.value().start_object();
                crate::json_ser::serialize_structure_crate_model_tag(&mut object_81, item_80);
                object_81.finish();
            }
        }
        array_79.finish();
    }
    if let Some(var_82) = &input.thing_group_properties {
        let mut object_83 = object.key("thingGroupProperties").start_object();
        crate::json_ser::serialize_structure_crate_model_thing_group_properties(
            &mut object_83,
            var_82,
        );
        object_83.finish();
    }
}

pub fn serialize_structure_crate_input_create_fleet_metric_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateFleetMetricInput,
) {
    if let Some(var_84) = &input.aggregation_field {
        object.key("aggregationField").string(var_84);
    }
    if let Some(var_85) = &input.aggregation_type {
        let mut object_86 = object.key("aggregationType").start_object();
        crate::json_ser::serialize_structure_crate_model_aggregation_type(&mut object_86, var_85);
        object_86.finish();
    }
    if let Some(var_87) = &input.description {
        object.key("description").string(var_87);
    }
    if let Some(var_88) = &input.index_name {
        object.key("indexName").string(var_88);
    }
    if let Some(var_89) = &input.period {
        object.key("period").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_89).into()),
        );
    }
    if let Some(var_90) = &input.query_string {
        object.key("queryString").string(var_90);
    }
    if let Some(var_91) = &input.query_version {
        object.key("queryVersion").string(var_91);
    }
    if let Some(var_92) = &input.tags {
        let mut array_93 = object.key("tags").start_array();
        for item_94 in var_92 {
            {
                let mut object_95 = array_93.value().start_object();
                crate::json_ser::serialize_structure_crate_model_tag(&mut object_95, item_94);
                object_95.finish();
            }
        }
        array_93.finish();
    }
    if let Some(var_96) = &input.unit {
        object.key("unit").string(var_96.as_str());
    }
}

pub fn serialize_structure_crate_input_create_job_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateJobInput,
) {
    if let Some(var_97) = &input.abort_config {
        let mut object_98 = object.key("abortConfig").start_object();
        crate::json_ser::serialize_structure_crate_model_abort_config(&mut object_98, var_97);
        object_98.finish();
    }
    if let Some(var_99) = &input.description {
        object.key("description").string(var_99);
    }
    if let Some(var_100) = &input.document {
        object.key("document").string(var_100);
    }
    if let Some(var_101) = &input.document_source {
        object.key("documentSource").string(var_101);
    }
    if let Some(var_102) = &input.job_executions_rollout_config {
        let mut object_103 = object.key("jobExecutionsRolloutConfig").start_object();
        crate::json_ser::serialize_structure_crate_model_job_executions_rollout_config(
            &mut object_103,
            var_102,
        );
        object_103.finish();
    }
    if let Some(var_104) = &input.job_template_arn {
        object.key("jobTemplateArn").string(var_104);
    }
    if let Some(var_105) = &input.namespace_id {
        object.key("namespaceId").string(var_105);
    }
    if let Some(var_106) = &input.presigned_url_config {
        let mut object_107 = object.key("presignedUrlConfig").start_object();
        crate::json_ser::serialize_structure_crate_model_presigned_url_config(
            &mut object_107,
            var_106,
        );
        object_107.finish();
    }
    if let Some(var_108) = &input.tags {
        let mut array_109 = object.key("tags").start_array();
        for item_110 in var_108 {
            {
                let mut object_111 = array_109.value().start_object();
                crate::json_ser::serialize_structure_crate_model_tag(&mut object_111, item_110);
                object_111.finish();
            }
        }
        array_109.finish();
    }
    if let Some(var_112) = &input.target_selection {
        object.key("targetSelection").string(var_112.as_str());
    }
    if let Some(var_113) = &input.targets {
        let mut array_114 = object.key("targets").start_array();
        for item_115 in var_113 {
            {
                array_114.value().string(item_115);
            }
        }
        array_114.finish();
    }
    if let Some(var_116) = &input.timeout_config {
        let mut object_117 = object.key("timeoutConfig").start_object();
        crate::json_ser::serialize_structure_crate_model_timeout_config(&mut object_117, var_116);
        object_117.finish();
    }
}

pub fn serialize_structure_crate_input_create_job_template_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateJobTemplateInput,
) {
    if let Some(var_118) = &input.abort_config {
        let mut object_119 = object.key("abortConfig").start_object();
        crate::json_ser::serialize_structure_crate_model_abort_config(&mut object_119, var_118);
        object_119.finish();
    }
    if let Some(var_120) = &input.description {
        object.key("description").string(var_120);
    }
    if let Some(var_121) = &input.document {
        object.key("document").string(var_121);
    }
    if let Some(var_122) = &input.document_source {
        object.key("documentSource").string(var_122);
    }
    if let Some(var_123) = &input.job_arn {
        object.key("jobArn").string(var_123);
    }
    if let Some(var_124) = &input.job_executions_rollout_config {
        let mut object_125 = object.key("jobExecutionsRolloutConfig").start_object();
        crate::json_ser::serialize_structure_crate_model_job_executions_rollout_config(
            &mut object_125,
            var_124,
        );
        object_125.finish();
    }
    if let Some(var_126) = &input.presigned_url_config {
        let mut object_127 = object.key("presignedUrlConfig").start_object();
        crate::json_ser::serialize_structure_crate_model_presigned_url_config(
            &mut object_127,
            var_126,
        );
        object_127.finish();
    }
    if let Some(var_128) = &input.tags {
        let mut array_129 = object.key("tags").start_array();
        for item_130 in var_128 {
            {
                let mut object_131 = array_129.value().start_object();
                crate::json_ser::serialize_structure_crate_model_tag(&mut object_131, item_130);
                object_131.finish();
            }
        }
        array_129.finish();
    }
    if let Some(var_132) = &input.timeout_config {
        let mut object_133 = object.key("timeoutConfig").start_object();
        crate::json_ser::serialize_structure_crate_model_timeout_config(&mut object_133, var_132);
        object_133.finish();
    }
}

pub fn serialize_structure_crate_input_create_mitigation_action_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateMitigationActionInput,
) {
    if let Some(var_134) = &input.action_params {
        let mut object_135 = object.key("actionParams").start_object();
        crate::json_ser::serialize_structure_crate_model_mitigation_action_params(
            &mut object_135,
            var_134,
        );
        object_135.finish();
    }
    if let Some(var_136) = &input.role_arn {
        object.key("roleArn").string(var_136);
    }
    if let Some(var_137) = &input.tags {
        let mut array_138 = object.key("tags").start_array();
        for item_139 in var_137 {
            {
                let mut object_140 = array_138.value().start_object();
                crate::json_ser::serialize_structure_crate_model_tag(&mut object_140, item_139);
                object_140.finish();
            }
        }
        array_138.finish();
    }
}

pub fn serialize_structure_crate_input_create_ota_update_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateOtaUpdateInput,
) {
    if let Some(var_141) = &input.additional_parameters {
        let mut object_142 = object.key("additionalParameters").start_object();
        for (key_143, value_144) in var_141 {
            {
                object_142.key(key_143).string(value_144);
            }
        }
        object_142.finish();
    }
    if let Some(var_145) = &input.aws_job_abort_config {
        let mut object_146 = object.key("awsJobAbortConfig").start_object();
        crate::json_ser::serialize_structure_crate_model_aws_job_abort_config(
            &mut object_146,
            var_145,
        );
        object_146.finish();
    }
    if let Some(var_147) = &input.aws_job_executions_rollout_config {
        let mut object_148 = object.key("awsJobExecutionsRolloutConfig").start_object();
        crate::json_ser::serialize_structure_crate_model_aws_job_executions_rollout_config(
            &mut object_148,
            var_147,
        );
        object_148.finish();
    }
    if let Some(var_149) = &input.aws_job_presigned_url_config {
        let mut object_150 = object.key("awsJobPresignedUrlConfig").start_object();
        crate::json_ser::serialize_structure_crate_model_aws_job_presigned_url_config(
            &mut object_150,
            var_149,
        );
        object_150.finish();
    }
    if let Some(var_151) = &input.aws_job_timeout_config {
        let mut object_152 = object.key("awsJobTimeoutConfig").start_object();
        crate::json_ser::serialize_structure_crate_model_aws_job_timeout_config(
            &mut object_152,
            var_151,
        );
        object_152.finish();
    }
    if let Some(var_153) = &input.description {
        object.key("description").string(var_153);
    }
    if let Some(var_154) = &input.files {
        let mut array_155 = object.key("files").start_array();
        for item_156 in var_154 {
            {
                let mut object_157 = array_155.value().start_object();
                crate::json_ser::serialize_structure_crate_model_ota_update_file(
                    &mut object_157,
                    item_156,
                );
                object_157.finish();
            }
        }
        array_155.finish();
    }
    if let Some(var_158) = &input.protocols {
        let mut array_159 = object.key("protocols").start_array();
        for item_160 in var_158 {
            {
                array_159.value().string(item_160.as_str());
            }
        }
        array_159.finish();
    }
    if let Some(var_161) = &input.role_arn {
        object.key("roleArn").string(var_161);
    }
    if let Some(var_162) = &input.tags {
        let mut array_163 = object.key("tags").start_array();
        for item_164 in var_162 {
            {
                let mut object_165 = array_163.value().start_object();
                crate::json_ser::serialize_structure_crate_model_tag(&mut object_165, item_164);
                object_165.finish();
            }
        }
        array_163.finish();
    }
    if let Some(var_166) = &input.target_selection {
        object.key("targetSelection").string(var_166.as_str());
    }
    if let Some(var_167) = &input.targets {
        let mut array_168 = object.key("targets").start_array();
        for item_169 in var_167 {
            {
                array_168.value().string(item_169);
            }
        }
        array_168.finish();
    }
}

pub fn serialize_structure_crate_input_create_policy_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreatePolicyInput,
) {
    if let Some(var_170) = &input.policy_document {
        object.key("policyDocument").string(var_170);
    }
    if let Some(var_171) = &input.tags {
        let mut array_172 = object.key("tags").start_array();
        for item_173 in var_171 {
            {
                let mut object_174 = array_172.value().start_object();
                crate::json_ser::serialize_structure_crate_model_tag(&mut object_174, item_173);
                object_174.finish();
            }
        }
        array_172.finish();
    }
}

pub fn serialize_structure_crate_input_create_policy_version_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreatePolicyVersionInput,
) {
    if let Some(var_175) = &input.policy_document {
        object.key("policyDocument").string(var_175);
    }
}

pub fn serialize_structure_crate_input_create_provisioning_template_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateProvisioningTemplateInput,
) {
    if let Some(var_176) = &input.description {
        object.key("description").string(var_176);
    }
    if input.enabled {
        object.key("enabled").boolean(input.enabled);
    }
    if let Some(var_177) = &input.pre_provisioning_hook {
        let mut object_178 = object.key("preProvisioningHook").start_object();
        crate::json_ser::serialize_structure_crate_model_provisioning_hook(
            &mut object_178,
            var_177,
        );
        object_178.finish();
    }
    if let Some(var_179) = &input.provisioning_role_arn {
        object.key("provisioningRoleArn").string(var_179);
    }
    if let Some(var_180) = &input.tags {
        let mut array_181 = object.key("tags").start_array();
        for item_182 in var_180 {
            {
                let mut object_183 = array_181.value().start_object();
                crate::json_ser::serialize_structure_crate_model_tag(&mut object_183, item_182);
                object_183.finish();
            }
        }
        array_181.finish();
    }
    if let Some(var_184) = &input.template_body {
        object.key("templateBody").string(var_184);
    }
    if let Some(var_185) = &input.template_name {
        object.key("templateName").string(var_185);
    }
}

pub fn serialize_structure_crate_input_create_provisioning_template_version_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateProvisioningTemplateVersionInput,
) {
    if let Some(var_186) = &input.template_body {
        object.key("templateBody").string(var_186);
    }
}

pub fn serialize_structure_crate_input_create_role_alias_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateRoleAliasInput,
) {
    if let Some(var_187) = &input.credential_duration_seconds {
        object.key("credentialDurationSeconds").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_187).into()),
        );
    }
    if let Some(var_188) = &input.role_arn {
        object.key("roleArn").string(var_188);
    }
    if let Some(var_189) = &input.tags {
        let mut array_190 = object.key("tags").start_array();
        for item_191 in var_189 {
            {
                let mut object_192 = array_190.value().start_object();
                crate::json_ser::serialize_structure_crate_model_tag(&mut object_192, item_191);
                object_192.finish();
            }
        }
        array_190.finish();
    }
}

pub fn serialize_structure_crate_input_create_scheduled_audit_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateScheduledAuditInput,
) {
    if let Some(var_193) = &input.day_of_month {
        object.key("dayOfMonth").string(var_193);
    }
    if let Some(var_194) = &input.day_of_week {
        object.key("dayOfWeek").string(var_194.as_str());
    }
    if let Some(var_195) = &input.frequency {
        object.key("frequency").string(var_195.as_str());
    }
    if let Some(var_196) = &input.tags {
        let mut array_197 = object.key("tags").start_array();
        for item_198 in var_196 {
            {
                let mut object_199 = array_197.value().start_object();
                crate::json_ser::serialize_structure_crate_model_tag(&mut object_199, item_198);
                object_199.finish();
            }
        }
        array_197.finish();
    }
    if let Some(var_200) = &input.target_check_names {
        let mut array_201 = object.key("targetCheckNames").start_array();
        for item_202 in var_200 {
            {
                array_201.value().string(item_202);
            }
        }
        array_201.finish();
    }
}

pub fn serialize_structure_crate_input_create_security_profile_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateSecurityProfileInput,
) {
    if let Some(var_203) = &input.additional_metrics_to_retain {
        let mut array_204 = object.key("additionalMetricsToRetain").start_array();
        for item_205 in var_203 {
            {
                array_204.value().string(item_205);
            }
        }
        array_204.finish();
    }
    if let Some(var_206) = &input.additional_metrics_to_retain_v2 {
        let mut array_207 = object.key("additionalMetricsToRetainV2").start_array();
        for item_208 in var_206 {
            {
                let mut object_209 = array_207.value().start_object();
                crate::json_ser::serialize_structure_crate_model_metric_to_retain(
                    &mut object_209,
                    item_208,
                );
                object_209.finish();
            }
        }
        array_207.finish();
    }
    if let Some(var_210) = &input.alert_targets {
        let mut object_211 = object.key("alertTargets").start_object();
        for (key_212, value_213) in var_210 {
            {
                let mut object_214 = object_211.key(key_212.as_str()).start_object();
                crate::json_ser::serialize_structure_crate_model_alert_target(
                    &mut object_214,
                    value_213,
                );
                object_214.finish();
            }
        }
        object_211.finish();
    }
    if let Some(var_215) = &input.behaviors {
        let mut array_216 = object.key("behaviors").start_array();
        for item_217 in var_215 {
            {
                let mut object_218 = array_216.value().start_object();
                crate::json_ser::serialize_structure_crate_model_behavior(
                    &mut object_218,
                    item_217,
                );
                object_218.finish();
            }
        }
        array_216.finish();
    }
    if let Some(var_219) = &input.security_profile_description {
        object.key("securityProfileDescription").string(var_219);
    }
    if let Some(var_220) = &input.tags {
        let mut array_221 = object.key("tags").start_array();
        for item_222 in var_220 {
            {
                let mut object_223 = array_221.value().start_object();
                crate::json_ser::serialize_structure_crate_model_tag(&mut object_223, item_222);
                object_223.finish();
            }
        }
        array_221.finish();
    }
}

pub fn serialize_structure_crate_input_create_stream_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateStreamInput,
) {
    if let Some(var_224) = &input.description {
        object.key("description").string(var_224);
    }
    if let Some(var_225) = &input.files {
        let mut array_226 = object.key("files").start_array();
        for item_227 in var_225 {
            {
                let mut object_228 = array_226.value().start_object();
                crate::json_ser::serialize_structure_crate_model_stream_file(
                    &mut object_228,
                    item_227,
                );
                object_228.finish();
            }
        }
        array_226.finish();
    }
    if let Some(var_229) = &input.role_arn {
        object.key("roleArn").string(var_229);
    }
    if let Some(var_230) = &input.tags {
        let mut array_231 = object.key("tags").start_array();
        for item_232 in var_230 {
            {
                let mut object_233 = array_231.value().start_object();
                crate::json_ser::serialize_structure_crate_model_tag(&mut object_233, item_232);
                object_233.finish();
            }
        }
        array_231.finish();
    }
}

pub fn serialize_structure_crate_input_create_thing_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateThingInput,
) {
    if let Some(var_234) = &input.attribute_payload {
        let mut object_235 = object.key("attributePayload").start_object();
        crate::json_ser::serialize_structure_crate_model_attribute_payload(
            &mut object_235,
            var_234,
        );
        object_235.finish();
    }
    if let Some(var_236) = &input.billing_group_name {
        object.key("billingGroupName").string(var_236);
    }
    if let Some(var_237) = &input.thing_type_name {
        object.key("thingTypeName").string(var_237);
    }
}

pub fn serialize_structure_crate_input_create_thing_group_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateThingGroupInput,
) {
    if let Some(var_238) = &input.parent_group_name {
        object.key("parentGroupName").string(var_238);
    }
    if let Some(var_239) = &input.tags {
        let mut array_240 = object.key("tags").start_array();
        for item_241 in var_239 {
            {
                let mut object_242 = array_240.value().start_object();
                crate::json_ser::serialize_structure_crate_model_tag(&mut object_242, item_241);
                object_242.finish();
            }
        }
        array_240.finish();
    }
    if let Some(var_243) = &input.thing_group_properties {
        let mut object_244 = object.key("thingGroupProperties").start_object();
        crate::json_ser::serialize_structure_crate_model_thing_group_properties(
            &mut object_244,
            var_243,
        );
        object_244.finish();
    }
}

pub fn serialize_structure_crate_input_create_thing_type_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateThingTypeInput,
) {
    if let Some(var_245) = &input.tags {
        let mut array_246 = object.key("tags").start_array();
        for item_247 in var_245 {
            {
                let mut object_248 = array_246.value().start_object();
                crate::json_ser::serialize_structure_crate_model_tag(&mut object_248, item_247);
                object_248.finish();
            }
        }
        array_246.finish();
    }
    if let Some(var_249) = &input.thing_type_properties {
        let mut object_250 = object.key("thingTypeProperties").start_object();
        crate::json_ser::serialize_structure_crate_model_thing_type_properties(
            &mut object_250,
            var_249,
        );
        object_250.finish();
    }
}

pub fn serialize_structure_crate_input_create_topic_rule_destination_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateTopicRuleDestinationInput,
) {
    if let Some(var_251) = &input.destination_configuration {
        let mut object_252 = object.key("destinationConfiguration").start_object();
        crate::json_ser::serialize_structure_crate_model_topic_rule_destination_configuration(
            &mut object_252,
            var_251,
        );
        object_252.finish();
    }
}

pub fn serialize_structure_crate_input_delete_audit_suppression_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DeleteAuditSuppressionInput,
) {
    if let Some(var_253) = &input.check_name {
        object.key("checkName").string(var_253);
    }
    if let Some(var_254) = &input.resource_identifier {
        let mut object_255 = object.key("resourceIdentifier").start_object();
        crate::json_ser::serialize_structure_crate_model_resource_identifier(
            &mut object_255,
            var_254,
        );
        object_255.finish();
    }
}

pub fn serialize_structure_crate_input_deprecate_thing_type_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DeprecateThingTypeInput,
) {
    if input.undo_deprecate {
        object.key("undoDeprecate").boolean(input.undo_deprecate);
    }
}

pub fn serialize_structure_crate_input_describe_audit_suppression_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DescribeAuditSuppressionInput,
) {
    if let Some(var_256) = &input.check_name {
        object.key("checkName").string(var_256);
    }
    if let Some(var_257) = &input.resource_identifier {
        let mut object_258 = object.key("resourceIdentifier").start_object();
        crate::json_ser::serialize_structure_crate_model_resource_identifier(
            &mut object_258,
            var_257,
        );
        object_258.finish();
    }
}

pub fn serialize_structure_crate_input_detach_policy_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DetachPolicyInput,
) {
    if let Some(var_259) = &input.target {
        object.key("target").string(var_259);
    }
}

pub fn serialize_structure_crate_input_get_buckets_aggregation_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::GetBucketsAggregationInput,
) {
    if let Some(var_260) = &input.aggregation_field {
        object.key("aggregationField").string(var_260);
    }
    if let Some(var_261) = &input.buckets_aggregation_type {
        let mut object_262 = object.key("bucketsAggregationType").start_object();
        crate::json_ser::serialize_structure_crate_model_buckets_aggregation_type(
            &mut object_262,
            var_261,
        );
        object_262.finish();
    }
    if let Some(var_263) = &input.index_name {
        object.key("indexName").string(var_263);
    }
    if let Some(var_264) = &input.query_string {
        object.key("queryString").string(var_264);
    }
    if let Some(var_265) = &input.query_version {
        object.key("queryVersion").string(var_265);
    }
}

pub fn serialize_structure_crate_input_get_cardinality_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::GetCardinalityInput,
) {
    if let Some(var_266) = &input.aggregation_field {
        object.key("aggregationField").string(var_266);
    }
    if let Some(var_267) = &input.index_name {
        object.key("indexName").string(var_267);
    }
    if let Some(var_268) = &input.query_string {
        object.key("queryString").string(var_268);
    }
    if let Some(var_269) = &input.query_version {
        object.key("queryVersion").string(var_269);
    }
}

pub fn serialize_structure_crate_input_get_effective_policies_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::GetEffectivePoliciesInput,
) {
    if let Some(var_270) = &input.cognito_identity_pool_id {
        object.key("cognitoIdentityPoolId").string(var_270);
    }
    if let Some(var_271) = &input.principal {
        object.key("principal").string(var_271);
    }
}

pub fn serialize_structure_crate_input_get_percentiles_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::GetPercentilesInput,
) {
    if let Some(var_272) = &input.aggregation_field {
        object.key("aggregationField").string(var_272);
    }
    if let Some(var_273) = &input.index_name {
        object.key("indexName").string(var_273);
    }
    if let Some(var_274) = &input.percents {
        let mut array_275 = object.key("percents").start_array();
        for item_276 in var_274 {
            {
                array_275.value().number(
                    #[allow(clippy::useless_conversion)]
                    aws_smithy_types::Number::Float((*item_276).into()),
                );
            }
        }
        array_275.finish();
    }
    if let Some(var_277) = &input.query_string {
        object.key("queryString").string(var_277);
    }
    if let Some(var_278) = &input.query_version {
        object.key("queryVersion").string(var_278);
    }
}

pub fn serialize_structure_crate_input_get_statistics_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::GetStatisticsInput,
) {
    if let Some(var_279) = &input.aggregation_field {
        object.key("aggregationField").string(var_279);
    }
    if let Some(var_280) = &input.index_name {
        object.key("indexName").string(var_280);
    }
    if let Some(var_281) = &input.query_string {
        object.key("queryString").string(var_281);
    }
    if let Some(var_282) = &input.query_version {
        object.key("queryVersion").string(var_282);
    }
}

pub fn serialize_structure_crate_input_list_audit_findings_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::ListAuditFindingsInput,
) {
    if let Some(var_283) = &input.check_name {
        object.key("checkName").string(var_283);
    }
    if let Some(var_284) = &input.end_time {
        object
            .key("endTime")
            .instant(var_284, aws_smithy_types::instant::Format::EpochSeconds);
    }
    if input.list_suppressed_findings {
        object
            .key("listSuppressedFindings")
            .boolean(input.list_suppressed_findings);
    }
    if let Some(var_285) = &input.max_results {
        object.key("maxResults").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_285).into()),
        );
    }
    if let Some(var_286) = &input.next_token {
        object.key("nextToken").string(var_286);
    }
    if let Some(var_287) = &input.resource_identifier {
        let mut object_288 = object.key("resourceIdentifier").start_object();
        crate::json_ser::serialize_structure_crate_model_resource_identifier(
            &mut object_288,
            var_287,
        );
        object_288.finish();
    }
    if let Some(var_289) = &input.start_time {
        object
            .key("startTime")
            .instant(var_289, aws_smithy_types::instant::Format::EpochSeconds);
    }
    if let Some(var_290) = &input.task_id {
        object.key("taskId").string(var_290);
    }
}

pub fn serialize_structure_crate_input_list_audit_suppressions_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::ListAuditSuppressionsInput,
) {
    if input.ascending_order {
        object.key("ascendingOrder").boolean(input.ascending_order);
    }
    if let Some(var_291) = &input.check_name {
        object.key("checkName").string(var_291);
    }
    if let Some(var_292) = &input.max_results {
        object.key("maxResults").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_292).into()),
        );
    }
    if let Some(var_293) = &input.next_token {
        object.key("nextToken").string(var_293);
    }
    if let Some(var_294) = &input.resource_identifier {
        let mut object_295 = object.key("resourceIdentifier").start_object();
        crate::json_ser::serialize_structure_crate_model_resource_identifier(
            &mut object_295,
            var_294,
        );
        object_295.finish();
    }
}

pub fn serialize_structure_crate_input_put_verification_state_on_violation_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::PutVerificationStateOnViolationInput,
) {
    if let Some(var_296) = &input.verification_state {
        object.key("verificationState").string(var_296.as_str());
    }
    if let Some(var_297) = &input.verification_state_description {
        object.key("verificationStateDescription").string(var_297);
    }
}

pub fn serialize_structure_crate_input_register_ca_certificate_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::RegisterCaCertificateInput,
) {
    if let Some(var_298) = &input.ca_certificate {
        object.key("caCertificate").string(var_298);
    }
    if let Some(var_299) = &input.registration_config {
        let mut object_300 = object.key("registrationConfig").start_object();
        crate::json_ser::serialize_structure_crate_model_registration_config(
            &mut object_300,
            var_299,
        );
        object_300.finish();
    }
    if let Some(var_301) = &input.tags {
        let mut array_302 = object.key("tags").start_array();
        for item_303 in var_301 {
            {
                let mut object_304 = array_302.value().start_object();
                crate::json_ser::serialize_structure_crate_model_tag(&mut object_304, item_303);
                object_304.finish();
            }
        }
        array_302.finish();
    }
    if let Some(var_305) = &input.verification_certificate {
        object.key("verificationCertificate").string(var_305);
    }
}

pub fn serialize_structure_crate_input_register_certificate_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::RegisterCertificateInput,
) {
    if let Some(var_306) = &input.ca_certificate_pem {
        object.key("caCertificatePem").string(var_306);
    }
    if let Some(var_307) = &input.certificate_pem {
        object.key("certificatePem").string(var_307);
    }
    if let Some(var_308) = &input.status {
        object.key("status").string(var_308.as_str());
    }
}

pub fn serialize_structure_crate_input_register_certificate_without_ca_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::RegisterCertificateWithoutCaInput,
) {
    if let Some(var_309) = &input.certificate_pem {
        object.key("certificatePem").string(var_309);
    }
    if let Some(var_310) = &input.status {
        object.key("status").string(var_310.as_str());
    }
}

pub fn serialize_structure_crate_input_register_thing_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::RegisterThingInput,
) {
    if let Some(var_311) = &input.parameters {
        let mut object_312 = object.key("parameters").start_object();
        for (key_313, value_314) in var_311 {
            {
                object_312.key(key_313).string(value_314);
            }
        }
        object_312.finish();
    }
    if let Some(var_315) = &input.template_body {
        object.key("templateBody").string(var_315);
    }
}

pub fn serialize_structure_crate_input_reject_certificate_transfer_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::RejectCertificateTransferInput,
) {
    if let Some(var_316) = &input.reject_reason {
        object.key("rejectReason").string(var_316);
    }
}

pub fn serialize_structure_crate_input_remove_thing_from_billing_group_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::RemoveThingFromBillingGroupInput,
) {
    if let Some(var_317) = &input.billing_group_arn {
        object.key("billingGroupArn").string(var_317);
    }
    if let Some(var_318) = &input.billing_group_name {
        object.key("billingGroupName").string(var_318);
    }
    if let Some(var_319) = &input.thing_arn {
        object.key("thingArn").string(var_319);
    }
    if let Some(var_320) = &input.thing_name {
        object.key("thingName").string(var_320);
    }
}

pub fn serialize_structure_crate_input_remove_thing_from_thing_group_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::RemoveThingFromThingGroupInput,
) {
    if let Some(var_321) = &input.thing_arn {
        object.key("thingArn").string(var_321);
    }
    if let Some(var_322) = &input.thing_group_arn {
        object.key("thingGroupArn").string(var_322);
    }
    if let Some(var_323) = &input.thing_group_name {
        object.key("thingGroupName").string(var_323);
    }
    if let Some(var_324) = &input.thing_name {
        object.key("thingName").string(var_324);
    }
}

pub fn serialize_structure_crate_input_search_index_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::SearchIndexInput,
) {
    if let Some(var_325) = &input.index_name {
        object.key("indexName").string(var_325);
    }
    if let Some(var_326) = &input.max_results {
        object.key("maxResults").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_326).into()),
        );
    }
    if let Some(var_327) = &input.next_token {
        object.key("nextToken").string(var_327);
    }
    if let Some(var_328) = &input.query_string {
        object.key("queryString").string(var_328);
    }
    if let Some(var_329) = &input.query_version {
        object.key("queryVersion").string(var_329);
    }
}

pub fn serialize_structure_crate_input_set_default_authorizer_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::SetDefaultAuthorizerInput,
) {
    if let Some(var_330) = &input.authorizer_name {
        object.key("authorizerName").string(var_330);
    }
}

pub fn serialize_structure_crate_input_set_v2_logging_level_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::SetV2LoggingLevelInput,
) {
    if let Some(var_331) = &input.log_level {
        object.key("logLevel").string(var_331.as_str());
    }
    if let Some(var_332) = &input.log_target {
        let mut object_333 = object.key("logTarget").start_object();
        crate::json_ser::serialize_structure_crate_model_log_target(&mut object_333, var_332);
        object_333.finish();
    }
}

pub fn serialize_structure_crate_input_set_v2_logging_options_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::SetV2LoggingOptionsInput,
) {
    if let Some(var_334) = &input.default_log_level {
        object.key("defaultLogLevel").string(var_334.as_str());
    }
    if input.disable_all_logs {
        object.key("disableAllLogs").boolean(input.disable_all_logs);
    }
    if let Some(var_335) = &input.role_arn {
        object.key("roleArn").string(var_335);
    }
}

pub fn serialize_structure_crate_input_start_audit_mitigation_actions_task_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::StartAuditMitigationActionsTaskInput,
) {
    if let Some(var_336) = &input.audit_check_to_actions_mapping {
        let mut object_337 = object.key("auditCheckToActionsMapping").start_object();
        for (key_338, value_339) in var_336 {
            {
                let mut array_340 = object_337.key(key_338).start_array();
                for item_341 in value_339 {
                    {
                        array_340.value().string(item_341);
                    }
                }
                array_340.finish();
            }
        }
        object_337.finish();
    }
    if let Some(var_342) = &input.client_request_token {
        object.key("clientRequestToken").string(var_342);
    }
    if let Some(var_343) = &input.target {
        let mut object_344 = object.key("target").start_object();
        crate::json_ser::serialize_structure_crate_model_audit_mitigation_actions_task_target(
            &mut object_344,
            var_343,
        );
        object_344.finish();
    }
}

pub fn serialize_structure_crate_input_start_detect_mitigation_actions_task_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::StartDetectMitigationActionsTaskInput,
) {
    if let Some(var_345) = &input.actions {
        let mut array_346 = object.key("actions").start_array();
        for item_347 in var_345 {
            {
                array_346.value().string(item_347);
            }
        }
        array_346.finish();
    }
    if let Some(var_348) = &input.client_request_token {
        object.key("clientRequestToken").string(var_348);
    }
    if let Some(var_349) = &input.include_only_active_violations {
        object.key("includeOnlyActiveViolations").boolean(*var_349);
    }
    if let Some(var_350) = &input.include_suppressed_alerts {
        object.key("includeSuppressedAlerts").boolean(*var_350);
    }
    if let Some(var_351) = &input.target {
        let mut object_352 = object.key("target").start_object();
        crate::json_ser::serialize_structure_crate_model_detect_mitigation_actions_task_target(
            &mut object_352,
            var_351,
        );
        object_352.finish();
    }
    if let Some(var_353) = &input.violation_event_occurrence_range {
        let mut object_354 = object.key("violationEventOccurrenceRange").start_object();
        crate::json_ser::serialize_structure_crate_model_violation_event_occurrence_range(
            &mut object_354,
            var_353,
        );
        object_354.finish();
    }
}

pub fn serialize_structure_crate_input_start_on_demand_audit_task_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::StartOnDemandAuditTaskInput,
) {
    if let Some(var_355) = &input.target_check_names {
        let mut array_356 = object.key("targetCheckNames").start_array();
        for item_357 in var_355 {
            {
                array_356.value().string(item_357);
            }
        }
        array_356.finish();
    }
}

pub fn serialize_structure_crate_input_start_thing_registration_task_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::StartThingRegistrationTaskInput,
) {
    if let Some(var_358) = &input.input_file_bucket {
        object.key("inputFileBucket").string(var_358);
    }
    if let Some(var_359) = &input.input_file_key {
        object.key("inputFileKey").string(var_359);
    }
    if let Some(var_360) = &input.role_arn {
        object.key("roleArn").string(var_360);
    }
    if let Some(var_361) = &input.template_body {
        object.key("templateBody").string(var_361);
    }
}

pub fn serialize_structure_crate_input_tag_resource_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::TagResourceInput,
) {
    if let Some(var_362) = &input.resource_arn {
        object.key("resourceArn").string(var_362);
    }
    if let Some(var_363) = &input.tags {
        let mut array_364 = object.key("tags").start_array();
        for item_365 in var_363 {
            {
                let mut object_366 = array_364.value().start_object();
                crate::json_ser::serialize_structure_crate_model_tag(&mut object_366, item_365);
                object_366.finish();
            }
        }
        array_364.finish();
    }
}

pub fn serialize_structure_crate_input_test_authorization_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::TestAuthorizationInput,
) {
    if let Some(var_367) = &input.auth_infos {
        let mut array_368 = object.key("authInfos").start_array();
        for item_369 in var_367 {
            {
                let mut object_370 = array_368.value().start_object();
                crate::json_ser::serialize_structure_crate_model_auth_info(
                    &mut object_370,
                    item_369,
                );
                object_370.finish();
            }
        }
        array_368.finish();
    }
    if let Some(var_371) = &input.cognito_identity_pool_id {
        object.key("cognitoIdentityPoolId").string(var_371);
    }
    if let Some(var_372) = &input.policy_names_to_add {
        let mut array_373 = object.key("policyNamesToAdd").start_array();
        for item_374 in var_372 {
            {
                array_373.value().string(item_374);
            }
        }
        array_373.finish();
    }
    if let Some(var_375) = &input.policy_names_to_skip {
        let mut array_376 = object.key("policyNamesToSkip").start_array();
        for item_377 in var_375 {
            {
                array_376.value().string(item_377);
            }
        }
        array_376.finish();
    }
    if let Some(var_378) = &input.principal {
        object.key("principal").string(var_378);
    }
}

pub fn serialize_structure_crate_input_test_invoke_authorizer_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::TestInvokeAuthorizerInput,
) {
    if let Some(var_379) = &input.http_context {
        let mut object_380 = object.key("httpContext").start_object();
        crate::json_ser::serialize_structure_crate_model_http_context(&mut object_380, var_379);
        object_380.finish();
    }
    if let Some(var_381) = &input.mqtt_context {
        let mut object_382 = object.key("mqttContext").start_object();
        crate::json_ser::serialize_structure_crate_model_mqtt_context(&mut object_382, var_381);
        object_382.finish();
    }
    if let Some(var_383) = &input.tls_context {
        let mut object_384 = object.key("tlsContext").start_object();
        crate::json_ser::serialize_structure_crate_model_tls_context(&mut object_384, var_383);
        object_384.finish();
    }
    if let Some(var_385) = &input.token {
        object.key("token").string(var_385);
    }
    if let Some(var_386) = &input.token_signature {
        object.key("tokenSignature").string(var_386);
    }
}

pub fn serialize_structure_crate_input_transfer_certificate_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::TransferCertificateInput,
) {
    if let Some(var_387) = &input.transfer_message {
        object.key("transferMessage").string(var_387);
    }
}

pub fn serialize_structure_crate_input_untag_resource_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UntagResourceInput,
) {
    if let Some(var_388) = &input.resource_arn {
        object.key("resourceArn").string(var_388);
    }
    if let Some(var_389) = &input.tag_keys {
        let mut array_390 = object.key("tagKeys").start_array();
        for item_391 in var_389 {
            {
                array_390.value().string(item_391);
            }
        }
        array_390.finish();
    }
}

pub fn serialize_structure_crate_input_update_account_audit_configuration_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateAccountAuditConfigurationInput,
) {
    if let Some(var_392) = &input.audit_check_configurations {
        let mut object_393 = object.key("auditCheckConfigurations").start_object();
        for (key_394, value_395) in var_392 {
            {
                let mut object_396 = object_393.key(key_394).start_object();
                crate::json_ser::serialize_structure_crate_model_audit_check_configuration(
                    &mut object_396,
                    value_395,
                );
                object_396.finish();
            }
        }
        object_393.finish();
    }
    if let Some(var_397) = &input.audit_notification_target_configurations {
        let mut object_398 = object
            .key("auditNotificationTargetConfigurations")
            .start_object();
        for (key_399, value_400) in var_397 {
            {
                let mut object_401 = object_398.key(key_399.as_str()).start_object();
                crate::json_ser::serialize_structure_crate_model_audit_notification_target(
                    &mut object_401,
                    value_400,
                );
                object_401.finish();
            }
        }
        object_398.finish();
    }
    if let Some(var_402) = &input.role_arn {
        object.key("roleArn").string(var_402);
    }
}

pub fn serialize_structure_crate_input_update_audit_suppression_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateAuditSuppressionInput,
) {
    if let Some(var_403) = &input.check_name {
        object.key("checkName").string(var_403);
    }
    if let Some(var_404) = &input.description {
        object.key("description").string(var_404);
    }
    if let Some(var_405) = &input.expiration_date {
        object
            .key("expirationDate")
            .instant(var_405, aws_smithy_types::instant::Format::EpochSeconds);
    }
    if let Some(var_406) = &input.resource_identifier {
        let mut object_407 = object.key("resourceIdentifier").start_object();
        crate::json_ser::serialize_structure_crate_model_resource_identifier(
            &mut object_407,
            var_406,
        );
        object_407.finish();
    }
    if let Some(var_408) = &input.suppress_indefinitely {
        object.key("suppressIndefinitely").boolean(*var_408);
    }
}

pub fn serialize_structure_crate_input_update_authorizer_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateAuthorizerInput,
) {
    if let Some(var_409) = &input.authorizer_function_arn {
        object.key("authorizerFunctionArn").string(var_409);
    }
    if let Some(var_410) = &input.status {
        object.key("status").string(var_410.as_str());
    }
    if let Some(var_411) = &input.token_key_name {
        object.key("tokenKeyName").string(var_411);
    }
    if let Some(var_412) = &input.token_signing_public_keys {
        let mut object_413 = object.key("tokenSigningPublicKeys").start_object();
        for (key_414, value_415) in var_412 {
            {
                object_413.key(key_414).string(value_415);
            }
        }
        object_413.finish();
    }
}

pub fn serialize_structure_crate_input_update_billing_group_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateBillingGroupInput,
) {
    if let Some(var_416) = &input.billing_group_properties {
        let mut object_417 = object.key("billingGroupProperties").start_object();
        crate::json_ser::serialize_structure_crate_model_billing_group_properties(
            &mut object_417,
            var_416,
        );
        object_417.finish();
    }
    if let Some(var_418) = &input.expected_version {
        object.key("expectedVersion").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_418).into()),
        );
    }
}

pub fn serialize_structure_crate_input_update_ca_certificate_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateCaCertificateInput,
) {
    if let Some(var_419) = &input.registration_config {
        let mut object_420 = object.key("registrationConfig").start_object();
        crate::json_ser::serialize_structure_crate_model_registration_config(
            &mut object_420,
            var_419,
        );
        object_420.finish();
    }
    if input.remove_auto_registration {
        object
            .key("removeAutoRegistration")
            .boolean(input.remove_auto_registration);
    }
}

pub fn serialize_structure_crate_input_update_custom_metric_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateCustomMetricInput,
) {
    if let Some(var_421) = &input.display_name {
        object.key("displayName").string(var_421);
    }
}

pub fn serialize_structure_crate_input_update_dimension_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateDimensionInput,
) {
    if let Some(var_422) = &input.string_values {
        let mut array_423 = object.key("stringValues").start_array();
        for item_424 in var_422 {
            {
                array_423.value().string(item_424);
            }
        }
        array_423.finish();
    }
}

pub fn serialize_structure_crate_input_update_domain_configuration_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateDomainConfigurationInput,
) {
    if let Some(var_425) = &input.authorizer_config {
        let mut object_426 = object.key("authorizerConfig").start_object();
        crate::json_ser::serialize_structure_crate_model_authorizer_config(
            &mut object_426,
            var_425,
        );
        object_426.finish();
    }
    if let Some(var_427) = &input.domain_configuration_status {
        object
            .key("domainConfigurationStatus")
            .string(var_427.as_str());
    }
    if input.remove_authorizer_config {
        object
            .key("removeAuthorizerConfig")
            .boolean(input.remove_authorizer_config);
    }
}

pub fn serialize_structure_crate_input_update_dynamic_thing_group_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateDynamicThingGroupInput,
) {
    if let Some(var_428) = &input.expected_version {
        object.key("expectedVersion").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_428).into()),
        );
    }
    if let Some(var_429) = &input.index_name {
        object.key("indexName").string(var_429);
    }
    if let Some(var_430) = &input.query_string {
        object.key("queryString").string(var_430);
    }
    if let Some(var_431) = &input.query_version {
        object.key("queryVersion").string(var_431);
    }
    if let Some(var_432) = &input.thing_group_properties {
        let mut object_433 = object.key("thingGroupProperties").start_object();
        crate::json_ser::serialize_structure_crate_model_thing_group_properties(
            &mut object_433,
            var_432,
        );
        object_433.finish();
    }
}

pub fn serialize_structure_crate_input_update_event_configurations_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateEventConfigurationsInput,
) {
    if let Some(var_434) = &input.event_configurations {
        let mut object_435 = object.key("eventConfigurations").start_object();
        for (key_436, value_437) in var_434 {
            {
                let mut object_438 = object_435.key(key_436.as_str()).start_object();
                crate::json_ser::serialize_structure_crate_model_configuration(
                    &mut object_438,
                    value_437,
                );
                object_438.finish();
            }
        }
        object_435.finish();
    }
}

pub fn serialize_structure_crate_input_update_fleet_metric_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateFleetMetricInput,
) {
    if let Some(var_439) = &input.aggregation_field {
        object.key("aggregationField").string(var_439);
    }
    if let Some(var_440) = &input.aggregation_type {
        let mut object_441 = object.key("aggregationType").start_object();
        crate::json_ser::serialize_structure_crate_model_aggregation_type(&mut object_441, var_440);
        object_441.finish();
    }
    if let Some(var_442) = &input.description {
        object.key("description").string(var_442);
    }
    if let Some(var_443) = &input.expected_version {
        object.key("expectedVersion").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_443).into()),
        );
    }
    if let Some(var_444) = &input.index_name {
        object.key("indexName").string(var_444);
    }
    if let Some(var_445) = &input.period {
        object.key("period").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_445).into()),
        );
    }
    if let Some(var_446) = &input.query_string {
        object.key("queryString").string(var_446);
    }
    if let Some(var_447) = &input.query_version {
        object.key("queryVersion").string(var_447);
    }
    if let Some(var_448) = &input.unit {
        object.key("unit").string(var_448.as_str());
    }
}

pub fn serialize_structure_crate_input_update_indexing_configuration_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateIndexingConfigurationInput,
) {
    if let Some(var_449) = &input.thing_group_indexing_configuration {
        let mut object_450 = object.key("thingGroupIndexingConfiguration").start_object();
        crate::json_ser::serialize_structure_crate_model_thing_group_indexing_configuration(
            &mut object_450,
            var_449,
        );
        object_450.finish();
    }
    if let Some(var_451) = &input.thing_indexing_configuration {
        let mut object_452 = object.key("thingIndexingConfiguration").start_object();
        crate::json_ser::serialize_structure_crate_model_thing_indexing_configuration(
            &mut object_452,
            var_451,
        );
        object_452.finish();
    }
}

pub fn serialize_structure_crate_input_update_job_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateJobInput,
) {
    if let Some(var_453) = &input.abort_config {
        let mut object_454 = object.key("abortConfig").start_object();
        crate::json_ser::serialize_structure_crate_model_abort_config(&mut object_454, var_453);
        object_454.finish();
    }
    if let Some(var_455) = &input.description {
        object.key("description").string(var_455);
    }
    if let Some(var_456) = &input.job_executions_rollout_config {
        let mut object_457 = object.key("jobExecutionsRolloutConfig").start_object();
        crate::json_ser::serialize_structure_crate_model_job_executions_rollout_config(
            &mut object_457,
            var_456,
        );
        object_457.finish();
    }
    if let Some(var_458) = &input.presigned_url_config {
        let mut object_459 = object.key("presignedUrlConfig").start_object();
        crate::json_ser::serialize_structure_crate_model_presigned_url_config(
            &mut object_459,
            var_458,
        );
        object_459.finish();
    }
    if let Some(var_460) = &input.timeout_config {
        let mut object_461 = object.key("timeoutConfig").start_object();
        crate::json_ser::serialize_structure_crate_model_timeout_config(&mut object_461, var_460);
        object_461.finish();
    }
}

pub fn serialize_structure_crate_input_update_mitigation_action_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateMitigationActionInput,
) {
    if let Some(var_462) = &input.action_params {
        let mut object_463 = object.key("actionParams").start_object();
        crate::json_ser::serialize_structure_crate_model_mitigation_action_params(
            &mut object_463,
            var_462,
        );
        object_463.finish();
    }
    if let Some(var_464) = &input.role_arn {
        object.key("roleArn").string(var_464);
    }
}

pub fn serialize_structure_crate_input_update_provisioning_template_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateProvisioningTemplateInput,
) {
    if let Some(var_465) = &input.default_version_id {
        object.key("defaultVersionId").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_465).into()),
        );
    }
    if let Some(var_466) = &input.description {
        object.key("description").string(var_466);
    }
    if input.enabled {
        object.key("enabled").boolean(input.enabled);
    }
    if let Some(var_467) = &input.pre_provisioning_hook {
        let mut object_468 = object.key("preProvisioningHook").start_object();
        crate::json_ser::serialize_structure_crate_model_provisioning_hook(
            &mut object_468,
            var_467,
        );
        object_468.finish();
    }
    if let Some(var_469) = &input.provisioning_role_arn {
        object.key("provisioningRoleArn").string(var_469);
    }
    if let Some(var_470) = &input.remove_pre_provisioning_hook {
        object.key("removePreProvisioningHook").boolean(*var_470);
    }
}

pub fn serialize_structure_crate_input_update_role_alias_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateRoleAliasInput,
) {
    if let Some(var_471) = &input.credential_duration_seconds {
        object.key("credentialDurationSeconds").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_471).into()),
        );
    }
    if let Some(var_472) = &input.role_arn {
        object.key("roleArn").string(var_472);
    }
}

pub fn serialize_structure_crate_input_update_scheduled_audit_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateScheduledAuditInput,
) {
    if let Some(var_473) = &input.day_of_month {
        object.key("dayOfMonth").string(var_473);
    }
    if let Some(var_474) = &input.day_of_week {
        object.key("dayOfWeek").string(var_474.as_str());
    }
    if let Some(var_475) = &input.frequency {
        object.key("frequency").string(var_475.as_str());
    }
    if let Some(var_476) = &input.target_check_names {
        let mut array_477 = object.key("targetCheckNames").start_array();
        for item_478 in var_476 {
            {
                array_477.value().string(item_478);
            }
        }
        array_477.finish();
    }
}

pub fn serialize_structure_crate_input_update_security_profile_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateSecurityProfileInput,
) {
    if let Some(var_479) = &input.additional_metrics_to_retain {
        let mut array_480 = object.key("additionalMetricsToRetain").start_array();
        for item_481 in var_479 {
            {
                array_480.value().string(item_481);
            }
        }
        array_480.finish();
    }
    if let Some(var_482) = &input.additional_metrics_to_retain_v2 {
        let mut array_483 = object.key("additionalMetricsToRetainV2").start_array();
        for item_484 in var_482 {
            {
                let mut object_485 = array_483.value().start_object();
                crate::json_ser::serialize_structure_crate_model_metric_to_retain(
                    &mut object_485,
                    item_484,
                );
                object_485.finish();
            }
        }
        array_483.finish();
    }
    if let Some(var_486) = &input.alert_targets {
        let mut object_487 = object.key("alertTargets").start_object();
        for (key_488, value_489) in var_486 {
            {
                let mut object_490 = object_487.key(key_488.as_str()).start_object();
                crate::json_ser::serialize_structure_crate_model_alert_target(
                    &mut object_490,
                    value_489,
                );
                object_490.finish();
            }
        }
        object_487.finish();
    }
    if let Some(var_491) = &input.behaviors {
        let mut array_492 = object.key("behaviors").start_array();
        for item_493 in var_491 {
            {
                let mut object_494 = array_492.value().start_object();
                crate::json_ser::serialize_structure_crate_model_behavior(
                    &mut object_494,
                    item_493,
                );
                object_494.finish();
            }
        }
        array_492.finish();
    }
    if input.delete_additional_metrics_to_retain {
        object
            .key("deleteAdditionalMetricsToRetain")
            .boolean(input.delete_additional_metrics_to_retain);
    }
    if input.delete_alert_targets {
        object
            .key("deleteAlertTargets")
            .boolean(input.delete_alert_targets);
    }
    if input.delete_behaviors {
        object
            .key("deleteBehaviors")
            .boolean(input.delete_behaviors);
    }
    if let Some(var_495) = &input.security_profile_description {
        object.key("securityProfileDescription").string(var_495);
    }
}

pub fn serialize_structure_crate_input_update_stream_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateStreamInput,
) {
    if let Some(var_496) = &input.description {
        object.key("description").string(var_496);
    }
    if let Some(var_497) = &input.files {
        let mut array_498 = object.key("files").start_array();
        for item_499 in var_497 {
            {
                let mut object_500 = array_498.value().start_object();
                crate::json_ser::serialize_structure_crate_model_stream_file(
                    &mut object_500,
                    item_499,
                );
                object_500.finish();
            }
        }
        array_498.finish();
    }
    if let Some(var_501) = &input.role_arn {
        object.key("roleArn").string(var_501);
    }
}

pub fn serialize_structure_crate_input_update_thing_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateThingInput,
) {
    if let Some(var_502) = &input.attribute_payload {
        let mut object_503 = object.key("attributePayload").start_object();
        crate::json_ser::serialize_structure_crate_model_attribute_payload(
            &mut object_503,
            var_502,
        );
        object_503.finish();
    }
    if let Some(var_504) = &input.expected_version {
        object.key("expectedVersion").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_504).into()),
        );
    }
    if input.remove_thing_type {
        object
            .key("removeThingType")
            .boolean(input.remove_thing_type);
    }
    if let Some(var_505) = &input.thing_type_name {
        object.key("thingTypeName").string(var_505);
    }
}

pub fn serialize_structure_crate_input_update_thing_group_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateThingGroupInput,
) {
    if let Some(var_506) = &input.expected_version {
        object.key("expectedVersion").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_506).into()),
        );
    }
    if let Some(var_507) = &input.thing_group_properties {
        let mut object_508 = object.key("thingGroupProperties").start_object();
        crate::json_ser::serialize_structure_crate_model_thing_group_properties(
            &mut object_508,
            var_507,
        );
        object_508.finish();
    }
}

pub fn serialize_structure_crate_input_update_thing_groups_for_thing_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateThingGroupsForThingInput,
) {
    if input.override_dynamic_groups {
        object
            .key("overrideDynamicGroups")
            .boolean(input.override_dynamic_groups);
    }
    if let Some(var_509) = &input.thing_groups_to_add {
        let mut array_510 = object.key("thingGroupsToAdd").start_array();
        for item_511 in var_509 {
            {
                array_510.value().string(item_511);
            }
        }
        array_510.finish();
    }
    if let Some(var_512) = &input.thing_groups_to_remove {
        let mut array_513 = object.key("thingGroupsToRemove").start_array();
        for item_514 in var_512 {
            {
                array_513.value().string(item_514);
            }
        }
        array_513.finish();
    }
    if let Some(var_515) = &input.thing_name {
        object.key("thingName").string(var_515);
    }
}

pub fn serialize_structure_crate_input_update_topic_rule_destination_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateTopicRuleDestinationInput,
) {
    if let Some(var_516) = &input.arn {
        object.key("arn").string(var_516);
    }
    if let Some(var_517) = &input.status {
        object.key("status").string(var_517.as_str());
    }
}

pub fn serialize_structure_crate_input_validate_security_profile_behaviors_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::ValidateSecurityProfileBehaviorsInput,
) {
    if let Some(var_518) = &input.behaviors {
        let mut array_519 = object.key("behaviors").start_array();
        for item_520 in var_518 {
            {
                let mut object_521 = array_519.value().start_object();
                crate::json_ser::serialize_structure_crate_model_behavior(
                    &mut object_521,
                    item_520,
                );
                object_521.finish();
            }
        }
        array_519.finish();
    }
}

pub fn serialize_structure_crate_model_resource_identifier(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::ResourceIdentifier,
) {
    if let Some(var_522) = &input.device_certificate_id {
        object.key("deviceCertificateId").string(var_522);
    }
    if let Some(var_523) = &input.ca_certificate_id {
        object.key("caCertificateId").string(var_523);
    }
    if let Some(var_524) = &input.cognito_identity_pool_id {
        object.key("cognitoIdentityPoolId").string(var_524);
    }
    if let Some(var_525) = &input.client_id {
        object.key("clientId").string(var_525);
    }
    if let Some(var_526) = &input.policy_version_identifier {
        let mut object_527 = object.key("policyVersionIdentifier").start_object();
        crate::json_ser::serialize_structure_crate_model_policy_version_identifier(
            &mut object_527,
            var_526,
        );
        object_527.finish();
    }
    if let Some(var_528) = &input.account {
        object.key("account").string(var_528);
    }
    if let Some(var_529) = &input.iam_role_arn {
        object.key("iamRoleArn").string(var_529);
    }
    if let Some(var_530) = &input.role_alias_arn {
        object.key("roleAliasArn").string(var_530);
    }
}

pub fn serialize_structure_crate_model_tag(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::Tag,
) {
    if let Some(var_531) = &input.key {
        object.key("Key").string(var_531);
    }
    if let Some(var_532) = &input.value {
        object.key("Value").string(var_532);
    }
}

pub fn serialize_structure_crate_model_billing_group_properties(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::BillingGroupProperties,
) {
    if let Some(var_533) = &input.billing_group_description {
        object.key("billingGroupDescription").string(var_533);
    }
}

pub fn serialize_structure_crate_model_authorizer_config(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::AuthorizerConfig,
) {
    if let Some(var_534) = &input.default_authorizer_name {
        object.key("defaultAuthorizerName").string(var_534);
    }
    if let Some(var_535) = &input.allow_authorizer_override {
        object.key("allowAuthorizerOverride").boolean(*var_535);
    }
}

pub fn serialize_structure_crate_model_thing_group_properties(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::ThingGroupProperties,
) {
    if let Some(var_536) = &input.thing_group_description {
        object.key("thingGroupDescription").string(var_536);
    }
    if let Some(var_537) = &input.attribute_payload {
        let mut object_538 = object.key("attributePayload").start_object();
        crate::json_ser::serialize_structure_crate_model_attribute_payload(
            &mut object_538,
            var_537,
        );
        object_538.finish();
    }
}

pub fn serialize_structure_crate_model_aggregation_type(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::AggregationType,
) {
    if let Some(var_539) = &input.name {
        object.key("name").string(var_539.as_str());
    }
    if let Some(var_540) = &input.values {
        let mut array_541 = object.key("values").start_array();
        for item_542 in var_540 {
            {
                array_541.value().string(item_542);
            }
        }
        array_541.finish();
    }
}

pub fn serialize_structure_crate_model_abort_config(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::AbortConfig,
) {
    if let Some(var_543) = &input.criteria_list {
        let mut array_544 = object.key("criteriaList").start_array();
        for item_545 in var_543 {
            {
                let mut object_546 = array_544.value().start_object();
                crate::json_ser::serialize_structure_crate_model_abort_criteria(
                    &mut object_546,
                    item_545,
                );
                object_546.finish();
            }
        }
        array_544.finish();
    }
}

pub fn serialize_structure_crate_model_job_executions_rollout_config(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::JobExecutionsRolloutConfig,
) {
    if let Some(var_547) = &input.maximum_per_minute {
        object.key("maximumPerMinute").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_547).into()),
        );
    }
    if let Some(var_548) = &input.exponential_rate {
        let mut object_549 = object.key("exponentialRate").start_object();
        crate::json_ser::serialize_structure_crate_model_exponential_rollout_rate(
            &mut object_549,
            var_548,
        );
        object_549.finish();
    }
}

pub fn serialize_structure_crate_model_presigned_url_config(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::PresignedUrlConfig,
) {
    if let Some(var_550) = &input.role_arn {
        object.key("roleArn").string(var_550);
    }
    if let Some(var_551) = &input.expires_in_sec {
        object.key("expiresInSec").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_551).into()),
        );
    }
}

pub fn serialize_structure_crate_model_timeout_config(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::TimeoutConfig,
) {
    if let Some(var_552) = &input.in_progress_timeout_in_minutes {
        object.key("inProgressTimeoutInMinutes").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_552).into()),
        );
    }
}

pub fn serialize_structure_crate_model_mitigation_action_params(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::MitigationActionParams,
) {
    if let Some(var_553) = &input.update_device_certificate_params {
        let mut object_554 = object.key("updateDeviceCertificateParams").start_object();
        crate::json_ser::serialize_structure_crate_model_update_device_certificate_params(
            &mut object_554,
            var_553,
        );
        object_554.finish();
    }
    if let Some(var_555) = &input.update_ca_certificate_params {
        let mut object_556 = object.key("updateCACertificateParams").start_object();
        crate::json_ser::serialize_structure_crate_model_update_ca_certificate_params(
            &mut object_556,
            var_555,
        );
        object_556.finish();
    }
    if let Some(var_557) = &input.add_things_to_thing_group_params {
        let mut object_558 = object.key("addThingsToThingGroupParams").start_object();
        crate::json_ser::serialize_structure_crate_model_add_things_to_thing_group_params(
            &mut object_558,
            var_557,
        );
        object_558.finish();
    }
    if let Some(var_559) = &input.replace_default_policy_version_params {
        let mut object_560 = object
            .key("replaceDefaultPolicyVersionParams")
            .start_object();
        crate::json_ser::serialize_structure_crate_model_replace_default_policy_version_params(
            &mut object_560,
            var_559,
        );
        object_560.finish();
    }
    if let Some(var_561) = &input.enable_io_t_logging_params {
        let mut object_562 = object.key("enableIoTLoggingParams").start_object();
        crate::json_ser::serialize_structure_crate_model_enable_io_t_logging_params(
            &mut object_562,
            var_561,
        );
        object_562.finish();
    }
    if let Some(var_563) = &input.publish_finding_to_sns_params {
        let mut object_564 = object.key("publishFindingToSnsParams").start_object();
        crate::json_ser::serialize_structure_crate_model_publish_finding_to_sns_params(
            &mut object_564,
            var_563,
        );
        object_564.finish();
    }
}

pub fn serialize_structure_crate_model_aws_job_abort_config(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::AwsJobAbortConfig,
) {
    if let Some(var_565) = &input.abort_criteria_list {
        let mut array_566 = object.key("abortCriteriaList").start_array();
        for item_567 in var_565 {
            {
                let mut object_568 = array_566.value().start_object();
                crate::json_ser::serialize_structure_crate_model_aws_job_abort_criteria(
                    &mut object_568,
                    item_567,
                );
                object_568.finish();
            }
        }
        array_566.finish();
    }
}

pub fn serialize_structure_crate_model_aws_job_executions_rollout_config(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::AwsJobExecutionsRolloutConfig,
) {
    if let Some(var_569) = &input.maximum_per_minute {
        object.key("maximumPerMinute").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_569).into()),
        );
    }
    if let Some(var_570) = &input.exponential_rate {
        let mut object_571 = object.key("exponentialRate").start_object();
        crate::json_ser::serialize_structure_crate_model_aws_job_exponential_rollout_rate(
            &mut object_571,
            var_570,
        );
        object_571.finish();
    }
}

pub fn serialize_structure_crate_model_aws_job_presigned_url_config(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::AwsJobPresignedUrlConfig,
) {
    if let Some(var_572) = &input.expires_in_sec {
        object.key("expiresInSec").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_572).into()),
        );
    }
}

pub fn serialize_structure_crate_model_aws_job_timeout_config(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::AwsJobTimeoutConfig,
) {
    if let Some(var_573) = &input.in_progress_timeout_in_minutes {
        object.key("inProgressTimeoutInMinutes").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_573).into()),
        );
    }
}

pub fn serialize_structure_crate_model_ota_update_file(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::OtaUpdateFile,
) {
    if let Some(var_574) = &input.file_name {
        object.key("fileName").string(var_574);
    }
    if let Some(var_575) = &input.file_type {
        object.key("fileType").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_575).into()),
        );
    }
    if let Some(var_576) = &input.file_version {
        object.key("fileVersion").string(var_576);
    }
    if let Some(var_577) = &input.file_location {
        let mut object_578 = object.key("fileLocation").start_object();
        crate::json_ser::serialize_structure_crate_model_file_location(&mut object_578, var_577);
        object_578.finish();
    }
    if let Some(var_579) = &input.code_signing {
        let mut object_580 = object.key("codeSigning").start_object();
        crate::json_ser::serialize_structure_crate_model_code_signing(&mut object_580, var_579);
        object_580.finish();
    }
    if let Some(var_581) = &input.attributes {
        let mut object_582 = object.key("attributes").start_object();
        for (key_583, value_584) in var_581 {
            {
                object_582.key(key_583).string(value_584);
            }
        }
        object_582.finish();
    }
}

pub fn serialize_structure_crate_model_provisioning_hook(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::ProvisioningHook,
) {
    if let Some(var_585) = &input.payload_version {
        object.key("payloadVersion").string(var_585);
    }
    if let Some(var_586) = &input.target_arn {
        object.key("targetArn").string(var_586);
    }
}

pub fn serialize_structure_crate_model_metric_to_retain(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::MetricToRetain,
) {
    if let Some(var_587) = &input.metric {
        object.key("metric").string(var_587);
    }
    if let Some(var_588) = &input.metric_dimension {
        let mut object_589 = object.key("metricDimension").start_object();
        crate::json_ser::serialize_structure_crate_model_metric_dimension(&mut object_589, var_588);
        object_589.finish();
    }
}

pub fn serialize_structure_crate_model_alert_target(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::AlertTarget,
) {
    if let Some(var_590) = &input.alert_target_arn {
        object.key("alertTargetArn").string(var_590);
    }
    if let Some(var_591) = &input.role_arn {
        object.key("roleArn").string(var_591);
    }
}

pub fn serialize_structure_crate_model_behavior(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::Behavior,
) {
    if let Some(var_592) = &input.name {
        object.key("name").string(var_592);
    }
    if let Some(var_593) = &input.metric {
        object.key("metric").string(var_593);
    }
    if let Some(var_594) = &input.metric_dimension {
        let mut object_595 = object.key("metricDimension").start_object();
        crate::json_ser::serialize_structure_crate_model_metric_dimension(&mut object_595, var_594);
        object_595.finish();
    }
    if let Some(var_596) = &input.criteria {
        let mut object_597 = object.key("criteria").start_object();
        crate::json_ser::serialize_structure_crate_model_behavior_criteria(
            &mut object_597,
            var_596,
        );
        object_597.finish();
    }
    if let Some(var_598) = &input.suppress_alerts {
        object.key("suppressAlerts").boolean(*var_598);
    }
}

pub fn serialize_structure_crate_model_stream_file(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::StreamFile,
) {
    if let Some(var_599) = &input.file_id {
        object.key("fileId").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_599).into()),
        );
    }
    if let Some(var_600) = &input.s3_location {
        let mut object_601 = object.key("s3Location").start_object();
        crate::json_ser::serialize_structure_crate_model_s3_location(&mut object_601, var_600);
        object_601.finish();
    }
}

pub fn serialize_structure_crate_model_attribute_payload(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::AttributePayload,
) {
    if let Some(var_602) = &input.attributes {
        let mut object_603 = object.key("attributes").start_object();
        for (key_604, value_605) in var_602 {
            {
                object_603.key(key_604).string(value_605);
            }
        }
        object_603.finish();
    }
    if input.merge {
        object.key("merge").boolean(input.merge);
    }
}

pub fn serialize_structure_crate_model_thing_type_properties(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::ThingTypeProperties,
) {
    if let Some(var_606) = &input.thing_type_description {
        object.key("thingTypeDescription").string(var_606);
    }
    if let Some(var_607) = &input.searchable_attributes {
        let mut array_608 = object.key("searchableAttributes").start_array();
        for item_609 in var_607 {
            {
                array_608.value().string(item_609);
            }
        }
        array_608.finish();
    }
}

pub fn serialize_structure_crate_model_topic_rule_destination_configuration(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::TopicRuleDestinationConfiguration,
) {
    if let Some(var_610) = &input.http_url_configuration {
        let mut object_611 = object.key("httpUrlConfiguration").start_object();
        crate::json_ser::serialize_structure_crate_model_http_url_destination_configuration(
            &mut object_611,
            var_610,
        );
        object_611.finish();
    }
    if let Some(var_612) = &input.vpc_configuration {
        let mut object_613 = object.key("vpcConfiguration").start_object();
        crate::json_ser::serialize_structure_crate_model_vpc_destination_configuration(
            &mut object_613,
            var_612,
        );
        object_613.finish();
    }
}

pub fn serialize_structure_crate_model_buckets_aggregation_type(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::BucketsAggregationType,
) {
    if let Some(var_614) = &input.terms_aggregation {
        let mut object_615 = object.key("termsAggregation").start_object();
        crate::json_ser::serialize_structure_crate_model_terms_aggregation(
            &mut object_615,
            var_614,
        );
        object_615.finish();
    }
}

pub fn serialize_structure_crate_model_registration_config(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::RegistrationConfig,
) {
    if let Some(var_616) = &input.template_body {
        object.key("templateBody").string(var_616);
    }
    if let Some(var_617) = &input.role_arn {
        object.key("roleArn").string(var_617);
    }
}

pub fn serialize_structure_crate_model_log_target(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::LogTarget,
) {
    if let Some(var_618) = &input.target_type {
        object.key("targetType").string(var_618.as_str());
    }
    if let Some(var_619) = &input.target_name {
        object.key("targetName").string(var_619);
    }
}

pub fn serialize_structure_crate_model_audit_mitigation_actions_task_target(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::AuditMitigationActionsTaskTarget,
) {
    if let Some(var_620) = &input.audit_task_id {
        object.key("auditTaskId").string(var_620);
    }
    if let Some(var_621) = &input.finding_ids {
        let mut array_622 = object.key("findingIds").start_array();
        for item_623 in var_621 {
            {
                array_622.value().string(item_623);
            }
        }
        array_622.finish();
    }
    if let Some(var_624) = &input.audit_check_to_reason_code_filter {
        let mut object_625 = object.key("auditCheckToReasonCodeFilter").start_object();
        for (key_626, value_627) in var_624 {
            {
                let mut array_628 = object_625.key(key_626).start_array();
                for item_629 in value_627 {
                    {
                        array_628.value().string(item_629);
                    }
                }
                array_628.finish();
            }
        }
        object_625.finish();
    }
}

pub fn serialize_structure_crate_model_detect_mitigation_actions_task_target(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::DetectMitigationActionsTaskTarget,
) {
    if let Some(var_630) = &input.violation_ids {
        let mut array_631 = object.key("violationIds").start_array();
        for item_632 in var_630 {
            {
                array_631.value().string(item_632);
            }
        }
        array_631.finish();
    }
    if let Some(var_633) = &input.security_profile_name {
        object.key("securityProfileName").string(var_633);
    }
    if let Some(var_634) = &input.behavior_name {
        object.key("behaviorName").string(var_634);
    }
}

pub fn serialize_structure_crate_model_violation_event_occurrence_range(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::ViolationEventOccurrenceRange,
) {
    if let Some(var_635) = &input.start_time {
        object
            .key("startTime")
            .instant(var_635, aws_smithy_types::instant::Format::EpochSeconds);
    }
    if let Some(var_636) = &input.end_time {
        object
            .key("endTime")
            .instant(var_636, aws_smithy_types::instant::Format::EpochSeconds);
    }
}

pub fn serialize_structure_crate_model_auth_info(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::AuthInfo,
) {
    if let Some(var_637) = &input.action_type {
        object.key("actionType").string(var_637.as_str());
    }
    if let Some(var_638) = &input.resources {
        let mut array_639 = object.key("resources").start_array();
        for item_640 in var_638 {
            {
                array_639.value().string(item_640);
            }
        }
        array_639.finish();
    }
}

pub fn serialize_structure_crate_model_http_context(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::HttpContext,
) {
    if let Some(var_641) = &input.headers {
        let mut object_642 = object.key("headers").start_object();
        for (key_643, value_644) in var_641 {
            {
                object_642.key(key_643).string(value_644);
            }
        }
        object_642.finish();
    }
    if let Some(var_645) = &input.query_string {
        object.key("queryString").string(var_645);
    }
}

pub fn serialize_structure_crate_model_mqtt_context(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::MqttContext,
) {
    if let Some(var_646) = &input.username {
        object.key("username").string(var_646);
    }
    if let Some(var_647) = &input.password {
        object
            .key("password")
            .string_unchecked(&aws_smithy_types::base64::encode(var_647));
    }
    if let Some(var_648) = &input.client_id {
        object.key("clientId").string(var_648);
    }
}

pub fn serialize_structure_crate_model_tls_context(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::TlsContext,
) {
    if let Some(var_649) = &input.server_name {
        object.key("serverName").string(var_649);
    }
}

pub fn serialize_structure_crate_model_audit_check_configuration(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::AuditCheckConfiguration,
) {
    if input.enabled {
        object.key("enabled").boolean(input.enabled);
    }
}

pub fn serialize_structure_crate_model_audit_notification_target(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::AuditNotificationTarget,
) {
    if let Some(var_650) = &input.target_arn {
        object.key("targetArn").string(var_650);
    }
    if let Some(var_651) = &input.role_arn {
        object.key("roleArn").string(var_651);
    }
    if input.enabled {
        object.key("enabled").boolean(input.enabled);
    }
}

pub fn serialize_structure_crate_model_configuration(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::Configuration,
) {
    if input.enabled {
        object.key("Enabled").boolean(input.enabled);
    }
}

pub fn serialize_structure_crate_model_thing_group_indexing_configuration(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::ThingGroupIndexingConfiguration,
) {
    if let Some(var_652) = &input.thing_group_indexing_mode {
        object
            .key("thingGroupIndexingMode")
            .string(var_652.as_str());
    }
    if let Some(var_653) = &input.managed_fields {
        let mut array_654 = object.key("managedFields").start_array();
        for item_655 in var_653 {
            {
                let mut object_656 = array_654.value().start_object();
                crate::json_ser::serialize_structure_crate_model_field(&mut object_656, item_655);
                object_656.finish();
            }
        }
        array_654.finish();
    }
    if let Some(var_657) = &input.custom_fields {
        let mut array_658 = object.key("customFields").start_array();
        for item_659 in var_657 {
            {
                let mut object_660 = array_658.value().start_object();
                crate::json_ser::serialize_structure_crate_model_field(&mut object_660, item_659);
                object_660.finish();
            }
        }
        array_658.finish();
    }
}

pub fn serialize_structure_crate_model_thing_indexing_configuration(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::ThingIndexingConfiguration,
) {
    if let Some(var_661) = &input.thing_indexing_mode {
        object.key("thingIndexingMode").string(var_661.as_str());
    }
    if let Some(var_662) = &input.thing_connectivity_indexing_mode {
        object
            .key("thingConnectivityIndexingMode")
            .string(var_662.as_str());
    }
    if let Some(var_663) = &input.managed_fields {
        let mut array_664 = object.key("managedFields").start_array();
        for item_665 in var_663 {
            {
                let mut object_666 = array_664.value().start_object();
                crate::json_ser::serialize_structure_crate_model_field(&mut object_666, item_665);
                object_666.finish();
            }
        }
        array_664.finish();
    }
    if let Some(var_667) = &input.custom_fields {
        let mut array_668 = object.key("customFields").start_array();
        for item_669 in var_667 {
            {
                let mut object_670 = array_668.value().start_object();
                crate::json_ser::serialize_structure_crate_model_field(&mut object_670, item_669);
                object_670.finish();
            }
        }
        array_668.finish();
    }
}

pub fn serialize_structure_crate_model_topic_rule_payload(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::TopicRulePayload,
) {
    if let Some(var_671) = &input.sql {
        object.key("sql").string(var_671);
    }
    if let Some(var_672) = &input.description {
        object.key("description").string(var_672);
    }
    if let Some(var_673) = &input.actions {
        let mut array_674 = object.key("actions").start_array();
        for item_675 in var_673 {
            {
                let mut object_676 = array_674.value().start_object();
                crate::json_ser::serialize_structure_crate_model_action(&mut object_676, item_675);
                object_676.finish();
            }
        }
        array_674.finish();
    }
    if let Some(var_677) = &input.rule_disabled {
        object.key("ruleDisabled").boolean(*var_677);
    }
    if let Some(var_678) = &input.aws_iot_sql_version {
        object.key("awsIotSqlVersion").string(var_678);
    }
    if let Some(var_679) = &input.error_action {
        let mut object_680 = object.key("errorAction").start_object();
        crate::json_ser::serialize_structure_crate_model_action(&mut object_680, var_679);
        object_680.finish();
    }
}

pub fn serialize_structure_crate_model_logging_options_payload(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::LoggingOptionsPayload,
) {
    if let Some(var_681) = &input.role_arn {
        object.key("roleArn").string(var_681);
    }
    if let Some(var_682) = &input.log_level {
        object.key("logLevel").string(var_682.as_str());
    }
}

pub fn serialize_structure_crate_model_policy_version_identifier(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::PolicyVersionIdentifier,
) {
    if let Some(var_683) = &input.policy_name {
        object.key("policyName").string(var_683);
    }
    if let Some(var_684) = &input.policy_version_id {
        object.key("policyVersionId").string(var_684);
    }
}

pub fn serialize_structure_crate_model_abort_criteria(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::AbortCriteria,
) {
    if let Some(var_685) = &input.failure_type {
        object.key("failureType").string(var_685.as_str());
    }
    if let Some(var_686) = &input.action {
        object.key("action").string(var_686.as_str());
    }
    if let Some(var_687) = &input.threshold_percentage {
        object.key("thresholdPercentage").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::Float((*var_687).into()),
        );
    }
    if let Some(var_688) = &input.min_number_of_executed_things {
        object.key("minNumberOfExecutedThings").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_688).into()),
        );
    }
}

pub fn serialize_structure_crate_model_exponential_rollout_rate(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::ExponentialRolloutRate,
) {
    if let Some(var_689) = &input.base_rate_per_minute {
        object.key("baseRatePerMinute").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_689).into()),
        );
    }
    {
        object.key("incrementFactor").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::Float((input.increment_factor).into()),
        );
    }
    if let Some(var_690) = &input.rate_increase_criteria {
        let mut object_691 = object.key("rateIncreaseCriteria").start_object();
        crate::json_ser::serialize_structure_crate_model_rate_increase_criteria(
            &mut object_691,
            var_690,
        );
        object_691.finish();
    }
}

pub fn serialize_structure_crate_model_update_device_certificate_params(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::UpdateDeviceCertificateParams,
) {
    if let Some(var_692) = &input.action {
        object.key("action").string(var_692.as_str());
    }
}

pub fn serialize_structure_crate_model_update_ca_certificate_params(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::UpdateCaCertificateParams,
) {
    if let Some(var_693) = &input.action {
        object.key("action").string(var_693.as_str());
    }
}

pub fn serialize_structure_crate_model_add_things_to_thing_group_params(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::AddThingsToThingGroupParams,
) {
    if let Some(var_694) = &input.thing_group_names {
        let mut array_695 = object.key("thingGroupNames").start_array();
        for item_696 in var_694 {
            {
                array_695.value().string(item_696);
            }
        }
        array_695.finish();
    }
    if input.override_dynamic_groups {
        object
            .key("overrideDynamicGroups")
            .boolean(input.override_dynamic_groups);
    }
}

pub fn serialize_structure_crate_model_replace_default_policy_version_params(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::ReplaceDefaultPolicyVersionParams,
) {
    if let Some(var_697) = &input.template_name {
        object.key("templateName").string(var_697.as_str());
    }
}

pub fn serialize_structure_crate_model_enable_io_t_logging_params(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::EnableIoTLoggingParams,
) {
    if let Some(var_698) = &input.role_arn_for_logging {
        object.key("roleArnForLogging").string(var_698);
    }
    if let Some(var_699) = &input.log_level {
        object.key("logLevel").string(var_699.as_str());
    }
}

pub fn serialize_structure_crate_model_publish_finding_to_sns_params(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::PublishFindingToSnsParams,
) {
    if let Some(var_700) = &input.topic_arn {
        object.key("topicArn").string(var_700);
    }
}

pub fn serialize_structure_crate_model_aws_job_abort_criteria(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::AwsJobAbortCriteria,
) {
    if let Some(var_701) = &input.failure_type {
        object.key("failureType").string(var_701.as_str());
    }
    if let Some(var_702) = &input.action {
        object.key("action").string(var_702.as_str());
    }
    if let Some(var_703) = &input.threshold_percentage {
        object.key("thresholdPercentage").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::Float((*var_703).into()),
        );
    }
    if let Some(var_704) = &input.min_number_of_executed_things {
        object.key("minNumberOfExecutedThings").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_704).into()),
        );
    }
}

pub fn serialize_structure_crate_model_aws_job_exponential_rollout_rate(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::AwsJobExponentialRolloutRate,
) {
    if let Some(var_705) = &input.base_rate_per_minute {
        object.key("baseRatePerMinute").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_705).into()),
        );
    }
    {
        object.key("incrementFactor").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::Float((input.increment_factor).into()),
        );
    }
    if let Some(var_706) = &input.rate_increase_criteria {
        let mut object_707 = object.key("rateIncreaseCriteria").start_object();
        crate::json_ser::serialize_structure_crate_model_aws_job_rate_increase_criteria(
            &mut object_707,
            var_706,
        );
        object_707.finish();
    }
}

pub fn serialize_structure_crate_model_file_location(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::FileLocation,
) {
    if let Some(var_708) = &input.stream {
        let mut object_709 = object.key("stream").start_object();
        crate::json_ser::serialize_structure_crate_model_stream(&mut object_709, var_708);
        object_709.finish();
    }
    if let Some(var_710) = &input.s3_location {
        let mut object_711 = object.key("s3Location").start_object();
        crate::json_ser::serialize_structure_crate_model_s3_location(&mut object_711, var_710);
        object_711.finish();
    }
}

pub fn serialize_structure_crate_model_code_signing(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::CodeSigning,
) {
    if let Some(var_712) = &input.aws_signer_job_id {
        object.key("awsSignerJobId").string(var_712);
    }
    if let Some(var_713) = &input.start_signing_job_parameter {
        let mut object_714 = object.key("startSigningJobParameter").start_object();
        crate::json_ser::serialize_structure_crate_model_start_signing_job_parameter(
            &mut object_714,
            var_713,
        );
        object_714.finish();
    }
    if let Some(var_715) = &input.custom_code_signing {
        let mut object_716 = object.key("customCodeSigning").start_object();
        crate::json_ser::serialize_structure_crate_model_custom_code_signing(
            &mut object_716,
            var_715,
        );
        object_716.finish();
    }
}

pub fn serialize_structure_crate_model_metric_dimension(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::MetricDimension,
) {
    if let Some(var_717) = &input.dimension_name {
        object.key("dimensionName").string(var_717);
    }
    if let Some(var_718) = &input.operator {
        object.key("operator").string(var_718.as_str());
    }
}

pub fn serialize_structure_crate_model_behavior_criteria(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::BehaviorCriteria,
) {
    if let Some(var_719) = &input.comparison_operator {
        object.key("comparisonOperator").string(var_719.as_str());
    }
    if let Some(var_720) = &input.value {
        let mut object_721 = object.key("value").start_object();
        crate::json_ser::serialize_structure_crate_model_metric_value(&mut object_721, var_720);
        object_721.finish();
    }
    if let Some(var_722) = &input.duration_seconds {
        object.key("durationSeconds").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_722).into()),
        );
    }
    if let Some(var_723) = &input.consecutive_datapoints_to_alarm {
        object.key("consecutiveDatapointsToAlarm").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_723).into()),
        );
    }
    if let Some(var_724) = &input.consecutive_datapoints_to_clear {
        object.key("consecutiveDatapointsToClear").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_724).into()),
        );
    }
    if let Some(var_725) = &input.statistical_threshold {
        let mut object_726 = object.key("statisticalThreshold").start_object();
        crate::json_ser::serialize_structure_crate_model_statistical_threshold(
            &mut object_726,
            var_725,
        );
        object_726.finish();
    }
    if let Some(var_727) = &input.ml_detection_config {
        let mut object_728 = object.key("mlDetectionConfig").start_object();
        crate::json_ser::serialize_structure_crate_model_machine_learning_detection_config(
            &mut object_728,
            var_727,
        );
        object_728.finish();
    }
}

pub fn serialize_structure_crate_model_s3_location(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::S3Location,
) {
    if let Some(var_729) = &input.bucket {
        object.key("bucket").string(var_729);
    }
    if let Some(var_730) = &input.key {
        object.key("key").string(var_730);
    }
    if let Some(var_731) = &input.version {
        object.key("version").string(var_731);
    }
}

pub fn serialize_structure_crate_model_http_url_destination_configuration(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::HttpUrlDestinationConfiguration,
) {
    if let Some(var_732) = &input.confirmation_url {
        object.key("confirmationUrl").string(var_732);
    }
}

pub fn serialize_structure_crate_model_vpc_destination_configuration(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::VpcDestinationConfiguration,
) {
    if let Some(var_733) = &input.subnet_ids {
        let mut array_734 = object.key("subnetIds").start_array();
        for item_735 in var_733 {
            {
                array_734.value().string(item_735);
            }
        }
        array_734.finish();
    }
    if let Some(var_736) = &input.security_groups {
        let mut array_737 = object.key("securityGroups").start_array();
        for item_738 in var_736 {
            {
                array_737.value().string(item_738);
            }
        }
        array_737.finish();
    }
    if let Some(var_739) = &input.vpc_id {
        object.key("vpcId").string(var_739);
    }
    if let Some(var_740) = &input.role_arn {
        object.key("roleArn").string(var_740);
    }
}

pub fn serialize_structure_crate_model_terms_aggregation(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::TermsAggregation,
) {
    if input.max_buckets != 0 {
        object.key("maxBuckets").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((input.max_buckets).into()),
        );
    }
}

pub fn serialize_structure_crate_model_field(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::Field,
) {
    if let Some(var_741) = &input.name {
        object.key("name").string(var_741);
    }
    if let Some(var_742) = &input.r#type {
        object.key("type").string(var_742.as_str());
    }
}

pub fn serialize_structure_crate_model_action(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::Action,
) {
    if let Some(var_743) = &input.dynamo_db {
        let mut object_744 = object.key("dynamoDB").start_object();
        crate::json_ser::serialize_structure_crate_model_dynamo_db_action(&mut object_744, var_743);
        object_744.finish();
    }
    if let Some(var_745) = &input.dynamo_d_bv2 {
        let mut object_746 = object.key("dynamoDBv2").start_object();
        crate::json_ser::serialize_structure_crate_model_dynamo_d_bv2_action(
            &mut object_746,
            var_745,
        );
        object_746.finish();
    }
    if let Some(var_747) = &input.lambda {
        let mut object_748 = object.key("lambda").start_object();
        crate::json_ser::serialize_structure_crate_model_lambda_action(&mut object_748, var_747);
        object_748.finish();
    }
    if let Some(var_749) = &input.sns {
        let mut object_750 = object.key("sns").start_object();
        crate::json_ser::serialize_structure_crate_model_sns_action(&mut object_750, var_749);
        object_750.finish();
    }
    if let Some(var_751) = &input.sqs {
        let mut object_752 = object.key("sqs").start_object();
        crate::json_ser::serialize_structure_crate_model_sqs_action(&mut object_752, var_751);
        object_752.finish();
    }
    if let Some(var_753) = &input.kinesis {
        let mut object_754 = object.key("kinesis").start_object();
        crate::json_ser::serialize_structure_crate_model_kinesis_action(&mut object_754, var_753);
        object_754.finish();
    }
    if let Some(var_755) = &input.republish {
        let mut object_756 = object.key("republish").start_object();
        crate::json_ser::serialize_structure_crate_model_republish_action(&mut object_756, var_755);
        object_756.finish();
    }
    if let Some(var_757) = &input.s3 {
        let mut object_758 = object.key("s3").start_object();
        crate::json_ser::serialize_structure_crate_model_s3_action(&mut object_758, var_757);
        object_758.finish();
    }
    if let Some(var_759) = &input.firehose {
        let mut object_760 = object.key("firehose").start_object();
        crate::json_ser::serialize_structure_crate_model_firehose_action(&mut object_760, var_759);
        object_760.finish();
    }
    if let Some(var_761) = &input.cloudwatch_metric {
        let mut object_762 = object.key("cloudwatchMetric").start_object();
        crate::json_ser::serialize_structure_crate_model_cloudwatch_metric_action(
            &mut object_762,
            var_761,
        );
        object_762.finish();
    }
    if let Some(var_763) = &input.cloudwatch_alarm {
        let mut object_764 = object.key("cloudwatchAlarm").start_object();
        crate::json_ser::serialize_structure_crate_model_cloudwatch_alarm_action(
            &mut object_764,
            var_763,
        );
        object_764.finish();
    }
    if let Some(var_765) = &input.cloudwatch_logs {
        let mut object_766 = object.key("cloudwatchLogs").start_object();
        crate::json_ser::serialize_structure_crate_model_cloudwatch_logs_action(
            &mut object_766,
            var_765,
        );
        object_766.finish();
    }
    if let Some(var_767) = &input.elasticsearch {
        let mut object_768 = object.key("elasticsearch").start_object();
        crate::json_ser::serialize_structure_crate_model_elasticsearch_action(
            &mut object_768,
            var_767,
        );
        object_768.finish();
    }
    if let Some(var_769) = &input.salesforce {
        let mut object_770 = object.key("salesforce").start_object();
        crate::json_ser::serialize_structure_crate_model_salesforce_action(
            &mut object_770,
            var_769,
        );
        object_770.finish();
    }
    if let Some(var_771) = &input.iot_analytics {
        let mut object_772 = object.key("iotAnalytics").start_object();
        crate::json_ser::serialize_structure_crate_model_iot_analytics_action(
            &mut object_772,
            var_771,
        );
        object_772.finish();
    }
    if let Some(var_773) = &input.iot_events {
        let mut object_774 = object.key("iotEvents").start_object();
        crate::json_ser::serialize_structure_crate_model_iot_events_action(
            &mut object_774,
            var_773,
        );
        object_774.finish();
    }
    if let Some(var_775) = &input.iot_site_wise {
        let mut object_776 = object.key("iotSiteWise").start_object();
        crate::json_ser::serialize_structure_crate_model_iot_site_wise_action(
            &mut object_776,
            var_775,
        );
        object_776.finish();
    }
    if let Some(var_777) = &input.step_functions {
        let mut object_778 = object.key("stepFunctions").start_object();
        crate::json_ser::serialize_structure_crate_model_step_functions_action(
            &mut object_778,
            var_777,
        );
        object_778.finish();
    }
    if let Some(var_779) = &input.timestream {
        let mut object_780 = object.key("timestream").start_object();
        crate::json_ser::serialize_structure_crate_model_timestream_action(
            &mut object_780,
            var_779,
        );
        object_780.finish();
    }
    if let Some(var_781) = &input.http {
        let mut object_782 = object.key("http").start_object();
        crate::json_ser::serialize_structure_crate_model_http_action(&mut object_782, var_781);
        object_782.finish();
    }
    if let Some(var_783) = &input.kafka {
        let mut object_784 = object.key("kafka").start_object();
        crate::json_ser::serialize_structure_crate_model_kafka_action(&mut object_784, var_783);
        object_784.finish();
    }
    if let Some(var_785) = &input.open_search {
        let mut object_786 = object.key("openSearch").start_object();
        crate::json_ser::serialize_structure_crate_model_open_search_action(
            &mut object_786,
            var_785,
        );
        object_786.finish();
    }
}

pub fn serialize_structure_crate_model_rate_increase_criteria(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::RateIncreaseCriteria,
) {
    if let Some(var_787) = &input.number_of_notified_things {
        object.key("numberOfNotifiedThings").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_787).into()),
        );
    }
    if let Some(var_788) = &input.number_of_succeeded_things {
        object.key("numberOfSucceededThings").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_788).into()),
        );
    }
}

pub fn serialize_structure_crate_model_aws_job_rate_increase_criteria(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::AwsJobRateIncreaseCriteria,
) {
    if let Some(var_789) = &input.number_of_notified_things {
        object.key("numberOfNotifiedThings").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_789).into()),
        );
    }
    if let Some(var_790) = &input.number_of_succeeded_things {
        object.key("numberOfSucceededThings").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_790).into()),
        );
    }
}

pub fn serialize_structure_crate_model_stream(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::Stream,
) {
    if let Some(var_791) = &input.stream_id {
        object.key("streamId").string(var_791);
    }
    if let Some(var_792) = &input.file_id {
        object.key("fileId").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_792).into()),
        );
    }
}

pub fn serialize_structure_crate_model_start_signing_job_parameter(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::StartSigningJobParameter,
) {
    if let Some(var_793) = &input.signing_profile_parameter {
        let mut object_794 = object.key("signingProfileParameter").start_object();
        crate::json_ser::serialize_structure_crate_model_signing_profile_parameter(
            &mut object_794,
            var_793,
        );
        object_794.finish();
    }
    if let Some(var_795) = &input.signing_profile_name {
        object.key("signingProfileName").string(var_795);
    }
    if let Some(var_796) = &input.destination {
        let mut object_797 = object.key("destination").start_object();
        crate::json_ser::serialize_structure_crate_model_destination(&mut object_797, var_796);
        object_797.finish();
    }
}

pub fn serialize_structure_crate_model_custom_code_signing(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::CustomCodeSigning,
) {
    if let Some(var_798) = &input.signature {
        let mut object_799 = object.key("signature").start_object();
        crate::json_ser::serialize_structure_crate_model_code_signing_signature(
            &mut object_799,
            var_798,
        );
        object_799.finish();
    }
    if let Some(var_800) = &input.certificate_chain {
        let mut object_801 = object.key("certificateChain").start_object();
        crate::json_ser::serialize_structure_crate_model_code_signing_certificate_chain(
            &mut object_801,
            var_800,
        );
        object_801.finish();
    }
    if let Some(var_802) = &input.hash_algorithm {
        object.key("hashAlgorithm").string(var_802);
    }
    if let Some(var_803) = &input.signature_algorithm {
        object.key("signatureAlgorithm").string(var_803);
    }
}

pub fn serialize_structure_crate_model_metric_value(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::MetricValue,
) {
    if let Some(var_804) = &input.count {
        object.key("count").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_804).into()),
        );
    }
    if let Some(var_805) = &input.cidrs {
        let mut array_806 = object.key("cidrs").start_array();
        for item_807 in var_805 {
            {
                array_806.value().string(item_807);
            }
        }
        array_806.finish();
    }
    if let Some(var_808) = &input.ports {
        let mut array_809 = object.key("ports").start_array();
        for item_810 in var_808 {
            {
                array_809.value().number(
                    #[allow(clippy::useless_conversion)]
                    aws_smithy_types::Number::NegInt((*item_810).into()),
                );
            }
        }
        array_809.finish();
    }
    if let Some(var_811) = &input.number {
        object.key("number").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::Float((*var_811).into()),
        );
    }
    if let Some(var_812) = &input.numbers {
        let mut array_813 = object.key("numbers").start_array();
        for item_814 in var_812 {
            {
                array_813.value().number(
                    #[allow(clippy::useless_conversion)]
                    aws_smithy_types::Number::Float((*item_814).into()),
                );
            }
        }
        array_813.finish();
    }
    if let Some(var_815) = &input.strings {
        let mut array_816 = object.key("strings").start_array();
        for item_817 in var_815 {
            {
                array_816.value().string(item_817);
            }
        }
        array_816.finish();
    }
}

pub fn serialize_structure_crate_model_statistical_threshold(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::StatisticalThreshold,
) {
    if let Some(var_818) = &input.statistic {
        object.key("statistic").string(var_818);
    }
}

pub fn serialize_structure_crate_model_machine_learning_detection_config(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::MachineLearningDetectionConfig,
) {
    if let Some(var_819) = &input.confidence_level {
        object.key("confidenceLevel").string(var_819.as_str());
    }
}

pub fn serialize_structure_crate_model_dynamo_db_action(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::DynamoDbAction,
) {
    if let Some(var_820) = &input.table_name {
        object.key("tableName").string(var_820);
    }
    if let Some(var_821) = &input.role_arn {
        object.key("roleArn").string(var_821);
    }
    if let Some(var_822) = &input.operation {
        object.key("operation").string(var_822);
    }
    if let Some(var_823) = &input.hash_key_field {
        object.key("hashKeyField").string(var_823);
    }
    if let Some(var_824) = &input.hash_key_value {
        object.key("hashKeyValue").string(var_824);
    }
    if let Some(var_825) = &input.hash_key_type {
        object.key("hashKeyType").string(var_825.as_str());
    }
    if let Some(var_826) = &input.range_key_field {
        object.key("rangeKeyField").string(var_826);
    }
    if let Some(var_827) = &input.range_key_value {
        object.key("rangeKeyValue").string(var_827);
    }
    if let Some(var_828) = &input.range_key_type {
        object.key("rangeKeyType").string(var_828.as_str());
    }
    if let Some(var_829) = &input.payload_field {
        object.key("payloadField").string(var_829);
    }
}

pub fn serialize_structure_crate_model_dynamo_d_bv2_action(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::DynamoDBv2Action,
) {
    if let Some(var_830) = &input.role_arn {
        object.key("roleArn").string(var_830);
    }
    if let Some(var_831) = &input.put_item {
        let mut object_832 = object.key("putItem").start_object();
        crate::json_ser::serialize_structure_crate_model_put_item_input(&mut object_832, var_831);
        object_832.finish();
    }
}

pub fn serialize_structure_crate_model_lambda_action(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::LambdaAction,
) {
    if let Some(var_833) = &input.function_arn {
        object.key("functionArn").string(var_833);
    }
}

pub fn serialize_structure_crate_model_sns_action(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::SnsAction,
) {
    if let Some(var_834) = &input.target_arn {
        object.key("targetArn").string(var_834);
    }
    if let Some(var_835) = &input.role_arn {
        object.key("roleArn").string(var_835);
    }
    if let Some(var_836) = &input.message_format {
        object.key("messageFormat").string(var_836.as_str());
    }
}

pub fn serialize_structure_crate_model_sqs_action(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::SqsAction,
) {
    if let Some(var_837) = &input.role_arn {
        object.key("roleArn").string(var_837);
    }
    if let Some(var_838) = &input.queue_url {
        object.key("queueUrl").string(var_838);
    }
    if let Some(var_839) = &input.use_base64 {
        object.key("useBase64").boolean(*var_839);
    }
}

pub fn serialize_structure_crate_model_kinesis_action(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::KinesisAction,
) {
    if let Some(var_840) = &input.role_arn {
        object.key("roleArn").string(var_840);
    }
    if let Some(var_841) = &input.stream_name {
        object.key("streamName").string(var_841);
    }
    if let Some(var_842) = &input.partition_key {
        object.key("partitionKey").string(var_842);
    }
}

pub fn serialize_structure_crate_model_republish_action(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::RepublishAction,
) {
    if let Some(var_843) = &input.role_arn {
        object.key("roleArn").string(var_843);
    }
    if let Some(var_844) = &input.topic {
        object.key("topic").string(var_844);
    }
    if let Some(var_845) = &input.qos {
        object.key("qos").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_845).into()),
        );
    }
}

pub fn serialize_structure_crate_model_s3_action(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::S3Action,
) {
    if let Some(var_846) = &input.role_arn {
        object.key("roleArn").string(var_846);
    }
    if let Some(var_847) = &input.bucket_name {
        object.key("bucketName").string(var_847);
    }
    if let Some(var_848) = &input.key {
        object.key("key").string(var_848);
    }
    if let Some(var_849) = &input.canned_acl {
        object.key("cannedAcl").string(var_849.as_str());
    }
}

pub fn serialize_structure_crate_model_firehose_action(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::FirehoseAction,
) {
    if let Some(var_850) = &input.role_arn {
        object.key("roleArn").string(var_850);
    }
    if let Some(var_851) = &input.delivery_stream_name {
        object.key("deliveryStreamName").string(var_851);
    }
    if let Some(var_852) = &input.separator {
        object.key("separator").string(var_852);
    }
    if let Some(var_853) = &input.batch_mode {
        object.key("batchMode").boolean(*var_853);
    }
}

pub fn serialize_structure_crate_model_cloudwatch_metric_action(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::CloudwatchMetricAction,
) {
    if let Some(var_854) = &input.role_arn {
        object.key("roleArn").string(var_854);
    }
    if let Some(var_855) = &input.metric_namespace {
        object.key("metricNamespace").string(var_855);
    }
    if let Some(var_856) = &input.metric_name {
        object.key("metricName").string(var_856);
    }
    if let Some(var_857) = &input.metric_value {
        object.key("metricValue").string(var_857);
    }
    if let Some(var_858) = &input.metric_unit {
        object.key("metricUnit").string(var_858);
    }
    if let Some(var_859) = &input.metric_timestamp {
        object.key("metricTimestamp").string(var_859);
    }
}

pub fn serialize_structure_crate_model_cloudwatch_alarm_action(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::CloudwatchAlarmAction,
) {
    if let Some(var_860) = &input.role_arn {
        object.key("roleArn").string(var_860);
    }
    if let Some(var_861) = &input.alarm_name {
        object.key("alarmName").string(var_861);
    }
    if let Some(var_862) = &input.state_reason {
        object.key("stateReason").string(var_862);
    }
    if let Some(var_863) = &input.state_value {
        object.key("stateValue").string(var_863);
    }
}

pub fn serialize_structure_crate_model_cloudwatch_logs_action(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::CloudwatchLogsAction,
) {
    if let Some(var_864) = &input.role_arn {
        object.key("roleArn").string(var_864);
    }
    if let Some(var_865) = &input.log_group_name {
        object.key("logGroupName").string(var_865);
    }
}

pub fn serialize_structure_crate_model_elasticsearch_action(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::ElasticsearchAction,
) {
    if let Some(var_866) = &input.role_arn {
        object.key("roleArn").string(var_866);
    }
    if let Some(var_867) = &input.endpoint {
        object.key("endpoint").string(var_867);
    }
    if let Some(var_868) = &input.index {
        object.key("index").string(var_868);
    }
    if let Some(var_869) = &input.r#type {
        object.key("type").string(var_869);
    }
    if let Some(var_870) = &input.id {
        object.key("id").string(var_870);
    }
}

pub fn serialize_structure_crate_model_salesforce_action(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::SalesforceAction,
) {
    if let Some(var_871) = &input.token {
        object.key("token").string(var_871);
    }
    if let Some(var_872) = &input.url {
        object.key("url").string(var_872);
    }
}

pub fn serialize_structure_crate_model_iot_analytics_action(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::IotAnalyticsAction,
) {
    if let Some(var_873) = &input.channel_arn {
        object.key("channelArn").string(var_873);
    }
    if let Some(var_874) = &input.channel_name {
        object.key("channelName").string(var_874);
    }
    if let Some(var_875) = &input.batch_mode {
        object.key("batchMode").boolean(*var_875);
    }
    if let Some(var_876) = &input.role_arn {
        object.key("roleArn").string(var_876);
    }
}

pub fn serialize_structure_crate_model_iot_events_action(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::IotEventsAction,
) {
    if let Some(var_877) = &input.input_name {
        object.key("inputName").string(var_877);
    }
    if let Some(var_878) = &input.message_id {
        object.key("messageId").string(var_878);
    }
    if let Some(var_879) = &input.batch_mode {
        object.key("batchMode").boolean(*var_879);
    }
    if let Some(var_880) = &input.role_arn {
        object.key("roleArn").string(var_880);
    }
}

pub fn serialize_structure_crate_model_iot_site_wise_action(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::IotSiteWiseAction,
) {
    if let Some(var_881) = &input.put_asset_property_value_entries {
        let mut array_882 = object.key("putAssetPropertyValueEntries").start_array();
        for item_883 in var_881 {
            {
                let mut object_884 = array_882.value().start_object();
                crate::json_ser::serialize_structure_crate_model_put_asset_property_value_entry(
                    &mut object_884,
                    item_883,
                );
                object_884.finish();
            }
        }
        array_882.finish();
    }
    if let Some(var_885) = &input.role_arn {
        object.key("roleArn").string(var_885);
    }
}

pub fn serialize_structure_crate_model_step_functions_action(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::StepFunctionsAction,
) {
    if let Some(var_886) = &input.execution_name_prefix {
        object.key("executionNamePrefix").string(var_886);
    }
    if let Some(var_887) = &input.state_machine_name {
        object.key("stateMachineName").string(var_887);
    }
    if let Some(var_888) = &input.role_arn {
        object.key("roleArn").string(var_888);
    }
}

pub fn serialize_structure_crate_model_timestream_action(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::TimestreamAction,
) {
    if let Some(var_889) = &input.role_arn {
        object.key("roleArn").string(var_889);
    }
    if let Some(var_890) = &input.database_name {
        object.key("databaseName").string(var_890);
    }
    if let Some(var_891) = &input.table_name {
        object.key("tableName").string(var_891);
    }
    if let Some(var_892) = &input.dimensions {
        let mut array_893 = object.key("dimensions").start_array();
        for item_894 in var_892 {
            {
                let mut object_895 = array_893.value().start_object();
                crate::json_ser::serialize_structure_crate_model_timestream_dimension(
                    &mut object_895,
                    item_894,
                );
                object_895.finish();
            }
        }
        array_893.finish();
    }
    if let Some(var_896) = &input.timestamp {
        let mut object_897 = object.key("timestamp").start_object();
        crate::json_ser::serialize_structure_crate_model_timestream_timestamp(
            &mut object_897,
            var_896,
        );
        object_897.finish();
    }
}

pub fn serialize_structure_crate_model_http_action(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::HttpAction,
) {
    if let Some(var_898) = &input.url {
        object.key("url").string(var_898);
    }
    if let Some(var_899) = &input.confirmation_url {
        object.key("confirmationUrl").string(var_899);
    }
    if let Some(var_900) = &input.headers {
        let mut array_901 = object.key("headers").start_array();
        for item_902 in var_900 {
            {
                let mut object_903 = array_901.value().start_object();
                crate::json_ser::serialize_structure_crate_model_http_action_header(
                    &mut object_903,
                    item_902,
                );
                object_903.finish();
            }
        }
        array_901.finish();
    }
    if let Some(var_904) = &input.auth {
        let mut object_905 = object.key("auth").start_object();
        crate::json_ser::serialize_structure_crate_model_http_authorization(
            &mut object_905,
            var_904,
        );
        object_905.finish();
    }
}

pub fn serialize_structure_crate_model_kafka_action(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::KafkaAction,
) {
    if let Some(var_906) = &input.destination_arn {
        object.key("destinationArn").string(var_906);
    }
    if let Some(var_907) = &input.topic {
        object.key("topic").string(var_907);
    }
    if let Some(var_908) = &input.key {
        object.key("key").string(var_908);
    }
    if let Some(var_909) = &input.partition {
        object.key("partition").string(var_909);
    }
    if let Some(var_910) = &input.client_properties {
        let mut object_911 = object.key("clientProperties").start_object();
        for (key_912, value_913) in var_910 {
            {
                object_911.key(key_912).string(value_913);
            }
        }
        object_911.finish();
    }
}

pub fn serialize_structure_crate_model_open_search_action(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::OpenSearchAction,
) {
    if let Some(var_914) = &input.role_arn {
        object.key("roleArn").string(var_914);
    }
    if let Some(var_915) = &input.endpoint {
        object.key("endpoint").string(var_915);
    }
    if let Some(var_916) = &input.index {
        object.key("index").string(var_916);
    }
    if let Some(var_917) = &input.r#type {
        object.key("type").string(var_917);
    }
    if let Some(var_918) = &input.id {
        object.key("id").string(var_918);
    }
}

pub fn serialize_structure_crate_model_signing_profile_parameter(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::SigningProfileParameter,
) {
    if let Some(var_919) = &input.certificate_arn {
        object.key("certificateArn").string(var_919);
    }
    if let Some(var_920) = &input.platform {
        object.key("platform").string(var_920);
    }
    if let Some(var_921) = &input.certificate_path_on_device {
        object.key("certificatePathOnDevice").string(var_921);
    }
}

pub fn serialize_structure_crate_model_destination(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::Destination,
) {
    if let Some(var_922) = &input.s3_destination {
        let mut object_923 = object.key("s3Destination").start_object();
        crate::json_ser::serialize_structure_crate_model_s3_destination(&mut object_923, var_922);
        object_923.finish();
    }
}

pub fn serialize_structure_crate_model_code_signing_signature(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::CodeSigningSignature,
) {
    if let Some(var_924) = &input.inline_document {
        object
            .key("inlineDocument")
            .string_unchecked(&aws_smithy_types::base64::encode(var_924));
    }
}

pub fn serialize_structure_crate_model_code_signing_certificate_chain(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::CodeSigningCertificateChain,
) {
    if let Some(var_925) = &input.certificate_name {
        object.key("certificateName").string(var_925);
    }
    if let Some(var_926) = &input.inline_document {
        object.key("inlineDocument").string(var_926);
    }
}

pub fn serialize_structure_crate_model_put_item_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::PutItemInput,
) {
    if let Some(var_927) = &input.table_name {
        object.key("tableName").string(var_927);
    }
}

pub fn serialize_structure_crate_model_put_asset_property_value_entry(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::PutAssetPropertyValueEntry,
) {
    if let Some(var_928) = &input.entry_id {
        object.key("entryId").string(var_928);
    }
    if let Some(var_929) = &input.asset_id {
        object.key("assetId").string(var_929);
    }
    if let Some(var_930) = &input.property_id {
        object.key("propertyId").string(var_930);
    }
    if let Some(var_931) = &input.property_alias {
        object.key("propertyAlias").string(var_931);
    }
    if let Some(var_932) = &input.property_values {
        let mut array_933 = object.key("propertyValues").start_array();
        for item_934 in var_932 {
            {
                let mut object_935 = array_933.value().start_object();
                crate::json_ser::serialize_structure_crate_model_asset_property_value(
                    &mut object_935,
                    item_934,
                );
                object_935.finish();
            }
        }
        array_933.finish();
    }
}

pub fn serialize_structure_crate_model_timestream_dimension(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::TimestreamDimension,
) {
    if let Some(var_936) = &input.name {
        object.key("name").string(var_936);
    }
    if let Some(var_937) = &input.value {
        object.key("value").string(var_937);
    }
}

pub fn serialize_structure_crate_model_timestream_timestamp(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::TimestreamTimestamp,
) {
    if let Some(var_938) = &input.value {
        object.key("value").string(var_938);
    }
    if let Some(var_939) = &input.unit {
        object.key("unit").string(var_939);
    }
}

pub fn serialize_structure_crate_model_http_action_header(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::HttpActionHeader,
) {
    if let Some(var_940) = &input.key {
        object.key("key").string(var_940);
    }
    if let Some(var_941) = &input.value {
        object.key("value").string(var_941);
    }
}

pub fn serialize_structure_crate_model_http_authorization(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::HttpAuthorization,
) {
    if let Some(var_942) = &input.sigv4 {
        let mut object_943 = object.key("sigv4").start_object();
        crate::json_ser::serialize_structure_crate_model_sig_v4_authorization(
            &mut object_943,
            var_942,
        );
        object_943.finish();
    }
}

pub fn serialize_structure_crate_model_s3_destination(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::S3Destination,
) {
    if let Some(var_944) = &input.bucket {
        object.key("bucket").string(var_944);
    }
    if let Some(var_945) = &input.prefix {
        object.key("prefix").string(var_945);
    }
}

pub fn serialize_structure_crate_model_asset_property_value(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::AssetPropertyValue,
) {
    if let Some(var_946) = &input.value {
        let mut object_947 = object.key("value").start_object();
        crate::json_ser::serialize_union_crate_model_asset_property_variant(
            &mut object_947,
            var_946,
        );
        object_947.finish();
    }
    if let Some(var_948) = &input.timestamp {
        let mut object_949 = object.key("timestamp").start_object();
        crate::json_ser::serialize_structure_crate_model_asset_property_timestamp(
            &mut object_949,
            var_948,
        );
        object_949.finish();
    }
    if let Some(var_950) = &input.quality {
        object.key("quality").string(var_950);
    }
}

pub fn serialize_structure_crate_model_sig_v4_authorization(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::SigV4Authorization,
) {
    if let Some(var_951) = &input.signing_region {
        object.key("signingRegion").string(var_951);
    }
    if let Some(var_952) = &input.service_name {
        object.key("serviceName").string(var_952);
    }
    if let Some(var_953) = &input.role_arn {
        object.key("roleArn").string(var_953);
    }
}

pub fn serialize_union_crate_model_asset_property_variant(
    object_947: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::AssetPropertyVariant,
) {
    match input {
        crate::model::AssetPropertyVariant::StringValue(inner) => {
            object_947.key("stringValue").string(inner);
        }
        crate::model::AssetPropertyVariant::IntegerValue(inner) => {
            object_947.key("integerValue").string(inner);
        }
        crate::model::AssetPropertyVariant::DoubleValue(inner) => {
            object_947.key("doubleValue").string(inner);
        }
        crate::model::AssetPropertyVariant::BooleanValue(inner) => {
            object_947.key("booleanValue").string(inner);
        }
    }
}

pub fn serialize_structure_crate_model_asset_property_timestamp(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::AssetPropertyTimestamp,
) {
    if let Some(var_954) = &input.time_in_seconds {
        object.key("timeInSeconds").string(var_954);
    }
    if let Some(var_955) = &input.offset_in_nanos {
        object.key("offsetInNanos").string(var_955);
    }
}
