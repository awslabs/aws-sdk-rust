// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Describes an action to invoke a Lambda function.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct LambdaAction {
    /// <p>The ARN of the Lambda function.</p>
    #[doc(hidden)]
    pub function_arn: std::option::Option<std::string::String>,
}
impl LambdaAction {
    /// <p>The ARN of the Lambda function.</p>
    pub fn function_arn(&self) -> std::option::Option<&str> {
        self.function_arn.as_deref()
    }
}
impl LambdaAction {
    /// Creates a new builder-style object to manufacture [`LambdaAction`](crate::types::LambdaAction).
    pub fn builder() -> crate::types::builders::LambdaActionBuilder {
        crate::types::builders::LambdaActionBuilder::default()
    }
}

/// A builder for [`LambdaAction`](crate::types::LambdaAction).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct LambdaActionBuilder {
    pub(crate) function_arn: std::option::Option<std::string::String>,
}
impl LambdaActionBuilder {
    /// <p>The ARN of the Lambda function.</p>
    pub fn function_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.function_arn = Some(input.into());
        self
    }
    /// <p>The ARN of the Lambda function.</p>
    pub fn set_function_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.function_arn = input;
        self
    }
    /// Consumes the builder and constructs a [`LambdaAction`](crate::types::LambdaAction).
    pub fn build(self) -> crate::types::LambdaAction {
        crate::types::LambdaAction {
            function_arn: self.function_arn,
        }
    }
}
