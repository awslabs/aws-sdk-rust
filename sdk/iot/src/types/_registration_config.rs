// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The registration configuration.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct RegistrationConfig {
    /// <p>The template body.</p>
    #[doc(hidden)]
    pub template_body: std::option::Option<std::string::String>,
    /// <p>The ARN of the role.</p>
    #[doc(hidden)]
    pub role_arn: std::option::Option<std::string::String>,
    /// <p>The name of the provisioning template.</p>
    #[doc(hidden)]
    pub template_name: std::option::Option<std::string::String>,
}
impl RegistrationConfig {
    /// <p>The template body.</p>
    pub fn template_body(&self) -> std::option::Option<&str> {
        self.template_body.as_deref()
    }
    /// <p>The ARN of the role.</p>
    pub fn role_arn(&self) -> std::option::Option<&str> {
        self.role_arn.as_deref()
    }
    /// <p>The name of the provisioning template.</p>
    pub fn template_name(&self) -> std::option::Option<&str> {
        self.template_name.as_deref()
    }
}
impl RegistrationConfig {
    /// Creates a new builder-style object to manufacture [`RegistrationConfig`](crate::types::RegistrationConfig).
    pub fn builder() -> crate::types::builders::RegistrationConfigBuilder {
        crate::types::builders::RegistrationConfigBuilder::default()
    }
}

/// A builder for [`RegistrationConfig`](crate::types::RegistrationConfig).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct RegistrationConfigBuilder {
    pub(crate) template_body: std::option::Option<std::string::String>,
    pub(crate) role_arn: std::option::Option<std::string::String>,
    pub(crate) template_name: std::option::Option<std::string::String>,
}
impl RegistrationConfigBuilder {
    /// <p>The template body.</p>
    pub fn template_body(mut self, input: impl Into<std::string::String>) -> Self {
        self.template_body = Some(input.into());
        self
    }
    /// <p>The template body.</p>
    pub fn set_template_body(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.template_body = input;
        self
    }
    /// <p>The ARN of the role.</p>
    pub fn role_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.role_arn = Some(input.into());
        self
    }
    /// <p>The ARN of the role.</p>
    pub fn set_role_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.role_arn = input;
        self
    }
    /// <p>The name of the provisioning template.</p>
    pub fn template_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.template_name = Some(input.into());
        self
    }
    /// <p>The name of the provisioning template.</p>
    pub fn set_template_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.template_name = input;
        self
    }
    /// Consumes the builder and constructs a [`RegistrationConfig`](crate::types::RegistrationConfig).
    pub fn build(self) -> crate::types::RegistrationConfig {
        crate::types::RegistrationConfig {
            template_body: self.template_body,
            role_arn: self.role_arn,
            template_name: self.template_name,
        }
    }
}
