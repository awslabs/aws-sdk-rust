// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The authorizer summary.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AuthorizerSummary {
    /// <p>The authorizer name.</p>
    #[doc(hidden)]
    pub authorizer_name: std::option::Option<std::string::String>,
    /// <p>The authorizer ARN.</p>
    #[doc(hidden)]
    pub authorizer_arn: std::option::Option<std::string::String>,
}
impl AuthorizerSummary {
    /// <p>The authorizer name.</p>
    pub fn authorizer_name(&self) -> std::option::Option<&str> {
        self.authorizer_name.as_deref()
    }
    /// <p>The authorizer ARN.</p>
    pub fn authorizer_arn(&self) -> std::option::Option<&str> {
        self.authorizer_arn.as_deref()
    }
}
impl AuthorizerSummary {
    /// Creates a new builder-style object to manufacture [`AuthorizerSummary`](crate::types::AuthorizerSummary).
    pub fn builder() -> crate::types::builders::AuthorizerSummaryBuilder {
        crate::types::builders::AuthorizerSummaryBuilder::default()
    }
}

/// A builder for [`AuthorizerSummary`](crate::types::AuthorizerSummary).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AuthorizerSummaryBuilder {
    pub(crate) authorizer_name: std::option::Option<std::string::String>,
    pub(crate) authorizer_arn: std::option::Option<std::string::String>,
}
impl AuthorizerSummaryBuilder {
    /// <p>The authorizer name.</p>
    pub fn authorizer_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.authorizer_name = Some(input.into());
        self
    }
    /// <p>The authorizer name.</p>
    pub fn set_authorizer_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.authorizer_name = input;
        self
    }
    /// <p>The authorizer ARN.</p>
    pub fn authorizer_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.authorizer_arn = Some(input.into());
        self
    }
    /// <p>The authorizer ARN.</p>
    pub fn set_authorizer_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.authorizer_arn = input;
        self
    }
    /// Consumes the builder and constructs a [`AuthorizerSummary`](crate::types::AuthorizerSummary).
    pub fn build(self) -> crate::types::AuthorizerSummary {
        crate::types::AuthorizerSummary {
            authorizer_name: self.authorizer_name,
            authorizer_arn: self.authorizer_arn,
        }
    }
}
