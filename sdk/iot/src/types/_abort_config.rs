// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The criteria that determine when and how a job abort takes place.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AbortConfig {
    /// <p>The list of criteria that determine when and how to abort the job.</p>
    #[doc(hidden)]
    pub criteria_list: std::option::Option<std::vec::Vec<crate::types::AbortCriteria>>,
}
impl AbortConfig {
    /// <p>The list of criteria that determine when and how to abort the job.</p>
    pub fn criteria_list(&self) -> std::option::Option<&[crate::types::AbortCriteria]> {
        self.criteria_list.as_deref()
    }
}
impl AbortConfig {
    /// Creates a new builder-style object to manufacture [`AbortConfig`](crate::types::AbortConfig).
    pub fn builder() -> crate::types::builders::AbortConfigBuilder {
        crate::types::builders::AbortConfigBuilder::default()
    }
}

/// A builder for [`AbortConfig`](crate::types::AbortConfig).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AbortConfigBuilder {
    pub(crate) criteria_list: std::option::Option<std::vec::Vec<crate::types::AbortCriteria>>,
}
impl AbortConfigBuilder {
    /// Appends an item to `criteria_list`.
    ///
    /// To override the contents of this collection use [`set_criteria_list`](Self::set_criteria_list).
    ///
    /// <p>The list of criteria that determine when and how to abort the job.</p>
    pub fn criteria_list(mut self, input: crate::types::AbortCriteria) -> Self {
        let mut v = self.criteria_list.unwrap_or_default();
        v.push(input);
        self.criteria_list = Some(v);
        self
    }
    /// <p>The list of criteria that determine when and how to abort the job.</p>
    pub fn set_criteria_list(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::AbortCriteria>>,
    ) -> Self {
        self.criteria_list = input;
        self
    }
    /// Consumes the builder and constructs a [`AbortConfig`](crate::types::AbortConfig).
    pub fn build(self) -> crate::types::AbortConfig {
        crate::types::AbortConfig {
            criteria_list: self.criteria_list,
        }
    }
}
