// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>HTTP URL destination properties.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct HttpUrlDestinationProperties {
    /// <p>The URL used to confirm the HTTP topic rule destination URL.</p>
    #[doc(hidden)]
    pub confirmation_url: std::option::Option<std::string::String>,
}
impl HttpUrlDestinationProperties {
    /// <p>The URL used to confirm the HTTP topic rule destination URL.</p>
    pub fn confirmation_url(&self) -> std::option::Option<&str> {
        self.confirmation_url.as_deref()
    }
}
impl HttpUrlDestinationProperties {
    /// Creates a new builder-style object to manufacture [`HttpUrlDestinationProperties`](crate::types::HttpUrlDestinationProperties).
    pub fn builder() -> crate::types::builders::HttpUrlDestinationPropertiesBuilder {
        crate::types::builders::HttpUrlDestinationPropertiesBuilder::default()
    }
}

/// A builder for [`HttpUrlDestinationProperties`](crate::types::HttpUrlDestinationProperties).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct HttpUrlDestinationPropertiesBuilder {
    pub(crate) confirmation_url: std::option::Option<std::string::String>,
}
impl HttpUrlDestinationPropertiesBuilder {
    /// <p>The URL used to confirm the HTTP topic rule destination URL.</p>
    pub fn confirmation_url(mut self, input: impl Into<std::string::String>) -> Self {
        self.confirmation_url = Some(input.into());
        self
    }
    /// <p>The URL used to confirm the HTTP topic rule destination URL.</p>
    pub fn set_confirmation_url(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.confirmation_url = input;
        self
    }
    /// Consumes the builder and constructs a [`HttpUrlDestinationProperties`](crate::types::HttpUrlDestinationProperties).
    pub fn build(self) -> crate::types::HttpUrlDestinationProperties {
        crate::types::HttpUrlDestinationProperties {
            confirmation_url: self.confirmation_url,
        }
    }
}
