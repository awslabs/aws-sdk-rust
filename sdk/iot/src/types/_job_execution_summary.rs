// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The job execution summary.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct JobExecutionSummary {
    /// <p>The status of the job execution.</p>
    #[doc(hidden)]
    pub status: std::option::Option<crate::types::JobExecutionStatus>,
    /// <p>The time, in seconds since the epoch, when the job execution was queued.</p>
    #[doc(hidden)]
    pub queued_at: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>The time, in seconds since the epoch, when the job execution started.</p>
    #[doc(hidden)]
    pub started_at: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>The time, in seconds since the epoch, when the job execution was last updated.</p>
    #[doc(hidden)]
    pub last_updated_at: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>A string (consisting of the digits "0" through "9") which identifies this particular job execution on this particular device. It can be used later in commands which return or update job execution information.</p>
    #[doc(hidden)]
    pub execution_number: std::option::Option<i64>,
    /// <p>The number that indicates how many retry attempts have been completed for this job on this device.</p>
    #[doc(hidden)]
    pub retry_attempt: std::option::Option<i32>,
}
impl JobExecutionSummary {
    /// <p>The status of the job execution.</p>
    pub fn status(&self) -> std::option::Option<&crate::types::JobExecutionStatus> {
        self.status.as_ref()
    }
    /// <p>The time, in seconds since the epoch, when the job execution was queued.</p>
    pub fn queued_at(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.queued_at.as_ref()
    }
    /// <p>The time, in seconds since the epoch, when the job execution started.</p>
    pub fn started_at(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.started_at.as_ref()
    }
    /// <p>The time, in seconds since the epoch, when the job execution was last updated.</p>
    pub fn last_updated_at(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.last_updated_at.as_ref()
    }
    /// <p>A string (consisting of the digits "0" through "9") which identifies this particular job execution on this particular device. It can be used later in commands which return or update job execution information.</p>
    pub fn execution_number(&self) -> std::option::Option<i64> {
        self.execution_number
    }
    /// <p>The number that indicates how many retry attempts have been completed for this job on this device.</p>
    pub fn retry_attempt(&self) -> std::option::Option<i32> {
        self.retry_attempt
    }
}
impl JobExecutionSummary {
    /// Creates a new builder-style object to manufacture [`JobExecutionSummary`](crate::types::JobExecutionSummary).
    pub fn builder() -> crate::types::builders::JobExecutionSummaryBuilder {
        crate::types::builders::JobExecutionSummaryBuilder::default()
    }
}

/// A builder for [`JobExecutionSummary`](crate::types::JobExecutionSummary).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct JobExecutionSummaryBuilder {
    pub(crate) status: std::option::Option<crate::types::JobExecutionStatus>,
    pub(crate) queued_at: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) started_at: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) last_updated_at: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) execution_number: std::option::Option<i64>,
    pub(crate) retry_attempt: std::option::Option<i32>,
}
impl JobExecutionSummaryBuilder {
    /// <p>The status of the job execution.</p>
    pub fn status(mut self, input: crate::types::JobExecutionStatus) -> Self {
        self.status = Some(input);
        self
    }
    /// <p>The status of the job execution.</p>
    pub fn set_status(
        mut self,
        input: std::option::Option<crate::types::JobExecutionStatus>,
    ) -> Self {
        self.status = input;
        self
    }
    /// <p>The time, in seconds since the epoch, when the job execution was queued.</p>
    pub fn queued_at(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.queued_at = Some(input);
        self
    }
    /// <p>The time, in seconds since the epoch, when the job execution was queued.</p>
    pub fn set_queued_at(mut self, input: std::option::Option<aws_smithy_types::DateTime>) -> Self {
        self.queued_at = input;
        self
    }
    /// <p>The time, in seconds since the epoch, when the job execution started.</p>
    pub fn started_at(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.started_at = Some(input);
        self
    }
    /// <p>The time, in seconds since the epoch, when the job execution started.</p>
    pub fn set_started_at(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.started_at = input;
        self
    }
    /// <p>The time, in seconds since the epoch, when the job execution was last updated.</p>
    pub fn last_updated_at(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.last_updated_at = Some(input);
        self
    }
    /// <p>The time, in seconds since the epoch, when the job execution was last updated.</p>
    pub fn set_last_updated_at(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.last_updated_at = input;
        self
    }
    /// <p>A string (consisting of the digits "0" through "9") which identifies this particular job execution on this particular device. It can be used later in commands which return or update job execution information.</p>
    pub fn execution_number(mut self, input: i64) -> Self {
        self.execution_number = Some(input);
        self
    }
    /// <p>A string (consisting of the digits "0" through "9") which identifies this particular job execution on this particular device. It can be used later in commands which return or update job execution information.</p>
    pub fn set_execution_number(mut self, input: std::option::Option<i64>) -> Self {
        self.execution_number = input;
        self
    }
    /// <p>The number that indicates how many retry attempts have been completed for this job on this device.</p>
    pub fn retry_attempt(mut self, input: i32) -> Self {
        self.retry_attempt = Some(input);
        self
    }
    /// <p>The number that indicates how many retry attempts have been completed for this job on this device.</p>
    pub fn set_retry_attempt(mut self, input: std::option::Option<i32>) -> Self {
        self.retry_attempt = input;
        self
    }
    /// Consumes the builder and constructs a [`JobExecutionSummary`](crate::types::JobExecutionSummary).
    pub fn build(self) -> crate::types::JobExecutionSummary {
        crate::types::JobExecutionSummary {
            status: self.status,
            queued_at: self.queued_at,
            started_at: self.started_at,
            last_updated_at: self.last_updated_at,
            execution_number: self.execution_number,
            retry_attempt: self.retry_attempt,
        }
    }
}
