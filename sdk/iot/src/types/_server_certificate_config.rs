// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The server certificate configuration.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ServerCertificateConfig {
    /// <p>A Boolean value that indicates whether Online Certificate Status Protocol (OCSP) server certificate check is enabled or not.</p>
    /// <p>For more information, see <a href="https://docs.aws.amazon.com/iot/latest/developerguide/iot-custom-endpoints-cert-config.html">Configuring OCSP server-certificate stapling in domain configuration</a> from Amazon Web Services IoT Core Developer Guide.</p>
    pub enable_ocsp_check: ::std::option::Option<bool>,
}
impl ServerCertificateConfig {
    /// <p>A Boolean value that indicates whether Online Certificate Status Protocol (OCSP) server certificate check is enabled or not.</p>
    /// <p>For more information, see <a href="https://docs.aws.amazon.com/iot/latest/developerguide/iot-custom-endpoints-cert-config.html">Configuring OCSP server-certificate stapling in domain configuration</a> from Amazon Web Services IoT Core Developer Guide.</p>
    pub fn enable_ocsp_check(&self) -> ::std::option::Option<bool> {
        self.enable_ocsp_check
    }
}
impl ServerCertificateConfig {
    /// Creates a new builder-style object to manufacture [`ServerCertificateConfig`](crate::types::ServerCertificateConfig).
    pub fn builder() -> crate::types::builders::ServerCertificateConfigBuilder {
        crate::types::builders::ServerCertificateConfigBuilder::default()
    }
}

/// A builder for [`ServerCertificateConfig`](crate::types::ServerCertificateConfig).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct ServerCertificateConfigBuilder {
    pub(crate) enable_ocsp_check: ::std::option::Option<bool>,
}
impl ServerCertificateConfigBuilder {
    /// <p>A Boolean value that indicates whether Online Certificate Status Protocol (OCSP) server certificate check is enabled or not.</p>
    /// <p>For more information, see <a href="https://docs.aws.amazon.com/iot/latest/developerguide/iot-custom-endpoints-cert-config.html">Configuring OCSP server-certificate stapling in domain configuration</a> from Amazon Web Services IoT Core Developer Guide.</p>
    pub fn enable_ocsp_check(mut self, input: bool) -> Self {
        self.enable_ocsp_check = ::std::option::Option::Some(input);
        self
    }
    /// <p>A Boolean value that indicates whether Online Certificate Status Protocol (OCSP) server certificate check is enabled or not.</p>
    /// <p>For more information, see <a href="https://docs.aws.amazon.com/iot/latest/developerguide/iot-custom-endpoints-cert-config.html">Configuring OCSP server-certificate stapling in domain configuration</a> from Amazon Web Services IoT Core Developer Guide.</p>
    pub fn set_enable_ocsp_check(mut self, input: ::std::option::Option<bool>) -> Self {
        self.enable_ocsp_check = input;
        self
    }
    /// <p>A Boolean value that indicates whether Online Certificate Status Protocol (OCSP) server certificate check is enabled or not.</p>
    /// <p>For more information, see <a href="https://docs.aws.amazon.com/iot/latest/developerguide/iot-custom-endpoints-cert-config.html">Configuring OCSP server-certificate stapling in domain configuration</a> from Amazon Web Services IoT Core Developer Guide.</p>
    pub fn get_enable_ocsp_check(&self) -> &::std::option::Option<bool> {
        &self.enable_ocsp_check
    }
    /// Consumes the builder and constructs a [`ServerCertificateConfig`](crate::types::ServerCertificateConfig).
    pub fn build(self) -> crate::types::ServerCertificateConfig {
        crate::types::ServerCertificateConfig {
            enable_ocsp_check: self.enable_ocsp_check,
        }
    }
}
