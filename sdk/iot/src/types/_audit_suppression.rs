// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p> Filters out specific findings of a Device Defender audit. </p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AuditSuppression {
    /// <p>An audit check name. Checks must be enabled for your account. (Use <code>DescribeAccountAuditConfiguration</code> to see the list of all checks, including those that are enabled or use <code>UpdateAccountAuditConfiguration</code> to select which checks are enabled.)</p>
    pub check_name: ::std::string::String,
    /// <p>Information that identifies the noncompliant resource.</p>
    pub resource_identifier: ::std::option::Option<crate::types::ResourceIdentifier>,
    /// <p> The expiration date (epoch timestamp in seconds) that you want the suppression to adhere to. </p>
    pub expiration_date: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p> Indicates whether a suppression should exist indefinitely or not. </p>
    pub suppress_indefinitely: ::std::option::Option<bool>,
    /// <p> The description of the audit suppression. </p>
    pub description: ::std::option::Option<::std::string::String>,
}
impl AuditSuppression {
    /// <p>An audit check name. Checks must be enabled for your account. (Use <code>DescribeAccountAuditConfiguration</code> to see the list of all checks, including those that are enabled or use <code>UpdateAccountAuditConfiguration</code> to select which checks are enabled.)</p>
    pub fn check_name(&self) -> &str {
        use std::ops::Deref;
        self.check_name.deref()
    }
    /// <p>Information that identifies the noncompliant resource.</p>
    pub fn resource_identifier(&self) -> ::std::option::Option<&crate::types::ResourceIdentifier> {
        self.resource_identifier.as_ref()
    }
    /// <p> The expiration date (epoch timestamp in seconds) that you want the suppression to adhere to. </p>
    pub fn expiration_date(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.expiration_date.as_ref()
    }
    /// <p> Indicates whether a suppression should exist indefinitely or not. </p>
    pub fn suppress_indefinitely(&self) -> ::std::option::Option<bool> {
        self.suppress_indefinitely
    }
    /// <p> The description of the audit suppression. </p>
    pub fn description(&self) -> ::std::option::Option<&str> {
        self.description.as_deref()
    }
}
impl AuditSuppression {
    /// Creates a new builder-style object to manufacture [`AuditSuppression`](crate::types::AuditSuppression).
    pub fn builder() -> crate::types::builders::AuditSuppressionBuilder {
        crate::types::builders::AuditSuppressionBuilder::default()
    }
}

/// A builder for [`AuditSuppression`](crate::types::AuditSuppression).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct AuditSuppressionBuilder {
    pub(crate) check_name: ::std::option::Option<::std::string::String>,
    pub(crate) resource_identifier: ::std::option::Option<crate::types::ResourceIdentifier>,
    pub(crate) expiration_date: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) suppress_indefinitely: ::std::option::Option<bool>,
    pub(crate) description: ::std::option::Option<::std::string::String>,
}
impl AuditSuppressionBuilder {
    /// <p>An audit check name. Checks must be enabled for your account. (Use <code>DescribeAccountAuditConfiguration</code> to see the list of all checks, including those that are enabled or use <code>UpdateAccountAuditConfiguration</code> to select which checks are enabled.)</p>
    /// This field is required.
    pub fn check_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.check_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>An audit check name. Checks must be enabled for your account. (Use <code>DescribeAccountAuditConfiguration</code> to see the list of all checks, including those that are enabled or use <code>UpdateAccountAuditConfiguration</code> to select which checks are enabled.)</p>
    pub fn set_check_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.check_name = input;
        self
    }
    /// <p>An audit check name. Checks must be enabled for your account. (Use <code>DescribeAccountAuditConfiguration</code> to see the list of all checks, including those that are enabled or use <code>UpdateAccountAuditConfiguration</code> to select which checks are enabled.)</p>
    pub fn get_check_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.check_name
    }
    /// <p>Information that identifies the noncompliant resource.</p>
    /// This field is required.
    pub fn resource_identifier(mut self, input: crate::types::ResourceIdentifier) -> Self {
        self.resource_identifier = ::std::option::Option::Some(input);
        self
    }
    /// <p>Information that identifies the noncompliant resource.</p>
    pub fn set_resource_identifier(mut self, input: ::std::option::Option<crate::types::ResourceIdentifier>) -> Self {
        self.resource_identifier = input;
        self
    }
    /// <p>Information that identifies the noncompliant resource.</p>
    pub fn get_resource_identifier(&self) -> &::std::option::Option<crate::types::ResourceIdentifier> {
        &self.resource_identifier
    }
    /// <p> The expiration date (epoch timestamp in seconds) that you want the suppression to adhere to. </p>
    pub fn expiration_date(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.expiration_date = ::std::option::Option::Some(input);
        self
    }
    /// <p> The expiration date (epoch timestamp in seconds) that you want the suppression to adhere to. </p>
    pub fn set_expiration_date(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.expiration_date = input;
        self
    }
    /// <p> The expiration date (epoch timestamp in seconds) that you want the suppression to adhere to. </p>
    pub fn get_expiration_date(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.expiration_date
    }
    /// <p> Indicates whether a suppression should exist indefinitely or not. </p>
    pub fn suppress_indefinitely(mut self, input: bool) -> Self {
        self.suppress_indefinitely = ::std::option::Option::Some(input);
        self
    }
    /// <p> Indicates whether a suppression should exist indefinitely or not. </p>
    pub fn set_suppress_indefinitely(mut self, input: ::std::option::Option<bool>) -> Self {
        self.suppress_indefinitely = input;
        self
    }
    /// <p> Indicates whether a suppression should exist indefinitely or not. </p>
    pub fn get_suppress_indefinitely(&self) -> &::std::option::Option<bool> {
        &self.suppress_indefinitely
    }
    /// <p> The description of the audit suppression. </p>
    pub fn description(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.description = ::std::option::Option::Some(input.into());
        self
    }
    /// <p> The description of the audit suppression. </p>
    pub fn set_description(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.description = input;
        self
    }
    /// <p> The description of the audit suppression. </p>
    pub fn get_description(&self) -> &::std::option::Option<::std::string::String> {
        &self.description
    }
    /// Consumes the builder and constructs a [`AuditSuppression`](crate::types::AuditSuppression).
    /// This method will fail if any of the following fields are not set:
    /// - [`check_name`](crate::types::builders::AuditSuppressionBuilder::check_name)
    pub fn build(self) -> ::std::result::Result<crate::types::AuditSuppression, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::AuditSuppression {
            check_name: self.check_name.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "check_name",
                    "check_name was not specified but it is required when building AuditSuppression",
                )
            })?,
            resource_identifier: self.resource_identifier,
            expiration_date: self.expiration_date,
            suppress_indefinitely: self.suppress_indefinitely,
            description: self.description,
        })
    }
}
