// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Describes the certificate chain being used when code signing a file.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct CodeSigningCertificateChain {
    /// <p>The name of the certificate.</p>
    #[doc(hidden)]
    pub certificate_name: std::option::Option<std::string::String>,
    /// <p>A base64 encoded binary representation of the code signing certificate chain.</p>
    #[doc(hidden)]
    pub inline_document: std::option::Option<std::string::String>,
}
impl CodeSigningCertificateChain {
    /// <p>The name of the certificate.</p>
    pub fn certificate_name(&self) -> std::option::Option<&str> {
        self.certificate_name.as_deref()
    }
    /// <p>A base64 encoded binary representation of the code signing certificate chain.</p>
    pub fn inline_document(&self) -> std::option::Option<&str> {
        self.inline_document.as_deref()
    }
}
impl CodeSigningCertificateChain {
    /// Creates a new builder-style object to manufacture [`CodeSigningCertificateChain`](crate::types::CodeSigningCertificateChain).
    pub fn builder() -> crate::types::builders::CodeSigningCertificateChainBuilder {
        crate::types::builders::CodeSigningCertificateChainBuilder::default()
    }
}

/// A builder for [`CodeSigningCertificateChain`](crate::types::CodeSigningCertificateChain).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct CodeSigningCertificateChainBuilder {
    pub(crate) certificate_name: std::option::Option<std::string::String>,
    pub(crate) inline_document: std::option::Option<std::string::String>,
}
impl CodeSigningCertificateChainBuilder {
    /// <p>The name of the certificate.</p>
    pub fn certificate_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.certificate_name = Some(input.into());
        self
    }
    /// <p>The name of the certificate.</p>
    pub fn set_certificate_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.certificate_name = input;
        self
    }
    /// <p>A base64 encoded binary representation of the code signing certificate chain.</p>
    pub fn inline_document(mut self, input: impl Into<std::string::String>) -> Self {
        self.inline_document = Some(input.into());
        self
    }
    /// <p>A base64 encoded binary representation of the code signing certificate chain.</p>
    pub fn set_inline_document(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.inline_document = input;
        self
    }
    /// Consumes the builder and constructs a [`CodeSigningCertificateChain`](crate::types::CodeSigningCertificateChain).
    pub fn build(self) -> crate::types::CodeSigningCertificateChain {
        crate::types::CodeSigningCertificateChain {
            certificate_name: self.certificate_name,
            inline_document: self.inline_document,
        }
    }
}
