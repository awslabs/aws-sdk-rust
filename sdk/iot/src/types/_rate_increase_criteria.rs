// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Allows you to define a criteria to initiate the increase in rate of rollout for a job.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct RateIncreaseCriteria {
    /// <p>The threshold for number of notified things that will initiate the increase in rate of rollout.</p>
    #[doc(hidden)]
    pub number_of_notified_things: std::option::Option<i32>,
    /// <p>The threshold for number of succeeded things that will initiate the increase in rate of rollout.</p>
    #[doc(hidden)]
    pub number_of_succeeded_things: std::option::Option<i32>,
}
impl RateIncreaseCriteria {
    /// <p>The threshold for number of notified things that will initiate the increase in rate of rollout.</p>
    pub fn number_of_notified_things(&self) -> std::option::Option<i32> {
        self.number_of_notified_things
    }
    /// <p>The threshold for number of succeeded things that will initiate the increase in rate of rollout.</p>
    pub fn number_of_succeeded_things(&self) -> std::option::Option<i32> {
        self.number_of_succeeded_things
    }
}
impl RateIncreaseCriteria {
    /// Creates a new builder-style object to manufacture [`RateIncreaseCriteria`](crate::types::RateIncreaseCriteria).
    pub fn builder() -> crate::types::builders::RateIncreaseCriteriaBuilder {
        crate::types::builders::RateIncreaseCriteriaBuilder::default()
    }
}

/// A builder for [`RateIncreaseCriteria`](crate::types::RateIncreaseCriteria).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct RateIncreaseCriteriaBuilder {
    pub(crate) number_of_notified_things: std::option::Option<i32>,
    pub(crate) number_of_succeeded_things: std::option::Option<i32>,
}
impl RateIncreaseCriteriaBuilder {
    /// <p>The threshold for number of notified things that will initiate the increase in rate of rollout.</p>
    pub fn number_of_notified_things(mut self, input: i32) -> Self {
        self.number_of_notified_things = Some(input);
        self
    }
    /// <p>The threshold for number of notified things that will initiate the increase in rate of rollout.</p>
    pub fn set_number_of_notified_things(mut self, input: std::option::Option<i32>) -> Self {
        self.number_of_notified_things = input;
        self
    }
    /// <p>The threshold for number of succeeded things that will initiate the increase in rate of rollout.</p>
    pub fn number_of_succeeded_things(mut self, input: i32) -> Self {
        self.number_of_succeeded_things = Some(input);
        self
    }
    /// <p>The threshold for number of succeeded things that will initiate the increase in rate of rollout.</p>
    pub fn set_number_of_succeeded_things(mut self, input: std::option::Option<i32>) -> Self {
        self.number_of_succeeded_things = input;
        self
    }
    /// Consumes the builder and constructs a [`RateIncreaseCriteria`](crate::types::RateIncreaseCriteria).
    pub fn build(self) -> crate::types::RateIncreaseCriteria {
        crate::types::RateIncreaseCriteria {
            number_of_notified_things: self.number_of_notified_things,
            number_of_succeeded_things: self.number_of_succeeded_things,
        }
    }
}
