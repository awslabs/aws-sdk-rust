// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The input for the DynamoActionVS action that specifies the DynamoDB table to which the message data will be written.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct PutItemInput {
    /// <p>The table where the message data will be written.</p>
    pub table_name: ::std::string::String,
}
impl PutItemInput {
    /// <p>The table where the message data will be written.</p>
    pub fn table_name(&self) -> &str {
        use std::ops::Deref;
        self.table_name.deref()
    }
}
impl PutItemInput {
    /// Creates a new builder-style object to manufacture [`PutItemInput`](crate::types::PutItemInput).
    pub fn builder() -> crate::types::builders::PutItemInputBuilder {
        crate::types::builders::PutItemInputBuilder::default()
    }
}

/// A builder for [`PutItemInput`](crate::types::PutItemInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct PutItemInputBuilder {
    pub(crate) table_name: ::std::option::Option<::std::string::String>,
}
impl PutItemInputBuilder {
    /// <p>The table where the message data will be written.</p>
    /// This field is required.
    pub fn table_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.table_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The table where the message data will be written.</p>
    pub fn set_table_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.table_name = input;
        self
    }
    /// <p>The table where the message data will be written.</p>
    pub fn get_table_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.table_name
    }
    /// Consumes the builder and constructs a [`PutItemInput`](crate::types::PutItemInput).
    /// This method will fail if any of the following fields are not set:
    /// - [`table_name`](crate::types::builders::PutItemInputBuilder::table_name)
    pub fn build(self) -> ::std::result::Result<crate::types::PutItemInput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::PutItemInput {
            table_name: self.table_name.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "table_name",
                    "table_name was not specified but it is required when building PutItemInput",
                )
            })?,
        })
    }
}
