// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The input for the DynamoActionVS action that specifies the DynamoDB table to which the message data will be written.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct PutItemInput {
    /// <p>The table where the message data will be written.</p>
    #[doc(hidden)]
    pub table_name: std::option::Option<std::string::String>,
}
impl PutItemInput {
    /// <p>The table where the message data will be written.</p>
    pub fn table_name(&self) -> std::option::Option<&str> {
        self.table_name.as_deref()
    }
}
impl PutItemInput {
    /// Creates a new builder-style object to manufacture [`PutItemInput`](crate::types::PutItemInput).
    pub fn builder() -> crate::types::builders::PutItemInputBuilder {
        crate::types::builders::PutItemInputBuilder::default()
    }
}

/// A builder for [`PutItemInput`](crate::types::PutItemInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct PutItemInputBuilder {
    pub(crate) table_name: std::option::Option<std::string::String>,
}
impl PutItemInputBuilder {
    /// <p>The table where the message data will be written.</p>
    pub fn table_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.table_name = Some(input.into());
        self
    }
    /// <p>The table where the message data will be written.</p>
    pub fn set_table_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.table_name = input;
        self
    }
    /// Consumes the builder and constructs a [`PutItemInput`](crate::types::PutItemInput).
    pub fn build(self) -> crate::types::PutItemInput {
        crate::types::PutItemInput {
            table_name: self.table_name,
        }
    }
}
