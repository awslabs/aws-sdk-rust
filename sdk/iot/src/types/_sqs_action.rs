// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Describes an action to publish data to an Amazon SQS queue.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct SqsAction {
    /// <p>The ARN of the IAM role that grants access.</p>
    #[doc(hidden)]
    pub role_arn: std::option::Option<std::string::String>,
    /// <p>The URL of the Amazon SQS queue.</p>
    #[doc(hidden)]
    pub queue_url: std::option::Option<std::string::String>,
    /// <p>Specifies whether to use Base64 encoding.</p>
    #[doc(hidden)]
    pub use_base64: std::option::Option<bool>,
}
impl SqsAction {
    /// <p>The ARN of the IAM role that grants access.</p>
    pub fn role_arn(&self) -> std::option::Option<&str> {
        self.role_arn.as_deref()
    }
    /// <p>The URL of the Amazon SQS queue.</p>
    pub fn queue_url(&self) -> std::option::Option<&str> {
        self.queue_url.as_deref()
    }
    /// <p>Specifies whether to use Base64 encoding.</p>
    pub fn use_base64(&self) -> std::option::Option<bool> {
        self.use_base64
    }
}
impl SqsAction {
    /// Creates a new builder-style object to manufacture [`SqsAction`](crate::types::SqsAction).
    pub fn builder() -> crate::types::builders::SqsActionBuilder {
        crate::types::builders::SqsActionBuilder::default()
    }
}

/// A builder for [`SqsAction`](crate::types::SqsAction).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct SqsActionBuilder {
    pub(crate) role_arn: std::option::Option<std::string::String>,
    pub(crate) queue_url: std::option::Option<std::string::String>,
    pub(crate) use_base64: std::option::Option<bool>,
}
impl SqsActionBuilder {
    /// <p>The ARN of the IAM role that grants access.</p>
    pub fn role_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.role_arn = Some(input.into());
        self
    }
    /// <p>The ARN of the IAM role that grants access.</p>
    pub fn set_role_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.role_arn = input;
        self
    }
    /// <p>The URL of the Amazon SQS queue.</p>
    pub fn queue_url(mut self, input: impl Into<std::string::String>) -> Self {
        self.queue_url = Some(input.into());
        self
    }
    /// <p>The URL of the Amazon SQS queue.</p>
    pub fn set_queue_url(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.queue_url = input;
        self
    }
    /// <p>Specifies whether to use Base64 encoding.</p>
    pub fn use_base64(mut self, input: bool) -> Self {
        self.use_base64 = Some(input);
        self
    }
    /// <p>Specifies whether to use Base64 encoding.</p>
    pub fn set_use_base64(mut self, input: std::option::Option<bool>) -> Self {
        self.use_base64 = input;
        self
    }
    /// Consumes the builder and constructs a [`SqsAction`](crate::types::SqsAction).
    pub fn build(self) -> crate::types::SqsAction {
        crate::types::SqsAction {
            role_arn: self.role_arn,
            queue_url: self.queue_url,
            use_base64: self.use_base64,
        }
    }
}
