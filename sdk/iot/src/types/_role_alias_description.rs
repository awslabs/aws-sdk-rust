// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Role alias description.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct RoleAliasDescription {
    /// <p>The role alias.</p>
    #[doc(hidden)]
    pub role_alias: std::option::Option<std::string::String>,
    /// <p>The ARN of the role alias.</p>
    #[doc(hidden)]
    pub role_alias_arn: std::option::Option<std::string::String>,
    /// <p>The role ARN.</p>
    #[doc(hidden)]
    pub role_arn: std::option::Option<std::string::String>,
    /// <p>The role alias owner.</p>
    #[doc(hidden)]
    pub owner: std::option::Option<std::string::String>,
    /// <p>The number of seconds for which the credential is valid.</p>
    #[doc(hidden)]
    pub credential_duration_seconds: std::option::Option<i32>,
    /// <p>The UNIX timestamp of when the role alias was created.</p>
    #[doc(hidden)]
    pub creation_date: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>The UNIX timestamp of when the role alias was last modified.</p>
    #[doc(hidden)]
    pub last_modified_date: std::option::Option<aws_smithy_types::DateTime>,
}
impl RoleAliasDescription {
    /// <p>The role alias.</p>
    pub fn role_alias(&self) -> std::option::Option<&str> {
        self.role_alias.as_deref()
    }
    /// <p>The ARN of the role alias.</p>
    pub fn role_alias_arn(&self) -> std::option::Option<&str> {
        self.role_alias_arn.as_deref()
    }
    /// <p>The role ARN.</p>
    pub fn role_arn(&self) -> std::option::Option<&str> {
        self.role_arn.as_deref()
    }
    /// <p>The role alias owner.</p>
    pub fn owner(&self) -> std::option::Option<&str> {
        self.owner.as_deref()
    }
    /// <p>The number of seconds for which the credential is valid.</p>
    pub fn credential_duration_seconds(&self) -> std::option::Option<i32> {
        self.credential_duration_seconds
    }
    /// <p>The UNIX timestamp of when the role alias was created.</p>
    pub fn creation_date(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.creation_date.as_ref()
    }
    /// <p>The UNIX timestamp of when the role alias was last modified.</p>
    pub fn last_modified_date(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.last_modified_date.as_ref()
    }
}
impl RoleAliasDescription {
    /// Creates a new builder-style object to manufacture [`RoleAliasDescription`](crate::types::RoleAliasDescription).
    pub fn builder() -> crate::types::builders::RoleAliasDescriptionBuilder {
        crate::types::builders::RoleAliasDescriptionBuilder::default()
    }
}

/// A builder for [`RoleAliasDescription`](crate::types::RoleAliasDescription).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct RoleAliasDescriptionBuilder {
    pub(crate) role_alias: std::option::Option<std::string::String>,
    pub(crate) role_alias_arn: std::option::Option<std::string::String>,
    pub(crate) role_arn: std::option::Option<std::string::String>,
    pub(crate) owner: std::option::Option<std::string::String>,
    pub(crate) credential_duration_seconds: std::option::Option<i32>,
    pub(crate) creation_date: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) last_modified_date: std::option::Option<aws_smithy_types::DateTime>,
}
impl RoleAliasDescriptionBuilder {
    /// <p>The role alias.</p>
    pub fn role_alias(mut self, input: impl Into<std::string::String>) -> Self {
        self.role_alias = Some(input.into());
        self
    }
    /// <p>The role alias.</p>
    pub fn set_role_alias(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.role_alias = input;
        self
    }
    /// <p>The ARN of the role alias.</p>
    pub fn role_alias_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.role_alias_arn = Some(input.into());
        self
    }
    /// <p>The ARN of the role alias.</p>
    pub fn set_role_alias_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.role_alias_arn = input;
        self
    }
    /// <p>The role ARN.</p>
    pub fn role_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.role_arn = Some(input.into());
        self
    }
    /// <p>The role ARN.</p>
    pub fn set_role_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.role_arn = input;
        self
    }
    /// <p>The role alias owner.</p>
    pub fn owner(mut self, input: impl Into<std::string::String>) -> Self {
        self.owner = Some(input.into());
        self
    }
    /// <p>The role alias owner.</p>
    pub fn set_owner(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.owner = input;
        self
    }
    /// <p>The number of seconds for which the credential is valid.</p>
    pub fn credential_duration_seconds(mut self, input: i32) -> Self {
        self.credential_duration_seconds = Some(input);
        self
    }
    /// <p>The number of seconds for which the credential is valid.</p>
    pub fn set_credential_duration_seconds(mut self, input: std::option::Option<i32>) -> Self {
        self.credential_duration_seconds = input;
        self
    }
    /// <p>The UNIX timestamp of when the role alias was created.</p>
    pub fn creation_date(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.creation_date = Some(input);
        self
    }
    /// <p>The UNIX timestamp of when the role alias was created.</p>
    pub fn set_creation_date(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.creation_date = input;
        self
    }
    /// <p>The UNIX timestamp of when the role alias was last modified.</p>
    pub fn last_modified_date(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.last_modified_date = Some(input);
        self
    }
    /// <p>The UNIX timestamp of when the role alias was last modified.</p>
    pub fn set_last_modified_date(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.last_modified_date = input;
        self
    }
    /// Consumes the builder and constructs a [`RoleAliasDescription`](crate::types::RoleAliasDescription).
    pub fn build(self) -> crate::types::RoleAliasDescription {
        crate::types::RoleAliasDescription {
            role_alias: self.role_alias,
            role_alias_arn: self.role_alias_arn,
            role_arn: self.role_arn,
            owner: self.owner,
            credential_duration_seconds: self.credential_duration_seconds,
            creation_date: self.creation_date,
            last_modified_date: self.last_modified_date,
        }
    }
}
