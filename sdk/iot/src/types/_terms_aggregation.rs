// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Performs an aggregation that will return a list of buckets. The list of buckets is a ranked list of the number of occurrences of an aggregation field value.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct TermsAggregation {
    /// <p>The number of buckets to return in the response. Default to 10.</p>
    #[doc(hidden)]
    pub max_buckets: i32,
}
impl TermsAggregation {
    /// <p>The number of buckets to return in the response. Default to 10.</p>
    pub fn max_buckets(&self) -> i32 {
        self.max_buckets
    }
}
impl TermsAggregation {
    /// Creates a new builder-style object to manufacture [`TermsAggregation`](crate::types::TermsAggregation).
    pub fn builder() -> crate::types::builders::TermsAggregationBuilder {
        crate::types::builders::TermsAggregationBuilder::default()
    }
}

/// A builder for [`TermsAggregation`](crate::types::TermsAggregation).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct TermsAggregationBuilder {
    pub(crate) max_buckets: std::option::Option<i32>,
}
impl TermsAggregationBuilder {
    /// <p>The number of buckets to return in the response. Default to 10.</p>
    pub fn max_buckets(mut self, input: i32) -> Self {
        self.max_buckets = Some(input);
        self
    }
    /// <p>The number of buckets to return in the response. Default to 10.</p>
    pub fn set_max_buckets(mut self, input: std::option::Option<i32>) -> Self {
        self.max_buckets = input;
        self
    }
    /// Consumes the builder and constructs a [`TermsAggregation`](crate::types::TermsAggregation).
    pub fn build(self) -> crate::types::TermsAggregation {
        crate::types::TermsAggregation {
            max_buckets: self.max_buckets.unwrap_or_default(),
        }
    }
}
