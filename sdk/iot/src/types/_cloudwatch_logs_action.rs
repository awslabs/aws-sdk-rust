// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Describes an action that sends data to CloudWatch Logs.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct CloudwatchLogsAction {
    /// <p>The IAM role that allows access to the CloudWatch log.</p>
    #[doc(hidden)]
    pub role_arn: std::option::Option<std::string::String>,
    /// <p>The CloudWatch log group to which the action sends data.</p>
    #[doc(hidden)]
    pub log_group_name: std::option::Option<std::string::String>,
}
impl CloudwatchLogsAction {
    /// <p>The IAM role that allows access to the CloudWatch log.</p>
    pub fn role_arn(&self) -> std::option::Option<&str> {
        self.role_arn.as_deref()
    }
    /// <p>The CloudWatch log group to which the action sends data.</p>
    pub fn log_group_name(&self) -> std::option::Option<&str> {
        self.log_group_name.as_deref()
    }
}
impl CloudwatchLogsAction {
    /// Creates a new builder-style object to manufacture [`CloudwatchLogsAction`](crate::types::CloudwatchLogsAction).
    pub fn builder() -> crate::types::builders::CloudwatchLogsActionBuilder {
        crate::types::builders::CloudwatchLogsActionBuilder::default()
    }
}

/// A builder for [`CloudwatchLogsAction`](crate::types::CloudwatchLogsAction).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct CloudwatchLogsActionBuilder {
    pub(crate) role_arn: std::option::Option<std::string::String>,
    pub(crate) log_group_name: std::option::Option<std::string::String>,
}
impl CloudwatchLogsActionBuilder {
    /// <p>The IAM role that allows access to the CloudWatch log.</p>
    pub fn role_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.role_arn = Some(input.into());
        self
    }
    /// <p>The IAM role that allows access to the CloudWatch log.</p>
    pub fn set_role_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.role_arn = input;
        self
    }
    /// <p>The CloudWatch log group to which the action sends data.</p>
    pub fn log_group_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.log_group_name = Some(input.into());
        self
    }
    /// <p>The CloudWatch log group to which the action sends data.</p>
    pub fn set_log_group_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.log_group_name = input;
        self
    }
    /// Consumes the builder and constructs a [`CloudwatchLogsAction`](crate::types::CloudwatchLogsAction).
    pub fn build(self) -> crate::types::CloudwatchLogsAction {
        crate::types::CloudwatchLogsAction {
            role_arn: self.role_arn,
            log_group_name: self.log_group_name,
        }
    }
}
