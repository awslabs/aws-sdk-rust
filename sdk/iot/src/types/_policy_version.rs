// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Describes a policy version.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct PolicyVersion {
    /// <p>The policy version ID.</p>
    #[doc(hidden)]
    pub version_id: std::option::Option<std::string::String>,
    /// <p>Specifies whether the policy version is the default.</p>
    #[doc(hidden)]
    pub is_default_version: bool,
    /// <p>The date and time the policy was created.</p>
    #[doc(hidden)]
    pub create_date: std::option::Option<aws_smithy_types::DateTime>,
}
impl PolicyVersion {
    /// <p>The policy version ID.</p>
    pub fn version_id(&self) -> std::option::Option<&str> {
        self.version_id.as_deref()
    }
    /// <p>Specifies whether the policy version is the default.</p>
    pub fn is_default_version(&self) -> bool {
        self.is_default_version
    }
    /// <p>The date and time the policy was created.</p>
    pub fn create_date(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.create_date.as_ref()
    }
}
impl PolicyVersion {
    /// Creates a new builder-style object to manufacture [`PolicyVersion`](crate::types::PolicyVersion).
    pub fn builder() -> crate::types::builders::PolicyVersionBuilder {
        crate::types::builders::PolicyVersionBuilder::default()
    }
}

/// A builder for [`PolicyVersion`](crate::types::PolicyVersion).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct PolicyVersionBuilder {
    pub(crate) version_id: std::option::Option<std::string::String>,
    pub(crate) is_default_version: std::option::Option<bool>,
    pub(crate) create_date: std::option::Option<aws_smithy_types::DateTime>,
}
impl PolicyVersionBuilder {
    /// <p>The policy version ID.</p>
    pub fn version_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.version_id = Some(input.into());
        self
    }
    /// <p>The policy version ID.</p>
    pub fn set_version_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.version_id = input;
        self
    }
    /// <p>Specifies whether the policy version is the default.</p>
    pub fn is_default_version(mut self, input: bool) -> Self {
        self.is_default_version = Some(input);
        self
    }
    /// <p>Specifies whether the policy version is the default.</p>
    pub fn set_is_default_version(mut self, input: std::option::Option<bool>) -> Self {
        self.is_default_version = input;
        self
    }
    /// <p>The date and time the policy was created.</p>
    pub fn create_date(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.create_date = Some(input);
        self
    }
    /// <p>The date and time the policy was created.</p>
    pub fn set_create_date(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.create_date = input;
        self
    }
    /// Consumes the builder and constructs a [`PolicyVersion`](crate::types::PolicyVersion).
    pub fn build(self) -> crate::types::PolicyVersion {
        crate::types::PolicyVersion {
            version_id: self.version_id,
            is_default_version: self.is_default_version.unwrap_or_default(),
            create_date: self.create_date,
        }
    }
}
