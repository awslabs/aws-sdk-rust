// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p> The summary of an ML Detect behavior model. </p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct BehaviorModelTrainingSummary {
    /// <p> The name of the security profile. </p>
    #[doc(hidden)]
    pub security_profile_name: std::option::Option<std::string::String>,
    /// <p> The name of the behavior. </p>
    #[doc(hidden)]
    pub behavior_name: std::option::Option<std::string::String>,
    /// <p> The date a training model started collecting data. </p>
    #[doc(hidden)]
    pub training_data_collection_start_date: std::option::Option<aws_smithy_types::DateTime>,
    /// <p> The status of the behavior model. </p>
    #[doc(hidden)]
    pub model_status: std::option::Option<crate::types::ModelStatus>,
    /// <p> The percentage of datapoints collected. </p>
    #[doc(hidden)]
    pub datapoints_collection_percentage: std::option::Option<f64>,
    /// <p> The date the model was last refreshed. </p>
    #[doc(hidden)]
    pub last_model_refresh_date: std::option::Option<aws_smithy_types::DateTime>,
}
impl BehaviorModelTrainingSummary {
    /// <p> The name of the security profile. </p>
    pub fn security_profile_name(&self) -> std::option::Option<&str> {
        self.security_profile_name.as_deref()
    }
    /// <p> The name of the behavior. </p>
    pub fn behavior_name(&self) -> std::option::Option<&str> {
        self.behavior_name.as_deref()
    }
    /// <p> The date a training model started collecting data. </p>
    pub fn training_data_collection_start_date(
        &self,
    ) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.training_data_collection_start_date.as_ref()
    }
    /// <p> The status of the behavior model. </p>
    pub fn model_status(&self) -> std::option::Option<&crate::types::ModelStatus> {
        self.model_status.as_ref()
    }
    /// <p> The percentage of datapoints collected. </p>
    pub fn datapoints_collection_percentage(&self) -> std::option::Option<f64> {
        self.datapoints_collection_percentage
    }
    /// <p> The date the model was last refreshed. </p>
    pub fn last_model_refresh_date(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.last_model_refresh_date.as_ref()
    }
}
impl BehaviorModelTrainingSummary {
    /// Creates a new builder-style object to manufacture [`BehaviorModelTrainingSummary`](crate::types::BehaviorModelTrainingSummary).
    pub fn builder() -> crate::types::builders::BehaviorModelTrainingSummaryBuilder {
        crate::types::builders::BehaviorModelTrainingSummaryBuilder::default()
    }
}

/// A builder for [`BehaviorModelTrainingSummary`](crate::types::BehaviorModelTrainingSummary).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct BehaviorModelTrainingSummaryBuilder {
    pub(crate) security_profile_name: std::option::Option<std::string::String>,
    pub(crate) behavior_name: std::option::Option<std::string::String>,
    pub(crate) training_data_collection_start_date: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) model_status: std::option::Option<crate::types::ModelStatus>,
    pub(crate) datapoints_collection_percentage: std::option::Option<f64>,
    pub(crate) last_model_refresh_date: std::option::Option<aws_smithy_types::DateTime>,
}
impl BehaviorModelTrainingSummaryBuilder {
    /// <p> The name of the security profile. </p>
    pub fn security_profile_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.security_profile_name = Some(input.into());
        self
    }
    /// <p> The name of the security profile. </p>
    pub fn set_security_profile_name(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.security_profile_name = input;
        self
    }
    /// <p> The name of the behavior. </p>
    pub fn behavior_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.behavior_name = Some(input.into());
        self
    }
    /// <p> The name of the behavior. </p>
    pub fn set_behavior_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.behavior_name = input;
        self
    }
    /// <p> The date a training model started collecting data. </p>
    pub fn training_data_collection_start_date(
        mut self,
        input: aws_smithy_types::DateTime,
    ) -> Self {
        self.training_data_collection_start_date = Some(input);
        self
    }
    /// <p> The date a training model started collecting data. </p>
    pub fn set_training_data_collection_start_date(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.training_data_collection_start_date = input;
        self
    }
    /// <p> The status of the behavior model. </p>
    pub fn model_status(mut self, input: crate::types::ModelStatus) -> Self {
        self.model_status = Some(input);
        self
    }
    /// <p> The status of the behavior model. </p>
    pub fn set_model_status(
        mut self,
        input: std::option::Option<crate::types::ModelStatus>,
    ) -> Self {
        self.model_status = input;
        self
    }
    /// <p> The percentage of datapoints collected. </p>
    pub fn datapoints_collection_percentage(mut self, input: f64) -> Self {
        self.datapoints_collection_percentage = Some(input);
        self
    }
    /// <p> The percentage of datapoints collected. </p>
    pub fn set_datapoints_collection_percentage(mut self, input: std::option::Option<f64>) -> Self {
        self.datapoints_collection_percentage = input;
        self
    }
    /// <p> The date the model was last refreshed. </p>
    pub fn last_model_refresh_date(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.last_model_refresh_date = Some(input);
        self
    }
    /// <p> The date the model was last refreshed. </p>
    pub fn set_last_model_refresh_date(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.last_model_refresh_date = input;
        self
    }
    /// Consumes the builder and constructs a [`BehaviorModelTrainingSummary`](crate::types::BehaviorModelTrainingSummary).
    pub fn build(self) -> crate::types::BehaviorModelTrainingSummary {
        crate::types::BehaviorModelTrainingSummary {
            security_profile_name: self.security_profile_name,
            behavior_name: self.behavior_name,
            training_data_collection_start_date: self.training_data_collection_start_date,
            model_status: self.model_status,
            datapoints_collection_percentage: self.datapoints_collection_percentage,
            last_model_refresh_date: self.last_model_refresh_date,
        }
    }
}
