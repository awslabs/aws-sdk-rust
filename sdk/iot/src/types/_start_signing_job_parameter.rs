// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information required to start a signing job.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct StartSigningJobParameter {
    /// <p>Describes the code-signing profile.</p>
    #[doc(hidden)]
    pub signing_profile_parameter: std::option::Option<crate::types::SigningProfileParameter>,
    /// <p>The code-signing profile name.</p>
    #[doc(hidden)]
    pub signing_profile_name: std::option::Option<std::string::String>,
    /// <p>The location to write the code-signed file.</p>
    #[doc(hidden)]
    pub destination: std::option::Option<crate::types::Destination>,
}
impl StartSigningJobParameter {
    /// <p>Describes the code-signing profile.</p>
    pub fn signing_profile_parameter(
        &self,
    ) -> std::option::Option<&crate::types::SigningProfileParameter> {
        self.signing_profile_parameter.as_ref()
    }
    /// <p>The code-signing profile name.</p>
    pub fn signing_profile_name(&self) -> std::option::Option<&str> {
        self.signing_profile_name.as_deref()
    }
    /// <p>The location to write the code-signed file.</p>
    pub fn destination(&self) -> std::option::Option<&crate::types::Destination> {
        self.destination.as_ref()
    }
}
impl StartSigningJobParameter {
    /// Creates a new builder-style object to manufacture [`StartSigningJobParameter`](crate::types::StartSigningJobParameter).
    pub fn builder() -> crate::types::builders::StartSigningJobParameterBuilder {
        crate::types::builders::StartSigningJobParameterBuilder::default()
    }
}

/// A builder for [`StartSigningJobParameter`](crate::types::StartSigningJobParameter).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct StartSigningJobParameterBuilder {
    pub(crate) signing_profile_parameter:
        std::option::Option<crate::types::SigningProfileParameter>,
    pub(crate) signing_profile_name: std::option::Option<std::string::String>,
    pub(crate) destination: std::option::Option<crate::types::Destination>,
}
impl StartSigningJobParameterBuilder {
    /// <p>Describes the code-signing profile.</p>
    pub fn signing_profile_parameter(
        mut self,
        input: crate::types::SigningProfileParameter,
    ) -> Self {
        self.signing_profile_parameter = Some(input);
        self
    }
    /// <p>Describes the code-signing profile.</p>
    pub fn set_signing_profile_parameter(
        mut self,
        input: std::option::Option<crate::types::SigningProfileParameter>,
    ) -> Self {
        self.signing_profile_parameter = input;
        self
    }
    /// <p>The code-signing profile name.</p>
    pub fn signing_profile_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.signing_profile_name = Some(input.into());
        self
    }
    /// <p>The code-signing profile name.</p>
    pub fn set_signing_profile_name(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.signing_profile_name = input;
        self
    }
    /// <p>The location to write the code-signed file.</p>
    pub fn destination(mut self, input: crate::types::Destination) -> Self {
        self.destination = Some(input);
        self
    }
    /// <p>The location to write the code-signed file.</p>
    pub fn set_destination(
        mut self,
        input: std::option::Option<crate::types::Destination>,
    ) -> Self {
        self.destination = input;
        self
    }
    /// Consumes the builder and constructs a [`StartSigningJobParameter`](crate::types::StartSigningJobParameter).
    pub fn build(self) -> crate::types::StartSigningJobParameter {
        crate::types::StartSigningJobParameter {
            signing_profile_parameter: self.signing_profile_parameter,
            signing_profile_name: self.signing_profile_name,
            destination: self.destination,
        }
    }
}
