// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_list_audit_findings_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::list_audit_findings::ListAuditFindingsInput,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.check_name {
        object.key("checkName").string(var_1.as_str());
    }
    if let Some(var_2) = &input.end_time {
        object
            .key("endTime")
            .date_time(var_2, ::aws_smithy_types::date_time::Format::EpochSeconds)?;
    }
    if let Some(var_3) = &input.list_suppressed_findings {
        object.key("listSuppressedFindings").boolean(*var_3);
    }
    if let Some(var_4) = &input.max_results {
        object.key("maxResults").number(
            #[allow(clippy::useless_conversion)]
            ::aws_smithy_types::Number::NegInt((*var_4).into()),
        );
    }
    if let Some(var_5) = &input.next_token {
        object.key("nextToken").string(var_5.as_str());
    }
    if let Some(var_6) = &input.resource_identifier {
        #[allow(unused_mut)]
        let mut object_7 = object.key("resourceIdentifier").start_object();
        crate::protocol_serde::shape_resource_identifier::ser_resource_identifier(&mut object_7, var_6)?;
        object_7.finish();
    }
    if let Some(var_8) = &input.start_time {
        object
            .key("startTime")
            .date_time(var_8, ::aws_smithy_types::date_time::Format::EpochSeconds)?;
    }
    if let Some(var_9) = &input.task_id {
        object.key("taskId").string(var_9.as_str());
    }
    Ok(())
}
