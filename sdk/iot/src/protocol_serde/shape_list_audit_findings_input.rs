// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_list_audit_findings_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::list_audit_findings::ListAuditFindingsInput,
) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    if let Some(var_1) = &input.check_name {
        object.key("checkName").string(var_1.as_str());
    }
    if let Some(var_2) = &input.end_time {
        object
            .key("endTime")
            .date_time(var_2, aws_smithy_types::date_time::Format::EpochSeconds)?;
    }
    if input.list_suppressed_findings {
        object
            .key("listSuppressedFindings")
            .boolean(input.list_suppressed_findings);
    }
    if let Some(var_3) = &input.max_results {
        object.key("maxResults").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_3).into()),
        );
    }
    if let Some(var_4) = &input.next_token {
        object.key("nextToken").string(var_4.as_str());
    }
    if let Some(var_5) = &input.resource_identifier {
        #[allow(unused_mut)]
        let mut object_6 = object.key("resourceIdentifier").start_object();
        crate::protocol_serde::shape_resource_identifier::ser_resource_identifier(
            &mut object_6,
            var_5,
        )?;
        object_6.finish();
    }
    if let Some(var_7) = &input.start_time {
        object
            .key("startTime")
            .date_time(var_7, aws_smithy_types::date_time::Format::EpochSeconds)?;
    }
    if let Some(var_8) = &input.task_id {
        object.key("taskId").string(var_8.as_str());
    }
    Ok(())
}
