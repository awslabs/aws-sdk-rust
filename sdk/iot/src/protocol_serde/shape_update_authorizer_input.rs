// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_update_authorizer_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::update_authorizer::UpdateAuthorizerInput,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.authorizer_function_arn {
        object.key("authorizerFunctionArn").string(var_1.as_str());
    }
    if let Some(var_2) = &input.enable_caching_for_http {
        object.key("enableCachingForHttp").boolean(*var_2);
    }
    if let Some(var_3) = &input.status {
        object.key("status").string(var_3.as_str());
    }
    if let Some(var_4) = &input.token_key_name {
        object.key("tokenKeyName").string(var_4.as_str());
    }
    if let Some(var_5) = &input.token_signing_public_keys {
        #[allow(unused_mut)]
        let mut object_6 = object.key("tokenSigningPublicKeys").start_object();
        for (key_7, value_8) in var_5 {
            {
                object_6.key(key_7.as_str()).string(value_8.as_str());
            }
        }
        object_6.finish();
    }
    Ok(())
}
