// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_register_ca_certificate_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::register_ca_certificate::RegisterCaCertificateInput,
) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    if let Some(var_1) = &input.ca_certificate {
        object.key("caCertificate").string(var_1.as_str());
    }
    if let Some(var_2) = &input.certificate_mode {
        object.key("certificateMode").string(var_2.as_str());
    }
    if let Some(var_3) = &input.registration_config {
        #[allow(unused_mut)]
        let mut object_4 = object.key("registrationConfig").start_object();
        crate::protocol_serde::shape_registration_config::ser_registration_config(
            &mut object_4,
            var_3,
        )?;
        object_4.finish();
    }
    if let Some(var_5) = &input.tags {
        let mut array_6 = object.key("tags").start_array();
        for item_7 in var_5 {
            {
                #[allow(unused_mut)]
                let mut object_8 = array_6.value().start_object();
                crate::protocol_serde::shape_tag::ser_tag(&mut object_8, item_7)?;
                object_8.finish();
            }
        }
        array_6.finish();
    }
    if let Some(var_9) = &input.verification_certificate {
        object.key("verificationCertificate").string(var_9.as_str());
    }
    Ok(())
}
