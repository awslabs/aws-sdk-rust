// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_update_account_audit_configuration_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::update_account_audit_configuration::UpdateAccountAuditConfigurationInput,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.audit_check_configurations {
        #[allow(unused_mut)]
        let mut object_2 = object.key("auditCheckConfigurations").start_object();
        for (key_3, value_4) in var_1 {
            {
                #[allow(unused_mut)]
                let mut object_5 = object_2.key(key_3.as_str()).start_object();
                crate::protocol_serde::shape_audit_check_configuration::ser_audit_check_configuration(&mut object_5, value_4)?;
                object_5.finish();
            }
        }
        object_2.finish();
    }
    if let Some(var_6) = &input.audit_notification_target_configurations {
        #[allow(unused_mut)]
        let mut object_7 = object.key("auditNotificationTargetConfigurations").start_object();
        for (key_8, value_9) in var_6 {
            {
                #[allow(unused_mut)]
                let mut object_10 = object_7.key(key_8.as_str()).start_object();
                crate::protocol_serde::shape_audit_notification_target::ser_audit_notification_target(&mut object_10, value_9)?;
                object_10.finish();
            }
        }
        object_7.finish();
    }
    if let Some(var_11) = &input.role_arn {
        object.key("roleArn").string(var_11.as_str());
    }
    Ok(())
}
