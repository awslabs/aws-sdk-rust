// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetProviderService`](crate::operation::get_provider_service::builders::GetProviderServiceFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`provider_name(impl Into<String>)`](crate::operation::get_provider_service::builders::GetProviderServiceFluentBuilder::provider_name) / [`set_provider_name(Option<String>)`](crate::operation::get_provider_service::builders::GetProviderServiceFluentBuilder::set_provider_name):<br>required: **true**<br><p>The name of the provider. This name is typically the company name.</p><br>
    ///   - [`provider_service_name(impl Into<String>)`](crate::operation::get_provider_service::builders::GetProviderServiceFluentBuilder::provider_service_name) / [`set_provider_service_name(Option<String>)`](crate::operation::get_provider_service::builders::GetProviderServiceFluentBuilder::set_provider_service_name):<br>required: **true**<br><p>The ARN (Amazon Resource Name) of the product that the provider service provides.</p><br>
    /// - On success, responds with [`GetProviderServiceOutput`](crate::operation::get_provider_service::GetProviderServiceOutput) with field(s):
    ///   - [`provider_name(String)`](crate::operation::get_provider_service::GetProviderServiceOutput::provider_name): <p>The name of the provider. This name is typically the company name.</p>
    ///   - [`provider_service_name(String)`](crate::operation::get_provider_service::GetProviderServiceOutput::provider_service_name): <p>The name of the product that the provider service provides. </p>
    ///   - [`provider_service_display_name(String)`](crate::operation::get_provider_service::GetProviderServiceOutput::provider_service_display_name): <p>The display name of the provider service.</p>
    ///   - [`provider_service_type(ServiceType)`](crate::operation::get_provider_service::GetProviderServiceOutput::provider_service_type): <p>The type of provider service.</p>
    ///   - [`provider_service_arn(String)`](crate::operation::get_provider_service::GetProviderServiceOutput::provider_service_arn): <p>The ARN (Amazon Resource Name) that Entity Resolution generated for the provider service.</p>
    ///   - [`provider_configuration_definition(Option<Document>)`](crate::operation::get_provider_service::GetProviderServiceOutput::provider_configuration_definition): <p>The definition of the provider configuration.</p>
    ///   - [`provider_endpoint_configuration(Option<ProviderEndpointConfiguration>)`](crate::operation::get_provider_service::GetProviderServiceOutput::provider_endpoint_configuration): <p>The required configuration fields to use with the provider service.</p>
    ///   - [`anonymized_output(bool)`](crate::operation::get_provider_service::GetProviderServiceOutput::anonymized_output): <p>Specifies whether output data from the provider is anonymized. A value of <code>TRUE</code> means the output will be anonymized and you can't relate the data that comes back from the provider to the identifying input. A value of <code>FALSE</code> means the output won't be anonymized and you can relate the data that comes back from the provider to your source data. </p>
    ///   - [`provider_entity_output_definition(Document)`](crate::operation::get_provider_service::GetProviderServiceOutput::provider_entity_output_definition): <p>The definition of the provider entity output.</p>
    ///   - [`provider_intermediate_data_access_configuration(Option<ProviderIntermediateDataAccessConfiguration>)`](crate::operation::get_provider_service::GetProviderServiceOutput::provider_intermediate_data_access_configuration): <p>The Amazon Web Services accounts and the S3 permissions that are required by some providers to create an S3 bucket for intermediate data storage.</p>
    /// - On failure, responds with [`SdkError<GetProviderServiceError>`](crate::operation::get_provider_service::GetProviderServiceError)
    pub fn get_provider_service(&self) -> crate::operation::get_provider_service::builders::GetProviderServiceFluentBuilder {
        crate::operation::get_provider_service::builders::GetProviderServiceFluentBuilder::new(self.handle.clone())
    }
}
