// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeletePolicyStatement`](crate::operation::delete_policy_statement::builders::DeletePolicyStatementFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`arn(impl Into<String>)`](crate::operation::delete_policy_statement::builders::DeletePolicyStatementFluentBuilder::arn) / [`set_arn(Option<String>)`](crate::operation::delete_policy_statement::builders::DeletePolicyStatementFluentBuilder::set_arn):<br>required: **true**<br><p>The ARN of the resource for which the policy need to be deleted.</p><br>
    ///   - [`statement_id(impl Into<String>)`](crate::operation::delete_policy_statement::builders::DeletePolicyStatementFluentBuilder::statement_id) / [`set_statement_id(Option<String>)`](crate::operation::delete_policy_statement::builders::DeletePolicyStatementFluentBuilder::set_statement_id):<br>required: **true**<br><p>A statement identifier that differentiates the statement from others in the same policy.</p><br>
    /// - On success, responds with [`DeletePolicyStatementOutput`](crate::operation::delete_policy_statement::DeletePolicyStatementOutput) with field(s):
    ///   - [`arn(String)`](crate::operation::delete_policy_statement::DeletePolicyStatementOutput::arn): <p>The ARN of the resource for which the policy need to be deleted.</p>
    ///   - [`token(String)`](crate::operation::delete_policy_statement::DeletePolicyStatementOutput::token): <p>A unique identifier for the deleted policy.</p>
    ///   - [`policy(Option<String>)`](crate::operation::delete_policy_statement::DeletePolicyStatementOutput::policy): <p>The resource-based policy.</p>
    /// - On failure, responds with [`SdkError<DeletePolicyStatementError>`](crate::operation::delete_policy_statement::DeletePolicyStatementError)
    pub fn delete_policy_statement(&self) -> crate::operation::delete_policy_statement::builders::DeletePolicyStatementFluentBuilder {
        crate::operation::delete_policy_statement::builders::DeletePolicyStatementFluentBuilder::new(self.handle.clone())
    }
}
