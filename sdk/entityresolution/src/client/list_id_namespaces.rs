// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListIdNamespaces`](crate::operation::list_id_namespaces::builders::ListIdNamespacesFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::list_id_namespaces::builders::ListIdNamespacesFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`next_token(impl Into<String>)`](crate::operation::list_id_namespaces::builders::ListIdNamespacesFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::list_id_namespaces::builders::ListIdNamespacesFluentBuilder::set_next_token):<br>required: **false**<br><p>The pagination token from the previous API call.</p><br>
    ///   - [`max_results(i32)`](crate::operation::list_id_namespaces::builders::ListIdNamespacesFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::list_id_namespaces::builders::ListIdNamespacesFluentBuilder::set_max_results):<br>required: **false**<br><p>The maximum number of <code>IdNamespace</code> objects returned per page.</p><br>
    /// - On success, responds with [`ListIdNamespacesOutput`](crate::operation::list_id_namespaces::ListIdNamespacesOutput) with field(s):
    ///   - [`id_namespace_summaries(Option<Vec::<IdNamespaceSummary>>)`](crate::operation::list_id_namespaces::ListIdNamespacesOutput::id_namespace_summaries): <p>A list of <code>IdNamespaceSummaries</code> objects.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::list_id_namespaces::ListIdNamespacesOutput::next_token): <p>The pagination token from the previous API call.</p>
    /// - On failure, responds with [`SdkError<ListIdNamespacesError>`](crate::operation::list_id_namespaces::ListIdNamespacesError)
    pub fn list_id_namespaces(&self) -> crate::operation::list_id_namespaces::builders::ListIdNamespacesFluentBuilder {
        crate::operation::list_id_namespaces::builders::ListIdNamespacesFluentBuilder::new(self.handle.clone())
    }
}
