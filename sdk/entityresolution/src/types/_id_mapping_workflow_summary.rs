// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A list of <code>IdMappingWorkflowSummary</code> objects, each of which contain the fields <code>WorkflowName</code>, <code>WorkflowArn</code>, <code>CreatedAt</code>, and <code>UpdatedAt</code>.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct IdMappingWorkflowSummary {
    /// <p>The name of the workflow.</p>
    pub workflow_name: ::std::string::String,
    /// <p>The ARN (Amazon Resource Name) that Entity Resolution generated for the <code>IdMappingWorkflow</code>.</p>
    pub workflow_arn: ::std::string::String,
    /// <p>The timestamp of when the workflow was created.</p>
    pub created_at: ::aws_smithy_types::DateTime,
    /// <p>The timestamp of when the workflow was last updated.</p>
    pub updated_at: ::aws_smithy_types::DateTime,
}
impl IdMappingWorkflowSummary {
    /// <p>The name of the workflow.</p>
    pub fn workflow_name(&self) -> &str {
        use std::ops::Deref;
        self.workflow_name.deref()
    }
    /// <p>The ARN (Amazon Resource Name) that Entity Resolution generated for the <code>IdMappingWorkflow</code>.</p>
    pub fn workflow_arn(&self) -> &str {
        use std::ops::Deref;
        self.workflow_arn.deref()
    }
    /// <p>The timestamp of when the workflow was created.</p>
    pub fn created_at(&self) -> &::aws_smithy_types::DateTime {
        &self.created_at
    }
    /// <p>The timestamp of when the workflow was last updated.</p>
    pub fn updated_at(&self) -> &::aws_smithy_types::DateTime {
        &self.updated_at
    }
}
impl IdMappingWorkflowSummary {
    /// Creates a new builder-style object to manufacture [`IdMappingWorkflowSummary`](crate::types::IdMappingWorkflowSummary).
    pub fn builder() -> crate::types::builders::IdMappingWorkflowSummaryBuilder {
        crate::types::builders::IdMappingWorkflowSummaryBuilder::default()
    }
}

/// A builder for [`IdMappingWorkflowSummary`](crate::types::IdMappingWorkflowSummary).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct IdMappingWorkflowSummaryBuilder {
    pub(crate) workflow_name: ::std::option::Option<::std::string::String>,
    pub(crate) workflow_arn: ::std::option::Option<::std::string::String>,
    pub(crate) created_at: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) updated_at: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl IdMappingWorkflowSummaryBuilder {
    /// <p>The name of the workflow.</p>
    /// This field is required.
    pub fn workflow_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.workflow_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the workflow.</p>
    pub fn set_workflow_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.workflow_name = input;
        self
    }
    /// <p>The name of the workflow.</p>
    pub fn get_workflow_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.workflow_name
    }
    /// <p>The ARN (Amazon Resource Name) that Entity Resolution generated for the <code>IdMappingWorkflow</code>.</p>
    /// This field is required.
    pub fn workflow_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.workflow_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ARN (Amazon Resource Name) that Entity Resolution generated for the <code>IdMappingWorkflow</code>.</p>
    pub fn set_workflow_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.workflow_arn = input;
        self
    }
    /// <p>The ARN (Amazon Resource Name) that Entity Resolution generated for the <code>IdMappingWorkflow</code>.</p>
    pub fn get_workflow_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.workflow_arn
    }
    /// <p>The timestamp of when the workflow was created.</p>
    /// This field is required.
    pub fn created_at(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.created_at = ::std::option::Option::Some(input);
        self
    }
    /// <p>The timestamp of when the workflow was created.</p>
    pub fn set_created_at(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.created_at = input;
        self
    }
    /// <p>The timestamp of when the workflow was created.</p>
    pub fn get_created_at(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.created_at
    }
    /// <p>The timestamp of when the workflow was last updated.</p>
    /// This field is required.
    pub fn updated_at(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.updated_at = ::std::option::Option::Some(input);
        self
    }
    /// <p>The timestamp of when the workflow was last updated.</p>
    pub fn set_updated_at(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.updated_at = input;
        self
    }
    /// <p>The timestamp of when the workflow was last updated.</p>
    pub fn get_updated_at(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.updated_at
    }
    /// Consumes the builder and constructs a [`IdMappingWorkflowSummary`](crate::types::IdMappingWorkflowSummary).
    /// This method will fail if any of the following fields are not set:
    /// - [`workflow_name`](crate::types::builders::IdMappingWorkflowSummaryBuilder::workflow_name)
    /// - [`workflow_arn`](crate::types::builders::IdMappingWorkflowSummaryBuilder::workflow_arn)
    /// - [`created_at`](crate::types::builders::IdMappingWorkflowSummaryBuilder::created_at)
    /// - [`updated_at`](crate::types::builders::IdMappingWorkflowSummaryBuilder::updated_at)
    pub fn build(self) -> ::std::result::Result<crate::types::IdMappingWorkflowSummary, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::IdMappingWorkflowSummary {
            workflow_name: self.workflow_name.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "workflow_name",
                    "workflow_name was not specified but it is required when building IdMappingWorkflowSummary",
                )
            })?,
            workflow_arn: self.workflow_arn.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "workflow_arn",
                    "workflow_arn was not specified but it is required when building IdMappingWorkflowSummary",
                )
            })?,
            created_at: self.created_at.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "created_at",
                    "created_at was not specified but it is required when building IdMappingWorkflowSummary",
                )
            })?,
            updated_at: self.updated_at.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "updated_at",
                    "updated_at was not specified but it is required when building IdMappingWorkflowSummary",
                )
            })?,
        })
    }
}
