// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>An object containing <code>KMSArn</code>, <code>OutputS3Path</code>, and <code>RoleARN</code>.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct IdMappingJobOutputSource {
    /// <p>The Amazon Resource Name (ARN) of the IAM role. Entity Resolution assumes this role to access Amazon Web Services resources on your behalf as part of workflow execution.</p>
    pub role_arn: ::std::string::String,
    /// <p>The S3 path to which Entity Resolution will write the output table.</p>
    pub output_s3_path: ::std::string::String,
    /// <p>Customer KMS ARN for encryption at rest. If not provided, system will use an Entity Resolution managed KMS key.</p>
    pub kms_arn: ::std::option::Option<::std::string::String>,
}
impl IdMappingJobOutputSource {
    /// <p>The Amazon Resource Name (ARN) of the IAM role. Entity Resolution assumes this role to access Amazon Web Services resources on your behalf as part of workflow execution.</p>
    pub fn role_arn(&self) -> &str {
        use std::ops::Deref;
        self.role_arn.deref()
    }
    /// <p>The S3 path to which Entity Resolution will write the output table.</p>
    pub fn output_s3_path(&self) -> &str {
        use std::ops::Deref;
        self.output_s3_path.deref()
    }
    /// <p>Customer KMS ARN for encryption at rest. If not provided, system will use an Entity Resolution managed KMS key.</p>
    pub fn kms_arn(&self) -> ::std::option::Option<&str> {
        self.kms_arn.as_deref()
    }
}
impl IdMappingJobOutputSource {
    /// Creates a new builder-style object to manufacture [`IdMappingJobOutputSource`](crate::types::IdMappingJobOutputSource).
    pub fn builder() -> crate::types::builders::IdMappingJobOutputSourceBuilder {
        crate::types::builders::IdMappingJobOutputSourceBuilder::default()
    }
}

/// A builder for [`IdMappingJobOutputSource`](crate::types::IdMappingJobOutputSource).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct IdMappingJobOutputSourceBuilder {
    pub(crate) role_arn: ::std::option::Option<::std::string::String>,
    pub(crate) output_s3_path: ::std::option::Option<::std::string::String>,
    pub(crate) kms_arn: ::std::option::Option<::std::string::String>,
}
impl IdMappingJobOutputSourceBuilder {
    /// <p>The Amazon Resource Name (ARN) of the IAM role. Entity Resolution assumes this role to access Amazon Web Services resources on your behalf as part of workflow execution.</p>
    /// This field is required.
    pub fn role_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.role_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the IAM role. Entity Resolution assumes this role to access Amazon Web Services resources on your behalf as part of workflow execution.</p>
    pub fn set_role_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.role_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the IAM role. Entity Resolution assumes this role to access Amazon Web Services resources on your behalf as part of workflow execution.</p>
    pub fn get_role_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.role_arn
    }
    /// <p>The S3 path to which Entity Resolution will write the output table.</p>
    /// This field is required.
    pub fn output_s3_path(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.output_s3_path = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The S3 path to which Entity Resolution will write the output table.</p>
    pub fn set_output_s3_path(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.output_s3_path = input;
        self
    }
    /// <p>The S3 path to which Entity Resolution will write the output table.</p>
    pub fn get_output_s3_path(&self) -> &::std::option::Option<::std::string::String> {
        &self.output_s3_path
    }
    /// <p>Customer KMS ARN for encryption at rest. If not provided, system will use an Entity Resolution managed KMS key.</p>
    pub fn kms_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.kms_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Customer KMS ARN for encryption at rest. If not provided, system will use an Entity Resolution managed KMS key.</p>
    pub fn set_kms_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.kms_arn = input;
        self
    }
    /// <p>Customer KMS ARN for encryption at rest. If not provided, system will use an Entity Resolution managed KMS key.</p>
    pub fn get_kms_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.kms_arn
    }
    /// Consumes the builder and constructs a [`IdMappingJobOutputSource`](crate::types::IdMappingJobOutputSource).
    /// This method will fail if any of the following fields are not set:
    /// - [`role_arn`](crate::types::builders::IdMappingJobOutputSourceBuilder::role_arn)
    /// - [`output_s3_path`](crate::types::builders::IdMappingJobOutputSourceBuilder::output_s3_path)
    pub fn build(self) -> ::std::result::Result<crate::types::IdMappingJobOutputSource, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::IdMappingJobOutputSource {
            role_arn: self.role_arn.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "role_arn",
                    "role_arn was not specified but it is required when building IdMappingJobOutputSource",
                )
            })?,
            output_s3_path: self.output_s3_path.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "output_s3_path",
                    "output_s3_path was not specified but it is required when building IdMappingJobOutputSource",
                )
            })?,
            kms_arn: self.kms_arn,
        })
    }
}
