// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_create_id_mapping_workflow_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::create_id_mapping_workflow::CreateIdMappingWorkflowInput,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.description {
        object.key("description").string(var_1.as_str());
    }
    if let Some(var_2) = &input.id_mapping_techniques {
        #[allow(unused_mut)]
        let mut object_3 = object.key("idMappingTechniques").start_object();
        crate::protocol_serde::shape_id_mapping_techniques::ser_id_mapping_techniques(&mut object_3, var_2)?;
        object_3.finish();
    }
    if let Some(var_4) = &input.input_source_config {
        let mut array_5 = object.key("inputSourceConfig").start_array();
        for item_6 in var_4 {
            {
                #[allow(unused_mut)]
                let mut object_7 = array_5.value().start_object();
                crate::protocol_serde::shape_id_mapping_workflow_input_source::ser_id_mapping_workflow_input_source(&mut object_7, item_6)?;
                object_7.finish();
            }
        }
        array_5.finish();
    }
    if let Some(var_8) = &input.output_source_config {
        let mut array_9 = object.key("outputSourceConfig").start_array();
        for item_10 in var_8 {
            {
                #[allow(unused_mut)]
                let mut object_11 = array_9.value().start_object();
                crate::protocol_serde::shape_id_mapping_workflow_output_source::ser_id_mapping_workflow_output_source(&mut object_11, item_10)?;
                object_11.finish();
            }
        }
        array_9.finish();
    }
    if let Some(var_12) = &input.role_arn {
        object.key("roleArn").string(var_12.as_str());
    }
    if let Some(var_13) = &input.tags {
        #[allow(unused_mut)]
        let mut object_14 = object.key("tags").start_object();
        for (key_15, value_16) in var_13 {
            {
                object_14.key(key_15.as_str()).string(value_16.as_str());
            }
        }
        object_14.finish();
    }
    if let Some(var_17) = &input.workflow_name {
        object.key("workflowName").string(var_17.as_str());
    }
    Ok(())
}
