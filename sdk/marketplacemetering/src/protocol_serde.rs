// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) fn type_erase_result<O, E>(
    result: ::std::result::Result<O, E>,
) -> ::std::result::Result<
    ::aws_smithy_runtime_api::client::interceptors::context::Output,
    ::aws_smithy_runtime_api::client::orchestrator::OrchestratorError<::aws_smithy_runtime_api::client::interceptors::context::Error>,
>
where
    O: ::std::fmt::Debug + ::std::marker::Send + ::std::marker::Sync + 'static,
    E: ::std::error::Error + std::fmt::Debug + ::std::marker::Send + ::std::marker::Sync + 'static,
{
    result
        .map(|output| ::aws_smithy_runtime_api::client::interceptors::context::Output::erase(output))
        .map_err(|error| ::aws_smithy_runtime_api::client::interceptors::context::Error::erase(error))
        .map_err(::std::convert::Into::into)
}

pub fn parse_http_error_metadata(
    _response_status: u16,
    response_headers: &::aws_smithy_runtime_api::http::Headers,
    response_body: &[u8],
) -> ::std::result::Result<::aws_smithy_types::error::metadata::Builder, ::aws_smithy_json::deserialize::error::DeserializeError> {
    crate::json_errors::parse_error_metadata(response_body, response_headers)
}

pub(crate) mod shape_batch_meter_usage;

pub(crate) mod shape_meter_usage;

pub(crate) mod shape_register_usage;

pub(crate) mod shape_resolve_customer;

pub(crate) fn or_empty_doc(data: &[u8]) -> &[u8] {
    if data.is_empty() {
        b"{}"
    } else {
        data
    }
}

pub(crate) mod shape_batch_meter_usage_input;

pub(crate) mod shape_customer_not_entitled_exception;

pub(crate) mod shape_disabled_api_exception;

pub(crate) mod shape_duplicate_request_exception;

pub(crate) mod shape_expired_token_exception;

pub(crate) mod shape_idempotency_conflict_exception;

pub(crate) mod shape_internal_service_error_exception;

pub(crate) mod shape_invalid_customer_identifier_exception;

pub(crate) mod shape_invalid_endpoint_region_exception;

pub(crate) mod shape_invalid_product_code_exception;

pub(crate) mod shape_invalid_public_key_version_exception;

pub(crate) mod shape_invalid_region_exception;

pub(crate) mod shape_invalid_tag_exception;

pub(crate) mod shape_invalid_token_exception;

pub(crate) mod shape_invalid_usage_allocations_exception;

pub(crate) mod shape_invalid_usage_dimension_exception;

pub(crate) mod shape_meter_usage_input;

pub(crate) mod shape_platform_not_supported_exception;

pub(crate) mod shape_register_usage_input;

pub(crate) mod shape_resolve_customer_input;

pub(crate) mod shape_throttling_exception;

pub(crate) mod shape_timestamp_out_of_bounds_exception;

pub(crate) mod shape_usage_allocation;

pub(crate) mod shape_usage_record;

pub(crate) mod shape_usage_record_list;

pub(crate) mod shape_usage_record_result_list;

pub(crate) mod shape_tag;

pub(crate) mod shape_usage_record_result;

pub(crate) mod shape_usage_allocations;

pub(crate) mod shape_tag_list;
