// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`BatchMeterUsage`](crate::operation::batch_meter_usage::builders::BatchMeterUsageFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`usage_records(UsageRecord)`](crate::operation::batch_meter_usage::builders::BatchMeterUsageFluentBuilder::usage_records) / [`set_usage_records(Option<Vec::<UsageRecord>>)`](crate::operation::batch_meter_usage::builders::BatchMeterUsageFluentBuilder::set_usage_records):<br>required: **true**<br><p>The set of <code>UsageRecords</code> to submit. <code>BatchMeterUsage</code> accepts up to 25 <code>UsageRecords</code> at a time.</p><br>
    ///   - [`product_code(impl Into<String>)`](crate::operation::batch_meter_usage::builders::BatchMeterUsageFluentBuilder::product_code) / [`set_product_code(Option<String>)`](crate::operation::batch_meter_usage::builders::BatchMeterUsageFluentBuilder::set_product_code):<br>required: **true**<br><p>Product code is used to uniquely identify a product in AWS Marketplace. The product code should be the same as the one used during the publishing of a new product.</p><br>
    /// - On success, responds with [`BatchMeterUsageOutput`](crate::operation::batch_meter_usage::BatchMeterUsageOutput) with field(s):
    ///   - [`results(Option<Vec::<UsageRecordResult>>)`](crate::operation::batch_meter_usage::BatchMeterUsageOutput::results): <p>Contains all <code>UsageRecords</code> processed by <code>BatchMeterUsage</code>. These records were either honored by AWS Marketplace Metering Service or were invalid. Invalid records should be fixed before being resubmitted.</p>
    ///   - [`unprocessed_records(Option<Vec::<UsageRecord>>)`](crate::operation::batch_meter_usage::BatchMeterUsageOutput::unprocessed_records): <p>Contains all <code>UsageRecords</code> that were not processed by <code>BatchMeterUsage</code>. This is a list of <code>UsageRecords</code>. You can retry the failed request by making another <code>BatchMeterUsage</code> call with this list as input in the <code>BatchMeterUsageRequest</code>.</p>
    /// - On failure, responds with [`SdkError<BatchMeterUsageError>`](crate::operation::batch_meter_usage::BatchMeterUsageError)
    pub fn batch_meter_usage(&self) -> crate::operation::batch_meter_usage::builders::BatchMeterUsageFluentBuilder {
        crate::operation::batch_meter_usage::builders::BatchMeterUsageFluentBuilder::new(self.handle.clone())
    }
}
