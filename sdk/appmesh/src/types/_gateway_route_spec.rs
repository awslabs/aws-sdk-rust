// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>An object that represents a gateway route specification. Specify one gateway route type.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GatewayRouteSpec {
    /// <p>The ordering of the gateway routes spec.</p>
    #[doc(hidden)]
    pub priority: std::option::Option<i32>,
    /// <p>An object that represents the specification of an HTTP gateway route.</p>
    #[doc(hidden)]
    pub http_route: std::option::Option<crate::types::HttpGatewayRoute>,
    /// <p>An object that represents the specification of an HTTP/2 gateway route.</p>
    #[doc(hidden)]
    pub http2_route: std::option::Option<crate::types::HttpGatewayRoute>,
    /// <p>An object that represents the specification of a gRPC gateway route.</p>
    #[doc(hidden)]
    pub grpc_route: std::option::Option<crate::types::GrpcGatewayRoute>,
}
impl GatewayRouteSpec {
    /// <p>The ordering of the gateway routes spec.</p>
    pub fn priority(&self) -> std::option::Option<i32> {
        self.priority
    }
    /// <p>An object that represents the specification of an HTTP gateway route.</p>
    pub fn http_route(&self) -> std::option::Option<&crate::types::HttpGatewayRoute> {
        self.http_route.as_ref()
    }
    /// <p>An object that represents the specification of an HTTP/2 gateway route.</p>
    pub fn http2_route(&self) -> std::option::Option<&crate::types::HttpGatewayRoute> {
        self.http2_route.as_ref()
    }
    /// <p>An object that represents the specification of a gRPC gateway route.</p>
    pub fn grpc_route(&self) -> std::option::Option<&crate::types::GrpcGatewayRoute> {
        self.grpc_route.as_ref()
    }
}
impl GatewayRouteSpec {
    /// Creates a new builder-style object to manufacture [`GatewayRouteSpec`](crate::types::GatewayRouteSpec).
    pub fn builder() -> crate::types::builders::GatewayRouteSpecBuilder {
        crate::types::builders::GatewayRouteSpecBuilder::default()
    }
}

/// A builder for [`GatewayRouteSpec`](crate::types::GatewayRouteSpec).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct GatewayRouteSpecBuilder {
    pub(crate) priority: std::option::Option<i32>,
    pub(crate) http_route: std::option::Option<crate::types::HttpGatewayRoute>,
    pub(crate) http2_route: std::option::Option<crate::types::HttpGatewayRoute>,
    pub(crate) grpc_route: std::option::Option<crate::types::GrpcGatewayRoute>,
}
impl GatewayRouteSpecBuilder {
    /// <p>The ordering of the gateway routes spec.</p>
    pub fn priority(mut self, input: i32) -> Self {
        self.priority = Some(input);
        self
    }
    /// <p>The ordering of the gateway routes spec.</p>
    pub fn set_priority(mut self, input: std::option::Option<i32>) -> Self {
        self.priority = input;
        self
    }
    /// <p>An object that represents the specification of an HTTP gateway route.</p>
    pub fn http_route(mut self, input: crate::types::HttpGatewayRoute) -> Self {
        self.http_route = Some(input);
        self
    }
    /// <p>An object that represents the specification of an HTTP gateway route.</p>
    pub fn set_http_route(
        mut self,
        input: std::option::Option<crate::types::HttpGatewayRoute>,
    ) -> Self {
        self.http_route = input;
        self
    }
    /// <p>An object that represents the specification of an HTTP/2 gateway route.</p>
    pub fn http2_route(mut self, input: crate::types::HttpGatewayRoute) -> Self {
        self.http2_route = Some(input);
        self
    }
    /// <p>An object that represents the specification of an HTTP/2 gateway route.</p>
    pub fn set_http2_route(
        mut self,
        input: std::option::Option<crate::types::HttpGatewayRoute>,
    ) -> Self {
        self.http2_route = input;
        self
    }
    /// <p>An object that represents the specification of a gRPC gateway route.</p>
    pub fn grpc_route(mut self, input: crate::types::GrpcGatewayRoute) -> Self {
        self.grpc_route = Some(input);
        self
    }
    /// <p>An object that represents the specification of a gRPC gateway route.</p>
    pub fn set_grpc_route(
        mut self,
        input: std::option::Option<crate::types::GrpcGatewayRoute>,
    ) -> Self {
        self.grpc_route = input;
        self
    }
    /// Consumes the builder and constructs a [`GatewayRouteSpec`](crate::types::GatewayRouteSpec).
    pub fn build(self) -> crate::types::GatewayRouteSpec {
        crate::types::GatewayRouteSpec {
            priority: self.priority,
            http_route: self.http_route,
            http2_route: self.http2_route,
            grpc_route: self.grpc_route,
        }
    }
}
