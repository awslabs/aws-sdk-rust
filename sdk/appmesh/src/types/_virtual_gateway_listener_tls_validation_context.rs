// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>An object that represents a virtual gateway's listener's Transport Layer Security (TLS) validation context.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct VirtualGatewayListenerTlsValidationContext {
    /// <p>A reference to where to retrieve the trust chain when validating a peer’s Transport Layer Security (TLS) certificate.</p>
    #[doc(hidden)]
    pub trust: std::option::Option<crate::types::VirtualGatewayListenerTlsValidationContextTrust>,
    /// <p>A reference to an object that represents the SANs for a virtual gateway listener's Transport Layer Security (TLS) validation context.</p>
    #[doc(hidden)]
    pub subject_alternative_names: std::option::Option<crate::types::SubjectAlternativeNames>,
}
impl VirtualGatewayListenerTlsValidationContext {
    /// <p>A reference to where to retrieve the trust chain when validating a peer’s Transport Layer Security (TLS) certificate.</p>
    pub fn trust(
        &self,
    ) -> std::option::Option<&crate::types::VirtualGatewayListenerTlsValidationContextTrust> {
        self.trust.as_ref()
    }
    /// <p>A reference to an object that represents the SANs for a virtual gateway listener's Transport Layer Security (TLS) validation context.</p>
    pub fn subject_alternative_names(
        &self,
    ) -> std::option::Option<&crate::types::SubjectAlternativeNames> {
        self.subject_alternative_names.as_ref()
    }
}
impl VirtualGatewayListenerTlsValidationContext {
    /// Creates a new builder-style object to manufacture [`VirtualGatewayListenerTlsValidationContext`](crate::types::VirtualGatewayListenerTlsValidationContext).
    pub fn builder() -> crate::types::builders::VirtualGatewayListenerTlsValidationContextBuilder {
        crate::types::builders::VirtualGatewayListenerTlsValidationContextBuilder::default()
    }
}

/// A builder for [`VirtualGatewayListenerTlsValidationContext`](crate::types::VirtualGatewayListenerTlsValidationContext).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct VirtualGatewayListenerTlsValidationContextBuilder {
    pub(crate) trust:
        std::option::Option<crate::types::VirtualGatewayListenerTlsValidationContextTrust>,
    pub(crate) subject_alternative_names:
        std::option::Option<crate::types::SubjectAlternativeNames>,
}
impl VirtualGatewayListenerTlsValidationContextBuilder {
    /// <p>A reference to where to retrieve the trust chain when validating a peer’s Transport Layer Security (TLS) certificate.</p>
    pub fn trust(
        mut self,
        input: crate::types::VirtualGatewayListenerTlsValidationContextTrust,
    ) -> Self {
        self.trust = Some(input);
        self
    }
    /// <p>A reference to where to retrieve the trust chain when validating a peer’s Transport Layer Security (TLS) certificate.</p>
    pub fn set_trust(
        mut self,
        input: std::option::Option<crate::types::VirtualGatewayListenerTlsValidationContextTrust>,
    ) -> Self {
        self.trust = input;
        self
    }
    /// <p>A reference to an object that represents the SANs for a virtual gateway listener's Transport Layer Security (TLS) validation context.</p>
    pub fn subject_alternative_names(
        mut self,
        input: crate::types::SubjectAlternativeNames,
    ) -> Self {
        self.subject_alternative_names = Some(input);
        self
    }
    /// <p>A reference to an object that represents the SANs for a virtual gateway listener's Transport Layer Security (TLS) validation context.</p>
    pub fn set_subject_alternative_names(
        mut self,
        input: std::option::Option<crate::types::SubjectAlternativeNames>,
    ) -> Self {
        self.subject_alternative_names = input;
        self
    }
    /// Consumes the builder and constructs a [`VirtualGatewayListenerTlsValidationContext`](crate::types::VirtualGatewayListenerTlsValidationContext).
    pub fn build(self) -> crate::types::VirtualGatewayListenerTlsValidationContext {
        crate::types::VirtualGatewayListenerTlsValidationContext {
            trust: self.trust,
            subject_alternative_names: self.subject_alternative_names,
        }
    }
}
