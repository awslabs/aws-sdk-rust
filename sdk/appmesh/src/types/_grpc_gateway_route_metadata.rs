// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>An object representing the metadata of the gateway route.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GrpcGatewayRouteMetadata {
    /// <p>A name for the gateway route metadata.</p>
    pub name: ::std::string::String,
    /// <p>Specify <code>True</code> to match anything except the match criteria. The default value is <code>False</code>.</p>
    pub invert: ::std::option::Option<bool>,
    /// <p>The criteria for determining a metadata match.</p>
    pub r#match: ::std::option::Option<crate::types::GrpcMetadataMatchMethod>,
}
impl GrpcGatewayRouteMetadata {
    /// <p>A name for the gateway route metadata.</p>
    pub fn name(&self) -> &str {
        use std::ops::Deref;
        self.name.deref()
    }
    /// <p>Specify <code>True</code> to match anything except the match criteria. The default value is <code>False</code>.</p>
    pub fn invert(&self) -> ::std::option::Option<bool> {
        self.invert
    }
    /// <p>The criteria for determining a metadata match.</p>
    pub fn r#match(&self) -> ::std::option::Option<&crate::types::GrpcMetadataMatchMethod> {
        self.r#match.as_ref()
    }
}
impl GrpcGatewayRouteMetadata {
    /// Creates a new builder-style object to manufacture [`GrpcGatewayRouteMetadata`](crate::types::GrpcGatewayRouteMetadata).
    pub fn builder() -> crate::types::builders::GrpcGatewayRouteMetadataBuilder {
        crate::types::builders::GrpcGatewayRouteMetadataBuilder::default()
    }
}

/// A builder for [`GrpcGatewayRouteMetadata`](crate::types::GrpcGatewayRouteMetadata).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct GrpcGatewayRouteMetadataBuilder {
    pub(crate) name: ::std::option::Option<::std::string::String>,
    pub(crate) invert: ::std::option::Option<bool>,
    pub(crate) r#match: ::std::option::Option<crate::types::GrpcMetadataMatchMethod>,
}
impl GrpcGatewayRouteMetadataBuilder {
    /// <p>A name for the gateway route metadata.</p>
    /// This field is required.
    pub fn name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>A name for the gateway route metadata.</p>
    pub fn set_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>A name for the gateway route metadata.</p>
    pub fn get_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.name
    }
    /// <p>Specify <code>True</code> to match anything except the match criteria. The default value is <code>False</code>.</p>
    pub fn invert(mut self, input: bool) -> Self {
        self.invert = ::std::option::Option::Some(input);
        self
    }
    /// <p>Specify <code>True</code> to match anything except the match criteria. The default value is <code>False</code>.</p>
    pub fn set_invert(mut self, input: ::std::option::Option<bool>) -> Self {
        self.invert = input;
        self
    }
    /// <p>Specify <code>True</code> to match anything except the match criteria. The default value is <code>False</code>.</p>
    pub fn get_invert(&self) -> &::std::option::Option<bool> {
        &self.invert
    }
    /// <p>The criteria for determining a metadata match.</p>
    pub fn r#match(mut self, input: crate::types::GrpcMetadataMatchMethod) -> Self {
        self.r#match = ::std::option::Option::Some(input);
        self
    }
    /// <p>The criteria for determining a metadata match.</p>
    pub fn set_match(mut self, input: ::std::option::Option<crate::types::GrpcMetadataMatchMethod>) -> Self {
        self.r#match = input;
        self
    }
    /// <p>The criteria for determining a metadata match.</p>
    pub fn get_match(&self) -> &::std::option::Option<crate::types::GrpcMetadataMatchMethod> {
        &self.r#match
    }
    /// Consumes the builder and constructs a [`GrpcGatewayRouteMetadata`](crate::types::GrpcGatewayRouteMetadata).
    /// This method will fail if any of the following fields are not set:
    /// - [`name`](crate::types::builders::GrpcGatewayRouteMetadataBuilder::name)
    pub fn build(self) -> ::std::result::Result<crate::types::GrpcGatewayRouteMetadata, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::GrpcGatewayRouteMetadata {
            name: self.name.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "name",
                    "name was not specified but it is required when building GrpcGatewayRouteMetadata",
                )
            })?,
            invert: self.invert,
            r#match: self.r#match,
        })
    }
}
