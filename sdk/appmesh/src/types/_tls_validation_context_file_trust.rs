// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>An object that represents a Transport Layer Security (TLS) validation context trust for a local file.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct TlsValidationContextFileTrust {
    /// <p>The certificate trust chain for a certificate stored on the file system of the virtual node that the proxy is running on.</p>
    pub certificate_chain: ::std::string::String,
}
impl TlsValidationContextFileTrust {
    /// <p>The certificate trust chain for a certificate stored on the file system of the virtual node that the proxy is running on.</p>
    pub fn certificate_chain(&self) -> &str {
        use std::ops::Deref;
        self.certificate_chain.deref()
    }
}
impl TlsValidationContextFileTrust {
    /// Creates a new builder-style object to manufacture [`TlsValidationContextFileTrust`](crate::types::TlsValidationContextFileTrust).
    pub fn builder() -> crate::types::builders::TlsValidationContextFileTrustBuilder {
        crate::types::builders::TlsValidationContextFileTrustBuilder::default()
    }
}

/// A builder for [`TlsValidationContextFileTrust`](crate::types::TlsValidationContextFileTrust).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct TlsValidationContextFileTrustBuilder {
    pub(crate) certificate_chain: ::std::option::Option<::std::string::String>,
}
impl TlsValidationContextFileTrustBuilder {
    /// <p>The certificate trust chain for a certificate stored on the file system of the virtual node that the proxy is running on.</p>
    /// This field is required.
    pub fn certificate_chain(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.certificate_chain = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The certificate trust chain for a certificate stored on the file system of the virtual node that the proxy is running on.</p>
    pub fn set_certificate_chain(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.certificate_chain = input;
        self
    }
    /// <p>The certificate trust chain for a certificate stored on the file system of the virtual node that the proxy is running on.</p>
    pub fn get_certificate_chain(&self) -> &::std::option::Option<::std::string::String> {
        &self.certificate_chain
    }
    /// Consumes the builder and constructs a [`TlsValidationContextFileTrust`](crate::types::TlsValidationContextFileTrust).
    /// This method will fail if any of the following fields are not set:
    /// - [`certificate_chain`](crate::types::builders::TlsValidationContextFileTrustBuilder::certificate_chain)
    pub fn build(self) -> ::std::result::Result<crate::types::TlsValidationContextFileTrust, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::TlsValidationContextFileTrust {
            certificate_chain: self.certificate_chain.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "certificate_chain",
                    "certificate_chain was not specified but it is required when building TlsValidationContextFileTrust",
                )
            })?,
        })
    }
}
