// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>An object that represents the status of a virtual router. </p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct VirtualRouterStatus {
    /// <p>The current status of the virtual router.</p>
    #[doc(hidden)]
    pub status: std::option::Option<crate::types::VirtualRouterStatusCode>,
}
impl VirtualRouterStatus {
    /// <p>The current status of the virtual router.</p>
    pub fn status(&self) -> std::option::Option<&crate::types::VirtualRouterStatusCode> {
        self.status.as_ref()
    }
}
impl VirtualRouterStatus {
    /// Creates a new builder-style object to manufacture [`VirtualRouterStatus`](crate::types::VirtualRouterStatus).
    pub fn builder() -> crate::types::builders::VirtualRouterStatusBuilder {
        crate::types::builders::VirtualRouterStatusBuilder::default()
    }
}

/// A builder for [`VirtualRouterStatus`](crate::types::VirtualRouterStatus).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct VirtualRouterStatusBuilder {
    pub(crate) status: std::option::Option<crate::types::VirtualRouterStatusCode>,
}
impl VirtualRouterStatusBuilder {
    /// <p>The current status of the virtual router.</p>
    pub fn status(mut self, input: crate::types::VirtualRouterStatusCode) -> Self {
        self.status = Some(input);
        self
    }
    /// <p>The current status of the virtual router.</p>
    pub fn set_status(
        mut self,
        input: std::option::Option<crate::types::VirtualRouterStatusCode>,
    ) -> Self {
        self.status = input;
        self
    }
    /// Consumes the builder and constructs a [`VirtualRouterStatus`](crate::types::VirtualRouterStatus).
    pub fn build(self) -> crate::types::VirtualRouterStatus {
        crate::types::VirtualRouterStatus {
            status: self.status,
        }
    }
}
