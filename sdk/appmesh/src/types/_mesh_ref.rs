// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>An object that represents a service mesh returned by a list operation.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct MeshRef {
    /// <p>The name of the service mesh.</p>
    #[doc(hidden)]
    pub mesh_name: std::option::Option<std::string::String>,
    /// <p>The Amazon Web Services IAM account ID of the service mesh owner. If the account ID is not your own, then it's the ID of the account that shared the mesh with your account. For more information about mesh sharing, see <a href="https://docs.aws.amazon.com/app-mesh/latest/userguide/sharing.html">Working with shared meshes</a>.</p>
    #[doc(hidden)]
    pub mesh_owner: std::option::Option<std::string::String>,
    /// <p>The Amazon Web Services IAM account ID of the resource owner. If the account ID is not your own, then it's the ID of the mesh owner or of another account that the mesh is shared with. For more information about mesh sharing, see <a href="https://docs.aws.amazon.com/app-mesh/latest/userguide/sharing.html">Working with shared meshes</a>.</p>
    #[doc(hidden)]
    pub resource_owner: std::option::Option<std::string::String>,
    /// <p>The full Amazon Resource Name (ARN) of the service mesh.</p>
    #[doc(hidden)]
    pub arn: std::option::Option<std::string::String>,
    /// <p>The version of the resource. Resources are created at version 1, and this version is incremented each time that they're updated.</p>
    #[doc(hidden)]
    pub version: std::option::Option<i64>,
    /// <p>The Unix epoch timestamp in seconds for when the resource was created.</p>
    #[doc(hidden)]
    pub created_at: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>The Unix epoch timestamp in seconds for when the resource was last updated.</p>
    #[doc(hidden)]
    pub last_updated_at: std::option::Option<aws_smithy_types::DateTime>,
}
impl MeshRef {
    /// <p>The name of the service mesh.</p>
    pub fn mesh_name(&self) -> std::option::Option<&str> {
        self.mesh_name.as_deref()
    }
    /// <p>The Amazon Web Services IAM account ID of the service mesh owner. If the account ID is not your own, then it's the ID of the account that shared the mesh with your account. For more information about mesh sharing, see <a href="https://docs.aws.amazon.com/app-mesh/latest/userguide/sharing.html">Working with shared meshes</a>.</p>
    pub fn mesh_owner(&self) -> std::option::Option<&str> {
        self.mesh_owner.as_deref()
    }
    /// <p>The Amazon Web Services IAM account ID of the resource owner. If the account ID is not your own, then it's the ID of the mesh owner or of another account that the mesh is shared with. For more information about mesh sharing, see <a href="https://docs.aws.amazon.com/app-mesh/latest/userguide/sharing.html">Working with shared meshes</a>.</p>
    pub fn resource_owner(&self) -> std::option::Option<&str> {
        self.resource_owner.as_deref()
    }
    /// <p>The full Amazon Resource Name (ARN) of the service mesh.</p>
    pub fn arn(&self) -> std::option::Option<&str> {
        self.arn.as_deref()
    }
    /// <p>The version of the resource. Resources are created at version 1, and this version is incremented each time that they're updated.</p>
    pub fn version(&self) -> std::option::Option<i64> {
        self.version
    }
    /// <p>The Unix epoch timestamp in seconds for when the resource was created.</p>
    pub fn created_at(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.created_at.as_ref()
    }
    /// <p>The Unix epoch timestamp in seconds for when the resource was last updated.</p>
    pub fn last_updated_at(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.last_updated_at.as_ref()
    }
}
impl MeshRef {
    /// Creates a new builder-style object to manufacture [`MeshRef`](crate::types::MeshRef).
    pub fn builder() -> crate::types::builders::MeshRefBuilder {
        crate::types::builders::MeshRefBuilder::default()
    }
}

/// A builder for [`MeshRef`](crate::types::MeshRef).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct MeshRefBuilder {
    pub(crate) mesh_name: std::option::Option<std::string::String>,
    pub(crate) mesh_owner: std::option::Option<std::string::String>,
    pub(crate) resource_owner: std::option::Option<std::string::String>,
    pub(crate) arn: std::option::Option<std::string::String>,
    pub(crate) version: std::option::Option<i64>,
    pub(crate) created_at: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) last_updated_at: std::option::Option<aws_smithy_types::DateTime>,
}
impl MeshRefBuilder {
    /// <p>The name of the service mesh.</p>
    pub fn mesh_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.mesh_name = Some(input.into());
        self
    }
    /// <p>The name of the service mesh.</p>
    pub fn set_mesh_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.mesh_name = input;
        self
    }
    /// <p>The Amazon Web Services IAM account ID of the service mesh owner. If the account ID is not your own, then it's the ID of the account that shared the mesh with your account. For more information about mesh sharing, see <a href="https://docs.aws.amazon.com/app-mesh/latest/userguide/sharing.html">Working with shared meshes</a>.</p>
    pub fn mesh_owner(mut self, input: impl Into<std::string::String>) -> Self {
        self.mesh_owner = Some(input.into());
        self
    }
    /// <p>The Amazon Web Services IAM account ID of the service mesh owner. If the account ID is not your own, then it's the ID of the account that shared the mesh with your account. For more information about mesh sharing, see <a href="https://docs.aws.amazon.com/app-mesh/latest/userguide/sharing.html">Working with shared meshes</a>.</p>
    pub fn set_mesh_owner(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.mesh_owner = input;
        self
    }
    /// <p>The Amazon Web Services IAM account ID of the resource owner. If the account ID is not your own, then it's the ID of the mesh owner or of another account that the mesh is shared with. For more information about mesh sharing, see <a href="https://docs.aws.amazon.com/app-mesh/latest/userguide/sharing.html">Working with shared meshes</a>.</p>
    pub fn resource_owner(mut self, input: impl Into<std::string::String>) -> Self {
        self.resource_owner = Some(input.into());
        self
    }
    /// <p>The Amazon Web Services IAM account ID of the resource owner. If the account ID is not your own, then it's the ID of the mesh owner or of another account that the mesh is shared with. For more information about mesh sharing, see <a href="https://docs.aws.amazon.com/app-mesh/latest/userguide/sharing.html">Working with shared meshes</a>.</p>
    pub fn set_resource_owner(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.resource_owner = input;
        self
    }
    /// <p>The full Amazon Resource Name (ARN) of the service mesh.</p>
    pub fn arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.arn = Some(input.into());
        self
    }
    /// <p>The full Amazon Resource Name (ARN) of the service mesh.</p>
    pub fn set_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.arn = input;
        self
    }
    /// <p>The version of the resource. Resources are created at version 1, and this version is incremented each time that they're updated.</p>
    pub fn version(mut self, input: i64) -> Self {
        self.version = Some(input);
        self
    }
    /// <p>The version of the resource. Resources are created at version 1, and this version is incremented each time that they're updated.</p>
    pub fn set_version(mut self, input: std::option::Option<i64>) -> Self {
        self.version = input;
        self
    }
    /// <p>The Unix epoch timestamp in seconds for when the resource was created.</p>
    pub fn created_at(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.created_at = Some(input);
        self
    }
    /// <p>The Unix epoch timestamp in seconds for when the resource was created.</p>
    pub fn set_created_at(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.created_at = input;
        self
    }
    /// <p>The Unix epoch timestamp in seconds for when the resource was last updated.</p>
    pub fn last_updated_at(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.last_updated_at = Some(input);
        self
    }
    /// <p>The Unix epoch timestamp in seconds for when the resource was last updated.</p>
    pub fn set_last_updated_at(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.last_updated_at = input;
        self
    }
    /// Consumes the builder and constructs a [`MeshRef`](crate::types::MeshRef).
    pub fn build(self) -> crate::types::MeshRef {
        crate::types::MeshRef {
            mesh_name: self.mesh_name,
            mesh_owner: self.mesh_owner,
            resource_owner: self.resource_owner,
            arn: self.arn,
            version: self.version,
            created_at: self.created_at,
            last_updated_at: self.last_updated_at,
        }
    }
}
