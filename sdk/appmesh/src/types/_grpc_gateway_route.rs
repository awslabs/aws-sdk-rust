// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>An object that represents a gRPC gateway route.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GrpcGatewayRoute {
    /// <p>An object that represents the criteria for determining a request match.</p>
    #[doc(hidden)]
    pub r#match: std::option::Option<crate::types::GrpcGatewayRouteMatch>,
    /// <p>An object that represents the action to take if a match is determined.</p>
    #[doc(hidden)]
    pub action: std::option::Option<crate::types::GrpcGatewayRouteAction>,
}
impl GrpcGatewayRoute {
    /// <p>An object that represents the criteria for determining a request match.</p>
    pub fn r#match(&self) -> std::option::Option<&crate::types::GrpcGatewayRouteMatch> {
        self.r#match.as_ref()
    }
    /// <p>An object that represents the action to take if a match is determined.</p>
    pub fn action(&self) -> std::option::Option<&crate::types::GrpcGatewayRouteAction> {
        self.action.as_ref()
    }
}
impl GrpcGatewayRoute {
    /// Creates a new builder-style object to manufacture [`GrpcGatewayRoute`](crate::types::GrpcGatewayRoute).
    pub fn builder() -> crate::types::builders::GrpcGatewayRouteBuilder {
        crate::types::builders::GrpcGatewayRouteBuilder::default()
    }
}

/// A builder for [`GrpcGatewayRoute`](crate::types::GrpcGatewayRoute).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct GrpcGatewayRouteBuilder {
    pub(crate) r#match: std::option::Option<crate::types::GrpcGatewayRouteMatch>,
    pub(crate) action: std::option::Option<crate::types::GrpcGatewayRouteAction>,
}
impl GrpcGatewayRouteBuilder {
    /// <p>An object that represents the criteria for determining a request match.</p>
    pub fn r#match(mut self, input: crate::types::GrpcGatewayRouteMatch) -> Self {
        self.r#match = Some(input);
        self
    }
    /// <p>An object that represents the criteria for determining a request match.</p>
    pub fn set_match(
        mut self,
        input: std::option::Option<crate::types::GrpcGatewayRouteMatch>,
    ) -> Self {
        self.r#match = input;
        self
    }
    /// <p>An object that represents the action to take if a match is determined.</p>
    pub fn action(mut self, input: crate::types::GrpcGatewayRouteAction) -> Self {
        self.action = Some(input);
        self
    }
    /// <p>An object that represents the action to take if a match is determined.</p>
    pub fn set_action(
        mut self,
        input: std::option::Option<crate::types::GrpcGatewayRouteAction>,
    ) -> Self {
        self.action = input;
        self
    }
    /// Consumes the builder and constructs a [`GrpcGatewayRoute`](crate::types::GrpcGatewayRoute).
    pub fn build(self) -> crate::types::GrpcGatewayRoute {
        crate::types::GrpcGatewayRoute {
            r#match: self.r#match,
            action: self.action,
        }
    }
}
