// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The access log configuration for a virtual gateway.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub enum VirtualGatewayAccessLog {
    /// <p>The file object to send virtual gateway access logs to.</p>
    File(crate::types::VirtualGatewayFileAccessLog),
    /// The `Unknown` variant represents cases where new union variant was received. Consider upgrading the SDK to the latest available version.
    /// An unknown enum variant
    ///
    /// _Note: If you encounter this error, consider upgrading your SDK to the latest version._
    /// The `Unknown` variant represents cases where the server sent a value that wasn't recognized
    /// by the client. This can happen when the server adds new functionality, but the client has not been updated.
    /// To investigate this, consider turning on debug logging to print the raw HTTP response.
    #[non_exhaustive]
    Unknown,
}
impl VirtualGatewayAccessLog {
    #[allow(irrefutable_let_patterns)]
    /// Tries to convert the enum instance into [`File`](crate::types::VirtualGatewayAccessLog::File), extracting the inner [`VirtualGatewayFileAccessLog`](crate::types::VirtualGatewayFileAccessLog).
    /// Returns `Err(&Self)` if it can't be converted.
    pub fn as_file(
        &self,
    ) -> std::result::Result<&crate::types::VirtualGatewayFileAccessLog, &Self> {
        if let VirtualGatewayAccessLog::File(val) = &self {
            Ok(val)
        } else {
            Err(self)
        }
    }
    /// Returns true if this is a [`File`](crate::types::VirtualGatewayAccessLog::File).
    pub fn is_file(&self) -> bool {
        self.as_file().is_ok()
    }
    /// Returns true if the enum instance is the `Unknown` variant.
    pub fn is_unknown(&self) -> bool {
        matches!(self, Self::Unknown)
    }
}
