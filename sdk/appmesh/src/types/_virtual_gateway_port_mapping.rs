// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>An object that represents a port mapping.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct VirtualGatewayPortMapping {
    /// <p>The port used for the port mapping. Specify one protocol.</p>
    #[doc(hidden)]
    pub port: i32,
    /// <p>The protocol used for the port mapping.</p>
    #[doc(hidden)]
    pub protocol: std::option::Option<crate::types::VirtualGatewayPortProtocol>,
}
impl VirtualGatewayPortMapping {
    /// <p>The port used for the port mapping. Specify one protocol.</p>
    pub fn port(&self) -> i32 {
        self.port
    }
    /// <p>The protocol used for the port mapping.</p>
    pub fn protocol(&self) -> std::option::Option<&crate::types::VirtualGatewayPortProtocol> {
        self.protocol.as_ref()
    }
}
impl VirtualGatewayPortMapping {
    /// Creates a new builder-style object to manufacture [`VirtualGatewayPortMapping`](crate::types::VirtualGatewayPortMapping).
    pub fn builder() -> crate::types::builders::VirtualGatewayPortMappingBuilder {
        crate::types::builders::VirtualGatewayPortMappingBuilder::default()
    }
}

/// A builder for [`VirtualGatewayPortMapping`](crate::types::VirtualGatewayPortMapping).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct VirtualGatewayPortMappingBuilder {
    pub(crate) port: std::option::Option<i32>,
    pub(crate) protocol: std::option::Option<crate::types::VirtualGatewayPortProtocol>,
}
impl VirtualGatewayPortMappingBuilder {
    /// <p>The port used for the port mapping. Specify one protocol.</p>
    pub fn port(mut self, input: i32) -> Self {
        self.port = Some(input);
        self
    }
    /// <p>The port used for the port mapping. Specify one protocol.</p>
    pub fn set_port(mut self, input: std::option::Option<i32>) -> Self {
        self.port = input;
        self
    }
    /// <p>The protocol used for the port mapping.</p>
    pub fn protocol(mut self, input: crate::types::VirtualGatewayPortProtocol) -> Self {
        self.protocol = Some(input);
        self
    }
    /// <p>The protocol used for the port mapping.</p>
    pub fn set_protocol(
        mut self,
        input: std::option::Option<crate::types::VirtualGatewayPortProtocol>,
    ) -> Self {
        self.protocol = input;
        self
    }
    /// Consumes the builder and constructs a [`VirtualGatewayPortMapping`](crate::types::VirtualGatewayPortMapping).
    pub fn build(self) -> crate::types::VirtualGatewayPortMapping {
        crate::types::VirtualGatewayPortMapping {
            port: self.port.unwrap_or_default(),
            protocol: self.protocol,
        }
    }
}
