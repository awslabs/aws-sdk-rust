// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>An object that represents the gateway route to rewrite.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GrpcGatewayRouteRewrite {
    /// <p>The host name of the gateway route to rewrite.</p>
    #[doc(hidden)]
    pub hostname: std::option::Option<crate::types::GatewayRouteHostnameRewrite>,
}
impl GrpcGatewayRouteRewrite {
    /// <p>The host name of the gateway route to rewrite.</p>
    pub fn hostname(&self) -> std::option::Option<&crate::types::GatewayRouteHostnameRewrite> {
        self.hostname.as_ref()
    }
}
impl GrpcGatewayRouteRewrite {
    /// Creates a new builder-style object to manufacture [`GrpcGatewayRouteRewrite`](crate::types::GrpcGatewayRouteRewrite).
    pub fn builder() -> crate::types::builders::GrpcGatewayRouteRewriteBuilder {
        crate::types::builders::GrpcGatewayRouteRewriteBuilder::default()
    }
}

/// A builder for [`GrpcGatewayRouteRewrite`](crate::types::GrpcGatewayRouteRewrite).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct GrpcGatewayRouteRewriteBuilder {
    pub(crate) hostname: std::option::Option<crate::types::GatewayRouteHostnameRewrite>,
}
impl GrpcGatewayRouteRewriteBuilder {
    /// <p>The host name of the gateway route to rewrite.</p>
    pub fn hostname(mut self, input: crate::types::GatewayRouteHostnameRewrite) -> Self {
        self.hostname = Some(input);
        self
    }
    /// <p>The host name of the gateway route to rewrite.</p>
    pub fn set_hostname(
        mut self,
        input: std::option::Option<crate::types::GatewayRouteHostnameRewrite>,
    ) -> Self {
        self.hostname = input;
        self
    }
    /// Consumes the builder and constructs a [`GrpcGatewayRouteRewrite`](crate::types::GrpcGatewayRouteRewrite).
    pub fn build(self) -> crate::types::GrpcGatewayRouteRewrite {
        crate::types::GrpcGatewayRouteRewrite {
            hostname: self.hostname,
        }
    }
}
