// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeleteVirtualService`](crate::operation::delete_virtual_service::builders::DeleteVirtualServiceFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`virtual_service_name(impl Into<String>)`](crate::operation::delete_virtual_service::builders::DeleteVirtualServiceFluentBuilder::virtual_service_name) / [`set_virtual_service_name(Option<String>)`](crate::operation::delete_virtual_service::builders::DeleteVirtualServiceFluentBuilder::set_virtual_service_name): <p>The name of the virtual service to delete.</p>
    ///   - [`mesh_name(impl Into<String>)`](crate::operation::delete_virtual_service::builders::DeleteVirtualServiceFluentBuilder::mesh_name) / [`set_mesh_name(Option<String>)`](crate::operation::delete_virtual_service::builders::DeleteVirtualServiceFluentBuilder::set_mesh_name): <p>The name of the service mesh to delete the virtual service in.</p>
    ///   - [`mesh_owner(impl Into<String>)`](crate::operation::delete_virtual_service::builders::DeleteVirtualServiceFluentBuilder::mesh_owner) / [`set_mesh_owner(Option<String>)`](crate::operation::delete_virtual_service::builders::DeleteVirtualServiceFluentBuilder::set_mesh_owner): <p>The Amazon Web Services IAM account ID of the service mesh owner. If the account ID is not your own, then it's the ID of the account that shared the mesh with your account. For more information about mesh sharing, see <a href="https://docs.aws.amazon.com/app-mesh/latest/userguide/sharing.html">Working with shared meshes</a>.</p>
    /// - On success, responds with [`DeleteVirtualServiceOutput`](crate::operation::delete_virtual_service::DeleteVirtualServiceOutput) with field(s):
    ///   - [`virtual_service(Option<VirtualServiceData>)`](crate::operation::delete_virtual_service::DeleteVirtualServiceOutput::virtual_service): <p>The virtual service that was deleted.</p>
    /// - On failure, responds with [`SdkError<DeleteVirtualServiceError>`](crate::operation::delete_virtual_service::DeleteVirtualServiceError)
    pub fn delete_virtual_service(
        &self,
    ) -> crate::operation::delete_virtual_service::builders::DeleteVirtualServiceFluentBuilder {
        crate::operation::delete_virtual_service::builders::DeleteVirtualServiceFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
