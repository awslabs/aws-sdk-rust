// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct UpdateVirtualNodeOutput {
    /// <p>A full description of the virtual node that was updated.</p>
    pub virtual_node: ::std::option::Option<crate::types::VirtualNodeData>,
    _request_id: Option<String>,
}
impl UpdateVirtualNodeOutput {
    /// <p>A full description of the virtual node that was updated.</p>
    pub fn virtual_node(&self) -> ::std::option::Option<&crate::types::VirtualNodeData> {
        self.virtual_node.as_ref()
    }
}
impl ::aws_http::request_id::RequestId for UpdateVirtualNodeOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl UpdateVirtualNodeOutput {
    /// Creates a new builder-style object to manufacture [`UpdateVirtualNodeOutput`](crate::operation::update_virtual_node::UpdateVirtualNodeOutput).
    pub fn builder() -> crate::operation::update_virtual_node::builders::UpdateVirtualNodeOutputBuilder {
        crate::operation::update_virtual_node::builders::UpdateVirtualNodeOutputBuilder::default()
    }
}

/// A builder for [`UpdateVirtualNodeOutput`](crate::operation::update_virtual_node::UpdateVirtualNodeOutput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct UpdateVirtualNodeOutputBuilder {
    pub(crate) virtual_node: ::std::option::Option<crate::types::VirtualNodeData>,
    _request_id: Option<String>,
}
impl UpdateVirtualNodeOutputBuilder {
    /// <p>A full description of the virtual node that was updated.</p>
    /// This field is required.
    pub fn virtual_node(mut self, input: crate::types::VirtualNodeData) -> Self {
        self.virtual_node = ::std::option::Option::Some(input);
        self
    }
    /// <p>A full description of the virtual node that was updated.</p>
    pub fn set_virtual_node(mut self, input: ::std::option::Option<crate::types::VirtualNodeData>) -> Self {
        self.virtual_node = input;
        self
    }
    /// <p>A full description of the virtual node that was updated.</p>
    pub fn get_virtual_node(&self) -> &::std::option::Option<crate::types::VirtualNodeData> {
        &self.virtual_node
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`UpdateVirtualNodeOutput`](crate::operation::update_virtual_node::UpdateVirtualNodeOutput).
    pub fn build(self) -> crate::operation::update_virtual_node::UpdateVirtualNodeOutput {
        crate::operation::update_virtual_node::UpdateVirtualNodeOutput {
            virtual_node: self.virtual_node,
            _request_id: self._request_id,
        }
    }
}
