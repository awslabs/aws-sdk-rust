// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct PutConfigurationInput {
    /// <p> Associates a <code>TagKey</code> configuration to an account. </p>
    pub configuration: ::std::option::Option<crate::types::AppRegistryConfiguration>,
}
impl PutConfigurationInput {
    /// <p> Associates a <code>TagKey</code> configuration to an account. </p>
    pub fn configuration(&self) -> ::std::option::Option<&crate::types::AppRegistryConfiguration> {
        self.configuration.as_ref()
    }
}
impl PutConfigurationInput {
    /// Creates a new builder-style object to manufacture [`PutConfigurationInput`](crate::operation::put_configuration::PutConfigurationInput).
    pub fn builder() -> crate::operation::put_configuration::builders::PutConfigurationInputBuilder {
        crate::operation::put_configuration::builders::PutConfigurationInputBuilder::default()
    }
}

/// A builder for [`PutConfigurationInput`](crate::operation::put_configuration::PutConfigurationInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct PutConfigurationInputBuilder {
    pub(crate) configuration: ::std::option::Option<crate::types::AppRegistryConfiguration>,
}
impl PutConfigurationInputBuilder {
    /// <p> Associates a <code>TagKey</code> configuration to an account. </p>
    /// This field is required.
    pub fn configuration(mut self, input: crate::types::AppRegistryConfiguration) -> Self {
        self.configuration = ::std::option::Option::Some(input);
        self
    }
    /// <p> Associates a <code>TagKey</code> configuration to an account. </p>
    pub fn set_configuration(mut self, input: ::std::option::Option<crate::types::AppRegistryConfiguration>) -> Self {
        self.configuration = input;
        self
    }
    /// <p> Associates a <code>TagKey</code> configuration to an account. </p>
    pub fn get_configuration(&self) -> &::std::option::Option<crate::types::AppRegistryConfiguration> {
        &self.configuration
    }
    /// Consumes the builder and constructs a [`PutConfigurationInput`](crate::operation::put_configuration::PutConfigurationInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::put_configuration::PutConfigurationInput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::operation::put_configuration::PutConfigurationInput {
            configuration: self.configuration,
        })
    }
}
