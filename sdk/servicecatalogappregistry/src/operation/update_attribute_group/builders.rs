// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub use crate::operation::update_attribute_group::_update_attribute_group_output::UpdateAttributeGroupOutputBuilder;

pub use crate::operation::update_attribute_group::_update_attribute_group_input::UpdateAttributeGroupInputBuilder;

/// Fluent builder constructing a request to `UpdateAttributeGroup`.
///
/// <p>Updates an existing attribute group with new details. </p>
#[derive(std::clone::Clone, std::fmt::Debug)]
pub struct UpdateAttributeGroupFluentBuilder {
    handle: std::sync::Arc<crate::client::Handle>,
    inner: crate::operation::update_attribute_group::builders::UpdateAttributeGroupInputBuilder,
}
impl UpdateAttributeGroupFluentBuilder {
    /// Creates a new `UpdateAttributeGroup`.
    pub(crate) fn new(handle: std::sync::Arc<crate::client::Handle>) -> Self {
        Self {
            handle,
            inner: Default::default(),
        }
    }

    /// Consume this builder, creating a customizable operation that can be modified before being
    /// sent. The operation's inner [http::Request] can be modified as well.
    pub async fn customize(
        self,
    ) -> std::result::Result<
        crate::client::customize::CustomizableOperation<
            crate::operation::update_attribute_group::UpdateAttributeGroup,
            aws_http::retry::AwsResponseRetryClassifier,
        >,
        aws_smithy_http::result::SdkError<
            crate::operation::update_attribute_group::UpdateAttributeGroupError,
        >,
    > {
        let handle = self.handle.clone();
        let operation = self
            .inner
            .build()
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?
            .make_operation(&handle.conf)
            .await
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?;
        Ok(crate::client::customize::CustomizableOperation { handle, operation })
    }

    /// Sends the request and returns the response.
    ///
    /// If an error occurs, an `SdkError` will be returned with additional details that
    /// can be matched against.
    ///
    /// By default, any retryable failures will be retried twice. Retry behavior
    /// is configurable with the [RetryConfig](aws_smithy_types::retry::RetryConfig), which can be
    /// set when configuring the client.
    pub async fn send(
        self,
    ) -> std::result::Result<
        crate::operation::update_attribute_group::UpdateAttributeGroupOutput,
        aws_smithy_http::result::SdkError<
            crate::operation::update_attribute_group::UpdateAttributeGroupError,
        >,
    > {
        let op = self
            .inner
            .build()
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?
            .make_operation(&self.handle.conf)
            .await
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?;
        self.handle.client.call(op).await
    }
    /// <p>The name or ID of the attribute group that holds the attributes to describe the application.</p>
    pub fn attribute_group(mut self, input: impl Into<std::string::String>) -> Self {
        self.inner = self.inner.attribute_group(input.into());
        self
    }
    /// <p>The name or ID of the attribute group that holds the attributes to describe the application.</p>
    pub fn set_attribute_group(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.inner = self.inner.set_attribute_group(input);
        self
    }
    /// <p>Deprecated: The new name of the attribute group. The name must be unique in the region in which you are updating the attribute group. Please do not use this field as we have stopped supporting name updates.</p>
    #[deprecated(note = "Name update for attribute group is deprecated.")]
    pub fn name(mut self, input: impl Into<std::string::String>) -> Self {
        self.inner = self.inner.name(input.into());
        self
    }
    /// <p>Deprecated: The new name of the attribute group. The name must be unique in the region in which you are updating the attribute group. Please do not use this field as we have stopped supporting name updates.</p>
    #[deprecated(note = "Name update for attribute group is deprecated.")]
    pub fn set_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.inner = self.inner.set_name(input);
        self
    }
    /// <p>The description of the attribute group that the user provides.</p>
    pub fn description(mut self, input: impl Into<std::string::String>) -> Self {
        self.inner = self.inner.description(input.into());
        self
    }
    /// <p>The description of the attribute group that the user provides.</p>
    pub fn set_description(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.inner = self.inner.set_description(input);
        self
    }
    /// <p>A JSON string in the form of nested key-value pairs that represent the attributes in the group and describes an application and its components.</p>
    pub fn attributes(mut self, input: impl Into<std::string::String>) -> Self {
        self.inner = self.inner.attributes(input.into());
        self
    }
    /// <p>A JSON string in the form of nested key-value pairs that represent the attributes in the group and describes an application and its components.</p>
    pub fn set_attributes(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.inner = self.inner.set_attributes(input);
        self
    }
}
