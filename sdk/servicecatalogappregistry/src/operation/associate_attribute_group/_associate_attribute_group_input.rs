// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AssociateAttributeGroupInput {
    /// <p> The name, ID, or ARN of the application. </p>
    pub application: ::std::option::Option<::std::string::String>,
    /// <p> The name, ID, or ARN of the attribute group that holds the attributes to describe the application. </p>
    pub attribute_group: ::std::option::Option<::std::string::String>,
}
impl AssociateAttributeGroupInput {
    /// <p> The name, ID, or ARN of the application. </p>
    pub fn application(&self) -> ::std::option::Option<&str> {
        self.application.as_deref()
    }
    /// <p> The name, ID, or ARN of the attribute group that holds the attributes to describe the application. </p>
    pub fn attribute_group(&self) -> ::std::option::Option<&str> {
        self.attribute_group.as_deref()
    }
}
impl AssociateAttributeGroupInput {
    /// Creates a new builder-style object to manufacture [`AssociateAttributeGroupInput`](crate::operation::associate_attribute_group::AssociateAttributeGroupInput).
    pub fn builder() -> crate::operation::associate_attribute_group::builders::AssociateAttributeGroupInputBuilder {
        crate::operation::associate_attribute_group::builders::AssociateAttributeGroupInputBuilder::default()
    }
}

/// A builder for [`AssociateAttributeGroupInput`](crate::operation::associate_attribute_group::AssociateAttributeGroupInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct AssociateAttributeGroupInputBuilder {
    pub(crate) application: ::std::option::Option<::std::string::String>,
    pub(crate) attribute_group: ::std::option::Option<::std::string::String>,
}
impl AssociateAttributeGroupInputBuilder {
    /// <p> The name, ID, or ARN of the application. </p>
    /// This field is required.
    pub fn application(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.application = ::std::option::Option::Some(input.into());
        self
    }
    /// <p> The name, ID, or ARN of the application. </p>
    pub fn set_application(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.application = input;
        self
    }
    /// <p> The name, ID, or ARN of the application. </p>
    pub fn get_application(&self) -> &::std::option::Option<::std::string::String> {
        &self.application
    }
    /// <p> The name, ID, or ARN of the attribute group that holds the attributes to describe the application. </p>
    /// This field is required.
    pub fn attribute_group(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.attribute_group = ::std::option::Option::Some(input.into());
        self
    }
    /// <p> The name, ID, or ARN of the attribute group that holds the attributes to describe the application. </p>
    pub fn set_attribute_group(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.attribute_group = input;
        self
    }
    /// <p> The name, ID, or ARN of the attribute group that holds the attributes to describe the application. </p>
    pub fn get_attribute_group(&self) -> &::std::option::Option<::std::string::String> {
        &self.attribute_group
    }
    /// Consumes the builder and constructs a [`AssociateAttributeGroupInput`](crate::operation::associate_attribute_group::AssociateAttributeGroupInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::associate_attribute_group::AssociateAttributeGroupInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::associate_attribute_group::AssociateAttributeGroupInput {
            application: self.application,
            attribute_group: self.attribute_group,
        })
    }
}
