// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[doc(inline)]
pub use aws_smithy_client::Builder;
#[derive(Debug)]
pub(crate) struct Handle {
    pub(crate) client: aws_smithy_client::Client<
        aws_smithy_client::erase::DynConnector,
        aws_smithy_client::erase::DynMiddleware<aws_smithy_client::erase::DynConnector>,
    >,
    pub(crate) conf: crate::Config,
}

/// Client for AWS Service Catalog App Registry
///
/// Client for invoking operations on AWS Service Catalog App Registry. Each operation on AWS Service Catalog App Registry is a method on this
/// this struct. `.send()` MUST be invoked on the generated operations to dispatch the request to the service.
///
/// # Examples
/// **Constructing a client and invoking an operation**
/// ```rust,no_run
/// # async fn docs() {
///     // create a shared configuration. This can be used & shared between multiple service clients.
///     let shared_config = aws_config::load_from_env().await;
///     let client = aws_sdk_servicecatalogappregistry::Client::new(&shared_config);
///     // invoke an operation
///     /* let rsp = client
///         .<operation_name>().
///         .<param>("some value")
///         .send().await; */
/// # }
/// ```
/// **Constructing a client with custom configuration**
/// ```rust,no_run
/// use aws_config::retry::RetryConfig;
/// # async fn docs() {
/// let shared_config = aws_config::load_from_env().await;
/// let config = aws_sdk_servicecatalogappregistry::config::Builder::from(&shared_config)
///   .retry_config(RetryConfig::disabled())
///   .build();
/// let client = aws_sdk_servicecatalogappregistry::Client::from_conf(config);
/// # }
#[derive(std::fmt::Debug)]
pub struct Client {
    handle: std::sync::Arc<Handle>,
}

impl std::clone::Clone for Client {
    fn clone(&self) -> Self {
        Self {
            handle: self.handle.clone(),
        }
    }
}

impl
    From<
        aws_smithy_client::Client<
            aws_smithy_client::erase::DynConnector,
            aws_smithy_client::erase::DynMiddleware<aws_smithy_client::erase::DynConnector>,
        >,
    > for Client
{
    fn from(
        client: aws_smithy_client::Client<
            aws_smithy_client::erase::DynConnector,
            aws_smithy_client::erase::DynMiddleware<aws_smithy_client::erase::DynConnector>,
        >,
    ) -> Self {
        Self::with_config(client, crate::Config::builder().build())
    }
}

impl Client {
    /// Creates a client with the given service configuration.
    pub fn with_config(
        client: aws_smithy_client::Client<
            aws_smithy_client::erase::DynConnector,
            aws_smithy_client::erase::DynMiddleware<aws_smithy_client::erase::DynConnector>,
        >,
        conf: crate::Config,
    ) -> Self {
        Self {
            handle: std::sync::Arc::new(Handle { client, conf }),
        }
    }

    /// Returns the client's configuration.
    pub fn conf(&self) -> &crate::Config {
        &self.handle.conf
    }
}
impl Client {
    /// Constructs a fluent builder for the [`AssociateAttributeGroup`](crate::client::fluent_builders::AssociateAttributeGroup) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application(impl Into<String>)`](crate::client::fluent_builders::AssociateAttributeGroup::application) / [`set_application(Option<String>)`](crate::client::fluent_builders::AssociateAttributeGroup::set_application): <p>The name or ID of the application.</p>
    ///   - [`attribute_group(impl Into<String>)`](crate::client::fluent_builders::AssociateAttributeGroup::attribute_group) / [`set_attribute_group(Option<String>)`](crate::client::fluent_builders::AssociateAttributeGroup::set_attribute_group): <p>The name or ID of the attribute group that holds the attributes to describe the application.</p>
    /// - On success, responds with [`AssociateAttributeGroupOutput`](crate::output::AssociateAttributeGroupOutput) with field(s):
    ///   - [`application_arn(Option<String>)`](crate::output::AssociateAttributeGroupOutput::application_arn): <p>The Amazon resource name (ARN) of the application that was augmented with attributes.</p>
    ///   - [`attribute_group_arn(Option<String>)`](crate::output::AssociateAttributeGroupOutput::attribute_group_arn): <p>The Amazon resource name (ARN) of the attribute group that contains the application's new attributes.</p>
    /// - On failure, responds with [`SdkError<AssociateAttributeGroupError>`](crate::error::AssociateAttributeGroupError)
    pub fn associate_attribute_group(
        &self,
    ) -> crate::client::fluent_builders::AssociateAttributeGroup {
        crate::client::fluent_builders::AssociateAttributeGroup::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`AssociateResource`](crate::client::fluent_builders::AssociateResource) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application(impl Into<String>)`](crate::client::fluent_builders::AssociateResource::application) / [`set_application(Option<String>)`](crate::client::fluent_builders::AssociateResource::set_application): <p>The name or ID of the application.</p>
    ///   - [`resource_type(ResourceType)`](crate::client::fluent_builders::AssociateResource::resource_type) / [`set_resource_type(Option<ResourceType>)`](crate::client::fluent_builders::AssociateResource::set_resource_type): <p>The type of resource of which the application will be associated.</p>
    ///   - [`resource(impl Into<String>)`](crate::client::fluent_builders::AssociateResource::resource) / [`set_resource(Option<String>)`](crate::client::fluent_builders::AssociateResource::set_resource): <p>The name or ID of the resource of which the application will be associated.</p>
    /// - On success, responds with [`AssociateResourceOutput`](crate::output::AssociateResourceOutput) with field(s):
    ///   - [`application_arn(Option<String>)`](crate::output::AssociateResourceOutput::application_arn): <p>The Amazon resource name (ARN) of the application that was augmented with attributes.</p>
    ///   - [`resource_arn(Option<String>)`](crate::output::AssociateResourceOutput::resource_arn): <p>The Amazon resource name (ARN) that specifies the resource.</p>
    /// - On failure, responds with [`SdkError<AssociateResourceError>`](crate::error::AssociateResourceError)
    pub fn associate_resource(&self) -> crate::client::fluent_builders::AssociateResource {
        crate::client::fluent_builders::AssociateResource::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`CreateApplication`](crate::client::fluent_builders::CreateApplication) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(impl Into<String>)`](crate::client::fluent_builders::CreateApplication::name) / [`set_name(Option<String>)`](crate::client::fluent_builders::CreateApplication::set_name): <p>The name of the application. The name must be unique in the region in which you are creating the application.</p>
    ///   - [`description(impl Into<String>)`](crate::client::fluent_builders::CreateApplication::description) / [`set_description(Option<String>)`](crate::client::fluent_builders::CreateApplication::set_description): <p>The description of the application.</p>
    ///   - [`tags(HashMap<String, String>)`](crate::client::fluent_builders::CreateApplication::tags) / [`set_tags(Option<HashMap<String, String>>)`](crate::client::fluent_builders::CreateApplication::set_tags): <p>Key-value pairs you can use to associate with the application.</p>
    ///   - [`client_token(impl Into<String>)`](crate::client::fluent_builders::CreateApplication::client_token) / [`set_client_token(Option<String>)`](crate::client::fluent_builders::CreateApplication::set_client_token): <p>A unique identifier that you provide to ensure idempotency. If you retry a request that completed successfully using the same client token and the same parameters, the retry succeeds without performing any further actions. If you retry a successful request using the same client token, but one or more of the parameters are different, the retry fails.</p>
    /// - On success, responds with [`CreateApplicationOutput`](crate::output::CreateApplicationOutput) with field(s):
    ///   - [`application(Option<Application>)`](crate::output::CreateApplicationOutput::application): <p>Information about the application.</p>
    /// - On failure, responds with [`SdkError<CreateApplicationError>`](crate::error::CreateApplicationError)
    pub fn create_application(&self) -> crate::client::fluent_builders::CreateApplication {
        crate::client::fluent_builders::CreateApplication::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`CreateAttributeGroup`](crate::client::fluent_builders::CreateAttributeGroup) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(impl Into<String>)`](crate::client::fluent_builders::CreateAttributeGroup::name) / [`set_name(Option<String>)`](crate::client::fluent_builders::CreateAttributeGroup::set_name): <p>The name of the attribute group.</p>
    ///   - [`description(impl Into<String>)`](crate::client::fluent_builders::CreateAttributeGroup::description) / [`set_description(Option<String>)`](crate::client::fluent_builders::CreateAttributeGroup::set_description): <p>The description of the attribute group that the user provides.</p>
    ///   - [`attributes(impl Into<String>)`](crate::client::fluent_builders::CreateAttributeGroup::attributes) / [`set_attributes(Option<String>)`](crate::client::fluent_builders::CreateAttributeGroup::set_attributes): <p>A JSON string in the form of nested key-value pairs that represent the attributes in the group and describes an application and its components.</p>
    ///   - [`tags(HashMap<String, String>)`](crate::client::fluent_builders::CreateAttributeGroup::tags) / [`set_tags(Option<HashMap<String, String>>)`](crate::client::fluent_builders::CreateAttributeGroup::set_tags): <p>Key-value pairs you can use to associate with the attribute group.</p>
    ///   - [`client_token(impl Into<String>)`](crate::client::fluent_builders::CreateAttributeGroup::client_token) / [`set_client_token(Option<String>)`](crate::client::fluent_builders::CreateAttributeGroup::set_client_token): <p>A unique identifier that you provide to ensure idempotency. If you retry a request that completed successfully using the same client token and the same parameters, the retry succeeds without performing any further actions. If you retry a successful request using the same client token, but one or more of the parameters are different, the retry fails.</p>
    /// - On success, responds with [`CreateAttributeGroupOutput`](crate::output::CreateAttributeGroupOutput) with field(s):
    ///   - [`attribute_group(Option<AttributeGroup>)`](crate::output::CreateAttributeGroupOutput::attribute_group): <p>Information about the attribute group.</p>
    /// - On failure, responds with [`SdkError<CreateAttributeGroupError>`](crate::error::CreateAttributeGroupError)
    pub fn create_attribute_group(&self) -> crate::client::fluent_builders::CreateAttributeGroup {
        crate::client::fluent_builders::CreateAttributeGroup::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteApplication`](crate::client::fluent_builders::DeleteApplication) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application(impl Into<String>)`](crate::client::fluent_builders::DeleteApplication::application) / [`set_application(Option<String>)`](crate::client::fluent_builders::DeleteApplication::set_application): <p>The name or ID of the application.</p>
    /// - On success, responds with [`DeleteApplicationOutput`](crate::output::DeleteApplicationOutput) with field(s):
    ///   - [`application(Option<ApplicationSummary>)`](crate::output::DeleteApplicationOutput::application): <p>Information about the deleted application.</p>
    /// - On failure, responds with [`SdkError<DeleteApplicationError>`](crate::error::DeleteApplicationError)
    pub fn delete_application(&self) -> crate::client::fluent_builders::DeleteApplication {
        crate::client::fluent_builders::DeleteApplication::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteAttributeGroup`](crate::client::fluent_builders::DeleteAttributeGroup) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`attribute_group(impl Into<String>)`](crate::client::fluent_builders::DeleteAttributeGroup::attribute_group) / [`set_attribute_group(Option<String>)`](crate::client::fluent_builders::DeleteAttributeGroup::set_attribute_group): <p>The name or ID of the attribute group that holds the attributes to describe the application.</p>
    /// - On success, responds with [`DeleteAttributeGroupOutput`](crate::output::DeleteAttributeGroupOutput) with field(s):
    ///   - [`attribute_group(Option<AttributeGroupSummary>)`](crate::output::DeleteAttributeGroupOutput::attribute_group): <p>Information about the deleted attribute group.</p>
    /// - On failure, responds with [`SdkError<DeleteAttributeGroupError>`](crate::error::DeleteAttributeGroupError)
    pub fn delete_attribute_group(&self) -> crate::client::fluent_builders::DeleteAttributeGroup {
        crate::client::fluent_builders::DeleteAttributeGroup::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DisassociateAttributeGroup`](crate::client::fluent_builders::DisassociateAttributeGroup) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application(impl Into<String>)`](crate::client::fluent_builders::DisassociateAttributeGroup::application) / [`set_application(Option<String>)`](crate::client::fluent_builders::DisassociateAttributeGroup::set_application): <p>The name or ID of the application.</p>
    ///   - [`attribute_group(impl Into<String>)`](crate::client::fluent_builders::DisassociateAttributeGroup::attribute_group) / [`set_attribute_group(Option<String>)`](crate::client::fluent_builders::DisassociateAttributeGroup::set_attribute_group): <p>The name or ID of the attribute group that holds the attributes to describe the application.</p>
    /// - On success, responds with [`DisassociateAttributeGroupOutput`](crate::output::DisassociateAttributeGroupOutput) with field(s):
    ///   - [`application_arn(Option<String>)`](crate::output::DisassociateAttributeGroupOutput::application_arn): <p>The Amazon resource name (ARN) that specifies the application.</p>
    ///   - [`attribute_group_arn(Option<String>)`](crate::output::DisassociateAttributeGroupOutput::attribute_group_arn): <p>The Amazon resource name (ARN) that specifies the attribute group.</p>
    /// - On failure, responds with [`SdkError<DisassociateAttributeGroupError>`](crate::error::DisassociateAttributeGroupError)
    pub fn disassociate_attribute_group(
        &self,
    ) -> crate::client::fluent_builders::DisassociateAttributeGroup {
        crate::client::fluent_builders::DisassociateAttributeGroup::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DisassociateResource`](crate::client::fluent_builders::DisassociateResource) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application(impl Into<String>)`](crate::client::fluent_builders::DisassociateResource::application) / [`set_application(Option<String>)`](crate::client::fluent_builders::DisassociateResource::set_application): <p>The name or ID of the application.</p>
    ///   - [`resource_type(ResourceType)`](crate::client::fluent_builders::DisassociateResource::resource_type) / [`set_resource_type(Option<ResourceType>)`](crate::client::fluent_builders::DisassociateResource::set_resource_type): <p>The type of the resource that is being disassociated.</p>
    ///   - [`resource(impl Into<String>)`](crate::client::fluent_builders::DisassociateResource::resource) / [`set_resource(Option<String>)`](crate::client::fluent_builders::DisassociateResource::set_resource): <p>The name or ID of the resource.</p>
    /// - On success, responds with [`DisassociateResourceOutput`](crate::output::DisassociateResourceOutput) with field(s):
    ///   - [`application_arn(Option<String>)`](crate::output::DisassociateResourceOutput::application_arn): <p>The Amazon resource name (ARN) that specifies the application.</p>
    ///   - [`resource_arn(Option<String>)`](crate::output::DisassociateResourceOutput::resource_arn): <p>The Amazon resource name (ARN) that specifies the resource.</p>
    /// - On failure, responds with [`SdkError<DisassociateResourceError>`](crate::error::DisassociateResourceError)
    pub fn disassociate_resource(&self) -> crate::client::fluent_builders::DisassociateResource {
        crate::client::fluent_builders::DisassociateResource::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetApplication`](crate::client::fluent_builders::GetApplication) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application(impl Into<String>)`](crate::client::fluent_builders::GetApplication::application) / [`set_application(Option<String>)`](crate::client::fluent_builders::GetApplication::set_application): <p>The name or ID of the application.</p>
    /// - On success, responds with [`GetApplicationOutput`](crate::output::GetApplicationOutput) with field(s):
    ///   - [`id(Option<String>)`](crate::output::GetApplicationOutput::id): <p>The identifier of the application.</p>
    ///   - [`arn(Option<String>)`](crate::output::GetApplicationOutput::arn): <p>The Amazon resource name (ARN) that specifies the application across services.</p>
    ///   - [`name(Option<String>)`](crate::output::GetApplicationOutput::name): <p>The name of the application. The name must be unique in the region in which you are creating the application.</p>
    ///   - [`description(Option<String>)`](crate::output::GetApplicationOutput::description): <p>The description of the application.</p>
    ///   - [`creation_time(Option<DateTime>)`](crate::output::GetApplicationOutput::creation_time): <p>The ISO-8601 formatted timestamp of the moment when the application was created.</p>
    ///   - [`last_update_time(Option<DateTime>)`](crate::output::GetApplicationOutput::last_update_time): <p>The ISO-8601 formatted timestamp of the moment when the application was last updated.</p>
    ///   - [`associated_resource_count(i32)`](crate::output::GetApplicationOutput::associated_resource_count): <p>The number of top-level resources that were registered as part of this application.</p>
    ///   - [`tags(Option<HashMap<String, String>>)`](crate::output::GetApplicationOutput::tags): <p>Key-value pairs associated with the application.</p>
    ///   - [`integrations(Option<Integrations>)`](crate::output::GetApplicationOutput::integrations): <p> The information about the integration of the application with other services, such as Resource Groups. </p>
    /// - On failure, responds with [`SdkError<GetApplicationError>`](crate::error::GetApplicationError)
    pub fn get_application(&self) -> crate::client::fluent_builders::GetApplication {
        crate::client::fluent_builders::GetApplication::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetAssociatedResource`](crate::client::fluent_builders::GetAssociatedResource) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application(impl Into<String>)`](crate::client::fluent_builders::GetAssociatedResource::application) / [`set_application(Option<String>)`](crate::client::fluent_builders::GetAssociatedResource::set_application): <p>The name or ID of the application.</p>
    ///   - [`resource_type(ResourceType)`](crate::client::fluent_builders::GetAssociatedResource::resource_type) / [`set_resource_type(Option<ResourceType>)`](crate::client::fluent_builders::GetAssociatedResource::set_resource_type): <p>The type of resource associated with the application.</p>
    ///   - [`resource(impl Into<String>)`](crate::client::fluent_builders::GetAssociatedResource::resource) / [`set_resource(Option<String>)`](crate::client::fluent_builders::GetAssociatedResource::set_resource): <p>The name or ID of the resource associated with the application.</p>
    /// - On success, responds with [`GetAssociatedResourceOutput`](crate::output::GetAssociatedResourceOutput) with field(s):
    ///   - [`resource(Option<Resource>)`](crate::output::GetAssociatedResourceOutput::resource): <p>The resource associated with the application.</p>
    /// - On failure, responds with [`SdkError<GetAssociatedResourceError>`](crate::error::GetAssociatedResourceError)
    pub fn get_associated_resource(&self) -> crate::client::fluent_builders::GetAssociatedResource {
        crate::client::fluent_builders::GetAssociatedResource::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetAttributeGroup`](crate::client::fluent_builders::GetAttributeGroup) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`attribute_group(impl Into<String>)`](crate::client::fluent_builders::GetAttributeGroup::attribute_group) / [`set_attribute_group(Option<String>)`](crate::client::fluent_builders::GetAttributeGroup::set_attribute_group): <p>The name or ID of the attribute group that holds the attributes to describe the application.</p>
    /// - On success, responds with [`GetAttributeGroupOutput`](crate::output::GetAttributeGroupOutput) with field(s):
    ///   - [`id(Option<String>)`](crate::output::GetAttributeGroupOutput::id): <p>The identifier of the attribute group.</p>
    ///   - [`arn(Option<String>)`](crate::output::GetAttributeGroupOutput::arn): <p>The Amazon resource name (ARN) that specifies the attribute group across services.</p>
    ///   - [`name(Option<String>)`](crate::output::GetAttributeGroupOutput::name): <p>The name of the attribute group.</p>
    ///   - [`description(Option<String>)`](crate::output::GetAttributeGroupOutput::description): <p>The description of the attribute group that the user provides.</p>
    ///   - [`attributes(Option<String>)`](crate::output::GetAttributeGroupOutput::attributes): <p>A JSON string in the form of nested key-value pairs that represent the attributes in the group and describes an application and its components.</p>
    ///   - [`creation_time(Option<DateTime>)`](crate::output::GetAttributeGroupOutput::creation_time): <p>The ISO-8601 formatted timestamp of the moment the attribute group was created.</p>
    ///   - [`last_update_time(Option<DateTime>)`](crate::output::GetAttributeGroupOutput::last_update_time): <p>The ISO-8601 formatted timestamp of the moment the attribute group was last updated. This time is the same as the creationTime for a newly created attribute group.</p>
    ///   - [`tags(Option<HashMap<String, String>>)`](crate::output::GetAttributeGroupOutput::tags): <p>Key-value pairs associated with the attribute group.</p>
    /// - On failure, responds with [`SdkError<GetAttributeGroupError>`](crate::error::GetAttributeGroupError)
    pub fn get_attribute_group(&self) -> crate::client::fluent_builders::GetAttributeGroup {
        crate::client::fluent_builders::GetAttributeGroup::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetConfiguration`](crate::client::fluent_builders::GetConfiguration) operation.
    ///
    /// - The fluent builder takes no input, just [`send`](crate::client::fluent_builders::GetConfiguration::send) it.

    /// - On success, responds with [`GetConfigurationOutput`](crate::output::GetConfigurationOutput) with field(s):
    ///   - [`configuration(Option<AppRegistryConfiguration>)`](crate::output::GetConfigurationOutput::configuration): <p> Retrieves <code>TagKey</code> configuration from an account. </p>
    /// - On failure, responds with [`SdkError<GetConfigurationError>`](crate::error::GetConfigurationError)
    pub fn get_configuration(&self) -> crate::client::fluent_builders::GetConfiguration {
        crate::client::fluent_builders::GetConfiguration::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListApplications`](crate::client::fluent_builders::ListApplications) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListApplications::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListApplications::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListApplications::set_next_token): <p>The token to use to get the next page of results after a previous API call. </p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListApplications::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListApplications::set_max_results): <p>The upper bound of the number of results to return (cannot exceed 25). If this parameter is omitted, it defaults to 25. This value is optional.</p>
    /// - On success, responds with [`ListApplicationsOutput`](crate::output::ListApplicationsOutput) with field(s):
    ///   - [`applications(Option<Vec<ApplicationSummary>>)`](crate::output::ListApplicationsOutput::applications): <p>This list of applications.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListApplicationsOutput::next_token): <p>The token to use to get the next page of results after a previous API call. </p>
    /// - On failure, responds with [`SdkError<ListApplicationsError>`](crate::error::ListApplicationsError)
    pub fn list_applications(&self) -> crate::client::fluent_builders::ListApplications {
        crate::client::fluent_builders::ListApplications::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListAssociatedAttributeGroups`](crate::client::fluent_builders::ListAssociatedAttributeGroups) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListAssociatedAttributeGroups::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`application(impl Into<String>)`](crate::client::fluent_builders::ListAssociatedAttributeGroups::application) / [`set_application(Option<String>)`](crate::client::fluent_builders::ListAssociatedAttributeGroups::set_application): <p>The name or ID of the application.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListAssociatedAttributeGroups::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListAssociatedAttributeGroups::set_next_token): <p>The token to use to get the next page of results after a previous API call. </p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListAssociatedAttributeGroups::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListAssociatedAttributeGroups::set_max_results): <p>The upper bound of the number of results to return (cannot exceed 25). If this parameter is omitted, it defaults to 25. This value is optional.</p>
    /// - On success, responds with [`ListAssociatedAttributeGroupsOutput`](crate::output::ListAssociatedAttributeGroupsOutput) with field(s):
    ///   - [`attribute_groups(Option<Vec<String>>)`](crate::output::ListAssociatedAttributeGroupsOutput::attribute_groups): <p>A list of attribute group IDs.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListAssociatedAttributeGroupsOutput::next_token): <p>The token to use to get the next page of results after a previous API call. </p>
    /// - On failure, responds with [`SdkError<ListAssociatedAttributeGroupsError>`](crate::error::ListAssociatedAttributeGroupsError)
    pub fn list_associated_attribute_groups(
        &self,
    ) -> crate::client::fluent_builders::ListAssociatedAttributeGroups {
        crate::client::fluent_builders::ListAssociatedAttributeGroups::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListAssociatedResources`](crate::client::fluent_builders::ListAssociatedResources) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListAssociatedResources::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`application(impl Into<String>)`](crate::client::fluent_builders::ListAssociatedResources::application) / [`set_application(Option<String>)`](crate::client::fluent_builders::ListAssociatedResources::set_application): <p>The name or ID of the application.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListAssociatedResources::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListAssociatedResources::set_next_token): <p>The token to use to get the next page of results after a previous API call. </p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListAssociatedResources::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListAssociatedResources::set_max_results): <p>The upper bound of the number of results to return (cannot exceed 25). If this parameter is omitted, it defaults to 25. This value is optional.</p>
    /// - On success, responds with [`ListAssociatedResourcesOutput`](crate::output::ListAssociatedResourcesOutput) with field(s):
    ///   - [`resources(Option<Vec<ResourceInfo>>)`](crate::output::ListAssociatedResourcesOutput::resources): <p>Information about the resources.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListAssociatedResourcesOutput::next_token): <p>The token to use to get the next page of results after a previous API call. </p>
    /// - On failure, responds with [`SdkError<ListAssociatedResourcesError>`](crate::error::ListAssociatedResourcesError)
    pub fn list_associated_resources(
        &self,
    ) -> crate::client::fluent_builders::ListAssociatedResources {
        crate::client::fluent_builders::ListAssociatedResources::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListAttributeGroups`](crate::client::fluent_builders::ListAttributeGroups) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListAttributeGroups::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListAttributeGroups::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListAttributeGroups::set_next_token): <p>The token to use to get the next page of results after a previous API call. </p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListAttributeGroups::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListAttributeGroups::set_max_results): <p>The upper bound of the number of results to return (cannot exceed 25). If this parameter is omitted, it defaults to 25. This value is optional.</p>
    /// - On success, responds with [`ListAttributeGroupsOutput`](crate::output::ListAttributeGroupsOutput) with field(s):
    ///   - [`attribute_groups(Option<Vec<AttributeGroupSummary>>)`](crate::output::ListAttributeGroupsOutput::attribute_groups): <p>This list of attribute groups.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListAttributeGroupsOutput::next_token): <p>The token to use to get the next page of results after a previous API call. </p>
    /// - On failure, responds with [`SdkError<ListAttributeGroupsError>`](crate::error::ListAttributeGroupsError)
    pub fn list_attribute_groups(&self) -> crate::client::fluent_builders::ListAttributeGroups {
        crate::client::fluent_builders::ListAttributeGroups::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListAttributeGroupsForApplication`](crate::client::fluent_builders::ListAttributeGroupsForApplication) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListAttributeGroupsForApplication::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`application(impl Into<String>)`](crate::client::fluent_builders::ListAttributeGroupsForApplication::application) / [`set_application(Option<String>)`](crate::client::fluent_builders::ListAttributeGroupsForApplication::set_application): <p>The name or ID of the application.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListAttributeGroupsForApplication::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListAttributeGroupsForApplication::set_next_token): <p>This token retrieves the next page of results after a previous API call.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListAttributeGroupsForApplication::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListAttributeGroupsForApplication::set_max_results): <p>The upper bound of the number of results to return. The value cannot exceed 25. If you omit this parameter, it defaults to 25. This value is optional.</p>
    /// - On success, responds with [`ListAttributeGroupsForApplicationOutput`](crate::output::ListAttributeGroupsForApplicationOutput) with field(s):
    ///   - [`attribute_groups_details(Option<Vec<AttributeGroupDetails>>)`](crate::output::ListAttributeGroupsForApplicationOutput::attribute_groups_details): <p> The details related to a specific attribute group. </p>
    ///   - [`next_token(Option<String>)`](crate::output::ListAttributeGroupsForApplicationOutput::next_token): <p>The token to use to get the next page of results after a previous API call.</p>
    /// - On failure, responds with [`SdkError<ListAttributeGroupsForApplicationError>`](crate::error::ListAttributeGroupsForApplicationError)
    pub fn list_attribute_groups_for_application(
        &self,
    ) -> crate::client::fluent_builders::ListAttributeGroupsForApplication {
        crate::client::fluent_builders::ListAttributeGroupsForApplication::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListTagsForResource`](crate::client::fluent_builders::ListTagsForResource) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`resource_arn(impl Into<String>)`](crate::client::fluent_builders::ListTagsForResource::resource_arn) / [`set_resource_arn(Option<String>)`](crate::client::fluent_builders::ListTagsForResource::set_resource_arn): <p>The Amazon resource name (ARN) that specifies the resource.</p>
    /// - On success, responds with [`ListTagsForResourceOutput`](crate::output::ListTagsForResourceOutput) with field(s):
    ///   - [`tags(Option<HashMap<String, String>>)`](crate::output::ListTagsForResourceOutput::tags): <p>The tags on the resource.</p>
    /// - On failure, responds with [`SdkError<ListTagsForResourceError>`](crate::error::ListTagsForResourceError)
    pub fn list_tags_for_resource(&self) -> crate::client::fluent_builders::ListTagsForResource {
        crate::client::fluent_builders::ListTagsForResource::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`PutConfiguration`](crate::client::fluent_builders::PutConfiguration) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`configuration(AppRegistryConfiguration)`](crate::client::fluent_builders::PutConfiguration::configuration) / [`set_configuration(Option<AppRegistryConfiguration>)`](crate::client::fluent_builders::PutConfiguration::set_configuration): <p> Associates a <code>TagKey</code> configuration to an account. </p>
    /// - On success, responds with [`PutConfigurationOutput`](crate::output::PutConfigurationOutput)

    /// - On failure, responds with [`SdkError<PutConfigurationError>`](crate::error::PutConfigurationError)
    pub fn put_configuration(&self) -> crate::client::fluent_builders::PutConfiguration {
        crate::client::fluent_builders::PutConfiguration::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`SyncResource`](crate::client::fluent_builders::SyncResource) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`resource_type(ResourceType)`](crate::client::fluent_builders::SyncResource::resource_type) / [`set_resource_type(Option<ResourceType>)`](crate::client::fluent_builders::SyncResource::set_resource_type): <p>The type of resource of which the application will be associated.</p>
    ///   - [`resource(impl Into<String>)`](crate::client::fluent_builders::SyncResource::resource) / [`set_resource(Option<String>)`](crate::client::fluent_builders::SyncResource::set_resource): <p>An entity you can work with and specify with a name or ID. Examples include an Amazon EC2 instance, an Amazon Web Services CloudFormation stack, or an Amazon S3 bucket.</p>
    /// - On success, responds with [`SyncResourceOutput`](crate::output::SyncResourceOutput) with field(s):
    ///   - [`application_arn(Option<String>)`](crate::output::SyncResourceOutput::application_arn): <p>The Amazon resource name (ARN) that specifies the application.</p>
    ///   - [`resource_arn(Option<String>)`](crate::output::SyncResourceOutput::resource_arn): <p>The Amazon resource name (ARN) that specifies the resource.</p>
    ///   - [`action_taken(Option<SyncAction>)`](crate::output::SyncResourceOutput::action_taken): <p>The results of the output if an application is associated with an ARN value, which could be <code>syncStarted</code> or None.</p>
    /// - On failure, responds with [`SdkError<SyncResourceError>`](crate::error::SyncResourceError)
    pub fn sync_resource(&self) -> crate::client::fluent_builders::SyncResource {
        crate::client::fluent_builders::SyncResource::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`TagResource`](crate::client::fluent_builders::TagResource) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`resource_arn(impl Into<String>)`](crate::client::fluent_builders::TagResource::resource_arn) / [`set_resource_arn(Option<String>)`](crate::client::fluent_builders::TagResource::set_resource_arn): <p>The Amazon resource name (ARN) that specifies the resource.</p>
    ///   - [`tags(HashMap<String, String>)`](crate::client::fluent_builders::TagResource::tags) / [`set_tags(Option<HashMap<String, String>>)`](crate::client::fluent_builders::TagResource::set_tags): <p>The new or modified tags for the resource.</p>
    /// - On success, responds with [`TagResourceOutput`](crate::output::TagResourceOutput)

    /// - On failure, responds with [`SdkError<TagResourceError>`](crate::error::TagResourceError)
    pub fn tag_resource(&self) -> crate::client::fluent_builders::TagResource {
        crate::client::fluent_builders::TagResource::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`UntagResource`](crate::client::fluent_builders::UntagResource) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`resource_arn(impl Into<String>)`](crate::client::fluent_builders::UntagResource::resource_arn) / [`set_resource_arn(Option<String>)`](crate::client::fluent_builders::UntagResource::set_resource_arn): <p>The Amazon resource name (ARN) that specifies the resource.</p>
    ///   - [`tag_keys(Vec<String>)`](crate::client::fluent_builders::UntagResource::tag_keys) / [`set_tag_keys(Option<Vec<String>>)`](crate::client::fluent_builders::UntagResource::set_tag_keys): <p>A list of the tag keys to remove from the specified resource.</p>
    /// - On success, responds with [`UntagResourceOutput`](crate::output::UntagResourceOutput)

    /// - On failure, responds with [`SdkError<UntagResourceError>`](crate::error::UntagResourceError)
    pub fn untag_resource(&self) -> crate::client::fluent_builders::UntagResource {
        crate::client::fluent_builders::UntagResource::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`UpdateApplication`](crate::client::fluent_builders::UpdateApplication) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application(impl Into<String>)`](crate::client::fluent_builders::UpdateApplication::application) / [`set_application(Option<String>)`](crate::client::fluent_builders::UpdateApplication::set_application): <p>The name or ID of the application that will be updated.</p>
    ///   - [`name(impl Into<String>)`](crate::client::fluent_builders::UpdateApplication::name) / [`set_name(Option<String>)`](crate::client::fluent_builders::UpdateApplication::set_name): <p>Deprecated: The new name of the application. The name must be unique in the region in which you are updating the application. Please do not use this field as we have stopped supporting name updates.</p>
    ///   - [`description(impl Into<String>)`](crate::client::fluent_builders::UpdateApplication::description) / [`set_description(Option<String>)`](crate::client::fluent_builders::UpdateApplication::set_description): <p>The new description of the application.</p>
    /// - On success, responds with [`UpdateApplicationOutput`](crate::output::UpdateApplicationOutput) with field(s):
    ///   - [`application(Option<Application>)`](crate::output::UpdateApplicationOutput::application): <p>The updated information of the application.</p>
    /// - On failure, responds with [`SdkError<UpdateApplicationError>`](crate::error::UpdateApplicationError)
    pub fn update_application(&self) -> crate::client::fluent_builders::UpdateApplication {
        crate::client::fluent_builders::UpdateApplication::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`UpdateAttributeGroup`](crate::client::fluent_builders::UpdateAttributeGroup) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`attribute_group(impl Into<String>)`](crate::client::fluent_builders::UpdateAttributeGroup::attribute_group) / [`set_attribute_group(Option<String>)`](crate::client::fluent_builders::UpdateAttributeGroup::set_attribute_group): <p>The name or ID of the attribute group that holds the attributes to describe the application.</p>
    ///   - [`name(impl Into<String>)`](crate::client::fluent_builders::UpdateAttributeGroup::name) / [`set_name(Option<String>)`](crate::client::fluent_builders::UpdateAttributeGroup::set_name): <p>Deprecated: The new name of the attribute group. The name must be unique in the region in which you are updating the attribute group. Please do not use this field as we have stopped supporting name updates.</p>
    ///   - [`description(impl Into<String>)`](crate::client::fluent_builders::UpdateAttributeGroup::description) / [`set_description(Option<String>)`](crate::client::fluent_builders::UpdateAttributeGroup::set_description): <p>The description of the attribute group that the user provides.</p>
    ///   - [`attributes(impl Into<String>)`](crate::client::fluent_builders::UpdateAttributeGroup::attributes) / [`set_attributes(Option<String>)`](crate::client::fluent_builders::UpdateAttributeGroup::set_attributes): <p>A JSON string in the form of nested key-value pairs that represent the attributes in the group and describes an application and its components.</p>
    /// - On success, responds with [`UpdateAttributeGroupOutput`](crate::output::UpdateAttributeGroupOutput) with field(s):
    ///   - [`attribute_group(Option<AttributeGroup>)`](crate::output::UpdateAttributeGroupOutput::attribute_group): <p>The updated information of the attribute group.</p>
    /// - On failure, responds with [`SdkError<UpdateAttributeGroupError>`](crate::error::UpdateAttributeGroupError)
    pub fn update_attribute_group(&self) -> crate::client::fluent_builders::UpdateAttributeGroup {
        crate::client::fluent_builders::UpdateAttributeGroup::new(self.handle.clone())
    }
}

impl Client {
    /// Creates a new client from an [SDK Config](aws_types::sdk_config::SdkConfig).
    ///
    /// # Panics
    ///
    /// - This method will panic if the `sdk_config` is missing an async sleep implementation. If you experience this panic, set
    ///     the `sleep_impl` on the Config passed into this function to fix it.
    /// - This method will panic if the `sdk_config` is missing an HTTP connector. If you experience this panic, set the
    ///     `http_connector` on the Config passed into this function to fix it.
    pub fn new(sdk_config: &aws_types::sdk_config::SdkConfig) -> Self {
        Self::from_conf(sdk_config.into())
    }

    /// Creates a new client from the service [`Config`](crate::Config).
    ///
    /// # Panics
    ///
    /// - This method will panic if the `conf` is missing an async sleep implementation. If you experience this panic, set
    ///     the `sleep_impl` on the Config passed into this function to fix it.
    /// - This method will panic if the `conf` is missing an HTTP connector. If you experience this panic, set the
    ///     `http_connector` on the Config passed into this function to fix it.
    pub fn from_conf(conf: crate::Config) -> Self {
        let retry_config = conf
            .retry_config()
            .cloned()
            .unwrap_or_else(aws_smithy_types::retry::RetryConfig::disabled);
        let timeout_config = conf
            .timeout_config()
            .cloned()
            .unwrap_or_else(aws_smithy_types::timeout::TimeoutConfig::disabled);
        let sleep_impl = conf.sleep_impl();
        if (retry_config.has_retry() || timeout_config.has_timeouts()) && sleep_impl.is_none() {
            panic!("An async sleep implementation is required for retries or timeouts to work. \
                                    Set the `sleep_impl` on the Config passed into this function to fix this panic.");
        }

        let connector = conf.http_connector().and_then(|c| {
            let timeout_config = conf
                .timeout_config()
                .cloned()
                .unwrap_or_else(aws_smithy_types::timeout::TimeoutConfig::disabled);
            let connector_settings =
                aws_smithy_client::http_connector::ConnectorSettings::from_timeout_config(
                    &timeout_config,
                );
            c.connector(&connector_settings, conf.sleep_impl())
        });

        let builder = aws_smithy_client::Builder::new();

        let builder = match connector {
            // Use provided connector
            Some(c) => builder.connector(c),
            None => {
                #[cfg(any(feature = "rustls", feature = "native-tls"))]
                {
                    // Use default connector based on enabled features
                    builder.dyn_https_connector(
                        aws_smithy_client::http_connector::ConnectorSettings::from_timeout_config(
                            &timeout_config,
                        ),
                    )
                }
                #[cfg(not(any(feature = "rustls", feature = "native-tls")))]
                {
                    panic!("No HTTP connector was available. Enable the `rustls` or `native-tls` crate feature or set a connector to fix this.");
                }
            }
        };
        let mut builder = builder
            .middleware(aws_smithy_client::erase::DynMiddleware::new(
                crate::middleware::DefaultMiddleware::new(),
            ))
            .retry_config(retry_config.into())
            .operation_timeout_config(timeout_config.into());
        builder.set_sleep_impl(sleep_impl);
        let client = builder.build();

        Self {
            handle: std::sync::Arc::new(Handle { client, conf }),
        }
    }
}

/// Utilities to ergonomically construct a request to the service.
///
/// Fluent builders are created through the [`Client`](crate::client::Client) by calling
/// one if its operation methods. After parameters are set using the builder methods,
/// the `send` method can be called to initiate the request.
pub mod fluent_builders;
