// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
/// Operation shape for `CreateHomeRegionControl`.
///
/// This is usually constructed for you using the the fluent builder returned by
/// [`create_home_region_control`](crate::client::fluent_builders::CreateHomeRegionControl).
///
/// `ParseStrictResponse` impl for `CreateHomeRegionControl`.
#[derive(std::clone::Clone, std::default::Default, std::fmt::Debug)]
pub struct CreateHomeRegionControl {
    _private: (),
}
impl CreateHomeRegionControl {
    /// Creates a new builder-style object to manufacture [`CreateHomeRegionControlInput`](crate::input::CreateHomeRegionControlInput).
    pub fn builder() -> crate::input::create_home_region_control_input::Builder {
        crate::input::create_home_region_control_input::Builder::default()
    }
    /// Creates a new `CreateHomeRegionControl` operation.
    pub fn new() -> Self {
        Self { _private: () }
    }
}
impl aws_smithy_http::response::ParseStrictResponse for CreateHomeRegionControl {
    type Output = std::result::Result<
        crate::output::CreateHomeRegionControlOutput,
        crate::error::CreateHomeRegionControlError,
    >;
    fn parse(&self, response: &http::Response<bytes::Bytes>) -> Self::Output {
        tracing::debug!(request_id = ?aws_http::request_id::RequestId::request_id(response));
        if !response.status().is_success() && response.status().as_u16() != 200 {
            crate::protocol_serde::shape_create_home_region_control::de_create_home_region_control_http_error(response)
        } else {
            crate::protocol_serde::shape_create_home_region_control::de_create_home_region_control_http_response(response)
        }
    }
}

/// Operation shape for `DescribeHomeRegionControls`.
///
/// This is usually constructed for you using the the fluent builder returned by
/// [`describe_home_region_controls`](crate::client::fluent_builders::DescribeHomeRegionControls).
///
/// `ParseStrictResponse` impl for `DescribeHomeRegionControls`.
#[derive(std::clone::Clone, std::default::Default, std::fmt::Debug)]
pub struct DescribeHomeRegionControls {
    _private: (),
}
impl DescribeHomeRegionControls {
    /// Creates a new builder-style object to manufacture [`DescribeHomeRegionControlsInput`](crate::input::DescribeHomeRegionControlsInput).
    pub fn builder() -> crate::input::describe_home_region_controls_input::Builder {
        crate::input::describe_home_region_controls_input::Builder::default()
    }
    /// Creates a new `DescribeHomeRegionControls` operation.
    pub fn new() -> Self {
        Self { _private: () }
    }
}
impl aws_smithy_http::response::ParseStrictResponse for DescribeHomeRegionControls {
    type Output = std::result::Result<
        crate::output::DescribeHomeRegionControlsOutput,
        crate::error::DescribeHomeRegionControlsError,
    >;
    fn parse(&self, response: &http::Response<bytes::Bytes>) -> Self::Output {
        tracing::debug!(request_id = ?aws_http::request_id::RequestId::request_id(response));
        if !response.status().is_success() && response.status().as_u16() != 200 {
            crate::protocol_serde::shape_describe_home_region_controls::de_describe_home_region_controls_http_error(response)
        } else {
            crate::protocol_serde::shape_describe_home_region_controls::de_describe_home_region_controls_http_response(response)
        }
    }
}

/// Operation shape for `GetHomeRegion`.
///
/// This is usually constructed for you using the the fluent builder returned by
/// [`get_home_region`](crate::client::fluent_builders::GetHomeRegion).
///
/// `ParseStrictResponse` impl for `GetHomeRegion`.
#[derive(std::clone::Clone, std::default::Default, std::fmt::Debug)]
pub struct GetHomeRegion {
    _private: (),
}
impl GetHomeRegion {
    /// Creates a new builder-style object to manufacture [`GetHomeRegionInput`](crate::input::GetHomeRegionInput).
    pub fn builder() -> crate::input::get_home_region_input::Builder {
        crate::input::get_home_region_input::Builder::default()
    }
    /// Creates a new `GetHomeRegion` operation.
    pub fn new() -> Self {
        Self { _private: () }
    }
}
impl aws_smithy_http::response::ParseStrictResponse for GetHomeRegion {
    type Output =
        std::result::Result<crate::output::GetHomeRegionOutput, crate::error::GetHomeRegionError>;
    fn parse(&self, response: &http::Response<bytes::Bytes>) -> Self::Output {
        tracing::debug!(request_id = ?aws_http::request_id::RequestId::request_id(response));
        if !response.status().is_success() && response.status().as_u16() != 200 {
            crate::protocol_serde::shape_get_home_region::de_get_home_region_http_error(response)
        } else {
            crate::protocol_serde::shape_get_home_region::de_get_home_region_http_response(response)
        }
    }
}

/// Operation customization and supporting types
pub mod customize;
