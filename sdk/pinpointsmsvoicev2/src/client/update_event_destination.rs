// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateEventDestination`](crate::operation::update_event_destination::builders::UpdateEventDestinationFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`configuration_set_name(impl Into<String>)`](crate::operation::update_event_destination::builders::UpdateEventDestinationFluentBuilder::configuration_set_name) / [`set_configuration_set_name(Option<String>)`](crate::operation::update_event_destination::builders::UpdateEventDestinationFluentBuilder::set_configuration_set_name):<br>required: **true**<br><p>The configuration set to update with the new event destination. Valid values for this can be the ConfigurationSetName or ConfigurationSetArn.</p><br>
    ///   - [`event_destination_name(impl Into<String>)`](crate::operation::update_event_destination::builders::UpdateEventDestinationFluentBuilder::event_destination_name) / [`set_event_destination_name(Option<String>)`](crate::operation::update_event_destination::builders::UpdateEventDestinationFluentBuilder::set_event_destination_name):<br>required: **true**<br><p>The name to use for the event destination.</p><br>
    ///   - [`enabled(bool)`](crate::operation::update_event_destination::builders::UpdateEventDestinationFluentBuilder::enabled) / [`set_enabled(Option<bool>)`](crate::operation::update_event_destination::builders::UpdateEventDestinationFluentBuilder::set_enabled):<br>required: **false**<br><p>When set to true logging is enabled.</p><br>
    ///   - [`matching_event_types(EventType)`](crate::operation::update_event_destination::builders::UpdateEventDestinationFluentBuilder::matching_event_types) / [`set_matching_event_types(Option<Vec::<EventType>>)`](crate::operation::update_event_destination::builders::UpdateEventDestinationFluentBuilder::set_matching_event_types):<br>required: **false**<br><p>An array of event types that determine which events to log.</p><br>
    ///   - [`cloud_watch_logs_destination(CloudWatchLogsDestination)`](crate::operation::update_event_destination::builders::UpdateEventDestinationFluentBuilder::cloud_watch_logs_destination) / [`set_cloud_watch_logs_destination(Option<CloudWatchLogsDestination>)`](crate::operation::update_event_destination::builders::UpdateEventDestinationFluentBuilder::set_cloud_watch_logs_destination):<br>required: **false**<br><p>An object that contains information about an event destination that sends data to CloudWatch Logs.</p><br>
    ///   - [`kinesis_firehose_destination(KinesisFirehoseDestination)`](crate::operation::update_event_destination::builders::UpdateEventDestinationFluentBuilder::kinesis_firehose_destination) / [`set_kinesis_firehose_destination(Option<KinesisFirehoseDestination>)`](crate::operation::update_event_destination::builders::UpdateEventDestinationFluentBuilder::set_kinesis_firehose_destination):<br>required: **false**<br><p>An object that contains information about an event destination for logging to Kinesis Data Firehose.</p><br>
    ///   - [`sns_destination(SnsDestination)`](crate::operation::update_event_destination::builders::UpdateEventDestinationFluentBuilder::sns_destination) / [`set_sns_destination(Option<SnsDestination>)`](crate::operation::update_event_destination::builders::UpdateEventDestinationFluentBuilder::set_sns_destination):<br>required: **false**<br><p>An object that contains information about an event destination that sends data to Amazon SNS.</p><br>
    /// - On success, responds with [`UpdateEventDestinationOutput`](crate::operation::update_event_destination::UpdateEventDestinationOutput) with field(s):
    ///   - [`configuration_set_arn(Option<String>)`](crate::operation::update_event_destination::UpdateEventDestinationOutput::configuration_set_arn): <p>The Amazon Resource Name (ARN) for the ConfigurationSet that was updated.</p>
    ///   - [`configuration_set_name(Option<String>)`](crate::operation::update_event_destination::UpdateEventDestinationOutput::configuration_set_name): <p>The name of the configuration set.</p>
    ///   - [`event_destination(Option<EventDestination>)`](crate::operation::update_event_destination::UpdateEventDestinationOutput::event_destination): <p>An EventDestination object containing the details of where events will be logged. </p>
    /// - On failure, responds with [`SdkError<UpdateEventDestinationError>`](crate::operation::update_event_destination::UpdateEventDestinationError)
    pub fn update_event_destination(&self) -> crate::operation::update_event_destination::builders::UpdateEventDestinationFluentBuilder {
        crate::operation::update_event_destination::builders::UpdateEventDestinationFluentBuilder::new(self.handle.clone())
    }
}
