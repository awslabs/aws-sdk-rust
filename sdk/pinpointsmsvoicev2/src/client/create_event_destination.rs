// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateEventDestination`](crate::operation::create_event_destination::builders::CreateEventDestinationFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`configuration_set_name(impl Into<String>)`](crate::operation::create_event_destination::builders::CreateEventDestinationFluentBuilder::configuration_set_name) / [`set_configuration_set_name(Option<String>)`](crate::operation::create_event_destination::builders::CreateEventDestinationFluentBuilder::set_configuration_set_name):<br>required: **true**<br><p>Either the name of the configuration set or the configuration set ARN to apply event logging to. The ConfigurateSetName and ConfigurationSetArn can be found using the <code>DescribeConfigurationSets</code> action.</p><br>
    ///   - [`event_destination_name(impl Into<String>)`](crate::operation::create_event_destination::builders::CreateEventDestinationFluentBuilder::event_destination_name) / [`set_event_destination_name(Option<String>)`](crate::operation::create_event_destination::builders::CreateEventDestinationFluentBuilder::set_event_destination_name):<br>required: **true**<br><p>The name that identifies the event destination.</p><br>
    ///   - [`matching_event_types(EventType)`](crate::operation::create_event_destination::builders::CreateEventDestinationFluentBuilder::matching_event_types) / [`set_matching_event_types(Option<Vec::<EventType>>)`](crate::operation::create_event_destination::builders::CreateEventDestinationFluentBuilder::set_matching_event_types):<br>required: **true**<br><p>An array of event types that determine which events to log. If "ALL" is used, then Amazon Pinpoint logs every event type.</p><br>
    ///   - [`cloud_watch_logs_destination(CloudWatchLogsDestination)`](crate::operation::create_event_destination::builders::CreateEventDestinationFluentBuilder::cloud_watch_logs_destination) / [`set_cloud_watch_logs_destination(Option<CloudWatchLogsDestination>)`](crate::operation::create_event_destination::builders::CreateEventDestinationFluentBuilder::set_cloud_watch_logs_destination):<br>required: **false**<br><p>An object that contains information about an event destination for logging to Amazon CloudWatch logs.</p><br>
    ///   - [`kinesis_firehose_destination(KinesisFirehoseDestination)`](crate::operation::create_event_destination::builders::CreateEventDestinationFluentBuilder::kinesis_firehose_destination) / [`set_kinesis_firehose_destination(Option<KinesisFirehoseDestination>)`](crate::operation::create_event_destination::builders::CreateEventDestinationFluentBuilder::set_kinesis_firehose_destination):<br>required: **false**<br><p>An object that contains information about an event destination for logging to Amazon Kinesis Data Firehose.</p><br>
    ///   - [`sns_destination(SnsDestination)`](crate::operation::create_event_destination::builders::CreateEventDestinationFluentBuilder::sns_destination) / [`set_sns_destination(Option<SnsDestination>)`](crate::operation::create_event_destination::builders::CreateEventDestinationFluentBuilder::set_sns_destination):<br>required: **false**<br><p>An object that contains information about an event destination for logging to Amazon SNS.</p><br>
    ///   - [`client_token(impl Into<String>)`](crate::operation::create_event_destination::builders::CreateEventDestinationFluentBuilder::client_token) / [`set_client_token(Option<String>)`](crate::operation::create_event_destination::builders::CreateEventDestinationFluentBuilder::set_client_token):<br>required: **false**<br><p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If you don't specify a client token, a randomly generated token is used for the request to ensure idempotency.</p><br>
    /// - On success, responds with [`CreateEventDestinationOutput`](crate::operation::create_event_destination::CreateEventDestinationOutput) with field(s):
    ///   - [`configuration_set_arn(Option<String>)`](crate::operation::create_event_destination::CreateEventDestinationOutput::configuration_set_arn): <p>The ARN of the configuration set.</p>
    ///   - [`configuration_set_name(Option<String>)`](crate::operation::create_event_destination::CreateEventDestinationOutput::configuration_set_name): <p>The name of the configuration set.</p>
    ///   - [`event_destination(Option<EventDestination>)`](crate::operation::create_event_destination::CreateEventDestinationOutput::event_destination): <p>The details of the destination where events are logged.</p>
    /// - On failure, responds with [`SdkError<CreateEventDestinationError>`](crate::operation::create_event_destination::CreateEventDestinationError)
    pub fn create_event_destination(&self) -> crate::operation::create_event_destination::builders::CreateEventDestinationFluentBuilder {
        crate::operation::create_event_destination::builders::CreateEventDestinationFluentBuilder::new(self.handle.clone())
    }
}
