// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeSpendLimits`](crate::client::fluent_builders::DescribeSpendLimits) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::DescribeSpendLimits::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::DescribeSpendLimits::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::DescribeSpendLimits::set_next_token): <p>The token to be used for the next set of paginated results. You don't need to supply a value for this field in the initial request.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::DescribeSpendLimits::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::DescribeSpendLimits::set_max_results): <p>The maximum number of results to return per each request.</p>
    /// - On success, responds with [`DescribeSpendLimitsOutput`](crate::output::DescribeSpendLimitsOutput) with field(s):
    ///   - [`spend_limits(Option<Vec<SpendLimit>>)`](crate::output::DescribeSpendLimitsOutput::spend_limits): <p>An array of SpendLimit objects that contain the details for the requested spend limits.</p>
    ///   - [`next_token(Option<String>)`](crate::output::DescribeSpendLimitsOutput::next_token): <p>The token to be used for the next set of paginated results. If this field is empty then there are no more results.</p>
    /// - On failure, responds with [`SdkError<DescribeSpendLimitsError>`](crate::error::DescribeSpendLimitsError)
    pub fn describe_spend_limits(&self) -> crate::client::fluent_builders::DescribeSpendLimits {
        crate::client::fluent_builders::DescribeSpendLimits::new(self.handle.clone())
    }
}
