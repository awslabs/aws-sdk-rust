// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[doc(inline)]
pub use aws_smithy_client::Builder;
#[derive(Debug)]
pub(crate) struct Handle {
    pub(crate) client: aws_smithy_client::Client<
        aws_smithy_client::erase::DynConnector,
        aws_smithy_client::erase::DynMiddleware<aws_smithy_client::erase::DynConnector>,
    >,
    pub(crate) conf: crate::Config,
}

/// Client for Amazon Pinpoint SMS Voice V2
///
/// Client for invoking operations on Amazon Pinpoint SMS Voice V2. Each operation on Amazon Pinpoint SMS Voice V2 is a method on this
/// this struct. `.send()` MUST be invoked on the generated operations to dispatch the request to the service.
///
/// # Examples
/// **Constructing a client and invoking an operation**
/// ```rust,no_run
/// # async fn docs() {
///     // create a shared configuration. This can be used & shared between multiple service clients.
///     let shared_config = aws_config::load_from_env().await;
///     let client = aws_sdk_pinpointsmsvoicev2::Client::new(&shared_config);
///     // invoke an operation
///     /* let rsp = client
///         .<operation_name>().
///         .<param>("some value")
///         .send().await; */
/// # }
/// ```
/// **Constructing a client with custom configuration**
/// ```rust,no_run
/// use aws_config::retry::RetryConfig;
/// # async fn docs() {
/// let shared_config = aws_config::load_from_env().await;
/// let config = aws_sdk_pinpointsmsvoicev2::config::Builder::from(&shared_config)
///   .retry_config(RetryConfig::disabled())
///   .build();
/// let client = aws_sdk_pinpointsmsvoicev2::Client::from_conf(config);
/// # }
#[derive(std::fmt::Debug)]
pub struct Client {
    handle: std::sync::Arc<Handle>,
}

impl std::clone::Clone for Client {
    fn clone(&self) -> Self {
        Self {
            handle: self.handle.clone(),
        }
    }
}

impl
    From<
        aws_smithy_client::Client<
            aws_smithy_client::erase::DynConnector,
            aws_smithy_client::erase::DynMiddleware<aws_smithy_client::erase::DynConnector>,
        >,
    > for Client
{
    fn from(
        client: aws_smithy_client::Client<
            aws_smithy_client::erase::DynConnector,
            aws_smithy_client::erase::DynMiddleware<aws_smithy_client::erase::DynConnector>,
        >,
    ) -> Self {
        Self::with_config(client, crate::Config::builder().build())
    }
}

impl Client {
    /// Creates a client with the given service configuration.
    pub fn with_config(
        client: aws_smithy_client::Client<
            aws_smithy_client::erase::DynConnector,
            aws_smithy_client::erase::DynMiddleware<aws_smithy_client::erase::DynConnector>,
        >,
        conf: crate::Config,
    ) -> Self {
        Self {
            handle: std::sync::Arc::new(Handle { client, conf }),
        }
    }

    /// Returns the client's configuration.
    pub fn conf(&self) -> &crate::Config {
        &self.handle.conf
    }
}
impl Client {
    /// Constructs a fluent builder for the [`AssociateOriginationIdentity`](crate::client::fluent_builders::AssociateOriginationIdentity) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`pool_id(impl Into<String>)`](crate::client::fluent_builders::AssociateOriginationIdentity::pool_id) / [`set_pool_id(Option<String>)`](crate::client::fluent_builders::AssociateOriginationIdentity::set_pool_id): <p>The pool to update with the new Identity. This value can be either the PoolId or PoolArn, and you can find these values using <code>DescribePools</code>.</p>
    ///   - [`origination_identity(impl Into<String>)`](crate::client::fluent_builders::AssociateOriginationIdentity::origination_identity) / [`set_origination_identity(Option<String>)`](crate::client::fluent_builders::AssociateOriginationIdentity::set_origination_identity): <p>The origination identity to use, such as PhoneNumberId, PhoneNumberArn, SenderId, or SenderIdArn. You can use <code>DescribePhoneNumbers</code> to find the values for PhoneNumberId and PhoneNumberArn, while <code>DescribeSenderIds</code> can be used to get the values for SenderId and SenderIdArn.</p>
    ///   - [`iso_country_code(impl Into<String>)`](crate::client::fluent_builders::AssociateOriginationIdentity::iso_country_code) / [`set_iso_country_code(Option<String>)`](crate::client::fluent_builders::AssociateOriginationIdentity::set_iso_country_code): <p>The new two-character code, in ISO 3166-1 alpha-2 format, for the country or region of the origination identity.</p>
    ///   - [`client_token(impl Into<String>)`](crate::client::fluent_builders::AssociateOriginationIdentity::client_token) / [`set_client_token(Option<String>)`](crate::client::fluent_builders::AssociateOriginationIdentity::set_client_token): <p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If you don't specify a client token, a randomly generated token is used for the request to ensure idempotency.</p>
    /// - On success, responds with [`AssociateOriginationIdentityOutput`](crate::output::AssociateOriginationIdentityOutput) with field(s):
    ///   - [`pool_arn(Option<String>)`](crate::output::AssociateOriginationIdentityOutput::pool_arn): <p>The Amazon Resource Name (ARN) of the pool that is now associated with the origination identity.</p>
    ///   - [`pool_id(Option<String>)`](crate::output::AssociateOriginationIdentityOutput::pool_id): <p>The PoolId of the pool that is now associated with the origination identity.</p>
    ///   - [`origination_identity_arn(Option<String>)`](crate::output::AssociateOriginationIdentityOutput::origination_identity_arn): <p>The PhoneNumberArn or SenderIdArn of the origination identity.</p>
    ///   - [`origination_identity(Option<String>)`](crate::output::AssociateOriginationIdentityOutput::origination_identity): <p>The PhoneNumberId or SenderId of the origination identity.</p>
    ///   - [`iso_country_code(Option<String>)`](crate::output::AssociateOriginationIdentityOutput::iso_country_code): <p>The two-character code, in ISO 3166-1 alpha-2 format, for the country or region. </p>
    /// - On failure, responds with [`SdkError<AssociateOriginationIdentityError>`](crate::error::AssociateOriginationIdentityError)
    pub fn associate_origination_identity(
        &self,
    ) -> crate::client::fluent_builders::AssociateOriginationIdentity {
        crate::client::fluent_builders::AssociateOriginationIdentity::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`CreateConfigurationSet`](crate::client::fluent_builders::CreateConfigurationSet) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`configuration_set_name(impl Into<String>)`](crate::client::fluent_builders::CreateConfigurationSet::configuration_set_name) / [`set_configuration_set_name(Option<String>)`](crate::client::fluent_builders::CreateConfigurationSet::set_configuration_set_name): <p>The name to use for the new configuration set.</p>
    ///   - [`tags(Vec<Tag>)`](crate::client::fluent_builders::CreateConfigurationSet::tags) / [`set_tags(Option<Vec<Tag>>)`](crate::client::fluent_builders::CreateConfigurationSet::set_tags): <p>An array of key and value pair tags that's associated with the new configuration set. </p>
    ///   - [`client_token(impl Into<String>)`](crate::client::fluent_builders::CreateConfigurationSet::client_token) / [`set_client_token(Option<String>)`](crate::client::fluent_builders::CreateConfigurationSet::set_client_token): <p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If you don't specify a client token, a randomly generated token is used for the request to ensure idempotency.</p>
    /// - On success, responds with [`CreateConfigurationSetOutput`](crate::output::CreateConfigurationSetOutput) with field(s):
    ///   - [`configuration_set_arn(Option<String>)`](crate::output::CreateConfigurationSetOutput::configuration_set_arn): <p>The Amazon Resource Name (ARN) of the newly created configuration set.</p>
    ///   - [`configuration_set_name(Option<String>)`](crate::output::CreateConfigurationSetOutput::configuration_set_name): <p>The name of the new configuration set.</p>
    ///   - [`tags(Option<Vec<Tag>>)`](crate::output::CreateConfigurationSetOutput::tags): <p>An array of key and value pair tags that's associated with the configuration set.</p>
    ///   - [`created_timestamp(Option<DateTime>)`](crate::output::CreateConfigurationSetOutput::created_timestamp): <p>The time when the configuration set was created, in <a href="https://www.epochconverter.com/">UNIX epoch time</a> format.</p>
    /// - On failure, responds with [`SdkError<CreateConfigurationSetError>`](crate::error::CreateConfigurationSetError)
    pub fn create_configuration_set(
        &self,
    ) -> crate::client::fluent_builders::CreateConfigurationSet {
        crate::client::fluent_builders::CreateConfigurationSet::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`CreateEventDestination`](crate::client::fluent_builders::CreateEventDestination) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`configuration_set_name(impl Into<String>)`](crate::client::fluent_builders::CreateEventDestination::configuration_set_name) / [`set_configuration_set_name(Option<String>)`](crate::client::fluent_builders::CreateEventDestination::set_configuration_set_name): <p>Either the name of the configuration set or the configuration set ARN to apply event logging to. The ConfigurateSetName and ConfigurationSetArn can be found using the <code>DescribeConfigurationSets</code> action.</p>
    ///   - [`event_destination_name(impl Into<String>)`](crate::client::fluent_builders::CreateEventDestination::event_destination_name) / [`set_event_destination_name(Option<String>)`](crate::client::fluent_builders::CreateEventDestination::set_event_destination_name): <p>The name that identifies the event destination.</p>
    ///   - [`matching_event_types(Vec<EventType>)`](crate::client::fluent_builders::CreateEventDestination::matching_event_types) / [`set_matching_event_types(Option<Vec<EventType>>)`](crate::client::fluent_builders::CreateEventDestination::set_matching_event_types): <p>An array of event types that determine which events to log. If "ALL" is used, then Amazon Pinpoint logs every event type.</p>
    ///   - [`cloud_watch_logs_destination(CloudWatchLogsDestination)`](crate::client::fluent_builders::CreateEventDestination::cloud_watch_logs_destination) / [`set_cloud_watch_logs_destination(Option<CloudWatchLogsDestination>)`](crate::client::fluent_builders::CreateEventDestination::set_cloud_watch_logs_destination): <p>An object that contains information about an event destination for logging to Amazon CloudWatch logs.</p>
    ///   - [`kinesis_firehose_destination(KinesisFirehoseDestination)`](crate::client::fluent_builders::CreateEventDestination::kinesis_firehose_destination) / [`set_kinesis_firehose_destination(Option<KinesisFirehoseDestination>)`](crate::client::fluent_builders::CreateEventDestination::set_kinesis_firehose_destination): <p>An object that contains information about an event destination for logging to Amazon Kinesis Data Firehose.</p>
    ///   - [`sns_destination(SnsDestination)`](crate::client::fluent_builders::CreateEventDestination::sns_destination) / [`set_sns_destination(Option<SnsDestination>)`](crate::client::fluent_builders::CreateEventDestination::set_sns_destination): <p>An object that contains information about an event destination for logging to Amazon SNS.</p>
    ///   - [`client_token(impl Into<String>)`](crate::client::fluent_builders::CreateEventDestination::client_token) / [`set_client_token(Option<String>)`](crate::client::fluent_builders::CreateEventDestination::set_client_token): <p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If you don't specify a client token, a randomly generated token is used for the request to ensure idempotency.</p>
    /// - On success, responds with [`CreateEventDestinationOutput`](crate::output::CreateEventDestinationOutput) with field(s):
    ///   - [`configuration_set_arn(Option<String>)`](crate::output::CreateEventDestinationOutput::configuration_set_arn): <p>The ARN of the configuration set.</p>
    ///   - [`configuration_set_name(Option<String>)`](crate::output::CreateEventDestinationOutput::configuration_set_name): <p>The name of the configuration set.</p>
    ///   - [`event_destination(Option<EventDestination>)`](crate::output::CreateEventDestinationOutput::event_destination): <p>The details of the destination where events are logged.</p>
    /// - On failure, responds with [`SdkError<CreateEventDestinationError>`](crate::error::CreateEventDestinationError)
    pub fn create_event_destination(
        &self,
    ) -> crate::client::fluent_builders::CreateEventDestination {
        crate::client::fluent_builders::CreateEventDestination::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`CreateOptOutList`](crate::client::fluent_builders::CreateOptOutList) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`opt_out_list_name(impl Into<String>)`](crate::client::fluent_builders::CreateOptOutList::opt_out_list_name) / [`set_opt_out_list_name(Option<String>)`](crate::client::fluent_builders::CreateOptOutList::set_opt_out_list_name): <p>The name of the new OptOutList.</p>
    ///   - [`tags(Vec<Tag>)`](crate::client::fluent_builders::CreateOptOutList::tags) / [`set_tags(Option<Vec<Tag>>)`](crate::client::fluent_builders::CreateOptOutList::set_tags): <p>An array of tags (key and value pairs) to associate with the new OptOutList.</p>
    ///   - [`client_token(impl Into<String>)`](crate::client::fluent_builders::CreateOptOutList::client_token) / [`set_client_token(Option<String>)`](crate::client::fluent_builders::CreateOptOutList::set_client_token): <p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If you don't specify a client token, a randomly generated token is used for the request to ensure idempotency.</p>
    /// - On success, responds with [`CreateOptOutListOutput`](crate::output::CreateOptOutListOutput) with field(s):
    ///   - [`opt_out_list_arn(Option<String>)`](crate::output::CreateOptOutListOutput::opt_out_list_arn): <p>The Amazon Resource Name (ARN) for the OptOutList.</p>
    ///   - [`opt_out_list_name(Option<String>)`](crate::output::CreateOptOutListOutput::opt_out_list_name): <p>The name of the new OptOutList.</p>
    ///   - [`tags(Option<Vec<Tag>>)`](crate::output::CreateOptOutListOutput::tags): <p>An array of tags (key and value pairs) associated with the new OptOutList.</p>
    ///   - [`created_timestamp(Option<DateTime>)`](crate::output::CreateOptOutListOutput::created_timestamp): <p>The time when the pool was created, in <a href="https://www.epochconverter.com/">UNIX epoch time</a> format.</p>
    /// - On failure, responds with [`SdkError<CreateOptOutListError>`](crate::error::CreateOptOutListError)
    pub fn create_opt_out_list(&self) -> crate::client::fluent_builders::CreateOptOutList {
        crate::client::fluent_builders::CreateOptOutList::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`CreatePool`](crate::client::fluent_builders::CreatePool) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`origination_identity(impl Into<String>)`](crate::client::fluent_builders::CreatePool::origination_identity) / [`set_origination_identity(Option<String>)`](crate::client::fluent_builders::CreatePool::set_origination_identity): <p>The origination identity to use such as a PhoneNumberId, PhoneNumberArn, SenderId or SenderIdArn. You can use <code>DescribePhoneNumbers</code> to find the values for PhoneNumberId and PhoneNumberArn while <code>DescribeSenderIds</code> can be used to get the values for SenderId and SenderIdArn.</p>
    ///   - [`iso_country_code(impl Into<String>)`](crate::client::fluent_builders::CreatePool::iso_country_code) / [`set_iso_country_code(Option<String>)`](crate::client::fluent_builders::CreatePool::set_iso_country_code): <p>The new two-character code, in ISO 3166-1 alpha-2 format, for the country or region of the new pool.</p>
    ///   - [`message_type(MessageType)`](crate::client::fluent_builders::CreatePool::message_type) / [`set_message_type(Option<MessageType>)`](crate::client::fluent_builders::CreatePool::set_message_type): <p>The type of message. Valid values are TRANSACTIONAL for messages that are critical or time-sensitive and PROMOTIONAL for messages that aren't critical or time-sensitive.</p>
    ///   - [`deletion_protection_enabled(bool)`](crate::client::fluent_builders::CreatePool::deletion_protection_enabled) / [`set_deletion_protection_enabled(Option<bool>)`](crate::client::fluent_builders::CreatePool::set_deletion_protection_enabled): <p>By default this is set to false. When set to true the pool can't be deleted. You can change this value using the <code>UpdatePool</code> action.</p>
    ///   - [`tags(Vec<Tag>)`](crate::client::fluent_builders::CreatePool::tags) / [`set_tags(Option<Vec<Tag>>)`](crate::client::fluent_builders::CreatePool::set_tags): <p>An array of tags (key and value pairs) associated with the pool.</p>
    ///   - [`client_token(impl Into<String>)`](crate::client::fluent_builders::CreatePool::client_token) / [`set_client_token(Option<String>)`](crate::client::fluent_builders::CreatePool::set_client_token): <p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If you don't specify a client token, a randomly generated token is used for the request to ensure idempotency.</p>
    /// - On success, responds with [`CreatePoolOutput`](crate::output::CreatePoolOutput) with field(s):
    ///   - [`pool_arn(Option<String>)`](crate::output::CreatePoolOutput::pool_arn): <p>The Amazon Resource Name (ARN) for the pool.</p>
    ///   - [`pool_id(Option<String>)`](crate::output::CreatePoolOutput::pool_id): <p>The unique identifier for the pool.</p>
    ///   - [`status(Option<PoolStatus>)`](crate::output::CreatePoolOutput::status): <p>The current status of the pool.</p>  <ul>   <li> <p>CREATING: The pool is currently being created and isn't yet available for use.</p> </li>   <li> <p>ACTIVE: The pool is active and available for use.</p> </li>   <li> <p>DELETING: The pool is being deleted.</p> </li>  </ul>
    ///   - [`message_type(Option<MessageType>)`](crate::output::CreatePoolOutput::message_type): <p>The type of message for the pool to use.</p>
    ///   - [`two_way_enabled(bool)`](crate::output::CreatePoolOutput::two_way_enabled): <p>By default this is set to false. When set to true you can receive incoming text messages from your end recipients.</p>
    ///   - [`two_way_channel_arn(Option<String>)`](crate::output::CreatePoolOutput::two_way_channel_arn): <p>The Amazon Resource Name (ARN) of the two way channel.</p>
    ///   - [`self_managed_opt_outs_enabled(bool)`](crate::output::CreatePoolOutput::self_managed_opt_outs_enabled): <p>By default this is set to false. When an end recipient sends a message that begins with HELP or STOP to one of your dedicated numbers, Amazon Pinpoint automatically replies with a customizable message and adds the end recipient to the OptOutList. When set to true you're responsible for responding to HELP and STOP requests. You're also responsible for tracking and honoring opt-out requests.</p>
    ///   - [`opt_out_list_name(Option<String>)`](crate::output::CreatePoolOutput::opt_out_list_name): <p>The name of the OptOutList associated with the pool.</p>
    ///   - [`shared_routes_enabled(bool)`](crate::output::CreatePoolOutput::shared_routes_enabled): <p>Indicates whether shared routes are enabled for the pool.</p>
    ///   - [`deletion_protection_enabled(bool)`](crate::output::CreatePoolOutput::deletion_protection_enabled): <p>When set to true deletion protection is enabled. By default this is set to false. </p>
    ///   - [`tags(Option<Vec<Tag>>)`](crate::output::CreatePoolOutput::tags): <p>An array of tags (key and value pairs) associated with the pool.</p>
    ///   - [`created_timestamp(Option<DateTime>)`](crate::output::CreatePoolOutput::created_timestamp): <p>The time when the pool was created, in <a href="https://www.epochconverter.com/">UNIX epoch time</a> format.</p>
    /// - On failure, responds with [`SdkError<CreatePoolError>`](crate::error::CreatePoolError)
    pub fn create_pool(&self) -> crate::client::fluent_builders::CreatePool {
        crate::client::fluent_builders::CreatePool::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteConfigurationSet`](crate::client::fluent_builders::DeleteConfigurationSet) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`configuration_set_name(impl Into<String>)`](crate::client::fluent_builders::DeleteConfigurationSet::configuration_set_name) / [`set_configuration_set_name(Option<String>)`](crate::client::fluent_builders::DeleteConfigurationSet::set_configuration_set_name): <p>The name of the configuration set or the configuration set ARN that you want to delete. The ConfigurationSetName and ConfigurationSetArn can be found using the <code>DescribeConfigurationSets</code> action.</p>
    /// - On success, responds with [`DeleteConfigurationSetOutput`](crate::output::DeleteConfigurationSetOutput) with field(s):
    ///   - [`configuration_set_arn(Option<String>)`](crate::output::DeleteConfigurationSetOutput::configuration_set_arn): <p>The Amazon Resource Name (ARN) of the deleted configuration set.</p>
    ///   - [`configuration_set_name(Option<String>)`](crate::output::DeleteConfigurationSetOutput::configuration_set_name): <p>The name of the deleted configuration set.</p>
    ///   - [`event_destinations(Option<Vec<EventDestination>>)`](crate::output::DeleteConfigurationSetOutput::event_destinations): <p>An array of any EventDestination objects that were associated with the deleted configuration set.</p>
    ///   - [`default_message_type(Option<MessageType>)`](crate::output::DeleteConfigurationSetOutput::default_message_type): <p>The default message type of the configuration set that was deleted.</p>
    ///   - [`default_sender_id(Option<String>)`](crate::output::DeleteConfigurationSetOutput::default_sender_id): <p>The default Sender ID of the configuration set that was deleted.</p>
    ///   - [`created_timestamp(Option<DateTime>)`](crate::output::DeleteConfigurationSetOutput::created_timestamp): <p>The time that the deleted configuration set was created in <a href="https://www.epochconverter.com/">UNIX epoch time</a> format.</p>
    /// - On failure, responds with [`SdkError<DeleteConfigurationSetError>`](crate::error::DeleteConfigurationSetError)
    pub fn delete_configuration_set(
        &self,
    ) -> crate::client::fluent_builders::DeleteConfigurationSet {
        crate::client::fluent_builders::DeleteConfigurationSet::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteDefaultMessageType`](crate::client::fluent_builders::DeleteDefaultMessageType) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`configuration_set_name(impl Into<String>)`](crate::client::fluent_builders::DeleteDefaultMessageType::configuration_set_name) / [`set_configuration_set_name(Option<String>)`](crate::client::fluent_builders::DeleteDefaultMessageType::set_configuration_set_name): <p>The name of the configuration set or the configuration set Amazon Resource Name (ARN) to delete the default message type from. The ConfigurationSetName and ConfigurationSetArn can be found using the <code>DescribeConfigurationSets</code> action.</p>
    /// - On success, responds with [`DeleteDefaultMessageTypeOutput`](crate::output::DeleteDefaultMessageTypeOutput) with field(s):
    ///   - [`configuration_set_arn(Option<String>)`](crate::output::DeleteDefaultMessageTypeOutput::configuration_set_arn): <p>The Amazon Resource Name (ARN) of the configuration set.</p>
    ///   - [`configuration_set_name(Option<String>)`](crate::output::DeleteDefaultMessageTypeOutput::configuration_set_name): <p>The name of the configuration set.</p>
    ///   - [`message_type(Option<MessageType>)`](crate::output::DeleteDefaultMessageTypeOutput::message_type): <p>The current message type for the configuration set.</p>
    /// - On failure, responds with [`SdkError<DeleteDefaultMessageTypeError>`](crate::error::DeleteDefaultMessageTypeError)
    pub fn delete_default_message_type(
        &self,
    ) -> crate::client::fluent_builders::DeleteDefaultMessageType {
        crate::client::fluent_builders::DeleteDefaultMessageType::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteDefaultSenderId`](crate::client::fluent_builders::DeleteDefaultSenderId) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`configuration_set_name(impl Into<String>)`](crate::client::fluent_builders::DeleteDefaultSenderId::configuration_set_name) / [`set_configuration_set_name(Option<String>)`](crate::client::fluent_builders::DeleteDefaultSenderId::set_configuration_set_name): <p>The name of the configuration set or the configuration set Amazon Resource Name (ARN) to delete the default sender ID from. The ConfigurationSetName and ConfigurationSetArn can be found using the <code>DescribeConfigurationSets</code> action.</p>
    /// - On success, responds with [`DeleteDefaultSenderIdOutput`](crate::output::DeleteDefaultSenderIdOutput) with field(s):
    ///   - [`configuration_set_arn(Option<String>)`](crate::output::DeleteDefaultSenderIdOutput::configuration_set_arn): <p>The Amazon Resource Name (ARN) of the configuration set.</p>
    ///   - [`configuration_set_name(Option<String>)`](crate::output::DeleteDefaultSenderIdOutput::configuration_set_name): <p>The name of the configuration set.</p>
    ///   - [`sender_id(Option<String>)`](crate::output::DeleteDefaultSenderIdOutput::sender_id): <p>The current sender ID for the configuration set.</p>
    /// - On failure, responds with [`SdkError<DeleteDefaultSenderIdError>`](crate::error::DeleteDefaultSenderIdError)
    pub fn delete_default_sender_id(
        &self,
    ) -> crate::client::fluent_builders::DeleteDefaultSenderId {
        crate::client::fluent_builders::DeleteDefaultSenderId::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteEventDestination`](crate::client::fluent_builders::DeleteEventDestination) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`configuration_set_name(impl Into<String>)`](crate::client::fluent_builders::DeleteEventDestination::configuration_set_name) / [`set_configuration_set_name(Option<String>)`](crate::client::fluent_builders::DeleteEventDestination::set_configuration_set_name): <p>The name of the configuration set or the configuration set's Amazon Resource Name (ARN) to remove the event destination from. The ConfigurateSetName and ConfigurationSetArn can be found using the <code>DescribeConfigurationSets</code> action.</p>
    ///   - [`event_destination_name(impl Into<String>)`](crate::client::fluent_builders::DeleteEventDestination::event_destination_name) / [`set_event_destination_name(Option<String>)`](crate::client::fluent_builders::DeleteEventDestination::set_event_destination_name): <p>The name of the event destination to delete.</p>
    /// - On success, responds with [`DeleteEventDestinationOutput`](crate::output::DeleteEventDestinationOutput) with field(s):
    ///   - [`configuration_set_arn(Option<String>)`](crate::output::DeleteEventDestinationOutput::configuration_set_arn): <p>The Amazon Resource Name (ARN) of the configuration set.</p>
    ///   - [`configuration_set_name(Option<String>)`](crate::output::DeleteEventDestinationOutput::configuration_set_name): <p>The name of the configuration set the event destination was deleted from.</p>
    ///   - [`event_destination(Option<EventDestination>)`](crate::output::DeleteEventDestinationOutput::event_destination): <p>The event destination object that was deleted.</p>
    /// - On failure, responds with [`SdkError<DeleteEventDestinationError>`](crate::error::DeleteEventDestinationError)
    pub fn delete_event_destination(
        &self,
    ) -> crate::client::fluent_builders::DeleteEventDestination {
        crate::client::fluent_builders::DeleteEventDestination::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteKeyword`](crate::client::fluent_builders::DeleteKeyword) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`origination_identity(impl Into<String>)`](crate::client::fluent_builders::DeleteKeyword::origination_identity) / [`set_origination_identity(Option<String>)`](crate::client::fluent_builders::DeleteKeyword::set_origination_identity): <p>The origination identity to use such as a PhoneNumberId, PhoneNumberArn, PoolId or PoolArn. You can use <code>DescribePhoneNumbers</code> to find the values for PhoneNumberId and PhoneNumberArn and <code>DescribePools</code> to find the values of PoolId and PoolArn.</p>
    ///   - [`keyword(impl Into<String>)`](crate::client::fluent_builders::DeleteKeyword::keyword) / [`set_keyword(Option<String>)`](crate::client::fluent_builders::DeleteKeyword::set_keyword): <p>The keyword to delete.</p>
    /// - On success, responds with [`DeleteKeywordOutput`](crate::output::DeleteKeywordOutput) with field(s):
    ///   - [`origination_identity_arn(Option<String>)`](crate::output::DeleteKeywordOutput::origination_identity_arn): <p>The PhoneNumberArn or PoolArn that the keyword was associated with.</p>
    ///   - [`origination_identity(Option<String>)`](crate::output::DeleteKeywordOutput::origination_identity): <p>The PhoneNumberId or PoolId that the keyword was associated with.</p>
    ///   - [`keyword(Option<String>)`](crate::output::DeleteKeywordOutput::keyword): <p>The keyword that was deleted.</p>
    ///   - [`keyword_message(Option<String>)`](crate::output::DeleteKeywordOutput::keyword_message): <p>The message that was associated with the deleted keyword.</p>
    ///   - [`keyword_action(Option<KeywordAction>)`](crate::output::DeleteKeywordOutput::keyword_action): <p>The action that was associated with the deleted keyword.</p>
    /// - On failure, responds with [`SdkError<DeleteKeywordError>`](crate::error::DeleteKeywordError)
    pub fn delete_keyword(&self) -> crate::client::fluent_builders::DeleteKeyword {
        crate::client::fluent_builders::DeleteKeyword::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteOptedOutNumber`](crate::client::fluent_builders::DeleteOptedOutNumber) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`opt_out_list_name(impl Into<String>)`](crate::client::fluent_builders::DeleteOptedOutNumber::opt_out_list_name) / [`set_opt_out_list_name(Option<String>)`](crate::client::fluent_builders::DeleteOptedOutNumber::set_opt_out_list_name): <p>The OptOutListName or OptOutListArn to remove the phone number from.</p>
    ///   - [`opted_out_number(impl Into<String>)`](crate::client::fluent_builders::DeleteOptedOutNumber::opted_out_number) / [`set_opted_out_number(Option<String>)`](crate::client::fluent_builders::DeleteOptedOutNumber::set_opted_out_number): <p>The phone number, in E.164 format, to remove from the OptOutList.</p>
    /// - On success, responds with [`DeleteOptedOutNumberOutput`](crate::output::DeleteOptedOutNumberOutput) with field(s):
    ///   - [`opt_out_list_arn(Option<String>)`](crate::output::DeleteOptedOutNumberOutput::opt_out_list_arn): <p>The OptOutListArn that the phone number was removed from.</p>
    ///   - [`opt_out_list_name(Option<String>)`](crate::output::DeleteOptedOutNumberOutput::opt_out_list_name): <p>The OptOutListName that the phone number was removed from.</p>
    ///   - [`opted_out_number(Option<String>)`](crate::output::DeleteOptedOutNumberOutput::opted_out_number): <p>The phone number that was removed from the OptOutList.</p>
    ///   - [`opted_out_timestamp(Option<DateTime>)`](crate::output::DeleteOptedOutNumberOutput::opted_out_timestamp): <p>The time that the number was removed at, in <a href="https://www.epochconverter.com/">UNIX epoch time</a> format.</p>
    ///   - [`end_user_opted_out(bool)`](crate::output::DeleteOptedOutNumberOutput::end_user_opted_out): <p>This is true if it was the end user who requested their phone number be removed. </p>
    /// - On failure, responds with [`SdkError<DeleteOptedOutNumberError>`](crate::error::DeleteOptedOutNumberError)
    pub fn delete_opted_out_number(&self) -> crate::client::fluent_builders::DeleteOptedOutNumber {
        crate::client::fluent_builders::DeleteOptedOutNumber::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteOptOutList`](crate::client::fluent_builders::DeleteOptOutList) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`opt_out_list_name(impl Into<String>)`](crate::client::fluent_builders::DeleteOptOutList::opt_out_list_name) / [`set_opt_out_list_name(Option<String>)`](crate::client::fluent_builders::DeleteOptOutList::set_opt_out_list_name): <p>The OptOutListName or OptOutListArn of the OptOutList to delete. You can use <code>DescribeOptOutLists</code> to find the values for OptOutListName and OptOutListArn.</p>
    /// - On success, responds with [`DeleteOptOutListOutput`](crate::output::DeleteOptOutListOutput) with field(s):
    ///   - [`opt_out_list_arn(Option<String>)`](crate::output::DeleteOptOutListOutput::opt_out_list_arn): <p>The Amazon Resource Name (ARN) of the OptOutList that was removed.</p>
    ///   - [`opt_out_list_name(Option<String>)`](crate::output::DeleteOptOutListOutput::opt_out_list_name): <p>The name of the OptOutList that was removed.</p>
    ///   - [`created_timestamp(Option<DateTime>)`](crate::output::DeleteOptOutListOutput::created_timestamp): <p>The time when the OptOutList was created, in <a href="https://www.epochconverter.com/">UNIX epoch time</a> format.</p>
    /// - On failure, responds with [`SdkError<DeleteOptOutListError>`](crate::error::DeleteOptOutListError)
    pub fn delete_opt_out_list(&self) -> crate::client::fluent_builders::DeleteOptOutList {
        crate::client::fluent_builders::DeleteOptOutList::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeletePool`](crate::client::fluent_builders::DeletePool) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`pool_id(impl Into<String>)`](crate::client::fluent_builders::DeletePool::pool_id) / [`set_pool_id(Option<String>)`](crate::client::fluent_builders::DeletePool::set_pool_id): <p>The PoolId or PoolArn of the pool to delete. You can use <code>DescribePools</code> to find the values for PoolId and PoolArn .</p>
    /// - On success, responds with [`DeletePoolOutput`](crate::output::DeletePoolOutput) with field(s):
    ///   - [`pool_arn(Option<String>)`](crate::output::DeletePoolOutput::pool_arn): <p>The Amazon Resource Name (ARN) of the pool that was deleted.</p>
    ///   - [`pool_id(Option<String>)`](crate::output::DeletePoolOutput::pool_id): <p>The PoolId of the pool that was deleted.</p>
    ///   - [`status(Option<PoolStatus>)`](crate::output::DeletePoolOutput::status): <p>The current status of the pool.</p>  <ul>   <li> <p>CREATING: The pool is currently being created and isn't yet available for use.</p> </li>   <li> <p>ACTIVE: The pool is active and available for use.</p> </li>   <li> <p>DELETING: The pool is being deleted.</p> </li>  </ul>
    ///   - [`message_type(Option<MessageType>)`](crate::output::DeletePoolOutput::message_type): <p>The message type that was associated with the deleted pool.</p>
    ///   - [`two_way_enabled(bool)`](crate::output::DeletePoolOutput::two_way_enabled): <p>By default this is set to false. When set to true you can receive incoming text messages from your end recipients.</p>
    ///   - [`two_way_channel_arn(Option<String>)`](crate::output::DeletePoolOutput::two_way_channel_arn): <p>The Amazon Resource Name (ARN) of the TwoWayChannel.</p>
    ///   - [`self_managed_opt_outs_enabled(bool)`](crate::output::DeletePoolOutput::self_managed_opt_outs_enabled): <p>By default this is set to false. When an end recipient sends a message that begins with HELP or STOP to one of your dedicated numbers, Amazon Pinpoint automatically replies with a customizable message and adds the end recipient to the OptOutList. When set to true you're responsible for responding to HELP and STOP requests. You're also responsible for tracking and honoring opt-out requests.</p>
    ///   - [`opt_out_list_name(Option<String>)`](crate::output::DeletePoolOutput::opt_out_list_name): <p>The name of the OptOutList that was associated with the deleted pool.</p>
    ///   - [`shared_routes_enabled(bool)`](crate::output::DeletePoolOutput::shared_routes_enabled): <p>Indicates whether shared routes are enabled for the pool.</p>
    ///   - [`created_timestamp(Option<DateTime>)`](crate::output::DeletePoolOutput::created_timestamp): <p>The time when the pool was created, in <a href="https://www.epochconverter.com/">UNIX epoch time</a> format.</p>
    /// - On failure, responds with [`SdkError<DeletePoolError>`](crate::error::DeletePoolError)
    pub fn delete_pool(&self) -> crate::client::fluent_builders::DeletePool {
        crate::client::fluent_builders::DeletePool::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteTextMessageSpendLimitOverride`](crate::client::fluent_builders::DeleteTextMessageSpendLimitOverride) operation.
    ///
    /// - The fluent builder takes no input, just [`send`](crate::client::fluent_builders::DeleteTextMessageSpendLimitOverride::send) it.

    /// - On success, responds with [`DeleteTextMessageSpendLimitOverrideOutput`](crate::output::DeleteTextMessageSpendLimitOverrideOutput) with field(s):
    ///   - [`monthly_limit(Option<i64>)`](crate::output::DeleteTextMessageSpendLimitOverrideOutput::monthly_limit): <p>The current monthly limit, in US dollars.</p>
    /// - On failure, responds with [`SdkError<DeleteTextMessageSpendLimitOverrideError>`](crate::error::DeleteTextMessageSpendLimitOverrideError)
    pub fn delete_text_message_spend_limit_override(
        &self,
    ) -> crate::client::fluent_builders::DeleteTextMessageSpendLimitOverride {
        crate::client::fluent_builders::DeleteTextMessageSpendLimitOverride::new(
            self.handle.clone(),
        )
    }
    /// Constructs a fluent builder for the [`DeleteVoiceMessageSpendLimitOverride`](crate::client::fluent_builders::DeleteVoiceMessageSpendLimitOverride) operation.
    ///
    /// - The fluent builder takes no input, just [`send`](crate::client::fluent_builders::DeleteVoiceMessageSpendLimitOverride::send) it.

    /// - On success, responds with [`DeleteVoiceMessageSpendLimitOverrideOutput`](crate::output::DeleteVoiceMessageSpendLimitOverrideOutput) with field(s):
    ///   - [`monthly_limit(Option<i64>)`](crate::output::DeleteVoiceMessageSpendLimitOverrideOutput::monthly_limit): <p>The current monthly limit, in US dollars.</p>
    /// - On failure, responds with [`SdkError<DeleteVoiceMessageSpendLimitOverrideError>`](crate::error::DeleteVoiceMessageSpendLimitOverrideError)
    pub fn delete_voice_message_spend_limit_override(
        &self,
    ) -> crate::client::fluent_builders::DeleteVoiceMessageSpendLimitOverride {
        crate::client::fluent_builders::DeleteVoiceMessageSpendLimitOverride::new(
            self.handle.clone(),
        )
    }
    /// Constructs a fluent builder for the [`DescribeAccountAttributes`](crate::client::fluent_builders::DescribeAccountAttributes) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::DescribeAccountAttributes::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::DescribeAccountAttributes::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::DescribeAccountAttributes::set_next_token): <p>The token to be used for the next set of paginated results. You don't need to supply a value for this field in the initial request.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::DescribeAccountAttributes::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::DescribeAccountAttributes::set_max_results): <p>The maximum number of results to return per each request.</p>
    /// - On success, responds with [`DescribeAccountAttributesOutput`](crate::output::DescribeAccountAttributesOutput) with field(s):
    ///   - [`account_attributes(Option<Vec<AccountAttribute>>)`](crate::output::DescribeAccountAttributesOutput::account_attributes): <p>An array of AccountAttributes objects.</p>
    ///   - [`next_token(Option<String>)`](crate::output::DescribeAccountAttributesOutput::next_token): <p>The token to be used for the next set of paginated results. If this field is empty then there are no more results.</p>
    /// - On failure, responds with [`SdkError<DescribeAccountAttributesError>`](crate::error::DescribeAccountAttributesError)
    pub fn describe_account_attributes(
        &self,
    ) -> crate::client::fluent_builders::DescribeAccountAttributes {
        crate::client::fluent_builders::DescribeAccountAttributes::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DescribeAccountLimits`](crate::client::fluent_builders::DescribeAccountLimits) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::DescribeAccountLimits::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::DescribeAccountLimits::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::DescribeAccountLimits::set_next_token): <p>The token to be used for the next set of paginated results. You don't need to supply a value for this field in the initial request.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::DescribeAccountLimits::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::DescribeAccountLimits::set_max_results): <p>The maximum number of results to return per each request.</p>
    /// - On success, responds with [`DescribeAccountLimitsOutput`](crate::output::DescribeAccountLimitsOutput) with field(s):
    ///   - [`account_limits(Option<Vec<AccountLimit>>)`](crate::output::DescribeAccountLimitsOutput::account_limits): <p>An array of AccountLimit objects that show the current spend limits.</p>
    ///   - [`next_token(Option<String>)`](crate::output::DescribeAccountLimitsOutput::next_token): <p>The token to be used for the next set of paginated results. If this field is empty then there are no more results.</p>
    /// - On failure, responds with [`SdkError<DescribeAccountLimitsError>`](crate::error::DescribeAccountLimitsError)
    pub fn describe_account_limits(&self) -> crate::client::fluent_builders::DescribeAccountLimits {
        crate::client::fluent_builders::DescribeAccountLimits::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DescribeConfigurationSets`](crate::client::fluent_builders::DescribeConfigurationSets) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::DescribeConfigurationSets::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`configuration_set_names(Vec<String>)`](crate::client::fluent_builders::DescribeConfigurationSets::configuration_set_names) / [`set_configuration_set_names(Option<Vec<String>>)`](crate::client::fluent_builders::DescribeConfigurationSets::set_configuration_set_names): <p>An array of strings. Each element can be either a ConfigurationSetName or ConfigurationSetArn.</p>
    ///   - [`filters(Vec<ConfigurationSetFilter>)`](crate::client::fluent_builders::DescribeConfigurationSets::filters) / [`set_filters(Option<Vec<ConfigurationSetFilter>>)`](crate::client::fluent_builders::DescribeConfigurationSets::set_filters): <p>An array of filters to apply to the results that are returned.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::DescribeConfigurationSets::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::DescribeConfigurationSets::set_next_token): <p>The token to be used for the next set of paginated results. You don't need to supply a value for this field in the initial request.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::DescribeConfigurationSets::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::DescribeConfigurationSets::set_max_results): <p>The maximum number of results to return per each request.</p>
    /// - On success, responds with [`DescribeConfigurationSetsOutput`](crate::output::DescribeConfigurationSetsOutput) with field(s):
    ///   - [`configuration_sets(Option<Vec<ConfigurationSetInformation>>)`](crate::output::DescribeConfigurationSetsOutput::configuration_sets): <p>An array of ConfigurationSets objects.</p>
    ///   - [`next_token(Option<String>)`](crate::output::DescribeConfigurationSetsOutput::next_token): <p>The token to be used for the next set of paginated results. If this field is empty then there are no more results.</p>
    /// - On failure, responds with [`SdkError<DescribeConfigurationSetsError>`](crate::error::DescribeConfigurationSetsError)
    pub fn describe_configuration_sets(
        &self,
    ) -> crate::client::fluent_builders::DescribeConfigurationSets {
        crate::client::fluent_builders::DescribeConfigurationSets::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DescribeKeywords`](crate::client::fluent_builders::DescribeKeywords) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::DescribeKeywords::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`origination_identity(impl Into<String>)`](crate::client::fluent_builders::DescribeKeywords::origination_identity) / [`set_origination_identity(Option<String>)`](crate::client::fluent_builders::DescribeKeywords::set_origination_identity): <p>The origination identity to use such as a PhoneNumberId, PhoneNumberArn, SenderId or SenderIdArn. You can use <code>DescribePhoneNumbers</code> to find the values for PhoneNumberId and PhoneNumberArn while <code>DescribeSenderIds</code> can be used to get the values for SenderId and SenderIdArn.</p>
    ///   - [`keywords(Vec<String>)`](crate::client::fluent_builders::DescribeKeywords::keywords) / [`set_keywords(Option<Vec<String>>)`](crate::client::fluent_builders::DescribeKeywords::set_keywords): <p>An array of keywords to search for.</p>
    ///   - [`filters(Vec<KeywordFilter>)`](crate::client::fluent_builders::DescribeKeywords::filters) / [`set_filters(Option<Vec<KeywordFilter>>)`](crate::client::fluent_builders::DescribeKeywords::set_filters): <p>An array of keyword filters to filter the results.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::DescribeKeywords::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::DescribeKeywords::set_next_token): <p>The token to be used for the next set of paginated results. You don't need to supply a value for this field in the initial request.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::DescribeKeywords::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::DescribeKeywords::set_max_results): <p>The maximum number of results to return per each request.</p>
    /// - On success, responds with [`DescribeKeywordsOutput`](crate::output::DescribeKeywordsOutput) with field(s):
    ///   - [`origination_identity_arn(Option<String>)`](crate::output::DescribeKeywordsOutput::origination_identity_arn): <p>The PhoneNumberArn or PoolArn that is associated with the OriginationIdentity. </p>
    ///   - [`origination_identity(Option<String>)`](crate::output::DescribeKeywordsOutput::origination_identity): <p>The PhoneNumberId or PoolId that is associated with the OriginationIdentity.</p>
    ///   - [`keywords(Option<Vec<KeywordInformation>>)`](crate::output::DescribeKeywordsOutput::keywords): <p>An array of KeywordInformation objects that contain the results.</p>
    ///   - [`next_token(Option<String>)`](crate::output::DescribeKeywordsOutput::next_token): <p>The token to be used for the next set of paginated results. If this field is empty then there are no more results.</p>
    /// - On failure, responds with [`SdkError<DescribeKeywordsError>`](crate::error::DescribeKeywordsError)
    pub fn describe_keywords(&self) -> crate::client::fluent_builders::DescribeKeywords {
        crate::client::fluent_builders::DescribeKeywords::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DescribeOptedOutNumbers`](crate::client::fluent_builders::DescribeOptedOutNumbers) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::DescribeOptedOutNumbers::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`opt_out_list_name(impl Into<String>)`](crate::client::fluent_builders::DescribeOptedOutNumbers::opt_out_list_name) / [`set_opt_out_list_name(Option<String>)`](crate::client::fluent_builders::DescribeOptedOutNumbers::set_opt_out_list_name): <p>The OptOutListName or OptOutListArn of the OptOutList. You can use <code>DescribeOptOutLists</code> to find the values for OptOutListName and OptOutListArn.</p>
    ///   - [`opted_out_numbers(Vec<String>)`](crate::client::fluent_builders::DescribeOptedOutNumbers::opted_out_numbers) / [`set_opted_out_numbers(Option<Vec<String>>)`](crate::client::fluent_builders::DescribeOptedOutNumbers::set_opted_out_numbers): <p>An array of phone numbers to search for in the OptOutList.</p>
    ///   - [`filters(Vec<OptedOutFilter>)`](crate::client::fluent_builders::DescribeOptedOutNumbers::filters) / [`set_filters(Option<Vec<OptedOutFilter>>)`](crate::client::fluent_builders::DescribeOptedOutNumbers::set_filters): <p>An array of OptedOutFilter objects to filter the results on.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::DescribeOptedOutNumbers::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::DescribeOptedOutNumbers::set_next_token): <p>The token to be used for the next set of paginated results. You don't need to supply a value for this field in the initial request.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::DescribeOptedOutNumbers::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::DescribeOptedOutNumbers::set_max_results): <p>The maximum number of results to return per each request.</p>
    /// - On success, responds with [`DescribeOptedOutNumbersOutput`](crate::output::DescribeOptedOutNumbersOutput) with field(s):
    ///   - [`opt_out_list_arn(Option<String>)`](crate::output::DescribeOptedOutNumbersOutput::opt_out_list_arn): <p>The Amazon Resource Name (ARN) of the OptOutList.</p>
    ///   - [`opt_out_list_name(Option<String>)`](crate::output::DescribeOptedOutNumbersOutput::opt_out_list_name): <p>The name of the OptOutList.</p>
    ///   - [`opted_out_numbers(Option<Vec<OptedOutNumberInformation>>)`](crate::output::DescribeOptedOutNumbersOutput::opted_out_numbers): <p>An array of OptedOutNumbersInformation objects that provide information about the requested OptedOutNumbers.</p>
    ///   - [`next_token(Option<String>)`](crate::output::DescribeOptedOutNumbersOutput::next_token): <p>The token to be used for the next set of paginated results. If this field is empty then there are no more results.</p>
    /// - On failure, responds with [`SdkError<DescribeOptedOutNumbersError>`](crate::error::DescribeOptedOutNumbersError)
    pub fn describe_opted_out_numbers(
        &self,
    ) -> crate::client::fluent_builders::DescribeOptedOutNumbers {
        crate::client::fluent_builders::DescribeOptedOutNumbers::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DescribeOptOutLists`](crate::client::fluent_builders::DescribeOptOutLists) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::DescribeOptOutLists::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`opt_out_list_names(Vec<String>)`](crate::client::fluent_builders::DescribeOptOutLists::opt_out_list_names) / [`set_opt_out_list_names(Option<Vec<String>>)`](crate::client::fluent_builders::DescribeOptOutLists::set_opt_out_list_names): <p>The OptOutLists to show the details of. This is an array of strings that can be either the OptOutListName or OptOutListArn.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::DescribeOptOutLists::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::DescribeOptOutLists::set_next_token): <p>The token to be used for the next set of paginated results. You don't need to supply a value for this field in the initial request.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::DescribeOptOutLists::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::DescribeOptOutLists::set_max_results): <p>The maximum number of results to return per each request.</p>
    /// - On success, responds with [`DescribeOptOutListsOutput`](crate::output::DescribeOptOutListsOutput) with field(s):
    ///   - [`opt_out_lists(Option<Vec<OptOutListInformation>>)`](crate::output::DescribeOptOutListsOutput::opt_out_lists): <p>An array of OptOutListInformation objects that contain the details for the requested OptOutLists.</p>
    ///   - [`next_token(Option<String>)`](crate::output::DescribeOptOutListsOutput::next_token): <p>The token to be used for the next set of paginated results. If this field is empty then there are no more results.</p>
    /// - On failure, responds with [`SdkError<DescribeOptOutListsError>`](crate::error::DescribeOptOutListsError)
    pub fn describe_opt_out_lists(&self) -> crate::client::fluent_builders::DescribeOptOutLists {
        crate::client::fluent_builders::DescribeOptOutLists::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DescribePhoneNumbers`](crate::client::fluent_builders::DescribePhoneNumbers) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::DescribePhoneNumbers::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`phone_number_ids(Vec<String>)`](crate::client::fluent_builders::DescribePhoneNumbers::phone_number_ids) / [`set_phone_number_ids(Option<Vec<String>>)`](crate::client::fluent_builders::DescribePhoneNumbers::set_phone_number_ids): <p>The unique identifier of phone numbers to find information about. This is an array of strings that can be either the PhoneNumberId or PhoneNumberArn.</p>
    ///   - [`filters(Vec<PhoneNumberFilter>)`](crate::client::fluent_builders::DescribePhoneNumbers::filters) / [`set_filters(Option<Vec<PhoneNumberFilter>>)`](crate::client::fluent_builders::DescribePhoneNumbers::set_filters): <p>An array of PhoneNumberFilter objects to filter the results.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::DescribePhoneNumbers::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::DescribePhoneNumbers::set_next_token): <p>The token to be used for the next set of paginated results. You don't need to supply a value for this field in the initial request.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::DescribePhoneNumbers::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::DescribePhoneNumbers::set_max_results): <p>The maximum number of results to return per each request.</p>
    /// - On success, responds with [`DescribePhoneNumbersOutput`](crate::output::DescribePhoneNumbersOutput) with field(s):
    ///   - [`phone_numbers(Option<Vec<PhoneNumberInformation>>)`](crate::output::DescribePhoneNumbersOutput::phone_numbers): <p>An array of PhoneNumberInformation objects that contain the details for the requested phone numbers.</p>
    ///   - [`next_token(Option<String>)`](crate::output::DescribePhoneNumbersOutput::next_token): <p>The token to be used for the next set of paginated results. If this field is empty then there are no more results.</p>
    /// - On failure, responds with [`SdkError<DescribePhoneNumbersError>`](crate::error::DescribePhoneNumbersError)
    pub fn describe_phone_numbers(&self) -> crate::client::fluent_builders::DescribePhoneNumbers {
        crate::client::fluent_builders::DescribePhoneNumbers::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DescribePools`](crate::client::fluent_builders::DescribePools) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::DescribePools::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`pool_ids(Vec<String>)`](crate::client::fluent_builders::DescribePools::pool_ids) / [`set_pool_ids(Option<Vec<String>>)`](crate::client::fluent_builders::DescribePools::set_pool_ids): <p>The unique identifier of pools to find. This is an array of strings that can be either the PoolId or PoolArn.</p>
    ///   - [`filters(Vec<PoolFilter>)`](crate::client::fluent_builders::DescribePools::filters) / [`set_filters(Option<Vec<PoolFilter>>)`](crate::client::fluent_builders::DescribePools::set_filters): <p>An array of PoolFilter objects to filter the results.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::DescribePools::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::DescribePools::set_next_token): <p>The token to be used for the next set of paginated results. You don't need to supply a value for this field in the initial request.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::DescribePools::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::DescribePools::set_max_results): <p>The maximum number of results to return per each request.</p>
    /// - On success, responds with [`DescribePoolsOutput`](crate::output::DescribePoolsOutput) with field(s):
    ///   - [`pools(Option<Vec<PoolInformation>>)`](crate::output::DescribePoolsOutput::pools): <p>An array of PoolInformation objects that contain the details for the requested pools. </p>
    ///   - [`next_token(Option<String>)`](crate::output::DescribePoolsOutput::next_token): <p>The token to be used for the next set of paginated results. If this field is empty then there are no more results.</p>
    /// - On failure, responds with [`SdkError<DescribePoolsError>`](crate::error::DescribePoolsError)
    pub fn describe_pools(&self) -> crate::client::fluent_builders::DescribePools {
        crate::client::fluent_builders::DescribePools::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DescribeSenderIds`](crate::client::fluent_builders::DescribeSenderIds) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::DescribeSenderIds::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`sender_ids(Vec<SenderIdAndCountry>)`](crate::client::fluent_builders::DescribeSenderIds::sender_ids) / [`set_sender_ids(Option<Vec<SenderIdAndCountry>>)`](crate::client::fluent_builders::DescribeSenderIds::set_sender_ids): <p>An array of SenderIdAndCountry objects to search for.</p>
    ///   - [`filters(Vec<SenderIdFilter>)`](crate::client::fluent_builders::DescribeSenderIds::filters) / [`set_filters(Option<Vec<SenderIdFilter>>)`](crate::client::fluent_builders::DescribeSenderIds::set_filters): <p>An array of SenderIdFilter objects to filter the results.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::DescribeSenderIds::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::DescribeSenderIds::set_next_token): <p>The token to be used for the next set of paginated results. You don't need to supply a value for this field in the initial request.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::DescribeSenderIds::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::DescribeSenderIds::set_max_results): <p>The maximum number of results to return per each request.</p>
    /// - On success, responds with [`DescribeSenderIdsOutput`](crate::output::DescribeSenderIdsOutput) with field(s):
    ///   - [`sender_ids(Option<Vec<SenderIdInformation>>)`](crate::output::DescribeSenderIdsOutput::sender_ids): <p>An array of SernderIdInformation objects that contain the details for the requested SenderIds.</p>
    ///   - [`next_token(Option<String>)`](crate::output::DescribeSenderIdsOutput::next_token): <p>The token to be used for the next set of paginated results. If this field is empty then there are no more results.</p>
    /// - On failure, responds with [`SdkError<DescribeSenderIdsError>`](crate::error::DescribeSenderIdsError)
    pub fn describe_sender_ids(&self) -> crate::client::fluent_builders::DescribeSenderIds {
        crate::client::fluent_builders::DescribeSenderIds::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DescribeSpendLimits`](crate::client::fluent_builders::DescribeSpendLimits) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::DescribeSpendLimits::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::DescribeSpendLimits::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::DescribeSpendLimits::set_next_token): <p>The token to be used for the next set of paginated results. You don't need to supply a value for this field in the initial request.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::DescribeSpendLimits::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::DescribeSpendLimits::set_max_results): <p>The maximum number of results to return per each request.</p>
    /// - On success, responds with [`DescribeSpendLimitsOutput`](crate::output::DescribeSpendLimitsOutput) with field(s):
    ///   - [`spend_limits(Option<Vec<SpendLimit>>)`](crate::output::DescribeSpendLimitsOutput::spend_limits): <p>An array of SpendLimit objects that contain the details for the requested spend limits.</p>
    ///   - [`next_token(Option<String>)`](crate::output::DescribeSpendLimitsOutput::next_token): <p>The token to be used for the next set of paginated results. If this field is empty then there are no more results.</p>
    /// - On failure, responds with [`SdkError<DescribeSpendLimitsError>`](crate::error::DescribeSpendLimitsError)
    pub fn describe_spend_limits(&self) -> crate::client::fluent_builders::DescribeSpendLimits {
        crate::client::fluent_builders::DescribeSpendLimits::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DisassociateOriginationIdentity`](crate::client::fluent_builders::DisassociateOriginationIdentity) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`pool_id(impl Into<String>)`](crate::client::fluent_builders::DisassociateOriginationIdentity::pool_id) / [`set_pool_id(Option<String>)`](crate::client::fluent_builders::DisassociateOriginationIdentity::set_pool_id): <p>The unique identifier for the pool to disassociate with the origination identity. This value can be either the PoolId or PoolArn.</p>
    ///   - [`origination_identity(impl Into<String>)`](crate::client::fluent_builders::DisassociateOriginationIdentity::origination_identity) / [`set_origination_identity(Option<String>)`](crate::client::fluent_builders::DisassociateOriginationIdentity::set_origination_identity): <p>The origination identity to use such as a PhoneNumberId, PhoneNumberArn, SenderId or SenderIdArn. You can use <code>DescribePhoneNumbers</code> find the values for PhoneNumberId and PhoneNumberArn, or use <code>DescribeSenderIds</code> to get the values for SenderId and SenderIdArn.</p>
    ///   - [`iso_country_code(impl Into<String>)`](crate::client::fluent_builders::DisassociateOriginationIdentity::iso_country_code) / [`set_iso_country_code(Option<String>)`](crate::client::fluent_builders::DisassociateOriginationIdentity::set_iso_country_code): <p>The two-character code, in ISO 3166-1 alpha-2 format, for the country or region. </p>
    ///   - [`client_token(impl Into<String>)`](crate::client::fluent_builders::DisassociateOriginationIdentity::client_token) / [`set_client_token(Option<String>)`](crate::client::fluent_builders::DisassociateOriginationIdentity::set_client_token): <p>Unique, case-sensitive identifier you provide to ensure the idempotency of the request. If you don't specify a client token, a randomly generated token is used for the request to ensure idempotency.</p>
    /// - On success, responds with [`DisassociateOriginationIdentityOutput`](crate::output::DisassociateOriginationIdentityOutput) with field(s):
    ///   - [`pool_arn(Option<String>)`](crate::output::DisassociateOriginationIdentityOutput::pool_arn): <p>The Amazon Resource Name (ARN) of the pool.</p>
    ///   - [`pool_id(Option<String>)`](crate::output::DisassociateOriginationIdentityOutput::pool_id): <p>The PoolId of the pool no longer associated with the origination identity.</p>
    ///   - [`origination_identity_arn(Option<String>)`](crate::output::DisassociateOriginationIdentityOutput::origination_identity_arn): <p>The PhoneNumberArn or SenderIdArn of the origination identity.</p>
    ///   - [`origination_identity(Option<String>)`](crate::output::DisassociateOriginationIdentityOutput::origination_identity): <p>The PhoneNumberId or SenderId of the origination identity.</p>
    ///   - [`iso_country_code(Option<String>)`](crate::output::DisassociateOriginationIdentityOutput::iso_country_code): <p>The two-character code, in ISO 3166-1 alpha-2 format, for the country or region.</p>
    /// - On failure, responds with [`SdkError<DisassociateOriginationIdentityError>`](crate::error::DisassociateOriginationIdentityError)
    pub fn disassociate_origination_identity(
        &self,
    ) -> crate::client::fluent_builders::DisassociateOriginationIdentity {
        crate::client::fluent_builders::DisassociateOriginationIdentity::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListPoolOriginationIdentities`](crate::client::fluent_builders::ListPoolOriginationIdentities) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListPoolOriginationIdentities::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`pool_id(impl Into<String>)`](crate::client::fluent_builders::ListPoolOriginationIdentities::pool_id) / [`set_pool_id(Option<String>)`](crate::client::fluent_builders::ListPoolOriginationIdentities::set_pool_id): <p>The unique identifier for the pool. This value can be either the PoolId or PoolArn.</p>
    ///   - [`filters(Vec<PoolOriginationIdentitiesFilter>)`](crate::client::fluent_builders::ListPoolOriginationIdentities::filters) / [`set_filters(Option<Vec<PoolOriginationIdentitiesFilter>>)`](crate::client::fluent_builders::ListPoolOriginationIdentities::set_filters): <p>An array of PoolOriginationIdentitiesFilter objects to filter the results..</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListPoolOriginationIdentities::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListPoolOriginationIdentities::set_next_token): <p>The token to be used for the next set of paginated results. You don't need to supply a value for this field in the initial request.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListPoolOriginationIdentities::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListPoolOriginationIdentities::set_max_results): <p>The maximum number of results to return per each request.</p>
    /// - On success, responds with [`ListPoolOriginationIdentitiesOutput`](crate::output::ListPoolOriginationIdentitiesOutput) with field(s):
    ///   - [`pool_arn(Option<String>)`](crate::output::ListPoolOriginationIdentitiesOutput::pool_arn): <p>The Amazon Resource Name (ARN) for the pool.</p>
    ///   - [`pool_id(Option<String>)`](crate::output::ListPoolOriginationIdentitiesOutput::pool_id): <p>The unique PoolId of the pool.</p>
    ///   - [`origination_identities(Option<Vec<OriginationIdentityMetadata>>)`](crate::output::ListPoolOriginationIdentitiesOutput::origination_identities): <p>An array of any OriginationIdentityMetadata objects.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListPoolOriginationIdentitiesOutput::next_token): <p>The token to be used for the next set of paginated results. If this field is empty then there are no more results.</p>
    /// - On failure, responds with [`SdkError<ListPoolOriginationIdentitiesError>`](crate::error::ListPoolOriginationIdentitiesError)
    pub fn list_pool_origination_identities(
        &self,
    ) -> crate::client::fluent_builders::ListPoolOriginationIdentities {
        crate::client::fluent_builders::ListPoolOriginationIdentities::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListTagsForResource`](crate::client::fluent_builders::ListTagsForResource) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`resource_arn(impl Into<String>)`](crate::client::fluent_builders::ListTagsForResource::resource_arn) / [`set_resource_arn(Option<String>)`](crate::client::fluent_builders::ListTagsForResource::set_resource_arn): <p>The Amazon Resource Name (ARN) of the resource to query for.</p>
    /// - On success, responds with [`ListTagsForResourceOutput`](crate::output::ListTagsForResourceOutput) with field(s):
    ///   - [`resource_arn(Option<String>)`](crate::output::ListTagsForResourceOutput::resource_arn): <p>The ARN of the resource.</p>
    ///   - [`tags(Option<Vec<Tag>>)`](crate::output::ListTagsForResourceOutput::tags): <p>An array of key and value pair tags that are associated with the resource.</p>
    /// - On failure, responds with [`SdkError<ListTagsForResourceError>`](crate::error::ListTagsForResourceError)
    pub fn list_tags_for_resource(&self) -> crate::client::fluent_builders::ListTagsForResource {
        crate::client::fluent_builders::ListTagsForResource::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`PutKeyword`](crate::client::fluent_builders::PutKeyword) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`origination_identity(impl Into<String>)`](crate::client::fluent_builders::PutKeyword::origination_identity) / [`set_origination_identity(Option<String>)`](crate::client::fluent_builders::PutKeyword::set_origination_identity): <p>The origination identity to use such as a PhoneNumberId, PhoneNumberArn, SenderId or SenderIdArn. You can use <code>DescribePhoneNumbers</code> get the values for PhoneNumberId and PhoneNumberArn while <code>DescribeSenderIds</code> can be used to get the values for SenderId and SenderIdArn.</p>
    ///   - [`keyword(impl Into<String>)`](crate::client::fluent_builders::PutKeyword::keyword) / [`set_keyword(Option<String>)`](crate::client::fluent_builders::PutKeyword::set_keyword): <p>The new keyword to add.</p>
    ///   - [`keyword_message(impl Into<String>)`](crate::client::fluent_builders::PutKeyword::keyword_message) / [`set_keyword_message(Option<String>)`](crate::client::fluent_builders::PutKeyword::set_keyword_message): <p>The message associated with the keyword.</p>  <ul>   <li> <p>AUTOMATIC_RESPONSE: A message is sent to the recipient.</p> </li>   <li> <p>OPT_OUT: Keeps the recipient from receiving future messages.</p> </li>   <li> <p>OPT_IN: The recipient wants to receive future messages.</p> </li>  </ul>
    ///   - [`keyword_action(KeywordAction)`](crate::client::fluent_builders::PutKeyword::keyword_action) / [`set_keyword_action(Option<KeywordAction>)`](crate::client::fluent_builders::PutKeyword::set_keyword_action): <p>The action to perform for the new keyword when it is received.</p>
    /// - On success, responds with [`PutKeywordOutput`](crate::output::PutKeywordOutput) with field(s):
    ///   - [`origination_identity_arn(Option<String>)`](crate::output::PutKeywordOutput::origination_identity_arn): <p>The PhoneNumberArn or PoolArn that the keyword was associated with.</p>
    ///   - [`origination_identity(Option<String>)`](crate::output::PutKeywordOutput::origination_identity): <p>The PhoneNumberId or PoolId that the keyword was associated with.</p>
    ///   - [`keyword(Option<String>)`](crate::output::PutKeywordOutput::keyword): <p>The keyword that was added.</p>
    ///   - [`keyword_message(Option<String>)`](crate::output::PutKeywordOutput::keyword_message): <p>The message associated with the keyword.</p>
    ///   - [`keyword_action(Option<KeywordAction>)`](crate::output::PutKeywordOutput::keyword_action): <p>The action to perform when the keyword is used.</p>
    /// - On failure, responds with [`SdkError<PutKeywordError>`](crate::error::PutKeywordError)
    pub fn put_keyword(&self) -> crate::client::fluent_builders::PutKeyword {
        crate::client::fluent_builders::PutKeyword::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`PutOptedOutNumber`](crate::client::fluent_builders::PutOptedOutNumber) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`opt_out_list_name(impl Into<String>)`](crate::client::fluent_builders::PutOptedOutNumber::opt_out_list_name) / [`set_opt_out_list_name(Option<String>)`](crate::client::fluent_builders::PutOptedOutNumber::set_opt_out_list_name): <p>The OptOutListName or OptOutListArn to add the phone number to.</p>
    ///   - [`opted_out_number(impl Into<String>)`](crate::client::fluent_builders::PutOptedOutNumber::opted_out_number) / [`set_opted_out_number(Option<String>)`](crate::client::fluent_builders::PutOptedOutNumber::set_opted_out_number): <p>The phone number to add to the OptOutList in E.164 format.</p>
    /// - On success, responds with [`PutOptedOutNumberOutput`](crate::output::PutOptedOutNumberOutput) with field(s):
    ///   - [`opt_out_list_arn(Option<String>)`](crate::output::PutOptedOutNumberOutput::opt_out_list_arn): <p>The OptOutListArn that the phone number was removed from.</p>
    ///   - [`opt_out_list_name(Option<String>)`](crate::output::PutOptedOutNumberOutput::opt_out_list_name): <p>The OptOutListName that the phone number was removed from.</p>
    ///   - [`opted_out_number(Option<String>)`](crate::output::PutOptedOutNumberOutput::opted_out_number): <p>The phone number that was added to the OptOutList.</p>
    ///   - [`opted_out_timestamp(Option<DateTime>)`](crate::output::PutOptedOutNumberOutput::opted_out_timestamp): <p>The time that the phone number was added to the OptOutList, in <a href="https://www.epochconverter.com/">UNIX epoch time</a> format.</p>
    ///   - [`end_user_opted_out(bool)`](crate::output::PutOptedOutNumberOutput::end_user_opted_out): <p>This is true if it was the end user who requested their phone number be removed. </p>
    /// - On failure, responds with [`SdkError<PutOptedOutNumberError>`](crate::error::PutOptedOutNumberError)
    pub fn put_opted_out_number(&self) -> crate::client::fluent_builders::PutOptedOutNumber {
        crate::client::fluent_builders::PutOptedOutNumber::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ReleasePhoneNumber`](crate::client::fluent_builders::ReleasePhoneNumber) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`phone_number_id(impl Into<String>)`](crate::client::fluent_builders::ReleasePhoneNumber::phone_number_id) / [`set_phone_number_id(Option<String>)`](crate::client::fluent_builders::ReleasePhoneNumber::set_phone_number_id): <p>The PhoneNumberId or PhoneNumberArn of the phone number to release. You can use <code>DescribePhoneNumbers</code> to get the values for PhoneNumberId and PhoneNumberArn.</p>
    /// - On success, responds with [`ReleasePhoneNumberOutput`](crate::output::ReleasePhoneNumberOutput) with field(s):
    ///   - [`phone_number_arn(Option<String>)`](crate::output::ReleasePhoneNumberOutput::phone_number_arn): <p>The PhoneNumberArn of the phone number that was released.</p>
    ///   - [`phone_number_id(Option<String>)`](crate::output::ReleasePhoneNumberOutput::phone_number_id): <p>The PhoneNumberId of the phone number that was released.</p>
    ///   - [`phone_number(Option<String>)`](crate::output::ReleasePhoneNumberOutput::phone_number): <p>The phone number that was released.</p>
    ///   - [`status(Option<NumberStatus>)`](crate::output::ReleasePhoneNumberOutput::status): <p>The current status of the request.</p>
    ///   - [`iso_country_code(Option<String>)`](crate::output::ReleasePhoneNumberOutput::iso_country_code): <p>The two-character code, in ISO 3166-1 alpha-2 format, for the country or region.</p>
    ///   - [`message_type(Option<MessageType>)`](crate::output::ReleasePhoneNumberOutput::message_type): <p>The message type that was associated with the phone number.</p>
    ///   - [`number_capabilities(Option<Vec<NumberCapability>>)`](crate::output::ReleasePhoneNumberOutput::number_capabilities): <p>Specifies if the number could be used for text messages, voice, or both.</p>
    ///   - [`number_type(Option<NumberType>)`](crate::output::ReleasePhoneNumberOutput::number_type): <p>The type of number that was released.</p>
    ///   - [`monthly_leasing_price(Option<String>)`](crate::output::ReleasePhoneNumberOutput::monthly_leasing_price): <p>The monthly price of the phone number, in US dollars.</p>
    ///   - [`two_way_enabled(bool)`](crate::output::ReleasePhoneNumberOutput::two_way_enabled): <p>By default this is set to false. When set to true you can receive incoming text messages from your end recipients.</p>
    ///   - [`two_way_channel_arn(Option<String>)`](crate::output::ReleasePhoneNumberOutput::two_way_channel_arn): <p>The Amazon Resource Name (ARN) of the TwoWayChannel.</p>
    ///   - [`self_managed_opt_outs_enabled(bool)`](crate::output::ReleasePhoneNumberOutput::self_managed_opt_outs_enabled): <p>By default this is set to false. When an end recipient sends a message that begins with HELP or STOP to one of your dedicated numbers, Amazon Pinpoint automatically replies with a customizable message and adds the end recipient to the OptOutList. When set to true you're responsible for responding to HELP and STOP requests. You're also responsible for tracking and honoring opt-out requests.</p>
    ///   - [`opt_out_list_name(Option<String>)`](crate::output::ReleasePhoneNumberOutput::opt_out_list_name): <p>The name of the OptOutList that was associated with the phone number.</p>
    ///   - [`created_timestamp(Option<DateTime>)`](crate::output::ReleasePhoneNumberOutput::created_timestamp): <p>The time when the phone number was created, in <a href="https://www.epochconverter.com/">UNIX epoch time</a> format.</p>
    /// - On failure, responds with [`SdkError<ReleasePhoneNumberError>`](crate::error::ReleasePhoneNumberError)
    pub fn release_phone_number(&self) -> crate::client::fluent_builders::ReleasePhoneNumber {
        crate::client::fluent_builders::ReleasePhoneNumber::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`RequestPhoneNumber`](crate::client::fluent_builders::RequestPhoneNumber) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`iso_country_code(impl Into<String>)`](crate::client::fluent_builders::RequestPhoneNumber::iso_country_code) / [`set_iso_country_code(Option<String>)`](crate::client::fluent_builders::RequestPhoneNumber::set_iso_country_code): <p>The two-character code, in ISO 3166-1 alpha-2 format, for the country or region. </p>
    ///   - [`message_type(MessageType)`](crate::client::fluent_builders::RequestPhoneNumber::message_type) / [`set_message_type(Option<MessageType>)`](crate::client::fluent_builders::RequestPhoneNumber::set_message_type): <p>The type of message. Valid values are TRANSACTIONAL for messages that are critical or time-sensitive and PROMOTIONAL for messages that aren't critical or time-sensitive.</p>
    ///   - [`number_capabilities(Vec<NumberCapability>)`](crate::client::fluent_builders::RequestPhoneNumber::number_capabilities) / [`set_number_capabilities(Option<Vec<NumberCapability>>)`](crate::client::fluent_builders::RequestPhoneNumber::set_number_capabilities): <p>Indicates if the phone number will be used for text messages, voice messages, or both. </p>
    ///   - [`number_type(RequestableNumberType)`](crate::client::fluent_builders::RequestPhoneNumber::number_type) / [`set_number_type(Option<RequestableNumberType>)`](crate::client::fluent_builders::RequestPhoneNumber::set_number_type): <p>The type of phone number to request.</p>
    ///   - [`opt_out_list_name(impl Into<String>)`](crate::client::fluent_builders::RequestPhoneNumber::opt_out_list_name) / [`set_opt_out_list_name(Option<String>)`](crate::client::fluent_builders::RequestPhoneNumber::set_opt_out_list_name): <p>The name of the OptOutList to associate with the phone number. You can use the OutOutListName or OptPutListArn.</p>
    ///   - [`pool_id(impl Into<String>)`](crate::client::fluent_builders::RequestPhoneNumber::pool_id) / [`set_pool_id(Option<String>)`](crate::client::fluent_builders::RequestPhoneNumber::set_pool_id): <p>The pool to associated with the phone number. You can use the PoolId or PoolArn. </p>
    ///   - [`registration_id(impl Into<String>)`](crate::client::fluent_builders::RequestPhoneNumber::registration_id) / [`set_registration_id(Option<String>)`](crate::client::fluent_builders::RequestPhoneNumber::set_registration_id): <p>Use this field to attach your phone number for an external registration process.</p>
    ///   - [`deletion_protection_enabled(bool)`](crate::client::fluent_builders::RequestPhoneNumber::deletion_protection_enabled) / [`set_deletion_protection_enabled(Option<bool>)`](crate::client::fluent_builders::RequestPhoneNumber::set_deletion_protection_enabled): <p>By default this is set to false. When set to true the phone number can't be deleted.</p>
    ///   - [`tags(Vec<Tag>)`](crate::client::fluent_builders::RequestPhoneNumber::tags) / [`set_tags(Option<Vec<Tag>>)`](crate::client::fluent_builders::RequestPhoneNumber::set_tags): <p>An array of tags (key and value pairs) associate with the requested phone number. </p>
    ///   - [`client_token(impl Into<String>)`](crate::client::fluent_builders::RequestPhoneNumber::client_token) / [`set_client_token(Option<String>)`](crate::client::fluent_builders::RequestPhoneNumber::set_client_token): <p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If you don't specify a client token, a randomly generated token is used for the request to ensure idempotency.</p>
    /// - On success, responds with [`RequestPhoneNumberOutput`](crate::output::RequestPhoneNumberOutput) with field(s):
    ///   - [`phone_number_arn(Option<String>)`](crate::output::RequestPhoneNumberOutput::phone_number_arn): <p>The Amazon Resource Name (ARN) of the requested phone number.</p>
    ///   - [`phone_number_id(Option<String>)`](crate::output::RequestPhoneNumberOutput::phone_number_id): <p>The unique identifier of the new phone number.</p>
    ///   - [`phone_number(Option<String>)`](crate::output::RequestPhoneNumberOutput::phone_number): <p>The new phone number that was requested.</p>
    ///   - [`status(Option<NumberStatus>)`](crate::output::RequestPhoneNumberOutput::status): <p>The current status of the request.</p>
    ///   - [`iso_country_code(Option<String>)`](crate::output::RequestPhoneNumberOutput::iso_country_code): <p>The two-character code, in ISO 3166-1 alpha-2 format, for the country or region. </p>
    ///   - [`message_type(Option<MessageType>)`](crate::output::RequestPhoneNumberOutput::message_type): <p>The type of message. Valid values are TRANSACTIONAL for messages that are critical or time-sensitive and PROMOTIONAL for messages that aren't critical or time-sensitive.</p>
    ///   - [`number_capabilities(Option<Vec<NumberCapability>>)`](crate::output::RequestPhoneNumberOutput::number_capabilities): <p>Indicates if the phone number will be used for text messages, voice messages or both. </p>
    ///   - [`number_type(Option<RequestableNumberType>)`](crate::output::RequestPhoneNumberOutput::number_type): <p>The type of number that was released.</p>
    ///   - [`monthly_leasing_price(Option<String>)`](crate::output::RequestPhoneNumberOutput::monthly_leasing_price): <p>The monthly price, in US dollars, to lease the phone number.</p>
    ///   - [`two_way_enabled(bool)`](crate::output::RequestPhoneNumberOutput::two_way_enabled): <p>By default this is set to false. When set to true you can receive incoming text messages from your end recipients.</p>
    ///   - [`two_way_channel_arn(Option<String>)`](crate::output::RequestPhoneNumberOutput::two_way_channel_arn): <p>The ARN used to identify the two way channel.</p>
    ///   - [`self_managed_opt_outs_enabled(bool)`](crate::output::RequestPhoneNumberOutput::self_managed_opt_outs_enabled): <p>By default this is set to false. When an end recipient sends a message that begins with HELP or STOP to one of your dedicated numbers, Amazon Pinpoint automatically replies with a customizable message and adds the end recipient to the OptOutList. When set to true you're responsible for responding to HELP and STOP requests. You're also responsible for tracking and honoring opt-out requests.</p>
    ///   - [`opt_out_list_name(Option<String>)`](crate::output::RequestPhoneNumberOutput::opt_out_list_name): <p>The name of the OptOutList that is associated with the requested phone number.</p>
    ///   - [`deletion_protection_enabled(bool)`](crate::output::RequestPhoneNumberOutput::deletion_protection_enabled): <p>By default this is set to false. When set to true the phone number can't be deleted. </p>
    ///   - [`pool_id(Option<String>)`](crate::output::RequestPhoneNumberOutput::pool_id): <p>The unique identifier of the pool associated with the phone number </p>
    ///   - [`tags(Option<Vec<Tag>>)`](crate::output::RequestPhoneNumberOutput::tags): <p>An array of key and value pair tags that are associated with the phone number.</p>
    ///   - [`created_timestamp(Option<DateTime>)`](crate::output::RequestPhoneNumberOutput::created_timestamp): <p>The time when the phone number was created, in <a href="https://www.epochconverter.com/">UNIX epoch time</a> format.</p>
    /// - On failure, responds with [`SdkError<RequestPhoneNumberError>`](crate::error::RequestPhoneNumberError)
    pub fn request_phone_number(&self) -> crate::client::fluent_builders::RequestPhoneNumber {
        crate::client::fluent_builders::RequestPhoneNumber::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`SendTextMessage`](crate::client::fluent_builders::SendTextMessage) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`destination_phone_number(impl Into<String>)`](crate::client::fluent_builders::SendTextMessage::destination_phone_number) / [`set_destination_phone_number(Option<String>)`](crate::client::fluent_builders::SendTextMessage::set_destination_phone_number): <p>The destination phone number in E.164 format.</p>
    ///   - [`origination_identity(impl Into<String>)`](crate::client::fluent_builders::SendTextMessage::origination_identity) / [`set_origination_identity(Option<String>)`](crate::client::fluent_builders::SendTextMessage::set_origination_identity): <p>The origination identity of the message. This can be either the PhoneNumber, PhoneNumberId, PhoneNumberArn, SenderId, SenderIdArn, PoolId, or PoolArn.</p>
    ///   - [`message_body(impl Into<String>)`](crate::client::fluent_builders::SendTextMessage::message_body) / [`set_message_body(Option<String>)`](crate::client::fluent_builders::SendTextMessage::set_message_body): <p>The body of the text message.</p>
    ///   - [`message_type(MessageType)`](crate::client::fluent_builders::SendTextMessage::message_type) / [`set_message_type(Option<MessageType>)`](crate::client::fluent_builders::SendTextMessage::set_message_type): <p>The type of message. Valid values are TRANSACTIONAL for messages that are critical or time-sensitive and PROMOTIONAL for messages that aren't critical or time-sensitive.</p>
    ///   - [`keyword(impl Into<String>)`](crate::client::fluent_builders::SendTextMessage::keyword) / [`set_keyword(Option<String>)`](crate::client::fluent_builders::SendTextMessage::set_keyword): <p>When you register a short code in the US, you must specify a program name. If you don’t have a US short code, omit this attribute.</p>
    ///   - [`configuration_set_name(impl Into<String>)`](crate::client::fluent_builders::SendTextMessage::configuration_set_name) / [`set_configuration_set_name(Option<String>)`](crate::client::fluent_builders::SendTextMessage::set_configuration_set_name): <p>The name of the configuration set to use. This can be either the ConfigurationSetName or ConfigurationSetArn.</p>
    ///   - [`max_price(impl Into<String>)`](crate::client::fluent_builders::SendTextMessage::max_price) / [`set_max_price(Option<String>)`](crate::client::fluent_builders::SendTextMessage::set_max_price): <p>The maximum amount that you want to spend, in US dollars, per each text message part. A text message can contain multiple parts.</p>
    ///   - [`time_to_live(i32)`](crate::client::fluent_builders::SendTextMessage::time_to_live) / [`set_time_to_live(Option<i32>)`](crate::client::fluent_builders::SendTextMessage::set_time_to_live): <p>How long the text message is valid for. By default this is 72 hours.</p>
    ///   - [`context(HashMap<String, String>)`](crate::client::fluent_builders::SendTextMessage::context) / [`set_context(Option<HashMap<String, String>>)`](crate::client::fluent_builders::SendTextMessage::set_context): <p>You can specify custom data in this field. If you do, that data is logged to the event destination.</p>
    ///   - [`destination_country_parameters(HashMap<DestinationCountryParameterKey, String>)`](crate::client::fluent_builders::SendTextMessage::destination_country_parameters) / [`set_destination_country_parameters(Option<HashMap<DestinationCountryParameterKey, String>>)`](crate::client::fluent_builders::SendTextMessage::set_destination_country_parameters): <p>This field is used for any country-specific registration requirements. Currently, this setting is only used when you send messages to recipients in India using a sender ID. For more information see <a href="https://docs.aws.amazon.com/pinpoint/latest/userguide/channels-sms-senderid-india.html">Special requirements for sending SMS messages to recipients in India</a>. </p>
    ///   - [`dry_run(bool)`](crate::client::fluent_builders::SendTextMessage::dry_run) / [`set_dry_run(bool)`](crate::client::fluent_builders::SendTextMessage::set_dry_run): <p>When set to true, the message is checked and validated, but isn't sent to the end recipient.</p>
    /// - On success, responds with [`SendTextMessageOutput`](crate::output::SendTextMessageOutput) with field(s):
    ///   - [`message_id(Option<String>)`](crate::output::SendTextMessageOutput::message_id): <p>The unique identifier for the message.</p>
    /// - On failure, responds with [`SdkError<SendTextMessageError>`](crate::error::SendTextMessageError)
    pub fn send_text_message(&self) -> crate::client::fluent_builders::SendTextMessage {
        crate::client::fluent_builders::SendTextMessage::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`SendVoiceMessage`](crate::client::fluent_builders::SendVoiceMessage) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`destination_phone_number(impl Into<String>)`](crate::client::fluent_builders::SendVoiceMessage::destination_phone_number) / [`set_destination_phone_number(Option<String>)`](crate::client::fluent_builders::SendVoiceMessage::set_destination_phone_number): <p>The destination phone number in E.164 format.</p>
    ///   - [`origination_identity(impl Into<String>)`](crate::client::fluent_builders::SendVoiceMessage::origination_identity) / [`set_origination_identity(Option<String>)`](crate::client::fluent_builders::SendVoiceMessage::set_origination_identity): <p>The origination identity to use for the voice call. This can be the PhoneNumber, PhoneNumberId, PhoneNumberArn, PoolId, or PoolArn.</p>
    ///   - [`message_body(impl Into<String>)`](crate::client::fluent_builders::SendVoiceMessage::message_body) / [`set_message_body(Option<String>)`](crate::client::fluent_builders::SendVoiceMessage::set_message_body): <p>The text to convert to a voice message.</p>
    ///   - [`message_body_text_type(VoiceMessageBodyTextType)`](crate::client::fluent_builders::SendVoiceMessage::message_body_text_type) / [`set_message_body_text_type(Option<VoiceMessageBodyTextType>)`](crate::client::fluent_builders::SendVoiceMessage::set_message_body_text_type): <p>Specifies if the MessageBody field contains text or <a href="https://docs.aws.amazon.com/polly/latest/dg/what-is.html">speech synthesis markup language (SSML)</a>.</p>  <ul>   <li> <p>TEXT: This is the default value. When used the maximum character limit is 3000.</p> </li>   <li> <p>SSML: When used the maximum character limit is 6000 including SSML tagging.</p> </li>  </ul>
    ///   - [`voice_id(VoiceId)`](crate::client::fluent_builders::SendVoiceMessage::voice_id) / [`set_voice_id(Option<VoiceId>)`](crate::client::fluent_builders::SendVoiceMessage::set_voice_id): <p>The voice for the <a href="https://docs.aws.amazon.com/polly/latest/dg/what-is.html">Amazon Polly</a> service to use. By default this is set to "MATTHEW".</p>
    ///   - [`configuration_set_name(impl Into<String>)`](crate::client::fluent_builders::SendVoiceMessage::configuration_set_name) / [`set_configuration_set_name(Option<String>)`](crate::client::fluent_builders::SendVoiceMessage::set_configuration_set_name): <p>The name of the configuration set to use. This can be either the ConfigurationSetName or ConfigurationSetArn.</p>
    ///   - [`max_price_per_minute(impl Into<String>)`](crate::client::fluent_builders::SendVoiceMessage::max_price_per_minute) / [`set_max_price_per_minute(Option<String>)`](crate::client::fluent_builders::SendVoiceMessage::set_max_price_per_minute): <p>The maximum amount to spend per voice message, in US dollars.</p>
    ///   - [`time_to_live(i32)`](crate::client::fluent_builders::SendVoiceMessage::time_to_live) / [`set_time_to_live(Option<i32>)`](crate::client::fluent_builders::SendVoiceMessage::set_time_to_live): <p>How long the voice message is valid for. By default this is 72 hours.</p>
    ///   - [`context(HashMap<String, String>)`](crate::client::fluent_builders::SendVoiceMessage::context) / [`set_context(Option<HashMap<String, String>>)`](crate::client::fluent_builders::SendVoiceMessage::set_context): <p>You can specify custom data in this field. If you do, that data is logged to the event destination.</p>
    ///   - [`dry_run(bool)`](crate::client::fluent_builders::SendVoiceMessage::dry_run) / [`set_dry_run(bool)`](crate::client::fluent_builders::SendVoiceMessage::set_dry_run): <p>When set to true, the message is checked and validated, but isn't sent to the end recipient.</p>
    /// - On success, responds with [`SendVoiceMessageOutput`](crate::output::SendVoiceMessageOutput) with field(s):
    ///   - [`message_id(Option<String>)`](crate::output::SendVoiceMessageOutput::message_id): <p>The unique identifier for the message.</p>
    /// - On failure, responds with [`SdkError<SendVoiceMessageError>`](crate::error::SendVoiceMessageError)
    pub fn send_voice_message(&self) -> crate::client::fluent_builders::SendVoiceMessage {
        crate::client::fluent_builders::SendVoiceMessage::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`SetDefaultMessageType`](crate::client::fluent_builders::SetDefaultMessageType) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`configuration_set_name(impl Into<String>)`](crate::client::fluent_builders::SetDefaultMessageType::configuration_set_name) / [`set_configuration_set_name(Option<String>)`](crate::client::fluent_builders::SetDefaultMessageType::set_configuration_set_name): <p>The configuration set to update with a new default message type. This field can be the ConsigurationSetName or ConfigurationSetArn.</p>
    ///   - [`message_type(MessageType)`](crate::client::fluent_builders::SetDefaultMessageType::message_type) / [`set_message_type(Option<MessageType>)`](crate::client::fluent_builders::SetDefaultMessageType::set_message_type): <p>The type of message. Valid values are TRANSACTIONAL for messages that are critical or time-sensitive and PROMOTIONAL for messages that aren't critical or time-sensitive.</p>
    /// - On success, responds with [`SetDefaultMessageTypeOutput`](crate::output::SetDefaultMessageTypeOutput) with field(s):
    ///   - [`configuration_set_arn(Option<String>)`](crate::output::SetDefaultMessageTypeOutput::configuration_set_arn): <p>The Amazon Resource Name (ARN) of the updated configuration set.</p>
    ///   - [`configuration_set_name(Option<String>)`](crate::output::SetDefaultMessageTypeOutput::configuration_set_name): <p>The name of the configuration set that was updated.</p>
    ///   - [`message_type(Option<MessageType>)`](crate::output::SetDefaultMessageTypeOutput::message_type): <p>The new default message type of the configuration set.</p>
    /// - On failure, responds with [`SdkError<SetDefaultMessageTypeError>`](crate::error::SetDefaultMessageTypeError)
    pub fn set_default_message_type(
        &self,
    ) -> crate::client::fluent_builders::SetDefaultMessageType {
        crate::client::fluent_builders::SetDefaultMessageType::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`SetDefaultSenderId`](crate::client::fluent_builders::SetDefaultSenderId) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`configuration_set_name(impl Into<String>)`](crate::client::fluent_builders::SetDefaultSenderId::configuration_set_name) / [`set_configuration_set_name(Option<String>)`](crate::client::fluent_builders::SetDefaultSenderId::set_configuration_set_name): <p>The configuration set to updated with a new default SenderId. This field can be the ConsigurationSetName or ConfigurationSetArn.</p>
    ///   - [`sender_id(impl Into<String>)`](crate::client::fluent_builders::SetDefaultSenderId::sender_id) / [`set_sender_id(Option<String>)`](crate::client::fluent_builders::SetDefaultSenderId::set_sender_id): <p>The current sender ID for the configuration set. When sending a text message to a destination country which supports SenderIds, the default sender ID on the configuration set specified on <code>SendTextMessage</code> will be used if no dedicated origination phone numbers or registered SenderIds are available in your account, instead of a generic sender ID, such as 'NOTICE'.</p>
    /// - On success, responds with [`SetDefaultSenderIdOutput`](crate::output::SetDefaultSenderIdOutput) with field(s):
    ///   - [`configuration_set_arn(Option<String>)`](crate::output::SetDefaultSenderIdOutput::configuration_set_arn): <p>The Amazon Resource Name (ARN) of the updated configuration set.</p>
    ///   - [`configuration_set_name(Option<String>)`](crate::output::SetDefaultSenderIdOutput::configuration_set_name): <p>The name of the configuration set that was updated.</p>
    ///   - [`sender_id(Option<String>)`](crate::output::SetDefaultSenderIdOutput::sender_id): <p>The default sender ID to set for the ConfigurationSet.</p>
    /// - On failure, responds with [`SdkError<SetDefaultSenderIdError>`](crate::error::SetDefaultSenderIdError)
    pub fn set_default_sender_id(&self) -> crate::client::fluent_builders::SetDefaultSenderId {
        crate::client::fluent_builders::SetDefaultSenderId::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`SetTextMessageSpendLimitOverride`](crate::client::fluent_builders::SetTextMessageSpendLimitOverride) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`monthly_limit(i64)`](crate::client::fluent_builders::SetTextMessageSpendLimitOverride::monthly_limit) / [`set_monthly_limit(Option<i64>)`](crate::client::fluent_builders::SetTextMessageSpendLimitOverride::set_monthly_limit): <p>The new monthly limit to enforce on text messages.</p>
    /// - On success, responds with [`SetTextMessageSpendLimitOverrideOutput`](crate::output::SetTextMessageSpendLimitOverrideOutput) with field(s):
    ///   - [`monthly_limit(Option<i64>)`](crate::output::SetTextMessageSpendLimitOverrideOutput::monthly_limit): <p>The current monthly limit to enforce on sending text messages.</p>
    /// - On failure, responds with [`SdkError<SetTextMessageSpendLimitOverrideError>`](crate::error::SetTextMessageSpendLimitOverrideError)
    pub fn set_text_message_spend_limit_override(
        &self,
    ) -> crate::client::fluent_builders::SetTextMessageSpendLimitOverride {
        crate::client::fluent_builders::SetTextMessageSpendLimitOverride::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`SetVoiceMessageSpendLimitOverride`](crate::client::fluent_builders::SetVoiceMessageSpendLimitOverride) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`monthly_limit(i64)`](crate::client::fluent_builders::SetVoiceMessageSpendLimitOverride::monthly_limit) / [`set_monthly_limit(Option<i64>)`](crate::client::fluent_builders::SetVoiceMessageSpendLimitOverride::set_monthly_limit): <p>The new monthly limit to enforce on voice messages.</p>
    /// - On success, responds with [`SetVoiceMessageSpendLimitOverrideOutput`](crate::output::SetVoiceMessageSpendLimitOverrideOutput) with field(s):
    ///   - [`monthly_limit(Option<i64>)`](crate::output::SetVoiceMessageSpendLimitOverrideOutput::monthly_limit): <p>The current monthly limit to enforce on sending voice messages.</p>
    /// - On failure, responds with [`SdkError<SetVoiceMessageSpendLimitOverrideError>`](crate::error::SetVoiceMessageSpendLimitOverrideError)
    pub fn set_voice_message_spend_limit_override(
        &self,
    ) -> crate::client::fluent_builders::SetVoiceMessageSpendLimitOverride {
        crate::client::fluent_builders::SetVoiceMessageSpendLimitOverride::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`TagResource`](crate::client::fluent_builders::TagResource) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`resource_arn(impl Into<String>)`](crate::client::fluent_builders::TagResource::resource_arn) / [`set_resource_arn(Option<String>)`](crate::client::fluent_builders::TagResource::set_resource_arn): <p>The Amazon Resource Name (ARN) of the resource.</p>
    ///   - [`tags(Vec<Tag>)`](crate::client::fluent_builders::TagResource::tags) / [`set_tags(Option<Vec<Tag>>)`](crate::client::fluent_builders::TagResource::set_tags): <p>An array of key and value pair tags that are associated with the resource.</p>
    /// - On success, responds with [`TagResourceOutput`](crate::output::TagResourceOutput)

    /// - On failure, responds with [`SdkError<TagResourceError>`](crate::error::TagResourceError)
    pub fn tag_resource(&self) -> crate::client::fluent_builders::TagResource {
        crate::client::fluent_builders::TagResource::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`UntagResource`](crate::client::fluent_builders::UntagResource) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`resource_arn(impl Into<String>)`](crate::client::fluent_builders::UntagResource::resource_arn) / [`set_resource_arn(Option<String>)`](crate::client::fluent_builders::UntagResource::set_resource_arn): <p>The Amazon Resource Name (ARN) of the resource.</p>
    ///   - [`tag_keys(Vec<String>)`](crate::client::fluent_builders::UntagResource::tag_keys) / [`set_tag_keys(Option<Vec<String>>)`](crate::client::fluent_builders::UntagResource::set_tag_keys): <p>An array of tag key values to unassociate with the resource.</p>
    /// - On success, responds with [`UntagResourceOutput`](crate::output::UntagResourceOutput)

    /// - On failure, responds with [`SdkError<UntagResourceError>`](crate::error::UntagResourceError)
    pub fn untag_resource(&self) -> crate::client::fluent_builders::UntagResource {
        crate::client::fluent_builders::UntagResource::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`UpdateEventDestination`](crate::client::fluent_builders::UpdateEventDestination) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`configuration_set_name(impl Into<String>)`](crate::client::fluent_builders::UpdateEventDestination::configuration_set_name) / [`set_configuration_set_name(Option<String>)`](crate::client::fluent_builders::UpdateEventDestination::set_configuration_set_name): <p>The configuration set to update with the new event destination. Valid values for this can be the ConfigurationSetName or ConfigurationSetArn.</p>
    ///   - [`event_destination_name(impl Into<String>)`](crate::client::fluent_builders::UpdateEventDestination::event_destination_name) / [`set_event_destination_name(Option<String>)`](crate::client::fluent_builders::UpdateEventDestination::set_event_destination_name): <p>The name to use for the event destination.</p>
    ///   - [`enabled(bool)`](crate::client::fluent_builders::UpdateEventDestination::enabled) / [`set_enabled(Option<bool>)`](crate::client::fluent_builders::UpdateEventDestination::set_enabled): <p>When set to true logging is enabled.</p>
    ///   - [`matching_event_types(Vec<EventType>)`](crate::client::fluent_builders::UpdateEventDestination::matching_event_types) / [`set_matching_event_types(Option<Vec<EventType>>)`](crate::client::fluent_builders::UpdateEventDestination::set_matching_event_types): <p>An array of event types that determine which events to log.</p>
    ///   - [`cloud_watch_logs_destination(CloudWatchLogsDestination)`](crate::client::fluent_builders::UpdateEventDestination::cloud_watch_logs_destination) / [`set_cloud_watch_logs_destination(Option<CloudWatchLogsDestination>)`](crate::client::fluent_builders::UpdateEventDestination::set_cloud_watch_logs_destination): <p>An object that contains information about an event destination that sends data to CloudWatch Logs.</p>
    ///   - [`kinesis_firehose_destination(KinesisFirehoseDestination)`](crate::client::fluent_builders::UpdateEventDestination::kinesis_firehose_destination) / [`set_kinesis_firehose_destination(Option<KinesisFirehoseDestination>)`](crate::client::fluent_builders::UpdateEventDestination::set_kinesis_firehose_destination): <p>An object that contains information about an event destination for logging to Kinesis Data Firehose.</p>
    ///   - [`sns_destination(SnsDestination)`](crate::client::fluent_builders::UpdateEventDestination::sns_destination) / [`set_sns_destination(Option<SnsDestination>)`](crate::client::fluent_builders::UpdateEventDestination::set_sns_destination): <p>An object that contains information about an event destination that sends data to Amazon SNS.</p>
    /// - On success, responds with [`UpdateEventDestinationOutput`](crate::output::UpdateEventDestinationOutput) with field(s):
    ///   - [`configuration_set_arn(Option<String>)`](crate::output::UpdateEventDestinationOutput::configuration_set_arn): <p>The Amazon Resource Name (ARN) for the ConfigurationSet that was updated.</p>
    ///   - [`configuration_set_name(Option<String>)`](crate::output::UpdateEventDestinationOutput::configuration_set_name): <p>The name of the configuration set.</p>
    ///   - [`event_destination(Option<EventDestination>)`](crate::output::UpdateEventDestinationOutput::event_destination): <p>An EventDestination object containing the details of where events will be logged. </p>
    /// - On failure, responds with [`SdkError<UpdateEventDestinationError>`](crate::error::UpdateEventDestinationError)
    pub fn update_event_destination(
        &self,
    ) -> crate::client::fluent_builders::UpdateEventDestination {
        crate::client::fluent_builders::UpdateEventDestination::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`UpdatePhoneNumber`](crate::client::fluent_builders::UpdatePhoneNumber) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`phone_number_id(impl Into<String>)`](crate::client::fluent_builders::UpdatePhoneNumber::phone_number_id) / [`set_phone_number_id(Option<String>)`](crate::client::fluent_builders::UpdatePhoneNumber::set_phone_number_id): <p>The unique identifier of the phone number. Valid values for this field can be either the PhoneNumberId or PhoneNumberArn.</p>
    ///   - [`two_way_enabled(bool)`](crate::client::fluent_builders::UpdatePhoneNumber::two_way_enabled) / [`set_two_way_enabled(Option<bool>)`](crate::client::fluent_builders::UpdatePhoneNumber::set_two_way_enabled): <p>By default this is set to false. When set to true you can receive incoming text messages from your end recipients.</p>
    ///   - [`two_way_channel_arn(impl Into<String>)`](crate::client::fluent_builders::UpdatePhoneNumber::two_way_channel_arn) / [`set_two_way_channel_arn(Option<String>)`](crate::client::fluent_builders::UpdatePhoneNumber::set_two_way_channel_arn): <p>The Amazon Resource Name (ARN) of the two way channel.</p>
    ///   - [`self_managed_opt_outs_enabled(bool)`](crate::client::fluent_builders::UpdatePhoneNumber::self_managed_opt_outs_enabled) / [`set_self_managed_opt_outs_enabled(Option<bool>)`](crate::client::fluent_builders::UpdatePhoneNumber::set_self_managed_opt_outs_enabled): <p>By default this is set to false. When an end recipient sends a message that begins with HELP or STOP to one of your dedicated numbers, Amazon Pinpoint automatically replies with a customizable message and adds the end recipient to the OptOutList. When set to true you're responsible for responding to HELP and STOP requests. You're also responsible for tracking and honoring opt-out requests.</p>
    ///   - [`opt_out_list_name(impl Into<String>)`](crate::client::fluent_builders::UpdatePhoneNumber::opt_out_list_name) / [`set_opt_out_list_name(Option<String>)`](crate::client::fluent_builders::UpdatePhoneNumber::set_opt_out_list_name): <p>The OptOutList to add the phone number to. Valid values for this field can be either the OutOutListName or OutOutListArn.</p>
    ///   - [`deletion_protection_enabled(bool)`](crate::client::fluent_builders::UpdatePhoneNumber::deletion_protection_enabled) / [`set_deletion_protection_enabled(Option<bool>)`](crate::client::fluent_builders::UpdatePhoneNumber::set_deletion_protection_enabled): <p>By default this is set to false. When set to true the phone number can't be deleted. </p>
    /// - On success, responds with [`UpdatePhoneNumberOutput`](crate::output::UpdatePhoneNumberOutput) with field(s):
    ///   - [`phone_number_arn(Option<String>)`](crate::output::UpdatePhoneNumberOutput::phone_number_arn): <p>The Amazon Resource Name (ARN) of the updated phone number.</p>
    ///   - [`phone_number_id(Option<String>)`](crate::output::UpdatePhoneNumberOutput::phone_number_id): <p>The unique identifier of the phone number.</p>
    ///   - [`phone_number(Option<String>)`](crate::output::UpdatePhoneNumberOutput::phone_number): <p>The phone number that was updated.</p>
    ///   - [`status(Option<NumberStatus>)`](crate::output::UpdatePhoneNumberOutput::status): <p>The current status of the request.</p>
    ///   - [`iso_country_code(Option<String>)`](crate::output::UpdatePhoneNumberOutput::iso_country_code): <p>The two-character code, in ISO 3166-1 alpha-2 format, for the country or region. </p>
    ///   - [`message_type(Option<MessageType>)`](crate::output::UpdatePhoneNumberOutput::message_type): <p>The type of message. Valid values are TRANSACTIONAL for messages that are critical or time-sensitive and PROMOTIONAL for messages that aren't critical or time-sensitive.</p>
    ///   - [`number_capabilities(Option<Vec<NumberCapability>>)`](crate::output::UpdatePhoneNumberOutput::number_capabilities): <p>Specifies if the number could be used for text messages, voice or both.</p>
    ///   - [`number_type(Option<NumberType>)`](crate::output::UpdatePhoneNumberOutput::number_type): <p>The type of number that was requested.</p>
    ///   - [`monthly_leasing_price(Option<String>)`](crate::output::UpdatePhoneNumberOutput::monthly_leasing_price): <p>The monthly leasing price of the phone number, in US dollars.</p>
    ///   - [`two_way_enabled(bool)`](crate::output::UpdatePhoneNumberOutput::two_way_enabled): <p>By default this is set to false. When set to true you can receive incoming text messages from your end recipients.</p>
    ///   - [`two_way_channel_arn(Option<String>)`](crate::output::UpdatePhoneNumberOutput::two_way_channel_arn): <p>The Amazon Resource Name (ARN) of the two way channel.</p>
    ///   - [`self_managed_opt_outs_enabled(bool)`](crate::output::UpdatePhoneNumberOutput::self_managed_opt_outs_enabled): <p>This is true if self managed opt-out are enabled.</p>
    ///   - [`opt_out_list_name(Option<String>)`](crate::output::UpdatePhoneNumberOutput::opt_out_list_name): <p>The name of the OptOutList associated with the phone number.</p>
    ///   - [`deletion_protection_enabled(bool)`](crate::output::UpdatePhoneNumberOutput::deletion_protection_enabled): <p>When set to true the phone number can't be deleted.</p>
    ///   - [`created_timestamp(Option<DateTime>)`](crate::output::UpdatePhoneNumberOutput::created_timestamp): <p>The time when the phone number was created, in <a href="https://www.epochconverter.com/">UNIX epoch time</a> format.</p>
    /// - On failure, responds with [`SdkError<UpdatePhoneNumberError>`](crate::error::UpdatePhoneNumberError)
    pub fn update_phone_number(&self) -> crate::client::fluent_builders::UpdatePhoneNumber {
        crate::client::fluent_builders::UpdatePhoneNumber::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`UpdatePool`](crate::client::fluent_builders::UpdatePool) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`pool_id(impl Into<String>)`](crate::client::fluent_builders::UpdatePool::pool_id) / [`set_pool_id(Option<String>)`](crate::client::fluent_builders::UpdatePool::set_pool_id): <p>The unique identifier of the pool to update. Valid values are either the PoolId or PoolArn.</p>
    ///   - [`two_way_enabled(bool)`](crate::client::fluent_builders::UpdatePool::two_way_enabled) / [`set_two_way_enabled(Option<bool>)`](crate::client::fluent_builders::UpdatePool::set_two_way_enabled): <p>By default this is set to false. When set to true you can receive incoming text messages from your end recipients.</p>
    ///   - [`two_way_channel_arn(impl Into<String>)`](crate::client::fluent_builders::UpdatePool::two_way_channel_arn) / [`set_two_way_channel_arn(Option<String>)`](crate::client::fluent_builders::UpdatePool::set_two_way_channel_arn): <p>The Amazon Resource Name (ARN) of the two way channel.</p>
    ///   - [`self_managed_opt_outs_enabled(bool)`](crate::client::fluent_builders::UpdatePool::self_managed_opt_outs_enabled) / [`set_self_managed_opt_outs_enabled(Option<bool>)`](crate::client::fluent_builders::UpdatePool::set_self_managed_opt_outs_enabled): <p>By default this is set to false. When an end recipient sends a message that begins with HELP or STOP to one of your dedicated numbers, Amazon Pinpoint automatically replies with a customizable message and adds the end recipient to the OptOutList. When set to true you're responsible for responding to HELP and STOP requests. You're also responsible for tracking and honoring opt-out requests.</p>
    ///   - [`opt_out_list_name(impl Into<String>)`](crate::client::fluent_builders::UpdatePool::opt_out_list_name) / [`set_opt_out_list_name(Option<String>)`](crate::client::fluent_builders::UpdatePool::set_opt_out_list_name): <p>The OptOutList to associate with the pool. Valid values are either OptOutListName or OptOutListArn.</p>
    ///   - [`shared_routes_enabled(bool)`](crate::client::fluent_builders::UpdatePool::shared_routes_enabled) / [`set_shared_routes_enabled(Option<bool>)`](crate::client::fluent_builders::UpdatePool::set_shared_routes_enabled): <p>Indicates whether shared routes are enabled for the pool.</p>
    ///   - [`deletion_protection_enabled(bool)`](crate::client::fluent_builders::UpdatePool::deletion_protection_enabled) / [`set_deletion_protection_enabled(Option<bool>)`](crate::client::fluent_builders::UpdatePool::set_deletion_protection_enabled): <p>When set to true the pool can't be deleted.</p>
    /// - On success, responds with [`UpdatePoolOutput`](crate::output::UpdatePoolOutput) with field(s):
    ///   - [`pool_arn(Option<String>)`](crate::output::UpdatePoolOutput::pool_arn): <p>The ARN of the pool.</p>
    ///   - [`pool_id(Option<String>)`](crate::output::UpdatePoolOutput::pool_id): <p>The unique identifier of the pool.</p>
    ///   - [`status(Option<PoolStatus>)`](crate::output::UpdatePoolOutput::status): <p>The current status of the pool update request.</p>
    ///   - [`message_type(Option<MessageType>)`](crate::output::UpdatePoolOutput::message_type): <p>The type of message for the pool to use.</p>
    ///   - [`two_way_enabled(bool)`](crate::output::UpdatePoolOutput::two_way_enabled): <p>By default this is set to false. When set to true you can receive incoming text messages from your end recipients.</p>
    ///   - [`two_way_channel_arn(Option<String>)`](crate::output::UpdatePoolOutput::two_way_channel_arn): <p>The Amazon Resource Name (ARN) of the two way channel.</p>
    ///   - [`self_managed_opt_outs_enabled(bool)`](crate::output::UpdatePoolOutput::self_managed_opt_outs_enabled): <p>When an end recipient sends a message that begins with HELP or STOP to one of your dedicated numbers, Amazon Pinpoint automatically replies with a customizable message and adds the end recipient to the OptOutList. When set to true you're responsible for responding to HELP and STOP requests. You're also responsible for tracking and honoring opt-out requests.</p>
    ///   - [`opt_out_list_name(Option<String>)`](crate::output::UpdatePoolOutput::opt_out_list_name): <p>The name of the OptOutList associated with the pool.</p>
    ///   - [`shared_routes_enabled(bool)`](crate::output::UpdatePoolOutput::shared_routes_enabled): <p>Indicates whether shared routes are enabled for the pool.</p>
    ///   - [`deletion_protection_enabled(bool)`](crate::output::UpdatePoolOutput::deletion_protection_enabled): <p>When set to true the pool can't be deleted.</p>
    ///   - [`created_timestamp(Option<DateTime>)`](crate::output::UpdatePoolOutput::created_timestamp): <p>The time when the pool was created, in <a href="https://www.epochconverter.com/">UNIX epoch time</a> format.</p>
    /// - On failure, responds with [`SdkError<UpdatePoolError>`](crate::error::UpdatePoolError)
    pub fn update_pool(&self) -> crate::client::fluent_builders::UpdatePool {
        crate::client::fluent_builders::UpdatePool::new(self.handle.clone())
    }
}

impl Client {
    /// Creates a new client from an [SDK Config](aws_types::sdk_config::SdkConfig).
    ///
    /// # Panics
    ///
    /// - This method will panic if the `sdk_config` is missing an async sleep implementation. If you experience this panic, set
    ///     the `sleep_impl` on the Config passed into this function to fix it.
    /// - This method will panic if the `sdk_config` is missing an HTTP connector. If you experience this panic, set the
    ///     `http_connector` on the Config passed into this function to fix it.
    pub fn new(sdk_config: &aws_types::sdk_config::SdkConfig) -> Self {
        Self::from_conf(sdk_config.into())
    }

    /// Creates a new client from the service [`Config`](crate::Config).
    ///
    /// # Panics
    ///
    /// - This method will panic if the `conf` is missing an async sleep implementation. If you experience this panic, set
    ///     the `sleep_impl` on the Config passed into this function to fix it.
    /// - This method will panic if the `conf` is missing an HTTP connector. If you experience this panic, set the
    ///     `http_connector` on the Config passed into this function to fix it.
    pub fn from_conf(conf: crate::Config) -> Self {
        let retry_config = conf
            .retry_config()
            .cloned()
            .unwrap_or_else(aws_smithy_types::retry::RetryConfig::disabled);
        let timeout_config = conf
            .timeout_config()
            .cloned()
            .unwrap_or_else(aws_smithy_types::timeout::TimeoutConfig::disabled);
        let sleep_impl = conf.sleep_impl();
        if (retry_config.has_retry() || timeout_config.has_timeouts()) && sleep_impl.is_none() {
            panic!("An async sleep implementation is required for retries or timeouts to work. \
                                    Set the `sleep_impl` on the Config passed into this function to fix this panic.");
        }

        let connector = conf.http_connector().and_then(|c| {
            let timeout_config = conf
                .timeout_config()
                .cloned()
                .unwrap_or_else(aws_smithy_types::timeout::TimeoutConfig::disabled);
            let connector_settings =
                aws_smithy_client::http_connector::ConnectorSettings::from_timeout_config(
                    &timeout_config,
                );
            c.connector(&connector_settings, conf.sleep_impl())
        });

        let builder = aws_smithy_client::Builder::new();

        let builder = match connector {
            // Use provided connector
            Some(c) => builder.connector(c),
            None => {
                #[cfg(any(feature = "rustls", feature = "native-tls"))]
                {
                    // Use default connector based on enabled features
                    builder.dyn_https_connector(
                        aws_smithy_client::http_connector::ConnectorSettings::from_timeout_config(
                            &timeout_config,
                        ),
                    )
                }
                #[cfg(not(any(feature = "rustls", feature = "native-tls")))]
                {
                    panic!("No HTTP connector was available. Enable the `rustls` or `native-tls` crate feature or set a connector to fix this.");
                }
            }
        };
        let mut builder = builder
            .middleware(aws_smithy_client::erase::DynMiddleware::new(
                crate::middleware::DefaultMiddleware::new(),
            ))
            .retry_config(retry_config.into())
            .operation_timeout_config(timeout_config.into());
        builder.set_sleep_impl(sleep_impl);
        let client = builder.build();

        Self {
            handle: std::sync::Arc::new(Handle { client, conf }),
        }
    }
}

/// Utilities to ergonomically construct a request to the service.
///
/// Fluent builders are created through the [`Client`](crate::client::Client) by calling
/// one if its operation methods. After parameters are set using the builder methods,
/// the `send` method can be called to initiate the request.
pub mod fluent_builders;
