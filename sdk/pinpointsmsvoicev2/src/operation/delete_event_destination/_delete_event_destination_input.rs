// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DeleteEventDestinationInput {
    /// <p>The name of the configuration set or the configuration set's Amazon Resource Name (ARN) to remove the event destination from. The ConfigurateSetName and ConfigurationSetArn can be found using the <code>DescribeConfigurationSets</code> action.</p>
    #[doc(hidden)]
    pub configuration_set_name: std::option::Option<std::string::String>,
    /// <p>The name of the event destination to delete.</p>
    #[doc(hidden)]
    pub event_destination_name: std::option::Option<std::string::String>,
}
impl DeleteEventDestinationInput {
    /// <p>The name of the configuration set or the configuration set's Amazon Resource Name (ARN) to remove the event destination from. The ConfigurateSetName and ConfigurationSetArn can be found using the <code>DescribeConfigurationSets</code> action.</p>
    pub fn configuration_set_name(&self) -> std::option::Option<&str> {
        self.configuration_set_name.as_deref()
    }
    /// <p>The name of the event destination to delete.</p>
    pub fn event_destination_name(&self) -> std::option::Option<&str> {
        self.event_destination_name.as_deref()
    }
}
impl DeleteEventDestinationInput {
    /// Creates a new builder-style object to manufacture [`DeleteEventDestinationInput`](crate::operation::delete_event_destination::DeleteEventDestinationInput).
    pub fn builder(
    ) -> crate::operation::delete_event_destination::builders::DeleteEventDestinationInputBuilder
    {
        crate::operation::delete_event_destination::builders::DeleteEventDestinationInputBuilder::default()
    }
}

/// A builder for [`DeleteEventDestinationInput`](crate::operation::delete_event_destination::DeleteEventDestinationInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DeleteEventDestinationInputBuilder {
    pub(crate) configuration_set_name: std::option::Option<std::string::String>,
    pub(crate) event_destination_name: std::option::Option<std::string::String>,
}
impl DeleteEventDestinationInputBuilder {
    /// <p>The name of the configuration set or the configuration set's Amazon Resource Name (ARN) to remove the event destination from. The ConfigurateSetName and ConfigurationSetArn can be found using the <code>DescribeConfigurationSets</code> action.</p>
    pub fn configuration_set_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.configuration_set_name = Some(input.into());
        self
    }
    /// <p>The name of the configuration set or the configuration set's Amazon Resource Name (ARN) to remove the event destination from. The ConfigurateSetName and ConfigurationSetArn can be found using the <code>DescribeConfigurationSets</code> action.</p>
    pub fn set_configuration_set_name(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.configuration_set_name = input;
        self
    }
    /// <p>The name of the event destination to delete.</p>
    pub fn event_destination_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.event_destination_name = Some(input.into());
        self
    }
    /// <p>The name of the event destination to delete.</p>
    pub fn set_event_destination_name(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.event_destination_name = input;
        self
    }
    /// Consumes the builder and constructs a [`DeleteEventDestinationInput`](crate::operation::delete_event_destination::DeleteEventDestinationInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::delete_event_destination::DeleteEventDestinationInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::delete_event_destination::DeleteEventDestinationInput {
                configuration_set_name: self.configuration_set_name,
                event_destination_name: self.event_destination_name,
            },
        )
    }
}
