// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub use crate::operation::update_phone_number::_update_phone_number_output::UpdatePhoneNumberOutputBuilder;

pub use crate::operation::update_phone_number::_update_phone_number_input::UpdatePhoneNumberInputBuilder;

/// Fluent builder constructing a request to `UpdatePhoneNumber`.
///
/// <p>Updates the configuration of an existing origination phone number. You can update the opt-out list, enable or disable two-way messaging, change the TwoWayChannelArn, enable or disable self-managed opt-outs, and enable or disable deletion protection.</p>
/// <p>If the origination phone number is associated with a pool, an Error is returned.</p>
#[derive(std::clone::Clone, std::fmt::Debug)]
pub struct UpdatePhoneNumberFluentBuilder {
    handle: std::sync::Arc<crate::client::Handle>,
    inner: crate::operation::update_phone_number::builders::UpdatePhoneNumberInputBuilder,
}
impl UpdatePhoneNumberFluentBuilder {
    /// Creates a new `UpdatePhoneNumber`.
    pub(crate) fn new(handle: std::sync::Arc<crate::client::Handle>) -> Self {
        Self {
            handle,
            inner: Default::default(),
        }
    }

    /// Consume this builder, creating a customizable operation that can be modified before being
    /// sent. The operation's inner [http::Request] can be modified as well.
    pub async fn customize(
        self,
    ) -> std::result::Result<
        crate::client::customize::CustomizableOperation<
            crate::operation::update_phone_number::UpdatePhoneNumber,
            aws_http::retry::AwsResponseRetryClassifier,
        >,
        aws_smithy_http::result::SdkError<
            crate::operation::update_phone_number::UpdatePhoneNumberError,
        >,
    > {
        let handle = self.handle.clone();
        let operation = self
            .inner
            .build()
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?
            .make_operation(&handle.conf)
            .await
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?;
        Ok(crate::client::customize::CustomizableOperation { handle, operation })
    }

    /// Sends the request and returns the response.
    ///
    /// If an error occurs, an `SdkError` will be returned with additional details that
    /// can be matched against.
    ///
    /// By default, any retryable failures will be retried twice. Retry behavior
    /// is configurable with the [RetryConfig](aws_smithy_types::retry::RetryConfig), which can be
    /// set when configuring the client.
    pub async fn send(
        self,
    ) -> std::result::Result<
        crate::operation::update_phone_number::UpdatePhoneNumberOutput,
        aws_smithy_http::result::SdkError<
            crate::operation::update_phone_number::UpdatePhoneNumberError,
        >,
    > {
        let op = self
            .inner
            .build()
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?
            .make_operation(&self.handle.conf)
            .await
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?;
        self.handle.client.call(op).await
    }
    /// <p>The unique identifier of the phone number. Valid values for this field can be either the PhoneNumberId or PhoneNumberArn.</p>
    pub fn phone_number_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.inner = self.inner.phone_number_id(input.into());
        self
    }
    /// <p>The unique identifier of the phone number. Valid values for this field can be either the PhoneNumberId or PhoneNumberArn.</p>
    pub fn set_phone_number_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.inner = self.inner.set_phone_number_id(input);
        self
    }
    /// <p>By default this is set to false. When set to true you can receive incoming text messages from your end recipients.</p>
    pub fn two_way_enabled(mut self, input: bool) -> Self {
        self.inner = self.inner.two_way_enabled(input);
        self
    }
    /// <p>By default this is set to false. When set to true you can receive incoming text messages from your end recipients.</p>
    pub fn set_two_way_enabled(mut self, input: std::option::Option<bool>) -> Self {
        self.inner = self.inner.set_two_way_enabled(input);
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the two way channel.</p>
    pub fn two_way_channel_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.inner = self.inner.two_way_channel_arn(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the two way channel.</p>
    pub fn set_two_way_channel_arn(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.inner = self.inner.set_two_way_channel_arn(input);
        self
    }
    /// <p>By default this is set to false. When an end recipient sends a message that begins with HELP or STOP to one of your dedicated numbers, Amazon Pinpoint automatically replies with a customizable message and adds the end recipient to the OptOutList. When set to true you're responsible for responding to HELP and STOP requests. You're also responsible for tracking and honoring opt-out requests.</p>
    pub fn self_managed_opt_outs_enabled(mut self, input: bool) -> Self {
        self.inner = self.inner.self_managed_opt_outs_enabled(input);
        self
    }
    /// <p>By default this is set to false. When an end recipient sends a message that begins with HELP or STOP to one of your dedicated numbers, Amazon Pinpoint automatically replies with a customizable message and adds the end recipient to the OptOutList. When set to true you're responsible for responding to HELP and STOP requests. You're also responsible for tracking and honoring opt-out requests.</p>
    pub fn set_self_managed_opt_outs_enabled(mut self, input: std::option::Option<bool>) -> Self {
        self.inner = self.inner.set_self_managed_opt_outs_enabled(input);
        self
    }
    /// <p>The OptOutList to add the phone number to. Valid values for this field can be either the OutOutListName or OutOutListArn.</p>
    pub fn opt_out_list_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.inner = self.inner.opt_out_list_name(input.into());
        self
    }
    /// <p>The OptOutList to add the phone number to. Valid values for this field can be either the OutOutListName or OutOutListArn.</p>
    pub fn set_opt_out_list_name(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.inner = self.inner.set_opt_out_list_name(input);
        self
    }
    /// <p>By default this is set to false. When set to true the phone number can't be deleted. </p>
    pub fn deletion_protection_enabled(mut self, input: bool) -> Self {
        self.inner = self.inner.deletion_protection_enabled(input);
        self
    }
    /// <p>By default this is set to false. When set to true the phone number can't be deleted. </p>
    pub fn set_deletion_protection_enabled(mut self, input: std::option::Option<bool>) -> Self {
        self.inner = self.inner.set_deletion_protection_enabled(input);
        self
    }
}
