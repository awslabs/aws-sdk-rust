// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The current resource quotas associated with an Amazon Web Services account.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AccountLimit {
    /// <p>The name of the attribute to apply the account limit to.</p>
    #[doc(hidden)]
    pub name: std::option::Option<crate::types::AccountLimitName>,
    /// <p>The current amount that has been spent, in US dollars.</p>
    #[doc(hidden)]
    pub used: i64,
    /// <p>The Amazon Web Services set limit for that resource type, in US dollars.</p>
    #[doc(hidden)]
    pub max: i64,
}
impl AccountLimit {
    /// <p>The name of the attribute to apply the account limit to.</p>
    pub fn name(&self) -> std::option::Option<&crate::types::AccountLimitName> {
        self.name.as_ref()
    }
    /// <p>The current amount that has been spent, in US dollars.</p>
    pub fn used(&self) -> i64 {
        self.used
    }
    /// <p>The Amazon Web Services set limit for that resource type, in US dollars.</p>
    pub fn max(&self) -> i64 {
        self.max
    }
}
impl AccountLimit {
    /// Creates a new builder-style object to manufacture [`AccountLimit`](crate::types::AccountLimit).
    pub fn builder() -> crate::types::builders::AccountLimitBuilder {
        crate::types::builders::AccountLimitBuilder::default()
    }
}

/// A builder for [`AccountLimit`](crate::types::AccountLimit).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AccountLimitBuilder {
    pub(crate) name: std::option::Option<crate::types::AccountLimitName>,
    pub(crate) used: std::option::Option<i64>,
    pub(crate) max: std::option::Option<i64>,
}
impl AccountLimitBuilder {
    /// <p>The name of the attribute to apply the account limit to.</p>
    pub fn name(mut self, input: crate::types::AccountLimitName) -> Self {
        self.name = Some(input);
        self
    }
    /// <p>The name of the attribute to apply the account limit to.</p>
    pub fn set_name(mut self, input: std::option::Option<crate::types::AccountLimitName>) -> Self {
        self.name = input;
        self
    }
    /// <p>The current amount that has been spent, in US dollars.</p>
    pub fn used(mut self, input: i64) -> Self {
        self.used = Some(input);
        self
    }
    /// <p>The current amount that has been spent, in US dollars.</p>
    pub fn set_used(mut self, input: std::option::Option<i64>) -> Self {
        self.used = input;
        self
    }
    /// <p>The Amazon Web Services set limit for that resource type, in US dollars.</p>
    pub fn max(mut self, input: i64) -> Self {
        self.max = Some(input);
        self
    }
    /// <p>The Amazon Web Services set limit for that resource type, in US dollars.</p>
    pub fn set_max(mut self, input: std::option::Option<i64>) -> Self {
        self.max = input;
        self
    }
    /// Consumes the builder and constructs a [`AccountLimit`](crate::types::AccountLimit).
    pub fn build(self) -> crate::types::AccountLimit {
        crate::types::AccountLimit {
            name: self.name,
            used: self.used.unwrap_or_default(),
            max: self.max.unwrap_or_default(),
        }
    }
}
