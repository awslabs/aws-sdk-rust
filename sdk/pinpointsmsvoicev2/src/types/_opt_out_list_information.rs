// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The information for all OptOutList in an Amazon Web Services account.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct OptOutListInformation {
    /// <p>The Amazon Resource Name (ARN) of the OptOutList.</p>
    #[doc(hidden)]
    pub opt_out_list_arn: std::option::Option<std::string::String>,
    /// <p>The name of the OptOutList.</p>
    #[doc(hidden)]
    pub opt_out_list_name: std::option::Option<std::string::String>,
    /// <p>The time when the OutOutList was created, in <a href="https://www.epochconverter.com/">UNIX epoch time</a> format.</p>
    #[doc(hidden)]
    pub created_timestamp: std::option::Option<aws_smithy_types::DateTime>,
}
impl OptOutListInformation {
    /// <p>The Amazon Resource Name (ARN) of the OptOutList.</p>
    pub fn opt_out_list_arn(&self) -> std::option::Option<&str> {
        self.opt_out_list_arn.as_deref()
    }
    /// <p>The name of the OptOutList.</p>
    pub fn opt_out_list_name(&self) -> std::option::Option<&str> {
        self.opt_out_list_name.as_deref()
    }
    /// <p>The time when the OutOutList was created, in <a href="https://www.epochconverter.com/">UNIX epoch time</a> format.</p>
    pub fn created_timestamp(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.created_timestamp.as_ref()
    }
}
impl OptOutListInformation {
    /// Creates a new builder-style object to manufacture [`OptOutListInformation`](crate::types::OptOutListInformation).
    pub fn builder() -> crate::types::builders::OptOutListInformationBuilder {
        crate::types::builders::OptOutListInformationBuilder::default()
    }
}

/// A builder for [`OptOutListInformation`](crate::types::OptOutListInformation).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct OptOutListInformationBuilder {
    pub(crate) opt_out_list_arn: std::option::Option<std::string::String>,
    pub(crate) opt_out_list_name: std::option::Option<std::string::String>,
    pub(crate) created_timestamp: std::option::Option<aws_smithy_types::DateTime>,
}
impl OptOutListInformationBuilder {
    /// <p>The Amazon Resource Name (ARN) of the OptOutList.</p>
    pub fn opt_out_list_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.opt_out_list_arn = Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the OptOutList.</p>
    pub fn set_opt_out_list_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.opt_out_list_arn = input;
        self
    }
    /// <p>The name of the OptOutList.</p>
    pub fn opt_out_list_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.opt_out_list_name = Some(input.into());
        self
    }
    /// <p>The name of the OptOutList.</p>
    pub fn set_opt_out_list_name(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.opt_out_list_name = input;
        self
    }
    /// <p>The time when the OutOutList was created, in <a href="https://www.epochconverter.com/">UNIX epoch time</a> format.</p>
    pub fn created_timestamp(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.created_timestamp = Some(input);
        self
    }
    /// <p>The time when the OutOutList was created, in <a href="https://www.epochconverter.com/">UNIX epoch time</a> format.</p>
    pub fn set_created_timestamp(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.created_timestamp = input;
        self
    }
    /// Consumes the builder and constructs a [`OptOutListInformation`](crate::types::OptOutListInformation).
    pub fn build(self) -> crate::types::OptOutListInformation {
        crate::types::OptOutListInformation {
            opt_out_list_arn: self.opt_out_list_arn,
            opt_out_list_name: self.opt_out_list_name,
            created_timestamp: self.created_timestamp,
        }
    }
}
