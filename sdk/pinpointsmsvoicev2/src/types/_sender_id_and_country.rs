// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p> The alphanumeric sender ID in a specific country that you want to describe. For more information on sender IDs see <a href="https://docs.aws.amazon.com/pinpoint/latest/userguide/channels-sms-awssupport-sender-id.html">Requesting sender IDs for SMS messaging with Amazon Pinpoint </a> in the <i>Amazon Pinpoint User Guide</i>.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct SenderIdAndCountry {
    /// <p>The unique identifier of the sender.</p>
    pub sender_id: ::std::string::String,
    /// <p>The two-character code, in ISO 3166-1 alpha-2 format, for the country or region. </p>
    pub iso_country_code: ::std::string::String,
}
impl SenderIdAndCountry {
    /// <p>The unique identifier of the sender.</p>
    pub fn sender_id(&self) -> &str {
        use std::ops::Deref;
        self.sender_id.deref()
    }
    /// <p>The two-character code, in ISO 3166-1 alpha-2 format, for the country or region. </p>
    pub fn iso_country_code(&self) -> &str {
        use std::ops::Deref;
        self.iso_country_code.deref()
    }
}
impl SenderIdAndCountry {
    /// Creates a new builder-style object to manufacture [`SenderIdAndCountry`](crate::types::SenderIdAndCountry).
    pub fn builder() -> crate::types::builders::SenderIdAndCountryBuilder {
        crate::types::builders::SenderIdAndCountryBuilder::default()
    }
}

/// A builder for [`SenderIdAndCountry`](crate::types::SenderIdAndCountry).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct SenderIdAndCountryBuilder {
    pub(crate) sender_id: ::std::option::Option<::std::string::String>,
    pub(crate) iso_country_code: ::std::option::Option<::std::string::String>,
}
impl SenderIdAndCountryBuilder {
    /// <p>The unique identifier of the sender.</p>
    /// This field is required.
    pub fn sender_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.sender_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The unique identifier of the sender.</p>
    pub fn set_sender_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.sender_id = input;
        self
    }
    /// <p>The unique identifier of the sender.</p>
    pub fn get_sender_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.sender_id
    }
    /// <p>The two-character code, in ISO 3166-1 alpha-2 format, for the country or region. </p>
    /// This field is required.
    pub fn iso_country_code(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.iso_country_code = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The two-character code, in ISO 3166-1 alpha-2 format, for the country or region. </p>
    pub fn set_iso_country_code(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.iso_country_code = input;
        self
    }
    /// <p>The two-character code, in ISO 3166-1 alpha-2 format, for the country or region. </p>
    pub fn get_iso_country_code(&self) -> &::std::option::Option<::std::string::String> {
        &self.iso_country_code
    }
    /// Consumes the builder and constructs a [`SenderIdAndCountry`](crate::types::SenderIdAndCountry).
    /// This method will fail if any of the following fields are not set:
    /// - [`sender_id`](crate::types::builders::SenderIdAndCountryBuilder::sender_id)
    /// - [`iso_country_code`](crate::types::builders::SenderIdAndCountryBuilder::iso_country_code)
    pub fn build(self) -> ::std::result::Result<crate::types::SenderIdAndCountry, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::SenderIdAndCountry {
            sender_id: self.sender_id.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "sender_id",
                    "sender_id was not specified but it is required when building SenderIdAndCountry",
                )
            })?,
            iso_country_code: self.iso_country_code.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "iso_country_code",
                    "iso_country_code was not specified but it is required when building SenderIdAndCountry",
                )
            })?,
        })
    }
}
