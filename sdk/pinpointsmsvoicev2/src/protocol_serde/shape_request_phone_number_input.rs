// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_request_phone_number_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::request_phone_number::RequestPhoneNumberInput,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.iso_country_code {
        object.key("IsoCountryCode").string(var_1.as_str());
    }
    if let Some(var_2) = &input.message_type {
        object.key("MessageType").string(var_2.as_str());
    }
    if let Some(var_3) = &input.number_capabilities {
        let mut array_4 = object.key("NumberCapabilities").start_array();
        for item_5 in var_3 {
            {
                array_4.value().string(item_5.as_str());
            }
        }
        array_4.finish();
    }
    if let Some(var_6) = &input.number_type {
        object.key("NumberType").string(var_6.as_str());
    }
    if let Some(var_7) = &input.opt_out_list_name {
        object.key("OptOutListName").string(var_7.as_str());
    }
    if let Some(var_8) = &input.pool_id {
        object.key("PoolId").string(var_8.as_str());
    }
    if let Some(var_9) = &input.registration_id {
        object.key("RegistrationId").string(var_9.as_str());
    }
    if let Some(var_10) = &input.deletion_protection_enabled {
        object.key("DeletionProtectionEnabled").boolean(*var_10);
    }
    if let Some(var_11) = &input.tags {
        let mut array_12 = object.key("Tags").start_array();
        for item_13 in var_11 {
            {
                #[allow(unused_mut)]
                let mut object_14 = array_12.value().start_object();
                crate::protocol_serde::shape_tag::ser_tag(&mut object_14, item_13)?;
                object_14.finish();
            }
        }
        array_12.finish();
    }
    if let Some(var_15) = &input.client_token {
        object.key("ClientToken").string(var_15.as_str());
    }
    Ok(())
}
