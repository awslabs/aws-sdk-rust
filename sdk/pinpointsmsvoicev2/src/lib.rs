#![allow(deprecated)]
#![allow(clippy::module_inception)]
#![allow(clippy::upper_case_acronyms)]
#![allow(clippy::large_enum_variant)]
#![allow(clippy::wrong_self_convention)]
#![allow(clippy::should_implement_trait)]
#![allow(clippy::blacklisted_name)]
#![allow(clippy::vec_init_then_push)]
#![allow(clippy::type_complexity)]
#![allow(clippy::needless_return)]
#![allow(clippy::derive_partial_eq_without_eq)]
#![allow(rustdoc::bare_urls)]
#![warn(missing_docs)]
//! <p>Welcome to the <i>Amazon Pinpoint SMS and Voice, version 2 API Reference</i>.
//! This guide provides information about Amazon Pinpoint SMS and Voice, version 2 API
//! resources, including supported HTTP methods, parameters, and schemas.</p>
//! <p>Amazon Pinpoint is an Amazon Web Services service that you can use to engage with
//! your recipients across multiple messaging channels. The Amazon Pinpoint SMS and
//! Voice, version 2 API provides programmatic access to options that are unique to the SMS
//! and voice channels and supplements the resources provided by the Amazon Pinpoint
//! API.</p>
//! <p>If you're new to Amazon Pinpoint, it's also helpful to review the <a href="https://docs.aws.amazon.com/pinpoint/latest/developerguide/welcome.html">
//! Amazon Pinpoint Developer Guide</a>. The <i>Amazon Pinpoint
//! Developer Guide</i> provides tutorials, code samples, and procedures that
//! demonstrate how to use Amazon Pinpoint features programmatically and how to integrate
//! Amazon Pinpoint functionality into mobile apps and other types of applications.
//! The guide also provides key information, such as Amazon Pinpoint integration with
//! other Amazon Web Services services, and the quotas that apply to use of the
//! service.</p>
//!
//! # Crate Organization
//!
//! The entry point for most customers will be [`Client`]. [`Client`] exposes one method for each API offered
//! by the service.
//!
//! Some APIs require complex or nested arguments. These exist in [`model`](crate::model).
//!
//! Lastly, errors that can be returned by the service are contained within [`error`]. [`Error`] defines a meta
//! error encompassing all possible errors that can be returned by the service.
//!
//! The other modules within this crate are not required for normal usage.

// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub use error_meta::Error;

#[doc(inline)]
pub use config::Config;

pub use aws_credential_types::Credentials;

pub use aws_types::region::Region;

pub(crate) static API_METADATA: aws_http::user_agent::ApiMetadata =
    aws_http::user_agent::ApiMetadata::new("pinpointsmsvoicev2", crate::PKG_VERSION);

pub use aws_types::app_name::AppName;

pub use aws_smithy_http::endpoint::Endpoint;

/// Crate version number.
pub static PKG_VERSION: &str = env!("CARGO_PKG_VERSION");

/// Client and fluent builders for calling Amazon Pinpoint SMS Voice V2.
pub mod client;

/// Configuration for Amazon Pinpoint SMS Voice V2.
pub mod config;

/// Endpoint resolution functionality.
pub mod endpoint;

/// All error types that operations can return. Documentation on these types is copied from the model.
pub mod error;

mod error_meta;

/// Input structures for operations. Documentation on these types is copied from the model.
pub mod input;

/// Data structures used by operation inputs/outputs.
pub mod model;

/// All operations that this crate can perform.
pub mod operation;

/// Output structures for operations. Documentation on these types is copied from the model.
pub mod output;

/// Data primitives referenced by other data types.
pub mod types;

mod idempotency_token;

///
pub mod middleware;

///
mod no_credentials;

/// Paginators for the service
pub mod paginator;

mod lens;

pub(crate) mod protocol_serde;

mod endpoint_lib;

mod json_errors;

#[doc(inline)]
pub use client::Client;
