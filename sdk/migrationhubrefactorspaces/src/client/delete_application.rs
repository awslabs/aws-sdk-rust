// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeleteApplication`](crate::client::fluent_builders::DeleteApplication) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`environment_identifier(impl Into<String>)`](crate::client::fluent_builders::DeleteApplication::environment_identifier) / [`set_environment_identifier(Option<String>)`](crate::client::fluent_builders::DeleteApplication::set_environment_identifier): <p>The ID of the environment. </p>
    ///   - [`application_identifier(impl Into<String>)`](crate::client::fluent_builders::DeleteApplication::application_identifier) / [`set_application_identifier(Option<String>)`](crate::client::fluent_builders::DeleteApplication::set_application_identifier): <p>The ID of the application.</p>
    /// - On success, responds with [`DeleteApplicationOutput`](crate::output::DeleteApplicationOutput) with field(s):
    ///   - [`name(Option<String>)`](crate::output::DeleteApplicationOutput::name): <p>The name of the application.</p>
    ///   - [`arn(Option<String>)`](crate::output::DeleteApplicationOutput::arn): <p>The Amazon Resource Name (ARN) of the application.</p>
    ///   - [`application_id(Option<String>)`](crate::output::DeleteApplicationOutput::application_id): <p>The ID of the application.</p>
    ///   - [`environment_id(Option<String>)`](crate::output::DeleteApplicationOutput::environment_id): <p>The unique identifier of the applicationâ€™s environment.</p>
    ///   - [`state(Option<ApplicationState>)`](crate::output::DeleteApplicationOutput::state): <p>The current state of the application. </p>
    ///   - [`last_updated_time(Option<DateTime>)`](crate::output::DeleteApplicationOutput::last_updated_time): <p>A timestamp that indicates when the environment was last updated. </p>
    /// - On failure, responds with [`SdkError<DeleteApplicationError>`](crate::error::DeleteApplicationError)
    pub fn delete_application(&self) -> crate::client::fluent_builders::DeleteApplication {
        crate::client::fluent_builders::DeleteApplication::new(self.handle.clone())
    }
}
