// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeleteEnvironment`](crate::operation::delete_environment::builders::DeleteEnvironmentFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`environment_identifier(impl Into<String>)`](crate::operation::delete_environment::builders::DeleteEnvironmentFluentBuilder::environment_identifier) / [`set_environment_identifier(Option<String>)`](crate::operation::delete_environment::builders::DeleteEnvironmentFluentBuilder::set_environment_identifier): <p>The ID of the environment. </p>
    /// - On success, responds with [`DeleteEnvironmentOutput`](crate::operation::delete_environment::DeleteEnvironmentOutput) with field(s):
    ///   - [`name(Option<String>)`](crate::operation::delete_environment::DeleteEnvironmentOutput::name): <p>The name of the environment.</p>
    ///   - [`arn(Option<String>)`](crate::operation::delete_environment::DeleteEnvironmentOutput::arn): <p>The Amazon Resource Name (ARN) of the environment.</p>
    ///   - [`environment_id(Option<String>)`](crate::operation::delete_environment::DeleteEnvironmentOutput::environment_id): <p>The unique identifier of the environment.</p>
    ///   - [`state(Option<EnvironmentState>)`](crate::operation::delete_environment::DeleteEnvironmentOutput::state): <p>The current state of the environment. </p>
    ///   - [`last_updated_time(Option<DateTime>)`](crate::operation::delete_environment::DeleteEnvironmentOutput::last_updated_time): <p>A timestamp that indicates when the environment was last updated. </p>
    /// - On failure, responds with [`SdkError<DeleteEnvironmentError>`](crate::operation::delete_environment::DeleteEnvironmentError)
    pub fn delete_environment(
        &self,
    ) -> crate::operation::delete_environment::builders::DeleteEnvironmentFluentBuilder {
        crate::operation::delete_environment::builders::DeleteEnvironmentFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
