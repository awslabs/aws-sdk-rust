// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetRoute`](crate::operation::get_route::builders::GetRouteFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`environment_identifier(impl Into<String>)`](crate::operation::get_route::builders::GetRouteFluentBuilder::environment_identifier) / [`set_environment_identifier(Option<String>)`](crate::operation::get_route::builders::GetRouteFluentBuilder::set_environment_identifier): <p>The ID of the environment.</p>
    ///   - [`application_identifier(impl Into<String>)`](crate::operation::get_route::builders::GetRouteFluentBuilder::application_identifier) / [`set_application_identifier(Option<String>)`](crate::operation::get_route::builders::GetRouteFluentBuilder::set_application_identifier): <p>The ID of the application. </p>
    ///   - [`route_identifier(impl Into<String>)`](crate::operation::get_route::builders::GetRouteFluentBuilder::route_identifier) / [`set_route_identifier(Option<String>)`](crate::operation::get_route::builders::GetRouteFluentBuilder::set_route_identifier): <p>The ID of the route.</p>
    /// - On success, responds with [`GetRouteOutput`](crate::operation::get_route::GetRouteOutput) with field(s):
    ///   - [`route_id(Option<String>)`](crate::operation::get_route::GetRouteOutput::route_id): <p>The unique identifier of the route.</p>  <p> <b>DEFAULT</b>: All traffic that does not match another route is forwarded to the default route. Applications must have a default route before any other routes can be created.</p>  <p> <b>URI_PATH</b>: A route that is based on a URI path.</p>
    ///   - [`arn(Option<String>)`](crate::operation::get_route::GetRouteOutput::arn): <p>The Amazon Resource Name (ARN) of the route.</p>
    ///   - [`owner_account_id(Option<String>)`](crate::operation::get_route::GetRouteOutput::owner_account_id): <p>The Amazon Web Services account ID of the route owner.</p>
    ///   - [`created_by_account_id(Option<String>)`](crate::operation::get_route::GetRouteOutput::created_by_account_id): <p>The Amazon Web Services account ID of the route creator.</p>
    ///   - [`route_type(Option<RouteType>)`](crate::operation::get_route::GetRouteOutput::route_type): <p>The type of route.</p>
    ///   - [`service_id(Option<String>)`](crate::operation::get_route::GetRouteOutput::service_id): <p>The unique identifier of the service.</p>
    ///   - [`application_id(Option<String>)`](crate::operation::get_route::GetRouteOutput::application_id): <p>The ID of the application that the route belongs to. </p>
    ///   - [`environment_id(Option<String>)`](crate::operation::get_route::GetRouteOutput::environment_id): <p>Unique identifier of the environment.</p>
    ///   - [`source_path(Option<String>)`](crate::operation::get_route::GetRouteOutput::source_path): <p>The path to use to match traffic. Paths must start with <code>/</code> and are relative to the base of the application. </p>
    ///   - [`methods(Option<Vec<HttpMethod>>)`](crate::operation::get_route::GetRouteOutput::methods): <p>A list of HTTP methods to match. An empty list matches all values. If a method is present, only HTTP requests using that method are forwarded to this routeâ€™s service. </p>
    ///   - [`include_child_paths(Option<bool>)`](crate::operation::get_route::GetRouteOutput::include_child_paths): <p>Indicates whether to match all subpaths of the given source path. If this value is <code>false</code>, requests must match the source path exactly before they are forwarded to this route's service. </p>
    ///   - [`path_resource_to_id(Option<HashMap<String, String>>)`](crate::operation::get_route::GetRouteOutput::path_resource_to_id): <p>A mapping of Amazon API Gateway path resources to resource IDs. </p>
    ///   - [`state(Option<RouteState>)`](crate::operation::get_route::GetRouteOutput::state): <p>The current state of the route. </p>
    ///   - [`tags(Option<HashMap<String, String>>)`](crate::operation::get_route::GetRouteOutput::tags): <p>The tags assigned to the route. A tag is a label that you assign to an Amazon Web Services resource. Each tag consists of a key-value pair. </p>
    ///   - [`error(Option<ErrorResponse>)`](crate::operation::get_route::GetRouteOutput::error): <p>Any error associated with the route resource. </p>
    ///   - [`last_updated_time(Option<DateTime>)`](crate::operation::get_route::GetRouteOutput::last_updated_time): <p>A timestamp that indicates when the route was last updated. </p>
    ///   - [`created_time(Option<DateTime>)`](crate::operation::get_route::GetRouteOutput::created_time): <p>The timestamp of when the route is created. </p>
    /// - On failure, responds with [`SdkError<GetRouteError>`](crate::operation::get_route::GetRouteError)
    pub fn get_route(&self) -> crate::operation::get_route::builders::GetRouteFluentBuilder {
        crate::operation::get_route::builders::GetRouteFluentBuilder::new(self.handle.clone())
    }
}
