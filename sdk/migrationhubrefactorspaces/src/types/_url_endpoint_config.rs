// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The configuration for the URL endpoint type. </p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct UrlEndpointConfig {
    /// <p>The HTTP URL endpoint. </p>
    #[doc(hidden)]
    pub url: std::option::Option<std::string::String>,
    /// <p>The health check URL of the URL endpoint type. </p>
    #[doc(hidden)]
    pub health_url: std::option::Option<std::string::String>,
}
impl UrlEndpointConfig {
    /// <p>The HTTP URL endpoint. </p>
    pub fn url(&self) -> std::option::Option<&str> {
        self.url.as_deref()
    }
    /// <p>The health check URL of the URL endpoint type. </p>
    pub fn health_url(&self) -> std::option::Option<&str> {
        self.health_url.as_deref()
    }
}
impl UrlEndpointConfig {
    /// Creates a new builder-style object to manufacture [`UrlEndpointConfig`](crate::types::UrlEndpointConfig).
    pub fn builder() -> crate::types::builders::UrlEndpointConfigBuilder {
        crate::types::builders::UrlEndpointConfigBuilder::default()
    }
}

/// A builder for [`UrlEndpointConfig`](crate::types::UrlEndpointConfig).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct UrlEndpointConfigBuilder {
    pub(crate) url: std::option::Option<std::string::String>,
    pub(crate) health_url: std::option::Option<std::string::String>,
}
impl UrlEndpointConfigBuilder {
    /// <p>The HTTP URL endpoint. </p>
    pub fn url(mut self, input: impl Into<std::string::String>) -> Self {
        self.url = Some(input.into());
        self
    }
    /// <p>The HTTP URL endpoint. </p>
    pub fn set_url(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.url = input;
        self
    }
    /// <p>The health check URL of the URL endpoint type. </p>
    pub fn health_url(mut self, input: impl Into<std::string::String>) -> Self {
        self.health_url = Some(input.into());
        self
    }
    /// <p>The health check URL of the URL endpoint type. </p>
    pub fn set_health_url(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.health_url = input;
        self
    }
    /// Consumes the builder and constructs a [`UrlEndpointConfig`](crate::types::UrlEndpointConfig).
    pub fn build(self) -> crate::types::UrlEndpointConfig {
        crate::types::UrlEndpointConfig {
            url: self.url,
            health_url: self.health_url,
        }
    }
}
