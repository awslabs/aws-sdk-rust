// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) mod shape_create_application;

pub fn parse_http_error_metadata(
    response: &http::Response<bytes::Bytes>,
) -> Result<
    aws_smithy_types::error::metadata::Builder,
    aws_smithy_json::deserialize::error::DeserializeError,
> {
    crate::json_errors::parse_error_metadata(response.body(), response.headers())
}

pub(crate) mod shape_create_environment;

pub(crate) mod shape_create_route;

pub(crate) mod shape_create_service;

pub(crate) mod shape_delete_application;

pub(crate) mod shape_delete_environment;

pub(crate) mod shape_delete_resource_policy;

pub(crate) mod shape_delete_route;

pub(crate) mod shape_delete_service;

pub(crate) mod shape_get_application;

pub(crate) mod shape_get_environment;

pub(crate) mod shape_get_resource_policy;

pub(crate) mod shape_get_route;

pub(crate) mod shape_get_service;

pub(crate) mod shape_list_applications;

pub(crate) mod shape_list_environment_vpcs;

pub(crate) mod shape_list_environments;

pub(crate) mod shape_list_routes;

pub(crate) mod shape_list_services;

pub(crate) mod shape_list_tags_for_resource;

pub(crate) mod shape_put_resource_policy;

pub(crate) mod shape_tag_resource;

pub(crate) mod shape_untag_resource;

pub(crate) mod shape_update_route;

pub(crate) fn or_empty_doc(data: &[u8]) -> &[u8] {
    if data.is_empty() {
        b"{}"
    } else {
        data
    }
}

pub(crate) mod shape_access_denied_exception;

pub(crate) mod shape_conflict_exception;

pub(crate) mod shape_create_application_input;

pub(crate) mod shape_create_environment_input;

pub(crate) mod shape_create_route_input;

pub(crate) mod shape_create_service_input;

pub(crate) mod shape_internal_server_exception;

pub(crate) mod shape_invalid_resource_policy_exception;

pub(crate) mod shape_put_resource_policy_input;

pub(crate) mod shape_resource_not_found_exception;

pub(crate) mod shape_service_quota_exceeded_exception;

pub(crate) mod shape_tag_resource_input;

pub(crate) mod shape_throttling_exception;

pub(crate) mod shape_update_route_input;

pub(crate) mod shape_validation_exception;

pub(crate) mod shape_api_gateway_proxy_config;

pub(crate) mod shape_api_gateway_proxy_input;

pub(crate) mod shape_application_summaries;

pub(crate) mod shape_default_route_input;

pub(crate) mod shape_environment_summaries;

pub(crate) mod shape_environment_vpcs;

pub(crate) mod shape_error_response;

pub(crate) mod shape_http_methods;

pub(crate) mod shape_lambda_endpoint_config;

pub(crate) mod shape_lambda_endpoint_input;

pub(crate) mod shape_path_resource_to_id;

pub(crate) mod shape_route_summaries;

pub(crate) mod shape_service_summaries;

pub(crate) mod shape_tag_map;

pub(crate) mod shape_uri_path_route_input;

pub(crate) mod shape_url_endpoint_config;

pub(crate) mod shape_url_endpoint_input;

pub(crate) mod shape_additional_details;

pub(crate) mod shape_application_summary;

pub(crate) mod shape_environment_summary;

pub(crate) mod shape_environment_vpc;

pub(crate) mod shape_route_summary;

pub(crate) mod shape_service_summary;

pub(crate) mod shape_api_gateway_proxy_summary;

pub(crate) mod shape_cidr_blocks;

pub(crate) mod shape_lambda_endpoint_summary;

pub(crate) mod shape_url_endpoint_summary;
