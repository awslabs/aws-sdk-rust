// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about requests that failed with a 4xx Client Error status code.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ErrorStatistics {
    /// <p>The number of requests that failed with a 419 throttling status code.</p>
    #[doc(hidden)]
    pub throttle_count: std::option::Option<i64>,
    /// <p>The number of requests that failed with untracked 4xx Client Error status codes.</p>
    #[doc(hidden)]
    pub other_count: std::option::Option<i64>,
    /// <p>The total number of requests that failed with a 4xx Client Error status code.</p>
    #[doc(hidden)]
    pub total_count: std::option::Option<i64>,
}
impl ErrorStatistics {
    /// <p>The number of requests that failed with a 419 throttling status code.</p>
    pub fn throttle_count(&self) -> std::option::Option<i64> {
        self.throttle_count
    }
    /// <p>The number of requests that failed with untracked 4xx Client Error status codes.</p>
    pub fn other_count(&self) -> std::option::Option<i64> {
        self.other_count
    }
    /// <p>The total number of requests that failed with a 4xx Client Error status code.</p>
    pub fn total_count(&self) -> std::option::Option<i64> {
        self.total_count
    }
}
impl ErrorStatistics {
    /// Creates a new builder-style object to manufacture [`ErrorStatistics`](crate::types::ErrorStatistics).
    pub fn builder() -> crate::types::builders::ErrorStatisticsBuilder {
        crate::types::builders::ErrorStatisticsBuilder::default()
    }
}

/// A builder for [`ErrorStatistics`](crate::types::ErrorStatistics).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ErrorStatisticsBuilder {
    pub(crate) throttle_count: std::option::Option<i64>,
    pub(crate) other_count: std::option::Option<i64>,
    pub(crate) total_count: std::option::Option<i64>,
}
impl ErrorStatisticsBuilder {
    /// <p>The number of requests that failed with a 419 throttling status code.</p>
    pub fn throttle_count(mut self, input: i64) -> Self {
        self.throttle_count = Some(input);
        self
    }
    /// <p>The number of requests that failed with a 419 throttling status code.</p>
    pub fn set_throttle_count(mut self, input: std::option::Option<i64>) -> Self {
        self.throttle_count = input;
        self
    }
    /// <p>The number of requests that failed with untracked 4xx Client Error status codes.</p>
    pub fn other_count(mut self, input: i64) -> Self {
        self.other_count = Some(input);
        self
    }
    /// <p>The number of requests that failed with untracked 4xx Client Error status codes.</p>
    pub fn set_other_count(mut self, input: std::option::Option<i64>) -> Self {
        self.other_count = input;
        self
    }
    /// <p>The total number of requests that failed with a 4xx Client Error status code.</p>
    pub fn total_count(mut self, input: i64) -> Self {
        self.total_count = Some(input);
        self
    }
    /// <p>The total number of requests that failed with a 4xx Client Error status code.</p>
    pub fn set_total_count(mut self, input: std::option::Option<i64>) -> Self {
        self.total_count = input;
        self
    }
    /// Consumes the builder and constructs a [`ErrorStatistics`](crate::types::ErrorStatistics).
    pub fn build(self) -> crate::types::ErrorStatistics {
        crate::types::ErrorStatistics {
            throttle_count: self.throttle_count,
            other_count: self.other_count,
            total_count: self.total_count,
        }
    }
}
