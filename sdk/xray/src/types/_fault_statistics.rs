// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about requests that failed with a 5xx Server Error status code.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct FaultStatistics {
    /// <p>The number of requests that failed with untracked 5xx Server Error status codes.</p>
    #[doc(hidden)]
    pub other_count: std::option::Option<i64>,
    /// <p>The total number of requests that failed with a 5xx Server Error status code.</p>
    #[doc(hidden)]
    pub total_count: std::option::Option<i64>,
}
impl FaultStatistics {
    /// <p>The number of requests that failed with untracked 5xx Server Error status codes.</p>
    pub fn other_count(&self) -> std::option::Option<i64> {
        self.other_count
    }
    /// <p>The total number of requests that failed with a 5xx Server Error status code.</p>
    pub fn total_count(&self) -> std::option::Option<i64> {
        self.total_count
    }
}
impl FaultStatistics {
    /// Creates a new builder-style object to manufacture [`FaultStatistics`](crate::types::FaultStatistics).
    pub fn builder() -> crate::types::builders::FaultStatisticsBuilder {
        crate::types::builders::FaultStatisticsBuilder::default()
    }
}

/// A builder for [`FaultStatistics`](crate::types::FaultStatistics).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct FaultStatisticsBuilder {
    pub(crate) other_count: std::option::Option<i64>,
    pub(crate) total_count: std::option::Option<i64>,
}
impl FaultStatisticsBuilder {
    /// <p>The number of requests that failed with untracked 5xx Server Error status codes.</p>
    pub fn other_count(mut self, input: i64) -> Self {
        self.other_count = Some(input);
        self
    }
    /// <p>The number of requests that failed with untracked 5xx Server Error status codes.</p>
    pub fn set_other_count(mut self, input: std::option::Option<i64>) -> Self {
        self.other_count = input;
        self
    }
    /// <p>The total number of requests that failed with a 5xx Server Error status code.</p>
    pub fn total_count(mut self, input: i64) -> Self {
        self.total_count = Some(input);
        self
    }
    /// <p>The total number of requests that failed with a 5xx Server Error status code.</p>
    pub fn set_total_count(mut self, input: std::option::Option<i64>) -> Self {
        self.total_count = input;
        self
    }
    /// Consumes the builder and constructs a [`FaultStatistics`](crate::types::FaultStatistics).
    pub fn build(self) -> crate::types::FaultStatistics {
        crate::types::FaultStatistics {
            other_count: self.other_count,
            total_count: self.total_count,
        }
    }
}
