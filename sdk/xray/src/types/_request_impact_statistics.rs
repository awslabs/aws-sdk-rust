// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Statistics that describe how the incident has impacted a service.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct RequestImpactStatistics {
    /// <p>The number of requests that have resulted in a fault,</p>
    #[doc(hidden)]
    pub fault_count: std::option::Option<i64>,
    /// <p>The number of successful requests.</p>
    #[doc(hidden)]
    pub ok_count: std::option::Option<i64>,
    /// <p>The total number of requests to the service.</p>
    #[doc(hidden)]
    pub total_count: std::option::Option<i64>,
}
impl RequestImpactStatistics {
    /// <p>The number of requests that have resulted in a fault,</p>
    pub fn fault_count(&self) -> std::option::Option<i64> {
        self.fault_count
    }
    /// <p>The number of successful requests.</p>
    pub fn ok_count(&self) -> std::option::Option<i64> {
        self.ok_count
    }
    /// <p>The total number of requests to the service.</p>
    pub fn total_count(&self) -> std::option::Option<i64> {
        self.total_count
    }
}
impl RequestImpactStatistics {
    /// Creates a new builder-style object to manufacture [`RequestImpactStatistics`](crate::types::RequestImpactStatistics).
    pub fn builder() -> crate::types::builders::RequestImpactStatisticsBuilder {
        crate::types::builders::RequestImpactStatisticsBuilder::default()
    }
}

/// A builder for [`RequestImpactStatistics`](crate::types::RequestImpactStatistics).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct RequestImpactStatisticsBuilder {
    pub(crate) fault_count: std::option::Option<i64>,
    pub(crate) ok_count: std::option::Option<i64>,
    pub(crate) total_count: std::option::Option<i64>,
}
impl RequestImpactStatisticsBuilder {
    /// <p>The number of requests that have resulted in a fault,</p>
    pub fn fault_count(mut self, input: i64) -> Self {
        self.fault_count = Some(input);
        self
    }
    /// <p>The number of requests that have resulted in a fault,</p>
    pub fn set_fault_count(mut self, input: std::option::Option<i64>) -> Self {
        self.fault_count = input;
        self
    }
    /// <p>The number of successful requests.</p>
    pub fn ok_count(mut self, input: i64) -> Self {
        self.ok_count = Some(input);
        self
    }
    /// <p>The number of successful requests.</p>
    pub fn set_ok_count(mut self, input: std::option::Option<i64>) -> Self {
        self.ok_count = input;
        self
    }
    /// <p>The total number of requests to the service.</p>
    pub fn total_count(mut self, input: i64) -> Self {
        self.total_count = Some(input);
        self
    }
    /// <p>The total number of requests to the service.</p>
    pub fn set_total_count(mut self, input: std::option::Option<i64>) -> Self {
        self.total_count = input;
        self
    }
    /// Consumes the builder and constructs a [`RequestImpactStatistics`](crate::types::RequestImpactStatistics).
    pub fn build(self) -> crate::types::RequestImpactStatistics {
        crate::types::RequestImpactStatistics {
            fault_count: self.fault_count,
            ok_count: self.ok_count,
            total_count: self.total_count,
        }
    }
}
