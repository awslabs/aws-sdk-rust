// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Response statistics for an edge.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct EdgeStatistics {
    /// <p>The number of requests that completed with a 2xx Success status code.</p>
    #[doc(hidden)]
    pub ok_count: std::option::Option<i64>,
    /// <p>Information about requests that failed with a 4xx Client Error status code.</p>
    #[doc(hidden)]
    pub error_statistics: std::option::Option<crate::types::ErrorStatistics>,
    /// <p>Information about requests that failed with a 5xx Server Error status code.</p>
    #[doc(hidden)]
    pub fault_statistics: std::option::Option<crate::types::FaultStatistics>,
    /// <p>The total number of completed requests.</p>
    #[doc(hidden)]
    pub total_count: std::option::Option<i64>,
    /// <p>The aggregate response time of completed requests.</p>
    #[doc(hidden)]
    pub total_response_time: std::option::Option<f64>,
}
impl EdgeStatistics {
    /// <p>The number of requests that completed with a 2xx Success status code.</p>
    pub fn ok_count(&self) -> std::option::Option<i64> {
        self.ok_count
    }
    /// <p>Information about requests that failed with a 4xx Client Error status code.</p>
    pub fn error_statistics(&self) -> std::option::Option<&crate::types::ErrorStatistics> {
        self.error_statistics.as_ref()
    }
    /// <p>Information about requests that failed with a 5xx Server Error status code.</p>
    pub fn fault_statistics(&self) -> std::option::Option<&crate::types::FaultStatistics> {
        self.fault_statistics.as_ref()
    }
    /// <p>The total number of completed requests.</p>
    pub fn total_count(&self) -> std::option::Option<i64> {
        self.total_count
    }
    /// <p>The aggregate response time of completed requests.</p>
    pub fn total_response_time(&self) -> std::option::Option<f64> {
        self.total_response_time
    }
}
impl EdgeStatistics {
    /// Creates a new builder-style object to manufacture [`EdgeStatistics`](crate::types::EdgeStatistics).
    pub fn builder() -> crate::types::builders::EdgeStatisticsBuilder {
        crate::types::builders::EdgeStatisticsBuilder::default()
    }
}

/// A builder for [`EdgeStatistics`](crate::types::EdgeStatistics).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct EdgeStatisticsBuilder {
    pub(crate) ok_count: std::option::Option<i64>,
    pub(crate) error_statistics: std::option::Option<crate::types::ErrorStatistics>,
    pub(crate) fault_statistics: std::option::Option<crate::types::FaultStatistics>,
    pub(crate) total_count: std::option::Option<i64>,
    pub(crate) total_response_time: std::option::Option<f64>,
}
impl EdgeStatisticsBuilder {
    /// <p>The number of requests that completed with a 2xx Success status code.</p>
    pub fn ok_count(mut self, input: i64) -> Self {
        self.ok_count = Some(input);
        self
    }
    /// <p>The number of requests that completed with a 2xx Success status code.</p>
    pub fn set_ok_count(mut self, input: std::option::Option<i64>) -> Self {
        self.ok_count = input;
        self
    }
    /// <p>Information about requests that failed with a 4xx Client Error status code.</p>
    pub fn error_statistics(mut self, input: crate::types::ErrorStatistics) -> Self {
        self.error_statistics = Some(input);
        self
    }
    /// <p>Information about requests that failed with a 4xx Client Error status code.</p>
    pub fn set_error_statistics(
        mut self,
        input: std::option::Option<crate::types::ErrorStatistics>,
    ) -> Self {
        self.error_statistics = input;
        self
    }
    /// <p>Information about requests that failed with a 5xx Server Error status code.</p>
    pub fn fault_statistics(mut self, input: crate::types::FaultStatistics) -> Self {
        self.fault_statistics = Some(input);
        self
    }
    /// <p>Information about requests that failed with a 5xx Server Error status code.</p>
    pub fn set_fault_statistics(
        mut self,
        input: std::option::Option<crate::types::FaultStatistics>,
    ) -> Self {
        self.fault_statistics = input;
        self
    }
    /// <p>The total number of completed requests.</p>
    pub fn total_count(mut self, input: i64) -> Self {
        self.total_count = Some(input);
        self
    }
    /// <p>The total number of completed requests.</p>
    pub fn set_total_count(mut self, input: std::option::Option<i64>) -> Self {
        self.total_count = input;
        self
    }
    /// <p>The aggregate response time of completed requests.</p>
    pub fn total_response_time(mut self, input: f64) -> Self {
        self.total_response_time = Some(input);
        self
    }
    /// <p>The aggregate response time of completed requests.</p>
    pub fn set_total_response_time(mut self, input: std::option::Option<f64>) -> Self {
        self.total_response_time = input;
        self
    }
    /// Consumes the builder and constructs a [`EdgeStatistics`](crate::types::EdgeStatistics).
    pub fn build(self) -> crate::types::EdgeStatistics {
        crate::types::EdgeStatistics {
            ok_count: self.ok_count,
            error_statistics: self.error_statistics,
            fault_statistics: self.fault_statistics,
            total_count: self.total_count,
            total_response_time: self.total_response_time,
        }
    }
}
