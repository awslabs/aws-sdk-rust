// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A collection of segments and corresponding subsegments associated to a response time warning.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ResponseTimeRootCauseEntity {
    /// <p>The name of the entity.</p>
    #[doc(hidden)]
    pub name: std::option::Option<std::string::String>,
    /// <p>The type and messages of the exceptions.</p>
    #[doc(hidden)]
    pub coverage: std::option::Option<f64>,
    /// <p>A flag that denotes a remote subsegment.</p>
    #[doc(hidden)]
    pub remote: std::option::Option<bool>,
}
impl ResponseTimeRootCauseEntity {
    /// <p>The name of the entity.</p>
    pub fn name(&self) -> std::option::Option<&str> {
        self.name.as_deref()
    }
    /// <p>The type and messages of the exceptions.</p>
    pub fn coverage(&self) -> std::option::Option<f64> {
        self.coverage
    }
    /// <p>A flag that denotes a remote subsegment.</p>
    pub fn remote(&self) -> std::option::Option<bool> {
        self.remote
    }
}
impl ResponseTimeRootCauseEntity {
    /// Creates a new builder-style object to manufacture [`ResponseTimeRootCauseEntity`](crate::types::ResponseTimeRootCauseEntity).
    pub fn builder() -> crate::types::builders::ResponseTimeRootCauseEntityBuilder {
        crate::types::builders::ResponseTimeRootCauseEntityBuilder::default()
    }
}

/// A builder for [`ResponseTimeRootCauseEntity`](crate::types::ResponseTimeRootCauseEntity).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ResponseTimeRootCauseEntityBuilder {
    pub(crate) name: std::option::Option<std::string::String>,
    pub(crate) coverage: std::option::Option<f64>,
    pub(crate) remote: std::option::Option<bool>,
}
impl ResponseTimeRootCauseEntityBuilder {
    /// <p>The name of the entity.</p>
    pub fn name(mut self, input: impl Into<std::string::String>) -> Self {
        self.name = Some(input.into());
        self
    }
    /// <p>The name of the entity.</p>
    pub fn set_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>The type and messages of the exceptions.</p>
    pub fn coverage(mut self, input: f64) -> Self {
        self.coverage = Some(input);
        self
    }
    /// <p>The type and messages of the exceptions.</p>
    pub fn set_coverage(mut self, input: std::option::Option<f64>) -> Self {
        self.coverage = input;
        self
    }
    /// <p>A flag that denotes a remote subsegment.</p>
    pub fn remote(mut self, input: bool) -> Self {
        self.remote = Some(input);
        self
    }
    /// <p>A flag that denotes a remote subsegment.</p>
    pub fn set_remote(mut self, input: std::option::Option<bool>) -> Self {
        self.remote = input;
        self
    }
    /// Consumes the builder and constructs a [`ResponseTimeRootCauseEntity`](crate::types::ResponseTimeRootCauseEntity).
    pub fn build(self) -> crate::types::ResponseTimeRootCauseEntity {
        crate::types::ResponseTimeRootCauseEntity {
            name: self.name,
            coverage: self.coverage,
            remote: self.remote,
        }
    }
}
