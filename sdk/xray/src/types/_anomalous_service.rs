// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The service within the service graph that has anomalously high fault rates. </p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AnomalousService {
    /// <p></p>
    #[doc(hidden)]
    pub service_id: std::option::Option<crate::types::ServiceId>,
}
impl AnomalousService {
    /// <p></p>
    pub fn service_id(&self) -> std::option::Option<&crate::types::ServiceId> {
        self.service_id.as_ref()
    }
}
impl AnomalousService {
    /// Creates a new builder-style object to manufacture [`AnomalousService`](crate::types::AnomalousService).
    pub fn builder() -> crate::types::builders::AnomalousServiceBuilder {
        crate::types::builders::AnomalousServiceBuilder::default()
    }
}

/// A builder for [`AnomalousService`](crate::types::AnomalousService).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AnomalousServiceBuilder {
    pub(crate) service_id: std::option::Option<crate::types::ServiceId>,
}
impl AnomalousServiceBuilder {
    /// <p></p>
    pub fn service_id(mut self, input: crate::types::ServiceId) -> Self {
        self.service_id = Some(input);
        self
    }
    /// <p></p>
    pub fn set_service_id(mut self, input: std::option::Option<crate::types::ServiceId>) -> Self {
        self.service_id = input;
        self
    }
    /// Consumes the builder and constructs a [`AnomalousService`](crate::types::AnomalousService).
    pub fn build(self) -> crate::types::AnomalousService {
        crate::types::AnomalousService {
            service_id: self.service_id,
        }
    }
}
