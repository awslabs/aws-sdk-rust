// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A list of EC2 instance IDs corresponding to the segments in a trace. </p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct InstanceIdDetail {
    /// <p>The ID of a corresponding EC2 instance.</p>
    #[doc(hidden)]
    pub id: std::option::Option<std::string::String>,
}
impl InstanceIdDetail {
    /// <p>The ID of a corresponding EC2 instance.</p>
    pub fn id(&self) -> std::option::Option<&str> {
        self.id.as_deref()
    }
}
impl InstanceIdDetail {
    /// Creates a new builder-style object to manufacture [`InstanceIdDetail`](crate::types::InstanceIdDetail).
    pub fn builder() -> crate::types::builders::InstanceIdDetailBuilder {
        crate::types::builders::InstanceIdDetailBuilder::default()
    }
}

/// A builder for [`InstanceIdDetail`](crate::types::InstanceIdDetail).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct InstanceIdDetailBuilder {
    pub(crate) id: std::option::Option<std::string::String>,
}
impl InstanceIdDetailBuilder {
    /// <p>The ID of a corresponding EC2 instance.</p>
    pub fn id(mut self, input: impl Into<std::string::String>) -> Self {
        self.id = Some(input.into());
        self
    }
    /// <p>The ID of a corresponding EC2 instance.</p>
    pub fn set_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.id = input;
        self
    }
    /// Consumes the builder and constructs a [`InstanceIdDetail`](crate::types::InstanceIdDetail).
    pub fn build(self) -> crate::types::InstanceIdDetail {
        crate::types::InstanceIdDetail { id: self.id }
    }
}
