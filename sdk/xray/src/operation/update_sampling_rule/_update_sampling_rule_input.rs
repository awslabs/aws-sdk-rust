// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct UpdateSamplingRuleInput {
    /// <p>The rule and fields to change.</p>
    #[doc(hidden)]
    pub sampling_rule_update: std::option::Option<crate::types::SamplingRuleUpdate>,
}
impl UpdateSamplingRuleInput {
    /// <p>The rule and fields to change.</p>
    pub fn sampling_rule_update(&self) -> std::option::Option<&crate::types::SamplingRuleUpdate> {
        self.sampling_rule_update.as_ref()
    }
}
impl UpdateSamplingRuleInput {
    /// Creates a new builder-style object to manufacture [`UpdateSamplingRuleInput`](crate::operation::update_sampling_rule::UpdateSamplingRuleInput).
    pub fn builder(
    ) -> crate::operation::update_sampling_rule::builders::UpdateSamplingRuleInputBuilder {
        crate::operation::update_sampling_rule::builders::UpdateSamplingRuleInputBuilder::default()
    }
}

/// A builder for [`UpdateSamplingRuleInput`](crate::operation::update_sampling_rule::UpdateSamplingRuleInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct UpdateSamplingRuleInputBuilder {
    pub(crate) sampling_rule_update: std::option::Option<crate::types::SamplingRuleUpdate>,
}
impl UpdateSamplingRuleInputBuilder {
    /// <p>The rule and fields to change.</p>
    pub fn sampling_rule_update(mut self, input: crate::types::SamplingRuleUpdate) -> Self {
        self.sampling_rule_update = Some(input);
        self
    }
    /// <p>The rule and fields to change.</p>
    pub fn set_sampling_rule_update(
        mut self,
        input: std::option::Option<crate::types::SamplingRuleUpdate>,
    ) -> Self {
        self.sampling_rule_update = input;
        self
    }
    /// Consumes the builder and constructs a [`UpdateSamplingRuleInput`](crate::operation::update_sampling_rule::UpdateSamplingRuleInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::update_sampling_rule::UpdateSamplingRuleInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::update_sampling_rule::UpdateSamplingRuleInput {
                sampling_rule_update: self.sampling_rule_update,
            },
        )
    }
}
