// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GetTraceGraphInput {
    /// <p>Trace IDs of requests for which to generate a service graph.</p>
    #[doc(hidden)]
    pub trace_ids: std::option::Option<std::vec::Vec<std::string::String>>,
    /// <p>Pagination token.</p>
    #[doc(hidden)]
    pub next_token: std::option::Option<std::string::String>,
}
impl GetTraceGraphInput {
    /// <p>Trace IDs of requests for which to generate a service graph.</p>
    pub fn trace_ids(&self) -> std::option::Option<&[std::string::String]> {
        self.trace_ids.as_deref()
    }
    /// <p>Pagination token.</p>
    pub fn next_token(&self) -> std::option::Option<&str> {
        self.next_token.as_deref()
    }
}
impl GetTraceGraphInput {
    /// Creates a new builder-style object to manufacture [`GetTraceGraphInput`](crate::operation::get_trace_graph::GetTraceGraphInput).
    pub fn builder() -> crate::operation::get_trace_graph::builders::GetTraceGraphInputBuilder {
        crate::operation::get_trace_graph::builders::GetTraceGraphInputBuilder::default()
    }
}

/// A builder for [`GetTraceGraphInput`](crate::operation::get_trace_graph::GetTraceGraphInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct GetTraceGraphInputBuilder {
    pub(crate) trace_ids: std::option::Option<std::vec::Vec<std::string::String>>,
    pub(crate) next_token: std::option::Option<std::string::String>,
}
impl GetTraceGraphInputBuilder {
    /// Appends an item to `trace_ids`.
    ///
    /// To override the contents of this collection use [`set_trace_ids`](Self::set_trace_ids).
    ///
    /// <p>Trace IDs of requests for which to generate a service graph.</p>
    pub fn trace_ids(mut self, input: impl Into<std::string::String>) -> Self {
        let mut v = self.trace_ids.unwrap_or_default();
        v.push(input.into());
        self.trace_ids = Some(v);
        self
    }
    /// <p>Trace IDs of requests for which to generate a service graph.</p>
    pub fn set_trace_ids(
        mut self,
        input: std::option::Option<std::vec::Vec<std::string::String>>,
    ) -> Self {
        self.trace_ids = input;
        self
    }
    /// <p>Pagination token.</p>
    pub fn next_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.next_token = Some(input.into());
        self
    }
    /// <p>Pagination token.</p>
    pub fn set_next_token(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// Consumes the builder and constructs a [`GetTraceGraphInput`](crate::operation::get_trace_graph::GetTraceGraphInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::get_trace_graph::GetTraceGraphInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(crate::operation::get_trace_graph::GetTraceGraphInput {
            trace_ids: self.trace_ids,
            next_token: self.next_token,
        })
    }
}
