// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`PutEncryptionConfig`](crate::operation::put_encryption_config::builders::PutEncryptionConfigFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`key_id(impl Into<String>)`](crate::operation::put_encryption_config::builders::PutEncryptionConfigFluentBuilder::key_id) / [`set_key_id(Option<String>)`](crate::operation::put_encryption_config::builders::PutEncryptionConfigFluentBuilder::set_key_id): <p>An Amazon Web Services KMS key in one of the following formats:</p>  <ul>   <li> <p> <b>Alias</b> - The name of the key. For example, <code>alias/MyKey</code>.</p> </li>   <li> <p> <b>Key ID</b> - The KMS key ID of the key. For example, <code>ae4aa6d49-a4d8-9df9-a475-4ff6d7898456</code>. Amazon Web Services X-Ray does not support asymmetric KMS keys.</p> </li>   <li> <p> <b>ARN</b> - The full Amazon Resource Name of the key ID or alias. For example, <code>arn:aws:kms:us-east-2:123456789012:key/ae4aa6d49-a4d8-9df9-a475-4ff6d7898456</code>. Use this format to specify a key in a different account.</p> </li>  </ul>  <p>Omit this key if you set <code>Type</code> to <code>NONE</code>.</p>
    ///   - [`r#type(EncryptionType)`](crate::operation::put_encryption_config::builders::PutEncryptionConfigFluentBuilder::type) / [`set_type(Option<EncryptionType>)`](crate::operation::put_encryption_config::builders::PutEncryptionConfigFluentBuilder::set_type): <p>The type of encryption. Set to <code>KMS</code> to use your own key for encryption. Set to <code>NONE</code> for default encryption.</p>
    /// - On success, responds with [`PutEncryptionConfigOutput`](crate::operation::put_encryption_config::PutEncryptionConfigOutput) with field(s):
    ///   - [`encryption_config(Option<EncryptionConfig>)`](crate::operation::put_encryption_config::PutEncryptionConfigOutput::encryption_config): <p>The new encryption configuration.</p>
    /// - On failure, responds with [`SdkError<PutEncryptionConfigError>`](crate::operation::put_encryption_config::PutEncryptionConfigError)
    pub fn put_encryption_config(
        &self,
    ) -> crate::operation::put_encryption_config::builders::PutEncryptionConfigFluentBuilder {
        crate::operation::put_encryption_config::builders::PutEncryptionConfigFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
