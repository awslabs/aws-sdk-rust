// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetTimeSeriesServiceStatistics`](crate::client::fluent_builders::GetTimeSeriesServiceStatistics) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::GetTimeSeriesServiceStatistics::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`start_time(DateTime)`](crate::client::fluent_builders::GetTimeSeriesServiceStatistics::start_time) / [`set_start_time(Option<DateTime>)`](crate::client::fluent_builders::GetTimeSeriesServiceStatistics::set_start_time): <p>The start of the time frame for which to aggregate statistics.</p>
    ///   - [`end_time(DateTime)`](crate::client::fluent_builders::GetTimeSeriesServiceStatistics::end_time) / [`set_end_time(Option<DateTime>)`](crate::client::fluent_builders::GetTimeSeriesServiceStatistics::set_end_time): <p>The end of the time frame for which to aggregate statistics.</p>
    ///   - [`group_name(impl Into<String>)`](crate::client::fluent_builders::GetTimeSeriesServiceStatistics::group_name) / [`set_group_name(Option<String>)`](crate::client::fluent_builders::GetTimeSeriesServiceStatistics::set_group_name): <p>The case-sensitive name of the group for which to pull statistics from.</p>
    ///   - [`group_arn(impl Into<String>)`](crate::client::fluent_builders::GetTimeSeriesServiceStatistics::group_arn) / [`set_group_arn(Option<String>)`](crate::client::fluent_builders::GetTimeSeriesServiceStatistics::set_group_arn): <p>The Amazon Resource Name (ARN) of the group for which to pull statistics from.</p>
    ///   - [`entity_selector_expression(impl Into<String>)`](crate::client::fluent_builders::GetTimeSeriesServiceStatistics::entity_selector_expression) / [`set_entity_selector_expression(Option<String>)`](crate::client::fluent_builders::GetTimeSeriesServiceStatistics::set_entity_selector_expression): <p>A filter expression defining entities that will be aggregated for statistics. Supports ID, service, and edge functions. If no selector expression is specified, edge statistics are returned. </p>
    ///   - [`period(i32)`](crate::client::fluent_builders::GetTimeSeriesServiceStatistics::period) / [`set_period(Option<i32>)`](crate::client::fluent_builders::GetTimeSeriesServiceStatistics::set_period): <p>Aggregation period in seconds.</p>
    ///   - [`forecast_statistics(bool)`](crate::client::fluent_builders::GetTimeSeriesServiceStatistics::forecast_statistics) / [`set_forecast_statistics(Option<bool>)`](crate::client::fluent_builders::GetTimeSeriesServiceStatistics::set_forecast_statistics): <p>The forecasted high and low fault count values. Forecast enabled requests require the EntitySelectorExpression ID be provided.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::GetTimeSeriesServiceStatistics::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::GetTimeSeriesServiceStatistics::set_next_token): <p>Pagination token.</p>
    /// - On success, responds with [`GetTimeSeriesServiceStatisticsOutput`](crate::output::GetTimeSeriesServiceStatisticsOutput) with field(s):
    ///   - [`time_series_service_statistics(Option<Vec<TimeSeriesServiceStatistics>>)`](crate::output::GetTimeSeriesServiceStatisticsOutput::time_series_service_statistics): <p>The collection of statistics.</p>
    ///   - [`contains_old_group_versions(bool)`](crate::output::GetTimeSeriesServiceStatisticsOutput::contains_old_group_versions): <p>A flag indicating whether or not a group's filter expression has been consistent, or if a returned aggregation might show statistics from an older version of the group's filter expression.</p>
    ///   - [`next_token(Option<String>)`](crate::output::GetTimeSeriesServiceStatisticsOutput::next_token): <p>Pagination token.</p>
    /// - On failure, responds with [`SdkError<GetTimeSeriesServiceStatisticsError>`](crate::error::GetTimeSeriesServiceStatisticsError)
    pub fn get_time_series_service_statistics(
        &self,
    ) -> crate::client::fluent_builders::GetTimeSeriesServiceStatistics {
        crate::client::fluent_builders::GetTimeSeriesServiceStatistics::new(self.handle.clone())
    }
}
