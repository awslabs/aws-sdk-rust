// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetTraceSummaries`](crate::client::fluent_builders::GetTraceSummaries) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::GetTraceSummaries::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`start_time(DateTime)`](crate::client::fluent_builders::GetTraceSummaries::start_time) / [`set_start_time(Option<DateTime>)`](crate::client::fluent_builders::GetTraceSummaries::set_start_time): <p>The start of the time frame for which to retrieve traces.</p>
    ///   - [`end_time(DateTime)`](crate::client::fluent_builders::GetTraceSummaries::end_time) / [`set_end_time(Option<DateTime>)`](crate::client::fluent_builders::GetTraceSummaries::set_end_time): <p>The end of the time frame for which to retrieve traces.</p>
    ///   - [`time_range_type(TimeRangeType)`](crate::client::fluent_builders::GetTraceSummaries::time_range_type) / [`set_time_range_type(Option<TimeRangeType>)`](crate::client::fluent_builders::GetTraceSummaries::set_time_range_type): <p>A parameter to indicate whether to query trace summaries by TraceId or Event time.</p>
    ///   - [`sampling(bool)`](crate::client::fluent_builders::GetTraceSummaries::sampling) / [`set_sampling(Option<bool>)`](crate::client::fluent_builders::GetTraceSummaries::set_sampling): <p>Set to <code>true</code> to get summaries for only a subset of available traces.</p>
    ///   - [`sampling_strategy(SamplingStrategy)`](crate::client::fluent_builders::GetTraceSummaries::sampling_strategy) / [`set_sampling_strategy(Option<SamplingStrategy>)`](crate::client::fluent_builders::GetTraceSummaries::set_sampling_strategy): <p>A parameter to indicate whether to enable sampling on trace summaries. Input parameters are Name and Value.</p>
    ///   - [`filter_expression(impl Into<String>)`](crate::client::fluent_builders::GetTraceSummaries::filter_expression) / [`set_filter_expression(Option<String>)`](crate::client::fluent_builders::GetTraceSummaries::set_filter_expression): <p>Specify a filter expression to retrieve trace summaries for services or requests that meet certain requirements.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::GetTraceSummaries::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::GetTraceSummaries::set_next_token): <p>Specify the pagination token returned by a previous request to retrieve the next page of results.</p>
    /// - On success, responds with [`GetTraceSummariesOutput`](crate::output::GetTraceSummariesOutput) with field(s):
    ///   - [`trace_summaries(Option<Vec<TraceSummary>>)`](crate::output::GetTraceSummariesOutput::trace_summaries): <p>Trace IDs and annotations for traces that were found in the specified time frame.</p>
    ///   - [`approximate_time(Option<DateTime>)`](crate::output::GetTraceSummariesOutput::approximate_time): <p>The start time of this page of results.</p>
    ///   - [`traces_processed_count(Option<i64>)`](crate::output::GetTraceSummariesOutput::traces_processed_count): <p>The total number of traces processed, including traces that did not match the specified filter expression.</p>
    ///   - [`next_token(Option<String>)`](crate::output::GetTraceSummariesOutput::next_token): <p>If the requested time frame contained more than one page of results, you can use this token to retrieve the next page. The first page contains the most recent results, closest to the end of the time frame.</p>
    /// - On failure, responds with [`SdkError<GetTraceSummariesError>`](crate::error::GetTraceSummariesError)
    pub fn get_trace_summaries(&self) -> crate::client::fluent_builders::GetTraceSummaries {
        crate::client::fluent_builders::GetTraceSummaries::new(self.handle.clone())
    }
}
