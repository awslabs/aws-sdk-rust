// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetInsightEvents`](crate::client::fluent_builders::GetInsightEvents) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::GetInsightEvents::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`insight_id(impl Into<String>)`](crate::client::fluent_builders::GetInsightEvents::insight_id) / [`set_insight_id(Option<String>)`](crate::client::fluent_builders::GetInsightEvents::set_insight_id): <p>The insight's unique identifier. Use the GetInsightSummaries action to retrieve an InsightId.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::GetInsightEvents::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::GetInsightEvents::set_max_results): <p>Used to retrieve at most the specified value of events.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::GetInsightEvents::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::GetInsightEvents::set_next_token): <p>Specify the pagination token returned by a previous request to retrieve the next page of events. </p>
    /// - On success, responds with [`GetInsightEventsOutput`](crate::output::GetInsightEventsOutput) with field(s):
    ///   - [`insight_events(Option<Vec<InsightEvent>>)`](crate::output::GetInsightEventsOutput::insight_events): <p>A detailed description of the event. This includes the time of the event, client and root cause impact statistics, and the top anomalous service at the time of the event.</p>
    ///   - [`next_token(Option<String>)`](crate::output::GetInsightEventsOutput::next_token): <p>Use this token to retrieve the next page of insight events.</p>
    /// - On failure, responds with [`SdkError<GetInsightEventsError>`](crate::error::GetInsightEventsError)
    pub fn get_insight_events(&self) -> crate::client::fluent_builders::GetInsightEvents {
        crate::client::fluent_builders::GetInsightEvents::new(self.handle.clone())
    }
}
