// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_sampling_rule_update(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::types::SamplingRuleUpdate,
) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    if let Some(var_1) = &input.rule_name {
        object.key("RuleName").string(var_1.as_str());
    }
    if let Some(var_2) = &input.rule_arn {
        object.key("RuleARN").string(var_2.as_str());
    }
    if let Some(var_3) = &input.resource_arn {
        object.key("ResourceARN").string(var_3.as_str());
    }
    if let Some(var_4) = &input.priority {
        object.key("Priority").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_4).into()),
        );
    }
    if let Some(var_5) = &input.fixed_rate {
        object.key("FixedRate").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::Float((*var_5).into()),
        );
    }
    if let Some(var_6) = &input.reservoir_size {
        object.key("ReservoirSize").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_6).into()),
        );
    }
    if let Some(var_7) = &input.host {
        object.key("Host").string(var_7.as_str());
    }
    if let Some(var_8) = &input.service_name {
        object.key("ServiceName").string(var_8.as_str());
    }
    if let Some(var_9) = &input.service_type {
        object.key("ServiceType").string(var_9.as_str());
    }
    if let Some(var_10) = &input.http_method {
        object.key("HTTPMethod").string(var_10.as_str());
    }
    if let Some(var_11) = &input.url_path {
        object.key("URLPath").string(var_11.as_str());
    }
    if let Some(var_12) = &input.attributes {
        #[allow(unused_mut)]
        let mut object_13 = object.key("Attributes").start_object();
        for (key_14, value_15) in var_12 {
            {
                object_13.key(key_14.as_str()).string(value_15.as_str());
            }
        }
        object_13.finish();
    }
    Ok(())
}
