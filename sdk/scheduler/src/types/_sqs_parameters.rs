// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The templated target type for the Amazon SQS <a href="https://docs.aws.amazon.com/AWSSimpleQueueService/latest/APIReference/API_SendMessage.html"> <code>SendMessage</code> </a> API operation. Contains the message group ID to use when the target is a FIFO queue. If you specify an Amazon SQS FIFO queue as a target, the queue must have content-based deduplication enabled. For more information, see <a href="https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/using-messagededuplicationid-property.html">Using the Amazon SQS message deduplication ID</a> in the <i>Amazon SQS Developer Guide</i>. </p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct SqsParameters {
    /// <p>The FIFO message group ID to use as the target.</p>
    #[doc(hidden)]
    pub message_group_id: std::option::Option<std::string::String>,
}
impl SqsParameters {
    /// <p>The FIFO message group ID to use as the target.</p>
    pub fn message_group_id(&self) -> std::option::Option<&str> {
        self.message_group_id.as_deref()
    }
}
impl SqsParameters {
    /// Creates a new builder-style object to manufacture [`SqsParameters`](crate::types::SqsParameters).
    pub fn builder() -> crate::types::builders::SqsParametersBuilder {
        crate::types::builders::SqsParametersBuilder::default()
    }
}

/// A builder for [`SqsParameters`](crate::types::SqsParameters).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct SqsParametersBuilder {
    pub(crate) message_group_id: std::option::Option<std::string::String>,
}
impl SqsParametersBuilder {
    /// <p>The FIFO message group ID to use as the target.</p>
    pub fn message_group_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.message_group_id = Some(input.into());
        self
    }
    /// <p>The FIFO message group ID to use as the target.</p>
    pub fn set_message_group_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.message_group_id = input;
        self
    }
    /// Consumes the builder and constructs a [`SqsParameters`](crate::types::SqsParameters).
    pub fn build(self) -> crate::types::SqsParameters {
        crate::types::SqsParameters {
            message_group_id: self.message_group_id,
        }
    }
}
