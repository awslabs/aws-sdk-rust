// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The templated target type for the EventBridge <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_PutEvents.html"> <code>PutEvents</code> </a> API operation.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct EventBridgeParameters {
    /// <p>A free-form string, with a maximum of 128 characters, used to decide what fields to expect in the event detail.</p>
    #[doc(hidden)]
    pub detail_type: std::option::Option<std::string::String>,
    /// <p>The source of the event.</p>
    #[doc(hidden)]
    pub source: std::option::Option<std::string::String>,
}
impl EventBridgeParameters {
    /// <p>A free-form string, with a maximum of 128 characters, used to decide what fields to expect in the event detail.</p>
    pub fn detail_type(&self) -> std::option::Option<&str> {
        self.detail_type.as_deref()
    }
    /// <p>The source of the event.</p>
    pub fn source(&self) -> std::option::Option<&str> {
        self.source.as_deref()
    }
}
impl EventBridgeParameters {
    /// Creates a new builder-style object to manufacture [`EventBridgeParameters`](crate::types::EventBridgeParameters).
    pub fn builder() -> crate::types::builders::EventBridgeParametersBuilder {
        crate::types::builders::EventBridgeParametersBuilder::default()
    }
}

/// A builder for [`EventBridgeParameters`](crate::types::EventBridgeParameters).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct EventBridgeParametersBuilder {
    pub(crate) detail_type: std::option::Option<std::string::String>,
    pub(crate) source: std::option::Option<std::string::String>,
}
impl EventBridgeParametersBuilder {
    /// <p>A free-form string, with a maximum of 128 characters, used to decide what fields to expect in the event detail.</p>
    pub fn detail_type(mut self, input: impl Into<std::string::String>) -> Self {
        self.detail_type = Some(input.into());
        self
    }
    /// <p>A free-form string, with a maximum of 128 characters, used to decide what fields to expect in the event detail.</p>
    pub fn set_detail_type(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.detail_type = input;
        self
    }
    /// <p>The source of the event.</p>
    pub fn source(mut self, input: impl Into<std::string::String>) -> Self {
        self.source = Some(input.into());
        self
    }
    /// <p>The source of the event.</p>
    pub fn set_source(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.source = input;
        self
    }
    /// Consumes the builder and constructs a [`EventBridgeParameters`](crate::types::EventBridgeParameters).
    pub fn build(self) -> crate::types::EventBridgeParameters {
        crate::types::EventBridgeParameters {
            detail_type: self.detail_type,
            source: self.source,
        }
    }
}
