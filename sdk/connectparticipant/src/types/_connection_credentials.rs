// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Connection credentials. </p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ConnectionCredentials {
    /// <p>The connection token.</p>
    #[doc(hidden)]
    pub connection_token: std::option::Option<std::string::String>,
    /// <p>The expiration of the token.</p>
    /// <p>It's specified in ISO 8601 format: yyyy-MM-ddThh:mm:ss.SSSZ. For example, 2019-11-08T02:41:28.172Z.</p>
    #[doc(hidden)]
    pub expiry: std::option::Option<std::string::String>,
}
impl ConnectionCredentials {
    /// <p>The connection token.</p>
    pub fn connection_token(&self) -> std::option::Option<&str> {
        self.connection_token.as_deref()
    }
    /// <p>The expiration of the token.</p>
    /// <p>It's specified in ISO 8601 format: yyyy-MM-ddThh:mm:ss.SSSZ. For example, 2019-11-08T02:41:28.172Z.</p>
    pub fn expiry(&self) -> std::option::Option<&str> {
        self.expiry.as_deref()
    }
}
impl ConnectionCredentials {
    /// Creates a new builder-style object to manufacture [`ConnectionCredentials`](crate::types::ConnectionCredentials).
    pub fn builder() -> crate::types::builders::ConnectionCredentialsBuilder {
        crate::types::builders::ConnectionCredentialsBuilder::default()
    }
}

/// A builder for [`ConnectionCredentials`](crate::types::ConnectionCredentials).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ConnectionCredentialsBuilder {
    pub(crate) connection_token: std::option::Option<std::string::String>,
    pub(crate) expiry: std::option::Option<std::string::String>,
}
impl ConnectionCredentialsBuilder {
    /// <p>The connection token.</p>
    pub fn connection_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.connection_token = Some(input.into());
        self
    }
    /// <p>The connection token.</p>
    pub fn set_connection_token(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.connection_token = input;
        self
    }
    /// <p>The expiration of the token.</p>
    /// <p>It's specified in ISO 8601 format: yyyy-MM-ddThh:mm:ss.SSSZ. For example, 2019-11-08T02:41:28.172Z.</p>
    pub fn expiry(mut self, input: impl Into<std::string::String>) -> Self {
        self.expiry = Some(input.into());
        self
    }
    /// <p>The expiration of the token.</p>
    /// <p>It's specified in ISO 8601 format: yyyy-MM-ddThh:mm:ss.SSSZ. For example, 2019-11-08T02:41:28.172Z.</p>
    pub fn set_expiry(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.expiry = input;
        self
    }
    /// Consumes the builder and constructs a [`ConnectionCredentials`](crate::types::ConnectionCredentials).
    pub fn build(self) -> crate::types::ConnectionCredentials {
        crate::types::ConnectionCredentials {
            connection_token: self.connection_token,
            expiry: self.expiry,
        }
    }
}
