// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub use crate::operation::create_participant_connection::_create_participant_connection_output::CreateParticipantConnectionOutputBuilder;

pub use crate::operation::create_participant_connection::_create_participant_connection_input::CreateParticipantConnectionInputBuilder;

/// Fluent builder constructing a request to `CreateParticipantConnection`.
///
/// <p>Creates the participant's connection. </p> <note>
/// <p> <code>ParticipantToken</code> is used for invoking this API instead of <code>ConnectionToken</code>.</p>
/// </note>
/// <p>The participant token is valid for the lifetime of the participant â€“ until they are part of a contact.</p>
/// <p>The response URL for <code>WEBSOCKET</code> Type has a connect expiry timeout of 100s. Clients must manually connect to the returned websocket URL and subscribe to the desired topic. </p>
/// <p>For chat, you need to publish the following on the established websocket connection:</p>
/// <p> <code>{"topic":"aws/subscribe","content":{"topics":["aws/chat"]}}</code> </p>
/// <p>Upon websocket URL expiry, as specified in the response ConnectionExpiry parameter, clients need to call this API again to obtain a new websocket URL and perform the same steps as before.</p>
/// <p> <b>Message streaming support</b>: This API can also be used together with the <a href="https://docs.aws.amazon.com/connect/latest/APIReference/API_StartContactStreaming.html">StartContactStreaming</a> API to create a participant connection for chat contacts that are not using a websocket. For more information about message streaming, <a href="https://docs.aws.amazon.com/connect/latest/adminguide/chat-message-streaming.html">Enable real-time chat message streaming</a> in the <i>Amazon Connect Administrator Guide</i>.</p>
/// <p> <b>Feature specifications</b>: For information about feature specifications, such as the allowed number of open websocket connections per participant, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html#feature-limits">Feature specifications</a> in the <i>Amazon Connect Administrator Guide</i>. </p> <note>
/// <p>The Amazon Connect Participant Service APIs do not use <a href="https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html">Signature Version 4 authentication</a>.</p>
/// </note>
#[derive(std::clone::Clone, std::fmt::Debug)]
pub struct CreateParticipantConnectionFluentBuilder {
                handle: std::sync::Arc<crate::client::Handle>,
                inner: crate::operation::create_participant_connection::builders::CreateParticipantConnectionInputBuilder
            }
impl CreateParticipantConnectionFluentBuilder {
    /// Creates a new `CreateParticipantConnection`.
    pub(crate) fn new(handle: std::sync::Arc<crate::client::Handle>) -> Self {
        Self {
            handle,
            inner: Default::default(),
        }
    }

    /// Consume this builder, creating a customizable operation that can be modified before being
    /// sent. The operation's inner [http::Request] can be modified as well.
    pub async fn customize(
        self,
    ) -> std::result::Result<
        crate::client::customize::CustomizableOperation<
            crate::operation::create_participant_connection::CreateParticipantConnection,
            aws_http::retry::AwsResponseRetryClassifier,
        >,
        aws_smithy_http::result::SdkError<
            crate::operation::create_participant_connection::CreateParticipantConnectionError,
        >,
    > {
        let handle = self.handle.clone();
        let operation = self
            .inner
            .build()
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?
            .make_operation(&handle.conf)
            .await
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?;
        Ok(crate::client::customize::CustomizableOperation { handle, operation })
    }

    /// Sends the request and returns the response.
    ///
    /// If an error occurs, an `SdkError` will be returned with additional details that
    /// can be matched against.
    ///
    /// By default, any retryable failures will be retried twice. Retry behavior
    /// is configurable with the [RetryConfig](aws_smithy_types::retry::RetryConfig), which can be
    /// set when configuring the client.
    pub async fn send(
        self,
    ) -> std::result::Result<
        crate::operation::create_participant_connection::CreateParticipantConnectionOutput,
        aws_smithy_http::result::SdkError<
            crate::operation::create_participant_connection::CreateParticipantConnectionError,
        >,
    > {
        let op = self
            .inner
            .build()
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?
            .make_operation(&self.handle.conf)
            .await
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?;
        self.handle.client.call(op).await
    }
    /// Appends an item to `Type`.
    ///
    /// To override the contents of this collection use [`set_type`](Self::set_type).
    ///
    /// <p>Type of connection information required. This can be omitted if <code>ConnectParticipant</code> is <code>true</code>.</p>
    pub fn r#type(mut self, input: crate::types::ConnectionType) -> Self {
        self.inner = self.inner.r#type(input);
        self
    }
    /// <p>Type of connection information required. This can be omitted if <code>ConnectParticipant</code> is <code>true</code>.</p>
    pub fn set_type(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::ConnectionType>>,
    ) -> Self {
        self.inner = self.inner.set_type(input);
        self
    }
    /// <p>This is a header parameter.</p>
    /// <p>The ParticipantToken as obtained from <a href="https://docs.aws.amazon.com/connect/latest/APIReference/API_StartChatContact.html">StartChatContact</a> API response.</p>
    pub fn participant_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.inner = self.inner.participant_token(input.into());
        self
    }
    /// <p>This is a header parameter.</p>
    /// <p>The ParticipantToken as obtained from <a href="https://docs.aws.amazon.com/connect/latest/APIReference/API_StartChatContact.html">StartChatContact</a> API response.</p>
    pub fn set_participant_token(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.inner = self.inner.set_participant_token(input);
        self
    }
    /// <p>Amazon Connect Participant is used to mark the participant as connected for message streaming.</p>
    pub fn connect_participant(mut self, input: bool) -> Self {
        self.inner = self.inner.connect_participant(input);
        self
    }
    /// <p>Amazon Connect Participant is used to mark the participant as connected for message streaming.</p>
    pub fn set_connect_participant(mut self, input: std::option::Option<bool>) -> Self {
        self.inner = self.inner.set_connect_participant(input);
        self
    }
}
