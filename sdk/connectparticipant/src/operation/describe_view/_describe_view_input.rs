// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DescribeViewInput {
    /// <p>An encrypted token originating from the interactive message of a ShowView block operation. Represents the desired view.</p>
    pub view_token: ::std::option::Option<::std::string::String>,
    /// <p>The connection token.</p>
    pub connection_token: ::std::option::Option<::std::string::String>,
}
impl DescribeViewInput {
    /// <p>An encrypted token originating from the interactive message of a ShowView block operation. Represents the desired view.</p>
    pub fn view_token(&self) -> ::std::option::Option<&str> {
        self.view_token.as_deref()
    }
    /// <p>The connection token.</p>
    pub fn connection_token(&self) -> ::std::option::Option<&str> {
        self.connection_token.as_deref()
    }
}
impl DescribeViewInput {
    /// Creates a new builder-style object to manufacture [`DescribeViewInput`](crate::operation::describe_view::DescribeViewInput).
    pub fn builder() -> crate::operation::describe_view::builders::DescribeViewInputBuilder {
        crate::operation::describe_view::builders::DescribeViewInputBuilder::default()
    }
}

/// A builder for [`DescribeViewInput`](crate::operation::describe_view::DescribeViewInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DescribeViewInputBuilder {
    pub(crate) view_token: ::std::option::Option<::std::string::String>,
    pub(crate) connection_token: ::std::option::Option<::std::string::String>,
}
impl DescribeViewInputBuilder {
    /// <p>An encrypted token originating from the interactive message of a ShowView block operation. Represents the desired view.</p>
    /// This field is required.
    pub fn view_token(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.view_token = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>An encrypted token originating from the interactive message of a ShowView block operation. Represents the desired view.</p>
    pub fn set_view_token(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.view_token = input;
        self
    }
    /// <p>An encrypted token originating from the interactive message of a ShowView block operation. Represents the desired view.</p>
    pub fn get_view_token(&self) -> &::std::option::Option<::std::string::String> {
        &self.view_token
    }
    /// <p>The connection token.</p>
    /// This field is required.
    pub fn connection_token(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.connection_token = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The connection token.</p>
    pub fn set_connection_token(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.connection_token = input;
        self
    }
    /// <p>The connection token.</p>
    pub fn get_connection_token(&self) -> &::std::option::Option<::std::string::String> {
        &self.connection_token
    }
    /// Consumes the builder and constructs a [`DescribeViewInput`](crate::operation::describe_view::DescribeViewInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::describe_view::DescribeViewInput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::operation::describe_view::DescribeViewInput {
            view_token: self.view_token,
            connection_token: self.connection_token,
        })
    }
}
