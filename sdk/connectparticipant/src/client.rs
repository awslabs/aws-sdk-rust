// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[doc(inline)]
pub use aws_smithy_client::Builder;
#[derive(Debug)]
pub(crate) struct Handle {
    pub(crate) client: aws_smithy_client::Client<
        aws_smithy_client::erase::DynConnector,
        aws_smithy_client::erase::DynMiddleware<aws_smithy_client::erase::DynConnector>,
    >,
    pub(crate) conf: crate::Config,
}

/// Client for Amazon Connect Participant Service
///
/// Client for invoking operations on Amazon Connect Participant Service. Each operation on Amazon Connect Participant Service is a method on this
/// this struct. `.send()` MUST be invoked on the generated operations to dispatch the request to the service.
///
/// # Examples
/// **Constructing a client and invoking an operation**
/// ```rust,no_run
/// # async fn docs() {
///     // create a shared configuration. This can be used & shared between multiple service clients.
///     let shared_config = aws_config::load_from_env().await;
///     let client = aws_sdk_connectparticipant::Client::new(&shared_config);
///     // invoke an operation
///     /* let rsp = client
///         .<operation_name>().
///         .<param>("some value")
///         .send().await; */
/// # }
/// ```
/// **Constructing a client with custom configuration**
/// ```rust,no_run
/// use aws_config::retry::RetryConfig;
/// # async fn docs() {
/// let shared_config = aws_config::load_from_env().await;
/// let config = aws_sdk_connectparticipant::config::Builder::from(&shared_config)
///   .retry_config(RetryConfig::disabled())
///   .build();
/// let client = aws_sdk_connectparticipant::Client::from_conf(config);
/// # }
#[derive(std::fmt::Debug)]
pub struct Client {
    handle: std::sync::Arc<Handle>,
}

impl std::clone::Clone for Client {
    fn clone(&self) -> Self {
        Self {
            handle: self.handle.clone(),
        }
    }
}

impl
    From<
        aws_smithy_client::Client<
            aws_smithy_client::erase::DynConnector,
            aws_smithy_client::erase::DynMiddleware<aws_smithy_client::erase::DynConnector>,
        >,
    > for Client
{
    fn from(
        client: aws_smithy_client::Client<
            aws_smithy_client::erase::DynConnector,
            aws_smithy_client::erase::DynMiddleware<aws_smithy_client::erase::DynConnector>,
        >,
    ) -> Self {
        Self::with_config(client, crate::Config::builder().build())
    }
}

impl Client {
    /// Creates a client with the given service configuration.
    pub fn with_config(
        client: aws_smithy_client::Client<
            aws_smithy_client::erase::DynConnector,
            aws_smithy_client::erase::DynMiddleware<aws_smithy_client::erase::DynConnector>,
        >,
        conf: crate::Config,
    ) -> Self {
        Self {
            handle: std::sync::Arc::new(Handle { client, conf }),
        }
    }

    /// Returns the client's configuration.
    pub fn conf(&self) -> &crate::Config {
        &self.handle.conf
    }
}
impl Client {
    /// Constructs a fluent builder for the [`CompleteAttachmentUpload`](crate::client::fluent_builders::CompleteAttachmentUpload) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`attachment_ids(Vec<String>)`](crate::client::fluent_builders::CompleteAttachmentUpload::attachment_ids) / [`set_attachment_ids(Option<Vec<String>>)`](crate::client::fluent_builders::CompleteAttachmentUpload::set_attachment_ids): <p>A list of unique identifiers for the attachments.</p>
    ///   - [`client_token(impl Into<String>)`](crate::client::fluent_builders::CompleteAttachmentUpload::client_token) / [`set_client_token(Option<String>)`](crate::client::fluent_builders::CompleteAttachmentUpload::set_client_token): <p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If not provided, the Amazon Web Services SDK populates this field. For more information about idempotency, see <a href="https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/">Making retries safe with idempotent APIs</a>.</p>
    ///   - [`connection_token(impl Into<String>)`](crate::client::fluent_builders::CompleteAttachmentUpload::connection_token) / [`set_connection_token(Option<String>)`](crate::client::fluent_builders::CompleteAttachmentUpload::set_connection_token): <p>The authentication token associated with the participant's connection.</p>
    /// - On success, responds with [`CompleteAttachmentUploadOutput`](crate::output::CompleteAttachmentUploadOutput)

    /// - On failure, responds with [`SdkError<CompleteAttachmentUploadError>`](crate::error::CompleteAttachmentUploadError)
    pub fn complete_attachment_upload(
        &self,
    ) -> crate::client::fluent_builders::CompleteAttachmentUpload {
        crate::client::fluent_builders::CompleteAttachmentUpload::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`CreateParticipantConnection`](crate::client::fluent_builders::CreateParticipantConnection) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`r#type(Vec<ConnectionType>)`](crate::client::fluent_builders::CreateParticipantConnection::type) / [`set_type(Option<Vec<ConnectionType>>)`](crate::client::fluent_builders::CreateParticipantConnection::set_type): <p>Type of connection information required. This can be omitted if <code>ConnectParticipant</code> is <code>true</code>.</p>
    ///   - [`participant_token(impl Into<String>)`](crate::client::fluent_builders::CreateParticipantConnection::participant_token) / [`set_participant_token(Option<String>)`](crate::client::fluent_builders::CreateParticipantConnection::set_participant_token): <p>This is a header parameter.</p>  <p>The ParticipantToken as obtained from <a href="https://docs.aws.amazon.com/connect/latest/APIReference/API_StartChatContact.html">StartChatContact</a> API response.</p>
    ///   - [`connect_participant(bool)`](crate::client::fluent_builders::CreateParticipantConnection::connect_participant) / [`set_connect_participant(Option<bool>)`](crate::client::fluent_builders::CreateParticipantConnection::set_connect_participant): <p>Amazon Connect Participant is used to mark the participant as connected for message streaming.</p>
    /// - On success, responds with [`CreateParticipantConnectionOutput`](crate::output::CreateParticipantConnectionOutput) with field(s):
    ///   - [`websocket(Option<Websocket>)`](crate::output::CreateParticipantConnectionOutput::websocket): <p>Creates the participant's websocket connection.</p>
    ///   - [`connection_credentials(Option<ConnectionCredentials>)`](crate::output::CreateParticipantConnectionOutput::connection_credentials): <p>Creates the participant's connection credentials. The authentication token associated with the participant's connection.</p>
    /// - On failure, responds with [`SdkError<CreateParticipantConnectionError>`](crate::error::CreateParticipantConnectionError)
    pub fn create_participant_connection(
        &self,
    ) -> crate::client::fluent_builders::CreateParticipantConnection {
        crate::client::fluent_builders::CreateParticipantConnection::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DisconnectParticipant`](crate::client::fluent_builders::DisconnectParticipant) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`client_token(impl Into<String>)`](crate::client::fluent_builders::DisconnectParticipant::client_token) / [`set_client_token(Option<String>)`](crate::client::fluent_builders::DisconnectParticipant::set_client_token): <p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If not provided, the Amazon Web Services SDK populates this field. For more information about idempotency, see <a href="https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/">Making retries safe with idempotent APIs</a>.</p>
    ///   - [`connection_token(impl Into<String>)`](crate::client::fluent_builders::DisconnectParticipant::connection_token) / [`set_connection_token(Option<String>)`](crate::client::fluent_builders::DisconnectParticipant::set_connection_token): <p>The authentication token associated with the participant's connection.</p>
    /// - On success, responds with [`DisconnectParticipantOutput`](crate::output::DisconnectParticipantOutput)

    /// - On failure, responds with [`SdkError<DisconnectParticipantError>`](crate::error::DisconnectParticipantError)
    pub fn disconnect_participant(&self) -> crate::client::fluent_builders::DisconnectParticipant {
        crate::client::fluent_builders::DisconnectParticipant::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetAttachment`](crate::client::fluent_builders::GetAttachment) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`attachment_id(impl Into<String>)`](crate::client::fluent_builders::GetAttachment::attachment_id) / [`set_attachment_id(Option<String>)`](crate::client::fluent_builders::GetAttachment::set_attachment_id): <p>A unique identifier for the attachment.</p>
    ///   - [`connection_token(impl Into<String>)`](crate::client::fluent_builders::GetAttachment::connection_token) / [`set_connection_token(Option<String>)`](crate::client::fluent_builders::GetAttachment::set_connection_token): <p>The authentication token associated with the participant's connection.</p>
    /// - On success, responds with [`GetAttachmentOutput`](crate::output::GetAttachmentOutput) with field(s):
    ///   - [`url(Option<String>)`](crate::output::GetAttachmentOutput::url): <p>This is the pre-signed URL that can be used for uploading the file to Amazon S3 when used in response to <a href="https://docs.aws.amazon.com/connect-participant/latest/APIReference/API_StartAttachmentUpload.html">StartAttachmentUpload</a>.</p>
    ///   - [`url_expiry(Option<String>)`](crate::output::GetAttachmentOutput::url_expiry): <p>The expiration time of the URL in ISO timestamp. It's specified in ISO 8601 format: yyyy-MM-ddThh:mm:ss.SSSZ. For example, 2019-11-08T02:41:28.172Z.</p>
    /// - On failure, responds with [`SdkError<GetAttachmentError>`](crate::error::GetAttachmentError)
    pub fn get_attachment(&self) -> crate::client::fluent_builders::GetAttachment {
        crate::client::fluent_builders::GetAttachment::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetTranscript`](crate::client::fluent_builders::GetTranscript) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::GetTranscript::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`contact_id(impl Into<String>)`](crate::client::fluent_builders::GetTranscript::contact_id) / [`set_contact_id(Option<String>)`](crate::client::fluent_builders::GetTranscript::set_contact_id): <p>The contactId from the current contact chain for which transcript is needed.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::GetTranscript::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::GetTranscript::set_max_results): <p>The maximum number of results to return in the page. Default: 10. </p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::GetTranscript::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::GetTranscript::set_next_token): <p>The pagination token. Use the value returned previously in the next subsequent request to retrieve the next set of results.</p>
    ///   - [`scan_direction(ScanDirection)`](crate::client::fluent_builders::GetTranscript::scan_direction) / [`set_scan_direction(Option<ScanDirection>)`](crate::client::fluent_builders::GetTranscript::set_scan_direction): <p>The direction from StartPosition from which to retrieve message. Default: BACKWARD when no StartPosition is provided, FORWARD with StartPosition. </p>
    ///   - [`sort_order(SortKey)`](crate::client::fluent_builders::GetTranscript::sort_order) / [`set_sort_order(Option<SortKey>)`](crate::client::fluent_builders::GetTranscript::set_sort_order): <p>The sort order for the records. Default: DESCENDING.</p>
    ///   - [`start_position(StartPosition)`](crate::client::fluent_builders::GetTranscript::start_position) / [`set_start_position(Option<StartPosition>)`](crate::client::fluent_builders::GetTranscript::set_start_position): <p>A filtering option for where to start.</p>
    ///   - [`connection_token(impl Into<String>)`](crate::client::fluent_builders::GetTranscript::connection_token) / [`set_connection_token(Option<String>)`](crate::client::fluent_builders::GetTranscript::set_connection_token): <p>The authentication token associated with the participant's connection.</p>
    /// - On success, responds with [`GetTranscriptOutput`](crate::output::GetTranscriptOutput) with field(s):
    ///   - [`initial_contact_id(Option<String>)`](crate::output::GetTranscriptOutput::initial_contact_id): <p>The initial contact ID for the contact. </p>
    ///   - [`transcript(Option<Vec<Item>>)`](crate::output::GetTranscriptOutput::transcript): <p>The list of messages in the session.</p>
    ///   - [`next_token(Option<String>)`](crate::output::GetTranscriptOutput::next_token): <p>The pagination token. Use the value returned previously in the next subsequent request to retrieve the next set of results.</p>
    /// - On failure, responds with [`SdkError<GetTranscriptError>`](crate::error::GetTranscriptError)
    pub fn get_transcript(&self) -> crate::client::fluent_builders::GetTranscript {
        crate::client::fluent_builders::GetTranscript::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`SendEvent`](crate::client::fluent_builders::SendEvent) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`content_type(impl Into<String>)`](crate::client::fluent_builders::SendEvent::content_type) / [`set_content_type(Option<String>)`](crate::client::fluent_builders::SendEvent::set_content_type): <p>The content type of the request. Supported types are:</p>  <ul>   <li> <p>application/vnd.amazonaws.connect.event.typing</p> </li>   <li> <p>application/vnd.amazonaws.connect.event.connection.acknowledged</p> </li>   <li> <p>application/vnd.amazonaws.connect.event.message.delivered</p> </li>   <li> <p>application/vnd.amazonaws.connect.event.message.read</p> </li>  </ul>
    ///   - [`content(impl Into<String>)`](crate::client::fluent_builders::SendEvent::content) / [`set_content(Option<String>)`](crate::client::fluent_builders::SendEvent::set_content): <p>The content of the event to be sent (for example, message text). For content related to message receipts, this is supported in the form of a JSON string.</p>  <p>Sample Content: "{\"messageId\":\"11111111-aaaa-bbbb-cccc-EXAMPLE01234\"}"</p>
    ///   - [`client_token(impl Into<String>)`](crate::client::fluent_builders::SendEvent::client_token) / [`set_client_token(Option<String>)`](crate::client::fluent_builders::SendEvent::set_client_token): <p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If not provided, the Amazon Web Services SDK populates this field. For more information about idempotency, see <a href="https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/">Making retries safe with idempotent APIs</a>.</p>
    ///   - [`connection_token(impl Into<String>)`](crate::client::fluent_builders::SendEvent::connection_token) / [`set_connection_token(Option<String>)`](crate::client::fluent_builders::SendEvent::set_connection_token): <p>The authentication token associated with the participant's connection.</p>
    /// - On success, responds with [`SendEventOutput`](crate::output::SendEventOutput) with field(s):
    ///   - [`id(Option<String>)`](crate::output::SendEventOutput::id): <p>The ID of the response.</p>
    ///   - [`absolute_time(Option<String>)`](crate::output::SendEventOutput::absolute_time): <p>The time when the event was sent.</p>  <p>It's specified in ISO 8601 format: yyyy-MM-ddThh:mm:ss.SSSZ. For example, 2019-11-08T02:41:28.172Z.</p>
    /// - On failure, responds with [`SdkError<SendEventError>`](crate::error::SendEventError)
    pub fn send_event(&self) -> crate::client::fluent_builders::SendEvent {
        crate::client::fluent_builders::SendEvent::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`SendMessage`](crate::client::fluent_builders::SendMessage) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`content_type(impl Into<String>)`](crate::client::fluent_builders::SendMessage::content_type) / [`set_content_type(Option<String>)`](crate::client::fluent_builders::SendMessage::set_content_type): <p>The type of the content. Supported types are <code>text/plain</code>, <code>text/markdown</code>, and <code>application/json</code>.</p>
    ///   - [`content(impl Into<String>)`](crate::client::fluent_builders::SendMessage::content) / [`set_content(Option<String>)`](crate::client::fluent_builders::SendMessage::set_content): <p>The content of the message. </p>  <ul>   <li> <p>For <code>text/plain</code> and <code>text/markdown</code>, the Length Constraints are Minimum of 1, Maximum of 1024. </p> </li>   <li> <p>For <code>application/json</code>, the Length Constraints are Minimum of 1, Maximum of 12000. </p> </li>  </ul>
    ///   - [`client_token(impl Into<String>)`](crate::client::fluent_builders::SendMessage::client_token) / [`set_client_token(Option<String>)`](crate::client::fluent_builders::SendMessage::set_client_token): <p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If not provided, the Amazon Web Services SDK populates this field. For more information about idempotency, see <a href="https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/">Making retries safe with idempotent APIs</a>.</p>
    ///   - [`connection_token(impl Into<String>)`](crate::client::fluent_builders::SendMessage::connection_token) / [`set_connection_token(Option<String>)`](crate::client::fluent_builders::SendMessage::set_connection_token): <p>The authentication token associated with the connection.</p>
    /// - On success, responds with [`SendMessageOutput`](crate::output::SendMessageOutput) with field(s):
    ///   - [`id(Option<String>)`](crate::output::SendMessageOutput::id): <p>The ID of the message.</p>
    ///   - [`absolute_time(Option<String>)`](crate::output::SendMessageOutput::absolute_time): <p>The time when the message was sent.</p>  <p>It's specified in ISO 8601 format: yyyy-MM-ddThh:mm:ss.SSSZ. For example, 2019-11-08T02:41:28.172Z.</p>
    /// - On failure, responds with [`SdkError<SendMessageError>`](crate::error::SendMessageError)
    pub fn send_message(&self) -> crate::client::fluent_builders::SendMessage {
        crate::client::fluent_builders::SendMessage::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`StartAttachmentUpload`](crate::client::fluent_builders::StartAttachmentUpload) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`content_type(impl Into<String>)`](crate::client::fluent_builders::StartAttachmentUpload::content_type) / [`set_content_type(Option<String>)`](crate::client::fluent_builders::StartAttachmentUpload::set_content_type): <p>Describes the MIME file type of the attachment. For a list of supported file types, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/feature-limits.html">Feature specifications</a> in the <i>Amazon Connect Administrator Guide</i>.</p>
    ///   - [`attachment_size_in_bytes(i64)`](crate::client::fluent_builders::StartAttachmentUpload::attachment_size_in_bytes) / [`set_attachment_size_in_bytes(i64)`](crate::client::fluent_builders::StartAttachmentUpload::set_attachment_size_in_bytes): <p>The size of the attachment in bytes.</p>
    ///   - [`attachment_name(impl Into<String>)`](crate::client::fluent_builders::StartAttachmentUpload::attachment_name) / [`set_attachment_name(Option<String>)`](crate::client::fluent_builders::StartAttachmentUpload::set_attachment_name): <p>A case-sensitive name of the attachment being uploaded.</p>
    ///   - [`client_token(impl Into<String>)`](crate::client::fluent_builders::StartAttachmentUpload::client_token) / [`set_client_token(Option<String>)`](crate::client::fluent_builders::StartAttachmentUpload::set_client_token): <p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If not provided, the Amazon Web Services SDK populates this field. For more information about idempotency, see <a href="https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/">Making retries safe with idempotent APIs</a>.</p>
    ///   - [`connection_token(impl Into<String>)`](crate::client::fluent_builders::StartAttachmentUpload::connection_token) / [`set_connection_token(Option<String>)`](crate::client::fluent_builders::StartAttachmentUpload::set_connection_token): <p>The authentication token associated with the participant's connection.</p>
    /// - On success, responds with [`StartAttachmentUploadOutput`](crate::output::StartAttachmentUploadOutput) with field(s):
    ///   - [`attachment_id(Option<String>)`](crate::output::StartAttachmentUploadOutput::attachment_id): <p>A unique identifier for the attachment.</p>
    ///   - [`upload_metadata(Option<UploadMetadata>)`](crate::output::StartAttachmentUploadOutput::upload_metadata): <p>Fields to be used while uploading the attachment.</p>
    /// - On failure, responds with [`SdkError<StartAttachmentUploadError>`](crate::error::StartAttachmentUploadError)
    pub fn start_attachment_upload(&self) -> crate::client::fluent_builders::StartAttachmentUpload {
        crate::client::fluent_builders::StartAttachmentUpload::new(self.handle.clone())
    }
}

impl Client {
    /// Creates a new client from an [SDK Config](aws_types::sdk_config::SdkConfig).
    ///
    /// # Panics
    ///
    /// - This method will panic if the `sdk_config` is missing an async sleep implementation. If you experience this panic, set
    ///     the `sleep_impl` on the Config passed into this function to fix it.
    /// - This method will panic if the `sdk_config` is missing an HTTP connector. If you experience this panic, set the
    ///     `http_connector` on the Config passed into this function to fix it.
    pub fn new(sdk_config: &aws_types::sdk_config::SdkConfig) -> Self {
        Self::from_conf(sdk_config.into())
    }

    /// Creates a new client from the service [`Config`](crate::Config).
    ///
    /// # Panics
    ///
    /// - This method will panic if the `conf` is missing an async sleep implementation. If you experience this panic, set
    ///     the `sleep_impl` on the Config passed into this function to fix it.
    /// - This method will panic if the `conf` is missing an HTTP connector. If you experience this panic, set the
    ///     `http_connector` on the Config passed into this function to fix it.
    pub fn from_conf(conf: crate::Config) -> Self {
        let retry_config = conf
            .retry_config()
            .cloned()
            .unwrap_or_else(aws_smithy_types::retry::RetryConfig::disabled);
        let timeout_config = conf
            .timeout_config()
            .cloned()
            .unwrap_or_else(aws_smithy_types::timeout::TimeoutConfig::disabled);
        let sleep_impl = conf.sleep_impl();
        if (retry_config.has_retry() || timeout_config.has_timeouts()) && sleep_impl.is_none() {
            panic!("An async sleep implementation is required for retries or timeouts to work. \
                                    Set the `sleep_impl` on the Config passed into this function to fix this panic.");
        }

        let connector = conf.http_connector().and_then(|c| {
            let timeout_config = conf
                .timeout_config()
                .cloned()
                .unwrap_or_else(aws_smithy_types::timeout::TimeoutConfig::disabled);
            let connector_settings =
                aws_smithy_client::http_connector::ConnectorSettings::from_timeout_config(
                    &timeout_config,
                );
            c.connector(&connector_settings, conf.sleep_impl())
        });

        let builder = aws_smithy_client::Builder::new();

        let builder = match connector {
            // Use provided connector
            Some(c) => builder.connector(c),
            None => {
                #[cfg(any(feature = "rustls", feature = "native-tls"))]
                {
                    // Use default connector based on enabled features
                    builder.dyn_https_connector(
                        aws_smithy_client::http_connector::ConnectorSettings::from_timeout_config(
                            &timeout_config,
                        ),
                    )
                }
                #[cfg(not(any(feature = "rustls", feature = "native-tls")))]
                {
                    panic!("No HTTP connector was available. Enable the `rustls` or `native-tls` crate feature or set a connector to fix this.");
                }
            }
        };
        let mut builder = builder
            .middleware(aws_smithy_client::erase::DynMiddleware::new(
                crate::middleware::DefaultMiddleware::new(),
            ))
            .retry_config(retry_config.into())
            .operation_timeout_config(timeout_config.into());
        builder.set_sleep_impl(sleep_impl);
        let client = builder.build();

        Self {
            handle: std::sync::Arc::new(Handle { client, conf }),
        }
    }
}

/// Utilities to ergonomically construct a request to the service.
///
/// Fluent builders are created through the [`Client`](crate::client::Client) by calling
/// one if its operation methods. After parameters are set using the builder methods,
/// the `send` method can be called to initiate the request.
pub mod fluent_builders;
