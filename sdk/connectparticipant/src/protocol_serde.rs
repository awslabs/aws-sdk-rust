// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) mod shape_complete_attachment_upload;

pub fn parse_http_error_metadata(
    response: &http::Response<bytes::Bytes>,
) -> Result<
    aws_smithy_types::error::metadata::Builder,
    aws_smithy_json::deserialize::error::DeserializeError,
> {
    crate::json_errors::parse_error_metadata(response.body(), response.headers())
}

pub(crate) mod shape_create_participant_connection;

pub(crate) mod shape_disconnect_participant;

pub(crate) mod shape_get_attachment;

pub(crate) mod shape_get_transcript;

pub(crate) mod shape_send_event;

pub(crate) mod shape_send_message;

pub(crate) mod shape_start_attachment_upload;

pub(crate) fn or_empty_doc(data: &[u8]) -> &[u8] {
    if data.is_empty() {
        b"{}"
    } else {
        data
    }
}

pub(crate) mod shape_access_denied_exception;

pub(crate) mod shape_complete_attachment_upload_input;

pub(crate) mod shape_conflict_exception;

pub(crate) mod shape_create_participant_connection_input;

pub(crate) mod shape_disconnect_participant_input;

pub(crate) mod shape_get_attachment_input;

pub(crate) mod shape_get_transcript_input;

pub(crate) mod shape_internal_server_exception;

pub(crate) mod shape_send_event_input;

pub(crate) mod shape_send_message_input;

pub(crate) mod shape_service_quota_exceeded_exception;

pub(crate) mod shape_start_attachment_upload_input;

pub(crate) mod shape_throttling_exception;

pub(crate) mod shape_validation_exception;

pub(crate) mod shape_connection_credentials;

pub(crate) mod shape_start_position;

pub(crate) mod shape_transcript;

pub(crate) mod shape_upload_metadata;

pub(crate) mod shape_websocket;

pub(crate) mod shape_item;

pub(crate) mod shape_upload_metadata_signed_headers;

pub(crate) mod shape_attachments;

pub(crate) mod shape_message_metadata;

pub(crate) mod shape_attachment_item;

pub(crate) mod shape_receipts;

pub(crate) mod shape_receipt;
