// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`SendMessage`](crate::client::fluent_builders::SendMessage) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`content_type(impl Into<String>)`](crate::client::fluent_builders::SendMessage::content_type) / [`set_content_type(Option<String>)`](crate::client::fluent_builders::SendMessage::set_content_type): <p>The type of the content. Supported types are <code>text/plain</code>, <code>text/markdown</code>, and <code>application/json</code>.</p>
    ///   - [`content(impl Into<String>)`](crate::client::fluent_builders::SendMessage::content) / [`set_content(Option<String>)`](crate::client::fluent_builders::SendMessage::set_content): <p>The content of the message. </p>  <ul>   <li> <p>For <code>text/plain</code> and <code>text/markdown</code>, the Length Constraints are Minimum of 1, Maximum of 1024. </p> </li>   <li> <p>For <code>application/json</code>, the Length Constraints are Minimum of 1, Maximum of 12000. </p> </li>  </ul>
    ///   - [`client_token(impl Into<String>)`](crate::client::fluent_builders::SendMessage::client_token) / [`set_client_token(Option<String>)`](crate::client::fluent_builders::SendMessage::set_client_token): <p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If not provided, the Amazon Web Services SDK populates this field. For more information about idempotency, see <a href="https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/">Making retries safe with idempotent APIs</a>.</p>
    ///   - [`connection_token(impl Into<String>)`](crate::client::fluent_builders::SendMessage::connection_token) / [`set_connection_token(Option<String>)`](crate::client::fluent_builders::SendMessage::set_connection_token): <p>The authentication token associated with the connection.</p>
    /// - On success, responds with [`SendMessageOutput`](crate::output::SendMessageOutput) with field(s):
    ///   - [`id(Option<String>)`](crate::output::SendMessageOutput::id): <p>The ID of the message.</p>
    ///   - [`absolute_time(Option<String>)`](crate::output::SendMessageOutput::absolute_time): <p>The time when the message was sent.</p>  <p>It's specified in ISO 8601 format: yyyy-MM-ddThh:mm:ss.SSSZ. For example, 2019-11-08T02:41:28.172Z.</p>
    /// - On failure, responds with [`SdkError<SendMessageError>`](crate::error::SendMessageError)
    pub fn send_message(&self) -> crate::client::fluent_builders::SendMessage {
        crate::client::fluent_builders::SendMessage::new(self.handle.clone())
    }
}
