// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn parse_http_error_metadata(
    response: &http::Response<bytes::Bytes>,
) -> Result<
    aws_smithy_types::error::metadata::Builder,
    aws_smithy_json::deserialize::error::DeserializeError,
> {
    crate::json_errors::parse_error_metadata(response.body(), response.headers())
}

pub(crate) mod shape_delete_object;

pub(crate) mod shape_get_chunk;

pub(crate) mod shape_get_object_metadata;

pub(crate) mod shape_list_chunks;

pub(crate) mod shape_list_objects;

pub(crate) mod shape_notify_object_complete;

pub(crate) mod shape_notify_object_complete_input;

pub(crate) mod shape_put_chunk;

pub(crate) mod shape_put_chunk_input;

pub(crate) mod shape_put_object;

pub(crate) mod shape_put_object_input;

pub(crate) mod shape_start_object;

pub(crate) fn or_empty_doc(data: &[u8]) -> &[u8] {
    if data.is_empty() {
        b"{}"
    } else {
        data
    }
}

pub(crate) mod shape_access_denied_exception;

pub(crate) mod shape_data_already_exists_exception;

pub(crate) mod shape_get_chunk_output;

pub(crate) mod shape_get_object_metadata_output;

pub(crate) mod shape_illegal_argument_exception;

pub(crate) mod shape_kms_invalid_key_usage_exception;

pub(crate) mod shape_not_readable_input_stream_exception;

pub(crate) mod shape_resource_not_found_exception;

pub(crate) mod shape_retryable_exception;

pub(crate) mod shape_service_internal_exception;

pub(crate) mod shape_service_unavailable_exception;

pub(crate) mod shape_start_object_input;

pub(crate) mod shape_throttling_exception;

pub(crate) mod shape_chunk_list;

pub(crate) mod shape_object_list;

pub(crate) mod shape_backup_object;

pub(crate) mod shape_chunk;
