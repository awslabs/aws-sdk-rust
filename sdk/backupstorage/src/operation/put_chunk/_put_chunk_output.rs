// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct PutChunkOutput {
    /// Chunk checksum
    #[doc(hidden)]
    pub chunk_checksum: std::option::Option<std::string::String>,
    /// Checksum algorithm
    #[doc(hidden)]
    pub chunk_checksum_algorithm: std::option::Option<crate::types::DataChecksumAlgorithm>,
    _request_id: Option<String>,
}
impl PutChunkOutput {
    /// Chunk checksum
    pub fn chunk_checksum(&self) -> std::option::Option<&str> {
        self.chunk_checksum.as_deref()
    }
    /// Checksum algorithm
    pub fn chunk_checksum_algorithm(
        &self,
    ) -> std::option::Option<&crate::types::DataChecksumAlgorithm> {
        self.chunk_checksum_algorithm.as_ref()
    }
}
impl aws_http::request_id::RequestId for PutChunkOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl PutChunkOutput {
    /// Creates a new builder-style object to manufacture [`PutChunkOutput`](crate::operation::put_chunk::PutChunkOutput).
    pub fn builder() -> crate::operation::put_chunk::builders::PutChunkOutputBuilder {
        crate::operation::put_chunk::builders::PutChunkOutputBuilder::default()
    }
}

/// A builder for [`PutChunkOutput`](crate::operation::put_chunk::PutChunkOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct PutChunkOutputBuilder {
    pub(crate) chunk_checksum: std::option::Option<std::string::String>,
    pub(crate) chunk_checksum_algorithm: std::option::Option<crate::types::DataChecksumAlgorithm>,
    _request_id: Option<String>,
}
impl PutChunkOutputBuilder {
    /// Chunk checksum
    pub fn chunk_checksum(mut self, input: impl Into<std::string::String>) -> Self {
        self.chunk_checksum = Some(input.into());
        self
    }
    /// Chunk checksum
    pub fn set_chunk_checksum(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.chunk_checksum = input;
        self
    }
    /// Checksum algorithm
    pub fn chunk_checksum_algorithm(mut self, input: crate::types::DataChecksumAlgorithm) -> Self {
        self.chunk_checksum_algorithm = Some(input);
        self
    }
    /// Checksum algorithm
    pub fn set_chunk_checksum_algorithm(
        mut self,
        input: std::option::Option<crate::types::DataChecksumAlgorithm>,
    ) -> Self {
        self.chunk_checksum_algorithm = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`PutChunkOutput`](crate::operation::put_chunk::PutChunkOutput).
    pub fn build(self) -> crate::operation::put_chunk::PutChunkOutput {
        crate::operation::put_chunk::PutChunkOutput {
            chunk_checksum: self.chunk_checksum,
            chunk_checksum_algorithm: self.chunk_checksum_algorithm,
            _request_id: self._request_id,
        }
    }
}
