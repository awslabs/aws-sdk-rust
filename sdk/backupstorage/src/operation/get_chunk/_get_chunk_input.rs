// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GetChunkInput {
    /// Storage job id
    #[doc(hidden)]
    pub storage_job_id: std::option::Option<std::string::String>,
    /// Chunk token
    #[doc(hidden)]
    pub chunk_token: std::option::Option<std::string::String>,
}
impl GetChunkInput {
    /// Storage job id
    pub fn storage_job_id(&self) -> std::option::Option<&str> {
        self.storage_job_id.as_deref()
    }
    /// Chunk token
    pub fn chunk_token(&self) -> std::option::Option<&str> {
        self.chunk_token.as_deref()
    }
}
impl GetChunkInput {
    /// Creates a new builder-style object to manufacture [`GetChunkInput`](crate::operation::get_chunk::GetChunkInput).
    pub fn builder() -> crate::operation::get_chunk::builders::GetChunkInputBuilder {
        crate::operation::get_chunk::builders::GetChunkInputBuilder::default()
    }
}

/// A builder for [`GetChunkInput`](crate::operation::get_chunk::GetChunkInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct GetChunkInputBuilder {
    pub(crate) storage_job_id: std::option::Option<std::string::String>,
    pub(crate) chunk_token: std::option::Option<std::string::String>,
}
impl GetChunkInputBuilder {
    /// Storage job id
    pub fn storage_job_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.storage_job_id = Some(input.into());
        self
    }
    /// Storage job id
    pub fn set_storage_job_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.storage_job_id = input;
        self
    }
    /// Chunk token
    pub fn chunk_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.chunk_token = Some(input.into());
        self
    }
    /// Chunk token
    pub fn set_chunk_token(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.chunk_token = input;
        self
    }
    /// Consumes the builder and constructs a [`GetChunkInput`](crate::operation::get_chunk::GetChunkInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::get_chunk::GetChunkInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(crate::operation::get_chunk::GetChunkInput {
            storage_job_id: self.storage_job_id,
            chunk_token: self.chunk_token,
        })
    }
}
