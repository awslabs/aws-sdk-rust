// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ListObjectsInput {
    /// Storage job id
    #[doc(hidden)]
    pub storage_job_id: std::option::Option<std::string::String>,
    /// Optional, specifies the starting Object name to list from. Ignored if NextToken is not NULL
    #[doc(hidden)]
    pub starting_object_name: std::option::Option<std::string::String>,
    /// Optional, specifies the starting Object prefix to list from. Ignored if NextToken is not NULL
    #[doc(hidden)]
    pub starting_object_prefix: std::option::Option<std::string::String>,
    /// Maximum objects count
    #[doc(hidden)]
    pub max_results: i32,
    /// Pagination token
    #[doc(hidden)]
    pub next_token: std::option::Option<std::string::String>,
    /// (Optional) Created before filter
    #[doc(hidden)]
    pub created_before: std::option::Option<aws_smithy_types::DateTime>,
    /// (Optional) Created after filter
    #[doc(hidden)]
    pub created_after: std::option::Option<aws_smithy_types::DateTime>,
}
impl ListObjectsInput {
    /// Storage job id
    pub fn storage_job_id(&self) -> std::option::Option<&str> {
        self.storage_job_id.as_deref()
    }
    /// Optional, specifies the starting Object name to list from. Ignored if NextToken is not NULL
    pub fn starting_object_name(&self) -> std::option::Option<&str> {
        self.starting_object_name.as_deref()
    }
    /// Optional, specifies the starting Object prefix to list from. Ignored if NextToken is not NULL
    pub fn starting_object_prefix(&self) -> std::option::Option<&str> {
        self.starting_object_prefix.as_deref()
    }
    /// Maximum objects count
    pub fn max_results(&self) -> i32 {
        self.max_results
    }
    /// Pagination token
    pub fn next_token(&self) -> std::option::Option<&str> {
        self.next_token.as_deref()
    }
    /// (Optional) Created before filter
    pub fn created_before(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.created_before.as_ref()
    }
    /// (Optional) Created after filter
    pub fn created_after(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.created_after.as_ref()
    }
}
impl ListObjectsInput {
    /// Creates a new builder-style object to manufacture [`ListObjectsInput`](crate::operation::list_objects::ListObjectsInput).
    pub fn builder() -> crate::operation::list_objects::builders::ListObjectsInputBuilder {
        crate::operation::list_objects::builders::ListObjectsInputBuilder::default()
    }
}

/// A builder for [`ListObjectsInput`](crate::operation::list_objects::ListObjectsInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ListObjectsInputBuilder {
    pub(crate) storage_job_id: std::option::Option<std::string::String>,
    pub(crate) starting_object_name: std::option::Option<std::string::String>,
    pub(crate) starting_object_prefix: std::option::Option<std::string::String>,
    pub(crate) max_results: std::option::Option<i32>,
    pub(crate) next_token: std::option::Option<std::string::String>,
    pub(crate) created_before: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) created_after: std::option::Option<aws_smithy_types::DateTime>,
}
impl ListObjectsInputBuilder {
    /// Storage job id
    pub fn storage_job_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.storage_job_id = Some(input.into());
        self
    }
    /// Storage job id
    pub fn set_storage_job_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.storage_job_id = input;
        self
    }
    /// Optional, specifies the starting Object name to list from. Ignored if NextToken is not NULL
    pub fn starting_object_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.starting_object_name = Some(input.into());
        self
    }
    /// Optional, specifies the starting Object name to list from. Ignored if NextToken is not NULL
    pub fn set_starting_object_name(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.starting_object_name = input;
        self
    }
    /// Optional, specifies the starting Object prefix to list from. Ignored if NextToken is not NULL
    pub fn starting_object_prefix(mut self, input: impl Into<std::string::String>) -> Self {
        self.starting_object_prefix = Some(input.into());
        self
    }
    /// Optional, specifies the starting Object prefix to list from. Ignored if NextToken is not NULL
    pub fn set_starting_object_prefix(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.starting_object_prefix = input;
        self
    }
    /// Maximum objects count
    pub fn max_results(mut self, input: i32) -> Self {
        self.max_results = Some(input);
        self
    }
    /// Maximum objects count
    pub fn set_max_results(mut self, input: std::option::Option<i32>) -> Self {
        self.max_results = input;
        self
    }
    /// Pagination token
    pub fn next_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.next_token = Some(input.into());
        self
    }
    /// Pagination token
    pub fn set_next_token(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// (Optional) Created before filter
    pub fn created_before(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.created_before = Some(input);
        self
    }
    /// (Optional) Created before filter
    pub fn set_created_before(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.created_before = input;
        self
    }
    /// (Optional) Created after filter
    pub fn created_after(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.created_after = Some(input);
        self
    }
    /// (Optional) Created after filter
    pub fn set_created_after(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.created_after = input;
        self
    }
    /// Consumes the builder and constructs a [`ListObjectsInput`](crate::operation::list_objects::ListObjectsInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::list_objects::ListObjectsInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(crate::operation::list_objects::ListObjectsInput {
            storage_job_id: self.storage_job_id,
            starting_object_name: self.starting_object_name,
            starting_object_prefix: self.starting_object_prefix,
            max_results: self.max_results.unwrap_or_default(),
            next_token: self.next_token,
            created_before: self.created_before,
            created_after: self.created_after,
        })
    }
}
