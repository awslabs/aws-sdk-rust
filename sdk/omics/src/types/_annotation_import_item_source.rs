// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A source for an annotation import job.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AnnotationImportItemSource {
    /// <p>The source file's location in Amazon S3.</p>
    #[doc(hidden)]
    pub source: std::option::Option<std::string::String>,
}
impl AnnotationImportItemSource {
    /// <p>The source file's location in Amazon S3.</p>
    pub fn source(&self) -> std::option::Option<&str> {
        self.source.as_deref()
    }
}
impl AnnotationImportItemSource {
    /// Creates a new builder-style object to manufacture [`AnnotationImportItemSource`](crate::types::AnnotationImportItemSource).
    pub fn builder() -> crate::types::builders::AnnotationImportItemSourceBuilder {
        crate::types::builders::AnnotationImportItemSourceBuilder::default()
    }
}

/// A builder for [`AnnotationImportItemSource`](crate::types::AnnotationImportItemSource).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AnnotationImportItemSourceBuilder {
    pub(crate) source: std::option::Option<std::string::String>,
}
impl AnnotationImportItemSourceBuilder {
    /// <p>The source file's location in Amazon S3.</p>
    pub fn source(mut self, input: impl Into<std::string::String>) -> Self {
        self.source = Some(input.into());
        self
    }
    /// <p>The source file's location in Amazon S3.</p>
    pub fn set_source(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.source = input;
        self
    }
    /// Consumes the builder and constructs a [`AnnotationImportItemSource`](crate::types::AnnotationImportItemSource).
    pub fn build(self) -> crate::types::AnnotationImportItemSource {
        crate::types::AnnotationImportItemSource {
            source: self.source,
        }
    }
}
