// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Formatting options for a VCF file.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct VcfOptions {
    /// <p>The file's ignore qual field setting.</p>
    #[doc(hidden)]
    pub ignore_qual_field: std::option::Option<bool>,
    /// <p>The file's ignore filter field setting.</p>
    #[doc(hidden)]
    pub ignore_filter_field: std::option::Option<bool>,
}
impl VcfOptions {
    /// <p>The file's ignore qual field setting.</p>
    pub fn ignore_qual_field(&self) -> std::option::Option<bool> {
        self.ignore_qual_field
    }
    /// <p>The file's ignore filter field setting.</p>
    pub fn ignore_filter_field(&self) -> std::option::Option<bool> {
        self.ignore_filter_field
    }
}
impl VcfOptions {
    /// Creates a new builder-style object to manufacture [`VcfOptions`](crate::types::VcfOptions).
    pub fn builder() -> crate::types::builders::VcfOptionsBuilder {
        crate::types::builders::VcfOptionsBuilder::default()
    }
}

/// A builder for [`VcfOptions`](crate::types::VcfOptions).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct VcfOptionsBuilder {
    pub(crate) ignore_qual_field: std::option::Option<bool>,
    pub(crate) ignore_filter_field: std::option::Option<bool>,
}
impl VcfOptionsBuilder {
    /// <p>The file's ignore qual field setting.</p>
    pub fn ignore_qual_field(mut self, input: bool) -> Self {
        self.ignore_qual_field = Some(input);
        self
    }
    /// <p>The file's ignore qual field setting.</p>
    pub fn set_ignore_qual_field(mut self, input: std::option::Option<bool>) -> Self {
        self.ignore_qual_field = input;
        self
    }
    /// <p>The file's ignore filter field setting.</p>
    pub fn ignore_filter_field(mut self, input: bool) -> Self {
        self.ignore_filter_field = Some(input);
        self
    }
    /// <p>The file's ignore filter field setting.</p>
    pub fn set_ignore_filter_field(mut self, input: std::option::Option<bool>) -> Self {
        self.ignore_filter_field = input;
        self
    }
    /// Consumes the builder and constructs a [`VcfOptions`](crate::types::VcfOptions).
    pub fn build(self) -> crate::types::VcfOptions {
        crate::types::VcfOptions {
            ignore_qual_field: self.ignore_qual_field,
            ignore_filter_field: self.ignore_filter_field,
        }
    }
}
