// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A imported variant item's source.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct VariantImportItemSource {
    /// <p>The source file's location in Amazon S3.</p>
    #[doc(hidden)]
    pub source: std::option::Option<std::string::String>,
}
impl VariantImportItemSource {
    /// <p>The source file's location in Amazon S3.</p>
    pub fn source(&self) -> std::option::Option<&str> {
        self.source.as_deref()
    }
}
impl VariantImportItemSource {
    /// Creates a new builder-style object to manufacture [`VariantImportItemSource`](crate::types::VariantImportItemSource).
    pub fn builder() -> crate::types::builders::VariantImportItemSourceBuilder {
        crate::types::builders::VariantImportItemSourceBuilder::default()
    }
}

/// A builder for [`VariantImportItemSource`](crate::types::VariantImportItemSource).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct VariantImportItemSourceBuilder {
    pub(crate) source: std::option::Option<std::string::String>,
}
impl VariantImportItemSourceBuilder {
    /// <p>The source file's location in Amazon S3.</p>
    pub fn source(mut self, input: impl Into<std::string::String>) -> Self {
        self.source = Some(input.into());
        self
    }
    /// <p>The source file's location in Amazon S3.</p>
    pub fn set_source(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.source = input;
        self
    }
    /// Consumes the builder and constructs a [`VariantImportItemSource`](crate::types::VariantImportItemSource).
    pub fn build(self) -> crate::types::VariantImportItemSource {
        crate::types::VariantImportItemSource {
            source: self.source,
        }
    }
}
