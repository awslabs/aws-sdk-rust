// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Formatting options for a TSV file.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct TsvOptions {
    /// <p>The file's read options.</p>
    #[doc(hidden)]
    pub read_options: std::option::Option<crate::types::ReadOptions>,
}
impl TsvOptions {
    /// <p>The file's read options.</p>
    pub fn read_options(&self) -> std::option::Option<&crate::types::ReadOptions> {
        self.read_options.as_ref()
    }
}
impl TsvOptions {
    /// Creates a new builder-style object to manufacture [`TsvOptions`](crate::types::TsvOptions).
    pub fn builder() -> crate::types::builders::TsvOptionsBuilder {
        crate::types::builders::TsvOptionsBuilder::default()
    }
}

/// A builder for [`TsvOptions`](crate::types::TsvOptions).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct TsvOptionsBuilder {
    pub(crate) read_options: std::option::Option<crate::types::ReadOptions>,
}
impl TsvOptionsBuilder {
    /// <p>The file's read options.</p>
    pub fn read_options(mut self, input: crate::types::ReadOptions) -> Self {
        self.read_options = Some(input);
        self
    }
    /// <p>The file's read options.</p>
    pub fn set_read_options(
        mut self,
        input: std::option::Option<crate::types::ReadOptions>,
    ) -> Self {
        self.read_options = input;
        self
    }
    /// Consumes the builder and constructs a [`TsvOptions`](crate::types::TsvOptions).
    pub fn build(self) -> crate::types::TsvOptions {
        crate::types::TsvOptions {
            read_options: self.read_options,
        }
    }
}
