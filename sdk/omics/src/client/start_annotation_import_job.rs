// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`StartAnnotationImportJob`](crate::operation::start_annotation_import_job::builders::StartAnnotationImportJobFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`destination_name(impl Into<String>)`](crate::operation::start_annotation_import_job::builders::StartAnnotationImportJobFluentBuilder::destination_name) / [`set_destination_name(Option<String>)`](crate::operation::start_annotation_import_job::builders::StartAnnotationImportJobFluentBuilder::set_destination_name):<br>required: **true**<br><p>A destination annotation store for the job.</p><br>
    ///   - [`role_arn(impl Into<String>)`](crate::operation::start_annotation_import_job::builders::StartAnnotationImportJobFluentBuilder::role_arn) / [`set_role_arn(Option<String>)`](crate::operation::start_annotation_import_job::builders::StartAnnotationImportJobFluentBuilder::set_role_arn):<br>required: **true**<br><p>A service role for the job.</p><br>
    ///   - [`items(AnnotationImportItemSource)`](crate::operation::start_annotation_import_job::builders::StartAnnotationImportJobFluentBuilder::items) / [`set_items(Option<Vec::<AnnotationImportItemSource>>)`](crate::operation::start_annotation_import_job::builders::StartAnnotationImportJobFluentBuilder::set_items):<br>required: **true**<br><p>Items to import.</p><br>
    ///   - [`version_name(impl Into<String>)`](crate::operation::start_annotation_import_job::builders::StartAnnotationImportJobFluentBuilder::version_name) / [`set_version_name(Option<String>)`](crate::operation::start_annotation_import_job::builders::StartAnnotationImportJobFluentBuilder::set_version_name):<br>required: **false**<br><p> The name of the annotation store version. </p><br>
    ///   - [`format_options(FormatOptions)`](crate::operation::start_annotation_import_job::builders::StartAnnotationImportJobFluentBuilder::format_options) / [`set_format_options(Option<FormatOptions>)`](crate::operation::start_annotation_import_job::builders::StartAnnotationImportJobFluentBuilder::set_format_options):<br>required: **false**<br><p>Formatting options for the annotation file.</p><br>
    ///   - [`run_left_normalization(bool)`](crate::operation::start_annotation_import_job::builders::StartAnnotationImportJobFluentBuilder::run_left_normalization) / [`set_run_left_normalization(Option<bool>)`](crate::operation::start_annotation_import_job::builders::StartAnnotationImportJobFluentBuilder::set_run_left_normalization):<br>required: **false**<br><p>The job's left normalization setting.</p><br>
    ///   - [`annotation_fields(impl Into<String>, impl Into<String>)`](crate::operation::start_annotation_import_job::builders::StartAnnotationImportJobFluentBuilder::annotation_fields) / [`set_annotation_fields(Option<HashMap::<String, String>>)`](crate::operation::start_annotation_import_job::builders::StartAnnotationImportJobFluentBuilder::set_annotation_fields):<br>required: **false**<br><p> The annotation schema generated by the parsed annotation data. </p><br>
    /// - On success, responds with [`StartAnnotationImportJobOutput`](crate::operation::start_annotation_import_job::StartAnnotationImportJobOutput) with field(s):
    ///   - [`job_id(String)`](crate::operation::start_annotation_import_job::StartAnnotationImportJobOutput::job_id): <p>The job's ID.</p>
    /// - On failure, responds with [`SdkError<StartAnnotationImportJobError>`](crate::operation::start_annotation_import_job::StartAnnotationImportJobError)
    pub fn start_annotation_import_job(&self) -> crate::operation::start_annotation_import_job::builders::StartAnnotationImportJobFluentBuilder {
        crate::operation::start_annotation_import_job::builders::StartAnnotationImportJobFluentBuilder::new(self.handle.clone())
    }
}
