// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetAnnotationImportJob`](crate::operation::get_annotation_import_job::builders::GetAnnotationImportJobFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`job_id(impl Into<String>)`](crate::operation::get_annotation_import_job::builders::GetAnnotationImportJobFluentBuilder::job_id) / [`set_job_id(Option<String>)`](crate::operation::get_annotation_import_job::builders::GetAnnotationImportJobFluentBuilder::set_job_id):<br>required: **true**<br><p>The job's ID.</p><br>
    /// - On success, responds with [`GetAnnotationImportJobOutput`](crate::operation::get_annotation_import_job::GetAnnotationImportJobOutput) with field(s):
    ///   - [`id(String)`](crate::operation::get_annotation_import_job::GetAnnotationImportJobOutput::id): <p>The job's ID.</p>
    ///   - [`destination_name(String)`](crate::operation::get_annotation_import_job::GetAnnotationImportJobOutput::destination_name): <p>The job's destination annotation store.</p>
    ///   - [`version_name(String)`](crate::operation::get_annotation_import_job::GetAnnotationImportJobOutput::version_name): <p> The name of the annotation store version. </p>
    ///   - [`role_arn(String)`](crate::operation::get_annotation_import_job::GetAnnotationImportJobOutput::role_arn): <p>The job's service role ARN.</p>
    ///   - [`status(JobStatus)`](crate::operation::get_annotation_import_job::GetAnnotationImportJobOutput::status): <p>The job's status.</p>
    ///   - [`status_message(String)`](crate::operation::get_annotation_import_job::GetAnnotationImportJobOutput::status_message): <p>The job's status message.</p>
    ///   - [`creation_time(DateTime)`](crate::operation::get_annotation_import_job::GetAnnotationImportJobOutput::creation_time): <p>When the job was created.</p>
    ///   - [`update_time(DateTime)`](crate::operation::get_annotation_import_job::GetAnnotationImportJobOutput::update_time): <p>When the job was updated.</p>
    ///   - [`completion_time(DateTime)`](crate::operation::get_annotation_import_job::GetAnnotationImportJobOutput::completion_time): <p>When the job completed.</p>
    ///   - [`items(Vec::<AnnotationImportItemDetail>)`](crate::operation::get_annotation_import_job::GetAnnotationImportJobOutput::items): <p>The job's imported items.</p>
    ///   - [`run_left_normalization(bool)`](crate::operation::get_annotation_import_job::GetAnnotationImportJobOutput::run_left_normalization): <p>The job's left normalization setting.</p>
    ///   - [`format_options(Option<FormatOptions>)`](crate::operation::get_annotation_import_job::GetAnnotationImportJobOutput::format_options): <p>Formatting options for a file.</p>
    ///   - [`annotation_fields(Option<HashMap::<String, String>>)`](crate::operation::get_annotation_import_job::GetAnnotationImportJobOutput::annotation_fields): <p> The annotation schema generated by the parsed annotation data. </p>
    /// - On failure, responds with [`SdkError<GetAnnotationImportJobError>`](crate::operation::get_annotation_import_job::GetAnnotationImportJobError)
    pub fn get_annotation_import_job(&self) -> crate::operation::get_annotation_import_job::builders::GetAnnotationImportJobFluentBuilder {
        crate::operation::get_annotation_import_job::builders::GetAnnotationImportJobFluentBuilder::new(self.handle.clone())
    }
}
