// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateAnnotationStore`](crate::operation::create_annotation_store::builders::CreateAnnotationStoreFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`reference(ReferenceItem)`](crate::operation::create_annotation_store::builders::CreateAnnotationStoreFluentBuilder::reference) / [`set_reference(Option<ReferenceItem>)`](crate::operation::create_annotation_store::builders::CreateAnnotationStoreFluentBuilder::set_reference):<br>required: **false**<br><p>The genome reference for the store's annotations.</p><br>
    ///   - [`name(impl Into<String>)`](crate::operation::create_annotation_store::builders::CreateAnnotationStoreFluentBuilder::name) / [`set_name(Option<String>)`](crate::operation::create_annotation_store::builders::CreateAnnotationStoreFluentBuilder::set_name):<br>required: **false**<br><p>A name for the store.</p><br>
    ///   - [`description(impl Into<String>)`](crate::operation::create_annotation_store::builders::CreateAnnotationStoreFluentBuilder::description) / [`set_description(Option<String>)`](crate::operation::create_annotation_store::builders::CreateAnnotationStoreFluentBuilder::set_description):<br>required: **false**<br><p>A description for the store.</p><br>
    ///   - [`tags(impl Into<String>, impl Into<String>)`](crate::operation::create_annotation_store::builders::CreateAnnotationStoreFluentBuilder::tags) / [`set_tags(Option<HashMap::<String, String>>)`](crate::operation::create_annotation_store::builders::CreateAnnotationStoreFluentBuilder::set_tags):<br>required: **false**<br><p>Tags for the store.</p><br>
    ///   - [`version_name(impl Into<String>)`](crate::operation::create_annotation_store::builders::CreateAnnotationStoreFluentBuilder::version_name) / [`set_version_name(Option<String>)`](crate::operation::create_annotation_store::builders::CreateAnnotationStoreFluentBuilder::set_version_name):<br>required: **false**<br><p> The name given to an annotation store version to distinguish it from other versions. </p><br>
    ///   - [`sse_config(SseConfig)`](crate::operation::create_annotation_store::builders::CreateAnnotationStoreFluentBuilder::sse_config) / [`set_sse_config(Option<SseConfig>)`](crate::operation::create_annotation_store::builders::CreateAnnotationStoreFluentBuilder::set_sse_config):<br>required: **false**<br><p>Server-side encryption (SSE) settings for the store.</p><br>
    ///   - [`store_format(StoreFormat)`](crate::operation::create_annotation_store::builders::CreateAnnotationStoreFluentBuilder::store_format) / [`set_store_format(Option<StoreFormat>)`](crate::operation::create_annotation_store::builders::CreateAnnotationStoreFluentBuilder::set_store_format):<br>required: **true**<br><p>The annotation file format of the store.</p><br>
    ///   - [`store_options(StoreOptions)`](crate::operation::create_annotation_store::builders::CreateAnnotationStoreFluentBuilder::store_options) / [`set_store_options(Option<StoreOptions>)`](crate::operation::create_annotation_store::builders::CreateAnnotationStoreFluentBuilder::set_store_options):<br>required: **false**<br><p>File parsing options for the annotation store.</p><br>
    /// - On success, responds with [`CreateAnnotationStoreOutput`](crate::operation::create_annotation_store::CreateAnnotationStoreOutput) with field(s):
    ///   - [`id(String)`](crate::operation::create_annotation_store::CreateAnnotationStoreOutput::id): <p>The store's ID.</p>
    ///   - [`reference(Option<ReferenceItem>)`](crate::operation::create_annotation_store::CreateAnnotationStoreOutput::reference): <p>The store's genome reference. Required for all stores except TSV format with generic annotations.</p>
    ///   - [`store_format(Option<StoreFormat>)`](crate::operation::create_annotation_store::CreateAnnotationStoreOutput::store_format): <p>The annotation file format of the store.</p>
    ///   - [`store_options(Option<StoreOptions>)`](crate::operation::create_annotation_store::CreateAnnotationStoreOutput::store_options): <p>The store's file parsing options.</p>
    ///   - [`status(StoreStatus)`](crate::operation::create_annotation_store::CreateAnnotationStoreOutput::status): <p>The store's status.</p>
    ///   - [`name(String)`](crate::operation::create_annotation_store::CreateAnnotationStoreOutput::name): <p>The store's name.</p>
    ///   - [`version_name(String)`](crate::operation::create_annotation_store::CreateAnnotationStoreOutput::version_name): <p> The name given to an annotation store version to distinguish it from other versions. </p>
    ///   - [`creation_time(DateTime)`](crate::operation::create_annotation_store::CreateAnnotationStoreOutput::creation_time): <p>When the store was created.</p>
    /// - On failure, responds with [`SdkError<CreateAnnotationStoreError>`](crate::operation::create_annotation_store::CreateAnnotationStoreError)
    pub fn create_annotation_store(&self) -> crate::operation::create_annotation_store::builders::CreateAnnotationStoreFluentBuilder {
        crate::operation::create_annotation_store::builders::CreateAnnotationStoreFluentBuilder::new(self.handle.clone())
    }
}
