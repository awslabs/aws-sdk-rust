// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`StartVariantImportJob`](crate::client::fluent_builders::StartVariantImportJob) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`destination_name(impl Into<String>)`](crate::client::fluent_builders::StartVariantImportJob::destination_name) / [`set_destination_name(Option<String>)`](crate::client::fluent_builders::StartVariantImportJob::set_destination_name): <p>The destination variant store for the job.</p>
    ///   - [`role_arn(impl Into<String>)`](crate::client::fluent_builders::StartVariantImportJob::role_arn) / [`set_role_arn(Option<String>)`](crate::client::fluent_builders::StartVariantImportJob::set_role_arn): <p>A service role for the job.</p>
    ///   - [`items(Vec<VariantImportItemSource>)`](crate::client::fluent_builders::StartVariantImportJob::items) / [`set_items(Option<Vec<VariantImportItemSource>>)`](crate::client::fluent_builders::StartVariantImportJob::set_items): <p>Items to import.</p>
    ///   - [`run_left_normalization(bool)`](crate::client::fluent_builders::StartVariantImportJob::run_left_normalization) / [`set_run_left_normalization(Option<bool>)`](crate::client::fluent_builders::StartVariantImportJob::set_run_left_normalization): <p>The job's left normalization setting.</p>
    /// - On success, responds with [`StartVariantImportJobOutput`](crate::output::StartVariantImportJobOutput) with field(s):
    ///   - [`job_id(Option<String>)`](crate::output::StartVariantImportJobOutput::job_id): <p>The job's ID.</p>
    /// - On failure, responds with [`SdkError<StartVariantImportJobError>`](crate::error::StartVariantImportJobError)
    pub fn start_variant_import_job(
        &self,
    ) -> crate::client::fluent_builders::StartVariantImportJob {
        crate::client::fluent_builders::StartVariantImportJob::new(self.handle.clone())
    }
}
