// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetAnnotationStore`](crate::client::fluent_builders::GetAnnotationStore) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(impl Into<String>)`](crate::client::fluent_builders::GetAnnotationStore::name) / [`set_name(Option<String>)`](crate::client::fluent_builders::GetAnnotationStore::set_name): <p>The store's name.</p>
    /// - On success, responds with [`GetAnnotationStoreOutput`](crate::output::GetAnnotationStoreOutput) with field(s):
    ///   - [`id(Option<String>)`](crate::output::GetAnnotationStoreOutput::id): <p>The store's ID.</p>
    ///   - [`reference(Option<ReferenceItem>)`](crate::output::GetAnnotationStoreOutput::reference): <p>The store's genome reference.</p>
    ///   - [`status(Option<StoreStatus>)`](crate::output::GetAnnotationStoreOutput::status): <p>The store's status.</p>
    ///   - [`store_arn(Option<String>)`](crate::output::GetAnnotationStoreOutput::store_arn): <p>The store's ARN.</p>
    ///   - [`name(Option<String>)`](crate::output::GetAnnotationStoreOutput::name): <p>The store's name.</p>
    ///   - [`description(Option<String>)`](crate::output::GetAnnotationStoreOutput::description): <p>The store's description.</p>
    ///   - [`sse_config(Option<SseConfig>)`](crate::output::GetAnnotationStoreOutput::sse_config): <p>The store's server-side encryption (SSE) settings.</p>
    ///   - [`creation_time(Option<DateTime>)`](crate::output::GetAnnotationStoreOutput::creation_time): <p>When the store was created.</p>
    ///   - [`update_time(Option<DateTime>)`](crate::output::GetAnnotationStoreOutput::update_time): <p>When the store was updated.</p>
    ///   - [`tags(Option<HashMap<String, String>>)`](crate::output::GetAnnotationStoreOutput::tags): <p>The store's tags.</p>
    ///   - [`store_options(Option<StoreOptions>)`](crate::output::GetAnnotationStoreOutput::store_options): <p>The store's parsing options.</p>
    ///   - [`store_format(Option<StoreFormat>)`](crate::output::GetAnnotationStoreOutput::store_format): <p>The store's annotation file format.</p>
    ///   - [`status_message(Option<String>)`](crate::output::GetAnnotationStoreOutput::status_message): <p>A status message.</p>
    ///   - [`store_size_bytes(Option<i64>)`](crate::output::GetAnnotationStoreOutput::store_size_bytes): <p>The store's size in bytes.</p>
    /// - On failure, responds with [`SdkError<GetAnnotationStoreError>`](crate::error::GetAnnotationStoreError)
    pub fn get_annotation_store(&self) -> crate::client::fluent_builders::GetAnnotationStore {
        crate::client::fluent_builders::GetAnnotationStore::new(self.handle.clone())
    }
}
