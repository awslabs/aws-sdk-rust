// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetRun`](crate::client::fluent_builders::GetRun) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`id(impl Into<String>)`](crate::client::fluent_builders::GetRun::id) / [`set_id(Option<String>)`](crate::client::fluent_builders::GetRun::set_id): <p>The run's ID.</p>
    ///   - [`export(Vec<RunExport>)`](crate::client::fluent_builders::GetRun::export) / [`set_export(Option<Vec<RunExport>>)`](crate::client::fluent_builders::GetRun::set_export): <p>The run's export format.</p>
    /// - On success, responds with [`GetRunOutput`](crate::output::GetRunOutput) with field(s):
    ///   - [`arn(Option<String>)`](crate::output::GetRunOutput::arn): <p>The run's ARN.</p>
    ///   - [`id(Option<String>)`](crate::output::GetRunOutput::id): <p>The run's ID.</p>
    ///   - [`status(Option<RunStatus>)`](crate::output::GetRunOutput::status): <p>The run's status.</p>
    ///   - [`workflow_id(Option<String>)`](crate::output::GetRunOutput::workflow_id): <p>The run's workflow ID.</p>
    ///   - [`workflow_type(Option<WorkflowType>)`](crate::output::GetRunOutput::workflow_type): <p>The run's workflow type.</p>
    ///   - [`run_id(Option<String>)`](crate::output::GetRunOutput::run_id): <p>The run's ID.</p>
    ///   - [`role_arn(Option<String>)`](crate::output::GetRunOutput::role_arn): <p>The run's service role ARN.</p>
    ///   - [`name(Option<String>)`](crate::output::GetRunOutput::name): <p>The run's name.</p>
    ///   - [`run_group_id(Option<String>)`](crate::output::GetRunOutput::run_group_id): <p>The run's group ID.</p>
    ///   - [`priority(Option<i32>)`](crate::output::GetRunOutput::priority): <p>The run's priority.</p>
    ///   - [`definition(Option<String>)`](crate::output::GetRunOutput::definition): <p>The run's definition.</p>
    ///   - [`digest(Option<String>)`](crate::output::GetRunOutput::digest): <p>The run's digest.</p>
    ///   - [`parameters(Option<Document>)`](crate::output::GetRunOutput::parameters): <p>The run's parameters.</p>
    ///   - [`storage_capacity(Option<i32>)`](crate::output::GetRunOutput::storage_capacity): <p>The run's storage capacity.</p>
    ///   - [`output_uri(Option<String>)`](crate::output::GetRunOutput::output_uri): <p>The run's output URI.</p>
    ///   - [`log_level(Option<RunLogLevel>)`](crate::output::GetRunOutput::log_level): <p>The run's log level.</p>
    ///   - [`resource_digests(Option<HashMap<String, String>>)`](crate::output::GetRunOutput::resource_digests): <p>The run's resource digests.</p>
    ///   - [`started_by(Option<String>)`](crate::output::GetRunOutput::started_by): <p>Who started the run.</p>
    ///   - [`creation_time(Option<DateTime>)`](crate::output::GetRunOutput::creation_time): <p>When the run was created.</p>
    ///   - [`start_time(Option<DateTime>)`](crate::output::GetRunOutput::start_time): <p>When the run started.</p>
    ///   - [`stop_time(Option<DateTime>)`](crate::output::GetRunOutput::stop_time): <p>The run's stop time.</p>
    ///   - [`status_message(Option<String>)`](crate::output::GetRunOutput::status_message): <p>The run's status message.</p>
    ///   - [`tags(Option<HashMap<String, String>>)`](crate::output::GetRunOutput::tags): <p>The run's tags.</p>
    /// - On failure, responds with [`SdkError<GetRunError>`](crate::error::GetRunError)
    pub fn get_run(&self) -> crate::client::fluent_builders::GetRun {
        crate::client::fluent_builders::GetRun::new(self.handle.clone())
    }
}
