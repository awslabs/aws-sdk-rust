// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`AbortMultipartReadSetUpload`](crate::operation::abort_multipart_read_set_upload::builders::AbortMultipartReadSetUploadFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`sequence_store_id(impl Into<String>)`](crate::operation::abort_multipart_read_set_upload::builders::AbortMultipartReadSetUploadFluentBuilder::sequence_store_id) / [`set_sequence_store_id(Option<String>)`](crate::operation::abort_multipart_read_set_upload::builders::AbortMultipartReadSetUploadFluentBuilder::set_sequence_store_id):<br>required: **true**<br><p> The sequence store ID for the store involved in the multipart upload. </p><br>
    ///   - [`upload_id(impl Into<String>)`](crate::operation::abort_multipart_read_set_upload::builders::AbortMultipartReadSetUploadFluentBuilder::upload_id) / [`set_upload_id(Option<String>)`](crate::operation::abort_multipart_read_set_upload::builders::AbortMultipartReadSetUploadFluentBuilder::set_upload_id):<br>required: **true**<br><p> The ID for the multipart upload. </p><br>
    /// - On success, responds with [`AbortMultipartReadSetUploadOutput`](crate::operation::abort_multipart_read_set_upload::AbortMultipartReadSetUploadOutput)
    /// - On failure, responds with [`SdkError<AbortMultipartReadSetUploadError>`](crate::operation::abort_multipart_read_set_upload::AbortMultipartReadSetUploadError)
    pub fn abort_multipart_read_set_upload(
        &self,
    ) -> crate::operation::abort_multipart_read_set_upload::builders::AbortMultipartReadSetUploadFluentBuilder {
        crate::operation::abort_multipart_read_set_upload::builders::AbortMultipartReadSetUploadFluentBuilder::new(self.handle.clone())
    }
}
