// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateRunGroup`](crate::operation::create_run_group::builders::CreateRunGroupFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(impl Into<String>)`](crate::operation::create_run_group::builders::CreateRunGroupFluentBuilder::name) / [`set_name(Option<String>)`](crate::operation::create_run_group::builders::CreateRunGroupFluentBuilder::set_name):<br>required: **false**<br><p>A name for the group.</p><br>
    ///   - [`max_cpus(i32)`](crate::operation::create_run_group::builders::CreateRunGroupFluentBuilder::max_cpus) / [`set_max_cpus(Option<i32>)`](crate::operation::create_run_group::builders::CreateRunGroupFluentBuilder::set_max_cpus):<br>required: **false**<br><p>The maximum number of CPUs to use in the group.</p><br>
    ///   - [`max_runs(i32)`](crate::operation::create_run_group::builders::CreateRunGroupFluentBuilder::max_runs) / [`set_max_runs(Option<i32>)`](crate::operation::create_run_group::builders::CreateRunGroupFluentBuilder::set_max_runs):<br>required: **false**<br><p>The maximum number of concurrent runs for the group.</p><br>
    ///   - [`max_duration(i32)`](crate::operation::create_run_group::builders::CreateRunGroupFluentBuilder::max_duration) / [`set_max_duration(Option<i32>)`](crate::operation::create_run_group::builders::CreateRunGroupFluentBuilder::set_max_duration):<br>required: **false**<br><p>A maximum run time for the group in minutes.</p><br>
    ///   - [`tags(impl Into<String>, impl Into<String>)`](crate::operation::create_run_group::builders::CreateRunGroupFluentBuilder::tags) / [`set_tags(Option<HashMap::<String, String>>)`](crate::operation::create_run_group::builders::CreateRunGroupFluentBuilder::set_tags):<br>required: **false**<br><p>Tags for the group.</p><br>
    ///   - [`request_id(impl Into<String>)`](crate::operation::create_run_group::builders::CreateRunGroupFluentBuilder::request_id) / [`set_request_id(Option<String>)`](crate::operation::create_run_group::builders::CreateRunGroupFluentBuilder::set_request_id):<br>required: **true**<br><p>To ensure that requests don't run multiple times, specify a unique ID for each request.</p><br>
    ///   - [`max_gpus(i32)`](crate::operation::create_run_group::builders::CreateRunGroupFluentBuilder::max_gpus) / [`set_max_gpus(Option<i32>)`](crate::operation::create_run_group::builders::CreateRunGroupFluentBuilder::set_max_gpus):<br>required: **false**<br><p> The maximum GPUs that can be used by a run group. </p><br>
    /// - On success, responds with [`CreateRunGroupOutput`](crate::operation::create_run_group::CreateRunGroupOutput) with field(s):
    ///   - [`arn(Option<String>)`](crate::operation::create_run_group::CreateRunGroupOutput::arn): <p>The group's ARN.</p>
    ///   - [`id(Option<String>)`](crate::operation::create_run_group::CreateRunGroupOutput::id): <p>The group's ID.</p>
    ///   - [`tags(Option<HashMap::<String, String>>)`](crate::operation::create_run_group::CreateRunGroupOutput::tags): <p>Tags for the run group.</p>
    /// - On failure, responds with [`SdkError<CreateRunGroupError>`](crate::operation::create_run_group::CreateRunGroupError)
    pub fn create_run_group(&self) -> crate::operation::create_run_group::builders::CreateRunGroupFluentBuilder {
        crate::operation::create_run_group::builders::CreateRunGroupFluentBuilder::new(self.handle.clone())
    }
}
