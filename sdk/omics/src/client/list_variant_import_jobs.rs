// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListVariantImportJobs`](crate::client::fluent_builders::ListVariantImportJobs) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListVariantImportJobs::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListVariantImportJobs::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListVariantImportJobs::set_max_results): <p>The maximum number of import jobs to return in one page of results.</p>
    ///   - [`ids(Vec<String>)`](crate::client::fluent_builders::ListVariantImportJobs::ids) / [`set_ids(Option<Vec<String>>)`](crate::client::fluent_builders::ListVariantImportJobs::set_ids): <p>A list of job IDs.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListVariantImportJobs::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListVariantImportJobs::set_next_token): <p>Specify the pagination token from a previous request to retrieve the next page of results.</p>
    ///   - [`filter(ListVariantImportJobsFilter)`](crate::client::fluent_builders::ListVariantImportJobs::filter) / [`set_filter(Option<ListVariantImportJobsFilter>)`](crate::client::fluent_builders::ListVariantImportJobs::set_filter): <p>A filter to apply to the list.</p>
    /// - On success, responds with [`ListVariantImportJobsOutput`](crate::output::ListVariantImportJobsOutput) with field(s):
    ///   - [`variant_import_jobs(Option<Vec<VariantImportJobItem>>)`](crate::output::ListVariantImportJobsOutput::variant_import_jobs): <p>A list of jobs.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListVariantImportJobsOutput::next_token): <p>A pagination token that's included if more results are available.</p>
    /// - On failure, responds with [`SdkError<ListVariantImportJobsError>`](crate::error::ListVariantImportJobsError)
    pub fn list_variant_import_jobs(
        &self,
    ) -> crate::client::fluent_builders::ListVariantImportJobs {
        crate::client::fluent_builders::ListVariantImportJobs::new(self.handle.clone())
    }
}
