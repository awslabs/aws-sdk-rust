// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListReadSets`](crate::client::fluent_builders::ListReadSets) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListReadSets::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`sequence_store_id(impl Into<String>)`](crate::client::fluent_builders::ListReadSets::sequence_store_id) / [`set_sequence_store_id(Option<String>)`](crate::client::fluent_builders::ListReadSets::set_sequence_store_id): <p>The jobs' sequence store ID.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListReadSets::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListReadSets::set_max_results): <p>The maximum number of read sets to return in one page of results.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListReadSets::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListReadSets::set_next_token): <p>Specify the pagination token from a previous request to retrieve the next page of results.</p>
    ///   - [`filter(ReadSetFilter)`](crate::client::fluent_builders::ListReadSets::filter) / [`set_filter(Option<ReadSetFilter>)`](crate::client::fluent_builders::ListReadSets::set_filter): <p>A filter to apply to the list.</p>
    /// - On success, responds with [`ListReadSetsOutput`](crate::output::ListReadSetsOutput) with field(s):
    ///   - [`next_token(Option<String>)`](crate::output::ListReadSetsOutput::next_token): <p>A pagination token that's included if more results are available.</p>
    ///   - [`read_sets(Option<Vec<ReadSetListItem>>)`](crate::output::ListReadSetsOutput::read_sets): <p>A list of read sets.</p>
    /// - On failure, responds with [`SdkError<ListReadSetsError>`](crate::error::ListReadSetsError)
    pub fn list_read_sets(&self) -> crate::client::fluent_builders::ListReadSets {
        crate::client::fluent_builders::ListReadSets::new(self.handle.clone())
    }
}
