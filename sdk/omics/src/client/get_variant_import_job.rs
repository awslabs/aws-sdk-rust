// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetVariantImportJob`](crate::client::fluent_builders::GetVariantImportJob) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`job_id(impl Into<String>)`](crate::client::fluent_builders::GetVariantImportJob::job_id) / [`set_job_id(Option<String>)`](crate::client::fluent_builders::GetVariantImportJob::set_job_id): <p>The job's ID.</p>
    /// - On success, responds with [`GetVariantImportJobOutput`](crate::output::GetVariantImportJobOutput) with field(s):
    ///   - [`id(Option<String>)`](crate::output::GetVariantImportJobOutput::id): <p>The job's ID.</p>
    ///   - [`destination_name(Option<String>)`](crate::output::GetVariantImportJobOutput::destination_name): <p>The job's destination variant store.</p>
    ///   - [`role_arn(Option<String>)`](crate::output::GetVariantImportJobOutput::role_arn): <p>The job's service role ARN.</p>
    ///   - [`status(Option<JobStatus>)`](crate::output::GetVariantImportJobOutput::status): <p>The job's status.</p>
    ///   - [`status_message(Option<String>)`](crate::output::GetVariantImportJobOutput::status_message): <p>The job's status message.</p>
    ///   - [`creation_time(Option<DateTime>)`](crate::output::GetVariantImportJobOutput::creation_time): <p>When the job was created.</p>
    ///   - [`update_time(Option<DateTime>)`](crate::output::GetVariantImportJobOutput::update_time): <p>When the job was updated.</p>
    ///   - [`completion_time(Option<DateTime>)`](crate::output::GetVariantImportJobOutput::completion_time): <p>When the job completed.</p>
    ///   - [`items(Option<Vec<VariantImportItemDetail>>)`](crate::output::GetVariantImportJobOutput::items): <p>The job's items.</p>
    ///   - [`run_left_normalization(bool)`](crate::output::GetVariantImportJobOutput::run_left_normalization): <p>The job's left normalization setting.</p>
    /// - On failure, responds with [`SdkError<GetVariantImportJobError>`](crate::error::GetVariantImportJobError)
    pub fn get_variant_import_job(&self) -> crate::client::fluent_builders::GetVariantImportJob {
        crate::client::fluent_builders::GetVariantImportJob::new(self.handle.clone())
    }
}
