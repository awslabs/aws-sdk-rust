// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListSequenceStores`](crate::client::fluent_builders::ListSequenceStores) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListSequenceStores::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListSequenceStores::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListSequenceStores::set_max_results): <p>The maximum number of stores to return in one page of results.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListSequenceStores::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListSequenceStores::set_next_token): <p>Specify the pagination token from a previous request to retrieve the next page of results.</p>
    ///   - [`filter(SequenceStoreFilter)`](crate::client::fluent_builders::ListSequenceStores::filter) / [`set_filter(Option<SequenceStoreFilter>)`](crate::client::fluent_builders::ListSequenceStores::set_filter): <p>A filter to apply to the list.</p>
    /// - On success, responds with [`ListSequenceStoresOutput`](crate::output::ListSequenceStoresOutput) with field(s):
    ///   - [`next_token(Option<String>)`](crate::output::ListSequenceStoresOutput::next_token): <p>A pagination token that's included if more results are available.</p>
    ///   - [`sequence_stores(Option<Vec<SequenceStoreDetail>>)`](crate::output::ListSequenceStoresOutput::sequence_stores): <p>A list of sequence stores.</p>
    /// - On failure, responds with [`SdkError<ListSequenceStoresError>`](crate::error::ListSequenceStoresError)
    pub fn list_sequence_stores(&self) -> crate::client::fluent_builders::ListSequenceStores {
        crate::client::fluent_builders::ListSequenceStores::new(self.handle.clone())
    }
}
