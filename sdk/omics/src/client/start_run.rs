// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`StartRun`](crate::client::fluent_builders::StartRun) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`workflow_id(impl Into<String>)`](crate::client::fluent_builders::StartRun::workflow_id) / [`set_workflow_id(Option<String>)`](crate::client::fluent_builders::StartRun::set_workflow_id): <p>The run's workflow ID.</p>
    ///   - [`workflow_type(WorkflowType)`](crate::client::fluent_builders::StartRun::workflow_type) / [`set_workflow_type(Option<WorkflowType>)`](crate::client::fluent_builders::StartRun::set_workflow_type): <p>The run's workflows type.</p>
    ///   - [`run_id(impl Into<String>)`](crate::client::fluent_builders::StartRun::run_id) / [`set_run_id(Option<String>)`](crate::client::fluent_builders::StartRun::set_run_id): <p>The run's ID.</p>
    ///   - [`role_arn(impl Into<String>)`](crate::client::fluent_builders::StartRun::role_arn) / [`set_role_arn(Option<String>)`](crate::client::fluent_builders::StartRun::set_role_arn): <p>A service role for the run.</p>
    ///   - [`name(impl Into<String>)`](crate::client::fluent_builders::StartRun::name) / [`set_name(Option<String>)`](crate::client::fluent_builders::StartRun::set_name): <p>A name for the run.</p>
    ///   - [`run_group_id(impl Into<String>)`](crate::client::fluent_builders::StartRun::run_group_id) / [`set_run_group_id(Option<String>)`](crate::client::fluent_builders::StartRun::set_run_group_id): <p>The run's group ID.</p>
    ///   - [`priority(i32)`](crate::client::fluent_builders::StartRun::priority) / [`set_priority(Option<i32>)`](crate::client::fluent_builders::StartRun::set_priority): <p>A priority for the run.</p>
    ///   - [`parameters(Document)`](crate::client::fluent_builders::StartRun::parameters) / [`set_parameters(Option<Document>)`](crate::client::fluent_builders::StartRun::set_parameters): <p>Parameters for the run.</p>
    ///   - [`storage_capacity(i32)`](crate::client::fluent_builders::StartRun::storage_capacity) / [`set_storage_capacity(Option<i32>)`](crate::client::fluent_builders::StartRun::set_storage_capacity): <p>A storage capacity for the run.</p>
    ///   - [`output_uri(impl Into<String>)`](crate::client::fluent_builders::StartRun::output_uri) / [`set_output_uri(Option<String>)`](crate::client::fluent_builders::StartRun::set_output_uri): <p>An output URI for the run.</p>
    ///   - [`log_level(RunLogLevel)`](crate::client::fluent_builders::StartRun::log_level) / [`set_log_level(Option<RunLogLevel>)`](crate::client::fluent_builders::StartRun::set_log_level): <p>A log level for the run.</p>
    ///   - [`tags(HashMap<String, String>)`](crate::client::fluent_builders::StartRun::tags) / [`set_tags(Option<HashMap<String, String>>)`](crate::client::fluent_builders::StartRun::set_tags): <p>Tags for the run.</p>
    ///   - [`request_id(impl Into<String>)`](crate::client::fluent_builders::StartRun::request_id) / [`set_request_id(Option<String>)`](crate::client::fluent_builders::StartRun::set_request_id): <p>A request ID for the run.</p>
    /// - On success, responds with [`StartRunOutput`](crate::output::StartRunOutput) with field(s):
    ///   - [`arn(Option<String>)`](crate::output::StartRunOutput::arn): <p>The run's ARN.</p>
    ///   - [`id(Option<String>)`](crate::output::StartRunOutput::id): <p>The run's ID.</p>
    ///   - [`status(Option<RunStatus>)`](crate::output::StartRunOutput::status): <p>The run's status.</p>
    ///   - [`tags(Option<HashMap<String, String>>)`](crate::output::StartRunOutput::tags): <p>The run's tags.</p>
    /// - On failure, responds with [`SdkError<StartRunError>`](crate::error::StartRunError)
    pub fn start_run(&self) -> crate::client::fluent_builders::StartRun {
        crate::client::fluent_builders::StartRun::new(self.handle.clone())
    }
}
