// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GetReadSetInput {
    /// <p>The read set's ID.</p>
    #[doc(hidden)]
    pub id: std::option::Option<std::string::String>,
    /// <p>The read set's sequence store ID.</p>
    #[doc(hidden)]
    pub sequence_store_id: std::option::Option<std::string::String>,
    /// <p>The file to retrieve.</p>
    #[doc(hidden)]
    pub file: std::option::Option<crate::types::ReadSetFile>,
    /// <p>The part number to retrieve.</p>
    #[doc(hidden)]
    pub part_number: std::option::Option<i32>,
}
impl GetReadSetInput {
    /// <p>The read set's ID.</p>
    pub fn id(&self) -> std::option::Option<&str> {
        self.id.as_deref()
    }
    /// <p>The read set's sequence store ID.</p>
    pub fn sequence_store_id(&self) -> std::option::Option<&str> {
        self.sequence_store_id.as_deref()
    }
    /// <p>The file to retrieve.</p>
    pub fn file(&self) -> std::option::Option<&crate::types::ReadSetFile> {
        self.file.as_ref()
    }
    /// <p>The part number to retrieve.</p>
    pub fn part_number(&self) -> std::option::Option<i32> {
        self.part_number
    }
}
impl GetReadSetInput {
    /// Creates a new builder-style object to manufacture [`GetReadSetInput`](crate::operation::get_read_set::GetReadSetInput).
    pub fn builder() -> crate::operation::get_read_set::builders::GetReadSetInputBuilder {
        crate::operation::get_read_set::builders::GetReadSetInputBuilder::default()
    }
}

/// A builder for [`GetReadSetInput`](crate::operation::get_read_set::GetReadSetInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct GetReadSetInputBuilder {
    pub(crate) id: std::option::Option<std::string::String>,
    pub(crate) sequence_store_id: std::option::Option<std::string::String>,
    pub(crate) file: std::option::Option<crate::types::ReadSetFile>,
    pub(crate) part_number: std::option::Option<i32>,
}
impl GetReadSetInputBuilder {
    /// <p>The read set's ID.</p>
    pub fn id(mut self, input: impl Into<std::string::String>) -> Self {
        self.id = Some(input.into());
        self
    }
    /// <p>The read set's ID.</p>
    pub fn set_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.id = input;
        self
    }
    /// <p>The read set's sequence store ID.</p>
    pub fn sequence_store_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.sequence_store_id = Some(input.into());
        self
    }
    /// <p>The read set's sequence store ID.</p>
    pub fn set_sequence_store_id(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.sequence_store_id = input;
        self
    }
    /// <p>The file to retrieve.</p>
    pub fn file(mut self, input: crate::types::ReadSetFile) -> Self {
        self.file = Some(input);
        self
    }
    /// <p>The file to retrieve.</p>
    pub fn set_file(mut self, input: std::option::Option<crate::types::ReadSetFile>) -> Self {
        self.file = input;
        self
    }
    /// <p>The part number to retrieve.</p>
    pub fn part_number(mut self, input: i32) -> Self {
        self.part_number = Some(input);
        self
    }
    /// <p>The part number to retrieve.</p>
    pub fn set_part_number(mut self, input: std::option::Option<i32>) -> Self {
        self.part_number = input;
        self
    }
    /// Consumes the builder and constructs a [`GetReadSetInput`](crate::operation::get_read_set::GetReadSetInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::get_read_set::GetReadSetInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(crate::operation::get_read_set::GetReadSetInput {
            id: self.id,
            sequence_store_id: self.sequence_store_id,
            file: self.file,
            part_number: self.part_number,
        })
    }
}
