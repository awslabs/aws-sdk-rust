// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GetResourceShareInvitationsOutput {
    /// <p>An array of objects that contain the details about the invitations.</p>
    #[doc(hidden)]
    pub resource_share_invitations:
        std::option::Option<std::vec::Vec<crate::types::ResourceShareInvitation>>,
    /// <p>If present, this value indicates that more output is available than is included in the current response. Use this value in the <code>NextToken</code> request parameter in a subsequent call to the operation to get the next part of the output. You should repeat this until the <code>NextToken</code> response element comes back as <code>null</code>. This indicates that this is the last page of results.</p>
    #[doc(hidden)]
    pub next_token: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl GetResourceShareInvitationsOutput {
    /// <p>An array of objects that contain the details about the invitations.</p>
    pub fn resource_share_invitations(
        &self,
    ) -> std::option::Option<&[crate::types::ResourceShareInvitation]> {
        self.resource_share_invitations.as_deref()
    }
    /// <p>If present, this value indicates that more output is available than is included in the current response. Use this value in the <code>NextToken</code> request parameter in a subsequent call to the operation to get the next part of the output. You should repeat this until the <code>NextToken</code> response element comes back as <code>null</code>. This indicates that this is the last page of results.</p>
    pub fn next_token(&self) -> std::option::Option<&str> {
        self.next_token.as_deref()
    }
}
impl aws_http::request_id::RequestId for GetResourceShareInvitationsOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl GetResourceShareInvitationsOutput {
    /// Creates a new builder-style object to manufacture [`GetResourceShareInvitationsOutput`](crate::operation::get_resource_share_invitations::GetResourceShareInvitationsOutput).
    pub fn builder() -> crate::operation::get_resource_share_invitations::builders::GetResourceShareInvitationsOutputBuilder{
        crate::operation::get_resource_share_invitations::builders::GetResourceShareInvitationsOutputBuilder::default()
    }
}

/// A builder for [`GetResourceShareInvitationsOutput`](crate::operation::get_resource_share_invitations::GetResourceShareInvitationsOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct GetResourceShareInvitationsOutputBuilder {
    pub(crate) resource_share_invitations:
        std::option::Option<std::vec::Vec<crate::types::ResourceShareInvitation>>,
    pub(crate) next_token: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl GetResourceShareInvitationsOutputBuilder {
    /// Appends an item to `resource_share_invitations`.
    ///
    /// To override the contents of this collection use [`set_resource_share_invitations`](Self::set_resource_share_invitations).
    ///
    /// <p>An array of objects that contain the details about the invitations.</p>
    pub fn resource_share_invitations(
        mut self,
        input: crate::types::ResourceShareInvitation,
    ) -> Self {
        let mut v = self.resource_share_invitations.unwrap_or_default();
        v.push(input);
        self.resource_share_invitations = Some(v);
        self
    }
    /// <p>An array of objects that contain the details about the invitations.</p>
    pub fn set_resource_share_invitations(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::ResourceShareInvitation>>,
    ) -> Self {
        self.resource_share_invitations = input;
        self
    }
    /// <p>If present, this value indicates that more output is available than is included in the current response. Use this value in the <code>NextToken</code> request parameter in a subsequent call to the operation to get the next part of the output. You should repeat this until the <code>NextToken</code> response element comes back as <code>null</code>. This indicates that this is the last page of results.</p>
    pub fn next_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.next_token = Some(input.into());
        self
    }
    /// <p>If present, this value indicates that more output is available than is included in the current response. Use this value in the <code>NextToken</code> request parameter in a subsequent call to the operation to get the next part of the output. You should repeat this until the <code>NextToken</code> response element comes back as <code>null</code>. This indicates that this is the last page of results.</p>
    pub fn set_next_token(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`GetResourceShareInvitationsOutput`](crate::operation::get_resource_share_invitations::GetResourceShareInvitationsOutput).
    pub fn build(
        self,
    ) -> crate::operation::get_resource_share_invitations::GetResourceShareInvitationsOutput {
        crate::operation::get_resource_share_invitations::GetResourceShareInvitationsOutput {
            resource_share_invitations: self.resource_share_invitations,
            next_token: self.next_token,
            _request_id: self._request_id,
        }
    }
}
