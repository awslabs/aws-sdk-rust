// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeletePermissionVersion`](crate::operation::delete_permission_version::builders::DeletePermissionVersionFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`permission_arn(impl Into<String>)`](crate::operation::delete_permission_version::builders::DeletePermissionVersionFluentBuilder::permission_arn) / [`set_permission_arn(Option<String>)`](crate::operation::delete_permission_version::builders::DeletePermissionVersionFluentBuilder::set_permission_arn):<br>required: **true**<br><p>Specifies the <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Name (ARN)</a> of the permission with the version you want to delete.</p><br>
    ///   - [`permission_version(i32)`](crate::operation::delete_permission_version::builders::DeletePermissionVersionFluentBuilder::permission_version) / [`set_permission_version(Option<i32>)`](crate::operation::delete_permission_version::builders::DeletePermissionVersionFluentBuilder::set_permission_version):<br>required: **true**<br><p>Specifies the version number to delete.</p>  <p>You can't delete the default version for a customer managed permission.</p>  <p>You can't delete a version if it's the only version of the permission. You must either first create another version, or delete the permission completely.</p>  <p>You can't delete a version if it is attached to any resource shares. If the version is the default, you must first use <code>SetDefaultPermissionVersion</code> to set a different version as the default for the customer managed permission, and then use <code>AssociateResourceSharePermission</code> to update your resource shares to use the new default version.</p><br>
    ///   - [`client_token(impl Into<String>)`](crate::operation::delete_permission_version::builders::DeletePermissionVersionFluentBuilder::client_token) / [`set_client_token(Option<String>)`](crate::operation::delete_permission_version::builders::DeletePermissionVersionFluentBuilder::set_client_token):<br>required: **false**<br><p>Specifies a unique, case-sensitive identifier that you provide to ensure the idempotency of the request. This lets you safely retry the request without accidentally performing the same operation a second time. Passing the same value to a later call to an operation requires that you also pass the same value for all other parameters. We recommend that you use a <a href="https://wikipedia.org/wiki/Universally_unique_identifier">UUID type of value.</a>.</p>  <p>If you don't provide this value, then Amazon Web Services generates a random one for you.</p>  <p>If you retry the operation with the same <code>ClientToken</code>, but with different parameters, the retry fails with an <code>IdempotentParameterMismatch</code> error.</p><br>
    /// - On success, responds with [`DeletePermissionVersionOutput`](crate::operation::delete_permission_version::DeletePermissionVersionOutput) with field(s):
    ///   - [`return_value(Option<bool>)`](crate::operation::delete_permission_version::DeletePermissionVersionOutput::return_value): <p>A boolean value that indicates whether the operation is successful.</p>
    ///   - [`client_token(Option<String>)`](crate::operation::delete_permission_version::DeletePermissionVersionOutput::client_token): <p>The idempotency identifier associated with this request. If you want to repeat the same operation in an idempotent manner then you must include this value in the <code>clientToken</code> request parameter of that later call. All other parameters must also have the same values that you used in the first call.</p>
    ///   - [`permission_status(Option<PermissionStatus>)`](crate::operation::delete_permission_version::DeletePermissionVersionOutput::permission_status): <p>This operation is performed asynchronously, and this response parameter indicates the current status.</p>
    /// - On failure, responds with [`SdkError<DeletePermissionVersionError>`](crate::operation::delete_permission_version::DeletePermissionVersionError)
    pub fn delete_permission_version(&self) -> crate::operation::delete_permission_version::builders::DeletePermissionVersionFluentBuilder {
        crate::operation::delete_permission_version::builders::DeletePermissionVersionFluentBuilder::new(self.handle.clone())
    }
}
