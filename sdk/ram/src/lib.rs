#![allow(clippy::module_inception)]
#![allow(clippy::upper_case_acronyms)]
#![allow(clippy::large_enum_variant)]
#![allow(clippy::wrong_self_convention)]
#![allow(clippy::should_implement_trait)]
#![allow(clippy::blacklisted_name)]
#![allow(clippy::vec_init_then_push)]
#![allow(rustdoc::bare_urls)]
//! <p>This is the <i>Resource Access Manager API Reference</i>. This documentation provides
//! descriptions and syntax for each of the actions and data types in RAM. RAM is a
//! service that helps you securely share your Amazon Web Services resources across Amazon Web Services accounts and
//! within your organization or organizational units (OUs) in Organizations. For supported
//! resource types, you can also share resources with IAM roles and IAM users. If you have
//! multiple Amazon Web Services accounts, you can use RAM to share those resources with other
//! accounts.</p>
//! <p>To learn more about RAM, see the following resources:</p>
//! <ul>
//! <li>
//! <p>
//! <a href="http://aws.amazon.com/ram">Resource Access Manager product page</a>
//! </p>
//! </li>
//! <li>
//! <p>
//! <a href="https://docs.aws.amazon.com/ram/latest/userguide/">Resource Access Manager User
//! Guide</a>
//! </p>
//! </li>
//! </ul>

// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub use error_meta::Error;

pub use config::Config;

mod aws_endpoint;
#[cfg(feature = "client")]
pub mod client;
pub mod config;
pub mod error;
mod error_meta;
pub mod input;
mod json_deser;
mod json_errors;
mod json_ser;
pub mod model;
mod no_credentials;
pub mod operation;
mod operation_deser;
mod operation_ser;
pub mod output;
pub static PKG_VERSION: &str = env!("CARGO_PKG_VERSION");
pub use smithy_http::byte_stream::ByteStream;
pub use smithy_http::result::SdkError;
pub use smithy_types::Blob;
static API_METADATA: aws_http::user_agent::ApiMetadata =
    aws_http::user_agent::ApiMetadata::new("ram", PKG_VERSION);
pub use aws_types::region::Region;
pub use aws_types::Credentials;
#[cfg(feature = "client")]
pub use client::Client;
pub use smithy_http::endpoint::Endpoint;
