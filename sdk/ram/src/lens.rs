// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) fn reflens_get_resource_policies_output_next_token(
    input: &crate::operation::get_resource_policies::GetResourcePoliciesOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_get_resource_share_associations_output_next_token(
    input: &crate::operation::get_resource_share_associations::GetResourceShareAssociationsOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_get_resource_share_invitations_output_next_token(
    input: &crate::operation::get_resource_share_invitations::GetResourceShareInvitationsOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_get_resource_shares_output_next_token(
    input: &crate::operation::get_resource_shares::GetResourceSharesOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_pending_invitation_resources_output_next_token(
    input: &crate::operation::list_pending_invitation_resources::ListPendingInvitationResourcesOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_permission_versions_output_next_token(
    input: &crate::operation::list_permission_versions::ListPermissionVersionsOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_permissions_output_next_token(
    input: &crate::operation::list_permissions::ListPermissionsOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_principals_output_next_token(
    input: &crate::operation::list_principals::ListPrincipalsOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_resource_share_permissions_output_next_token(
    input: &crate::operation::list_resource_share_permissions::ListResourceSharePermissionsOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_resource_types_output_next_token(
    input: &crate::operation::list_resource_types::ListResourceTypesOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_resources_output_next_token(
    input: &crate::operation::list_resources::ListResourcesOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}
