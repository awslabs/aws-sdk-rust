// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[derive(Debug)]
pub(crate) struct Handle {
    pub(crate) conf: crate::Config,
    #[allow(dead_code)] // unused when a service does not provide any operations
    pub(crate) runtime_plugins: ::aws_smithy_runtime_api::client::runtime_plugin::RuntimePlugins,
}

/// Client for Amazon Chime
///
/// Client for invoking operations on Amazon Chime. Each operation on Amazon Chime is a method on this
/// this struct. `.send()` MUST be invoked on the generated operations to dispatch the request to the service.
/// ## Constructing a `Client`
///
/// A [`Config`] is required to construct a client. For most use cases, the [`aws-config`]
/// crate should be used to automatically resolve this config using
/// [`aws_config::load_from_env()`], since this will resolve an [`SdkConfig`] which can be shared
/// across multiple different AWS SDK clients. This config resolution process can be customized
/// by calling [`aws_config::from_env()`] instead, which returns a [`ConfigLoader`] that uses
/// the [builder pattern] to customize the default config.
///
/// In the simplest case, creating a client looks as follows:
/// ```rust,no_run
/// # async fn wrapper() {
/// let config = aws_config::load_from_env().await;
/// let client = aws_sdk_chime::Client::new(&config);
/// # }
/// ```
///
/// Occasionally, SDKs may have additional service-specific that can be set on the [`Config`] that
/// is absent from [`SdkConfig`], or slightly different settings for a specific client may be desired.
/// The [`Config`] struct implements `From<&SdkConfig>`, so setting these specific settings can be
/// done as follows:
///
/// ```rust,no_run
/// # async fn wrapper() {
/// let sdk_config = ::aws_config::load_from_env().await;
/// let config = aws_sdk_chime::config::Builder::from(&sdk_config)
/// # /*
///     .some_service_specific_setting("value")
/// # */
///     .build();
/// # }
/// ```
///
/// See the [`aws-config` docs] and [`Config`] for more information on customizing configuration.
///
/// _Note:_ Client construction is expensive due to connection thread pool initialization, and should
/// be done once at application start-up.
///
/// [`Config`]: crate::Config
/// [`ConfigLoader`]: https://docs.rs/aws-config/*/aws_config/struct.ConfigLoader.html
/// [`SdkConfig`]: https://docs.rs/aws-config/*/aws_config/struct.SdkConfig.html
/// [`aws-config` docs]: https://docs.rs/aws-config/*
/// [`aws-config`]: https://crates.io/crates/aws-config
/// [`aws_config::from_env()`]: https://docs.rs/aws-config/*/aws_config/fn.from_env.html
/// [`aws_config::load_from_env()`]: https://docs.rs/aws-config/*/aws_config/fn.load_from_env.html
/// [builder pattern]: https://rust-lang.github.io/api-guidelines/type-safety.html#builders-enable-construction-of-complex-values-c-builder
/// # Using the `Client`
///
/// A client has a function for every operation that can be performed by the service.
/// For example, the [`AssociatePhoneNumbersWithVoiceConnector`](crate::operation::associate_phone_numbers_with_voice_connector) operation has
/// a [`Client::associate_phone_numbers_with_voice_connector`], function which returns a builder for that operation.
/// The fluent builder ultimately has a `send()` function that returns an async future that
/// returns a result, as illustrated below:
///
/// ```rust,ignore
/// let result = client.associate_phone_numbers_with_voice_connector()
///     .voice_connector_id("example")
///     .send()
///     .await;
/// ```
///
/// The underlying HTTP requests that get made by this can be modified with the `customize_operation`
/// function on the fluent builder. See the [`customize`](crate::client::customize) module for more
/// information.
#[derive(::std::clone::Clone, ::std::fmt::Debug)]
pub struct Client {
    handle: ::std::sync::Arc<Handle>,
}

impl Client {
    /// Creates a new client from the service [`Config`](crate::Config).
    ///
    /// # Panics
    ///
    /// This method will panic in the following cases:
    ///
    /// - Retries or timeouts are enabled without a `sleep_impl` configured.
    /// - Identity caching is enabled without a `sleep_impl` and `time_source` configured.
    ///
    /// The panic message for each of these will have instructions on how to resolve them.
    pub fn from_conf(conf: crate::Config) -> Self {
        let handle = Handle {
            conf: conf.clone(),
            runtime_plugins: crate::config::base_client_runtime_plugins(conf),
        };
        if let Err(err) = Self::validate_config(&handle) {
            panic!("Invalid client configuration: {err}");
        }
        Self {
            handle: ::std::sync::Arc::new(handle),
        }
    }

    /// Returns the client's configuration.
    pub fn config(&self) -> &crate::Config {
        &self.handle.conf
    }

    fn validate_config(handle: &Handle) -> Result<(), ::aws_smithy_runtime_api::box_error::BoxError> {
        let mut cfg = ::aws_smithy_types::config_bag::ConfigBag::base();
        handle
            .runtime_plugins
            .apply_client_configuration(&mut cfg)?
            .validate_base_client_config(&cfg)?;
        Ok(())
    }
}

impl Client {
    /// Creates a new client from an [SDK Config](::aws_types::sdk_config::SdkConfig).
    ///
    /// # Panics
    ///
    /// - This method will panic if the `sdk_config` is missing an async sleep implementation. If you experience this panic, set
    ///     the `sleep_impl` on the Config passed into this function to fix it.
    /// - This method will panic if the `sdk_config` is missing an HTTP connector. If you experience this panic, set the
    ///     `http_connector` on the Config passed into this function to fix it.
    pub fn new(sdk_config: &::aws_types::sdk_config::SdkConfig) -> Self {
        Self::from_conf(sdk_config.into())
    }
}

mod associate_phone_number_with_user;

mod associate_phone_numbers_with_voice_connector;

mod associate_phone_numbers_with_voice_connector_group;

mod associate_signin_delegate_groups_with_account;

mod batch_create_attendee;

mod batch_create_channel_membership;

mod batch_create_room_membership;

mod batch_delete_phone_number;

mod batch_suspend_user;

mod batch_unsuspend_user;

mod batch_update_phone_number;

mod batch_update_user;

mod create_account;

mod create_app_instance;

mod create_app_instance_admin;

mod create_app_instance_user;

mod create_attendee;

mod create_bot;

mod create_channel;

mod create_channel_ban;

mod create_channel_membership;

mod create_channel_moderator;

mod create_media_capture_pipeline;

mod create_meeting;

mod create_meeting_dial_out;

mod create_meeting_with_attendees;

mod create_phone_number_order;

mod create_proxy_session;

mod create_room;

mod create_room_membership;

mod create_sip_media_application;

mod create_sip_media_application_call;

mod create_sip_rule;

mod create_user;

mod create_voice_connector;

mod create_voice_connector_group;

/// Operation customization and supporting types.
///
/// The underlying HTTP requests made during an operation can be customized
/// by calling the `customize()` method on the builder returned from a client
/// operation call. For example, this can be used to add an additional HTTP header:
///
/// ```ignore
/// # async fn wrapper() -> ::std::result::Result<(), aws_sdk_chime::Error> {
/// # let client: aws_sdk_chime::Client = unimplemented!();
/// use ::http::header::{HeaderName, HeaderValue};
///
/// let result = client.associate_phone_numbers_with_voice_connector()
///     .customize()
///     .mutate_request(|req| {
///         // Add `x-example-header` with value
///         req.headers_mut()
///             .insert(
///                 HeaderName::from_static("x-example-header"),
///                 HeaderValue::from_static("1"),
///             );
///     })
///     .send()
///     .await;
/// # }
/// ```
pub mod customize;

mod delete_account;

mod delete_app_instance;

mod delete_app_instance_admin;

mod delete_app_instance_streaming_configurations;

mod delete_app_instance_user;

mod delete_attendee;

mod delete_channel;

mod delete_channel_ban;

mod delete_channel_membership;

mod delete_channel_message;

mod delete_channel_moderator;

mod delete_events_configuration;

mod delete_media_capture_pipeline;

mod delete_meeting;

mod delete_phone_number;

mod delete_proxy_session;

mod delete_room;

mod delete_room_membership;

mod delete_sip_media_application;

mod delete_sip_rule;

mod delete_voice_connector;

mod delete_voice_connector_emergency_calling_configuration;

mod delete_voice_connector_group;

mod delete_voice_connector_origination;

mod delete_voice_connector_proxy;

mod delete_voice_connector_streaming_configuration;

mod delete_voice_connector_termination;

mod delete_voice_connector_termination_credentials;

mod describe_app_instance;

mod describe_app_instance_admin;

mod describe_app_instance_user;

mod describe_channel;

mod describe_channel_ban;

mod describe_channel_membership;

mod describe_channel_membership_for_app_instance_user;

mod describe_channel_moderated_by_app_instance_user;

mod describe_channel_moderator;

mod disassociate_phone_number_from_user;

mod disassociate_phone_numbers_from_voice_connector;

mod disassociate_phone_numbers_from_voice_connector_group;

mod disassociate_signin_delegate_groups_from_account;

mod get_account;

mod get_account_settings;

mod get_app_instance_retention_settings;

mod get_app_instance_streaming_configurations;

mod get_attendee;

mod get_bot;

mod get_channel_message;

mod get_events_configuration;

mod get_global_settings;

mod get_media_capture_pipeline;

mod get_meeting;

mod get_messaging_session_endpoint;

mod get_phone_number;

mod get_phone_number_order;

mod get_phone_number_settings;

mod get_proxy_session;

mod get_retention_settings;

mod get_room;

mod get_sip_media_application;

mod get_sip_media_application_logging_configuration;

mod get_sip_rule;

mod get_user;

mod get_user_settings;

mod get_voice_connector;

mod get_voice_connector_emergency_calling_configuration;

mod get_voice_connector_group;

mod get_voice_connector_logging_configuration;

mod get_voice_connector_origination;

mod get_voice_connector_proxy;

mod get_voice_connector_streaming_configuration;

mod get_voice_connector_termination;

mod get_voice_connector_termination_health;

mod invite_users;

mod list_accounts;

mod list_app_instance_admins;

mod list_app_instance_users;

mod list_app_instances;

mod list_attendee_tags;

mod list_attendees;

mod list_bots;

mod list_channel_bans;

mod list_channel_memberships;

mod list_channel_memberships_for_app_instance_user;

mod list_channel_messages;

mod list_channel_moderators;

mod list_channels;

mod list_channels_moderated_by_app_instance_user;

mod list_media_capture_pipelines;

mod list_meeting_tags;

mod list_meetings;

mod list_phone_number_orders;

mod list_phone_numbers;

mod list_proxy_sessions;

mod list_room_memberships;

mod list_rooms;

mod list_sip_media_applications;

mod list_sip_rules;

mod list_supported_phone_number_countries;

mod list_tags_for_resource;

mod list_users;

mod list_voice_connector_groups;

mod list_voice_connector_termination_credentials;

mod list_voice_connectors;

mod logout_user;

mod put_app_instance_retention_settings;

mod put_app_instance_streaming_configurations;

mod put_events_configuration;

mod put_retention_settings;

mod put_sip_media_application_logging_configuration;

mod put_voice_connector_emergency_calling_configuration;

mod put_voice_connector_logging_configuration;

mod put_voice_connector_origination;

mod put_voice_connector_proxy;

mod put_voice_connector_streaming_configuration;

mod put_voice_connector_termination;

mod put_voice_connector_termination_credentials;

mod redact_channel_message;

mod redact_conversation_message;

mod redact_room_message;

mod regenerate_security_token;

mod reset_personal_pin;

mod restore_phone_number;

mod search_available_phone_numbers;

mod send_channel_message;

mod start_meeting_transcription;

mod stop_meeting_transcription;

mod tag_attendee;

mod tag_meeting;

mod tag_resource;

mod untag_attendee;

mod untag_meeting;

mod untag_resource;

mod update_account;

mod update_account_settings;

mod update_app_instance;

mod update_app_instance_user;

mod update_bot;

mod update_channel;

mod update_channel_message;

mod update_channel_read_marker;

mod update_global_settings;

mod update_phone_number;

mod update_phone_number_settings;

mod update_proxy_session;

mod update_room;

mod update_room_membership;

mod update_sip_media_application;

mod update_sip_media_application_call;

mod update_sip_rule;

mod update_user;

mod update_user_settings;

mod update_voice_connector;

mod update_voice_connector_group;

mod validate_e911_address;
