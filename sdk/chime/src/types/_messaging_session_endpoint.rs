// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The websocket endpoint used to connect to Amazon Chime SDK messaging.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct MessagingSessionEndpoint {
    /// <p>The endpoint to which you establish a websocket connection.</p>
    #[doc(hidden)]
    pub url: std::option::Option<std::string::String>,
}
impl MessagingSessionEndpoint {
    /// <p>The endpoint to which you establish a websocket connection.</p>
    pub fn url(&self) -> std::option::Option<&str> {
        self.url.as_deref()
    }
}
impl MessagingSessionEndpoint {
    /// Creates a new builder-style object to manufacture [`MessagingSessionEndpoint`](crate::types::MessagingSessionEndpoint).
    pub fn builder() -> crate::types::builders::MessagingSessionEndpointBuilder {
        crate::types::builders::MessagingSessionEndpointBuilder::default()
    }
}

/// A builder for [`MessagingSessionEndpoint`](crate::types::MessagingSessionEndpoint).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct MessagingSessionEndpointBuilder {
    pub(crate) url: std::option::Option<std::string::String>,
}
impl MessagingSessionEndpointBuilder {
    /// <p>The endpoint to which you establish a websocket connection.</p>
    pub fn url(mut self, input: impl Into<std::string::String>) -> Self {
        self.url = Some(input.into());
        self
    }
    /// <p>The endpoint to which you establish a websocket connection.</p>
    pub fn set_url(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.url = input;
        self
    }
    /// Consumes the builder and constructs a [`MessagingSessionEndpoint`](crate::types::MessagingSessionEndpoint).
    pub fn build(self) -> crate::types::MessagingSessionEndpoint {
        crate::types::MessagingSessionEndpoint { url: self.url }
    }
}
