// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The room membership details.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct RoomMembership {
    /// <p>The room ID.</p>
    #[doc(hidden)]
    pub room_id: std::option::Option<std::string::String>,
    /// <p>The member details, such as email address, name, member ID, and member type.</p>
    #[doc(hidden)]
    pub member: std::option::Option<crate::types::Member>,
    /// <p>The membership role.</p>
    #[doc(hidden)]
    pub role: std::option::Option<crate::types::RoomMembershipRole>,
    /// <p>The identifier of the user that invited the room member.</p>
    #[doc(hidden)]
    pub invited_by: std::option::Option<std::string::String>,
    /// <p>The room membership update timestamp, in ISO 8601 format.</p>
    #[doc(hidden)]
    pub updated_timestamp: std::option::Option<aws_smithy_types::DateTime>,
}
impl RoomMembership {
    /// <p>The room ID.</p>
    pub fn room_id(&self) -> std::option::Option<&str> {
        self.room_id.as_deref()
    }
    /// <p>The member details, such as email address, name, member ID, and member type.</p>
    pub fn member(&self) -> std::option::Option<&crate::types::Member> {
        self.member.as_ref()
    }
    /// <p>The membership role.</p>
    pub fn role(&self) -> std::option::Option<&crate::types::RoomMembershipRole> {
        self.role.as_ref()
    }
    /// <p>The identifier of the user that invited the room member.</p>
    pub fn invited_by(&self) -> std::option::Option<&str> {
        self.invited_by.as_deref()
    }
    /// <p>The room membership update timestamp, in ISO 8601 format.</p>
    pub fn updated_timestamp(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.updated_timestamp.as_ref()
    }
}
impl RoomMembership {
    /// Creates a new builder-style object to manufacture [`RoomMembership`](crate::types::RoomMembership).
    pub fn builder() -> crate::types::builders::RoomMembershipBuilder {
        crate::types::builders::RoomMembershipBuilder::default()
    }
}

/// A builder for [`RoomMembership`](crate::types::RoomMembership).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct RoomMembershipBuilder {
    pub(crate) room_id: std::option::Option<std::string::String>,
    pub(crate) member: std::option::Option<crate::types::Member>,
    pub(crate) role: std::option::Option<crate::types::RoomMembershipRole>,
    pub(crate) invited_by: std::option::Option<std::string::String>,
    pub(crate) updated_timestamp: std::option::Option<aws_smithy_types::DateTime>,
}
impl RoomMembershipBuilder {
    /// <p>The room ID.</p>
    pub fn room_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.room_id = Some(input.into());
        self
    }
    /// <p>The room ID.</p>
    pub fn set_room_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.room_id = input;
        self
    }
    /// <p>The member details, such as email address, name, member ID, and member type.</p>
    pub fn member(mut self, input: crate::types::Member) -> Self {
        self.member = Some(input);
        self
    }
    /// <p>The member details, such as email address, name, member ID, and member type.</p>
    pub fn set_member(mut self, input: std::option::Option<crate::types::Member>) -> Self {
        self.member = input;
        self
    }
    /// <p>The membership role.</p>
    pub fn role(mut self, input: crate::types::RoomMembershipRole) -> Self {
        self.role = Some(input);
        self
    }
    /// <p>The membership role.</p>
    pub fn set_role(
        mut self,
        input: std::option::Option<crate::types::RoomMembershipRole>,
    ) -> Self {
        self.role = input;
        self
    }
    /// <p>The identifier of the user that invited the room member.</p>
    pub fn invited_by(mut self, input: impl Into<std::string::String>) -> Self {
        self.invited_by = Some(input.into());
        self
    }
    /// <p>The identifier of the user that invited the room member.</p>
    pub fn set_invited_by(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.invited_by = input;
        self
    }
    /// <p>The room membership update timestamp, in ISO 8601 format.</p>
    pub fn updated_timestamp(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.updated_timestamp = Some(input);
        self
    }
    /// <p>The room membership update timestamp, in ISO 8601 format.</p>
    pub fn set_updated_timestamp(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.updated_timestamp = input;
        self
    }
    /// Consumes the builder and constructs a [`RoomMembership`](crate::types::RoomMembership).
    pub fn build(self) -> crate::types::RoomMembership {
        crate::types::RoomMembership {
            room_id: self.room_id,
            member: self.member,
            role: self.role,
            invited_by: self.invited_by,
            updated_timestamp: self.updated_timestamp,
        }
    }
}
