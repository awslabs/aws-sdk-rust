// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A phone number for which an order has been placed.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq)]
pub struct OrderedPhoneNumber {
    /// <p>The phone number, in E.164 format.</p>
    #[doc(hidden)]
    pub e164_phone_number: std::option::Option<std::string::String>,
    /// <p>The phone number status.</p>
    #[doc(hidden)]
    pub status: std::option::Option<crate::types::OrderedPhoneNumberStatus>,
}
impl OrderedPhoneNumber {
    /// <p>The phone number, in E.164 format.</p>
    pub fn e164_phone_number(&self) -> std::option::Option<&str> {
        self.e164_phone_number.as_deref()
    }
    /// <p>The phone number status.</p>
    pub fn status(&self) -> std::option::Option<&crate::types::OrderedPhoneNumberStatus> {
        self.status.as_ref()
    }
}
impl std::fmt::Debug for OrderedPhoneNumber {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        let mut formatter = f.debug_struct("OrderedPhoneNumber");
        formatter.field("e164_phone_number", &"*** Sensitive Data Redacted ***");
        formatter.field("status", &self.status);
        formatter.finish()
    }
}
impl OrderedPhoneNumber {
    /// Creates a new builder-style object to manufacture [`OrderedPhoneNumber`](crate::types::OrderedPhoneNumber).
    pub fn builder() -> crate::types::builders::OrderedPhoneNumberBuilder {
        crate::types::builders::OrderedPhoneNumberBuilder::default()
    }
}

/// A builder for [`OrderedPhoneNumber`](crate::types::OrderedPhoneNumber).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default)]
pub struct OrderedPhoneNumberBuilder {
    pub(crate) e164_phone_number: std::option::Option<std::string::String>,
    pub(crate) status: std::option::Option<crate::types::OrderedPhoneNumberStatus>,
}
impl OrderedPhoneNumberBuilder {
    /// <p>The phone number, in E.164 format.</p>
    pub fn e164_phone_number(mut self, input: impl Into<std::string::String>) -> Self {
        self.e164_phone_number = Some(input.into());
        self
    }
    /// <p>The phone number, in E.164 format.</p>
    pub fn set_e164_phone_number(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.e164_phone_number = input;
        self
    }
    /// <p>The phone number status.</p>
    pub fn status(mut self, input: crate::types::OrderedPhoneNumberStatus) -> Self {
        self.status = Some(input);
        self
    }
    /// <p>The phone number status.</p>
    pub fn set_status(
        mut self,
        input: std::option::Option<crate::types::OrderedPhoneNumberStatus>,
    ) -> Self {
        self.status = input;
        self
    }
    /// Consumes the builder and constructs a [`OrderedPhoneNumber`](crate::types::OrderedPhoneNumber).
    pub fn build(self) -> crate::types::OrderedPhoneNumber {
        crate::types::OrderedPhoneNumber {
            e164_phone_number: self.e164_phone_number,
            status: self.status,
        }
    }
}
impl std::fmt::Debug for OrderedPhoneNumberBuilder {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        let mut formatter = f.debug_struct("OrderedPhoneNumberBuilder");
        formatter.field("e164_phone_number", &"*** Sensitive Data Redacted ***");
        formatter.field("status", &self.status);
        formatter.finish()
    }
}
