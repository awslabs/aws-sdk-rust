// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The details of the streaming configuration of an <code>AppInstance</code>.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq)]
pub struct AppInstanceStreamingConfiguration {
    /// <p>The type of data to be streamed.</p>
    pub app_instance_data_type: crate::types::AppInstanceDataType,
    /// <p>The resource ARN.</p>
    pub resource_arn: ::std::string::String,
}
impl AppInstanceStreamingConfiguration {
    /// <p>The type of data to be streamed.</p>
    pub fn app_instance_data_type(&self) -> &crate::types::AppInstanceDataType {
        &self.app_instance_data_type
    }
    /// <p>The resource ARN.</p>
    pub fn resource_arn(&self) -> &str {
        use std::ops::Deref;
        self.resource_arn.deref()
    }
}
impl ::std::fmt::Debug for AppInstanceStreamingConfiguration {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("AppInstanceStreamingConfiguration");
        formatter.field("app_instance_data_type", &self.app_instance_data_type);
        formatter.field("resource_arn", &"*** Sensitive Data Redacted ***");
        formatter.finish()
    }
}
impl AppInstanceStreamingConfiguration {
    /// Creates a new builder-style object to manufacture [`AppInstanceStreamingConfiguration`](crate::types::AppInstanceStreamingConfiguration).
    pub fn builder() -> crate::types::builders::AppInstanceStreamingConfigurationBuilder {
        crate::types::builders::AppInstanceStreamingConfigurationBuilder::default()
    }
}

/// A builder for [`AppInstanceStreamingConfiguration`](crate::types::AppInstanceStreamingConfiguration).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default)]
pub struct AppInstanceStreamingConfigurationBuilder {
    pub(crate) app_instance_data_type: ::std::option::Option<crate::types::AppInstanceDataType>,
    pub(crate) resource_arn: ::std::option::Option<::std::string::String>,
}
impl AppInstanceStreamingConfigurationBuilder {
    /// <p>The type of data to be streamed.</p>
    /// This field is required.
    pub fn app_instance_data_type(mut self, input: crate::types::AppInstanceDataType) -> Self {
        self.app_instance_data_type = ::std::option::Option::Some(input);
        self
    }
    /// <p>The type of data to be streamed.</p>
    pub fn set_app_instance_data_type(mut self, input: ::std::option::Option<crate::types::AppInstanceDataType>) -> Self {
        self.app_instance_data_type = input;
        self
    }
    /// <p>The type of data to be streamed.</p>
    pub fn get_app_instance_data_type(&self) -> &::std::option::Option<crate::types::AppInstanceDataType> {
        &self.app_instance_data_type
    }
    /// <p>The resource ARN.</p>
    /// This field is required.
    pub fn resource_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.resource_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The resource ARN.</p>
    pub fn set_resource_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.resource_arn = input;
        self
    }
    /// <p>The resource ARN.</p>
    pub fn get_resource_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.resource_arn
    }
    /// Consumes the builder and constructs a [`AppInstanceStreamingConfiguration`](crate::types::AppInstanceStreamingConfiguration).
    /// This method will fail if any of the following fields are not set:
    /// - [`app_instance_data_type`](crate::types::builders::AppInstanceStreamingConfigurationBuilder::app_instance_data_type)
    /// - [`resource_arn`](crate::types::builders::AppInstanceStreamingConfigurationBuilder::resource_arn)
    pub fn build(self) -> ::std::result::Result<crate::types::AppInstanceStreamingConfiguration, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::AppInstanceStreamingConfiguration {
            app_instance_data_type: self.app_instance_data_type.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "app_instance_data_type",
                    "app_instance_data_type was not specified but it is required when building AppInstanceStreamingConfiguration",
                )
            })?,
            resource_arn: self.resource_arn.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "resource_arn",
                    "resource_arn was not specified but it is required when building AppInstanceStreamingConfiguration",
                )
            })?,
        })
    }
}
impl ::std::fmt::Debug for AppInstanceStreamingConfigurationBuilder {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("AppInstanceStreamingConfigurationBuilder");
        formatter.field("app_instance_data_type", &self.app_instance_data_type);
        formatter.field("resource_arn", &"*** Sensitive Data Redacted ***");
        formatter.finish()
    }
}
