// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The targeted recipient for a streaming configuration notification.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct StreamingNotificationTarget {
    /// <p>The streaming notification target.</p>
    pub notification_target: crate::types::NotificationTarget,
}
impl StreamingNotificationTarget {
    /// <p>The streaming notification target.</p>
    pub fn notification_target(&self) -> &crate::types::NotificationTarget {
        &self.notification_target
    }
}
impl StreamingNotificationTarget {
    /// Creates a new builder-style object to manufacture [`StreamingNotificationTarget`](crate::types::StreamingNotificationTarget).
    pub fn builder() -> crate::types::builders::StreamingNotificationTargetBuilder {
        crate::types::builders::StreamingNotificationTargetBuilder::default()
    }
}

/// A builder for [`StreamingNotificationTarget`](crate::types::StreamingNotificationTarget).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct StreamingNotificationTargetBuilder {
    pub(crate) notification_target: ::std::option::Option<crate::types::NotificationTarget>,
}
impl StreamingNotificationTargetBuilder {
    /// <p>The streaming notification target.</p>
    /// This field is required.
    pub fn notification_target(mut self, input: crate::types::NotificationTarget) -> Self {
        self.notification_target = ::std::option::Option::Some(input);
        self
    }
    /// <p>The streaming notification target.</p>
    pub fn set_notification_target(mut self, input: ::std::option::Option<crate::types::NotificationTarget>) -> Self {
        self.notification_target = input;
        self
    }
    /// <p>The streaming notification target.</p>
    pub fn get_notification_target(&self) -> &::std::option::Option<crate::types::NotificationTarget> {
        &self.notification_target
    }
    /// Consumes the builder and constructs a [`StreamingNotificationTarget`](crate::types::StreamingNotificationTarget).
    /// This method will fail if any of the following fields are not set:
    /// - [`notification_target`](crate::types::builders::StreamingNotificationTargetBuilder::notification_target)
    pub fn build(self) -> ::std::result::Result<crate::types::StreamingNotificationTarget, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::StreamingNotificationTarget {
            notification_target: self.notification_target.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "notification_target",
                    "notification_target was not specified but it is required when building StreamingNotificationTarget",
                )
            })?,
        })
    }
}
