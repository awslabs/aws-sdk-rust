// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The logging configuration associated with an Amazon Chime Voice Connector. Specifies whether SIP message logs are enabled for sending to Amazon CloudWatch Logs.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct LoggingConfiguration {
    /// <p>When true, enables SIP message logs for sending to Amazon CloudWatch Logs.</p>
    #[doc(hidden)]
    pub enable_sip_logs: std::option::Option<bool>,
    /// <p>Boolean that enables the logging of Voice Connector metrics to Cloudwatch.</p>
    #[doc(hidden)]
    pub enable_media_metric_logs: std::option::Option<bool>,
}
impl LoggingConfiguration {
    /// <p>When true, enables SIP message logs for sending to Amazon CloudWatch Logs.</p>
    pub fn enable_sip_logs(&self) -> std::option::Option<bool> {
        self.enable_sip_logs
    }
    /// <p>Boolean that enables the logging of Voice Connector metrics to Cloudwatch.</p>
    pub fn enable_media_metric_logs(&self) -> std::option::Option<bool> {
        self.enable_media_metric_logs
    }
}
impl LoggingConfiguration {
    /// Creates a new builder-style object to manufacture [`LoggingConfiguration`](crate::types::LoggingConfiguration).
    pub fn builder() -> crate::types::builders::LoggingConfigurationBuilder {
        crate::types::builders::LoggingConfigurationBuilder::default()
    }
}

/// A builder for [`LoggingConfiguration`](crate::types::LoggingConfiguration).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct LoggingConfigurationBuilder {
    pub(crate) enable_sip_logs: std::option::Option<bool>,
    pub(crate) enable_media_metric_logs: std::option::Option<bool>,
}
impl LoggingConfigurationBuilder {
    /// <p>When true, enables SIP message logs for sending to Amazon CloudWatch Logs.</p>
    pub fn enable_sip_logs(mut self, input: bool) -> Self {
        self.enable_sip_logs = Some(input);
        self
    }
    /// <p>When true, enables SIP message logs for sending to Amazon CloudWatch Logs.</p>
    pub fn set_enable_sip_logs(mut self, input: std::option::Option<bool>) -> Self {
        self.enable_sip_logs = input;
        self
    }
    /// <p>Boolean that enables the logging of Voice Connector metrics to Cloudwatch.</p>
    pub fn enable_media_metric_logs(mut self, input: bool) -> Self {
        self.enable_media_metric_logs = Some(input);
        self
    }
    /// <p>Boolean that enables the logging of Voice Connector metrics to Cloudwatch.</p>
    pub fn set_enable_media_metric_logs(mut self, input: std::option::Option<bool>) -> Self {
        self.enable_media_metric_logs = input;
        self
    }
    /// Consumes the builder and constructs a [`LoggingConfiguration`](crate::types::LoggingConfiguration).
    pub fn build(self) -> crate::types::LoggingConfiguration {
        crate::types::LoggingConfiguration {
            enable_sip_logs: self.enable_sip_logs,
            enable_media_metric_logs: self.enable_media_metric_logs,
        }
    }
}
