// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The details of a channel member.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ChannelMembership {
    /// <p>The identifier of the member who invited another member.</p>
    #[doc(hidden)]
    pub invited_by: std::option::Option<crate::types::Identity>,
    /// <p>The membership type set for the channel member.</p>
    #[doc(hidden)]
    pub r#type: std::option::Option<crate::types::ChannelMembershipType>,
    /// <p>The data of the channel member.</p>
    #[doc(hidden)]
    pub member: std::option::Option<crate::types::Identity>,
    /// <p>The ARN of the member's channel.</p>
    #[doc(hidden)]
    pub channel_arn: std::option::Option<std::string::String>,
    /// <p>The time at which the channel membership was created.</p>
    #[doc(hidden)]
    pub created_timestamp: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>The time at which a channel membership was last updated.</p>
    #[doc(hidden)]
    pub last_updated_timestamp: std::option::Option<aws_smithy_types::DateTime>,
}
impl ChannelMembership {
    /// <p>The identifier of the member who invited another member.</p>
    pub fn invited_by(&self) -> std::option::Option<&crate::types::Identity> {
        self.invited_by.as_ref()
    }
    /// <p>The membership type set for the channel member.</p>
    pub fn r#type(&self) -> std::option::Option<&crate::types::ChannelMembershipType> {
        self.r#type.as_ref()
    }
    /// <p>The data of the channel member.</p>
    pub fn member(&self) -> std::option::Option<&crate::types::Identity> {
        self.member.as_ref()
    }
    /// <p>The ARN of the member's channel.</p>
    pub fn channel_arn(&self) -> std::option::Option<&str> {
        self.channel_arn.as_deref()
    }
    /// <p>The time at which the channel membership was created.</p>
    pub fn created_timestamp(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.created_timestamp.as_ref()
    }
    /// <p>The time at which a channel membership was last updated.</p>
    pub fn last_updated_timestamp(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.last_updated_timestamp.as_ref()
    }
}
impl ChannelMembership {
    /// Creates a new builder-style object to manufacture [`ChannelMembership`](crate::types::ChannelMembership).
    pub fn builder() -> crate::types::builders::ChannelMembershipBuilder {
        crate::types::builders::ChannelMembershipBuilder::default()
    }
}

/// A builder for [`ChannelMembership`](crate::types::ChannelMembership).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ChannelMembershipBuilder {
    pub(crate) invited_by: std::option::Option<crate::types::Identity>,
    pub(crate) r#type: std::option::Option<crate::types::ChannelMembershipType>,
    pub(crate) member: std::option::Option<crate::types::Identity>,
    pub(crate) channel_arn: std::option::Option<std::string::String>,
    pub(crate) created_timestamp: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) last_updated_timestamp: std::option::Option<aws_smithy_types::DateTime>,
}
impl ChannelMembershipBuilder {
    /// <p>The identifier of the member who invited another member.</p>
    pub fn invited_by(mut self, input: crate::types::Identity) -> Self {
        self.invited_by = Some(input);
        self
    }
    /// <p>The identifier of the member who invited another member.</p>
    pub fn set_invited_by(mut self, input: std::option::Option<crate::types::Identity>) -> Self {
        self.invited_by = input;
        self
    }
    /// <p>The membership type set for the channel member.</p>
    pub fn r#type(mut self, input: crate::types::ChannelMembershipType) -> Self {
        self.r#type = Some(input);
        self
    }
    /// <p>The membership type set for the channel member.</p>
    pub fn set_type(
        mut self,
        input: std::option::Option<crate::types::ChannelMembershipType>,
    ) -> Self {
        self.r#type = input;
        self
    }
    /// <p>The data of the channel member.</p>
    pub fn member(mut self, input: crate::types::Identity) -> Self {
        self.member = Some(input);
        self
    }
    /// <p>The data of the channel member.</p>
    pub fn set_member(mut self, input: std::option::Option<crate::types::Identity>) -> Self {
        self.member = input;
        self
    }
    /// <p>The ARN of the member's channel.</p>
    pub fn channel_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.channel_arn = Some(input.into());
        self
    }
    /// <p>The ARN of the member's channel.</p>
    pub fn set_channel_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.channel_arn = input;
        self
    }
    /// <p>The time at which the channel membership was created.</p>
    pub fn created_timestamp(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.created_timestamp = Some(input);
        self
    }
    /// <p>The time at which the channel membership was created.</p>
    pub fn set_created_timestamp(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.created_timestamp = input;
        self
    }
    /// <p>The time at which a channel membership was last updated.</p>
    pub fn last_updated_timestamp(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.last_updated_timestamp = Some(input);
        self
    }
    /// <p>The time at which a channel membership was last updated.</p>
    pub fn set_last_updated_timestamp(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.last_updated_timestamp = input;
        self
    }
    /// Consumes the builder and constructs a [`ChannelMembership`](crate::types::ChannelMembership).
    pub fn build(self) -> crate::types::ChannelMembership {
        crate::types::ChannelMembership {
            invited_by: self.invited_by,
            r#type: self.r#type,
            member: self.member,
            channel_arn: self.channel_arn,
            created_timestamp: self.created_timestamp,
            last_updated_timestamp: self.last_updated_timestamp,
        }
    }
}
