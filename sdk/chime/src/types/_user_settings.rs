// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Settings associated with an Amazon Chime user, including inbound and outbound calling and text messaging.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct UserSettings {
    /// <p>The telephony settings associated with the user.</p>
    pub telephony: ::std::option::Option<crate::types::TelephonySettings>,
}
impl UserSettings {
    /// <p>The telephony settings associated with the user.</p>
    pub fn telephony(&self) -> ::std::option::Option<&crate::types::TelephonySettings> {
        self.telephony.as_ref()
    }
}
impl UserSettings {
    /// Creates a new builder-style object to manufacture [`UserSettings`](crate::types::UserSettings).
    pub fn builder() -> crate::types::builders::UserSettingsBuilder {
        crate::types::builders::UserSettingsBuilder::default()
    }
}

/// A builder for [`UserSettings`](crate::types::UserSettings).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct UserSettingsBuilder {
    pub(crate) telephony: ::std::option::Option<crate::types::TelephonySettings>,
}
impl UserSettingsBuilder {
    /// <p>The telephony settings associated with the user.</p>
    /// This field is required.
    pub fn telephony(mut self, input: crate::types::TelephonySettings) -> Self {
        self.telephony = ::std::option::Option::Some(input);
        self
    }
    /// <p>The telephony settings associated with the user.</p>
    pub fn set_telephony(mut self, input: ::std::option::Option<crate::types::TelephonySettings>) -> Self {
        self.telephony = input;
        self
    }
    /// <p>The telephony settings associated with the user.</p>
    pub fn get_telephony(&self) -> &::std::option::Option<crate::types::TelephonySettings> {
        &self.telephony
    }
    /// Consumes the builder and constructs a [`UserSettings`](crate::types::UserSettings).
    pub fn build(self) -> crate::types::UserSettings {
        crate::types::UserSettings { telephony: self.telephony }
    }
}
