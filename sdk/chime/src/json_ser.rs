// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn serialize_structure_associate_phone_numbers_with_voice_connector_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::AssociatePhoneNumbersWithVoiceConnectorInput,
) {
    if let Some(var_1) = &input.e164_phone_numbers {
        let mut array_2 = object.key("E164PhoneNumbers").start_array();
        for item_3 in var_1 {
            {
                array_2.value().string(item_3);
            }
        }
        array_2.finish();
    }
    if let Some(var_4) = &input.force_associate {
        object.key("ForceAssociate").boolean(*var_4);
    }
}

pub fn serialize_structure_associate_phone_numbers_with_voice_connector_group_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::AssociatePhoneNumbersWithVoiceConnectorGroupInput,
) {
    if let Some(var_5) = &input.e164_phone_numbers {
        let mut array_6 = object.key("E164PhoneNumbers").start_array();
        for item_7 in var_5 {
            {
                array_6.value().string(item_7);
            }
        }
        array_6.finish();
    }
    if let Some(var_8) = &input.force_associate {
        object.key("ForceAssociate").boolean(*var_8);
    }
}

pub fn serialize_structure_associate_phone_number_with_user_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::AssociatePhoneNumberWithUserInput,
) {
    if let Some(var_9) = &input.e164_phone_number {
        object.key("E164PhoneNumber").string(var_9);
    }
}

pub fn serialize_structure_associate_signin_delegate_groups_with_account_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::AssociateSigninDelegateGroupsWithAccountInput,
) {
    if let Some(var_10) = &input.signin_delegate_groups {
        let mut array_11 = object.key("SigninDelegateGroups").start_array();
        for item_12 in var_10 {
            {
                let mut object_13 = array_11.value().start_object();
                crate::json_ser::serialize_structure_signin_delegate_group(&mut object_13, item_12);
                object_13.finish();
            }
        }
        array_11.finish();
    }
}

pub fn serialize_structure_batch_create_attendee_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::BatchCreateAttendeeInput,
) {
    if let Some(var_14) = &input.attendees {
        let mut array_15 = object.key("Attendees").start_array();
        for item_16 in var_14 {
            {
                let mut object_17 = array_15.value().start_object();
                crate::json_ser::serialize_structure_create_attendee_request_item(
                    &mut object_17,
                    item_16,
                );
                object_17.finish();
            }
        }
        array_15.finish();
    }
}

pub fn serialize_structure_batch_create_channel_membership_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::BatchCreateChannelMembershipInput,
) {
    if let Some(var_18) = &input.member_arns {
        let mut array_19 = object.key("MemberArns").start_array();
        for item_20 in var_18 {
            {
                array_19.value().string(item_20);
            }
        }
        array_19.finish();
    }
    if let Some(var_21) = &input.r#type {
        object.key("Type").string(var_21.as_str());
    }
}

pub fn serialize_structure_batch_create_room_membership_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::BatchCreateRoomMembershipInput,
) {
    if let Some(var_22) = &input.membership_item_list {
        let mut array_23 = object.key("MembershipItemList").start_array();
        for item_24 in var_22 {
            {
                let mut object_25 = array_23.value().start_object();
                crate::json_ser::serialize_structure_membership_item(&mut object_25, item_24);
                object_25.finish();
            }
        }
        array_23.finish();
    }
}

pub fn serialize_structure_batch_delete_phone_number_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::BatchDeletePhoneNumberInput,
) {
    if let Some(var_26) = &input.phone_number_ids {
        let mut array_27 = object.key("PhoneNumberIds").start_array();
        for item_28 in var_26 {
            {
                array_27.value().string(item_28);
            }
        }
        array_27.finish();
    }
}

pub fn serialize_structure_batch_suspend_user_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::BatchSuspendUserInput,
) {
    if let Some(var_29) = &input.user_id_list {
        let mut array_30 = object.key("UserIdList").start_array();
        for item_31 in var_29 {
            {
                array_30.value().string(item_31);
            }
        }
        array_30.finish();
    }
}

pub fn serialize_structure_batch_unsuspend_user_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::BatchUnsuspendUserInput,
) {
    if let Some(var_32) = &input.user_id_list {
        let mut array_33 = object.key("UserIdList").start_array();
        for item_34 in var_32 {
            {
                array_33.value().string(item_34);
            }
        }
        array_33.finish();
    }
}

pub fn serialize_structure_batch_update_phone_number_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::BatchUpdatePhoneNumberInput,
) {
    if let Some(var_35) = &input.update_phone_number_request_items {
        let mut array_36 = object.key("UpdatePhoneNumberRequestItems").start_array();
        for item_37 in var_35 {
            {
                let mut object_38 = array_36.value().start_object();
                crate::json_ser::serialize_structure_update_phone_number_request_item(
                    &mut object_38,
                    item_37,
                );
                object_38.finish();
            }
        }
        array_36.finish();
    }
}

pub fn serialize_structure_batch_update_user_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::BatchUpdateUserInput,
) {
    if let Some(var_39) = &input.update_user_request_items {
        let mut array_40 = object.key("UpdateUserRequestItems").start_array();
        for item_41 in var_39 {
            {
                let mut object_42 = array_40.value().start_object();
                crate::json_ser::serialize_structure_update_user_request_item(
                    &mut object_42,
                    item_41,
                );
                object_42.finish();
            }
        }
        array_40.finish();
    }
}

pub fn serialize_structure_create_account_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateAccountInput,
) {
    if let Some(var_43) = &input.name {
        object.key("Name").string(var_43);
    }
}

pub fn serialize_structure_create_app_instance_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateAppInstanceInput,
) {
    if let Some(var_44) = &input.client_request_token {
        object.key("ClientRequestToken").string(var_44);
    }
    if let Some(var_45) = &input.metadata {
        object.key("Metadata").string(var_45);
    }
    if let Some(var_46) = &input.name {
        object.key("Name").string(var_46);
    }
    if let Some(var_47) = &input.tags {
        let mut array_48 = object.key("Tags").start_array();
        for item_49 in var_47 {
            {
                let mut object_50 = array_48.value().start_object();
                crate::json_ser::serialize_structure_tag(&mut object_50, item_49);
                object_50.finish();
            }
        }
        array_48.finish();
    }
}

pub fn serialize_structure_create_app_instance_admin_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateAppInstanceAdminInput,
) {
    if let Some(var_51) = &input.app_instance_admin_arn {
        object.key("AppInstanceAdminArn").string(var_51);
    }
}

pub fn serialize_structure_create_app_instance_user_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateAppInstanceUserInput,
) {
    if let Some(var_52) = &input.app_instance_arn {
        object.key("AppInstanceArn").string(var_52);
    }
    if let Some(var_53) = &input.app_instance_user_id {
        object.key("AppInstanceUserId").string(var_53);
    }
    if let Some(var_54) = &input.client_request_token {
        object.key("ClientRequestToken").string(var_54);
    }
    if let Some(var_55) = &input.metadata {
        object.key("Metadata").string(var_55);
    }
    if let Some(var_56) = &input.name {
        object.key("Name").string(var_56);
    }
    if let Some(var_57) = &input.tags {
        let mut array_58 = object.key("Tags").start_array();
        for item_59 in var_57 {
            {
                let mut object_60 = array_58.value().start_object();
                crate::json_ser::serialize_structure_tag(&mut object_60, item_59);
                object_60.finish();
            }
        }
        array_58.finish();
    }
}

pub fn serialize_structure_create_attendee_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateAttendeeInput,
) {
    if let Some(var_61) = &input.external_user_id {
        object.key("ExternalUserId").string(var_61);
    }
    if let Some(var_62) = &input.tags {
        let mut array_63 = object.key("Tags").start_array();
        for item_64 in var_62 {
            {
                let mut object_65 = array_63.value().start_object();
                crate::json_ser::serialize_structure_tag(&mut object_65, item_64);
                object_65.finish();
            }
        }
        array_63.finish();
    }
}

pub fn serialize_structure_create_bot_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateBotInput,
) {
    if let Some(var_66) = &input.display_name {
        object.key("DisplayName").string(var_66);
    }
    if let Some(var_67) = &input.domain {
        object.key("Domain").string(var_67);
    }
}

pub fn serialize_structure_create_channel_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateChannelInput,
) {
    if let Some(var_68) = &input.app_instance_arn {
        object.key("AppInstanceArn").string(var_68);
    }
    if let Some(var_69) = &input.client_request_token {
        object.key("ClientRequestToken").string(var_69);
    }
    if let Some(var_70) = &input.metadata {
        object.key("Metadata").string(var_70);
    }
    if let Some(var_71) = &input.mode {
        object.key("Mode").string(var_71.as_str());
    }
    if let Some(var_72) = &input.name {
        object.key("Name").string(var_72);
    }
    if let Some(var_73) = &input.privacy {
        object.key("Privacy").string(var_73.as_str());
    }
    if let Some(var_74) = &input.tags {
        let mut array_75 = object.key("Tags").start_array();
        for item_76 in var_74 {
            {
                let mut object_77 = array_75.value().start_object();
                crate::json_ser::serialize_structure_tag(&mut object_77, item_76);
                object_77.finish();
            }
        }
        array_75.finish();
    }
}

pub fn serialize_structure_create_channel_ban_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateChannelBanInput,
) {
    if let Some(var_78) = &input.member_arn {
        object.key("MemberArn").string(var_78);
    }
}

pub fn serialize_structure_create_channel_membership_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateChannelMembershipInput,
) {
    if let Some(var_79) = &input.member_arn {
        object.key("MemberArn").string(var_79);
    }
    if let Some(var_80) = &input.r#type {
        object.key("Type").string(var_80.as_str());
    }
}

pub fn serialize_structure_create_channel_moderator_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateChannelModeratorInput,
) {
    if let Some(var_81) = &input.channel_moderator_arn {
        object.key("ChannelModeratorArn").string(var_81);
    }
}

pub fn serialize_structure_create_meeting_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateMeetingInput,
) {
    if let Some(var_82) = &input.client_request_token {
        object.key("ClientRequestToken").string(var_82);
    }
    if let Some(var_83) = &input.external_meeting_id {
        object.key("ExternalMeetingId").string(var_83);
    }
    if let Some(var_84) = &input.media_region {
        object.key("MediaRegion").string(var_84);
    }
    if let Some(var_85) = &input.meeting_host_id {
        object.key("MeetingHostId").string(var_85);
    }
    if let Some(var_86) = &input.notifications_configuration {
        let mut object_87 = object.key("NotificationsConfiguration").start_object();
        crate::json_ser::serialize_structure_meeting_notification_configuration(
            &mut object_87,
            var_86,
        );
        object_87.finish();
    }
    if let Some(var_88) = &input.tags {
        let mut array_89 = object.key("Tags").start_array();
        for item_90 in var_88 {
            {
                let mut object_91 = array_89.value().start_object();
                crate::json_ser::serialize_structure_tag(&mut object_91, item_90);
                object_91.finish();
            }
        }
        array_89.finish();
    }
}

pub fn serialize_structure_create_meeting_dial_out_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateMeetingDialOutInput,
) {
    if let Some(var_92) = &input.from_phone_number {
        object.key("FromPhoneNumber").string(var_92);
    }
    if let Some(var_93) = &input.join_token {
        object.key("JoinToken").string(var_93);
    }
    if let Some(var_94) = &input.to_phone_number {
        object.key("ToPhoneNumber").string(var_94);
    }
}

pub fn serialize_structure_create_meeting_with_attendees_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateMeetingWithAttendeesInput,
) {
    if let Some(var_95) = &input.attendees {
        let mut array_96 = object.key("Attendees").start_array();
        for item_97 in var_95 {
            {
                let mut object_98 = array_96.value().start_object();
                crate::json_ser::serialize_structure_create_attendee_request_item(
                    &mut object_98,
                    item_97,
                );
                object_98.finish();
            }
        }
        array_96.finish();
    }
    if let Some(var_99) = &input.client_request_token {
        object.key("ClientRequestToken").string(var_99);
    }
    if let Some(var_100) = &input.external_meeting_id {
        object.key("ExternalMeetingId").string(var_100);
    }
    if let Some(var_101) = &input.media_region {
        object.key("MediaRegion").string(var_101);
    }
    if let Some(var_102) = &input.meeting_host_id {
        object.key("MeetingHostId").string(var_102);
    }
    if let Some(var_103) = &input.notifications_configuration {
        let mut object_104 = object.key("NotificationsConfiguration").start_object();
        crate::json_ser::serialize_structure_meeting_notification_configuration(
            &mut object_104,
            var_103,
        );
        object_104.finish();
    }
    if let Some(var_105) = &input.tags {
        let mut array_106 = object.key("Tags").start_array();
        for item_107 in var_105 {
            {
                let mut object_108 = array_106.value().start_object();
                crate::json_ser::serialize_structure_tag(&mut object_108, item_107);
                object_108.finish();
            }
        }
        array_106.finish();
    }
}

pub fn serialize_structure_create_phone_number_order_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreatePhoneNumberOrderInput,
) {
    if let Some(var_109) = &input.e164_phone_numbers {
        let mut array_110 = object.key("E164PhoneNumbers").start_array();
        for item_111 in var_109 {
            {
                array_110.value().string(item_111);
            }
        }
        array_110.finish();
    }
    if let Some(var_112) = &input.product_type {
        object.key("ProductType").string(var_112.as_str());
    }
}

pub fn serialize_structure_create_proxy_session_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateProxySessionInput,
) {
    if let Some(var_113) = &input.capabilities {
        let mut array_114 = object.key("Capabilities").start_array();
        for item_115 in var_113 {
            {
                array_114.value().string(item_115.as_str());
            }
        }
        array_114.finish();
    }
    if let Some(var_116) = &input.expiry_minutes {
        object.key("ExpiryMinutes").number(
            #[allow(clippy::useless_conversion)]
            smithy_types::Number::NegInt((*var_116).into()),
        );
    }
    if let Some(var_117) = &input.geo_match_level {
        object.key("GeoMatchLevel").string(var_117.as_str());
    }
    if let Some(var_118) = &input.geo_match_params {
        let mut object_119 = object.key("GeoMatchParams").start_object();
        crate::json_ser::serialize_structure_geo_match_params(&mut object_119, var_118);
        object_119.finish();
    }
    if let Some(var_120) = &input.name {
        object.key("Name").string(var_120);
    }
    if let Some(var_121) = &input.number_selection_behavior {
        object
            .key("NumberSelectionBehavior")
            .string(var_121.as_str());
    }
    if let Some(var_122) = &input.participant_phone_numbers {
        let mut array_123 = object.key("ParticipantPhoneNumbers").start_array();
        for item_124 in var_122 {
            {
                array_123.value().string(item_124);
            }
        }
        array_123.finish();
    }
}

pub fn serialize_structure_create_room_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateRoomInput,
) {
    if let Some(var_125) = &input.client_request_token {
        object.key("ClientRequestToken").string(var_125);
    }
    if let Some(var_126) = &input.name {
        object.key("Name").string(var_126);
    }
}

pub fn serialize_structure_create_room_membership_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateRoomMembershipInput,
) {
    if let Some(var_127) = &input.member_id {
        object.key("MemberId").string(var_127);
    }
    if let Some(var_128) = &input.role {
        object.key("Role").string(var_128.as_str());
    }
}

pub fn serialize_structure_create_sip_media_application_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateSipMediaApplicationInput,
) {
    if let Some(var_129) = &input.aws_region {
        object.key("AwsRegion").string(var_129);
    }
    if let Some(var_130) = &input.endpoints {
        let mut array_131 = object.key("Endpoints").start_array();
        for item_132 in var_130 {
            {
                let mut object_133 = array_131.value().start_object();
                crate::json_ser::serialize_structure_sip_media_application_endpoint(
                    &mut object_133,
                    item_132,
                );
                object_133.finish();
            }
        }
        array_131.finish();
    }
    if let Some(var_134) = &input.name {
        object.key("Name").string(var_134);
    }
}

pub fn serialize_structure_create_sip_media_application_call_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateSipMediaApplicationCallInput,
) {
    if let Some(var_135) = &input.from_phone_number {
        object.key("FromPhoneNumber").string(var_135);
    }
    if let Some(var_136) = &input.to_phone_number {
        object.key("ToPhoneNumber").string(var_136);
    }
}

pub fn serialize_structure_create_sip_rule_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateSipRuleInput,
) {
    if let Some(var_137) = &input.disabled {
        object.key("Disabled").boolean(*var_137);
    }
    if let Some(var_138) = &input.name {
        object.key("Name").string(var_138);
    }
    if let Some(var_139) = &input.target_applications {
        let mut array_140 = object.key("TargetApplications").start_array();
        for item_141 in var_139 {
            {
                let mut object_142 = array_140.value().start_object();
                crate::json_ser::serialize_structure_sip_rule_target_application(
                    &mut object_142,
                    item_141,
                );
                object_142.finish();
            }
        }
        array_140.finish();
    }
    if let Some(var_143) = &input.trigger_type {
        object.key("TriggerType").string(var_143.as_str());
    }
    if let Some(var_144) = &input.trigger_value {
        object.key("TriggerValue").string(var_144);
    }
}

pub fn serialize_structure_create_user_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateUserInput,
) {
    if let Some(var_145) = &input.email {
        object.key("Email").string(var_145);
    }
    if let Some(var_146) = &input.user_type {
        object.key("UserType").string(var_146.as_str());
    }
    if let Some(var_147) = &input.username {
        object.key("Username").string(var_147);
    }
}

pub fn serialize_structure_create_voice_connector_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateVoiceConnectorInput,
) {
    if let Some(var_148) = &input.aws_region {
        object.key("AwsRegion").string(var_148.as_str());
    }
    if let Some(var_149) = &input.name {
        object.key("Name").string(var_149);
    }
    if let Some(var_150) = &input.require_encryption {
        object.key("RequireEncryption").boolean(*var_150);
    }
}

pub fn serialize_structure_create_voice_connector_group_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateVoiceConnectorGroupInput,
) {
    if let Some(var_151) = &input.name {
        object.key("Name").string(var_151);
    }
    if let Some(var_152) = &input.voice_connector_items {
        let mut array_153 = object.key("VoiceConnectorItems").start_array();
        for item_154 in var_152 {
            {
                let mut object_155 = array_153.value().start_object();
                crate::json_ser::serialize_structure_voice_connector_item(
                    &mut object_155,
                    item_154,
                );
                object_155.finish();
            }
        }
        array_153.finish();
    }
}

pub fn serialize_structure_delete_voice_connector_termination_credentials_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DeleteVoiceConnectorTerminationCredentialsInput,
) {
    if let Some(var_156) = &input.usernames {
        let mut array_157 = object.key("Usernames").start_array();
        for item_158 in var_156 {
            {
                array_157.value().string(item_158);
            }
        }
        array_157.finish();
    }
}

pub fn serialize_structure_disassociate_phone_numbers_from_voice_connector_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DisassociatePhoneNumbersFromVoiceConnectorInput,
) {
    if let Some(var_159) = &input.e164_phone_numbers {
        let mut array_160 = object.key("E164PhoneNumbers").start_array();
        for item_161 in var_159 {
            {
                array_160.value().string(item_161);
            }
        }
        array_160.finish();
    }
}

pub fn serialize_structure_disassociate_phone_numbers_from_voice_connector_group_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DisassociatePhoneNumbersFromVoiceConnectorGroupInput,
) {
    if let Some(var_162) = &input.e164_phone_numbers {
        let mut array_163 = object.key("E164PhoneNumbers").start_array();
        for item_164 in var_162 {
            {
                array_163.value().string(item_164);
            }
        }
        array_163.finish();
    }
}

pub fn serialize_structure_disassociate_signin_delegate_groups_from_account_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DisassociateSigninDelegateGroupsFromAccountInput,
) {
    if let Some(var_165) = &input.group_names {
        let mut array_166 = object.key("GroupNames").start_array();
        for item_167 in var_165 {
            {
                array_166.value().string(item_167);
            }
        }
        array_166.finish();
    }
}

pub fn serialize_structure_invite_users_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::InviteUsersInput,
) {
    if let Some(var_168) = &input.user_email_list {
        let mut array_169 = object.key("UserEmailList").start_array();
        for item_170 in var_168 {
            {
                array_169.value().string(item_170);
            }
        }
        array_169.finish();
    }
    if let Some(var_171) = &input.user_type {
        object.key("UserType").string(var_171.as_str());
    }
}

pub fn serialize_structure_put_app_instance_retention_settings_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::PutAppInstanceRetentionSettingsInput,
) {
    if let Some(var_172) = &input.app_instance_retention_settings {
        let mut object_173 = object.key("AppInstanceRetentionSettings").start_object();
        crate::json_ser::serialize_structure_app_instance_retention_settings(
            &mut object_173,
            var_172,
        );
        object_173.finish();
    }
}

pub fn serialize_structure_put_app_instance_streaming_configurations_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::PutAppInstanceStreamingConfigurationsInput,
) {
    if let Some(var_174) = &input.app_instance_streaming_configurations {
        let mut array_175 = object
            .key("AppInstanceStreamingConfigurations")
            .start_array();
        for item_176 in var_174 {
            {
                let mut object_177 = array_175.value().start_object();
                crate::json_ser::serialize_structure_app_instance_streaming_configuration(
                    &mut object_177,
                    item_176,
                );
                object_177.finish();
            }
        }
        array_175.finish();
    }
}

pub fn serialize_structure_put_events_configuration_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::PutEventsConfigurationInput,
) {
    if let Some(var_178) = &input.lambda_function_arn {
        object.key("LambdaFunctionArn").string(var_178);
    }
    if let Some(var_179) = &input.outbound_events_https_endpoint {
        object.key("OutboundEventsHTTPSEndpoint").string(var_179);
    }
}

pub fn serialize_structure_put_retention_settings_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::PutRetentionSettingsInput,
) {
    if let Some(var_180) = &input.retention_settings {
        let mut object_181 = object.key("RetentionSettings").start_object();
        crate::json_ser::serialize_structure_retention_settings(&mut object_181, var_180);
        object_181.finish();
    }
}

pub fn serialize_structure_put_sip_media_application_logging_configuration_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::PutSipMediaApplicationLoggingConfigurationInput,
) {
    if let Some(var_182) = &input.sip_media_application_logging_configuration {
        let mut object_183 = object
            .key("SipMediaApplicationLoggingConfiguration")
            .start_object();
        crate::json_ser::serialize_structure_sip_media_application_logging_configuration(
            &mut object_183,
            var_182,
        );
        object_183.finish();
    }
}

pub fn serialize_structure_put_voice_connector_emergency_calling_configuration_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::PutVoiceConnectorEmergencyCallingConfigurationInput,
) {
    if let Some(var_184) = &input.emergency_calling_configuration {
        let mut object_185 = object.key("EmergencyCallingConfiguration").start_object();
        crate::json_ser::serialize_structure_emergency_calling_configuration(
            &mut object_185,
            var_184,
        );
        object_185.finish();
    }
}

pub fn serialize_structure_put_voice_connector_logging_configuration_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::PutVoiceConnectorLoggingConfigurationInput,
) {
    if let Some(var_186) = &input.logging_configuration {
        let mut object_187 = object.key("LoggingConfiguration").start_object();
        crate::json_ser::serialize_structure_logging_configuration(&mut object_187, var_186);
        object_187.finish();
    }
}

pub fn serialize_structure_put_voice_connector_origination_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::PutVoiceConnectorOriginationInput,
) {
    if let Some(var_188) = &input.origination {
        let mut object_189 = object.key("Origination").start_object();
        crate::json_ser::serialize_structure_origination(&mut object_189, var_188);
        object_189.finish();
    }
}

pub fn serialize_structure_put_voice_connector_proxy_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::PutVoiceConnectorProxyInput,
) {
    if let Some(var_190) = &input.default_session_expiry_minutes {
        object.key("DefaultSessionExpiryMinutes").number(
            #[allow(clippy::useless_conversion)]
            smithy_types::Number::NegInt((*var_190).into()),
        );
    }
    if let Some(var_191) = &input.disabled {
        object.key("Disabled").boolean(*var_191);
    }
    if let Some(var_192) = &input.fall_back_phone_number {
        object.key("FallBackPhoneNumber").string(var_192);
    }
    if let Some(var_193) = &input.phone_number_pool_countries {
        let mut array_194 = object.key("PhoneNumberPoolCountries").start_array();
        for item_195 in var_193 {
            {
                array_194.value().string(item_195);
            }
        }
        array_194.finish();
    }
}

pub fn serialize_structure_put_voice_connector_streaming_configuration_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::PutVoiceConnectorStreamingConfigurationInput,
) {
    if let Some(var_196) = &input.streaming_configuration {
        let mut object_197 = object.key("StreamingConfiguration").start_object();
        crate::json_ser::serialize_structure_streaming_configuration(&mut object_197, var_196);
        object_197.finish();
    }
}

pub fn serialize_structure_put_voice_connector_termination_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::PutVoiceConnectorTerminationInput,
) {
    if let Some(var_198) = &input.termination {
        let mut object_199 = object.key("Termination").start_object();
        crate::json_ser::serialize_structure_termination(&mut object_199, var_198);
        object_199.finish();
    }
}

pub fn serialize_structure_put_voice_connector_termination_credentials_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::PutVoiceConnectorTerminationCredentialsInput,
) {
    if let Some(var_200) = &input.credentials {
        let mut array_201 = object.key("Credentials").start_array();
        for item_202 in var_200 {
            {
                let mut object_203 = array_201.value().start_object();
                crate::json_ser::serialize_structure_credential(&mut object_203, item_202);
                object_203.finish();
            }
        }
        array_201.finish();
    }
}

pub fn serialize_structure_send_channel_message_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::SendChannelMessageInput,
) {
    if let Some(var_204) = &input.client_request_token {
        object.key("ClientRequestToken").string(var_204);
    }
    if let Some(var_205) = &input.content {
        object.key("Content").string(var_205);
    }
    if let Some(var_206) = &input.metadata {
        object.key("Metadata").string(var_206);
    }
    if let Some(var_207) = &input.persistence {
        object.key("Persistence").string(var_207.as_str());
    }
    if let Some(var_208) = &input.r#type {
        object.key("Type").string(var_208.as_str());
    }
}

pub fn serialize_structure_tag_attendee_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::TagAttendeeInput,
) {
    if let Some(var_209) = &input.tags {
        let mut array_210 = object.key("Tags").start_array();
        for item_211 in var_209 {
            {
                let mut object_212 = array_210.value().start_object();
                crate::json_ser::serialize_structure_tag(&mut object_212, item_211);
                object_212.finish();
            }
        }
        array_210.finish();
    }
}

pub fn serialize_structure_tag_meeting_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::TagMeetingInput,
) {
    if let Some(var_213) = &input.tags {
        let mut array_214 = object.key("Tags").start_array();
        for item_215 in var_213 {
            {
                let mut object_216 = array_214.value().start_object();
                crate::json_ser::serialize_structure_tag(&mut object_216, item_215);
                object_216.finish();
            }
        }
        array_214.finish();
    }
}

pub fn serialize_structure_tag_resource_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::TagResourceInput,
) {
    if let Some(var_217) = &input.resource_arn {
        object.key("ResourceARN").string(var_217);
    }
    if let Some(var_218) = &input.tags {
        let mut array_219 = object.key("Tags").start_array();
        for item_220 in var_218 {
            {
                let mut object_221 = array_219.value().start_object();
                crate::json_ser::serialize_structure_tag(&mut object_221, item_220);
                object_221.finish();
            }
        }
        array_219.finish();
    }
}

pub fn serialize_structure_untag_attendee_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UntagAttendeeInput,
) {
    if let Some(var_222) = &input.tag_keys {
        let mut array_223 = object.key("TagKeys").start_array();
        for item_224 in var_222 {
            {
                array_223.value().string(item_224);
            }
        }
        array_223.finish();
    }
}

pub fn serialize_structure_untag_meeting_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UntagMeetingInput,
) {
    if let Some(var_225) = &input.tag_keys {
        let mut array_226 = object.key("TagKeys").start_array();
        for item_227 in var_225 {
            {
                array_226.value().string(item_227);
            }
        }
        array_226.finish();
    }
}

pub fn serialize_structure_untag_resource_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UntagResourceInput,
) {
    if let Some(var_228) = &input.resource_arn {
        object.key("ResourceARN").string(var_228);
    }
    if let Some(var_229) = &input.tag_keys {
        let mut array_230 = object.key("TagKeys").start_array();
        for item_231 in var_229 {
            {
                array_230.value().string(item_231);
            }
        }
        array_230.finish();
    }
}

pub fn serialize_structure_update_account_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateAccountInput,
) {
    if let Some(var_232) = &input.default_license {
        object.key("DefaultLicense").string(var_232.as_str());
    }
    if let Some(var_233) = &input.name {
        object.key("Name").string(var_233);
    }
}

pub fn serialize_structure_update_account_settings_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateAccountSettingsInput,
) {
    if let Some(var_234) = &input.account_settings {
        let mut object_235 = object.key("AccountSettings").start_object();
        crate::json_ser::serialize_structure_account_settings(&mut object_235, var_234);
        object_235.finish();
    }
}

pub fn serialize_structure_update_app_instance_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateAppInstanceInput,
) {
    if let Some(var_236) = &input.metadata {
        object.key("Metadata").string(var_236);
    }
    if let Some(var_237) = &input.name {
        object.key("Name").string(var_237);
    }
}

pub fn serialize_structure_update_app_instance_user_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateAppInstanceUserInput,
) {
    if let Some(var_238) = &input.metadata {
        object.key("Metadata").string(var_238);
    }
    if let Some(var_239) = &input.name {
        object.key("Name").string(var_239);
    }
}

pub fn serialize_structure_update_bot_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateBotInput,
) {
    if let Some(var_240) = &input.disabled {
        object.key("Disabled").boolean(*var_240);
    }
}

pub fn serialize_structure_update_channel_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateChannelInput,
) {
    if let Some(var_241) = &input.metadata {
        object.key("Metadata").string(var_241);
    }
    if let Some(var_242) = &input.mode {
        object.key("Mode").string(var_242.as_str());
    }
    if let Some(var_243) = &input.name {
        object.key("Name").string(var_243);
    }
}

pub fn serialize_structure_update_channel_message_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateChannelMessageInput,
) {
    if let Some(var_244) = &input.content {
        object.key("Content").string(var_244);
    }
    if let Some(var_245) = &input.metadata {
        object.key("Metadata").string(var_245);
    }
}

pub fn serialize_structure_update_global_settings_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateGlobalSettingsInput,
) {
    if let Some(var_246) = &input.business_calling {
        let mut object_247 = object.key("BusinessCalling").start_object();
        crate::json_ser::serialize_structure_business_calling_settings(&mut object_247, var_246);
        object_247.finish();
    }
    if let Some(var_248) = &input.voice_connector {
        let mut object_249 = object.key("VoiceConnector").start_object();
        crate::json_ser::serialize_structure_voice_connector_settings(&mut object_249, var_248);
        object_249.finish();
    }
}

pub fn serialize_structure_update_phone_number_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdatePhoneNumberInput,
) {
    if let Some(var_250) = &input.calling_name {
        object.key("CallingName").string(var_250);
    }
    if let Some(var_251) = &input.product_type {
        object.key("ProductType").string(var_251.as_str());
    }
}

pub fn serialize_structure_update_phone_number_settings_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdatePhoneNumberSettingsInput,
) {
    if let Some(var_252) = &input.calling_name {
        object.key("CallingName").string(var_252);
    }
}

pub fn serialize_structure_update_proxy_session_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateProxySessionInput,
) {
    if let Some(var_253) = &input.capabilities {
        let mut array_254 = object.key("Capabilities").start_array();
        for item_255 in var_253 {
            {
                array_254.value().string(item_255.as_str());
            }
        }
        array_254.finish();
    }
    if let Some(var_256) = &input.expiry_minutes {
        object.key("ExpiryMinutes").number(
            #[allow(clippy::useless_conversion)]
            smithy_types::Number::NegInt((*var_256).into()),
        );
    }
}

pub fn serialize_structure_update_room_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateRoomInput,
) {
    if let Some(var_257) = &input.name {
        object.key("Name").string(var_257);
    }
}

pub fn serialize_structure_update_room_membership_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateRoomMembershipInput,
) {
    if let Some(var_258) = &input.role {
        object.key("Role").string(var_258.as_str());
    }
}

pub fn serialize_structure_update_sip_media_application_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateSipMediaApplicationInput,
) {
    if let Some(var_259) = &input.endpoints {
        let mut array_260 = object.key("Endpoints").start_array();
        for item_261 in var_259 {
            {
                let mut object_262 = array_260.value().start_object();
                crate::json_ser::serialize_structure_sip_media_application_endpoint(
                    &mut object_262,
                    item_261,
                );
                object_262.finish();
            }
        }
        array_260.finish();
    }
    if let Some(var_263) = &input.name {
        object.key("Name").string(var_263);
    }
}

pub fn serialize_structure_update_sip_media_application_call_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateSipMediaApplicationCallInput,
) {
    if let Some(var_264) = &input.arguments {
        let mut object_265 = object.key("Arguments").start_object();
        for (key_266, value_267) in var_264 {
            {
                object_265.key(key_266).string(value_267);
            }
        }
        object_265.finish();
    }
}

pub fn serialize_structure_update_sip_rule_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateSipRuleInput,
) {
    if let Some(var_268) = &input.disabled {
        object.key("Disabled").boolean(*var_268);
    }
    if let Some(var_269) = &input.name {
        object.key("Name").string(var_269);
    }
    if let Some(var_270) = &input.target_applications {
        let mut array_271 = object.key("TargetApplications").start_array();
        for item_272 in var_270 {
            {
                let mut object_273 = array_271.value().start_object();
                crate::json_ser::serialize_structure_sip_rule_target_application(
                    &mut object_273,
                    item_272,
                );
                object_273.finish();
            }
        }
        array_271.finish();
    }
}

pub fn serialize_structure_update_user_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateUserInput,
) {
    if let Some(var_274) = &input.alexa_for_business_metadata {
        let mut object_275 = object.key("AlexaForBusinessMetadata").start_object();
        crate::json_ser::serialize_structure_alexa_for_business_metadata(&mut object_275, var_274);
        object_275.finish();
    }
    if let Some(var_276) = &input.license_type {
        object.key("LicenseType").string(var_276.as_str());
    }
    if let Some(var_277) = &input.user_type {
        object.key("UserType").string(var_277.as_str());
    }
}

pub fn serialize_structure_update_user_settings_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateUserSettingsInput,
) {
    if let Some(var_278) = &input.user_settings {
        let mut object_279 = object.key("UserSettings").start_object();
        crate::json_ser::serialize_structure_user_settings(&mut object_279, var_278);
        object_279.finish();
    }
}

pub fn serialize_structure_update_voice_connector_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateVoiceConnectorInput,
) {
    if let Some(var_280) = &input.name {
        object.key("Name").string(var_280);
    }
    if let Some(var_281) = &input.require_encryption {
        object.key("RequireEncryption").boolean(*var_281);
    }
}

pub fn serialize_structure_update_voice_connector_group_input(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateVoiceConnectorGroupInput,
) {
    if let Some(var_282) = &input.name {
        object.key("Name").string(var_282);
    }
    if let Some(var_283) = &input.voice_connector_items {
        let mut array_284 = object.key("VoiceConnectorItems").start_array();
        for item_285 in var_283 {
            {
                let mut object_286 = array_284.value().start_object();
                crate::json_ser::serialize_structure_voice_connector_item(
                    &mut object_286,
                    item_285,
                );
                object_286.finish();
            }
        }
        array_284.finish();
    }
}

pub fn serialize_structure_signin_delegate_group(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::SigninDelegateGroup,
) {
    if let Some(var_287) = &input.group_name {
        object.key("GroupName").string(var_287);
    }
}

pub fn serialize_structure_create_attendee_request_item(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::CreateAttendeeRequestItem,
) {
    if let Some(var_288) = &input.external_user_id {
        object.key("ExternalUserId").string(var_288);
    }
    if let Some(var_289) = &input.tags {
        let mut array_290 = object.key("Tags").start_array();
        for item_291 in var_289 {
            {
                let mut object_292 = array_290.value().start_object();
                crate::json_ser::serialize_structure_tag(&mut object_292, item_291);
                object_292.finish();
            }
        }
        array_290.finish();
    }
}

pub fn serialize_structure_membership_item(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::MembershipItem,
) {
    if let Some(var_293) = &input.member_id {
        object.key("MemberId").string(var_293);
    }
    if let Some(var_294) = &input.role {
        object.key("Role").string(var_294.as_str());
    }
}

pub fn serialize_structure_update_phone_number_request_item(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::UpdatePhoneNumberRequestItem,
) {
    if let Some(var_295) = &input.phone_number_id {
        object.key("PhoneNumberId").string(var_295);
    }
    if let Some(var_296) = &input.product_type {
        object.key("ProductType").string(var_296.as_str());
    }
    if let Some(var_297) = &input.calling_name {
        object.key("CallingName").string(var_297);
    }
}

pub fn serialize_structure_update_user_request_item(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::UpdateUserRequestItem,
) {
    if let Some(var_298) = &input.user_id {
        object.key("UserId").string(var_298);
    }
    if let Some(var_299) = &input.license_type {
        object.key("LicenseType").string(var_299.as_str());
    }
    if let Some(var_300) = &input.user_type {
        object.key("UserType").string(var_300.as_str());
    }
    if let Some(var_301) = &input.alexa_for_business_metadata {
        let mut object_302 = object.key("AlexaForBusinessMetadata").start_object();
        crate::json_ser::serialize_structure_alexa_for_business_metadata(&mut object_302, var_301);
        object_302.finish();
    }
}

pub fn serialize_structure_tag(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::Tag,
) {
    if let Some(var_303) = &input.key {
        object.key("Key").string(var_303);
    }
    if let Some(var_304) = &input.value {
        object.key("Value").string(var_304);
    }
}

pub fn serialize_structure_meeting_notification_configuration(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::MeetingNotificationConfiguration,
) {
    if let Some(var_305) = &input.sns_topic_arn {
        object.key("SnsTopicArn").string(var_305);
    }
    if let Some(var_306) = &input.sqs_queue_arn {
        object.key("SqsQueueArn").string(var_306);
    }
}

pub fn serialize_structure_geo_match_params(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::GeoMatchParams,
) {
    if let Some(var_307) = &input.country {
        object.key("Country").string(var_307);
    }
    if let Some(var_308) = &input.area_code {
        object.key("AreaCode").string(var_308);
    }
}

pub fn serialize_structure_sip_media_application_endpoint(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::SipMediaApplicationEndpoint,
) {
    if let Some(var_309) = &input.lambda_arn {
        object.key("LambdaArn").string(var_309);
    }
}

pub fn serialize_structure_sip_rule_target_application(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::SipRuleTargetApplication,
) {
    if let Some(var_310) = &input.sip_media_application_id {
        object.key("SipMediaApplicationId").string(var_310);
    }
    if let Some(var_311) = &input.priority {
        object.key("Priority").number(
            #[allow(clippy::useless_conversion)]
            smithy_types::Number::NegInt((*var_311).into()),
        );
    }
    if let Some(var_312) = &input.aws_region {
        object.key("AwsRegion").string(var_312);
    }
}

pub fn serialize_structure_voice_connector_item(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::VoiceConnectorItem,
) {
    if let Some(var_313) = &input.voice_connector_id {
        object.key("VoiceConnectorId").string(var_313);
    }
    if let Some(var_314) = &input.priority {
        object.key("Priority").number(
            #[allow(clippy::useless_conversion)]
            smithy_types::Number::NegInt((*var_314).into()),
        );
    }
}

pub fn serialize_structure_app_instance_retention_settings(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::AppInstanceRetentionSettings,
) {
    if let Some(var_315) = &input.channel_retention_settings {
        let mut object_316 = object.key("ChannelRetentionSettings").start_object();
        crate::json_ser::serialize_structure_channel_retention_settings(&mut object_316, var_315);
        object_316.finish();
    }
}

pub fn serialize_structure_app_instance_streaming_configuration(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::AppInstanceStreamingConfiguration,
) {
    if let Some(var_317) = &input.app_instance_data_type {
        object.key("AppInstanceDataType").string(var_317.as_str());
    }
    if let Some(var_318) = &input.resource_arn {
        object.key("ResourceArn").string(var_318);
    }
}

pub fn serialize_structure_retention_settings(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::RetentionSettings,
) {
    if let Some(var_319) = &input.room_retention_settings {
        let mut object_320 = object.key("RoomRetentionSettings").start_object();
        crate::json_ser::serialize_structure_room_retention_settings(&mut object_320, var_319);
        object_320.finish();
    }
    if let Some(var_321) = &input.conversation_retention_settings {
        let mut object_322 = object.key("ConversationRetentionSettings").start_object();
        crate::json_ser::serialize_structure_conversation_retention_settings(
            &mut object_322,
            var_321,
        );
        object_322.finish();
    }
}

pub fn serialize_structure_sip_media_application_logging_configuration(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::SipMediaApplicationLoggingConfiguration,
) {
    if let Some(var_323) = &input.enable_sip_media_application_message_logs {
        object
            .key("EnableSipMediaApplicationMessageLogs")
            .boolean(*var_323);
    }
}

pub fn serialize_structure_emergency_calling_configuration(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::EmergencyCallingConfiguration,
) {
    if let Some(var_324) = &input.dnis {
        let mut array_325 = object.key("DNIS").start_array();
        for item_326 in var_324 {
            {
                let mut object_327 = array_325.value().start_object();
                crate::json_ser::serialize_structure_dnis_emergency_calling_configuration(
                    &mut object_327,
                    item_326,
                );
                object_327.finish();
            }
        }
        array_325.finish();
    }
}

pub fn serialize_structure_logging_configuration(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::LoggingConfiguration,
) {
    if let Some(var_328) = &input.enable_sip_logs {
        object.key("EnableSIPLogs").boolean(*var_328);
    }
}

pub fn serialize_structure_origination(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::Origination,
) {
    if let Some(var_329) = &input.routes {
        let mut array_330 = object.key("Routes").start_array();
        for item_331 in var_329 {
            {
                let mut object_332 = array_330.value().start_object();
                crate::json_ser::serialize_structure_origination_route(&mut object_332, item_331);
                object_332.finish();
            }
        }
        array_330.finish();
    }
    if let Some(var_333) = &input.disabled {
        object.key("Disabled").boolean(*var_333);
    }
}

pub fn serialize_structure_streaming_configuration(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::StreamingConfiguration,
) {
    if let Some(var_334) = &input.data_retention_in_hours {
        object.key("DataRetentionInHours").number(
            #[allow(clippy::useless_conversion)]
            smithy_types::Number::NegInt((*var_334).into()),
        );
    }
    if let Some(var_335) = &input.disabled {
        object.key("Disabled").boolean(*var_335);
    }
    if let Some(var_336) = &input.streaming_notification_targets {
        let mut array_337 = object.key("StreamingNotificationTargets").start_array();
        for item_338 in var_336 {
            {
                let mut object_339 = array_337.value().start_object();
                crate::json_ser::serialize_structure_streaming_notification_target(
                    &mut object_339,
                    item_338,
                );
                object_339.finish();
            }
        }
        array_337.finish();
    }
}

pub fn serialize_structure_termination(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::Termination,
) {
    if let Some(var_340) = &input.cps_limit {
        object.key("CpsLimit").number(
            #[allow(clippy::useless_conversion)]
            smithy_types::Number::NegInt((*var_340).into()),
        );
    }
    if let Some(var_341) = &input.default_phone_number {
        object.key("DefaultPhoneNumber").string(var_341);
    }
    if let Some(var_342) = &input.calling_regions {
        let mut array_343 = object.key("CallingRegions").start_array();
        for item_344 in var_342 {
            {
                array_343.value().string(item_344);
            }
        }
        array_343.finish();
    }
    if let Some(var_345) = &input.cidr_allowed_list {
        let mut array_346 = object.key("CidrAllowedList").start_array();
        for item_347 in var_345 {
            {
                array_346.value().string(item_347);
            }
        }
        array_346.finish();
    }
    if let Some(var_348) = &input.disabled {
        object.key("Disabled").boolean(*var_348);
    }
}

pub fn serialize_structure_credential(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::Credential,
) {
    if let Some(var_349) = &input.username {
        object.key("Username").string(var_349);
    }
    if let Some(var_350) = &input.password {
        object.key("Password").string(var_350);
    }
}

pub fn serialize_structure_account_settings(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::AccountSettings,
) {
    if let Some(var_351) = &input.disable_remote_control {
        object.key("DisableRemoteControl").boolean(*var_351);
    }
    if let Some(var_352) = &input.enable_dial_out {
        object.key("EnableDialOut").boolean(*var_352);
    }
}

pub fn serialize_structure_business_calling_settings(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::BusinessCallingSettings,
) {
    if let Some(var_353) = &input.cdr_bucket {
        object.key("CdrBucket").string(var_353);
    }
}

pub fn serialize_structure_voice_connector_settings(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::VoiceConnectorSettings,
) {
    if let Some(var_354) = &input.cdr_bucket {
        object.key("CdrBucket").string(var_354);
    }
}

pub fn serialize_structure_alexa_for_business_metadata(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::AlexaForBusinessMetadata,
) {
    if let Some(var_355) = &input.is_alexa_for_business_enabled {
        object.key("IsAlexaForBusinessEnabled").boolean(*var_355);
    }
    if let Some(var_356) = &input.alexa_for_business_room_arn {
        object.key("AlexaForBusinessRoomArn").string(var_356);
    }
}

pub fn serialize_structure_user_settings(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::UserSettings,
) {
    if let Some(var_357) = &input.telephony {
        let mut object_358 = object.key("Telephony").start_object();
        crate::json_ser::serialize_structure_telephony_settings(&mut object_358, var_357);
        object_358.finish();
    }
}

pub fn serialize_structure_channel_retention_settings(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::ChannelRetentionSettings,
) {
    if let Some(var_359) = &input.retention_days {
        object.key("RetentionDays").number(
            #[allow(clippy::useless_conversion)]
            smithy_types::Number::NegInt((*var_359).into()),
        );
    }
}

pub fn serialize_structure_room_retention_settings(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::RoomRetentionSettings,
) {
    if let Some(var_360) = &input.retention_days {
        object.key("RetentionDays").number(
            #[allow(clippy::useless_conversion)]
            smithy_types::Number::NegInt((*var_360).into()),
        );
    }
}

pub fn serialize_structure_conversation_retention_settings(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::ConversationRetentionSettings,
) {
    if let Some(var_361) = &input.retention_days {
        object.key("RetentionDays").number(
            #[allow(clippy::useless_conversion)]
            smithy_types::Number::NegInt((*var_361).into()),
        );
    }
}

pub fn serialize_structure_dnis_emergency_calling_configuration(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::DnisEmergencyCallingConfiguration,
) {
    if let Some(var_362) = &input.emergency_phone_number {
        object.key("EmergencyPhoneNumber").string(var_362);
    }
    if let Some(var_363) = &input.test_phone_number {
        object.key("TestPhoneNumber").string(var_363);
    }
    if let Some(var_364) = &input.calling_country {
        object.key("CallingCountry").string(var_364);
    }
}

pub fn serialize_structure_origination_route(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::OriginationRoute,
) {
    if let Some(var_365) = &input.host {
        object.key("Host").string(var_365);
    }
    if let Some(var_366) = &input.port {
        object.key("Port").number(
            #[allow(clippy::useless_conversion)]
            smithy_types::Number::NegInt((*var_366).into()),
        );
    }
    if let Some(var_367) = &input.protocol {
        object.key("Protocol").string(var_367.as_str());
    }
    if let Some(var_368) = &input.priority {
        object.key("Priority").number(
            #[allow(clippy::useless_conversion)]
            smithy_types::Number::NegInt((*var_368).into()),
        );
    }
    if let Some(var_369) = &input.weight {
        object.key("Weight").number(
            #[allow(clippy::useless_conversion)]
            smithy_types::Number::NegInt((*var_369).into()),
        );
    }
}

pub fn serialize_structure_streaming_notification_target(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::StreamingNotificationTarget,
) {
    if let Some(var_370) = &input.notification_target {
        object.key("NotificationTarget").string(var_370.as_str());
    }
}

pub fn serialize_structure_telephony_settings(
    object: &mut smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::TelephonySettings,
) {
    if let Some(var_371) = &input.inbound_calling {
        object.key("InboundCalling").boolean(*var_371);
    }
    if let Some(var_372) = &input.outbound_calling {
        object.key("OutboundCalling").boolean(*var_372);
    }
    if let Some(var_373) = &input.sms {
        object.key("SMS").boolean(*var_373);
    }
}
