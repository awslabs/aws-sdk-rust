// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_create_sip_rule_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::create_sip_rule::CreateSipRuleInput,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.disabled {
        object.key("Disabled").boolean(*var_1);
    }
    if let Some(var_2) = &input.name {
        object.key("Name").string(var_2.as_str());
    }
    if let Some(var_3) = &input.target_applications {
        let mut array_4 = object.key("TargetApplications").start_array();
        for item_5 in var_3 {
            {
                #[allow(unused_mut)]
                let mut object_6 = array_4.value().start_object();
                crate::protocol_serde::shape_sip_rule_target_application::ser_sip_rule_target_application(&mut object_6, item_5)?;
                object_6.finish();
            }
        }
        array_4.finish();
    }
    if let Some(var_7) = &input.trigger_type {
        object.key("TriggerType").string(var_7.as_str());
    }
    if let Some(var_8) = &input.trigger_value {
        object.key("TriggerValue").string(var_8.as_str());
    }
    Ok(())
}
