// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`BatchCreateAttendee`](crate::operation::batch_create_attendee::builders::BatchCreateAttendeeFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`meeting_id(impl Into<String>)`](crate::operation::batch_create_attendee::builders::BatchCreateAttendeeFluentBuilder::meeting_id) / [`set_meeting_id(Option<String>)`](crate::operation::batch_create_attendee::builders::BatchCreateAttendeeFluentBuilder::set_meeting_id): <p>The Amazon Chime SDK meeting ID.</p>
    ///   - [`attendees(Vec<CreateAttendeeRequestItem>)`](crate::operation::batch_create_attendee::builders::BatchCreateAttendeeFluentBuilder::attendees) / [`set_attendees(Option<Vec<CreateAttendeeRequestItem>>)`](crate::operation::batch_create_attendee::builders::BatchCreateAttendeeFluentBuilder::set_attendees): <p>The request containing the attendees to create.</p>
    /// - On success, responds with [`BatchCreateAttendeeOutput`](crate::operation::batch_create_attendee::BatchCreateAttendeeOutput) with field(s):
    ///   - [`attendees(Option<Vec<Attendee>>)`](crate::operation::batch_create_attendee::BatchCreateAttendeeOutput::attendees): <p>The attendee information, including attendees IDs and join tokens.</p>
    ///   - [`errors(Option<Vec<CreateAttendeeError>>)`](crate::operation::batch_create_attendee::BatchCreateAttendeeOutput::errors): <p>If the action fails for one or more of the attendees in the request, a list of the attendees is returned, along with error codes and error messages.</p>
    /// - On failure, responds with [`SdkError<BatchCreateAttendeeError>`](crate::operation::batch_create_attendee::BatchCreateAttendeeError)
    pub fn batch_create_attendee(
        &self,
    ) -> crate::operation::batch_create_attendee::builders::BatchCreateAttendeeFluentBuilder {
        crate::operation::batch_create_attendee::builders::BatchCreateAttendeeFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
