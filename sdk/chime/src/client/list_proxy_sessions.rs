// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListProxySessions`](crate::client::fluent_builders::ListProxySessions) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListProxySessions::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`voice_connector_id(impl Into<String>)`](crate::client::fluent_builders::ListProxySessions::voice_connector_id) / [`set_voice_connector_id(Option<String>)`](crate::client::fluent_builders::ListProxySessions::set_voice_connector_id): <p>The Amazon Chime voice connector ID.</p>
    ///   - [`status(ProxySessionStatus)`](crate::client::fluent_builders::ListProxySessions::status) / [`set_status(Option<ProxySessionStatus>)`](crate::client::fluent_builders::ListProxySessions::set_status): <p>The proxy session status.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListProxySessions::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListProxySessions::set_next_token): <p>The token to use to retrieve the next page of results.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListProxySessions::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListProxySessions::set_max_results): <p>The maximum number of results to return in a single call.</p>
    /// - On success, responds with [`ListProxySessionsOutput`](crate::output::ListProxySessionsOutput) with field(s):
    ///   - [`proxy_sessions(Option<Vec<ProxySession>>)`](crate::output::ListProxySessionsOutput::proxy_sessions): <p>The proxy session details.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListProxySessionsOutput::next_token): <p>The token to use to retrieve the next page of results.</p>
    /// - On failure, responds with [`SdkError<ListProxySessionsError>`](crate::error::ListProxySessionsError)
    pub fn list_proxy_sessions(&self) -> crate::client::fluent_builders::ListProxySessions {
        crate::client::fluent_builders::ListProxySessions::new(self.handle.clone())
    }
}
