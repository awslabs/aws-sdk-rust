// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateSipMediaApplication`](crate::client::fluent_builders::CreateSipMediaApplication) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`aws_region(impl Into<String>)`](crate::client::fluent_builders::CreateSipMediaApplication::aws_region) / [`set_aws_region(Option<String>)`](crate::client::fluent_builders::CreateSipMediaApplication::set_aws_region): <p>The AWS Region assigned to the SIP media application.</p>
    ///   - [`name(impl Into<String>)`](crate::client::fluent_builders::CreateSipMediaApplication::name) / [`set_name(Option<String>)`](crate::client::fluent_builders::CreateSipMediaApplication::set_name): <p>The SIP media application name.</p>
    ///   - [`endpoints(Vec<SipMediaApplicationEndpoint>)`](crate::client::fluent_builders::CreateSipMediaApplication::endpoints) / [`set_endpoints(Option<Vec<SipMediaApplicationEndpoint>>)`](crate::client::fluent_builders::CreateSipMediaApplication::set_endpoints): <p>List of endpoints (Lambda Amazon Resource Names) specified for the SIP media application. Currently, only one endpoint is supported.</p>
    /// - On success, responds with [`CreateSipMediaApplicationOutput`](crate::output::CreateSipMediaApplicationOutput) with field(s):
    ///   - [`sip_media_application(Option<SipMediaApplication>)`](crate::output::CreateSipMediaApplicationOutput::sip_media_application): <p>The SIP media application details.</p>
    /// - On failure, responds with [`SdkError<CreateSipMediaApplicationError>`](crate::error::CreateSipMediaApplicationError)
    pub fn create_sip_media_application(
        &self,
    ) -> crate::client::fluent_builders::CreateSipMediaApplication {
        crate::client::fluent_builders::CreateSipMediaApplication::new(self.handle.clone())
    }
}
