// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateUser`](crate::operation::update_user::builders::UpdateUserFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`account_id(impl Into<String>)`](crate::operation::update_user::builders::UpdateUserFluentBuilder::account_id) / [`set_account_id(Option<String>)`](crate::operation::update_user::builders::UpdateUserFluentBuilder::set_account_id):<br>required: **true**<br><p>The Amazon Chime account ID.</p><br>
    ///   - [`user_id(impl Into<String>)`](crate::operation::update_user::builders::UpdateUserFluentBuilder::user_id) / [`set_user_id(Option<String>)`](crate::operation::update_user::builders::UpdateUserFluentBuilder::set_user_id):<br>required: **true**<br><p>The user ID.</p><br>
    ///   - [`license_type(License)`](crate::operation::update_user::builders::UpdateUserFluentBuilder::license_type) / [`set_license_type(Option<License>)`](crate::operation::update_user::builders::UpdateUserFluentBuilder::set_license_type):<br>required: **false**<br><p>The user license type to update. This must be a supported license type for the Amazon Chime account that the user belongs to.</p><br>
    ///   - [`user_type(UserType)`](crate::operation::update_user::builders::UpdateUserFluentBuilder::user_type) / [`set_user_type(Option<UserType>)`](crate::operation::update_user::builders::UpdateUserFluentBuilder::set_user_type):<br>required: **false**<br><p>The user type.</p><br>
    ///   - [`alexa_for_business_metadata(AlexaForBusinessMetadata)`](crate::operation::update_user::builders::UpdateUserFluentBuilder::alexa_for_business_metadata) / [`set_alexa_for_business_metadata(Option<AlexaForBusinessMetadata>)`](crate::operation::update_user::builders::UpdateUserFluentBuilder::set_alexa_for_business_metadata):<br>required: **false**<br><p>The Alexa for Business metadata.</p><br>
    /// - On success, responds with [`UpdateUserOutput`](crate::operation::update_user::UpdateUserOutput) with field(s):
    ///   - [`user(Option<User>)`](crate::operation::update_user::UpdateUserOutput::user): <p>The updated user details.</p>
    /// - On failure, responds with [`SdkError<UpdateUserError>`](crate::operation::update_user::UpdateUserError)
    pub fn update_user(&self) -> crate::operation::update_user::builders::UpdateUserFluentBuilder {
        crate::operation::update_user::builders::UpdateUserFluentBuilder::new(self.handle.clone())
    }
}
