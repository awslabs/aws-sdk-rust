// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateMediaCapturePipeline`](crate::operation::create_media_capture_pipeline::builders::CreateMediaCapturePipelineFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`source_type(MediaPipelineSourceType)`](crate::operation::create_media_capture_pipeline::builders::CreateMediaCapturePipelineFluentBuilder::source_type) / [`set_source_type(Option<MediaPipelineSourceType>)`](crate::operation::create_media_capture_pipeline::builders::CreateMediaCapturePipelineFluentBuilder::set_source_type): <p>Source type from which the media artifacts will be captured. A Chime SDK Meeting is the only supported source.</p>
    ///   - [`source_arn(impl Into<String>)`](crate::operation::create_media_capture_pipeline::builders::CreateMediaCapturePipelineFluentBuilder::source_arn) / [`set_source_arn(Option<String>)`](crate::operation::create_media_capture_pipeline::builders::CreateMediaCapturePipelineFluentBuilder::set_source_arn): <p>ARN of the source from which the media artifacts are captured.</p>
    ///   - [`sink_type(MediaPipelineSinkType)`](crate::operation::create_media_capture_pipeline::builders::CreateMediaCapturePipelineFluentBuilder::sink_type) / [`set_sink_type(Option<MediaPipelineSinkType>)`](crate::operation::create_media_capture_pipeline::builders::CreateMediaCapturePipelineFluentBuilder::set_sink_type): <p>Destination type to which the media artifacts are saved. You must use an S3 bucket. </p>
    ///   - [`sink_arn(impl Into<String>)`](crate::operation::create_media_capture_pipeline::builders::CreateMediaCapturePipelineFluentBuilder::sink_arn) / [`set_sink_arn(Option<String>)`](crate::operation::create_media_capture_pipeline::builders::CreateMediaCapturePipelineFluentBuilder::set_sink_arn): <p>The ARN of the sink type.</p>
    ///   - [`client_request_token(impl Into<String>)`](crate::operation::create_media_capture_pipeline::builders::CreateMediaCapturePipelineFluentBuilder::client_request_token) / [`set_client_request_token(Option<String>)`](crate::operation::create_media_capture_pipeline::builders::CreateMediaCapturePipelineFluentBuilder::set_client_request_token): <p>The token assigned to the client making the pipeline request.</p>
    ///   - [`chime_sdk_meeting_configuration(ChimeSdkMeetingConfiguration)`](crate::operation::create_media_capture_pipeline::builders::CreateMediaCapturePipelineFluentBuilder::chime_sdk_meeting_configuration) / [`set_chime_sdk_meeting_configuration(Option<ChimeSdkMeetingConfiguration>)`](crate::operation::create_media_capture_pipeline::builders::CreateMediaCapturePipelineFluentBuilder::set_chime_sdk_meeting_configuration): <p>The configuration for a specified media capture pipeline. <code>SourceType</code> must be <code>ChimeSdkMeeting</code>.</p>
    /// - On success, responds with [`CreateMediaCapturePipelineOutput`](crate::operation::create_media_capture_pipeline::CreateMediaCapturePipelineOutput) with field(s):
    ///   - [`media_capture_pipeline(Option<MediaCapturePipeline>)`](crate::operation::create_media_capture_pipeline::CreateMediaCapturePipelineOutput::media_capture_pipeline): <p>A media capture pipeline object, the ID, source type, source ARN, sink type, and sink ARN of a media capture pipeline object.</p>
    /// - On failure, responds with [`SdkError<CreateMediaCapturePipelineError>`](crate::operation::create_media_capture_pipeline::CreateMediaCapturePipelineError)
    pub fn create_media_capture_pipeline(&self) -> crate::operation::create_media_capture_pipeline::builders::CreateMediaCapturePipelineFluentBuilder{
        crate::operation::create_media_capture_pipeline::builders::CreateMediaCapturePipelineFluentBuilder::new(self.handle.clone())
    }
}
