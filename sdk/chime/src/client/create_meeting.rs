// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateMeeting`](crate::operation::create_meeting::builders::CreateMeetingFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`client_request_token(impl Into<String>)`](crate::operation::create_meeting::builders::CreateMeetingFluentBuilder::client_request_token) / [`set_client_request_token(Option<String>)`](crate::operation::create_meeting::builders::CreateMeetingFluentBuilder::set_client_request_token): <p>The unique identifier for the client request. Use a different token for different meetings.</p>
    ///   - [`external_meeting_id(impl Into<String>)`](crate::operation::create_meeting::builders::CreateMeetingFluentBuilder::external_meeting_id) / [`set_external_meeting_id(Option<String>)`](crate::operation::create_meeting::builders::CreateMeetingFluentBuilder::set_external_meeting_id): <p>The external meeting ID.</p>
    ///   - [`meeting_host_id(impl Into<String>)`](crate::operation::create_meeting::builders::CreateMeetingFluentBuilder::meeting_host_id) / [`set_meeting_host_id(Option<String>)`](crate::operation::create_meeting::builders::CreateMeetingFluentBuilder::set_meeting_host_id): <p>Reserved.</p>
    ///   - [`media_region(impl Into<String>)`](crate::operation::create_meeting::builders::CreateMeetingFluentBuilder::media_region) / [`set_media_region(Option<String>)`](crate::operation::create_meeting::builders::CreateMeetingFluentBuilder::set_media_region): <p> The Region in which to create the meeting. Default: <code>us-east-1</code>. </p>  <p> Available values: <code>af-south-1</code> , <code>ap-northeast-1</code> , <code>ap-northeast-2</code> , <code>ap-south-1</code> , <code>ap-southeast-1</code> , <code>ap-southeast-2</code> , <code>ca-central-1</code> , <code>eu-central-1</code> , <code>eu-north-1</code> , <code>eu-south-1</code> , <code>eu-west-1</code> , <code>eu-west-2</code> , <code>eu-west-3</code> , <code>sa-east-1</code> , <code>us-east-1</code> , <code>us-east-2</code> , <code>us-west-1</code> , <code>us-west-2</code> . </p>
    ///   - [`tags(Vec<Tag>)`](crate::operation::create_meeting::builders::CreateMeetingFluentBuilder::tags) / [`set_tags(Option<Vec<Tag>>)`](crate::operation::create_meeting::builders::CreateMeetingFluentBuilder::set_tags): <p>The tag key-value pairs.</p>
    ///   - [`notifications_configuration(MeetingNotificationConfiguration)`](crate::operation::create_meeting::builders::CreateMeetingFluentBuilder::notifications_configuration) / [`set_notifications_configuration(Option<MeetingNotificationConfiguration>)`](crate::operation::create_meeting::builders::CreateMeetingFluentBuilder::set_notifications_configuration): <p>The configuration for resource targets to receive notifications when meeting and attendee events occur.</p>
    /// - On success, responds with [`CreateMeetingOutput`](crate::operation::create_meeting::CreateMeetingOutput) with field(s):
    ///   - [`meeting(Option<Meeting>)`](crate::operation::create_meeting::CreateMeetingOutput::meeting): <p> The meeting information, including the meeting ID and <code>MediaPlacement</code> . </p>
    /// - On failure, responds with [`SdkError<CreateMeetingError>`](crate::operation::create_meeting::CreateMeetingError)
    pub fn create_meeting(
        &self,
    ) -> crate::operation::create_meeting::builders::CreateMeetingFluentBuilder {
        crate::operation::create_meeting::builders::CreateMeetingFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
