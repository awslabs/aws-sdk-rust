// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct CreateRoomMembershipInput {
    /// <p>The Amazon Chime account ID.</p>
    #[doc(hidden)]
    pub account_id: std::option::Option<std::string::String>,
    /// <p>The room ID.</p>
    #[doc(hidden)]
    pub room_id: std::option::Option<std::string::String>,
    /// <p>The Amazon Chime member ID (user ID or bot ID).</p>
    #[doc(hidden)]
    pub member_id: std::option::Option<std::string::String>,
    /// <p>The role of the member.</p>
    #[doc(hidden)]
    pub role: std::option::Option<crate::types::RoomMembershipRole>,
}
impl CreateRoomMembershipInput {
    /// <p>The Amazon Chime account ID.</p>
    pub fn account_id(&self) -> std::option::Option<&str> {
        self.account_id.as_deref()
    }
    /// <p>The room ID.</p>
    pub fn room_id(&self) -> std::option::Option<&str> {
        self.room_id.as_deref()
    }
    /// <p>The Amazon Chime member ID (user ID or bot ID).</p>
    pub fn member_id(&self) -> std::option::Option<&str> {
        self.member_id.as_deref()
    }
    /// <p>The role of the member.</p>
    pub fn role(&self) -> std::option::Option<&crate::types::RoomMembershipRole> {
        self.role.as_ref()
    }
}
impl CreateRoomMembershipInput {
    /// Creates a new builder-style object to manufacture [`CreateRoomMembershipInput`](crate::operation::create_room_membership::CreateRoomMembershipInput).
    pub fn builder(
    ) -> crate::operation::create_room_membership::builders::CreateRoomMembershipInputBuilder {
        crate::operation::create_room_membership::builders::CreateRoomMembershipInputBuilder::default()
    }
}

/// A builder for [`CreateRoomMembershipInput`](crate::operation::create_room_membership::CreateRoomMembershipInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct CreateRoomMembershipInputBuilder {
    pub(crate) account_id: std::option::Option<std::string::String>,
    pub(crate) room_id: std::option::Option<std::string::String>,
    pub(crate) member_id: std::option::Option<std::string::String>,
    pub(crate) role: std::option::Option<crate::types::RoomMembershipRole>,
}
impl CreateRoomMembershipInputBuilder {
    /// <p>The Amazon Chime account ID.</p>
    pub fn account_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.account_id = Some(input.into());
        self
    }
    /// <p>The Amazon Chime account ID.</p>
    pub fn set_account_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.account_id = input;
        self
    }
    /// <p>The room ID.</p>
    pub fn room_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.room_id = Some(input.into());
        self
    }
    /// <p>The room ID.</p>
    pub fn set_room_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.room_id = input;
        self
    }
    /// <p>The Amazon Chime member ID (user ID or bot ID).</p>
    pub fn member_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.member_id = Some(input.into());
        self
    }
    /// <p>The Amazon Chime member ID (user ID or bot ID).</p>
    pub fn set_member_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.member_id = input;
        self
    }
    /// <p>The role of the member.</p>
    pub fn role(mut self, input: crate::types::RoomMembershipRole) -> Self {
        self.role = Some(input);
        self
    }
    /// <p>The role of the member.</p>
    pub fn set_role(
        mut self,
        input: std::option::Option<crate::types::RoomMembershipRole>,
    ) -> Self {
        self.role = input;
        self
    }
    /// Consumes the builder and constructs a [`CreateRoomMembershipInput`](crate::operation::create_room_membership::CreateRoomMembershipInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::create_room_membership::CreateRoomMembershipInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::create_room_membership::CreateRoomMembershipInput {
                account_id: self.account_id,
                room_id: self.room_id,
                member_id: self.member_id,
                role: self.role,
            },
        )
    }
}
