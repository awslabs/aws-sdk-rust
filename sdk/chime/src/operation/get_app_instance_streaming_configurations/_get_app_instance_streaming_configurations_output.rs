// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GetAppInstanceStreamingConfigurationsOutput {
    /// <p>The streaming settings.</p>
    #[doc(hidden)]
    pub app_instance_streaming_configurations:
        std::option::Option<std::vec::Vec<crate::types::AppInstanceStreamingConfiguration>>,
    _request_id: Option<String>,
}
impl GetAppInstanceStreamingConfigurationsOutput {
    /// <p>The streaming settings.</p>
    pub fn app_instance_streaming_configurations(
        &self,
    ) -> std::option::Option<&[crate::types::AppInstanceStreamingConfiguration]> {
        self.app_instance_streaming_configurations.as_deref()
    }
}
impl aws_http::request_id::RequestId for GetAppInstanceStreamingConfigurationsOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl GetAppInstanceStreamingConfigurationsOutput {
    /// Creates a new builder-style object to manufacture [`GetAppInstanceStreamingConfigurationsOutput`](crate::operation::get_app_instance_streaming_configurations::GetAppInstanceStreamingConfigurationsOutput).
    pub fn builder() -> crate::operation::get_app_instance_streaming_configurations::builders::GetAppInstanceStreamingConfigurationsOutputBuilder{
        crate::operation::get_app_instance_streaming_configurations::builders::GetAppInstanceStreamingConfigurationsOutputBuilder::default()
    }
}

/// A builder for [`GetAppInstanceStreamingConfigurationsOutput`](crate::operation::get_app_instance_streaming_configurations::GetAppInstanceStreamingConfigurationsOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct GetAppInstanceStreamingConfigurationsOutputBuilder {
    pub(crate) app_instance_streaming_configurations:
        std::option::Option<std::vec::Vec<crate::types::AppInstanceStreamingConfiguration>>,
    _request_id: Option<String>,
}
impl GetAppInstanceStreamingConfigurationsOutputBuilder {
    /// Appends an item to `app_instance_streaming_configurations`.
    ///
    /// To override the contents of this collection use [`set_app_instance_streaming_configurations`](Self::set_app_instance_streaming_configurations).
    ///
    /// <p>The streaming settings.</p>
    pub fn app_instance_streaming_configurations(
        mut self,
        input: crate::types::AppInstanceStreamingConfiguration,
    ) -> Self {
        let mut v = self
            .app_instance_streaming_configurations
            .unwrap_or_default();
        v.push(input);
        self.app_instance_streaming_configurations = Some(v);
        self
    }
    /// <p>The streaming settings.</p>
    pub fn set_app_instance_streaming_configurations(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::AppInstanceStreamingConfiguration>>,
    ) -> Self {
        self.app_instance_streaming_configurations = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`GetAppInstanceStreamingConfigurationsOutput`](crate::operation::get_app_instance_streaming_configurations::GetAppInstanceStreamingConfigurationsOutput).
    pub fn build(self) -> crate::operation::get_app_instance_streaming_configurations::GetAppInstanceStreamingConfigurationsOutput{
        crate::operation::get_app_instance_streaming_configurations::GetAppInstanceStreamingConfigurationsOutput {
            app_instance_streaming_configurations: self.app_instance_streaming_configurations
            ,
            _request_id: self._request_id,
        }
    }
}
