// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AssociateSigninDelegateGroupsWithAccountInput {
    /// <p>The Amazon Chime account ID.</p>
    pub account_id: ::std::option::Option<::std::string::String>,
    /// <p>The sign-in delegate groups.</p>
    pub signin_delegate_groups: ::std::option::Option<::std::vec::Vec<crate::types::SigninDelegateGroup>>,
}
impl AssociateSigninDelegateGroupsWithAccountInput {
    /// <p>The Amazon Chime account ID.</p>
    pub fn account_id(&self) -> ::std::option::Option<&str> {
        self.account_id.as_deref()
    }
    /// <p>The sign-in delegate groups.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.signin_delegate_groups.is_none()`.
    pub fn signin_delegate_groups(&self) -> &[crate::types::SigninDelegateGroup] {
        self.signin_delegate_groups.as_deref().unwrap_or_default()
    }
}
impl AssociateSigninDelegateGroupsWithAccountInput {
    /// Creates a new builder-style object to manufacture [`AssociateSigninDelegateGroupsWithAccountInput`](crate::operation::associate_signin_delegate_groups_with_account::AssociateSigninDelegateGroupsWithAccountInput).
    pub fn builder() -> crate::operation::associate_signin_delegate_groups_with_account::builders::AssociateSigninDelegateGroupsWithAccountInputBuilder
    {
        crate::operation::associate_signin_delegate_groups_with_account::builders::AssociateSigninDelegateGroupsWithAccountInputBuilder::default()
    }
}

/// A builder for [`AssociateSigninDelegateGroupsWithAccountInput`](crate::operation::associate_signin_delegate_groups_with_account::AssociateSigninDelegateGroupsWithAccountInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct AssociateSigninDelegateGroupsWithAccountInputBuilder {
    pub(crate) account_id: ::std::option::Option<::std::string::String>,
    pub(crate) signin_delegate_groups: ::std::option::Option<::std::vec::Vec<crate::types::SigninDelegateGroup>>,
}
impl AssociateSigninDelegateGroupsWithAccountInputBuilder {
    /// <p>The Amazon Chime account ID.</p>
    /// This field is required.
    pub fn account_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.account_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Chime account ID.</p>
    pub fn set_account_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.account_id = input;
        self
    }
    /// <p>The Amazon Chime account ID.</p>
    pub fn get_account_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.account_id
    }
    /// Appends an item to `signin_delegate_groups`.
    ///
    /// To override the contents of this collection use [`set_signin_delegate_groups`](Self::set_signin_delegate_groups).
    ///
    /// <p>The sign-in delegate groups.</p>
    pub fn signin_delegate_groups(mut self, input: crate::types::SigninDelegateGroup) -> Self {
        let mut v = self.signin_delegate_groups.unwrap_or_default();
        v.push(input);
        self.signin_delegate_groups = ::std::option::Option::Some(v);
        self
    }
    /// <p>The sign-in delegate groups.</p>
    pub fn set_signin_delegate_groups(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::SigninDelegateGroup>>) -> Self {
        self.signin_delegate_groups = input;
        self
    }
    /// <p>The sign-in delegate groups.</p>
    pub fn get_signin_delegate_groups(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::SigninDelegateGroup>> {
        &self.signin_delegate_groups
    }
    /// Consumes the builder and constructs a [`AssociateSigninDelegateGroupsWithAccountInput`](crate::operation::associate_signin_delegate_groups_with_account::AssociateSigninDelegateGroupsWithAccountInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::associate_signin_delegate_groups_with_account::AssociateSigninDelegateGroupsWithAccountInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(
            crate::operation::associate_signin_delegate_groups_with_account::AssociateSigninDelegateGroupsWithAccountInput {
                account_id: self.account_id,
                signin_delegate_groups: self.signin_delegate_groups,
            },
        )
    }
}
