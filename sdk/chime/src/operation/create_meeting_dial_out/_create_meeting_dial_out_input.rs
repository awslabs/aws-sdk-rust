// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq)]
pub struct CreateMeetingDialOutInput {
    /// <p>The Amazon Chime SDK meeting ID.</p>
    pub meeting_id: ::std::option::Option<::std::string::String>,
    /// <p>Phone number used as the caller ID when the remote party receives a call.</p>
    pub from_phone_number: ::std::option::Option<::std::string::String>,
    /// <p>Phone number called when inviting someone to a meeting.</p>
    pub to_phone_number: ::std::option::Option<::std::string::String>,
    /// <p>Token used by the Amazon Chime SDK attendee. Call the <a href="https://docs.aws.amazon.com/chime/latest/APIReference/API_CreateAttendee.html">CreateAttendee</a> action to get a join token.</p>
    pub join_token: ::std::option::Option<::std::string::String>,
}
impl CreateMeetingDialOutInput {
    /// <p>The Amazon Chime SDK meeting ID.</p>
    pub fn meeting_id(&self) -> ::std::option::Option<&str> {
        self.meeting_id.as_deref()
    }
    /// <p>Phone number used as the caller ID when the remote party receives a call.</p>
    pub fn from_phone_number(&self) -> ::std::option::Option<&str> {
        self.from_phone_number.as_deref()
    }
    /// <p>Phone number called when inviting someone to a meeting.</p>
    pub fn to_phone_number(&self) -> ::std::option::Option<&str> {
        self.to_phone_number.as_deref()
    }
    /// <p>Token used by the Amazon Chime SDK attendee. Call the <a href="https://docs.aws.amazon.com/chime/latest/APIReference/API_CreateAttendee.html">CreateAttendee</a> action to get a join token.</p>
    pub fn join_token(&self) -> ::std::option::Option<&str> {
        self.join_token.as_deref()
    }
}
impl ::std::fmt::Debug for CreateMeetingDialOutInput {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("CreateMeetingDialOutInput");
        formatter.field("meeting_id", &self.meeting_id);
        formatter.field("from_phone_number", &"*** Sensitive Data Redacted ***");
        formatter.field("to_phone_number", &"*** Sensitive Data Redacted ***");
        formatter.field("join_token", &"*** Sensitive Data Redacted ***");
        formatter.finish()
    }
}
impl CreateMeetingDialOutInput {
    /// Creates a new builder-style object to manufacture [`CreateMeetingDialOutInput`](crate::operation::create_meeting_dial_out::CreateMeetingDialOutInput).
    pub fn builder() -> crate::operation::create_meeting_dial_out::builders::CreateMeetingDialOutInputBuilder {
        crate::operation::create_meeting_dial_out::builders::CreateMeetingDialOutInputBuilder::default()
    }
}

/// A builder for [`CreateMeetingDialOutInput`](crate::operation::create_meeting_dial_out::CreateMeetingDialOutInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default)]
pub struct CreateMeetingDialOutInputBuilder {
    pub(crate) meeting_id: ::std::option::Option<::std::string::String>,
    pub(crate) from_phone_number: ::std::option::Option<::std::string::String>,
    pub(crate) to_phone_number: ::std::option::Option<::std::string::String>,
    pub(crate) join_token: ::std::option::Option<::std::string::String>,
}
impl CreateMeetingDialOutInputBuilder {
    /// <p>The Amazon Chime SDK meeting ID.</p>
    /// This field is required.
    pub fn meeting_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.meeting_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Chime SDK meeting ID.</p>
    pub fn set_meeting_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.meeting_id = input;
        self
    }
    /// <p>The Amazon Chime SDK meeting ID.</p>
    pub fn get_meeting_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.meeting_id
    }
    /// <p>Phone number used as the caller ID when the remote party receives a call.</p>
    /// This field is required.
    pub fn from_phone_number(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.from_phone_number = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Phone number used as the caller ID when the remote party receives a call.</p>
    pub fn set_from_phone_number(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.from_phone_number = input;
        self
    }
    /// <p>Phone number used as the caller ID when the remote party receives a call.</p>
    pub fn get_from_phone_number(&self) -> &::std::option::Option<::std::string::String> {
        &self.from_phone_number
    }
    /// <p>Phone number called when inviting someone to a meeting.</p>
    /// This field is required.
    pub fn to_phone_number(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.to_phone_number = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Phone number called when inviting someone to a meeting.</p>
    pub fn set_to_phone_number(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.to_phone_number = input;
        self
    }
    /// <p>Phone number called when inviting someone to a meeting.</p>
    pub fn get_to_phone_number(&self) -> &::std::option::Option<::std::string::String> {
        &self.to_phone_number
    }
    /// <p>Token used by the Amazon Chime SDK attendee. Call the <a href="https://docs.aws.amazon.com/chime/latest/APIReference/API_CreateAttendee.html">CreateAttendee</a> action to get a join token.</p>
    /// This field is required.
    pub fn join_token(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.join_token = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Token used by the Amazon Chime SDK attendee. Call the <a href="https://docs.aws.amazon.com/chime/latest/APIReference/API_CreateAttendee.html">CreateAttendee</a> action to get a join token.</p>
    pub fn set_join_token(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.join_token = input;
        self
    }
    /// <p>Token used by the Amazon Chime SDK attendee. Call the <a href="https://docs.aws.amazon.com/chime/latest/APIReference/API_CreateAttendee.html">CreateAttendee</a> action to get a join token.</p>
    pub fn get_join_token(&self) -> &::std::option::Option<::std::string::String> {
        &self.join_token
    }
    /// Consumes the builder and constructs a [`CreateMeetingDialOutInput`](crate::operation::create_meeting_dial_out::CreateMeetingDialOutInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::create_meeting_dial_out::CreateMeetingDialOutInput, ::aws_smithy_types::error::operation::BuildError>
    {
        ::std::result::Result::Ok(crate::operation::create_meeting_dial_out::CreateMeetingDialOutInput {
            meeting_id: self.meeting_id,
            from_phone_number: self.from_phone_number,
            to_phone_number: self.to_phone_number,
            join_token: self.join_token,
        })
    }
}
impl ::std::fmt::Debug for CreateMeetingDialOutInputBuilder {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("CreateMeetingDialOutInputBuilder");
        formatter.field("meeting_id", &self.meeting_id);
        formatter.field("from_phone_number", &"*** Sensitive Data Redacted ***");
        formatter.field("to_phone_number", &"*** Sensitive Data Redacted ***");
        formatter.field("join_token", &"*** Sensitive Data Redacted ***");
        formatter.finish()
    }
}
