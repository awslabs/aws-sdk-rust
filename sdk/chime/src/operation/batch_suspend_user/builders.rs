// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub use crate::operation::batch_suspend_user::_batch_suspend_user_output::BatchSuspendUserOutputBuilder;

pub use crate::operation::batch_suspend_user::_batch_suspend_user_input::BatchSuspendUserInputBuilder;

/// Fluent builder constructing a request to `BatchSuspendUser`.
///
/// <p>Suspends up to 50 users from a <code>Team</code> or <code>EnterpriseLWA</code> Amazon Chime account. For more information about different account types, see <a href="https://docs.aws.amazon.com/chime/latest/ag/manage-chime-account.html">Managing Your Amazon Chime Accounts</a> in the <i>Amazon Chime Administration Guide</i>.</p>
/// <p>Users suspended from a <code>Team</code> account are disassociated from the account,but they can continue to use Amazon Chime as free users. To remove the suspension from suspended <code>Team</code> account users, invite them to the <code>Team</code> account again. You can use the <code>InviteUsers</code> action to do so.</p>
/// <p>Users suspended from an <code>EnterpriseLWA</code> account are immediately signed out of Amazon Chime and can no longer sign in. To remove the suspension from suspended <code>EnterpriseLWA</code> account users, use the <code>BatchUnsuspendUser</code> action.</p>
/// <p> To sign out users without suspending them, use the <code>LogoutUser</code> action. </p>
#[derive(std::clone::Clone, std::fmt::Debug)]
pub struct BatchSuspendUserFluentBuilder {
    handle: std::sync::Arc<crate::client::Handle>,
    inner: crate::operation::batch_suspend_user::builders::BatchSuspendUserInputBuilder,
}
impl BatchSuspendUserFluentBuilder {
    /// Creates a new `BatchSuspendUser`.
    pub(crate) fn new(handle: std::sync::Arc<crate::client::Handle>) -> Self {
        Self {
            handle,
            inner: Default::default(),
        }
    }

    /// Consume this builder, creating a customizable operation that can be modified before being
    /// sent. The operation's inner [http::Request] can be modified as well.
    pub async fn customize(
        self,
    ) -> std::result::Result<
        crate::client::customize::CustomizableOperation<
            crate::operation::batch_suspend_user::BatchSuspendUser,
            aws_http::retry::AwsResponseRetryClassifier,
        >,
        aws_smithy_http::result::SdkError<
            crate::operation::batch_suspend_user::BatchSuspendUserError,
        >,
    > {
        let handle = self.handle.clone();
        let operation = self
            .inner
            .build()
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?
            .make_operation(&handle.conf)
            .await
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?;
        Ok(crate::client::customize::CustomizableOperation { handle, operation })
    }

    /// Sends the request and returns the response.
    ///
    /// If an error occurs, an `SdkError` will be returned with additional details that
    /// can be matched against.
    ///
    /// By default, any retryable failures will be retried twice. Retry behavior
    /// is configurable with the [RetryConfig](aws_smithy_types::retry::RetryConfig), which can be
    /// set when configuring the client.
    pub async fn send(
        self,
    ) -> std::result::Result<
        crate::operation::batch_suspend_user::BatchSuspendUserOutput,
        aws_smithy_http::result::SdkError<
            crate::operation::batch_suspend_user::BatchSuspendUserError,
        >,
    > {
        let op = self
            .inner
            .build()
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?
            .make_operation(&self.handle.conf)
            .await
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?;
        self.handle.client.call(op).await
    }
    /// <p>The Amazon Chime account ID.</p>
    pub fn account_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.inner = self.inner.account_id(input.into());
        self
    }
    /// <p>The Amazon Chime account ID.</p>
    pub fn set_account_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.inner = self.inner.set_account_id(input);
        self
    }
    /// Appends an item to `UserIdList`.
    ///
    /// To override the contents of this collection use [`set_user_id_list`](Self::set_user_id_list).
    ///
    /// <p>The request containing the user IDs to suspend.</p>
    pub fn user_id_list(mut self, input: impl Into<std::string::String>) -> Self {
        self.inner = self.inner.user_id_list(input.into());
        self
    }
    /// <p>The request containing the user IDs to suspend.</p>
    pub fn set_user_id_list(
        mut self,
        input: std::option::Option<std::vec::Vec<std::string::String>>,
    ) -> Self {
        self.inner = self.inner.set_user_id_list(input);
        self
    }
}
