// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The violation details for a firewall subnet's VPC endpoint that's deleted or missing.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct FirewallSubnetMissingVpcEndpointViolation {
    /// <p>The ID of the firewall that this VPC endpoint is associated with.</p>
    #[doc(hidden)]
    pub firewall_subnet_id: std::option::Option<std::string::String>,
    /// <p>The resource ID of the VPC associated with the deleted VPC subnet.</p>
    #[doc(hidden)]
    pub vpc_id: std::option::Option<std::string::String>,
    /// <p>The name of the Availability Zone of the deleted VPC subnet.</p>
    #[doc(hidden)]
    pub subnet_availability_zone: std::option::Option<std::string::String>,
    /// <p>The ID of the Availability Zone of the deleted VPC subnet.</p>
    #[doc(hidden)]
    pub subnet_availability_zone_id: std::option::Option<std::string::String>,
}
impl FirewallSubnetMissingVpcEndpointViolation {
    /// <p>The ID of the firewall that this VPC endpoint is associated with.</p>
    pub fn firewall_subnet_id(&self) -> std::option::Option<&str> {
        self.firewall_subnet_id.as_deref()
    }
    /// <p>The resource ID of the VPC associated with the deleted VPC subnet.</p>
    pub fn vpc_id(&self) -> std::option::Option<&str> {
        self.vpc_id.as_deref()
    }
    /// <p>The name of the Availability Zone of the deleted VPC subnet.</p>
    pub fn subnet_availability_zone(&self) -> std::option::Option<&str> {
        self.subnet_availability_zone.as_deref()
    }
    /// <p>The ID of the Availability Zone of the deleted VPC subnet.</p>
    pub fn subnet_availability_zone_id(&self) -> std::option::Option<&str> {
        self.subnet_availability_zone_id.as_deref()
    }
}
impl FirewallSubnetMissingVpcEndpointViolation {
    /// Creates a new builder-style object to manufacture [`FirewallSubnetMissingVpcEndpointViolation`](crate::types::FirewallSubnetMissingVpcEndpointViolation).
    pub fn builder() -> crate::types::builders::FirewallSubnetMissingVpcEndpointViolationBuilder {
        crate::types::builders::FirewallSubnetMissingVpcEndpointViolationBuilder::default()
    }
}

/// A builder for [`FirewallSubnetMissingVpcEndpointViolation`](crate::types::FirewallSubnetMissingVpcEndpointViolation).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct FirewallSubnetMissingVpcEndpointViolationBuilder {
    pub(crate) firewall_subnet_id: std::option::Option<std::string::String>,
    pub(crate) vpc_id: std::option::Option<std::string::String>,
    pub(crate) subnet_availability_zone: std::option::Option<std::string::String>,
    pub(crate) subnet_availability_zone_id: std::option::Option<std::string::String>,
}
impl FirewallSubnetMissingVpcEndpointViolationBuilder {
    /// <p>The ID of the firewall that this VPC endpoint is associated with.</p>
    pub fn firewall_subnet_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.firewall_subnet_id = Some(input.into());
        self
    }
    /// <p>The ID of the firewall that this VPC endpoint is associated with.</p>
    pub fn set_firewall_subnet_id(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.firewall_subnet_id = input;
        self
    }
    /// <p>The resource ID of the VPC associated with the deleted VPC subnet.</p>
    pub fn vpc_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.vpc_id = Some(input.into());
        self
    }
    /// <p>The resource ID of the VPC associated with the deleted VPC subnet.</p>
    pub fn set_vpc_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.vpc_id = input;
        self
    }
    /// <p>The name of the Availability Zone of the deleted VPC subnet.</p>
    pub fn subnet_availability_zone(mut self, input: impl Into<std::string::String>) -> Self {
        self.subnet_availability_zone = Some(input.into());
        self
    }
    /// <p>The name of the Availability Zone of the deleted VPC subnet.</p>
    pub fn set_subnet_availability_zone(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.subnet_availability_zone = input;
        self
    }
    /// <p>The ID of the Availability Zone of the deleted VPC subnet.</p>
    pub fn subnet_availability_zone_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.subnet_availability_zone_id = Some(input.into());
        self
    }
    /// <p>The ID of the Availability Zone of the deleted VPC subnet.</p>
    pub fn set_subnet_availability_zone_id(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.subnet_availability_zone_id = input;
        self
    }
    /// Consumes the builder and constructs a [`FirewallSubnetMissingVpcEndpointViolation`](crate::types::FirewallSubnetMissingVpcEndpointViolation).
    pub fn build(self) -> crate::types::FirewallSubnetMissingVpcEndpointViolation {
        crate::types::FirewallSubnetMissingVpcEndpointViolation {
            firewall_subnet_id: self.firewall_subnet_id,
            vpc_id: self.vpc_id,
            subnet_availability_zone: self.subnet_availability_zone,
            subnet_availability_zone_id: self.subnet_availability_zone_id,
        }
    }
}
