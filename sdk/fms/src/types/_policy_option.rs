// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains the Network Firewall firewall policy options to configure the policy's deployment model and third-party firewall policy settings.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct PolicyOption {
    /// <p>Defines the deployment model to use for the firewall policy.</p>
    #[doc(hidden)]
    pub network_firewall_policy: std::option::Option<crate::types::NetworkFirewallPolicy>,
    /// <p>Defines the policy options for a third-party firewall policy.</p>
    #[doc(hidden)]
    pub third_party_firewall_policy: std::option::Option<crate::types::ThirdPartyFirewallPolicy>,
}
impl PolicyOption {
    /// <p>Defines the deployment model to use for the firewall policy.</p>
    pub fn network_firewall_policy(
        &self,
    ) -> std::option::Option<&crate::types::NetworkFirewallPolicy> {
        self.network_firewall_policy.as_ref()
    }
    /// <p>Defines the policy options for a third-party firewall policy.</p>
    pub fn third_party_firewall_policy(
        &self,
    ) -> std::option::Option<&crate::types::ThirdPartyFirewallPolicy> {
        self.third_party_firewall_policy.as_ref()
    }
}
impl PolicyOption {
    /// Creates a new builder-style object to manufacture [`PolicyOption`](crate::types::PolicyOption).
    pub fn builder() -> crate::types::builders::PolicyOptionBuilder {
        crate::types::builders::PolicyOptionBuilder::default()
    }
}

/// A builder for [`PolicyOption`](crate::types::PolicyOption).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct PolicyOptionBuilder {
    pub(crate) network_firewall_policy: std::option::Option<crate::types::NetworkFirewallPolicy>,
    pub(crate) third_party_firewall_policy:
        std::option::Option<crate::types::ThirdPartyFirewallPolicy>,
}
impl PolicyOptionBuilder {
    /// <p>Defines the deployment model to use for the firewall policy.</p>
    pub fn network_firewall_policy(mut self, input: crate::types::NetworkFirewallPolicy) -> Self {
        self.network_firewall_policy = Some(input);
        self
    }
    /// <p>Defines the deployment model to use for the firewall policy.</p>
    pub fn set_network_firewall_policy(
        mut self,
        input: std::option::Option<crate::types::NetworkFirewallPolicy>,
    ) -> Self {
        self.network_firewall_policy = input;
        self
    }
    /// <p>Defines the policy options for a third-party firewall policy.</p>
    pub fn third_party_firewall_policy(
        mut self,
        input: crate::types::ThirdPartyFirewallPolicy,
    ) -> Self {
        self.third_party_firewall_policy = Some(input);
        self
    }
    /// <p>Defines the policy options for a third-party firewall policy.</p>
    pub fn set_third_party_firewall_policy(
        mut self,
        input: std::option::Option<crate::types::ThirdPartyFirewallPolicy>,
    ) -> Self {
        self.third_party_firewall_policy = input;
        self
    }
    /// Consumes the builder and constructs a [`PolicyOption`](crate::types::PolicyOption).
    pub fn build(self) -> crate::types::PolicyOption {
        crate::types::PolicyOption {
            network_firewall_policy: self.network_firewall_policy,
            third_party_firewall_policy: self.third_party_firewall_policy,
        }
    }
}
