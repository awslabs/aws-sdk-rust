// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Violation detail for an EC2 instance resource.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AwsEc2InstanceViolation {
    /// <p>The resource ID of the EC2 instance.</p>
    #[doc(hidden)]
    pub violation_target: std::option::Option<std::string::String>,
    /// <p>Violation detail for network interfaces associated with the EC2 instance.</p>
    #[doc(hidden)]
    pub aws_ec2_network_interface_violations:
        std::option::Option<std::vec::Vec<crate::types::AwsEc2NetworkInterfaceViolation>>,
}
impl AwsEc2InstanceViolation {
    /// <p>The resource ID of the EC2 instance.</p>
    pub fn violation_target(&self) -> std::option::Option<&str> {
        self.violation_target.as_deref()
    }
    /// <p>Violation detail for network interfaces associated with the EC2 instance.</p>
    pub fn aws_ec2_network_interface_violations(
        &self,
    ) -> std::option::Option<&[crate::types::AwsEc2NetworkInterfaceViolation]> {
        self.aws_ec2_network_interface_violations.as_deref()
    }
}
impl AwsEc2InstanceViolation {
    /// Creates a new builder-style object to manufacture [`AwsEc2InstanceViolation`](crate::types::AwsEc2InstanceViolation).
    pub fn builder() -> crate::types::builders::AwsEc2InstanceViolationBuilder {
        crate::types::builders::AwsEc2InstanceViolationBuilder::default()
    }
}

/// A builder for [`AwsEc2InstanceViolation`](crate::types::AwsEc2InstanceViolation).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AwsEc2InstanceViolationBuilder {
    pub(crate) violation_target: std::option::Option<std::string::String>,
    pub(crate) aws_ec2_network_interface_violations:
        std::option::Option<std::vec::Vec<crate::types::AwsEc2NetworkInterfaceViolation>>,
}
impl AwsEc2InstanceViolationBuilder {
    /// <p>The resource ID of the EC2 instance.</p>
    pub fn violation_target(mut self, input: impl Into<std::string::String>) -> Self {
        self.violation_target = Some(input.into());
        self
    }
    /// <p>The resource ID of the EC2 instance.</p>
    pub fn set_violation_target(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.violation_target = input;
        self
    }
    /// Appends an item to `aws_ec2_network_interface_violations`.
    ///
    /// To override the contents of this collection use [`set_aws_ec2_network_interface_violations`](Self::set_aws_ec2_network_interface_violations).
    ///
    /// <p>Violation detail for network interfaces associated with the EC2 instance.</p>
    pub fn aws_ec2_network_interface_violations(
        mut self,
        input: crate::types::AwsEc2NetworkInterfaceViolation,
    ) -> Self {
        let mut v = self
            .aws_ec2_network_interface_violations
            .unwrap_or_default();
        v.push(input);
        self.aws_ec2_network_interface_violations = Some(v);
        self
    }
    /// <p>Violation detail for network interfaces associated with the EC2 instance.</p>
    pub fn set_aws_ec2_network_interface_violations(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::AwsEc2NetworkInterfaceViolation>>,
    ) -> Self {
        self.aws_ec2_network_interface_violations = input;
        self
    }
    /// Consumes the builder and constructs a [`AwsEc2InstanceViolation`](crate::types::AwsEc2InstanceViolation).
    pub fn build(self) -> crate::types::AwsEc2InstanceViolation {
        crate::types::AwsEc2InstanceViolation {
            violation_target: self.violation_target,
            aws_ec2_network_interface_violations: self.aws_ec2_network_interface_violations,
        }
    }
}
