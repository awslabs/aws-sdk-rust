// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Details of a resource that failed when trying to update it's association to a resource set.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct FailedItem {
    /// <p>The univeral resource indicator (URI) of the resource that failed.</p>
    #[doc(hidden)]
    pub uri: std::option::Option<std::string::String>,
    /// <p>The reason the resource's association could not be updated.</p>
    #[doc(hidden)]
    pub reason: std::option::Option<crate::types::FailedItemReason>,
}
impl FailedItem {
    /// <p>The univeral resource indicator (URI) of the resource that failed.</p>
    pub fn uri(&self) -> std::option::Option<&str> {
        self.uri.as_deref()
    }
    /// <p>The reason the resource's association could not be updated.</p>
    pub fn reason(&self) -> std::option::Option<&crate::types::FailedItemReason> {
        self.reason.as_ref()
    }
}
impl FailedItem {
    /// Creates a new builder-style object to manufacture [`FailedItem`](crate::types::FailedItem).
    pub fn builder() -> crate::types::builders::FailedItemBuilder {
        crate::types::builders::FailedItemBuilder::default()
    }
}

/// A builder for [`FailedItem`](crate::types::FailedItem).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct FailedItemBuilder {
    pub(crate) uri: std::option::Option<std::string::String>,
    pub(crate) reason: std::option::Option<crate::types::FailedItemReason>,
}
impl FailedItemBuilder {
    /// <p>The univeral resource indicator (URI) of the resource that failed.</p>
    pub fn uri(mut self, input: impl Into<std::string::String>) -> Self {
        self.uri = Some(input.into());
        self
    }
    /// <p>The univeral resource indicator (URI) of the resource that failed.</p>
    pub fn set_uri(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.uri = input;
        self
    }
    /// <p>The reason the resource's association could not be updated.</p>
    pub fn reason(mut self, input: crate::types::FailedItemReason) -> Self {
        self.reason = Some(input);
        self
    }
    /// <p>The reason the resource's association could not be updated.</p>
    pub fn set_reason(
        mut self,
        input: std::option::Option<crate::types::FailedItemReason>,
    ) -> Self {
        self.reason = input;
        self
    }
    /// Consumes the builder and constructs a [`FailedItem`](crate::types::FailedItem).
    pub fn build(self) -> crate::types::FailedItem {
        crate::types::FailedItem {
            uri: self.uri,
            reason: self.reason,
        }
    }
}
