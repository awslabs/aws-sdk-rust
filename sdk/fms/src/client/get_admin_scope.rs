// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetAdminScope`](crate::operation::get_admin_scope::builders::GetAdminScopeFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`admin_account(impl Into<String>)`](crate::operation::get_admin_scope::builders::GetAdminScopeFluentBuilder::admin_account) / [`set_admin_account(Option<String>)`](crate::operation::get_admin_scope::builders::GetAdminScopeFluentBuilder::set_admin_account):<br>required: **true**<br><p>The administator account that you want to get the details for.</p><br>
    /// - On success, responds with [`GetAdminScopeOutput`](crate::operation::get_admin_scope::GetAdminScopeOutput) with field(s):
    ///   - [`admin_scope(Option<AdminScope>)`](crate::operation::get_admin_scope::GetAdminScopeOutput::admin_scope): <p>Contains details about the administrative scope of the requested account.</p>
    ///   - [`status(Option<OrganizationStatus>)`](crate::operation::get_admin_scope::GetAdminScopeOutput::status): <p>The current status of the request to onboard a member account as an Firewall Manager administator.</p>  <ul>   <li> <p> <code>ONBOARDING</code> - The account is onboarding to Firewall Manager as an administrator.</p> </li>   <li> <p> <code>ONBOARDING_COMPLETE</code> - Firewall Manager The account is onboarded to Firewall Manager as an administrator, and can perform actions on the resources defined in their <code>AdminScope</code>.</p> </li>   <li> <p> <code>OFFBOARDING</code> - The account is being removed as an Firewall Manager administrator.</p> </li>   <li> <p> <code>OFFBOARDING_COMPLETE</code> - The account has been removed as an Firewall Manager administrator.</p> </li>  </ul>
    /// - On failure, responds with [`SdkError<GetAdminScopeError>`](crate::operation::get_admin_scope::GetAdminScopeError)
    pub fn get_admin_scope(&self) -> crate::operation::get_admin_scope::builders::GetAdminScopeFluentBuilder {
        crate::operation::get_admin_scope::builders::GetAdminScopeFluentBuilder::new(self.handle.clone())
    }
}
