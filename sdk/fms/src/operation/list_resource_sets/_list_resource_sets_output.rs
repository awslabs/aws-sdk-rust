// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ListResourceSetsOutput {
    /// <p>An array of <code>ResourceSetSummary</code> objects.</p>
    #[doc(hidden)]
    pub resource_sets: std::option::Option<std::vec::Vec<crate::types::ResourceSetSummary>>,
    /// <p>When you request a list of objects with a <code>MaxResults</code> setting, if the number of objects that are still available for retrieval exceeds the maximum you requested, Firewall Manager returns a <code>NextToken</code> value in the response. To retrieve the next batch of objects, use the token returned from the prior request in your next request.</p>
    #[doc(hidden)]
    pub next_token: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl ListResourceSetsOutput {
    /// <p>An array of <code>ResourceSetSummary</code> objects.</p>
    pub fn resource_sets(&self) -> std::option::Option<&[crate::types::ResourceSetSummary]> {
        self.resource_sets.as_deref()
    }
    /// <p>When you request a list of objects with a <code>MaxResults</code> setting, if the number of objects that are still available for retrieval exceeds the maximum you requested, Firewall Manager returns a <code>NextToken</code> value in the response. To retrieve the next batch of objects, use the token returned from the prior request in your next request.</p>
    pub fn next_token(&self) -> std::option::Option<&str> {
        self.next_token.as_deref()
    }
}
impl aws_http::request_id::RequestId for ListResourceSetsOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl ListResourceSetsOutput {
    /// Creates a new builder-style object to manufacture [`ListResourceSetsOutput`](crate::operation::list_resource_sets::ListResourceSetsOutput).
    pub fn builder() -> crate::operation::list_resource_sets::builders::ListResourceSetsOutputBuilder
    {
        crate::operation::list_resource_sets::builders::ListResourceSetsOutputBuilder::default()
    }
}

/// A builder for [`ListResourceSetsOutput`](crate::operation::list_resource_sets::ListResourceSetsOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ListResourceSetsOutputBuilder {
    pub(crate) resource_sets: std::option::Option<std::vec::Vec<crate::types::ResourceSetSummary>>,
    pub(crate) next_token: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl ListResourceSetsOutputBuilder {
    /// Appends an item to `resource_sets`.
    ///
    /// To override the contents of this collection use [`set_resource_sets`](Self::set_resource_sets).
    ///
    /// <p>An array of <code>ResourceSetSummary</code> objects.</p>
    pub fn resource_sets(mut self, input: crate::types::ResourceSetSummary) -> Self {
        let mut v = self.resource_sets.unwrap_or_default();
        v.push(input);
        self.resource_sets = Some(v);
        self
    }
    /// <p>An array of <code>ResourceSetSummary</code> objects.</p>
    pub fn set_resource_sets(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::ResourceSetSummary>>,
    ) -> Self {
        self.resource_sets = input;
        self
    }
    /// <p>When you request a list of objects with a <code>MaxResults</code> setting, if the number of objects that are still available for retrieval exceeds the maximum you requested, Firewall Manager returns a <code>NextToken</code> value in the response. To retrieve the next batch of objects, use the token returned from the prior request in your next request.</p>
    pub fn next_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.next_token = Some(input.into());
        self
    }
    /// <p>When you request a list of objects with a <code>MaxResults</code> setting, if the number of objects that are still available for retrieval exceeds the maximum you requested, Firewall Manager returns a <code>NextToken</code> value in the response. To retrieve the next batch of objects, use the token returned from the prior request in your next request.</p>
    pub fn set_next_token(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`ListResourceSetsOutput`](crate::operation::list_resource_sets::ListResourceSetsOutput).
    pub fn build(self) -> crate::operation::list_resource_sets::ListResourceSetsOutput {
        crate::operation::list_resource_sets::ListResourceSetsOutput {
            resource_sets: self.resource_sets,
            next_token: self.next_token,
            _request_id: self._request_id,
        }
    }
}
