// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GetProtectionStatusOutput {
    /// <p>The ID of the Firewall Manager administrator account for this policy.</p>
    #[doc(hidden)]
    pub admin_account_id: std::option::Option<std::string::String>,
    /// <p>The service type that is protected by the policy. Currently, this is always <code>SHIELD_ADVANCED</code>.</p>
    #[doc(hidden)]
    pub service_type: std::option::Option<crate::types::SecurityServiceType>,
    /// <p>Details about the attack, including the following:</p>
    /// <ul>
    /// <li> <p>Attack type</p> </li>
    /// <li> <p>Account ID</p> </li>
    /// <li> <p>ARN of the resource attacked</p> </li>
    /// <li> <p>Start time of the attack</p> </li>
    /// <li> <p>End time of the attack (ongoing attacks will not have an end time)</p> </li>
    /// </ul>
    /// <p>The details are in JSON format. </p>
    #[doc(hidden)]
    pub data: std::option::Option<std::string::String>,
    /// <p>If you have more objects than the number that you specified for <code>MaxResults</code> in the request, the response includes a <code>NextToken</code> value. To list more objects, submit another <code>GetProtectionStatus</code> request, and specify the <code>NextToken</code> value from the response in the <code>NextToken</code> value in the next request.</p>
    /// <p>Amazon Web Services SDKs provide auto-pagination that identify <code>NextToken</code> in a response and make subsequent request calls automatically on your behalf. However, this feature is not supported by <code>GetProtectionStatus</code>. You must submit subsequent requests with <code>NextToken</code> using your own processes. </p>
    #[doc(hidden)]
    pub next_token: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl GetProtectionStatusOutput {
    /// <p>The ID of the Firewall Manager administrator account for this policy.</p>
    pub fn admin_account_id(&self) -> std::option::Option<&str> {
        self.admin_account_id.as_deref()
    }
    /// <p>The service type that is protected by the policy. Currently, this is always <code>SHIELD_ADVANCED</code>.</p>
    pub fn service_type(&self) -> std::option::Option<&crate::types::SecurityServiceType> {
        self.service_type.as_ref()
    }
    /// <p>Details about the attack, including the following:</p>
    /// <ul>
    /// <li> <p>Attack type</p> </li>
    /// <li> <p>Account ID</p> </li>
    /// <li> <p>ARN of the resource attacked</p> </li>
    /// <li> <p>Start time of the attack</p> </li>
    /// <li> <p>End time of the attack (ongoing attacks will not have an end time)</p> </li>
    /// </ul>
    /// <p>The details are in JSON format. </p>
    pub fn data(&self) -> std::option::Option<&str> {
        self.data.as_deref()
    }
    /// <p>If you have more objects than the number that you specified for <code>MaxResults</code> in the request, the response includes a <code>NextToken</code> value. To list more objects, submit another <code>GetProtectionStatus</code> request, and specify the <code>NextToken</code> value from the response in the <code>NextToken</code> value in the next request.</p>
    /// <p>Amazon Web Services SDKs provide auto-pagination that identify <code>NextToken</code> in a response and make subsequent request calls automatically on your behalf. However, this feature is not supported by <code>GetProtectionStatus</code>. You must submit subsequent requests with <code>NextToken</code> using your own processes. </p>
    pub fn next_token(&self) -> std::option::Option<&str> {
        self.next_token.as_deref()
    }
}
impl aws_http::request_id::RequestId for GetProtectionStatusOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl GetProtectionStatusOutput {
    /// Creates a new builder-style object to manufacture [`GetProtectionStatusOutput`](crate::operation::get_protection_status::GetProtectionStatusOutput).
    pub fn builder(
    ) -> crate::operation::get_protection_status::builders::GetProtectionStatusOutputBuilder {
        crate::operation::get_protection_status::builders::GetProtectionStatusOutputBuilder::default(
        )
    }
}

/// A builder for [`GetProtectionStatusOutput`](crate::operation::get_protection_status::GetProtectionStatusOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct GetProtectionStatusOutputBuilder {
    pub(crate) admin_account_id: std::option::Option<std::string::String>,
    pub(crate) service_type: std::option::Option<crate::types::SecurityServiceType>,
    pub(crate) data: std::option::Option<std::string::String>,
    pub(crate) next_token: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl GetProtectionStatusOutputBuilder {
    /// <p>The ID of the Firewall Manager administrator account for this policy.</p>
    pub fn admin_account_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.admin_account_id = Some(input.into());
        self
    }
    /// <p>The ID of the Firewall Manager administrator account for this policy.</p>
    pub fn set_admin_account_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.admin_account_id = input;
        self
    }
    /// <p>The service type that is protected by the policy. Currently, this is always <code>SHIELD_ADVANCED</code>.</p>
    pub fn service_type(mut self, input: crate::types::SecurityServiceType) -> Self {
        self.service_type = Some(input);
        self
    }
    /// <p>The service type that is protected by the policy. Currently, this is always <code>SHIELD_ADVANCED</code>.</p>
    pub fn set_service_type(
        mut self,
        input: std::option::Option<crate::types::SecurityServiceType>,
    ) -> Self {
        self.service_type = input;
        self
    }
    /// <p>Details about the attack, including the following:</p>
    /// <ul>
    /// <li> <p>Attack type</p> </li>
    /// <li> <p>Account ID</p> </li>
    /// <li> <p>ARN of the resource attacked</p> </li>
    /// <li> <p>Start time of the attack</p> </li>
    /// <li> <p>End time of the attack (ongoing attacks will not have an end time)</p> </li>
    /// </ul>
    /// <p>The details are in JSON format. </p>
    pub fn data(mut self, input: impl Into<std::string::String>) -> Self {
        self.data = Some(input.into());
        self
    }
    /// <p>Details about the attack, including the following:</p>
    /// <ul>
    /// <li> <p>Attack type</p> </li>
    /// <li> <p>Account ID</p> </li>
    /// <li> <p>ARN of the resource attacked</p> </li>
    /// <li> <p>Start time of the attack</p> </li>
    /// <li> <p>End time of the attack (ongoing attacks will not have an end time)</p> </li>
    /// </ul>
    /// <p>The details are in JSON format. </p>
    pub fn set_data(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.data = input;
        self
    }
    /// <p>If you have more objects than the number that you specified for <code>MaxResults</code> in the request, the response includes a <code>NextToken</code> value. To list more objects, submit another <code>GetProtectionStatus</code> request, and specify the <code>NextToken</code> value from the response in the <code>NextToken</code> value in the next request.</p>
    /// <p>Amazon Web Services SDKs provide auto-pagination that identify <code>NextToken</code> in a response and make subsequent request calls automatically on your behalf. However, this feature is not supported by <code>GetProtectionStatus</code>. You must submit subsequent requests with <code>NextToken</code> using your own processes. </p>
    pub fn next_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.next_token = Some(input.into());
        self
    }
    /// <p>If you have more objects than the number that you specified for <code>MaxResults</code> in the request, the response includes a <code>NextToken</code> value. To list more objects, submit another <code>GetProtectionStatus</code> request, and specify the <code>NextToken</code> value from the response in the <code>NextToken</code> value in the next request.</p>
    /// <p>Amazon Web Services SDKs provide auto-pagination that identify <code>NextToken</code> in a response and make subsequent request calls automatically on your behalf. However, this feature is not supported by <code>GetProtectionStatus</code>. You must submit subsequent requests with <code>NextToken</code> using your own processes. </p>
    pub fn set_next_token(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`GetProtectionStatusOutput`](crate::operation::get_protection_status::GetProtectionStatusOutput).
    pub fn build(self) -> crate::operation::get_protection_status::GetProtectionStatusOutput {
        crate::operation::get_protection_status::GetProtectionStatusOutput {
            admin_account_id: self.admin_account_id,
            service_type: self.service_type,
            data: self.data,
            next_token: self.next_token,
            _request_id: self._request_id,
        }
    }
}
