// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct BatchAssociateResourceOutput {
    /// <p>A unique identifier for the resource set, used in a TODO to refer to the resource set.</p>
    #[doc(hidden)]
    pub resource_set_identifier: std::option::Option<std::string::String>,
    /// <p>The resources that failed to associate to the resource set.</p>
    #[doc(hidden)]
    pub failed_items: std::option::Option<std::vec::Vec<crate::types::FailedItem>>,
    _request_id: Option<String>,
}
impl BatchAssociateResourceOutput {
    /// <p>A unique identifier for the resource set, used in a TODO to refer to the resource set.</p>
    pub fn resource_set_identifier(&self) -> std::option::Option<&str> {
        self.resource_set_identifier.as_deref()
    }
    /// <p>The resources that failed to associate to the resource set.</p>
    pub fn failed_items(&self) -> std::option::Option<&[crate::types::FailedItem]> {
        self.failed_items.as_deref()
    }
}
impl aws_http::request_id::RequestId for BatchAssociateResourceOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl BatchAssociateResourceOutput {
    /// Creates a new builder-style object to manufacture [`BatchAssociateResourceOutput`](crate::operation::batch_associate_resource::BatchAssociateResourceOutput).
    pub fn builder(
    ) -> crate::operation::batch_associate_resource::builders::BatchAssociateResourceOutputBuilder
    {
        crate::operation::batch_associate_resource::builders::BatchAssociateResourceOutputBuilder::default()
    }
}

/// A builder for [`BatchAssociateResourceOutput`](crate::operation::batch_associate_resource::BatchAssociateResourceOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct BatchAssociateResourceOutputBuilder {
    pub(crate) resource_set_identifier: std::option::Option<std::string::String>,
    pub(crate) failed_items: std::option::Option<std::vec::Vec<crate::types::FailedItem>>,
    _request_id: Option<String>,
}
impl BatchAssociateResourceOutputBuilder {
    /// <p>A unique identifier for the resource set, used in a TODO to refer to the resource set.</p>
    pub fn resource_set_identifier(mut self, input: impl Into<std::string::String>) -> Self {
        self.resource_set_identifier = Some(input.into());
        self
    }
    /// <p>A unique identifier for the resource set, used in a TODO to refer to the resource set.</p>
    pub fn set_resource_set_identifier(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.resource_set_identifier = input;
        self
    }
    /// Appends an item to `failed_items`.
    ///
    /// To override the contents of this collection use [`set_failed_items`](Self::set_failed_items).
    ///
    /// <p>The resources that failed to associate to the resource set.</p>
    pub fn failed_items(mut self, input: crate::types::FailedItem) -> Self {
        let mut v = self.failed_items.unwrap_or_default();
        v.push(input);
        self.failed_items = Some(v);
        self
    }
    /// <p>The resources that failed to associate to the resource set.</p>
    pub fn set_failed_items(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::FailedItem>>,
    ) -> Self {
        self.failed_items = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`BatchAssociateResourceOutput`](crate::operation::batch_associate_resource::BatchAssociateResourceOutput).
    pub fn build(self) -> crate::operation::batch_associate_resource::BatchAssociateResourceOutput {
        crate::operation::batch_associate_resource::BatchAssociateResourceOutput {
            resource_set_identifier: self.resource_set_identifier,
            failed_items: self.failed_items,
            _request_id: self._request_id,
        }
    }
}
