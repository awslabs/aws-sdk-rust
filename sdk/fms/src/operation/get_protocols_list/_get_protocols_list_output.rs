// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GetProtocolsListOutput {
    /// <p>Information about the specified Firewall Manager protocols list.</p>
    #[doc(hidden)]
    pub protocols_list: std::option::Option<crate::types::ProtocolsListData>,
    /// <p>The Amazon Resource Name (ARN) of the specified protocols list.</p>
    #[doc(hidden)]
    pub protocols_list_arn: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl GetProtocolsListOutput {
    /// <p>Information about the specified Firewall Manager protocols list.</p>
    pub fn protocols_list(&self) -> std::option::Option<&crate::types::ProtocolsListData> {
        self.protocols_list.as_ref()
    }
    /// <p>The Amazon Resource Name (ARN) of the specified protocols list.</p>
    pub fn protocols_list_arn(&self) -> std::option::Option<&str> {
        self.protocols_list_arn.as_deref()
    }
}
impl aws_http::request_id::RequestId for GetProtocolsListOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl GetProtocolsListOutput {
    /// Creates a new builder-style object to manufacture [`GetProtocolsListOutput`](crate::operation::get_protocols_list::GetProtocolsListOutput).
    pub fn builder() -> crate::operation::get_protocols_list::builders::GetProtocolsListOutputBuilder
    {
        crate::operation::get_protocols_list::builders::GetProtocolsListOutputBuilder::default()
    }
}

/// A builder for [`GetProtocolsListOutput`](crate::operation::get_protocols_list::GetProtocolsListOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct GetProtocolsListOutputBuilder {
    pub(crate) protocols_list: std::option::Option<crate::types::ProtocolsListData>,
    pub(crate) protocols_list_arn: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl GetProtocolsListOutputBuilder {
    /// <p>Information about the specified Firewall Manager protocols list.</p>
    pub fn protocols_list(mut self, input: crate::types::ProtocolsListData) -> Self {
        self.protocols_list = Some(input);
        self
    }
    /// <p>Information about the specified Firewall Manager protocols list.</p>
    pub fn set_protocols_list(
        mut self,
        input: std::option::Option<crate::types::ProtocolsListData>,
    ) -> Self {
        self.protocols_list = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the specified protocols list.</p>
    pub fn protocols_list_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.protocols_list_arn = Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the specified protocols list.</p>
    pub fn set_protocols_list_arn(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.protocols_list_arn = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`GetProtocolsListOutput`](crate::operation::get_protocols_list::GetProtocolsListOutput).
    pub fn build(self) -> crate::operation::get_protocols_list::GetProtocolsListOutput {
        crate::operation::get_protocols_list::GetProtocolsListOutput {
            protocols_list: self.protocols_list,
            protocols_list_arn: self.protocols_list_arn,
            _request_id: self._request_id,
        }
    }
}
