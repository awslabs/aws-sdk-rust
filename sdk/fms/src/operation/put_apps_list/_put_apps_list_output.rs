// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct PutAppsListOutput {
    /// <p>The details of the Firewall Manager applications list.</p>
    #[doc(hidden)]
    pub apps_list: std::option::Option<crate::types::AppsListData>,
    /// <p>The Amazon Resource Name (ARN) of the applications list.</p>
    #[doc(hidden)]
    pub apps_list_arn: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl PutAppsListOutput {
    /// <p>The details of the Firewall Manager applications list.</p>
    pub fn apps_list(&self) -> std::option::Option<&crate::types::AppsListData> {
        self.apps_list.as_ref()
    }
    /// <p>The Amazon Resource Name (ARN) of the applications list.</p>
    pub fn apps_list_arn(&self) -> std::option::Option<&str> {
        self.apps_list_arn.as_deref()
    }
}
impl aws_http::request_id::RequestId for PutAppsListOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl PutAppsListOutput {
    /// Creates a new builder-style object to manufacture [`PutAppsListOutput`](crate::operation::put_apps_list::PutAppsListOutput).
    pub fn builder() -> crate::operation::put_apps_list::builders::PutAppsListOutputBuilder {
        crate::operation::put_apps_list::builders::PutAppsListOutputBuilder::default()
    }
}

/// A builder for [`PutAppsListOutput`](crate::operation::put_apps_list::PutAppsListOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct PutAppsListOutputBuilder {
    pub(crate) apps_list: std::option::Option<crate::types::AppsListData>,
    pub(crate) apps_list_arn: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl PutAppsListOutputBuilder {
    /// <p>The details of the Firewall Manager applications list.</p>
    pub fn apps_list(mut self, input: crate::types::AppsListData) -> Self {
        self.apps_list = Some(input);
        self
    }
    /// <p>The details of the Firewall Manager applications list.</p>
    pub fn set_apps_list(mut self, input: std::option::Option<crate::types::AppsListData>) -> Self {
        self.apps_list = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the applications list.</p>
    pub fn apps_list_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.apps_list_arn = Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the applications list.</p>
    pub fn set_apps_list_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.apps_list_arn = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`PutAppsListOutput`](crate::operation::put_apps_list::PutAppsListOutput).
    pub fn build(self) -> crate::operation::put_apps_list::PutAppsListOutput {
        crate::operation::put_apps_list::PutAppsListOutput {
            apps_list: self.apps_list,
            apps_list_arn: self.apps_list_arn,
            _request_id: self._request_id,
        }
    }
}
