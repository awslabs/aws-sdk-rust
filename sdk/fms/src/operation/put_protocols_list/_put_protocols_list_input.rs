// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct PutProtocolsListInput {
    /// <p>The details of the Firewall Manager protocols list to be created.</p>
    #[doc(hidden)]
    pub protocols_list: std::option::Option<crate::types::ProtocolsListData>,
    /// <p>The tags associated with the resource.</p>
    #[doc(hidden)]
    pub tag_list: std::option::Option<std::vec::Vec<crate::types::Tag>>,
}
impl PutProtocolsListInput {
    /// <p>The details of the Firewall Manager protocols list to be created.</p>
    pub fn protocols_list(&self) -> std::option::Option<&crate::types::ProtocolsListData> {
        self.protocols_list.as_ref()
    }
    /// <p>The tags associated with the resource.</p>
    pub fn tag_list(&self) -> std::option::Option<&[crate::types::Tag]> {
        self.tag_list.as_deref()
    }
}
impl PutProtocolsListInput {
    /// Creates a new builder-style object to manufacture [`PutProtocolsListInput`](crate::operation::put_protocols_list::PutProtocolsListInput).
    pub fn builder() -> crate::operation::put_protocols_list::builders::PutProtocolsListInputBuilder
    {
        crate::operation::put_protocols_list::builders::PutProtocolsListInputBuilder::default()
    }
}

/// A builder for [`PutProtocolsListInput`](crate::operation::put_protocols_list::PutProtocolsListInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct PutProtocolsListInputBuilder {
    pub(crate) protocols_list: std::option::Option<crate::types::ProtocolsListData>,
    pub(crate) tag_list: std::option::Option<std::vec::Vec<crate::types::Tag>>,
}
impl PutProtocolsListInputBuilder {
    /// <p>The details of the Firewall Manager protocols list to be created.</p>
    pub fn protocols_list(mut self, input: crate::types::ProtocolsListData) -> Self {
        self.protocols_list = Some(input);
        self
    }
    /// <p>The details of the Firewall Manager protocols list to be created.</p>
    pub fn set_protocols_list(
        mut self,
        input: std::option::Option<crate::types::ProtocolsListData>,
    ) -> Self {
        self.protocols_list = input;
        self
    }
    /// Appends an item to `tag_list`.
    ///
    /// To override the contents of this collection use [`set_tag_list`](Self::set_tag_list).
    ///
    /// <p>The tags associated with the resource.</p>
    pub fn tag_list(mut self, input: crate::types::Tag) -> Self {
        let mut v = self.tag_list.unwrap_or_default();
        v.push(input);
        self.tag_list = Some(v);
        self
    }
    /// <p>The tags associated with the resource.</p>
    pub fn set_tag_list(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::Tag>>,
    ) -> Self {
        self.tag_list = input;
        self
    }
    /// Consumes the builder and constructs a [`PutProtocolsListInput`](crate::operation::put_protocols_list::PutProtocolsListInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::put_protocols_list::PutProtocolsListInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::put_protocols_list::PutProtocolsListInput {
                protocols_list: self.protocols_list,
                tag_list: self.tag_list,
            },
        )
    }
}
