// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GetAppsListInput {
    /// <p>The ID of the Firewall Manager applications list that you want the details for.</p>
    pub list_id: ::std::option::Option<::std::string::String>,
    /// <p>Specifies whether the list to retrieve is a default list owned by Firewall Manager.</p>
    pub default_list: ::std::option::Option<bool>,
}
impl GetAppsListInput {
    /// <p>The ID of the Firewall Manager applications list that you want the details for.</p>
    pub fn list_id(&self) -> ::std::option::Option<&str> {
        self.list_id.as_deref()
    }
    /// <p>Specifies whether the list to retrieve is a default list owned by Firewall Manager.</p>
    pub fn default_list(&self) -> ::std::option::Option<bool> {
        self.default_list
    }
}
impl GetAppsListInput {
    /// Creates a new builder-style object to manufacture [`GetAppsListInput`](crate::operation::get_apps_list::GetAppsListInput).
    pub fn builder() -> crate::operation::get_apps_list::builders::GetAppsListInputBuilder {
        crate::operation::get_apps_list::builders::GetAppsListInputBuilder::default()
    }
}

/// A builder for [`GetAppsListInput`](crate::operation::get_apps_list::GetAppsListInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct GetAppsListInputBuilder {
    pub(crate) list_id: ::std::option::Option<::std::string::String>,
    pub(crate) default_list: ::std::option::Option<bool>,
}
impl GetAppsListInputBuilder {
    /// <p>The ID of the Firewall Manager applications list that you want the details for.</p>
    /// This field is required.
    pub fn list_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.list_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of the Firewall Manager applications list that you want the details for.</p>
    pub fn set_list_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.list_id = input;
        self
    }
    /// <p>The ID of the Firewall Manager applications list that you want the details for.</p>
    pub fn get_list_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.list_id
    }
    /// <p>Specifies whether the list to retrieve is a default list owned by Firewall Manager.</p>
    pub fn default_list(mut self, input: bool) -> Self {
        self.default_list = ::std::option::Option::Some(input);
        self
    }
    /// <p>Specifies whether the list to retrieve is a default list owned by Firewall Manager.</p>
    pub fn set_default_list(mut self, input: ::std::option::Option<bool>) -> Self {
        self.default_list = input;
        self
    }
    /// <p>Specifies whether the list to retrieve is a default list owned by Firewall Manager.</p>
    pub fn get_default_list(&self) -> &::std::option::Option<bool> {
        &self.default_list
    }
    /// Consumes the builder and constructs a [`GetAppsListInput`](crate::operation::get_apps_list::GetAppsListInput).
    pub fn build(self) -> ::std::result::Result<crate::operation::get_apps_list::GetAppsListInput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::operation::get_apps_list::GetAppsListInput {
            list_id: self.list_id,
            default_list: self.default_list,
        })
    }
}
