// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GetAdminAccountOutput {
    /// <p>The Amazon Web Services account that is set as the Firewall Manager administrator.</p>
    #[doc(hidden)]
    pub admin_account: std::option::Option<std::string::String>,
    /// <p>The status of the Amazon Web Services account that you set as the Firewall Manager administrator.</p>
    #[doc(hidden)]
    pub role_status: std::option::Option<crate::types::AccountRoleStatus>,
    _request_id: Option<String>,
}
impl GetAdminAccountOutput {
    /// <p>The Amazon Web Services account that is set as the Firewall Manager administrator.</p>
    pub fn admin_account(&self) -> std::option::Option<&str> {
        self.admin_account.as_deref()
    }
    /// <p>The status of the Amazon Web Services account that you set as the Firewall Manager administrator.</p>
    pub fn role_status(&self) -> std::option::Option<&crate::types::AccountRoleStatus> {
        self.role_status.as_ref()
    }
}
impl aws_http::request_id::RequestId for GetAdminAccountOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl GetAdminAccountOutput {
    /// Creates a new builder-style object to manufacture [`GetAdminAccountOutput`](crate::operation::get_admin_account::GetAdminAccountOutput).
    pub fn builder() -> crate::operation::get_admin_account::builders::GetAdminAccountOutputBuilder
    {
        crate::operation::get_admin_account::builders::GetAdminAccountOutputBuilder::default()
    }
}

/// A builder for [`GetAdminAccountOutput`](crate::operation::get_admin_account::GetAdminAccountOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct GetAdminAccountOutputBuilder {
    pub(crate) admin_account: std::option::Option<std::string::String>,
    pub(crate) role_status: std::option::Option<crate::types::AccountRoleStatus>,
    _request_id: Option<String>,
}
impl GetAdminAccountOutputBuilder {
    /// <p>The Amazon Web Services account that is set as the Firewall Manager administrator.</p>
    pub fn admin_account(mut self, input: impl Into<std::string::String>) -> Self {
        self.admin_account = Some(input.into());
        self
    }
    /// <p>The Amazon Web Services account that is set as the Firewall Manager administrator.</p>
    pub fn set_admin_account(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.admin_account = input;
        self
    }
    /// <p>The status of the Amazon Web Services account that you set as the Firewall Manager administrator.</p>
    pub fn role_status(mut self, input: crate::types::AccountRoleStatus) -> Self {
        self.role_status = Some(input);
        self
    }
    /// <p>The status of the Amazon Web Services account that you set as the Firewall Manager administrator.</p>
    pub fn set_role_status(
        mut self,
        input: std::option::Option<crate::types::AccountRoleStatus>,
    ) -> Self {
        self.role_status = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`GetAdminAccountOutput`](crate::operation::get_admin_account::GetAdminAccountOutput).
    pub fn build(self) -> crate::operation::get_admin_account::GetAdminAccountOutput {
        crate::operation::get_admin_account::GetAdminAccountOutput {
            admin_account: self.admin_account,
            role_status: self.role_status,
            _request_id: self._request_id,
        }
    }
}
