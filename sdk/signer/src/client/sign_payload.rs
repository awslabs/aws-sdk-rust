// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`SignPayload`](crate::operation::sign_payload::builders::SignPayloadFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`profile_name(impl Into<String>)`](crate::operation::sign_payload::builders::SignPayloadFluentBuilder::profile_name) / [`set_profile_name(Option<String>)`](crate::operation::sign_payload::builders::SignPayloadFluentBuilder::set_profile_name):<br>required: **true**<br><p>The name of the signing profile.</p><br>
    ///   - [`profile_owner(impl Into<String>)`](crate::operation::sign_payload::builders::SignPayloadFluentBuilder::profile_owner) / [`set_profile_owner(Option<String>)`](crate::operation::sign_payload::builders::SignPayloadFluentBuilder::set_profile_owner):<br>required: **false**<br><p>The AWS account ID of the profile owner.</p><br>
    ///   - [`payload(Blob)`](crate::operation::sign_payload::builders::SignPayloadFluentBuilder::payload) / [`set_payload(Option<Blob>)`](crate::operation::sign_payload::builders::SignPayloadFluentBuilder::set_payload):<br>required: **true**<br><p>Specifies the object digest (hash) to sign.</p><br>
    ///   - [`payload_format(impl Into<String>)`](crate::operation::sign_payload::builders::SignPayloadFluentBuilder::payload_format) / [`set_payload_format(Option<String>)`](crate::operation::sign_payload::builders::SignPayloadFluentBuilder::set_payload_format):<br>required: **true**<br><p>Payload content type</p><br>
    /// - On success, responds with [`SignPayloadOutput`](crate::operation::sign_payload::SignPayloadOutput) with field(s):
    ///   - [`job_id(Option<String>)`](crate::operation::sign_payload::SignPayloadOutput::job_id): <p>Unique identifier of the signing job.</p>
    ///   - [`job_owner(Option<String>)`](crate::operation::sign_payload::SignPayloadOutput::job_owner): <p>The AWS account ID of the job owner.</p>
    ///   - [`metadata(Option<HashMap::<String, String>>)`](crate::operation::sign_payload::SignPayloadOutput::metadata): <p>Information including the signing profile ARN and the signing job ID. Clients use metadata to signature records, for example, as annotations added to the signature manifest inside an OCI registry.</p>
    ///   - [`signature(Option<Blob>)`](crate::operation::sign_payload::SignPayloadOutput::signature): <p>A cryptographic signature.</p>
    /// - On failure, responds with [`SdkError<SignPayloadError>`](crate::operation::sign_payload::SignPayloadError)
    pub fn sign_payload(&self) -> crate::operation::sign_payload::builders::SignPayloadFluentBuilder {
        crate::operation::sign_payload::builders::SignPayloadFluentBuilder::new(self.handle.clone())
    }
}
