// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetSigningPlatform`](crate::operation::get_signing_platform::builders::GetSigningPlatformFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`platform_id(impl Into<String>)`](crate::operation::get_signing_platform::builders::GetSigningPlatformFluentBuilder::platform_id) / [`set_platform_id(Option<String>)`](crate::operation::get_signing_platform::builders::GetSigningPlatformFluentBuilder::set_platform_id): <p>The ID of the target signing platform.</p>
    /// - On success, responds with [`GetSigningPlatformOutput`](crate::operation::get_signing_platform::GetSigningPlatformOutput) with field(s):
    ///   - [`platform_id(Option<String>)`](crate::operation::get_signing_platform::GetSigningPlatformOutput::platform_id): <p>The ID of the target signing platform.</p>
    ///   - [`display_name(Option<String>)`](crate::operation::get_signing_platform::GetSigningPlatformOutput::display_name): <p>The display name of the target signing platform.</p>
    ///   - [`partner(Option<String>)`](crate::operation::get_signing_platform::GetSigningPlatformOutput::partner): <p>A list of partner entities that use the target signing platform.</p>
    ///   - [`target(Option<String>)`](crate::operation::get_signing_platform::GetSigningPlatformOutput::target): <p>The validation template that is used by the target signing platform.</p>
    ///   - [`category(Option<Category>)`](crate::operation::get_signing_platform::GetSigningPlatformOutput::category): <p>The category type of the target signing platform.</p>
    ///   - [`signing_configuration(Option<SigningConfiguration>)`](crate::operation::get_signing_platform::GetSigningPlatformOutput::signing_configuration): <p>A list of configurations applied to the target platform at signing.</p>
    ///   - [`signing_image_format(Option<SigningImageFormat>)`](crate::operation::get_signing_platform::GetSigningPlatformOutput::signing_image_format): <p>The format of the target platform's signing image.</p>
    ///   - [`max_size_in_mb(i32)`](crate::operation::get_signing_platform::GetSigningPlatformOutput::max_size_in_mb): <p>The maximum size (in MB) of the payload that can be signed by the target platform.</p>
    ///   - [`revocation_supported(bool)`](crate::operation::get_signing_platform::GetSigningPlatformOutput::revocation_supported): <p>A flag indicating whether signatures generated for the signing platform can be revoked.</p>
    /// - On failure, responds with [`SdkError<GetSigningPlatformError>`](crate::operation::get_signing_platform::GetSigningPlatformError)
    pub fn get_signing_platform(
        &self,
    ) -> crate::operation::get_signing_platform::builders::GetSigningPlatformFluentBuilder {
        crate::operation::get_signing_platform::builders::GetSigningPlatformFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
