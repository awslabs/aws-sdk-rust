// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListSigningJobs`](crate::operation::list_signing_jobs::builders::ListSigningJobsFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::list_signing_jobs::builders::ListSigningJobsFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`status(SigningStatus)`](crate::operation::list_signing_jobs::builders::ListSigningJobsFluentBuilder::status) / [`set_status(Option<SigningStatus>)`](crate::operation::list_signing_jobs::builders::ListSigningJobsFluentBuilder::set_status):<br>required: **false**<br><p>A status value with which to filter your results.</p><br>
    ///   - [`platform_id(impl Into<String>)`](crate::operation::list_signing_jobs::builders::ListSigningJobsFluentBuilder::platform_id) / [`set_platform_id(Option<String>)`](crate::operation::list_signing_jobs::builders::ListSigningJobsFluentBuilder::set_platform_id):<br>required: **false**<br><p>The ID of microcontroller platform that you specified for the distribution of your code image.</p><br>
    ///   - [`requested_by(impl Into<String>)`](crate::operation::list_signing_jobs::builders::ListSigningJobsFluentBuilder::requested_by) / [`set_requested_by(Option<String>)`](crate::operation::list_signing_jobs::builders::ListSigningJobsFluentBuilder::set_requested_by):<br>required: **false**<br><p>The IAM principal that requested the signing job.</p><br>
    ///   - [`max_results(i32)`](crate::operation::list_signing_jobs::builders::ListSigningJobsFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::list_signing_jobs::builders::ListSigningJobsFluentBuilder::set_max_results):<br>required: **false**<br><p>Specifies the maximum number of items to return in the response. Use this parameter when paginating results. If additional items exist beyond the number you specify, the <code>nextToken</code> element is set in the response. Use the <code>nextToken</code> value in a subsequent request to retrieve additional items. </p><br>
    ///   - [`next_token(impl Into<String>)`](crate::operation::list_signing_jobs::builders::ListSigningJobsFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::list_signing_jobs::builders::ListSigningJobsFluentBuilder::set_next_token):<br>required: **false**<br><p>String for specifying the next set of paginated results to return. After you receive a response with truncated results, use this parameter in a subsequent request. Set it to the value of <code>nextToken</code> from the response that you just received.</p><br>
    ///   - [`is_revoked(bool)`](crate::operation::list_signing_jobs::builders::ListSigningJobsFluentBuilder::is_revoked) / [`set_is_revoked(Option<bool>)`](crate::operation::list_signing_jobs::builders::ListSigningJobsFluentBuilder::set_is_revoked):<br>required: **false**<br><p>Filters results to return only signing jobs with revoked signatures.</p><br>
    ///   - [`signature_expires_before(DateTime)`](crate::operation::list_signing_jobs::builders::ListSigningJobsFluentBuilder::signature_expires_before) / [`set_signature_expires_before(Option<DateTime>)`](crate::operation::list_signing_jobs::builders::ListSigningJobsFluentBuilder::set_signature_expires_before):<br>required: **false**<br><p>Filters results to return only signing jobs with signatures expiring before a specified timestamp.</p><br>
    ///   - [`signature_expires_after(DateTime)`](crate::operation::list_signing_jobs::builders::ListSigningJobsFluentBuilder::signature_expires_after) / [`set_signature_expires_after(Option<DateTime>)`](crate::operation::list_signing_jobs::builders::ListSigningJobsFluentBuilder::set_signature_expires_after):<br>required: **false**<br><p>Filters results to return only signing jobs with signatures expiring after a specified timestamp.</p><br>
    ///   - [`job_invoker(impl Into<String>)`](crate::operation::list_signing_jobs::builders::ListSigningJobsFluentBuilder::job_invoker) / [`set_job_invoker(Option<String>)`](crate::operation::list_signing_jobs::builders::ListSigningJobsFluentBuilder::set_job_invoker):<br>required: **false**<br><p>Filters results to return only signing jobs initiated by a specified IAM entity.</p><br>
    /// - On success, responds with [`ListSigningJobsOutput`](crate::operation::list_signing_jobs::ListSigningJobsOutput) with field(s):
    ///   - [`jobs(Option<Vec::<SigningJob>>)`](crate::operation::list_signing_jobs::ListSigningJobsOutput::jobs): <p>A list of your signing jobs.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::list_signing_jobs::ListSigningJobsOutput::next_token): <p>String for specifying the next set of paginated results.</p>
    /// - On failure, responds with [`SdkError<ListSigningJobsError>`](crate::operation::list_signing_jobs::ListSigningJobsError)
    pub fn list_signing_jobs(&self) -> crate::operation::list_signing_jobs::builders::ListSigningJobsFluentBuilder {
        crate::operation::list_signing_jobs::builders::ListSigningJobsFluentBuilder::new(self.handle.clone())
    }
}
