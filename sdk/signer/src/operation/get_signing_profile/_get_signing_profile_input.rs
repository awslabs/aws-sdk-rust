// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GetSigningProfileInput {
    /// <p>The name of the target signing profile.</p>
    pub profile_name: ::std::option::Option<::std::string::String>,
    /// <p>The AWS account ID of the profile owner.</p>
    pub profile_owner: ::std::option::Option<::std::string::String>,
}
impl GetSigningProfileInput {
    /// <p>The name of the target signing profile.</p>
    pub fn profile_name(&self) -> ::std::option::Option<&str> {
        self.profile_name.as_deref()
    }
    /// <p>The AWS account ID of the profile owner.</p>
    pub fn profile_owner(&self) -> ::std::option::Option<&str> {
        self.profile_owner.as_deref()
    }
}
impl GetSigningProfileInput {
    /// Creates a new builder-style object to manufacture [`GetSigningProfileInput`](crate::operation::get_signing_profile::GetSigningProfileInput).
    pub fn builder() -> crate::operation::get_signing_profile::builders::GetSigningProfileInputBuilder {
        crate::operation::get_signing_profile::builders::GetSigningProfileInputBuilder::default()
    }
}

/// A builder for [`GetSigningProfileInput`](crate::operation::get_signing_profile::GetSigningProfileInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct GetSigningProfileInputBuilder {
    pub(crate) profile_name: ::std::option::Option<::std::string::String>,
    pub(crate) profile_owner: ::std::option::Option<::std::string::String>,
}
impl GetSigningProfileInputBuilder {
    /// <p>The name of the target signing profile.</p>
    /// This field is required.
    pub fn profile_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.profile_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the target signing profile.</p>
    pub fn set_profile_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.profile_name = input;
        self
    }
    /// <p>The name of the target signing profile.</p>
    pub fn get_profile_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.profile_name
    }
    /// <p>The AWS account ID of the profile owner.</p>
    pub fn profile_owner(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.profile_owner = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The AWS account ID of the profile owner.</p>
    pub fn set_profile_owner(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.profile_owner = input;
        self
    }
    /// <p>The AWS account ID of the profile owner.</p>
    pub fn get_profile_owner(&self) -> &::std::option::Option<::std::string::String> {
        &self.profile_owner
    }
    /// Consumes the builder and constructs a [`GetSigningProfileInput`](crate::operation::get_signing_profile::GetSigningProfileInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::get_signing_profile::GetSigningProfileInput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::operation::get_signing_profile::GetSigningProfileInput {
            profile_name: self.profile_name,
            profile_owner: self.profile_owner,
        })
    }
}
