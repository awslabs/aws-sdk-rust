// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ListProfilePermissionsInput {
    /// <p>Name of the signing profile containing the cross-account permissions.</p>
    pub profile_name: ::std::option::Option<::std::string::String>,
    /// <p>String for specifying the next set of paginated results.</p>
    pub next_token: ::std::option::Option<::std::string::String>,
}
impl ListProfilePermissionsInput {
    /// <p>Name of the signing profile containing the cross-account permissions.</p>
    pub fn profile_name(&self) -> ::std::option::Option<&str> {
        self.profile_name.as_deref()
    }
    /// <p>String for specifying the next set of paginated results.</p>
    pub fn next_token(&self) -> ::std::option::Option<&str> {
        self.next_token.as_deref()
    }
}
impl ListProfilePermissionsInput {
    /// Creates a new builder-style object to manufacture [`ListProfilePermissionsInput`](crate::operation::list_profile_permissions::ListProfilePermissionsInput).
    pub fn builder() -> crate::operation::list_profile_permissions::builders::ListProfilePermissionsInputBuilder {
        crate::operation::list_profile_permissions::builders::ListProfilePermissionsInputBuilder::default()
    }
}

/// A builder for [`ListProfilePermissionsInput`](crate::operation::list_profile_permissions::ListProfilePermissionsInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ListProfilePermissionsInputBuilder {
    pub(crate) profile_name: ::std::option::Option<::std::string::String>,
    pub(crate) next_token: ::std::option::Option<::std::string::String>,
}
impl ListProfilePermissionsInputBuilder {
    /// <p>Name of the signing profile containing the cross-account permissions.</p>
    /// This field is required.
    pub fn profile_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.profile_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Name of the signing profile containing the cross-account permissions.</p>
    pub fn set_profile_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.profile_name = input;
        self
    }
    /// <p>Name of the signing profile containing the cross-account permissions.</p>
    pub fn get_profile_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.profile_name
    }
    /// <p>String for specifying the next set of paginated results.</p>
    pub fn next_token(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.next_token = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>String for specifying the next set of paginated results.</p>
    pub fn set_next_token(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// <p>String for specifying the next set of paginated results.</p>
    pub fn get_next_token(&self) -> &::std::option::Option<::std::string::String> {
        &self.next_token
    }
    /// Consumes the builder and constructs a [`ListProfilePermissionsInput`](crate::operation::list_profile_permissions::ListProfilePermissionsInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::list_profile_permissions::ListProfilePermissionsInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::list_profile_permissions::ListProfilePermissionsInput {
            profile_name: self.profile_name,
            next_token: self.next_token,
        })
    }
}
