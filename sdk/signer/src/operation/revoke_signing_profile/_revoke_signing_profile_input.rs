// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct RevokeSigningProfileInput {
    /// <p>The name of the signing profile to be revoked.</p>
    #[doc(hidden)]
    pub profile_name: std::option::Option<std::string::String>,
    /// <p>The version of the signing profile to be revoked.</p>
    #[doc(hidden)]
    pub profile_version: std::option::Option<std::string::String>,
    /// <p>The reason for revoking a signing profile.</p>
    #[doc(hidden)]
    pub reason: std::option::Option<std::string::String>,
    /// <p>A timestamp for when revocation of a Signing Profile should become effective. Signatures generated using the signing profile after this timestamp are not trusted.</p>
    #[doc(hidden)]
    pub effective_time: std::option::Option<aws_smithy_types::DateTime>,
}
impl RevokeSigningProfileInput {
    /// <p>The name of the signing profile to be revoked.</p>
    pub fn profile_name(&self) -> std::option::Option<&str> {
        self.profile_name.as_deref()
    }
    /// <p>The version of the signing profile to be revoked.</p>
    pub fn profile_version(&self) -> std::option::Option<&str> {
        self.profile_version.as_deref()
    }
    /// <p>The reason for revoking a signing profile.</p>
    pub fn reason(&self) -> std::option::Option<&str> {
        self.reason.as_deref()
    }
    /// <p>A timestamp for when revocation of a Signing Profile should become effective. Signatures generated using the signing profile after this timestamp are not trusted.</p>
    pub fn effective_time(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.effective_time.as_ref()
    }
}
impl RevokeSigningProfileInput {
    /// Creates a new builder-style object to manufacture [`RevokeSigningProfileInput`](crate::operation::revoke_signing_profile::RevokeSigningProfileInput).
    pub fn builder(
    ) -> crate::operation::revoke_signing_profile::builders::RevokeSigningProfileInputBuilder {
        crate::operation::revoke_signing_profile::builders::RevokeSigningProfileInputBuilder::default()
    }
}

/// A builder for [`RevokeSigningProfileInput`](crate::operation::revoke_signing_profile::RevokeSigningProfileInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct RevokeSigningProfileInputBuilder {
    pub(crate) profile_name: std::option::Option<std::string::String>,
    pub(crate) profile_version: std::option::Option<std::string::String>,
    pub(crate) reason: std::option::Option<std::string::String>,
    pub(crate) effective_time: std::option::Option<aws_smithy_types::DateTime>,
}
impl RevokeSigningProfileInputBuilder {
    /// <p>The name of the signing profile to be revoked.</p>
    pub fn profile_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.profile_name = Some(input.into());
        self
    }
    /// <p>The name of the signing profile to be revoked.</p>
    pub fn set_profile_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.profile_name = input;
        self
    }
    /// <p>The version of the signing profile to be revoked.</p>
    pub fn profile_version(mut self, input: impl Into<std::string::String>) -> Self {
        self.profile_version = Some(input.into());
        self
    }
    /// <p>The version of the signing profile to be revoked.</p>
    pub fn set_profile_version(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.profile_version = input;
        self
    }
    /// <p>The reason for revoking a signing profile.</p>
    pub fn reason(mut self, input: impl Into<std::string::String>) -> Self {
        self.reason = Some(input.into());
        self
    }
    /// <p>The reason for revoking a signing profile.</p>
    pub fn set_reason(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.reason = input;
        self
    }
    /// <p>A timestamp for when revocation of a Signing Profile should become effective. Signatures generated using the signing profile after this timestamp are not trusted.</p>
    pub fn effective_time(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.effective_time = Some(input);
        self
    }
    /// <p>A timestamp for when revocation of a Signing Profile should become effective. Signatures generated using the signing profile after this timestamp are not trusted.</p>
    pub fn set_effective_time(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.effective_time = input;
        self
    }
    /// Consumes the builder and constructs a [`RevokeSigningProfileInput`](crate::operation::revoke_signing_profile::RevokeSigningProfileInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::revoke_signing_profile::RevokeSigningProfileInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::revoke_signing_profile::RevokeSigningProfileInput {
                profile_name: self.profile_name,
                profile_version: self.profile_version,
                reason: self.reason,
                effective_time: self.effective_time,
            },
        )
    }
}
