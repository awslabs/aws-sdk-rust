// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct RemoveProfilePermissionInput {
    /// <p>A human-readable name for the signing profile with permissions to be removed.</p>
    #[doc(hidden)]
    pub profile_name: std::option::Option<std::string::String>,
    /// <p>An identifier for the current revision of the signing profile permissions.</p>
    #[doc(hidden)]
    pub revision_id: std::option::Option<std::string::String>,
    /// <p>A unique identifier for the cross-account permissions statement.</p>
    #[doc(hidden)]
    pub statement_id: std::option::Option<std::string::String>,
}
impl RemoveProfilePermissionInput {
    /// <p>A human-readable name for the signing profile with permissions to be removed.</p>
    pub fn profile_name(&self) -> std::option::Option<&str> {
        self.profile_name.as_deref()
    }
    /// <p>An identifier for the current revision of the signing profile permissions.</p>
    pub fn revision_id(&self) -> std::option::Option<&str> {
        self.revision_id.as_deref()
    }
    /// <p>A unique identifier for the cross-account permissions statement.</p>
    pub fn statement_id(&self) -> std::option::Option<&str> {
        self.statement_id.as_deref()
    }
}
impl RemoveProfilePermissionInput {
    /// Creates a new builder-style object to manufacture [`RemoveProfilePermissionInput`](crate::operation::remove_profile_permission::RemoveProfilePermissionInput).
    pub fn builder(
    ) -> crate::operation::remove_profile_permission::builders::RemoveProfilePermissionInputBuilder
    {
        crate::operation::remove_profile_permission::builders::RemoveProfilePermissionInputBuilder::default()
    }
}

/// A builder for [`RemoveProfilePermissionInput`](crate::operation::remove_profile_permission::RemoveProfilePermissionInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct RemoveProfilePermissionInputBuilder {
    pub(crate) profile_name: std::option::Option<std::string::String>,
    pub(crate) revision_id: std::option::Option<std::string::String>,
    pub(crate) statement_id: std::option::Option<std::string::String>,
}
impl RemoveProfilePermissionInputBuilder {
    /// <p>A human-readable name for the signing profile with permissions to be removed.</p>
    pub fn profile_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.profile_name = Some(input.into());
        self
    }
    /// <p>A human-readable name for the signing profile with permissions to be removed.</p>
    pub fn set_profile_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.profile_name = input;
        self
    }
    /// <p>An identifier for the current revision of the signing profile permissions.</p>
    pub fn revision_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.revision_id = Some(input.into());
        self
    }
    /// <p>An identifier for the current revision of the signing profile permissions.</p>
    pub fn set_revision_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.revision_id = input;
        self
    }
    /// <p>A unique identifier for the cross-account permissions statement.</p>
    pub fn statement_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.statement_id = Some(input.into());
        self
    }
    /// <p>A unique identifier for the cross-account permissions statement.</p>
    pub fn set_statement_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.statement_id = input;
        self
    }
    /// Consumes the builder and constructs a [`RemoveProfilePermissionInput`](crate::operation::remove_profile_permission::RemoveProfilePermissionInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::remove_profile_permission::RemoveProfilePermissionInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::remove_profile_permission::RemoveProfilePermissionInput {
                profile_name: self.profile_name,
                revision_id: self.revision_id,
                statement_id: self.statement_id,
            },
        )
    }
}
