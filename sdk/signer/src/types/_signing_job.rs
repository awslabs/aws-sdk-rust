// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains information about a signing job.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct SigningJob {
    /// <p>The ID of the signing job.</p>
    #[doc(hidden)]
    pub job_id: std::option::Option<std::string::String>,
    /// <p>A <code>Source</code> that contains information about a signing job's code image source.</p>
    #[doc(hidden)]
    pub source: std::option::Option<crate::types::Source>,
    /// <p>A <code>SignedObject</code> structure that contains information about a signing job's signed code image.</p>
    #[doc(hidden)]
    pub signed_object: std::option::Option<crate::types::SignedObject>,
    /// <p>A <code>SigningMaterial</code> object that contains the Amazon Resource Name (ARN) of the certificate used for the signing job.</p>
    #[doc(hidden)]
    pub signing_material: std::option::Option<crate::types::SigningMaterial>,
    /// <p>The date and time that the signing job was created.</p>
    #[doc(hidden)]
    pub created_at: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>The status of the signing job.</p>
    #[doc(hidden)]
    pub status: std::option::Option<crate::types::SigningStatus>,
    /// <p>Indicates whether the signing job is revoked.</p>
    #[doc(hidden)]
    pub is_revoked: bool,
    /// <p>The name of the signing profile that created a signing job.</p>
    #[doc(hidden)]
    pub profile_name: std::option::Option<std::string::String>,
    /// <p>The version of the signing profile that created a signing job.</p>
    #[doc(hidden)]
    pub profile_version: std::option::Option<std::string::String>,
    /// <p>The unique identifier for a signing platform.</p>
    #[doc(hidden)]
    pub platform_id: std::option::Option<std::string::String>,
    /// <p>The name of a signing platform.</p>
    #[doc(hidden)]
    pub platform_display_name: std::option::Option<std::string::String>,
    /// <p>The time when the signature of a signing job expires.</p>
    #[doc(hidden)]
    pub signature_expires_at: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>The AWS account ID of the job owner.</p>
    #[doc(hidden)]
    pub job_owner: std::option::Option<std::string::String>,
    /// <p>The AWS account ID of the job invoker.</p>
    #[doc(hidden)]
    pub job_invoker: std::option::Option<std::string::String>,
}
impl SigningJob {
    /// <p>The ID of the signing job.</p>
    pub fn job_id(&self) -> std::option::Option<&str> {
        self.job_id.as_deref()
    }
    /// <p>A <code>Source</code> that contains information about a signing job's code image source.</p>
    pub fn source(&self) -> std::option::Option<&crate::types::Source> {
        self.source.as_ref()
    }
    /// <p>A <code>SignedObject</code> structure that contains information about a signing job's signed code image.</p>
    pub fn signed_object(&self) -> std::option::Option<&crate::types::SignedObject> {
        self.signed_object.as_ref()
    }
    /// <p>A <code>SigningMaterial</code> object that contains the Amazon Resource Name (ARN) of the certificate used for the signing job.</p>
    pub fn signing_material(&self) -> std::option::Option<&crate::types::SigningMaterial> {
        self.signing_material.as_ref()
    }
    /// <p>The date and time that the signing job was created.</p>
    pub fn created_at(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.created_at.as_ref()
    }
    /// <p>The status of the signing job.</p>
    pub fn status(&self) -> std::option::Option<&crate::types::SigningStatus> {
        self.status.as_ref()
    }
    /// <p>Indicates whether the signing job is revoked.</p>
    pub fn is_revoked(&self) -> bool {
        self.is_revoked
    }
    /// <p>The name of the signing profile that created a signing job.</p>
    pub fn profile_name(&self) -> std::option::Option<&str> {
        self.profile_name.as_deref()
    }
    /// <p>The version of the signing profile that created a signing job.</p>
    pub fn profile_version(&self) -> std::option::Option<&str> {
        self.profile_version.as_deref()
    }
    /// <p>The unique identifier for a signing platform.</p>
    pub fn platform_id(&self) -> std::option::Option<&str> {
        self.platform_id.as_deref()
    }
    /// <p>The name of a signing platform.</p>
    pub fn platform_display_name(&self) -> std::option::Option<&str> {
        self.platform_display_name.as_deref()
    }
    /// <p>The time when the signature of a signing job expires.</p>
    pub fn signature_expires_at(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.signature_expires_at.as_ref()
    }
    /// <p>The AWS account ID of the job owner.</p>
    pub fn job_owner(&self) -> std::option::Option<&str> {
        self.job_owner.as_deref()
    }
    /// <p>The AWS account ID of the job invoker.</p>
    pub fn job_invoker(&self) -> std::option::Option<&str> {
        self.job_invoker.as_deref()
    }
}
impl SigningJob {
    /// Creates a new builder-style object to manufacture [`SigningJob`](crate::types::SigningJob).
    pub fn builder() -> crate::types::builders::SigningJobBuilder {
        crate::types::builders::SigningJobBuilder::default()
    }
}

/// A builder for [`SigningJob`](crate::types::SigningJob).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct SigningJobBuilder {
    pub(crate) job_id: std::option::Option<std::string::String>,
    pub(crate) source: std::option::Option<crate::types::Source>,
    pub(crate) signed_object: std::option::Option<crate::types::SignedObject>,
    pub(crate) signing_material: std::option::Option<crate::types::SigningMaterial>,
    pub(crate) created_at: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) status: std::option::Option<crate::types::SigningStatus>,
    pub(crate) is_revoked: std::option::Option<bool>,
    pub(crate) profile_name: std::option::Option<std::string::String>,
    pub(crate) profile_version: std::option::Option<std::string::String>,
    pub(crate) platform_id: std::option::Option<std::string::String>,
    pub(crate) platform_display_name: std::option::Option<std::string::String>,
    pub(crate) signature_expires_at: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) job_owner: std::option::Option<std::string::String>,
    pub(crate) job_invoker: std::option::Option<std::string::String>,
}
impl SigningJobBuilder {
    /// <p>The ID of the signing job.</p>
    pub fn job_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.job_id = Some(input.into());
        self
    }
    /// <p>The ID of the signing job.</p>
    pub fn set_job_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.job_id = input;
        self
    }
    /// <p>A <code>Source</code> that contains information about a signing job's code image source.</p>
    pub fn source(mut self, input: crate::types::Source) -> Self {
        self.source = Some(input);
        self
    }
    /// <p>A <code>Source</code> that contains information about a signing job's code image source.</p>
    pub fn set_source(mut self, input: std::option::Option<crate::types::Source>) -> Self {
        self.source = input;
        self
    }
    /// <p>A <code>SignedObject</code> structure that contains information about a signing job's signed code image.</p>
    pub fn signed_object(mut self, input: crate::types::SignedObject) -> Self {
        self.signed_object = Some(input);
        self
    }
    /// <p>A <code>SignedObject</code> structure that contains information about a signing job's signed code image.</p>
    pub fn set_signed_object(
        mut self,
        input: std::option::Option<crate::types::SignedObject>,
    ) -> Self {
        self.signed_object = input;
        self
    }
    /// <p>A <code>SigningMaterial</code> object that contains the Amazon Resource Name (ARN) of the certificate used for the signing job.</p>
    pub fn signing_material(mut self, input: crate::types::SigningMaterial) -> Self {
        self.signing_material = Some(input);
        self
    }
    /// <p>A <code>SigningMaterial</code> object that contains the Amazon Resource Name (ARN) of the certificate used for the signing job.</p>
    pub fn set_signing_material(
        mut self,
        input: std::option::Option<crate::types::SigningMaterial>,
    ) -> Self {
        self.signing_material = input;
        self
    }
    /// <p>The date and time that the signing job was created.</p>
    pub fn created_at(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.created_at = Some(input);
        self
    }
    /// <p>The date and time that the signing job was created.</p>
    pub fn set_created_at(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.created_at = input;
        self
    }
    /// <p>The status of the signing job.</p>
    pub fn status(mut self, input: crate::types::SigningStatus) -> Self {
        self.status = Some(input);
        self
    }
    /// <p>The status of the signing job.</p>
    pub fn set_status(mut self, input: std::option::Option<crate::types::SigningStatus>) -> Self {
        self.status = input;
        self
    }
    /// <p>Indicates whether the signing job is revoked.</p>
    pub fn is_revoked(mut self, input: bool) -> Self {
        self.is_revoked = Some(input);
        self
    }
    /// <p>Indicates whether the signing job is revoked.</p>
    pub fn set_is_revoked(mut self, input: std::option::Option<bool>) -> Self {
        self.is_revoked = input;
        self
    }
    /// <p>The name of the signing profile that created a signing job.</p>
    pub fn profile_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.profile_name = Some(input.into());
        self
    }
    /// <p>The name of the signing profile that created a signing job.</p>
    pub fn set_profile_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.profile_name = input;
        self
    }
    /// <p>The version of the signing profile that created a signing job.</p>
    pub fn profile_version(mut self, input: impl Into<std::string::String>) -> Self {
        self.profile_version = Some(input.into());
        self
    }
    /// <p>The version of the signing profile that created a signing job.</p>
    pub fn set_profile_version(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.profile_version = input;
        self
    }
    /// <p>The unique identifier for a signing platform.</p>
    pub fn platform_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.platform_id = Some(input.into());
        self
    }
    /// <p>The unique identifier for a signing platform.</p>
    pub fn set_platform_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.platform_id = input;
        self
    }
    /// <p>The name of a signing platform.</p>
    pub fn platform_display_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.platform_display_name = Some(input.into());
        self
    }
    /// <p>The name of a signing platform.</p>
    pub fn set_platform_display_name(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.platform_display_name = input;
        self
    }
    /// <p>The time when the signature of a signing job expires.</p>
    pub fn signature_expires_at(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.signature_expires_at = Some(input);
        self
    }
    /// <p>The time when the signature of a signing job expires.</p>
    pub fn set_signature_expires_at(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.signature_expires_at = input;
        self
    }
    /// <p>The AWS account ID of the job owner.</p>
    pub fn job_owner(mut self, input: impl Into<std::string::String>) -> Self {
        self.job_owner = Some(input.into());
        self
    }
    /// <p>The AWS account ID of the job owner.</p>
    pub fn set_job_owner(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.job_owner = input;
        self
    }
    /// <p>The AWS account ID of the job invoker.</p>
    pub fn job_invoker(mut self, input: impl Into<std::string::String>) -> Self {
        self.job_invoker = Some(input.into());
        self
    }
    /// <p>The AWS account ID of the job invoker.</p>
    pub fn set_job_invoker(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.job_invoker = input;
        self
    }
    /// Consumes the builder and constructs a [`SigningJob`](crate::types::SigningJob).
    pub fn build(self) -> crate::types::SigningJob {
        crate::types::SigningJob {
            job_id: self.job_id,
            source: self.source,
            signed_object: self.signed_object,
            signing_material: self.signing_material,
            created_at: self.created_at,
            status: self.status,
            is_revoked: self.is_revoked.unwrap_or_default(),
            profile_name: self.profile_name,
            profile_version: self.profile_version,
            platform_id: self.platform_id,
            platform_display_name: self.platform_display_name,
            signature_expires_at: self.signature_expires_at,
            job_owner: self.job_owner,
            job_invoker: self.job_invoker,
        }
    }
}
