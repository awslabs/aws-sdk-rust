// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DisassociateMergedGraphqlApiInput {
    /// <p>The identifier of the AppSync Source API. This is generated by the AppSync service. In most cases, source APIs (especially in your account) only require the API ID value or ARN of the source API. However, source APIs from other accounts (cross-account use cases) strictly require the full resource ARN of the source API.</p>
    pub source_api_identifier: ::std::option::Option<::std::string::String>,
    /// <p>The ID generated by the AppSync service for the source API association.</p>
    pub association_id: ::std::option::Option<::std::string::String>,
}
impl DisassociateMergedGraphqlApiInput {
    /// <p>The identifier of the AppSync Source API. This is generated by the AppSync service. In most cases, source APIs (especially in your account) only require the API ID value or ARN of the source API. However, source APIs from other accounts (cross-account use cases) strictly require the full resource ARN of the source API.</p>
    pub fn source_api_identifier(&self) -> ::std::option::Option<&str> {
        self.source_api_identifier.as_deref()
    }
    /// <p>The ID generated by the AppSync service for the source API association.</p>
    pub fn association_id(&self) -> ::std::option::Option<&str> {
        self.association_id.as_deref()
    }
}
impl DisassociateMergedGraphqlApiInput {
    /// Creates a new builder-style object to manufacture [`DisassociateMergedGraphqlApiInput`](crate::operation::disassociate_merged_graphql_api::DisassociateMergedGraphqlApiInput).
    pub fn builder() -> crate::operation::disassociate_merged_graphql_api::builders::DisassociateMergedGraphqlApiInputBuilder {
        crate::operation::disassociate_merged_graphql_api::builders::DisassociateMergedGraphqlApiInputBuilder::default()
    }
}

/// A builder for [`DisassociateMergedGraphqlApiInput`](crate::operation::disassociate_merged_graphql_api::DisassociateMergedGraphqlApiInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DisassociateMergedGraphqlApiInputBuilder {
    pub(crate) source_api_identifier: ::std::option::Option<::std::string::String>,
    pub(crate) association_id: ::std::option::Option<::std::string::String>,
}
impl DisassociateMergedGraphqlApiInputBuilder {
    /// <p>The identifier of the AppSync Source API. This is generated by the AppSync service. In most cases, source APIs (especially in your account) only require the API ID value or ARN of the source API. However, source APIs from other accounts (cross-account use cases) strictly require the full resource ARN of the source API.</p>
    /// This field is required.
    pub fn source_api_identifier(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.source_api_identifier = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The identifier of the AppSync Source API. This is generated by the AppSync service. In most cases, source APIs (especially in your account) only require the API ID value or ARN of the source API. However, source APIs from other accounts (cross-account use cases) strictly require the full resource ARN of the source API.</p>
    pub fn set_source_api_identifier(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.source_api_identifier = input;
        self
    }
    /// <p>The identifier of the AppSync Source API. This is generated by the AppSync service. In most cases, source APIs (especially in your account) only require the API ID value or ARN of the source API. However, source APIs from other accounts (cross-account use cases) strictly require the full resource ARN of the source API.</p>
    pub fn get_source_api_identifier(&self) -> &::std::option::Option<::std::string::String> {
        &self.source_api_identifier
    }
    /// <p>The ID generated by the AppSync service for the source API association.</p>
    /// This field is required.
    pub fn association_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.association_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID generated by the AppSync service for the source API association.</p>
    pub fn set_association_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.association_id = input;
        self
    }
    /// <p>The ID generated by the AppSync service for the source API association.</p>
    pub fn get_association_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.association_id
    }
    /// Consumes the builder and constructs a [`DisassociateMergedGraphqlApiInput`](crate::operation::disassociate_merged_graphql_api::DisassociateMergedGraphqlApiInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::disassociate_merged_graphql_api::DisassociateMergedGraphqlApiInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::disassociate_merged_graphql_api::DisassociateMergedGraphqlApiInput {
            source_api_identifier: self.source_api_identifier,
            association_id: self.association_id,
        })
    }
}
