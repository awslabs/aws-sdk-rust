// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GetTypeOutput {
    /// <p>The <code>Type</code> object.</p>
    #[doc(hidden)]
    pub r#type: std::option::Option<crate::types::Type>,
    _request_id: Option<String>,
}
impl GetTypeOutput {
    /// <p>The <code>Type</code> object.</p>
    pub fn r#type(&self) -> std::option::Option<&crate::types::Type> {
        self.r#type.as_ref()
    }
}
impl aws_http::request_id::RequestId for GetTypeOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl GetTypeOutput {
    /// Creates a new builder-style object to manufacture [`GetTypeOutput`](crate::operation::get_type::GetTypeOutput).
    pub fn builder() -> crate::operation::get_type::builders::GetTypeOutputBuilder {
        crate::operation::get_type::builders::GetTypeOutputBuilder::default()
    }
}

/// A builder for [`GetTypeOutput`](crate::operation::get_type::GetTypeOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct GetTypeOutputBuilder {
    pub(crate) r#type: std::option::Option<crate::types::Type>,
    _request_id: Option<String>,
}
impl GetTypeOutputBuilder {
    /// <p>The <code>Type</code> object.</p>
    pub fn r#type(mut self, input: crate::types::Type) -> Self {
        self.r#type = Some(input);
        self
    }
    /// <p>The <code>Type</code> object.</p>
    pub fn set_type(mut self, input: std::option::Option<crate::types::Type>) -> Self {
        self.r#type = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`GetTypeOutput`](crate::operation::get_type::GetTypeOutput).
    pub fn build(self) -> crate::operation::get_type::GetTypeOutput {
        crate::operation::get_type::GetTypeOutput {
            r#type: self.r#type,
            _request_id: self._request_id,
        }
    }
}
