// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) mod shape_associate_api;

pub fn parse_http_error_metadata(
    response: &http::Response<bytes::Bytes>,
) -> Result<
    aws_smithy_types::error::metadata::Builder,
    aws_smithy_json::deserialize::error::DeserializeError,
> {
    crate::json_errors::parse_error_metadata(response.body(), response.headers())
}

pub(crate) mod shape_create_api_cache;

pub(crate) mod shape_create_api_key;

pub(crate) mod shape_create_data_source;

pub(crate) mod shape_create_domain_name;

pub(crate) mod shape_create_function;

pub(crate) mod shape_create_graphql_api;

pub(crate) mod shape_create_resolver;

pub(crate) mod shape_create_type;

pub(crate) mod shape_delete_api_cache;

pub(crate) mod shape_delete_api_key;

pub(crate) mod shape_delete_data_source;

pub(crate) mod shape_delete_domain_name;

pub(crate) mod shape_delete_function;

pub(crate) mod shape_delete_graphql_api;

pub(crate) mod shape_delete_resolver;

pub(crate) mod shape_delete_type;

pub(crate) mod shape_disassociate_api;

pub(crate) mod shape_evaluate_code;

pub(crate) mod shape_evaluate_mapping_template;

pub(crate) mod shape_flush_api_cache;

pub(crate) mod shape_get_api_association;

pub(crate) mod shape_get_api_cache;

pub(crate) mod shape_get_data_source;

pub(crate) mod shape_get_domain_name;

pub(crate) mod shape_get_function;

pub(crate) mod shape_get_graphql_api;

pub(crate) mod shape_get_introspection_schema;

pub(crate) mod shape_get_resolver;

pub(crate) mod shape_get_schema_creation_status;

pub(crate) mod shape_get_type;

pub(crate) mod shape_list_api_keys;

pub(crate) mod shape_list_data_sources;

pub(crate) mod shape_list_domain_names;

pub(crate) mod shape_list_functions;

pub(crate) mod shape_list_graphql_apis;

pub(crate) mod shape_list_resolvers;

pub(crate) mod shape_list_resolvers_by_function;

pub(crate) mod shape_list_tags_for_resource;

pub(crate) mod shape_list_types;

pub(crate) mod shape_start_schema_creation;

pub(crate) mod shape_tag_resource;

pub(crate) mod shape_untag_resource;

pub(crate) mod shape_update_api_cache;

pub(crate) mod shape_update_api_key;

pub(crate) mod shape_update_data_source;

pub(crate) mod shape_update_domain_name;

pub(crate) mod shape_update_function;

pub(crate) mod shape_update_graphql_api;

pub(crate) mod shape_update_resolver;

pub(crate) mod shape_update_type;

pub(crate) fn or_empty_doc(data: &[u8]) -> &[u8] {
    if data.is_empty() {
        b"{}"
    } else {
        data
    }
}

pub(crate) mod shape_access_denied_exception;

pub(crate) mod shape_api_key_limit_exceeded_exception;

pub(crate) mod shape_api_key_validity_out_of_bounds_exception;

pub(crate) mod shape_api_limit_exceeded_exception;

pub(crate) mod shape_associate_api_input;

pub(crate) mod shape_bad_request_exception;

pub(crate) mod shape_concurrent_modification_exception;

pub(crate) mod shape_create_api_cache_input;

pub(crate) mod shape_create_api_key_input;

pub(crate) mod shape_create_data_source_input;

pub(crate) mod shape_create_domain_name_input;

pub(crate) mod shape_create_function_input;

pub(crate) mod shape_create_graphql_api_input;

pub(crate) mod shape_create_resolver_input;

pub(crate) mod shape_create_type_input;

pub(crate) mod shape_evaluate_code_input;

pub(crate) mod shape_evaluate_mapping_template_input;

pub(crate) mod shape_get_introspection_schema_output;

pub(crate) mod shape_graph_ql_schema_exception;

pub(crate) mod shape_internal_failure_exception;

pub(crate) mod shape_limit_exceeded_exception;

pub(crate) mod shape_not_found_exception;

pub(crate) mod shape_start_schema_creation_input;

pub(crate) mod shape_tag_resource_input;

pub(crate) mod shape_unauthorized_exception;

pub(crate) mod shape_update_api_cache_input;

pub(crate) mod shape_update_api_key_input;

pub(crate) mod shape_update_data_source_input;

pub(crate) mod shape_update_domain_name_input;

pub(crate) mod shape_update_function_input;

pub(crate) mod shape_update_graphql_api_input;

pub(crate) mod shape_update_resolver_input;

pub(crate) mod shape_update_type_input;

pub(crate) mod shape_additional_authentication_provider;

pub(crate) mod shape_api_association;

pub(crate) mod shape_api_cache;

pub(crate) mod shape_api_key;

pub(crate) mod shape_api_keys;

pub(crate) mod shape_app_sync_runtime;

pub(crate) mod shape_bad_request_detail;

pub(crate) mod shape_caching_config;

pub(crate) mod shape_data_source;

pub(crate) mod shape_data_sources;

pub(crate) mod shape_domain_name_config;

pub(crate) mod shape_domain_name_configs;

pub(crate) mod shape_dynamodb_data_source_config;

pub(crate) mod shape_elasticsearch_data_source_config;

pub(crate) mod shape_error_detail;

pub(crate) mod shape_evaluate_code_error_detail;

pub(crate) mod shape_function_configuration;

pub(crate) mod shape_functions;

pub(crate) mod shape_graphql_api;

pub(crate) mod shape_graphql_apis;

pub(crate) mod shape_http_data_source_config;

pub(crate) mod shape_lambda_authorizer_config;

pub(crate) mod shape_lambda_data_source_config;

pub(crate) mod shape_log_config;

pub(crate) mod shape_logs;

pub(crate) mod shape_open_id_connect_config;

pub(crate) mod shape_open_search_service_data_source_config;

pub(crate) mod shape_pipeline_config;

pub(crate) mod shape_relational_database_data_source_config;

pub(crate) mod shape_resolver;

pub(crate) mod shape_resolvers;

pub(crate) mod shape_sync_config;

pub(crate) mod shape_tag_map;

pub(crate) mod shape_type;

pub(crate) mod shape_type_list;

pub(crate) mod shape_user_pool_config;

pub(crate) mod shape_additional_authentication_providers;

pub(crate) mod shape_authorization_config;

pub(crate) mod shape_code_errors;

pub(crate) mod shape_cognito_user_pool_config;

pub(crate) mod shape_delta_sync_config;

pub(crate) mod shape_lambda_conflict_handler_config;

pub(crate) mod shape_map_of_string_to_string;

pub(crate) mod shape_rds_http_endpoint_config;

pub(crate) mod shape_aws_iam_config;

pub(crate) mod shape_caching_keys;

pub(crate) mod shape_code_error;

pub(crate) mod shape_functions_ids;

pub(crate) mod shape_code_error_location;
