// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateType`](crate::operation::create_type::builders::CreateTypeFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`api_id(impl Into<String>)`](crate::operation::create_type::builders::CreateTypeFluentBuilder::api_id) / [`set_api_id(Option<String>)`](crate::operation::create_type::builders::CreateTypeFluentBuilder::set_api_id): <p>The API ID.</p>
    ///   - [`definition(impl Into<String>)`](crate::operation::create_type::builders::CreateTypeFluentBuilder::definition) / [`set_definition(Option<String>)`](crate::operation::create_type::builders::CreateTypeFluentBuilder::set_definition): <p>The type definition, in GraphQL Schema Definition Language (SDL) format.</p>  <p>For more information, see the <a href="http://graphql.org/learn/schema/">GraphQL SDL documentation</a>.</p>
    ///   - [`format(TypeDefinitionFormat)`](crate::operation::create_type::builders::CreateTypeFluentBuilder::format) / [`set_format(Option<TypeDefinitionFormat>)`](crate::operation::create_type::builders::CreateTypeFluentBuilder::set_format): <p>The type format: SDL or JSON.</p>
    /// - On success, responds with [`CreateTypeOutput`](crate::operation::create_type::CreateTypeOutput) with field(s):
    ///   - [`r#type(Option<Type>)`](crate::operation::create_type::CreateTypeOutput::type): <p>The <code>Type</code> object.</p>
    /// - On failure, responds with [`SdkError<CreateTypeError>`](crate::operation::create_type::CreateTypeError)
    pub fn create_type(&self) -> crate::operation::create_type::builders::CreateTypeFluentBuilder {
        crate::operation::create_type::builders::CreateTypeFluentBuilder::new(self.handle.clone())
    }
}
