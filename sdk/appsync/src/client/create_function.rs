// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateFunction`](crate::operation::create_function::builders::CreateFunctionFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`api_id(impl Into<String>)`](crate::operation::create_function::builders::CreateFunctionFluentBuilder::api_id) / [`set_api_id(Option<String>)`](crate::operation::create_function::builders::CreateFunctionFluentBuilder::set_api_id): <p>The GraphQL API ID.</p>
    ///   - [`name(impl Into<String>)`](crate::operation::create_function::builders::CreateFunctionFluentBuilder::name) / [`set_name(Option<String>)`](crate::operation::create_function::builders::CreateFunctionFluentBuilder::set_name): <p>The <code>Function</code> name. The function name does not have to be unique.</p>
    ///   - [`description(impl Into<String>)`](crate::operation::create_function::builders::CreateFunctionFluentBuilder::description) / [`set_description(Option<String>)`](crate::operation::create_function::builders::CreateFunctionFluentBuilder::set_description): <p>The <code>Function</code> description.</p>
    ///   - [`data_source_name(impl Into<String>)`](crate::operation::create_function::builders::CreateFunctionFluentBuilder::data_source_name) / [`set_data_source_name(Option<String>)`](crate::operation::create_function::builders::CreateFunctionFluentBuilder::set_data_source_name): <p>The <code>Function</code> <code>DataSource</code> name.</p>
    ///   - [`request_mapping_template(impl Into<String>)`](crate::operation::create_function::builders::CreateFunctionFluentBuilder::request_mapping_template) / [`set_request_mapping_template(Option<String>)`](crate::operation::create_function::builders::CreateFunctionFluentBuilder::set_request_mapping_template): <p>The <code>Function</code> request mapping template. Functions support only the 2018-05-29 version of the request mapping template.</p>
    ///   - [`response_mapping_template(impl Into<String>)`](crate::operation::create_function::builders::CreateFunctionFluentBuilder::response_mapping_template) / [`set_response_mapping_template(Option<String>)`](crate::operation::create_function::builders::CreateFunctionFluentBuilder::set_response_mapping_template): <p>The <code>Function</code> response mapping template.</p>
    ///   - [`function_version(impl Into<String>)`](crate::operation::create_function::builders::CreateFunctionFluentBuilder::function_version) / [`set_function_version(Option<String>)`](crate::operation::create_function::builders::CreateFunctionFluentBuilder::set_function_version): <p>The <code>version</code> of the request mapping template. Currently, the supported value is 2018-05-29. Note that when using VTL and mapping templates, the <code>functionVersion</code> is required.</p>
    ///   - [`sync_config(SyncConfig)`](crate::operation::create_function::builders::CreateFunctionFluentBuilder::sync_config) / [`set_sync_config(Option<SyncConfig>)`](crate::operation::create_function::builders::CreateFunctionFluentBuilder::set_sync_config): <p>Describes a Sync configuration for a resolver.</p>  <p>Specifies which Conflict Detection strategy and Resolution strategy to use when the resolver is invoked.</p>
    ///   - [`max_batch_size(i32)`](crate::operation::create_function::builders::CreateFunctionFluentBuilder::max_batch_size) / [`set_max_batch_size(i32)`](crate::operation::create_function::builders::CreateFunctionFluentBuilder::set_max_batch_size): <p>The maximum batching size for a resolver.</p>
    ///   - [`runtime(AppSyncRuntime)`](crate::operation::create_function::builders::CreateFunctionFluentBuilder::runtime) / [`set_runtime(Option<AppSyncRuntime>)`](crate::operation::create_function::builders::CreateFunctionFluentBuilder::set_runtime): <p>Describes a runtime used by an Amazon Web Services AppSync pipeline resolver or Amazon Web Services AppSync function. Specifies the name and version of the runtime to use. Note that if a runtime is specified, code must also be specified.</p>
    ///   - [`code(impl Into<String>)`](crate::operation::create_function::builders::CreateFunctionFluentBuilder::code) / [`set_code(Option<String>)`](crate::operation::create_function::builders::CreateFunctionFluentBuilder::set_code): <p>The <code>function</code> code that contains the request and response functions. When code is used, the <code>runtime</code> is required. The <code>runtime</code> value must be <code>APPSYNC_JS</code>.</p>
    /// - On success, responds with [`CreateFunctionOutput`](crate::operation::create_function::CreateFunctionOutput) with field(s):
    ///   - [`function_configuration(Option<FunctionConfiguration>)`](crate::operation::create_function::CreateFunctionOutput::function_configuration): <p>The <code>Function</code> object.</p>
    /// - On failure, responds with [`SdkError<CreateFunctionError>`](crate::operation::create_function::CreateFunctionError)
    pub fn create_function(
        &self,
    ) -> crate::operation::create_function::builders::CreateFunctionFluentBuilder {
        crate::operation::create_function::builders::CreateFunctionFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
