// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`EvaluateCode`](crate::client::fluent_builders::EvaluateCode) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`runtime(AppSyncRuntime)`](crate::client::fluent_builders::EvaluateCode::runtime) / [`set_runtime(Option<AppSyncRuntime>)`](crate::client::fluent_builders::EvaluateCode::set_runtime): <p>The runtime to be used when evaluating the code. Currently, only the <code>APPSYNC_JS</code> runtime is supported.</p>
    ///   - [`code(impl Into<String>)`](crate::client::fluent_builders::EvaluateCode::code) / [`set_code(Option<String>)`](crate::client::fluent_builders::EvaluateCode::set_code): <p>The code definition to be evaluated. Note that <code>code</code> and <code>runtime</code> are both required for this action. The <code>runtime</code> value must be <code>APPSYNC_JS</code>.</p>
    ///   - [`context(impl Into<String>)`](crate::client::fluent_builders::EvaluateCode::context) / [`set_context(Option<String>)`](crate::client::fluent_builders::EvaluateCode::set_context): <p>The map that holds all of the contextual information for your resolver invocation. A <code>context</code> is required for this action.</p>
    ///   - [`function(impl Into<String>)`](crate::client::fluent_builders::EvaluateCode::function) / [`set_function(Option<String>)`](crate::client::fluent_builders::EvaluateCode::set_function): <p>The function within the code to be evaluated. If provided, the valid values are <code>request</code> and <code>response</code>.</p>
    /// - On success, responds with [`EvaluateCodeOutput`](crate::output::EvaluateCodeOutput) with field(s):
    ///   - [`evaluation_result(Option<String>)`](crate::output::EvaluateCodeOutput::evaluation_result): <p>The result of the evaluation operation.</p>
    ///   - [`error(Option<EvaluateCodeErrorDetail>)`](crate::output::EvaluateCodeOutput::error): <p>Contains the payload of the response error.</p>
    ///   - [`logs(Option<Vec<String>>)`](crate::output::EvaluateCodeOutput::logs): <p>A list of logs that were generated by calls to <code>util.log.info</code> and <code>util.log.error</code> in the evaluated code.</p>
    /// - On failure, responds with [`SdkError<EvaluateCodeError>`](crate::error::EvaluateCodeError)
    pub fn evaluate_code(&self) -> crate::client::fluent_builders::EvaluateCode {
        crate::client::fluent_builders::EvaluateCode::new(self.handle.clone())
    }
}
