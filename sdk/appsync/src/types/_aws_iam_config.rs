// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The Identity and Access Management (IAM) configuration.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AwsIamConfig {
    /// <p>The signing Amazon Web Services Region for IAM authorization.</p>
    #[doc(hidden)]
    pub signing_region: std::option::Option<std::string::String>,
    /// <p>The signing service name for IAM authorization.</p>
    #[doc(hidden)]
    pub signing_service_name: std::option::Option<std::string::String>,
}
impl AwsIamConfig {
    /// <p>The signing Amazon Web Services Region for IAM authorization.</p>
    pub fn signing_region(&self) -> std::option::Option<&str> {
        self.signing_region.as_deref()
    }
    /// <p>The signing service name for IAM authorization.</p>
    pub fn signing_service_name(&self) -> std::option::Option<&str> {
        self.signing_service_name.as_deref()
    }
}
impl AwsIamConfig {
    /// Creates a new builder-style object to manufacture [`AwsIamConfig`](crate::types::AwsIamConfig).
    pub fn builder() -> crate::types::builders::AwsIamConfigBuilder {
        crate::types::builders::AwsIamConfigBuilder::default()
    }
}

/// A builder for [`AwsIamConfig`](crate::types::AwsIamConfig).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AwsIamConfigBuilder {
    pub(crate) signing_region: std::option::Option<std::string::String>,
    pub(crate) signing_service_name: std::option::Option<std::string::String>,
}
impl AwsIamConfigBuilder {
    /// <p>The signing Amazon Web Services Region for IAM authorization.</p>
    pub fn signing_region(mut self, input: impl Into<std::string::String>) -> Self {
        self.signing_region = Some(input.into());
        self
    }
    /// <p>The signing Amazon Web Services Region for IAM authorization.</p>
    pub fn set_signing_region(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.signing_region = input;
        self
    }
    /// <p>The signing service name for IAM authorization.</p>
    pub fn signing_service_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.signing_service_name = Some(input.into());
        self
    }
    /// <p>The signing service name for IAM authorization.</p>
    pub fn set_signing_service_name(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.signing_service_name = input;
        self
    }
    /// Consumes the builder and constructs a [`AwsIamConfig`](crate::types::AwsIamConfig).
    pub fn build(self) -> crate::types::AwsIamConfig {
        crate::types::AwsIamConfig {
            signing_region: self.signing_region,
            signing_service_name: self.signing_service_name,
        }
    }
}
