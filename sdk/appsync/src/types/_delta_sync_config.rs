// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Describes a Delta Sync configuration.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DeltaSyncConfig {
    /// <p>The number of minutes that an Item is stored in the data source.</p>
    #[doc(hidden)]
    pub base_table_ttl: i64,
    /// <p>The Delta Sync table name.</p>
    #[doc(hidden)]
    pub delta_sync_table_name: std::option::Option<std::string::String>,
    /// <p>The number of minutes that a Delta Sync log entry is stored in the Delta Sync table.</p>
    #[doc(hidden)]
    pub delta_sync_table_ttl: i64,
}
impl DeltaSyncConfig {
    /// <p>The number of minutes that an Item is stored in the data source.</p>
    pub fn base_table_ttl(&self) -> i64 {
        self.base_table_ttl
    }
    /// <p>The Delta Sync table name.</p>
    pub fn delta_sync_table_name(&self) -> std::option::Option<&str> {
        self.delta_sync_table_name.as_deref()
    }
    /// <p>The number of minutes that a Delta Sync log entry is stored in the Delta Sync table.</p>
    pub fn delta_sync_table_ttl(&self) -> i64 {
        self.delta_sync_table_ttl
    }
}
impl DeltaSyncConfig {
    /// Creates a new builder-style object to manufacture [`DeltaSyncConfig`](crate::types::DeltaSyncConfig).
    pub fn builder() -> crate::types::builders::DeltaSyncConfigBuilder {
        crate::types::builders::DeltaSyncConfigBuilder::default()
    }
}

/// A builder for [`DeltaSyncConfig`](crate::types::DeltaSyncConfig).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DeltaSyncConfigBuilder {
    pub(crate) base_table_ttl: std::option::Option<i64>,
    pub(crate) delta_sync_table_name: std::option::Option<std::string::String>,
    pub(crate) delta_sync_table_ttl: std::option::Option<i64>,
}
impl DeltaSyncConfigBuilder {
    /// <p>The number of minutes that an Item is stored in the data source.</p>
    pub fn base_table_ttl(mut self, input: i64) -> Self {
        self.base_table_ttl = Some(input);
        self
    }
    /// <p>The number of minutes that an Item is stored in the data source.</p>
    pub fn set_base_table_ttl(mut self, input: std::option::Option<i64>) -> Self {
        self.base_table_ttl = input;
        self
    }
    /// <p>The Delta Sync table name.</p>
    pub fn delta_sync_table_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.delta_sync_table_name = Some(input.into());
        self
    }
    /// <p>The Delta Sync table name.</p>
    pub fn set_delta_sync_table_name(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.delta_sync_table_name = input;
        self
    }
    /// <p>The number of minutes that a Delta Sync log entry is stored in the Delta Sync table.</p>
    pub fn delta_sync_table_ttl(mut self, input: i64) -> Self {
        self.delta_sync_table_ttl = Some(input);
        self
    }
    /// <p>The number of minutes that a Delta Sync log entry is stored in the Delta Sync table.</p>
    pub fn set_delta_sync_table_ttl(mut self, input: std::option::Option<i64>) -> Self {
        self.delta_sync_table_ttl = input;
        self
    }
    /// Consumes the builder and constructs a [`DeltaSyncConfig`](crate::types::DeltaSyncConfig).
    pub fn build(self) -> crate::types::DeltaSyncConfig {
        crate::types::DeltaSyncConfig {
            base_table_ttl: self.base_table_ttl.unwrap_or_default(),
            delta_sync_table_name: self.delta_sync_table_name,
            delta_sync_table_ttl: self.delta_sync_table_ttl.unwrap_or_default(),
        }
    }
}
