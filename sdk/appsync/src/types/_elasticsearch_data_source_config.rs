// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Describes an OpenSearch data source configuration.</p>
/// <p>As of September 2021, Amazon Elasticsearch service is Amazon OpenSearch Service. This configuration is deprecated. For new data sources, use <code>OpenSearchServiceDataSourceConfig</code> to specify an OpenSearch data source.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ElasticsearchDataSourceConfig {
    /// <p>The endpoint.</p>
    #[doc(hidden)]
    pub endpoint: std::option::Option<std::string::String>,
    /// <p>The Amazon Web Services Region.</p>
    #[doc(hidden)]
    pub aws_region: std::option::Option<std::string::String>,
}
impl ElasticsearchDataSourceConfig {
    /// <p>The endpoint.</p>
    pub fn endpoint(&self) -> std::option::Option<&str> {
        self.endpoint.as_deref()
    }
    /// <p>The Amazon Web Services Region.</p>
    pub fn aws_region(&self) -> std::option::Option<&str> {
        self.aws_region.as_deref()
    }
}
impl ElasticsearchDataSourceConfig {
    /// Creates a new builder-style object to manufacture [`ElasticsearchDataSourceConfig`](crate::types::ElasticsearchDataSourceConfig).
    pub fn builder() -> crate::types::builders::ElasticsearchDataSourceConfigBuilder {
        crate::types::builders::ElasticsearchDataSourceConfigBuilder::default()
    }
}

/// A builder for [`ElasticsearchDataSourceConfig`](crate::types::ElasticsearchDataSourceConfig).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ElasticsearchDataSourceConfigBuilder {
    pub(crate) endpoint: std::option::Option<std::string::String>,
    pub(crate) aws_region: std::option::Option<std::string::String>,
}
impl ElasticsearchDataSourceConfigBuilder {
    /// <p>The endpoint.</p>
    pub fn endpoint(mut self, input: impl Into<std::string::String>) -> Self {
        self.endpoint = Some(input.into());
        self
    }
    /// <p>The endpoint.</p>
    pub fn set_endpoint(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.endpoint = input;
        self
    }
    /// <p>The Amazon Web Services Region.</p>
    pub fn aws_region(mut self, input: impl Into<std::string::String>) -> Self {
        self.aws_region = Some(input.into());
        self
    }
    /// <p>The Amazon Web Services Region.</p>
    pub fn set_aws_region(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.aws_region = input;
        self
    }
    /// Consumes the builder and constructs a [`ElasticsearchDataSourceConfig`](crate::types::ElasticsearchDataSourceConfig).
    pub fn build(self) -> crate::types::ElasticsearchDataSourceConfig {
        crate::types::ElasticsearchDataSourceConfig {
            endpoint: self.endpoint,
            aws_region: self.aws_region,
        }
    }
}
