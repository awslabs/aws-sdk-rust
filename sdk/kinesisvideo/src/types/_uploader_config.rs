// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The configuration that consists of the <code>ScheduleExpression</code> and the <code>DurationInMinutesdetails</code>, that specify the scheduling to record from a camera, or local media file, onto the Edge Agent. If the <code>ScheduleExpression</code> is not provided, then the Edge Agent will always be in upload mode. </p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct UploaderConfig {
    /// <p>The configuration that consists of the <code>ScheduleExpression</code> and the <code>DurationInMinutes</code>details that specify the scheduling to record from a camera, or local media file, onto the Edge Agent. If the <code>ScheduleExpression</code> is not provided, then the Edge Agent will always be in recording mode.</p>
    #[doc(hidden)]
    pub schedule_config: std::option::Option<crate::types::ScheduleConfig>,
}
impl UploaderConfig {
    /// <p>The configuration that consists of the <code>ScheduleExpression</code> and the <code>DurationInMinutes</code>details that specify the scheduling to record from a camera, or local media file, onto the Edge Agent. If the <code>ScheduleExpression</code> is not provided, then the Edge Agent will always be in recording mode.</p>
    pub fn schedule_config(&self) -> std::option::Option<&crate::types::ScheduleConfig> {
        self.schedule_config.as_ref()
    }
}
impl UploaderConfig {
    /// Creates a new builder-style object to manufacture [`UploaderConfig`](crate::types::UploaderConfig).
    pub fn builder() -> crate::types::builders::UploaderConfigBuilder {
        crate::types::builders::UploaderConfigBuilder::default()
    }
}

/// A builder for [`UploaderConfig`](crate::types::UploaderConfig).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct UploaderConfigBuilder {
    pub(crate) schedule_config: std::option::Option<crate::types::ScheduleConfig>,
}
impl UploaderConfigBuilder {
    /// <p>The configuration that consists of the <code>ScheduleExpression</code> and the <code>DurationInMinutes</code>details that specify the scheduling to record from a camera, or local media file, onto the Edge Agent. If the <code>ScheduleExpression</code> is not provided, then the Edge Agent will always be in recording mode.</p>
    pub fn schedule_config(mut self, input: crate::types::ScheduleConfig) -> Self {
        self.schedule_config = Some(input);
        self
    }
    /// <p>The configuration that consists of the <code>ScheduleExpression</code> and the <code>DurationInMinutes</code>details that specify the scheduling to record from a camera, or local media file, onto the Edge Agent. If the <code>ScheduleExpression</code> is not provided, then the Edge Agent will always be in recording mode.</p>
    pub fn set_schedule_config(
        mut self,
        input: std::option::Option<crate::types::ScheduleConfig>,
    ) -> Self {
        self.schedule_config = input;
        self
    }
    /// Consumes the builder and constructs a [`UploaderConfig`](crate::types::UploaderConfig).
    pub fn build(self) -> crate::types::UploaderConfig {
        crate::types::UploaderConfig {
            schedule_config: self.schedule_config,
        }
    }
}
