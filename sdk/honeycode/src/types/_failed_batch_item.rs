// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p> A single item in a batch that failed to perform the intended action because of an error preventing it from succeeding. </p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct FailedBatchItem {
    /// <p> The id of the batch item that failed. This is the batch item id for the BatchCreateTableRows and BatchUpsertTableRows operations and the row id for the BatchUpdateTableRows and BatchDeleteTableRows operations. </p>
    #[doc(hidden)]
    pub id: std::option::Option<std::string::String>,
    /// <p> The error message that indicates why the batch item failed. </p>
    #[doc(hidden)]
    pub error_message: std::option::Option<std::string::String>,
}
impl FailedBatchItem {
    /// <p> The id of the batch item that failed. This is the batch item id for the BatchCreateTableRows and BatchUpsertTableRows operations and the row id for the BatchUpdateTableRows and BatchDeleteTableRows operations. </p>
    pub fn id(&self) -> std::option::Option<&str> {
        self.id.as_deref()
    }
    /// <p> The error message that indicates why the batch item failed. </p>
    pub fn error_message(&self) -> std::option::Option<&str> {
        self.error_message.as_deref()
    }
}
impl FailedBatchItem {
    /// Creates a new builder-style object to manufacture [`FailedBatchItem`](crate::types::FailedBatchItem).
    pub fn builder() -> crate::types::builders::FailedBatchItemBuilder {
        crate::types::builders::FailedBatchItemBuilder::default()
    }
}

/// A builder for [`FailedBatchItem`](crate::types::FailedBatchItem).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct FailedBatchItemBuilder {
    pub(crate) id: std::option::Option<std::string::String>,
    pub(crate) error_message: std::option::Option<std::string::String>,
}
impl FailedBatchItemBuilder {
    /// <p> The id of the batch item that failed. This is the batch item id for the BatchCreateTableRows and BatchUpsertTableRows operations and the row id for the BatchUpdateTableRows and BatchDeleteTableRows operations. </p>
    pub fn id(mut self, input: impl Into<std::string::String>) -> Self {
        self.id = Some(input.into());
        self
    }
    /// <p> The id of the batch item that failed. This is the batch item id for the BatchCreateTableRows and BatchUpsertTableRows operations and the row id for the BatchUpdateTableRows and BatchDeleteTableRows operations. </p>
    pub fn set_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.id = input;
        self
    }
    /// <p> The error message that indicates why the batch item failed. </p>
    pub fn error_message(mut self, input: impl Into<std::string::String>) -> Self {
        self.error_message = Some(input.into());
        self
    }
    /// <p> The error message that indicates why the batch item failed. </p>
    pub fn set_error_message(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.error_message = input;
        self
    }
    /// Consumes the builder and constructs a [`FailedBatchItem`](crate::types::FailedBatchItem).
    pub fn build(self) -> crate::types::FailedBatchItem {
        crate::types::FailedBatchItem {
            id: self.id,
            error_message: self.error_message,
        }
    }
}
