// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>An object that contains the properties for importing data to a specific column in a table.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct SourceDataColumnProperties {
    /// <p>The index of the column in the input file.</p>
    #[doc(hidden)]
    pub column_index: i32,
}
impl SourceDataColumnProperties {
    /// <p>The index of the column in the input file.</p>
    pub fn column_index(&self) -> i32 {
        self.column_index
    }
}
impl SourceDataColumnProperties {
    /// Creates a new builder-style object to manufacture [`SourceDataColumnProperties`](crate::types::SourceDataColumnProperties).
    pub fn builder() -> crate::types::builders::SourceDataColumnPropertiesBuilder {
        crate::types::builders::SourceDataColumnPropertiesBuilder::default()
    }
}

/// A builder for [`SourceDataColumnProperties`](crate::types::SourceDataColumnProperties).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct SourceDataColumnPropertiesBuilder {
    pub(crate) column_index: std::option::Option<i32>,
}
impl SourceDataColumnPropertiesBuilder {
    /// <p>The index of the column in the input file.</p>
    pub fn column_index(mut self, input: i32) -> Self {
        self.column_index = Some(input);
        self
    }
    /// <p>The index of the column in the input file.</p>
    pub fn set_column_index(mut self, input: std::option::Option<i32>) -> Self {
        self.column_index = input;
        self
    }
    /// Consumes the builder and constructs a [`SourceDataColumnProperties`](crate::types::SourceDataColumnProperties).
    pub fn build(self) -> crate::types::SourceDataColumnProperties {
        crate::types::SourceDataColumnProperties {
            column_index: self.column_index.unwrap_or_default(),
        }
    }
}
