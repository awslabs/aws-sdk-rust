// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`QueryTableRows`](crate::operation::query_table_rows::builders::QueryTableRowsFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::query_table_rows::builders::QueryTableRowsFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`workbook_id(impl Into<String>)`](crate::operation::query_table_rows::builders::QueryTableRowsFluentBuilder::workbook_id) / [`set_workbook_id(Option<String>)`](crate::operation::query_table_rows::builders::QueryTableRowsFluentBuilder::set_workbook_id): <p>The ID of the workbook whose table rows are being queried.</p>  <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>
    ///   - [`table_id(impl Into<String>)`](crate::operation::query_table_rows::builders::QueryTableRowsFluentBuilder::table_id) / [`set_table_id(Option<String>)`](crate::operation::query_table_rows::builders::QueryTableRowsFluentBuilder::set_table_id): <p>The ID of the table whose rows are being queried.</p>  <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException. </p>
    ///   - [`filter_formula(Filter)`](crate::operation::query_table_rows::builders::QueryTableRowsFluentBuilder::filter_formula) / [`set_filter_formula(Option<Filter>)`](crate::operation::query_table_rows::builders::QueryTableRowsFluentBuilder::set_filter_formula): <p>An object that represents a filter formula along with the id of the context row under which the filter function needs to evaluate.</p>
    ///   - [`max_results(i32)`](crate::operation::query_table_rows::builders::QueryTableRowsFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::query_table_rows::builders::QueryTableRowsFluentBuilder::set_max_results): <p>The maximum number of rows to return in each page of the results.</p>
    ///   - [`next_token(impl Into<String>)`](crate::operation::query_table_rows::builders::QueryTableRowsFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::query_table_rows::builders::QueryTableRowsFluentBuilder::set_next_token): <p> This parameter is optional. If a nextToken is not specified, the API returns the first page of data. </p>  <p> Pagination tokens expire after 1 hour. If you use a token that was returned more than an hour back, the API will throw ValidationException. </p>
    /// - On success, responds with [`QueryTableRowsOutput`](crate::operation::query_table_rows::QueryTableRowsOutput) with field(s):
    ///   - [`column_ids(Option<Vec<String>>)`](crate::operation::query_table_rows::QueryTableRowsOutput::column_ids): <p> The list of columns in the table whose row data is returned in the result. </p>
    ///   - [`rows(Option<Vec<TableRow>>)`](crate::operation::query_table_rows::QueryTableRowsOutput::rows): <p> The list of rows in the table that match the query filter. </p>
    ///   - [`next_token(Option<String>)`](crate::operation::query_table_rows::QueryTableRowsOutput::next_token): <p> Provides the pagination token to load the next page if there are more results matching the request. If a pagination token is not present in the response, it means that all data matching the request has been loaded. </p>
    ///   - [`workbook_cursor(i64)`](crate::operation::query_table_rows::QueryTableRowsOutput::workbook_cursor): <p> Indicates the cursor of the workbook at which the data returned by this request is read. Workbook cursor keeps increasing with every update and the increments are not sequential. </p>
    /// - On failure, responds with [`SdkError<QueryTableRowsError>`](crate::operation::query_table_rows::QueryTableRowsError)
    pub fn query_table_rows(
        &self,
    ) -> crate::operation::query_table_rows::builders::QueryTableRowsFluentBuilder {
        crate::operation::query_table_rows::builders::QueryTableRowsFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
