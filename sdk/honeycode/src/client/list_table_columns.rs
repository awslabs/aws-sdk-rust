// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListTableColumns`](crate::operation::list_table_columns::builders::ListTableColumnsFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::list_table_columns::builders::ListTableColumnsFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`workbook_id(impl Into<String>)`](crate::operation::list_table_columns::builders::ListTableColumnsFluentBuilder::workbook_id) / [`set_workbook_id(Option<String>)`](crate::operation::list_table_columns::builders::ListTableColumnsFluentBuilder::set_workbook_id):<br>required: **true**<br><p>The ID of the workbook that contains the table whose columns are being retrieved.</p>  <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p><br>
    ///   - [`table_id(impl Into<String>)`](crate::operation::list_table_columns::builders::ListTableColumnsFluentBuilder::table_id) / [`set_table_id(Option<String>)`](crate::operation::list_table_columns::builders::ListTableColumnsFluentBuilder::set_table_id):<br>required: **true**<br><p>The ID of the table whose columns are being retrieved.</p>  <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException. </p><br>
    ///   - [`next_token(impl Into<String>)`](crate::operation::list_table_columns::builders::ListTableColumnsFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::list_table_columns::builders::ListTableColumnsFluentBuilder::set_next_token):<br>required: **false**<br><p> This parameter is optional. If a nextToken is not specified, the API returns the first page of data. </p>  <p> Pagination tokens expire after 1 hour. If you use a token that was returned more than an hour back, the API will throw ValidationException. </p><br>
    /// - On success, responds with [`ListTableColumnsOutput`](crate::operation::list_table_columns::ListTableColumnsOutput) with field(s):
    ///   - [`table_columns(Vec::<TableColumn>)`](crate::operation::list_table_columns::ListTableColumnsOutput::table_columns): <p> The list of columns in the table. </p>
    ///   - [`next_token(Option<String>)`](crate::operation::list_table_columns::ListTableColumnsOutput::next_token): <p> Provides the pagination token to load the next page if there are more results matching the request. If a pagination token is not present in the response, it means that all data matching the request has been loaded. </p>
    ///   - [`workbook_cursor(i64)`](crate::operation::list_table_columns::ListTableColumnsOutput::workbook_cursor): <p> Indicates the cursor of the workbook at which the data returned by this request is read. Workbook cursor keeps increasing with every update and the increments are not sequential. </p>
    /// - On failure, responds with [`SdkError<ListTableColumnsError>`](crate::operation::list_table_columns::ListTableColumnsError)
    pub fn list_table_columns(&self) -> crate::operation::list_table_columns::builders::ListTableColumnsFluentBuilder {
        crate::operation::list_table_columns::builders::ListTableColumnsFluentBuilder::new(self.handle.clone())
    }
}
