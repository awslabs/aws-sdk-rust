// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DescribePlacementInput {
    /// <p>The name of the placement within a project.</p>
    pub placement_name: ::std::option::Option<::std::string::String>,
    /// <p>The project containing the placement to be described.</p>
    pub project_name: ::std::option::Option<::std::string::String>,
}
impl DescribePlacementInput {
    /// <p>The name of the placement within a project.</p>
    pub fn placement_name(&self) -> ::std::option::Option<&str> {
        self.placement_name.as_deref()
    }
    /// <p>The project containing the placement to be described.</p>
    pub fn project_name(&self) -> ::std::option::Option<&str> {
        self.project_name.as_deref()
    }
}
impl DescribePlacementInput {
    /// Creates a new builder-style object to manufacture [`DescribePlacementInput`](crate::operation::describe_placement::DescribePlacementInput).
    pub fn builder() -> crate::operation::describe_placement::builders::DescribePlacementInputBuilder {
        crate::operation::describe_placement::builders::DescribePlacementInputBuilder::default()
    }
}

/// A builder for [`DescribePlacementInput`](crate::operation::describe_placement::DescribePlacementInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DescribePlacementInputBuilder {
    pub(crate) placement_name: ::std::option::Option<::std::string::String>,
    pub(crate) project_name: ::std::option::Option<::std::string::String>,
}
impl DescribePlacementInputBuilder {
    /// <p>The name of the placement within a project.</p>
    /// This field is required.
    pub fn placement_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.placement_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the placement within a project.</p>
    pub fn set_placement_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.placement_name = input;
        self
    }
    /// <p>The name of the placement within a project.</p>
    pub fn get_placement_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.placement_name
    }
    /// <p>The project containing the placement to be described.</p>
    /// This field is required.
    pub fn project_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.project_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The project containing the placement to be described.</p>
    pub fn set_project_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.project_name = input;
        self
    }
    /// <p>The project containing the placement to be described.</p>
    pub fn get_project_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.project_name
    }
    /// Consumes the builder and constructs a [`DescribePlacementInput`](crate::operation::describe_placement::DescribePlacementInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::describe_placement::DescribePlacementInput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::operation::describe_placement::DescribePlacementInput {
            placement_name: self.placement_name,
            project_name: self.project_name,
        })
    }
}
