// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GetDevicesInPlacementInput {
    /// <p>The name of the project containing the placement.</p>
    #[doc(hidden)]
    pub project_name: std::option::Option<std::string::String>,
    /// <p>The name of the placement to get the devices from.</p>
    #[doc(hidden)]
    pub placement_name: std::option::Option<std::string::String>,
}
impl GetDevicesInPlacementInput {
    /// <p>The name of the project containing the placement.</p>
    pub fn project_name(&self) -> std::option::Option<&str> {
        self.project_name.as_deref()
    }
    /// <p>The name of the placement to get the devices from.</p>
    pub fn placement_name(&self) -> std::option::Option<&str> {
        self.placement_name.as_deref()
    }
}
impl GetDevicesInPlacementInput {
    /// Creates a new builder-style object to manufacture [`GetDevicesInPlacementInput`](crate::operation::get_devices_in_placement::GetDevicesInPlacementInput).
    pub fn builder(
    ) -> crate::operation::get_devices_in_placement::builders::GetDevicesInPlacementInputBuilder
    {
        crate::operation::get_devices_in_placement::builders::GetDevicesInPlacementInputBuilder::default()
    }
}

/// A builder for [`GetDevicesInPlacementInput`](crate::operation::get_devices_in_placement::GetDevicesInPlacementInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct GetDevicesInPlacementInputBuilder {
    pub(crate) project_name: std::option::Option<std::string::String>,
    pub(crate) placement_name: std::option::Option<std::string::String>,
}
impl GetDevicesInPlacementInputBuilder {
    /// <p>The name of the project containing the placement.</p>
    pub fn project_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.project_name = Some(input.into());
        self
    }
    /// <p>The name of the project containing the placement.</p>
    pub fn set_project_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.project_name = input;
        self
    }
    /// <p>The name of the placement to get the devices from.</p>
    pub fn placement_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.placement_name = Some(input.into());
        self
    }
    /// <p>The name of the placement to get the devices from.</p>
    pub fn set_placement_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.placement_name = input;
        self
    }
    /// Consumes the builder and constructs a [`GetDevicesInPlacementInput`](crate::operation::get_devices_in_placement::GetDevicesInPlacementInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::get_devices_in_placement::GetDevicesInPlacementInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::get_devices_in_placement::GetDevicesInPlacementInput {
                project_name: self.project_name,
                placement_name: self.placement_name,
            },
        )
    }
}
