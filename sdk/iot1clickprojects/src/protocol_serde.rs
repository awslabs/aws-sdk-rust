// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) mod shape_associate_device_with_placement;

pub fn parse_http_error_metadata(
    response: &http::Response<bytes::Bytes>,
) -> Result<
    aws_smithy_types::error::metadata::Builder,
    aws_smithy_json::deserialize::error::DeserializeError,
> {
    crate::json_errors::parse_error_metadata(response.body(), response.headers())
}

pub(crate) mod shape_create_placement;

pub(crate) mod shape_create_project;

pub(crate) mod shape_delete_placement;

pub(crate) mod shape_delete_project;

pub(crate) mod shape_describe_placement;

pub(crate) mod shape_describe_project;

pub(crate) mod shape_disassociate_device_from_placement;

pub(crate) mod shape_get_devices_in_placement;

pub(crate) mod shape_list_placements;

pub(crate) mod shape_list_projects;

pub(crate) mod shape_list_tags_for_resource;

pub(crate) mod shape_tag_resource;

pub(crate) mod shape_untag_resource;

pub(crate) mod shape_update_placement;

pub(crate) mod shape_update_project;

pub(crate) mod shape_associate_device_with_placement_input;

pub(crate) mod shape_create_placement_input;

pub(crate) mod shape_create_project_input;

pub(crate) fn or_empty_doc(data: &[u8]) -> &[u8] {
    if data.is_empty() {
        b"{}"
    } else {
        data
    }
}

pub(crate) mod shape_internal_failure_exception;

pub(crate) mod shape_invalid_request_exception;

pub(crate) mod shape_resource_conflict_exception;

pub(crate) mod shape_resource_not_found_exception;

pub(crate) mod shape_tag_resource_input;

pub(crate) mod shape_too_many_requests_exception;

pub(crate) mod shape_update_placement_input;

pub(crate) mod shape_update_project_input;

pub(crate) mod shape_device_map;

pub(crate) mod shape_placement_description;

pub(crate) mod shape_placement_summary_list;

pub(crate) mod shape_placement_template;

pub(crate) mod shape_project_description;

pub(crate) mod shape_project_summary_list;

pub(crate) mod shape_tag_map;

pub(crate) mod shape_device_template;

pub(crate) mod shape_placement_attribute_map;

pub(crate) mod shape_placement_summary;

pub(crate) mod shape_project_summary;

pub(crate) mod shape_default_placement_attribute_map;

pub(crate) mod shape_device_template_map;

pub(crate) mod shape_device_callback_override_map;
