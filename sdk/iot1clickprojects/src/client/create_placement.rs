// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreatePlacement`](crate::operation::create_placement::builders::CreatePlacementFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`placement_name(impl Into<String>)`](crate::operation::create_placement::builders::CreatePlacementFluentBuilder::placement_name) / [`set_placement_name(Option<String>)`](crate::operation::create_placement::builders::CreatePlacementFluentBuilder::set_placement_name): <p>The name of the placement to be created.</p>
    ///   - [`project_name(impl Into<String>)`](crate::operation::create_placement::builders::CreatePlacementFluentBuilder::project_name) / [`set_project_name(Option<String>)`](crate::operation::create_placement::builders::CreatePlacementFluentBuilder::set_project_name): <p>The name of the project in which to create the placement.</p>
    ///   - [`attributes(HashMap<String, String>)`](crate::operation::create_placement::builders::CreatePlacementFluentBuilder::attributes) / [`set_attributes(Option<HashMap<String, String>>)`](crate::operation::create_placement::builders::CreatePlacementFluentBuilder::set_attributes): <p>Optional user-defined key/value pairs providing contextual data (such as location or function) for the placement.</p>
    /// - On success, responds with [`CreatePlacementOutput`](crate::operation::create_placement::CreatePlacementOutput)
    /// - On failure, responds with [`SdkError<CreatePlacementError>`](crate::operation::create_placement::CreatePlacementError)
    pub fn create_placement(
        &self,
    ) -> crate::operation::create_placement::builders::CreatePlacementFluentBuilder {
        crate::operation::create_placement::builders::CreatePlacementFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
