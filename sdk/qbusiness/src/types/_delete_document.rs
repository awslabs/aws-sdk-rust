// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A document deleted from an Amazon Q Business data source connector.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DeleteDocument {
    /// <p>The identifier of the deleted document.</p>
    pub document_id: ::std::string::String,
}
impl DeleteDocument {
    /// <p>The identifier of the deleted document.</p>
    pub fn document_id(&self) -> &str {
        use std::ops::Deref;
        self.document_id.deref()
    }
}
impl DeleteDocument {
    /// Creates a new builder-style object to manufacture [`DeleteDocument`](crate::types::DeleteDocument).
    pub fn builder() -> crate::types::builders::DeleteDocumentBuilder {
        crate::types::builders::DeleteDocumentBuilder::default()
    }
}

/// A builder for [`DeleteDocument`](crate::types::DeleteDocument).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DeleteDocumentBuilder {
    pub(crate) document_id: ::std::option::Option<::std::string::String>,
}
impl DeleteDocumentBuilder {
    /// <p>The identifier of the deleted document.</p>
    /// This field is required.
    pub fn document_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.document_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The identifier of the deleted document.</p>
    pub fn set_document_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.document_id = input;
        self
    }
    /// <p>The identifier of the deleted document.</p>
    pub fn get_document_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.document_id
    }
    /// Consumes the builder and constructs a [`DeleteDocument`](crate::types::DeleteDocument).
    /// This method will fail if any of the following fields are not set:
    /// - [`document_id`](crate::types::builders::DeleteDocumentBuilder::document_id)
    pub fn build(self) -> ::std::result::Result<crate::types::DeleteDocument, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::DeleteDocument {
            document_id: self.document_id.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "document_id",
                    "document_id was not specified but it is required when building DeleteDocument",
                )
            })?,
        })
    }
}
