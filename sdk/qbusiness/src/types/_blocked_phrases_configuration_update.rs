// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Updates a blocked phrases configuration in your Amazon Q Business application.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct BlockedPhrasesConfigurationUpdate {
    /// <p>Creates or updates a blocked phrases configuration in your Amazon Q Business application.</p>
    pub blocked_phrases_to_create_or_update: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
    /// <p>Deletes a blocked phrases configuration in your Amazon Q Business application.</p>
    pub blocked_phrases_to_delete: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
    /// <p>The configured custom message displayed to your end user when they use blocked phrase during chat.</p>
    pub system_message_override: ::std::option::Option<::std::string::String>,
}
impl BlockedPhrasesConfigurationUpdate {
    /// <p>Creates or updates a blocked phrases configuration in your Amazon Q Business application.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.blocked_phrases_to_create_or_update.is_none()`.
    pub fn blocked_phrases_to_create_or_update(&self) -> &[::std::string::String] {
        self.blocked_phrases_to_create_or_update.as_deref().unwrap_or_default()
    }
    /// <p>Deletes a blocked phrases configuration in your Amazon Q Business application.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.blocked_phrases_to_delete.is_none()`.
    pub fn blocked_phrases_to_delete(&self) -> &[::std::string::String] {
        self.blocked_phrases_to_delete.as_deref().unwrap_or_default()
    }
    /// <p>The configured custom message displayed to your end user when they use blocked phrase during chat.</p>
    pub fn system_message_override(&self) -> ::std::option::Option<&str> {
        self.system_message_override.as_deref()
    }
}
impl BlockedPhrasesConfigurationUpdate {
    /// Creates a new builder-style object to manufacture [`BlockedPhrasesConfigurationUpdate`](crate::types::BlockedPhrasesConfigurationUpdate).
    pub fn builder() -> crate::types::builders::BlockedPhrasesConfigurationUpdateBuilder {
        crate::types::builders::BlockedPhrasesConfigurationUpdateBuilder::default()
    }
}

/// A builder for [`BlockedPhrasesConfigurationUpdate`](crate::types::BlockedPhrasesConfigurationUpdate).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct BlockedPhrasesConfigurationUpdateBuilder {
    pub(crate) blocked_phrases_to_create_or_update: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
    pub(crate) blocked_phrases_to_delete: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
    pub(crate) system_message_override: ::std::option::Option<::std::string::String>,
}
impl BlockedPhrasesConfigurationUpdateBuilder {
    /// Appends an item to `blocked_phrases_to_create_or_update`.
    ///
    /// To override the contents of this collection use [`set_blocked_phrases_to_create_or_update`](Self::set_blocked_phrases_to_create_or_update).
    ///
    /// <p>Creates or updates a blocked phrases configuration in your Amazon Q Business application.</p>
    pub fn blocked_phrases_to_create_or_update(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        let mut v = self.blocked_phrases_to_create_or_update.unwrap_or_default();
        v.push(input.into());
        self.blocked_phrases_to_create_or_update = ::std::option::Option::Some(v);
        self
    }
    /// <p>Creates or updates a blocked phrases configuration in your Amazon Q Business application.</p>
    pub fn set_blocked_phrases_to_create_or_update(mut self, input: ::std::option::Option<::std::vec::Vec<::std::string::String>>) -> Self {
        self.blocked_phrases_to_create_or_update = input;
        self
    }
    /// <p>Creates or updates a blocked phrases configuration in your Amazon Q Business application.</p>
    pub fn get_blocked_phrases_to_create_or_update(&self) -> &::std::option::Option<::std::vec::Vec<::std::string::String>> {
        &self.blocked_phrases_to_create_or_update
    }
    /// Appends an item to `blocked_phrases_to_delete`.
    ///
    /// To override the contents of this collection use [`set_blocked_phrases_to_delete`](Self::set_blocked_phrases_to_delete).
    ///
    /// <p>Deletes a blocked phrases configuration in your Amazon Q Business application.</p>
    pub fn blocked_phrases_to_delete(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        let mut v = self.blocked_phrases_to_delete.unwrap_or_default();
        v.push(input.into());
        self.blocked_phrases_to_delete = ::std::option::Option::Some(v);
        self
    }
    /// <p>Deletes a blocked phrases configuration in your Amazon Q Business application.</p>
    pub fn set_blocked_phrases_to_delete(mut self, input: ::std::option::Option<::std::vec::Vec<::std::string::String>>) -> Self {
        self.blocked_phrases_to_delete = input;
        self
    }
    /// <p>Deletes a blocked phrases configuration in your Amazon Q Business application.</p>
    pub fn get_blocked_phrases_to_delete(&self) -> &::std::option::Option<::std::vec::Vec<::std::string::String>> {
        &self.blocked_phrases_to_delete
    }
    /// <p>The configured custom message displayed to your end user when they use blocked phrase during chat.</p>
    pub fn system_message_override(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.system_message_override = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The configured custom message displayed to your end user when they use blocked phrase during chat.</p>
    pub fn set_system_message_override(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.system_message_override = input;
        self
    }
    /// <p>The configured custom message displayed to your end user when they use blocked phrase during chat.</p>
    pub fn get_system_message_override(&self) -> &::std::option::Option<::std::string::String> {
        &self.system_message_override
    }
    /// Consumes the builder and constructs a [`BlockedPhrasesConfigurationUpdate`](crate::types::BlockedPhrasesConfigurationUpdate).
    pub fn build(self) -> crate::types::BlockedPhrasesConfigurationUpdate {
        crate::types::BlockedPhrasesConfigurationUpdate {
            blocked_phrases_to_create_or_update: self.blocked_phrases_to_create_or_update,
            blocked_phrases_to_delete: self.blocked_phrases_to_delete,
            system_message_override: self.system_message_override,
        }
    }
}
