// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The details of a document within an Amazon Q Business index.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DocumentDetails {
    /// <p>The identifier of the document.</p>
    pub document_id: ::std::option::Option<::std::string::String>,
    /// <p>The current status of the document.</p>
    pub status: ::std::option::Option<crate::types::DocumentStatus>,
    /// <p>An error message associated with the document.</p>
    pub error: ::std::option::Option<crate::types::ErrorDetail>,
    /// <p>The timestamp for when the document was created.</p>
    pub created_at: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>The timestamp for when the document was last updated.</p>
    pub updated_at: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl DocumentDetails {
    /// <p>The identifier of the document.</p>
    pub fn document_id(&self) -> ::std::option::Option<&str> {
        self.document_id.as_deref()
    }
    /// <p>The current status of the document.</p>
    pub fn status(&self) -> ::std::option::Option<&crate::types::DocumentStatus> {
        self.status.as_ref()
    }
    /// <p>An error message associated with the document.</p>
    pub fn error(&self) -> ::std::option::Option<&crate::types::ErrorDetail> {
        self.error.as_ref()
    }
    /// <p>The timestamp for when the document was created.</p>
    pub fn created_at(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.created_at.as_ref()
    }
    /// <p>The timestamp for when the document was last updated.</p>
    pub fn updated_at(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.updated_at.as_ref()
    }
}
impl DocumentDetails {
    /// Creates a new builder-style object to manufacture [`DocumentDetails`](crate::types::DocumentDetails).
    pub fn builder() -> crate::types::builders::DocumentDetailsBuilder {
        crate::types::builders::DocumentDetailsBuilder::default()
    }
}

/// A builder for [`DocumentDetails`](crate::types::DocumentDetails).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DocumentDetailsBuilder {
    pub(crate) document_id: ::std::option::Option<::std::string::String>,
    pub(crate) status: ::std::option::Option<crate::types::DocumentStatus>,
    pub(crate) error: ::std::option::Option<crate::types::ErrorDetail>,
    pub(crate) created_at: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) updated_at: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl DocumentDetailsBuilder {
    /// <p>The identifier of the document.</p>
    pub fn document_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.document_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The identifier of the document.</p>
    pub fn set_document_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.document_id = input;
        self
    }
    /// <p>The identifier of the document.</p>
    pub fn get_document_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.document_id
    }
    /// <p>The current status of the document.</p>
    pub fn status(mut self, input: crate::types::DocumentStatus) -> Self {
        self.status = ::std::option::Option::Some(input);
        self
    }
    /// <p>The current status of the document.</p>
    pub fn set_status(mut self, input: ::std::option::Option<crate::types::DocumentStatus>) -> Self {
        self.status = input;
        self
    }
    /// <p>The current status of the document.</p>
    pub fn get_status(&self) -> &::std::option::Option<crate::types::DocumentStatus> {
        &self.status
    }
    /// <p>An error message associated with the document.</p>
    pub fn error(mut self, input: crate::types::ErrorDetail) -> Self {
        self.error = ::std::option::Option::Some(input);
        self
    }
    /// <p>An error message associated with the document.</p>
    pub fn set_error(mut self, input: ::std::option::Option<crate::types::ErrorDetail>) -> Self {
        self.error = input;
        self
    }
    /// <p>An error message associated with the document.</p>
    pub fn get_error(&self) -> &::std::option::Option<crate::types::ErrorDetail> {
        &self.error
    }
    /// <p>The timestamp for when the document was created.</p>
    pub fn created_at(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.created_at = ::std::option::Option::Some(input);
        self
    }
    /// <p>The timestamp for when the document was created.</p>
    pub fn set_created_at(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.created_at = input;
        self
    }
    /// <p>The timestamp for when the document was created.</p>
    pub fn get_created_at(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.created_at
    }
    /// <p>The timestamp for when the document was last updated.</p>
    pub fn updated_at(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.updated_at = ::std::option::Option::Some(input);
        self
    }
    /// <p>The timestamp for when the document was last updated.</p>
    pub fn set_updated_at(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.updated_at = input;
        self
    }
    /// <p>The timestamp for when the document was last updated.</p>
    pub fn get_updated_at(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.updated_at
    }
    /// Consumes the builder and constructs a [`DocumentDetails`](crate::types::DocumentDetails).
    pub fn build(self) -> crate::types::DocumentDetails {
        crate::types::DocumentDetails {
            document_id: self.document_id,
            status: self.status,
            error: self.error,
            created_at: self.created_at,
            updated_at: self.updated_at,
        }
    }
}
