// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Provides information on boosting supported Amazon Q Business document attribute types. When an end user chat query matches document attributes that have been boosted, Amazon Q Business prioritizes generating responses from content that matches the boosted document attributes.</p><note>
/// <p>For <code>STRING</code> and <code>STRING_LIST</code> type document attributes to be used for boosting on the console and the API, they must be enabled for search using the <a href="https://docs.aws.amazon.com/amazonq/latest/api-reference/API_DocumentAttributeConfiguration.html">DocumentAttributeConfiguration</a> object of the <a href="https://docs.aws.amazon.com/amazonq/latest/api-reference/API_UpdateIndex.html">UpdateIndex</a> API. If you haven't enabled searching on these attributes, you can't boost attributes of these data types on either the console or the API.</p>
/// </note>
/// <p>For more information on how boosting document attributes work in Amazon Q Business, see <a href="https://docs.aws.amazon.com/amazonq/latest/business-use-dg/metadata-boosting.html">Boosting using document attributes</a>.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub enum DocumentAttributeBoostingConfiguration {
    /// <p>Provides information on boosting <code>DATE</code> type document attributes.</p>
    DateConfiguration(crate::types::DateAttributeBoostingConfiguration),
    /// <p>Provides information on boosting <code>NUMBER</code> type document attributes.</p>
    NumberConfiguration(crate::types::NumberAttributeBoostingConfiguration),
    /// <p>Provides information on boosting <code>STRING</code> type document attributes.</p>
    StringConfiguration(crate::types::StringAttributeBoostingConfiguration),
    /// <p>Provides information on boosting <code>STRING_LIST</code> type document attributes.</p>
    StringListConfiguration(crate::types::StringListAttributeBoostingConfiguration),
    /// The `Unknown` variant represents cases where new union variant was received. Consider upgrading the SDK to the latest available version.
    /// An unknown enum variant
    ///
    /// _Note: If you encounter this error, consider upgrading your SDK to the latest version._
    /// The `Unknown` variant represents cases where the server sent a value that wasn't recognized
    /// by the client. This can happen when the server adds new functionality, but the client has not been updated.
    /// To investigate this, consider turning on debug logging to print the raw HTTP response.
    #[non_exhaustive]
    Unknown,
}
impl DocumentAttributeBoostingConfiguration {
    /// Tries to convert the enum instance into [`DateConfiguration`](crate::types::DocumentAttributeBoostingConfiguration::DateConfiguration), extracting the inner [`DateAttributeBoostingConfiguration`](crate::types::DateAttributeBoostingConfiguration).
    /// Returns `Err(&Self)` if it can't be converted.
    pub fn as_date_configuration(&self) -> ::std::result::Result<&crate::types::DateAttributeBoostingConfiguration, &Self> {
        if let DocumentAttributeBoostingConfiguration::DateConfiguration(val) = &self {
            ::std::result::Result::Ok(val)
        } else {
            ::std::result::Result::Err(self)
        }
    }
    /// Returns true if this is a [`DateConfiguration`](crate::types::DocumentAttributeBoostingConfiguration::DateConfiguration).
    pub fn is_date_configuration(&self) -> bool {
        self.as_date_configuration().is_ok()
    }
    /// Tries to convert the enum instance into [`NumberConfiguration`](crate::types::DocumentAttributeBoostingConfiguration::NumberConfiguration), extracting the inner [`NumberAttributeBoostingConfiguration`](crate::types::NumberAttributeBoostingConfiguration).
    /// Returns `Err(&Self)` if it can't be converted.
    pub fn as_number_configuration(&self) -> ::std::result::Result<&crate::types::NumberAttributeBoostingConfiguration, &Self> {
        if let DocumentAttributeBoostingConfiguration::NumberConfiguration(val) = &self {
            ::std::result::Result::Ok(val)
        } else {
            ::std::result::Result::Err(self)
        }
    }
    /// Returns true if this is a [`NumberConfiguration`](crate::types::DocumentAttributeBoostingConfiguration::NumberConfiguration).
    pub fn is_number_configuration(&self) -> bool {
        self.as_number_configuration().is_ok()
    }
    /// Tries to convert the enum instance into [`StringConfiguration`](crate::types::DocumentAttributeBoostingConfiguration::StringConfiguration), extracting the inner [`StringAttributeBoostingConfiguration`](crate::types::StringAttributeBoostingConfiguration).
    /// Returns `Err(&Self)` if it can't be converted.
    pub fn as_string_configuration(&self) -> ::std::result::Result<&crate::types::StringAttributeBoostingConfiguration, &Self> {
        if let DocumentAttributeBoostingConfiguration::StringConfiguration(val) = &self {
            ::std::result::Result::Ok(val)
        } else {
            ::std::result::Result::Err(self)
        }
    }
    /// Returns true if this is a [`StringConfiguration`](crate::types::DocumentAttributeBoostingConfiguration::StringConfiguration).
    pub fn is_string_configuration(&self) -> bool {
        self.as_string_configuration().is_ok()
    }
    /// Tries to convert the enum instance into [`StringListConfiguration`](crate::types::DocumentAttributeBoostingConfiguration::StringListConfiguration), extracting the inner [`StringListAttributeBoostingConfiguration`](crate::types::StringListAttributeBoostingConfiguration).
    /// Returns `Err(&Self)` if it can't be converted.
    pub fn as_string_list_configuration(&self) -> ::std::result::Result<&crate::types::StringListAttributeBoostingConfiguration, &Self> {
        if let DocumentAttributeBoostingConfiguration::StringListConfiguration(val) = &self {
            ::std::result::Result::Ok(val)
        } else {
            ::std::result::Result::Err(self)
        }
    }
    /// Returns true if this is a [`StringListConfiguration`](crate::types::DocumentAttributeBoostingConfiguration::StringListConfiguration).
    pub fn is_string_list_configuration(&self) -> bool {
        self.as_string_list_configuration().is_ok()
    }
    /// Returns true if the enum instance is the `Unknown` variant.
    pub fn is_unknown(&self) -> bool {
        matches!(self, Self::Unknown)
    }
}
