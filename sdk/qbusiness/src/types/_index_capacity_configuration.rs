// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Provides information about index capacity configuration.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct IndexCapacityConfiguration {
    /// <p>The number of storage units configured for an Amazon Q Business index.</p>
    pub units: ::std::option::Option<i32>,
}
impl IndexCapacityConfiguration {
    /// <p>The number of storage units configured for an Amazon Q Business index.</p>
    pub fn units(&self) -> ::std::option::Option<i32> {
        self.units
    }
}
impl IndexCapacityConfiguration {
    /// Creates a new builder-style object to manufacture [`IndexCapacityConfiguration`](crate::types::IndexCapacityConfiguration).
    pub fn builder() -> crate::types::builders::IndexCapacityConfigurationBuilder {
        crate::types::builders::IndexCapacityConfigurationBuilder::default()
    }
}

/// A builder for [`IndexCapacityConfiguration`](crate::types::IndexCapacityConfiguration).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct IndexCapacityConfigurationBuilder {
    pub(crate) units: ::std::option::Option<i32>,
}
impl IndexCapacityConfigurationBuilder {
    /// <p>The number of storage units configured for an Amazon Q Business index.</p>
    pub fn units(mut self, input: i32) -> Self {
        self.units = ::std::option::Option::Some(input);
        self
    }
    /// <p>The number of storage units configured for an Amazon Q Business index.</p>
    pub fn set_units(mut self, input: ::std::option::Option<i32>) -> Self {
        self.units = input;
        self
    }
    /// <p>The number of storage units configured for an Amazon Q Business index.</p>
    pub fn get_units(&self) -> &::std::option::Option<i32> {
        &self.units
    }
    /// Consumes the builder and constructs a [`IndexCapacityConfiguration`](crate::types::IndexCapacityConfiguration).
    pub fn build(self) -> crate::types::IndexCapacityConfiguration {
        crate::types::IndexCapacityConfiguration { units: self.units }
    }
}
