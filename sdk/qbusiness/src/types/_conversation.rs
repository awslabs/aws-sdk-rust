// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A conversation in an Amazon Q Business application.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct Conversation {
    /// <p>The identifier of the Amazon Q Business conversation.</p>
    pub conversation_id: ::std::option::Option<::std::string::String>,
    /// <p>The title of the conversation.</p>
    pub title: ::std::option::Option<::std::string::String>,
    /// <p>The start time of the conversation.</p>
    pub start_time: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl Conversation {
    /// <p>The identifier of the Amazon Q Business conversation.</p>
    pub fn conversation_id(&self) -> ::std::option::Option<&str> {
        self.conversation_id.as_deref()
    }
    /// <p>The title of the conversation.</p>
    pub fn title(&self) -> ::std::option::Option<&str> {
        self.title.as_deref()
    }
    /// <p>The start time of the conversation.</p>
    pub fn start_time(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.start_time.as_ref()
    }
}
impl Conversation {
    /// Creates a new builder-style object to manufacture [`Conversation`](crate::types::Conversation).
    pub fn builder() -> crate::types::builders::ConversationBuilder {
        crate::types::builders::ConversationBuilder::default()
    }
}

/// A builder for [`Conversation`](crate::types::Conversation).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ConversationBuilder {
    pub(crate) conversation_id: ::std::option::Option<::std::string::String>,
    pub(crate) title: ::std::option::Option<::std::string::String>,
    pub(crate) start_time: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl ConversationBuilder {
    /// <p>The identifier of the Amazon Q Business conversation.</p>
    pub fn conversation_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.conversation_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The identifier of the Amazon Q Business conversation.</p>
    pub fn set_conversation_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.conversation_id = input;
        self
    }
    /// <p>The identifier of the Amazon Q Business conversation.</p>
    pub fn get_conversation_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.conversation_id
    }
    /// <p>The title of the conversation.</p>
    pub fn title(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.title = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The title of the conversation.</p>
    pub fn set_title(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.title = input;
        self
    }
    /// <p>The title of the conversation.</p>
    pub fn get_title(&self) -> &::std::option::Option<::std::string::String> {
        &self.title
    }
    /// <p>The start time of the conversation.</p>
    pub fn start_time(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.start_time = ::std::option::Option::Some(input);
        self
    }
    /// <p>The start time of the conversation.</p>
    pub fn set_start_time(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.start_time = input;
        self
    }
    /// <p>The start time of the conversation.</p>
    pub fn get_start_time(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.start_time
    }
    /// Consumes the builder and constructs a [`Conversation`](crate::types::Conversation).
    pub fn build(self) -> crate::types::Conversation {
        crate::types::Conversation {
            conversation_id: self.conversation_id,
            title: self.title,
            start_time: self.start_time,
        }
    }
}
