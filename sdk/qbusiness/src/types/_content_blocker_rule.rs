// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A rule for configuring how Amazon Q Business responds when it encounters a a blocked topic. You can configure a custom message to inform your end users that they have asked about a restricted topic and suggest any next steps they should take.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ContentBlockerRule {
    /// <p>The configured custom message displayed to an end user informing them that they've used a blocked phrase during chat.</p>
    pub system_message_override: ::std::option::Option<::std::string::String>,
}
impl ContentBlockerRule {
    /// <p>The configured custom message displayed to an end user informing them that they've used a blocked phrase during chat.</p>
    pub fn system_message_override(&self) -> ::std::option::Option<&str> {
        self.system_message_override.as_deref()
    }
}
impl ContentBlockerRule {
    /// Creates a new builder-style object to manufacture [`ContentBlockerRule`](crate::types::ContentBlockerRule).
    pub fn builder() -> crate::types::builders::ContentBlockerRuleBuilder {
        crate::types::builders::ContentBlockerRuleBuilder::default()
    }
}

/// A builder for [`ContentBlockerRule`](crate::types::ContentBlockerRule).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ContentBlockerRuleBuilder {
    pub(crate) system_message_override: ::std::option::Option<::std::string::String>,
}
impl ContentBlockerRuleBuilder {
    /// <p>The configured custom message displayed to an end user informing them that they've used a blocked phrase during chat.</p>
    pub fn system_message_override(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.system_message_override = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The configured custom message displayed to an end user informing them that they've used a blocked phrase during chat.</p>
    pub fn set_system_message_override(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.system_message_override = input;
        self
    }
    /// <p>The configured custom message displayed to an end user informing them that they've used a blocked phrase during chat.</p>
    pub fn get_system_message_override(&self) -> &::std::option::Option<::std::string::String> {
        &self.system_message_override
    }
    /// Consumes the builder and constructs a [`ContentBlockerRule`](crate::types::ContentBlockerRule).
    pub fn build(self) -> crate::types::ContentBlockerRule {
        crate::types::ContentBlockerRule {
            system_message_override: self.system_message_override,
        }
    }
}
