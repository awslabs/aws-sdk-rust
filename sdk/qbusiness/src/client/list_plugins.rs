// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListPlugins`](crate::operation::list_plugins::builders::ListPluginsFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::list_plugins::builders::ListPluginsFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_id(impl Into<String>)`](crate::operation::list_plugins::builders::ListPluginsFluentBuilder::application_id) / [`set_application_id(Option<String>)`](crate::operation::list_plugins::builders::ListPluginsFluentBuilder::set_application_id):<br>required: **true**<br><p>The identifier of the application the plugin is attached to.</p><br>
    ///   - [`next_token(impl Into<String>)`](crate::operation::list_plugins::builders::ListPluginsFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::list_plugins::builders::ListPluginsFluentBuilder::set_next_token):<br>required: **false**<br><p>If the <code>maxResults</code> response was incomplete because there is more data to retrieve, Amazon Q Business returns a pagination token in the response. You can use this pagination token to retrieve the next set of plugins.</p><br>
    ///   - [`max_results(i32)`](crate::operation::list_plugins::builders::ListPluginsFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::list_plugins::builders::ListPluginsFluentBuilder::set_max_results):<br>required: **false**<br><p>The maximum number of documents to return.</p><br>
    /// - On success, responds with [`ListPluginsOutput`](crate::operation::list_plugins::ListPluginsOutput) with field(s):
    ///   - [`next_token(Option<String>)`](crate::operation::list_plugins::ListPluginsOutput::next_token): <p>If the <code>maxResults</code> response was incomplete because there is more data to retrieve, Amazon Q Business returns a pagination token in the response. You can use this pagination token to retrieve the next set of plugins.</p>
    ///   - [`plugins(Option<Vec::<Plugin>>)`](crate::operation::list_plugins::ListPluginsOutput::plugins): <p>Information about a configured plugin.</p>
    /// - On failure, responds with [`SdkError<ListPluginsError>`](crate::operation::list_plugins::ListPluginsError)
    pub fn list_plugins(&self) -> crate::operation::list_plugins::builders::ListPluginsFluentBuilder {
        crate::operation::list_plugins::builders::ListPluginsFluentBuilder::new(self.handle.clone())
    }
}
