// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListDocuments`](crate::operation::list_documents::builders::ListDocumentsFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::list_documents::builders::ListDocumentsFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_id(impl Into<String>)`](crate::operation::list_documents::builders::ListDocumentsFluentBuilder::application_id) / [`set_application_id(Option<String>)`](crate::operation::list_documents::builders::ListDocumentsFluentBuilder::set_application_id):<br>required: **true**<br><p>The identifier of the application id the documents are attached to.</p><br>
    ///   - [`index_id(impl Into<String>)`](crate::operation::list_documents::builders::ListDocumentsFluentBuilder::index_id) / [`set_index_id(Option<String>)`](crate::operation::list_documents::builders::ListDocumentsFluentBuilder::set_index_id):<br>required: **true**<br><p>The identifier of the index the documents are attached to.</p><br>
    ///   - [`data_source_ids(impl Into<String>)`](crate::operation::list_documents::builders::ListDocumentsFluentBuilder::data_source_ids) / [`set_data_source_ids(Option<Vec::<String>>)`](crate::operation::list_documents::builders::ListDocumentsFluentBuilder::set_data_source_ids):<br>required: **false**<br><p>The identifier of the data sources the documents are attached to.</p><br>
    ///   - [`next_token(impl Into<String>)`](crate::operation::list_documents::builders::ListDocumentsFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::list_documents::builders::ListDocumentsFluentBuilder::set_next_token):<br>required: **false**<br><p>If the <code>maxResults</code> response was incomplete because there is more data to retrieve, Amazon Q Business returns a pagination token in the response. You can use this pagination token to retrieve the next set of documents.</p><br>
    ///   - [`max_results(i32)`](crate::operation::list_documents::builders::ListDocumentsFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::list_documents::builders::ListDocumentsFluentBuilder::set_max_results):<br>required: **false**<br><p>The maximum number of documents to return.</p><br>
    /// - On success, responds with [`ListDocumentsOutput`](crate::operation::list_documents::ListDocumentsOutput) with field(s):
    ///   - [`document_detail_list(Option<Vec::<DocumentDetails>>)`](crate::operation::list_documents::ListDocumentsOutput::document_detail_list): <p>A list of document details.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::list_documents::ListDocumentsOutput::next_token): <p>If the <code>maxResults</code> response was incomplete because there is more data to retrieve, Amazon Q Business returns a pagination token in the response. You can use this pagination token to retrieve the next set of documents.</p>
    /// - On failure, responds with [`SdkError<ListDocumentsError>`](crate::operation::list_documents::ListDocumentsError)
    pub fn list_documents(&self) -> crate::operation::list_documents::builders::ListDocumentsFluentBuilder {
        crate::operation::list_documents::builders::ListDocumentsFluentBuilder::new(self.handle.clone())
    }
}
