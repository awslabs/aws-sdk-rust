// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetChatControlsConfiguration`](crate::operation::get_chat_controls_configuration::builders::GetChatControlsConfigurationFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::get_chat_controls_configuration::builders::GetChatControlsConfigurationFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_id(impl Into<String>)`](crate::operation::get_chat_controls_configuration::builders::GetChatControlsConfigurationFluentBuilder::application_id) / [`set_application_id(Option<String>)`](crate::operation::get_chat_controls_configuration::builders::GetChatControlsConfigurationFluentBuilder::set_application_id):<br>required: **true**<br><p>The identifier of the application for which the chat controls are configured.</p><br>
    ///   - [`max_results(i32)`](crate::operation::get_chat_controls_configuration::builders::GetChatControlsConfigurationFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::get_chat_controls_configuration::builders::GetChatControlsConfigurationFluentBuilder::set_max_results):<br>required: **false**<br><p>The maximum number of configured chat controls to return.</p><br>
    ///   - [`next_token(impl Into<String>)`](crate::operation::get_chat_controls_configuration::builders::GetChatControlsConfigurationFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::get_chat_controls_configuration::builders::GetChatControlsConfigurationFluentBuilder::set_next_token):<br>required: **false**<br><p>If the <code>maxResults</code> response was incomplete because there is more data to retrieve, Amazon Q Business returns a pagination token in the response. You can use this pagination token to retrieve the next set of Amazon Q Business chat controls configured.</p><br>
    /// - On success, responds with [`GetChatControlsConfigurationOutput`](crate::operation::get_chat_controls_configuration::GetChatControlsConfigurationOutput) with field(s):
    ///   - [`response_scope(Option<ResponseScope>)`](crate::operation::get_chat_controls_configuration::GetChatControlsConfigurationOutput::response_scope): <p>The response scope configured for a Amazon Q Business application. This determines whether your application uses its retrieval augmented generation (RAG) system to generate answers only from your enterprise data, or also uses the large language models (LLM) knowledge to respons to end user questions in chat.</p>
    ///   - [`blocked_phrases(Option<BlockedPhrasesConfiguration>)`](crate::operation::get_chat_controls_configuration::GetChatControlsConfigurationOutput::blocked_phrases): <p>The phrases blocked from chat by your chat control configuration.</p>
    ///   - [`topic_configurations(Option<Vec::<TopicConfiguration>>)`](crate::operation::get_chat_controls_configuration::GetChatControlsConfigurationOutput::topic_configurations): <p>The topic specific controls configured for a Amazon Q Business application.</p>
    ///   - [`creator_mode_configuration(Option<AppliedCreatorModeConfiguration>)`](crate::operation::get_chat_controls_configuration::GetChatControlsConfigurationOutput::creator_mode_configuration): <p>The configuration details for <code>CREATOR_MODE</code>.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::get_chat_controls_configuration::GetChatControlsConfigurationOutput::next_token): <p>If the <code>maxResults</code> response was incomplete because there is more data to retrieve, Amazon Q Business returns a pagination token in the response. You can use this pagination token to retrieve the next set of Amazon Q Business chat controls configured.</p>
    /// - On failure, responds with [`SdkError<GetChatControlsConfigurationError>`](crate::operation::get_chat_controls_configuration::GetChatControlsConfigurationError)
    pub fn get_chat_controls_configuration(
        &self,
    ) -> crate::operation::get_chat_controls_configuration::builders::GetChatControlsConfigurationFluentBuilder {
        crate::operation::get_chat_controls_configuration::builders::GetChatControlsConfigurationFluentBuilder::new(self.handle.clone())
    }
}
