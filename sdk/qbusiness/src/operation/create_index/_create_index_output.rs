// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct CreateIndexOutput {
    /// <p>The identifier for the Amazon Q Business index.</p>
    pub index_id: ::std::option::Option<::std::string::String>,
    /// <p>The Amazon Resource Name (ARN) of an Amazon Q Business index.</p>
    pub index_arn: ::std::option::Option<::std::string::String>,
    _request_id: Option<String>,
}
impl CreateIndexOutput {
    /// <p>The identifier for the Amazon Q Business index.</p>
    pub fn index_id(&self) -> ::std::option::Option<&str> {
        self.index_id.as_deref()
    }
    /// <p>The Amazon Resource Name (ARN) of an Amazon Q Business index.</p>
    pub fn index_arn(&self) -> ::std::option::Option<&str> {
        self.index_arn.as_deref()
    }
}
impl ::aws_types::request_id::RequestId for CreateIndexOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl CreateIndexOutput {
    /// Creates a new builder-style object to manufacture [`CreateIndexOutput`](crate::operation::create_index::CreateIndexOutput).
    pub fn builder() -> crate::operation::create_index::builders::CreateIndexOutputBuilder {
        crate::operation::create_index::builders::CreateIndexOutputBuilder::default()
    }
}

/// A builder for [`CreateIndexOutput`](crate::operation::create_index::CreateIndexOutput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct CreateIndexOutputBuilder {
    pub(crate) index_id: ::std::option::Option<::std::string::String>,
    pub(crate) index_arn: ::std::option::Option<::std::string::String>,
    _request_id: Option<String>,
}
impl CreateIndexOutputBuilder {
    /// <p>The identifier for the Amazon Q Business index.</p>
    pub fn index_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.index_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The identifier for the Amazon Q Business index.</p>
    pub fn set_index_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.index_id = input;
        self
    }
    /// <p>The identifier for the Amazon Q Business index.</p>
    pub fn get_index_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.index_id
    }
    /// <p>The Amazon Resource Name (ARN) of an Amazon Q Business index.</p>
    pub fn index_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.index_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of an Amazon Q Business index.</p>
    pub fn set_index_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.index_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of an Amazon Q Business index.</p>
    pub fn get_index_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.index_arn
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`CreateIndexOutput`](crate::operation::create_index::CreateIndexOutput).
    pub fn build(self) -> crate::operation::create_index::CreateIndexOutput {
        crate::operation::create_index::CreateIndexOutput {
            index_id: self.index_id,
            index_arn: self.index_arn,
            _request_id: self._request_id,
        }
    }
}
