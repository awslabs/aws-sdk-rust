// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_update_alarm_model_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::update_alarm_model::UpdateAlarmModelInput,
) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    if let Some(var_1) = &input.alarm_capabilities {
        #[allow(unused_mut)]
        let mut object_2 = object.key("alarmCapabilities").start_object();
        crate::protocol_serde::shape_alarm_capabilities::ser_alarm_capabilities(
            &mut object_2,
            var_1,
        )?;
        object_2.finish();
    }
    if let Some(var_3) = &input.alarm_event_actions {
        #[allow(unused_mut)]
        let mut object_4 = object.key("alarmEventActions").start_object();
        crate::protocol_serde::shape_alarm_event_actions::ser_alarm_event_actions(
            &mut object_4,
            var_3,
        )?;
        object_4.finish();
    }
    if let Some(var_5) = &input.alarm_model_description {
        object.key("alarmModelDescription").string(var_5.as_str());
    }
    if let Some(var_6) = &input.alarm_notification {
        #[allow(unused_mut)]
        let mut object_7 = object.key("alarmNotification").start_object();
        crate::protocol_serde::shape_alarm_notification::ser_alarm_notification(
            &mut object_7,
            var_6,
        )?;
        object_7.finish();
    }
    if let Some(var_8) = &input.alarm_rule {
        #[allow(unused_mut)]
        let mut object_9 = object.key("alarmRule").start_object();
        crate::protocol_serde::shape_alarm_rule::ser_alarm_rule(&mut object_9, var_8)?;
        object_9.finish();
    }
    if let Some(var_10) = &input.role_arn {
        object.key("roleArn").string(var_10.as_str());
    }
    if let Some(var_11) = &input.severity {
        object.key("severity").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_11).into()),
        );
    }
    Ok(())
}
