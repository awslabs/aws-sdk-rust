// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) fn type_erase_result<O, E>(
    result: ::std::result::Result<O, E>,
) -> ::std::result::Result<
    ::aws_smithy_runtime_api::client::interceptors::context::Output,
    ::aws_smithy_runtime_api::client::orchestrator::OrchestratorError<::aws_smithy_runtime_api::client::interceptors::context::Error>,
>
where
    O: ::std::fmt::Debug + ::std::marker::Send + ::std::marker::Sync + 'static,
    E: ::std::error::Error + std::fmt::Debug + ::std::marker::Send + ::std::marker::Sync + 'static,
{
    result
        .map(|output| ::aws_smithy_runtime_api::client::interceptors::context::Output::erase(output))
        .map_err(|error| ::aws_smithy_runtime_api::client::interceptors::context::Error::erase(error))
        .map_err(::std::convert::Into::into)
}

pub fn parse_http_error_metadata(
    _response_status: u16,
    response_headers: &::http::HeaderMap,
    response_body: &[u8],
) -> Result<::aws_smithy_types::error::metadata::Builder, ::aws_smithy_json::deserialize::error::DeserializeError> {
    crate::json_errors::parse_error_metadata(response_body, response_headers)
}

pub(crate) mod shape_create_alarm_model;

pub(crate) mod shape_create_detector_model;

pub(crate) mod shape_create_input;

pub(crate) mod shape_delete_alarm_model;

pub(crate) mod shape_delete_detector_model;

pub(crate) mod shape_delete_input;

pub(crate) mod shape_describe_alarm_model;

pub(crate) mod shape_describe_detector_model;

pub(crate) mod shape_describe_detector_model_analysis;

pub(crate) mod shape_describe_input;

pub(crate) mod shape_describe_logging_options;

pub(crate) mod shape_get_detector_model_analysis_results;

pub(crate) mod shape_list_alarm_model_versions;

pub(crate) mod shape_list_alarm_models;

pub(crate) mod shape_list_detector_model_versions;

pub(crate) mod shape_list_detector_models;

pub(crate) mod shape_list_input_routings;

pub(crate) mod shape_list_inputs;

pub(crate) mod shape_list_tags_for_resource;

pub(crate) mod shape_put_logging_options;

pub(crate) mod shape_start_detector_model_analysis;

pub(crate) mod shape_tag_resource;

pub(crate) mod shape_untag_resource;

pub(crate) mod shape_update_alarm_model;

pub(crate) mod shape_update_detector_model;

pub(crate) mod shape_update_input;

pub(crate) fn or_empty_doc(data: &[u8]) -> &[u8] {
    if data.is_empty() {
        b"{}"
    } else {
        data
    }
}

pub(crate) mod shape_create_alarm_model_input;

pub(crate) mod shape_create_detector_model_input;

pub(crate) mod shape_create_input_input;

pub(crate) mod shape_internal_failure_exception;

pub(crate) mod shape_invalid_request_exception;

pub(crate) mod shape_limit_exceeded_exception;

pub(crate) mod shape_list_input_routings_input;

pub(crate) mod shape_put_logging_options_input;

pub(crate) mod shape_resource_already_exists_exception;

pub(crate) mod shape_resource_in_use_exception;

pub(crate) mod shape_resource_not_found_exception;

pub(crate) mod shape_service_unavailable_exception;

pub(crate) mod shape_start_detector_model_analysis_input;

pub(crate) mod shape_tag_resource_input;

pub(crate) mod shape_throttling_exception;

pub(crate) mod shape_unsupported_operation_exception;

pub(crate) mod shape_update_alarm_model_input;

pub(crate) mod shape_update_detector_model_input;

pub(crate) mod shape_update_input_input;

pub(crate) mod shape_alarm_capabilities;

pub(crate) mod shape_alarm_event_actions;

pub(crate) mod shape_alarm_model_summaries;

pub(crate) mod shape_alarm_model_version_summaries;

pub(crate) mod shape_alarm_notification;

pub(crate) mod shape_alarm_rule;

pub(crate) mod shape_analysis_results;

pub(crate) mod shape_detector_model;

pub(crate) mod shape_detector_model_configuration;

pub(crate) mod shape_detector_model_definition;

pub(crate) mod shape_detector_model_summaries;

pub(crate) mod shape_detector_model_version_summaries;

pub(crate) mod shape_input;

pub(crate) mod shape_input_configuration;

pub(crate) mod shape_input_definition;

pub(crate) mod shape_input_identifier;

pub(crate) mod shape_input_summaries;

pub(crate) mod shape_logging_options;

pub(crate) mod shape_routed_resources;

pub(crate) mod shape_tag;

pub(crate) mod shape_tags;

pub(crate) mod shape_acknowledge_flow;

pub(crate) mod shape_alarm_action;

pub(crate) mod shape_alarm_actions;

pub(crate) mod shape_alarm_model_summary;

pub(crate) mod shape_alarm_model_version_summary;

pub(crate) mod shape_analysis_result;

pub(crate) mod shape_attribute;

pub(crate) mod shape_detector_debug_option;

pub(crate) mod shape_detector_debug_options;

pub(crate) mod shape_detector_model_summary;

pub(crate) mod shape_detector_model_version_summary;

pub(crate) mod shape_initialization_configuration;

pub(crate) mod shape_input_summary;

pub(crate) mod shape_iot_events_input_identifier;

pub(crate) mod shape_iot_site_wise_input_identifier;

pub(crate) mod shape_notification_action;

pub(crate) mod shape_notification_actions;

pub(crate) mod shape_routed_resource;

pub(crate) mod shape_simple_rule;

pub(crate) mod shape_state;

pub(crate) mod shape_analysis_result_locations;

pub(crate) mod shape_attributes;

pub(crate) mod shape_dynamo_db_action;

pub(crate) mod shape_dynamo_dbv2_action;

pub(crate) mod shape_email_configuration;

pub(crate) mod shape_firehose_action;

pub(crate) mod shape_iot_events_action;

pub(crate) mod shape_iot_site_wise_action;

pub(crate) mod shape_iot_site_wise_asset_model_property_identifier;

pub(crate) mod shape_iot_topic_publish_action;

pub(crate) mod shape_lambda_action;

pub(crate) mod shape_notification_target_actions;

pub(crate) mod shape_on_enter_lifecycle;

pub(crate) mod shape_on_exit_lifecycle;

pub(crate) mod shape_on_input_lifecycle;

pub(crate) mod shape_sms_configuration;

pub(crate) mod shape_sns_topic_publish_action;

pub(crate) mod shape_sqs_action;

pub(crate) mod shape_states;

pub(crate) mod shape_analysis_result_location;

pub(crate) mod shape_asset_property_value;

pub(crate) mod shape_email_configurations;

pub(crate) mod shape_email_content;

pub(crate) mod shape_email_recipients;

pub(crate) mod shape_event;

pub(crate) mod shape_payload;

pub(crate) mod shape_recipient_detail;

pub(crate) mod shape_sms_configurations;

pub(crate) mod shape_transition_event;

pub(crate) mod shape_action;

pub(crate) mod shape_asset_property_timestamp;

pub(crate) mod shape_asset_property_variant;

pub(crate) mod shape_sso_identity;

pub(crate) mod shape_clear_timer_action;

pub(crate) mod shape_events;

pub(crate) mod shape_recipient_details;

pub(crate) mod shape_reset_timer_action;

pub(crate) mod shape_set_timer_action;

pub(crate) mod shape_set_variable_action;

pub(crate) mod shape_transition_events;

pub(crate) mod shape_actions;
