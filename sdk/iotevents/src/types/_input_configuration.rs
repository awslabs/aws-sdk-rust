// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about the configuration of an input.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct InputConfiguration {
    /// <p>The name of the input.</p>
    pub input_name: ::std::string::String,
    /// <p>A brief description of the input.</p>
    pub input_description: ::std::option::Option<::std::string::String>,
    /// <p>The ARN of the input.</p>
    pub input_arn: ::std::string::String,
    /// <p>The time the input was created.</p>
    pub creation_time: ::aws_smithy_types::DateTime,
    /// <p>The last time the input was updated.</p>
    pub last_update_time: ::aws_smithy_types::DateTime,
    /// <p>The status of the input.</p>
    pub status: crate::types::InputStatus,
}
impl InputConfiguration {
    /// <p>The name of the input.</p>
    pub fn input_name(&self) -> &str {
        use std::ops::Deref;
        self.input_name.deref()
    }
    /// <p>A brief description of the input.</p>
    pub fn input_description(&self) -> ::std::option::Option<&str> {
        self.input_description.as_deref()
    }
    /// <p>The ARN of the input.</p>
    pub fn input_arn(&self) -> &str {
        use std::ops::Deref;
        self.input_arn.deref()
    }
    /// <p>The time the input was created.</p>
    pub fn creation_time(&self) -> &::aws_smithy_types::DateTime {
        &self.creation_time
    }
    /// <p>The last time the input was updated.</p>
    pub fn last_update_time(&self) -> &::aws_smithy_types::DateTime {
        &self.last_update_time
    }
    /// <p>The status of the input.</p>
    pub fn status(&self) -> &crate::types::InputStatus {
        &self.status
    }
}
impl InputConfiguration {
    /// Creates a new builder-style object to manufacture [`InputConfiguration`](crate::types::InputConfiguration).
    pub fn builder() -> crate::types::builders::InputConfigurationBuilder {
        crate::types::builders::InputConfigurationBuilder::default()
    }
}

/// A builder for [`InputConfiguration`](crate::types::InputConfiguration).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct InputConfigurationBuilder {
    pub(crate) input_name: ::std::option::Option<::std::string::String>,
    pub(crate) input_description: ::std::option::Option<::std::string::String>,
    pub(crate) input_arn: ::std::option::Option<::std::string::String>,
    pub(crate) creation_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) last_update_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) status: ::std::option::Option<crate::types::InputStatus>,
}
impl InputConfigurationBuilder {
    /// <p>The name of the input.</p>
    /// This field is required.
    pub fn input_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.input_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the input.</p>
    pub fn set_input_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.input_name = input;
        self
    }
    /// <p>The name of the input.</p>
    pub fn get_input_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.input_name
    }
    /// <p>A brief description of the input.</p>
    pub fn input_description(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.input_description = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>A brief description of the input.</p>
    pub fn set_input_description(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.input_description = input;
        self
    }
    /// <p>A brief description of the input.</p>
    pub fn get_input_description(&self) -> &::std::option::Option<::std::string::String> {
        &self.input_description
    }
    /// <p>The ARN of the input.</p>
    /// This field is required.
    pub fn input_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.input_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ARN of the input.</p>
    pub fn set_input_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.input_arn = input;
        self
    }
    /// <p>The ARN of the input.</p>
    pub fn get_input_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.input_arn
    }
    /// <p>The time the input was created.</p>
    /// This field is required.
    pub fn creation_time(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.creation_time = ::std::option::Option::Some(input);
        self
    }
    /// <p>The time the input was created.</p>
    pub fn set_creation_time(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.creation_time = input;
        self
    }
    /// <p>The time the input was created.</p>
    pub fn get_creation_time(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.creation_time
    }
    /// <p>The last time the input was updated.</p>
    /// This field is required.
    pub fn last_update_time(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.last_update_time = ::std::option::Option::Some(input);
        self
    }
    /// <p>The last time the input was updated.</p>
    pub fn set_last_update_time(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.last_update_time = input;
        self
    }
    /// <p>The last time the input was updated.</p>
    pub fn get_last_update_time(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.last_update_time
    }
    /// <p>The status of the input.</p>
    /// This field is required.
    pub fn status(mut self, input: crate::types::InputStatus) -> Self {
        self.status = ::std::option::Option::Some(input);
        self
    }
    /// <p>The status of the input.</p>
    pub fn set_status(mut self, input: ::std::option::Option<crate::types::InputStatus>) -> Self {
        self.status = input;
        self
    }
    /// <p>The status of the input.</p>
    pub fn get_status(&self) -> &::std::option::Option<crate::types::InputStatus> {
        &self.status
    }
    /// Consumes the builder and constructs a [`InputConfiguration`](crate::types::InputConfiguration).
    /// This method will fail if any of the following fields are not set:
    /// - [`input_name`](crate::types::builders::InputConfigurationBuilder::input_name)
    /// - [`input_arn`](crate::types::builders::InputConfigurationBuilder::input_arn)
    /// - [`creation_time`](crate::types::builders::InputConfigurationBuilder::creation_time)
    /// - [`last_update_time`](crate::types::builders::InputConfigurationBuilder::last_update_time)
    /// - [`status`](crate::types::builders::InputConfigurationBuilder::status)
    pub fn build(self) -> ::std::result::Result<crate::types::InputConfiguration, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::InputConfiguration {
            input_name: self.input_name.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "input_name",
                    "input_name was not specified but it is required when building InputConfiguration",
                )
            })?,
            input_description: self.input_description,
            input_arn: self.input_arn.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "input_arn",
                    "input_arn was not specified but it is required when building InputConfiguration",
                )
            })?,
            creation_time: self.creation_time.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "creation_time",
                    "creation_time was not specified but it is required when building InputConfiguration",
                )
            })?,
            last_update_time: self.last_update_time.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "last_update_time",
                    "last_update_time was not specified but it is required when building InputConfiguration",
                )
            })?,
            status: self.status.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "status",
                    "status was not specified but it is required when building InputConfiguration",
                )
            })?,
        })
    }
}
