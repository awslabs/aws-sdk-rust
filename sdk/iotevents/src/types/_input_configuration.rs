// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about the configuration of an input.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct InputConfiguration {
    /// <p>The name of the input.</p>
    #[doc(hidden)]
    pub input_name: std::option::Option<std::string::String>,
    /// <p>A brief description of the input.</p>
    #[doc(hidden)]
    pub input_description: std::option::Option<std::string::String>,
    /// <p>The ARN of the input.</p>
    #[doc(hidden)]
    pub input_arn: std::option::Option<std::string::String>,
    /// <p>The time the input was created.</p>
    #[doc(hidden)]
    pub creation_time: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>The last time the input was updated.</p>
    #[doc(hidden)]
    pub last_update_time: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>The status of the input.</p>
    #[doc(hidden)]
    pub status: std::option::Option<crate::types::InputStatus>,
}
impl InputConfiguration {
    /// <p>The name of the input.</p>
    pub fn input_name(&self) -> std::option::Option<&str> {
        self.input_name.as_deref()
    }
    /// <p>A brief description of the input.</p>
    pub fn input_description(&self) -> std::option::Option<&str> {
        self.input_description.as_deref()
    }
    /// <p>The ARN of the input.</p>
    pub fn input_arn(&self) -> std::option::Option<&str> {
        self.input_arn.as_deref()
    }
    /// <p>The time the input was created.</p>
    pub fn creation_time(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.creation_time.as_ref()
    }
    /// <p>The last time the input was updated.</p>
    pub fn last_update_time(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.last_update_time.as_ref()
    }
    /// <p>The status of the input.</p>
    pub fn status(&self) -> std::option::Option<&crate::types::InputStatus> {
        self.status.as_ref()
    }
}
impl InputConfiguration {
    /// Creates a new builder-style object to manufacture [`InputConfiguration`](crate::types::InputConfiguration).
    pub fn builder() -> crate::types::builders::InputConfigurationBuilder {
        crate::types::builders::InputConfigurationBuilder::default()
    }
}

/// A builder for [`InputConfiguration`](crate::types::InputConfiguration).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct InputConfigurationBuilder {
    pub(crate) input_name: std::option::Option<std::string::String>,
    pub(crate) input_description: std::option::Option<std::string::String>,
    pub(crate) input_arn: std::option::Option<std::string::String>,
    pub(crate) creation_time: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) last_update_time: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) status: std::option::Option<crate::types::InputStatus>,
}
impl InputConfigurationBuilder {
    /// <p>The name of the input.</p>
    pub fn input_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.input_name = Some(input.into());
        self
    }
    /// <p>The name of the input.</p>
    pub fn set_input_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.input_name = input;
        self
    }
    /// <p>A brief description of the input.</p>
    pub fn input_description(mut self, input: impl Into<std::string::String>) -> Self {
        self.input_description = Some(input.into());
        self
    }
    /// <p>A brief description of the input.</p>
    pub fn set_input_description(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.input_description = input;
        self
    }
    /// <p>The ARN of the input.</p>
    pub fn input_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.input_arn = Some(input.into());
        self
    }
    /// <p>The ARN of the input.</p>
    pub fn set_input_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.input_arn = input;
        self
    }
    /// <p>The time the input was created.</p>
    pub fn creation_time(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.creation_time = Some(input);
        self
    }
    /// <p>The time the input was created.</p>
    pub fn set_creation_time(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.creation_time = input;
        self
    }
    /// <p>The last time the input was updated.</p>
    pub fn last_update_time(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.last_update_time = Some(input);
        self
    }
    /// <p>The last time the input was updated.</p>
    pub fn set_last_update_time(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.last_update_time = input;
        self
    }
    /// <p>The status of the input.</p>
    pub fn status(mut self, input: crate::types::InputStatus) -> Self {
        self.status = Some(input);
        self
    }
    /// <p>The status of the input.</p>
    pub fn set_status(mut self, input: std::option::Option<crate::types::InputStatus>) -> Self {
        self.status = input;
        self
    }
    /// Consumes the builder and constructs a [`InputConfiguration`](crate::types::InputConfiguration).
    pub fn build(self) -> crate::types::InputConfiguration {
        crate::types::InputConfiguration {
            input_name: self.input_name,
            input_description: self.input_description,
            input_arn: self.input_arn,
            creation_time: self.creation_time,
            last_update_time: self.last_update_time,
            status: self.status,
        }
    }
}
