// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Specifies the default alarm state. The configuration applies to all alarms that were created based on this alarm model.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct InitializationConfiguration {
    /// <p>The value must be <code>TRUE</code> or <code>FALSE</code>. If <code>FALSE</code>, all alarm instances created based on the alarm model are activated. The default value is <code>TRUE</code>.</p>
    #[doc(hidden)]
    pub disabled_on_initialization: std::option::Option<bool>,
}
impl InitializationConfiguration {
    /// <p>The value must be <code>TRUE</code> or <code>FALSE</code>. If <code>FALSE</code>, all alarm instances created based on the alarm model are activated. The default value is <code>TRUE</code>.</p>
    pub fn disabled_on_initialization(&self) -> std::option::Option<bool> {
        self.disabled_on_initialization
    }
}
impl InitializationConfiguration {
    /// Creates a new builder-style object to manufacture [`InitializationConfiguration`](crate::types::InitializationConfiguration).
    pub fn builder() -> crate::types::builders::InitializationConfigurationBuilder {
        crate::types::builders::InitializationConfigurationBuilder::default()
    }
}

/// A builder for [`InitializationConfiguration`](crate::types::InitializationConfiguration).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct InitializationConfigurationBuilder {
    pub(crate) disabled_on_initialization: std::option::Option<bool>,
}
impl InitializationConfigurationBuilder {
    /// <p>The value must be <code>TRUE</code> or <code>FALSE</code>. If <code>FALSE</code>, all alarm instances created based on the alarm model are activated. The default value is <code>TRUE</code>.</p>
    pub fn disabled_on_initialization(mut self, input: bool) -> Self {
        self.disabled_on_initialization = Some(input);
        self
    }
    /// <p>The value must be <code>TRUE</code> or <code>FALSE</code>. If <code>FALSE</code>, all alarm instances created based on the alarm model are activated. The default value is <code>TRUE</code>.</p>
    pub fn set_disabled_on_initialization(mut self, input: std::option::Option<bool>) -> Self {
        self.disabled_on_initialization = input;
        self
    }
    /// Consumes the builder and constructs a [`InitializationConfiguration`](crate::types::InitializationConfiguration).
    pub fn build(self) -> crate::types::InitializationConfiguration {
        crate::types::InitializationConfiguration {
            disabled_on_initialization: self.disabled_on_initialization,
        }
    }
}
