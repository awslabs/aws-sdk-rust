// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p> The identifier of the input routed to AWS IoT Events. </p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct IotEventsInputIdentifier {
    /// <p> The name of the input routed to AWS IoT Events. </p>
    pub input_name: ::std::string::String,
}
impl IotEventsInputIdentifier {
    /// <p> The name of the input routed to AWS IoT Events. </p>
    pub fn input_name(&self) -> &str {
        use std::ops::Deref;
        self.input_name.deref()
    }
}
impl IotEventsInputIdentifier {
    /// Creates a new builder-style object to manufacture [`IotEventsInputIdentifier`](crate::types::IotEventsInputIdentifier).
    pub fn builder() -> crate::types::builders::IotEventsInputIdentifierBuilder {
        crate::types::builders::IotEventsInputIdentifierBuilder::default()
    }
}

/// A builder for [`IotEventsInputIdentifier`](crate::types::IotEventsInputIdentifier).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct IotEventsInputIdentifierBuilder {
    pub(crate) input_name: ::std::option::Option<::std::string::String>,
}
impl IotEventsInputIdentifierBuilder {
    /// <p> The name of the input routed to AWS IoT Events. </p>
    /// This field is required.
    pub fn input_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.input_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p> The name of the input routed to AWS IoT Events. </p>
    pub fn set_input_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.input_name = input;
        self
    }
    /// <p> The name of the input routed to AWS IoT Events. </p>
    pub fn get_input_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.input_name
    }
    /// Consumes the builder and constructs a [`IotEventsInputIdentifier`](crate::types::IotEventsInputIdentifier).
    /// This method will fail if any of the following fields are not set:
    /// - [`input_name`](crate::types::builders::IotEventsInputIdentifierBuilder::input_name)
    pub fn build(self) -> ::std::result::Result<crate::types::IotEventsInputIdentifier, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::IotEventsInputIdentifier {
            input_name: self.input_name.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "input_name",
                    "input_name was not specified but it is required when building IotEventsInputIdentifier",
                )
            })?,
        })
    }
}
