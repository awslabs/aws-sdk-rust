// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information needed to clear the timer.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ClearTimerAction {
    /// <p>The name of the timer to clear.</p>
    #[doc(hidden)]
    pub timer_name: std::option::Option<std::string::String>,
}
impl ClearTimerAction {
    /// <p>The name of the timer to clear.</p>
    pub fn timer_name(&self) -> std::option::Option<&str> {
        self.timer_name.as_deref()
    }
}
impl ClearTimerAction {
    /// Creates a new builder-style object to manufacture [`ClearTimerAction`](crate::types::ClearTimerAction).
    pub fn builder() -> crate::types::builders::ClearTimerActionBuilder {
        crate::types::builders::ClearTimerActionBuilder::default()
    }
}

/// A builder for [`ClearTimerAction`](crate::types::ClearTimerAction).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ClearTimerActionBuilder {
    pub(crate) timer_name: std::option::Option<std::string::String>,
}
impl ClearTimerActionBuilder {
    /// <p>The name of the timer to clear.</p>
    pub fn timer_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.timer_name = Some(input.into());
        self
    }
    /// <p>The name of the timer to clear.</p>
    pub fn set_timer_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.timer_name = input;
        self
    }
    /// Consumes the builder and constructs a [`ClearTimerAction`](crate::types::ClearTimerAction).
    pub fn build(self) -> crate::types::ClearTimerAction {
        crate::types::ClearTimerAction {
            timer_name: self.timer_name,
        }
    }
}
