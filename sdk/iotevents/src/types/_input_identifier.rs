// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p> The identifer of the input. </p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct InputIdentifier {
    /// <p> The identifier of the input routed to AWS IoT Events. </p>
    #[doc(hidden)]
    pub iot_events_input_identifier: std::option::Option<crate::types::IotEventsInputIdentifier>,
    /// <p> The identifer of the input routed from AWS IoT SiteWise. </p>
    #[doc(hidden)]
    pub iot_site_wise_input_identifier:
        std::option::Option<crate::types::IotSiteWiseInputIdentifier>,
}
impl InputIdentifier {
    /// <p> The identifier of the input routed to AWS IoT Events. </p>
    pub fn iot_events_input_identifier(
        &self,
    ) -> std::option::Option<&crate::types::IotEventsInputIdentifier> {
        self.iot_events_input_identifier.as_ref()
    }
    /// <p> The identifer of the input routed from AWS IoT SiteWise. </p>
    pub fn iot_site_wise_input_identifier(
        &self,
    ) -> std::option::Option<&crate::types::IotSiteWiseInputIdentifier> {
        self.iot_site_wise_input_identifier.as_ref()
    }
}
impl InputIdentifier {
    /// Creates a new builder-style object to manufacture [`InputIdentifier`](crate::types::InputIdentifier).
    pub fn builder() -> crate::types::builders::InputIdentifierBuilder {
        crate::types::builders::InputIdentifierBuilder::default()
    }
}

/// A builder for [`InputIdentifier`](crate::types::InputIdentifier).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct InputIdentifierBuilder {
    pub(crate) iot_events_input_identifier:
        std::option::Option<crate::types::IotEventsInputIdentifier>,
    pub(crate) iot_site_wise_input_identifier:
        std::option::Option<crate::types::IotSiteWiseInputIdentifier>,
}
impl InputIdentifierBuilder {
    /// <p> The identifier of the input routed to AWS IoT Events. </p>
    pub fn iot_events_input_identifier(
        mut self,
        input: crate::types::IotEventsInputIdentifier,
    ) -> Self {
        self.iot_events_input_identifier = Some(input);
        self
    }
    /// <p> The identifier of the input routed to AWS IoT Events. </p>
    pub fn set_iot_events_input_identifier(
        mut self,
        input: std::option::Option<crate::types::IotEventsInputIdentifier>,
    ) -> Self {
        self.iot_events_input_identifier = input;
        self
    }
    /// <p> The identifer of the input routed from AWS IoT SiteWise. </p>
    pub fn iot_site_wise_input_identifier(
        mut self,
        input: crate::types::IotSiteWiseInputIdentifier,
    ) -> Self {
        self.iot_site_wise_input_identifier = Some(input);
        self
    }
    /// <p> The identifer of the input routed from AWS IoT SiteWise. </p>
    pub fn set_iot_site_wise_input_identifier(
        mut self,
        input: std::option::Option<crate::types::IotSiteWiseInputIdentifier>,
    ) -> Self {
        self.iot_site_wise_input_identifier = input;
        self
    }
    /// Consumes the builder and constructs a [`InputIdentifier`](crate::types::InputIdentifier).
    pub fn build(self) -> crate::types::InputIdentifier {
        crate::types::InputIdentifier {
            iot_events_input_identifier: self.iot_events_input_identifier,
            iot_site_wise_input_identifier: self.iot_site_wise_input_identifier,
        }
    }
}
