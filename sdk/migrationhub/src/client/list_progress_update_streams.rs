// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListProgressUpdateStreams`](crate::client::fluent_builders::ListProgressUpdateStreams) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListProgressUpdateStreams::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListProgressUpdateStreams::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListProgressUpdateStreams::set_next_token): <p>If a <code>NextToken</code> was returned by a previous call, there are more results available. To retrieve the next page of results, make the call again using the returned token in <code>NextToken</code>.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListProgressUpdateStreams::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListProgressUpdateStreams::set_max_results): <p>Filter to limit the maximum number of results to list per page.</p>
    /// - On success, responds with [`ListProgressUpdateStreamsOutput`](crate::output::ListProgressUpdateStreamsOutput) with field(s):
    ///   - [`progress_update_stream_summary_list(Option<Vec<ProgressUpdateStreamSummary>>)`](crate::output::ListProgressUpdateStreamsOutput::progress_update_stream_summary_list): <p>List of progress update streams up to the max number of results passed in the input.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListProgressUpdateStreamsOutput::next_token): <p>If there are more streams created than the max result, return the next token to be passed to the next call as a bookmark of where to start from.</p>
    /// - On failure, responds with [`SdkError<ListProgressUpdateStreamsError>`](crate::error::ListProgressUpdateStreamsError)
    pub fn list_progress_update_streams(
        &self,
    ) -> crate::client::fluent_builders::ListProgressUpdateStreams {
        crate::client::fluent_builders::ListProgressUpdateStreams::new(self.handle.clone())
    }
}
