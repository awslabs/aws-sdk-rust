// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) fn reflens_list_application_states_output_next_token(
    input: &crate::operation::list_application_states::ListApplicationStatesOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_created_artifacts_output_next_token(
    input: &crate::operation::list_created_artifacts::ListCreatedArtifactsOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_discovered_resources_output_next_token(
    input: &crate::operation::list_discovered_resources::ListDiscoveredResourcesOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_migration_tasks_output_next_token(
    input: &crate::operation::list_migration_tasks::ListMigrationTasksOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn reflens_list_progress_update_streams_output_next_token(
    input: &crate::operation::list_progress_update_streams::ListProgressUpdateStreamsOutput,
) -> std::option::Option<&std::string::String> {
    let input = match &input.next_token {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn lens_list_application_states_output_application_state_list(
    input: crate::operation::list_application_states::ListApplicationStatesOutput,
) -> std::option::Option<std::vec::Vec<crate::types::ApplicationState>> {
    let input = match input.application_state_list {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn lens_list_created_artifacts_output_created_artifact_list(
    input: crate::operation::list_created_artifacts::ListCreatedArtifactsOutput,
) -> std::option::Option<std::vec::Vec<crate::types::CreatedArtifact>> {
    let input = match input.created_artifact_list {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn lens_list_discovered_resources_output_discovered_resource_list(
    input: crate::operation::list_discovered_resources::ListDiscoveredResourcesOutput,
) -> std::option::Option<std::vec::Vec<crate::types::DiscoveredResource>> {
    let input = match input.discovered_resource_list {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn lens_list_migration_tasks_output_migration_task_summary_list(
    input: crate::operation::list_migration_tasks::ListMigrationTasksOutput,
) -> std::option::Option<std::vec::Vec<crate::types::MigrationTaskSummary>> {
    let input = match input.migration_task_summary_list {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}

pub(crate) fn lens_list_progress_update_streams_output_progress_update_stream_summary_list(
    input: crate::operation::list_progress_update_streams::ListProgressUpdateStreamsOutput,
) -> std::option::Option<std::vec::Vec<crate::types::ProgressUpdateStreamSummary>> {
    let input = match input.progress_update_stream_summary_list {
        None => return None,
        Some(t) => t,
    };
    Some(input)
}
