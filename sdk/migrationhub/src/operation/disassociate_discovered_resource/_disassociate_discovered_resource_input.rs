// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DisassociateDiscoveredResourceInput {
    /// <p>The name of the ProgressUpdateStream.</p>
    #[doc(hidden)]
    pub progress_update_stream: std::option::Option<std::string::String>,
    /// <p>The identifier given to the MigrationTask. <i>Do not store personal data in this field.</i> </p>
    #[doc(hidden)]
    pub migration_task_name: std::option::Option<std::string::String>,
    /// <p>ConfigurationId of the Application Discovery Service resource to be disassociated.</p>
    #[doc(hidden)]
    pub configuration_id: std::option::Option<std::string::String>,
    /// <p>Optional boolean flag to indicate whether any effect should take place. Used to test if the caller has permission to make the call.</p>
    #[doc(hidden)]
    pub dry_run: bool,
}
impl DisassociateDiscoveredResourceInput {
    /// <p>The name of the ProgressUpdateStream.</p>
    pub fn progress_update_stream(&self) -> std::option::Option<&str> {
        self.progress_update_stream.as_deref()
    }
    /// <p>The identifier given to the MigrationTask. <i>Do not store personal data in this field.</i> </p>
    pub fn migration_task_name(&self) -> std::option::Option<&str> {
        self.migration_task_name.as_deref()
    }
    /// <p>ConfigurationId of the Application Discovery Service resource to be disassociated.</p>
    pub fn configuration_id(&self) -> std::option::Option<&str> {
        self.configuration_id.as_deref()
    }
    /// <p>Optional boolean flag to indicate whether any effect should take place. Used to test if the caller has permission to make the call.</p>
    pub fn dry_run(&self) -> bool {
        self.dry_run
    }
}
impl DisassociateDiscoveredResourceInput {
    /// Creates a new builder-style object to manufacture [`DisassociateDiscoveredResourceInput`](crate::operation::disassociate_discovered_resource::DisassociateDiscoveredResourceInput).
    pub fn builder() -> crate::operation::disassociate_discovered_resource::builders::DisassociateDiscoveredResourceInputBuilder{
        crate::operation::disassociate_discovered_resource::builders::DisassociateDiscoveredResourceInputBuilder::default()
    }
}

/// A builder for [`DisassociateDiscoveredResourceInput`](crate::operation::disassociate_discovered_resource::DisassociateDiscoveredResourceInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DisassociateDiscoveredResourceInputBuilder {
    pub(crate) progress_update_stream: std::option::Option<std::string::String>,
    pub(crate) migration_task_name: std::option::Option<std::string::String>,
    pub(crate) configuration_id: std::option::Option<std::string::String>,
    pub(crate) dry_run: std::option::Option<bool>,
}
impl DisassociateDiscoveredResourceInputBuilder {
    /// <p>The name of the ProgressUpdateStream.</p>
    pub fn progress_update_stream(mut self, input: impl Into<std::string::String>) -> Self {
        self.progress_update_stream = Some(input.into());
        self
    }
    /// <p>The name of the ProgressUpdateStream.</p>
    pub fn set_progress_update_stream(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.progress_update_stream = input;
        self
    }
    /// <p>The identifier given to the MigrationTask. <i>Do not store personal data in this field.</i> </p>
    pub fn migration_task_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.migration_task_name = Some(input.into());
        self
    }
    /// <p>The identifier given to the MigrationTask. <i>Do not store personal data in this field.</i> </p>
    pub fn set_migration_task_name(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.migration_task_name = input;
        self
    }
    /// <p>ConfigurationId of the Application Discovery Service resource to be disassociated.</p>
    pub fn configuration_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.configuration_id = Some(input.into());
        self
    }
    /// <p>ConfigurationId of the Application Discovery Service resource to be disassociated.</p>
    pub fn set_configuration_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.configuration_id = input;
        self
    }
    /// <p>Optional boolean flag to indicate whether any effect should take place. Used to test if the caller has permission to make the call.</p>
    pub fn dry_run(mut self, input: bool) -> Self {
        self.dry_run = Some(input);
        self
    }
    /// <p>Optional boolean flag to indicate whether any effect should take place. Used to test if the caller has permission to make the call.</p>
    pub fn set_dry_run(mut self, input: std::option::Option<bool>) -> Self {
        self.dry_run = input;
        self
    }
    /// Consumes the builder and constructs a [`DisassociateDiscoveredResourceInput`](crate::operation::disassociate_discovered_resource::DisassociateDiscoveredResourceInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::disassociate_discovered_resource::DisassociateDiscoveredResourceInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::disassociate_discovered_resource::DisassociateDiscoveredResourceInput {
                progress_update_stream: self.progress_update_stream
                ,
                migration_task_name: self.migration_task_name
                ,
                configuration_id: self.configuration_id
                ,
                dry_run: self.dry_run
                    .unwrap_or_default()
                ,
            }
        )
    }
}
