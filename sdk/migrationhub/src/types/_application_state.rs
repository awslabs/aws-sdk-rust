// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The state of an application discovered through Migration Hub import, the AWS Agentless Discovery Connector, or the AWS Application Discovery Agent.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ApplicationState {
    /// <p>The configurationId from the Application Discovery Service that uniquely identifies an application.</p>
    #[doc(hidden)]
    pub application_id: std::option::Option<std::string::String>,
    /// <p>The current status of an application.</p>
    #[doc(hidden)]
    pub application_status: std::option::Option<crate::types::ApplicationStatus>,
    /// <p>The timestamp when the application status was last updated.</p>
    #[doc(hidden)]
    pub last_updated_time: std::option::Option<aws_smithy_types::DateTime>,
}
impl ApplicationState {
    /// <p>The configurationId from the Application Discovery Service that uniquely identifies an application.</p>
    pub fn application_id(&self) -> std::option::Option<&str> {
        self.application_id.as_deref()
    }
    /// <p>The current status of an application.</p>
    pub fn application_status(&self) -> std::option::Option<&crate::types::ApplicationStatus> {
        self.application_status.as_ref()
    }
    /// <p>The timestamp when the application status was last updated.</p>
    pub fn last_updated_time(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.last_updated_time.as_ref()
    }
}
impl ApplicationState {
    /// Creates a new builder-style object to manufacture [`ApplicationState`](crate::types::ApplicationState).
    pub fn builder() -> crate::types::builders::ApplicationStateBuilder {
        crate::types::builders::ApplicationStateBuilder::default()
    }
}

/// A builder for [`ApplicationState`](crate::types::ApplicationState).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ApplicationStateBuilder {
    pub(crate) application_id: std::option::Option<std::string::String>,
    pub(crate) application_status: std::option::Option<crate::types::ApplicationStatus>,
    pub(crate) last_updated_time: std::option::Option<aws_smithy_types::DateTime>,
}
impl ApplicationStateBuilder {
    /// <p>The configurationId from the Application Discovery Service that uniquely identifies an application.</p>
    pub fn application_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.application_id = Some(input.into());
        self
    }
    /// <p>The configurationId from the Application Discovery Service that uniquely identifies an application.</p>
    pub fn set_application_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.application_id = input;
        self
    }
    /// <p>The current status of an application.</p>
    pub fn application_status(mut self, input: crate::types::ApplicationStatus) -> Self {
        self.application_status = Some(input);
        self
    }
    /// <p>The current status of an application.</p>
    pub fn set_application_status(
        mut self,
        input: std::option::Option<crate::types::ApplicationStatus>,
    ) -> Self {
        self.application_status = input;
        self
    }
    /// <p>The timestamp when the application status was last updated.</p>
    pub fn last_updated_time(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.last_updated_time = Some(input);
        self
    }
    /// <p>The timestamp when the application status was last updated.</p>
    pub fn set_last_updated_time(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.last_updated_time = input;
        self
    }
    /// Consumes the builder and constructs a [`ApplicationState`](crate::types::ApplicationState).
    pub fn build(self) -> crate::types::ApplicationState {
        crate::types::ApplicationState {
            application_id: self.application_id,
            application_status: self.application_status,
            last_updated_time: self.last_updated_time,
        }
    }
}
