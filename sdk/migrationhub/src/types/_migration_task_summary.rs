// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>MigrationTaskSummary includes <code>MigrationTaskName</code>, <code>ProgressPercent</code>, <code>ProgressUpdateStream</code>, <code>Status</code>, and <code>UpdateDateTime</code> for each task.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct MigrationTaskSummary {
    /// <p>An AWS resource used for access control. It should uniquely identify the migration tool as it is used for all updates made by the tool.</p>
    #[doc(hidden)]
    pub progress_update_stream: std::option::Option<std::string::String>,
    /// <p>Unique identifier that references the migration task. <i>Do not store personal data in this field.</i> </p>
    #[doc(hidden)]
    pub migration_task_name: std::option::Option<std::string::String>,
    /// <p>Status of the task.</p>
    #[doc(hidden)]
    pub status: std::option::Option<crate::types::Status>,
    /// <p>Indication of the percentage completion of the task.</p>
    #[doc(hidden)]
    pub progress_percent: std::option::Option<i32>,
    /// <p>Detail information of what is being done within the overall status state.</p>
    #[doc(hidden)]
    pub status_detail: std::option::Option<std::string::String>,
    /// <p>The timestamp when the task was gathered.</p>
    #[doc(hidden)]
    pub update_date_time: std::option::Option<aws_smithy_types::DateTime>,
}
impl MigrationTaskSummary {
    /// <p>An AWS resource used for access control. It should uniquely identify the migration tool as it is used for all updates made by the tool.</p>
    pub fn progress_update_stream(&self) -> std::option::Option<&str> {
        self.progress_update_stream.as_deref()
    }
    /// <p>Unique identifier that references the migration task. <i>Do not store personal data in this field.</i> </p>
    pub fn migration_task_name(&self) -> std::option::Option<&str> {
        self.migration_task_name.as_deref()
    }
    /// <p>Status of the task.</p>
    pub fn status(&self) -> std::option::Option<&crate::types::Status> {
        self.status.as_ref()
    }
    /// <p>Indication of the percentage completion of the task.</p>
    pub fn progress_percent(&self) -> std::option::Option<i32> {
        self.progress_percent
    }
    /// <p>Detail information of what is being done within the overall status state.</p>
    pub fn status_detail(&self) -> std::option::Option<&str> {
        self.status_detail.as_deref()
    }
    /// <p>The timestamp when the task was gathered.</p>
    pub fn update_date_time(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.update_date_time.as_ref()
    }
}
impl MigrationTaskSummary {
    /// Creates a new builder-style object to manufacture [`MigrationTaskSummary`](crate::types::MigrationTaskSummary).
    pub fn builder() -> crate::types::builders::MigrationTaskSummaryBuilder {
        crate::types::builders::MigrationTaskSummaryBuilder::default()
    }
}

/// A builder for [`MigrationTaskSummary`](crate::types::MigrationTaskSummary).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct MigrationTaskSummaryBuilder {
    pub(crate) progress_update_stream: std::option::Option<std::string::String>,
    pub(crate) migration_task_name: std::option::Option<std::string::String>,
    pub(crate) status: std::option::Option<crate::types::Status>,
    pub(crate) progress_percent: std::option::Option<i32>,
    pub(crate) status_detail: std::option::Option<std::string::String>,
    pub(crate) update_date_time: std::option::Option<aws_smithy_types::DateTime>,
}
impl MigrationTaskSummaryBuilder {
    /// <p>An AWS resource used for access control. It should uniquely identify the migration tool as it is used for all updates made by the tool.</p>
    pub fn progress_update_stream(mut self, input: impl Into<std::string::String>) -> Self {
        self.progress_update_stream = Some(input.into());
        self
    }
    /// <p>An AWS resource used for access control. It should uniquely identify the migration tool as it is used for all updates made by the tool.</p>
    pub fn set_progress_update_stream(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.progress_update_stream = input;
        self
    }
    /// <p>Unique identifier that references the migration task. <i>Do not store personal data in this field.</i> </p>
    pub fn migration_task_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.migration_task_name = Some(input.into());
        self
    }
    /// <p>Unique identifier that references the migration task. <i>Do not store personal data in this field.</i> </p>
    pub fn set_migration_task_name(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.migration_task_name = input;
        self
    }
    /// <p>Status of the task.</p>
    pub fn status(mut self, input: crate::types::Status) -> Self {
        self.status = Some(input);
        self
    }
    /// <p>Status of the task.</p>
    pub fn set_status(mut self, input: std::option::Option<crate::types::Status>) -> Self {
        self.status = input;
        self
    }
    /// <p>Indication of the percentage completion of the task.</p>
    pub fn progress_percent(mut self, input: i32) -> Self {
        self.progress_percent = Some(input);
        self
    }
    /// <p>Indication of the percentage completion of the task.</p>
    pub fn set_progress_percent(mut self, input: std::option::Option<i32>) -> Self {
        self.progress_percent = input;
        self
    }
    /// <p>Detail information of what is being done within the overall status state.</p>
    pub fn status_detail(mut self, input: impl Into<std::string::String>) -> Self {
        self.status_detail = Some(input.into());
        self
    }
    /// <p>Detail information of what is being done within the overall status state.</p>
    pub fn set_status_detail(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.status_detail = input;
        self
    }
    /// <p>The timestamp when the task was gathered.</p>
    pub fn update_date_time(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.update_date_time = Some(input);
        self
    }
    /// <p>The timestamp when the task was gathered.</p>
    pub fn set_update_date_time(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.update_date_time = input;
        self
    }
    /// Consumes the builder and constructs a [`MigrationTaskSummary`](crate::types::MigrationTaskSummary).
    pub fn build(self) -> crate::types::MigrationTaskSummary {
        crate::types::MigrationTaskSummary {
            progress_update_stream: self.progress_update_stream,
            migration_task_name: self.migration_task_name,
            status: self.status,
            progress_percent: self.progress_percent,
            status_detail: self.status_detail,
            update_date_time: self.update_date_time,
        }
    }
}
