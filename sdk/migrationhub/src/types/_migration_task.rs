// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Represents a migration task in a migration tool.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct MigrationTask {
    /// <p>A name that identifies the vendor of the migration tool being used.</p>
    #[doc(hidden)]
    pub progress_update_stream: std::option::Option<std::string::String>,
    /// <p>Unique identifier that references the migration task. <i>Do not store personal data in this field.</i> </p>
    #[doc(hidden)]
    pub migration_task_name: std::option::Option<std::string::String>,
    /// <p>Task object encapsulating task information.</p>
    #[doc(hidden)]
    pub task: std::option::Option<crate::types::Task>,
    /// <p>The timestamp when the task was gathered.</p>
    #[doc(hidden)]
    pub update_date_time: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>Information about the resource that is being migrated. This data will be used to map the task to a resource in the Application Discovery Service repository.</p>
    #[doc(hidden)]
    pub resource_attribute_list:
        std::option::Option<std::vec::Vec<crate::types::ResourceAttribute>>,
}
impl MigrationTask {
    /// <p>A name that identifies the vendor of the migration tool being used.</p>
    pub fn progress_update_stream(&self) -> std::option::Option<&str> {
        self.progress_update_stream.as_deref()
    }
    /// <p>Unique identifier that references the migration task. <i>Do not store personal data in this field.</i> </p>
    pub fn migration_task_name(&self) -> std::option::Option<&str> {
        self.migration_task_name.as_deref()
    }
    /// <p>Task object encapsulating task information.</p>
    pub fn task(&self) -> std::option::Option<&crate::types::Task> {
        self.task.as_ref()
    }
    /// <p>The timestamp when the task was gathered.</p>
    pub fn update_date_time(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.update_date_time.as_ref()
    }
    /// <p>Information about the resource that is being migrated. This data will be used to map the task to a resource in the Application Discovery Service repository.</p>
    pub fn resource_attribute_list(
        &self,
    ) -> std::option::Option<&[crate::types::ResourceAttribute]> {
        self.resource_attribute_list.as_deref()
    }
}
impl MigrationTask {
    /// Creates a new builder-style object to manufacture [`MigrationTask`](crate::types::MigrationTask).
    pub fn builder() -> crate::types::builders::MigrationTaskBuilder {
        crate::types::builders::MigrationTaskBuilder::default()
    }
}

/// A builder for [`MigrationTask`](crate::types::MigrationTask).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct MigrationTaskBuilder {
    pub(crate) progress_update_stream: std::option::Option<std::string::String>,
    pub(crate) migration_task_name: std::option::Option<std::string::String>,
    pub(crate) task: std::option::Option<crate::types::Task>,
    pub(crate) update_date_time: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) resource_attribute_list:
        std::option::Option<std::vec::Vec<crate::types::ResourceAttribute>>,
}
impl MigrationTaskBuilder {
    /// <p>A name that identifies the vendor of the migration tool being used.</p>
    pub fn progress_update_stream(mut self, input: impl Into<std::string::String>) -> Self {
        self.progress_update_stream = Some(input.into());
        self
    }
    /// <p>A name that identifies the vendor of the migration tool being used.</p>
    pub fn set_progress_update_stream(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.progress_update_stream = input;
        self
    }
    /// <p>Unique identifier that references the migration task. <i>Do not store personal data in this field.</i> </p>
    pub fn migration_task_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.migration_task_name = Some(input.into());
        self
    }
    /// <p>Unique identifier that references the migration task. <i>Do not store personal data in this field.</i> </p>
    pub fn set_migration_task_name(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.migration_task_name = input;
        self
    }
    /// <p>Task object encapsulating task information.</p>
    pub fn task(mut self, input: crate::types::Task) -> Self {
        self.task = Some(input);
        self
    }
    /// <p>Task object encapsulating task information.</p>
    pub fn set_task(mut self, input: std::option::Option<crate::types::Task>) -> Self {
        self.task = input;
        self
    }
    /// <p>The timestamp when the task was gathered.</p>
    pub fn update_date_time(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.update_date_time = Some(input);
        self
    }
    /// <p>The timestamp when the task was gathered.</p>
    pub fn set_update_date_time(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.update_date_time = input;
        self
    }
    /// Appends an item to `resource_attribute_list`.
    ///
    /// To override the contents of this collection use [`set_resource_attribute_list`](Self::set_resource_attribute_list).
    ///
    /// <p>Information about the resource that is being migrated. This data will be used to map the task to a resource in the Application Discovery Service repository.</p>
    pub fn resource_attribute_list(mut self, input: crate::types::ResourceAttribute) -> Self {
        let mut v = self.resource_attribute_list.unwrap_or_default();
        v.push(input);
        self.resource_attribute_list = Some(v);
        self
    }
    /// <p>Information about the resource that is being migrated. This data will be used to map the task to a resource in the Application Discovery Service repository.</p>
    pub fn set_resource_attribute_list(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::ResourceAttribute>>,
    ) -> Self {
        self.resource_attribute_list = input;
        self
    }
    /// Consumes the builder and constructs a [`MigrationTask`](crate::types::MigrationTask).
    pub fn build(self) -> crate::types::MigrationTask {
        crate::types::MigrationTask {
            progress_update_stream: self.progress_update_stream,
            migration_task_name: self.migration_task_name,
            task: self.task,
            update_date_time: self.update_date_time,
            resource_attribute_list: self.resource_attribute_list,
        }
    }
}
