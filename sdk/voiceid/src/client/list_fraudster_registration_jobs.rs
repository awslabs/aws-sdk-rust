// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListFraudsterRegistrationJobs`](crate::operation::list_fraudster_registration_jobs::builders::ListFraudsterRegistrationJobsFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::list_fraudster_registration_jobs::builders::ListFraudsterRegistrationJobsFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`domain_id(impl Into<String>)`](crate::operation::list_fraudster_registration_jobs::builders::ListFraudsterRegistrationJobsFluentBuilder::domain_id) / [`set_domain_id(Option<String>)`](crate::operation::list_fraudster_registration_jobs::builders::ListFraudsterRegistrationJobsFluentBuilder::set_domain_id):<br>required: **true**<br><p>The identifier of the domain that contains the fraudster registration Jobs.</p><br>
    ///   - [`job_status(FraudsterRegistrationJobStatus)`](crate::operation::list_fraudster_registration_jobs::builders::ListFraudsterRegistrationJobsFluentBuilder::job_status) / [`set_job_status(Option<FraudsterRegistrationJobStatus>)`](crate::operation::list_fraudster_registration_jobs::builders::ListFraudsterRegistrationJobsFluentBuilder::set_job_status):<br>required: **false**<br><p>Provides the status of your fraudster registration job.</p><br>
    ///   - [`max_results(i32)`](crate::operation::list_fraudster_registration_jobs::builders::ListFraudsterRegistrationJobsFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::list_fraudster_registration_jobs::builders::ListFraudsterRegistrationJobsFluentBuilder::set_max_results):<br>required: **false**<br><p>The maximum number of results that are returned per call. You can use <code>NextToken</code> to obtain more pages of results. The default is 100; the maximum allowed page size is also 100. </p><br>
    ///   - [`next_token(impl Into<String>)`](crate::operation::list_fraudster_registration_jobs::builders::ListFraudsterRegistrationJobsFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::list_fraudster_registration_jobs::builders::ListFraudsterRegistrationJobsFluentBuilder::set_next_token):<br>required: **false**<br><p>If <code>NextToken</code> is returned, there are more results available. The value of <code>NextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. Each pagination token expires after 24 hours.</p><br>
    /// - On success, responds with [`ListFraudsterRegistrationJobsOutput`](crate::operation::list_fraudster_registration_jobs::ListFraudsterRegistrationJobsOutput) with field(s):
    ///   - [`job_summaries(Option<Vec::<FraudsterRegistrationJobSummary>>)`](crate::operation::list_fraudster_registration_jobs::ListFraudsterRegistrationJobsOutput::job_summaries): <p>A list containing details about each specified fraudster registration job.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::list_fraudster_registration_jobs::ListFraudsterRegistrationJobsOutput::next_token): <p>If <code>NextToken</code> is returned, there are more results available. The value of <code>NextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. Each pagination token expires after 24 hours.</p>
    /// - On failure, responds with [`SdkError<ListFraudsterRegistrationJobsError>`](crate::operation::list_fraudster_registration_jobs::ListFraudsterRegistrationJobsError)
    pub fn list_fraudster_registration_jobs(
        &self,
    ) -> crate::operation::list_fraudster_registration_jobs::builders::ListFraudsterRegistrationJobsFluentBuilder {
        crate::operation::list_fraudster_registration_jobs::builders::ListFraudsterRegistrationJobsFluentBuilder::new(self.handle.clone())
    }
}
