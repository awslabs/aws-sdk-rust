// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains all the information about a fraudster.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct Fraudster {
    /// <p>The identifier for the domain containing the fraudster.</p>
    #[doc(hidden)]
    pub domain_id: std::option::Option<std::string::String>,
    /// <p>The service-generated identifier for the fraudster.</p>
    #[doc(hidden)]
    pub generated_fraudster_id: std::option::Option<std::string::String>,
    /// <p>The timestamp when Voice ID identified the fraudster.</p>
    #[doc(hidden)]
    pub created_at: std::option::Option<aws_smithy_types::DateTime>,
}
impl Fraudster {
    /// <p>The identifier for the domain containing the fraudster.</p>
    pub fn domain_id(&self) -> std::option::Option<&str> {
        self.domain_id.as_deref()
    }
    /// <p>The service-generated identifier for the fraudster.</p>
    pub fn generated_fraudster_id(&self) -> std::option::Option<&str> {
        self.generated_fraudster_id.as_deref()
    }
    /// <p>The timestamp when Voice ID identified the fraudster.</p>
    pub fn created_at(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.created_at.as_ref()
    }
}
impl Fraudster {
    /// Creates a new builder-style object to manufacture [`Fraudster`](crate::types::Fraudster).
    pub fn builder() -> crate::types::builders::FraudsterBuilder {
        crate::types::builders::FraudsterBuilder::default()
    }
}

/// A builder for [`Fraudster`](crate::types::Fraudster).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct FraudsterBuilder {
    pub(crate) domain_id: std::option::Option<std::string::String>,
    pub(crate) generated_fraudster_id: std::option::Option<std::string::String>,
    pub(crate) created_at: std::option::Option<aws_smithy_types::DateTime>,
}
impl FraudsterBuilder {
    /// <p>The identifier for the domain containing the fraudster.</p>
    pub fn domain_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.domain_id = Some(input.into());
        self
    }
    /// <p>The identifier for the domain containing the fraudster.</p>
    pub fn set_domain_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.domain_id = input;
        self
    }
    /// <p>The service-generated identifier for the fraudster.</p>
    pub fn generated_fraudster_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.generated_fraudster_id = Some(input.into());
        self
    }
    /// <p>The service-generated identifier for the fraudster.</p>
    pub fn set_generated_fraudster_id(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.generated_fraudster_id = input;
        self
    }
    /// <p>The timestamp when Voice ID identified the fraudster.</p>
    pub fn created_at(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.created_at = Some(input);
        self
    }
    /// <p>The timestamp when Voice ID identified the fraudster.</p>
    pub fn set_created_at(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.created_at = input;
        self
    }
    /// Consumes the builder and constructs a [`Fraudster`](crate::types::Fraudster).
    pub fn build(self) -> crate::types::Fraudster {
        crate::types::Fraudster {
            domain_id: self.domain_id,
            generated_fraudster_id: self.generated_fraudster_id,
            created_at: self.created_at,
        }
    }
}
