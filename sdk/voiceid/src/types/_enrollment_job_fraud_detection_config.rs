// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The configuration defining the action to take when a speaker is flagged by the fraud detection system during a batch speaker enrollment job, and the risk threshold to use for identification.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct EnrollmentJobFraudDetectionConfig {
    /// <p>The action to take when the given speaker is flagged by the fraud detection system. The default value is <code>FAIL</code>, which fails the speaker enrollment. Changing this value to <code>IGNORE</code> results in the speaker being enrolled even if they are flagged by the fraud detection system.</p>
    #[doc(hidden)]
    pub fraud_detection_action: std::option::Option<crate::types::FraudDetectionAction>,
    /// <p>Threshold value for determining whether the speaker is a high risk to be fraudulent. If the detected risk score calculated by Voice ID is greater than or equal to the threshold, the speaker is considered a fraudster.</p>
    #[doc(hidden)]
    pub risk_threshold: std::option::Option<i32>,
}
impl EnrollmentJobFraudDetectionConfig {
    /// <p>The action to take when the given speaker is flagged by the fraud detection system. The default value is <code>FAIL</code>, which fails the speaker enrollment. Changing this value to <code>IGNORE</code> results in the speaker being enrolled even if they are flagged by the fraud detection system.</p>
    pub fn fraud_detection_action(
        &self,
    ) -> std::option::Option<&crate::types::FraudDetectionAction> {
        self.fraud_detection_action.as_ref()
    }
    /// <p>Threshold value for determining whether the speaker is a high risk to be fraudulent. If the detected risk score calculated by Voice ID is greater than or equal to the threshold, the speaker is considered a fraudster.</p>
    pub fn risk_threshold(&self) -> std::option::Option<i32> {
        self.risk_threshold
    }
}
impl EnrollmentJobFraudDetectionConfig {
    /// Creates a new builder-style object to manufacture [`EnrollmentJobFraudDetectionConfig`](crate::types::EnrollmentJobFraudDetectionConfig).
    pub fn builder() -> crate::types::builders::EnrollmentJobFraudDetectionConfigBuilder {
        crate::types::builders::EnrollmentJobFraudDetectionConfigBuilder::default()
    }
}

/// A builder for [`EnrollmentJobFraudDetectionConfig`](crate::types::EnrollmentJobFraudDetectionConfig).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct EnrollmentJobFraudDetectionConfigBuilder {
    pub(crate) fraud_detection_action: std::option::Option<crate::types::FraudDetectionAction>,
    pub(crate) risk_threshold: std::option::Option<i32>,
}
impl EnrollmentJobFraudDetectionConfigBuilder {
    /// <p>The action to take when the given speaker is flagged by the fraud detection system. The default value is <code>FAIL</code>, which fails the speaker enrollment. Changing this value to <code>IGNORE</code> results in the speaker being enrolled even if they are flagged by the fraud detection system.</p>
    pub fn fraud_detection_action(mut self, input: crate::types::FraudDetectionAction) -> Self {
        self.fraud_detection_action = Some(input);
        self
    }
    /// <p>The action to take when the given speaker is flagged by the fraud detection system. The default value is <code>FAIL</code>, which fails the speaker enrollment. Changing this value to <code>IGNORE</code> results in the speaker being enrolled even if they are flagged by the fraud detection system.</p>
    pub fn set_fraud_detection_action(
        mut self,
        input: std::option::Option<crate::types::FraudDetectionAction>,
    ) -> Self {
        self.fraud_detection_action = input;
        self
    }
    /// <p>Threshold value for determining whether the speaker is a high risk to be fraudulent. If the detected risk score calculated by Voice ID is greater than or equal to the threshold, the speaker is considered a fraudster.</p>
    pub fn risk_threshold(mut self, input: i32) -> Self {
        self.risk_threshold = Some(input);
        self
    }
    /// <p>Threshold value for determining whether the speaker is a high risk to be fraudulent. If the detected risk score calculated by Voice ID is greater than or equal to the threshold, the speaker is considered a fraudster.</p>
    pub fn set_risk_threshold(mut self, input: std::option::Option<i32>) -> Self {
        self.risk_threshold = input;
        self
    }
    /// Consumes the builder and constructs a [`EnrollmentJobFraudDetectionConfig`](crate::types::EnrollmentJobFraudDetectionConfig).
    pub fn build(self) -> crate::types::EnrollmentJobFraudDetectionConfig {
        crate::types::EnrollmentJobFraudDetectionConfig {
            fraud_detection_action: self.fraud_detection_action,
            risk_threshold: self.risk_threshold,
        }
    }
}
