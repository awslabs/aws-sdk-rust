// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) fn type_erase_result<O, E>(
    result: ::std::result::Result<O, E>,
) -> ::std::result::Result<
    ::aws_smithy_runtime_api::client::interceptors::context::Output,
    ::aws_smithy_runtime_api::client::orchestrator::OrchestratorError<::aws_smithy_runtime_api::client::interceptors::context::Error>,
>
where
    O: ::std::fmt::Debug + ::std::marker::Send + ::std::marker::Sync + 'static,
    E: ::std::error::Error + std::fmt::Debug + ::std::marker::Send + ::std::marker::Sync + 'static,
{
    result
        .map(|output| ::aws_smithy_runtime_api::client::interceptors::context::Output::erase(output))
        .map_err(|error| ::aws_smithy_runtime_api::client::interceptors::context::Error::erase(error))
        .map_err(::std::convert::Into::into)
}

pub fn parse_http_error_metadata(
    _response_status: u16,
    response_headers: &::http::HeaderMap,
    response_body: &[u8],
) -> Result<::aws_smithy_types::error::metadata::Builder, ::aws_smithy_json::deserialize::error::DeserializeError> {
    crate::json_errors::parse_error_metadata(response_body, response_headers)
}

pub(crate) mod shape_clone_backend;

pub(crate) mod shape_create_backend;

pub(crate) mod shape_create_backend_api;

pub(crate) mod shape_create_backend_auth;

pub(crate) mod shape_create_backend_config;

pub(crate) mod shape_create_backend_storage;

pub(crate) mod shape_create_token;

pub(crate) mod shape_delete_backend;

pub(crate) mod shape_delete_backend_api;

pub(crate) mod shape_delete_backend_auth;

pub(crate) mod shape_delete_backend_storage;

pub(crate) mod shape_delete_token;

pub(crate) mod shape_generate_backend_api_models;

pub(crate) mod shape_get_backend;

pub(crate) mod shape_get_backend_api;

pub(crate) mod shape_get_backend_api_models;

pub(crate) mod shape_get_backend_auth;

pub(crate) mod shape_get_backend_job;

pub(crate) mod shape_get_backend_storage;

pub(crate) mod shape_get_token;

pub(crate) mod shape_import_backend_auth;

pub(crate) mod shape_import_backend_storage;

pub(crate) mod shape_list_backend_jobs;

pub(crate) mod shape_list_s3_buckets;

pub(crate) mod shape_remove_all_backends;

pub(crate) mod shape_remove_backend_config;

pub(crate) mod shape_update_backend_api;

pub(crate) mod shape_update_backend_auth;

pub(crate) mod shape_update_backend_config;

pub(crate) mod shape_update_backend_job;

pub(crate) mod shape_update_backend_storage;

pub(crate) fn or_empty_doc(data: &[u8]) -> &[u8] {
    if data.is_empty() {
        b"{}"
    } else {
        data
    }
}

pub(crate) mod shape_bad_request_exception;

pub(crate) mod shape_clone_backend_input;

pub(crate) mod shape_create_backend_api_input;

pub(crate) mod shape_create_backend_auth_input;

pub(crate) mod shape_create_backend_config_input;

pub(crate) mod shape_create_backend_input;

pub(crate) mod shape_create_backend_storage_input;

pub(crate) mod shape_delete_backend_api_input;

pub(crate) mod shape_delete_backend_auth_input;

pub(crate) mod shape_delete_backend_storage_input;

pub(crate) mod shape_gateway_timeout_exception;

pub(crate) mod shape_generate_backend_api_models_input;

pub(crate) mod shape_get_backend_api_input;

pub(crate) mod shape_get_backend_api_models_input;

pub(crate) mod shape_get_backend_auth_input;

pub(crate) mod shape_get_backend_input;

pub(crate) mod shape_get_backend_storage_input;

pub(crate) mod shape_import_backend_auth_input;

pub(crate) mod shape_import_backend_storage_input;

pub(crate) mod shape_list_backend_jobs_input;

pub(crate) mod shape_list_s3_buckets_input;

pub(crate) mod shape_not_found_exception;

pub(crate) mod shape_remove_all_backends_input;

pub(crate) mod shape_too_many_requests_exception;

pub(crate) mod shape_update_backend_api_input;

pub(crate) mod shape_update_backend_auth_input;

pub(crate) mod shape_update_backend_config_input;

pub(crate) mod shape_update_backend_job_input;

pub(crate) mod shape_update_backend_storage_input;

pub(crate) mod shape_backend_api_resource_config;

pub(crate) mod shape_create_backend_auth_resource_config;

pub(crate) mod shape_create_backend_storage_resource_config;

pub(crate) mod shape_get_backend_storage_resource_config;

pub(crate) mod shape_list_of_backend_job_resp_obj;

pub(crate) mod shape_list_of_s3_bucket_info;

pub(crate) mod shape_list_of_string;

pub(crate) mod shape_login_auth_config_req_obj;

pub(crate) mod shape_resource_config;

pub(crate) mod shape_update_backend_auth_resource_config;

pub(crate) mod shape_update_backend_storage_resource_config;

pub(crate) mod shape_backend_api_auth_type;

pub(crate) mod shape_backend_api_conflict_resolution;

pub(crate) mod shape_backend_job_resp_obj;

pub(crate) mod shape_backend_storage_permissions;

pub(crate) mod shape_create_backend_auth_identity_pool_config;

pub(crate) mod shape_create_backend_auth_user_pool_config;

pub(crate) mod shape_list_of_backend_api_auth_type;

pub(crate) mod shape_s3_bucket_info;

pub(crate) mod shape_update_backend_auth_identity_pool_config;

pub(crate) mod shape_update_backend_auth_user_pool_config;

pub(crate) mod shape_backend_api_app_sync_auth_settings;

pub(crate) mod shape_create_backend_auth_forgot_password_config;

pub(crate) mod shape_create_backend_auth_mfa_config;

pub(crate) mod shape_create_backend_auth_o_auth_config;

pub(crate) mod shape_create_backend_auth_password_policy_config;

pub(crate) mod shape_create_backend_auth_verification_message_config;

pub(crate) mod shape_list_of_authenticated_element;

pub(crate) mod shape_list_of_required_sign_up_attributes_element;

pub(crate) mod shape_list_of_un_authenticated_element;

pub(crate) mod shape_update_backend_auth_forgot_password_config;

pub(crate) mod shape_update_backend_auth_mfa_config;

pub(crate) mod shape_update_backend_auth_o_auth_config;

pub(crate) mod shape_update_backend_auth_password_policy_config;

pub(crate) mod shape_update_backend_auth_verification_message_config;

pub(crate) mod shape_email_settings;

pub(crate) mod shape_list_of_additional_constraints_element;

pub(crate) mod shape_list_of_o_auth_scopes_element;

pub(crate) mod shape_settings;

pub(crate) mod shape_sms_settings;

pub(crate) mod shape_social_provider_settings;

pub(crate) mod shape_backend_auth_apple_provider_config;

pub(crate) mod shape_backend_auth_social_provider_config;

pub(crate) mod shape_list_of_mfa_types_element;
