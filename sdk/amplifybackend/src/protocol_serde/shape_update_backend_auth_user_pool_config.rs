// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_update_backend_auth_user_pool_config(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::types::UpdateBackendAuthUserPoolConfig,
) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    if let Some(var_1) = &input.forgot_password {
        #[allow(unused_mut)]
        let mut object_2 = object.key("forgotPassword").start_object();
        crate::protocol_serde::shape_update_backend_auth_forgot_password_config::ser_update_backend_auth_forgot_password_config(&mut object_2, var_1)?;
        object_2.finish();
    }
    if let Some(var_3) = &input.mfa {
        #[allow(unused_mut)]
        let mut object_4 = object.key("mfa").start_object();
        crate::protocol_serde::shape_update_backend_auth_mfa_config::ser_update_backend_auth_mfa_config(&mut object_4, var_3)?;
        object_4.finish();
    }
    if let Some(var_5) = &input.o_auth {
        #[allow(unused_mut)]
        let mut object_6 = object.key("oAuth").start_object();
        crate::protocol_serde::shape_update_backend_auth_o_auth_config::ser_update_backend_auth_o_auth_config(&mut object_6, var_5)?;
        object_6.finish();
    }
    if let Some(var_7) = &input.password_policy {
        #[allow(unused_mut)]
        let mut object_8 = object.key("passwordPolicy").start_object();
        crate::protocol_serde::shape_update_backend_auth_password_policy_config::ser_update_backend_auth_password_policy_config(&mut object_8, var_7)?;
        object_8.finish();
    }
    if let Some(var_9) = &input.verification_message {
        #[allow(unused_mut)]
        let mut object_10 = object.key("verificationMessage").start_object();
        crate::protocol_serde::shape_update_backend_auth_verification_message_config::ser_update_backend_auth_verification_message_config(&mut object_10, var_9)?;
        object_10.finish();
    }
    Ok(())
}
