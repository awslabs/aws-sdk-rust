// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Describes the authorization configuration for the Amazon Cognito identity pool, provisioned as a part of your auth resource in the Amplify project.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct UpdateBackendAuthIdentityPoolConfig {
    /// <p>A boolean value that can be set to allow or disallow guest-level authorization into your Amplify app.</p>
    #[doc(hidden)]
    pub unauthenticated_login: bool,
}
impl UpdateBackendAuthIdentityPoolConfig {
    /// <p>A boolean value that can be set to allow or disallow guest-level authorization into your Amplify app.</p>
    pub fn unauthenticated_login(&self) -> bool {
        self.unauthenticated_login
    }
}
impl UpdateBackendAuthIdentityPoolConfig {
    /// Creates a new builder-style object to manufacture [`UpdateBackendAuthIdentityPoolConfig`](crate::types::UpdateBackendAuthIdentityPoolConfig).
    pub fn builder() -> crate::types::builders::UpdateBackendAuthIdentityPoolConfigBuilder {
        crate::types::builders::UpdateBackendAuthIdentityPoolConfigBuilder::default()
    }
}

/// A builder for [`UpdateBackendAuthIdentityPoolConfig`](crate::types::UpdateBackendAuthIdentityPoolConfig).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct UpdateBackendAuthIdentityPoolConfigBuilder {
    pub(crate) unauthenticated_login: std::option::Option<bool>,
}
impl UpdateBackendAuthIdentityPoolConfigBuilder {
    /// <p>A boolean value that can be set to allow or disallow guest-level authorization into your Amplify app.</p>
    pub fn unauthenticated_login(mut self, input: bool) -> Self {
        self.unauthenticated_login = Some(input);
        self
    }
    /// <p>A boolean value that can be set to allow or disallow guest-level authorization into your Amplify app.</p>
    pub fn set_unauthenticated_login(mut self, input: std::option::Option<bool>) -> Self {
        self.unauthenticated_login = input;
        self
    }
    /// Consumes the builder and constructs a [`UpdateBackendAuthIdentityPoolConfig`](crate::types::UpdateBackendAuthIdentityPoolConfig).
    pub fn build(self) -> crate::types::UpdateBackendAuthIdentityPoolConfig {
        crate::types::UpdateBackendAuthIdentityPoolConfig {
            unauthenticated_login: self.unauthenticated_login.unwrap_or_default(),
        }
    }
}
