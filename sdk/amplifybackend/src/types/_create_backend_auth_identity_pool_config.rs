// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Describes authorization configurations for the auth resources, configured as a part of your Amplify project.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct CreateBackendAuthIdentityPoolConfig {
    /// <p>Name of the Amazon Cognito identity pool used for authorization.</p>
    #[doc(hidden)]
    pub identity_pool_name: std::option::Option<std::string::String>,
    /// <p>Set to true or false based on whether you want to enable guest authorization to your Amplify app.</p>
    #[doc(hidden)]
    pub unauthenticated_login: bool,
}
impl CreateBackendAuthIdentityPoolConfig {
    /// <p>Name of the Amazon Cognito identity pool used for authorization.</p>
    pub fn identity_pool_name(&self) -> std::option::Option<&str> {
        self.identity_pool_name.as_deref()
    }
    /// <p>Set to true or false based on whether you want to enable guest authorization to your Amplify app.</p>
    pub fn unauthenticated_login(&self) -> bool {
        self.unauthenticated_login
    }
}
impl CreateBackendAuthIdentityPoolConfig {
    /// Creates a new builder-style object to manufacture [`CreateBackendAuthIdentityPoolConfig`](crate::types::CreateBackendAuthIdentityPoolConfig).
    pub fn builder() -> crate::types::builders::CreateBackendAuthIdentityPoolConfigBuilder {
        crate::types::builders::CreateBackendAuthIdentityPoolConfigBuilder::default()
    }
}

/// A builder for [`CreateBackendAuthIdentityPoolConfig`](crate::types::CreateBackendAuthIdentityPoolConfig).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct CreateBackendAuthIdentityPoolConfigBuilder {
    pub(crate) identity_pool_name: std::option::Option<std::string::String>,
    pub(crate) unauthenticated_login: std::option::Option<bool>,
}
impl CreateBackendAuthIdentityPoolConfigBuilder {
    /// <p>Name of the Amazon Cognito identity pool used for authorization.</p>
    pub fn identity_pool_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.identity_pool_name = Some(input.into());
        self
    }
    /// <p>Name of the Amazon Cognito identity pool used for authorization.</p>
    pub fn set_identity_pool_name(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.identity_pool_name = input;
        self
    }
    /// <p>Set to true or false based on whether you want to enable guest authorization to your Amplify app.</p>
    pub fn unauthenticated_login(mut self, input: bool) -> Self {
        self.unauthenticated_login = Some(input);
        self
    }
    /// <p>Set to true or false based on whether you want to enable guest authorization to your Amplify app.</p>
    pub fn set_unauthenticated_login(mut self, input: std::option::Option<bool>) -> Self {
        self.unauthenticated_login = input;
        self
    }
    /// Consumes the builder and constructs a [`CreateBackendAuthIdentityPoolConfig`](crate::types::CreateBackendAuthIdentityPoolConfig).
    pub fn build(self) -> crate::types::CreateBackendAuthIdentityPoolConfig {
        crate::types::CreateBackendAuthIdentityPoolConfig {
            identity_pool_name: self.identity_pool_name,
            unauthenticated_login: self.unauthenticated_login.unwrap_or_default(),
        }
    }
}
