// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Describes the metadata of the S3 bucket.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct S3BucketInfo {
    /// <p>The creation date of the S3 bucket.</p>
    #[doc(hidden)]
    pub creation_date: std::option::Option<std::string::String>,
    /// <p>The name of the S3 bucket.</p>
    #[doc(hidden)]
    pub name: std::option::Option<std::string::String>,
}
impl S3BucketInfo {
    /// <p>The creation date of the S3 bucket.</p>
    pub fn creation_date(&self) -> std::option::Option<&str> {
        self.creation_date.as_deref()
    }
    /// <p>The name of the S3 bucket.</p>
    pub fn name(&self) -> std::option::Option<&str> {
        self.name.as_deref()
    }
}
impl S3BucketInfo {
    /// Creates a new builder-style object to manufacture [`S3BucketInfo`](crate::types::S3BucketInfo).
    pub fn builder() -> crate::types::builders::S3BucketInfoBuilder {
        crate::types::builders::S3BucketInfoBuilder::default()
    }
}

/// A builder for [`S3BucketInfo`](crate::types::S3BucketInfo).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct S3BucketInfoBuilder {
    pub(crate) creation_date: std::option::Option<std::string::String>,
    pub(crate) name: std::option::Option<std::string::String>,
}
impl S3BucketInfoBuilder {
    /// <p>The creation date of the S3 bucket.</p>
    pub fn creation_date(mut self, input: impl Into<std::string::String>) -> Self {
        self.creation_date = Some(input.into());
        self
    }
    /// <p>The creation date of the S3 bucket.</p>
    pub fn set_creation_date(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.creation_date = input;
        self
    }
    /// <p>The name of the S3 bucket.</p>
    pub fn name(mut self, input: impl Into<std::string::String>) -> Self {
        self.name = Some(input.into());
        self
    }
    /// <p>The name of the S3 bucket.</p>
    pub fn set_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// Consumes the builder and constructs a [`S3BucketInfo`](crate::types::S3BucketInfo).
    pub fn build(self) -> crate::types::S3BucketInfo {
        crate::types::S3BucketInfo {
            creation_date: self.creation_date,
            name: self.name,
        }
    }
}
