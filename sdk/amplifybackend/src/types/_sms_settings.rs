// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>SMS settings for authentication.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct SmsSettings {
    /// <p>The contents of the SMS message.</p>
    #[doc(hidden)]
    pub sms_message: std::option::Option<std::string::String>,
}
impl SmsSettings {
    /// <p>The contents of the SMS message.</p>
    pub fn sms_message(&self) -> std::option::Option<&str> {
        self.sms_message.as_deref()
    }
}
impl SmsSettings {
    /// Creates a new builder-style object to manufacture [`SmsSettings`](crate::types::SmsSettings).
    pub fn builder() -> crate::types::builders::SmsSettingsBuilder {
        crate::types::builders::SmsSettingsBuilder::default()
    }
}

/// A builder for [`SmsSettings`](crate::types::SmsSettings).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct SmsSettingsBuilder {
    pub(crate) sms_message: std::option::Option<std::string::String>,
}
impl SmsSettingsBuilder {
    /// <p>The contents of the SMS message.</p>
    pub fn sms_message(mut self, input: impl Into<std::string::String>) -> Self {
        self.sms_message = Some(input.into());
        self
    }
    /// <p>The contents of the SMS message.</p>
    pub fn set_sms_message(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.sms_message = input;
        self
    }
    /// Consumes the builder and constructs a [`SmsSettings`](crate::types::SmsSettings).
    pub fn build(self) -> crate::types::SmsSettings {
        crate::types::SmsSettings {
            sms_message: self.sms_message,
        }
    }
}
