// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetBackend`](crate::operation::get_backend::builders::GetBackendFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`app_id(impl Into<String>)`](crate::operation::get_backend::builders::GetBackendFluentBuilder::app_id) / [`set_app_id(Option<String>)`](crate::operation::get_backend::builders::GetBackendFluentBuilder::set_app_id):<br>required: **true**<br><p>The app ID.</p><br>
    ///   - [`backend_environment_name(impl Into<String>)`](crate::operation::get_backend::builders::GetBackendFluentBuilder::backend_environment_name) / [`set_backend_environment_name(Option<String>)`](crate::operation::get_backend::builders::GetBackendFluentBuilder::set_backend_environment_name):<br>required: **false**<br><p>The name of the backend environment.</p><br>
    /// - On success, responds with [`GetBackendOutput`](crate::operation::get_backend::GetBackendOutput) with field(s):
    ///   - [`amplify_feature_flags(Option<String>)`](crate::operation::get_backend::GetBackendOutput::amplify_feature_flags): <p>A stringified version of the cli.json file for your Amplify project.</p>
    ///   - [`amplify_meta_config(Option<String>)`](crate::operation::get_backend::GetBackendOutput::amplify_meta_config): <p>A stringified version of the current configs for your Amplify project.</p>
    ///   - [`app_id(Option<String>)`](crate::operation::get_backend::GetBackendOutput::app_id): <p>The app ID.</p>
    ///   - [`app_name(Option<String>)`](crate::operation::get_backend::GetBackendOutput::app_name): <p>The name of the app.</p>
    ///   - [`backend_environment_list(Option<Vec::<String>>)`](crate::operation::get_backend::GetBackendOutput::backend_environment_list): <p>A list of backend environments in an array.</p>
    ///   - [`backend_environment_name(Option<String>)`](crate::operation::get_backend::GetBackendOutput::backend_environment_name): <p>The name of the backend environment.</p>
    ///   - [`error(Option<String>)`](crate::operation::get_backend::GetBackendOutput::error): <p>If the request failed, this is the returned error.</p>
    /// - On failure, responds with [`SdkError<GetBackendError>`](crate::operation::get_backend::GetBackendError)
    pub fn get_backend(&self) -> crate::operation::get_backend::builders::GetBackendFluentBuilder {
        crate::operation::get_backend::builders::GetBackendFluentBuilder::new(self.handle.clone())
    }
}
