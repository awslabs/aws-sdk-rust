// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateBackendStorage`](crate::client::fluent_builders::CreateBackendStorage) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`app_id(impl Into<String>)`](crate::client::fluent_builders::CreateBackendStorage::app_id) / [`set_app_id(Option<String>)`](crate::client::fluent_builders::CreateBackendStorage::set_app_id): <p>The app ID.</p>
    ///   - [`backend_environment_name(impl Into<String>)`](crate::client::fluent_builders::CreateBackendStorage::backend_environment_name) / [`set_backend_environment_name(Option<String>)`](crate::client::fluent_builders::CreateBackendStorage::set_backend_environment_name): <p>The name of the backend environment.</p>
    ///   - [`resource_config(CreateBackendStorageResourceConfig)`](crate::client::fluent_builders::CreateBackendStorage::resource_config) / [`set_resource_config(Option<CreateBackendStorageResourceConfig>)`](crate::client::fluent_builders::CreateBackendStorage::set_resource_config): <p>The resource configuration for creating backend storage.</p>
    ///   - [`resource_name(impl Into<String>)`](crate::client::fluent_builders::CreateBackendStorage::resource_name) / [`set_resource_name(Option<String>)`](crate::client::fluent_builders::CreateBackendStorage::set_resource_name): <p>The name of the storage resource.</p>
    /// - On success, responds with [`CreateBackendStorageOutput`](crate::output::CreateBackendStorageOutput) with field(s):
    ///   - [`app_id(Option<String>)`](crate::output::CreateBackendStorageOutput::app_id): <p>The app ID.</p>
    ///   - [`backend_environment_name(Option<String>)`](crate::output::CreateBackendStorageOutput::backend_environment_name): <p>The name of the backend environment.</p>
    ///   - [`job_id(Option<String>)`](crate::output::CreateBackendStorageOutput::job_id): <p>The ID for the job.</p>
    ///   - [`status(Option<String>)`](crate::output::CreateBackendStorageOutput::status): <p>The current status of the request.</p>
    /// - On failure, responds with [`SdkError<CreateBackendStorageError>`](crate::error::CreateBackendStorageError)
    pub fn create_backend_storage(&self) -> crate::client::fluent_builders::CreateBackendStorage {
        crate::client::fluent_builders::CreateBackendStorage::new(self.handle.clone())
    }
}
