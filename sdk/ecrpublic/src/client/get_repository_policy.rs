// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetRepositoryPolicy`](crate::operation::get_repository_policy::builders::GetRepositoryPolicyFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`registry_id(impl Into<String>)`](crate::operation::get_repository_policy::builders::GetRepositoryPolicyFluentBuilder::registry_id) / [`set_registry_id(Option<String>)`](crate::operation::get_repository_policy::builders::GetRepositoryPolicyFluentBuilder::set_registry_id):<br>required: **false**<br><p>The Amazon Web Services account ID that's associated with the public registry that contains the repository. If you do not specify a registry, the default public registry is assumed.</p><br>
    ///   - [`repository_name(impl Into<String>)`](crate::operation::get_repository_policy::builders::GetRepositoryPolicyFluentBuilder::repository_name) / [`set_repository_name(Option<String>)`](crate::operation::get_repository_policy::builders::GetRepositoryPolicyFluentBuilder::set_repository_name):<br>required: **true**<br><p>The name of the repository with the policy to retrieve.</p><br>
    /// - On success, responds with [`GetRepositoryPolicyOutput`](crate::operation::get_repository_policy::GetRepositoryPolicyOutput) with field(s):
    ///   - [`registry_id(Option<String>)`](crate::operation::get_repository_policy::GetRepositoryPolicyOutput::registry_id): <p>The registry ID that's associated with the request.</p>
    ///   - [`repository_name(Option<String>)`](crate::operation::get_repository_policy::GetRepositoryPolicyOutput::repository_name): <p>The repository name that's associated with the request.</p>
    ///   - [`policy_text(Option<String>)`](crate::operation::get_repository_policy::GetRepositoryPolicyOutput::policy_text): <p>The repository policy text that's associated with the repository. The policy text will be in JSON format.</p>
    /// - On failure, responds with [`SdkError<GetRepositoryPolicyError>`](crate::operation::get_repository_policy::GetRepositoryPolicyError)
    pub fn get_repository_policy(&self) -> crate::operation::get_repository_policy::builders::GetRepositoryPolicyFluentBuilder {
        crate::operation::get_repository_policy::builders::GetRepositoryPolicyFluentBuilder::new(self.handle.clone())
    }
}
