// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct UploadLayerPartOutput {
    /// <p>The registry ID that's associated with the request.</p>
    #[doc(hidden)]
    pub registry_id: std::option::Option<std::string::String>,
    /// <p>The repository name that's associated with the request.</p>
    #[doc(hidden)]
    pub repository_name: std::option::Option<std::string::String>,
    /// <p>The upload ID that's associated with the request.</p>
    #[doc(hidden)]
    pub upload_id: std::option::Option<std::string::String>,
    /// <p>The integer value of the last byte that's received in the request.</p>
    #[doc(hidden)]
    pub last_byte_received: std::option::Option<i64>,
    _request_id: Option<String>,
}
impl UploadLayerPartOutput {
    /// <p>The registry ID that's associated with the request.</p>
    pub fn registry_id(&self) -> std::option::Option<&str> {
        self.registry_id.as_deref()
    }
    /// <p>The repository name that's associated with the request.</p>
    pub fn repository_name(&self) -> std::option::Option<&str> {
        self.repository_name.as_deref()
    }
    /// <p>The upload ID that's associated with the request.</p>
    pub fn upload_id(&self) -> std::option::Option<&str> {
        self.upload_id.as_deref()
    }
    /// <p>The integer value of the last byte that's received in the request.</p>
    pub fn last_byte_received(&self) -> std::option::Option<i64> {
        self.last_byte_received
    }
}
impl aws_http::request_id::RequestId for UploadLayerPartOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl UploadLayerPartOutput {
    /// Creates a new builder-style object to manufacture [`UploadLayerPartOutput`](crate::operation::upload_layer_part::UploadLayerPartOutput).
    pub fn builder() -> crate::operation::upload_layer_part::builders::UploadLayerPartOutputBuilder
    {
        crate::operation::upload_layer_part::builders::UploadLayerPartOutputBuilder::default()
    }
}

/// A builder for [`UploadLayerPartOutput`](crate::operation::upload_layer_part::UploadLayerPartOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct UploadLayerPartOutputBuilder {
    pub(crate) registry_id: std::option::Option<std::string::String>,
    pub(crate) repository_name: std::option::Option<std::string::String>,
    pub(crate) upload_id: std::option::Option<std::string::String>,
    pub(crate) last_byte_received: std::option::Option<i64>,
    _request_id: Option<String>,
}
impl UploadLayerPartOutputBuilder {
    /// <p>The registry ID that's associated with the request.</p>
    pub fn registry_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.registry_id = Some(input.into());
        self
    }
    /// <p>The registry ID that's associated with the request.</p>
    pub fn set_registry_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.registry_id = input;
        self
    }
    /// <p>The repository name that's associated with the request.</p>
    pub fn repository_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.repository_name = Some(input.into());
        self
    }
    /// <p>The repository name that's associated with the request.</p>
    pub fn set_repository_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.repository_name = input;
        self
    }
    /// <p>The upload ID that's associated with the request.</p>
    pub fn upload_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.upload_id = Some(input.into());
        self
    }
    /// <p>The upload ID that's associated with the request.</p>
    pub fn set_upload_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.upload_id = input;
        self
    }
    /// <p>The integer value of the last byte that's received in the request.</p>
    pub fn last_byte_received(mut self, input: i64) -> Self {
        self.last_byte_received = Some(input);
        self
    }
    /// <p>The integer value of the last byte that's received in the request.</p>
    pub fn set_last_byte_received(mut self, input: std::option::Option<i64>) -> Self {
        self.last_byte_received = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`UploadLayerPartOutput`](crate::operation::upload_layer_part::UploadLayerPartOutput).
    pub fn build(self) -> crate::operation::upload_layer_part::UploadLayerPartOutput {
        crate::operation::upload_layer_part::UploadLayerPartOutput {
            registry_id: self.registry_id,
            repository_name: self.repository_name,
            upload_id: self.upload_id,
            last_byte_received: self.last_byte_received,
            _request_id: self._request_id,
        }
    }
}
