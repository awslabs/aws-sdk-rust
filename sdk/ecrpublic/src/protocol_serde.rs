// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) mod shape_batch_check_layer_availability;

pub fn parse_http_error_metadata(
    response: &http::Response<bytes::Bytes>,
) -> Result<
    aws_smithy_types::error::metadata::Builder,
    aws_smithy_json::deserialize::error::DeserializeError,
> {
    crate::json_errors::parse_error_metadata(response.body(), response.headers())
}

pub(crate) mod shape_batch_delete_image;

pub(crate) mod shape_complete_layer_upload;

pub(crate) mod shape_create_repository;

pub(crate) mod shape_delete_repository;

pub(crate) mod shape_delete_repository_policy;

pub(crate) mod shape_describe_image_tags;

pub(crate) mod shape_describe_images;

pub(crate) mod shape_describe_registries;

pub(crate) mod shape_describe_repositories;

pub(crate) mod shape_get_authorization_token;

pub(crate) mod shape_get_registry_catalog_data;

pub(crate) mod shape_get_repository_catalog_data;

pub(crate) mod shape_get_repository_policy;

pub(crate) mod shape_initiate_layer_upload;

pub(crate) mod shape_list_tags_for_resource;

pub(crate) mod shape_put_image;

pub(crate) mod shape_put_registry_catalog_data;

pub(crate) mod shape_put_repository_catalog_data;

pub(crate) mod shape_set_repository_policy;

pub(crate) mod shape_tag_resource;

pub(crate) mod shape_untag_resource;

pub(crate) mod shape_upload_layer_part;

pub(crate) fn or_empty_doc(data: &[u8]) -> &[u8] {
    if data.is_empty() {
        b"{}"
    } else {
        data
    }
}

pub(crate) mod shape_batch_check_layer_availability_input;

pub(crate) mod shape_batch_delete_image_input;

pub(crate) mod shape_complete_layer_upload_input;

pub(crate) mod shape_create_repository_input;

pub(crate) mod shape_delete_repository_input;

pub(crate) mod shape_delete_repository_policy_input;

pub(crate) mod shape_describe_image_tags_input;

pub(crate) mod shape_describe_images_input;

pub(crate) mod shape_describe_registries_input;

pub(crate) mod shape_describe_repositories_input;

pub(crate) mod shape_empty_upload_exception;

pub(crate) mod shape_get_repository_catalog_data_input;

pub(crate) mod shape_get_repository_policy_input;

pub(crate) mod shape_image_already_exists_exception;

pub(crate) mod shape_image_digest_does_not_match_exception;

pub(crate) mod shape_image_not_found_exception;

pub(crate) mod shape_image_tag_already_exists_exception;

pub(crate) mod shape_initiate_layer_upload_input;

pub(crate) mod shape_invalid_layer_exception;

pub(crate) mod shape_invalid_layer_part_exception;

pub(crate) mod shape_invalid_parameter_exception;

pub(crate) mod shape_invalid_tag_parameter_exception;

pub(crate) mod shape_layer_already_exists_exception;

pub(crate) mod shape_layer_part_too_small_exception;

pub(crate) mod shape_layers_not_found_exception;

pub(crate) mod shape_limit_exceeded_exception;

pub(crate) mod shape_list_tags_for_resource_input;

pub(crate) mod shape_put_image_input;

pub(crate) mod shape_put_registry_catalog_data_input;

pub(crate) mod shape_put_repository_catalog_data_input;

pub(crate) mod shape_referenced_images_not_found_exception;

pub(crate) mod shape_registry_not_found_exception;

pub(crate) mod shape_repository_already_exists_exception;

pub(crate) mod shape_repository_catalog_data_not_found_exception;

pub(crate) mod shape_repository_not_empty_exception;

pub(crate) mod shape_repository_not_found_exception;

pub(crate) mod shape_repository_policy_not_found_exception;

pub(crate) mod shape_server_exception;

pub(crate) mod shape_set_repository_policy_input;

pub(crate) mod shape_tag_resource_input;

pub(crate) mod shape_too_many_tags_exception;

pub(crate) mod shape_unsupported_command_exception;

pub(crate) mod shape_untag_resource_input;

pub(crate) mod shape_upload_layer_part_input;

pub(crate) mod shape_upload_not_found_exception;

pub(crate) mod shape_authorization_data;

pub(crate) mod shape_image;

pub(crate) mod shape_image_detail_list;

pub(crate) mod shape_image_failure_list;

pub(crate) mod shape_image_identifier;

pub(crate) mod shape_image_identifier_list;

pub(crate) mod shape_image_tag_detail_list;

pub(crate) mod shape_layer_failure_list;

pub(crate) mod shape_layer_list;

pub(crate) mod shape_registry_catalog_data;

pub(crate) mod shape_registry_list;

pub(crate) mod shape_repository;

pub(crate) mod shape_repository_catalog_data;

pub(crate) mod shape_repository_catalog_data_input;

pub(crate) mod shape_repository_list;

pub(crate) mod shape_tag;

pub(crate) mod shape_tag_list;

pub(crate) mod shape_architecture_list;

pub(crate) mod shape_image_detail;

pub(crate) mod shape_image_failure;

pub(crate) mod shape_image_tag_detail;

pub(crate) mod shape_layer;

pub(crate) mod shape_layer_failure;

pub(crate) mod shape_operating_system_list;

pub(crate) mod shape_registry;

pub(crate) mod shape_image_tag_list;

pub(crate) mod shape_referenced_image_detail;

pub(crate) mod shape_registry_alias_list;

pub(crate) mod shape_registry_alias;
