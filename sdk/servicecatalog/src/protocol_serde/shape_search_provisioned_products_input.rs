// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_search_provisioned_products_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::search_provisioned_products::SearchProvisionedProductsInput,
) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    if let Some(var_1) = &input.accept_language {
        object.key("AcceptLanguage").string(var_1.as_str());
    }
    if let Some(var_2) = &input.access_level_filter {
        #[allow(unused_mut)]
        let mut object_3 = object.key("AccessLevelFilter").start_object();
        crate::protocol_serde::shape_access_level_filter::ser_access_level_filter(
            &mut object_3,
            var_2,
        )?;
        object_3.finish();
    }
    if let Some(var_4) = &input.filters {
        #[allow(unused_mut)]
        let mut object_5 = object.key("Filters").start_object();
        for (key_6, value_7) in var_4 {
            {
                let mut array_8 = object_5.key(key_6.as_str()).start_array();
                for item_9 in value_7 {
                    {
                        array_8.value().string(item_9.as_str());
                    }
                }
                array_8.finish();
            }
        }
        object_5.finish();
    }
    if let Some(var_10) = &input.sort_by {
        object.key("SortBy").string(var_10.as_str());
    }
    if let Some(var_11) = &input.sort_order {
        object.key("SortOrder").string(var_11.as_str());
    }
    if input.page_size != 0 {
        object.key("PageSize").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((input.page_size).into()),
        );
    }
    if let Some(var_12) = &input.page_token {
        object.key("PageToken").string(var_12.as_str());
    }
    Ok(())
}
