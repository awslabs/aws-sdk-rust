// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_notify_update_provisioned_product_engine_workflow_result_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::notify_update_provisioned_product_engine_workflow_result::NotifyUpdateProvisionedProductEngineWorkflowResultInput,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.workflow_token {
        object.key("WorkflowToken").string(var_1.as_str());
    }
    if let Some(var_2) = &input.record_id {
        object.key("RecordId").string(var_2.as_str());
    }
    if let Some(var_3) = &input.status {
        object.key("Status").string(var_3.as_str());
    }
    if let Some(var_4) = &input.failure_reason {
        object.key("FailureReason").string(var_4.as_str());
    }
    if let Some(var_5) = &input.outputs {
        let mut array_6 = object.key("Outputs").start_array();
        for item_7 in var_5 {
            {
                #[allow(unused_mut)]
                let mut object_8 = array_6.value().start_object();
                crate::protocol_serde::shape_record_output::ser_record_output(&mut object_8, item_7)?;
                object_8.finish();
            }
        }
        array_6.finish();
    }
    if let Some(var_9) = &input.idempotency_token {
        object.key("IdempotencyToken").string(var_9.as_str());
    }
    Ok(())
}
