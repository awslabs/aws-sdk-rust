// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct BatchDisassociateServiceActionFromProvisioningArtifactOutput {
    /// <p>An object that contains a list of errors, along with information to help you identify the self-service action.</p>
    #[doc(hidden)]
    pub failed_service_action_associations:
        std::option::Option<std::vec::Vec<crate::types::FailedServiceActionAssociation>>,
    _request_id: Option<String>,
}
impl BatchDisassociateServiceActionFromProvisioningArtifactOutput {
    /// <p>An object that contains a list of errors, along with information to help you identify the self-service action.</p>
    pub fn failed_service_action_associations(
        &self,
    ) -> std::option::Option<&[crate::types::FailedServiceActionAssociation]> {
        self.failed_service_action_associations.as_deref()
    }
}
impl aws_http::request_id::RequestId
    for BatchDisassociateServiceActionFromProvisioningArtifactOutput
{
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl BatchDisassociateServiceActionFromProvisioningArtifactOutput {
    /// Creates a new builder-style object to manufacture [`BatchDisassociateServiceActionFromProvisioningArtifactOutput`](crate::operation::batch_disassociate_service_action_from_provisioning_artifact::BatchDisassociateServiceActionFromProvisioningArtifactOutput).
    pub fn builder() -> crate::operation::batch_disassociate_service_action_from_provisioning_artifact::builders::BatchDisassociateServiceActionFromProvisioningArtifactOutputBuilder{
        crate::operation::batch_disassociate_service_action_from_provisioning_artifact::builders::BatchDisassociateServiceActionFromProvisioningArtifactOutputBuilder::default()
    }
}

/// A builder for [`BatchDisassociateServiceActionFromProvisioningArtifactOutput`](crate::operation::batch_disassociate_service_action_from_provisioning_artifact::BatchDisassociateServiceActionFromProvisioningArtifactOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct BatchDisassociateServiceActionFromProvisioningArtifactOutputBuilder {
    pub(crate) failed_service_action_associations:
        std::option::Option<std::vec::Vec<crate::types::FailedServiceActionAssociation>>,
    _request_id: Option<String>,
}
impl BatchDisassociateServiceActionFromProvisioningArtifactOutputBuilder {
    /// Appends an item to `failed_service_action_associations`.
    ///
    /// To override the contents of this collection use [`set_failed_service_action_associations`](Self::set_failed_service_action_associations).
    ///
    /// <p>An object that contains a list of errors, along with information to help you identify the self-service action.</p>
    pub fn failed_service_action_associations(
        mut self,
        input: crate::types::FailedServiceActionAssociation,
    ) -> Self {
        let mut v = self.failed_service_action_associations.unwrap_or_default();
        v.push(input);
        self.failed_service_action_associations = Some(v);
        self
    }
    /// <p>An object that contains a list of errors, along with information to help you identify the self-service action.</p>
    pub fn set_failed_service_action_associations(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::FailedServiceActionAssociation>>,
    ) -> Self {
        self.failed_service_action_associations = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`BatchDisassociateServiceActionFromProvisioningArtifactOutput`](crate::operation::batch_disassociate_service_action_from_provisioning_artifact::BatchDisassociateServiceActionFromProvisioningArtifactOutput).
    pub fn build(self) -> crate::operation::batch_disassociate_service_action_from_provisioning_artifact::BatchDisassociateServiceActionFromProvisioningArtifactOutput{
        crate::operation::batch_disassociate_service_action_from_provisioning_artifact::BatchDisassociateServiceActionFromProvisioningArtifactOutput {
            failed_service_action_associations: self.failed_service_action_associations
            ,
            _request_id: self._request_id,
        }
    }
}
