// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ListTagOptionsOutput {
    /// <p>Information about the TagOptions.</p>
    pub tag_option_details: ::std::option::Option<::std::vec::Vec<crate::types::TagOptionDetail>>,
    /// <p>The page token for the next set of results. To retrieve the first set of results, use null.</p>
    pub page_token: ::std::option::Option<::std::string::String>,
    _request_id: Option<String>,
}
impl ListTagOptionsOutput {
    /// <p>Information about the TagOptions.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.tag_option_details.is_none()`.
    pub fn tag_option_details(&self) -> &[crate::types::TagOptionDetail] {
        self.tag_option_details.as_deref().unwrap_or_default()
    }
    /// <p>The page token for the next set of results. To retrieve the first set of results, use null.</p>
    pub fn page_token(&self) -> ::std::option::Option<&str> {
        self.page_token.as_deref()
    }
}
impl ::aws_http::request_id::RequestId for ListTagOptionsOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl ListTagOptionsOutput {
    /// Creates a new builder-style object to manufacture [`ListTagOptionsOutput`](crate::operation::list_tag_options::ListTagOptionsOutput).
    pub fn builder() -> crate::operation::list_tag_options::builders::ListTagOptionsOutputBuilder {
        crate::operation::list_tag_options::builders::ListTagOptionsOutputBuilder::default()
    }
}

/// A builder for [`ListTagOptionsOutput`](crate::operation::list_tag_options::ListTagOptionsOutput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ListTagOptionsOutputBuilder {
    pub(crate) tag_option_details: ::std::option::Option<::std::vec::Vec<crate::types::TagOptionDetail>>,
    pub(crate) page_token: ::std::option::Option<::std::string::String>,
    _request_id: Option<String>,
}
impl ListTagOptionsOutputBuilder {
    /// Appends an item to `tag_option_details`.
    ///
    /// To override the contents of this collection use [`set_tag_option_details`](Self::set_tag_option_details).
    ///
    /// <p>Information about the TagOptions.</p>
    pub fn tag_option_details(mut self, input: crate::types::TagOptionDetail) -> Self {
        let mut v = self.tag_option_details.unwrap_or_default();
        v.push(input);
        self.tag_option_details = ::std::option::Option::Some(v);
        self
    }
    /// <p>Information about the TagOptions.</p>
    pub fn set_tag_option_details(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::TagOptionDetail>>) -> Self {
        self.tag_option_details = input;
        self
    }
    /// <p>Information about the TagOptions.</p>
    pub fn get_tag_option_details(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::TagOptionDetail>> {
        &self.tag_option_details
    }
    /// <p>The page token for the next set of results. To retrieve the first set of results, use null.</p>
    pub fn page_token(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.page_token = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The page token for the next set of results. To retrieve the first set of results, use null.</p>
    pub fn set_page_token(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.page_token = input;
        self
    }
    /// <p>The page token for the next set of results. To retrieve the first set of results, use null.</p>
    pub fn get_page_token(&self) -> &::std::option::Option<::std::string::String> {
        &self.page_token
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`ListTagOptionsOutput`](crate::operation::list_tag_options::ListTagOptionsOutput).
    pub fn build(self) -> crate::operation::list_tag_options::ListTagOptionsOutput {
        crate::operation::list_tag_options::ListTagOptionsOutput {
            tag_option_details: self.tag_option_details,
            page_token: self.page_token,
            _request_id: self._request_id,
        }
    }
}
