// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DescribePortfolioSharesOutput {
    /// <p>The page token to use to retrieve the next set of results. If there are no additional results, this value is null.</p>
    #[doc(hidden)]
    pub next_page_token: std::option::Option<std::string::String>,
    /// <p>Summaries about each of the portfolio shares.</p>
    #[doc(hidden)]
    pub portfolio_share_details:
        std::option::Option<std::vec::Vec<crate::types::PortfolioShareDetail>>,
    _request_id: Option<String>,
}
impl DescribePortfolioSharesOutput {
    /// <p>The page token to use to retrieve the next set of results. If there are no additional results, this value is null.</p>
    pub fn next_page_token(&self) -> std::option::Option<&str> {
        self.next_page_token.as_deref()
    }
    /// <p>Summaries about each of the portfolio shares.</p>
    pub fn portfolio_share_details(
        &self,
    ) -> std::option::Option<&[crate::types::PortfolioShareDetail]> {
        self.portfolio_share_details.as_deref()
    }
}
impl aws_http::request_id::RequestId for DescribePortfolioSharesOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl DescribePortfolioSharesOutput {
    /// Creates a new builder-style object to manufacture [`DescribePortfolioSharesOutput`](crate::operation::describe_portfolio_shares::DescribePortfolioSharesOutput).
    pub fn builder(
    ) -> crate::operation::describe_portfolio_shares::builders::DescribePortfolioSharesOutputBuilder
    {
        crate::operation::describe_portfolio_shares::builders::DescribePortfolioSharesOutputBuilder::default()
    }
}

/// A builder for [`DescribePortfolioSharesOutput`](crate::operation::describe_portfolio_shares::DescribePortfolioSharesOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DescribePortfolioSharesOutputBuilder {
    pub(crate) next_page_token: std::option::Option<std::string::String>,
    pub(crate) portfolio_share_details:
        std::option::Option<std::vec::Vec<crate::types::PortfolioShareDetail>>,
    _request_id: Option<String>,
}
impl DescribePortfolioSharesOutputBuilder {
    /// <p>The page token to use to retrieve the next set of results. If there are no additional results, this value is null.</p>
    pub fn next_page_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.next_page_token = Some(input.into());
        self
    }
    /// <p>The page token to use to retrieve the next set of results. If there are no additional results, this value is null.</p>
    pub fn set_next_page_token(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.next_page_token = input;
        self
    }
    /// Appends an item to `portfolio_share_details`.
    ///
    /// To override the contents of this collection use [`set_portfolio_share_details`](Self::set_portfolio_share_details).
    ///
    /// <p>Summaries about each of the portfolio shares.</p>
    pub fn portfolio_share_details(mut self, input: crate::types::PortfolioShareDetail) -> Self {
        let mut v = self.portfolio_share_details.unwrap_or_default();
        v.push(input);
        self.portfolio_share_details = Some(v);
        self
    }
    /// <p>Summaries about each of the portfolio shares.</p>
    pub fn set_portfolio_share_details(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::PortfolioShareDetail>>,
    ) -> Self {
        self.portfolio_share_details = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`DescribePortfolioSharesOutput`](crate::operation::describe_portfolio_shares::DescribePortfolioSharesOutput).
    pub fn build(
        self,
    ) -> crate::operation::describe_portfolio_shares::DescribePortfolioSharesOutput {
        crate::operation::describe_portfolio_shares::DescribePortfolioSharesOutput {
            next_page_token: self.next_page_token,
            portfolio_share_details: self.portfolio_share_details,
            _request_id: self._request_id,
        }
    }
}
