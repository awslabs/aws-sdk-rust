// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ListPortfolioAccessOutput {
    /// <p>Information about the Amazon Web Services accounts with access to the portfolio.</p>
    #[doc(hidden)]
    pub account_ids: std::option::Option<std::vec::Vec<std::string::String>>,
    /// <p>The page token to use to retrieve the next set of results. If there are no additional results, this value is null.</p>
    #[doc(hidden)]
    pub next_page_token: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl ListPortfolioAccessOutput {
    /// <p>Information about the Amazon Web Services accounts with access to the portfolio.</p>
    pub fn account_ids(&self) -> std::option::Option<&[std::string::String]> {
        self.account_ids.as_deref()
    }
    /// <p>The page token to use to retrieve the next set of results. If there are no additional results, this value is null.</p>
    pub fn next_page_token(&self) -> std::option::Option<&str> {
        self.next_page_token.as_deref()
    }
}
impl aws_http::request_id::RequestId for ListPortfolioAccessOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl ListPortfolioAccessOutput {
    /// Creates a new builder-style object to manufacture [`ListPortfolioAccessOutput`](crate::operation::list_portfolio_access::ListPortfolioAccessOutput).
    pub fn builder(
    ) -> crate::operation::list_portfolio_access::builders::ListPortfolioAccessOutputBuilder {
        crate::operation::list_portfolio_access::builders::ListPortfolioAccessOutputBuilder::default(
        )
    }
}

/// A builder for [`ListPortfolioAccessOutput`](crate::operation::list_portfolio_access::ListPortfolioAccessOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ListPortfolioAccessOutputBuilder {
    pub(crate) account_ids: std::option::Option<std::vec::Vec<std::string::String>>,
    pub(crate) next_page_token: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl ListPortfolioAccessOutputBuilder {
    /// Appends an item to `account_ids`.
    ///
    /// To override the contents of this collection use [`set_account_ids`](Self::set_account_ids).
    ///
    /// <p>Information about the Amazon Web Services accounts with access to the portfolio.</p>
    pub fn account_ids(mut self, input: impl Into<std::string::String>) -> Self {
        let mut v = self.account_ids.unwrap_or_default();
        v.push(input.into());
        self.account_ids = Some(v);
        self
    }
    /// <p>Information about the Amazon Web Services accounts with access to the portfolio.</p>
    pub fn set_account_ids(
        mut self,
        input: std::option::Option<std::vec::Vec<std::string::String>>,
    ) -> Self {
        self.account_ids = input;
        self
    }
    /// <p>The page token to use to retrieve the next set of results. If there are no additional results, this value is null.</p>
    pub fn next_page_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.next_page_token = Some(input.into());
        self
    }
    /// <p>The page token to use to retrieve the next set of results. If there are no additional results, this value is null.</p>
    pub fn set_next_page_token(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.next_page_token = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`ListPortfolioAccessOutput`](crate::operation::list_portfolio_access::ListPortfolioAccessOutput).
    pub fn build(self) -> crate::operation::list_portfolio_access::ListPortfolioAccessOutput {
        crate::operation::list_portfolio_access::ListPortfolioAccessOutput {
            account_ids: self.account_ids,
            next_page_token: self.next_page_token,
            _request_id: self._request_id,
        }
    }
}
