// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`TerminateProvisionedProduct`](crate::client::fluent_builders::TerminateProvisionedProduct) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`provisioned_product_name(impl Into<String>)`](crate::client::fluent_builders::TerminateProvisionedProduct::provisioned_product_name) / [`set_provisioned_product_name(Option<String>)`](crate::client::fluent_builders::TerminateProvisionedProduct::set_provisioned_product_name): <p>The name of the provisioned product. You cannot specify both <code>ProvisionedProductName</code> and <code>ProvisionedProductId</code>.</p>
    ///   - [`provisioned_product_id(impl Into<String>)`](crate::client::fluent_builders::TerminateProvisionedProduct::provisioned_product_id) / [`set_provisioned_product_id(Option<String>)`](crate::client::fluent_builders::TerminateProvisionedProduct::set_provisioned_product_id): <p>The identifier of the provisioned product. You cannot specify both <code>ProvisionedProductName</code> and <code>ProvisionedProductId</code>.</p>
    ///   - [`terminate_token(impl Into<String>)`](crate::client::fluent_builders::TerminateProvisionedProduct::terminate_token) / [`set_terminate_token(Option<String>)`](crate::client::fluent_builders::TerminateProvisionedProduct::set_terminate_token): <p>An idempotency token that uniquely identifies the termination request. This token is only valid during the termination process. After the provisioned product is terminated, subsequent requests to terminate the same provisioned product always return <b>ResourceNotFound</b>.</p>
    ///   - [`ignore_errors(bool)`](crate::client::fluent_builders::TerminateProvisionedProduct::ignore_errors) / [`set_ignore_errors(bool)`](crate::client::fluent_builders::TerminateProvisionedProduct::set_ignore_errors): <p>If set to true, Service Catalog stops managing the specified provisioned product even if it cannot delete the underlying resources.</p>
    ///   - [`accept_language(impl Into<String>)`](crate::client::fluent_builders::TerminateProvisionedProduct::accept_language) / [`set_accept_language(Option<String>)`](crate::client::fluent_builders::TerminateProvisionedProduct::set_accept_language): <p>The language code.</p>  <ul>   <li> <p> <code>en</code> - English (default)</p> </li>   <li> <p> <code>jp</code> - Japanese</p> </li>   <li> <p> <code>zh</code> - Chinese</p> </li>  </ul>
    ///   - [`retain_physical_resources(bool)`](crate::client::fluent_builders::TerminateProvisionedProduct::retain_physical_resources) / [`set_retain_physical_resources(bool)`](crate::client::fluent_builders::TerminateProvisionedProduct::set_retain_physical_resources): <p>When this boolean parameter is set to true, the <code>TerminateProvisionedProduct</code> API deletes the Service Catalog provisioned product. However, it does not remove the CloudFormation stack, stack set, or the underlying resources of the deleted provisioned product. The default value is false.</p>
    /// - On success, responds with [`TerminateProvisionedProductOutput`](crate::output::TerminateProvisionedProductOutput) with field(s):
    ///   - [`record_detail(Option<RecordDetail>)`](crate::output::TerminateProvisionedProductOutput::record_detail): <p>Information about the result of this request.</p>
    /// - On failure, responds with [`SdkError<TerminateProvisionedProductError>`](crate::error::TerminateProvisionedProductError)
    pub fn terminate_provisioned_product(
        &self,
    ) -> crate::client::fluent_builders::TerminateProvisionedProduct {
        crate::client::fluent_builders::TerminateProvisionedProduct::new(self.handle.clone())
    }
}
