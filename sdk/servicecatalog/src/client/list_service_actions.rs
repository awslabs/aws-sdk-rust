// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListServiceActions`](crate::client::fluent_builders::ListServiceActions) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListServiceActions::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`accept_language(impl Into<String>)`](crate::client::fluent_builders::ListServiceActions::accept_language) / [`set_accept_language(Option<String>)`](crate::client::fluent_builders::ListServiceActions::set_accept_language): <p>The language code.</p>  <ul>   <li> <p> <code>en</code> - English (default)</p> </li>   <li> <p> <code>jp</code> - Japanese</p> </li>   <li> <p> <code>zh</code> - Chinese</p> </li>  </ul>
    ///   - [`page_size(i32)`](crate::client::fluent_builders::ListServiceActions::page_size) / [`set_page_size(i32)`](crate::client::fluent_builders::ListServiceActions::set_page_size): <p>The maximum number of items to return with this call.</p>
    ///   - [`page_token(impl Into<String>)`](crate::client::fluent_builders::ListServiceActions::page_token) / [`set_page_token(Option<String>)`](crate::client::fluent_builders::ListServiceActions::set_page_token): <p>The page token for the next set of results. To retrieve the first set of results, use null.</p>
    /// - On success, responds with [`ListServiceActionsOutput`](crate::output::ListServiceActionsOutput) with field(s):
    ///   - [`service_action_summaries(Option<Vec<ServiceActionSummary>>)`](crate::output::ListServiceActionsOutput::service_action_summaries): <p>An object containing information about the service actions associated with the provisioning artifact.</p>
    ///   - [`next_page_token(Option<String>)`](crate::output::ListServiceActionsOutput::next_page_token): <p>The page token to use to retrieve the next set of results. If there are no additional results, this value is null.</p>
    /// - On failure, responds with [`SdkError<ListServiceActionsError>`](crate::error::ListServiceActionsError)
    pub fn list_service_actions(&self) -> crate::client::fluent_builders::ListServiceActions {
        crate::client::fluent_builders::ListServiceActions::new(self.handle.clone())
    }
}
