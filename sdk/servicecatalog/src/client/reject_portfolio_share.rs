// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`RejectPortfolioShare`](crate::client::fluent_builders::RejectPortfolioShare) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`accept_language(impl Into<String>)`](crate::client::fluent_builders::RejectPortfolioShare::accept_language) / [`set_accept_language(Option<String>)`](crate::client::fluent_builders::RejectPortfolioShare::set_accept_language): <p>The language code.</p>  <ul>   <li> <p> <code>en</code> - English (default)</p> </li>   <li> <p> <code>jp</code> - Japanese</p> </li>   <li> <p> <code>zh</code> - Chinese</p> </li>  </ul>
    ///   - [`portfolio_id(impl Into<String>)`](crate::client::fluent_builders::RejectPortfolioShare::portfolio_id) / [`set_portfolio_id(Option<String>)`](crate::client::fluent_builders::RejectPortfolioShare::set_portfolio_id): <p>The portfolio identifier.</p>
    ///   - [`portfolio_share_type(PortfolioShareType)`](crate::client::fluent_builders::RejectPortfolioShare::portfolio_share_type) / [`set_portfolio_share_type(Option<PortfolioShareType>)`](crate::client::fluent_builders::RejectPortfolioShare::set_portfolio_share_type): <p>The type of shared portfolios to reject. The default is to reject imported portfolios.</p>  <ul>   <li> <p> <code>AWS_ORGANIZATIONS</code> - Reject portfolios shared by the management account of your organization.</p> </li>   <li> <p> <code>IMPORTED</code> - Reject imported portfolios.</p> </li>   <li> <p> <code>AWS_SERVICECATALOG</code> - Not supported. (Throws ResourceNotFoundException.)</p> </li>  </ul>  <p>For example, <code>aws servicecatalog reject-portfolio-share --portfolio-id "port-2qwzkwxt3y5fk" --portfolio-share-type AWS_ORGANIZATIONS</code> </p>
    /// - On success, responds with [`RejectPortfolioShareOutput`](crate::output::RejectPortfolioShareOutput)
    /// - On failure, responds with [`SdkError<RejectPortfolioShareError>`](crate::error::RejectPortfolioShareError)
    pub fn reject_portfolio_share(&self) -> crate::client::fluent_builders::RejectPortfolioShare {
        crate::client::fluent_builders::RejectPortfolioShare::new(self.handle.clone())
    }
}
