// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DisassociateBudgetFromResource`](crate::client::fluent_builders::DisassociateBudgetFromResource) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`budget_name(impl Into<String>)`](crate::client::fluent_builders::DisassociateBudgetFromResource::budget_name) / [`set_budget_name(Option<String>)`](crate::client::fluent_builders::DisassociateBudgetFromResource::set_budget_name): <p>The name of the budget you want to disassociate.</p>
    ///   - [`resource_id(impl Into<String>)`](crate::client::fluent_builders::DisassociateBudgetFromResource::resource_id) / [`set_resource_id(Option<String>)`](crate::client::fluent_builders::DisassociateBudgetFromResource::set_resource_id): <p>The resource identifier you want to disassociate from. Either a portfolio-id or a product-id.</p>
    /// - On success, responds with [`DisassociateBudgetFromResourceOutput`](crate::output::DisassociateBudgetFromResourceOutput)
    /// - On failure, responds with [`SdkError<DisassociateBudgetFromResourceError>`](crate::error::DisassociateBudgetFromResourceError)
    pub fn disassociate_budget_from_resource(
        &self,
    ) -> crate::client::fluent_builders::DisassociateBudgetFromResource {
        crate::client::fluent_builders::DisassociateBudgetFromResource::new(self.handle.clone())
    }
}
