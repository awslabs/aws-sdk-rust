// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeleteProvisionedProductPlan`](crate::operation::delete_provisioned_product_plan::builders::DeleteProvisionedProductPlanFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`accept_language(impl Into<String>)`](crate::operation::delete_provisioned_product_plan::builders::DeleteProvisionedProductPlanFluentBuilder::accept_language) / [`set_accept_language(Option<String>)`](crate::operation::delete_provisioned_product_plan::builders::DeleteProvisionedProductPlanFluentBuilder::set_accept_language):<br>required: **false**<br><p>The language code.</p>  <ul>   <li> <p> <code>jp</code> - Japanese</p> </li>   <li> <p> <code>zh</code> - Chinese</p> </li>  </ul><br>
    ///   - [`plan_id(impl Into<String>)`](crate::operation::delete_provisioned_product_plan::builders::DeleteProvisionedProductPlanFluentBuilder::plan_id) / [`set_plan_id(Option<String>)`](crate::operation::delete_provisioned_product_plan::builders::DeleteProvisionedProductPlanFluentBuilder::set_plan_id):<br>required: **true**<br><p>The plan identifier.</p><br>
    ///   - [`ignore_errors(bool)`](crate::operation::delete_provisioned_product_plan::builders::DeleteProvisionedProductPlanFluentBuilder::ignore_errors) / [`set_ignore_errors(Option<bool>)`](crate::operation::delete_provisioned_product_plan::builders::DeleteProvisionedProductPlanFluentBuilder::set_ignore_errors):<br>required: **false**<br><p>If set to true, Service Catalog stops managing the specified provisioned product even if it cannot delete the underlying resources.</p><br>
    /// - On success, responds with [`DeleteProvisionedProductPlanOutput`](crate::operation::delete_provisioned_product_plan::DeleteProvisionedProductPlanOutput)
    /// - On failure, responds with [`SdkError<DeleteProvisionedProductPlanError>`](crate::operation::delete_provisioned_product_plan::DeleteProvisionedProductPlanError)
    pub fn delete_provisioned_product_plan(
        &self,
    ) -> crate::operation::delete_provisioned_product_plan::builders::DeleteProvisionedProductPlanFluentBuilder {
        crate::operation::delete_provisioned_product_plan::builders::DeleteProvisionedProductPlanFluentBuilder::new(self.handle.clone())
    }
}
