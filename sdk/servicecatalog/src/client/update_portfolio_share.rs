// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdatePortfolioShare`](crate::operation::update_portfolio_share::builders::UpdatePortfolioShareFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`accept_language(impl Into<String>)`](crate::operation::update_portfolio_share::builders::UpdatePortfolioShareFluentBuilder::accept_language) / [`set_accept_language(Option<String>)`](crate::operation::update_portfolio_share::builders::UpdatePortfolioShareFluentBuilder::set_accept_language):<br>required: **false**<br><p>The language code.</p>  <ul>   <li> <p> <code>jp</code> - Japanese</p> </li>   <li> <p> <code>zh</code> - Chinese</p> </li>  </ul><br>
    ///   - [`portfolio_id(impl Into<String>)`](crate::operation::update_portfolio_share::builders::UpdatePortfolioShareFluentBuilder::portfolio_id) / [`set_portfolio_id(Option<String>)`](crate::operation::update_portfolio_share::builders::UpdatePortfolioShareFluentBuilder::set_portfolio_id):<br>required: **true**<br><p>The unique identifier of the portfolio for which the share will be updated.</p><br>
    ///   - [`account_id(impl Into<String>)`](crate::operation::update_portfolio_share::builders::UpdatePortfolioShareFluentBuilder::account_id) / [`set_account_id(Option<String>)`](crate::operation::update_portfolio_share::builders::UpdatePortfolioShareFluentBuilder::set_account_id):<br>required: **false**<br><p>The Amazon Web Services account Id of the recipient account. This field is required when updating an external account to account type share.</p><br>
    ///   - [`organization_node(OrganizationNode)`](crate::operation::update_portfolio_share::builders::UpdatePortfolioShareFluentBuilder::organization_node) / [`set_organization_node(Option<OrganizationNode>)`](crate::operation::update_portfolio_share::builders::UpdatePortfolioShareFluentBuilder::set_organization_node):<br>required: **false**<br><p>Information about the organization node.</p><br>
    ///   - [`share_tag_options(bool)`](crate::operation::update_portfolio_share::builders::UpdatePortfolioShareFluentBuilder::share_tag_options) / [`set_share_tag_options(Option<bool>)`](crate::operation::update_portfolio_share::builders::UpdatePortfolioShareFluentBuilder::set_share_tag_options):<br>required: **false**<br><p>Enables or disables <code>TagOptions</code> sharing for the portfolio share. If this field is not provided, the current state of TagOptions sharing on the portfolio share will not be modified.</p><br>
    ///   - [`share_principals(bool)`](crate::operation::update_portfolio_share::builders::UpdatePortfolioShareFluentBuilder::share_principals) / [`set_share_principals(Option<bool>)`](crate::operation::update_portfolio_share::builders::UpdatePortfolioShareFluentBuilder::set_share_principals):<br>required: **false**<br><p>A flag to enables or disables <code>Principals</code> sharing in the portfolio. If this field is not provided, the current state of the <code>Principals</code> sharing on the portfolio share will not be modified. </p><br>
    /// - On success, responds with [`UpdatePortfolioShareOutput`](crate::operation::update_portfolio_share::UpdatePortfolioShareOutput) with field(s):
    ///   - [`portfolio_share_token(Option<String>)`](crate::operation::update_portfolio_share::UpdatePortfolioShareOutput::portfolio_share_token): <p>The token that tracks the status of the <code>UpdatePortfolioShare</code> operation for external account to account or organizational type sharing.</p>
    ///   - [`status(Option<ShareStatus>)`](crate::operation::update_portfolio_share::UpdatePortfolioShareOutput::status): <p>The status of <code>UpdatePortfolioShare</code> operation. You can also obtain the operation status using <code>DescribePortfolioShareStatus</code> API. </p>
    /// - On failure, responds with [`SdkError<UpdatePortfolioShareError>`](crate::operation::update_portfolio_share::UpdatePortfolioShareError)
    pub fn update_portfolio_share(&self) -> crate::operation::update_portfolio_share::builders::UpdatePortfolioShareFluentBuilder {
        crate::operation::update_portfolio_share::builders::UpdatePortfolioShareFluentBuilder::new(self.handle.clone())
    }
}
