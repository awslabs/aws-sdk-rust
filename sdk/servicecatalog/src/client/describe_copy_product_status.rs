// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeCopyProductStatus`](crate::client::fluent_builders::DescribeCopyProductStatus) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`accept_language(impl Into<String>)`](crate::client::fluent_builders::DescribeCopyProductStatus::accept_language) / [`set_accept_language(Option<String>)`](crate::client::fluent_builders::DescribeCopyProductStatus::set_accept_language): <p>The language code.</p>  <ul>   <li> <p> <code>en</code> - English (default)</p> </li>   <li> <p> <code>jp</code> - Japanese</p> </li>   <li> <p> <code>zh</code> - Chinese</p> </li>  </ul>
    ///   - [`copy_product_token(impl Into<String>)`](crate::client::fluent_builders::DescribeCopyProductStatus::copy_product_token) / [`set_copy_product_token(Option<String>)`](crate::client::fluent_builders::DescribeCopyProductStatus::set_copy_product_token): <p>The token for the copy product operation. This token is returned by <code>CopyProduct</code>.</p>
    /// - On success, responds with [`DescribeCopyProductStatusOutput`](crate::output::DescribeCopyProductStatusOutput) with field(s):
    ///   - [`copy_product_status(Option<CopyProductStatus>)`](crate::output::DescribeCopyProductStatusOutput::copy_product_status): <p>The status of the copy product operation.</p>
    ///   - [`target_product_id(Option<String>)`](crate::output::DescribeCopyProductStatusOutput::target_product_id): <p>The identifier of the copied product.</p>
    ///   - [`status_detail(Option<String>)`](crate::output::DescribeCopyProductStatusOutput::status_detail): <p>The status message.</p>
    /// - On failure, responds with [`SdkError<DescribeCopyProductStatusError>`](crate::error::DescribeCopyProductStatusError)
    pub fn describe_copy_product_status(
        &self,
    ) -> crate::client::fluent_builders::DescribeCopyProductStatus {
        crate::client::fluent_builders::DescribeCopyProductStatus::new(self.handle.clone())
    }
}
