// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateProvisionedProductPlan`](crate::operation::create_provisioned_product_plan::builders::CreateProvisionedProductPlanFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`accept_language(impl Into<String>)`](crate::operation::create_provisioned_product_plan::builders::CreateProvisionedProductPlanFluentBuilder::accept_language) / [`set_accept_language(Option<String>)`](crate::operation::create_provisioned_product_plan::builders::CreateProvisionedProductPlanFluentBuilder::set_accept_language):<br>required: **false**<br><p>The language code.</p>  <ul>   <li> <p> <code>jp</code> - Japanese</p> </li>   <li> <p> <code>zh</code> - Chinese</p> </li>  </ul><br>
    ///   - [`plan_name(impl Into<String>)`](crate::operation::create_provisioned_product_plan::builders::CreateProvisionedProductPlanFluentBuilder::plan_name) / [`set_plan_name(Option<String>)`](crate::operation::create_provisioned_product_plan::builders::CreateProvisionedProductPlanFluentBuilder::set_plan_name):<br>required: **true**<br><p>The name of the plan.</p><br>
    ///   - [`plan_type(ProvisionedProductPlanType)`](crate::operation::create_provisioned_product_plan::builders::CreateProvisionedProductPlanFluentBuilder::plan_type) / [`set_plan_type(Option<ProvisionedProductPlanType>)`](crate::operation::create_provisioned_product_plan::builders::CreateProvisionedProductPlanFluentBuilder::set_plan_type):<br>required: **true**<br><p>The plan type.</p><br>
    ///   - [`notification_arns(impl Into<String>)`](crate::operation::create_provisioned_product_plan::builders::CreateProvisionedProductPlanFluentBuilder::notification_arns) / [`set_notification_arns(Option<Vec::<String>>)`](crate::operation::create_provisioned_product_plan::builders::CreateProvisionedProductPlanFluentBuilder::set_notification_arns):<br>required: **false**<br><p>Passed to CloudFormation. The SNS topic ARNs to which to publish stack-related events.</p><br>
    ///   - [`path_id(impl Into<String>)`](crate::operation::create_provisioned_product_plan::builders::CreateProvisionedProductPlanFluentBuilder::path_id) / [`set_path_id(Option<String>)`](crate::operation::create_provisioned_product_plan::builders::CreateProvisionedProductPlanFluentBuilder::set_path_id):<br>required: **false**<br><p>The path identifier of the product. This value is optional if the product has a default path, and required if the product has more than one path. To list the paths for a product, use <code>ListLaunchPaths</code>.</p><br>
    ///   - [`product_id(impl Into<String>)`](crate::operation::create_provisioned_product_plan::builders::CreateProvisionedProductPlanFluentBuilder::product_id) / [`set_product_id(Option<String>)`](crate::operation::create_provisioned_product_plan::builders::CreateProvisionedProductPlanFluentBuilder::set_product_id):<br>required: **true**<br><p>The product identifier.</p><br>
    ///   - [`provisioned_product_name(impl Into<String>)`](crate::operation::create_provisioned_product_plan::builders::CreateProvisionedProductPlanFluentBuilder::provisioned_product_name) / [`set_provisioned_product_name(Option<String>)`](crate::operation::create_provisioned_product_plan::builders::CreateProvisionedProductPlanFluentBuilder::set_provisioned_product_name):<br>required: **true**<br><p>A user-friendly name for the provisioned product. This value must be unique for the Amazon Web Services account and cannot be updated after the product is provisioned.</p><br>
    ///   - [`provisioning_artifact_id(impl Into<String>)`](crate::operation::create_provisioned_product_plan::builders::CreateProvisionedProductPlanFluentBuilder::provisioning_artifact_id) / [`set_provisioning_artifact_id(Option<String>)`](crate::operation::create_provisioned_product_plan::builders::CreateProvisionedProductPlanFluentBuilder::set_provisioning_artifact_id):<br>required: **true**<br><p>The identifier of the provisioning artifact.</p><br>
    ///   - [`provisioning_parameters(UpdateProvisioningParameter)`](crate::operation::create_provisioned_product_plan::builders::CreateProvisionedProductPlanFluentBuilder::provisioning_parameters) / [`set_provisioning_parameters(Option<Vec::<UpdateProvisioningParameter>>)`](crate::operation::create_provisioned_product_plan::builders::CreateProvisionedProductPlanFluentBuilder::set_provisioning_parameters):<br>required: **false**<br><p>Parameters specified by the administrator that are required for provisioning the product.</p><br>
    ///   - [`idempotency_token(impl Into<String>)`](crate::operation::create_provisioned_product_plan::builders::CreateProvisionedProductPlanFluentBuilder::idempotency_token) / [`set_idempotency_token(Option<String>)`](crate::operation::create_provisioned_product_plan::builders::CreateProvisionedProductPlanFluentBuilder::set_idempotency_token):<br>required: **true**<br><p>A unique identifier that you provide to ensure idempotency. If multiple requests differ only by the idempotency token, the same response is returned for each repeated request.</p><br>
    ///   - [`tags(Tag)`](crate::operation::create_provisioned_product_plan::builders::CreateProvisionedProductPlanFluentBuilder::tags) / [`set_tags(Option<Vec::<Tag>>)`](crate::operation::create_provisioned_product_plan::builders::CreateProvisionedProductPlanFluentBuilder::set_tags):<br>required: **false**<br><p>One or more tags.</p>  <p>If the plan is for an existing provisioned product, the product must have a <code>RESOURCE_UPDATE</code> constraint with <code>TagUpdatesOnProvisionedProduct</code> set to <code>ALLOWED</code> to allow tag updates.</p><br>
    /// - On success, responds with [`CreateProvisionedProductPlanOutput`](crate::operation::create_provisioned_product_plan::CreateProvisionedProductPlanOutput) with field(s):
    ///   - [`plan_name(Option<String>)`](crate::operation::create_provisioned_product_plan::CreateProvisionedProductPlanOutput::plan_name): <p>The name of the plan.</p>
    ///   - [`plan_id(Option<String>)`](crate::operation::create_provisioned_product_plan::CreateProvisionedProductPlanOutput::plan_id): <p>The plan identifier.</p>
    ///   - [`provision_product_id(Option<String>)`](crate::operation::create_provisioned_product_plan::CreateProvisionedProductPlanOutput::provision_product_id): <p>The product identifier.</p>
    ///   - [`provisioned_product_name(Option<String>)`](crate::operation::create_provisioned_product_plan::CreateProvisionedProductPlanOutput::provisioned_product_name): <p>The user-friendly name of the provisioned product.</p>
    ///   - [`provisioning_artifact_id(Option<String>)`](crate::operation::create_provisioned_product_plan::CreateProvisionedProductPlanOutput::provisioning_artifact_id): <p>The identifier of the provisioning artifact.</p>
    /// - On failure, responds with [`SdkError<CreateProvisionedProductPlanError>`](crate::operation::create_provisioned_product_plan::CreateProvisionedProductPlanError)
    pub fn create_provisioned_product_plan(
        &self,
    ) -> crate::operation::create_provisioned_product_plan::builders::CreateProvisionedProductPlanFluentBuilder {
        crate::operation::create_provisioned_product_plan::builders::CreateProvisionedProductPlanFluentBuilder::new(self.handle.clone())
    }
}
