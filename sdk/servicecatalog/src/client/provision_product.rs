// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ProvisionProduct`](crate::operation::provision_product::builders::ProvisionProductFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`accept_language(impl Into<String>)`](crate::operation::provision_product::builders::ProvisionProductFluentBuilder::accept_language) / [`set_accept_language(Option<String>)`](crate::operation::provision_product::builders::ProvisionProductFluentBuilder::set_accept_language):<br>required: **false**<br><p>The language code.</p>  <ul>   <li> <p> <code>jp</code> - Japanese</p> </li>   <li> <p> <code>zh</code> - Chinese</p> </li>  </ul><br>
    ///   - [`product_id(impl Into<String>)`](crate::operation::provision_product::builders::ProvisionProductFluentBuilder::product_id) / [`set_product_id(Option<String>)`](crate::operation::provision_product::builders::ProvisionProductFluentBuilder::set_product_id):<br>required: **false**<br><p>The product identifier. You must provide the name or ID, but not both.</p><br>
    ///   - [`product_name(impl Into<String>)`](crate::operation::provision_product::builders::ProvisionProductFluentBuilder::product_name) / [`set_product_name(Option<String>)`](crate::operation::provision_product::builders::ProvisionProductFluentBuilder::set_product_name):<br>required: **false**<br><p>The name of the product. You must provide the name or ID, but not both.</p><br>
    ///   - [`provisioning_artifact_id(impl Into<String>)`](crate::operation::provision_product::builders::ProvisionProductFluentBuilder::provisioning_artifact_id) / [`set_provisioning_artifact_id(Option<String>)`](crate::operation::provision_product::builders::ProvisionProductFluentBuilder::set_provisioning_artifact_id):<br>required: **false**<br><p>The identifier of the provisioning artifact. You must provide the name or ID, but not both.</p><br>
    ///   - [`provisioning_artifact_name(impl Into<String>)`](crate::operation::provision_product::builders::ProvisionProductFluentBuilder::provisioning_artifact_name) / [`set_provisioning_artifact_name(Option<String>)`](crate::operation::provision_product::builders::ProvisionProductFluentBuilder::set_provisioning_artifact_name):<br>required: **false**<br><p>The name of the provisioning artifact. You must provide the name or ID, but not both.</p><br>
    ///   - [`path_id(impl Into<String>)`](crate::operation::provision_product::builders::ProvisionProductFluentBuilder::path_id) / [`set_path_id(Option<String>)`](crate::operation::provision_product::builders::ProvisionProductFluentBuilder::set_path_id):<br>required: **false**<br><p>The path identifier of the product. This value is optional if the product has a default path, and required if the product has more than one path. To list the paths for a product, use <code>ListLaunchPaths</code>. You must provide the name or ID, but not both.</p><br>
    ///   - [`path_name(impl Into<String>)`](crate::operation::provision_product::builders::ProvisionProductFluentBuilder::path_name) / [`set_path_name(Option<String>)`](crate::operation::provision_product::builders::ProvisionProductFluentBuilder::set_path_name):<br>required: **false**<br><p>The name of the path. You must provide the name or ID, but not both.</p><br>
    ///   - [`provisioned_product_name(impl Into<String>)`](crate::operation::provision_product::builders::ProvisionProductFluentBuilder::provisioned_product_name) / [`set_provisioned_product_name(Option<String>)`](crate::operation::provision_product::builders::ProvisionProductFluentBuilder::set_provisioned_product_name):<br>required: **true**<br><p>A user-friendly name for the provisioned product. This value must be unique for the Amazon Web Services account and cannot be updated after the product is provisioned.</p><br>
    ///   - [`provisioning_parameters(ProvisioningParameter)`](crate::operation::provision_product::builders::ProvisionProductFluentBuilder::provisioning_parameters) / [`set_provisioning_parameters(Option<Vec::<ProvisioningParameter>>)`](crate::operation::provision_product::builders::ProvisionProductFluentBuilder::set_provisioning_parameters):<br>required: **false**<br><p>Parameters specified by the administrator that are required for provisioning the product.</p><br>
    ///   - [`provisioning_preferences(ProvisioningPreferences)`](crate::operation::provision_product::builders::ProvisionProductFluentBuilder::provisioning_preferences) / [`set_provisioning_preferences(Option<ProvisioningPreferences>)`](crate::operation::provision_product::builders::ProvisionProductFluentBuilder::set_provisioning_preferences):<br>required: **false**<br><p>An object that contains information about the provisioning preferences for a stack set.</p><br>
    ///   - [`tags(Tag)`](crate::operation::provision_product::builders::ProvisionProductFluentBuilder::tags) / [`set_tags(Option<Vec::<Tag>>)`](crate::operation::provision_product::builders::ProvisionProductFluentBuilder::set_tags):<br>required: **false**<br><p>One or more tags.</p><br>
    ///   - [`notification_arns(impl Into<String>)`](crate::operation::provision_product::builders::ProvisionProductFluentBuilder::notification_arns) / [`set_notification_arns(Option<Vec::<String>>)`](crate::operation::provision_product::builders::ProvisionProductFluentBuilder::set_notification_arns):<br>required: **false**<br><p>Passed to CloudFormation. The SNS topic ARNs to which to publish stack-related events.</p><br>
    ///   - [`provision_token(impl Into<String>)`](crate::operation::provision_product::builders::ProvisionProductFluentBuilder::provision_token) / [`set_provision_token(Option<String>)`](crate::operation::provision_product::builders::ProvisionProductFluentBuilder::set_provision_token):<br>required: **true**<br><p>An idempotency token that uniquely identifies the provisioning request.</p><br>
    /// - On success, responds with [`ProvisionProductOutput`](crate::operation::provision_product::ProvisionProductOutput) with field(s):
    ///   - [`record_detail(Option<RecordDetail>)`](crate::operation::provision_product::ProvisionProductOutput::record_detail): <p>Information about the result of provisioning the product.</p>
    /// - On failure, responds with [`SdkError<ProvisionProductError>`](crate::operation::provision_product::ProvisionProductError)
    pub fn provision_product(&self) -> crate::operation::provision_product::builders::ProvisionProductFluentBuilder {
        crate::operation::provision_product::builders::ProvisionProductFluentBuilder::new(self.handle.clone())
    }
}
