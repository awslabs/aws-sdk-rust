// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeProvisionedProduct`](crate::client::fluent_builders::DescribeProvisionedProduct) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`accept_language(impl Into<String>)`](crate::client::fluent_builders::DescribeProvisionedProduct::accept_language) / [`set_accept_language(Option<String>)`](crate::client::fluent_builders::DescribeProvisionedProduct::set_accept_language): <p>The language code.</p>  <ul>   <li> <p> <code>en</code> - English (default)</p> </li>   <li> <p> <code>jp</code> - Japanese</p> </li>   <li> <p> <code>zh</code> - Chinese</p> </li>  </ul>
    ///   - [`id(impl Into<String>)`](crate::client::fluent_builders::DescribeProvisionedProduct::id) / [`set_id(Option<String>)`](crate::client::fluent_builders::DescribeProvisionedProduct::set_id): <p>The provisioned product identifier. You must provide the name or ID, but not both.</p>  <p>If you do not provide a name or ID, or you provide both name and ID, an <code>InvalidParametersException</code> will occur.</p>
    ///   - [`name(impl Into<String>)`](crate::client::fluent_builders::DescribeProvisionedProduct::name) / [`set_name(Option<String>)`](crate::client::fluent_builders::DescribeProvisionedProduct::set_name): <p>The name of the provisioned product. You must provide the name or ID, but not both.</p>  <p>If you do not provide a name or ID, or you provide both name and ID, an <code>InvalidParametersException</code> will occur.</p>
    /// - On success, responds with [`DescribeProvisionedProductOutput`](crate::output::DescribeProvisionedProductOutput) with field(s):
    ///   - [`provisioned_product_detail(Option<ProvisionedProductDetail>)`](crate::output::DescribeProvisionedProductOutput::provisioned_product_detail): <p>Information about the provisioned product.</p>
    ///   - [`cloud_watch_dashboards(Option<Vec<CloudWatchDashboard>>)`](crate::output::DescribeProvisionedProductOutput::cloud_watch_dashboards): <p>Any CloudWatch dashboards that were created when provisioning the product.</p>
    /// - On failure, responds with [`SdkError<DescribeProvisionedProductError>`](crate::error::DescribeProvisionedProductError)
    pub fn describe_provisioned_product(
        &self,
    ) -> crate::client::fluent_builders::DescribeProvisionedProduct {
        crate::client::fluent_builders::DescribeProvisionedProduct::new(self.handle.clone())
    }
}
