// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeProvisioningParameters`](crate::operation::describe_provisioning_parameters::builders::DescribeProvisioningParametersFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`accept_language(impl Into<String>)`](crate::operation::describe_provisioning_parameters::builders::DescribeProvisioningParametersFluentBuilder::accept_language) / [`set_accept_language(Option<String>)`](crate::operation::describe_provisioning_parameters::builders::DescribeProvisioningParametersFluentBuilder::set_accept_language): <p>The language code.</p>  <ul>   <li> <p> <code>en</code> - English (default)</p> </li>   <li> <p> <code>jp</code> - Japanese</p> </li>   <li> <p> <code>zh</code> - Chinese</p> </li>  </ul>
    ///   - [`product_id(impl Into<String>)`](crate::operation::describe_provisioning_parameters::builders::DescribeProvisioningParametersFluentBuilder::product_id) / [`set_product_id(Option<String>)`](crate::operation::describe_provisioning_parameters::builders::DescribeProvisioningParametersFluentBuilder::set_product_id): <p>The product identifier. You must provide the product name or ID, but not both.</p>
    ///   - [`product_name(impl Into<String>)`](crate::operation::describe_provisioning_parameters::builders::DescribeProvisioningParametersFluentBuilder::product_name) / [`set_product_name(Option<String>)`](crate::operation::describe_provisioning_parameters::builders::DescribeProvisioningParametersFluentBuilder::set_product_name): <p>The name of the product. You must provide the name or ID, but not both.</p>
    ///   - [`provisioning_artifact_id(impl Into<String>)`](crate::operation::describe_provisioning_parameters::builders::DescribeProvisioningParametersFluentBuilder::provisioning_artifact_id) / [`set_provisioning_artifact_id(Option<String>)`](crate::operation::describe_provisioning_parameters::builders::DescribeProvisioningParametersFluentBuilder::set_provisioning_artifact_id): <p>The identifier of the provisioning artifact. You must provide the name or ID, but not both.</p>
    ///   - [`provisioning_artifact_name(impl Into<String>)`](crate::operation::describe_provisioning_parameters::builders::DescribeProvisioningParametersFluentBuilder::provisioning_artifact_name) / [`set_provisioning_artifact_name(Option<String>)`](crate::operation::describe_provisioning_parameters::builders::DescribeProvisioningParametersFluentBuilder::set_provisioning_artifact_name): <p>The name of the provisioning artifact. You must provide the name or ID, but not both.</p>
    ///   - [`path_id(impl Into<String>)`](crate::operation::describe_provisioning_parameters::builders::DescribeProvisioningParametersFluentBuilder::path_id) / [`set_path_id(Option<String>)`](crate::operation::describe_provisioning_parameters::builders::DescribeProvisioningParametersFluentBuilder::set_path_id): <p>The path identifier of the product. This value is optional if the product has a default path, and required if the product has more than one path. To list the paths for a product, use <code>ListLaunchPaths</code>. You must provide the name or ID, but not both.</p>
    ///   - [`path_name(impl Into<String>)`](crate::operation::describe_provisioning_parameters::builders::DescribeProvisioningParametersFluentBuilder::path_name) / [`set_path_name(Option<String>)`](crate::operation::describe_provisioning_parameters::builders::DescribeProvisioningParametersFluentBuilder::set_path_name): <p>The name of the path. You must provide the name or ID, but not both.</p>
    /// - On success, responds with [`DescribeProvisioningParametersOutput`](crate::operation::describe_provisioning_parameters::DescribeProvisioningParametersOutput) with field(s):
    ///   - [`provisioning_artifact_parameters(Option<Vec<ProvisioningArtifactParameter>>)`](crate::operation::describe_provisioning_parameters::DescribeProvisioningParametersOutput::provisioning_artifact_parameters): <p>Information about the parameters used to provision the product.</p>
    ///   - [`constraint_summaries(Option<Vec<ConstraintSummary>>)`](crate::operation::describe_provisioning_parameters::DescribeProvisioningParametersOutput::constraint_summaries): <p>Information about the constraints used to provision the product.</p>
    ///   - [`usage_instructions(Option<Vec<UsageInstruction>>)`](crate::operation::describe_provisioning_parameters::DescribeProvisioningParametersOutput::usage_instructions): <p>Any additional metadata specifically related to the provisioning of the product. For example, see the <code>Version</code> field of the CloudFormation template.</p>
    ///   - [`tag_options(Option<Vec<TagOptionSummary>>)`](crate::operation::describe_provisioning_parameters::DescribeProvisioningParametersOutput::tag_options): <p>Information about the TagOptions associated with the resource.</p>
    ///   - [`provisioning_artifact_preferences(Option<ProvisioningArtifactPreferences>)`](crate::operation::describe_provisioning_parameters::DescribeProvisioningParametersOutput::provisioning_artifact_preferences): <p>An object that contains information about preferences, such as Regions and accounts, for the provisioning artifact.</p>
    ///   - [`provisioning_artifact_outputs(Option<Vec<ProvisioningArtifactOutput>>)`](crate::operation::describe_provisioning_parameters::DescribeProvisioningParametersOutput::provisioning_artifact_outputs): <p>The output of the provisioning artifact.</p>
    ///   - [`provisioning_artifact_output_keys(Option<Vec<ProvisioningArtifactOutput>>)`](crate::operation::describe_provisioning_parameters::DescribeProvisioningParametersOutput::provisioning_artifact_output_keys): <p>A list of the keys and descriptions of the outputs. These outputs can be referenced from a provisioned product launched from this provisioning artifact.</p>
    /// - On failure, responds with [`SdkError<DescribeProvisioningParametersError>`](crate::operation::describe_provisioning_parameters::DescribeProvisioningParametersError)
    pub fn describe_provisioning_parameters(&self) -> crate::operation::describe_provisioning_parameters::builders::DescribeProvisioningParametersFluentBuilder{
        crate::operation::describe_provisioning_parameters::builders::DescribeProvisioningParametersFluentBuilder::new(self.handle.clone())
    }
}
