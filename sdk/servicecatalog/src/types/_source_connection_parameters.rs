// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Provides connection details.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct SourceConnectionParameters {
    /// <p>Provides <code>ConnectionType</code> details.</p>
    #[doc(hidden)]
    pub code_star: std::option::Option<crate::types::CodeStarParameters>,
}
impl SourceConnectionParameters {
    /// <p>Provides <code>ConnectionType</code> details.</p>
    pub fn code_star(&self) -> std::option::Option<&crate::types::CodeStarParameters> {
        self.code_star.as_ref()
    }
}
impl SourceConnectionParameters {
    /// Creates a new builder-style object to manufacture [`SourceConnectionParameters`](crate::types::SourceConnectionParameters).
    pub fn builder() -> crate::types::builders::SourceConnectionParametersBuilder {
        crate::types::builders::SourceConnectionParametersBuilder::default()
    }
}

/// A builder for [`SourceConnectionParameters`](crate::types::SourceConnectionParameters).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct SourceConnectionParametersBuilder {
    pub(crate) code_star: std::option::Option<crate::types::CodeStarParameters>,
}
impl SourceConnectionParametersBuilder {
    /// <p>Provides <code>ConnectionType</code> details.</p>
    pub fn code_star(mut self, input: crate::types::CodeStarParameters) -> Self {
        self.code_star = Some(input);
        self
    }
    /// <p>Provides <code>ConnectionType</code> details.</p>
    pub fn set_code_star(
        mut self,
        input: std::option::Option<crate::types::CodeStarParameters>,
    ) -> Self {
        self.code_star = input;
        self
    }
    /// Consumes the builder and constructs a [`SourceConnectionParameters`](crate::types::SourceConnectionParameters).
    pub fn build(self) -> crate::types::SourceConnectionParameters {
        crate::types::SourceConnectionParameters {
            code_star: self.code_star,
        }
    }
}
