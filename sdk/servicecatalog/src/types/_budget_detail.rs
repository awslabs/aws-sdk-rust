// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about a budget.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct BudgetDetail {
    /// <p>Name of the associated budget.</p>
    #[doc(hidden)]
    pub budget_name: std::option::Option<std::string::String>,
}
impl BudgetDetail {
    /// <p>Name of the associated budget.</p>
    pub fn budget_name(&self) -> std::option::Option<&str> {
        self.budget_name.as_deref()
    }
}
impl BudgetDetail {
    /// Creates a new builder-style object to manufacture [`BudgetDetail`](crate::types::BudgetDetail).
    pub fn builder() -> crate::types::builders::BudgetDetailBuilder {
        crate::types::builders::BudgetDetailBuilder::default()
    }
}

/// A builder for [`BudgetDetail`](crate::types::BudgetDetail).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct BudgetDetailBuilder {
    pub(crate) budget_name: std::option::Option<std::string::String>,
}
impl BudgetDetailBuilder {
    /// <p>Name of the associated budget.</p>
    pub fn budget_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.budget_name = Some(input.into());
        self
    }
    /// <p>Name of the associated budget.</p>
    pub fn set_budget_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.budget_name = input;
        self
    }
    /// Consumes the builder and constructs a [`BudgetDetail`](crate::types::BudgetDetail).
    pub fn build(self) -> crate::types::BudgetDetail {
        crate::types::BudgetDetail {
            budget_name: self.budget_name,
        }
    }
}
