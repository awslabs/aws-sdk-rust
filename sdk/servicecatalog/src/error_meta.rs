// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[non_exhaustive]
#[derive(std::fmt::Debug)]
pub enum Error {
    DuplicateResourceException(crate::error::DuplicateResourceException),
    InvalidParametersException(crate::error::InvalidParametersException),
    InvalidStateException(crate::error::InvalidStateException),
    LimitExceededException(crate::error::LimitExceededException),
    OperationNotSupportedException(crate::error::OperationNotSupportedException),
    ResourceInUseException(crate::error::ResourceInUseException),
    ResourceNotFoundException(crate::error::ResourceNotFoundException),
    TagOptionNotMigratedException(crate::error::TagOptionNotMigratedException),
    Unhandled(Box<dyn std::error::Error + Send + Sync + 'static>),
}
impl std::fmt::Display for Error {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        match self {
            Error::DuplicateResourceException(inner) => inner.fmt(f),
            Error::InvalidParametersException(inner) => inner.fmt(f),
            Error::InvalidStateException(inner) => inner.fmt(f),
            Error::LimitExceededException(inner) => inner.fmt(f),
            Error::OperationNotSupportedException(inner) => inner.fmt(f),
            Error::ResourceInUseException(inner) => inner.fmt(f),
            Error::ResourceNotFoundException(inner) => inner.fmt(f),
            Error::TagOptionNotMigratedException(inner) => inner.fmt(f),
            Error::Unhandled(inner) => inner.fmt(f),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::AcceptPortfolioShareError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::AcceptPortfolioShareError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::AcceptPortfolioShareErrorKind::InvalidParametersException(inner) => {
                    Error::InvalidParametersException(inner)
                }
                crate::error::AcceptPortfolioShareErrorKind::LimitExceededException(inner) => {
                    Error::LimitExceededException(inner)
                }
                crate::error::AcceptPortfolioShareErrorKind::ResourceNotFoundException(inner) => {
                    Error::ResourceNotFoundException(inner)
                }
                crate::error::AcceptPortfolioShareErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::AssociateBudgetWithResourceError>> for Error {
    fn from(
        err: smithy_http::result::SdkError<crate::error::AssociateBudgetWithResourceError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::AssociateBudgetWithResourceErrorKind::DuplicateResourceException(
                    inner,
                ) => Error::DuplicateResourceException(inner),
                crate::error::AssociateBudgetWithResourceErrorKind::InvalidParametersException(
                    inner,
                ) => Error::InvalidParametersException(inner),
                crate::error::AssociateBudgetWithResourceErrorKind::LimitExceededException(
                    inner,
                ) => Error::LimitExceededException(inner),
                crate::error::AssociateBudgetWithResourceErrorKind::ResourceNotFoundException(
                    inner,
                ) => Error::ResourceNotFoundException(inner),
                crate::error::AssociateBudgetWithResourceErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::AssociatePrincipalWithPortfolioError>>
    for Error
{
    fn from(
        err: smithy_http::result::SdkError<crate::error::AssociatePrincipalWithPortfolioError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::AssociatePrincipalWithPortfolioErrorKind::InvalidParametersException(inner) => Error::InvalidParametersException(inner),
                crate::error::AssociatePrincipalWithPortfolioErrorKind::LimitExceededException(inner) => Error::LimitExceededException(inner),
                crate::error::AssociatePrincipalWithPortfolioErrorKind::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
                crate::error::AssociatePrincipalWithPortfolioErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::AssociateProductWithPortfolioError>>
    for Error
{
    fn from(
        err: smithy_http::result::SdkError<crate::error::AssociateProductWithPortfolioError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::AssociateProductWithPortfolioErrorKind::InvalidParametersException(inner) => Error::InvalidParametersException(inner),
                crate::error::AssociateProductWithPortfolioErrorKind::LimitExceededException(inner) => Error::LimitExceededException(inner),
                crate::error::AssociateProductWithPortfolioErrorKind::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
                crate::error::AssociateProductWithPortfolioErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl
    From<
        smithy_http::result::SdkError<
            crate::error::AssociateServiceActionWithProvisioningArtifactError,
        >,
    > for Error
{
    fn from(
        err: smithy_http::result::SdkError<
            crate::error::AssociateServiceActionWithProvisioningArtifactError,
        >,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::AssociateServiceActionWithProvisioningArtifactErrorKind::DuplicateResourceException(inner) => Error::DuplicateResourceException(inner),
                crate::error::AssociateServiceActionWithProvisioningArtifactErrorKind::LimitExceededException(inner) => Error::LimitExceededException(inner),
                crate::error::AssociateServiceActionWithProvisioningArtifactErrorKind::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
                crate::error::AssociateServiceActionWithProvisioningArtifactErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::AssociateTagOptionWithResourceError>>
    for Error
{
    fn from(
        err: smithy_http::result::SdkError<crate::error::AssociateTagOptionWithResourceError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::AssociateTagOptionWithResourceErrorKind::DuplicateResourceException(inner) => Error::DuplicateResourceException(inner),
                crate::error::AssociateTagOptionWithResourceErrorKind::InvalidParametersException(inner) => Error::InvalidParametersException(inner),
                crate::error::AssociateTagOptionWithResourceErrorKind::InvalidStateException(inner) => Error::InvalidStateException(inner),
                crate::error::AssociateTagOptionWithResourceErrorKind::LimitExceededException(inner) => Error::LimitExceededException(inner),
                crate::error::AssociateTagOptionWithResourceErrorKind::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
                crate::error::AssociateTagOptionWithResourceErrorKind::TagOptionNotMigratedException(inner) => Error::TagOptionNotMigratedException(inner),
                crate::error::AssociateTagOptionWithResourceErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl
    From<
        smithy_http::result::SdkError<
            crate::error::BatchAssociateServiceActionWithProvisioningArtifactError,
        >,
    > for Error
{
    fn from(
        err: smithy_http::result::SdkError<
            crate::error::BatchAssociateServiceActionWithProvisioningArtifactError,
        >,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::BatchAssociateServiceActionWithProvisioningArtifactErrorKind::InvalidParametersException(inner) => Error::InvalidParametersException(inner),
                crate::error::BatchAssociateServiceActionWithProvisioningArtifactErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl
    From<
        smithy_http::result::SdkError<
            crate::error::BatchDisassociateServiceActionFromProvisioningArtifactError,
        >,
    > for Error
{
    fn from(
        err: smithy_http::result::SdkError<
            crate::error::BatchDisassociateServiceActionFromProvisioningArtifactError,
        >,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::BatchDisassociateServiceActionFromProvisioningArtifactErrorKind::InvalidParametersException(inner) => Error::InvalidParametersException(inner),
                crate::error::BatchDisassociateServiceActionFromProvisioningArtifactErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::CopyProductError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::CopyProductError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::CopyProductErrorKind::InvalidParametersException(inner) => {
                    Error::InvalidParametersException(inner)
                }
                crate::error::CopyProductErrorKind::ResourceNotFoundException(inner) => {
                    Error::ResourceNotFoundException(inner)
                }
                crate::error::CopyProductErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::CreateConstraintError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::CreateConstraintError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::CreateConstraintErrorKind::DuplicateResourceException(inner) => {
                    Error::DuplicateResourceException(inner)
                }
                crate::error::CreateConstraintErrorKind::InvalidParametersException(inner) => {
                    Error::InvalidParametersException(inner)
                }
                crate::error::CreateConstraintErrorKind::LimitExceededException(inner) => {
                    Error::LimitExceededException(inner)
                }
                crate::error::CreateConstraintErrorKind::ResourceNotFoundException(inner) => {
                    Error::ResourceNotFoundException(inner)
                }
                crate::error::CreateConstraintErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::CreatePortfolioError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::CreatePortfolioError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::CreatePortfolioErrorKind::InvalidParametersException(inner) => {
                    Error::InvalidParametersException(inner)
                }
                crate::error::CreatePortfolioErrorKind::LimitExceededException(inner) => {
                    Error::LimitExceededException(inner)
                }
                crate::error::CreatePortfolioErrorKind::TagOptionNotMigratedException(inner) => {
                    Error::TagOptionNotMigratedException(inner)
                }
                crate::error::CreatePortfolioErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::CreatePortfolioShareError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::CreatePortfolioShareError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::CreatePortfolioShareErrorKind::InvalidParametersException(inner) => {
                    Error::InvalidParametersException(inner)
                }
                crate::error::CreatePortfolioShareErrorKind::InvalidStateException(inner) => {
                    Error::InvalidStateException(inner)
                }
                crate::error::CreatePortfolioShareErrorKind::LimitExceededException(inner) => {
                    Error::LimitExceededException(inner)
                }
                crate::error::CreatePortfolioShareErrorKind::OperationNotSupportedException(
                    inner,
                ) => Error::OperationNotSupportedException(inner),
                crate::error::CreatePortfolioShareErrorKind::ResourceNotFoundException(inner) => {
                    Error::ResourceNotFoundException(inner)
                }
                crate::error::CreatePortfolioShareErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::CreateProductError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::CreateProductError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::CreateProductErrorKind::InvalidParametersException(inner) => {
                    Error::InvalidParametersException(inner)
                }
                crate::error::CreateProductErrorKind::LimitExceededException(inner) => {
                    Error::LimitExceededException(inner)
                }
                crate::error::CreateProductErrorKind::TagOptionNotMigratedException(inner) => {
                    Error::TagOptionNotMigratedException(inner)
                }
                crate::error::CreateProductErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::CreateProvisionedProductPlanError>>
    for Error
{
    fn from(
        err: smithy_http::result::SdkError<crate::error::CreateProvisionedProductPlanError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::CreateProvisionedProductPlanErrorKind::InvalidParametersException(
                    inner,
                ) => Error::InvalidParametersException(inner),
                crate::error::CreateProvisionedProductPlanErrorKind::InvalidStateException(
                    inner,
                ) => Error::InvalidStateException(inner),
                crate::error::CreateProvisionedProductPlanErrorKind::ResourceNotFoundException(
                    inner,
                ) => Error::ResourceNotFoundException(inner),
                crate::error::CreateProvisionedProductPlanErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::CreateProvisioningArtifactError>> for Error {
    fn from(
        err: smithy_http::result::SdkError<crate::error::CreateProvisioningArtifactError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::CreateProvisioningArtifactErrorKind::InvalidParametersException(
                    inner,
                ) => Error::InvalidParametersException(inner),
                crate::error::CreateProvisioningArtifactErrorKind::LimitExceededException(
                    inner,
                ) => Error::LimitExceededException(inner),
                crate::error::CreateProvisioningArtifactErrorKind::ResourceNotFoundException(
                    inner,
                ) => Error::ResourceNotFoundException(inner),
                crate::error::CreateProvisioningArtifactErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::CreateServiceActionError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::CreateServiceActionError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::CreateServiceActionErrorKind::InvalidParametersException(inner) => {
                    Error::InvalidParametersException(inner)
                }
                crate::error::CreateServiceActionErrorKind::LimitExceededException(inner) => {
                    Error::LimitExceededException(inner)
                }
                crate::error::CreateServiceActionErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::CreateTagOptionError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::CreateTagOptionError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::CreateTagOptionErrorKind::DuplicateResourceException(inner) => {
                    Error::DuplicateResourceException(inner)
                }
                crate::error::CreateTagOptionErrorKind::LimitExceededException(inner) => {
                    Error::LimitExceededException(inner)
                }
                crate::error::CreateTagOptionErrorKind::TagOptionNotMigratedException(inner) => {
                    Error::TagOptionNotMigratedException(inner)
                }
                crate::error::CreateTagOptionErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DeleteConstraintError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::DeleteConstraintError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::DeleteConstraintErrorKind::InvalidParametersException(inner) => {
                    Error::InvalidParametersException(inner)
                }
                crate::error::DeleteConstraintErrorKind::ResourceNotFoundException(inner) => {
                    Error::ResourceNotFoundException(inner)
                }
                crate::error::DeleteConstraintErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DeletePortfolioError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::DeletePortfolioError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::DeletePortfolioErrorKind::InvalidParametersException(inner) => {
                    Error::InvalidParametersException(inner)
                }
                crate::error::DeletePortfolioErrorKind::ResourceInUseException(inner) => {
                    Error::ResourceInUseException(inner)
                }
                crate::error::DeletePortfolioErrorKind::ResourceNotFoundException(inner) => {
                    Error::ResourceNotFoundException(inner)
                }
                crate::error::DeletePortfolioErrorKind::TagOptionNotMigratedException(inner) => {
                    Error::TagOptionNotMigratedException(inner)
                }
                crate::error::DeletePortfolioErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DeletePortfolioShareError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::DeletePortfolioShareError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::DeletePortfolioShareErrorKind::InvalidParametersException(inner) => {
                    Error::InvalidParametersException(inner)
                }
                crate::error::DeletePortfolioShareErrorKind::InvalidStateException(inner) => {
                    Error::InvalidStateException(inner)
                }
                crate::error::DeletePortfolioShareErrorKind::OperationNotSupportedException(
                    inner,
                ) => Error::OperationNotSupportedException(inner),
                crate::error::DeletePortfolioShareErrorKind::ResourceNotFoundException(inner) => {
                    Error::ResourceNotFoundException(inner)
                }
                crate::error::DeletePortfolioShareErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DeleteProductError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::DeleteProductError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::DeleteProductErrorKind::InvalidParametersException(inner) => {
                    Error::InvalidParametersException(inner)
                }
                crate::error::DeleteProductErrorKind::ResourceInUseException(inner) => {
                    Error::ResourceInUseException(inner)
                }
                crate::error::DeleteProductErrorKind::ResourceNotFoundException(inner) => {
                    Error::ResourceNotFoundException(inner)
                }
                crate::error::DeleteProductErrorKind::TagOptionNotMigratedException(inner) => {
                    Error::TagOptionNotMigratedException(inner)
                }
                crate::error::DeleteProductErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DeleteProvisionedProductPlanError>>
    for Error
{
    fn from(
        err: smithy_http::result::SdkError<crate::error::DeleteProvisionedProductPlanError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::DeleteProvisionedProductPlanErrorKind::InvalidParametersException(
                    inner,
                ) => Error::InvalidParametersException(inner),
                crate::error::DeleteProvisionedProductPlanErrorKind::ResourceNotFoundException(
                    inner,
                ) => Error::ResourceNotFoundException(inner),
                crate::error::DeleteProvisionedProductPlanErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DeleteProvisioningArtifactError>> for Error {
    fn from(
        err: smithy_http::result::SdkError<crate::error::DeleteProvisioningArtifactError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::DeleteProvisioningArtifactErrorKind::InvalidParametersException(
                    inner,
                ) => Error::InvalidParametersException(inner),
                crate::error::DeleteProvisioningArtifactErrorKind::ResourceInUseException(
                    inner,
                ) => Error::ResourceInUseException(inner),
                crate::error::DeleteProvisioningArtifactErrorKind::ResourceNotFoundException(
                    inner,
                ) => Error::ResourceNotFoundException(inner),
                crate::error::DeleteProvisioningArtifactErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DeleteServiceActionError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::DeleteServiceActionError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::DeleteServiceActionErrorKind::ResourceInUseException(inner) => {
                    Error::ResourceInUseException(inner)
                }
                crate::error::DeleteServiceActionErrorKind::ResourceNotFoundException(inner) => {
                    Error::ResourceNotFoundException(inner)
                }
                crate::error::DeleteServiceActionErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DeleteTagOptionError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::DeleteTagOptionError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::DeleteTagOptionErrorKind::ResourceInUseException(inner) => {
                    Error::ResourceInUseException(inner)
                }
                crate::error::DeleteTagOptionErrorKind::ResourceNotFoundException(inner) => {
                    Error::ResourceNotFoundException(inner)
                }
                crate::error::DeleteTagOptionErrorKind::TagOptionNotMigratedException(inner) => {
                    Error::TagOptionNotMigratedException(inner)
                }
                crate::error::DeleteTagOptionErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DescribeConstraintError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::DescribeConstraintError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::DescribeConstraintErrorKind::ResourceNotFoundException(inner) => {
                    Error::ResourceNotFoundException(inner)
                }
                crate::error::DescribeConstraintErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DescribeCopyProductStatusError>> for Error {
    fn from(
        err: smithy_http::result::SdkError<crate::error::DescribeCopyProductStatusError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::DescribeCopyProductStatusErrorKind::ResourceNotFoundException(
                    inner,
                ) => Error::ResourceNotFoundException(inner),
                crate::error::DescribeCopyProductStatusErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DescribePortfolioError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::DescribePortfolioError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::DescribePortfolioErrorKind::ResourceNotFoundException(inner) => {
                    Error::ResourceNotFoundException(inner)
                }
                crate::error::DescribePortfolioErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DescribePortfolioSharesError>> for Error {
    fn from(
        err: smithy_http::result::SdkError<crate::error::DescribePortfolioSharesError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::DescribePortfolioSharesErrorKind::InvalidParametersException(
                    inner,
                ) => Error::InvalidParametersException(inner),
                crate::error::DescribePortfolioSharesErrorKind::ResourceNotFoundException(
                    inner,
                ) => Error::ResourceNotFoundException(inner),
                crate::error::DescribePortfolioSharesErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DescribePortfolioShareStatusError>>
    for Error
{
    fn from(
        err: smithy_http::result::SdkError<crate::error::DescribePortfolioShareStatusError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::DescribePortfolioShareStatusErrorKind::InvalidParametersException(inner) => Error::InvalidParametersException(inner),
                crate::error::DescribePortfolioShareStatusErrorKind::OperationNotSupportedException(inner) => Error::OperationNotSupportedException(inner),
                crate::error::DescribePortfolioShareStatusErrorKind::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
                crate::error::DescribePortfolioShareStatusErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DescribeProductError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::DescribeProductError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::DescribeProductErrorKind::InvalidParametersException(inner) => {
                    Error::InvalidParametersException(inner)
                }
                crate::error::DescribeProductErrorKind::ResourceNotFoundException(inner) => {
                    Error::ResourceNotFoundException(inner)
                }
                crate::error::DescribeProductErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DescribeProductAsAdminError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::DescribeProductAsAdminError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::DescribeProductAsAdminErrorKind::InvalidParametersException(
                    inner,
                ) => Error::InvalidParametersException(inner),
                crate::error::DescribeProductAsAdminErrorKind::ResourceNotFoundException(inner) => {
                    Error::ResourceNotFoundException(inner)
                }
                crate::error::DescribeProductAsAdminErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DescribeProductViewError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::DescribeProductViewError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::DescribeProductViewErrorKind::InvalidParametersException(inner) => {
                    Error::InvalidParametersException(inner)
                }
                crate::error::DescribeProductViewErrorKind::ResourceNotFoundException(inner) => {
                    Error::ResourceNotFoundException(inner)
                }
                crate::error::DescribeProductViewErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DescribeProvisionedProductError>> for Error {
    fn from(
        err: smithy_http::result::SdkError<crate::error::DescribeProvisionedProductError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::DescribeProvisionedProductErrorKind::InvalidParametersException(
                    inner,
                ) => Error::InvalidParametersException(inner),
                crate::error::DescribeProvisionedProductErrorKind::ResourceNotFoundException(
                    inner,
                ) => Error::ResourceNotFoundException(inner),
                crate::error::DescribeProvisionedProductErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DescribeProvisionedProductPlanError>>
    for Error
{
    fn from(
        err: smithy_http::result::SdkError<crate::error::DescribeProvisionedProductPlanError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::DescribeProvisionedProductPlanErrorKind::InvalidParametersException(inner) => Error::InvalidParametersException(inner),
                crate::error::DescribeProvisionedProductPlanErrorKind::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
                crate::error::DescribeProvisionedProductPlanErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DescribeProvisioningArtifactError>>
    for Error
{
    fn from(
        err: smithy_http::result::SdkError<crate::error::DescribeProvisioningArtifactError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::DescribeProvisioningArtifactErrorKind::InvalidParametersException(
                    inner,
                ) => Error::InvalidParametersException(inner),
                crate::error::DescribeProvisioningArtifactErrorKind::ResourceNotFoundException(
                    inner,
                ) => Error::ResourceNotFoundException(inner),
                crate::error::DescribeProvisioningArtifactErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DescribeProvisioningParametersError>>
    for Error
{
    fn from(
        err: smithy_http::result::SdkError<crate::error::DescribeProvisioningParametersError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::DescribeProvisioningParametersErrorKind::InvalidParametersException(inner) => Error::InvalidParametersException(inner),
                crate::error::DescribeProvisioningParametersErrorKind::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
                crate::error::DescribeProvisioningParametersErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DescribeRecordError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::DescribeRecordError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::DescribeRecordErrorKind::ResourceNotFoundException(inner) => {
                    Error::ResourceNotFoundException(inner)
                }
                crate::error::DescribeRecordErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DescribeServiceActionError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::DescribeServiceActionError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::DescribeServiceActionErrorKind::ResourceNotFoundException(inner) => {
                    Error::ResourceNotFoundException(inner)
                }
                crate::error::DescribeServiceActionErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl
    From<smithy_http::result::SdkError<crate::error::DescribeServiceActionExecutionParametersError>>
    for Error
{
    fn from(
        err: smithy_http::result::SdkError<
            crate::error::DescribeServiceActionExecutionParametersError,
        >,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::DescribeServiceActionExecutionParametersErrorKind::InvalidParametersException(inner) => Error::InvalidParametersException(inner),
                crate::error::DescribeServiceActionExecutionParametersErrorKind::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
                crate::error::DescribeServiceActionExecutionParametersErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DescribeTagOptionError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::DescribeTagOptionError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::DescribeTagOptionErrorKind::ResourceNotFoundException(inner) => {
                    Error::ResourceNotFoundException(inner)
                }
                crate::error::DescribeTagOptionErrorKind::TagOptionNotMigratedException(inner) => {
                    Error::TagOptionNotMigratedException(inner)
                }
                crate::error::DescribeTagOptionErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DisableAWSOrganizationsAccessError>>
    for Error
{
    fn from(
        err: smithy_http::result::SdkError<crate::error::DisableAWSOrganizationsAccessError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::DisableAWSOrganizationsAccessErrorKind::InvalidStateException(inner) => Error::InvalidStateException(inner),
                crate::error::DisableAWSOrganizationsAccessErrorKind::OperationNotSupportedException(inner) => Error::OperationNotSupportedException(inner),
                crate::error::DisableAWSOrganizationsAccessErrorKind::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
                crate::error::DisableAWSOrganizationsAccessErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DisassociateBudgetFromResourceError>>
    for Error
{
    fn from(
        err: smithy_http::result::SdkError<crate::error::DisassociateBudgetFromResourceError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::DisassociateBudgetFromResourceErrorKind::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
                crate::error::DisassociateBudgetFromResourceErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DisassociatePrincipalFromPortfolioError>>
    for Error
{
    fn from(
        err: smithy_http::result::SdkError<crate::error::DisassociatePrincipalFromPortfolioError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::DisassociatePrincipalFromPortfolioErrorKind::InvalidParametersException(inner) => Error::InvalidParametersException(inner),
                crate::error::DisassociatePrincipalFromPortfolioErrorKind::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
                crate::error::DisassociatePrincipalFromPortfolioErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DisassociateProductFromPortfolioError>>
    for Error
{
    fn from(
        err: smithy_http::result::SdkError<crate::error::DisassociateProductFromPortfolioError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::DisassociateProductFromPortfolioErrorKind::InvalidParametersException(inner) => Error::InvalidParametersException(inner),
                crate::error::DisassociateProductFromPortfolioErrorKind::ResourceInUseException(inner) => Error::ResourceInUseException(inner),
                crate::error::DisassociateProductFromPortfolioErrorKind::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
                crate::error::DisassociateProductFromPortfolioErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl
    From<
        smithy_http::result::SdkError<
            crate::error::DisassociateServiceActionFromProvisioningArtifactError,
        >,
    > for Error
{
    fn from(
        err: smithy_http::result::SdkError<
            crate::error::DisassociateServiceActionFromProvisioningArtifactError,
        >,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::DisassociateServiceActionFromProvisioningArtifactErrorKind::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
                crate::error::DisassociateServiceActionFromProvisioningArtifactErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::DisassociateTagOptionFromResourceError>>
    for Error
{
    fn from(
        err: smithy_http::result::SdkError<crate::error::DisassociateTagOptionFromResourceError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::DisassociateTagOptionFromResourceErrorKind::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
                crate::error::DisassociateTagOptionFromResourceErrorKind::TagOptionNotMigratedException(inner) => Error::TagOptionNotMigratedException(inner),
                crate::error::DisassociateTagOptionFromResourceErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::EnableAWSOrganizationsAccessError>>
    for Error
{
    fn from(
        err: smithy_http::result::SdkError<crate::error::EnableAWSOrganizationsAccessError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::EnableAWSOrganizationsAccessErrorKind::InvalidStateException(inner) => Error::InvalidStateException(inner),
                crate::error::EnableAWSOrganizationsAccessErrorKind::OperationNotSupportedException(inner) => Error::OperationNotSupportedException(inner),
                crate::error::EnableAWSOrganizationsAccessErrorKind::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
                crate::error::EnableAWSOrganizationsAccessErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::ExecuteProvisionedProductPlanError>>
    for Error
{
    fn from(
        err: smithy_http::result::SdkError<crate::error::ExecuteProvisionedProductPlanError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::ExecuteProvisionedProductPlanErrorKind::InvalidParametersException(inner) => Error::InvalidParametersException(inner),
                crate::error::ExecuteProvisionedProductPlanErrorKind::InvalidStateException(inner) => Error::InvalidStateException(inner),
                crate::error::ExecuteProvisionedProductPlanErrorKind::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
                crate::error::ExecuteProvisionedProductPlanErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::ExecuteProvisionedProductServiceActionError>>
    for Error
{
    fn from(
        err: smithy_http::result::SdkError<
            crate::error::ExecuteProvisionedProductServiceActionError,
        >,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::ExecuteProvisionedProductServiceActionErrorKind::InvalidParametersException(inner) => Error::InvalidParametersException(inner),
                crate::error::ExecuteProvisionedProductServiceActionErrorKind::InvalidStateException(inner) => Error::InvalidStateException(inner),
                crate::error::ExecuteProvisionedProductServiceActionErrorKind::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
                crate::error::ExecuteProvisionedProductServiceActionErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::GetAWSOrganizationsAccessStatusError>>
    for Error
{
    fn from(
        err: smithy_http::result::SdkError<crate::error::GetAWSOrganizationsAccessStatusError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::GetAWSOrganizationsAccessStatusErrorKind::OperationNotSupportedException(inner) => Error::OperationNotSupportedException(inner),
                crate::error::GetAWSOrganizationsAccessStatusErrorKind::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
                crate::error::GetAWSOrganizationsAccessStatusErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::GetProvisionedProductOutputsError>>
    for Error
{
    fn from(
        err: smithy_http::result::SdkError<crate::error::GetProvisionedProductOutputsError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::GetProvisionedProductOutputsErrorKind::InvalidParametersException(
                    inner,
                ) => Error::InvalidParametersException(inner),
                crate::error::GetProvisionedProductOutputsErrorKind::ResourceNotFoundException(
                    inner,
                ) => Error::ResourceNotFoundException(inner),
                crate::error::GetProvisionedProductOutputsErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::ImportAsProvisionedProductError>> for Error {
    fn from(
        err: smithy_http::result::SdkError<crate::error::ImportAsProvisionedProductError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::ImportAsProvisionedProductErrorKind::DuplicateResourceException(
                    inner,
                ) => Error::DuplicateResourceException(inner),
                crate::error::ImportAsProvisionedProductErrorKind::InvalidParametersException(
                    inner,
                ) => Error::InvalidParametersException(inner),
                crate::error::ImportAsProvisionedProductErrorKind::InvalidStateException(inner) => {
                    Error::InvalidStateException(inner)
                }
                crate::error::ImportAsProvisionedProductErrorKind::ResourceNotFoundException(
                    inner,
                ) => Error::ResourceNotFoundException(inner),
                crate::error::ImportAsProvisionedProductErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::ListAcceptedPortfolioSharesError>> for Error {
    fn from(
        err: smithy_http::result::SdkError<crate::error::ListAcceptedPortfolioSharesError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::ListAcceptedPortfolioSharesErrorKind::InvalidParametersException(inner) => Error::InvalidParametersException(inner),
                crate::error::ListAcceptedPortfolioSharesErrorKind::OperationNotSupportedException(inner) => Error::OperationNotSupportedException(inner),
                crate::error::ListAcceptedPortfolioSharesErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::ListBudgetsForResourceError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::ListBudgetsForResourceError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::ListBudgetsForResourceErrorKind::InvalidParametersException(
                    inner,
                ) => Error::InvalidParametersException(inner),
                crate::error::ListBudgetsForResourceErrorKind::ResourceNotFoundException(inner) => {
                    Error::ResourceNotFoundException(inner)
                }
                crate::error::ListBudgetsForResourceErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::ListConstraintsForPortfolioError>> for Error {
    fn from(
        err: smithy_http::result::SdkError<crate::error::ListConstraintsForPortfolioError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::ListConstraintsForPortfolioErrorKind::InvalidParametersException(
                    inner,
                ) => Error::InvalidParametersException(inner),
                crate::error::ListConstraintsForPortfolioErrorKind::ResourceNotFoundException(
                    inner,
                ) => Error::ResourceNotFoundException(inner),
                crate::error::ListConstraintsForPortfolioErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::ListLaunchPathsError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::ListLaunchPathsError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::ListLaunchPathsErrorKind::InvalidParametersException(inner) => {
                    Error::InvalidParametersException(inner)
                }
                crate::error::ListLaunchPathsErrorKind::ResourceNotFoundException(inner) => {
                    Error::ResourceNotFoundException(inner)
                }
                crate::error::ListLaunchPathsErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::ListOrganizationPortfolioAccessError>>
    for Error
{
    fn from(
        err: smithy_http::result::SdkError<crate::error::ListOrganizationPortfolioAccessError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::ListOrganizationPortfolioAccessErrorKind::InvalidParametersException(inner) => Error::InvalidParametersException(inner),
                crate::error::ListOrganizationPortfolioAccessErrorKind::OperationNotSupportedException(inner) => Error::OperationNotSupportedException(inner),
                crate::error::ListOrganizationPortfolioAccessErrorKind::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
                crate::error::ListOrganizationPortfolioAccessErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::ListPortfolioAccessError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::ListPortfolioAccessError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::ListPortfolioAccessErrorKind::InvalidParametersException(inner) => {
                    Error::InvalidParametersException(inner)
                }
                crate::error::ListPortfolioAccessErrorKind::ResourceNotFoundException(inner) => {
                    Error::ResourceNotFoundException(inner)
                }
                crate::error::ListPortfolioAccessErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::ListPortfoliosError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::ListPortfoliosError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::ListPortfoliosErrorKind::InvalidParametersException(inner) => {
                    Error::InvalidParametersException(inner)
                }
                crate::error::ListPortfoliosErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::ListPortfoliosForProductError>> for Error {
    fn from(
        err: smithy_http::result::SdkError<crate::error::ListPortfoliosForProductError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::ListPortfoliosForProductErrorKind::InvalidParametersException(
                    inner,
                ) => Error::InvalidParametersException(inner),
                crate::error::ListPortfoliosForProductErrorKind::ResourceNotFoundException(
                    inner,
                ) => Error::ResourceNotFoundException(inner),
                crate::error::ListPortfoliosForProductErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::ListPrincipalsForPortfolioError>> for Error {
    fn from(
        err: smithy_http::result::SdkError<crate::error::ListPrincipalsForPortfolioError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::ListPrincipalsForPortfolioErrorKind::InvalidParametersException(
                    inner,
                ) => Error::InvalidParametersException(inner),
                crate::error::ListPrincipalsForPortfolioErrorKind::ResourceNotFoundException(
                    inner,
                ) => Error::ResourceNotFoundException(inner),
                crate::error::ListPrincipalsForPortfolioErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::ListProvisionedProductPlansError>> for Error {
    fn from(
        err: smithy_http::result::SdkError<crate::error::ListProvisionedProductPlansError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::ListProvisionedProductPlansErrorKind::InvalidParametersException(
                    inner,
                ) => Error::InvalidParametersException(inner),
                crate::error::ListProvisionedProductPlansErrorKind::ResourceNotFoundException(
                    inner,
                ) => Error::ResourceNotFoundException(inner),
                crate::error::ListProvisionedProductPlansErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::ListProvisioningArtifactsError>> for Error {
    fn from(
        err: smithy_http::result::SdkError<crate::error::ListProvisioningArtifactsError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::ListProvisioningArtifactsErrorKind::InvalidParametersException(
                    inner,
                ) => Error::InvalidParametersException(inner),
                crate::error::ListProvisioningArtifactsErrorKind::ResourceNotFoundException(
                    inner,
                ) => Error::ResourceNotFoundException(inner),
                crate::error::ListProvisioningArtifactsErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl
    From<
        smithy_http::result::SdkError<crate::error::ListProvisioningArtifactsForServiceActionError>,
    > for Error
{
    fn from(
        err: smithy_http::result::SdkError<
            crate::error::ListProvisioningArtifactsForServiceActionError,
        >,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::ListProvisioningArtifactsForServiceActionErrorKind::InvalidParametersException(inner) => Error::InvalidParametersException(inner),
                crate::error::ListProvisioningArtifactsForServiceActionErrorKind::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
                crate::error::ListProvisioningArtifactsForServiceActionErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::ListRecordHistoryError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::ListRecordHistoryError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::ListRecordHistoryErrorKind::InvalidParametersException(inner) => {
                    Error::InvalidParametersException(inner)
                }
                crate::error::ListRecordHistoryErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::ListResourcesForTagOptionError>> for Error {
    fn from(
        err: smithy_http::result::SdkError<crate::error::ListResourcesForTagOptionError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::ListResourcesForTagOptionErrorKind::InvalidParametersException(
                    inner,
                ) => Error::InvalidParametersException(inner),
                crate::error::ListResourcesForTagOptionErrorKind::ResourceNotFoundException(
                    inner,
                ) => Error::ResourceNotFoundException(inner),
                crate::error::ListResourcesForTagOptionErrorKind::TagOptionNotMigratedException(
                    inner,
                ) => Error::TagOptionNotMigratedException(inner),
                crate::error::ListResourcesForTagOptionErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::ListServiceActionsError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::ListServiceActionsError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::ListServiceActionsErrorKind::InvalidParametersException(inner) => {
                    Error::InvalidParametersException(inner)
                }
                crate::error::ListServiceActionsErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl
    From<
        smithy_http::result::SdkError<crate::error::ListServiceActionsForProvisioningArtifactError>,
    > for Error
{
    fn from(
        err: smithy_http::result::SdkError<
            crate::error::ListServiceActionsForProvisioningArtifactError,
        >,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::ListServiceActionsForProvisioningArtifactErrorKind::InvalidParametersException(inner) => Error::InvalidParametersException(inner),
                crate::error::ListServiceActionsForProvisioningArtifactErrorKind::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
                crate::error::ListServiceActionsForProvisioningArtifactErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::ListStackInstancesForProvisionedProductError>>
    for Error
{
    fn from(
        err: smithy_http::result::SdkError<
            crate::error::ListStackInstancesForProvisionedProductError,
        >,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::ListStackInstancesForProvisionedProductErrorKind::InvalidParametersException(inner) => Error::InvalidParametersException(inner),
                crate::error::ListStackInstancesForProvisionedProductErrorKind::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
                crate::error::ListStackInstancesForProvisionedProductErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::ListTagOptionsError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::ListTagOptionsError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::ListTagOptionsErrorKind::InvalidParametersException(inner) => {
                    Error::InvalidParametersException(inner)
                }
                crate::error::ListTagOptionsErrorKind::TagOptionNotMigratedException(inner) => {
                    Error::TagOptionNotMigratedException(inner)
                }
                crate::error::ListTagOptionsErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::ProvisionProductError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::ProvisionProductError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::ProvisionProductErrorKind::DuplicateResourceException(inner) => {
                    Error::DuplicateResourceException(inner)
                }
                crate::error::ProvisionProductErrorKind::InvalidParametersException(inner) => {
                    Error::InvalidParametersException(inner)
                }
                crate::error::ProvisionProductErrorKind::ResourceNotFoundException(inner) => {
                    Error::ResourceNotFoundException(inner)
                }
                crate::error::ProvisionProductErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::RejectPortfolioShareError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::RejectPortfolioShareError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::RejectPortfolioShareErrorKind::ResourceNotFoundException(inner) => {
                    Error::ResourceNotFoundException(inner)
                }
                crate::error::RejectPortfolioShareErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::ScanProvisionedProductsError>> for Error {
    fn from(
        err: smithy_http::result::SdkError<crate::error::ScanProvisionedProductsError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::ScanProvisionedProductsErrorKind::InvalidParametersException(
                    inner,
                ) => Error::InvalidParametersException(inner),
                crate::error::ScanProvisionedProductsErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::SearchProductsError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::SearchProductsError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::SearchProductsErrorKind::InvalidParametersException(inner) => {
                    Error::InvalidParametersException(inner)
                }
                crate::error::SearchProductsErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::SearchProductsAsAdminError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::SearchProductsAsAdminError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::SearchProductsAsAdminErrorKind::InvalidParametersException(inner) => {
                    Error::InvalidParametersException(inner)
                }
                crate::error::SearchProductsAsAdminErrorKind::ResourceNotFoundException(inner) => {
                    Error::ResourceNotFoundException(inner)
                }
                crate::error::SearchProductsAsAdminErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::SearchProvisionedProductsError>> for Error {
    fn from(
        err: smithy_http::result::SdkError<crate::error::SearchProvisionedProductsError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::SearchProvisionedProductsErrorKind::InvalidParametersException(
                    inner,
                ) => Error::InvalidParametersException(inner),
                crate::error::SearchProvisionedProductsErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::TerminateProvisionedProductError>> for Error {
    fn from(
        err: smithy_http::result::SdkError<crate::error::TerminateProvisionedProductError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::TerminateProvisionedProductErrorKind::ResourceNotFoundException(
                    inner,
                ) => Error::ResourceNotFoundException(inner),
                crate::error::TerminateProvisionedProductErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::UpdateConstraintError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::UpdateConstraintError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::UpdateConstraintErrorKind::InvalidParametersException(inner) => {
                    Error::InvalidParametersException(inner)
                }
                crate::error::UpdateConstraintErrorKind::ResourceNotFoundException(inner) => {
                    Error::ResourceNotFoundException(inner)
                }
                crate::error::UpdateConstraintErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::UpdatePortfolioError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::UpdatePortfolioError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::UpdatePortfolioErrorKind::InvalidParametersException(inner) => {
                    Error::InvalidParametersException(inner)
                }
                crate::error::UpdatePortfolioErrorKind::LimitExceededException(inner) => {
                    Error::LimitExceededException(inner)
                }
                crate::error::UpdatePortfolioErrorKind::ResourceNotFoundException(inner) => {
                    Error::ResourceNotFoundException(inner)
                }
                crate::error::UpdatePortfolioErrorKind::TagOptionNotMigratedException(inner) => {
                    Error::TagOptionNotMigratedException(inner)
                }
                crate::error::UpdatePortfolioErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::UpdatePortfolioShareError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::UpdatePortfolioShareError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::UpdatePortfolioShareErrorKind::InvalidParametersException(inner) => {
                    Error::InvalidParametersException(inner)
                }
                crate::error::UpdatePortfolioShareErrorKind::InvalidStateException(inner) => {
                    Error::InvalidStateException(inner)
                }
                crate::error::UpdatePortfolioShareErrorKind::OperationNotSupportedException(
                    inner,
                ) => Error::OperationNotSupportedException(inner),
                crate::error::UpdatePortfolioShareErrorKind::ResourceNotFoundException(inner) => {
                    Error::ResourceNotFoundException(inner)
                }
                crate::error::UpdatePortfolioShareErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::UpdateProductError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::UpdateProductError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::UpdateProductErrorKind::InvalidParametersException(inner) => {
                    Error::InvalidParametersException(inner)
                }
                crate::error::UpdateProductErrorKind::ResourceNotFoundException(inner) => {
                    Error::ResourceNotFoundException(inner)
                }
                crate::error::UpdateProductErrorKind::TagOptionNotMigratedException(inner) => {
                    Error::TagOptionNotMigratedException(inner)
                }
                crate::error::UpdateProductErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::UpdateProvisionedProductError>> for Error {
    fn from(
        err: smithy_http::result::SdkError<crate::error::UpdateProvisionedProductError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::UpdateProvisionedProductErrorKind::InvalidParametersException(
                    inner,
                ) => Error::InvalidParametersException(inner),
                crate::error::UpdateProvisionedProductErrorKind::ResourceNotFoundException(
                    inner,
                ) => Error::ResourceNotFoundException(inner),
                crate::error::UpdateProvisionedProductErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::UpdateProvisionedProductPropertiesError>>
    for Error
{
    fn from(
        err: smithy_http::result::SdkError<crate::error::UpdateProvisionedProductPropertiesError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, ..} => match err.kind {
                crate::error::UpdateProvisionedProductPropertiesErrorKind::InvalidParametersException(inner) => Error::InvalidParametersException(inner),
                crate::error::UpdateProvisionedProductPropertiesErrorKind::InvalidStateException(inner) => Error::InvalidStateException(inner),
                crate::error::UpdateProvisionedProductPropertiesErrorKind::ResourceNotFoundException(inner) => Error::ResourceNotFoundException(inner),
                crate::error::UpdateProvisionedProductPropertiesErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            }
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::UpdateProvisioningArtifactError>> for Error {
    fn from(
        err: smithy_http::result::SdkError<crate::error::UpdateProvisioningArtifactError>,
    ) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::UpdateProvisioningArtifactErrorKind::InvalidParametersException(
                    inner,
                ) => Error::InvalidParametersException(inner),
                crate::error::UpdateProvisioningArtifactErrorKind::ResourceNotFoundException(
                    inner,
                ) => Error::ResourceNotFoundException(inner),
                crate::error::UpdateProvisioningArtifactErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::UpdateServiceActionError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::UpdateServiceActionError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::UpdateServiceActionErrorKind::InvalidParametersException(inner) => {
                    Error::InvalidParametersException(inner)
                }
                crate::error::UpdateServiceActionErrorKind::ResourceNotFoundException(inner) => {
                    Error::ResourceNotFoundException(inner)
                }
                crate::error::UpdateServiceActionErrorKind::Unhandled(inner) => {
                    Error::Unhandled(inner)
                }
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl From<smithy_http::result::SdkError<crate::error::UpdateTagOptionError>> for Error {
    fn from(err: smithy_http::result::SdkError<crate::error::UpdateTagOptionError>) -> Self {
        match err {
            smithy_http::result::SdkError::ServiceError { err, .. } => match err.kind {
                crate::error::UpdateTagOptionErrorKind::DuplicateResourceException(inner) => {
                    Error::DuplicateResourceException(inner)
                }
                crate::error::UpdateTagOptionErrorKind::InvalidParametersException(inner) => {
                    Error::InvalidParametersException(inner)
                }
                crate::error::UpdateTagOptionErrorKind::ResourceNotFoundException(inner) => {
                    Error::ResourceNotFoundException(inner)
                }
                crate::error::UpdateTagOptionErrorKind::TagOptionNotMigratedException(inner) => {
                    Error::TagOptionNotMigratedException(inner)
                }
                crate::error::UpdateTagOptionErrorKind::Unhandled(inner) => Error::Unhandled(inner),
            },
            _ => Error::Unhandled(err.into()),
        }
    }
}
impl std::error::Error for Error {}
