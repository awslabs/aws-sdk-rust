// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateCluster`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`backup_retention_policy(BackupRetentionPolicy)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::backup_retention_policy) / [`set_backup_retention_policy(Option<BackupRetentionPolicy>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::set_backup_retention_policy):<br>required: **false**<br><p>A policy that defines how the service retains backups.</p><br>
    ///   - [`hsm_type(impl Into<String>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::hsm_type) / [`set_hsm_type(Option<String>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::set_hsm_type):<br>required: **true**<br><p>The type of HSM to use in the cluster. Currently the only allowed value is <code>hsm1.medium</code>.</p><br>
    ///   - [`source_backup_id(impl Into<String>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::source_backup_id) / [`set_source_backup_id(Option<String>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::set_source_backup_id):<br>required: **false**<br><p>The identifier (ID) of the cluster backup to restore. Use this value to restore the cluster from a backup instead of creating a new cluster. To find the backup ID, use <code>DescribeBackups</code>.</p><br>
    ///   - [`subnet_ids(impl Into<String>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::subnet_ids) / [`set_subnet_ids(Option<Vec::<String>>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::set_subnet_ids):<br>required: **true**<br><p>The identifiers (IDs) of the subnets where you are creating the cluster. You must specify at least one subnet. If you specify multiple subnets, they must meet the following criteria:</p>  <ul>   <li> <p>All subnets must be in the same virtual private cloud (VPC).</p> </li>   <li> <p>You can specify only one subnet per Availability Zone.</p> </li>  </ul><br>
    ///   - [`tag_list(Tag)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::tag_list) / [`set_tag_list(Option<Vec::<Tag>>)`](crate::operation::create_cluster::builders::CreateClusterFluentBuilder::set_tag_list):<br>required: **false**<br><p>Tags to apply to the CloudHSM cluster during creation.</p><br>
    /// - On success, responds with [`CreateClusterOutput`](crate::operation::create_cluster::CreateClusterOutput) with field(s):
    ///   - [`cluster(Option<Cluster>)`](crate::operation::create_cluster::CreateClusterOutput::cluster): <p>Information about the cluster that was created.</p>
    /// - On failure, responds with [`SdkError<CreateClusterError>`](crate::operation::create_cluster::CreateClusterError)
    pub fn create_cluster(&self) -> crate::operation::create_cluster::builders::CreateClusterFluentBuilder {
        crate::operation::create_cluster::builders::CreateClusterFluentBuilder::new(self.handle.clone())
    }
}
