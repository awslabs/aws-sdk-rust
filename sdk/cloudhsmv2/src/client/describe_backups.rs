// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeBackups`](crate::operation::describe_backups::builders::DescribeBackupsFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::describe_backups::builders::DescribeBackupsFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`next_token(impl Into<String>)`](crate::operation::describe_backups::builders::DescribeBackupsFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::describe_backups::builders::DescribeBackupsFluentBuilder::set_next_token):<br>required: **false**<br><p>The <code>NextToken</code> value that you received in the previous response. Use this value to get more backups.</p><br>
    ///   - [`max_results(i32)`](crate::operation::describe_backups::builders::DescribeBackupsFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::describe_backups::builders::DescribeBackupsFluentBuilder::set_max_results):<br>required: **false**<br><p>The maximum number of backups to return in the response. When there are more backups than the number you specify, the response contains a <code>NextToken</code> value.</p><br>
    ///   - [`filters(impl Into<String>, Vec::<String>)`](crate::operation::describe_backups::builders::DescribeBackupsFluentBuilder::filters) / [`set_filters(Option<HashMap::<String, Vec::<String>>>)`](crate::operation::describe_backups::builders::DescribeBackupsFluentBuilder::set_filters):<br>required: **false**<br><p>One or more filters to limit the items returned in the response.</p>  <p>Use the <code>backupIds</code> filter to return only the specified backups. Specify backups by their backup identifier (ID).</p>  <p>Use the <code>sourceBackupIds</code> filter to return only the backups created from a source backup. The <code>sourceBackupID</code> of a source backup is returned by the <code>CopyBackupToRegion</code> operation.</p>  <p>Use the <code>clusterIds</code> filter to return only the backups for the specified clusters. Specify clusters by their cluster identifier (ID).</p>  <p>Use the <code>states</code> filter to return only backups that match the specified state.</p>  <p>Use the <code>neverExpires</code> filter to return backups filtered by the value in the <code>neverExpires</code> parameter. <code>True</code> returns all backups exempt from the backup retention policy. <code>False</code> returns all backups with a backup retention policy defined at the cluster.</p><br>
    ///   - [`sort_ascending(bool)`](crate::operation::describe_backups::builders::DescribeBackupsFluentBuilder::sort_ascending) / [`set_sort_ascending(Option<bool>)`](crate::operation::describe_backups::builders::DescribeBackupsFluentBuilder::set_sort_ascending):<br>required: **false**<br><p>Designates whether or not to sort the return backups by ascending chronological order of generation.</p><br>
    /// - On success, responds with [`DescribeBackupsOutput`](crate::operation::describe_backups::DescribeBackupsOutput) with field(s):
    ///   - [`backups(Option<Vec::<Backup>>)`](crate::operation::describe_backups::DescribeBackupsOutput::backups): <p>A list of backups.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::describe_backups::DescribeBackupsOutput::next_token): <p>An opaque string that indicates that the response contains only a subset of backups. Use this value in a subsequent <code>DescribeBackups</code> request to get more backups.</p>
    /// - On failure, responds with [`SdkError<DescribeBackupsError>`](crate::operation::describe_backups::DescribeBackupsError)
    pub fn describe_backups(&self) -> crate::operation::describe_backups::builders::DescribeBackupsFluentBuilder {
        crate::operation::describe_backups::builders::DescribeBackupsFluentBuilder::new(self.handle.clone())
    }
}
