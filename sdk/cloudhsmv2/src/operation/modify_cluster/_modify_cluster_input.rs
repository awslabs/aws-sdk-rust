// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ModifyClusterInput {
    /// <p>A policy that defines how the service retains backups.</p>
    #[doc(hidden)]
    pub backup_retention_policy: std::option::Option<crate::types::BackupRetentionPolicy>,
    /// <p>The identifier (ID) of the cluster that you want to modify. To find the cluster ID, use <code>DescribeClusters</code>.</p>
    #[doc(hidden)]
    pub cluster_id: std::option::Option<std::string::String>,
}
impl ModifyClusterInput {
    /// <p>A policy that defines how the service retains backups.</p>
    pub fn backup_retention_policy(
        &self,
    ) -> std::option::Option<&crate::types::BackupRetentionPolicy> {
        self.backup_retention_policy.as_ref()
    }
    /// <p>The identifier (ID) of the cluster that you want to modify. To find the cluster ID, use <code>DescribeClusters</code>.</p>
    pub fn cluster_id(&self) -> std::option::Option<&str> {
        self.cluster_id.as_deref()
    }
}
impl ModifyClusterInput {
    /// Creates a new builder-style object to manufacture [`ModifyClusterInput`](crate::operation::modify_cluster::ModifyClusterInput).
    pub fn builder() -> crate::operation::modify_cluster::builders::ModifyClusterInputBuilder {
        crate::operation::modify_cluster::builders::ModifyClusterInputBuilder::default()
    }
}

/// A builder for [`ModifyClusterInput`](crate::operation::modify_cluster::ModifyClusterInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ModifyClusterInputBuilder {
    pub(crate) backup_retention_policy: std::option::Option<crate::types::BackupRetentionPolicy>,
    pub(crate) cluster_id: std::option::Option<std::string::String>,
}
impl ModifyClusterInputBuilder {
    /// <p>A policy that defines how the service retains backups.</p>
    pub fn backup_retention_policy(mut self, input: crate::types::BackupRetentionPolicy) -> Self {
        self.backup_retention_policy = Some(input);
        self
    }
    /// <p>A policy that defines how the service retains backups.</p>
    pub fn set_backup_retention_policy(
        mut self,
        input: std::option::Option<crate::types::BackupRetentionPolicy>,
    ) -> Self {
        self.backup_retention_policy = input;
        self
    }
    /// <p>The identifier (ID) of the cluster that you want to modify. To find the cluster ID, use <code>DescribeClusters</code>.</p>
    pub fn cluster_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.cluster_id = Some(input.into());
        self
    }
    /// <p>The identifier (ID) of the cluster that you want to modify. To find the cluster ID, use <code>DescribeClusters</code>.</p>
    pub fn set_cluster_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.cluster_id = input;
        self
    }
    /// Consumes the builder and constructs a [`ModifyClusterInput`](crate::operation::modify_cluster::ModifyClusterInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::modify_cluster::ModifyClusterInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(crate::operation::modify_cluster::ModifyClusterInput {
            backup_retention_policy: self.backup_retention_policy,
            cluster_id: self.cluster_id,
        })
    }
}
