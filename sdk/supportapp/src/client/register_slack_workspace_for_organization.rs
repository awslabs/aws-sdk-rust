// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`RegisterSlackWorkspaceForOrganization`](crate::client::fluent_builders::RegisterSlackWorkspaceForOrganization) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`team_id(impl Into<String>)`](crate::client::fluent_builders::RegisterSlackWorkspaceForOrganization::team_id) / [`set_team_id(Option<String>)`](crate::client::fluent_builders::RegisterSlackWorkspaceForOrganization::set_team_id): <p>The team ID in Slack. This ID uniquely identifies a Slack workspace, such as <code>T012ABCDEFG</code>. Specify the Slack workspace that you want to use for your organization.</p>
    /// - On success, responds with [`RegisterSlackWorkspaceForOrganizationOutput`](crate::output::RegisterSlackWorkspaceForOrganizationOutput) with field(s):
    ///   - [`team_id(Option<String>)`](crate::output::RegisterSlackWorkspaceForOrganizationOutput::team_id): <p>The team ID in Slack. This ID uniquely identifies a Slack workspace, such as <code>T012ABCDEFG</code>.</p>
    ///   - [`team_name(Option<String>)`](crate::output::RegisterSlackWorkspaceForOrganizationOutput::team_name): <p>The name of the Slack workspace.</p>
    ///   - [`account_type(Option<AccountType>)`](crate::output::RegisterSlackWorkspaceForOrganizationOutput::account_type): <p>Whether the Amazon Web Services account is a management or member account that's part of an organization in Organizations.</p>
    /// - On failure, responds with [`SdkError<RegisterSlackWorkspaceForOrganizationError>`](crate::error::RegisterSlackWorkspaceForOrganizationError)
    pub fn register_slack_workspace_for_organization(
        &self,
    ) -> crate::client::fluent_builders::RegisterSlackWorkspaceForOrganization {
        crate::client::fluent_builders::RegisterSlackWorkspaceForOrganization::new(
            self.handle.clone(),
        )
    }
}
