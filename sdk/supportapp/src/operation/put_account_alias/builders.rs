// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub use crate::operation::put_account_alias::_put_account_alias_output::PutAccountAliasOutputBuilder;

pub use crate::operation::put_account_alias::_put_account_alias_input::PutAccountAliasInputBuilder;

/// Fluent builder constructing a request to `PutAccountAlias`.
///
/// <p>Creates or updates an individual alias for each Amazon Web Services account ID. The alias appears in the Amazon Web Services Support App page of the Amazon Web Services Support Center. The alias also appears in Slack messages from the Amazon Web Services Support App.</p>
#[derive(std::clone::Clone, std::fmt::Debug)]
pub struct PutAccountAliasFluentBuilder {
    handle: std::sync::Arc<crate::client::Handle>,
    inner: crate::operation::put_account_alias::builders::PutAccountAliasInputBuilder,
}
impl PutAccountAliasFluentBuilder {
    /// Creates a new `PutAccountAlias`.
    pub(crate) fn new(handle: std::sync::Arc<crate::client::Handle>) -> Self {
        Self {
            handle,
            inner: Default::default(),
        }
    }

    /// Consume this builder, creating a customizable operation that can be modified before being
    /// sent. The operation's inner [http::Request] can be modified as well.
    pub async fn customize(
        self,
    ) -> std::result::Result<
        crate::client::customize::CustomizableOperation<
            crate::operation::put_account_alias::PutAccountAlias,
            aws_http::retry::AwsResponseRetryClassifier,
        >,
        aws_smithy_http::result::SdkError<
            crate::operation::put_account_alias::PutAccountAliasError,
        >,
    > {
        let handle = self.handle.clone();
        let operation = self
            .inner
            .build()
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?
            .make_operation(&handle.conf)
            .await
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?;
        Ok(crate::client::customize::CustomizableOperation { handle, operation })
    }

    /// Sends the request and returns the response.
    ///
    /// If an error occurs, an `SdkError` will be returned with additional details that
    /// can be matched against.
    ///
    /// By default, any retryable failures will be retried twice. Retry behavior
    /// is configurable with the [RetryConfig](aws_smithy_types::retry::RetryConfig), which can be
    /// set when configuring the client.
    pub async fn send(
        self,
    ) -> std::result::Result<
        crate::operation::put_account_alias::PutAccountAliasOutput,
        aws_smithy_http::result::SdkError<
            crate::operation::put_account_alias::PutAccountAliasError,
        >,
    > {
        let op = self
            .inner
            .build()
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?
            .make_operation(&self.handle.conf)
            .await
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?;
        self.handle.client.call(op).await
    }
    /// <p>An alias or short name for an Amazon Web Services account.</p>
    pub fn account_alias(mut self, input: impl Into<std::string::String>) -> Self {
        self.inner = self.inner.account_alias(input.into());
        self
    }
    /// <p>An alias or short name for an Amazon Web Services account.</p>
    pub fn set_account_alias(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.inner = self.inner.set_account_alias(input);
        self
    }
}
