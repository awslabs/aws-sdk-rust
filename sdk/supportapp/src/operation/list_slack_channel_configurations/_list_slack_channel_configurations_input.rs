// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ListSlackChannelConfigurationsInput {
    /// <p>If the results of a search are large, the API only returns a portion of the results and includes a <code>nextToken</code> pagination token in the response. To retrieve the next batch of results, reissue the search request and include the returned token. When the API returns the last set of results, the response doesn't include a pagination token value.</p>
    #[doc(hidden)]
    pub next_token: std::option::Option<std::string::String>,
}
impl ListSlackChannelConfigurationsInput {
    /// <p>If the results of a search are large, the API only returns a portion of the results and includes a <code>nextToken</code> pagination token in the response. To retrieve the next batch of results, reissue the search request and include the returned token. When the API returns the last set of results, the response doesn't include a pagination token value.</p>
    pub fn next_token(&self) -> std::option::Option<&str> {
        self.next_token.as_deref()
    }
}
impl ListSlackChannelConfigurationsInput {
    /// Creates a new builder-style object to manufacture [`ListSlackChannelConfigurationsInput`](crate::operation::list_slack_channel_configurations::ListSlackChannelConfigurationsInput).
    pub fn builder() -> crate::operation::list_slack_channel_configurations::builders::ListSlackChannelConfigurationsInputBuilder{
        crate::operation::list_slack_channel_configurations::builders::ListSlackChannelConfigurationsInputBuilder::default()
    }
}

/// A builder for [`ListSlackChannelConfigurationsInput`](crate::operation::list_slack_channel_configurations::ListSlackChannelConfigurationsInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ListSlackChannelConfigurationsInputBuilder {
    pub(crate) next_token: std::option::Option<std::string::String>,
}
impl ListSlackChannelConfigurationsInputBuilder {
    /// <p>If the results of a search are large, the API only returns a portion of the results and includes a <code>nextToken</code> pagination token in the response. To retrieve the next batch of results, reissue the search request and include the returned token. When the API returns the last set of results, the response doesn't include a pagination token value.</p>
    pub fn next_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.next_token = Some(input.into());
        self
    }
    /// <p>If the results of a search are large, the API only returns a portion of the results and includes a <code>nextToken</code> pagination token in the response. To retrieve the next batch of results, reissue the search request and include the returned token. When the API returns the last set of results, the response doesn't include a pagination token value.</p>
    pub fn set_next_token(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// Consumes the builder and constructs a [`ListSlackChannelConfigurationsInput`](crate::operation::list_slack_channel_configurations::ListSlackChannelConfigurationsInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::list_slack_channel_configurations::ListSlackChannelConfigurationsInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::list_slack_channel_configurations::ListSlackChannelConfigurationsInput {
                next_token: self.next_token
                ,
            }
        )
    }
}
