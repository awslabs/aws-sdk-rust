// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct PutRawMessageContentOutput {
    _request_id: Option<String>,
}
impl aws_http::request_id::RequestId for PutRawMessageContentOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
/// See [`PutRawMessageContentOutput`](crate::output::PutRawMessageContentOutput).
pub mod put_raw_message_content_output {

    /// A builder for [`PutRawMessageContentOutput`](crate::output::PutRawMessageContentOutput).
    #[non_exhaustive]
    #[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
    pub struct Builder {
        _request_id: Option<String>,
    }
    impl Builder {
        pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
            self._request_id = Some(request_id.into());
            self
        }

        pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
            self._request_id = request_id;
            self
        }
        /// Consumes the builder and constructs a [`PutRawMessageContentOutput`](crate::output::PutRawMessageContentOutput).
        pub fn build(self) -> crate::output::PutRawMessageContentOutput {
            crate::output::PutRawMessageContentOutput {
                _request_id: self._request_id,
            }
        }
    }
}
impl PutRawMessageContentOutput {
    /// Creates a new builder-style object to manufacture [`PutRawMessageContentOutput`](crate::output::PutRawMessageContentOutput).
    pub fn builder() -> crate::output::put_raw_message_content_output::Builder {
        crate::output::put_raw_message_content_output::Builder::default()
    }
}

#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::fmt::Debug)]
pub struct GetRawMessageContentOutput {
    /// <p>The raw content of the email message, in MIME format.</p>
    pub message_content: aws_smithy_http::byte_stream::ByteStream,
    _request_id: Option<String>,
}
impl GetRawMessageContentOutput {
    /// <p>The raw content of the email message, in MIME format.</p>
    pub fn message_content(&self) -> &aws_smithy_http::byte_stream::ByteStream {
        &self.message_content
    }
}
impl aws_http::request_id::RequestId for GetRawMessageContentOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
/// See [`GetRawMessageContentOutput`](crate::output::GetRawMessageContentOutput).
pub mod get_raw_message_content_output {

    /// A builder for [`GetRawMessageContentOutput`](crate::output::GetRawMessageContentOutput).
    #[non_exhaustive]
    #[derive(std::default::Default, std::fmt::Debug)]
    pub struct Builder {
        pub(crate) message_content: std::option::Option<aws_smithy_http::byte_stream::ByteStream>,
        _request_id: Option<String>,
    }
    impl Builder {
        /// <p>The raw content of the email message, in MIME format.</p>
        pub fn message_content(mut self, input: aws_smithy_http::byte_stream::ByteStream) -> Self {
            self.message_content = Some(input);
            self
        }
        /// <p>The raw content of the email message, in MIME format.</p>
        pub fn set_message_content(
            mut self,
            input: std::option::Option<aws_smithy_http::byte_stream::ByteStream>,
        ) -> Self {
            self.message_content = input;
            self
        }
        pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
            self._request_id = Some(request_id.into());
            self
        }

        pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
            self._request_id = request_id;
            self
        }
        /// Consumes the builder and constructs a [`GetRawMessageContentOutput`](crate::output::GetRawMessageContentOutput).
        pub fn build(self) -> crate::output::GetRawMessageContentOutput {
            crate::output::GetRawMessageContentOutput {
                message_content: self.message_content.unwrap_or_default(),
                _request_id: self._request_id,
            }
        }
    }
}
impl GetRawMessageContentOutput {
    /// Creates a new builder-style object to manufacture [`GetRawMessageContentOutput`](crate::output::GetRawMessageContentOutput).
    pub fn builder() -> crate::output::get_raw_message_content_output::Builder {
        crate::output::get_raw_message_content_output::Builder::default()
    }
}
