// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct PutRawMessageContentInput {
    /// <p>The identifier of the email message being updated.</p>
    #[doc(hidden)]
    pub message_id: std::option::Option<std::string::String>,
    /// <p>Describes the raw message content of the updated email message.</p>
    #[doc(hidden)]
    pub content: std::option::Option<crate::types::RawMessageContent>,
}
impl PutRawMessageContentInput {
    /// <p>The identifier of the email message being updated.</p>
    pub fn message_id(&self) -> std::option::Option<&str> {
        self.message_id.as_deref()
    }
    /// <p>Describes the raw message content of the updated email message.</p>
    pub fn content(&self) -> std::option::Option<&crate::types::RawMessageContent> {
        self.content.as_ref()
    }
}
impl PutRawMessageContentInput {
    /// Creates a new builder-style object to manufacture [`PutRawMessageContentInput`](crate::operation::put_raw_message_content::PutRawMessageContentInput).
    pub fn builder(
    ) -> crate::operation::put_raw_message_content::builders::PutRawMessageContentInputBuilder {
        crate::operation::put_raw_message_content::builders::PutRawMessageContentInputBuilder::default()
    }
}

/// A builder for [`PutRawMessageContentInput`](crate::operation::put_raw_message_content::PutRawMessageContentInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct PutRawMessageContentInputBuilder {
    pub(crate) message_id: std::option::Option<std::string::String>,
    pub(crate) content: std::option::Option<crate::types::RawMessageContent>,
}
impl PutRawMessageContentInputBuilder {
    /// <p>The identifier of the email message being updated.</p>
    pub fn message_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.message_id = Some(input.into());
        self
    }
    /// <p>The identifier of the email message being updated.</p>
    pub fn set_message_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.message_id = input;
        self
    }
    /// <p>Describes the raw message content of the updated email message.</p>
    pub fn content(mut self, input: crate::types::RawMessageContent) -> Self {
        self.content = Some(input);
        self
    }
    /// <p>Describes the raw message content of the updated email message.</p>
    pub fn set_content(
        mut self,
        input: std::option::Option<crate::types::RawMessageContent>,
    ) -> Self {
        self.content = input;
        self
    }
    /// Consumes the builder and constructs a [`PutRawMessageContentInput`](crate::operation::put_raw_message_content::PutRawMessageContentInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::put_raw_message_content::PutRawMessageContentInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::put_raw_message_content::PutRawMessageContentInput {
                message_id: self.message_id,
                content: self.content,
            },
        )
    }
}
