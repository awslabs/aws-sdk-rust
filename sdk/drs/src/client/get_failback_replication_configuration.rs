// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetFailbackReplicationConfiguration`](crate::client::fluent_builders::GetFailbackReplicationConfiguration) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`recovery_instance_id(impl Into<String>)`](crate::client::fluent_builders::GetFailbackReplicationConfiguration::recovery_instance_id) / [`set_recovery_instance_id(Option<String>)`](crate::client::fluent_builders::GetFailbackReplicationConfiguration::set_recovery_instance_id): <p>The ID of the Recovery Instance whose failback replication configuration should be returned.</p>
    /// - On success, responds with [`GetFailbackReplicationConfigurationOutput`](crate::output::GetFailbackReplicationConfigurationOutput) with field(s):
    ///   - [`recovery_instance_id(Option<String>)`](crate::output::GetFailbackReplicationConfigurationOutput::recovery_instance_id): <p>The ID of the Recovery Instance.</p>
    ///   - [`name(Option<String>)`](crate::output::GetFailbackReplicationConfigurationOutput::name): <p>The name of the Failback Replication Configuration.</p>
    ///   - [`bandwidth_throttling(i64)`](crate::output::GetFailbackReplicationConfigurationOutput::bandwidth_throttling): <p>Configure bandwidth throttling for the outbound data transfer rate of the Recovery Instance in Mbps.</p>
    ///   - [`use_private_ip(Option<bool>)`](crate::output::GetFailbackReplicationConfigurationOutput::use_private_ip): <p>Whether to use Private IP for the failback replication of the Recovery Instance.</p>
    /// - On failure, responds with [`SdkError<GetFailbackReplicationConfigurationError>`](crate::error::GetFailbackReplicationConfigurationError)
    pub fn get_failback_replication_configuration(
        &self,
    ) -> crate::client::fluent_builders::GetFailbackReplicationConfiguration {
        crate::client::fluent_builders::GetFailbackReplicationConfiguration::new(
            self.handle.clone(),
        )
    }
}
