// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetLaunchConfiguration`](crate::operation::get_launch_configuration::builders::GetLaunchConfigurationFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`source_server_id(impl Into<String>)`](crate::operation::get_launch_configuration::builders::GetLaunchConfigurationFluentBuilder::source_server_id) / [`set_source_server_id(Option<String>)`](crate::operation::get_launch_configuration::builders::GetLaunchConfigurationFluentBuilder::set_source_server_id): <p>The ID of the Source Server that we want to retrieve a Launch Configuration for.</p>
    /// - On success, responds with [`GetLaunchConfigurationOutput`](crate::operation::get_launch_configuration::GetLaunchConfigurationOutput) with field(s):
    ///   - [`source_server_id(Option<String>)`](crate::operation::get_launch_configuration::GetLaunchConfigurationOutput::source_server_id): <p>The ID of the Source Server for this launch configuration.</p>
    ///   - [`name(Option<String>)`](crate::operation::get_launch_configuration::GetLaunchConfigurationOutput::name): <p>The name of the launch configuration.</p>
    ///   - [`ec2_launch_template_id(Option<String>)`](crate::operation::get_launch_configuration::GetLaunchConfigurationOutput::ec2_launch_template_id): <p>The EC2 launch template ID of this launch configuration.</p>
    ///   - [`launch_disposition(Option<LaunchDisposition>)`](crate::operation::get_launch_configuration::GetLaunchConfigurationOutput::launch_disposition): <p>The state of the Recovery Instance in EC2 after the recovery operation.</p>
    ///   - [`target_instance_type_right_sizing_method(Option<TargetInstanceTypeRightSizingMethod>)`](crate::operation::get_launch_configuration::GetLaunchConfigurationOutput::target_instance_type_right_sizing_method): <p>Whether Elastic Disaster Recovery should try to automatically choose the instance type that best matches the OS, CPU, and RAM of your Source Server.</p>
    ///   - [`copy_private_ip(Option<bool>)`](crate::operation::get_launch_configuration::GetLaunchConfigurationOutput::copy_private_ip): <p>Whether we should copy the Private IP of the Source Server to the Recovery Instance.</p>
    ///   - [`copy_tags(Option<bool>)`](crate::operation::get_launch_configuration::GetLaunchConfigurationOutput::copy_tags): <p>Whether we want to copy the tags of the Source Server to the EC2 machine of the Recovery Instance.</p>
    ///   - [`licensing(Option<Licensing>)`](crate::operation::get_launch_configuration::GetLaunchConfigurationOutput::licensing): <p>The licensing configuration to be used for this launch configuration.</p>
    /// - On failure, responds with [`SdkError<GetLaunchConfigurationError>`](crate::operation::get_launch_configuration::GetLaunchConfigurationError)
    pub fn get_launch_configuration(
        &self,
    ) -> crate::operation::get_launch_configuration::builders::GetLaunchConfigurationFluentBuilder
    {
        crate::operation::get_launch_configuration::builders::GetLaunchConfigurationFluentBuilder::new(self.handle.clone())
    }
}
