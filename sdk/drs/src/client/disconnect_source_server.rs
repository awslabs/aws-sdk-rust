// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DisconnectSourceServer`](crate::operation::disconnect_source_server::builders::DisconnectSourceServerFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`source_server_id(impl Into<String>)`](crate::operation::disconnect_source_server::builders::DisconnectSourceServerFluentBuilder::source_server_id) / [`set_source_server_id(Option<String>)`](crate::operation::disconnect_source_server::builders::DisconnectSourceServerFluentBuilder::set_source_server_id):<br>required: **true**<br><p>The ID of the Source Server to disconnect.</p><br>
    /// - On success, responds with [`DisconnectSourceServerOutput`](crate::operation::disconnect_source_server::DisconnectSourceServerOutput) with field(s):
    ///   - [`source_server_id(Option<String>)`](crate::operation::disconnect_source_server::DisconnectSourceServerOutput::source_server_id): <p>The ID of the Source Server.</p>
    ///   - [`arn(Option<String>)`](crate::operation::disconnect_source_server::DisconnectSourceServerOutput::arn): <p>The ARN of the Source Server.</p>
    ///   - [`tags(Option<HashMap::<String, String>>)`](crate::operation::disconnect_source_server::DisconnectSourceServerOutput::tags): <p>The tags associated with the Source Server.</p>
    ///   - [`recovery_instance_id(Option<String>)`](crate::operation::disconnect_source_server::DisconnectSourceServerOutput::recovery_instance_id): <p>The ID of the Recovery Instance associated with this Source Server.</p>
    ///   - [`last_launch_result(Option<LastLaunchResult>)`](crate::operation::disconnect_source_server::DisconnectSourceServerOutput::last_launch_result): <p>The status of the last recovery launch of this Source Server.</p>
    ///   - [`data_replication_info(Option<DataReplicationInfo>)`](crate::operation::disconnect_source_server::DisconnectSourceServerOutput::data_replication_info): <p>The Data Replication Info of the Source Server.</p>
    ///   - [`life_cycle(Option<LifeCycle>)`](crate::operation::disconnect_source_server::DisconnectSourceServerOutput::life_cycle): <p>The lifecycle information of this Source Server.</p>
    ///   - [`source_properties(Option<SourceProperties>)`](crate::operation::disconnect_source_server::DisconnectSourceServerOutput::source_properties): <p>The source properties of the Source Server.</p>
    ///   - [`staging_area(Option<StagingArea>)`](crate::operation::disconnect_source_server::DisconnectSourceServerOutput::staging_area): <p>The staging area of the source server.</p>
    ///   - [`source_cloud_properties(Option<SourceCloudProperties>)`](crate::operation::disconnect_source_server::DisconnectSourceServerOutput::source_cloud_properties): <p>Source cloud properties of the Source Server.</p>
    ///   - [`replication_direction(Option<ReplicationDirection>)`](crate::operation::disconnect_source_server::DisconnectSourceServerOutput::replication_direction): <p>Replication direction of the Source Server.</p>
    ///   - [`reversed_direction_source_server_arn(Option<String>)`](crate::operation::disconnect_source_server::DisconnectSourceServerOutput::reversed_direction_source_server_arn): <p>For EC2-originated Source Servers which have been failed over and then failed back, this value will mean the ARN of the Source Server on the opposite replication direction.</p>
    ///   - [`source_network_id(Option<String>)`](crate::operation::disconnect_source_server::DisconnectSourceServerOutput::source_network_id): <p>ID of the Source Network which is protecting this Source Server's network.</p>
    /// - On failure, responds with [`SdkError<DisconnectSourceServerError>`](crate::operation::disconnect_source_server::DisconnectSourceServerError)
    pub fn disconnect_source_server(&self) -> crate::operation::disconnect_source_server::builders::DisconnectSourceServerFluentBuilder {
        crate::operation::disconnect_source_server::builders::DisconnectSourceServerFluentBuilder::new(self.handle.clone())
    }
}
