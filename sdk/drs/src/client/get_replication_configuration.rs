// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetReplicationConfiguration`](crate::operation::get_replication_configuration::builders::GetReplicationConfigurationFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`source_server_id(impl Into<String>)`](crate::operation::get_replication_configuration::builders::GetReplicationConfigurationFluentBuilder::source_server_id) / [`set_source_server_id(Option<String>)`](crate::operation::get_replication_configuration::builders::GetReplicationConfigurationFluentBuilder::set_source_server_id):<br>required: **true**<br><p>The ID of the Source Serve for this Replication Configuration.r</p><br>
    /// - On success, responds with [`GetReplicationConfigurationOutput`](crate::operation::get_replication_configuration::GetReplicationConfigurationOutput) with field(s):
    ///   - [`source_server_id(Option<String>)`](crate::operation::get_replication_configuration::GetReplicationConfigurationOutput::source_server_id): <p>The ID of the Source Server for this Replication Configuration.</p>
    ///   - [`name(Option<String>)`](crate::operation::get_replication_configuration::GetReplicationConfigurationOutput::name): <p>The name of the Replication Configuration.</p>
    ///   - [`staging_area_subnet_id(Option<String>)`](crate::operation::get_replication_configuration::GetReplicationConfigurationOutput::staging_area_subnet_id): <p>The subnet to be used by the replication staging area.</p>
    ///   - [`associate_default_security_group(Option<bool>)`](crate::operation::get_replication_configuration::GetReplicationConfigurationOutput::associate_default_security_group): <p>Whether to associate the default Elastic Disaster Recovery Security group with the Replication Configuration.</p>
    ///   - [`replication_servers_security_groups_ids(Option<Vec::<String>>)`](crate::operation::get_replication_configuration::GetReplicationConfigurationOutput::replication_servers_security_groups_ids): <p>The security group IDs that will be used by the replication server.</p>
    ///   - [`replication_server_instance_type(Option<String>)`](crate::operation::get_replication_configuration::GetReplicationConfigurationOutput::replication_server_instance_type): <p>The instance type to be used for the replication server.</p>
    ///   - [`use_dedicated_replication_server(Option<bool>)`](crate::operation::get_replication_configuration::GetReplicationConfigurationOutput::use_dedicated_replication_server): <p>Whether to use a dedicated Replication Server in the replication staging area.</p>
    ///   - [`default_large_staging_disk_type(Option<ReplicationConfigurationDefaultLargeStagingDiskType>)`](crate::operation::get_replication_configuration::GetReplicationConfigurationOutput::default_large_staging_disk_type): <p>The Staging Disk EBS volume type to be used during replication.</p>
    ///   - [`replicated_disks(Option<Vec::<ReplicationConfigurationReplicatedDisk>>)`](crate::operation::get_replication_configuration::GetReplicationConfigurationOutput::replicated_disks): <p>The configuration of the disks of the Source Server to be replicated.</p>
    ///   - [`ebs_encryption(Option<ReplicationConfigurationEbsEncryption>)`](crate::operation::get_replication_configuration::GetReplicationConfigurationOutput::ebs_encryption): <p>The type of EBS encryption to be used during replication.</p>
    ///   - [`ebs_encryption_key_arn(Option<String>)`](crate::operation::get_replication_configuration::GetReplicationConfigurationOutput::ebs_encryption_key_arn): <p>The ARN of the EBS encryption key to be used during replication.</p>
    ///   - [`bandwidth_throttling(i64)`](crate::operation::get_replication_configuration::GetReplicationConfigurationOutput::bandwidth_throttling): <p>Configure bandwidth throttling for the outbound data transfer rate of the Source Server in Mbps.</p>
    ///   - [`data_plane_routing(Option<ReplicationConfigurationDataPlaneRouting>)`](crate::operation::get_replication_configuration::GetReplicationConfigurationOutput::data_plane_routing): <p>The data plane routing mechanism that will be used for replication.</p>
    ///   - [`create_public_ip(Option<bool>)`](crate::operation::get_replication_configuration::GetReplicationConfigurationOutput::create_public_ip): <p>Whether to create a Public IP for the Recovery Instance by default.</p>
    ///   - [`staging_area_tags(Option<HashMap::<String, String>>)`](crate::operation::get_replication_configuration::GetReplicationConfigurationOutput::staging_area_tags): <p>A set of tags to be associated with all resources created in the replication staging area: EC2 replication server, EBS volumes, EBS snapshots, etc.</p>
    ///   - [`pit_policy(Option<Vec::<PitPolicyRule>>)`](crate::operation::get_replication_configuration::GetReplicationConfigurationOutput::pit_policy): <p>The Point in time (PIT) policy to manage snapshots taken during replication.</p>
    ///   - [`auto_replicate_new_disks(Option<bool>)`](crate::operation::get_replication_configuration::GetReplicationConfigurationOutput::auto_replicate_new_disks): <p>Whether to allow the AWS replication agent to automatically replicate newly added disks.</p>
    /// - On failure, responds with [`SdkError<GetReplicationConfigurationError>`](crate::operation::get_replication_configuration::GetReplicationConfigurationError)
    pub fn get_replication_configuration(
        &self,
    ) -> crate::operation::get_replication_configuration::builders::GetReplicationConfigurationFluentBuilder {
        crate::operation::get_replication_configuration::builders::GetReplicationConfigurationFluentBuilder::new(self.handle.clone())
    }
}
