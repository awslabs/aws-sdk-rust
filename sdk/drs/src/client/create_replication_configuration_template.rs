// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateReplicationConfigurationTemplate`](crate::operation::create_replication_configuration_template::builders::CreateReplicationConfigurationTemplateFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`staging_area_subnet_id(impl Into<String>)`](crate::operation::create_replication_configuration_template::builders::CreateReplicationConfigurationTemplateFluentBuilder::staging_area_subnet_id) / [`set_staging_area_subnet_id(Option<String>)`](crate::operation::create_replication_configuration_template::builders::CreateReplicationConfigurationTemplateFluentBuilder::set_staging_area_subnet_id): <p>The subnet to be used by the replication staging area.</p>
    ///   - [`associate_default_security_group(bool)`](crate::operation::create_replication_configuration_template::builders::CreateReplicationConfigurationTemplateFluentBuilder::associate_default_security_group) / [`set_associate_default_security_group(Option<bool>)`](crate::operation::create_replication_configuration_template::builders::CreateReplicationConfigurationTemplateFluentBuilder::set_associate_default_security_group): <p>Whether to associate the default Elastic Disaster Recovery Security group with the Replication Configuration Template.</p>
    ///   - [`replication_servers_security_groups_i_ds(Vec<String>)`](crate::operation::create_replication_configuration_template::builders::CreateReplicationConfigurationTemplateFluentBuilder::replication_servers_security_groups_i_ds) / [`set_replication_servers_security_groups_i_ds(Option<Vec<String>>)`](crate::operation::create_replication_configuration_template::builders::CreateReplicationConfigurationTemplateFluentBuilder::set_replication_servers_security_groups_i_ds): <p>The security group IDs that will be used by the replication server.</p>
    ///   - [`replication_server_instance_type(impl Into<String>)`](crate::operation::create_replication_configuration_template::builders::CreateReplicationConfigurationTemplateFluentBuilder::replication_server_instance_type) / [`set_replication_server_instance_type(Option<String>)`](crate::operation::create_replication_configuration_template::builders::CreateReplicationConfigurationTemplateFluentBuilder::set_replication_server_instance_type): <p>The instance type to be used for the replication server.</p>
    ///   - [`use_dedicated_replication_server(bool)`](crate::operation::create_replication_configuration_template::builders::CreateReplicationConfigurationTemplateFluentBuilder::use_dedicated_replication_server) / [`set_use_dedicated_replication_server(Option<bool>)`](crate::operation::create_replication_configuration_template::builders::CreateReplicationConfigurationTemplateFluentBuilder::set_use_dedicated_replication_server): <p>Whether to use a dedicated Replication Server in the replication staging area.</p>
    ///   - [`default_large_staging_disk_type(ReplicationConfigurationDefaultLargeStagingDiskType)`](crate::operation::create_replication_configuration_template::builders::CreateReplicationConfigurationTemplateFluentBuilder::default_large_staging_disk_type) / [`set_default_large_staging_disk_type(Option<ReplicationConfigurationDefaultLargeStagingDiskType>)`](crate::operation::create_replication_configuration_template::builders::CreateReplicationConfigurationTemplateFluentBuilder::set_default_large_staging_disk_type): <p>The Staging Disk EBS volume type to be used during replication.</p>
    ///   - [`ebs_encryption(ReplicationConfigurationEbsEncryption)`](crate::operation::create_replication_configuration_template::builders::CreateReplicationConfigurationTemplateFluentBuilder::ebs_encryption) / [`set_ebs_encryption(Option<ReplicationConfigurationEbsEncryption>)`](crate::operation::create_replication_configuration_template::builders::CreateReplicationConfigurationTemplateFluentBuilder::set_ebs_encryption): <p>The type of EBS encryption to be used during replication.</p>
    ///   - [`ebs_encryption_key_arn(impl Into<String>)`](crate::operation::create_replication_configuration_template::builders::CreateReplicationConfigurationTemplateFluentBuilder::ebs_encryption_key_arn) / [`set_ebs_encryption_key_arn(Option<String>)`](crate::operation::create_replication_configuration_template::builders::CreateReplicationConfigurationTemplateFluentBuilder::set_ebs_encryption_key_arn): <p>The ARN of the EBS encryption key to be used during replication.</p>
    ///   - [`bandwidth_throttling(i64)`](crate::operation::create_replication_configuration_template::builders::CreateReplicationConfigurationTemplateFluentBuilder::bandwidth_throttling) / [`set_bandwidth_throttling(i64)`](crate::operation::create_replication_configuration_template::builders::CreateReplicationConfigurationTemplateFluentBuilder::set_bandwidth_throttling): <p>Configure bandwidth throttling for the outbound data transfer rate of the Source Server in Mbps.</p>
    ///   - [`data_plane_routing(ReplicationConfigurationDataPlaneRouting)`](crate::operation::create_replication_configuration_template::builders::CreateReplicationConfigurationTemplateFluentBuilder::data_plane_routing) / [`set_data_plane_routing(Option<ReplicationConfigurationDataPlaneRouting>)`](crate::operation::create_replication_configuration_template::builders::CreateReplicationConfigurationTemplateFluentBuilder::set_data_plane_routing): <p>The data plane routing mechanism that will be used for replication.</p>
    ///   - [`create_public_ip(bool)`](crate::operation::create_replication_configuration_template::builders::CreateReplicationConfigurationTemplateFluentBuilder::create_public_ip) / [`set_create_public_ip(Option<bool>)`](crate::operation::create_replication_configuration_template::builders::CreateReplicationConfigurationTemplateFluentBuilder::set_create_public_ip): <p>Whether to create a Public IP for the Recovery Instance by default.</p>
    ///   - [`staging_area_tags(HashMap<String, String>)`](crate::operation::create_replication_configuration_template::builders::CreateReplicationConfigurationTemplateFluentBuilder::staging_area_tags) / [`set_staging_area_tags(Option<HashMap<String, String>>)`](crate::operation::create_replication_configuration_template::builders::CreateReplicationConfigurationTemplateFluentBuilder::set_staging_area_tags): <p>A set of tags to be associated with all resources created in the replication staging area: EC2 replication server, EBS volumes, EBS snapshots, etc.</p>
    ///   - [`pit_policy(Vec<PitPolicyRule>)`](crate::operation::create_replication_configuration_template::builders::CreateReplicationConfigurationTemplateFluentBuilder::pit_policy) / [`set_pit_policy(Option<Vec<PitPolicyRule>>)`](crate::operation::create_replication_configuration_template::builders::CreateReplicationConfigurationTemplateFluentBuilder::set_pit_policy): <p>The Point in time (PIT) policy to manage snapshots taken during replication.</p>
    ///   - [`tags(HashMap<String, String>)`](crate::operation::create_replication_configuration_template::builders::CreateReplicationConfigurationTemplateFluentBuilder::tags) / [`set_tags(Option<HashMap<String, String>>)`](crate::operation::create_replication_configuration_template::builders::CreateReplicationConfigurationTemplateFluentBuilder::set_tags): <p>A set of tags to be associated with the Replication Configuration Template resource.</p>
    /// - On success, responds with [`CreateReplicationConfigurationTemplateOutput`](crate::operation::create_replication_configuration_template::CreateReplicationConfigurationTemplateOutput) with field(s):
    ///   - [`replication_configuration_template_id(Option<String>)`](crate::operation::create_replication_configuration_template::CreateReplicationConfigurationTemplateOutput::replication_configuration_template_id): <p>The Replication Configuration Template ID.</p>
    ///   - [`arn(Option<String>)`](crate::operation::create_replication_configuration_template::CreateReplicationConfigurationTemplateOutput::arn): <p>The Replication Configuration Template ARN.</p>
    ///   - [`staging_area_subnet_id(Option<String>)`](crate::operation::create_replication_configuration_template::CreateReplicationConfigurationTemplateOutput::staging_area_subnet_id): <p>The subnet to be used by the replication staging area.</p>
    ///   - [`associate_default_security_group(Option<bool>)`](crate::operation::create_replication_configuration_template::CreateReplicationConfigurationTemplateOutput::associate_default_security_group): <p>Whether to associate the default Elastic Disaster Recovery Security group with the Replication Configuration Template.</p>
    ///   - [`replication_servers_security_groups_i_ds(Option<Vec<String>>)`](crate::operation::create_replication_configuration_template::CreateReplicationConfigurationTemplateOutput::replication_servers_security_groups_i_ds): <p>The security group IDs that will be used by the replication server.</p>
    ///   - [`replication_server_instance_type(Option<String>)`](crate::operation::create_replication_configuration_template::CreateReplicationConfigurationTemplateOutput::replication_server_instance_type): <p>The instance type to be used for the replication server.</p>
    ///   - [`use_dedicated_replication_server(Option<bool>)`](crate::operation::create_replication_configuration_template::CreateReplicationConfigurationTemplateOutput::use_dedicated_replication_server): <p>Whether to use a dedicated Replication Server in the replication staging area.</p>
    ///   - [`default_large_staging_disk_type(Option<ReplicationConfigurationDefaultLargeStagingDiskType>)`](crate::operation::create_replication_configuration_template::CreateReplicationConfigurationTemplateOutput::default_large_staging_disk_type): <p>The Staging Disk EBS volume type to be used during replication.</p>
    ///   - [`ebs_encryption(Option<ReplicationConfigurationEbsEncryption>)`](crate::operation::create_replication_configuration_template::CreateReplicationConfigurationTemplateOutput::ebs_encryption): <p>The type of EBS encryption to be used during replication.</p>
    ///   - [`ebs_encryption_key_arn(Option<String>)`](crate::operation::create_replication_configuration_template::CreateReplicationConfigurationTemplateOutput::ebs_encryption_key_arn): <p>The ARN of the EBS encryption key to be used during replication.</p>
    ///   - [`bandwidth_throttling(i64)`](crate::operation::create_replication_configuration_template::CreateReplicationConfigurationTemplateOutput::bandwidth_throttling): <p>Configure bandwidth throttling for the outbound data transfer rate of the Source Server in Mbps.</p>
    ///   - [`data_plane_routing(Option<ReplicationConfigurationDataPlaneRouting>)`](crate::operation::create_replication_configuration_template::CreateReplicationConfigurationTemplateOutput::data_plane_routing): <p>The data plane routing mechanism that will be used for replication.</p>
    ///   - [`create_public_ip(Option<bool>)`](crate::operation::create_replication_configuration_template::CreateReplicationConfigurationTemplateOutput::create_public_ip): <p>Whether to create a Public IP for the Recovery Instance by default.</p>
    ///   - [`staging_area_tags(Option<HashMap<String, String>>)`](crate::operation::create_replication_configuration_template::CreateReplicationConfigurationTemplateOutput::staging_area_tags): <p>A set of tags to be associated with all resources created in the replication staging area: EC2 replication server, EBS volumes, EBS snapshots, etc.</p>
    ///   - [`tags(Option<HashMap<String, String>>)`](crate::operation::create_replication_configuration_template::CreateReplicationConfigurationTemplateOutput::tags): <p>A set of tags to be associated with the Replication Configuration Template resource.</p>
    ///   - [`pit_policy(Option<Vec<PitPolicyRule>>)`](crate::operation::create_replication_configuration_template::CreateReplicationConfigurationTemplateOutput::pit_policy): <p>The Point in time (PIT) policy to manage snapshots taken during replication.</p>
    /// - On failure, responds with [`SdkError<CreateReplicationConfigurationTemplateError>`](crate::operation::create_replication_configuration_template::CreateReplicationConfigurationTemplateError)
    pub fn create_replication_configuration_template(&self) -> crate::operation::create_replication_configuration_template::builders::CreateReplicationConfigurationTemplateFluentBuilder{
        crate::operation::create_replication_configuration_template::builders::CreateReplicationConfigurationTemplateFluentBuilder::new(self.handle.clone())
    }
}
