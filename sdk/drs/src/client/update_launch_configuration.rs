// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateLaunchConfiguration`](crate::operation::update_launch_configuration::builders::UpdateLaunchConfigurationFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`source_server_id(impl Into<String>)`](crate::operation::update_launch_configuration::builders::UpdateLaunchConfigurationFluentBuilder::source_server_id) / [`set_source_server_id(Option<String>)`](crate::operation::update_launch_configuration::builders::UpdateLaunchConfigurationFluentBuilder::set_source_server_id):<br>required: **true**<br><p>The ID of the Source Server that we want to retrieve a Launch Configuration for.</p><br>
    ///   - [`name(impl Into<String>)`](crate::operation::update_launch_configuration::builders::UpdateLaunchConfigurationFluentBuilder::name) / [`set_name(Option<String>)`](crate::operation::update_launch_configuration::builders::UpdateLaunchConfigurationFluentBuilder::set_name):<br>required: **false**<br><p>The name of the launch configuration.</p><br>
    ///   - [`launch_disposition(LaunchDisposition)`](crate::operation::update_launch_configuration::builders::UpdateLaunchConfigurationFluentBuilder::launch_disposition) / [`set_launch_disposition(Option<LaunchDisposition>)`](crate::operation::update_launch_configuration::builders::UpdateLaunchConfigurationFluentBuilder::set_launch_disposition):<br>required: **false**<br><p>The state of the Recovery Instance in EC2 after the recovery operation.</p><br>
    ///   - [`target_instance_type_right_sizing_method(TargetInstanceTypeRightSizingMethod)`](crate::operation::update_launch_configuration::builders::UpdateLaunchConfigurationFluentBuilder::target_instance_type_right_sizing_method) / [`set_target_instance_type_right_sizing_method(Option<TargetInstanceTypeRightSizingMethod>)`](crate::operation::update_launch_configuration::builders::UpdateLaunchConfigurationFluentBuilder::set_target_instance_type_right_sizing_method):<br>required: **false**<br><p>Whether Elastic Disaster Recovery should try to automatically choose the instance type that best matches the OS, CPU, and RAM of your Source Server.</p><br>
    ///   - [`copy_private_ip(bool)`](crate::operation::update_launch_configuration::builders::UpdateLaunchConfigurationFluentBuilder::copy_private_ip) / [`set_copy_private_ip(Option<bool>)`](crate::operation::update_launch_configuration::builders::UpdateLaunchConfigurationFluentBuilder::set_copy_private_ip):<br>required: **false**<br><p>Whether we should copy the Private IP of the Source Server to the Recovery Instance.</p><br>
    ///   - [`copy_tags(bool)`](crate::operation::update_launch_configuration::builders::UpdateLaunchConfigurationFluentBuilder::copy_tags) / [`set_copy_tags(Option<bool>)`](crate::operation::update_launch_configuration::builders::UpdateLaunchConfigurationFluentBuilder::set_copy_tags):<br>required: **false**<br><p>Whether we want to copy the tags of the Source Server to the EC2 machine of the Recovery Instance.</p><br>
    ///   - [`licensing(Licensing)`](crate::operation::update_launch_configuration::builders::UpdateLaunchConfigurationFluentBuilder::licensing) / [`set_licensing(Option<Licensing>)`](crate::operation::update_launch_configuration::builders::UpdateLaunchConfigurationFluentBuilder::set_licensing):<br>required: **false**<br><p>The licensing configuration to be used for this launch configuration.</p><br>
    ///   - [`post_launch_enabled(bool)`](crate::operation::update_launch_configuration::builders::UpdateLaunchConfigurationFluentBuilder::post_launch_enabled) / [`set_post_launch_enabled(Option<bool>)`](crate::operation::update_launch_configuration::builders::UpdateLaunchConfigurationFluentBuilder::set_post_launch_enabled):<br>required: **false**<br><p>Whether we want to enable post-launch actions for the Source Server.</p><br>
    ///   - [`launch_into_instance_properties(LaunchIntoInstanceProperties)`](crate::operation::update_launch_configuration::builders::UpdateLaunchConfigurationFluentBuilder::launch_into_instance_properties) / [`set_launch_into_instance_properties(Option<LaunchIntoInstanceProperties>)`](crate::operation::update_launch_configuration::builders::UpdateLaunchConfigurationFluentBuilder::set_launch_into_instance_properties):<br>required: **false**<br><p>Launch into existing instance properties.</p><br>
    /// - On success, responds with [`UpdateLaunchConfigurationOutput`](crate::operation::update_launch_configuration::UpdateLaunchConfigurationOutput) with field(s):
    ///   - [`source_server_id(Option<String>)`](crate::operation::update_launch_configuration::UpdateLaunchConfigurationOutput::source_server_id): <p>The ID of the Source Server for this launch configuration.</p>
    ///   - [`name(Option<String>)`](crate::operation::update_launch_configuration::UpdateLaunchConfigurationOutput::name): <p>The name of the launch configuration.</p>
    ///   - [`ec2_launch_template_id(Option<String>)`](crate::operation::update_launch_configuration::UpdateLaunchConfigurationOutput::ec2_launch_template_id): <p>The EC2 launch template ID of this launch configuration.</p>
    ///   - [`launch_disposition(Option<LaunchDisposition>)`](crate::operation::update_launch_configuration::UpdateLaunchConfigurationOutput::launch_disposition): <p>The state of the Recovery Instance in EC2 after the recovery operation.</p>
    ///   - [`target_instance_type_right_sizing_method(Option<TargetInstanceTypeRightSizingMethod>)`](crate::operation::update_launch_configuration::UpdateLaunchConfigurationOutput::target_instance_type_right_sizing_method): <p>Whether Elastic Disaster Recovery should try to automatically choose the instance type that best matches the OS, CPU, and RAM of your Source Server.</p>
    ///   - [`copy_private_ip(Option<bool>)`](crate::operation::update_launch_configuration::UpdateLaunchConfigurationOutput::copy_private_ip): <p>Whether we should copy the Private IP of the Source Server to the Recovery Instance.</p>
    ///   - [`copy_tags(Option<bool>)`](crate::operation::update_launch_configuration::UpdateLaunchConfigurationOutput::copy_tags): <p>Whether we want to copy the tags of the Source Server to the EC2 machine of the Recovery Instance.</p>
    ///   - [`licensing(Option<Licensing>)`](crate::operation::update_launch_configuration::UpdateLaunchConfigurationOutput::licensing): <p>The licensing configuration to be used for this launch configuration.</p>
    ///   - [`post_launch_enabled(Option<bool>)`](crate::operation::update_launch_configuration::UpdateLaunchConfigurationOutput::post_launch_enabled): <p>Whether we want to activate post-launch actions for the Source Server.</p>
    ///   - [`launch_into_instance_properties(Option<LaunchIntoInstanceProperties>)`](crate::operation::update_launch_configuration::UpdateLaunchConfigurationOutput::launch_into_instance_properties): <p>Launch into existing instance properties.</p>
    /// - On failure, responds with [`SdkError<UpdateLaunchConfigurationError>`](crate::operation::update_launch_configuration::UpdateLaunchConfigurationError)
    pub fn update_launch_configuration(&self) -> crate::operation::update_launch_configuration::builders::UpdateLaunchConfigurationFluentBuilder {
        crate::operation::update_launch_configuration::builders::UpdateLaunchConfigurationFluentBuilder::new(self.handle.clone())
    }
}
