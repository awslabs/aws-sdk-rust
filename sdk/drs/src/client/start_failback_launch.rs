// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`StartFailbackLaunch`](crate::client::fluent_builders::StartFailbackLaunch) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`recovery_instance_i_ds(Vec<String>)`](crate::client::fluent_builders::StartFailbackLaunch::recovery_instance_i_ds) / [`set_recovery_instance_i_ds(Option<Vec<String>>)`](crate::client::fluent_builders::StartFailbackLaunch::set_recovery_instance_i_ds): <p>The IDs of the Recovery Instance whose failback launch we want to request.</p>
    ///   - [`tags(HashMap<String, String>)`](crate::client::fluent_builders::StartFailbackLaunch::tags) / [`set_tags(Option<HashMap<String, String>>)`](crate::client::fluent_builders::StartFailbackLaunch::set_tags): <p>The tags to be associated with the failback launch Job.</p>
    /// - On success, responds with [`StartFailbackLaunchOutput`](crate::output::StartFailbackLaunchOutput) with field(s):
    ///   - [`job(Option<Job>)`](crate::output::StartFailbackLaunchOutput::job): <p>The failback launch Job.</p>
    /// - On failure, responds with [`SdkError<StartFailbackLaunchError>`](crate::error::StartFailbackLaunchError)
    pub fn start_failback_launch(&self) -> crate::client::fluent_builders::StartFailbackLaunch {
        crate::client::fluent_builders::StartFailbackLaunch::new(self.handle.clone())
    }
}
