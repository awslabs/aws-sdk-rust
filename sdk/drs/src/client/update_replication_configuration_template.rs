// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateReplicationConfigurationTemplate`](crate::operation::update_replication_configuration_template::builders::UpdateReplicationConfigurationTemplateFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`replication_configuration_template_id(impl Into<String>)`](crate::operation::update_replication_configuration_template::builders::UpdateReplicationConfigurationTemplateFluentBuilder::replication_configuration_template_id) / [`set_replication_configuration_template_id(Option<String>)`](crate::operation::update_replication_configuration_template::builders::UpdateReplicationConfigurationTemplateFluentBuilder::set_replication_configuration_template_id):<br>required: **true**<br><p>The Replication Configuration Template ID.</p><br>
    ///   - [`arn(impl Into<String>)`](crate::operation::update_replication_configuration_template::builders::UpdateReplicationConfigurationTemplateFluentBuilder::arn) / [`set_arn(Option<String>)`](crate::operation::update_replication_configuration_template::builders::UpdateReplicationConfigurationTemplateFluentBuilder::set_arn):<br>required: **false**<br><p>The Replication Configuration Template ARN.</p><br>
    ///   - [`staging_area_subnet_id(impl Into<String>)`](crate::operation::update_replication_configuration_template::builders::UpdateReplicationConfigurationTemplateFluentBuilder::staging_area_subnet_id) / [`set_staging_area_subnet_id(Option<String>)`](crate::operation::update_replication_configuration_template::builders::UpdateReplicationConfigurationTemplateFluentBuilder::set_staging_area_subnet_id):<br>required: **false**<br><p>The subnet to be used by the replication staging area.</p><br>
    ///   - [`associate_default_security_group(bool)`](crate::operation::update_replication_configuration_template::builders::UpdateReplicationConfigurationTemplateFluentBuilder::associate_default_security_group) / [`set_associate_default_security_group(Option<bool>)`](crate::operation::update_replication_configuration_template::builders::UpdateReplicationConfigurationTemplateFluentBuilder::set_associate_default_security_group):<br>required: **false**<br><p>Whether to associate the default Elastic Disaster Recovery Security group with the Replication Configuration Template.</p><br>
    ///   - [`replication_servers_security_groups_ids(impl Into<String>)`](crate::operation::update_replication_configuration_template::builders::UpdateReplicationConfigurationTemplateFluentBuilder::replication_servers_security_groups_ids) / [`set_replication_servers_security_groups_ids(Option<Vec::<String>>)`](crate::operation::update_replication_configuration_template::builders::UpdateReplicationConfigurationTemplateFluentBuilder::set_replication_servers_security_groups_ids):<br>required: **false**<br><p>The security group IDs that will be used by the replication server.</p><br>
    ///   - [`replication_server_instance_type(impl Into<String>)`](crate::operation::update_replication_configuration_template::builders::UpdateReplicationConfigurationTemplateFluentBuilder::replication_server_instance_type) / [`set_replication_server_instance_type(Option<String>)`](crate::operation::update_replication_configuration_template::builders::UpdateReplicationConfigurationTemplateFluentBuilder::set_replication_server_instance_type):<br>required: **false**<br><p>The instance type to be used for the replication server.</p><br>
    ///   - [`use_dedicated_replication_server(bool)`](crate::operation::update_replication_configuration_template::builders::UpdateReplicationConfigurationTemplateFluentBuilder::use_dedicated_replication_server) / [`set_use_dedicated_replication_server(Option<bool>)`](crate::operation::update_replication_configuration_template::builders::UpdateReplicationConfigurationTemplateFluentBuilder::set_use_dedicated_replication_server):<br>required: **false**<br><p>Whether to use a dedicated Replication Server in the replication staging area.</p><br>
    ///   - [`default_large_staging_disk_type(ReplicationConfigurationDefaultLargeStagingDiskType)`](crate::operation::update_replication_configuration_template::builders::UpdateReplicationConfigurationTemplateFluentBuilder::default_large_staging_disk_type) / [`set_default_large_staging_disk_type(Option<ReplicationConfigurationDefaultLargeStagingDiskType>)`](crate::operation::update_replication_configuration_template::builders::UpdateReplicationConfigurationTemplateFluentBuilder::set_default_large_staging_disk_type):<br>required: **false**<br><p>The Staging Disk EBS volume type to be used during replication.</p><br>
    ///   - [`ebs_encryption(ReplicationConfigurationEbsEncryption)`](crate::operation::update_replication_configuration_template::builders::UpdateReplicationConfigurationTemplateFluentBuilder::ebs_encryption) / [`set_ebs_encryption(Option<ReplicationConfigurationEbsEncryption>)`](crate::operation::update_replication_configuration_template::builders::UpdateReplicationConfigurationTemplateFluentBuilder::set_ebs_encryption):<br>required: **false**<br><p>The type of EBS encryption to be used during replication.</p><br>
    ///   - [`ebs_encryption_key_arn(impl Into<String>)`](crate::operation::update_replication_configuration_template::builders::UpdateReplicationConfigurationTemplateFluentBuilder::ebs_encryption_key_arn) / [`set_ebs_encryption_key_arn(Option<String>)`](crate::operation::update_replication_configuration_template::builders::UpdateReplicationConfigurationTemplateFluentBuilder::set_ebs_encryption_key_arn):<br>required: **false**<br><p>The ARN of the EBS encryption key to be used during replication.</p><br>
    ///   - [`bandwidth_throttling(i64)`](crate::operation::update_replication_configuration_template::builders::UpdateReplicationConfigurationTemplateFluentBuilder::bandwidth_throttling) / [`set_bandwidth_throttling(Option<i64>)`](crate::operation::update_replication_configuration_template::builders::UpdateReplicationConfigurationTemplateFluentBuilder::set_bandwidth_throttling):<br>required: **false**<br><p>Configure bandwidth throttling for the outbound data transfer rate of the Source Server in Mbps.</p><br>
    ///   - [`data_plane_routing(ReplicationConfigurationDataPlaneRouting)`](crate::operation::update_replication_configuration_template::builders::UpdateReplicationConfigurationTemplateFluentBuilder::data_plane_routing) / [`set_data_plane_routing(Option<ReplicationConfigurationDataPlaneRouting>)`](crate::operation::update_replication_configuration_template::builders::UpdateReplicationConfigurationTemplateFluentBuilder::set_data_plane_routing):<br>required: **false**<br><p>The data plane routing mechanism that will be used for replication.</p><br>
    ///   - [`create_public_ip(bool)`](crate::operation::update_replication_configuration_template::builders::UpdateReplicationConfigurationTemplateFluentBuilder::create_public_ip) / [`set_create_public_ip(Option<bool>)`](crate::operation::update_replication_configuration_template::builders::UpdateReplicationConfigurationTemplateFluentBuilder::set_create_public_ip):<br>required: **false**<br><p>Whether to create a Public IP for the Recovery Instance by default.</p><br>
    ///   - [`staging_area_tags(impl Into<String>, impl Into<String>)`](crate::operation::update_replication_configuration_template::builders::UpdateReplicationConfigurationTemplateFluentBuilder::staging_area_tags) / [`set_staging_area_tags(Option<HashMap::<String, String>>)`](crate::operation::update_replication_configuration_template::builders::UpdateReplicationConfigurationTemplateFluentBuilder::set_staging_area_tags):<br>required: **false**<br><p>A set of tags to be associated with all resources created in the replication staging area: EC2 replication server, EBS volumes, EBS snapshots, etc.</p><br>
    ///   - [`pit_policy(PitPolicyRule)`](crate::operation::update_replication_configuration_template::builders::UpdateReplicationConfigurationTemplateFluentBuilder::pit_policy) / [`set_pit_policy(Option<Vec::<PitPolicyRule>>)`](crate::operation::update_replication_configuration_template::builders::UpdateReplicationConfigurationTemplateFluentBuilder::set_pit_policy):<br>required: **false**<br><p>The Point in time (PIT) policy to manage snapshots taken during replication.</p><br>
    ///   - [`auto_replicate_new_disks(bool)`](crate::operation::update_replication_configuration_template::builders::UpdateReplicationConfigurationTemplateFluentBuilder::auto_replicate_new_disks) / [`set_auto_replicate_new_disks(Option<bool>)`](crate::operation::update_replication_configuration_template::builders::UpdateReplicationConfigurationTemplateFluentBuilder::set_auto_replicate_new_disks):<br>required: **false**<br><p>Whether to allow the AWS replication agent to automatically replicate newly added disks.</p><br>
    /// - On success, responds with [`UpdateReplicationConfigurationTemplateOutput`](crate::operation::update_replication_configuration_template::UpdateReplicationConfigurationTemplateOutput) with field(s):
    ///   - [`replication_configuration_template_id(String)`](crate::operation::update_replication_configuration_template::UpdateReplicationConfigurationTemplateOutput::replication_configuration_template_id): <p>The Replication Configuration Template ID.</p>
    ///   - [`arn(Option<String>)`](crate::operation::update_replication_configuration_template::UpdateReplicationConfigurationTemplateOutput::arn): <p>The Replication Configuration Template ARN.</p>
    ///   - [`staging_area_subnet_id(Option<String>)`](crate::operation::update_replication_configuration_template::UpdateReplicationConfigurationTemplateOutput::staging_area_subnet_id): <p>The subnet to be used by the replication staging area.</p>
    ///   - [`associate_default_security_group(Option<bool>)`](crate::operation::update_replication_configuration_template::UpdateReplicationConfigurationTemplateOutput::associate_default_security_group): <p>Whether to associate the default Elastic Disaster Recovery Security group with the Replication Configuration Template.</p>
    ///   - [`replication_servers_security_groups_ids(Option<Vec::<String>>)`](crate::operation::update_replication_configuration_template::UpdateReplicationConfigurationTemplateOutput::replication_servers_security_groups_ids): <p>The security group IDs that will be used by the replication server.</p>
    ///   - [`replication_server_instance_type(Option<String>)`](crate::operation::update_replication_configuration_template::UpdateReplicationConfigurationTemplateOutput::replication_server_instance_type): <p>The instance type to be used for the replication server.</p>
    ///   - [`use_dedicated_replication_server(Option<bool>)`](crate::operation::update_replication_configuration_template::UpdateReplicationConfigurationTemplateOutput::use_dedicated_replication_server): <p>Whether to use a dedicated Replication Server in the replication staging area.</p>
    ///   - [`default_large_staging_disk_type(Option<ReplicationConfigurationDefaultLargeStagingDiskType>)`](crate::operation::update_replication_configuration_template::UpdateReplicationConfigurationTemplateOutput::default_large_staging_disk_type): <p>The Staging Disk EBS volume type to be used during replication.</p>
    ///   - [`ebs_encryption(Option<ReplicationConfigurationEbsEncryption>)`](crate::operation::update_replication_configuration_template::UpdateReplicationConfigurationTemplateOutput::ebs_encryption): <p>The type of EBS encryption to be used during replication.</p>
    ///   - [`ebs_encryption_key_arn(Option<String>)`](crate::operation::update_replication_configuration_template::UpdateReplicationConfigurationTemplateOutput::ebs_encryption_key_arn): <p>The ARN of the EBS encryption key to be used during replication.</p>
    ///   - [`bandwidth_throttling(i64)`](crate::operation::update_replication_configuration_template::UpdateReplicationConfigurationTemplateOutput::bandwidth_throttling): <p>Configure bandwidth throttling for the outbound data transfer rate of the Source Server in Mbps.</p>
    ///   - [`data_plane_routing(Option<ReplicationConfigurationDataPlaneRouting>)`](crate::operation::update_replication_configuration_template::UpdateReplicationConfigurationTemplateOutput::data_plane_routing): <p>The data plane routing mechanism that will be used for replication.</p>
    ///   - [`create_public_ip(Option<bool>)`](crate::operation::update_replication_configuration_template::UpdateReplicationConfigurationTemplateOutput::create_public_ip): <p>Whether to create a Public IP for the Recovery Instance by default.</p>
    ///   - [`staging_area_tags(Option<HashMap::<String, String>>)`](crate::operation::update_replication_configuration_template::UpdateReplicationConfigurationTemplateOutput::staging_area_tags): <p>A set of tags to be associated with all resources created in the replication staging area: EC2 replication server, EBS volumes, EBS snapshots, etc.</p>
    ///   - [`tags(Option<HashMap::<String, String>>)`](crate::operation::update_replication_configuration_template::UpdateReplicationConfigurationTemplateOutput::tags): <p>A set of tags to be associated with the Replication Configuration Template resource.</p>
    ///   - [`pit_policy(Option<Vec::<PitPolicyRule>>)`](crate::operation::update_replication_configuration_template::UpdateReplicationConfigurationTemplateOutput::pit_policy): <p>The Point in time (PIT) policy to manage snapshots taken during replication.</p>
    ///   - [`auto_replicate_new_disks(Option<bool>)`](crate::operation::update_replication_configuration_template::UpdateReplicationConfigurationTemplateOutput::auto_replicate_new_disks): <p>Whether to allow the AWS replication agent to automatically replicate newly added disks.</p>
    /// - On failure, responds with [`SdkError<UpdateReplicationConfigurationTemplateError>`](crate::operation::update_replication_configuration_template::UpdateReplicationConfigurationTemplateError)
    pub fn update_replication_configuration_template(
        &self,
    ) -> crate::operation::update_replication_configuration_template::builders::UpdateReplicationConfigurationTemplateFluentBuilder {
        crate::operation::update_replication_configuration_template::builders::UpdateReplicationConfigurationTemplateFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
