// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>An object containing information regarding the initiation of the last launch of a Source Server.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct LifeCycleLastLaunchInitiated {
    /// <p>The date and time the last Source Server launch was initiated.</p>
    #[doc(hidden)]
    pub api_call_date_time: std::option::Option<std::string::String>,
    /// <p>The ID of the Job that was used to last launch the Source Server.</p>
    #[doc(hidden)]
    pub job_id: std::option::Option<std::string::String>,
    /// <p>The Job type that was used to last launch the Source Server.</p>
    #[doc(hidden)]
    pub r#type: std::option::Option<crate::types::LastLaunchType>,
}
impl LifeCycleLastLaunchInitiated {
    /// <p>The date and time the last Source Server launch was initiated.</p>
    pub fn api_call_date_time(&self) -> std::option::Option<&str> {
        self.api_call_date_time.as_deref()
    }
    /// <p>The ID of the Job that was used to last launch the Source Server.</p>
    pub fn job_id(&self) -> std::option::Option<&str> {
        self.job_id.as_deref()
    }
    /// <p>The Job type that was used to last launch the Source Server.</p>
    pub fn r#type(&self) -> std::option::Option<&crate::types::LastLaunchType> {
        self.r#type.as_ref()
    }
}
impl LifeCycleLastLaunchInitiated {
    /// Creates a new builder-style object to manufacture [`LifeCycleLastLaunchInitiated`](crate::types::LifeCycleLastLaunchInitiated).
    pub fn builder() -> crate::types::builders::LifeCycleLastLaunchInitiatedBuilder {
        crate::types::builders::LifeCycleLastLaunchInitiatedBuilder::default()
    }
}

/// A builder for [`LifeCycleLastLaunchInitiated`](crate::types::LifeCycleLastLaunchInitiated).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct LifeCycleLastLaunchInitiatedBuilder {
    pub(crate) api_call_date_time: std::option::Option<std::string::String>,
    pub(crate) job_id: std::option::Option<std::string::String>,
    pub(crate) r#type: std::option::Option<crate::types::LastLaunchType>,
}
impl LifeCycleLastLaunchInitiatedBuilder {
    /// <p>The date and time the last Source Server launch was initiated.</p>
    pub fn api_call_date_time(mut self, input: impl Into<std::string::String>) -> Self {
        self.api_call_date_time = Some(input.into());
        self
    }
    /// <p>The date and time the last Source Server launch was initiated.</p>
    pub fn set_api_call_date_time(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.api_call_date_time = input;
        self
    }
    /// <p>The ID of the Job that was used to last launch the Source Server.</p>
    pub fn job_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.job_id = Some(input.into());
        self
    }
    /// <p>The ID of the Job that was used to last launch the Source Server.</p>
    pub fn set_job_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.job_id = input;
        self
    }
    /// <p>The Job type that was used to last launch the Source Server.</p>
    pub fn r#type(mut self, input: crate::types::LastLaunchType) -> Self {
        self.r#type = Some(input);
        self
    }
    /// <p>The Job type that was used to last launch the Source Server.</p>
    pub fn set_type(mut self, input: std::option::Option<crate::types::LastLaunchType>) -> Self {
        self.r#type = input;
        self
    }
    /// Consumes the builder and constructs a [`LifeCycleLastLaunchInitiated`](crate::types::LifeCycleLastLaunchInitiated).
    pub fn build(self) -> crate::types::LifeCycleLastLaunchInitiated {
        crate::types::LifeCycleLastLaunchInitiated {
            api_call_date_time: self.api_call_date_time,
            job_id: self.job_id,
            r#type: self.r#type,
        }
    }
}
