// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A set of filters by which to return Jobs.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DescribeJobsRequestFilters {
    /// <p>An array of Job IDs that should be returned. An empty array means all jobs.</p>
    #[doc(hidden)]
    pub job_i_ds: std::option::Option<std::vec::Vec<std::string::String>>,
    /// <p>The start date in a date range query.</p>
    #[doc(hidden)]
    pub from_date: std::option::Option<std::string::String>,
    /// <p>The end date in a date range query.</p>
    #[doc(hidden)]
    pub to_date: std::option::Option<std::string::String>,
}
impl DescribeJobsRequestFilters {
    /// <p>An array of Job IDs that should be returned. An empty array means all jobs.</p>
    pub fn job_i_ds(&self) -> std::option::Option<&[std::string::String]> {
        self.job_i_ds.as_deref()
    }
    /// <p>The start date in a date range query.</p>
    pub fn from_date(&self) -> std::option::Option<&str> {
        self.from_date.as_deref()
    }
    /// <p>The end date in a date range query.</p>
    pub fn to_date(&self) -> std::option::Option<&str> {
        self.to_date.as_deref()
    }
}
impl DescribeJobsRequestFilters {
    /// Creates a new builder-style object to manufacture [`DescribeJobsRequestFilters`](crate::types::DescribeJobsRequestFilters).
    pub fn builder() -> crate::types::builders::DescribeJobsRequestFiltersBuilder {
        crate::types::builders::DescribeJobsRequestFiltersBuilder::default()
    }
}

/// A builder for [`DescribeJobsRequestFilters`](crate::types::DescribeJobsRequestFilters).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DescribeJobsRequestFiltersBuilder {
    pub(crate) job_i_ds: std::option::Option<std::vec::Vec<std::string::String>>,
    pub(crate) from_date: std::option::Option<std::string::String>,
    pub(crate) to_date: std::option::Option<std::string::String>,
}
impl DescribeJobsRequestFiltersBuilder {
    /// Appends an item to `job_i_ds`.
    ///
    /// To override the contents of this collection use [`set_job_i_ds`](Self::set_job_i_ds).
    ///
    /// <p>An array of Job IDs that should be returned. An empty array means all jobs.</p>
    pub fn job_i_ds(mut self, input: impl Into<std::string::String>) -> Self {
        let mut v = self.job_i_ds.unwrap_or_default();
        v.push(input.into());
        self.job_i_ds = Some(v);
        self
    }
    /// <p>An array of Job IDs that should be returned. An empty array means all jobs.</p>
    pub fn set_job_i_ds(
        mut self,
        input: std::option::Option<std::vec::Vec<std::string::String>>,
    ) -> Self {
        self.job_i_ds = input;
        self
    }
    /// <p>The start date in a date range query.</p>
    pub fn from_date(mut self, input: impl Into<std::string::String>) -> Self {
        self.from_date = Some(input.into());
        self
    }
    /// <p>The start date in a date range query.</p>
    pub fn set_from_date(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.from_date = input;
        self
    }
    /// <p>The end date in a date range query.</p>
    pub fn to_date(mut self, input: impl Into<std::string::String>) -> Self {
        self.to_date = Some(input.into());
        self
    }
    /// <p>The end date in a date range query.</p>
    pub fn set_to_date(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.to_date = input;
        self
    }
    /// Consumes the builder and constructs a [`DescribeJobsRequestFilters`](crate::types::DescribeJobsRequestFilters).
    pub fn build(self) -> crate::types::DescribeJobsRequestFilters {
        crate::types::DescribeJobsRequestFilters {
            job_i_ds: self.job_i_ds,
            from_date: self.from_date,
            to_date: self.to_date,
        }
    }
}
