// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Error in data replication.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct RecoveryInstanceDataReplicationError {
    /// <p>Error in data replication.</p>
    #[doc(hidden)]
    pub error: std::option::Option<crate::types::FailbackReplicationError>,
    /// <p>Error in data replication.</p>
    #[doc(hidden)]
    pub raw_error: std::option::Option<std::string::String>,
}
impl RecoveryInstanceDataReplicationError {
    /// <p>Error in data replication.</p>
    pub fn error(&self) -> std::option::Option<&crate::types::FailbackReplicationError> {
        self.error.as_ref()
    }
    /// <p>Error in data replication.</p>
    pub fn raw_error(&self) -> std::option::Option<&str> {
        self.raw_error.as_deref()
    }
}
impl RecoveryInstanceDataReplicationError {
    /// Creates a new builder-style object to manufacture [`RecoveryInstanceDataReplicationError`](crate::types::RecoveryInstanceDataReplicationError).
    pub fn builder() -> crate::types::builders::RecoveryInstanceDataReplicationErrorBuilder {
        crate::types::builders::RecoveryInstanceDataReplicationErrorBuilder::default()
    }
}

/// A builder for [`RecoveryInstanceDataReplicationError`](crate::types::RecoveryInstanceDataReplicationError).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct RecoveryInstanceDataReplicationErrorBuilder {
    pub(crate) error: std::option::Option<crate::types::FailbackReplicationError>,
    pub(crate) raw_error: std::option::Option<std::string::String>,
}
impl RecoveryInstanceDataReplicationErrorBuilder {
    /// <p>Error in data replication.</p>
    pub fn error(mut self, input: crate::types::FailbackReplicationError) -> Self {
        self.error = Some(input);
        self
    }
    /// <p>Error in data replication.</p>
    pub fn set_error(
        mut self,
        input: std::option::Option<crate::types::FailbackReplicationError>,
    ) -> Self {
        self.error = input;
        self
    }
    /// <p>Error in data replication.</p>
    pub fn raw_error(mut self, input: impl Into<std::string::String>) -> Self {
        self.raw_error = Some(input.into());
        self
    }
    /// <p>Error in data replication.</p>
    pub fn set_raw_error(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.raw_error = input;
        self
    }
    /// Consumes the builder and constructs a [`RecoveryInstanceDataReplicationError`](crate::types::RecoveryInstanceDataReplicationError).
    pub fn build(self) -> crate::types::RecoveryInstanceDataReplicationError {
        crate::types::RecoveryInstanceDataReplicationError {
            error: self.error,
            raw_error: self.raw_error,
        }
    }
}
