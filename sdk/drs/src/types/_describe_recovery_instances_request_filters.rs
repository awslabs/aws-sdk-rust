// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A set of filters by which to return Recovery Instances.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DescribeRecoveryInstancesRequestFilters {
    /// <p>An array of Recovery Instance IDs that should be returned. An empty array means all Recovery Instances.</p>
    #[doc(hidden)]
    pub recovery_instance_i_ds: std::option::Option<std::vec::Vec<std::string::String>>,
    /// <p>An array of Source Server IDs for which associated Recovery Instances should be returned.</p>
    #[doc(hidden)]
    pub source_server_i_ds: std::option::Option<std::vec::Vec<std::string::String>>,
}
impl DescribeRecoveryInstancesRequestFilters {
    /// <p>An array of Recovery Instance IDs that should be returned. An empty array means all Recovery Instances.</p>
    pub fn recovery_instance_i_ds(&self) -> std::option::Option<&[std::string::String]> {
        self.recovery_instance_i_ds.as_deref()
    }
    /// <p>An array of Source Server IDs for which associated Recovery Instances should be returned.</p>
    pub fn source_server_i_ds(&self) -> std::option::Option<&[std::string::String]> {
        self.source_server_i_ds.as_deref()
    }
}
impl DescribeRecoveryInstancesRequestFilters {
    /// Creates a new builder-style object to manufacture [`DescribeRecoveryInstancesRequestFilters`](crate::types::DescribeRecoveryInstancesRequestFilters).
    pub fn builder() -> crate::types::builders::DescribeRecoveryInstancesRequestFiltersBuilder {
        crate::types::builders::DescribeRecoveryInstancesRequestFiltersBuilder::default()
    }
}

/// A builder for [`DescribeRecoveryInstancesRequestFilters`](crate::types::DescribeRecoveryInstancesRequestFilters).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DescribeRecoveryInstancesRequestFiltersBuilder {
    pub(crate) recovery_instance_i_ds: std::option::Option<std::vec::Vec<std::string::String>>,
    pub(crate) source_server_i_ds: std::option::Option<std::vec::Vec<std::string::String>>,
}
impl DescribeRecoveryInstancesRequestFiltersBuilder {
    /// Appends an item to `recovery_instance_i_ds`.
    ///
    /// To override the contents of this collection use [`set_recovery_instance_i_ds`](Self::set_recovery_instance_i_ds).
    ///
    /// <p>An array of Recovery Instance IDs that should be returned. An empty array means all Recovery Instances.</p>
    pub fn recovery_instance_i_ds(mut self, input: impl Into<std::string::String>) -> Self {
        let mut v = self.recovery_instance_i_ds.unwrap_or_default();
        v.push(input.into());
        self.recovery_instance_i_ds = Some(v);
        self
    }
    /// <p>An array of Recovery Instance IDs that should be returned. An empty array means all Recovery Instances.</p>
    pub fn set_recovery_instance_i_ds(
        mut self,
        input: std::option::Option<std::vec::Vec<std::string::String>>,
    ) -> Self {
        self.recovery_instance_i_ds = input;
        self
    }
    /// Appends an item to `source_server_i_ds`.
    ///
    /// To override the contents of this collection use [`set_source_server_i_ds`](Self::set_source_server_i_ds).
    ///
    /// <p>An array of Source Server IDs for which associated Recovery Instances should be returned.</p>
    pub fn source_server_i_ds(mut self, input: impl Into<std::string::String>) -> Self {
        let mut v = self.source_server_i_ds.unwrap_or_default();
        v.push(input.into());
        self.source_server_i_ds = Some(v);
        self
    }
    /// <p>An array of Source Server IDs for which associated Recovery Instances should be returned.</p>
    pub fn set_source_server_i_ds(
        mut self,
        input: std::option::Option<std::vec::Vec<std::string::String>>,
    ) -> Self {
        self.source_server_i_ds = input;
        self
    }
    /// Consumes the builder and constructs a [`DescribeRecoveryInstancesRequestFilters`](crate::types::DescribeRecoveryInstancesRequestFilters).
    pub fn build(self) -> crate::types::DescribeRecoveryInstancesRequestFilters {
        crate::types::DescribeRecoveryInstancesRequestFilters {
            recovery_instance_i_ds: self.recovery_instance_i_ds,
            source_server_i_ds: self.source_server_i_ds,
        }
    }
}
