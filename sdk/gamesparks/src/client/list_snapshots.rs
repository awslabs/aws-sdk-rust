// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListSnapshots`](crate::client::fluent_builders::ListSnapshots) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListSnapshots::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`game_name(impl Into<String>)`](crate::client::fluent_builders::ListSnapshots::game_name) / [`set_game_name(Option<String>)`](crate::client::fluent_builders::ListSnapshots::set_game_name): <p>The name of the game.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListSnapshots::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListSnapshots::set_max_results): <p>The maximum number of results to return.</p>  <p> Use this parameter with NextToken to get results as a set of sequential pages. </p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListSnapshots::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListSnapshots::set_next_token): <p>The token that indicates the start of the next sequential page of results.</p>  <p> Use the token that is returned with a previous call to this operation. To start at the beginning of the result set, do not specify a value. </p>
    /// - On success, responds with [`ListSnapshotsOutput`](crate::output::ListSnapshotsOutput) with field(s):
    ///   - [`snapshots(Option<Vec<SnapshotSummary>>)`](crate::output::ListSnapshotsOutput::snapshots): <p> A list of snapshot summaries. You can use the returned snapshot IDs in the <code>UpdateSnapshot</code> and <code>GetSnapshot</code> operations. </p>
    ///   - [`next_token(Option<String>)`](crate::output::ListSnapshotsOutput::next_token): <p>The token that indicates the start of the next sequential page of results.</p>  <p> Use this value when making the next call to this operation to continue where the last one finished. </p>
    /// - On failure, responds with [`SdkError<ListSnapshotsError>`](crate::error::ListSnapshotsError)
    pub fn list_snapshots(&self) -> crate::client::fluent_builders::ListSnapshots {
        crate::client::fluent_builders::ListSnapshots::new(self.handle.clone())
    }
}
