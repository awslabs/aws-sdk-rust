// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetPlayerConnectionStatus`](crate::operation::get_player_connection_status::builders::GetPlayerConnectionStatusFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`player_id(impl Into<String>)`](crate::operation::get_player_connection_status::builders::GetPlayerConnectionStatusFluentBuilder::player_id) / [`set_player_id(Option<String>)`](crate::operation::get_player_connection_status::builders::GetPlayerConnectionStatusFluentBuilder::set_player_id): <p>The unique identifier representing a player.</p>
    ///   - [`game_name(impl Into<String>)`](crate::operation::get_player_connection_status::builders::GetPlayerConnectionStatusFluentBuilder::game_name) / [`set_game_name(Option<String>)`](crate::operation::get_player_connection_status::builders::GetPlayerConnectionStatusFluentBuilder::set_game_name): <p>The name of the game.</p>
    ///   - [`stage_name(impl Into<String>)`](crate::operation::get_player_connection_status::builders::GetPlayerConnectionStatusFluentBuilder::stage_name) / [`set_stage_name(Option<String>)`](crate::operation::get_player_connection_status::builders::GetPlayerConnectionStatusFluentBuilder::set_stage_name): <p>The name of the stage.</p>
    /// - On success, responds with [`GetPlayerConnectionStatusOutput`](crate::operation::get_player_connection_status::GetPlayerConnectionStatusOutput) with field(s):
    ///   - [`connections(Option<Vec<Connection>>)`](crate::operation::get_player_connection_status::GetPlayerConnectionStatusOutput::connections): <p>The list of connection ids, one for each connection in use by the player.</p>
    /// - On failure, responds with [`SdkError<GetPlayerConnectionStatusError>`](crate::operation::get_player_connection_status::GetPlayerConnectionStatusError)
    pub fn get_player_connection_status(&self) -> crate::operation::get_player_connection_status::builders::GetPlayerConnectionStatusFluentBuilder{
        crate::operation::get_player_connection_status::builders::GetPlayerConnectionStatusFluentBuilder::new(self.handle.clone())
    }
}
