// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetStageDeployment`](crate::operation::get_stage_deployment::builders::GetStageDeploymentFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`game_name(impl Into<String>)`](crate::operation::get_stage_deployment::builders::GetStageDeploymentFluentBuilder::game_name) / [`set_game_name(Option<String>)`](crate::operation::get_stage_deployment::builders::GetStageDeploymentFluentBuilder::set_game_name): <p>The name of the game.</p>
    ///   - [`stage_name(impl Into<String>)`](crate::operation::get_stage_deployment::builders::GetStageDeploymentFluentBuilder::stage_name) / [`set_stage_name(Option<String>)`](crate::operation::get_stage_deployment::builders::GetStageDeploymentFluentBuilder::set_stage_name): <p>The name of the stage.</p>
    ///   - [`deployment_id(impl Into<String>)`](crate::operation::get_stage_deployment::builders::GetStageDeploymentFluentBuilder::deployment_id) / [`set_deployment_id(Option<String>)`](crate::operation::get_stage_deployment::builders::GetStageDeploymentFluentBuilder::set_deployment_id): <p> The identifier of the stage deployment. <code>StartStageDeployment</code> returns the identifier that you use here. </p>
    /// - On success, responds with [`GetStageDeploymentOutput`](crate::operation::get_stage_deployment::GetStageDeploymentOutput) with field(s):
    ///   - [`stage_deployment(Option<StageDeploymentDetails>)`](crate::operation::get_stage_deployment::GetStageDeploymentOutput::stage_deployment): <p>Properties that provide details of the stage deployment.</p>
    /// - On failure, responds with [`SdkError<GetStageDeploymentError>`](crate::operation::get_stage_deployment::GetStageDeploymentError)
    pub fn get_stage_deployment(
        &self,
    ) -> crate::operation::get_stage_deployment::builders::GetStageDeploymentFluentBuilder {
        crate::operation::get_stage_deployment::builders::GetStageDeploymentFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
