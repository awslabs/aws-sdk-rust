// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetExtensionVersion`](crate::operation::get_extension_version::builders::GetExtensionVersionFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`namespace(impl Into<String>)`](crate::operation::get_extension_version::builders::GetExtensionVersionFluentBuilder::namespace) / [`set_namespace(Option<String>)`](crate::operation::get_extension_version::builders::GetExtensionVersionFluentBuilder::set_namespace): <p>The namespace (qualifier) of the extension.</p>
    ///   - [`name(impl Into<String>)`](crate::operation::get_extension_version::builders::GetExtensionVersionFluentBuilder::name) / [`set_name(Option<String>)`](crate::operation::get_extension_version::builders::GetExtensionVersionFluentBuilder::set_name): <p>The name of the extension.</p>
    ///   - [`extension_version(impl Into<String>)`](crate::operation::get_extension_version::builders::GetExtensionVersionFluentBuilder::extension_version) / [`set_extension_version(Option<String>)`](crate::operation::get_extension_version::builders::GetExtensionVersionFluentBuilder::set_extension_version): <p>The version of the extension.</p>
    /// - On success, responds with [`GetExtensionVersionOutput`](crate::operation::get_extension_version::GetExtensionVersionOutput) with field(s):
    ///   - [`extension_version(Option<ExtensionVersionDetails>)`](crate::operation::get_extension_version::GetExtensionVersionOutput::extension_version): <p>The version of the extension.</p>
    /// - On failure, responds with [`SdkError<GetExtensionVersionError>`](crate::operation::get_extension_version::GetExtensionVersionError)
    pub fn get_extension_version(
        &self,
    ) -> crate::operation::get_extension_version::builders::GetExtensionVersionFluentBuilder {
        crate::operation::get_extension_version::builders::GetExtensionVersionFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
