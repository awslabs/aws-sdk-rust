// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) mod shape_create_game;

pub fn parse_http_error_metadata(
    response: &http::Response<bytes::Bytes>,
) -> Result<
    aws_smithy_types::error::metadata::Builder,
    aws_smithy_json::deserialize::error::DeserializeError,
> {
    crate::json_errors::parse_error_metadata(response.body(), response.headers())
}

pub(crate) mod shape_create_snapshot;

pub(crate) mod shape_create_stage;

pub(crate) mod shape_delete_game;

pub(crate) mod shape_delete_stage;

pub(crate) mod shape_disconnect_player;

pub(crate) mod shape_export_snapshot;

pub(crate) mod shape_get_extension;

pub(crate) mod shape_get_extension_version;

pub(crate) mod shape_get_game;

pub(crate) mod shape_get_game_configuration;

pub(crate) mod shape_get_generated_code_job;

pub(crate) mod shape_get_player_connection_status;

pub(crate) mod shape_get_snapshot;

pub(crate) mod shape_get_stage;

pub(crate) mod shape_get_stage_deployment;

pub(crate) mod shape_import_game_configuration;

pub(crate) mod shape_list_extension_versions;

pub(crate) mod shape_list_extensions;

pub(crate) mod shape_list_games;

pub(crate) mod shape_list_generated_code_jobs;

pub(crate) mod shape_list_snapshots;

pub(crate) mod shape_list_stage_deployments;

pub(crate) mod shape_list_stages;

pub(crate) mod shape_list_tags_for_resource;

pub(crate) mod shape_start_generated_code_job;

pub(crate) mod shape_start_stage_deployment;

pub(crate) mod shape_tag_resource;

pub(crate) mod shape_untag_resource;

pub(crate) mod shape_update_game;

pub(crate) mod shape_update_game_configuration;

pub(crate) mod shape_update_snapshot;

pub(crate) mod shape_update_stage;

pub(crate) fn or_empty_doc(data: &[u8]) -> &[u8] {
    if data.is_empty() {
        b"{}"
    } else {
        data
    }
}

pub(crate) mod shape_access_denied_exception;

pub(crate) mod shape_conflict_exception;

pub(crate) mod shape_create_game_input;

pub(crate) mod shape_create_snapshot_input;

pub(crate) mod shape_create_stage_input;

pub(crate) mod shape_import_game_configuration_input;

pub(crate) mod shape_internal_server_exception;

pub(crate) mod shape_resource_not_found_exception;

pub(crate) mod shape_service_quota_exceeded_exception;

pub(crate) mod shape_start_generated_code_job_input;

pub(crate) mod shape_start_stage_deployment_input;

pub(crate) mod shape_tag_resource_input;

pub(crate) mod shape_throttling_exception;

pub(crate) mod shape_update_game_configuration_input;

pub(crate) mod shape_update_game_input;

pub(crate) mod shape_update_snapshot_input;

pub(crate) mod shape_update_stage_input;

pub(crate) mod shape_validation_exception;

pub(crate) mod shape_connection_id_list;

pub(crate) mod shape_connection_list;

pub(crate) mod shape_extension_details;

pub(crate) mod shape_extension_details_list;

pub(crate) mod shape_extension_version_details;

pub(crate) mod shape_extension_version_details_list;

pub(crate) mod shape_game_configuration_details;

pub(crate) mod shape_game_details;

pub(crate) mod shape_game_summary_list;

pub(crate) mod shape_generated_code_job_details;

pub(crate) mod shape_generated_code_job_details_list;

pub(crate) mod shape_generator;

pub(crate) mod shape_import_game_configuration_source;

pub(crate) mod shape_section_modification;

pub(crate) mod shape_snapshot_details;

pub(crate) mod shape_snapshot_summary_list;

pub(crate) mod shape_stage_deployment_details;

pub(crate) mod shape_stage_deployment_list;

pub(crate) mod shape_stage_details;

pub(crate) mod shape_stage_summary_list;

pub(crate) mod shape_tag_map;

pub(crate) mod shape_connection;

pub(crate) mod shape_deployment_result;

pub(crate) mod shape_game_summary;

pub(crate) mod shape_sections;

pub(crate) mod shape_snapshot_summary;

pub(crate) mod shape_stage_deployment_summary;

pub(crate) mod shape_stage_summary;

pub(crate) mod shape_section;
