// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn serialize_structure_crate_input_create_game_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateGameInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_1) = &input.client_token {
        object.key("ClientToken").string(var_1.as_str());
    }
    if let Some(var_2) = &input.description {
        object.key("Description").string(var_2.as_str());
    }
    if let Some(var_3) = &input.game_name {
        object.key("GameName").string(var_3.as_str());
    }
    if let Some(var_4) = &input.tags {
        let mut object_5 = object.key("Tags").start_object();
        for (key_6, value_7) in var_4 {
            {
                object_5.key(key_6).string(value_7.as_str());
            }
        }
        object_5.finish();
    }
    Ok(())
}

pub fn serialize_structure_crate_input_create_snapshot_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateSnapshotInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_8) = &input.description {
        object.key("Description").string(var_8.as_str());
    }
    Ok(())
}

pub fn serialize_structure_crate_input_create_stage_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateStageInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_9) = &input.client_token {
        object.key("ClientToken").string(var_9.as_str());
    }
    if let Some(var_10) = &input.description {
        object.key("Description").string(var_10.as_str());
    }
    if let Some(var_11) = &input.role {
        object.key("Role").string(var_11.as_str());
    }
    if let Some(var_12) = &input.stage_name {
        object.key("StageName").string(var_12.as_str());
    }
    if let Some(var_13) = &input.tags {
        let mut object_14 = object.key("Tags").start_object();
        for (key_15, value_16) in var_13 {
            {
                object_14.key(key_15).string(value_16.as_str());
            }
        }
        object_14.finish();
    }
    Ok(())
}

pub fn serialize_structure_crate_input_import_game_configuration_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::ImportGameConfigurationInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_17) = &input.import_source {
        let mut object_18 = object.key("ImportSource").start_object();
        crate::json_ser::serialize_structure_crate_model_import_game_configuration_source(
            &mut object_18,
            var_17,
        )?;
        object_18.finish();
    }
    Ok(())
}

pub fn serialize_structure_crate_input_start_generated_code_job_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::StartGeneratedCodeJobInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_19) = &input.generator {
        let mut object_20 = object.key("Generator").start_object();
        crate::json_ser::serialize_structure_crate_model_generator(&mut object_20, var_19)?;
        object_20.finish();
    }
    Ok(())
}

pub fn serialize_structure_crate_input_start_stage_deployment_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::StartStageDeploymentInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_21) = &input.client_token {
        object.key("ClientToken").string(var_21.as_str());
    }
    if let Some(var_22) = &input.snapshot_id {
        object.key("SnapshotId").string(var_22.as_str());
    }
    Ok(())
}

pub fn serialize_structure_crate_input_tag_resource_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::TagResourceInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_23) = &input.tags {
        let mut object_24 = object.key("tags").start_object();
        for (key_25, value_26) in var_23 {
            {
                object_24.key(key_25).string(value_26.as_str());
            }
        }
        object_24.finish();
    }
    Ok(())
}

pub fn serialize_structure_crate_input_update_game_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateGameInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_27) = &input.description {
        object.key("Description").string(var_27.as_str());
    }
    Ok(())
}

pub fn serialize_structure_crate_input_update_game_configuration_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateGameConfigurationInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_28) = &input.modifications {
        let mut array_29 = object.key("Modifications").start_array();
        for item_30 in var_28 {
            {
                let mut object_31 = array_29.value().start_object();
                crate::json_ser::serialize_structure_crate_model_section_modification(
                    &mut object_31,
                    item_30,
                )?;
                object_31.finish();
            }
        }
        array_29.finish();
    }
    Ok(())
}

pub fn serialize_structure_crate_input_update_snapshot_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateSnapshotInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_32) = &input.description {
        object.key("Description").string(var_32.as_str());
    }
    Ok(())
}

pub fn serialize_structure_crate_input_update_stage_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateStageInput,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_33) = &input.description {
        object.key("Description").string(var_33.as_str());
    }
    if let Some(var_34) = &input.role {
        object.key("Role").string(var_34.as_str());
    }
    Ok(())
}

pub fn serialize_structure_crate_model_import_game_configuration_source(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::ImportGameConfigurationSource,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_35) = &input.file {
        object
            .key("File")
            .string_unchecked(&aws_smithy_types::base64::encode(var_35));
    }
    Ok(())
}

pub fn serialize_structure_crate_model_generator(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::Generator,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_36) = &input.target_platform {
        object.key("TargetPlatform").string(var_36.as_str());
    }
    if let Some(var_37) = &input.language {
        object.key("Language").string(var_37.as_str());
    }
    if let Some(var_38) = &input.game_sdk_version {
        object.key("GameSdkVersion").string(var_38.as_str());
    }
    Ok(())
}

pub fn serialize_structure_crate_model_section_modification(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::SectionModification,
) -> Result<(), aws_smithy_http::operation::SerializationError> {
    if let Some(var_39) = &input.section {
        object.key("Section").string(var_39.as_str());
    }
    if let Some(var_40) = &input.path {
        object.key("Path").string(var_40.as_str());
    }
    if let Some(var_41) = &input.operation {
        object.key("Operation").string(var_41.as_str());
    }
    if let Some(var_42) = &input.value {
        object.key("Value").document(var_42);
    }
    Ok(())
}
