// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GetGameConfigurationInput {
    /// <p>The name of the game.</p>
    #[doc(hidden)]
    pub game_name: std::option::Option<std::string::String>,
    /// <p>The list of sections to return.</p>
    #[doc(hidden)]
    pub sections: std::option::Option<std::vec::Vec<std::string::String>>,
}
impl GetGameConfigurationInput {
    /// <p>The name of the game.</p>
    pub fn game_name(&self) -> std::option::Option<&str> {
        self.game_name.as_deref()
    }
    /// <p>The list of sections to return.</p>
    pub fn sections(&self) -> std::option::Option<&[std::string::String]> {
        self.sections.as_deref()
    }
}
impl GetGameConfigurationInput {
    /// Creates a new builder-style object to manufacture [`GetGameConfigurationInput`](crate::operation::get_game_configuration::GetGameConfigurationInput).
    pub fn builder(
    ) -> crate::operation::get_game_configuration::builders::GetGameConfigurationInputBuilder {
        crate::operation::get_game_configuration::builders::GetGameConfigurationInputBuilder::default()
    }
}

/// A builder for [`GetGameConfigurationInput`](crate::operation::get_game_configuration::GetGameConfigurationInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct GetGameConfigurationInputBuilder {
    pub(crate) game_name: std::option::Option<std::string::String>,
    pub(crate) sections: std::option::Option<std::vec::Vec<std::string::String>>,
}
impl GetGameConfigurationInputBuilder {
    /// <p>The name of the game.</p>
    pub fn game_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.game_name = Some(input.into());
        self
    }
    /// <p>The name of the game.</p>
    pub fn set_game_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.game_name = input;
        self
    }
    /// Appends an item to `sections`.
    ///
    /// To override the contents of this collection use [`set_sections`](Self::set_sections).
    ///
    /// <p>The list of sections to return.</p>
    pub fn sections(mut self, input: impl Into<std::string::String>) -> Self {
        let mut v = self.sections.unwrap_or_default();
        v.push(input.into());
        self.sections = Some(v);
        self
    }
    /// <p>The list of sections to return.</p>
    pub fn set_sections(
        mut self,
        input: std::option::Option<std::vec::Vec<std::string::String>>,
    ) -> Self {
        self.sections = input;
        self
    }
    /// Consumes the builder and constructs a [`GetGameConfigurationInput`](crate::operation::get_game_configuration::GetGameConfigurationInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::get_game_configuration::GetGameConfigurationInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::get_game_configuration::GetGameConfigurationInput {
                game_name: self.game_name,
                sections: self.sections,
            },
        )
    }
}
