// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ListStageDeploymentsInput {
    /// <p>The name of the game.</p>
    #[doc(hidden)]
    pub game_name: std::option::Option<std::string::String>,
    /// <p>The name of the stage.</p>
    #[doc(hidden)]
    pub stage_name: std::option::Option<std::string::String>,
    /// <p>The token that indicates the start of the next sequential page of results.</p>
    /// <p> Use the token that is returned with a previous call to this operation. To start at the beginning of the result set, do not specify a value. </p>
    #[doc(hidden)]
    pub next_token: std::option::Option<std::string::String>,
    /// <p>The maximum number of results to return.</p>
    /// <p> Use this parameter with NextToken to get results as a set of sequential pages. </p>
    #[doc(hidden)]
    pub max_results: std::option::Option<i32>,
}
impl ListStageDeploymentsInput {
    /// <p>The name of the game.</p>
    pub fn game_name(&self) -> std::option::Option<&str> {
        self.game_name.as_deref()
    }
    /// <p>The name of the stage.</p>
    pub fn stage_name(&self) -> std::option::Option<&str> {
        self.stage_name.as_deref()
    }
    /// <p>The token that indicates the start of the next sequential page of results.</p>
    /// <p> Use the token that is returned with a previous call to this operation. To start at the beginning of the result set, do not specify a value. </p>
    pub fn next_token(&self) -> std::option::Option<&str> {
        self.next_token.as_deref()
    }
    /// <p>The maximum number of results to return.</p>
    /// <p> Use this parameter with NextToken to get results as a set of sequential pages. </p>
    pub fn max_results(&self) -> std::option::Option<i32> {
        self.max_results
    }
}
impl ListStageDeploymentsInput {
    /// Creates a new builder-style object to manufacture [`ListStageDeploymentsInput`](crate::operation::list_stage_deployments::ListStageDeploymentsInput).
    pub fn builder(
    ) -> crate::operation::list_stage_deployments::builders::ListStageDeploymentsInputBuilder {
        crate::operation::list_stage_deployments::builders::ListStageDeploymentsInputBuilder::default()
    }
}

/// A builder for [`ListStageDeploymentsInput`](crate::operation::list_stage_deployments::ListStageDeploymentsInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ListStageDeploymentsInputBuilder {
    pub(crate) game_name: std::option::Option<std::string::String>,
    pub(crate) stage_name: std::option::Option<std::string::String>,
    pub(crate) next_token: std::option::Option<std::string::String>,
    pub(crate) max_results: std::option::Option<i32>,
}
impl ListStageDeploymentsInputBuilder {
    /// <p>The name of the game.</p>
    pub fn game_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.game_name = Some(input.into());
        self
    }
    /// <p>The name of the game.</p>
    pub fn set_game_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.game_name = input;
        self
    }
    /// <p>The name of the stage.</p>
    pub fn stage_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.stage_name = Some(input.into());
        self
    }
    /// <p>The name of the stage.</p>
    pub fn set_stage_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.stage_name = input;
        self
    }
    /// <p>The token that indicates the start of the next sequential page of results.</p>
    /// <p> Use the token that is returned with a previous call to this operation. To start at the beginning of the result set, do not specify a value. </p>
    pub fn next_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.next_token = Some(input.into());
        self
    }
    /// <p>The token that indicates the start of the next sequential page of results.</p>
    /// <p> Use the token that is returned with a previous call to this operation. To start at the beginning of the result set, do not specify a value. </p>
    pub fn set_next_token(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// <p>The maximum number of results to return.</p>
    /// <p> Use this parameter with NextToken to get results as a set of sequential pages. </p>
    pub fn max_results(mut self, input: i32) -> Self {
        self.max_results = Some(input);
        self
    }
    /// <p>The maximum number of results to return.</p>
    /// <p> Use this parameter with NextToken to get results as a set of sequential pages. </p>
    pub fn set_max_results(mut self, input: std::option::Option<i32>) -> Self {
        self.max_results = input;
        self
    }
    /// Consumes the builder and constructs a [`ListStageDeploymentsInput`](crate::operation::list_stage_deployments::ListStageDeploymentsInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::list_stage_deployments::ListStageDeploymentsInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::list_stage_deployments::ListStageDeploymentsInput {
                game_name: self.game_name,
                stage_name: self.stage_name,
                next_token: self.next_token,
                max_results: self.max_results,
            },
        )
    }
}
