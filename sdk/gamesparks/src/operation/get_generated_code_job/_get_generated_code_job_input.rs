// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GetGeneratedCodeJobInput {
    /// <p>The name of the game.</p>
    #[doc(hidden)]
    pub game_name: std::option::Option<std::string::String>,
    /// <p>The identifier of the snapshot for the code generation job.</p>
    #[doc(hidden)]
    pub snapshot_id: std::option::Option<std::string::String>,
    /// <p>The identifier of the code generation job.</p>
    #[doc(hidden)]
    pub job_id: std::option::Option<std::string::String>,
}
impl GetGeneratedCodeJobInput {
    /// <p>The name of the game.</p>
    pub fn game_name(&self) -> std::option::Option<&str> {
        self.game_name.as_deref()
    }
    /// <p>The identifier of the snapshot for the code generation job.</p>
    pub fn snapshot_id(&self) -> std::option::Option<&str> {
        self.snapshot_id.as_deref()
    }
    /// <p>The identifier of the code generation job.</p>
    pub fn job_id(&self) -> std::option::Option<&str> {
        self.job_id.as_deref()
    }
}
impl GetGeneratedCodeJobInput {
    /// Creates a new builder-style object to manufacture [`GetGeneratedCodeJobInput`](crate::operation::get_generated_code_job::GetGeneratedCodeJobInput).
    pub fn builder(
    ) -> crate::operation::get_generated_code_job::builders::GetGeneratedCodeJobInputBuilder {
        crate::operation::get_generated_code_job::builders::GetGeneratedCodeJobInputBuilder::default(
        )
    }
}

/// A builder for [`GetGeneratedCodeJobInput`](crate::operation::get_generated_code_job::GetGeneratedCodeJobInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct GetGeneratedCodeJobInputBuilder {
    pub(crate) game_name: std::option::Option<std::string::String>,
    pub(crate) snapshot_id: std::option::Option<std::string::String>,
    pub(crate) job_id: std::option::Option<std::string::String>,
}
impl GetGeneratedCodeJobInputBuilder {
    /// <p>The name of the game.</p>
    pub fn game_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.game_name = Some(input.into());
        self
    }
    /// <p>The name of the game.</p>
    pub fn set_game_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.game_name = input;
        self
    }
    /// <p>The identifier of the snapshot for the code generation job.</p>
    pub fn snapshot_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.snapshot_id = Some(input.into());
        self
    }
    /// <p>The identifier of the snapshot for the code generation job.</p>
    pub fn set_snapshot_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.snapshot_id = input;
        self
    }
    /// <p>The identifier of the code generation job.</p>
    pub fn job_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.job_id = Some(input.into());
        self
    }
    /// <p>The identifier of the code generation job.</p>
    pub fn set_job_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.job_id = input;
        self
    }
    /// Consumes the builder and constructs a [`GetGeneratedCodeJobInput`](crate::operation::get_generated_code_job::GetGeneratedCodeJobInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::get_generated_code_job::GetGeneratedCodeJobInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::get_generated_code_job::GetGeneratedCodeJobInput {
                game_name: self.game_name,
                snapshot_id: self.snapshot_id,
                job_id: self.job_id,
            },
        )
    }
}
