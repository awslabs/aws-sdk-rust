// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ImportGameConfigurationInput {
    /// <p>The name of the game.</p>
    #[doc(hidden)]
    pub game_name: std::option::Option<std::string::String>,
    /// <p>The source used to import configuration sections.</p>
    #[doc(hidden)]
    pub import_source: std::option::Option<crate::types::ImportGameConfigurationSource>,
}
impl ImportGameConfigurationInput {
    /// <p>The name of the game.</p>
    pub fn game_name(&self) -> std::option::Option<&str> {
        self.game_name.as_deref()
    }
    /// <p>The source used to import configuration sections.</p>
    pub fn import_source(
        &self,
    ) -> std::option::Option<&crate::types::ImportGameConfigurationSource> {
        self.import_source.as_ref()
    }
}
impl ImportGameConfigurationInput {
    /// Creates a new builder-style object to manufacture [`ImportGameConfigurationInput`](crate::operation::import_game_configuration::ImportGameConfigurationInput).
    pub fn builder(
    ) -> crate::operation::import_game_configuration::builders::ImportGameConfigurationInputBuilder
    {
        crate::operation::import_game_configuration::builders::ImportGameConfigurationInputBuilder::default()
    }
}

/// A builder for [`ImportGameConfigurationInput`](crate::operation::import_game_configuration::ImportGameConfigurationInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ImportGameConfigurationInputBuilder {
    pub(crate) game_name: std::option::Option<std::string::String>,
    pub(crate) import_source: std::option::Option<crate::types::ImportGameConfigurationSource>,
}
impl ImportGameConfigurationInputBuilder {
    /// <p>The name of the game.</p>
    pub fn game_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.game_name = Some(input.into());
        self
    }
    /// <p>The name of the game.</p>
    pub fn set_game_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.game_name = input;
        self
    }
    /// <p>The source used to import configuration sections.</p>
    pub fn import_source(mut self, input: crate::types::ImportGameConfigurationSource) -> Self {
        self.import_source = Some(input);
        self
    }
    /// <p>The source used to import configuration sections.</p>
    pub fn set_import_source(
        mut self,
        input: std::option::Option<crate::types::ImportGameConfigurationSource>,
    ) -> Self {
        self.import_source = input;
        self
    }
    /// Consumes the builder and constructs a [`ImportGameConfigurationInput`](crate::operation::import_game_configuration::ImportGameConfigurationInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::import_game_configuration::ImportGameConfigurationInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::import_game_configuration::ImportGameConfigurationInput {
                game_name: self.game_name,
                import_source: self.import_source,
            },
        )
    }
}
