// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct UpdateGameConfigurationInput {
    /// <p>The name of the game.</p>
    #[doc(hidden)]
    pub game_name: std::option::Option<std::string::String>,
    /// <p>The list of modifications to make.</p>
    #[doc(hidden)]
    pub modifications: std::option::Option<std::vec::Vec<crate::types::SectionModification>>,
}
impl UpdateGameConfigurationInput {
    /// <p>The name of the game.</p>
    pub fn game_name(&self) -> std::option::Option<&str> {
        self.game_name.as_deref()
    }
    /// <p>The list of modifications to make.</p>
    pub fn modifications(&self) -> std::option::Option<&[crate::types::SectionModification]> {
        self.modifications.as_deref()
    }
}
impl UpdateGameConfigurationInput {
    /// Creates a new builder-style object to manufacture [`UpdateGameConfigurationInput`](crate::operation::update_game_configuration::UpdateGameConfigurationInput).
    pub fn builder(
    ) -> crate::operation::update_game_configuration::builders::UpdateGameConfigurationInputBuilder
    {
        crate::operation::update_game_configuration::builders::UpdateGameConfigurationInputBuilder::default()
    }
}

/// A builder for [`UpdateGameConfigurationInput`](crate::operation::update_game_configuration::UpdateGameConfigurationInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct UpdateGameConfigurationInputBuilder {
    pub(crate) game_name: std::option::Option<std::string::String>,
    pub(crate) modifications: std::option::Option<std::vec::Vec<crate::types::SectionModification>>,
}
impl UpdateGameConfigurationInputBuilder {
    /// <p>The name of the game.</p>
    pub fn game_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.game_name = Some(input.into());
        self
    }
    /// <p>The name of the game.</p>
    pub fn set_game_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.game_name = input;
        self
    }
    /// Appends an item to `modifications`.
    ///
    /// To override the contents of this collection use [`set_modifications`](Self::set_modifications).
    ///
    /// <p>The list of modifications to make.</p>
    pub fn modifications(mut self, input: crate::types::SectionModification) -> Self {
        let mut v = self.modifications.unwrap_or_default();
        v.push(input);
        self.modifications = Some(v);
        self
    }
    /// <p>The list of modifications to make.</p>
    pub fn set_modifications(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::SectionModification>>,
    ) -> Self {
        self.modifications = input;
        self
    }
    /// Consumes the builder and constructs a [`UpdateGameConfigurationInput`](crate::operation::update_game_configuration::UpdateGameConfigurationInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::update_game_configuration::UpdateGameConfigurationInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::update_game_configuration::UpdateGameConfigurationInput {
                game_name: self.game_name,
                modifications: self.modifications,
            },
        )
    }
}
