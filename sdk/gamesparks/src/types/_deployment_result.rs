// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The result of the deployment.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DeploymentResult {
    /// <p>The type of deployment result.</p>
    #[doc(hidden)]
    pub result_code: std::option::Option<crate::types::ResultCode>,
    /// <p>Details about the deployment result.</p>
    #[doc(hidden)]
    pub message: std::option::Option<std::string::String>,
}
impl DeploymentResult {
    /// <p>The type of deployment result.</p>
    pub fn result_code(&self) -> std::option::Option<&crate::types::ResultCode> {
        self.result_code.as_ref()
    }
    /// <p>Details about the deployment result.</p>
    pub fn message(&self) -> std::option::Option<&str> {
        self.message.as_deref()
    }
}
impl DeploymentResult {
    /// Creates a new builder-style object to manufacture [`DeploymentResult`](crate::types::DeploymentResult).
    pub fn builder() -> crate::types::builders::DeploymentResultBuilder {
        crate::types::builders::DeploymentResultBuilder::default()
    }
}

/// A builder for [`DeploymentResult`](crate::types::DeploymentResult).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DeploymentResultBuilder {
    pub(crate) result_code: std::option::Option<crate::types::ResultCode>,
    pub(crate) message: std::option::Option<std::string::String>,
}
impl DeploymentResultBuilder {
    /// <p>The type of deployment result.</p>
    pub fn result_code(mut self, input: crate::types::ResultCode) -> Self {
        self.result_code = Some(input);
        self
    }
    /// <p>The type of deployment result.</p>
    pub fn set_result_code(mut self, input: std::option::Option<crate::types::ResultCode>) -> Self {
        self.result_code = input;
        self
    }
    /// <p>Details about the deployment result.</p>
    pub fn message(mut self, input: impl Into<std::string::String>) -> Self {
        self.message = Some(input.into());
        self
    }
    /// <p>Details about the deployment result.</p>
    pub fn set_message(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.message = input;
        self
    }
    /// Consumes the builder and constructs a [`DeploymentResult`](crate::types::DeploymentResult).
    pub fn build(self) -> crate::types::DeploymentResult {
        crate::types::DeploymentResult {
            result_code: self.result_code,
            message: self.message,
        }
    }
}
