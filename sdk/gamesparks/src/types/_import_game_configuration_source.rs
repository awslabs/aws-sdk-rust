// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The source used to import configuration sections.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ImportGameConfigurationSource {
    /// <p>The JSON string containing the configuration sections.</p>
    #[doc(hidden)]
    pub file: std::option::Option<aws_smithy_types::Blob>,
}
impl ImportGameConfigurationSource {
    /// <p>The JSON string containing the configuration sections.</p>
    pub fn file(&self) -> std::option::Option<&aws_smithy_types::Blob> {
        self.file.as_ref()
    }
}
impl ImportGameConfigurationSource {
    /// Creates a new builder-style object to manufacture [`ImportGameConfigurationSource`](crate::types::ImportGameConfigurationSource).
    pub fn builder() -> crate::types::builders::ImportGameConfigurationSourceBuilder {
        crate::types::builders::ImportGameConfigurationSourceBuilder::default()
    }
}

/// A builder for [`ImportGameConfigurationSource`](crate::types::ImportGameConfigurationSource).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ImportGameConfigurationSourceBuilder {
    pub(crate) file: std::option::Option<aws_smithy_types::Blob>,
}
impl ImportGameConfigurationSourceBuilder {
    /// <p>The JSON string containing the configuration sections.</p>
    pub fn file(mut self, input: aws_smithy_types::Blob) -> Self {
        self.file = Some(input);
        self
    }
    /// <p>The JSON string containing the configuration sections.</p>
    pub fn set_file(mut self, input: std::option::Option<aws_smithy_types::Blob>) -> Self {
        self.file = input;
        self
    }
    /// Consumes the builder and constructs a [`ImportGameConfigurationSource`](crate::types::ImportGameConfigurationSource).
    pub fn build(self) -> crate::types::ImportGameConfigurationSource {
        crate::types::ImportGameConfigurationSource { file: self.file }
    }
}
