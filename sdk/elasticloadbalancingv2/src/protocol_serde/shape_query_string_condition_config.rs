// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(unused_mut)]
pub fn ser_query_string_condition_config(
    mut writer: ::aws_smithy_query::QueryValueWriter,
    input: &crate::types::QueryStringConditionConfig,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    #[allow(unused_mut)]
    let mut scope_1 = writer.prefix("Values");
    if let Some(var_2) = &input.values {
        let mut list_4 = scope_1.start_list(false, None);
        for item_3 in var_2 {
            #[allow(unused_mut)]
            let mut entry_5 = list_4.entry();
            crate::protocol_serde::shape_query_string_key_value_pair::ser_query_string_key_value_pair(entry_5, item_3)?;
        }
        list_4.finish();
    }
    Ok(())
}

#[allow(clippy::needless_question_mark)]
pub fn de_query_string_condition_config(
    decoder: &mut ::aws_smithy_xml::decode::ScopedDecoder,
) -> Result<crate::types::QueryStringConditionConfig, ::aws_smithy_xml::decode::XmlDecodeError> {
    #[allow(unused_mut)]
    let mut builder = crate::types::QueryStringConditionConfig::builder();
    while let Some(mut tag) = decoder.next_tag() {
        match tag.start_el() {
            s if s.matches("Values") /* Values com.amazonaws.elasticloadbalancingv2#QueryStringConditionConfig$Values */ =>  {
                let var_6 =
                    Some(
                        crate::protocol_serde::shape_query_string_key_value_pair_list::de_query_string_key_value_pair_list(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_values(var_6);
            }
            ,
            _ => {}
        }
    }
    Ok(builder.build())
}
