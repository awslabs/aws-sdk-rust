// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about the target group stickiness for a rule.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct TargetGroupStickinessConfig {
    /// <p>Indicates whether target group stickiness is enabled.</p>
    #[doc(hidden)]
    pub enabled: std::option::Option<bool>,
    /// <p>The time period, in seconds, during which requests from a client should be routed to the same target group. The range is 1-604800 seconds (7 days).</p>
    #[doc(hidden)]
    pub duration_seconds: std::option::Option<i32>,
}
impl TargetGroupStickinessConfig {
    /// <p>Indicates whether target group stickiness is enabled.</p>
    pub fn enabled(&self) -> std::option::Option<bool> {
        self.enabled
    }
    /// <p>The time period, in seconds, during which requests from a client should be routed to the same target group. The range is 1-604800 seconds (7 days).</p>
    pub fn duration_seconds(&self) -> std::option::Option<i32> {
        self.duration_seconds
    }
}
impl TargetGroupStickinessConfig {
    /// Creates a new builder-style object to manufacture [`TargetGroupStickinessConfig`](crate::types::TargetGroupStickinessConfig).
    pub fn builder() -> crate::types::builders::TargetGroupStickinessConfigBuilder {
        crate::types::builders::TargetGroupStickinessConfigBuilder::default()
    }
}

/// A builder for [`TargetGroupStickinessConfig`](crate::types::TargetGroupStickinessConfig).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct TargetGroupStickinessConfigBuilder {
    pub(crate) enabled: std::option::Option<bool>,
    pub(crate) duration_seconds: std::option::Option<i32>,
}
impl TargetGroupStickinessConfigBuilder {
    /// <p>Indicates whether target group stickiness is enabled.</p>
    pub fn enabled(mut self, input: bool) -> Self {
        self.enabled = Some(input);
        self
    }
    /// <p>Indicates whether target group stickiness is enabled.</p>
    pub fn set_enabled(mut self, input: std::option::Option<bool>) -> Self {
        self.enabled = input;
        self
    }
    /// <p>The time period, in seconds, during which requests from a client should be routed to the same target group. The range is 1-604800 seconds (7 days).</p>
    pub fn duration_seconds(mut self, input: i32) -> Self {
        self.duration_seconds = Some(input);
        self
    }
    /// <p>The time period, in seconds, during which requests from a client should be routed to the same target group. The range is 1-604800 seconds (7 days).</p>
    pub fn set_duration_seconds(mut self, input: std::option::Option<i32>) -> Self {
        self.duration_seconds = input;
        self
    }
    /// Consumes the builder and constructs a [`TargetGroupStickinessConfig`](crate::types::TargetGroupStickinessConfig).
    pub fn build(self) -> crate::types::TargetGroupStickinessConfig {
        crate::types::TargetGroupStickinessConfig {
            enabled: self.enabled,
            duration_seconds: self.duration_seconds,
        }
    }
}
