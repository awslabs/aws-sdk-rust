// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct CreateTargetGroupOutput {
    /// <p>Information about the target group.</p>
    #[doc(hidden)]
    pub target_groups: std::option::Option<std::vec::Vec<crate::types::TargetGroup>>,
    _request_id: Option<String>,
}
impl CreateTargetGroupOutput {
    /// <p>Information about the target group.</p>
    pub fn target_groups(&self) -> std::option::Option<&[crate::types::TargetGroup]> {
        self.target_groups.as_deref()
    }
}
impl aws_http::request_id::RequestId for CreateTargetGroupOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl CreateTargetGroupOutput {
    /// Creates a new builder-style object to manufacture [`CreateTargetGroupOutput`](crate::operation::create_target_group::CreateTargetGroupOutput).
    pub fn builder(
    ) -> crate::operation::create_target_group::builders::CreateTargetGroupOutputBuilder {
        crate::operation::create_target_group::builders::CreateTargetGroupOutputBuilder::default()
    }
}

/// A builder for [`CreateTargetGroupOutput`](crate::operation::create_target_group::CreateTargetGroupOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct CreateTargetGroupOutputBuilder {
    pub(crate) target_groups: std::option::Option<std::vec::Vec<crate::types::TargetGroup>>,
    _request_id: Option<String>,
}
impl CreateTargetGroupOutputBuilder {
    /// Appends an item to `target_groups`.
    ///
    /// To override the contents of this collection use [`set_target_groups`](Self::set_target_groups).
    ///
    /// <p>Information about the target group.</p>
    pub fn target_groups(mut self, input: crate::types::TargetGroup) -> Self {
        let mut v = self.target_groups.unwrap_or_default();
        v.push(input);
        self.target_groups = Some(v);
        self
    }
    /// <p>Information about the target group.</p>
    pub fn set_target_groups(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::TargetGroup>>,
    ) -> Self {
        self.target_groups = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`CreateTargetGroupOutput`](crate::operation::create_target_group::CreateTargetGroupOutput).
    pub fn build(self) -> crate::operation::create_target_group::CreateTargetGroupOutput {
        crate::operation::create_target_group::CreateTargetGroupOutput {
            target_groups: self.target_groups,
            _request_id: self._request_id,
        }
    }
}
