// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct SetSecurityGroupsOutput {
    /// <p>The IDs of the security groups associated with the load balancer.</p>
    #[doc(hidden)]
    pub security_group_ids: std::option::Option<std::vec::Vec<std::string::String>>,
    _request_id: Option<String>,
}
impl SetSecurityGroupsOutput {
    /// <p>The IDs of the security groups associated with the load balancer.</p>
    pub fn security_group_ids(&self) -> std::option::Option<&[std::string::String]> {
        self.security_group_ids.as_deref()
    }
}
impl aws_http::request_id::RequestId for SetSecurityGroupsOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl SetSecurityGroupsOutput {
    /// Creates a new builder-style object to manufacture [`SetSecurityGroupsOutput`](crate::operation::set_security_groups::SetSecurityGroupsOutput).
    pub fn builder(
    ) -> crate::operation::set_security_groups::builders::SetSecurityGroupsOutputBuilder {
        crate::operation::set_security_groups::builders::SetSecurityGroupsOutputBuilder::default()
    }
}

/// A builder for [`SetSecurityGroupsOutput`](crate::operation::set_security_groups::SetSecurityGroupsOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct SetSecurityGroupsOutputBuilder {
    pub(crate) security_group_ids: std::option::Option<std::vec::Vec<std::string::String>>,
    _request_id: Option<String>,
}
impl SetSecurityGroupsOutputBuilder {
    /// Appends an item to `security_group_ids`.
    ///
    /// To override the contents of this collection use [`set_security_group_ids`](Self::set_security_group_ids).
    ///
    /// <p>The IDs of the security groups associated with the load balancer.</p>
    pub fn security_group_ids(mut self, input: impl Into<std::string::String>) -> Self {
        let mut v = self.security_group_ids.unwrap_or_default();
        v.push(input.into());
        self.security_group_ids = Some(v);
        self
    }
    /// <p>The IDs of the security groups associated with the load balancer.</p>
    pub fn set_security_group_ids(
        mut self,
        input: std::option::Option<std::vec::Vec<std::string::String>>,
    ) -> Self {
        self.security_group_ids = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`SetSecurityGroupsOutput`](crate::operation::set_security_groups::SetSecurityGroupsOutput).
    pub fn build(self) -> crate::operation::set_security_groups::SetSecurityGroupsOutput {
        crate::operation::set_security_groups::SetSecurityGroupsOutput {
            security_group_ids: self.security_group_ids,
            _request_id: self._request_id,
        }
    }
}
