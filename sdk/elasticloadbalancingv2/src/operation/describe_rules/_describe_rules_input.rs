// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DescribeRulesInput {
    /// <p>The Amazon Resource Name (ARN) of the listener.</p>
    #[doc(hidden)]
    pub listener_arn: std::option::Option<std::string::String>,
    /// <p>The Amazon Resource Names (ARN) of the rules.</p>
    #[doc(hidden)]
    pub rule_arns: std::option::Option<std::vec::Vec<std::string::String>>,
    /// <p>The marker for the next set of results. (You received this marker from a previous call.)</p>
    #[doc(hidden)]
    pub marker: std::option::Option<std::string::String>,
    /// <p>The maximum number of results to return with this call.</p>
    #[doc(hidden)]
    pub page_size: std::option::Option<i32>,
}
impl DescribeRulesInput {
    /// <p>The Amazon Resource Name (ARN) of the listener.</p>
    pub fn listener_arn(&self) -> std::option::Option<&str> {
        self.listener_arn.as_deref()
    }
    /// <p>The Amazon Resource Names (ARN) of the rules.</p>
    pub fn rule_arns(&self) -> std::option::Option<&[std::string::String]> {
        self.rule_arns.as_deref()
    }
    /// <p>The marker for the next set of results. (You received this marker from a previous call.)</p>
    pub fn marker(&self) -> std::option::Option<&str> {
        self.marker.as_deref()
    }
    /// <p>The maximum number of results to return with this call.</p>
    pub fn page_size(&self) -> std::option::Option<i32> {
        self.page_size
    }
}
impl DescribeRulesInput {
    /// Creates a new builder-style object to manufacture [`DescribeRulesInput`](crate::operation::describe_rules::DescribeRulesInput).
    pub fn builder() -> crate::operation::describe_rules::builders::DescribeRulesInputBuilder {
        crate::operation::describe_rules::builders::DescribeRulesInputBuilder::default()
    }
}

/// A builder for [`DescribeRulesInput`](crate::operation::describe_rules::DescribeRulesInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DescribeRulesInputBuilder {
    pub(crate) listener_arn: std::option::Option<std::string::String>,
    pub(crate) rule_arns: std::option::Option<std::vec::Vec<std::string::String>>,
    pub(crate) marker: std::option::Option<std::string::String>,
    pub(crate) page_size: std::option::Option<i32>,
}
impl DescribeRulesInputBuilder {
    /// <p>The Amazon Resource Name (ARN) of the listener.</p>
    pub fn listener_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.listener_arn = Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the listener.</p>
    pub fn set_listener_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.listener_arn = input;
        self
    }
    /// Appends an item to `rule_arns`.
    ///
    /// To override the contents of this collection use [`set_rule_arns`](Self::set_rule_arns).
    ///
    /// <p>The Amazon Resource Names (ARN) of the rules.</p>
    pub fn rule_arns(mut self, input: impl Into<std::string::String>) -> Self {
        let mut v = self.rule_arns.unwrap_or_default();
        v.push(input.into());
        self.rule_arns = Some(v);
        self
    }
    /// <p>The Amazon Resource Names (ARN) of the rules.</p>
    pub fn set_rule_arns(
        mut self,
        input: std::option::Option<std::vec::Vec<std::string::String>>,
    ) -> Self {
        self.rule_arns = input;
        self
    }
    /// <p>The marker for the next set of results. (You received this marker from a previous call.)</p>
    pub fn marker(mut self, input: impl Into<std::string::String>) -> Self {
        self.marker = Some(input.into());
        self
    }
    /// <p>The marker for the next set of results. (You received this marker from a previous call.)</p>
    pub fn set_marker(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.marker = input;
        self
    }
    /// <p>The maximum number of results to return with this call.</p>
    pub fn page_size(mut self, input: i32) -> Self {
        self.page_size = Some(input);
        self
    }
    /// <p>The maximum number of results to return with this call.</p>
    pub fn set_page_size(mut self, input: std::option::Option<i32>) -> Self {
        self.page_size = input;
        self
    }
    /// Consumes the builder and constructs a [`DescribeRulesInput`](crate::operation::describe_rules::DescribeRulesInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::describe_rules::DescribeRulesInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(crate::operation::describe_rules::DescribeRulesInput {
            listener_arn: self.listener_arn,
            rule_arns: self.rule_arns,
            marker: self.marker,
            page_size: self.page_size,
        })
    }
}
