// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateLoadBalancer`](crate::operation::create_load_balancer::builders::CreateLoadBalancerFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(impl Into<String>)`](crate::operation::create_load_balancer::builders::CreateLoadBalancerFluentBuilder::name) / [`set_name(Option<String>)`](crate::operation::create_load_balancer::builders::CreateLoadBalancerFluentBuilder::set_name): <p>The name of the load balancer.</p>  <p>This name must be unique per region per account, can have a maximum of 32 characters, must contain only alphanumeric characters or hyphens, must not begin or end with a hyphen, and must not begin with "internal-".</p>
    ///   - [`subnets(Vec<String>)`](crate::operation::create_load_balancer::builders::CreateLoadBalancerFluentBuilder::subnets) / [`set_subnets(Option<Vec<String>>)`](crate::operation::create_load_balancer::builders::CreateLoadBalancerFluentBuilder::set_subnets): <p>The IDs of the public subnets. You can specify only one subnet per Availability Zone. You must specify either subnets or subnet mappings, but not both. To specify an Elastic IP address, specify subnet mappings instead of subnets.</p>  <p>[Application Load Balancers] You must specify subnets from at least two Availability Zones.</p>  <p>[Application Load Balancers on Outposts] You must specify one Outpost subnet.</p>  <p>[Application Load Balancers on Local Zones] You can specify subnets from one or more Local Zones.</p>  <p>[Network Load Balancers] You can specify subnets from one or more Availability Zones.</p>  <p>[Gateway Load Balancers] You can specify subnets from one or more Availability Zones.</p>
    ///   - [`subnet_mappings(Vec<SubnetMapping>)`](crate::operation::create_load_balancer::builders::CreateLoadBalancerFluentBuilder::subnet_mappings) / [`set_subnet_mappings(Option<Vec<SubnetMapping>>)`](crate::operation::create_load_balancer::builders::CreateLoadBalancerFluentBuilder::set_subnet_mappings): <p>The IDs of the public subnets. You can specify only one subnet per Availability Zone. You must specify either subnets or subnet mappings, but not both.</p>  <p>[Application Load Balancers] You must specify subnets from at least two Availability Zones. You cannot specify Elastic IP addresses for your subnets.</p>  <p>[Application Load Balancers on Outposts] You must specify one Outpost subnet.</p>  <p>[Application Load Balancers on Local Zones] You can specify subnets from one or more Local Zones.</p>  <p>[Network Load Balancers] You can specify subnets from one or more Availability Zones. You can specify one Elastic IP address per subnet if you need static IP addresses for your internet-facing load balancer. For internal load balancers, you can specify one private IP address per subnet from the IPv4 range of the subnet. For internet-facing load balancer, you can specify one IPv6 address per subnet.</p>  <p>[Gateway Load Balancers] You can specify subnets from one or more Availability Zones. You cannot specify Elastic IP addresses for your subnets.</p>
    ///   - [`security_groups(Vec<String>)`](crate::operation::create_load_balancer::builders::CreateLoadBalancerFluentBuilder::security_groups) / [`set_security_groups(Option<Vec<String>>)`](crate::operation::create_load_balancer::builders::CreateLoadBalancerFluentBuilder::set_security_groups): <p>[Application Load Balancers] The IDs of the security groups for the load balancer.</p>
    ///   - [`scheme(LoadBalancerSchemeEnum)`](crate::operation::create_load_balancer::builders::CreateLoadBalancerFluentBuilder::scheme) / [`set_scheme(Option<LoadBalancerSchemeEnum>)`](crate::operation::create_load_balancer::builders::CreateLoadBalancerFluentBuilder::set_scheme): <p>The nodes of an Internet-facing load balancer have public IP addresses. The DNS name of an Internet-facing load balancer is publicly resolvable to the public IP addresses of the nodes. Therefore, Internet-facing load balancers can route requests from clients over the internet.</p>  <p>The nodes of an internal load balancer have only private IP addresses. The DNS name of an internal load balancer is publicly resolvable to the private IP addresses of the nodes. Therefore, internal load balancers can route requests only from clients with access to the VPC for the load balancer.</p>  <p>The default is an Internet-facing load balancer.</p>  <p>You cannot specify a scheme for a Gateway Load Balancer.</p>
    ///   - [`tags(Vec<Tag>)`](crate::operation::create_load_balancer::builders::CreateLoadBalancerFluentBuilder::tags) / [`set_tags(Option<Vec<Tag>>)`](crate::operation::create_load_balancer::builders::CreateLoadBalancerFluentBuilder::set_tags): <p>The tags to assign to the load balancer.</p>
    ///   - [`r#type(LoadBalancerTypeEnum)`](crate::operation::create_load_balancer::builders::CreateLoadBalancerFluentBuilder::type) / [`set_type(Option<LoadBalancerTypeEnum>)`](crate::operation::create_load_balancer::builders::CreateLoadBalancerFluentBuilder::set_type): <p>The type of load balancer. The default is <code>application</code>.</p>
    ///   - [`ip_address_type(IpAddressType)`](crate::operation::create_load_balancer::builders::CreateLoadBalancerFluentBuilder::ip_address_type) / [`set_ip_address_type(Option<IpAddressType>)`](crate::operation::create_load_balancer::builders::CreateLoadBalancerFluentBuilder::set_ip_address_type): <p>The type of IP addresses used by the subnets for your load balancer. The possible values are <code>ipv4</code> (for IPv4 addresses) and <code>dualstack</code> (for IPv4 and IPv6 addresses). </p>
    ///   - [`customer_owned_ipv4_pool(impl Into<String>)`](crate::operation::create_load_balancer::builders::CreateLoadBalancerFluentBuilder::customer_owned_ipv4_pool) / [`set_customer_owned_ipv4_pool(Option<String>)`](crate::operation::create_load_balancer::builders::CreateLoadBalancerFluentBuilder::set_customer_owned_ipv4_pool): <p>[Application Load Balancers on Outposts] The ID of the customer-owned address pool (CoIP pool).</p>
    /// - On success, responds with [`CreateLoadBalancerOutput`](crate::operation::create_load_balancer::CreateLoadBalancerOutput) with field(s):
    ///   - [`load_balancers(Option<Vec<LoadBalancer>>)`](crate::operation::create_load_balancer::CreateLoadBalancerOutput::load_balancers): <p>Information about the load balancer.</p>
    /// - On failure, responds with [`SdkError<CreateLoadBalancerError>`](crate::operation::create_load_balancer::CreateLoadBalancerError)
    pub fn create_load_balancer(
        &self,
    ) -> crate::operation::create_load_balancer::builders::CreateLoadBalancerFluentBuilder {
        crate::operation::create_load_balancer::builders::CreateLoadBalancerFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
