// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateListener`](crate::operation::create_listener::builders::CreateListenerFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`load_balancer_arn(impl Into<String>)`](crate::operation::create_listener::builders::CreateListenerFluentBuilder::load_balancer_arn) / [`set_load_balancer_arn(Option<String>)`](crate::operation::create_listener::builders::CreateListenerFluentBuilder::set_load_balancer_arn): <p>The Amazon Resource Name (ARN) of the load balancer.</p>
    ///   - [`protocol(ProtocolEnum)`](crate::operation::create_listener::builders::CreateListenerFluentBuilder::protocol) / [`set_protocol(Option<ProtocolEnum>)`](crate::operation::create_listener::builders::CreateListenerFluentBuilder::set_protocol): <p>The protocol for connections from clients to the load balancer. For Application Load Balancers, the supported protocols are HTTP and HTTPS. For Network Load Balancers, the supported protocols are TCP, TLS, UDP, and TCP_UDP. You canâ€™t specify the UDP or TCP_UDP protocol if dual-stack mode is enabled. You cannot specify a protocol for a Gateway Load Balancer.</p>
    ///   - [`port(i32)`](crate::operation::create_listener::builders::CreateListenerFluentBuilder::port) / [`set_port(Option<i32>)`](crate::operation::create_listener::builders::CreateListenerFluentBuilder::set_port): <p>The port on which the load balancer is listening. You cannot specify a port for a Gateway Load Balancer.</p>
    ///   - [`ssl_policy(impl Into<String>)`](crate::operation::create_listener::builders::CreateListenerFluentBuilder::ssl_policy) / [`set_ssl_policy(Option<String>)`](crate::operation::create_listener::builders::CreateListenerFluentBuilder::set_ssl_policy): <p>[HTTPS and TLS listeners] The security policy that defines which protocols and ciphers are supported.</p>  <p>For more information, see <a href="https://docs.aws.amazon.com/elasticloadbalancing/latest/application/create-https-listener.html#describe-ssl-policies">Security policies</a> in the <i>Application Load Balancers Guide</i> and <a href="https://docs.aws.amazon.com/elasticloadbalancing/latest/network/create-tls-listener.html#describe-ssl-policies">Security policies</a> in the <i>Network Load Balancers Guide</i>.</p>
    ///   - [`certificates(Vec<Certificate>)`](crate::operation::create_listener::builders::CreateListenerFluentBuilder::certificates) / [`set_certificates(Option<Vec<Certificate>>)`](crate::operation::create_listener::builders::CreateListenerFluentBuilder::set_certificates): <p>[HTTPS and TLS listeners] The default certificate for the listener. You must provide exactly one certificate. Set <code>CertificateArn</code> to the certificate ARN but do not set <code>IsDefault</code>.</p>
    ///   - [`default_actions(Vec<Action>)`](crate::operation::create_listener::builders::CreateListenerFluentBuilder::default_actions) / [`set_default_actions(Option<Vec<Action>>)`](crate::operation::create_listener::builders::CreateListenerFluentBuilder::set_default_actions): <p>The actions for the default rule.</p>
    ///   - [`alpn_policy(Vec<String>)`](crate::operation::create_listener::builders::CreateListenerFluentBuilder::alpn_policy) / [`set_alpn_policy(Option<Vec<String>>)`](crate::operation::create_listener::builders::CreateListenerFluentBuilder::set_alpn_policy): <p>[TLS listeners] The name of the Application-Layer Protocol Negotiation (ALPN) policy. You can specify one policy name. The following are the possible values:</p>  <ul>   <li> <p> <code>HTTP1Only</code> </p> </li>   <li> <p> <code>HTTP2Only</code> </p> </li>   <li> <p> <code>HTTP2Optional</code> </p> </li>   <li> <p> <code>HTTP2Preferred</code> </p> </li>   <li> <p> <code>None</code> </p> </li>  </ul>  <p>For more information, see <a href="https://docs.aws.amazon.com/elasticloadbalancing/latest/network/create-tls-listener.html#alpn-policies">ALPN policies</a> in the <i>Network Load Balancers Guide</i>.</p>
    ///   - [`tags(Vec<Tag>)`](crate::operation::create_listener::builders::CreateListenerFluentBuilder::tags) / [`set_tags(Option<Vec<Tag>>)`](crate::operation::create_listener::builders::CreateListenerFluentBuilder::set_tags): <p>The tags to assign to the listener.</p>
    /// - On success, responds with [`CreateListenerOutput`](crate::operation::create_listener::CreateListenerOutput) with field(s):
    ///   - [`listeners(Option<Vec<Listener>>)`](crate::operation::create_listener::CreateListenerOutput::listeners): <p>Information about the listener.</p>
    /// - On failure, responds with [`SdkError<CreateListenerError>`](crate::operation::create_listener::CreateListenerError)
    pub fn create_listener(
        &self,
    ) -> crate::operation::create_listener::builders::CreateListenerFluentBuilder {
        crate::operation::create_listener::builders::CreateListenerFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
