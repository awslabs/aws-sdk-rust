// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`RemoveListenerCertificates`](crate::operation::remove_listener_certificates::builders::RemoveListenerCertificatesFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`listener_arn(impl Into<String>)`](crate::operation::remove_listener_certificates::builders::RemoveListenerCertificatesFluentBuilder::listener_arn) / [`set_listener_arn(Option<String>)`](crate::operation::remove_listener_certificates::builders::RemoveListenerCertificatesFluentBuilder::set_listener_arn):<br>required: **true**<br><p>The Amazon Resource Name (ARN) of the listener.</p><br>
    ///   - [`certificates(Certificate)`](crate::operation::remove_listener_certificates::builders::RemoveListenerCertificatesFluentBuilder::certificates) / [`set_certificates(Option<Vec::<Certificate>>)`](crate::operation::remove_listener_certificates::builders::RemoveListenerCertificatesFluentBuilder::set_certificates):<br>required: **true**<br><p>The certificate to remove. You can specify one certificate per call. Set <code>CertificateArn</code> to the certificate ARN but do not set <code>IsDefault</code>.</p><br>
    /// - On success, responds with [`RemoveListenerCertificatesOutput`](crate::operation::remove_listener_certificates::RemoveListenerCertificatesOutput)
    /// - On failure, responds with [`SdkError<RemoveListenerCertificatesError>`](crate::operation::remove_listener_certificates::RemoveListenerCertificatesError)
    pub fn remove_listener_certificates(&self) -> crate::operation::remove_listener_certificates::builders::RemoveListenerCertificatesFluentBuilder {
        crate::operation::remove_listener_certificates::builders::RemoveListenerCertificatesFluentBuilder::new(self.handle.clone())
    }
}
