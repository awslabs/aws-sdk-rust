// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeregisterTargets`](crate::operation::deregister_targets::builders::DeregisterTargetsFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`target_group_arn(impl Into<String>)`](crate::operation::deregister_targets::builders::DeregisterTargetsFluentBuilder::target_group_arn) / [`set_target_group_arn(Option<String>)`](crate::operation::deregister_targets::builders::DeregisterTargetsFluentBuilder::set_target_group_arn): <p>The Amazon Resource Name (ARN) of the target group.</p>
    ///   - [`targets(Vec<TargetDescription>)`](crate::operation::deregister_targets::builders::DeregisterTargetsFluentBuilder::targets) / [`set_targets(Option<Vec<TargetDescription>>)`](crate::operation::deregister_targets::builders::DeregisterTargetsFluentBuilder::set_targets): <p>The targets. If you specified a port override when you registered a target, you must specify both the target ID and the port when you deregister it.</p>
    /// - On success, responds with [`DeregisterTargetsOutput`](crate::operation::deregister_targets::DeregisterTargetsOutput)
    /// - On failure, responds with [`SdkError<DeregisterTargetsError>`](crate::operation::deregister_targets::DeregisterTargetsError)
    pub fn deregister_targets(
        &self,
    ) -> crate::operation::deregister_targets::builders::DeregisterTargetsFluentBuilder {
        crate::operation::deregister_targets::builders::DeregisterTargetsFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
