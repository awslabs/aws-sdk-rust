// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) fn target_description_correct_errors(
    mut builder: crate::types::builders::TargetDescriptionBuilder,
) -> crate::types::builders::TargetDescriptionBuilder {
    if builder.id.is_none() {
        builder.id = Some(Default::default())
    }
    builder
}

pub(crate) fn action_correct_errors(mut builder: crate::types::builders::ActionBuilder) -> crate::types::builders::ActionBuilder {
    if builder.r#type.is_none() {
        builder.r#type = "no value was set".parse::<crate::types::ActionTypeEnum>().ok()
    }
    builder
}

pub(crate) fn tag_correct_errors(mut builder: crate::types::builders::TagBuilder) -> crate::types::builders::TagBuilder {
    if builder.key.is_none() {
        builder.key = Some(Default::default())
    }
    builder
}

pub(crate) fn authenticate_cognito_action_config_correct_errors(
    mut builder: crate::types::builders::AuthenticateCognitoActionConfigBuilder,
) -> crate::types::builders::AuthenticateCognitoActionConfigBuilder {
    if builder.user_pool_arn.is_none() {
        builder.user_pool_arn = Some(Default::default())
    }
    if builder.user_pool_client_id.is_none() {
        builder.user_pool_client_id = Some(Default::default())
    }
    if builder.user_pool_domain.is_none() {
        builder.user_pool_domain = Some(Default::default())
    }
    builder
}

pub(crate) fn authenticate_oidc_action_config_correct_errors(
    mut builder: crate::types::builders::AuthenticateOidcActionConfigBuilder,
) -> crate::types::builders::AuthenticateOidcActionConfigBuilder {
    if builder.issuer.is_none() {
        builder.issuer = Some(Default::default())
    }
    if builder.authorization_endpoint.is_none() {
        builder.authorization_endpoint = Some(Default::default())
    }
    if builder.token_endpoint.is_none() {
        builder.token_endpoint = Some(Default::default())
    }
    if builder.user_info_endpoint.is_none() {
        builder.user_info_endpoint = Some(Default::default())
    }
    if builder.client_id.is_none() {
        builder.client_id = Some(Default::default())
    }
    builder
}

pub(crate) fn fixed_response_action_config_correct_errors(
    mut builder: crate::types::builders::FixedResponseActionConfigBuilder,
) -> crate::types::builders::FixedResponseActionConfigBuilder {
    if builder.status_code.is_none() {
        builder.status_code = Some(Default::default())
    }
    builder
}

pub(crate) fn redirect_action_config_correct_errors(
    mut builder: crate::types::builders::RedirectActionConfigBuilder,
) -> crate::types::builders::RedirectActionConfigBuilder {
    if builder.status_code.is_none() {
        builder.status_code = "no value was set".parse::<crate::types::RedirectActionStatusCodeEnum>().ok()
    }
    builder
}
