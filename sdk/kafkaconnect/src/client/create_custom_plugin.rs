// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateCustomPlugin`](crate::client::fluent_builders::CreateCustomPlugin) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`content_type(CustomPluginContentType)`](crate::client::fluent_builders::CreateCustomPlugin::content_type) / [`set_content_type(Option<CustomPluginContentType>)`](crate::client::fluent_builders::CreateCustomPlugin::set_content_type): <p>The type of the plugin file.</p>
    ///   - [`description(impl Into<String>)`](crate::client::fluent_builders::CreateCustomPlugin::description) / [`set_description(Option<String>)`](crate::client::fluent_builders::CreateCustomPlugin::set_description): <p>A summary description of the custom plugin.</p>
    ///   - [`location(CustomPluginLocation)`](crate::client::fluent_builders::CreateCustomPlugin::location) / [`set_location(Option<CustomPluginLocation>)`](crate::client::fluent_builders::CreateCustomPlugin::set_location): <p>Information about the location of a custom plugin.</p>
    ///   - [`name(impl Into<String>)`](crate::client::fluent_builders::CreateCustomPlugin::name) / [`set_name(Option<String>)`](crate::client::fluent_builders::CreateCustomPlugin::set_name): <p>The name of the custom plugin.</p>
    /// - On success, responds with [`CreateCustomPluginOutput`](crate::output::CreateCustomPluginOutput) with field(s):
    ///   - [`custom_plugin_arn(Option<String>)`](crate::output::CreateCustomPluginOutput::custom_plugin_arn): <p>The Amazon Resource Name (ARN) that Amazon assigned to the custom plugin.</p>
    ///   - [`custom_plugin_state(Option<CustomPluginState>)`](crate::output::CreateCustomPluginOutput::custom_plugin_state): <p>The state of the custom plugin.</p>
    ///   - [`name(Option<String>)`](crate::output::CreateCustomPluginOutput::name): <p>The name of the custom plugin.</p>
    ///   - [`revision(i64)`](crate::output::CreateCustomPluginOutput::revision): <p>The revision of the custom plugin.</p>
    /// - On failure, responds with [`SdkError<CreateCustomPluginError>`](crate::error::CreateCustomPluginError)
    pub fn create_custom_plugin(&self) -> crate::client::fluent_builders::CreateCustomPlugin {
        crate::client::fluent_builders::CreateCustomPlugin::new(self.handle.clone())
    }
}
