// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeWorkerConfiguration`](crate::client::fluent_builders::DescribeWorkerConfiguration) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`worker_configuration_arn(impl Into<String>)`](crate::client::fluent_builders::DescribeWorkerConfiguration::worker_configuration_arn) / [`set_worker_configuration_arn(Option<String>)`](crate::client::fluent_builders::DescribeWorkerConfiguration::set_worker_configuration_arn): <p>The Amazon Resource Name (ARN) of the worker configuration that you want to get information about.</p>
    /// - On success, responds with [`DescribeWorkerConfigurationOutput`](crate::output::DescribeWorkerConfigurationOutput) with field(s):
    ///   - [`creation_time(Option<DateTime>)`](crate::output::DescribeWorkerConfigurationOutput::creation_time): <p>The time that the worker configuration was created.</p>
    ///   - [`description(Option<String>)`](crate::output::DescribeWorkerConfigurationOutput::description): <p>The description of the worker configuration.</p>
    ///   - [`latest_revision(Option<WorkerConfigurationRevisionDescription>)`](crate::output::DescribeWorkerConfigurationOutput::latest_revision): <p>The latest revision of the custom configuration.</p>
    ///   - [`name(Option<String>)`](crate::output::DescribeWorkerConfigurationOutput::name): <p>The name of the worker configuration.</p>
    ///   - [`worker_configuration_arn(Option<String>)`](crate::output::DescribeWorkerConfigurationOutput::worker_configuration_arn): <p>The Amazon Resource Name (ARN) of the custom configuration.</p>
    /// - On failure, responds with [`SdkError<DescribeWorkerConfigurationError>`](crate::error::DescribeWorkerConfigurationError)
    pub fn describe_worker_configuration(
        &self,
    ) -> crate::client::fluent_builders::DescribeWorkerConfiguration {
        crate::client::fluent_builders::DescribeWorkerConfiguration::new(self.handle.clone())
    }
}
