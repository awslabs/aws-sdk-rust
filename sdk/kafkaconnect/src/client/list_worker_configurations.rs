// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListWorkerConfigurations`](crate::client::fluent_builders::ListWorkerConfigurations) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListWorkerConfigurations::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListWorkerConfigurations::max_results) / [`set_max_results(i32)`](crate::client::fluent_builders::ListWorkerConfigurations::set_max_results): <p>The maximum number of worker configurations to list in one response.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListWorkerConfigurations::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListWorkerConfigurations::set_next_token): <p>If the response of a ListWorkerConfigurations operation is truncated, it will include a NextToken. Send this NextToken in a subsequent request to continue listing from where the previous operation left off.</p>
    /// - On success, responds with [`ListWorkerConfigurationsOutput`](crate::output::ListWorkerConfigurationsOutput) with field(s):
    ///   - [`next_token(Option<String>)`](crate::output::ListWorkerConfigurationsOutput::next_token): <p>If the response of a ListWorkerConfigurations operation is truncated, it will include a NextToken. Send this NextToken in a subsequent request to continue listing from where the previous operation left off.</p>
    ///   - [`worker_configurations(Option<Vec<WorkerConfigurationSummary>>)`](crate::output::ListWorkerConfigurationsOutput::worker_configurations): <p>An array of worker configuration descriptions.</p>
    /// - On failure, responds with [`SdkError<ListWorkerConfigurationsError>`](crate::error::ListWorkerConfigurationsError)
    pub fn list_worker_configurations(
        &self,
    ) -> crate::client::fluent_builders::ListWorkerConfigurations {
        crate::client::fluent_builders::ListWorkerConfigurations::new(self.handle.clone())
    }
}
