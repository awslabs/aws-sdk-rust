// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The description of the worker configuration revision.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq)]
pub struct WorkerConfigurationRevisionDescription {
    /// <p>The time that the worker configuration was created.</p>
    #[doc(hidden)]
    pub creation_time: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>The description of the worker configuration revision.</p>
    #[doc(hidden)]
    pub description: std::option::Option<std::string::String>,
    /// <p>Base64 encoded contents of the connect-distributed.properties file.</p>
    #[doc(hidden)]
    pub properties_file_content: std::option::Option<std::string::String>,
    /// <p>The description of a revision of the worker configuration.</p>
    #[doc(hidden)]
    pub revision: i64,
}
impl WorkerConfigurationRevisionDescription {
    /// <p>The time that the worker configuration was created.</p>
    pub fn creation_time(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.creation_time.as_ref()
    }
    /// <p>The description of the worker configuration revision.</p>
    pub fn description(&self) -> std::option::Option<&str> {
        self.description.as_deref()
    }
    /// <p>Base64 encoded contents of the connect-distributed.properties file.</p>
    pub fn properties_file_content(&self) -> std::option::Option<&str> {
        self.properties_file_content.as_deref()
    }
    /// <p>The description of a revision of the worker configuration.</p>
    pub fn revision(&self) -> i64 {
        self.revision
    }
}
impl std::fmt::Debug for WorkerConfigurationRevisionDescription {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        let mut formatter = f.debug_struct("WorkerConfigurationRevisionDescription");
        formatter.field("creation_time", &self.creation_time);
        formatter.field("description", &self.description);
        formatter.field(
            "properties_file_content",
            &"*** Sensitive Data Redacted ***",
        );
        formatter.field("revision", &self.revision);
        formatter.finish()
    }
}
impl WorkerConfigurationRevisionDescription {
    /// Creates a new builder-style object to manufacture [`WorkerConfigurationRevisionDescription`](crate::types::WorkerConfigurationRevisionDescription).
    pub fn builder() -> crate::types::builders::WorkerConfigurationRevisionDescriptionBuilder {
        crate::types::builders::WorkerConfigurationRevisionDescriptionBuilder::default()
    }
}

/// A builder for [`WorkerConfigurationRevisionDescription`](crate::types::WorkerConfigurationRevisionDescription).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default)]
pub struct WorkerConfigurationRevisionDescriptionBuilder {
    pub(crate) creation_time: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) description: std::option::Option<std::string::String>,
    pub(crate) properties_file_content: std::option::Option<std::string::String>,
    pub(crate) revision: std::option::Option<i64>,
}
impl WorkerConfigurationRevisionDescriptionBuilder {
    /// <p>The time that the worker configuration was created.</p>
    pub fn creation_time(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.creation_time = Some(input);
        self
    }
    /// <p>The time that the worker configuration was created.</p>
    pub fn set_creation_time(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.creation_time = input;
        self
    }
    /// <p>The description of the worker configuration revision.</p>
    pub fn description(mut self, input: impl Into<std::string::String>) -> Self {
        self.description = Some(input.into());
        self
    }
    /// <p>The description of the worker configuration revision.</p>
    pub fn set_description(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.description = input;
        self
    }
    /// <p>Base64 encoded contents of the connect-distributed.properties file.</p>
    pub fn properties_file_content(mut self, input: impl Into<std::string::String>) -> Self {
        self.properties_file_content = Some(input.into());
        self
    }
    /// <p>Base64 encoded contents of the connect-distributed.properties file.</p>
    pub fn set_properties_file_content(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.properties_file_content = input;
        self
    }
    /// <p>The description of a revision of the worker configuration.</p>
    pub fn revision(mut self, input: i64) -> Self {
        self.revision = Some(input);
        self
    }
    /// <p>The description of a revision of the worker configuration.</p>
    pub fn set_revision(mut self, input: std::option::Option<i64>) -> Self {
        self.revision = input;
        self
    }
    /// Consumes the builder and constructs a [`WorkerConfigurationRevisionDescription`](crate::types::WorkerConfigurationRevisionDescription).
    pub fn build(self) -> crate::types::WorkerConfigurationRevisionDescription {
        crate::types::WorkerConfigurationRevisionDescription {
            creation_time: self.creation_time,
            description: self.description,
            properties_file_content: self.properties_file_content,
            revision: self.revision.unwrap_or_default(),
        }
    }
}
impl std::fmt::Debug for WorkerConfigurationRevisionDescriptionBuilder {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        let mut formatter = f.debug_struct("WorkerConfigurationRevisionDescriptionBuilder");
        formatter.field("creation_time", &self.creation_time);
        formatter.field("description", &self.description);
        formatter.field(
            "properties_file_content",
            &"*** Sensitive Data Redacted ***",
        );
        formatter.field("revision", &self.revision);
        formatter.finish()
    }
}
