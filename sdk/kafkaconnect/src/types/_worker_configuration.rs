// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The configuration of the workers, which are the processes that run the connector logic.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct WorkerConfiguration {
    /// <p>The revision of the worker configuration.</p>
    pub revision: i64,
    /// <p>The Amazon Resource Name (ARN) of the worker configuration.</p>
    pub worker_configuration_arn: ::std::string::String,
}
impl WorkerConfiguration {
    /// <p>The revision of the worker configuration.</p>
    pub fn revision(&self) -> i64 {
        self.revision
    }
    /// <p>The Amazon Resource Name (ARN) of the worker configuration.</p>
    pub fn worker_configuration_arn(&self) -> &str {
        use std::ops::Deref;
        self.worker_configuration_arn.deref()
    }
}
impl WorkerConfiguration {
    /// Creates a new builder-style object to manufacture [`WorkerConfiguration`](crate::types::WorkerConfiguration).
    pub fn builder() -> crate::types::builders::WorkerConfigurationBuilder {
        crate::types::builders::WorkerConfigurationBuilder::default()
    }
}

/// A builder for [`WorkerConfiguration`](crate::types::WorkerConfiguration).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct WorkerConfigurationBuilder {
    pub(crate) revision: ::std::option::Option<i64>,
    pub(crate) worker_configuration_arn: ::std::option::Option<::std::string::String>,
}
impl WorkerConfigurationBuilder {
    /// <p>The revision of the worker configuration.</p>
    /// This field is required.
    pub fn revision(mut self, input: i64) -> Self {
        self.revision = ::std::option::Option::Some(input);
        self
    }
    /// <p>The revision of the worker configuration.</p>
    pub fn set_revision(mut self, input: ::std::option::Option<i64>) -> Self {
        self.revision = input;
        self
    }
    /// <p>The revision of the worker configuration.</p>
    pub fn get_revision(&self) -> &::std::option::Option<i64> {
        &self.revision
    }
    /// <p>The Amazon Resource Name (ARN) of the worker configuration.</p>
    /// This field is required.
    pub fn worker_configuration_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.worker_configuration_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the worker configuration.</p>
    pub fn set_worker_configuration_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.worker_configuration_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the worker configuration.</p>
    pub fn get_worker_configuration_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.worker_configuration_arn
    }
    /// Consumes the builder and constructs a [`WorkerConfiguration`](crate::types::WorkerConfiguration).
    /// This method will fail if any of the following fields are not set:
    /// - [`worker_configuration_arn`](crate::types::builders::WorkerConfigurationBuilder::worker_configuration_arn)
    pub fn build(self) -> ::std::result::Result<crate::types::WorkerConfiguration, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::WorkerConfiguration {
            revision: self.revision.unwrap_or_default(),
            worker_configuration_arn: self.worker_configuration_arn.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "worker_configuration_arn",
                    "worker_configuration_arn was not specified but it is required when building WorkerConfiguration",
                )
            })?,
        })
    }
}
