// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Details about a custom plugin.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct CustomPluginDescription {
    /// <p>The Amazon Resource Name (ARN) of the custom plugin.</p>
    #[doc(hidden)]
    pub custom_plugin_arn: std::option::Option<std::string::String>,
    /// <p>The revision of the custom plugin.</p>
    #[doc(hidden)]
    pub revision: i64,
}
impl CustomPluginDescription {
    /// <p>The Amazon Resource Name (ARN) of the custom plugin.</p>
    pub fn custom_plugin_arn(&self) -> std::option::Option<&str> {
        self.custom_plugin_arn.as_deref()
    }
    /// <p>The revision of the custom plugin.</p>
    pub fn revision(&self) -> i64 {
        self.revision
    }
}
impl CustomPluginDescription {
    /// Creates a new builder-style object to manufacture [`CustomPluginDescription`](crate::types::CustomPluginDescription).
    pub fn builder() -> crate::types::builders::CustomPluginDescriptionBuilder {
        crate::types::builders::CustomPluginDescriptionBuilder::default()
    }
}

/// A builder for [`CustomPluginDescription`](crate::types::CustomPluginDescription).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct CustomPluginDescriptionBuilder {
    pub(crate) custom_plugin_arn: std::option::Option<std::string::String>,
    pub(crate) revision: std::option::Option<i64>,
}
impl CustomPluginDescriptionBuilder {
    /// <p>The Amazon Resource Name (ARN) of the custom plugin.</p>
    pub fn custom_plugin_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.custom_plugin_arn = Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the custom plugin.</p>
    pub fn set_custom_plugin_arn(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.custom_plugin_arn = input;
        self
    }
    /// <p>The revision of the custom plugin.</p>
    pub fn revision(mut self, input: i64) -> Self {
        self.revision = Some(input);
        self
    }
    /// <p>The revision of the custom plugin.</p>
    pub fn set_revision(mut self, input: std::option::Option<i64>) -> Self {
        self.revision = input;
        self
    }
    /// Consumes the builder and constructs a [`CustomPluginDescription`](crate::types::CustomPluginDescription).
    pub fn build(self) -> crate::types::CustomPluginDescription {
        crate::types::CustomPluginDescription {
            custom_plugin_arn: self.custom_plugin_arn,
            revision: self.revision.unwrap_or_default(),
        }
    }
}
