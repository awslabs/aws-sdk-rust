// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>An update to the connector's scale-out policy.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ScaleOutPolicyUpdate {
    /// <p>The target CPU utilization percentage threshold at which you want connector scale out to be triggered.</p>
    pub cpu_utilization_percentage: i32,
}
impl ScaleOutPolicyUpdate {
    /// <p>The target CPU utilization percentage threshold at which you want connector scale out to be triggered.</p>
    pub fn cpu_utilization_percentage(&self) -> i32 {
        self.cpu_utilization_percentage
    }
}
impl ScaleOutPolicyUpdate {
    /// Creates a new builder-style object to manufacture [`ScaleOutPolicyUpdate`](crate::types::ScaleOutPolicyUpdate).
    pub fn builder() -> crate::types::builders::ScaleOutPolicyUpdateBuilder {
        crate::types::builders::ScaleOutPolicyUpdateBuilder::default()
    }
}

/// A builder for [`ScaleOutPolicyUpdate`](crate::types::ScaleOutPolicyUpdate).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ScaleOutPolicyUpdateBuilder {
    pub(crate) cpu_utilization_percentage: ::std::option::Option<i32>,
}
impl ScaleOutPolicyUpdateBuilder {
    /// <p>The target CPU utilization percentage threshold at which you want connector scale out to be triggered.</p>
    /// This field is required.
    pub fn cpu_utilization_percentage(mut self, input: i32) -> Self {
        self.cpu_utilization_percentage = ::std::option::Option::Some(input);
        self
    }
    /// <p>The target CPU utilization percentage threshold at which you want connector scale out to be triggered.</p>
    pub fn set_cpu_utilization_percentage(mut self, input: ::std::option::Option<i32>) -> Self {
        self.cpu_utilization_percentage = input;
        self
    }
    /// <p>The target CPU utilization percentage threshold at which you want connector scale out to be triggered.</p>
    pub fn get_cpu_utilization_percentage(&self) -> &::std::option::Option<i32> {
        &self.cpu_utilization_percentage
    }
    /// Consumes the builder and constructs a [`ScaleOutPolicyUpdate`](crate::types::ScaleOutPolicyUpdate).
    pub fn build(self) -> crate::types::ScaleOutPolicyUpdate {
        crate::types::ScaleOutPolicyUpdate {
            cpu_utilization_percentage: self.cpu_utilization_percentage.unwrap_or_default(),
        }
    }
}
