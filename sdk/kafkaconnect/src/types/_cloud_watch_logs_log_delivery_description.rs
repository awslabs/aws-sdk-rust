// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A description of the log delivery settings.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct CloudWatchLogsLogDeliveryDescription {
    /// <p>Whether log delivery to Amazon CloudWatch Logs is enabled.</p>
    #[doc(hidden)]
    pub enabled: bool,
    /// <p>The name of the CloudWatch log group that is the destination for log delivery.</p>
    #[doc(hidden)]
    pub log_group: std::option::Option<std::string::String>,
}
impl CloudWatchLogsLogDeliveryDescription {
    /// <p>Whether log delivery to Amazon CloudWatch Logs is enabled.</p>
    pub fn enabled(&self) -> bool {
        self.enabled
    }
    /// <p>The name of the CloudWatch log group that is the destination for log delivery.</p>
    pub fn log_group(&self) -> std::option::Option<&str> {
        self.log_group.as_deref()
    }
}
impl CloudWatchLogsLogDeliveryDescription {
    /// Creates a new builder-style object to manufacture [`CloudWatchLogsLogDeliveryDescription`](crate::types::CloudWatchLogsLogDeliveryDescription).
    pub fn builder() -> crate::types::builders::CloudWatchLogsLogDeliveryDescriptionBuilder {
        crate::types::builders::CloudWatchLogsLogDeliveryDescriptionBuilder::default()
    }
}

/// A builder for [`CloudWatchLogsLogDeliveryDescription`](crate::types::CloudWatchLogsLogDeliveryDescription).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct CloudWatchLogsLogDeliveryDescriptionBuilder {
    pub(crate) enabled: std::option::Option<bool>,
    pub(crate) log_group: std::option::Option<std::string::String>,
}
impl CloudWatchLogsLogDeliveryDescriptionBuilder {
    /// <p>Whether log delivery to Amazon CloudWatch Logs is enabled.</p>
    pub fn enabled(mut self, input: bool) -> Self {
        self.enabled = Some(input);
        self
    }
    /// <p>Whether log delivery to Amazon CloudWatch Logs is enabled.</p>
    pub fn set_enabled(mut self, input: std::option::Option<bool>) -> Self {
        self.enabled = input;
        self
    }
    /// <p>The name of the CloudWatch log group that is the destination for log delivery.</p>
    pub fn log_group(mut self, input: impl Into<std::string::String>) -> Self {
        self.log_group = Some(input.into());
        self
    }
    /// <p>The name of the CloudWatch log group that is the destination for log delivery.</p>
    pub fn set_log_group(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.log_group = input;
        self
    }
    /// Consumes the builder and constructs a [`CloudWatchLogsLogDeliveryDescription`](crate::types::CloudWatchLogsLogDeliveryDescription).
    pub fn build(self) -> crate::types::CloudWatchLogsLogDeliveryDescription {
        crate::types::CloudWatchLogsLogDeliveryDescription {
            enabled: self.enabled.unwrap_or_default(),
            log_group: self.log_group,
        }
    }
}
