// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_auto_scaling(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::types::AutoScaling,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    {
        object.key("maxWorkerCount").number(
            #[allow(clippy::useless_conversion)]
            ::aws_smithy_types::Number::NegInt((input.max_worker_count).into()),
        );
    }
    {
        object.key("mcuCount").number(
            #[allow(clippy::useless_conversion)]
            ::aws_smithy_types::Number::NegInt((input.mcu_count).into()),
        );
    }
    {
        object.key("minWorkerCount").number(
            #[allow(clippy::useless_conversion)]
            ::aws_smithy_types::Number::NegInt((input.min_worker_count).into()),
        );
    }
    if let Some(var_1) = &input.scale_in_policy {
        #[allow(unused_mut)]
        let mut object_2 = object.key("scaleInPolicy").start_object();
        crate::protocol_serde::shape_scale_in_policy::ser_scale_in_policy(&mut object_2, var_1)?;
        object_2.finish();
    }
    if let Some(var_3) = &input.scale_out_policy {
        #[allow(unused_mut)]
        let mut object_4 = object.key("scaleOutPolicy").start_object();
        crate::protocol_serde::shape_scale_out_policy::ser_scale_out_policy(&mut object_4, var_3)?;
        object_4.finish();
    }
    Ok(())
}
