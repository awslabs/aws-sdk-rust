// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`PutProjectEvents`](crate::client::fluent_builders::PutProjectEvents) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`project(impl Into<String>)`](crate::client::fluent_builders::PutProjectEvents::project) / [`set_project(Option<String>)`](crate::client::fluent_builders::PutProjectEvents::set_project): <p>The name or ARN of the project to write the events to.</p>
    ///   - [`events(Vec<Event>)`](crate::client::fluent_builders::PutProjectEvents::events) / [`set_events(Option<Vec<Event>>)`](crate::client::fluent_builders::PutProjectEvents::set_events): <p>An array of event structures that contain the performance data that is being sent to Evidently.</p>
    /// - On success, responds with [`PutProjectEventsOutput`](crate::output::PutProjectEventsOutput) with field(s):
    ///   - [`failed_event_count(Option<i32>)`](crate::output::PutProjectEventsOutput::failed_event_count): <p>The number of events in the operation that could not be used by Evidently.</p>
    ///   - [`event_results(Option<Vec<PutProjectEventsResultEntry>>)`](crate::output::PutProjectEventsOutput::event_results): <p>A structure that contains Evidently's response to the sent events, including an event ID and error codes, if any.</p>
    /// - On failure, responds with [`SdkError<PutProjectEventsError>`](crate::error::PutProjectEventsError)
    pub fn put_project_events(&self) -> crate::client::fluent_builders::PutProjectEvents {
        crate::client::fluent_builders::PutProjectEvents::new(self.handle.clone())
    }
}
