// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetExperimentResults`](crate::operation::get_experiment_results::builders::GetExperimentResultsFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`project(impl Into<String>)`](crate::operation::get_experiment_results::builders::GetExperimentResultsFluentBuilder::project) / [`set_project(Option<String>)`](crate::operation::get_experiment_results::builders::GetExperimentResultsFluentBuilder::set_project):<br>required: **true**<br><p>The name or ARN of the project that contains the experiment that you want to see the results of.</p><br>
    ///   - [`experiment(impl Into<String>)`](crate::operation::get_experiment_results::builders::GetExperimentResultsFluentBuilder::experiment) / [`set_experiment(Option<String>)`](crate::operation::get_experiment_results::builders::GetExperimentResultsFluentBuilder::set_experiment):<br>required: **true**<br><p>The name of the experiment to retrieve the results of.</p><br>
    ///   - [`start_time(DateTime)`](crate::operation::get_experiment_results::builders::GetExperimentResultsFluentBuilder::start_time) / [`set_start_time(Option<DateTime>)`](crate::operation::get_experiment_results::builders::GetExperimentResultsFluentBuilder::set_start_time):<br>required: **false**<br><p>The date and time that the experiment started.</p><br>
    ///   - [`end_time(DateTime)`](crate::operation::get_experiment_results::builders::GetExperimentResultsFluentBuilder::end_time) / [`set_end_time(Option<DateTime>)`](crate::operation::get_experiment_results::builders::GetExperimentResultsFluentBuilder::set_end_time):<br>required: **false**<br><p>The date and time that the experiment ended, if it is completed. This must be no longer than 30 days after the experiment start time.</p><br>
    ///   - [`metric_names(impl Into<String>)`](crate::operation::get_experiment_results::builders::GetExperimentResultsFluentBuilder::metric_names) / [`set_metric_names(Option<Vec::<String>>)`](crate::operation::get_experiment_results::builders::GetExperimentResultsFluentBuilder::set_metric_names):<br>required: **true**<br><p>The names of the experiment metrics that you want to see the results of.</p><br>
    ///   - [`treatment_names(impl Into<String>)`](crate::operation::get_experiment_results::builders::GetExperimentResultsFluentBuilder::treatment_names) / [`set_treatment_names(Option<Vec::<String>>)`](crate::operation::get_experiment_results::builders::GetExperimentResultsFluentBuilder::set_treatment_names):<br>required: **true**<br><p>The names of the experiment treatments that you want to see the results for.</p><br>
    ///   - [`base_stat(ExperimentBaseStat)`](crate::operation::get_experiment_results::builders::GetExperimentResultsFluentBuilder::base_stat) / [`set_base_stat(Option<ExperimentBaseStat>)`](crate::operation::get_experiment_results::builders::GetExperimentResultsFluentBuilder::set_base_stat):<br>required: **false**<br><p>The statistic used to calculate experiment results. Currently the only valid value is <code>mean</code>, which uses the mean of the collected values as the statistic.</p><br>
    ///   - [`result_stats(ExperimentResultRequestType)`](crate::operation::get_experiment_results::builders::GetExperimentResultsFluentBuilder::result_stats) / [`set_result_stats(Option<Vec::<ExperimentResultRequestType>>)`](crate::operation::get_experiment_results::builders::GetExperimentResultsFluentBuilder::set_result_stats):<br>required: **false**<br><p>The statistics that you want to see in the returned results.</p>  <ul>   <li> <p> <code>PValue</code> specifies to use p-values for the results. A p-value is used in hypothesis testing to measure how often you are willing to make a mistake in rejecting the null hypothesis. A general practice is to reject the null hypothesis and declare that the results are statistically significant when the p-value is less than 0.05.</p> </li>   <li> <p> <code>ConfidenceInterval</code> specifies a confidence interval for the results. The confidence interval represents the range of values for the chosen metric that is likely to contain the true difference between the <code>baseStat</code> of a variation and the baseline. Evidently returns the 95% confidence interval. </p> </li>   <li> <p> <code>TreatmentEffect</code> is the difference in the statistic specified by the <code>baseStat</code> parameter between each variation and the default variation. </p> </li>   <li> <p> <code>BaseStat</code> returns the statistical values collected for the metric for each variation. The statistic uses the same statistic specified in the <code>baseStat</code> parameter. Therefore, if <code>baseStat</code> is <code>mean</code>, this returns the mean of the values collected for each variation.</p> </li>  </ul><br>
    ///   - [`report_names(ExperimentReportName)`](crate::operation::get_experiment_results::builders::GetExperimentResultsFluentBuilder::report_names) / [`set_report_names(Option<Vec::<ExperimentReportName>>)`](crate::operation::get_experiment_results::builders::GetExperimentResultsFluentBuilder::set_report_names):<br>required: **false**<br><p>The names of the report types that you want to see. Currently, <code>BayesianInference</code> is the only valid value.</p><br>
    ///   - [`period(i64)`](crate::operation::get_experiment_results::builders::GetExperimentResultsFluentBuilder::period) / [`set_period(Option<i64>)`](crate::operation::get_experiment_results::builders::GetExperimentResultsFluentBuilder::set_period):<br>required: **false**<br><p>In seconds, the amount of time to aggregate results together. </p><br>
    /// - On success, responds with [`GetExperimentResultsOutput`](crate::operation::get_experiment_results::GetExperimentResultsOutput) with field(s):
    ///   - [`results_data(Option<Vec::<ExperimentResultsData>>)`](crate::operation::get_experiment_results::GetExperimentResultsOutput::results_data): <p>An array of structures that include experiment results including metric names and values. </p>
    ///   - [`reports(Option<Vec::<ExperimentReport>>)`](crate::operation::get_experiment_results::GetExperimentResultsOutput::reports): <p>An array of structures that include the reports that you requested.</p>
    ///   - [`timestamps(Option<Vec::<DateTime>>)`](crate::operation::get_experiment_results::GetExperimentResultsOutput::timestamps): <p>The timestamps of each result returned.</p>
    ///   - [`details(Option<String>)`](crate::operation::get_experiment_results::GetExperimentResultsOutput::details): <p>If the experiment doesn't yet have enough events to provide valid results, this field is returned with the message <code>Not enough events to generate results</code>. If there are enough events to provide valid results, this field is not returned.</p>
    /// - On failure, responds with [`SdkError<GetExperimentResultsError>`](crate::operation::get_experiment_results::GetExperimentResultsError)
    pub fn get_experiment_results(&self) -> crate::operation::get_experiment_results::builders::GetExperimentResultsFluentBuilder {
        crate::operation::get_experiment_results::builders::GetExperimentResultsFluentBuilder::new(self.handle.clone())
    }
}
