// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`StartLaunch`](crate::client::fluent_builders::StartLaunch) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`project(impl Into<String>)`](crate::client::fluent_builders::StartLaunch::project) / [`set_project(Option<String>)`](crate::client::fluent_builders::StartLaunch::set_project): <p>The name or ARN of the project that contains the launch to start.</p>
    ///   - [`launch(impl Into<String>)`](crate::client::fluent_builders::StartLaunch::launch) / [`set_launch(Option<String>)`](crate::client::fluent_builders::StartLaunch::set_launch): <p>The name of the launch to start.</p>
    /// - On success, responds with [`StartLaunchOutput`](crate::output::StartLaunchOutput) with field(s):
    ///   - [`launch(Option<Launch>)`](crate::output::StartLaunchOutput::launch): <p>A structure that contains information about the launch that was started.</p>
    /// - On failure, responds with [`SdkError<StartLaunchError>`](crate::error::StartLaunchError)
    pub fn start_launch(&self) -> crate::client::fluent_builders::StartLaunch {
        crate::client::fluent_builders::StartLaunch::new(self.handle.clone())
    }
}
