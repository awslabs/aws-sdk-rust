// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListSegments`](crate::operation::list_segments::builders::ListSegmentsFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::list_segments::builders::ListSegmentsFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`max_results(i32)`](crate::operation::list_segments::builders::ListSegmentsFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::list_segments::builders::ListSegmentsFluentBuilder::set_max_results):<br>required: **false**<br><p>The maximum number of results to include in the response. If you omit this, the default of 50 is used.</p><br>
    ///   - [`next_token(impl Into<String>)`](crate::operation::list_segments::builders::ListSegmentsFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::list_segments::builders::ListSegmentsFluentBuilder::set_next_token):<br>required: **false**<br><p>The token to use when requesting the next set of results. You received this token from a previous <code>ListSegments</code> operation.</p><br>
    /// - On success, responds with [`ListSegmentsOutput`](crate::operation::list_segments::ListSegmentsOutput) with field(s):
    ///   - [`segments(Option<Vec::<Segment>>)`](crate::operation::list_segments::ListSegmentsOutput::segments): <p>An array of structures that contain information about the segments in this Region.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::list_segments::ListSegmentsOutput::next_token): <p>The token to use in a subsequent <code>ListSegments</code> operation to return the next set of results.</p>
    /// - On failure, responds with [`SdkError<ListSegmentsError>`](crate::operation::list_segments::ListSegmentsError)
    pub fn list_segments(&self) -> crate::operation::list_segments::builders::ListSegmentsFluentBuilder {
        crate::operation::list_segments::builders::ListSegmentsFluentBuilder::new(self.handle.clone())
    }
}
