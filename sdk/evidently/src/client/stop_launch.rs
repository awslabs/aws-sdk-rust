// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`StopLaunch`](crate::client::fluent_builders::StopLaunch) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`project(impl Into<String>)`](crate::client::fluent_builders::StopLaunch::project) / [`set_project(Option<String>)`](crate::client::fluent_builders::StopLaunch::set_project): <p>The name or ARN of the project that contains the launch that you want to stop.</p>
    ///   - [`launch(impl Into<String>)`](crate::client::fluent_builders::StopLaunch::launch) / [`set_launch(Option<String>)`](crate::client::fluent_builders::StopLaunch::set_launch): <p>The name of the launch to stop.</p>
    ///   - [`desired_state(LaunchStopDesiredState)`](crate::client::fluent_builders::StopLaunch::desired_state) / [`set_desired_state(Option<LaunchStopDesiredState>)`](crate::client::fluent_builders::StopLaunch::set_desired_state): <p>Specify whether to consider the launch as <code>COMPLETED</code> or <code>CANCELLED</code> after it stops.</p>
    ///   - [`reason(impl Into<String>)`](crate::client::fluent_builders::StopLaunch::reason) / [`set_reason(Option<String>)`](crate::client::fluent_builders::StopLaunch::set_reason): <p>A string that describes why you are stopping the launch.</p>
    /// - On success, responds with [`StopLaunchOutput`](crate::output::StopLaunchOutput) with field(s):
    ///   - [`ended_time(Option<DateTime>)`](crate::output::StopLaunchOutput::ended_time): <p>The date and time that the launch stopped.</p>
    /// - On failure, responds with [`SdkError<StopLaunchError>`](crate::error::StopLaunchError)
    pub fn stop_launch(&self) -> crate::client::fluent_builders::StopLaunch {
        crate::client::fluent_builders::StopLaunch::new(self.handle.clone())
    }
}
