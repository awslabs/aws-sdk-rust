// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`StopExperiment`](crate::client::fluent_builders::StopExperiment) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`project(impl Into<String>)`](crate::client::fluent_builders::StopExperiment::project) / [`set_project(Option<String>)`](crate::client::fluent_builders::StopExperiment::set_project): <p>The name or ARN of the project that contains the experiment to stop.</p>
    ///   - [`experiment(impl Into<String>)`](crate::client::fluent_builders::StopExperiment::experiment) / [`set_experiment(Option<String>)`](crate::client::fluent_builders::StopExperiment::set_experiment): <p>The name of the experiment to stop.</p>
    ///   - [`desired_state(ExperimentStopDesiredState)`](crate::client::fluent_builders::StopExperiment::desired_state) / [`set_desired_state(Option<ExperimentStopDesiredState>)`](crate::client::fluent_builders::StopExperiment::set_desired_state): <p>Specify whether the experiment is to be considered <code>COMPLETED</code> or <code>CANCELLED</code> after it stops.</p>
    ///   - [`reason(impl Into<String>)`](crate::client::fluent_builders::StopExperiment::reason) / [`set_reason(Option<String>)`](crate::client::fluent_builders::StopExperiment::set_reason): <p>A string that describes why you are stopping the experiment.</p>
    /// - On success, responds with [`StopExperimentOutput`](crate::output::StopExperimentOutput) with field(s):
    ///   - [`ended_time(Option<DateTime>)`](crate::output::StopExperimentOutput::ended_time): <p>The date and time that the experiment stopped.</p>
    /// - On failure, responds with [`SdkError<StopExperimentError>`](crate::error::StopExperimentError)
    pub fn stop_experiment(&self) -> crate::client::fluent_builders::StopExperiment {
        crate::client::fluent_builders::StopExperiment::new(self.handle.clone())
    }
}
