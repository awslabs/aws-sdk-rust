// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>If the project stores evaluation events in an Amazon S3 bucket, this structure stores the bucket name and bucket prefix.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct S3DestinationConfig {
    /// <p>The name of the bucket in which Evidently stores evaluation events.</p>
    #[doc(hidden)]
    pub bucket: std::option::Option<std::string::String>,
    /// <p>The bucket prefix in which Evidently stores evaluation events.</p>
    #[doc(hidden)]
    pub prefix: std::option::Option<std::string::String>,
}
impl S3DestinationConfig {
    /// <p>The name of the bucket in which Evidently stores evaluation events.</p>
    pub fn bucket(&self) -> std::option::Option<&str> {
        self.bucket.as_deref()
    }
    /// <p>The bucket prefix in which Evidently stores evaluation events.</p>
    pub fn prefix(&self) -> std::option::Option<&str> {
        self.prefix.as_deref()
    }
}
impl S3DestinationConfig {
    /// Creates a new builder-style object to manufacture [`S3DestinationConfig`](crate::types::S3DestinationConfig).
    pub fn builder() -> crate::types::builders::S3DestinationConfigBuilder {
        crate::types::builders::S3DestinationConfigBuilder::default()
    }
}

/// A builder for [`S3DestinationConfig`](crate::types::S3DestinationConfig).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct S3DestinationConfigBuilder {
    pub(crate) bucket: std::option::Option<std::string::String>,
    pub(crate) prefix: std::option::Option<std::string::String>,
}
impl S3DestinationConfigBuilder {
    /// <p>The name of the bucket in which Evidently stores evaluation events.</p>
    pub fn bucket(mut self, input: impl Into<std::string::String>) -> Self {
        self.bucket = Some(input.into());
        self
    }
    /// <p>The name of the bucket in which Evidently stores evaluation events.</p>
    pub fn set_bucket(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.bucket = input;
        self
    }
    /// <p>The bucket prefix in which Evidently stores evaluation events.</p>
    pub fn prefix(mut self, input: impl Into<std::string::String>) -> Self {
        self.prefix = Some(input.into());
        self
    }
    /// <p>The bucket prefix in which Evidently stores evaluation events.</p>
    pub fn set_prefix(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.prefix = input;
        self
    }
    /// Consumes the builder and constructs a [`S3DestinationConfig`](crate::types::S3DestinationConfig).
    pub fn build(self) -> crate::types::S3DestinationConfig {
        crate::types::S3DestinationConfig {
            bucket: self.bucket,
            prefix: self.prefix,
        }
    }
}
