// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>An array of structures that define the traffic allocation percentages among the feature variations during each step of a launch. This also defines the start time of each step.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ScheduledSplitsLaunchConfig {
    /// <p>An array of structures that define the traffic allocation percentages among the feature variations during each step of the launch. This also defines the start time of each step.</p>
    #[doc(hidden)]
    pub steps: std::option::Option<std::vec::Vec<crate::types::ScheduledSplitConfig>>,
}
impl ScheduledSplitsLaunchConfig {
    /// <p>An array of structures that define the traffic allocation percentages among the feature variations during each step of the launch. This also defines the start time of each step.</p>
    pub fn steps(&self) -> std::option::Option<&[crate::types::ScheduledSplitConfig]> {
        self.steps.as_deref()
    }
}
impl ScheduledSplitsLaunchConfig {
    /// Creates a new builder-style object to manufacture [`ScheduledSplitsLaunchConfig`](crate::types::ScheduledSplitsLaunchConfig).
    pub fn builder() -> crate::types::builders::ScheduledSplitsLaunchConfigBuilder {
        crate::types::builders::ScheduledSplitsLaunchConfigBuilder::default()
    }
}

/// A builder for [`ScheduledSplitsLaunchConfig`](crate::types::ScheduledSplitsLaunchConfig).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ScheduledSplitsLaunchConfigBuilder {
    pub(crate) steps: std::option::Option<std::vec::Vec<crate::types::ScheduledSplitConfig>>,
}
impl ScheduledSplitsLaunchConfigBuilder {
    /// Appends an item to `steps`.
    ///
    /// To override the contents of this collection use [`set_steps`](Self::set_steps).
    ///
    /// <p>An array of structures that define the traffic allocation percentages among the feature variations during each step of the launch. This also defines the start time of each step.</p>
    pub fn steps(mut self, input: crate::types::ScheduledSplitConfig) -> Self {
        let mut v = self.steps.unwrap_or_default();
        v.push(input);
        self.steps = Some(v);
        self
    }
    /// <p>An array of structures that define the traffic allocation percentages among the feature variations during each step of the launch. This also defines the start time of each step.</p>
    pub fn set_steps(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::ScheduledSplitConfig>>,
    ) -> Self {
        self.steps = input;
        self
    }
    /// Consumes the builder and constructs a [`ScheduledSplitsLaunchConfig`](crate::types::ScheduledSplitsLaunchConfig).
    pub fn build(self) -> crate::types::ScheduledSplitsLaunchConfig {
        crate::types::ScheduledSplitsLaunchConfig { steps: self.steps }
    }
}
