// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A structure containing the CloudWatch Logs log group where the project stores evaluation events.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct CloudWatchLogsDestination {
    /// <p>The name of the log group where the project stores evaluation events.</p>
    #[doc(hidden)]
    pub log_group: std::option::Option<std::string::String>,
}
impl CloudWatchLogsDestination {
    /// <p>The name of the log group where the project stores evaluation events.</p>
    pub fn log_group(&self) -> std::option::Option<&str> {
        self.log_group.as_deref()
    }
}
impl CloudWatchLogsDestination {
    /// Creates a new builder-style object to manufacture [`CloudWatchLogsDestination`](crate::types::CloudWatchLogsDestination).
    pub fn builder() -> crate::types::builders::CloudWatchLogsDestinationBuilder {
        crate::types::builders::CloudWatchLogsDestinationBuilder::default()
    }
}

/// A builder for [`CloudWatchLogsDestination`](crate::types::CloudWatchLogsDestination).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct CloudWatchLogsDestinationBuilder {
    pub(crate) log_group: std::option::Option<std::string::String>,
}
impl CloudWatchLogsDestinationBuilder {
    /// <p>The name of the log group where the project stores evaluation events.</p>
    pub fn log_group(mut self, input: impl Into<std::string::String>) -> Self {
        self.log_group = Some(input.into());
        self
    }
    /// <p>The name of the log group where the project stores evaluation events.</p>
    pub fn set_log_group(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.log_group = input;
        self
    }
    /// Consumes the builder and constructs a [`CloudWatchLogsDestination`](crate::types::CloudWatchLogsDestination).
    pub fn build(self) -> crate::types::CloudWatchLogsDestination {
        crate::types::CloudWatchLogsDestination {
            log_group: self.log_group,
        }
    }
}
