// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>This structure contains information about the start and end times of the launch.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct LaunchExecution {
    /// <p>The date and time that the launch started.</p>
    #[doc(hidden)]
    pub started_time: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>The date and time that the launch ended.</p>
    #[doc(hidden)]
    pub ended_time: std::option::Option<aws_smithy_types::DateTime>,
}
impl LaunchExecution {
    /// <p>The date and time that the launch started.</p>
    pub fn started_time(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.started_time.as_ref()
    }
    /// <p>The date and time that the launch ended.</p>
    pub fn ended_time(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.ended_time.as_ref()
    }
}
impl LaunchExecution {
    /// Creates a new builder-style object to manufacture [`LaunchExecution`](crate::types::LaunchExecution).
    pub fn builder() -> crate::types::builders::LaunchExecutionBuilder {
        crate::types::builders::LaunchExecutionBuilder::default()
    }
}

/// A builder for [`LaunchExecution`](crate::types::LaunchExecution).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct LaunchExecutionBuilder {
    pub(crate) started_time: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) ended_time: std::option::Option<aws_smithy_types::DateTime>,
}
impl LaunchExecutionBuilder {
    /// <p>The date and time that the launch started.</p>
    pub fn started_time(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.started_time = Some(input);
        self
    }
    /// <p>The date and time that the launch started.</p>
    pub fn set_started_time(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.started_time = input;
        self
    }
    /// <p>The date and time that the launch ended.</p>
    pub fn ended_time(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.ended_time = Some(input);
        self
    }
    /// <p>The date and time that the launch ended.</p>
    pub fn set_ended_time(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.ended_time = input;
        self
    }
    /// Consumes the builder and constructs a [`LaunchExecution`](crate::types::LaunchExecution).
    pub fn build(self) -> crate::types::LaunchExecution {
        crate::types::LaunchExecution {
            started_time: self.started_time,
            ended_time: self.ended_time,
        }
    }
}
