// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DisassociateResolverRule`](crate::client::fluent_builders::DisassociateResolverRule) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`vpc_id(impl Into<String>)`](crate::client::fluent_builders::DisassociateResolverRule::vpc_id) / [`set_vpc_id(Option<String>)`](crate::client::fluent_builders::DisassociateResolverRule::set_vpc_id): <p>The ID of the VPC that you want to disassociate the Resolver rule from.</p>
    ///   - [`resolver_rule_id(impl Into<String>)`](crate::client::fluent_builders::DisassociateResolverRule::resolver_rule_id) / [`set_resolver_rule_id(Option<String>)`](crate::client::fluent_builders::DisassociateResolverRule::set_resolver_rule_id): <p>The ID of the Resolver rule that you want to disassociate from the specified VPC.</p>
    /// - On success, responds with [`DisassociateResolverRuleOutput`](crate::output::DisassociateResolverRuleOutput) with field(s):
    ///   - [`resolver_rule_association(Option<ResolverRuleAssociation>)`](crate::output::DisassociateResolverRuleOutput::resolver_rule_association): <p>Information about the <code>DisassociateResolverRule</code> request, including the status of the request.</p>
    /// - On failure, responds with [`SdkError<DisassociateResolverRuleError>`](crate::error::DisassociateResolverRuleError)
    pub fn disassociate_resolver_rule(
        &self,
    ) -> crate::client::fluent_builders::DisassociateResolverRule {
        crate::client::fluent_builders::DisassociateResolverRule::new(self.handle.clone())
    }
}
