// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateResolverRule`](crate::client::fluent_builders::UpdateResolverRule) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`resolver_rule_id(impl Into<String>)`](crate::client::fluent_builders::UpdateResolverRule::resolver_rule_id) / [`set_resolver_rule_id(Option<String>)`](crate::client::fluent_builders::UpdateResolverRule::set_resolver_rule_id): <p>The ID of the Resolver rule that you want to update.</p>
    ///   - [`config(ResolverRuleConfig)`](crate::client::fluent_builders::UpdateResolverRule::config) / [`set_config(Option<ResolverRuleConfig>)`](crate::client::fluent_builders::UpdateResolverRule::set_config): <p>The new settings for the Resolver rule.</p>
    /// - On success, responds with [`UpdateResolverRuleOutput`](crate::output::UpdateResolverRuleOutput) with field(s):
    ///   - [`resolver_rule(Option<ResolverRule>)`](crate::output::UpdateResolverRuleOutput::resolver_rule): <p>The response to an <code>UpdateResolverRule</code> request.</p>
    /// - On failure, responds with [`SdkError<UpdateResolverRuleError>`](crate::error::UpdateResolverRuleError)
    pub fn update_resolver_rule(&self) -> crate::client::fluent_builders::UpdateResolverRule {
        crate::client::fluent_builders::UpdateResolverRule::new(self.handle.clone())
    }
}
