// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListFirewallRuleGroupAssociations`](crate::client::fluent_builders::ListFirewallRuleGroupAssociations) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListFirewallRuleGroupAssociations::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`firewall_rule_group_id(impl Into<String>)`](crate::client::fluent_builders::ListFirewallRuleGroupAssociations::firewall_rule_group_id) / [`set_firewall_rule_group_id(Option<String>)`](crate::client::fluent_builders::ListFirewallRuleGroupAssociations::set_firewall_rule_group_id): <p>The unique identifier of the firewall rule group that you want to retrieve the associations for. Leave this blank to retrieve associations for any rule group. </p>
    ///   - [`vpc_id(impl Into<String>)`](crate::client::fluent_builders::ListFirewallRuleGroupAssociations::vpc_id) / [`set_vpc_id(Option<String>)`](crate::client::fluent_builders::ListFirewallRuleGroupAssociations::set_vpc_id): <p>The unique identifier of the VPC that you want to retrieve the associations for. Leave this blank to retrieve associations for any VPC. </p>
    ///   - [`priority(i32)`](crate::client::fluent_builders::ListFirewallRuleGroupAssociations::priority) / [`set_priority(Option<i32>)`](crate::client::fluent_builders::ListFirewallRuleGroupAssociations::set_priority): <p>The setting that determines the processing order of the rule group among the rule groups that are associated with a single VPC. DNS Firewall filters VPC traffic starting from the rule group with the lowest numeric priority setting. </p>
    ///   - [`status(FirewallRuleGroupAssociationStatus)`](crate::client::fluent_builders::ListFirewallRuleGroupAssociations::status) / [`set_status(Option<FirewallRuleGroupAssociationStatus>)`](crate::client::fluent_builders::ListFirewallRuleGroupAssociations::set_status): <p>The association <code>Status</code> setting that you want DNS Firewall to filter on for the list. If you don't specify this, then DNS Firewall returns all associations, regardless of status.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListFirewallRuleGroupAssociations::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListFirewallRuleGroupAssociations::set_max_results): <p>The maximum number of objects that you want Resolver to return for this request. If more objects are available, in the response, Resolver provides a <code>NextToken</code> value that you can use in a subsequent call to get the next batch of objects.</p>  <p>If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 objects. </p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListFirewallRuleGroupAssociations::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListFirewallRuleGroupAssociations::set_next_token): <p>For the first call to this list request, omit this value.</p>  <p>When you request a list of objects, Resolver returns at most the number of objects specified in <code>MaxResults</code>. If more objects are available for retrieval, Resolver returns a <code>NextToken</code> value in the response. To retrieve the next batch of objects, use the token that was returned for the prior request in your next request.</p>
    /// - On success, responds with [`ListFirewallRuleGroupAssociationsOutput`](crate::output::ListFirewallRuleGroupAssociationsOutput) with field(s):
    ///   - [`next_token(Option<String>)`](crate::output::ListFirewallRuleGroupAssociationsOutput::next_token): <p>If objects are still available for retrieval, Resolver returns this token in the response. To retrieve the next batch of objects, provide this token in your next request.</p>
    ///   - [`firewall_rule_group_associations(Option<Vec<FirewallRuleGroupAssociation>>)`](crate::output::ListFirewallRuleGroupAssociationsOutput::firewall_rule_group_associations): <p>A list of your firewall rule group associations.</p>  <p>This might be a partial list of the associations that you have defined. For information, see <code>MaxResults</code>. </p>
    /// - On failure, responds with [`SdkError<ListFirewallRuleGroupAssociationsError>`](crate::error::ListFirewallRuleGroupAssociationsError)
    pub fn list_firewall_rule_group_associations(
        &self,
    ) -> crate::client::fluent_builders::ListFirewallRuleGroupAssociations {
        crate::client::fluent_builders::ListFirewallRuleGroupAssociations::new(self.handle.clone())
    }
}
