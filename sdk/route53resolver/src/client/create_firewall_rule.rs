// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateFirewallRule`](crate::operation::create_firewall_rule::builders::CreateFirewallRuleFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`creator_request_id(impl Into<String>)`](crate::operation::create_firewall_rule::builders::CreateFirewallRuleFluentBuilder::creator_request_id) / [`set_creator_request_id(Option<String>)`](crate::operation::create_firewall_rule::builders::CreateFirewallRuleFluentBuilder::set_creator_request_id): <p>A unique string that identifies the request and that allows you to retry failed requests without the risk of running the operation twice. <code>CreatorRequestId</code> can be any unique string, for example, a date/time stamp. </p>
    ///   - [`firewall_rule_group_id(impl Into<String>)`](crate::operation::create_firewall_rule::builders::CreateFirewallRuleFluentBuilder::firewall_rule_group_id) / [`set_firewall_rule_group_id(Option<String>)`](crate::operation::create_firewall_rule::builders::CreateFirewallRuleFluentBuilder::set_firewall_rule_group_id): <p>The unique identifier of the firewall rule group where you want to create the rule. </p>
    ///   - [`firewall_domain_list_id(impl Into<String>)`](crate::operation::create_firewall_rule::builders::CreateFirewallRuleFluentBuilder::firewall_domain_list_id) / [`set_firewall_domain_list_id(Option<String>)`](crate::operation::create_firewall_rule::builders::CreateFirewallRuleFluentBuilder::set_firewall_domain_list_id): <p>The ID of the domain list that you want to use in the rule. </p>
    ///   - [`priority(i32)`](crate::operation::create_firewall_rule::builders::CreateFirewallRuleFluentBuilder::priority) / [`set_priority(Option<i32>)`](crate::operation::create_firewall_rule::builders::CreateFirewallRuleFluentBuilder::set_priority): <p>The setting that determines the processing order of the rule in the rule group. DNS Firewall processes the rules in a rule group by order of priority, starting from the lowest setting.</p>  <p>You must specify a unique priority for each rule in a rule group. To make it easier to insert rules later, leave space between the numbers, for example, use 100, 200, and so on. You can change the priority setting for the rules in a rule group at any time.</p>
    ///   - [`action(Action)`](crate::operation::create_firewall_rule::builders::CreateFirewallRuleFluentBuilder::action) / [`set_action(Option<Action>)`](crate::operation::create_firewall_rule::builders::CreateFirewallRuleFluentBuilder::set_action): <p>The action that DNS Firewall should take on a DNS query when it matches one of the domains in the rule's domain list:</p>  <ul>   <li> <p> <code>ALLOW</code> - Permit the request to go through.</p> </li>   <li> <p> <code>ALERT</code> - Permit the request and send metrics and logs to Cloud Watch.</p> </li>   <li> <p> <code>BLOCK</code> - Disallow the request. This option requires additional details in the rule's <code>BlockResponse</code>. </p> </li>  </ul>
    ///   - [`block_response(BlockResponse)`](crate::operation::create_firewall_rule::builders::CreateFirewallRuleFluentBuilder::block_response) / [`set_block_response(Option<BlockResponse>)`](crate::operation::create_firewall_rule::builders::CreateFirewallRuleFluentBuilder::set_block_response): <p>The way that you want DNS Firewall to block the request, used with the rule action setting <code>BLOCK</code>. </p>  <ul>   <li> <p> <code>NODATA</code> - Respond indicating that the query was successful, but no response is available for it.</p> </li>   <li> <p> <code>NXDOMAIN</code> - Respond indicating that the domain name that's in the query doesn't exist.</p> </li>   <li> <p> <code>OVERRIDE</code> - Provide a custom override in the response. This option requires custom handling details in the rule's <code>BlockOverride*</code> settings. </p> </li>  </ul>  <p>This setting is required if the rule action setting is <code>BLOCK</code>.</p>
    ///   - [`block_override_domain(impl Into<String>)`](crate::operation::create_firewall_rule::builders::CreateFirewallRuleFluentBuilder::block_override_domain) / [`set_block_override_domain(Option<String>)`](crate::operation::create_firewall_rule::builders::CreateFirewallRuleFluentBuilder::set_block_override_domain): <p>The custom DNS record to send back in response to the query. Used for the rule action <code>BLOCK</code> with a <code>BlockResponse</code> setting of <code>OVERRIDE</code>.</p>  <p>This setting is required if the <code>BlockResponse</code> setting is <code>OVERRIDE</code>.</p>
    ///   - [`block_override_dns_type(BlockOverrideDnsType)`](crate::operation::create_firewall_rule::builders::CreateFirewallRuleFluentBuilder::block_override_dns_type) / [`set_block_override_dns_type(Option<BlockOverrideDnsType>)`](crate::operation::create_firewall_rule::builders::CreateFirewallRuleFluentBuilder::set_block_override_dns_type): <p>The DNS record's type. This determines the format of the record value that you provided in <code>BlockOverrideDomain</code>. Used for the rule action <code>BLOCK</code> with a <code>BlockResponse</code> setting of <code>OVERRIDE</code>.</p>  <p>This setting is required if the <code>BlockResponse</code> setting is <code>OVERRIDE</code>.</p>
    ///   - [`block_override_ttl(i32)`](crate::operation::create_firewall_rule::builders::CreateFirewallRuleFluentBuilder::block_override_ttl) / [`set_block_override_ttl(Option<i32>)`](crate::operation::create_firewall_rule::builders::CreateFirewallRuleFluentBuilder::set_block_override_ttl): <p>The recommended amount of time, in seconds, for the DNS resolver or web browser to cache the provided override record. Used for the rule action <code>BLOCK</code> with a <code>BlockResponse</code> setting of <code>OVERRIDE</code>.</p>  <p>This setting is required if the <code>BlockResponse</code> setting is <code>OVERRIDE</code>.</p>
    ///   - [`name(impl Into<String>)`](crate::operation::create_firewall_rule::builders::CreateFirewallRuleFluentBuilder::name) / [`set_name(Option<String>)`](crate::operation::create_firewall_rule::builders::CreateFirewallRuleFluentBuilder::set_name): <p>A name that lets you identify the rule in the rule group.</p>
    /// - On success, responds with [`CreateFirewallRuleOutput`](crate::operation::create_firewall_rule::CreateFirewallRuleOutput) with field(s):
    ///   - [`firewall_rule(Option<FirewallRule>)`](crate::operation::create_firewall_rule::CreateFirewallRuleOutput::firewall_rule): <p>The firewall rule that you just created. </p>
    /// - On failure, responds with [`SdkError<CreateFirewallRuleError>`](crate::operation::create_firewall_rule::CreateFirewallRuleError)
    pub fn create_firewall_rule(
        &self,
    ) -> crate::operation::create_firewall_rule::builders::CreateFirewallRuleFluentBuilder {
        crate::operation::create_firewall_rule::builders::CreateFirewallRuleFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
