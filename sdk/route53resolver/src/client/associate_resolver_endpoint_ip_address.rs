// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`AssociateResolverEndpointIpAddress`](crate::operation::associate_resolver_endpoint_ip_address::builders::AssociateResolverEndpointIpAddressFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`resolver_endpoint_id(impl Into<String>)`](crate::operation::associate_resolver_endpoint_ip_address::builders::AssociateResolverEndpointIpAddressFluentBuilder::resolver_endpoint_id) / [`set_resolver_endpoint_id(Option<String>)`](crate::operation::associate_resolver_endpoint_ip_address::builders::AssociateResolverEndpointIpAddressFluentBuilder::set_resolver_endpoint_id): <p>The ID of the Resolver endpoint that you want to associate IP addresses with.</p>
    ///   - [`ip_address(IpAddressUpdate)`](crate::operation::associate_resolver_endpoint_ip_address::builders::AssociateResolverEndpointIpAddressFluentBuilder::ip_address) / [`set_ip_address(Option<IpAddressUpdate>)`](crate::operation::associate_resolver_endpoint_ip_address::builders::AssociateResolverEndpointIpAddressFluentBuilder::set_ip_address): <p>Either the IPv4 address that you want to add to a Resolver endpoint or a subnet ID. If you specify a subnet ID, Resolver chooses an IP address for you from the available IPs in the specified subnet.</p>
    /// - On success, responds with [`AssociateResolverEndpointIpAddressOutput`](crate::operation::associate_resolver_endpoint_ip_address::AssociateResolverEndpointIpAddressOutput) with field(s):
    ///   - [`resolver_endpoint(Option<ResolverEndpoint>)`](crate::operation::associate_resolver_endpoint_ip_address::AssociateResolverEndpointIpAddressOutput::resolver_endpoint): <p>The response to an <code>AssociateResolverEndpointIpAddress</code> request.</p>
    /// - On failure, responds with [`SdkError<AssociateResolverEndpointIpAddressError>`](crate::operation::associate_resolver_endpoint_ip_address::AssociateResolverEndpointIpAddressError)
    pub fn associate_resolver_endpoint_ip_address(&self) -> crate::operation::associate_resolver_endpoint_ip_address::builders::AssociateResolverEndpointIpAddressFluentBuilder{
        crate::operation::associate_resolver_endpoint_ip_address::builders::AssociateResolverEndpointIpAddressFluentBuilder::new(self.handle.clone())
    }
}
