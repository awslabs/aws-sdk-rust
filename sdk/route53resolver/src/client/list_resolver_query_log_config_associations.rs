// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListResolverQueryLogConfigAssociations`](crate::client::fluent_builders::ListResolverQueryLogConfigAssociations) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListResolverQueryLogConfigAssociations::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListResolverQueryLogConfigAssociations::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListResolverQueryLogConfigAssociations::set_max_results): <p>The maximum number of query logging associations that you want to return in the response to a <code>ListResolverQueryLogConfigAssociations</code> request. If you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 query logging associations. </p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListResolverQueryLogConfigAssociations::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListResolverQueryLogConfigAssociations::set_next_token): <p>For the first <code>ListResolverQueryLogConfigAssociations</code> request, omit this value.</p>  <p>If there are more than <code>MaxResults</code> query logging associations that match the values that you specify for <code>Filters</code>, you can submit another <code>ListResolverQueryLogConfigAssociations</code> request to get the next group of associations. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>
    ///   - [`filters(Vec<Filter>)`](crate::client::fluent_builders::ListResolverQueryLogConfigAssociations::filters) / [`set_filters(Option<Vec<Filter>>)`](crate::client::fluent_builders::ListResolverQueryLogConfigAssociations::set_filters): <p>An optional specification to return a subset of query logging associations.</p> <note>   <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigAssociations</code> request and specify the <code>NextToken</code> parameter, you must use the same values for <code>Filters</code>, if any, as in the previous request.</p>  </note>
    ///   - [`sort_by(impl Into<String>)`](crate::client::fluent_builders::ListResolverQueryLogConfigAssociations::sort_by) / [`set_sort_by(Option<String>)`](crate::client::fluent_builders::ListResolverQueryLogConfigAssociations::set_sort_by): <p>The element that you want Resolver to sort query logging associations by. </p> <note>   <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigAssociations</code> request and specify the <code>NextToken</code> parameter, you must use the same value for <code>SortBy</code>, if any, as in the previous request.</p>  </note>  <p>Valid values include the following elements:</p>  <ul>   <li> <p> <code>CreationTime</code>: The ID of the query logging association.</p> </li>   <li> <p> <code>Error</code>: If the value of <code>Status</code> is <code>FAILED</code>, the value of <code>Error</code> indicates the cause: </p>    <ul>     <li> <p> <code>DESTINATION_NOT_FOUND</code>: The specified destination (for example, an Amazon S3 bucket) was deleted.</p> </li>     <li> <p> <code>ACCESS_DENIED</code>: Permissions don't allow sending logs to the destination.</p> </li>    </ul> <p>If <code>Status</code> is a value other than <code>FAILED</code>, <code>ERROR</code> is null.</p> </li>   <li> <p> <code>Id</code>: The ID of the query logging association</p> </li>   <li> <p> <code>ResolverQueryLogConfigId</code>: The ID of the query logging configuration</p> </li>   <li> <p> <code>ResourceId</code>: The ID of the VPC that is associated with the query logging configuration</p> </li>   <li> <p> <code>Status</code>: The current status of the configuration. Valid values include the following:</p>    <ul>     <li> <p> <code>CREATING</code>: Resolver is creating an association between an Amazon VPC and a query logging configuration.</p> </li>     <li> <p> <code>CREATED</code>: The association between an Amazon VPC and a query logging configuration was successfully created. Resolver is logging queries that originate in the specified VPC.</p> </li>     <li> <p> <code>DELETING</code>: Resolver is deleting this query logging association.</p> </li>     <li> <p> <code>FAILED</code>: Resolver either couldn't create or couldn't delete the query logging association. Here are two common causes:</p>      <ul>       <li> <p>The specified destination (for example, an Amazon S3 bucket) was deleted.</p> </li>       <li> <p>Permissions don't allow sending logs to the destination.</p> </li>      </ul> </li>    </ul> </li>  </ul>
    ///   - [`sort_order(SortOrder)`](crate::client::fluent_builders::ListResolverQueryLogConfigAssociations::sort_order) / [`set_sort_order(Option<SortOrder>)`](crate::client::fluent_builders::ListResolverQueryLogConfigAssociations::set_sort_order): <p>If you specified a value for <code>SortBy</code>, the order that you want query logging associations to be listed in, <code>ASCENDING</code> or <code>DESCENDING</code>.</p> <note>   <p>If you submit a second or subsequent <code>ListResolverQueryLogConfigAssociations</code> request and specify the <code>NextToken</code> parameter, you must use the same value for <code>SortOrder</code>, if any, as in the previous request.</p>  </note>
    /// - On success, responds with [`ListResolverQueryLogConfigAssociationsOutput`](crate::output::ListResolverQueryLogConfigAssociationsOutput) with field(s):
    ///   - [`next_token(Option<String>)`](crate::output::ListResolverQueryLogConfigAssociationsOutput::next_token): <p>If there are more than <code>MaxResults</code> query logging associations, you can submit another <code>ListResolverQueryLogConfigAssociations</code> request to get the next group of associations. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>
    ///   - [`total_count(i32)`](crate::output::ListResolverQueryLogConfigAssociationsOutput::total_count): <p>The total number of query logging associations that were created by the current account in the specified Region. This count can differ from the number of associations that are returned in a <code>ListResolverQueryLogConfigAssociations</code> response, depending on the values that you specify in the request.</p>
    ///   - [`total_filtered_count(i32)`](crate::output::ListResolverQueryLogConfigAssociationsOutput::total_filtered_count): <p>The total number of query logging associations that were created by the current account in the specified Region and that match the filters that were specified in the <code>ListResolverQueryLogConfigAssociations</code> request. For the total number of associations that were created by the current account in the specified Region, see <code>TotalCount</code>.</p>
    ///   - [`resolver_query_log_config_associations(Option<Vec<ResolverQueryLogConfigAssociation>>)`](crate::output::ListResolverQueryLogConfigAssociationsOutput::resolver_query_log_config_associations): <p>A list that contains one <code>ResolverQueryLogConfigAssociations</code> element for each query logging association that matches the values that you specified for <code>Filter</code>.</p>
    /// - On failure, responds with [`SdkError<ListResolverQueryLogConfigAssociationsError>`](crate::error::ListResolverQueryLogConfigAssociationsError)
    pub fn list_resolver_query_log_config_associations(
        &self,
    ) -> crate::client::fluent_builders::ListResolverQueryLogConfigAssociations {
        crate::client::fluent_builders::ListResolverQueryLogConfigAssociations::new(
            self.handle.clone(),
        )
    }
}
