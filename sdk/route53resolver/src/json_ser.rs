// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn serialize_structure_crate_input_associate_firewall_rule_group_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::AssociateFirewallRuleGroupInput,
) {
    if let Some(var_1) = &input.creator_request_id {
        object.key("CreatorRequestId").string(var_1);
    }
    if let Some(var_2) = &input.firewall_rule_group_id {
        object.key("FirewallRuleGroupId").string(var_2);
    }
    if let Some(var_3) = &input.vpc_id {
        object.key("VpcId").string(var_3);
    }
    if let Some(var_4) = &input.priority {
        object.key("Priority").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_4).into()),
        );
    }
    if let Some(var_5) = &input.name {
        object.key("Name").string(var_5);
    }
    if let Some(var_6) = &input.mutation_protection {
        object.key("MutationProtection").string(var_6.as_str());
    }
    if let Some(var_7) = &input.tags {
        let mut array_8 = object.key("Tags").start_array();
        for item_9 in var_7 {
            {
                let mut object_10 = array_8.value().start_object();
                crate::json_ser::serialize_structure_crate_model_tag(&mut object_10, item_9);
                object_10.finish();
            }
        }
        array_8.finish();
    }
}

pub fn serialize_structure_crate_input_associate_resolver_endpoint_ip_address_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::AssociateResolverEndpointIpAddressInput,
) {
    if let Some(var_11) = &input.resolver_endpoint_id {
        object.key("ResolverEndpointId").string(var_11);
    }
    if let Some(var_12) = &input.ip_address {
        let mut object_13 = object.key("IpAddress").start_object();
        crate::json_ser::serialize_structure_crate_model_ip_address_update(&mut object_13, var_12);
        object_13.finish();
    }
}

pub fn serialize_structure_crate_input_associate_resolver_query_log_config_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::AssociateResolverQueryLogConfigInput,
) {
    if let Some(var_14) = &input.resolver_query_log_config_id {
        object.key("ResolverQueryLogConfigId").string(var_14);
    }
    if let Some(var_15) = &input.resource_id {
        object.key("ResourceId").string(var_15);
    }
}

pub fn serialize_structure_crate_input_associate_resolver_rule_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::AssociateResolverRuleInput,
) {
    if let Some(var_16) = &input.resolver_rule_id {
        object.key("ResolverRuleId").string(var_16);
    }
    if let Some(var_17) = &input.name {
        object.key("Name").string(var_17);
    }
    if let Some(var_18) = &input.vpc_id {
        object.key("VPCId").string(var_18);
    }
}

pub fn serialize_structure_crate_input_create_firewall_domain_list_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateFirewallDomainListInput,
) {
    if let Some(var_19) = &input.creator_request_id {
        object.key("CreatorRequestId").string(var_19);
    }
    if let Some(var_20) = &input.name {
        object.key("Name").string(var_20);
    }
    if let Some(var_21) = &input.tags {
        let mut array_22 = object.key("Tags").start_array();
        for item_23 in var_21 {
            {
                let mut object_24 = array_22.value().start_object();
                crate::json_ser::serialize_structure_crate_model_tag(&mut object_24, item_23);
                object_24.finish();
            }
        }
        array_22.finish();
    }
}

pub fn serialize_structure_crate_input_create_firewall_rule_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateFirewallRuleInput,
) {
    if let Some(var_25) = &input.creator_request_id {
        object.key("CreatorRequestId").string(var_25);
    }
    if let Some(var_26) = &input.firewall_rule_group_id {
        object.key("FirewallRuleGroupId").string(var_26);
    }
    if let Some(var_27) = &input.firewall_domain_list_id {
        object.key("FirewallDomainListId").string(var_27);
    }
    if let Some(var_28) = &input.priority {
        object.key("Priority").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_28).into()),
        );
    }
    if let Some(var_29) = &input.action {
        object.key("Action").string(var_29.as_str());
    }
    if let Some(var_30) = &input.block_response {
        object.key("BlockResponse").string(var_30.as_str());
    }
    if let Some(var_31) = &input.block_override_domain {
        object.key("BlockOverrideDomain").string(var_31);
    }
    if let Some(var_32) = &input.block_override_dns_type {
        object.key("BlockOverrideDnsType").string(var_32.as_str());
    }
    if let Some(var_33) = &input.block_override_ttl {
        object.key("BlockOverrideTtl").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_33).into()),
        );
    }
    if let Some(var_34) = &input.name {
        object.key("Name").string(var_34);
    }
}

pub fn serialize_structure_crate_input_create_firewall_rule_group_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateFirewallRuleGroupInput,
) {
    if let Some(var_35) = &input.creator_request_id {
        object.key("CreatorRequestId").string(var_35);
    }
    if let Some(var_36) = &input.name {
        object.key("Name").string(var_36);
    }
    if let Some(var_37) = &input.tags {
        let mut array_38 = object.key("Tags").start_array();
        for item_39 in var_37 {
            {
                let mut object_40 = array_38.value().start_object();
                crate::json_ser::serialize_structure_crate_model_tag(&mut object_40, item_39);
                object_40.finish();
            }
        }
        array_38.finish();
    }
}

pub fn serialize_structure_crate_input_create_resolver_endpoint_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateResolverEndpointInput,
) {
    if let Some(var_41) = &input.creator_request_id {
        object.key("CreatorRequestId").string(var_41);
    }
    if let Some(var_42) = &input.name {
        object.key("Name").string(var_42);
    }
    if let Some(var_43) = &input.security_group_ids {
        let mut array_44 = object.key("SecurityGroupIds").start_array();
        for item_45 in var_43 {
            {
                array_44.value().string(item_45);
            }
        }
        array_44.finish();
    }
    if let Some(var_46) = &input.direction {
        object.key("Direction").string(var_46.as_str());
    }
    if let Some(var_47) = &input.ip_addresses {
        let mut array_48 = object.key("IpAddresses").start_array();
        for item_49 in var_47 {
            {
                let mut object_50 = array_48.value().start_object();
                crate::json_ser::serialize_structure_crate_model_ip_address_request(
                    &mut object_50,
                    item_49,
                );
                object_50.finish();
            }
        }
        array_48.finish();
    }
    if let Some(var_51) = &input.tags {
        let mut array_52 = object.key("Tags").start_array();
        for item_53 in var_51 {
            {
                let mut object_54 = array_52.value().start_object();
                crate::json_ser::serialize_structure_crate_model_tag(&mut object_54, item_53);
                object_54.finish();
            }
        }
        array_52.finish();
    }
}

pub fn serialize_structure_crate_input_create_resolver_query_log_config_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateResolverQueryLogConfigInput,
) {
    if let Some(var_55) = &input.name {
        object.key("Name").string(var_55);
    }
    if let Some(var_56) = &input.destination_arn {
        object.key("DestinationArn").string(var_56);
    }
    if let Some(var_57) = &input.creator_request_id {
        object.key("CreatorRequestId").string(var_57);
    }
    if let Some(var_58) = &input.tags {
        let mut array_59 = object.key("Tags").start_array();
        for item_60 in var_58 {
            {
                let mut object_61 = array_59.value().start_object();
                crate::json_ser::serialize_structure_crate_model_tag(&mut object_61, item_60);
                object_61.finish();
            }
        }
        array_59.finish();
    }
}

pub fn serialize_structure_crate_input_create_resolver_rule_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::CreateResolverRuleInput,
) {
    if let Some(var_62) = &input.creator_request_id {
        object.key("CreatorRequestId").string(var_62);
    }
    if let Some(var_63) = &input.name {
        object.key("Name").string(var_63);
    }
    if let Some(var_64) = &input.rule_type {
        object.key("RuleType").string(var_64.as_str());
    }
    if let Some(var_65) = &input.domain_name {
        object.key("DomainName").string(var_65);
    }
    if let Some(var_66) = &input.target_ips {
        let mut array_67 = object.key("TargetIps").start_array();
        for item_68 in var_66 {
            {
                let mut object_69 = array_67.value().start_object();
                crate::json_ser::serialize_structure_crate_model_target_address(
                    &mut object_69,
                    item_68,
                );
                object_69.finish();
            }
        }
        array_67.finish();
    }
    if let Some(var_70) = &input.resolver_endpoint_id {
        object.key("ResolverEndpointId").string(var_70);
    }
    if let Some(var_71) = &input.tags {
        let mut array_72 = object.key("Tags").start_array();
        for item_73 in var_71 {
            {
                let mut object_74 = array_72.value().start_object();
                crate::json_ser::serialize_structure_crate_model_tag(&mut object_74, item_73);
                object_74.finish();
            }
        }
        array_72.finish();
    }
}

pub fn serialize_structure_crate_input_delete_firewall_domain_list_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DeleteFirewallDomainListInput,
) {
    if let Some(var_75) = &input.firewall_domain_list_id {
        object.key("FirewallDomainListId").string(var_75);
    }
}

pub fn serialize_structure_crate_input_delete_firewall_rule_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DeleteFirewallRuleInput,
) {
    if let Some(var_76) = &input.firewall_rule_group_id {
        object.key("FirewallRuleGroupId").string(var_76);
    }
    if let Some(var_77) = &input.firewall_domain_list_id {
        object.key("FirewallDomainListId").string(var_77);
    }
}

pub fn serialize_structure_crate_input_delete_firewall_rule_group_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DeleteFirewallRuleGroupInput,
) {
    if let Some(var_78) = &input.firewall_rule_group_id {
        object.key("FirewallRuleGroupId").string(var_78);
    }
}

pub fn serialize_structure_crate_input_delete_resolver_endpoint_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DeleteResolverEndpointInput,
) {
    if let Some(var_79) = &input.resolver_endpoint_id {
        object.key("ResolverEndpointId").string(var_79);
    }
}

pub fn serialize_structure_crate_input_delete_resolver_query_log_config_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DeleteResolverQueryLogConfigInput,
) {
    if let Some(var_80) = &input.resolver_query_log_config_id {
        object.key("ResolverQueryLogConfigId").string(var_80);
    }
}

pub fn serialize_structure_crate_input_delete_resolver_rule_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DeleteResolverRuleInput,
) {
    if let Some(var_81) = &input.resolver_rule_id {
        object.key("ResolverRuleId").string(var_81);
    }
}

pub fn serialize_structure_crate_input_disassociate_firewall_rule_group_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DisassociateFirewallRuleGroupInput,
) {
    if let Some(var_82) = &input.firewall_rule_group_association_id {
        object.key("FirewallRuleGroupAssociationId").string(var_82);
    }
}

pub fn serialize_structure_crate_input_disassociate_resolver_endpoint_ip_address_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DisassociateResolverEndpointIpAddressInput,
) {
    if let Some(var_83) = &input.resolver_endpoint_id {
        object.key("ResolverEndpointId").string(var_83);
    }
    if let Some(var_84) = &input.ip_address {
        let mut object_85 = object.key("IpAddress").start_object();
        crate::json_ser::serialize_structure_crate_model_ip_address_update(&mut object_85, var_84);
        object_85.finish();
    }
}

pub fn serialize_structure_crate_input_disassociate_resolver_query_log_config_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DisassociateResolverQueryLogConfigInput,
) {
    if let Some(var_86) = &input.resolver_query_log_config_id {
        object.key("ResolverQueryLogConfigId").string(var_86);
    }
    if let Some(var_87) = &input.resource_id {
        object.key("ResourceId").string(var_87);
    }
}

pub fn serialize_structure_crate_input_disassociate_resolver_rule_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::DisassociateResolverRuleInput,
) {
    if let Some(var_88) = &input.vpc_id {
        object.key("VPCId").string(var_88);
    }
    if let Some(var_89) = &input.resolver_rule_id {
        object.key("ResolverRuleId").string(var_89);
    }
}

pub fn serialize_structure_crate_input_get_firewall_config_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::GetFirewallConfigInput,
) {
    if let Some(var_90) = &input.resource_id {
        object.key("ResourceId").string(var_90);
    }
}

pub fn serialize_structure_crate_input_get_firewall_domain_list_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::GetFirewallDomainListInput,
) {
    if let Some(var_91) = &input.firewall_domain_list_id {
        object.key("FirewallDomainListId").string(var_91);
    }
}

pub fn serialize_structure_crate_input_get_firewall_rule_group_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::GetFirewallRuleGroupInput,
) {
    if let Some(var_92) = &input.firewall_rule_group_id {
        object.key("FirewallRuleGroupId").string(var_92);
    }
}

pub fn serialize_structure_crate_input_get_firewall_rule_group_association_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::GetFirewallRuleGroupAssociationInput,
) {
    if let Some(var_93) = &input.firewall_rule_group_association_id {
        object.key("FirewallRuleGroupAssociationId").string(var_93);
    }
}

pub fn serialize_structure_crate_input_get_firewall_rule_group_policy_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::GetFirewallRuleGroupPolicyInput,
) {
    if let Some(var_94) = &input.arn {
        object.key("Arn").string(var_94);
    }
}

pub fn serialize_structure_crate_input_get_resolver_dnssec_config_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::GetResolverDnssecConfigInput,
) {
    if let Some(var_95) = &input.resource_id {
        object.key("ResourceId").string(var_95);
    }
}

pub fn serialize_structure_crate_input_get_resolver_endpoint_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::GetResolverEndpointInput,
) {
    if let Some(var_96) = &input.resolver_endpoint_id {
        object.key("ResolverEndpointId").string(var_96);
    }
}

pub fn serialize_structure_crate_input_get_resolver_query_log_config_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::GetResolverQueryLogConfigInput,
) {
    if let Some(var_97) = &input.resolver_query_log_config_id {
        object.key("ResolverQueryLogConfigId").string(var_97);
    }
}

pub fn serialize_structure_crate_input_get_resolver_query_log_config_association_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::GetResolverQueryLogConfigAssociationInput,
) {
    if let Some(var_98) = &input.resolver_query_log_config_association_id {
        object
            .key("ResolverQueryLogConfigAssociationId")
            .string(var_98);
    }
}

pub fn serialize_structure_crate_input_get_resolver_query_log_config_policy_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::GetResolverQueryLogConfigPolicyInput,
) {
    if let Some(var_99) = &input.arn {
        object.key("Arn").string(var_99);
    }
}

pub fn serialize_structure_crate_input_get_resolver_rule_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::GetResolverRuleInput,
) {
    if let Some(var_100) = &input.resolver_rule_id {
        object.key("ResolverRuleId").string(var_100);
    }
}

pub fn serialize_structure_crate_input_get_resolver_rule_association_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::GetResolverRuleAssociationInput,
) {
    if let Some(var_101) = &input.resolver_rule_association_id {
        object.key("ResolverRuleAssociationId").string(var_101);
    }
}

pub fn serialize_structure_crate_input_get_resolver_rule_policy_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::GetResolverRulePolicyInput,
) {
    if let Some(var_102) = &input.arn {
        object.key("Arn").string(var_102);
    }
}

pub fn serialize_structure_crate_input_import_firewall_domains_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::ImportFirewallDomainsInput,
) {
    if let Some(var_103) = &input.firewall_domain_list_id {
        object.key("FirewallDomainListId").string(var_103);
    }
    if let Some(var_104) = &input.operation {
        object.key("Operation").string(var_104.as_str());
    }
    if let Some(var_105) = &input.domain_file_url {
        object.key("DomainFileUrl").string(var_105);
    }
}

pub fn serialize_structure_crate_input_list_firewall_configs_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::ListFirewallConfigsInput,
) {
    if let Some(var_106) = &input.max_results {
        object.key("MaxResults").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_106).into()),
        );
    }
    if let Some(var_107) = &input.next_token {
        object.key("NextToken").string(var_107);
    }
}

pub fn serialize_structure_crate_input_list_firewall_domain_lists_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::ListFirewallDomainListsInput,
) {
    if let Some(var_108) = &input.max_results {
        object.key("MaxResults").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_108).into()),
        );
    }
    if let Some(var_109) = &input.next_token {
        object.key("NextToken").string(var_109);
    }
}

pub fn serialize_structure_crate_input_list_firewall_domains_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::ListFirewallDomainsInput,
) {
    if let Some(var_110) = &input.firewall_domain_list_id {
        object.key("FirewallDomainListId").string(var_110);
    }
    if let Some(var_111) = &input.max_results {
        object.key("MaxResults").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_111).into()),
        );
    }
    if let Some(var_112) = &input.next_token {
        object.key("NextToken").string(var_112);
    }
}

pub fn serialize_structure_crate_input_list_firewall_rule_group_associations_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::ListFirewallRuleGroupAssociationsInput,
) {
    if let Some(var_113) = &input.firewall_rule_group_id {
        object.key("FirewallRuleGroupId").string(var_113);
    }
    if let Some(var_114) = &input.vpc_id {
        object.key("VpcId").string(var_114);
    }
    if let Some(var_115) = &input.priority {
        object.key("Priority").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_115).into()),
        );
    }
    if let Some(var_116) = &input.status {
        object.key("Status").string(var_116.as_str());
    }
    if let Some(var_117) = &input.max_results {
        object.key("MaxResults").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_117).into()),
        );
    }
    if let Some(var_118) = &input.next_token {
        object.key("NextToken").string(var_118);
    }
}

pub fn serialize_structure_crate_input_list_firewall_rule_groups_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::ListFirewallRuleGroupsInput,
) {
    if let Some(var_119) = &input.max_results {
        object.key("MaxResults").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_119).into()),
        );
    }
    if let Some(var_120) = &input.next_token {
        object.key("NextToken").string(var_120);
    }
}

pub fn serialize_structure_crate_input_list_firewall_rules_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::ListFirewallRulesInput,
) {
    if let Some(var_121) = &input.firewall_rule_group_id {
        object.key("FirewallRuleGroupId").string(var_121);
    }
    if let Some(var_122) = &input.priority {
        object.key("Priority").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_122).into()),
        );
    }
    if let Some(var_123) = &input.action {
        object.key("Action").string(var_123.as_str());
    }
    if let Some(var_124) = &input.max_results {
        object.key("MaxResults").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_124).into()),
        );
    }
    if let Some(var_125) = &input.next_token {
        object.key("NextToken").string(var_125);
    }
}

pub fn serialize_structure_crate_input_list_resolver_dnssec_configs_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::ListResolverDnssecConfigsInput,
) {
    if let Some(var_126) = &input.max_results {
        object.key("MaxResults").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_126).into()),
        );
    }
    if let Some(var_127) = &input.next_token {
        object.key("NextToken").string(var_127);
    }
    if let Some(var_128) = &input.filters {
        let mut array_129 = object.key("Filters").start_array();
        for item_130 in var_128 {
            {
                let mut object_131 = array_129.value().start_object();
                crate::json_ser::serialize_structure_crate_model_filter(&mut object_131, item_130);
                object_131.finish();
            }
        }
        array_129.finish();
    }
}

pub fn serialize_structure_crate_input_list_resolver_endpoint_ip_addresses_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::ListResolverEndpointIpAddressesInput,
) {
    if let Some(var_132) = &input.resolver_endpoint_id {
        object.key("ResolverEndpointId").string(var_132);
    }
    if let Some(var_133) = &input.max_results {
        object.key("MaxResults").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_133).into()),
        );
    }
    if let Some(var_134) = &input.next_token {
        object.key("NextToken").string(var_134);
    }
}

pub fn serialize_structure_crate_input_list_resolver_endpoints_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::ListResolverEndpointsInput,
) {
    if let Some(var_135) = &input.max_results {
        object.key("MaxResults").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_135).into()),
        );
    }
    if let Some(var_136) = &input.next_token {
        object.key("NextToken").string(var_136);
    }
    if let Some(var_137) = &input.filters {
        let mut array_138 = object.key("Filters").start_array();
        for item_139 in var_137 {
            {
                let mut object_140 = array_138.value().start_object();
                crate::json_ser::serialize_structure_crate_model_filter(&mut object_140, item_139);
                object_140.finish();
            }
        }
        array_138.finish();
    }
}

pub fn serialize_structure_crate_input_list_resolver_query_log_config_associations_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::ListResolverQueryLogConfigAssociationsInput,
) {
    if let Some(var_141) = &input.max_results {
        object.key("MaxResults").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_141).into()),
        );
    }
    if let Some(var_142) = &input.next_token {
        object.key("NextToken").string(var_142);
    }
    if let Some(var_143) = &input.filters {
        let mut array_144 = object.key("Filters").start_array();
        for item_145 in var_143 {
            {
                let mut object_146 = array_144.value().start_object();
                crate::json_ser::serialize_structure_crate_model_filter(&mut object_146, item_145);
                object_146.finish();
            }
        }
        array_144.finish();
    }
    if let Some(var_147) = &input.sort_by {
        object.key("SortBy").string(var_147);
    }
    if let Some(var_148) = &input.sort_order {
        object.key("SortOrder").string(var_148.as_str());
    }
}

pub fn serialize_structure_crate_input_list_resolver_query_log_configs_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::ListResolverQueryLogConfigsInput,
) {
    if let Some(var_149) = &input.max_results {
        object.key("MaxResults").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_149).into()),
        );
    }
    if let Some(var_150) = &input.next_token {
        object.key("NextToken").string(var_150);
    }
    if let Some(var_151) = &input.filters {
        let mut array_152 = object.key("Filters").start_array();
        for item_153 in var_151 {
            {
                let mut object_154 = array_152.value().start_object();
                crate::json_ser::serialize_structure_crate_model_filter(&mut object_154, item_153);
                object_154.finish();
            }
        }
        array_152.finish();
    }
    if let Some(var_155) = &input.sort_by {
        object.key("SortBy").string(var_155);
    }
    if let Some(var_156) = &input.sort_order {
        object.key("SortOrder").string(var_156.as_str());
    }
}

pub fn serialize_structure_crate_input_list_resolver_rule_associations_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::ListResolverRuleAssociationsInput,
) {
    if let Some(var_157) = &input.max_results {
        object.key("MaxResults").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_157).into()),
        );
    }
    if let Some(var_158) = &input.next_token {
        object.key("NextToken").string(var_158);
    }
    if let Some(var_159) = &input.filters {
        let mut array_160 = object.key("Filters").start_array();
        for item_161 in var_159 {
            {
                let mut object_162 = array_160.value().start_object();
                crate::json_ser::serialize_structure_crate_model_filter(&mut object_162, item_161);
                object_162.finish();
            }
        }
        array_160.finish();
    }
}

pub fn serialize_structure_crate_input_list_resolver_rules_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::ListResolverRulesInput,
) {
    if let Some(var_163) = &input.max_results {
        object.key("MaxResults").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_163).into()),
        );
    }
    if let Some(var_164) = &input.next_token {
        object.key("NextToken").string(var_164);
    }
    if let Some(var_165) = &input.filters {
        let mut array_166 = object.key("Filters").start_array();
        for item_167 in var_165 {
            {
                let mut object_168 = array_166.value().start_object();
                crate::json_ser::serialize_structure_crate_model_filter(&mut object_168, item_167);
                object_168.finish();
            }
        }
        array_166.finish();
    }
}

pub fn serialize_structure_crate_input_list_tags_for_resource_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::ListTagsForResourceInput,
) {
    if let Some(var_169) = &input.resource_arn {
        object.key("ResourceArn").string(var_169);
    }
    if let Some(var_170) = &input.max_results {
        object.key("MaxResults").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_170).into()),
        );
    }
    if let Some(var_171) = &input.next_token {
        object.key("NextToken").string(var_171);
    }
}

pub fn serialize_structure_crate_input_put_firewall_rule_group_policy_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::PutFirewallRuleGroupPolicyInput,
) {
    if let Some(var_172) = &input.arn {
        object.key("Arn").string(var_172);
    }
    if let Some(var_173) = &input.firewall_rule_group_policy {
        object.key("FirewallRuleGroupPolicy").string(var_173);
    }
}

pub fn serialize_structure_crate_input_put_resolver_query_log_config_policy_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::PutResolverQueryLogConfigPolicyInput,
) {
    if let Some(var_174) = &input.arn {
        object.key("Arn").string(var_174);
    }
    if let Some(var_175) = &input.resolver_query_log_config_policy {
        object.key("ResolverQueryLogConfigPolicy").string(var_175);
    }
}

pub fn serialize_structure_crate_input_put_resolver_rule_policy_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::PutResolverRulePolicyInput,
) {
    if let Some(var_176) = &input.arn {
        object.key("Arn").string(var_176);
    }
    if let Some(var_177) = &input.resolver_rule_policy {
        object.key("ResolverRulePolicy").string(var_177);
    }
}

pub fn serialize_structure_crate_input_tag_resource_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::TagResourceInput,
) {
    if let Some(var_178) = &input.resource_arn {
        object.key("ResourceArn").string(var_178);
    }
    if let Some(var_179) = &input.tags {
        let mut array_180 = object.key("Tags").start_array();
        for item_181 in var_179 {
            {
                let mut object_182 = array_180.value().start_object();
                crate::json_ser::serialize_structure_crate_model_tag(&mut object_182, item_181);
                object_182.finish();
            }
        }
        array_180.finish();
    }
}

pub fn serialize_structure_crate_input_untag_resource_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UntagResourceInput,
) {
    if let Some(var_183) = &input.resource_arn {
        object.key("ResourceArn").string(var_183);
    }
    if let Some(var_184) = &input.tag_keys {
        let mut array_185 = object.key("TagKeys").start_array();
        for item_186 in var_184 {
            {
                array_185.value().string(item_186);
            }
        }
        array_185.finish();
    }
}

pub fn serialize_structure_crate_input_update_firewall_config_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateFirewallConfigInput,
) {
    if let Some(var_187) = &input.resource_id {
        object.key("ResourceId").string(var_187);
    }
    if let Some(var_188) = &input.firewall_fail_open {
        object.key("FirewallFailOpen").string(var_188.as_str());
    }
}

pub fn serialize_structure_crate_input_update_firewall_domains_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateFirewallDomainsInput,
) {
    if let Some(var_189) = &input.firewall_domain_list_id {
        object.key("FirewallDomainListId").string(var_189);
    }
    if let Some(var_190) = &input.operation {
        object.key("Operation").string(var_190.as_str());
    }
    if let Some(var_191) = &input.domains {
        let mut array_192 = object.key("Domains").start_array();
        for item_193 in var_191 {
            {
                array_192.value().string(item_193);
            }
        }
        array_192.finish();
    }
}

pub fn serialize_structure_crate_input_update_firewall_rule_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateFirewallRuleInput,
) {
    if let Some(var_194) = &input.firewall_rule_group_id {
        object.key("FirewallRuleGroupId").string(var_194);
    }
    if let Some(var_195) = &input.firewall_domain_list_id {
        object.key("FirewallDomainListId").string(var_195);
    }
    if let Some(var_196) = &input.priority {
        object.key("Priority").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_196).into()),
        );
    }
    if let Some(var_197) = &input.action {
        object.key("Action").string(var_197.as_str());
    }
    if let Some(var_198) = &input.block_response {
        object.key("BlockResponse").string(var_198.as_str());
    }
    if let Some(var_199) = &input.block_override_domain {
        object.key("BlockOverrideDomain").string(var_199);
    }
    if let Some(var_200) = &input.block_override_dns_type {
        object.key("BlockOverrideDnsType").string(var_200.as_str());
    }
    if let Some(var_201) = &input.block_override_ttl {
        object.key("BlockOverrideTtl").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_201).into()),
        );
    }
    if let Some(var_202) = &input.name {
        object.key("Name").string(var_202);
    }
}

pub fn serialize_structure_crate_input_update_firewall_rule_group_association_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateFirewallRuleGroupAssociationInput,
) {
    if let Some(var_203) = &input.firewall_rule_group_association_id {
        object.key("FirewallRuleGroupAssociationId").string(var_203);
    }
    if let Some(var_204) = &input.priority {
        object.key("Priority").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_204).into()),
        );
    }
    if let Some(var_205) = &input.mutation_protection {
        object.key("MutationProtection").string(var_205.as_str());
    }
    if let Some(var_206) = &input.name {
        object.key("Name").string(var_206);
    }
}

pub fn serialize_structure_crate_input_update_resolver_dnssec_config_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateResolverDnssecConfigInput,
) {
    if let Some(var_207) = &input.resource_id {
        object.key("ResourceId").string(var_207);
    }
    if let Some(var_208) = &input.validation {
        object.key("Validation").string(var_208.as_str());
    }
}

pub fn serialize_structure_crate_input_update_resolver_endpoint_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateResolverEndpointInput,
) {
    if let Some(var_209) = &input.resolver_endpoint_id {
        object.key("ResolverEndpointId").string(var_209);
    }
    if let Some(var_210) = &input.name {
        object.key("Name").string(var_210);
    }
}

pub fn serialize_structure_crate_input_update_resolver_rule_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::input::UpdateResolverRuleInput,
) {
    if let Some(var_211) = &input.resolver_rule_id {
        object.key("ResolverRuleId").string(var_211);
    }
    if let Some(var_212) = &input.config {
        let mut object_213 = object.key("Config").start_object();
        crate::json_ser::serialize_structure_crate_model_resolver_rule_config(
            &mut object_213,
            var_212,
        );
        object_213.finish();
    }
}

pub fn serialize_structure_crate_model_tag(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::Tag,
) {
    if let Some(var_214) = &input.key {
        object.key("Key").string(var_214);
    }
    if let Some(var_215) = &input.value {
        object.key("Value").string(var_215);
    }
}

pub fn serialize_structure_crate_model_ip_address_update(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::IpAddressUpdate,
) {
    if let Some(var_216) = &input.ip_id {
        object.key("IpId").string(var_216);
    }
    if let Some(var_217) = &input.subnet_id {
        object.key("SubnetId").string(var_217);
    }
    if let Some(var_218) = &input.ip {
        object.key("Ip").string(var_218);
    }
}

pub fn serialize_structure_crate_model_ip_address_request(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::IpAddressRequest,
) {
    if let Some(var_219) = &input.subnet_id {
        object.key("SubnetId").string(var_219);
    }
    if let Some(var_220) = &input.ip {
        object.key("Ip").string(var_220);
    }
}

pub fn serialize_structure_crate_model_target_address(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::TargetAddress,
) {
    if let Some(var_221) = &input.ip {
        object.key("Ip").string(var_221);
    }
    if let Some(var_222) = &input.port {
        object.key("Port").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_222).into()),
        );
    }
}

pub fn serialize_structure_crate_model_filter(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::Filter,
) {
    if let Some(var_223) = &input.name {
        object.key("Name").string(var_223);
    }
    if let Some(var_224) = &input.values {
        let mut array_225 = object.key("Values").start_array();
        for item_226 in var_224 {
            {
                array_225.value().string(item_226);
            }
        }
        array_225.finish();
    }
}

pub fn serialize_structure_crate_model_resolver_rule_config(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::model::ResolverRuleConfig,
) {
    if let Some(var_227) = &input.name {
        object.key("Name").string(var_227);
    }
    if let Some(var_228) = &input.target_ips {
        let mut array_229 = object.key("TargetIps").start_array();
        for item_230 in var_228 {
            {
                let mut object_231 = array_229.value().start_object();
                crate::json_ser::serialize_structure_crate_model_target_address(
                    &mut object_231,
                    item_230,
                );
                object_231.finish();
            }
        }
        array_229.finish();
    }
    if let Some(var_232) = &input.resolver_endpoint_id {
        object.key("ResolverEndpointId").string(var_232);
    }
}
