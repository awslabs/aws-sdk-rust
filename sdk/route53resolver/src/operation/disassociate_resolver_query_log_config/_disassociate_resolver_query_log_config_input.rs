// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DisassociateResolverQueryLogConfigInput {
    /// <p>The ID of the query logging configuration that you want to disassociate a specified VPC from.</p>
    #[doc(hidden)]
    pub resolver_query_log_config_id: std::option::Option<std::string::String>,
    /// <p>The ID of the Amazon VPC that you want to disassociate from a specified query logging configuration.</p>
    #[doc(hidden)]
    pub resource_id: std::option::Option<std::string::String>,
}
impl DisassociateResolverQueryLogConfigInput {
    /// <p>The ID of the query logging configuration that you want to disassociate a specified VPC from.</p>
    pub fn resolver_query_log_config_id(&self) -> std::option::Option<&str> {
        self.resolver_query_log_config_id.as_deref()
    }
    /// <p>The ID of the Amazon VPC that you want to disassociate from a specified query logging configuration.</p>
    pub fn resource_id(&self) -> std::option::Option<&str> {
        self.resource_id.as_deref()
    }
}
impl DisassociateResolverQueryLogConfigInput {
    /// Creates a new builder-style object to manufacture [`DisassociateResolverQueryLogConfigInput`](crate::operation::disassociate_resolver_query_log_config::DisassociateResolverQueryLogConfigInput).
    pub fn builder() -> crate::operation::disassociate_resolver_query_log_config::builders::DisassociateResolverQueryLogConfigInputBuilder{
        crate::operation::disassociate_resolver_query_log_config::builders::DisassociateResolverQueryLogConfigInputBuilder::default()
    }
}

/// A builder for [`DisassociateResolverQueryLogConfigInput`](crate::operation::disassociate_resolver_query_log_config::DisassociateResolverQueryLogConfigInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DisassociateResolverQueryLogConfigInputBuilder {
    pub(crate) resolver_query_log_config_id: std::option::Option<std::string::String>,
    pub(crate) resource_id: std::option::Option<std::string::String>,
}
impl DisassociateResolverQueryLogConfigInputBuilder {
    /// <p>The ID of the query logging configuration that you want to disassociate a specified VPC from.</p>
    pub fn resolver_query_log_config_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.resolver_query_log_config_id = Some(input.into());
        self
    }
    /// <p>The ID of the query logging configuration that you want to disassociate a specified VPC from.</p>
    pub fn set_resolver_query_log_config_id(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.resolver_query_log_config_id = input;
        self
    }
    /// <p>The ID of the Amazon VPC that you want to disassociate from a specified query logging configuration.</p>
    pub fn resource_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.resource_id = Some(input.into());
        self
    }
    /// <p>The ID of the Amazon VPC that you want to disassociate from a specified query logging configuration.</p>
    pub fn set_resource_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.resource_id = input;
        self
    }
    /// Consumes the builder and constructs a [`DisassociateResolverQueryLogConfigInput`](crate::operation::disassociate_resolver_query_log_config::DisassociateResolverQueryLogConfigInput).
    pub fn build(self) -> Result<crate::operation::disassociate_resolver_query_log_config::DisassociateResolverQueryLogConfigInput, aws_smithy_http::operation::error::BuildError>{
        Ok(
            crate::operation::disassociate_resolver_query_log_config::DisassociateResolverQueryLogConfigInput {
                resolver_query_log_config_id: self.resolver_query_log_config_id
                ,
                resource_id: self.resource_id
                ,
            }
        )
    }
}
