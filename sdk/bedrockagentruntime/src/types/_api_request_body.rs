// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The request body to provide for the API request, as the agent elicited from the user.</p>
/// <p>This data type is used in the following API operations:</p>
/// <ul>
/// <li>
/// <p><a href="https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_Retrieve.html#API_agent-runtime_Retrieve_ResponseSyntax">Retrieve response</a></p></li>
/// </ul>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ApiRequestBody {
    /// <p>The content of the request body. The key of the object in this field is a media type defining the format of the request body.</p>
    pub content: ::std::option::Option<::std::collections::HashMap<::std::string::String, crate::types::PropertyParameters>>,
}
impl ApiRequestBody {
    /// <p>The content of the request body. The key of the object in this field is a media type defining the format of the request body.</p>
    pub fn content(&self) -> ::std::option::Option<&::std::collections::HashMap<::std::string::String, crate::types::PropertyParameters>> {
        self.content.as_ref()
    }
}
impl ApiRequestBody {
    /// Creates a new builder-style object to manufacture [`ApiRequestBody`](crate::types::ApiRequestBody).
    pub fn builder() -> crate::types::builders::ApiRequestBodyBuilder {
        crate::types::builders::ApiRequestBodyBuilder::default()
    }
}

/// A builder for [`ApiRequestBody`](crate::types::ApiRequestBody).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ApiRequestBodyBuilder {
    pub(crate) content: ::std::option::Option<::std::collections::HashMap<::std::string::String, crate::types::PropertyParameters>>,
}
impl ApiRequestBodyBuilder {
    /// Adds a key-value pair to `content`.
    ///
    /// To override the contents of this collection use [`set_content`](Self::set_content).
    ///
    /// <p>The content of the request body. The key of the object in this field is a media type defining the format of the request body.</p>
    pub fn content(mut self, k: impl ::std::convert::Into<::std::string::String>, v: crate::types::PropertyParameters) -> Self {
        let mut hash_map = self.content.unwrap_or_default();
        hash_map.insert(k.into(), v);
        self.content = ::std::option::Option::Some(hash_map);
        self
    }
    /// <p>The content of the request body. The key of the object in this field is a media type defining the format of the request body.</p>
    pub fn set_content(
        mut self,
        input: ::std::option::Option<::std::collections::HashMap<::std::string::String, crate::types::PropertyParameters>>,
    ) -> Self {
        self.content = input;
        self
    }
    /// <p>The content of the request body. The key of the object in this field is a media type defining the format of the request body.</p>
    pub fn get_content(&self) -> &::std::option::Option<::std::collections::HashMap<::std::string::String, crate::types::PropertyParameters>> {
        &self.content
    }
    /// Consumes the builder and constructs a [`ApiRequestBody`](crate::types::ApiRequestBody).
    pub fn build(self) -> crate::types::ApiRequestBody {
        crate::types::ApiRequestBody { content: self.content }
    }
}
