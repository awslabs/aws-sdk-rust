// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The custom word details for the filter in the Guardrail.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq)]
pub struct GuardrailCustomWord {
    /// <p>The match details for the custom word filter in the Guardrail.</p>
    pub r#match: ::std::option::Option<::std::string::String>,
    /// <p>The action details for the custom word filter in the Guardrail.</p>
    pub action: ::std::option::Option<crate::types::GuardrailWordPolicyAction>,
}
impl GuardrailCustomWord {
    /// <p>The match details for the custom word filter in the Guardrail.</p>
    pub fn r#match(&self) -> ::std::option::Option<&str> {
        self.r#match.as_deref()
    }
    /// <p>The action details for the custom word filter in the Guardrail.</p>
    pub fn action(&self) -> ::std::option::Option<&crate::types::GuardrailWordPolicyAction> {
        self.action.as_ref()
    }
}
impl ::std::fmt::Debug for GuardrailCustomWord {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("GuardrailCustomWord");
        formatter.field("r#match", &"*** Sensitive Data Redacted ***");
        formatter.field("action", &"*** Sensitive Data Redacted ***");
        formatter.finish()
    }
}
impl GuardrailCustomWord {
    /// Creates a new builder-style object to manufacture [`GuardrailCustomWord`](crate::types::GuardrailCustomWord).
    pub fn builder() -> crate::types::builders::GuardrailCustomWordBuilder {
        crate::types::builders::GuardrailCustomWordBuilder::default()
    }
}

/// A builder for [`GuardrailCustomWord`](crate::types::GuardrailCustomWord).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default)]
pub struct GuardrailCustomWordBuilder {
    pub(crate) r#match: ::std::option::Option<::std::string::String>,
    pub(crate) action: ::std::option::Option<crate::types::GuardrailWordPolicyAction>,
}
impl GuardrailCustomWordBuilder {
    /// <p>The match details for the custom word filter in the Guardrail.</p>
    pub fn r#match(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.r#match = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The match details for the custom word filter in the Guardrail.</p>
    pub fn set_match(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.r#match = input;
        self
    }
    /// <p>The match details for the custom word filter in the Guardrail.</p>
    pub fn get_match(&self) -> &::std::option::Option<::std::string::String> {
        &self.r#match
    }
    /// <p>The action details for the custom word filter in the Guardrail.</p>
    pub fn action(mut self, input: crate::types::GuardrailWordPolicyAction) -> Self {
        self.action = ::std::option::Option::Some(input);
        self
    }
    /// <p>The action details for the custom word filter in the Guardrail.</p>
    pub fn set_action(mut self, input: ::std::option::Option<crate::types::GuardrailWordPolicyAction>) -> Self {
        self.action = input;
        self
    }
    /// <p>The action details for the custom word filter in the Guardrail.</p>
    pub fn get_action(&self) -> &::std::option::Option<crate::types::GuardrailWordPolicyAction> {
        &self.action
    }
    /// Consumes the builder and constructs a [`GuardrailCustomWord`](crate::types::GuardrailCustomWord).
    pub fn build(self) -> crate::types::GuardrailCustomWord {
        crate::types::GuardrailCustomWord {
            r#match: self.r#match,
            action: self.action,
        }
    }
}
impl ::std::fmt::Debug for GuardrailCustomWordBuilder {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("GuardrailCustomWordBuilder");
        formatter.field("r#match", &"*** Sensitive Data Redacted ***");
        formatter.field("action", &"*** Sensitive Data Redacted ***");
        formatter.finish()
    }
}
