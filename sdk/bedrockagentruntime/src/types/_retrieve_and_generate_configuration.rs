// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains details about the resource being queried.</p>
/// <p>This data type is used in the following API operations:</p>
/// <ul>
/// <li>
/// <p><a href="https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_RetrieveAndGenerate.html#API_agent-runtime_RetrieveAndGenerate_RequestSyntax">RetrieveAndGenerate request</a> â€“ in the <code>retrieveAndGenerateConfiguration</code> field</p></li>
/// </ul>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct RetrieveAndGenerateConfiguration {
    /// <p>The type of resource that is queried by the request.</p>
    pub r#type: crate::types::RetrieveAndGenerateType,
    /// <p>Contains details about the resource being queried.</p>
    pub knowledge_base_configuration: ::std::option::Option<crate::types::KnowledgeBaseRetrieveAndGenerateConfiguration>,
    /// <p>The configuration used with the external source wrapper object in the retrieveAndGenerate function.</p>
    pub external_sources_configuration: ::std::option::Option<crate::types::ExternalSourcesRetrieveAndGenerateConfiguration>,
}
impl RetrieveAndGenerateConfiguration {
    /// <p>The type of resource that is queried by the request.</p>
    pub fn r#type(&self) -> &crate::types::RetrieveAndGenerateType {
        &self.r#type
    }
    /// <p>Contains details about the resource being queried.</p>
    pub fn knowledge_base_configuration(&self) -> ::std::option::Option<&crate::types::KnowledgeBaseRetrieveAndGenerateConfiguration> {
        self.knowledge_base_configuration.as_ref()
    }
    /// <p>The configuration used with the external source wrapper object in the retrieveAndGenerate function.</p>
    pub fn external_sources_configuration(&self) -> ::std::option::Option<&crate::types::ExternalSourcesRetrieveAndGenerateConfiguration> {
        self.external_sources_configuration.as_ref()
    }
}
impl RetrieveAndGenerateConfiguration {
    /// Creates a new builder-style object to manufacture [`RetrieveAndGenerateConfiguration`](crate::types::RetrieveAndGenerateConfiguration).
    pub fn builder() -> crate::types::builders::RetrieveAndGenerateConfigurationBuilder {
        crate::types::builders::RetrieveAndGenerateConfigurationBuilder::default()
    }
}

/// A builder for [`RetrieveAndGenerateConfiguration`](crate::types::RetrieveAndGenerateConfiguration).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct RetrieveAndGenerateConfigurationBuilder {
    pub(crate) r#type: ::std::option::Option<crate::types::RetrieveAndGenerateType>,
    pub(crate) knowledge_base_configuration: ::std::option::Option<crate::types::KnowledgeBaseRetrieveAndGenerateConfiguration>,
    pub(crate) external_sources_configuration: ::std::option::Option<crate::types::ExternalSourcesRetrieveAndGenerateConfiguration>,
}
impl RetrieveAndGenerateConfigurationBuilder {
    /// <p>The type of resource that is queried by the request.</p>
    /// This field is required.
    pub fn r#type(mut self, input: crate::types::RetrieveAndGenerateType) -> Self {
        self.r#type = ::std::option::Option::Some(input);
        self
    }
    /// <p>The type of resource that is queried by the request.</p>
    pub fn set_type(mut self, input: ::std::option::Option<crate::types::RetrieveAndGenerateType>) -> Self {
        self.r#type = input;
        self
    }
    /// <p>The type of resource that is queried by the request.</p>
    pub fn get_type(&self) -> &::std::option::Option<crate::types::RetrieveAndGenerateType> {
        &self.r#type
    }
    /// <p>Contains details about the resource being queried.</p>
    pub fn knowledge_base_configuration(mut self, input: crate::types::KnowledgeBaseRetrieveAndGenerateConfiguration) -> Self {
        self.knowledge_base_configuration = ::std::option::Option::Some(input);
        self
    }
    /// <p>Contains details about the resource being queried.</p>
    pub fn set_knowledge_base_configuration(
        mut self,
        input: ::std::option::Option<crate::types::KnowledgeBaseRetrieveAndGenerateConfiguration>,
    ) -> Self {
        self.knowledge_base_configuration = input;
        self
    }
    /// <p>Contains details about the resource being queried.</p>
    pub fn get_knowledge_base_configuration(&self) -> &::std::option::Option<crate::types::KnowledgeBaseRetrieveAndGenerateConfiguration> {
        &self.knowledge_base_configuration
    }
    /// <p>The configuration used with the external source wrapper object in the retrieveAndGenerate function.</p>
    pub fn external_sources_configuration(mut self, input: crate::types::ExternalSourcesRetrieveAndGenerateConfiguration) -> Self {
        self.external_sources_configuration = ::std::option::Option::Some(input);
        self
    }
    /// <p>The configuration used with the external source wrapper object in the retrieveAndGenerate function.</p>
    pub fn set_external_sources_configuration(
        mut self,
        input: ::std::option::Option<crate::types::ExternalSourcesRetrieveAndGenerateConfiguration>,
    ) -> Self {
        self.external_sources_configuration = input;
        self
    }
    /// <p>The configuration used with the external source wrapper object in the retrieveAndGenerate function.</p>
    pub fn get_external_sources_configuration(&self) -> &::std::option::Option<crate::types::ExternalSourcesRetrieveAndGenerateConfiguration> {
        &self.external_sources_configuration
    }
    /// Consumes the builder and constructs a [`RetrieveAndGenerateConfiguration`](crate::types::RetrieveAndGenerateConfiguration).
    /// This method will fail if any of the following fields are not set:
    /// - [`r#type`](crate::types::builders::RetrieveAndGenerateConfigurationBuilder::type)
    pub fn build(self) -> ::std::result::Result<crate::types::RetrieveAndGenerateConfiguration, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::RetrieveAndGenerateConfiguration {
            r#type: self.r#type.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "r#type",
                    "r#type was not specified but it is required when building RetrieveAndGenerateConfiguration",
                )
            })?,
            knowledge_base_configuration: self.knowledge_base_configuration,
            external_sources_configuration: self.external_sources_configuration,
        })
    }
}
