// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A result from the action group invocation.</p>
/// <p>This data type is used in the following API operations:</p>
/// <ul>
/// <li>
/// <p><a href="https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_Retrieve.html#API_agent-runtime_Retrieve_RequestSyntax">Retrieve request</a></p></li>
/// </ul>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub enum InvocationResultMember {
    /// <p>The result from the API response from the action group invocation.</p>
    ApiResult(crate::types::ApiResult),
    /// <p>The result from the function from the action group invocation.</p>
    FunctionResult(crate::types::FunctionResult),
    /// The `Unknown` variant represents cases where new union variant was received. Consider upgrading the SDK to the latest available version.
    /// An unknown enum variant
    ///
    /// _Note: If you encounter this error, consider upgrading your SDK to the latest version._
    /// The `Unknown` variant represents cases where the server sent a value that wasn't recognized
    /// by the client. This can happen when the server adds new functionality, but the client has not been updated.
    /// To investigate this, consider turning on debug logging to print the raw HTTP response.
    #[non_exhaustive]
    Unknown,
}
impl InvocationResultMember {
    /// Tries to convert the enum instance into [`ApiResult`](crate::types::InvocationResultMember::ApiResult), extracting the inner [`ApiResult`](crate::types::ApiResult).
    /// Returns `Err(&Self)` if it can't be converted.
    pub fn as_api_result(&self) -> ::std::result::Result<&crate::types::ApiResult, &Self> {
        if let InvocationResultMember::ApiResult(val) = &self {
            ::std::result::Result::Ok(val)
        } else {
            ::std::result::Result::Err(self)
        }
    }
    /// Returns true if this is a [`ApiResult`](crate::types::InvocationResultMember::ApiResult).
    pub fn is_api_result(&self) -> bool {
        self.as_api_result().is_ok()
    }
    /// Tries to convert the enum instance into [`FunctionResult`](crate::types::InvocationResultMember::FunctionResult), extracting the inner [`FunctionResult`](crate::types::FunctionResult).
    /// Returns `Err(&Self)` if it can't be converted.
    pub fn as_function_result(&self) -> ::std::result::Result<&crate::types::FunctionResult, &Self> {
        if let InvocationResultMember::FunctionResult(val) = &self {
            ::std::result::Result::Ok(val)
        } else {
            ::std::result::Result::Err(self)
        }
    }
    /// Returns true if this is a [`FunctionResult`](crate::types::InvocationResultMember::FunctionResult).
    pub fn is_function_result(&self) -> bool {
        self.as_function_result().is_ok()
    }
    /// Returns true if the enum instance is the `Unknown` variant.
    pub fn is_unknown(&self) -> bool {
        matches!(self, Self::Unknown)
    }
}
