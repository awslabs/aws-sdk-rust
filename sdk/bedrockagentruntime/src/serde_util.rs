// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) fn invoke_agent_output_output_correct_errors(
    mut builder: crate::operation::invoke_agent::builders::InvokeAgentOutputBuilder,
) -> crate::operation::invoke_agent::builders::InvokeAgentOutputBuilder {
    if builder.content_type.is_none() {
        builder.content_type = Some(Default::default())
    }
    if builder.session_id.is_none() {
        builder.session_id = Some(Default::default())
    }
    builder
}

pub(crate) fn retrieve_output_output_correct_errors(
    mut builder: crate::operation::retrieve::builders::RetrieveOutputBuilder,
) -> crate::operation::retrieve::builders::RetrieveOutputBuilder {
    if builder.retrieval_results.is_none() {
        builder.retrieval_results = Some(Default::default())
    }
    builder
}

pub(crate) fn retrieve_and_generate_output_output_correct_errors(
    mut builder: crate::operation::retrieve_and_generate::builders::RetrieveAndGenerateOutputBuilder,
) -> crate::operation::retrieve_and_generate::builders::RetrieveAndGenerateOutputBuilder {
    if builder.session_id.is_none() {
        builder.session_id = Some(Default::default())
    }
    if builder.output.is_none() {
        builder.output = {
            let builder = crate::types::builders::RetrieveAndGenerateOutputBuilder::default();
            crate::serde_util::retrieve_and_generate_output_correct_errors(builder).build().ok()
        }
    }
    builder
}

pub(crate) fn retrieve_and_generate_output_correct_errors(
    mut builder: crate::types::builders::RetrieveAndGenerateOutputBuilder,
) -> crate::types::builders::RetrieveAndGenerateOutputBuilder {
    if builder.text.is_none() {
        builder.text = Some(Default::default())
    }
    builder
}

pub(crate) fn knowledge_base_retrieval_result_correct_errors(
    mut builder: crate::types::builders::KnowledgeBaseRetrievalResultBuilder,
) -> crate::types::builders::KnowledgeBaseRetrievalResultBuilder {
    if builder.content.is_none() {
        builder.content = {
            let builder = crate::types::builders::RetrievalResultContentBuilder::default();
            crate::serde_util::retrieval_result_content_correct_errors(builder).build().ok()
        }
    }
    builder
}

pub(crate) fn retrieval_result_content_correct_errors(
    mut builder: crate::types::builders::RetrievalResultContentBuilder,
) -> crate::types::builders::RetrievalResultContentBuilder {
    if builder.text.is_none() {
        builder.text = Some(Default::default())
    }
    builder
}

pub(crate) fn retrieval_result_location_correct_errors(
    mut builder: crate::types::builders::RetrievalResultLocationBuilder,
) -> crate::types::builders::RetrievalResultLocationBuilder {
    if builder.r#type.is_none() {
        builder.r#type = "no value was set".parse::<crate::types::RetrievalResultLocationType>().ok()
    }
    builder
}

pub(crate) fn api_invocation_input_correct_errors(
    mut builder: crate::types::builders::ApiInvocationInputBuilder,
) -> crate::types::builders::ApiInvocationInputBuilder {
    if builder.action_group.is_none() {
        builder.action_group = Some(Default::default())
    }
    builder
}

pub(crate) fn function_invocation_input_correct_errors(
    mut builder: crate::types::builders::FunctionInvocationInputBuilder,
) -> crate::types::builders::FunctionInvocationInputBuilder {
    if builder.action_group.is_none() {
        builder.action_group = Some(Default::default())
    }
    builder
}
