// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_function_result(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::types::FunctionResult,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    {
        object.key("actionGroup").string(input.action_group.as_str());
    }
    if let Some(var_1) = &input.function {
        object.key("function").string(var_1.as_str());
    }
    if let Some(var_2) = &input.response_body {
        #[allow(unused_mut)]
        let mut object_3 = object.key("responseBody").start_object();
        for (key_4, value_5) in var_2 {
            {
                #[allow(unused_mut)]
                let mut object_6 = object_3.key(key_4.as_str()).start_object();
                crate::protocol_serde::shape_content_body::ser_content_body(&mut object_6, value_5)?;
                object_6.finish();
            }
        }
        object_3.finish();
    }
    if let Some(var_7) = &input.response_state {
        object.key("responseState").string(var_7.as_str());
    }
    Ok(())
}
