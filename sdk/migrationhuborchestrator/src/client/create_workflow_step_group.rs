// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateWorkflowStepGroup`](crate::operation::create_workflow_step_group::builders::CreateWorkflowStepGroupFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`workflow_id(impl Into<String>)`](crate::operation::create_workflow_step_group::builders::CreateWorkflowStepGroupFluentBuilder::workflow_id) / [`set_workflow_id(Option<String>)`](crate::operation::create_workflow_step_group::builders::CreateWorkflowStepGroupFluentBuilder::set_workflow_id):<br>required: **true**<br><p>The ID of the migration workflow that will contain the step group.</p><br>
    ///   - [`name(impl Into<String>)`](crate::operation::create_workflow_step_group::builders::CreateWorkflowStepGroupFluentBuilder::name) / [`set_name(Option<String>)`](crate::operation::create_workflow_step_group::builders::CreateWorkflowStepGroupFluentBuilder::set_name):<br>required: **true**<br><p>The name of the step group.</p><br>
    ///   - [`description(impl Into<String>)`](crate::operation::create_workflow_step_group::builders::CreateWorkflowStepGroupFluentBuilder::description) / [`set_description(Option<String>)`](crate::operation::create_workflow_step_group::builders::CreateWorkflowStepGroupFluentBuilder::set_description):<br>required: **false**<br><p>The description of the step group.</p><br>
    ///   - [`next(impl Into<String>)`](crate::operation::create_workflow_step_group::builders::CreateWorkflowStepGroupFluentBuilder::next) / [`set_next(Option<Vec::<String>>)`](crate::operation::create_workflow_step_group::builders::CreateWorkflowStepGroupFluentBuilder::set_next):<br>required: **false**<br><p>The next step group.</p><br>
    ///   - [`previous(impl Into<String>)`](crate::operation::create_workflow_step_group::builders::CreateWorkflowStepGroupFluentBuilder::previous) / [`set_previous(Option<Vec::<String>>)`](crate::operation::create_workflow_step_group::builders::CreateWorkflowStepGroupFluentBuilder::set_previous):<br>required: **false**<br><p>The previous step group.</p><br>
    /// - On success, responds with [`CreateWorkflowStepGroupOutput`](crate::operation::create_workflow_step_group::CreateWorkflowStepGroupOutput) with field(s):
    ///   - [`workflow_id(Option<String>)`](crate::operation::create_workflow_step_group::CreateWorkflowStepGroupOutput::workflow_id): <p>The ID of the migration workflow that contains the step group.</p>
    ///   - [`name(Option<String>)`](crate::operation::create_workflow_step_group::CreateWorkflowStepGroupOutput::name): <p>The name of the step group.</p>
    ///   - [`id(Option<String>)`](crate::operation::create_workflow_step_group::CreateWorkflowStepGroupOutput::id): <p>The ID of the step group.</p>
    ///   - [`description(Option<String>)`](crate::operation::create_workflow_step_group::CreateWorkflowStepGroupOutput::description): <p>The description of the step group.</p>
    ///   - [`tools(Option<Vec::<Tool>>)`](crate::operation::create_workflow_step_group::CreateWorkflowStepGroupOutput::tools): <p>List of AWS services utilized in a migration workflow.</p>
    ///   - [`next(Option<Vec::<String>>)`](crate::operation::create_workflow_step_group::CreateWorkflowStepGroupOutput::next): <p>The next step group.</p>
    ///   - [`previous(Option<Vec::<String>>)`](crate::operation::create_workflow_step_group::CreateWorkflowStepGroupOutput::previous): <p>The previous step group.</p>
    ///   - [`creation_time(Option<DateTime>)`](crate::operation::create_workflow_step_group::CreateWorkflowStepGroupOutput::creation_time): <p>The time at which the step group is created.</p>
    /// - On failure, responds with [`SdkError<CreateWorkflowStepGroupError>`](crate::operation::create_workflow_step_group::CreateWorkflowStepGroupError)
    pub fn create_workflow_step_group(&self) -> crate::operation::create_workflow_step_group::builders::CreateWorkflowStepGroupFluentBuilder {
        crate::operation::create_workflow_step_group::builders::CreateWorkflowStepGroupFluentBuilder::new(self.handle.clone())
    }
}
