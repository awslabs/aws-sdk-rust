// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateWorkflow`](crate::operation::create_workflow::builders::CreateWorkflowFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(impl Into<String>)`](crate::operation::create_workflow::builders::CreateWorkflowFluentBuilder::name) / [`set_name(Option<String>)`](crate::operation::create_workflow::builders::CreateWorkflowFluentBuilder::set_name): <p>The name of the migration workflow.</p>
    ///   - [`description(impl Into<String>)`](crate::operation::create_workflow::builders::CreateWorkflowFluentBuilder::description) / [`set_description(Option<String>)`](crate::operation::create_workflow::builders::CreateWorkflowFluentBuilder::set_description): <p>The description of the migration workflow.</p>
    ///   - [`template_id(impl Into<String>)`](crate::operation::create_workflow::builders::CreateWorkflowFluentBuilder::template_id) / [`set_template_id(Option<String>)`](crate::operation::create_workflow::builders::CreateWorkflowFluentBuilder::set_template_id): <p>The ID of the template.</p>
    ///   - [`application_configuration_id(impl Into<String>)`](crate::operation::create_workflow::builders::CreateWorkflowFluentBuilder::application_configuration_id) / [`set_application_configuration_id(Option<String>)`](crate::operation::create_workflow::builders::CreateWorkflowFluentBuilder::set_application_configuration_id): <p>The configuration ID of the application configured in Application Discovery Service.</p>
    ///   - [`input_parameters(HashMap<String, StepInput>)`](crate::operation::create_workflow::builders::CreateWorkflowFluentBuilder::input_parameters) / [`set_input_parameters(Option<HashMap<String, StepInput>>)`](crate::operation::create_workflow::builders::CreateWorkflowFluentBuilder::set_input_parameters): <p>The input parameters required to create a migration workflow.</p>
    ///   - [`step_targets(Vec<String>)`](crate::operation::create_workflow::builders::CreateWorkflowFluentBuilder::step_targets) / [`set_step_targets(Option<Vec<String>>)`](crate::operation::create_workflow::builders::CreateWorkflowFluentBuilder::set_step_targets): <p>The servers on which a step will be run.</p>
    ///   - [`tags(HashMap<String, String>)`](crate::operation::create_workflow::builders::CreateWorkflowFluentBuilder::tags) / [`set_tags(Option<HashMap<String, String>>)`](crate::operation::create_workflow::builders::CreateWorkflowFluentBuilder::set_tags): <p>The tags to add on a migration workflow.</p>
    /// - On success, responds with [`CreateWorkflowOutput`](crate::operation::create_workflow::CreateWorkflowOutput) with field(s):
    ///   - [`id(Option<String>)`](crate::operation::create_workflow::CreateWorkflowOutput::id): <p>The ID of the migration workflow.</p>
    ///   - [`arn(Option<String>)`](crate::operation::create_workflow::CreateWorkflowOutput::arn): <p>The Amazon Resource Name (ARN) of the migration workflow.</p>
    ///   - [`name(Option<String>)`](crate::operation::create_workflow::CreateWorkflowOutput::name): <p>The name of the migration workflow.</p>
    ///   - [`description(Option<String>)`](crate::operation::create_workflow::CreateWorkflowOutput::description): <p>The description of the migration workflow.</p>
    ///   - [`template_id(Option<String>)`](crate::operation::create_workflow::CreateWorkflowOutput::template_id): <p>The ID of the template.</p>
    ///   - [`ads_application_configuration_id(Option<String>)`](crate::operation::create_workflow::CreateWorkflowOutput::ads_application_configuration_id): <p>The configuration ID of the application configured in Application Discovery Service.</p>
    ///   - [`workflow_inputs(Option<HashMap<String, StepInput>>)`](crate::operation::create_workflow::CreateWorkflowOutput::workflow_inputs): <p>The inputs for creating a migration workflow.</p>
    ///   - [`step_targets(Option<Vec<String>>)`](crate::operation::create_workflow::CreateWorkflowOutput::step_targets): <p>The servers on which a step will be run.</p>
    ///   - [`status(Option<MigrationWorkflowStatusEnum>)`](crate::operation::create_workflow::CreateWorkflowOutput::status): <p>The status of the migration workflow.</p>
    ///   - [`creation_time(Option<DateTime>)`](crate::operation::create_workflow::CreateWorkflowOutput::creation_time): <p>The time at which the migration workflow was created.</p>
    ///   - [`tags(Option<HashMap<String, String>>)`](crate::operation::create_workflow::CreateWorkflowOutput::tags): <p>The tags to add on a migration workflow.</p>
    /// - On failure, responds with [`SdkError<CreateWorkflowError>`](crate::operation::create_workflow::CreateWorkflowError)
    pub fn create_workflow(
        &self,
    ) -> crate::operation::create_workflow::builders::CreateWorkflowFluentBuilder {
        crate::operation::create_workflow::builders::CreateWorkflowFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
