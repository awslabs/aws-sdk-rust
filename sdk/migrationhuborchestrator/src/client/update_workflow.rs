// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateWorkflow`](crate::client::fluent_builders::UpdateWorkflow) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`id(impl Into<String>)`](crate::client::fluent_builders::UpdateWorkflow::id) / [`set_id(Option<String>)`](crate::client::fluent_builders::UpdateWorkflow::set_id): <p>The ID of the migration workflow.</p>
    ///   - [`name(impl Into<String>)`](crate::client::fluent_builders::UpdateWorkflow::name) / [`set_name(Option<String>)`](crate::client::fluent_builders::UpdateWorkflow::set_name): <p>The name of the migration workflow.</p>
    ///   - [`description(impl Into<String>)`](crate::client::fluent_builders::UpdateWorkflow::description) / [`set_description(Option<String>)`](crate::client::fluent_builders::UpdateWorkflow::set_description): <p>The description of the migration workflow.</p>
    ///   - [`input_parameters(HashMap<String, StepInput>)`](crate::client::fluent_builders::UpdateWorkflow::input_parameters) / [`set_input_parameters(Option<HashMap<String, StepInput>>)`](crate::client::fluent_builders::UpdateWorkflow::set_input_parameters): <p>The input parameters required to update a migration workflow.</p>
    ///   - [`step_targets(Vec<String>)`](crate::client::fluent_builders::UpdateWorkflow::step_targets) / [`set_step_targets(Option<Vec<String>>)`](crate::client::fluent_builders::UpdateWorkflow::set_step_targets): <p>The servers on which a step will be run.</p>
    /// - On success, responds with [`UpdateWorkflowOutput`](crate::output::UpdateWorkflowOutput) with field(s):
    ///   - [`id(Option<String>)`](crate::output::UpdateWorkflowOutput::id): <p>The ID of the migration workflow.</p>
    ///   - [`arn(Option<String>)`](crate::output::UpdateWorkflowOutput::arn): <p>The Amazon Resource Name (ARN) of the migration workflow.</p>
    ///   - [`name(Option<String>)`](crate::output::UpdateWorkflowOutput::name): <p>The name of the migration workflow.</p>
    ///   - [`description(Option<String>)`](crate::output::UpdateWorkflowOutput::description): <p>The description of the migration workflow.</p>
    ///   - [`template_id(Option<String>)`](crate::output::UpdateWorkflowOutput::template_id): <p>The ID of the template.</p>
    ///   - [`ads_application_configuration_id(Option<String>)`](crate::output::UpdateWorkflowOutput::ads_application_configuration_id): <p>The ID of the application configured in Application Discovery Service.</p>
    ///   - [`workflow_inputs(Option<HashMap<String, StepInput>>)`](crate::output::UpdateWorkflowOutput::workflow_inputs): <p>The inputs required to update a migration workflow.</p>
    ///   - [`step_targets(Option<Vec<String>>)`](crate::output::UpdateWorkflowOutput::step_targets): <p>The servers on which a step will be run.</p>
    ///   - [`status(Option<MigrationWorkflowStatusEnum>)`](crate::output::UpdateWorkflowOutput::status): <p>The status of the migration workflow.</p>
    ///   - [`creation_time(Option<DateTime>)`](crate::output::UpdateWorkflowOutput::creation_time): <p>The time at which the migration workflow was created.</p>
    ///   - [`last_modified_time(Option<DateTime>)`](crate::output::UpdateWorkflowOutput::last_modified_time): <p>The time at which the migration workflow was last modified.</p>
    ///   - [`tags(Option<HashMap<String, String>>)`](crate::output::UpdateWorkflowOutput::tags): <p>The tags added to the migration workflow.</p>
    /// - On failure, responds with [`SdkError<UpdateWorkflowError>`](crate::error::UpdateWorkflowError)
    pub fn update_workflow(&self) -> crate::client::fluent_builders::UpdateWorkflow {
        crate::client::fluent_builders::UpdateWorkflow::new(self.handle.clone())
    }
}
