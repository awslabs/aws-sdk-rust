// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GetWorkflowStepInput {
    /// <p>The ID of the migration workflow.</p>
    #[doc(hidden)]
    pub workflow_id: std::option::Option<std::string::String>,
    /// <p>desThe ID of the step group.</p>
    #[doc(hidden)]
    pub step_group_id: std::option::Option<std::string::String>,
    /// <p>The ID of the step.</p>
    #[doc(hidden)]
    pub id: std::option::Option<std::string::String>,
}
impl GetWorkflowStepInput {
    /// <p>The ID of the migration workflow.</p>
    pub fn workflow_id(&self) -> std::option::Option<&str> {
        self.workflow_id.as_deref()
    }
    /// <p>desThe ID of the step group.</p>
    pub fn step_group_id(&self) -> std::option::Option<&str> {
        self.step_group_id.as_deref()
    }
    /// <p>The ID of the step.</p>
    pub fn id(&self) -> std::option::Option<&str> {
        self.id.as_deref()
    }
}
impl GetWorkflowStepInput {
    /// Creates a new builder-style object to manufacture [`GetWorkflowStepInput`](crate::operation::get_workflow_step::GetWorkflowStepInput).
    pub fn builder() -> crate::operation::get_workflow_step::builders::GetWorkflowStepInputBuilder {
        crate::operation::get_workflow_step::builders::GetWorkflowStepInputBuilder::default()
    }
}

/// A builder for [`GetWorkflowStepInput`](crate::operation::get_workflow_step::GetWorkflowStepInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct GetWorkflowStepInputBuilder {
    pub(crate) workflow_id: std::option::Option<std::string::String>,
    pub(crate) step_group_id: std::option::Option<std::string::String>,
    pub(crate) id: std::option::Option<std::string::String>,
}
impl GetWorkflowStepInputBuilder {
    /// <p>The ID of the migration workflow.</p>
    pub fn workflow_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.workflow_id = Some(input.into());
        self
    }
    /// <p>The ID of the migration workflow.</p>
    pub fn set_workflow_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.workflow_id = input;
        self
    }
    /// <p>desThe ID of the step group.</p>
    pub fn step_group_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.step_group_id = Some(input.into());
        self
    }
    /// <p>desThe ID of the step group.</p>
    pub fn set_step_group_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.step_group_id = input;
        self
    }
    /// <p>The ID of the step.</p>
    pub fn id(mut self, input: impl Into<std::string::String>) -> Self {
        self.id = Some(input.into());
        self
    }
    /// <p>The ID of the step.</p>
    pub fn set_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.id = input;
        self
    }
    /// Consumes the builder and constructs a [`GetWorkflowStepInput`](crate::operation::get_workflow_step::GetWorkflowStepInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::get_workflow_step::GetWorkflowStepInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(crate::operation::get_workflow_step::GetWorkflowStepInput {
            workflow_id: self.workflow_id,
            step_group_id: self.step_group_id,
            id: self.id,
        })
    }
}
