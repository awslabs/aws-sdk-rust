// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The summary of a migration workflow.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct MigrationWorkflowSummary {
    /// <p>The ID of the migration workflow.</p>
    #[doc(hidden)]
    pub id: std::option::Option<std::string::String>,
    /// <p>The name of the migration workflow.</p>
    #[doc(hidden)]
    pub name: std::option::Option<std::string::String>,
    /// <p>The ID of the template.</p>
    #[doc(hidden)]
    pub template_id: std::option::Option<std::string::String>,
    /// <p>The name of the application configured in Application Discovery Service.</p>
    #[doc(hidden)]
    pub ads_application_configuration_name: std::option::Option<std::string::String>,
    /// <p>The status of the migration workflow.</p>
    #[doc(hidden)]
    pub status: std::option::Option<crate::types::MigrationWorkflowStatusEnum>,
    /// <p>The time at which the migration workflow was created.</p>
    #[doc(hidden)]
    pub creation_time: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>The time at which the migration workflow ended.</p>
    #[doc(hidden)]
    pub end_time: std::option::Option<aws_smithy_types::DateTime>,
    /// <p>The status message of the migration workflow.</p>
    #[doc(hidden)]
    pub status_message: std::option::Option<std::string::String>,
    /// <p>The steps completed in the migration workflow.</p>
    #[doc(hidden)]
    pub completed_steps: std::option::Option<i32>,
    /// <p>All the steps in a migration workflow.</p>
    #[doc(hidden)]
    pub total_steps: std::option::Option<i32>,
}
impl MigrationWorkflowSummary {
    /// <p>The ID of the migration workflow.</p>
    pub fn id(&self) -> std::option::Option<&str> {
        self.id.as_deref()
    }
    /// <p>The name of the migration workflow.</p>
    pub fn name(&self) -> std::option::Option<&str> {
        self.name.as_deref()
    }
    /// <p>The ID of the template.</p>
    pub fn template_id(&self) -> std::option::Option<&str> {
        self.template_id.as_deref()
    }
    /// <p>The name of the application configured in Application Discovery Service.</p>
    pub fn ads_application_configuration_name(&self) -> std::option::Option<&str> {
        self.ads_application_configuration_name.as_deref()
    }
    /// <p>The status of the migration workflow.</p>
    pub fn status(&self) -> std::option::Option<&crate::types::MigrationWorkflowStatusEnum> {
        self.status.as_ref()
    }
    /// <p>The time at which the migration workflow was created.</p>
    pub fn creation_time(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.creation_time.as_ref()
    }
    /// <p>The time at which the migration workflow ended.</p>
    pub fn end_time(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.end_time.as_ref()
    }
    /// <p>The status message of the migration workflow.</p>
    pub fn status_message(&self) -> std::option::Option<&str> {
        self.status_message.as_deref()
    }
    /// <p>The steps completed in the migration workflow.</p>
    pub fn completed_steps(&self) -> std::option::Option<i32> {
        self.completed_steps
    }
    /// <p>All the steps in a migration workflow.</p>
    pub fn total_steps(&self) -> std::option::Option<i32> {
        self.total_steps
    }
}
impl MigrationWorkflowSummary {
    /// Creates a new builder-style object to manufacture [`MigrationWorkflowSummary`](crate::types::MigrationWorkflowSummary).
    pub fn builder() -> crate::types::builders::MigrationWorkflowSummaryBuilder {
        crate::types::builders::MigrationWorkflowSummaryBuilder::default()
    }
}

/// A builder for [`MigrationWorkflowSummary`](crate::types::MigrationWorkflowSummary).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct MigrationWorkflowSummaryBuilder {
    pub(crate) id: std::option::Option<std::string::String>,
    pub(crate) name: std::option::Option<std::string::String>,
    pub(crate) template_id: std::option::Option<std::string::String>,
    pub(crate) ads_application_configuration_name: std::option::Option<std::string::String>,
    pub(crate) status: std::option::Option<crate::types::MigrationWorkflowStatusEnum>,
    pub(crate) creation_time: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) end_time: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) status_message: std::option::Option<std::string::String>,
    pub(crate) completed_steps: std::option::Option<i32>,
    pub(crate) total_steps: std::option::Option<i32>,
}
impl MigrationWorkflowSummaryBuilder {
    /// <p>The ID of the migration workflow.</p>
    pub fn id(mut self, input: impl Into<std::string::String>) -> Self {
        self.id = Some(input.into());
        self
    }
    /// <p>The ID of the migration workflow.</p>
    pub fn set_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.id = input;
        self
    }
    /// <p>The name of the migration workflow.</p>
    pub fn name(mut self, input: impl Into<std::string::String>) -> Self {
        self.name = Some(input.into());
        self
    }
    /// <p>The name of the migration workflow.</p>
    pub fn set_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>The ID of the template.</p>
    pub fn template_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.template_id = Some(input.into());
        self
    }
    /// <p>The ID of the template.</p>
    pub fn set_template_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.template_id = input;
        self
    }
    /// <p>The name of the application configured in Application Discovery Service.</p>
    pub fn ads_application_configuration_name(
        mut self,
        input: impl Into<std::string::String>,
    ) -> Self {
        self.ads_application_configuration_name = Some(input.into());
        self
    }
    /// <p>The name of the application configured in Application Discovery Service.</p>
    pub fn set_ads_application_configuration_name(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.ads_application_configuration_name = input;
        self
    }
    /// <p>The status of the migration workflow.</p>
    pub fn status(mut self, input: crate::types::MigrationWorkflowStatusEnum) -> Self {
        self.status = Some(input);
        self
    }
    /// <p>The status of the migration workflow.</p>
    pub fn set_status(
        mut self,
        input: std::option::Option<crate::types::MigrationWorkflowStatusEnum>,
    ) -> Self {
        self.status = input;
        self
    }
    /// <p>The time at which the migration workflow was created.</p>
    pub fn creation_time(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.creation_time = Some(input);
        self
    }
    /// <p>The time at which the migration workflow was created.</p>
    pub fn set_creation_time(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.creation_time = input;
        self
    }
    /// <p>The time at which the migration workflow ended.</p>
    pub fn end_time(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.end_time = Some(input);
        self
    }
    /// <p>The time at which the migration workflow ended.</p>
    pub fn set_end_time(mut self, input: std::option::Option<aws_smithy_types::DateTime>) -> Self {
        self.end_time = input;
        self
    }
    /// <p>The status message of the migration workflow.</p>
    pub fn status_message(mut self, input: impl Into<std::string::String>) -> Self {
        self.status_message = Some(input.into());
        self
    }
    /// <p>The status message of the migration workflow.</p>
    pub fn set_status_message(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.status_message = input;
        self
    }
    /// <p>The steps completed in the migration workflow.</p>
    pub fn completed_steps(mut self, input: i32) -> Self {
        self.completed_steps = Some(input);
        self
    }
    /// <p>The steps completed in the migration workflow.</p>
    pub fn set_completed_steps(mut self, input: std::option::Option<i32>) -> Self {
        self.completed_steps = input;
        self
    }
    /// <p>All the steps in a migration workflow.</p>
    pub fn total_steps(mut self, input: i32) -> Self {
        self.total_steps = Some(input);
        self
    }
    /// <p>All the steps in a migration workflow.</p>
    pub fn set_total_steps(mut self, input: std::option::Option<i32>) -> Self {
        self.total_steps = input;
        self
    }
    /// Consumes the builder and constructs a [`MigrationWorkflowSummary`](crate::types::MigrationWorkflowSummary).
    pub fn build(self) -> crate::types::MigrationWorkflowSummary {
        crate::types::MigrationWorkflowSummary {
            id: self.id,
            name: self.name,
            template_id: self.template_id,
            ads_application_configuration_name: self.ads_application_configuration_name,
            status: self.status,
            creation_time: self.creation_time,
            end_time: self.end_time,
            status_message: self.status_message,
            completed_steps: self.completed_steps,
            total_steps: self.total_steps,
        }
    }
}
