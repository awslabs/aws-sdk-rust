// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) mod shape_get_clip;

pub fn parse_http_error_metadata(
    response: &http::Response<bytes::Bytes>,
) -> Result<
    aws_smithy_types::error::metadata::Builder,
    aws_smithy_json::deserialize::error::DeserializeError,
> {
    crate::json_errors::parse_error_metadata(response.body(), response.headers())
}

pub(crate) mod shape_get_dash_streaming_session_url;

pub(crate) mod shape_get_hls_streaming_session_url;

pub(crate) mod shape_get_images;

pub(crate) mod shape_get_media_for_fragment_list;

pub(crate) mod shape_list_fragments;

pub(crate) fn or_empty_doc(data: &[u8]) -> &[u8] {
    if data.is_empty() {
        b"{}"
    } else {
        data
    }
}

pub(crate) mod shape_client_limit_exceeded_exception;

pub(crate) mod shape_get_clip_input;

pub(crate) mod shape_get_clip_output;

pub(crate) mod shape_get_dash_streaming_session_url_input;

pub(crate) mod shape_get_hls_streaming_session_url_input;

pub(crate) mod shape_get_images_input;

pub(crate) mod shape_get_media_for_fragment_list_input;

pub(crate) mod shape_get_media_for_fragment_list_output;

pub(crate) mod shape_invalid_argument_exception;

pub(crate) mod shape_invalid_codec_private_data_exception;

pub(crate) mod shape_invalid_media_frame_exception;

pub(crate) mod shape_list_fragments_input;

pub(crate) mod shape_missing_codec_private_data_exception;

pub(crate) mod shape_no_data_retention_exception;

pub(crate) mod shape_not_authorized_exception;

pub(crate) mod shape_resource_not_found_exception;

pub(crate) mod shape_unsupported_stream_media_type_exception;

pub(crate) mod shape_clip_fragment_selector;

pub(crate) mod shape_dash_fragment_selector;

pub(crate) mod shape_fragment_list;

pub(crate) mod shape_fragment_selector;

pub(crate) mod shape_hls_fragment_selector;

pub(crate) mod shape_images;

pub(crate) mod shape_clip_timestamp_range;

pub(crate) mod shape_dash_timestamp_range;

pub(crate) mod shape_fragment;

pub(crate) mod shape_hls_timestamp_range;

pub(crate) mod shape_image;

pub(crate) mod shape_timestamp_range;
