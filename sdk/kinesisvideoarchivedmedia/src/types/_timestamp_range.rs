// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The range of timestamps for which to return fragments.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct TimestampRange {
    /// <p>The starting timestamp in the range of timestamps for which to return fragments.</p>
    pub start_timestamp: ::aws_smithy_types::DateTime,
    /// <p>The ending timestamp in the range of timestamps for which to return fragments.</p>
    pub end_timestamp: ::aws_smithy_types::DateTime,
}
impl TimestampRange {
    /// <p>The starting timestamp in the range of timestamps for which to return fragments.</p>
    pub fn start_timestamp(&self) -> &::aws_smithy_types::DateTime {
        &self.start_timestamp
    }
    /// <p>The ending timestamp in the range of timestamps for which to return fragments.</p>
    pub fn end_timestamp(&self) -> &::aws_smithy_types::DateTime {
        &self.end_timestamp
    }
}
impl TimestampRange {
    /// Creates a new builder-style object to manufacture [`TimestampRange`](crate::types::TimestampRange).
    pub fn builder() -> crate::types::builders::TimestampRangeBuilder {
        crate::types::builders::TimestampRangeBuilder::default()
    }
}

/// A builder for [`TimestampRange`](crate::types::TimestampRange).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct TimestampRangeBuilder {
    pub(crate) start_timestamp: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) end_timestamp: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl TimestampRangeBuilder {
    /// <p>The starting timestamp in the range of timestamps for which to return fragments.</p>
    /// This field is required.
    pub fn start_timestamp(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.start_timestamp = ::std::option::Option::Some(input);
        self
    }
    /// <p>The starting timestamp in the range of timestamps for which to return fragments.</p>
    pub fn set_start_timestamp(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.start_timestamp = input;
        self
    }
    /// <p>The starting timestamp in the range of timestamps for which to return fragments.</p>
    pub fn get_start_timestamp(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.start_timestamp
    }
    /// <p>The ending timestamp in the range of timestamps for which to return fragments.</p>
    /// This field is required.
    pub fn end_timestamp(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.end_timestamp = ::std::option::Option::Some(input);
        self
    }
    /// <p>The ending timestamp in the range of timestamps for which to return fragments.</p>
    pub fn set_end_timestamp(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.end_timestamp = input;
        self
    }
    /// <p>The ending timestamp in the range of timestamps for which to return fragments.</p>
    pub fn get_end_timestamp(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.end_timestamp
    }
    /// Consumes the builder and constructs a [`TimestampRange`](crate::types::TimestampRange).
    /// This method will fail if any of the following fields are not set:
    /// - [`start_timestamp`](crate::types::builders::TimestampRangeBuilder::start_timestamp)
    /// - [`end_timestamp`](crate::types::builders::TimestampRangeBuilder::end_timestamp)
    pub fn build(self) -> ::std::result::Result<crate::types::TimestampRange, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::TimestampRange {
            start_timestamp: self.start_timestamp.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "start_timestamp",
                    "start_timestamp was not specified but it is required when building TimestampRange",
                )
            })?,
            end_timestamp: self.end_timestamp.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "end_timestamp",
                    "end_timestamp was not specified but it is required when building TimestampRange",
                )
            })?,
        })
    }
}
