// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_get_images_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::get_images::GetImagesInput,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.end_timestamp {
        object
            .key("EndTimestamp")
            .date_time(var_1, ::aws_smithy_types::date_time::Format::EpochSeconds)?;
    }
    if let Some(var_2) = &input.format {
        object.key("Format").string(var_2.as_str());
    }
    if let Some(var_3) = &input.format_config {
        #[allow(unused_mut)]
        let mut object_4 = object.key("FormatConfig").start_object();
        for (key_5, value_6) in var_3 {
            {
                object_4.key(key_5.as_str()).string(value_6.as_str());
            }
        }
        object_4.finish();
    }
    if let Some(var_7) = &input.height_pixels {
        object.key("HeightPixels").number(
            #[allow(clippy::useless_conversion)]
            ::aws_smithy_types::Number::NegInt((*var_7).into()),
        );
    }
    if let Some(var_8) = &input.image_selector_type {
        object.key("ImageSelectorType").string(var_8.as_str());
    }
    if let Some(var_9) = &input.max_results {
        object.key("MaxResults").number(
            #[allow(clippy::useless_conversion)]
            ::aws_smithy_types::Number::NegInt((*var_9).into()),
        );
    }
    if let Some(var_10) = &input.next_token {
        object.key("NextToken").string(var_10.as_str());
    }
    if let Some(var_11) = &input.sampling_interval {
        object.key("SamplingInterval").number(
            #[allow(clippy::useless_conversion)]
            ::aws_smithy_types::Number::NegInt((*var_11).into()),
        );
    }
    if let Some(var_12) = &input.start_timestamp {
        object
            .key("StartTimestamp")
            .date_time(var_12, ::aws_smithy_types::date_time::Format::EpochSeconds)?;
    }
    if let Some(var_13) = &input.stream_arn {
        object.key("StreamARN").string(var_13.as_str());
    }
    if let Some(var_14) = &input.stream_name {
        object.key("StreamName").string(var_14.as_str());
    }
    if let Some(var_15) = &input.width_pixels {
        object.key("WidthPixels").number(
            #[allow(clippy::useless_conversion)]
            ::aws_smithy_types::Number::NegInt((*var_15).into()),
        );
    }
    Ok(())
}
