// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_get_hls_streaming_session_url_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::get_hls_streaming_session_url::GetHlsStreamingSessionUrlInput,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.container_format {
        object.key("ContainerFormat").string(var_1.as_str());
    }
    if let Some(var_2) = &input.discontinuity_mode {
        object.key("DiscontinuityMode").string(var_2.as_str());
    }
    if let Some(var_3) = &input.display_fragment_timestamp {
        object.key("DisplayFragmentTimestamp").string(var_3.as_str());
    }
    if let Some(var_4) = &input.expires {
        object.key("Expires").number(
            #[allow(clippy::useless_conversion)]
            ::aws_smithy_types::Number::NegInt((*var_4).into()),
        );
    }
    if let Some(var_5) = &input.hls_fragment_selector {
        #[allow(unused_mut)]
        let mut object_6 = object.key("HLSFragmentSelector").start_object();
        crate::protocol_serde::shape_hls_fragment_selector::ser_hls_fragment_selector(&mut object_6, var_5)?;
        object_6.finish();
    }
    if let Some(var_7) = &input.max_media_playlist_fragment_results {
        object.key("MaxMediaPlaylistFragmentResults").number(
            #[allow(clippy::useless_conversion)]
            ::aws_smithy_types::Number::NegInt((*var_7).into()),
        );
    }
    if let Some(var_8) = &input.playback_mode {
        object.key("PlaybackMode").string(var_8.as_str());
    }
    if let Some(var_9) = &input.stream_arn {
        object.key("StreamARN").string(var_9.as_str());
    }
    if let Some(var_10) = &input.stream_name {
        object.key("StreamName").string(var_10.as_str());
    }
    Ok(())
}
