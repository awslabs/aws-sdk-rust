// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_get_dash_streaming_session_url_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::get_dash_streaming_session_url::GetDashStreamingSessionUrlInput,
) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    if let Some(var_1) = &input.dash_fragment_selector {
        #[allow(unused_mut)]
        let mut object_2 = object.key("DASHFragmentSelector").start_object();
        crate::protocol_serde::shape_dash_fragment_selector::ser_dash_fragment_selector(
            &mut object_2,
            var_1,
        )?;
        object_2.finish();
    }
    if let Some(var_3) = &input.display_fragment_number {
        object.key("DisplayFragmentNumber").string(var_3.as_str());
    }
    if let Some(var_4) = &input.display_fragment_timestamp {
        object
            .key("DisplayFragmentTimestamp")
            .string(var_4.as_str());
    }
    if let Some(var_5) = &input.expires {
        object.key("Expires").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_5).into()),
        );
    }
    if let Some(var_6) = &input.max_manifest_fragment_results {
        object.key("MaxManifestFragmentResults").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_6).into()),
        );
    }
    if let Some(var_7) = &input.playback_mode {
        object.key("PlaybackMode").string(var_7.as_str());
    }
    if let Some(var_8) = &input.stream_arn {
        object.key("StreamARN").string(var_8.as_str());
    }
    if let Some(var_9) = &input.stream_name {
        object.key("StreamName").string(var_9.as_str());
    }
    Ok(())
}
