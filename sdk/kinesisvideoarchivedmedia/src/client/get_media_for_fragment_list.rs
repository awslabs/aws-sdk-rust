// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetMediaForFragmentList`](crate::operation::get_media_for_fragment_list::builders::GetMediaForFragmentListFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`stream_name(impl Into<String>)`](crate::operation::get_media_for_fragment_list::builders::GetMediaForFragmentListFluentBuilder::stream_name) / [`set_stream_name(Option<String>)`](crate::operation::get_media_for_fragment_list::builders::GetMediaForFragmentListFluentBuilder::set_stream_name): <p>The name of the stream from which to retrieve fragment media. Specify either this parameter or the <code>StreamARN</code> parameter.</p>
    ///   - [`stream_arn(impl Into<String>)`](crate::operation::get_media_for_fragment_list::builders::GetMediaForFragmentListFluentBuilder::stream_arn) / [`set_stream_arn(Option<String>)`](crate::operation::get_media_for_fragment_list::builders::GetMediaForFragmentListFluentBuilder::set_stream_arn): <p>The Amazon Resource Name (ARN) of the stream from which to retrieve fragment media. Specify either this parameter or the <code>StreamName</code> parameter.</p>
    ///   - [`fragments(Vec<String>)`](crate::operation::get_media_for_fragment_list::builders::GetMediaForFragmentListFluentBuilder::fragments) / [`set_fragments(Option<Vec<String>>)`](crate::operation::get_media_for_fragment_list::builders::GetMediaForFragmentListFluentBuilder::set_fragments): <p>A list of the numbers of fragments for which to retrieve media. You retrieve these values with <code>ListFragments</code>.</p>
    /// - On success, responds with [`GetMediaForFragmentListOutput`](crate::operation::get_media_for_fragment_list::GetMediaForFragmentListOutput) with field(s):
    ///   - [`content_type(Option<String>)`](crate::operation::get_media_for_fragment_list::GetMediaForFragmentListOutput::content_type): <p>The content type of the requested media.</p>
    ///   - [`payload(ByteStream)`](crate::operation::get_media_for_fragment_list::GetMediaForFragmentListOutput::payload): <p>The payload that Kinesis Video Streams returns is a sequence of chunks from the specified stream. For information about the chunks, see <a href="http://docs.aws.amazon.com/kinesisvideostreams/latest/dg/API_dataplane_PutMedia.html">PutMedia</a>. The chunks that Kinesis Video Streams returns in the <code>GetMediaForFragmentList</code> call also include the following additional Matroska (MKV) tags: </p>  <ul>   <li> <p>AWS_KINESISVIDEO_FRAGMENT_NUMBER - Fragment number returned in the chunk.</p> </li>   <li> <p>AWS_KINESISVIDEO_SERVER_SIDE_TIMESTAMP - Server-side timestamp of the fragment.</p> </li>   <li> <p>AWS_KINESISVIDEO_PRODUCER_SIDE_TIMESTAMP - Producer-side timestamp of the fragment.</p> </li>  </ul>  <p>The following tags will be included if an exception occurs:</p>  <ul>   <li> <p>AWS_KINESISVIDEO_FRAGMENT_NUMBER - The number of the fragment that threw the exception</p> </li>   <li> <p>AWS_KINESISVIDEO_EXCEPTION_ERROR_CODE - The integer code of the exception</p> </li>   <li> <p>AWS_KINESISVIDEO_EXCEPTION_MESSAGE - A text description of the exception</p> </li>  </ul>
    /// - On failure, responds with [`SdkError<GetMediaForFragmentListError>`](crate::operation::get_media_for_fragment_list::GetMediaForFragmentListError)
    pub fn get_media_for_fragment_list(
        &self,
    ) -> crate::operation::get_media_for_fragment_list::builders::GetMediaForFragmentListFluentBuilder
    {
        crate::operation::get_media_for_fragment_list::builders::GetMediaForFragmentListFluentBuilder::new(self.handle.clone())
    }
}
