// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GetHlsStreamingSessionUrlOutput {
    /// <p>The URL (containing the session token) that a media player can use to retrieve the HLS master playlist.</p>
    #[doc(hidden)]
    pub hls_streaming_session_url: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl GetHlsStreamingSessionUrlOutput {
    /// <p>The URL (containing the session token) that a media player can use to retrieve the HLS master playlist.</p>
    pub fn hls_streaming_session_url(&self) -> std::option::Option<&str> {
        self.hls_streaming_session_url.as_deref()
    }
}
impl aws_http::request_id::RequestId for GetHlsStreamingSessionUrlOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl GetHlsStreamingSessionUrlOutput {
    /// Creates a new builder-style object to manufacture [`GetHlsStreamingSessionUrlOutput`](crate::operation::get_hls_streaming_session_url::GetHlsStreamingSessionUrlOutput).
    pub fn builder() -> crate::operation::get_hls_streaming_session_url::builders::GetHlsStreamingSessionUrlOutputBuilder{
        crate::operation::get_hls_streaming_session_url::builders::GetHlsStreamingSessionUrlOutputBuilder::default()
    }
}

/// A builder for [`GetHlsStreamingSessionUrlOutput`](crate::operation::get_hls_streaming_session_url::GetHlsStreamingSessionUrlOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct GetHlsStreamingSessionUrlOutputBuilder {
    pub(crate) hls_streaming_session_url: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl GetHlsStreamingSessionUrlOutputBuilder {
    /// <p>The URL (containing the session token) that a media player can use to retrieve the HLS master playlist.</p>
    pub fn hls_streaming_session_url(mut self, input: impl Into<std::string::String>) -> Self {
        self.hls_streaming_session_url = Some(input.into());
        self
    }
    /// <p>The URL (containing the session token) that a media player can use to retrieve the HLS master playlist.</p>
    pub fn set_hls_streaming_session_url(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.hls_streaming_session_url = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`GetHlsStreamingSessionUrlOutput`](crate::operation::get_hls_streaming_session_url::GetHlsStreamingSessionUrlOutput).
    pub fn build(
        self,
    ) -> crate::operation::get_hls_streaming_session_url::GetHlsStreamingSessionUrlOutput {
        crate::operation::get_hls_streaming_session_url::GetHlsStreamingSessionUrlOutput {
            hls_streaming_session_url: self.hls_streaming_session_url,
            _request_id: self._request_id,
        }
    }
}
