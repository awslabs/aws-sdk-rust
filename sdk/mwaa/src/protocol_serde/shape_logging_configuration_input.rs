// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_logging_configuration_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::types::LoggingConfigurationInput,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.dag_processing_logs {
        #[allow(unused_mut)]
        let mut object_2 = object.key("DagProcessingLogs").start_object();
        crate::protocol_serde::shape_module_logging_configuration_input::ser_module_logging_configuration_input(&mut object_2, var_1)?;
        object_2.finish();
    }
    if let Some(var_3) = &input.scheduler_logs {
        #[allow(unused_mut)]
        let mut object_4 = object.key("SchedulerLogs").start_object();
        crate::protocol_serde::shape_module_logging_configuration_input::ser_module_logging_configuration_input(&mut object_4, var_3)?;
        object_4.finish();
    }
    if let Some(var_5) = &input.webserver_logs {
        #[allow(unused_mut)]
        let mut object_6 = object.key("WebserverLogs").start_object();
        crate::protocol_serde::shape_module_logging_configuration_input::ser_module_logging_configuration_input(&mut object_6, var_5)?;
        object_6.finish();
    }
    if let Some(var_7) = &input.worker_logs {
        #[allow(unused_mut)]
        let mut object_8 = object.key("WorkerLogs").start_object();
        crate::protocol_serde::shape_module_logging_configuration_input::ser_module_logging_configuration_input(&mut object_8, var_7)?;
        object_8.finish();
    }
    if let Some(var_9) = &input.task_logs {
        #[allow(unused_mut)]
        let mut object_10 = object.key("TaskLogs").start_object();
        crate::protocol_serde::shape_module_logging_configuration_input::ser_module_logging_configuration_input(&mut object_10, var_9)?;
        object_10.finish();
    }
    Ok(())
}
