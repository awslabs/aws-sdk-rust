// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetAppAuthorization`](crate::operation::get_app_authorization::builders::GetAppAuthorizationFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`app_bundle_identifier(impl Into<String>)`](crate::operation::get_app_authorization::builders::GetAppAuthorizationFluentBuilder::app_bundle_identifier) / [`set_app_bundle_identifier(Option<String>)`](crate::operation::get_app_authorization::builders::GetAppAuthorizationFluentBuilder::set_app_bundle_identifier):<br>required: **true**<br><p>The Amazon Resource Name (ARN) or Universal Unique Identifier (UUID) of the app bundle to use for the request.</p><br>
    ///   - [`app_authorization_identifier(impl Into<String>)`](crate::operation::get_app_authorization::builders::GetAppAuthorizationFluentBuilder::app_authorization_identifier) / [`set_app_authorization_identifier(Option<String>)`](crate::operation::get_app_authorization::builders::GetAppAuthorizationFluentBuilder::set_app_authorization_identifier):<br>required: **true**<br><p>The Amazon Resource Name (ARN) or Universal Unique Identifier (UUID) of the app authorization to use for the request.</p><br>
    /// - On success, responds with [`GetAppAuthorizationOutput`](crate::operation::get_app_authorization::GetAppAuthorizationOutput) with field(s):
    ///   - [`app_authorization(Option<AppAuthorization>)`](crate::operation::get_app_authorization::GetAppAuthorizationOutput::app_authorization): <p>Contains information about an app authorization.</p>
    /// - On failure, responds with [`SdkError<GetAppAuthorizationError>`](crate::operation::get_app_authorization::GetAppAuthorizationError)
    pub fn get_app_authorization(&self) -> crate::operation::get_app_authorization::builders::GetAppAuthorizationFluentBuilder {
        crate::operation::get_app_authorization::builders::GetAppAuthorizationFluentBuilder::new(self.handle.clone())
    }
}
