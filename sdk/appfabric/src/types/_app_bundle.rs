// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains information about an app bundle.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AppBundle {
    /// <p>The Amazon Resource Name (ARN) of the app bundle.</p>
    pub arn: ::std::string::String,
    /// <p>The Amazon Resource Name (ARN) of the Key Management Service (KMS) key used to encrypt the application data.</p>
    pub customer_managed_key_arn: ::std::option::Option<::std::string::String>,
}
impl AppBundle {
    /// <p>The Amazon Resource Name (ARN) of the app bundle.</p>
    pub fn arn(&self) -> &str {
        use std::ops::Deref;
        self.arn.deref()
    }
    /// <p>The Amazon Resource Name (ARN) of the Key Management Service (KMS) key used to encrypt the application data.</p>
    pub fn customer_managed_key_arn(&self) -> ::std::option::Option<&str> {
        self.customer_managed_key_arn.as_deref()
    }
}
impl AppBundle {
    /// Creates a new builder-style object to manufacture [`AppBundle`](crate::types::AppBundle).
    pub fn builder() -> crate::types::builders::AppBundleBuilder {
        crate::types::builders::AppBundleBuilder::default()
    }
}

/// A builder for [`AppBundle`](crate::types::AppBundle).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct AppBundleBuilder {
    pub(crate) arn: ::std::option::Option<::std::string::String>,
    pub(crate) customer_managed_key_arn: ::std::option::Option<::std::string::String>,
}
impl AppBundleBuilder {
    /// <p>The Amazon Resource Name (ARN) of the app bundle.</p>
    /// This field is required.
    pub fn arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the app bundle.</p>
    pub fn set_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the app bundle.</p>
    pub fn get_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.arn
    }
    /// <p>The Amazon Resource Name (ARN) of the Key Management Service (KMS) key used to encrypt the application data.</p>
    pub fn customer_managed_key_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.customer_managed_key_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the Key Management Service (KMS) key used to encrypt the application data.</p>
    pub fn set_customer_managed_key_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.customer_managed_key_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the Key Management Service (KMS) key used to encrypt the application data.</p>
    pub fn get_customer_managed_key_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.customer_managed_key_arn
    }
    /// Consumes the builder and constructs a [`AppBundle`](crate::types::AppBundle).
    /// This method will fail if any of the following fields are not set:
    /// - [`arn`](crate::types::builders::AppBundleBuilder::arn)
    pub fn build(self) -> ::std::result::Result<crate::types::AppBundle, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::AppBundle {
            arn: self.arn.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "arn",
                    "arn was not specified but it is required when building AppBundle",
                )
            })?,
            customer_managed_key_arn: self.customer_managed_key_arn,
        })
    }
}
