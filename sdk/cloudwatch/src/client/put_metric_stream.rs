// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`PutMetricStream`](crate::operation::put_metric_stream::builders::PutMetricStreamFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(impl Into<String>)`](crate::operation::put_metric_stream::builders::PutMetricStreamFluentBuilder::name) / [`set_name(Option<String>)`](crate::operation::put_metric_stream::builders::PutMetricStreamFluentBuilder::set_name): <p>If you are creating a new metric stream, this is the name for the new stream. The name must be different than the names of other metric streams in this account and Region.</p>  <p>If you are updating a metric stream, specify the name of that stream here.</p>  <p>Valid characters are A-Z, a-z, 0-9, "-" and "_".</p>
    ///   - [`include_filters(Vec<MetricStreamFilter>)`](crate::operation::put_metric_stream::builders::PutMetricStreamFluentBuilder::include_filters) / [`set_include_filters(Option<Vec<MetricStreamFilter>>)`](crate::operation::put_metric_stream::builders::PutMetricStreamFluentBuilder::set_include_filters): <p>If you specify this parameter, the stream sends only the metrics from the metric namespaces that you specify here.</p>  <p>You cannot include <code>IncludeFilters</code> and <code>ExcludeFilters</code> in the same operation.</p>
    ///   - [`exclude_filters(Vec<MetricStreamFilter>)`](crate::operation::put_metric_stream::builders::PutMetricStreamFluentBuilder::exclude_filters) / [`set_exclude_filters(Option<Vec<MetricStreamFilter>>)`](crate::operation::put_metric_stream::builders::PutMetricStreamFluentBuilder::set_exclude_filters): <p>If you specify this parameter, the stream sends metrics from all metric namespaces except for the namespaces that you specify here.</p>  <p>You cannot include <code>ExcludeFilters</code> and <code>IncludeFilters</code> in the same operation.</p>
    ///   - [`firehose_arn(impl Into<String>)`](crate::operation::put_metric_stream::builders::PutMetricStreamFluentBuilder::firehose_arn) / [`set_firehose_arn(Option<String>)`](crate::operation::put_metric_stream::builders::PutMetricStreamFluentBuilder::set_firehose_arn): <p>The ARN of the Amazon Kinesis Data Firehose delivery stream to use for this metric stream. This Amazon Kinesis Data Firehose delivery stream must already exist and must be in the same account as the metric stream.</p>
    ///   - [`role_arn(impl Into<String>)`](crate::operation::put_metric_stream::builders::PutMetricStreamFluentBuilder::role_arn) / [`set_role_arn(Option<String>)`](crate::operation::put_metric_stream::builders::PutMetricStreamFluentBuilder::set_role_arn): <p>The ARN of an IAM role that this metric stream will use to access Amazon Kinesis Data Firehose resources. This IAM role must already exist and must be in the same account as the metric stream. This IAM role must include the following permissions:</p>  <ul>   <li> <p>firehose:PutRecord</p> </li>   <li> <p>firehose:PutRecordBatch</p> </li>  </ul>
    ///   - [`output_format(MetricStreamOutputFormat)`](crate::operation::put_metric_stream::builders::PutMetricStreamFluentBuilder::output_format) / [`set_output_format(Option<MetricStreamOutputFormat>)`](crate::operation::put_metric_stream::builders::PutMetricStreamFluentBuilder::set_output_format): <p>The output format for the stream. Valid values are <code>json</code> and <code>opentelemetry0.7</code>. For more information about metric stream output formats, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-metric-streams-formats.html"> Metric streams output formats</a>.</p>
    ///   - [`tags(Vec<Tag>)`](crate::operation::put_metric_stream::builders::PutMetricStreamFluentBuilder::tags) / [`set_tags(Option<Vec<Tag>>)`](crate::operation::put_metric_stream::builders::PutMetricStreamFluentBuilder::set_tags): <p>A list of key-value pairs to associate with the metric stream. You can associate as many as 50 tags with a metric stream.</p>  <p>Tags can help you organize and categorize your resources. You can also use them to scope user permissions by granting a user permission to access or change only resources with certain tag values.</p>  <p>You can use this parameter only when you are creating a new metric stream. If you are using this operation to update an existing metric stream, any tags you specify in this parameter are ignored. To change the tags of an existing metric stream, use <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_TagResource.html">TagResource</a> or <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_UntagResource.html">UntagResource</a>.</p>
    ///   - [`statistics_configurations(Vec<MetricStreamStatisticsConfiguration>)`](crate::operation::put_metric_stream::builders::PutMetricStreamFluentBuilder::statistics_configurations) / [`set_statistics_configurations(Option<Vec<MetricStreamStatisticsConfiguration>>)`](crate::operation::put_metric_stream::builders::PutMetricStreamFluentBuilder::set_statistics_configurations): <p>By default, a metric stream always sends the <code>MAX</code>, <code>MIN</code>, <code>SUM</code>, and <code>SAMPLECOUNT</code> statistics for each metric that is streamed. You can use this parameter to have the metric stream also send additional statistics in the stream. This array can have up to 100 members.</p>  <p>For each entry in this array, you specify one or more metrics and the list of additional statistics to stream for those metrics. The additional statistics that you can stream depend on the stream's <code>OutputFormat</code>. If the <code>OutputFormat</code> is <code>json</code>, you can stream any additional statistic that is supported by CloudWatch, listed in <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/Statistics-definitions.html.html"> CloudWatch statistics definitions</a>. If the <code>OutputFormat</code> is <code>opentelemetry0.7</code>, you can stream percentile statistics such as p95, p99.9, and so on.</p>
    ///   - [`include_linked_accounts_metrics(bool)`](crate::operation::put_metric_stream::builders::PutMetricStreamFluentBuilder::include_linked_accounts_metrics) / [`set_include_linked_accounts_metrics(Option<bool>)`](crate::operation::put_metric_stream::builders::PutMetricStreamFluentBuilder::set_include_linked_accounts_metrics): <p>If you are creating a metric stream in a monitoring account, specify <code>true</code> to include metrics from source accounts in the metric stream.</p>
    /// - On success, responds with [`PutMetricStreamOutput`](crate::operation::put_metric_stream::PutMetricStreamOutput) with field(s):
    ///   - [`arn(Option<String>)`](crate::operation::put_metric_stream::PutMetricStreamOutput::arn): <p>The ARN of the metric stream.</p>
    /// - On failure, responds with [`SdkError<PutMetricStreamError>`](crate::operation::put_metric_stream::PutMetricStreamError)
    pub fn put_metric_stream(
        &self,
    ) -> crate::operation::put_metric_stream::builders::PutMetricStreamFluentBuilder {
        crate::operation::put_metric_stream::builders::PutMetricStreamFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
