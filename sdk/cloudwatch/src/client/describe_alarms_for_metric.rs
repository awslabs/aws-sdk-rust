// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeAlarmsForMetric`](crate::client::fluent_builders::DescribeAlarmsForMetric) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`metric_name(impl Into<String>)`](crate::client::fluent_builders::DescribeAlarmsForMetric::metric_name) / [`set_metric_name(Option<String>)`](crate::client::fluent_builders::DescribeAlarmsForMetric::set_metric_name): <p>The name of the metric.</p>
    ///   - [`namespace(impl Into<String>)`](crate::client::fluent_builders::DescribeAlarmsForMetric::namespace) / [`set_namespace(Option<String>)`](crate::client::fluent_builders::DescribeAlarmsForMetric::set_namespace): <p>The namespace of the metric.</p>
    ///   - [`statistic(Statistic)`](crate::client::fluent_builders::DescribeAlarmsForMetric::statistic) / [`set_statistic(Option<Statistic>)`](crate::client::fluent_builders::DescribeAlarmsForMetric::set_statistic): <p>The statistic for the metric, other than percentiles. For percentile statistics, use <code>ExtendedStatistics</code>.</p>
    ///   - [`extended_statistic(impl Into<String>)`](crate::client::fluent_builders::DescribeAlarmsForMetric::extended_statistic) / [`set_extended_statistic(Option<String>)`](crate::client::fluent_builders::DescribeAlarmsForMetric::set_extended_statistic): <p>The percentile statistic for the metric. Specify a value between p0.0 and p100.</p>
    ///   - [`dimensions(Vec<Dimension>)`](crate::client::fluent_builders::DescribeAlarmsForMetric::dimensions) / [`set_dimensions(Option<Vec<Dimension>>)`](crate::client::fluent_builders::DescribeAlarmsForMetric::set_dimensions): <p>The dimensions associated with the metric. If the metric has any associated dimensions, you must specify them in order for the call to succeed.</p>
    ///   - [`period(i32)`](crate::client::fluent_builders::DescribeAlarmsForMetric::period) / [`set_period(Option<i32>)`](crate::client::fluent_builders::DescribeAlarmsForMetric::set_period): <p>The period, in seconds, over which the statistic is applied.</p>
    ///   - [`unit(StandardUnit)`](crate::client::fluent_builders::DescribeAlarmsForMetric::unit) / [`set_unit(Option<StandardUnit>)`](crate::client::fluent_builders::DescribeAlarmsForMetric::set_unit): <p>The unit for the metric.</p>
    /// - On success, responds with [`DescribeAlarmsForMetricOutput`](crate::output::DescribeAlarmsForMetricOutput) with field(s):
    ///   - [`metric_alarms(Option<Vec<MetricAlarm>>)`](crate::output::DescribeAlarmsForMetricOutput::metric_alarms): <p>The information for each alarm with the specified metric.</p>
    /// - On failure, responds with [`SdkError<DescribeAlarmsForMetricError>`](crate::error::DescribeAlarmsForMetricError)
    pub fn describe_alarms_for_metric(
        &self,
    ) -> crate::client::fluent_builders::DescribeAlarmsForMetric {
        crate::client::fluent_builders::DescribeAlarmsForMetric::new(self.handle.clone())
    }
}
