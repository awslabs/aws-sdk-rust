// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`PutDashboard`](crate::operation::put_dashboard::builders::PutDashboardFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`dashboard_name(impl Into<String>)`](crate::operation::put_dashboard::builders::PutDashboardFluentBuilder::dashboard_name) / [`set_dashboard_name(Option<String>)`](crate::operation::put_dashboard::builders::PutDashboardFluentBuilder::set_dashboard_name):<br>required: **true**<br><p>The name of the dashboard. If a dashboard with this name already exists, this call modifies that dashboard, replacing its current contents. Otherwise, a new dashboard is created. The maximum length is 255, and valid characters are A-Z, a-z, 0-9, "-", and "_". This parameter is required.</p><br>
    ///   - [`dashboard_body(impl Into<String>)`](crate::operation::put_dashboard::builders::PutDashboardFluentBuilder::dashboard_body) / [`set_dashboard_body(Option<String>)`](crate::operation::put_dashboard::builders::PutDashboardFluentBuilder::set_dashboard_body):<br>required: **true**<br><p>The detailed information about the dashboard in JSON format, including the widgets to include and their location on the dashboard. This parameter is required.</p>  <p>For more information about the syntax, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/CloudWatch-Dashboard-Body-Structure.html">Dashboard Body Structure and Syntax</a>.</p><br>
    /// - On success, responds with [`PutDashboardOutput`](crate::operation::put_dashboard::PutDashboardOutput) with field(s):
    ///   - [`dashboard_validation_messages(Option<Vec::<DashboardValidationMessage>>)`](crate::operation::put_dashboard::PutDashboardOutput::dashboard_validation_messages): <p>If the input for <code>PutDashboard</code> was correct and the dashboard was successfully created or modified, this result is empty.</p>  <p>If this result includes only warning messages, then the input was valid enough for the dashboard to be created or modified, but some elements of the dashboard might not render.</p>  <p>If this result includes error messages, the input was not valid and the operation failed.</p>
    /// - On failure, responds with [`SdkError<PutDashboardError>`](crate::operation::put_dashboard::PutDashboardError)
    pub fn put_dashboard(&self) -> crate::operation::put_dashboard::builders::PutDashboardFluentBuilder {
        crate::operation::put_dashboard::builders::PutDashboardFluentBuilder::new(self.handle.clone())
    }
}
