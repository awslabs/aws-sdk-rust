// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetInsightRuleReport`](crate::operation::get_insight_rule_report::builders::GetInsightRuleReportFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`rule_name(impl Into<String>)`](crate::operation::get_insight_rule_report::builders::GetInsightRuleReportFluentBuilder::rule_name) / [`set_rule_name(Option<String>)`](crate::operation::get_insight_rule_report::builders::GetInsightRuleReportFluentBuilder::set_rule_name): <p>The name of the rule that you want to see data from.</p>
    ///   - [`start_time(DateTime)`](crate::operation::get_insight_rule_report::builders::GetInsightRuleReportFluentBuilder::start_time) / [`set_start_time(Option<DateTime>)`](crate::operation::get_insight_rule_report::builders::GetInsightRuleReportFluentBuilder::set_start_time): <p>The start time of the data to use in the report. When used in a raw HTTP Query API, it is formatted as <code>yyyy-MM-dd'T'HH:mm:ss</code>. For example, <code>2019-07-01T23:59:59</code>.</p>
    ///   - [`end_time(DateTime)`](crate::operation::get_insight_rule_report::builders::GetInsightRuleReportFluentBuilder::end_time) / [`set_end_time(Option<DateTime>)`](crate::operation::get_insight_rule_report::builders::GetInsightRuleReportFluentBuilder::set_end_time): <p>The end time of the data to use in the report. When used in a raw HTTP Query API, it is formatted as <code>yyyy-MM-dd'T'HH:mm:ss</code>. For example, <code>2019-07-01T23:59:59</code>.</p>
    ///   - [`period(i32)`](crate::operation::get_insight_rule_report::builders::GetInsightRuleReportFluentBuilder::period) / [`set_period(Option<i32>)`](crate::operation::get_insight_rule_report::builders::GetInsightRuleReportFluentBuilder::set_period): <p>The period, in seconds, to use for the statistics in the <code>InsightRuleMetricDatapoint</code> results.</p>
    ///   - [`max_contributor_count(i32)`](crate::operation::get_insight_rule_report::builders::GetInsightRuleReportFluentBuilder::max_contributor_count) / [`set_max_contributor_count(Option<i32>)`](crate::operation::get_insight_rule_report::builders::GetInsightRuleReportFluentBuilder::set_max_contributor_count): <p>The maximum number of contributors to include in the report. The range is 1 to 100. If you omit this, the default of 10 is used.</p>
    ///   - [`metrics(Vec<String>)`](crate::operation::get_insight_rule_report::builders::GetInsightRuleReportFluentBuilder::metrics) / [`set_metrics(Option<Vec<String>>)`](crate::operation::get_insight_rule_report::builders::GetInsightRuleReportFluentBuilder::set_metrics): <p>Specifies which metrics to use for aggregation of contributor values for the report. You can specify one or more of the following metrics:</p>  <ul>   <li> <p> <code>UniqueContributors</code> -- the number of unique contributors for each data point.</p> </li>   <li> <p> <code>MaxContributorValue</code> -- the value of the top contributor for each data point. The identity of the contributor might change for each data point in the graph.</p> <p>If this rule aggregates by COUNT, the top contributor for each data point is the contributor with the most occurrences in that period. If the rule aggregates by SUM, the top contributor is the contributor with the highest sum in the log field specified by the rule's <code>Value</code>, during that period.</p> </li>   <li> <p> <code>SampleCount</code> -- the number of data points matched by the rule.</p> </li>   <li> <p> <code>Sum</code> -- the sum of the values from all contributors during the time period represented by that data point.</p> </li>   <li> <p> <code>Minimum</code> -- the minimum value from a single observation during the time period represented by that data point.</p> </li>   <li> <p> <code>Maximum</code> -- the maximum value from a single observation during the time period represented by that data point.</p> </li>   <li> <p> <code>Average</code> -- the average value from all contributors during the time period represented by that data point.</p> </li>  </ul>
    ///   - [`order_by(impl Into<String>)`](crate::operation::get_insight_rule_report::builders::GetInsightRuleReportFluentBuilder::order_by) / [`set_order_by(Option<String>)`](crate::operation::get_insight_rule_report::builders::GetInsightRuleReportFluentBuilder::set_order_by): <p>Determines what statistic to use to rank the contributors. Valid values are SUM and MAXIMUM.</p>
    /// - On success, responds with [`GetInsightRuleReportOutput`](crate::operation::get_insight_rule_report::GetInsightRuleReportOutput) with field(s):
    ///   - [`key_labels(Option<Vec<String>>)`](crate::operation::get_insight_rule_report::GetInsightRuleReportOutput::key_labels): <p>An array of the strings used as the keys for this rule. The keys are the dimensions used to classify contributors. If the rule contains more than one key, then each unique combination of values for the keys is counted as a unique contributor.</p>
    ///   - [`aggregation_statistic(Option<String>)`](crate::operation::get_insight_rule_report::GetInsightRuleReportOutput::aggregation_statistic): <p>Specifies whether this rule aggregates contributor data by COUNT or SUM.</p>
    ///   - [`aggregate_value(Option<f64>)`](crate::operation::get_insight_rule_report::GetInsightRuleReportOutput::aggregate_value): <p>The sum of the values from all individual contributors that match the rule.</p>
    ///   - [`approximate_unique_count(Option<i64>)`](crate::operation::get_insight_rule_report::GetInsightRuleReportOutput::approximate_unique_count): <p>An approximate count of the unique contributors found by this rule in this time period.</p>
    ///   - [`contributors(Option<Vec<InsightRuleContributor>>)`](crate::operation::get_insight_rule_report::GetInsightRuleReportOutput::contributors): <p>An array of the unique contributors found by this rule in this time period. If the rule contains multiple keys, each combination of values for the keys counts as a unique contributor.</p>
    ///   - [`metric_datapoints(Option<Vec<InsightRuleMetricDatapoint>>)`](crate::operation::get_insight_rule_report::GetInsightRuleReportOutput::metric_datapoints): <p>A time series of metric data points that matches the time period in the rule request.</p>
    /// - On failure, responds with [`SdkError<GetInsightRuleReportError>`](crate::operation::get_insight_rule_report::GetInsightRuleReportError)
    pub fn get_insight_rule_report(
        &self,
    ) -> crate::operation::get_insight_rule_report::builders::GetInsightRuleReportFluentBuilder
    {
        crate::operation::get_insight_rule_report::builders::GetInsightRuleReportFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
