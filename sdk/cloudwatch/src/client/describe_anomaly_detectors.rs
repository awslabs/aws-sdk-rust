// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeAnomalyDetectors`](crate::operation::describe_anomaly_detectors::builders::DescribeAnomalyDetectorsFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::describe_anomaly_detectors::builders::DescribeAnomalyDetectorsFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`next_token(impl Into<String>)`](crate::operation::describe_anomaly_detectors::builders::DescribeAnomalyDetectorsFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::describe_anomaly_detectors::builders::DescribeAnomalyDetectorsFluentBuilder::set_next_token):<br>required: **false**<br><p>Use the token returned by the previous operation to request the next page of results.</p><br>
    ///   - [`max_results(i32)`](crate::operation::describe_anomaly_detectors::builders::DescribeAnomalyDetectorsFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::describe_anomaly_detectors::builders::DescribeAnomalyDetectorsFluentBuilder::set_max_results):<br>required: **false**<br><p>The maximum number of results to return in one operation. The maximum value that you can specify is 100.</p>  <p>To retrieve the remaining results, make another call with the returned <code>NextToken</code> value. </p><br>
    ///   - [`namespace(impl Into<String>)`](crate::operation::describe_anomaly_detectors::builders::DescribeAnomalyDetectorsFluentBuilder::namespace) / [`set_namespace(Option<String>)`](crate::operation::describe_anomaly_detectors::builders::DescribeAnomalyDetectorsFluentBuilder::set_namespace):<br>required: **false**<br><p>Limits the results to only the anomaly detection models that are associated with the specified namespace.</p><br>
    ///   - [`metric_name(impl Into<String>)`](crate::operation::describe_anomaly_detectors::builders::DescribeAnomalyDetectorsFluentBuilder::metric_name) / [`set_metric_name(Option<String>)`](crate::operation::describe_anomaly_detectors::builders::DescribeAnomalyDetectorsFluentBuilder::set_metric_name):<br>required: **false**<br><p>Limits the results to only the anomaly detection models that are associated with the specified metric name. If there are multiple metrics with this name in different namespaces that have anomaly detection models, they're all returned.</p><br>
    ///   - [`dimensions(Dimension)`](crate::operation::describe_anomaly_detectors::builders::DescribeAnomalyDetectorsFluentBuilder::dimensions) / [`set_dimensions(Option<Vec::<Dimension>>)`](crate::operation::describe_anomaly_detectors::builders::DescribeAnomalyDetectorsFluentBuilder::set_dimensions):<br>required: **false**<br><p>Limits the results to only the anomaly detection models that are associated with the specified metric dimensions. If there are multiple metrics that have these dimensions and have anomaly detection models associated, they're all returned.</p><br>
    ///   - [`anomaly_detector_types(AnomalyDetectorType)`](crate::operation::describe_anomaly_detectors::builders::DescribeAnomalyDetectorsFluentBuilder::anomaly_detector_types) / [`set_anomaly_detector_types(Option<Vec::<AnomalyDetectorType>>)`](crate::operation::describe_anomaly_detectors::builders::DescribeAnomalyDetectorsFluentBuilder::set_anomaly_detector_types):<br>required: **false**<br><p>The anomaly detector types to request when using <code>DescribeAnomalyDetectorsInput</code>. If empty, defaults to <code>SINGLE_METRIC</code>.</p><br>
    /// - On success, responds with [`DescribeAnomalyDetectorsOutput`](crate::operation::describe_anomaly_detectors::DescribeAnomalyDetectorsOutput) with field(s):
    ///   - [`anomaly_detectors(Option<Vec::<AnomalyDetector>>)`](crate::operation::describe_anomaly_detectors::DescribeAnomalyDetectorsOutput::anomaly_detectors): <p>The list of anomaly detection models returned by the operation.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::describe_anomaly_detectors::DescribeAnomalyDetectorsOutput::next_token): <p>A token that you can use in a subsequent operation to retrieve the next set of results.</p>
    /// - On failure, responds with [`SdkError<DescribeAnomalyDetectorsError>`](crate::operation::describe_anomaly_detectors::DescribeAnomalyDetectorsError)
    pub fn describe_anomaly_detectors(&self) -> crate::operation::describe_anomaly_detectors::builders::DescribeAnomalyDetectorsFluentBuilder {
        crate::operation::describe_anomaly_detectors::builders::DescribeAnomalyDetectorsFluentBuilder::new(self.handle.clone())
    }
}
