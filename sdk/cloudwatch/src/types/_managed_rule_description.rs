// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p> Contains information about managed Contributor Insights rules, as returned by <code>ListManagedInsightRules</code>. </p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ManagedRuleDescription {
    /// <p> The template name for the managed rule. Used to enable managed rules using <code>PutManagedInsightRules</code>. </p>
    #[doc(hidden)]
    pub template_name: std::option::Option<std::string::String>,
    /// <p> If a managed rule is enabled, this is the ARN for the related Amazon Web Services resource. </p>
    #[doc(hidden)]
    pub resource_arn: std::option::Option<std::string::String>,
    /// <p> Describes the state of a managed rule. If present, it contains information about the Contributor Insights rule that contains information about the related Amazon Web Services resource. </p>
    #[doc(hidden)]
    pub rule_state: std::option::Option<crate::types::ManagedRuleState>,
}
impl ManagedRuleDescription {
    /// <p> The template name for the managed rule. Used to enable managed rules using <code>PutManagedInsightRules</code>. </p>
    pub fn template_name(&self) -> std::option::Option<&str> {
        self.template_name.as_deref()
    }
    /// <p> If a managed rule is enabled, this is the ARN for the related Amazon Web Services resource. </p>
    pub fn resource_arn(&self) -> std::option::Option<&str> {
        self.resource_arn.as_deref()
    }
    /// <p> Describes the state of a managed rule. If present, it contains information about the Contributor Insights rule that contains information about the related Amazon Web Services resource. </p>
    pub fn rule_state(&self) -> std::option::Option<&crate::types::ManagedRuleState> {
        self.rule_state.as_ref()
    }
}
impl ManagedRuleDescription {
    /// Creates a new builder-style object to manufacture [`ManagedRuleDescription`](crate::types::ManagedRuleDescription).
    pub fn builder() -> crate::types::builders::ManagedRuleDescriptionBuilder {
        crate::types::builders::ManagedRuleDescriptionBuilder::default()
    }
}

/// A builder for [`ManagedRuleDescription`](crate::types::ManagedRuleDescription).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ManagedRuleDescriptionBuilder {
    pub(crate) template_name: std::option::Option<std::string::String>,
    pub(crate) resource_arn: std::option::Option<std::string::String>,
    pub(crate) rule_state: std::option::Option<crate::types::ManagedRuleState>,
}
impl ManagedRuleDescriptionBuilder {
    /// <p> The template name for the managed rule. Used to enable managed rules using <code>PutManagedInsightRules</code>. </p>
    pub fn template_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.template_name = Some(input.into());
        self
    }
    /// <p> The template name for the managed rule. Used to enable managed rules using <code>PutManagedInsightRules</code>. </p>
    pub fn set_template_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.template_name = input;
        self
    }
    /// <p> If a managed rule is enabled, this is the ARN for the related Amazon Web Services resource. </p>
    pub fn resource_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.resource_arn = Some(input.into());
        self
    }
    /// <p> If a managed rule is enabled, this is the ARN for the related Amazon Web Services resource. </p>
    pub fn set_resource_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.resource_arn = input;
        self
    }
    /// <p> Describes the state of a managed rule. If present, it contains information about the Contributor Insights rule that contains information about the related Amazon Web Services resource. </p>
    pub fn rule_state(mut self, input: crate::types::ManagedRuleState) -> Self {
        self.rule_state = Some(input);
        self
    }
    /// <p> Describes the state of a managed rule. If present, it contains information about the Contributor Insights rule that contains information about the related Amazon Web Services resource. </p>
    pub fn set_rule_state(
        mut self,
        input: std::option::Option<crate::types::ManagedRuleState>,
    ) -> Self {
        self.rule_state = input;
        self
    }
    /// Consumes the builder and constructs a [`ManagedRuleDescription`](crate::types::ManagedRuleDescription).
    pub fn build(self) -> crate::types::ManagedRuleDescription {
        crate::types::ManagedRuleDescription {
            template_name: self.template_name,
            resource_arn: self.resource_arn,
            rule_state: self.rule_state,
        }
    }
}
