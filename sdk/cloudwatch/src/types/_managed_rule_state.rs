// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p> The status of a managed Contributor Insights rule. </p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ManagedRuleState {
    /// <p> The name of the Contributor Insights rule that contains data for the specified Amazon Web Services resource. </p>
    pub rule_name: ::std::option::Option<::std::string::String>,
    /// <p> Indicates whether the rule is enabled or disabled. </p>
    pub state: ::std::option::Option<::std::string::String>,
}
impl ManagedRuleState {
    /// <p> The name of the Contributor Insights rule that contains data for the specified Amazon Web Services resource. </p>
    pub fn rule_name(&self) -> ::std::option::Option<&str> {
        self.rule_name.as_deref()
    }
    /// <p> Indicates whether the rule is enabled or disabled. </p>
    pub fn state(&self) -> ::std::option::Option<&str> {
        self.state.as_deref()
    }
}
impl ManagedRuleState {
    /// Creates a new builder-style object to manufacture [`ManagedRuleState`](crate::types::ManagedRuleState).
    pub fn builder() -> crate::types::builders::ManagedRuleStateBuilder {
        crate::types::builders::ManagedRuleStateBuilder::default()
    }
}

/// A builder for [`ManagedRuleState`](crate::types::ManagedRuleState).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ManagedRuleStateBuilder {
    pub(crate) rule_name: ::std::option::Option<::std::string::String>,
    pub(crate) state: ::std::option::Option<::std::string::String>,
}
impl ManagedRuleStateBuilder {
    /// <p> The name of the Contributor Insights rule that contains data for the specified Amazon Web Services resource. </p>
    /// This field is required.
    pub fn rule_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.rule_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p> The name of the Contributor Insights rule that contains data for the specified Amazon Web Services resource. </p>
    pub fn set_rule_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.rule_name = input;
        self
    }
    /// <p> The name of the Contributor Insights rule that contains data for the specified Amazon Web Services resource. </p>
    pub fn get_rule_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.rule_name
    }
    /// <p> Indicates whether the rule is enabled or disabled. </p>
    /// This field is required.
    pub fn state(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.state = ::std::option::Option::Some(input.into());
        self
    }
    /// <p> Indicates whether the rule is enabled or disabled. </p>
    pub fn set_state(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.state = input;
        self
    }
    /// <p> Indicates whether the rule is enabled or disabled. </p>
    pub fn get_state(&self) -> &::std::option::Option<::std::string::String> {
        &self.state
    }
    /// Consumes the builder and constructs a [`ManagedRuleState`](crate::types::ManagedRuleState).
    pub fn build(self) -> crate::types::ManagedRuleState {
        crate::types::ManagedRuleState {
            rule_name: self.rule_name,
            state: self.state,
        }
    }
}
