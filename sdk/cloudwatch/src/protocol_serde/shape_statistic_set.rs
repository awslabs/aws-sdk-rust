// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(unused_mut)]
pub fn ser_statistic_set(
    mut writer: aws_smithy_query::QueryValueWriter,
    input: &crate::types::StatisticSet,
) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    #[allow(unused_mut)]
    let mut scope_1 = writer.prefix("SampleCount");
    if let Some(var_2) = &input.sample_count {
        scope_1.number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::Float((*var_2).into()),
        );
    }
    #[allow(unused_mut)]
    let mut scope_3 = writer.prefix("Sum");
    if let Some(var_4) = &input.sum {
        scope_3.number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::Float((*var_4).into()),
        );
    }
    #[allow(unused_mut)]
    let mut scope_5 = writer.prefix("Minimum");
    if let Some(var_6) = &input.minimum {
        scope_5.number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::Float((*var_6).into()),
        );
    }
    #[allow(unused_mut)]
    let mut scope_7 = writer.prefix("Maximum");
    if let Some(var_8) = &input.maximum {
        scope_7.number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::Float((*var_8).into()),
        );
    }
    Ok(())
}
