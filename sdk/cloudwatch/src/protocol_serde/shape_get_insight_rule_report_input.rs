// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_get_insight_rule_report_input_input(
    input: &crate::operation::get_insight_rule_report::GetInsightRuleReportInput,
) -> Result<::aws_smithy_types::body::SdkBody, ::aws_smithy_types::error::operation::SerializationError> {
    let mut out = String::new();
    #[allow(unused_mut)]
    let mut writer = ::aws_smithy_query::QueryWriter::new(&mut out, "GetInsightRuleReport", "2010-08-01");
    #[allow(unused_mut)]
    let mut scope_1 = writer.prefix("RuleName");
    if let Some(var_2) = &input.rule_name {
        scope_1.string(var_2);
    }
    #[allow(unused_mut)]
    let mut scope_3 = writer.prefix("StartTime");
    if let Some(var_4) = &input.start_time {
        scope_3.date_time(var_4, ::aws_smithy_types::date_time::Format::DateTime)?;
    }
    #[allow(unused_mut)]
    let mut scope_5 = writer.prefix("EndTime");
    if let Some(var_6) = &input.end_time {
        scope_5.date_time(var_6, ::aws_smithy_types::date_time::Format::DateTime)?;
    }
    #[allow(unused_mut)]
    let mut scope_7 = writer.prefix("Period");
    if let Some(var_8) = &input.period {
        scope_7.number(
            #[allow(clippy::useless_conversion)]
            ::aws_smithy_types::Number::NegInt((*var_8).into()),
        );
    }
    #[allow(unused_mut)]
    let mut scope_9 = writer.prefix("MaxContributorCount");
    if let Some(var_10) = &input.max_contributor_count {
        scope_9.number(
            #[allow(clippy::useless_conversion)]
            ::aws_smithy_types::Number::NegInt((*var_10).into()),
        );
    }
    #[allow(unused_mut)]
    let mut scope_11 = writer.prefix("Metrics");
    if let Some(var_12) = &input.metrics {
        let mut list_14 = scope_11.start_list(false, None);
        for item_13 in var_12 {
            #[allow(unused_mut)]
            let mut entry_15 = list_14.entry();
            entry_15.string(item_13);
        }
        list_14.finish();
    }
    #[allow(unused_mut)]
    let mut scope_16 = writer.prefix("OrderBy");
    if let Some(var_17) = &input.order_by {
        scope_16.string(var_17);
    }
    writer.finish();
    Ok(::aws_smithy_types::body::SdkBody::from(out))
}
