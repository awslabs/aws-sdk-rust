// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_list_metrics_input_input(
    input: &crate::operation::list_metrics::ListMetricsInput,
) -> Result<::aws_smithy_types::body::SdkBody, ::aws_smithy_types::error::operation::SerializationError> {
    let mut out = String::new();
    #[allow(unused_mut)]
    let mut writer = ::aws_smithy_query::QueryWriter::new(&mut out, "ListMetrics", "2010-08-01");
    #[allow(unused_mut)]
    let mut scope_1 = writer.prefix("Namespace");
    if let Some(var_2) = &input.namespace {
        scope_1.string(var_2);
    }
    #[allow(unused_mut)]
    let mut scope_3 = writer.prefix("MetricName");
    if let Some(var_4) = &input.metric_name {
        scope_3.string(var_4);
    }
    #[allow(unused_mut)]
    let mut scope_5 = writer.prefix("Dimensions");
    if let Some(var_6) = &input.dimensions {
        let mut list_8 = scope_5.start_list(false, None);
        for item_7 in var_6 {
            #[allow(unused_mut)]
            let mut entry_9 = list_8.entry();
            crate::protocol_serde::shape_dimension_filter::ser_dimension_filter(entry_9, item_7)?;
        }
        list_8.finish();
    }
    #[allow(unused_mut)]
    let mut scope_10 = writer.prefix("NextToken");
    if let Some(var_11) = &input.next_token {
        scope_10.string(var_11);
    }
    #[allow(unused_mut)]
    let mut scope_12 = writer.prefix("RecentlyActive");
    if let Some(var_13) = &input.recently_active {
        scope_12.string(var_13.as_str());
    }
    #[allow(unused_mut)]
    let mut scope_14 = writer.prefix("IncludeLinkedAccounts");
    if let Some(var_15) = &input.include_linked_accounts {
        scope_14.boolean(*var_15);
    }
    #[allow(unused_mut)]
    let mut scope_16 = writer.prefix("OwningAccount");
    if let Some(var_17) = &input.owning_account {
        scope_16.string(var_17);
    }
    writer.finish();
    Ok(::aws_smithy_types::body::SdkBody::from(out))
}
