// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The time that a context is active. You can specify the time to live in seconds or in conversation turns.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ActiveContextTimeToLive {
    /// <p>The number of seconds that the context is active. You can specify between 5 and 86400 seconds (24 hours).</p>
    pub time_to_live_in_seconds: i32,
    /// <p>The number of turns that the context is active. You can specify up to 20 turns. Each request and response from the bot is a turn.</p>
    pub turns_to_live: i32,
}
impl ActiveContextTimeToLive {
    /// <p>The number of seconds that the context is active. You can specify between 5 and 86400 seconds (24 hours).</p>
    pub fn time_to_live_in_seconds(&self) -> i32 {
        self.time_to_live_in_seconds
    }
    /// <p>The number of turns that the context is active. You can specify up to 20 turns. Each request and response from the bot is a turn.</p>
    pub fn turns_to_live(&self) -> i32 {
        self.turns_to_live
    }
}
impl ActiveContextTimeToLive {
    /// Creates a new builder-style object to manufacture [`ActiveContextTimeToLive`](crate::types::ActiveContextTimeToLive).
    pub fn builder() -> crate::types::builders::ActiveContextTimeToLiveBuilder {
        crate::types::builders::ActiveContextTimeToLiveBuilder::default()
    }
}

/// A builder for [`ActiveContextTimeToLive`](crate::types::ActiveContextTimeToLive).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ActiveContextTimeToLiveBuilder {
    pub(crate) time_to_live_in_seconds: ::std::option::Option<i32>,
    pub(crate) turns_to_live: ::std::option::Option<i32>,
}
impl ActiveContextTimeToLiveBuilder {
    /// <p>The number of seconds that the context is active. You can specify between 5 and 86400 seconds (24 hours).</p>
    /// This field is required.
    pub fn time_to_live_in_seconds(mut self, input: i32) -> Self {
        self.time_to_live_in_seconds = ::std::option::Option::Some(input);
        self
    }
    /// <p>The number of seconds that the context is active. You can specify between 5 and 86400 seconds (24 hours).</p>
    pub fn set_time_to_live_in_seconds(mut self, input: ::std::option::Option<i32>) -> Self {
        self.time_to_live_in_seconds = input;
        self
    }
    /// <p>The number of seconds that the context is active. You can specify between 5 and 86400 seconds (24 hours).</p>
    pub fn get_time_to_live_in_seconds(&self) -> &::std::option::Option<i32> {
        &self.time_to_live_in_seconds
    }
    /// <p>The number of turns that the context is active. You can specify up to 20 turns. Each request and response from the bot is a turn.</p>
    /// This field is required.
    pub fn turns_to_live(mut self, input: i32) -> Self {
        self.turns_to_live = ::std::option::Option::Some(input);
        self
    }
    /// <p>The number of turns that the context is active. You can specify up to 20 turns. Each request and response from the bot is a turn.</p>
    pub fn set_turns_to_live(mut self, input: ::std::option::Option<i32>) -> Self {
        self.turns_to_live = input;
        self
    }
    /// <p>The number of turns that the context is active. You can specify up to 20 turns. Each request and response from the bot is a turn.</p>
    pub fn get_turns_to_live(&self) -> &::std::option::Option<i32> {
        &self.turns_to_live
    }
    /// Consumes the builder and constructs a [`ActiveContextTimeToLive`](crate::types::ActiveContextTimeToLive).
    /// This method will fail if any of the following fields are not set:
    /// - [`time_to_live_in_seconds`](crate::types::builders::ActiveContextTimeToLiveBuilder::time_to_live_in_seconds)
    /// - [`turns_to_live`](crate::types::builders::ActiveContextTimeToLiveBuilder::turns_to_live)
    pub fn build(self) -> ::std::result::Result<crate::types::ActiveContextTimeToLive, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::ActiveContextTimeToLive {
            time_to_live_in_seconds: self.time_to_live_in_seconds.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "time_to_live_in_seconds",
                    "time_to_live_in_seconds was not specified but it is required when building ActiveContextTimeToLive",
                )
            })?,
            turns_to_live: self.turns_to_live.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "turns_to_live",
                    "turns_to_live was not specified but it is required when building ActiveContextTimeToLive",
                )
            })?,
        })
    }
}
