// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub use crate::operation::associate_external_connection::_associate_external_connection_output::AssociateExternalConnectionOutputBuilder;

pub use crate::operation::associate_external_connection::_associate_external_connection_input::AssociateExternalConnectionInputBuilder;

/// Fluent builder constructing a request to `AssociateExternalConnection`.
///
/// <p>Adds an existing external connection to a repository. One external connection is allowed per repository.</p> <note>
/// <p>A repository can have one or more upstream repositories, or an external connection.</p>
/// </note>
#[derive(std::clone::Clone, std::fmt::Debug)]
pub struct AssociateExternalConnectionFluentBuilder {
                handle: std::sync::Arc<crate::client::Handle>,
                inner: crate::operation::associate_external_connection::builders::AssociateExternalConnectionInputBuilder
            }
impl AssociateExternalConnectionFluentBuilder {
    /// Creates a new `AssociateExternalConnection`.
    pub(crate) fn new(handle: std::sync::Arc<crate::client::Handle>) -> Self {
        Self {
            handle,
            inner: Default::default(),
        }
    }

    /// Consume this builder, creating a customizable operation that can be modified before being
    /// sent. The operation's inner [http::Request] can be modified as well.
    pub async fn customize(
        self,
    ) -> std::result::Result<
        crate::client::customize::CustomizableOperation<
            crate::operation::associate_external_connection::AssociateExternalConnection,
            aws_http::retry::AwsResponseRetryClassifier,
        >,
        aws_smithy_http::result::SdkError<
            crate::operation::associate_external_connection::AssociateExternalConnectionError,
        >,
    > {
        let handle = self.handle.clone();
        let operation = self
            .inner
            .build()
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?
            .make_operation(&handle.conf)
            .await
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?;
        Ok(crate::client::customize::CustomizableOperation { handle, operation })
    }

    /// Sends the request and returns the response.
    ///
    /// If an error occurs, an `SdkError` will be returned with additional details that
    /// can be matched against.
    ///
    /// By default, any retryable failures will be retried twice. Retry behavior
    /// is configurable with the [RetryConfig](aws_smithy_types::retry::RetryConfig), which can be
    /// set when configuring the client.
    pub async fn send(
        self,
    ) -> std::result::Result<
        crate::operation::associate_external_connection::AssociateExternalConnectionOutput,
        aws_smithy_http::result::SdkError<
            crate::operation::associate_external_connection::AssociateExternalConnectionError,
        >,
    > {
        let op = self
            .inner
            .build()
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?
            .make_operation(&self.handle.conf)
            .await
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?;
        self.handle.client.call(op).await
    }
    /// <p>The name of the domain that contains the repository.</p>
    pub fn domain(mut self, input: impl Into<std::string::String>) -> Self {
        self.inner = self.inner.domain(input.into());
        self
    }
    /// <p>The name of the domain that contains the repository.</p>
    pub fn set_domain(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.inner = self.inner.set_domain(input);
        self
    }
    /// <p> The 12-digit account number of the Amazon Web Services account that owns the domain. It does not include dashes or spaces. </p>
    pub fn domain_owner(mut self, input: impl Into<std::string::String>) -> Self {
        self.inner = self.inner.domain_owner(input.into());
        self
    }
    /// <p> The 12-digit account number of the Amazon Web Services account that owns the domain. It does not include dashes or spaces. </p>
    pub fn set_domain_owner(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.inner = self.inner.set_domain_owner(input);
        self
    }
    /// <p> The name of the repository to which the external connection is added. </p>
    pub fn repository(mut self, input: impl Into<std::string::String>) -> Self {
        self.inner = self.inner.repository(input.into());
        self
    }
    /// <p> The name of the repository to which the external connection is added. </p>
    pub fn set_repository(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.inner = self.inner.set_repository(input);
        self
    }
    /// <p> The name of the external connection to add to the repository. The following values are supported: </p>
    /// <ul>
    /// <li> <p> <code>public:npmjs</code> - for the npm public repository. </p> </li>
    /// <li> <p> <code>public:nuget-org</code> - for the NuGet Gallery. </p> </li>
    /// <li> <p> <code>public:pypi</code> - for the Python Package Index. </p> </li>
    /// <li> <p> <code>public:maven-central</code> - for Maven Central. </p> </li>
    /// <li> <p> <code>public:maven-googleandroid</code> - for the Google Android repository. </p> </li>
    /// <li> <p> <code>public:maven-gradleplugins</code> - for the Gradle plugins repository. </p> </li>
    /// <li> <p> <code>public:maven-commonsware</code> - for the CommonsWare Android repository. </p> </li>
    /// </ul>
    pub fn external_connection(mut self, input: impl Into<std::string::String>) -> Self {
        self.inner = self.inner.external_connection(input.into());
        self
    }
    /// <p> The name of the external connection to add to the repository. The following values are supported: </p>
    /// <ul>
    /// <li> <p> <code>public:npmjs</code> - for the npm public repository. </p> </li>
    /// <li> <p> <code>public:nuget-org</code> - for the NuGet Gallery. </p> </li>
    /// <li> <p> <code>public:pypi</code> - for the Python Package Index. </p> </li>
    /// <li> <p> <code>public:maven-central</code> - for Maven Central. </p> </li>
    /// <li> <p> <code>public:maven-googleandroid</code> - for the Google Android repository. </p> </li>
    /// <li> <p> <code>public:maven-gradleplugins</code> - for the Gradle plugins repository. </p> </li>
    /// <li> <p> <code>public:maven-commonsware</code> - for the CommonsWare Android repository. </p> </li>
    /// </ul>
    pub fn set_external_connection(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.inner = self.inner.set_external_connection(input);
        self
    }
}
