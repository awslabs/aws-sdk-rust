// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn parse_http_error_metadata(
    response: &http::Response<bytes::Bytes>,
) -> Result<
    aws_smithy_types::error::metadata::Builder,
    aws_smithy_json::deserialize::error::DeserializeError,
> {
    crate::json_errors::parse_error_metadata(response.body(), response.headers())
}

pub(crate) mod shape_associate_external_connection;

pub(crate) mod shape_copy_package_versions;

pub(crate) mod shape_create_domain;

pub(crate) mod shape_create_repository;

pub(crate) mod shape_delete_domain;

pub(crate) mod shape_delete_domain_permissions_policy;

pub(crate) mod shape_delete_package_versions;

pub(crate) mod shape_delete_repository;

pub(crate) mod shape_delete_repository_permissions_policy;

pub(crate) mod shape_describe_domain;

pub(crate) mod shape_describe_package;

pub(crate) mod shape_describe_package_version;

pub(crate) mod shape_describe_repository;

pub(crate) mod shape_disassociate_external_connection;

pub(crate) mod shape_dispose_package_versions;

pub(crate) mod shape_get_authorization_token;

pub(crate) mod shape_get_domain_permissions_policy;

pub(crate) mod shape_get_package_version_asset;

pub(crate) mod shape_get_package_version_readme;

pub(crate) mod shape_get_repository_endpoint;

pub(crate) mod shape_get_repository_permissions_policy;

pub(crate) mod shape_list_domains;

pub(crate) mod shape_list_package_version_assets;

pub(crate) mod shape_list_package_version_dependencies;

pub(crate) mod shape_list_package_versions;

pub(crate) mod shape_list_packages;

pub(crate) mod shape_list_repositories;

pub(crate) mod shape_list_repositories_in_domain;

pub(crate) mod shape_list_tags_for_resource;

pub(crate) mod shape_put_domain_permissions_policy;

pub(crate) mod shape_put_package_origin_configuration;

pub(crate) mod shape_put_repository_permissions_policy;

pub(crate) mod shape_tag_resource;

pub(crate) mod shape_untag_resource;

pub(crate) mod shape_update_package_versions_status;

pub(crate) mod shape_update_repository;

pub(crate) fn or_empty_doc(data: &[u8]) -> &[u8] {
    if data.is_empty() {
        b"{}"
    } else {
        data
    }
}

pub(crate) mod shape_access_denied_exception;

pub(crate) mod shape_conflict_exception;

pub(crate) mod shape_copy_package_versions_input;

pub(crate) mod shape_create_domain_input;

pub(crate) mod shape_create_repository_input;

pub(crate) mod shape_delete_package_versions_input;

pub(crate) mod shape_dispose_package_versions_input;

pub(crate) mod shape_get_package_version_asset_output;

pub(crate) mod shape_internal_server_exception;

pub(crate) mod shape_list_domains_input;

pub(crate) mod shape_put_domain_permissions_policy_input;

pub(crate) mod shape_put_package_origin_configuration_input;

pub(crate) mod shape_put_repository_permissions_policy_input;

pub(crate) mod shape_resource_not_found_exception;

pub(crate) mod shape_service_quota_exceeded_exception;

pub(crate) mod shape_tag_resource_input;

pub(crate) mod shape_throttling_exception;

pub(crate) mod shape_untag_resource_input;

pub(crate) mod shape_update_package_versions_status_input;

pub(crate) mod shape_update_repository_input;

pub(crate) mod shape_validation_exception;

pub(crate) mod shape_asset_summary_list;

pub(crate) mod shape_domain_description;

pub(crate) mod shape_domain_summary_list;

pub(crate) mod shape_package_dependency_list;

pub(crate) mod shape_package_description;

pub(crate) mod shape_package_origin_configuration;

pub(crate) mod shape_package_origin_restrictions;

pub(crate) mod shape_package_summary_list;

pub(crate) mod shape_package_version_description;

pub(crate) mod shape_package_version_error_map;

pub(crate) mod shape_package_version_summary_list;

pub(crate) mod shape_repository_description;

pub(crate) mod shape_repository_summary_list;

pub(crate) mod shape_resource_policy;

pub(crate) mod shape_successful_package_version_info_map;

pub(crate) mod shape_tag;

pub(crate) mod shape_tag_list;

pub(crate) mod shape_upstream_repository;

pub(crate) mod shape_asset_summary;

pub(crate) mod shape_domain_summary;

pub(crate) mod shape_license_info_list;

pub(crate) mod shape_package_dependency;

pub(crate) mod shape_package_summary;

pub(crate) mod shape_package_version_error;

pub(crate) mod shape_package_version_origin;

pub(crate) mod shape_package_version_summary;

pub(crate) mod shape_repository_external_connection_info_list;

pub(crate) mod shape_repository_summary;

pub(crate) mod shape_successful_package_version_info;

pub(crate) mod shape_upstream_repository_info_list;

pub(crate) mod shape_asset_hashes;

pub(crate) mod shape_domain_entry_point;

pub(crate) mod shape_license_info;

pub(crate) mod shape_repository_external_connection_info;

pub(crate) mod shape_upstream_repository_info;
