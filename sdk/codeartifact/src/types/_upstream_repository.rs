// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p> Information about an upstream repository. A list of <code>UpstreamRepository</code> objects is an input parameter to <a href="https://docs.aws.amazon.com/codeartifact/latest/APIReference/API_CreateRepository.html">CreateRepository</a> and <a href="https://docs.aws.amazon.com/codeartifact/latest/APIReference/API_UpdateRepository.html">UpdateRepository</a>. </p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct UpstreamRepository {
    /// <p> The name of an upstream repository. </p>
    pub repository_name: ::std::string::String,
}
impl UpstreamRepository {
    /// <p> The name of an upstream repository. </p>
    pub fn repository_name(&self) -> &str {
        use std::ops::Deref;
        self.repository_name.deref()
    }
}
impl UpstreamRepository {
    /// Creates a new builder-style object to manufacture [`UpstreamRepository`](crate::types::UpstreamRepository).
    pub fn builder() -> crate::types::builders::UpstreamRepositoryBuilder {
        crate::types::builders::UpstreamRepositoryBuilder::default()
    }
}

/// A builder for [`UpstreamRepository`](crate::types::UpstreamRepository).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct UpstreamRepositoryBuilder {
    pub(crate) repository_name: ::std::option::Option<::std::string::String>,
}
impl UpstreamRepositoryBuilder {
    /// <p> The name of an upstream repository. </p>
    /// This field is required.
    pub fn repository_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.repository_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p> The name of an upstream repository. </p>
    pub fn set_repository_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.repository_name = input;
        self
    }
    /// <p> The name of an upstream repository. </p>
    pub fn get_repository_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.repository_name
    }
    /// Consumes the builder and constructs a [`UpstreamRepository`](crate::types::UpstreamRepository).
    /// This method will fail if any of the following fields are not set:
    /// - [`repository_name`](crate::types::builders::UpstreamRepositoryBuilder::repository_name)
    pub fn build(self) -> ::std::result::Result<crate::types::UpstreamRepository, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::UpstreamRepository {
            repository_name: self.repository_name.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "repository_name",
                    "repository_name was not specified but it is required when building UpstreamRepository",
                )
            })?,
        })
    }
}
