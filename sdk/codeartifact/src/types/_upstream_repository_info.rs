// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p> Information about an upstream repository. </p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct UpstreamRepositoryInfo {
    /// <p> The name of an upstream repository. </p>
    #[doc(hidden)]
    pub repository_name: std::option::Option<std::string::String>,
}
impl UpstreamRepositoryInfo {
    /// <p> The name of an upstream repository. </p>
    pub fn repository_name(&self) -> std::option::Option<&str> {
        self.repository_name.as_deref()
    }
}
impl UpstreamRepositoryInfo {
    /// Creates a new builder-style object to manufacture [`UpstreamRepositoryInfo`](crate::types::UpstreamRepositoryInfo).
    pub fn builder() -> crate::types::builders::UpstreamRepositoryInfoBuilder {
        crate::types::builders::UpstreamRepositoryInfoBuilder::default()
    }
}

/// A builder for [`UpstreamRepositoryInfo`](crate::types::UpstreamRepositoryInfo).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct UpstreamRepositoryInfoBuilder {
    pub(crate) repository_name: std::option::Option<std::string::String>,
}
impl UpstreamRepositoryInfoBuilder {
    /// <p> The name of an upstream repository. </p>
    pub fn repository_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.repository_name = Some(input.into());
        self
    }
    /// <p> The name of an upstream repository. </p>
    pub fn set_repository_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.repository_name = input;
        self
    }
    /// Consumes the builder and constructs a [`UpstreamRepositoryInfo`](crate::types::UpstreamRepositoryInfo).
    pub fn build(self) -> crate::types::UpstreamRepositoryInfo {
        crate::types::UpstreamRepositoryInfo {
            repository_name: self.repository_name,
        }
    }
}
