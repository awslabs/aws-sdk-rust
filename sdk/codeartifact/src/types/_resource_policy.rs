// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p> An CodeArtifact resource policy that contains a resource ARN, document details, and a revision. </p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ResourcePolicy {
    /// <p> The ARN of the resource associated with the resource policy </p>
    #[doc(hidden)]
    pub resource_arn: std::option::Option<std::string::String>,
    /// <p> The current revision of the resource policy. </p>
    #[doc(hidden)]
    pub revision: std::option::Option<std::string::String>,
    /// <p> The resource policy formatted in JSON. </p>
    #[doc(hidden)]
    pub document: std::option::Option<std::string::String>,
}
impl ResourcePolicy {
    /// <p> The ARN of the resource associated with the resource policy </p>
    pub fn resource_arn(&self) -> std::option::Option<&str> {
        self.resource_arn.as_deref()
    }
    /// <p> The current revision of the resource policy. </p>
    pub fn revision(&self) -> std::option::Option<&str> {
        self.revision.as_deref()
    }
    /// <p> The resource policy formatted in JSON. </p>
    pub fn document(&self) -> std::option::Option<&str> {
        self.document.as_deref()
    }
}
impl ResourcePolicy {
    /// Creates a new builder-style object to manufacture [`ResourcePolicy`](crate::types::ResourcePolicy).
    pub fn builder() -> crate::types::builders::ResourcePolicyBuilder {
        crate::types::builders::ResourcePolicyBuilder::default()
    }
}

/// A builder for [`ResourcePolicy`](crate::types::ResourcePolicy).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ResourcePolicyBuilder {
    pub(crate) resource_arn: std::option::Option<std::string::String>,
    pub(crate) revision: std::option::Option<std::string::String>,
    pub(crate) document: std::option::Option<std::string::String>,
}
impl ResourcePolicyBuilder {
    /// <p> The ARN of the resource associated with the resource policy </p>
    pub fn resource_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.resource_arn = Some(input.into());
        self
    }
    /// <p> The ARN of the resource associated with the resource policy </p>
    pub fn set_resource_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.resource_arn = input;
        self
    }
    /// <p> The current revision of the resource policy. </p>
    pub fn revision(mut self, input: impl Into<std::string::String>) -> Self {
        self.revision = Some(input.into());
        self
    }
    /// <p> The current revision of the resource policy. </p>
    pub fn set_revision(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.revision = input;
        self
    }
    /// <p> The resource policy formatted in JSON. </p>
    pub fn document(mut self, input: impl Into<std::string::String>) -> Self {
        self.document = Some(input.into());
        self
    }
    /// <p> The resource policy formatted in JSON. </p>
    pub fn set_document(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.document = input;
        self
    }
    /// Consumes the builder and constructs a [`ResourcePolicy`](crate::types::ResourcePolicy).
    pub fn build(self) -> crate::types::ResourcePolicy {
        crate::types::ResourcePolicy {
            resource_arn: self.resource_arn,
            revision: self.revision,
            document: self.document,
        }
    }
}
