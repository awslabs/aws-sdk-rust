// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`StartConfigurationSession`](crate::operation::start_configuration_session::builders::StartConfigurationSessionFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_identifier(impl Into<String>)`](crate::operation::start_configuration_session::builders::StartConfigurationSessionFluentBuilder::application_identifier) / [`set_application_identifier(Option<String>)`](crate::operation::start_configuration_session::builders::StartConfigurationSessionFluentBuilder::set_application_identifier): <p>The application ID or the application name.</p>
    ///   - [`environment_identifier(impl Into<String>)`](crate::operation::start_configuration_session::builders::StartConfigurationSessionFluentBuilder::environment_identifier) / [`set_environment_identifier(Option<String>)`](crate::operation::start_configuration_session::builders::StartConfigurationSessionFluentBuilder::set_environment_identifier): <p>The environment ID or the environment name.</p>
    ///   - [`configuration_profile_identifier(impl Into<String>)`](crate::operation::start_configuration_session::builders::StartConfigurationSessionFluentBuilder::configuration_profile_identifier) / [`set_configuration_profile_identifier(Option<String>)`](crate::operation::start_configuration_session::builders::StartConfigurationSessionFluentBuilder::set_configuration_profile_identifier): <p>The configuration profile ID or the configuration profile name.</p>
    ///   - [`required_minimum_poll_interval_in_seconds(i32)`](crate::operation::start_configuration_session::builders::StartConfigurationSessionFluentBuilder::required_minimum_poll_interval_in_seconds) / [`set_required_minimum_poll_interval_in_seconds(Option<i32>)`](crate::operation::start_configuration_session::builders::StartConfigurationSessionFluentBuilder::set_required_minimum_poll_interval_in_seconds): <p>Sets a constraint on a session. If you specify a value of, for example, 60 seconds, then the client that established the session can't call <code>GetLatestConfiguration</code> more frequently then every 60 seconds.</p>
    /// - On success, responds with [`StartConfigurationSessionOutput`](crate::operation::start_configuration_session::StartConfigurationSessionOutput) with field(s):
    ///   - [`initial_configuration_token(Option<String>)`](crate::operation::start_configuration_session::StartConfigurationSessionOutput::initial_configuration_token): <p>Token encapsulating state about the configuration session. Provide this token to the <code>GetLatestConfiguration</code> API to retrieve configuration data.</p> <important>   <p>This token should only be used once in your first call to <code>GetLatestConfiguration</code>. You MUST use the new token in the <code>GetLatestConfiguration</code> response (<code>NextPollConfigurationToken</code>) in each subsequent call to <code>GetLatestConfiguration</code>.</p>  </important>
    /// - On failure, responds with [`SdkError<StartConfigurationSessionError>`](crate::operation::start_configuration_session::StartConfigurationSessionError)
    pub fn start_configuration_session(&self) -> crate::operation::start_configuration_session::builders::StartConfigurationSessionFluentBuilder{
        crate::operation::start_configuration_session::builders::StartConfigurationSessionFluentBuilder::new(self.handle.clone())
    }
}
