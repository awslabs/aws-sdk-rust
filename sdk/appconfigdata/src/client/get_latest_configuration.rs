// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetLatestConfiguration`](crate::operation::get_latest_configuration::builders::GetLatestConfigurationFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`configuration_token(impl Into<String>)`](crate::operation::get_latest_configuration::builders::GetLatestConfigurationFluentBuilder::configuration_token) / [`set_configuration_token(Option<String>)`](crate::operation::get_latest_configuration::builders::GetLatestConfigurationFluentBuilder::set_configuration_token):<br>required: **true**<br><p>Token describing the current state of the configuration session. To obtain a token, first call the <code>StartConfigurationSession</code> API. Note that every call to <code>GetLatestConfiguration</code> will return a new <code>ConfigurationToken</code> (<code>NextPollConfigurationToken</code> in the response) and <i>must</i> be provided to subsequent <code>GetLatestConfiguration</code> API calls.</p> <important>   <p>This token should only be used once. To support long poll use cases, the token is valid for up to 24 hours. If a <code>GetLatestConfiguration</code> call uses an expired token, the system returns <code>BadRequestException</code>.</p>  </important><br>
    /// - On success, responds with [`GetLatestConfigurationOutput`](crate::operation::get_latest_configuration::GetLatestConfigurationOutput) with field(s):
    ///   - [`next_poll_configuration_token(Option<String>)`](crate::operation::get_latest_configuration::GetLatestConfigurationOutput::next_poll_configuration_token): <p>The latest token describing the current state of the configuration session. This <i>must</i> be provided to the next call to <code>GetLatestConfiguration.</code> </p> <important>   <p>This token should only be used once. To support long poll use cases, the token is valid for up to 24 hours. If a <code>GetLatestConfiguration</code> call uses an expired token, the system returns <code>BadRequestException</code>.</p>  </important>
    ///   - [`next_poll_interval_in_seconds(i32)`](crate::operation::get_latest_configuration::GetLatestConfigurationOutput::next_poll_interval_in_seconds): <p>The amount of time the client should wait before polling for configuration updates again. Use <code>RequiredMinimumPollIntervalInSeconds</code> to set the desired poll interval.</p>
    ///   - [`content_type(Option<String>)`](crate::operation::get_latest_configuration::GetLatestConfigurationOutput::content_type): <p>A standard MIME type describing the format of the configuration content.</p>
    ///   - [`configuration(Option<Blob>)`](crate::operation::get_latest_configuration::GetLatestConfigurationOutput::configuration): <p>The data of the configuration. This may be empty if the client already has the latest version of configuration.</p>
    ///   - [`version_label(Option<String>)`](crate::operation::get_latest_configuration::GetLatestConfigurationOutput::version_label): <p>The user-defined label for the AppConfig hosted configuration version. This attribute doesn't apply if the configuration is not from an AppConfig hosted configuration version. If the client already has the latest version of the configuration data, this value is empty.</p>
    /// - On failure, responds with [`SdkError<GetLatestConfigurationError>`](crate::operation::get_latest_configuration::GetLatestConfigurationError)
    pub fn get_latest_configuration(&self) -> crate::operation::get_latest_configuration::builders::GetLatestConfigurationFluentBuilder {
        crate::operation::get_latest_configuration::builders::GetLatestConfigurationFluentBuilder::new(self.handle.clone())
    }
}
