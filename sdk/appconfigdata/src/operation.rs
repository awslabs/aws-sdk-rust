// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
/// Operation shape for `GetLatestConfiguration`.
///
/// This is usually constructed for you using the the fluent builder returned by
/// [`get_latest_configuration`](crate::client::Client::get_latest_configuration).
///
/// See [`crate::client::fluent_builders::GetLatestConfiguration`] for more details about the operation.
#[derive(std::default::Default, std::clone::Clone, std::fmt::Debug)]
pub struct GetLatestConfiguration {
    _private: (),
}
impl GetLatestConfiguration {
    /// Creates a new builder-style object to manufacture [`GetLatestConfigurationInput`](crate::input::GetLatestConfigurationInput)
    pub fn builder() -> crate::input::get_latest_configuration_input::Builder {
        crate::input::get_latest_configuration_input::Builder::default()
    }
    /// Creates a new `GetLatestConfiguration` operation.
    pub fn new() -> Self {
        Self { _private: () }
    }
}
impl aws_smithy_http::response::ParseStrictResponse for GetLatestConfiguration {
    type Output = std::result::Result<
        crate::output::GetLatestConfigurationOutput,
        crate::error::GetLatestConfigurationError,
    >;
    fn parse(&self, response: &http::Response<bytes::Bytes>) -> Self::Output {
        if !response.status().is_success() && response.status().as_u16() != 200 {
            crate::operation_deser::parse_get_latest_configuration_error(response)
        } else {
            crate::operation_deser::parse_get_latest_configuration_response(response)
        }
    }
}

/// Operation shape for `StartConfigurationSession`.
///
/// This is usually constructed for you using the the fluent builder returned by
/// [`start_configuration_session`](crate::client::Client::start_configuration_session).
///
/// See [`crate::client::fluent_builders::StartConfigurationSession`] for more details about the operation.
#[derive(std::default::Default, std::clone::Clone, std::fmt::Debug)]
pub struct StartConfigurationSession {
    _private: (),
}
impl StartConfigurationSession {
    /// Creates a new builder-style object to manufacture [`StartConfigurationSessionInput`](crate::input::StartConfigurationSessionInput)
    pub fn builder() -> crate::input::start_configuration_session_input::Builder {
        crate::input::start_configuration_session_input::Builder::default()
    }
    /// Creates a new `StartConfigurationSession` operation.
    pub fn new() -> Self {
        Self { _private: () }
    }
}
impl aws_smithy_http::response::ParseStrictResponse for StartConfigurationSession {
    type Output = std::result::Result<
        crate::output::StartConfigurationSessionOutput,
        crate::error::StartConfigurationSessionError,
    >;
    fn parse(&self, response: &http::Response<bytes::Bytes>) -> Self::Output {
        if !response.status().is_success() && response.status().as_u16() != 201 {
            crate::operation_deser::parse_start_configuration_session_error(response)
        } else {
            crate::operation_deser::parse_start_configuration_session_response(response)
        }
    }
}
