// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct Limits {
    #[allow(missing_docs)] // documentation missing in model
    #[doc(hidden)]
    pub maximum_replication_count: i32,
    #[allow(missing_docs)] // documentation missing in model
    #[doc(hidden)]
    pub maximum_partition_count: i32,
}
impl Limits {
    #[allow(missing_docs)] // documentation missing in model
    pub fn maximum_replication_count(&self) -> i32 {
        self.maximum_replication_count
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn maximum_partition_count(&self) -> i32 {
        self.maximum_partition_count
    }
}
impl Limits {
    /// Creates a new builder-style object to manufacture [`Limits`](crate::types::Limits).
    pub fn builder() -> crate::types::builders::LimitsBuilder {
        crate::types::builders::LimitsBuilder::default()
    }
}

/// A builder for [`Limits`](crate::types::Limits).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct LimitsBuilder {
    pub(crate) maximum_replication_count: std::option::Option<i32>,
    pub(crate) maximum_partition_count: std::option::Option<i32>,
}
impl LimitsBuilder {
    #[allow(missing_docs)] // documentation missing in model
    pub fn maximum_replication_count(mut self, input: i32) -> Self {
        self.maximum_replication_count = Some(input);
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_maximum_replication_count(mut self, input: std::option::Option<i32>) -> Self {
        self.maximum_replication_count = input;
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn maximum_partition_count(mut self, input: i32) -> Self {
        self.maximum_partition_count = Some(input);
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_maximum_partition_count(mut self, input: std::option::Option<i32>) -> Self {
        self.maximum_partition_count = input;
        self
    }
    /// Consumes the builder and constructs a [`Limits`](crate::types::Limits).
    pub fn build(self) -> crate::types::Limits {
        crate::types::Limits {
            maximum_replication_count: self.maximum_replication_count.unwrap_or_default(),
            maximum_partition_count: self.maximum_partition_count.unwrap_or_default(),
        }
    }
}
