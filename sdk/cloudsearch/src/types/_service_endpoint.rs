// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The endpoint to which service requests can be submitted.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ServiceEndpoint {
    /// <p>The endpoint to which service requests can be submitted. For example, <code>search-imdb-movies-oopcnjfn6ugofer3zx5iadxxca.eu-west-1.cloudsearch.amazonaws.com</code> or <code>doc-imdb-movies-oopcnjfn6ugofer3zx5iadxxca.eu-west-1.cloudsearch.amazonaws.com</code>.</p>
    #[doc(hidden)]
    pub endpoint: std::option::Option<std::string::String>,
}
impl ServiceEndpoint {
    /// <p>The endpoint to which service requests can be submitted. For example, <code>search-imdb-movies-oopcnjfn6ugofer3zx5iadxxca.eu-west-1.cloudsearch.amazonaws.com</code> or <code>doc-imdb-movies-oopcnjfn6ugofer3zx5iadxxca.eu-west-1.cloudsearch.amazonaws.com</code>.</p>
    pub fn endpoint(&self) -> std::option::Option<&str> {
        self.endpoint.as_deref()
    }
}
impl ServiceEndpoint {
    /// Creates a new builder-style object to manufacture [`ServiceEndpoint`](crate::types::ServiceEndpoint).
    pub fn builder() -> crate::types::builders::ServiceEndpointBuilder {
        crate::types::builders::ServiceEndpointBuilder::default()
    }
}

/// A builder for [`ServiceEndpoint`](crate::types::ServiceEndpoint).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ServiceEndpointBuilder {
    pub(crate) endpoint: std::option::Option<std::string::String>,
}
impl ServiceEndpointBuilder {
    /// <p>The endpoint to which service requests can be submitted. For example, <code>search-imdb-movies-oopcnjfn6ugofer3zx5iadxxca.eu-west-1.cloudsearch.amazonaws.com</code> or <code>doc-imdb-movies-oopcnjfn6ugofer3zx5iadxxca.eu-west-1.cloudsearch.amazonaws.com</code>.</p>
    pub fn endpoint(mut self, input: impl Into<std::string::String>) -> Self {
        self.endpoint = Some(input.into());
        self
    }
    /// <p>The endpoint to which service requests can be submitted. For example, <code>search-imdb-movies-oopcnjfn6ugofer3zx5iadxxca.eu-west-1.cloudsearch.amazonaws.com</code> or <code>doc-imdb-movies-oopcnjfn6ugofer3zx5iadxxca.eu-west-1.cloudsearch.amazonaws.com</code>.</p>
    pub fn set_endpoint(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.endpoint = input;
        self
    }
    /// Consumes the builder and constructs a [`ServiceEndpoint`](crate::types::ServiceEndpoint).
    pub fn build(self) -> crate::types::ServiceEndpoint {
        crate::types::ServiceEndpoint {
            endpoint: self.endpoint,
        }
    }
}
