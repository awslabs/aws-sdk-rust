// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeExpressions`](crate::client::fluent_builders::DescribeExpressions) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`domain_name(impl Into<String>)`](crate::client::fluent_builders::DescribeExpressions::domain_name) / [`set_domain_name(Option<String>)`](crate::client::fluent_builders::DescribeExpressions::set_domain_name): <p>The name of the domain you want to describe.</p>
    ///   - [`expression_names(Vec<String>)`](crate::client::fluent_builders::DescribeExpressions::expression_names) / [`set_expression_names(Option<Vec<String>>)`](crate::client::fluent_builders::DescribeExpressions::set_expression_names): <p>Limits the <code><code>DescribeExpressions</code></code> response to the specified expressions. If not specified, all expressions are shown.</p>
    ///   - [`deployed(bool)`](crate::client::fluent_builders::DescribeExpressions::deployed) / [`set_deployed(Option<bool>)`](crate::client::fluent_builders::DescribeExpressions::set_deployed): <p>Whether to display the deployed configuration (<code>true</code>) or include any pending changes (<code>false</code>). Defaults to <code>false</code>.</p>
    /// - On success, responds with [`DescribeExpressionsOutput`](crate::output::DescribeExpressionsOutput) with field(s):
    ///   - [`expressions(Option<Vec<ExpressionStatus>>)`](crate::output::DescribeExpressionsOutput::expressions): <p>The expressions configured for the domain.</p>
    /// - On failure, responds with [`SdkError<DescribeExpressionsError>`](crate::error::DescribeExpressionsError)
    pub fn describe_expressions(&self) -> crate::client::fluent_builders::DescribeExpressions {
        crate::client::fluent_builders::DescribeExpressions::new(self.handle.clone())
    }
}
