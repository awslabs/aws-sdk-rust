// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DefineAnalysisScheme`](crate::operation::define_analysis_scheme::builders::DefineAnalysisSchemeFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`domain_name(impl Into<String>)`](crate::operation::define_analysis_scheme::builders::DefineAnalysisSchemeFluentBuilder::domain_name) / [`set_domain_name(Option<String>)`](crate::operation::define_analysis_scheme::builders::DefineAnalysisSchemeFluentBuilder::set_domain_name):<br>required: **true**<br><p>A string that represents the name of a domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).</p><br>
    ///   - [`analysis_scheme(AnalysisScheme)`](crate::operation::define_analysis_scheme::builders::DefineAnalysisSchemeFluentBuilder::analysis_scheme) / [`set_analysis_scheme(Option<AnalysisScheme>)`](crate::operation::define_analysis_scheme::builders::DefineAnalysisSchemeFluentBuilder::set_analysis_scheme):<br>required: **true**<br><p>Configuration information for an analysis scheme. Each analysis scheme has a unique name and specifies the language of the text to be processed. The following options can be configured for an analysis scheme: <code>Synonyms</code>, <code>Stopwords</code>, <code>StemmingDictionary</code>, <code>JapaneseTokenizationDictionary</code> and <code>AlgorithmicStemming</code>.</p><br>
    /// - On success, responds with [`DefineAnalysisSchemeOutput`](crate::operation::define_analysis_scheme::DefineAnalysisSchemeOutput) with field(s):
    ///   - [`analysis_scheme(Option<AnalysisSchemeStatus>)`](crate::operation::define_analysis_scheme::DefineAnalysisSchemeOutput::analysis_scheme): <p>The status and configuration of an <code>AnalysisScheme</code>.</p>
    /// - On failure, responds with [`SdkError<DefineAnalysisSchemeError>`](crate::operation::define_analysis_scheme::DefineAnalysisSchemeError)
    pub fn define_analysis_scheme(&self) -> crate::operation::define_analysis_scheme::builders::DefineAnalysisSchemeFluentBuilder {
        crate::operation::define_analysis_scheme::builders::DefineAnalysisSchemeFluentBuilder::new(self.handle.clone())
    }
}
