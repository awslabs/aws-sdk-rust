// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The result of a <code>DescribeIndexFields</code> request. Contains the index fields configured for the domain specified in the request.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DescribeIndexFieldsOutput {
    /// <p>The index fields configured for the domain.</p>
    #[doc(hidden)]
    pub index_fields: std::option::Option<std::vec::Vec<crate::types::IndexFieldStatus>>,
    _request_id: Option<String>,
}
impl DescribeIndexFieldsOutput {
    /// <p>The index fields configured for the domain.</p>
    pub fn index_fields(&self) -> std::option::Option<&[crate::types::IndexFieldStatus]> {
        self.index_fields.as_deref()
    }
}
impl aws_http::request_id::RequestId for DescribeIndexFieldsOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl DescribeIndexFieldsOutput {
    /// Creates a new builder-style object to manufacture [`DescribeIndexFieldsOutput`](crate::operation::describe_index_fields::DescribeIndexFieldsOutput).
    pub fn builder(
    ) -> crate::operation::describe_index_fields::builders::DescribeIndexFieldsOutputBuilder {
        crate::operation::describe_index_fields::builders::DescribeIndexFieldsOutputBuilder::default(
        )
    }
}

/// A builder for [`DescribeIndexFieldsOutput`](crate::operation::describe_index_fields::DescribeIndexFieldsOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DescribeIndexFieldsOutputBuilder {
    pub(crate) index_fields: std::option::Option<std::vec::Vec<crate::types::IndexFieldStatus>>,
    _request_id: Option<String>,
}
impl DescribeIndexFieldsOutputBuilder {
    /// Appends an item to `index_fields`.
    ///
    /// To override the contents of this collection use [`set_index_fields`](Self::set_index_fields).
    ///
    /// <p>The index fields configured for the domain.</p>
    pub fn index_fields(mut self, input: crate::types::IndexFieldStatus) -> Self {
        let mut v = self.index_fields.unwrap_or_default();
        v.push(input);
        self.index_fields = Some(v);
        self
    }
    /// <p>The index fields configured for the domain.</p>
    pub fn set_index_fields(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::IndexFieldStatus>>,
    ) -> Self {
        self.index_fields = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`DescribeIndexFieldsOutput`](crate::operation::describe_index_fields::DescribeIndexFieldsOutput).
    pub fn build(self) -> crate::operation::describe_index_fields::DescribeIndexFieldsOutput {
        crate::operation::describe_index_fields::DescribeIndexFieldsOutput {
            index_fields: self.index_fields,
            _request_id: self._request_id,
        }
    }
}
