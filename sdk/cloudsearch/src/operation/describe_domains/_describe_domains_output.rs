// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The result of a <code>DescribeDomains</code> request. Contains the status of the domains specified in the request or all domains owned by the account.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DescribeDomainsOutput {
    /// <p>A list that contains the status of each requested domain.</p>
    pub domain_status_list: ::std::vec::Vec<crate::types::DomainStatus>,
    _request_id: Option<String>,
}
impl DescribeDomainsOutput {
    /// <p>A list that contains the status of each requested domain.</p>
    pub fn domain_status_list(&self) -> &[crate::types::DomainStatus] {
        use std::ops::Deref;
        self.domain_status_list.deref()
    }
}
impl ::aws_http::request_id::RequestId for DescribeDomainsOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl DescribeDomainsOutput {
    /// Creates a new builder-style object to manufacture [`DescribeDomainsOutput`](crate::operation::describe_domains::DescribeDomainsOutput).
    pub fn builder() -> crate::operation::describe_domains::builders::DescribeDomainsOutputBuilder {
        crate::operation::describe_domains::builders::DescribeDomainsOutputBuilder::default()
    }
}

/// A builder for [`DescribeDomainsOutput`](crate::operation::describe_domains::DescribeDomainsOutput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DescribeDomainsOutputBuilder {
    pub(crate) domain_status_list: ::std::option::Option<::std::vec::Vec<crate::types::DomainStatus>>,
    _request_id: Option<String>,
}
impl DescribeDomainsOutputBuilder {
    /// Appends an item to `domain_status_list`.
    ///
    /// To override the contents of this collection use [`set_domain_status_list`](Self::set_domain_status_list).
    ///
    /// <p>A list that contains the status of each requested domain.</p>
    pub fn domain_status_list(mut self, input: crate::types::DomainStatus) -> Self {
        let mut v = self.domain_status_list.unwrap_or_default();
        v.push(input);
        self.domain_status_list = ::std::option::Option::Some(v);
        self
    }
    /// <p>A list that contains the status of each requested domain.</p>
    pub fn set_domain_status_list(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::DomainStatus>>) -> Self {
        self.domain_status_list = input;
        self
    }
    /// <p>A list that contains the status of each requested domain.</p>
    pub fn get_domain_status_list(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::DomainStatus>> {
        &self.domain_status_list
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`DescribeDomainsOutput`](crate::operation::describe_domains::DescribeDomainsOutput).
    /// This method will fail if any of the following fields are not set:
    /// - [`domain_status_list`](crate::operation::describe_domains::builders::DescribeDomainsOutputBuilder::domain_status_list)
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::describe_domains::DescribeDomainsOutput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::operation::describe_domains::DescribeDomainsOutput {
            domain_status_list: self.domain_status_list.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "domain_status_list",
                    "domain_status_list was not specified but it is required when building DescribeDomainsOutput",
                )
            })?,
            _request_id: self._request_id,
        })
    }
}
