// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The result of a <code>BuildSuggester</code> request. Contains a list of the fields used for suggestions.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct BuildSuggestersOutput {
    /// <p>A list of field names.</p>
    pub field_names: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
    _request_id: Option<String>,
}
impl BuildSuggestersOutput {
    /// <p>A list of field names.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.field_names.is_none()`.
    pub fn field_names(&self) -> &[::std::string::String] {
        self.field_names.as_deref().unwrap_or_default()
    }
}
impl ::aws_http::request_id::RequestId for BuildSuggestersOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl BuildSuggestersOutput {
    /// Creates a new builder-style object to manufacture [`BuildSuggestersOutput`](crate::operation::build_suggesters::BuildSuggestersOutput).
    pub fn builder() -> crate::operation::build_suggesters::builders::BuildSuggestersOutputBuilder {
        crate::operation::build_suggesters::builders::BuildSuggestersOutputBuilder::default()
    }
}

/// A builder for [`BuildSuggestersOutput`](crate::operation::build_suggesters::BuildSuggestersOutput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct BuildSuggestersOutputBuilder {
    pub(crate) field_names: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
    _request_id: Option<String>,
}
impl BuildSuggestersOutputBuilder {
    /// Appends an item to `field_names`.
    ///
    /// To override the contents of this collection use [`set_field_names`](Self::set_field_names).
    ///
    /// <p>A list of field names.</p>
    pub fn field_names(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        let mut v = self.field_names.unwrap_or_default();
        v.push(input.into());
        self.field_names = ::std::option::Option::Some(v);
        self
    }
    /// <p>A list of field names.</p>
    pub fn set_field_names(mut self, input: ::std::option::Option<::std::vec::Vec<::std::string::String>>) -> Self {
        self.field_names = input;
        self
    }
    /// <p>A list of field names.</p>
    pub fn get_field_names(&self) -> &::std::option::Option<::std::vec::Vec<::std::string::String>> {
        &self.field_names
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`BuildSuggestersOutput`](crate::operation::build_suggesters::BuildSuggestersOutput).
    pub fn build(self) -> crate::operation::build_suggesters::BuildSuggestersOutput {
        crate::operation::build_suggesters::BuildSuggestersOutput {
            field_names: self.field_names,
            _request_id: self._request_id,
        }
    }
}
