// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The result of an <code>IndexDocuments</code> request. Contains the status of the indexing operation, including the fields being indexed.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct IndexDocumentsOutput {
    /// <p>The names of the fields that are currently being indexed.</p>
    #[doc(hidden)]
    pub field_names: std::option::Option<std::vec::Vec<std::string::String>>,
    _request_id: Option<String>,
}
impl IndexDocumentsOutput {
    /// <p>The names of the fields that are currently being indexed.</p>
    pub fn field_names(&self) -> std::option::Option<&[std::string::String]> {
        self.field_names.as_deref()
    }
}
impl aws_http::request_id::RequestId for IndexDocumentsOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl IndexDocumentsOutput {
    /// Creates a new builder-style object to manufacture [`IndexDocumentsOutput`](crate::operation::index_documents::IndexDocumentsOutput).
    pub fn builder() -> crate::operation::index_documents::builders::IndexDocumentsOutputBuilder {
        crate::operation::index_documents::builders::IndexDocumentsOutputBuilder::default()
    }
}

/// A builder for [`IndexDocumentsOutput`](crate::operation::index_documents::IndexDocumentsOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct IndexDocumentsOutputBuilder {
    pub(crate) field_names: std::option::Option<std::vec::Vec<std::string::String>>,
    _request_id: Option<String>,
}
impl IndexDocumentsOutputBuilder {
    /// Appends an item to `field_names`.
    ///
    /// To override the contents of this collection use [`set_field_names`](Self::set_field_names).
    ///
    /// <p>The names of the fields that are currently being indexed.</p>
    pub fn field_names(mut self, input: impl Into<std::string::String>) -> Self {
        let mut v = self.field_names.unwrap_or_default();
        v.push(input.into());
        self.field_names = Some(v);
        self
    }
    /// <p>The names of the fields that are currently being indexed.</p>
    pub fn set_field_names(
        mut self,
        input: std::option::Option<std::vec::Vec<std::string::String>>,
    ) -> Self {
        self.field_names = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`IndexDocumentsOutput`](crate::operation::index_documents::IndexDocumentsOutput).
    pub fn build(self) -> crate::operation::index_documents::IndexDocumentsOutput {
        crate::operation::index_documents::IndexDocumentsOutput {
            field_names: self.field_names,
            _request_id: self._request_id,
        }
    }
}
