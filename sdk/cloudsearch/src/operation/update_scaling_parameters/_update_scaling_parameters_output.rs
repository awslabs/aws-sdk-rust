// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The result of a <code>UpdateScalingParameters</code> request. Contains the status of the newly-configured scaling parameters.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct UpdateScalingParametersOutput {
    /// <p>The status and configuration of a search domain's scaling parameters. </p>
    #[doc(hidden)]
    pub scaling_parameters: std::option::Option<crate::types::ScalingParametersStatus>,
    _request_id: Option<String>,
}
impl UpdateScalingParametersOutput {
    /// <p>The status and configuration of a search domain's scaling parameters. </p>
    pub fn scaling_parameters(
        &self,
    ) -> std::option::Option<&crate::types::ScalingParametersStatus> {
        self.scaling_parameters.as_ref()
    }
}
impl aws_http::request_id::RequestId for UpdateScalingParametersOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl UpdateScalingParametersOutput {
    /// Creates a new builder-style object to manufacture [`UpdateScalingParametersOutput`](crate::operation::update_scaling_parameters::UpdateScalingParametersOutput).
    pub fn builder(
    ) -> crate::operation::update_scaling_parameters::builders::UpdateScalingParametersOutputBuilder
    {
        crate::operation::update_scaling_parameters::builders::UpdateScalingParametersOutputBuilder::default()
    }
}

/// A builder for [`UpdateScalingParametersOutput`](crate::operation::update_scaling_parameters::UpdateScalingParametersOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct UpdateScalingParametersOutputBuilder {
    pub(crate) scaling_parameters: std::option::Option<crate::types::ScalingParametersStatus>,
    _request_id: Option<String>,
}
impl UpdateScalingParametersOutputBuilder {
    /// <p>The status and configuration of a search domain's scaling parameters. </p>
    pub fn scaling_parameters(mut self, input: crate::types::ScalingParametersStatus) -> Self {
        self.scaling_parameters = Some(input);
        self
    }
    /// <p>The status and configuration of a search domain's scaling parameters. </p>
    pub fn set_scaling_parameters(
        mut self,
        input: std::option::Option<crate::types::ScalingParametersStatus>,
    ) -> Self {
        self.scaling_parameters = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`UpdateScalingParametersOutput`](crate::operation::update_scaling_parameters::UpdateScalingParametersOutput).
    pub fn build(
        self,
    ) -> crate::operation::update_scaling_parameters::UpdateScalingParametersOutput {
        crate::operation::update_scaling_parameters::UpdateScalingParametersOutput {
            scaling_parameters: self.scaling_parameters,
            _request_id: self._request_id,
        }
    }
}
