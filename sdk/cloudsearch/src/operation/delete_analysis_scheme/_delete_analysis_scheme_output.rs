// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The result of a <code>DeleteAnalysisScheme</code> request. Contains the status of the deleted analysis scheme.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DeleteAnalysisSchemeOutput {
    /// <p>The status of the analysis scheme being deleted.</p>
    #[doc(hidden)]
    pub analysis_scheme: std::option::Option<crate::types::AnalysisSchemeStatus>,
    _request_id: Option<String>,
}
impl DeleteAnalysisSchemeOutput {
    /// <p>The status of the analysis scheme being deleted.</p>
    pub fn analysis_scheme(&self) -> std::option::Option<&crate::types::AnalysisSchemeStatus> {
        self.analysis_scheme.as_ref()
    }
}
impl aws_http::request_id::RequestId for DeleteAnalysisSchemeOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl DeleteAnalysisSchemeOutput {
    /// Creates a new builder-style object to manufacture [`DeleteAnalysisSchemeOutput`](crate::operation::delete_analysis_scheme::DeleteAnalysisSchemeOutput).
    pub fn builder(
    ) -> crate::operation::delete_analysis_scheme::builders::DeleteAnalysisSchemeOutputBuilder {
        crate::operation::delete_analysis_scheme::builders::DeleteAnalysisSchemeOutputBuilder::default()
    }
}

/// A builder for [`DeleteAnalysisSchemeOutput`](crate::operation::delete_analysis_scheme::DeleteAnalysisSchemeOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DeleteAnalysisSchemeOutputBuilder {
    pub(crate) analysis_scheme: std::option::Option<crate::types::AnalysisSchemeStatus>,
    _request_id: Option<String>,
}
impl DeleteAnalysisSchemeOutputBuilder {
    /// <p>The status of the analysis scheme being deleted.</p>
    pub fn analysis_scheme(mut self, input: crate::types::AnalysisSchemeStatus) -> Self {
        self.analysis_scheme = Some(input);
        self
    }
    /// <p>The status of the analysis scheme being deleted.</p>
    pub fn set_analysis_scheme(
        mut self,
        input: std::option::Option<crate::types::AnalysisSchemeStatus>,
    ) -> Self {
        self.analysis_scheme = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`DeleteAnalysisSchemeOutput`](crate::operation::delete_analysis_scheme::DeleteAnalysisSchemeOutput).
    pub fn build(self) -> crate::operation::delete_analysis_scheme::DeleteAnalysisSchemeOutput {
        crate::operation::delete_analysis_scheme::DeleteAnalysisSchemeOutput {
            analysis_scheme: self.analysis_scheme,
            _request_id: self._request_id,
        }
    }
}
