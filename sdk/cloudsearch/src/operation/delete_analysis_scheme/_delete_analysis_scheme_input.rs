// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Container for the parameters to the <code><code>DeleteAnalysisScheme</code></code> operation. Specifies the name of the domain you want to update and the analysis scheme you want to delete. </p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DeleteAnalysisSchemeInput {
    /// <p>A string that represents the name of a domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).</p>
    #[doc(hidden)]
    pub domain_name: std::option::Option<std::string::String>,
    /// <p>The name of the analysis scheme you want to delete.</p>
    #[doc(hidden)]
    pub analysis_scheme_name: std::option::Option<std::string::String>,
}
impl DeleteAnalysisSchemeInput {
    /// <p>A string that represents the name of a domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).</p>
    pub fn domain_name(&self) -> std::option::Option<&str> {
        self.domain_name.as_deref()
    }
    /// <p>The name of the analysis scheme you want to delete.</p>
    pub fn analysis_scheme_name(&self) -> std::option::Option<&str> {
        self.analysis_scheme_name.as_deref()
    }
}
impl DeleteAnalysisSchemeInput {
    /// Creates a new builder-style object to manufacture [`DeleteAnalysisSchemeInput`](crate::operation::delete_analysis_scheme::DeleteAnalysisSchemeInput).
    pub fn builder(
    ) -> crate::operation::delete_analysis_scheme::builders::DeleteAnalysisSchemeInputBuilder {
        crate::operation::delete_analysis_scheme::builders::DeleteAnalysisSchemeInputBuilder::default()
    }
}

/// A builder for [`DeleteAnalysisSchemeInput`](crate::operation::delete_analysis_scheme::DeleteAnalysisSchemeInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DeleteAnalysisSchemeInputBuilder {
    pub(crate) domain_name: std::option::Option<std::string::String>,
    pub(crate) analysis_scheme_name: std::option::Option<std::string::String>,
}
impl DeleteAnalysisSchemeInputBuilder {
    /// <p>A string that represents the name of a domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).</p>
    pub fn domain_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.domain_name = Some(input.into());
        self
    }
    /// <p>A string that represents the name of a domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen).</p>
    pub fn set_domain_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.domain_name = input;
        self
    }
    /// <p>The name of the analysis scheme you want to delete.</p>
    pub fn analysis_scheme_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.analysis_scheme_name = Some(input.into());
        self
    }
    /// <p>The name of the analysis scheme you want to delete.</p>
    pub fn set_analysis_scheme_name(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.analysis_scheme_name = input;
        self
    }
    /// Consumes the builder and constructs a [`DeleteAnalysisSchemeInput`](crate::operation::delete_analysis_scheme::DeleteAnalysisSchemeInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::delete_analysis_scheme::DeleteAnalysisSchemeInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::delete_analysis_scheme::DeleteAnalysisSchemeInput {
                domain_name: self.domain_name,
                analysis_scheme_name: self.analysis_scheme_name,
            },
        )
    }
}
