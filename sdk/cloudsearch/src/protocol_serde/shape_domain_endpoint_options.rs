// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(unused_mut)]
pub fn ser_domain_endpoint_options(
    mut writer: aws_smithy_query::QueryValueWriter,
    input: &crate::types::DomainEndpointOptions,
) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    #[allow(unused_mut)]
    let mut scope_1 = writer.prefix("EnforceHTTPS");
    if let Some(var_2) = &input.enforce_https {
        scope_1.boolean(*var_2);
    }
    #[allow(unused_mut)]
    let mut scope_3 = writer.prefix("TLSSecurityPolicy");
    if let Some(var_4) = &input.tls_security_policy {
        scope_3.string(var_4.as_str());
    }
    Ok(())
}

pub fn de_domain_endpoint_options(
    decoder: &mut aws_smithy_xml::decode::ScopedDecoder,
) -> Result<crate::types::DomainEndpointOptions, aws_smithy_xml::decode::XmlDecodeError> {
    #[allow(unused_mut)]
    let mut builder = crate::types::DomainEndpointOptions::builder();
    while let Some(mut tag) = decoder.next_tag() {
        match tag.start_el() {
            s if s.matches("EnforceHTTPS") /* EnforceHTTPS com.amazonaws.cloudsearch#DomainEndpointOptions$EnforceHTTPS */ =>  {
                let var_5 =
                    Some(
                         {
                            <bool as aws_smithy_types::primitive::Parse>::parse_smithy_primitive(
                                aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                            .map_err(|_|aws_smithy_xml::decode::XmlDecodeError::custom("expected (boolean: `com.amazonaws.cloudsearch#Boolean`)"))
                        }
                        ?
                    )
                ;
                builder = builder.set_enforce_https(var_5);
            }
            ,
            s if s.matches("TLSSecurityPolicy") /* TLSSecurityPolicy com.amazonaws.cloudsearch#DomainEndpointOptions$TLSSecurityPolicy */ =>  {
                let var_6 =
                    Some(
                        Result::<crate::types::TlsSecurityPolicy, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            crate::types::TlsSecurityPolicy::from(
                                aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                        )
                        ?
                    )
                ;
                builder = builder.set_tls_security_policy(var_6);
            }
            ,
            _ => {}
        }
    }
    Ok(builder.build())
}
