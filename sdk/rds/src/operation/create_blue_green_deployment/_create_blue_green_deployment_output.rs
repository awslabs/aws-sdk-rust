// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct CreateBlueGreenDeploymentOutput {
    /// <p>Contains the details about a blue/green deployment.</p>
    /// <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/blue-green-deployments.html">Using Amazon RDS Blue/Green Deployments for database updates</a> in the <i>Amazon RDS User Guide</i> and <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/blue-green-deployments.html"> Using Amazon RDS Blue/Green Deployments for database updates</a> in the <i>Amazon Aurora User Guide</i>.</p>
    #[doc(hidden)]
    pub blue_green_deployment: std::option::Option<crate::types::BlueGreenDeployment>,
    _request_id: Option<String>,
}
impl CreateBlueGreenDeploymentOutput {
    /// <p>Contains the details about a blue/green deployment.</p>
    /// <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/blue-green-deployments.html">Using Amazon RDS Blue/Green Deployments for database updates</a> in the <i>Amazon RDS User Guide</i> and <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/blue-green-deployments.html"> Using Amazon RDS Blue/Green Deployments for database updates</a> in the <i>Amazon Aurora User Guide</i>.</p>
    pub fn blue_green_deployment(&self) -> std::option::Option<&crate::types::BlueGreenDeployment> {
        self.blue_green_deployment.as_ref()
    }
}
impl aws_http::request_id::RequestId for CreateBlueGreenDeploymentOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl CreateBlueGreenDeploymentOutput {
    /// Creates a new builder-style object to manufacture [`CreateBlueGreenDeploymentOutput`](crate::operation::create_blue_green_deployment::CreateBlueGreenDeploymentOutput).
    pub fn builder() -> crate::operation::create_blue_green_deployment::builders::CreateBlueGreenDeploymentOutputBuilder{
        crate::operation::create_blue_green_deployment::builders::CreateBlueGreenDeploymentOutputBuilder::default()
    }
}

/// A builder for [`CreateBlueGreenDeploymentOutput`](crate::operation::create_blue_green_deployment::CreateBlueGreenDeploymentOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct CreateBlueGreenDeploymentOutputBuilder {
    pub(crate) blue_green_deployment: std::option::Option<crate::types::BlueGreenDeployment>,
    _request_id: Option<String>,
}
impl CreateBlueGreenDeploymentOutputBuilder {
    /// <p>Contains the details about a blue/green deployment.</p>
    /// <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/blue-green-deployments.html">Using Amazon RDS Blue/Green Deployments for database updates</a> in the <i>Amazon RDS User Guide</i> and <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/blue-green-deployments.html"> Using Amazon RDS Blue/Green Deployments for database updates</a> in the <i>Amazon Aurora User Guide</i>.</p>
    pub fn blue_green_deployment(mut self, input: crate::types::BlueGreenDeployment) -> Self {
        self.blue_green_deployment = Some(input);
        self
    }
    /// <p>Contains the details about a blue/green deployment.</p>
    /// <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/blue-green-deployments.html">Using Amazon RDS Blue/Green Deployments for database updates</a> in the <i>Amazon RDS User Guide</i> and <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/blue-green-deployments.html"> Using Amazon RDS Blue/Green Deployments for database updates</a> in the <i>Amazon Aurora User Guide</i>.</p>
    pub fn set_blue_green_deployment(
        mut self,
        input: std::option::Option<crate::types::BlueGreenDeployment>,
    ) -> Self {
        self.blue_green_deployment = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`CreateBlueGreenDeploymentOutput`](crate::operation::create_blue_green_deployment::CreateBlueGreenDeploymentOutput).
    pub fn build(
        self,
    ) -> crate::operation::create_blue_green_deployment::CreateBlueGreenDeploymentOutput {
        crate::operation::create_blue_green_deployment::CreateBlueGreenDeploymentOutput {
            blue_green_deployment: self.blue_green_deployment,
            _request_id: self._request_id,
        }
    }
}
