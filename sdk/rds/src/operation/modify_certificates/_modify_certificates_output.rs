// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ModifyCertificatesOutput {
    /// <p>A CA certificate for an Amazon Web Services account.</p>
    /// <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.SSL.html">Using SSL/TLS to encrypt a connection to a DB instance</a> in the <i>Amazon RDS User Guide</i> and <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.SSL.html"> Using SSL/TLS to encrypt a connection to a DB cluster</a> in the <i>Amazon Aurora User Guide</i>.</p>
    #[doc(hidden)]
    pub certificate: std::option::Option<crate::types::Certificate>,
    _request_id: Option<String>,
}
impl ModifyCertificatesOutput {
    /// <p>A CA certificate for an Amazon Web Services account.</p>
    /// <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.SSL.html">Using SSL/TLS to encrypt a connection to a DB instance</a> in the <i>Amazon RDS User Guide</i> and <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.SSL.html"> Using SSL/TLS to encrypt a connection to a DB cluster</a> in the <i>Amazon Aurora User Guide</i>.</p>
    pub fn certificate(&self) -> std::option::Option<&crate::types::Certificate> {
        self.certificate.as_ref()
    }
}
impl aws_http::request_id::RequestId for ModifyCertificatesOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl ModifyCertificatesOutput {
    /// Creates a new builder-style object to manufacture [`ModifyCertificatesOutput`](crate::operation::modify_certificates::ModifyCertificatesOutput).
    pub fn builder(
    ) -> crate::operation::modify_certificates::builders::ModifyCertificatesOutputBuilder {
        crate::operation::modify_certificates::builders::ModifyCertificatesOutputBuilder::default()
    }
}

/// A builder for [`ModifyCertificatesOutput`](crate::operation::modify_certificates::ModifyCertificatesOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ModifyCertificatesOutputBuilder {
    pub(crate) certificate: std::option::Option<crate::types::Certificate>,
    _request_id: Option<String>,
}
impl ModifyCertificatesOutputBuilder {
    /// <p>A CA certificate for an Amazon Web Services account.</p>
    /// <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.SSL.html">Using SSL/TLS to encrypt a connection to a DB instance</a> in the <i>Amazon RDS User Guide</i> and <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.SSL.html"> Using SSL/TLS to encrypt a connection to a DB cluster</a> in the <i>Amazon Aurora User Guide</i>.</p>
    pub fn certificate(mut self, input: crate::types::Certificate) -> Self {
        self.certificate = Some(input);
        self
    }
    /// <p>A CA certificate for an Amazon Web Services account.</p>
    /// <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.SSL.html">Using SSL/TLS to encrypt a connection to a DB instance</a> in the <i>Amazon RDS User Guide</i> and <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.SSL.html"> Using SSL/TLS to encrypt a connection to a DB cluster</a> in the <i>Amazon Aurora User Guide</i>.</p>
    pub fn set_certificate(
        mut self,
        input: std::option::Option<crate::types::Certificate>,
    ) -> Self {
        self.certificate = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`ModifyCertificatesOutput`](crate::operation::modify_certificates::ModifyCertificatesOutput).
    pub fn build(self) -> crate::operation::modify_certificates::ModifyCertificatesOutput {
        crate::operation::modify_certificates::ModifyCertificatesOutput {
            certificate: self.certificate,
            _request_id: self._request_id,
        }
    }
}
