// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p></p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DeleteDbSnapshotInput {
    /// <p>The DB snapshot identifier.</p>
    /// <p>Constraints: Must be the name of an existing DB snapshot in the <code>available</code> state.</p>
    #[doc(hidden)]
    pub db_snapshot_identifier: std::option::Option<std::string::String>,
}
impl DeleteDbSnapshotInput {
    /// <p>The DB snapshot identifier.</p>
    /// <p>Constraints: Must be the name of an existing DB snapshot in the <code>available</code> state.</p>
    pub fn db_snapshot_identifier(&self) -> std::option::Option<&str> {
        self.db_snapshot_identifier.as_deref()
    }
}
impl DeleteDbSnapshotInput {
    /// Creates a new builder-style object to manufacture [`DeleteDbSnapshotInput`](crate::operation::delete_db_snapshot::DeleteDbSnapshotInput).
    pub fn builder() -> crate::operation::delete_db_snapshot::builders::DeleteDbSnapshotInputBuilder
    {
        crate::operation::delete_db_snapshot::builders::DeleteDbSnapshotInputBuilder::default()
    }
}

/// A builder for [`DeleteDbSnapshotInput`](crate::operation::delete_db_snapshot::DeleteDbSnapshotInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DeleteDbSnapshotInputBuilder {
    pub(crate) db_snapshot_identifier: std::option::Option<std::string::String>,
}
impl DeleteDbSnapshotInputBuilder {
    /// <p>The DB snapshot identifier.</p>
    /// <p>Constraints: Must be the name of an existing DB snapshot in the <code>available</code> state.</p>
    pub fn db_snapshot_identifier(mut self, input: impl Into<std::string::String>) -> Self {
        self.db_snapshot_identifier = Some(input.into());
        self
    }
    /// <p>The DB snapshot identifier.</p>
    /// <p>Constraints: Must be the name of an existing DB snapshot in the <code>available</code> state.</p>
    pub fn set_db_snapshot_identifier(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.db_snapshot_identifier = input;
        self
    }
    /// Consumes the builder and constructs a [`DeleteDbSnapshotInput`](crate::operation::delete_db_snapshot::DeleteDbSnapshotInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::delete_db_snapshot::DeleteDbSnapshotInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::delete_db_snapshot::DeleteDbSnapshotInput {
                db_snapshot_identifier: self.db_snapshot_identifier,
            },
        )
    }
}
