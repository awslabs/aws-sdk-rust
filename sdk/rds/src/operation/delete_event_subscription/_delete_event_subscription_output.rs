// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DeleteEventSubscriptionOutput {
    /// <p>Contains the results of a successful invocation of the <code>DescribeEventSubscriptions</code> action.</p>
    #[doc(hidden)]
    pub event_subscription: std::option::Option<crate::types::EventSubscription>,
    _request_id: Option<String>,
}
impl DeleteEventSubscriptionOutput {
    /// <p>Contains the results of a successful invocation of the <code>DescribeEventSubscriptions</code> action.</p>
    pub fn event_subscription(&self) -> std::option::Option<&crate::types::EventSubscription> {
        self.event_subscription.as_ref()
    }
}
impl aws_http::request_id::RequestId for DeleteEventSubscriptionOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl DeleteEventSubscriptionOutput {
    /// Creates a new builder-style object to manufacture [`DeleteEventSubscriptionOutput`](crate::operation::delete_event_subscription::DeleteEventSubscriptionOutput).
    pub fn builder(
    ) -> crate::operation::delete_event_subscription::builders::DeleteEventSubscriptionOutputBuilder
    {
        crate::operation::delete_event_subscription::builders::DeleteEventSubscriptionOutputBuilder::default()
    }
}

/// A builder for [`DeleteEventSubscriptionOutput`](crate::operation::delete_event_subscription::DeleteEventSubscriptionOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DeleteEventSubscriptionOutputBuilder {
    pub(crate) event_subscription: std::option::Option<crate::types::EventSubscription>,
    _request_id: Option<String>,
}
impl DeleteEventSubscriptionOutputBuilder {
    /// <p>Contains the results of a successful invocation of the <code>DescribeEventSubscriptions</code> action.</p>
    pub fn event_subscription(mut self, input: crate::types::EventSubscription) -> Self {
        self.event_subscription = Some(input);
        self
    }
    /// <p>Contains the results of a successful invocation of the <code>DescribeEventSubscriptions</code> action.</p>
    pub fn set_event_subscription(
        mut self,
        input: std::option::Option<crate::types::EventSubscription>,
    ) -> Self {
        self.event_subscription = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`DeleteEventSubscriptionOutput`](crate::operation::delete_event_subscription::DeleteEventSubscriptionOutput).
    pub fn build(
        self,
    ) -> crate::operation::delete_event_subscription::DeleteEventSubscriptionOutput {
        crate::operation::delete_event_subscription::DeleteEventSubscriptionOutput {
            event_subscription: self.event_subscription,
            _request_id: self._request_id,
        }
    }
}
