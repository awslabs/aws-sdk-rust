// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub use crate::operation::copy_db_parameter_group::_copy_db_parameter_group_output::CopyDbParameterGroupOutputBuilder;

pub use crate::operation::copy_db_parameter_group::_copy_db_parameter_group_input::CopyDbParameterGroupInputBuilder;

/// Fluent builder constructing a request to `CopyDBParameterGroup`.
///
/// <p>Copies the specified DB parameter group.</p>
#[derive(std::clone::Clone, std::fmt::Debug)]
pub struct CopyDBParameterGroupFluentBuilder {
    handle: std::sync::Arc<crate::client::Handle>,
    inner: crate::operation::copy_db_parameter_group::builders::CopyDbParameterGroupInputBuilder,
}
impl CopyDBParameterGroupFluentBuilder {
    /// Creates a new `CopyDBParameterGroup`.
    pub(crate) fn new(handle: std::sync::Arc<crate::client::Handle>) -> Self {
        Self {
            handle,
            inner: Default::default(),
        }
    }

    /// Consume this builder, creating a customizable operation that can be modified before being
    /// sent. The operation's inner [http::Request] can be modified as well.
    pub async fn customize(
        self,
    ) -> std::result::Result<
        crate::client::customize::CustomizableOperation<
            crate::operation::copy_db_parameter_group::CopyDBParameterGroup,
            aws_http::retry::AwsResponseRetryClassifier,
        >,
        aws_smithy_http::result::SdkError<
            crate::operation::copy_db_parameter_group::CopyDBParameterGroupError,
        >,
    > {
        let handle = self.handle.clone();
        let operation = self
            .inner
            .build()
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?
            .make_operation(&handle.conf)
            .await
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?;
        Ok(crate::client::customize::CustomizableOperation { handle, operation })
    }

    /// Sends the request and returns the response.
    ///
    /// If an error occurs, an `SdkError` will be returned with additional details that
    /// can be matched against.
    ///
    /// By default, any retryable failures will be retried twice. Retry behavior
    /// is configurable with the [RetryConfig](aws_smithy_types::retry::RetryConfig), which can be
    /// set when configuring the client.
    pub async fn send(
        self,
    ) -> std::result::Result<
        crate::operation::copy_db_parameter_group::CopyDbParameterGroupOutput,
        aws_smithy_http::result::SdkError<
            crate::operation::copy_db_parameter_group::CopyDBParameterGroupError,
        >,
    > {
        let op = self
            .inner
            .build()
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?
            .make_operation(&self.handle.conf)
            .await
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?;
        self.handle.client.call(op).await
    }
    /// <p>The identifier or ARN for the source DB parameter group. For information about creating an ARN, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.ARN.html#USER_Tagging.ARN.Constructing"> Constructing an ARN for Amazon RDS</a> in the <i>Amazon RDS User Guide</i>.</p>
    /// <p>Constraints:</p>
    /// <ul>
    /// <li> <p>Must specify a valid DB parameter group.</p> </li>
    /// </ul>
    pub fn source_db_parameter_group_identifier(
        mut self,
        input: impl Into<std::string::String>,
    ) -> Self {
        self.inner = self
            .inner
            .source_db_parameter_group_identifier(input.into());
        self
    }
    /// <p>The identifier or ARN for the source DB parameter group. For information about creating an ARN, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.ARN.html#USER_Tagging.ARN.Constructing"> Constructing an ARN for Amazon RDS</a> in the <i>Amazon RDS User Guide</i>.</p>
    /// <p>Constraints:</p>
    /// <ul>
    /// <li> <p>Must specify a valid DB parameter group.</p> </li>
    /// </ul>
    pub fn set_source_db_parameter_group_identifier(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.inner = self.inner.set_source_db_parameter_group_identifier(input);
        self
    }
    /// <p>The identifier for the copied DB parameter group.</p>
    /// <p>Constraints:</p>
    /// <ul>
    /// <li> <p>Can't be null, empty, or blank</p> </li>
    /// <li> <p>Must contain from 1 to 255 letters, numbers, or hyphens</p> </li>
    /// <li> <p>First character must be a letter</p> </li>
    /// <li> <p>Can't end with a hyphen or contain two consecutive hyphens</p> </li>
    /// </ul>
    /// <p>Example: <code>my-db-parameter-group</code> </p>
    pub fn target_db_parameter_group_identifier(
        mut self,
        input: impl Into<std::string::String>,
    ) -> Self {
        self.inner = self
            .inner
            .target_db_parameter_group_identifier(input.into());
        self
    }
    /// <p>The identifier for the copied DB parameter group.</p>
    /// <p>Constraints:</p>
    /// <ul>
    /// <li> <p>Can't be null, empty, or blank</p> </li>
    /// <li> <p>Must contain from 1 to 255 letters, numbers, or hyphens</p> </li>
    /// <li> <p>First character must be a letter</p> </li>
    /// <li> <p>Can't end with a hyphen or contain two consecutive hyphens</p> </li>
    /// </ul>
    /// <p>Example: <code>my-db-parameter-group</code> </p>
    pub fn set_target_db_parameter_group_identifier(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.inner = self.inner.set_target_db_parameter_group_identifier(input);
        self
    }
    /// <p>A description for the copied DB parameter group.</p>
    pub fn target_db_parameter_group_description(
        mut self,
        input: impl Into<std::string::String>,
    ) -> Self {
        self.inner = self
            .inner
            .target_db_parameter_group_description(input.into());
        self
    }
    /// <p>A description for the copied DB parameter group.</p>
    pub fn set_target_db_parameter_group_description(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.inner = self.inner.set_target_db_parameter_group_description(input);
        self
    }
    /// Appends an item to `Tags`.
    ///
    /// To override the contents of this collection use [`set_tags`](Self::set_tags).
    ///
    /// <p>A list of tags. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html">Tagging Amazon RDS Resources</a> in the <i>Amazon RDS User Guide.</i> </p>
    pub fn tags(mut self, input: crate::types::Tag) -> Self {
        self.inner = self.inner.tags(input);
        self
    }
    /// <p>A list of tags. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html">Tagging Amazon RDS Resources</a> in the <i>Amazon RDS User Guide.</i> </p>
    pub fn set_tags(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::Tag>>,
    ) -> Self {
        self.inner = self.inner.set_tags(input);
        self
    }
}
