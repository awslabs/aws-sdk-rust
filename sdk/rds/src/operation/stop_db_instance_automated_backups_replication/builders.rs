// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub use crate::operation::stop_db_instance_automated_backups_replication::_stop_db_instance_automated_backups_replication_output::StopDbInstanceAutomatedBackupsReplicationOutputBuilder;

pub use crate::operation::stop_db_instance_automated_backups_replication::_stop_db_instance_automated_backups_replication_input::StopDbInstanceAutomatedBackupsReplicationInputBuilder;

/// Fluent builder constructing a request to `StopDBInstanceAutomatedBackupsReplication`.
///
/// <p>Stops automated backup replication for a DB instance.</p>
/// <p>This command doesn't apply to RDS Custom, Aurora MySQL, and Aurora PostgreSQL.</p>
/// <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_ReplicateBackups.html"> Replicating Automated Backups to Another Amazon Web Services Region</a> in the <i>Amazon RDS User Guide.</i> </p>
#[derive(std::clone::Clone, std::fmt::Debug)]
pub struct StopDBInstanceAutomatedBackupsReplicationFluentBuilder {
                handle: std::sync::Arc<crate::client::Handle>,
                inner: crate::operation::stop_db_instance_automated_backups_replication::builders::StopDbInstanceAutomatedBackupsReplicationInputBuilder
            }
impl StopDBInstanceAutomatedBackupsReplicationFluentBuilder {
    /// Creates a new `StopDBInstanceAutomatedBackupsReplication`.
    pub(crate) fn new(handle: std::sync::Arc<crate::client::Handle>) -> Self {
        Self {
            handle,
            inner: Default::default(),
        }
    }

    /// Consume this builder, creating a customizable operation that can be modified before being
    /// sent. The operation's inner [http::Request] can be modified as well.
                    pub async fn customize(self) -> std::result::Result<
                        crate::client::customize::CustomizableOperation<crate::operation::stop_db_instance_automated_backups_replication::StopDBInstanceAutomatedBackupsReplication, aws_http::retry::AwsResponseRetryClassifier,>,
                        aws_smithy_http::result::SdkError<crate::operation::stop_db_instance_automated_backups_replication::StopDBInstanceAutomatedBackupsReplicationError>
    >{
        let handle = self.handle.clone();
        let operation = self
            .inner
            .build()
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?
            .make_operation(&handle.conf)
            .await
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?;
        Ok(crate::client::customize::CustomizableOperation { handle, operation })
    }

    /// Sends the request and returns the response.
    ///
    /// If an error occurs, an `SdkError` will be returned with additional details that
    /// can be matched against.
    ///
    /// By default, any retryable failures will be retried twice. Retry behavior
    /// is configurable with the [RetryConfig](aws_smithy_types::retry::RetryConfig), which can be
    /// set when configuring the client.
                    pub async fn send(self) -> std::result::Result<crate::operation::stop_db_instance_automated_backups_replication::StopDbInstanceAutomatedBackupsReplicationOutput, aws_smithy_http::result::SdkError<crate::operation::stop_db_instance_automated_backups_replication::StopDBInstanceAutomatedBackupsReplicationError>>
                     {
        let op = self
            .inner
            .build()
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?
            .make_operation(&self.handle.conf)
            .await
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?;
        self.handle.client.call(op).await
    }
    /// <p>The Amazon Resource Name (ARN) of the source DB instance for which to stop replicating automated backups, for example, <code>arn:aws:rds:us-west-2:123456789012:db:mydatabase</code>.</p>
    pub fn source_db_instance_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.inner = self.inner.source_db_instance_arn(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the source DB instance for which to stop replicating automated backups, for example, <code>arn:aws:rds:us-west-2:123456789012:db:mydatabase</code>.</p>
    pub fn set_source_db_instance_arn(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.inner = self.inner.set_source_db_instance_arn(input);
        self
    }
}
