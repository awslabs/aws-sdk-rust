// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p></p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DescribeEngineDefaultParametersInput {
    /// <p>The name of the DB parameter group family.</p>
    /// <p>Valid Values:</p>
    /// <ul>
    /// <li> <p> <code>aurora5.6</code> </p> </li>
    /// <li> <p> <code>aurora-mysql5.7</code> </p> </li>
    /// <li> <p> <code>aurora-mysql8.0</code> </p> </li>
    /// <li> <p> <code>aurora-postgresql10</code> </p> </li>
    /// <li> <p> <code>aurora-postgresql11</code> </p> </li>
    /// <li> <p> <code>aurora-postgresql12</code> </p> </li>
    /// <li> <p> <code>aurora-postgresql13</code> </p> </li>
    /// <li> <p> <code>aurora-postgresql14</code> </p> </li>
    /// <li> <p> <code>custom-oracle-ee-19</code> </p> </li>
    /// <li> <p> <code>mariadb10.2</code> </p> </li>
    /// <li> <p> <code>mariadb10.3</code> </p> </li>
    /// <li> <p> <code>mariadb10.4</code> </p> </li>
    /// <li> <p> <code>mariadb10.5</code> </p> </li>
    /// <li> <p> <code>mariadb10.6</code> </p> </li>
    /// <li> <p> <code>mysql5.7</code> </p> </li>
    /// <li> <p> <code>mysql8.0</code> </p> </li>
    /// <li> <p> <code>oracle-ee-19</code> </p> </li>
    /// <li> <p> <code>oracle-ee-cdb-19</code> </p> </li>
    /// <li> <p> <code>oracle-ee-cdb-21</code> </p> </li>
    /// <li> <p> <code>oracle-se2-19</code> </p> </li>
    /// <li> <p> <code>oracle-se2-cdb-19</code> </p> </li>
    /// <li> <p> <code>oracle-se2-cdb-21</code> </p> </li>
    /// <li> <p> <code>postgres10</code> </p> </li>
    /// <li> <p> <code>postgres11</code> </p> </li>
    /// <li> <p> <code>postgres12</code> </p> </li>
    /// <li> <p> <code>postgres13</code> </p> </li>
    /// <li> <p> <code>postgres14</code> </p> </li>
    /// <li> <p> <code>sqlserver-ee-11.0</code> </p> </li>
    /// <li> <p> <code>sqlserver-ee-12.0</code> </p> </li>
    /// <li> <p> <code>sqlserver-ee-13.0</code> </p> </li>
    /// <li> <p> <code>sqlserver-ee-14.0</code> </p> </li>
    /// <li> <p> <code>sqlserver-ee-15.0</code> </p> </li>
    /// <li> <p> <code>sqlserver-ex-11.0</code> </p> </li>
    /// <li> <p> <code>sqlserver-ex-12.0</code> </p> </li>
    /// <li> <p> <code>sqlserver-ex-13.0</code> </p> </li>
    /// <li> <p> <code>sqlserver-ex-14.0</code> </p> </li>
    /// <li> <p> <code>sqlserver-ex-15.0</code> </p> </li>
    /// <li> <p> <code>sqlserver-se-11.0</code> </p> </li>
    /// <li> <p> <code>sqlserver-se-12.0</code> </p> </li>
    /// <li> <p> <code>sqlserver-se-13.0</code> </p> </li>
    /// <li> <p> <code>sqlserver-se-14.0</code> </p> </li>
    /// <li> <p> <code>sqlserver-se-15.0</code> </p> </li>
    /// <li> <p> <code>sqlserver-web-11.0</code> </p> </li>
    /// <li> <p> <code>sqlserver-web-12.0</code> </p> </li>
    /// <li> <p> <code>sqlserver-web-13.0</code> </p> </li>
    /// <li> <p> <code>sqlserver-web-14.0</code> </p> </li>
    /// <li> <p> <code>sqlserver-web-15.0</code> </p> </li>
    /// </ul>
    #[doc(hidden)]
    pub db_parameter_group_family: std::option::Option<std::string::String>,
    /// <p>This parameter isn't currently supported.</p>
    #[doc(hidden)]
    pub filters: std::option::Option<std::vec::Vec<crate::types::Filter>>,
    /// <p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so you can retrieve the remaining results.</p>
    /// <p>Default: 100</p>
    /// <p>Constraints: Minimum 20, maximum 100.</p>
    #[doc(hidden)]
    pub max_records: std::option::Option<i32>,
    /// <p>An optional pagination token provided by a previous <code>DescribeEngineDefaultParameters</code> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.</p>
    #[doc(hidden)]
    pub marker: std::option::Option<std::string::String>,
}
impl DescribeEngineDefaultParametersInput {
    /// <p>The name of the DB parameter group family.</p>
    /// <p>Valid Values:</p>
    /// <ul>
    /// <li> <p> <code>aurora5.6</code> </p> </li>
    /// <li> <p> <code>aurora-mysql5.7</code> </p> </li>
    /// <li> <p> <code>aurora-mysql8.0</code> </p> </li>
    /// <li> <p> <code>aurora-postgresql10</code> </p> </li>
    /// <li> <p> <code>aurora-postgresql11</code> </p> </li>
    /// <li> <p> <code>aurora-postgresql12</code> </p> </li>
    /// <li> <p> <code>aurora-postgresql13</code> </p> </li>
    /// <li> <p> <code>aurora-postgresql14</code> </p> </li>
    /// <li> <p> <code>custom-oracle-ee-19</code> </p> </li>
    /// <li> <p> <code>mariadb10.2</code> </p> </li>
    /// <li> <p> <code>mariadb10.3</code> </p> </li>
    /// <li> <p> <code>mariadb10.4</code> </p> </li>
    /// <li> <p> <code>mariadb10.5</code> </p> </li>
    /// <li> <p> <code>mariadb10.6</code> </p> </li>
    /// <li> <p> <code>mysql5.7</code> </p> </li>
    /// <li> <p> <code>mysql8.0</code> </p> </li>
    /// <li> <p> <code>oracle-ee-19</code> </p> </li>
    /// <li> <p> <code>oracle-ee-cdb-19</code> </p> </li>
    /// <li> <p> <code>oracle-ee-cdb-21</code> </p> </li>
    /// <li> <p> <code>oracle-se2-19</code> </p> </li>
    /// <li> <p> <code>oracle-se2-cdb-19</code> </p> </li>
    /// <li> <p> <code>oracle-se2-cdb-21</code> </p> </li>
    /// <li> <p> <code>postgres10</code> </p> </li>
    /// <li> <p> <code>postgres11</code> </p> </li>
    /// <li> <p> <code>postgres12</code> </p> </li>
    /// <li> <p> <code>postgres13</code> </p> </li>
    /// <li> <p> <code>postgres14</code> </p> </li>
    /// <li> <p> <code>sqlserver-ee-11.0</code> </p> </li>
    /// <li> <p> <code>sqlserver-ee-12.0</code> </p> </li>
    /// <li> <p> <code>sqlserver-ee-13.0</code> </p> </li>
    /// <li> <p> <code>sqlserver-ee-14.0</code> </p> </li>
    /// <li> <p> <code>sqlserver-ee-15.0</code> </p> </li>
    /// <li> <p> <code>sqlserver-ex-11.0</code> </p> </li>
    /// <li> <p> <code>sqlserver-ex-12.0</code> </p> </li>
    /// <li> <p> <code>sqlserver-ex-13.0</code> </p> </li>
    /// <li> <p> <code>sqlserver-ex-14.0</code> </p> </li>
    /// <li> <p> <code>sqlserver-ex-15.0</code> </p> </li>
    /// <li> <p> <code>sqlserver-se-11.0</code> </p> </li>
    /// <li> <p> <code>sqlserver-se-12.0</code> </p> </li>
    /// <li> <p> <code>sqlserver-se-13.0</code> </p> </li>
    /// <li> <p> <code>sqlserver-se-14.0</code> </p> </li>
    /// <li> <p> <code>sqlserver-se-15.0</code> </p> </li>
    /// <li> <p> <code>sqlserver-web-11.0</code> </p> </li>
    /// <li> <p> <code>sqlserver-web-12.0</code> </p> </li>
    /// <li> <p> <code>sqlserver-web-13.0</code> </p> </li>
    /// <li> <p> <code>sqlserver-web-14.0</code> </p> </li>
    /// <li> <p> <code>sqlserver-web-15.0</code> </p> </li>
    /// </ul>
    pub fn db_parameter_group_family(&self) -> std::option::Option<&str> {
        self.db_parameter_group_family.as_deref()
    }
    /// <p>This parameter isn't currently supported.</p>
    pub fn filters(&self) -> std::option::Option<&[crate::types::Filter]> {
        self.filters.as_deref()
    }
    /// <p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so you can retrieve the remaining results.</p>
    /// <p>Default: 100</p>
    /// <p>Constraints: Minimum 20, maximum 100.</p>
    pub fn max_records(&self) -> std::option::Option<i32> {
        self.max_records
    }
    /// <p>An optional pagination token provided by a previous <code>DescribeEngineDefaultParameters</code> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.</p>
    pub fn marker(&self) -> std::option::Option<&str> {
        self.marker.as_deref()
    }
}
impl DescribeEngineDefaultParametersInput {
    /// Creates a new builder-style object to manufacture [`DescribeEngineDefaultParametersInput`](crate::operation::describe_engine_default_parameters::DescribeEngineDefaultParametersInput).
    pub fn builder() -> crate::operation::describe_engine_default_parameters::builders::DescribeEngineDefaultParametersInputBuilder{
        crate::operation::describe_engine_default_parameters::builders::DescribeEngineDefaultParametersInputBuilder::default()
    }
}

/// A builder for [`DescribeEngineDefaultParametersInput`](crate::operation::describe_engine_default_parameters::DescribeEngineDefaultParametersInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DescribeEngineDefaultParametersInputBuilder {
    pub(crate) db_parameter_group_family: std::option::Option<std::string::String>,
    pub(crate) filters: std::option::Option<std::vec::Vec<crate::types::Filter>>,
    pub(crate) max_records: std::option::Option<i32>,
    pub(crate) marker: std::option::Option<std::string::String>,
}
impl DescribeEngineDefaultParametersInputBuilder {
    /// <p>The name of the DB parameter group family.</p>
    /// <p>Valid Values:</p>
    /// <ul>
    /// <li> <p> <code>aurora5.6</code> </p> </li>
    /// <li> <p> <code>aurora-mysql5.7</code> </p> </li>
    /// <li> <p> <code>aurora-mysql8.0</code> </p> </li>
    /// <li> <p> <code>aurora-postgresql10</code> </p> </li>
    /// <li> <p> <code>aurora-postgresql11</code> </p> </li>
    /// <li> <p> <code>aurora-postgresql12</code> </p> </li>
    /// <li> <p> <code>aurora-postgresql13</code> </p> </li>
    /// <li> <p> <code>aurora-postgresql14</code> </p> </li>
    /// <li> <p> <code>custom-oracle-ee-19</code> </p> </li>
    /// <li> <p> <code>mariadb10.2</code> </p> </li>
    /// <li> <p> <code>mariadb10.3</code> </p> </li>
    /// <li> <p> <code>mariadb10.4</code> </p> </li>
    /// <li> <p> <code>mariadb10.5</code> </p> </li>
    /// <li> <p> <code>mariadb10.6</code> </p> </li>
    /// <li> <p> <code>mysql5.7</code> </p> </li>
    /// <li> <p> <code>mysql8.0</code> </p> </li>
    /// <li> <p> <code>oracle-ee-19</code> </p> </li>
    /// <li> <p> <code>oracle-ee-cdb-19</code> </p> </li>
    /// <li> <p> <code>oracle-ee-cdb-21</code> </p> </li>
    /// <li> <p> <code>oracle-se2-19</code> </p> </li>
    /// <li> <p> <code>oracle-se2-cdb-19</code> </p> </li>
    /// <li> <p> <code>oracle-se2-cdb-21</code> </p> </li>
    /// <li> <p> <code>postgres10</code> </p> </li>
    /// <li> <p> <code>postgres11</code> </p> </li>
    /// <li> <p> <code>postgres12</code> </p> </li>
    /// <li> <p> <code>postgres13</code> </p> </li>
    /// <li> <p> <code>postgres14</code> </p> </li>
    /// <li> <p> <code>sqlserver-ee-11.0</code> </p> </li>
    /// <li> <p> <code>sqlserver-ee-12.0</code> </p> </li>
    /// <li> <p> <code>sqlserver-ee-13.0</code> </p> </li>
    /// <li> <p> <code>sqlserver-ee-14.0</code> </p> </li>
    /// <li> <p> <code>sqlserver-ee-15.0</code> </p> </li>
    /// <li> <p> <code>sqlserver-ex-11.0</code> </p> </li>
    /// <li> <p> <code>sqlserver-ex-12.0</code> </p> </li>
    /// <li> <p> <code>sqlserver-ex-13.0</code> </p> </li>
    /// <li> <p> <code>sqlserver-ex-14.0</code> </p> </li>
    /// <li> <p> <code>sqlserver-ex-15.0</code> </p> </li>
    /// <li> <p> <code>sqlserver-se-11.0</code> </p> </li>
    /// <li> <p> <code>sqlserver-se-12.0</code> </p> </li>
    /// <li> <p> <code>sqlserver-se-13.0</code> </p> </li>
    /// <li> <p> <code>sqlserver-se-14.0</code> </p> </li>
    /// <li> <p> <code>sqlserver-se-15.0</code> </p> </li>
    /// <li> <p> <code>sqlserver-web-11.0</code> </p> </li>
    /// <li> <p> <code>sqlserver-web-12.0</code> </p> </li>
    /// <li> <p> <code>sqlserver-web-13.0</code> </p> </li>
    /// <li> <p> <code>sqlserver-web-14.0</code> </p> </li>
    /// <li> <p> <code>sqlserver-web-15.0</code> </p> </li>
    /// </ul>
    pub fn db_parameter_group_family(mut self, input: impl Into<std::string::String>) -> Self {
        self.db_parameter_group_family = Some(input.into());
        self
    }
    /// <p>The name of the DB parameter group family.</p>
    /// <p>Valid Values:</p>
    /// <ul>
    /// <li> <p> <code>aurora5.6</code> </p> </li>
    /// <li> <p> <code>aurora-mysql5.7</code> </p> </li>
    /// <li> <p> <code>aurora-mysql8.0</code> </p> </li>
    /// <li> <p> <code>aurora-postgresql10</code> </p> </li>
    /// <li> <p> <code>aurora-postgresql11</code> </p> </li>
    /// <li> <p> <code>aurora-postgresql12</code> </p> </li>
    /// <li> <p> <code>aurora-postgresql13</code> </p> </li>
    /// <li> <p> <code>aurora-postgresql14</code> </p> </li>
    /// <li> <p> <code>custom-oracle-ee-19</code> </p> </li>
    /// <li> <p> <code>mariadb10.2</code> </p> </li>
    /// <li> <p> <code>mariadb10.3</code> </p> </li>
    /// <li> <p> <code>mariadb10.4</code> </p> </li>
    /// <li> <p> <code>mariadb10.5</code> </p> </li>
    /// <li> <p> <code>mariadb10.6</code> </p> </li>
    /// <li> <p> <code>mysql5.7</code> </p> </li>
    /// <li> <p> <code>mysql8.0</code> </p> </li>
    /// <li> <p> <code>oracle-ee-19</code> </p> </li>
    /// <li> <p> <code>oracle-ee-cdb-19</code> </p> </li>
    /// <li> <p> <code>oracle-ee-cdb-21</code> </p> </li>
    /// <li> <p> <code>oracle-se2-19</code> </p> </li>
    /// <li> <p> <code>oracle-se2-cdb-19</code> </p> </li>
    /// <li> <p> <code>oracle-se2-cdb-21</code> </p> </li>
    /// <li> <p> <code>postgres10</code> </p> </li>
    /// <li> <p> <code>postgres11</code> </p> </li>
    /// <li> <p> <code>postgres12</code> </p> </li>
    /// <li> <p> <code>postgres13</code> </p> </li>
    /// <li> <p> <code>postgres14</code> </p> </li>
    /// <li> <p> <code>sqlserver-ee-11.0</code> </p> </li>
    /// <li> <p> <code>sqlserver-ee-12.0</code> </p> </li>
    /// <li> <p> <code>sqlserver-ee-13.0</code> </p> </li>
    /// <li> <p> <code>sqlserver-ee-14.0</code> </p> </li>
    /// <li> <p> <code>sqlserver-ee-15.0</code> </p> </li>
    /// <li> <p> <code>sqlserver-ex-11.0</code> </p> </li>
    /// <li> <p> <code>sqlserver-ex-12.0</code> </p> </li>
    /// <li> <p> <code>sqlserver-ex-13.0</code> </p> </li>
    /// <li> <p> <code>sqlserver-ex-14.0</code> </p> </li>
    /// <li> <p> <code>sqlserver-ex-15.0</code> </p> </li>
    /// <li> <p> <code>sqlserver-se-11.0</code> </p> </li>
    /// <li> <p> <code>sqlserver-se-12.0</code> </p> </li>
    /// <li> <p> <code>sqlserver-se-13.0</code> </p> </li>
    /// <li> <p> <code>sqlserver-se-14.0</code> </p> </li>
    /// <li> <p> <code>sqlserver-se-15.0</code> </p> </li>
    /// <li> <p> <code>sqlserver-web-11.0</code> </p> </li>
    /// <li> <p> <code>sqlserver-web-12.0</code> </p> </li>
    /// <li> <p> <code>sqlserver-web-13.0</code> </p> </li>
    /// <li> <p> <code>sqlserver-web-14.0</code> </p> </li>
    /// <li> <p> <code>sqlserver-web-15.0</code> </p> </li>
    /// </ul>
    pub fn set_db_parameter_group_family(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.db_parameter_group_family = input;
        self
    }
    /// Appends an item to `filters`.
    ///
    /// To override the contents of this collection use [`set_filters`](Self::set_filters).
    ///
    /// <p>This parameter isn't currently supported.</p>
    pub fn filters(mut self, input: crate::types::Filter) -> Self {
        let mut v = self.filters.unwrap_or_default();
        v.push(input);
        self.filters = Some(v);
        self
    }
    /// <p>This parameter isn't currently supported.</p>
    pub fn set_filters(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::Filter>>,
    ) -> Self {
        self.filters = input;
        self
    }
    /// <p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so you can retrieve the remaining results.</p>
    /// <p>Default: 100</p>
    /// <p>Constraints: Minimum 20, maximum 100.</p>
    pub fn max_records(mut self, input: i32) -> Self {
        self.max_records = Some(input);
        self
    }
    /// <p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so you can retrieve the remaining results.</p>
    /// <p>Default: 100</p>
    /// <p>Constraints: Minimum 20, maximum 100.</p>
    pub fn set_max_records(mut self, input: std::option::Option<i32>) -> Self {
        self.max_records = input;
        self
    }
    /// <p>An optional pagination token provided by a previous <code>DescribeEngineDefaultParameters</code> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.</p>
    pub fn marker(mut self, input: impl Into<std::string::String>) -> Self {
        self.marker = Some(input.into());
        self
    }
    /// <p>An optional pagination token provided by a previous <code>DescribeEngineDefaultParameters</code> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.</p>
    pub fn set_marker(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.marker = input;
        self
    }
    /// Consumes the builder and constructs a [`DescribeEngineDefaultParametersInput`](crate::operation::describe_engine_default_parameters::DescribeEngineDefaultParametersInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::describe_engine_default_parameters::DescribeEngineDefaultParametersInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::describe_engine_default_parameters::DescribeEngineDefaultParametersInput {
                db_parameter_group_family: self.db_parameter_group_family
                ,
                filters: self.filters
                ,
                max_records: self.max_records
                ,
                marker: self.marker
                ,
            }
        )
    }
}
