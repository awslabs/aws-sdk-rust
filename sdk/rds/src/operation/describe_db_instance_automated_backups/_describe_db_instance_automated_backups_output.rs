// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains the result of a successful invocation of the <code>DescribeDBInstanceAutomatedBackups</code> action.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DescribeDbInstanceAutomatedBackupsOutput {
    /// <p>An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.</p>
    pub marker: ::std::option::Option<::std::string::String>,
    /// <p>A list of <code>DBInstanceAutomatedBackup</code> instances.</p>
    pub db_instance_automated_backups: ::std::option::Option<::std::vec::Vec<crate::types::DbInstanceAutomatedBackup>>,
    _request_id: Option<String>,
}
impl DescribeDbInstanceAutomatedBackupsOutput {
    /// <p>An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.</p>
    pub fn marker(&self) -> ::std::option::Option<&str> {
        self.marker.as_deref()
    }
    /// <p>A list of <code>DBInstanceAutomatedBackup</code> instances.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.db_instance_automated_backups.is_none()`.
    pub fn db_instance_automated_backups(&self) -> &[crate::types::DbInstanceAutomatedBackup] {
        self.db_instance_automated_backups.as_deref().unwrap_or_default()
    }
}
impl ::aws_http::request_id::RequestId for DescribeDbInstanceAutomatedBackupsOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl DescribeDbInstanceAutomatedBackupsOutput {
    /// Creates a new builder-style object to manufacture [`DescribeDbInstanceAutomatedBackupsOutput`](crate::operation::describe_db_instance_automated_backups::DescribeDbInstanceAutomatedBackupsOutput).
    pub fn builder() -> crate::operation::describe_db_instance_automated_backups::builders::DescribeDbInstanceAutomatedBackupsOutputBuilder {
        crate::operation::describe_db_instance_automated_backups::builders::DescribeDbInstanceAutomatedBackupsOutputBuilder::default()
    }
}

/// A builder for [`DescribeDbInstanceAutomatedBackupsOutput`](crate::operation::describe_db_instance_automated_backups::DescribeDbInstanceAutomatedBackupsOutput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DescribeDbInstanceAutomatedBackupsOutputBuilder {
    pub(crate) marker: ::std::option::Option<::std::string::String>,
    pub(crate) db_instance_automated_backups: ::std::option::Option<::std::vec::Vec<crate::types::DbInstanceAutomatedBackup>>,
    _request_id: Option<String>,
}
impl DescribeDbInstanceAutomatedBackupsOutputBuilder {
    /// <p>An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.</p>
    pub fn marker(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.marker = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.</p>
    pub fn set_marker(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.marker = input;
        self
    }
    /// <p>An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.</p>
    pub fn get_marker(&self) -> &::std::option::Option<::std::string::String> {
        &self.marker
    }
    /// Appends an item to `db_instance_automated_backups`.
    ///
    /// To override the contents of this collection use [`set_db_instance_automated_backups`](Self::set_db_instance_automated_backups).
    ///
    /// <p>A list of <code>DBInstanceAutomatedBackup</code> instances.</p>
    pub fn db_instance_automated_backups(mut self, input: crate::types::DbInstanceAutomatedBackup) -> Self {
        let mut v = self.db_instance_automated_backups.unwrap_or_default();
        v.push(input);
        self.db_instance_automated_backups = ::std::option::Option::Some(v);
        self
    }
    /// <p>A list of <code>DBInstanceAutomatedBackup</code> instances.</p>
    pub fn set_db_instance_automated_backups(
        mut self,
        input: ::std::option::Option<::std::vec::Vec<crate::types::DbInstanceAutomatedBackup>>,
    ) -> Self {
        self.db_instance_automated_backups = input;
        self
    }
    /// <p>A list of <code>DBInstanceAutomatedBackup</code> instances.</p>
    pub fn get_db_instance_automated_backups(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::DbInstanceAutomatedBackup>> {
        &self.db_instance_automated_backups
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`DescribeDbInstanceAutomatedBackupsOutput`](crate::operation::describe_db_instance_automated_backups::DescribeDbInstanceAutomatedBackupsOutput).
    pub fn build(self) -> crate::operation::describe_db_instance_automated_backups::DescribeDbInstanceAutomatedBackupsOutput {
        crate::operation::describe_db_instance_automated_backups::DescribeDbInstanceAutomatedBackupsOutput {
            marker: self.marker,
            db_instance_automated_backups: self.db_instance_automated_backups,
            _request_id: self._request_id,
        }
    }
}
