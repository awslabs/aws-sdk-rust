// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct CancelExportTaskInput {
    /// <p>The identifier of the snapshot export task to cancel.</p>
    #[doc(hidden)]
    pub export_task_identifier: std::option::Option<std::string::String>,
}
impl CancelExportTaskInput {
    /// <p>The identifier of the snapshot export task to cancel.</p>
    pub fn export_task_identifier(&self) -> std::option::Option<&str> {
        self.export_task_identifier.as_deref()
    }
}
impl CancelExportTaskInput {
    /// Creates a new builder-style object to manufacture [`CancelExportTaskInput`](crate::operation::cancel_export_task::CancelExportTaskInput).
    pub fn builder() -> crate::operation::cancel_export_task::builders::CancelExportTaskInputBuilder
    {
        crate::operation::cancel_export_task::builders::CancelExportTaskInputBuilder::default()
    }
}

/// A builder for [`CancelExportTaskInput`](crate::operation::cancel_export_task::CancelExportTaskInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct CancelExportTaskInputBuilder {
    pub(crate) export_task_identifier: std::option::Option<std::string::String>,
}
impl CancelExportTaskInputBuilder {
    /// <p>The identifier of the snapshot export task to cancel.</p>
    pub fn export_task_identifier(mut self, input: impl Into<std::string::String>) -> Self {
        self.export_task_identifier = Some(input.into());
        self
    }
    /// <p>The identifier of the snapshot export task to cancel.</p>
    pub fn set_export_task_identifier(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.export_task_identifier = input;
        self
    }
    /// Consumes the builder and constructs a [`CancelExportTaskInput`](crate::operation::cancel_export_task::CancelExportTaskInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::cancel_export_task::CancelExportTaskInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::cancel_export_task::CancelExportTaskInput {
                export_task_identifier: self.export_task_identifier,
            },
        )
    }
}
