// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct CreateDbProxyOutput {
    /// <p>The <code>DBProxy</code> structure corresponding to the new proxy.</p>
    #[doc(hidden)]
    pub db_proxy: std::option::Option<crate::types::DbProxy>,
    _request_id: Option<String>,
}
impl CreateDbProxyOutput {
    /// <p>The <code>DBProxy</code> structure corresponding to the new proxy.</p>
    pub fn db_proxy(&self) -> std::option::Option<&crate::types::DbProxy> {
        self.db_proxy.as_ref()
    }
}
impl aws_http::request_id::RequestId for CreateDbProxyOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl CreateDbProxyOutput {
    /// Creates a new builder-style object to manufacture [`CreateDbProxyOutput`](crate::operation::create_db_proxy::CreateDbProxyOutput).
    pub fn builder() -> crate::operation::create_db_proxy::builders::CreateDbProxyOutputBuilder {
        crate::operation::create_db_proxy::builders::CreateDbProxyOutputBuilder::default()
    }
}

/// A builder for [`CreateDbProxyOutput`](crate::operation::create_db_proxy::CreateDbProxyOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct CreateDbProxyOutputBuilder {
    pub(crate) db_proxy: std::option::Option<crate::types::DbProxy>,
    _request_id: Option<String>,
}
impl CreateDbProxyOutputBuilder {
    /// <p>The <code>DBProxy</code> structure corresponding to the new proxy.</p>
    pub fn db_proxy(mut self, input: crate::types::DbProxy) -> Self {
        self.db_proxy = Some(input);
        self
    }
    /// <p>The <code>DBProxy</code> structure corresponding to the new proxy.</p>
    pub fn set_db_proxy(mut self, input: std::option::Option<crate::types::DbProxy>) -> Self {
        self.db_proxy = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`CreateDbProxyOutput`](crate::operation::create_db_proxy::CreateDbProxyOutput).
    pub fn build(self) -> crate::operation::create_db_proxy::CreateDbProxyOutput {
        crate::operation::create_db_proxy::CreateDbProxyOutput {
            db_proxy: self.db_proxy,
            _request_id: self._request_id,
        }
    }
}
