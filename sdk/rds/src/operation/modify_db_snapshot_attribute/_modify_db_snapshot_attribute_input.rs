// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p></p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ModifyDbSnapshotAttributeInput {
    /// <p>The identifier for the DB snapshot to modify the attributes for.</p>
    #[doc(hidden)]
    pub db_snapshot_identifier: std::option::Option<std::string::String>,
    /// <p>The name of the DB snapshot attribute to modify.</p>
    /// <p>To manage authorization for other Amazon Web Services accounts to copy or restore a manual DB snapshot, set this value to <code>restore</code>.</p> <note>
    /// <p>To view the list of attributes available to modify, use the <code>DescribeDBSnapshotAttributes</code> API operation.</p>
    /// </note>
    #[doc(hidden)]
    pub attribute_name: std::option::Option<std::string::String>,
    /// <p>A list of DB snapshot attributes to add to the attribute specified by <code>AttributeName</code>.</p>
    /// <p>To authorize other Amazon Web Services accounts to copy or restore a manual snapshot, set this list to include one or more Amazon Web Services account IDs, or <code>all</code> to make the manual DB snapshot restorable by any Amazon Web Services account. Do not add the <code>all</code> value for any manual DB snapshots that contain private information that you don't want available to all Amazon Web Services accounts.</p>
    #[doc(hidden)]
    pub values_to_add: std::option::Option<std::vec::Vec<std::string::String>>,
    /// <p>A list of DB snapshot attributes to remove from the attribute specified by <code>AttributeName</code>.</p>
    /// <p>To remove authorization for other Amazon Web Services accounts to copy or restore a manual snapshot, set this list to include one or more Amazon Web Services account identifiers, or <code>all</code> to remove authorization for any Amazon Web Services account to copy or restore the DB snapshot. If you specify <code>all</code>, an Amazon Web Services account whose account ID is explicitly added to the <code>restore</code> attribute can still copy or restore the manual DB snapshot.</p>
    #[doc(hidden)]
    pub values_to_remove: std::option::Option<std::vec::Vec<std::string::String>>,
}
impl ModifyDbSnapshotAttributeInput {
    /// <p>The identifier for the DB snapshot to modify the attributes for.</p>
    pub fn db_snapshot_identifier(&self) -> std::option::Option<&str> {
        self.db_snapshot_identifier.as_deref()
    }
    /// <p>The name of the DB snapshot attribute to modify.</p>
    /// <p>To manage authorization for other Amazon Web Services accounts to copy or restore a manual DB snapshot, set this value to <code>restore</code>.</p> <note>
    /// <p>To view the list of attributes available to modify, use the <code>DescribeDBSnapshotAttributes</code> API operation.</p>
    /// </note>
    pub fn attribute_name(&self) -> std::option::Option<&str> {
        self.attribute_name.as_deref()
    }
    /// <p>A list of DB snapshot attributes to add to the attribute specified by <code>AttributeName</code>.</p>
    /// <p>To authorize other Amazon Web Services accounts to copy or restore a manual snapshot, set this list to include one or more Amazon Web Services account IDs, or <code>all</code> to make the manual DB snapshot restorable by any Amazon Web Services account. Do not add the <code>all</code> value for any manual DB snapshots that contain private information that you don't want available to all Amazon Web Services accounts.</p>
    pub fn values_to_add(&self) -> std::option::Option<&[std::string::String]> {
        self.values_to_add.as_deref()
    }
    /// <p>A list of DB snapshot attributes to remove from the attribute specified by <code>AttributeName</code>.</p>
    /// <p>To remove authorization for other Amazon Web Services accounts to copy or restore a manual snapshot, set this list to include one or more Amazon Web Services account identifiers, or <code>all</code> to remove authorization for any Amazon Web Services account to copy or restore the DB snapshot. If you specify <code>all</code>, an Amazon Web Services account whose account ID is explicitly added to the <code>restore</code> attribute can still copy or restore the manual DB snapshot.</p>
    pub fn values_to_remove(&self) -> std::option::Option<&[std::string::String]> {
        self.values_to_remove.as_deref()
    }
}
impl ModifyDbSnapshotAttributeInput {
    /// Creates a new builder-style object to manufacture [`ModifyDbSnapshotAttributeInput`](crate::operation::modify_db_snapshot_attribute::ModifyDbSnapshotAttributeInput).
    pub fn builder() -> crate::operation::modify_db_snapshot_attribute::builders::ModifyDbSnapshotAttributeInputBuilder{
        crate::operation::modify_db_snapshot_attribute::builders::ModifyDbSnapshotAttributeInputBuilder::default()
    }
}

/// A builder for [`ModifyDbSnapshotAttributeInput`](crate::operation::modify_db_snapshot_attribute::ModifyDbSnapshotAttributeInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ModifyDbSnapshotAttributeInputBuilder {
    pub(crate) db_snapshot_identifier: std::option::Option<std::string::String>,
    pub(crate) attribute_name: std::option::Option<std::string::String>,
    pub(crate) values_to_add: std::option::Option<std::vec::Vec<std::string::String>>,
    pub(crate) values_to_remove: std::option::Option<std::vec::Vec<std::string::String>>,
}
impl ModifyDbSnapshotAttributeInputBuilder {
    /// <p>The identifier for the DB snapshot to modify the attributes for.</p>
    pub fn db_snapshot_identifier(mut self, input: impl Into<std::string::String>) -> Self {
        self.db_snapshot_identifier = Some(input.into());
        self
    }
    /// <p>The identifier for the DB snapshot to modify the attributes for.</p>
    pub fn set_db_snapshot_identifier(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.db_snapshot_identifier = input;
        self
    }
    /// <p>The name of the DB snapshot attribute to modify.</p>
    /// <p>To manage authorization for other Amazon Web Services accounts to copy or restore a manual DB snapshot, set this value to <code>restore</code>.</p> <note>
    /// <p>To view the list of attributes available to modify, use the <code>DescribeDBSnapshotAttributes</code> API operation.</p>
    /// </note>
    pub fn attribute_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.attribute_name = Some(input.into());
        self
    }
    /// <p>The name of the DB snapshot attribute to modify.</p>
    /// <p>To manage authorization for other Amazon Web Services accounts to copy or restore a manual DB snapshot, set this value to <code>restore</code>.</p> <note>
    /// <p>To view the list of attributes available to modify, use the <code>DescribeDBSnapshotAttributes</code> API operation.</p>
    /// </note>
    pub fn set_attribute_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.attribute_name = input;
        self
    }
    /// Appends an item to `values_to_add`.
    ///
    /// To override the contents of this collection use [`set_values_to_add`](Self::set_values_to_add).
    ///
    /// <p>A list of DB snapshot attributes to add to the attribute specified by <code>AttributeName</code>.</p>
    /// <p>To authorize other Amazon Web Services accounts to copy or restore a manual snapshot, set this list to include one or more Amazon Web Services account IDs, or <code>all</code> to make the manual DB snapshot restorable by any Amazon Web Services account. Do not add the <code>all</code> value for any manual DB snapshots that contain private information that you don't want available to all Amazon Web Services accounts.</p>
    pub fn values_to_add(mut self, input: impl Into<std::string::String>) -> Self {
        let mut v = self.values_to_add.unwrap_or_default();
        v.push(input.into());
        self.values_to_add = Some(v);
        self
    }
    /// <p>A list of DB snapshot attributes to add to the attribute specified by <code>AttributeName</code>.</p>
    /// <p>To authorize other Amazon Web Services accounts to copy or restore a manual snapshot, set this list to include one or more Amazon Web Services account IDs, or <code>all</code> to make the manual DB snapshot restorable by any Amazon Web Services account. Do not add the <code>all</code> value for any manual DB snapshots that contain private information that you don't want available to all Amazon Web Services accounts.</p>
    pub fn set_values_to_add(
        mut self,
        input: std::option::Option<std::vec::Vec<std::string::String>>,
    ) -> Self {
        self.values_to_add = input;
        self
    }
    /// Appends an item to `values_to_remove`.
    ///
    /// To override the contents of this collection use [`set_values_to_remove`](Self::set_values_to_remove).
    ///
    /// <p>A list of DB snapshot attributes to remove from the attribute specified by <code>AttributeName</code>.</p>
    /// <p>To remove authorization for other Amazon Web Services accounts to copy or restore a manual snapshot, set this list to include one or more Amazon Web Services account identifiers, or <code>all</code> to remove authorization for any Amazon Web Services account to copy or restore the DB snapshot. If you specify <code>all</code>, an Amazon Web Services account whose account ID is explicitly added to the <code>restore</code> attribute can still copy or restore the manual DB snapshot.</p>
    pub fn values_to_remove(mut self, input: impl Into<std::string::String>) -> Self {
        let mut v = self.values_to_remove.unwrap_or_default();
        v.push(input.into());
        self.values_to_remove = Some(v);
        self
    }
    /// <p>A list of DB snapshot attributes to remove from the attribute specified by <code>AttributeName</code>.</p>
    /// <p>To remove authorization for other Amazon Web Services accounts to copy or restore a manual snapshot, set this list to include one or more Amazon Web Services account identifiers, or <code>all</code> to remove authorization for any Amazon Web Services account to copy or restore the DB snapshot. If you specify <code>all</code>, an Amazon Web Services account whose account ID is explicitly added to the <code>restore</code> attribute can still copy or restore the manual DB snapshot.</p>
    pub fn set_values_to_remove(
        mut self,
        input: std::option::Option<std::vec::Vec<std::string::String>>,
    ) -> Self {
        self.values_to_remove = input;
        self
    }
    /// Consumes the builder and constructs a [`ModifyDbSnapshotAttributeInput`](crate::operation::modify_db_snapshot_attribute::ModifyDbSnapshotAttributeInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::modify_db_snapshot_attribute::ModifyDbSnapshotAttributeInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::modify_db_snapshot_attribute::ModifyDbSnapshotAttributeInput {
                db_snapshot_identifier: self.db_snapshot_identifier,
                attribute_name: self.attribute_name,
                values_to_add: self.values_to_add,
                values_to_remove: self.values_to_remove,
            },
        )
    }
}
