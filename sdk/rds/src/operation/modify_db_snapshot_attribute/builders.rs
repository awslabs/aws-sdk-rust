// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub use crate::operation::modify_db_snapshot_attribute::_modify_db_snapshot_attribute_output::ModifyDbSnapshotAttributeOutputBuilder;

pub use crate::operation::modify_db_snapshot_attribute::_modify_db_snapshot_attribute_input::ModifyDbSnapshotAttributeInputBuilder;

/// Fluent builder constructing a request to `ModifyDBSnapshotAttribute`.
///
/// <p>Adds an attribute and values to, or removes an attribute and values from, a manual DB snapshot.</p>
/// <p>To share a manual DB snapshot with other Amazon Web Services accounts, specify <code>restore</code> as the <code>AttributeName</code> and use the <code>ValuesToAdd</code> parameter to add a list of IDs of the Amazon Web Services accounts that are authorized to restore the manual DB snapshot. Uses the value <code>all</code> to make the manual DB snapshot public, which means it can be copied or restored by all Amazon Web Services accounts.</p> <note>
/// <p>Don't add the <code>all</code> value for any manual DB snapshots that contain private information that you don't want available to all Amazon Web Services accounts.</p>
/// </note>
/// <p>If the manual DB snapshot is encrypted, it can be shared, but only by specifying a list of authorized Amazon Web Services account IDs for the <code>ValuesToAdd</code> parameter. You can't use <code>all</code> as a value for that parameter in this case.</p>
/// <p>To view which Amazon Web Services accounts have access to copy or restore a manual DB snapshot, or whether a manual DB snapshot public or private, use the <code>DescribeDBSnapshotAttributes</code> API operation. The accounts are returned as values for the <code>restore</code> attribute.</p>
#[derive(std::clone::Clone, std::fmt::Debug)]
pub struct ModifyDBSnapshotAttributeFluentBuilder {
                handle: std::sync::Arc<crate::client::Handle>,
                inner: crate::operation::modify_db_snapshot_attribute::builders::ModifyDbSnapshotAttributeInputBuilder
            }
impl ModifyDBSnapshotAttributeFluentBuilder {
    /// Creates a new `ModifyDBSnapshotAttribute`.
    pub(crate) fn new(handle: std::sync::Arc<crate::client::Handle>) -> Self {
        Self {
            handle,
            inner: Default::default(),
        }
    }

    /// Consume this builder, creating a customizable operation that can be modified before being
    /// sent. The operation's inner [http::Request] can be modified as well.
    pub async fn customize(
        self,
    ) -> std::result::Result<
        crate::client::customize::CustomizableOperation<
            crate::operation::modify_db_snapshot_attribute::ModifyDBSnapshotAttribute,
            aws_http::retry::AwsResponseRetryClassifier,
        >,
        aws_smithy_http::result::SdkError<
            crate::operation::modify_db_snapshot_attribute::ModifyDBSnapshotAttributeError,
        >,
    > {
        let handle = self.handle.clone();
        let operation = self
            .inner
            .build()
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?
            .make_operation(&handle.conf)
            .await
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?;
        Ok(crate::client::customize::CustomizableOperation { handle, operation })
    }

    /// Sends the request and returns the response.
    ///
    /// If an error occurs, an `SdkError` will be returned with additional details that
    /// can be matched against.
    ///
    /// By default, any retryable failures will be retried twice. Retry behavior
    /// is configurable with the [RetryConfig](aws_smithy_types::retry::RetryConfig), which can be
    /// set when configuring the client.
    pub async fn send(
        self,
    ) -> std::result::Result<
        crate::operation::modify_db_snapshot_attribute::ModifyDbSnapshotAttributeOutput,
        aws_smithy_http::result::SdkError<
            crate::operation::modify_db_snapshot_attribute::ModifyDBSnapshotAttributeError,
        >,
    > {
        let op = self
            .inner
            .build()
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?
            .make_operation(&self.handle.conf)
            .await
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?;
        self.handle.client.call(op).await
    }
    /// <p>The identifier for the DB snapshot to modify the attributes for.</p>
    pub fn db_snapshot_identifier(mut self, input: impl Into<std::string::String>) -> Self {
        self.inner = self.inner.db_snapshot_identifier(input.into());
        self
    }
    /// <p>The identifier for the DB snapshot to modify the attributes for.</p>
    pub fn set_db_snapshot_identifier(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.inner = self.inner.set_db_snapshot_identifier(input);
        self
    }
    /// <p>The name of the DB snapshot attribute to modify.</p>
    /// <p>To manage authorization for other Amazon Web Services accounts to copy or restore a manual DB snapshot, set this value to <code>restore</code>.</p> <note>
    /// <p>To view the list of attributes available to modify, use the <code>DescribeDBSnapshotAttributes</code> API operation.</p>
    /// </note>
    pub fn attribute_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.inner = self.inner.attribute_name(input.into());
        self
    }
    /// <p>The name of the DB snapshot attribute to modify.</p>
    /// <p>To manage authorization for other Amazon Web Services accounts to copy or restore a manual DB snapshot, set this value to <code>restore</code>.</p> <note>
    /// <p>To view the list of attributes available to modify, use the <code>DescribeDBSnapshotAttributes</code> API operation.</p>
    /// </note>
    pub fn set_attribute_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.inner = self.inner.set_attribute_name(input);
        self
    }
    /// Appends an item to `ValuesToAdd`.
    ///
    /// To override the contents of this collection use [`set_values_to_add`](Self::set_values_to_add).
    ///
    /// <p>A list of DB snapshot attributes to add to the attribute specified by <code>AttributeName</code>.</p>
    /// <p>To authorize other Amazon Web Services accounts to copy or restore a manual snapshot, set this list to include one or more Amazon Web Services account IDs, or <code>all</code> to make the manual DB snapshot restorable by any Amazon Web Services account. Do not add the <code>all</code> value for any manual DB snapshots that contain private information that you don't want available to all Amazon Web Services accounts.</p>
    pub fn values_to_add(mut self, input: impl Into<std::string::String>) -> Self {
        self.inner = self.inner.values_to_add(input.into());
        self
    }
    /// <p>A list of DB snapshot attributes to add to the attribute specified by <code>AttributeName</code>.</p>
    /// <p>To authorize other Amazon Web Services accounts to copy or restore a manual snapshot, set this list to include one or more Amazon Web Services account IDs, or <code>all</code> to make the manual DB snapshot restorable by any Amazon Web Services account. Do not add the <code>all</code> value for any manual DB snapshots that contain private information that you don't want available to all Amazon Web Services accounts.</p>
    pub fn set_values_to_add(
        mut self,
        input: std::option::Option<std::vec::Vec<std::string::String>>,
    ) -> Self {
        self.inner = self.inner.set_values_to_add(input);
        self
    }
    /// Appends an item to `ValuesToRemove`.
    ///
    /// To override the contents of this collection use [`set_values_to_remove`](Self::set_values_to_remove).
    ///
    /// <p>A list of DB snapshot attributes to remove from the attribute specified by <code>AttributeName</code>.</p>
    /// <p>To remove authorization for other Amazon Web Services accounts to copy or restore a manual snapshot, set this list to include one or more Amazon Web Services account identifiers, or <code>all</code> to remove authorization for any Amazon Web Services account to copy or restore the DB snapshot. If you specify <code>all</code>, an Amazon Web Services account whose account ID is explicitly added to the <code>restore</code> attribute can still copy or restore the manual DB snapshot.</p>
    pub fn values_to_remove(mut self, input: impl Into<std::string::String>) -> Self {
        self.inner = self.inner.values_to_remove(input.into());
        self
    }
    /// <p>A list of DB snapshot attributes to remove from the attribute specified by <code>AttributeName</code>.</p>
    /// <p>To remove authorization for other Amazon Web Services accounts to copy or restore a manual snapshot, set this list to include one or more Amazon Web Services account identifiers, or <code>all</code> to remove authorization for any Amazon Web Services account to copy or restore the DB snapshot. If you specify <code>all</code>, an Amazon Web Services account whose account ID is explicitly added to the <code>restore</code> attribute can still copy or restore the manual DB snapshot.</p>
    pub fn set_values_to_remove(
        mut self,
        input: std::option::Option<std::vec::Vec<std::string::String>>,
    ) -> Self {
        self.inner = self.inner.set_values_to_remove(input);
        self
    }
}
