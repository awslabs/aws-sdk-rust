// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p></p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DeleteDbInstanceInput {
    /// <p>The DB instance identifier for the DB instance to be deleted. This parameter isn't case-sensitive.</p>
    /// <p>Constraints:</p>
    /// <ul>
    /// <li> <p>Must match the name of an existing DB instance.</p> </li>
    /// </ul>
    #[doc(hidden)]
    pub db_instance_identifier: std::option::Option<std::string::String>,
    /// <p>A value that indicates whether to skip the creation of a final DB snapshot before deleting the instance. If you enable this parameter, RDS doesn't create a DB snapshot. If you don't enable this parameter, RDS creates a DB snapshot before the DB instance is deleted. By default, skip isn't enabled, and the DB snapshot is created.</p> <note>
    /// <p>If you don't enable this parameter, you must specify the <code>FinalDBSnapshotIdentifier</code> parameter.</p>
    /// </note>
    /// <p>When a DB instance is in a failure state and has a status of <code>failed</code>, <code>incompatible-restore</code>, or <code>incompatible-network</code>, RDS can delete the instance only if you enable this parameter.</p>
    /// <p>If you delete a read replica or an RDS Custom instance, you must enable this setting.</p>
    /// <p>This setting is required for RDS Custom.</p>
    #[doc(hidden)]
    pub skip_final_snapshot: bool,
    /// <p>The <code>DBSnapshotIdentifier</code> of the new <code>DBSnapshot</code> created when the <code>SkipFinalSnapshot</code> parameter is disabled.</p> <note>
    /// <p>If you enable this parameter and also enable SkipFinalShapshot, the command results in an error.</p>
    /// </note>
    /// <p>This setting doesn't apply to RDS Custom.</p>
    /// <p>Constraints:</p>
    /// <ul>
    /// <li> <p>Must be 1 to 255 letters or numbers.</p> </li>
    /// <li> <p>First character must be a letter.</p> </li>
    /// <li> <p>Can't end with a hyphen or contain two consecutive hyphens.</p> </li>
    /// <li> <p>Can't be specified when deleting a read replica.</p> </li>
    /// </ul>
    #[doc(hidden)]
    pub final_db_snapshot_identifier: std::option::Option<std::string::String>,
    /// <p>A value that indicates whether to remove automated backups immediately after the DB instance is deleted. This parameter isn't case-sensitive. The default is to remove automated backups immediately after the DB instance is deleted.</p>
    #[doc(hidden)]
    pub delete_automated_backups: std::option::Option<bool>,
}
impl DeleteDbInstanceInput {
    /// <p>The DB instance identifier for the DB instance to be deleted. This parameter isn't case-sensitive.</p>
    /// <p>Constraints:</p>
    /// <ul>
    /// <li> <p>Must match the name of an existing DB instance.</p> </li>
    /// </ul>
    pub fn db_instance_identifier(&self) -> std::option::Option<&str> {
        self.db_instance_identifier.as_deref()
    }
    /// <p>A value that indicates whether to skip the creation of a final DB snapshot before deleting the instance. If you enable this parameter, RDS doesn't create a DB snapshot. If you don't enable this parameter, RDS creates a DB snapshot before the DB instance is deleted. By default, skip isn't enabled, and the DB snapshot is created.</p> <note>
    /// <p>If you don't enable this parameter, you must specify the <code>FinalDBSnapshotIdentifier</code> parameter.</p>
    /// </note>
    /// <p>When a DB instance is in a failure state and has a status of <code>failed</code>, <code>incompatible-restore</code>, or <code>incompatible-network</code>, RDS can delete the instance only if you enable this parameter.</p>
    /// <p>If you delete a read replica or an RDS Custom instance, you must enable this setting.</p>
    /// <p>This setting is required for RDS Custom.</p>
    pub fn skip_final_snapshot(&self) -> bool {
        self.skip_final_snapshot
    }
    /// <p>The <code>DBSnapshotIdentifier</code> of the new <code>DBSnapshot</code> created when the <code>SkipFinalSnapshot</code> parameter is disabled.</p> <note>
    /// <p>If you enable this parameter and also enable SkipFinalShapshot, the command results in an error.</p>
    /// </note>
    /// <p>This setting doesn't apply to RDS Custom.</p>
    /// <p>Constraints:</p>
    /// <ul>
    /// <li> <p>Must be 1 to 255 letters or numbers.</p> </li>
    /// <li> <p>First character must be a letter.</p> </li>
    /// <li> <p>Can't end with a hyphen or contain two consecutive hyphens.</p> </li>
    /// <li> <p>Can't be specified when deleting a read replica.</p> </li>
    /// </ul>
    pub fn final_db_snapshot_identifier(&self) -> std::option::Option<&str> {
        self.final_db_snapshot_identifier.as_deref()
    }
    /// <p>A value that indicates whether to remove automated backups immediately after the DB instance is deleted. This parameter isn't case-sensitive. The default is to remove automated backups immediately after the DB instance is deleted.</p>
    pub fn delete_automated_backups(&self) -> std::option::Option<bool> {
        self.delete_automated_backups
    }
}
impl DeleteDbInstanceInput {
    /// Creates a new builder-style object to manufacture [`DeleteDbInstanceInput`](crate::operation::delete_db_instance::DeleteDbInstanceInput).
    pub fn builder() -> crate::operation::delete_db_instance::builders::DeleteDbInstanceInputBuilder
    {
        crate::operation::delete_db_instance::builders::DeleteDbInstanceInputBuilder::default()
    }
}

/// A builder for [`DeleteDbInstanceInput`](crate::operation::delete_db_instance::DeleteDbInstanceInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DeleteDbInstanceInputBuilder {
    pub(crate) db_instance_identifier: std::option::Option<std::string::String>,
    pub(crate) skip_final_snapshot: std::option::Option<bool>,
    pub(crate) final_db_snapshot_identifier: std::option::Option<std::string::String>,
    pub(crate) delete_automated_backups: std::option::Option<bool>,
}
impl DeleteDbInstanceInputBuilder {
    /// <p>The DB instance identifier for the DB instance to be deleted. This parameter isn't case-sensitive.</p>
    /// <p>Constraints:</p>
    /// <ul>
    /// <li> <p>Must match the name of an existing DB instance.</p> </li>
    /// </ul>
    pub fn db_instance_identifier(mut self, input: impl Into<std::string::String>) -> Self {
        self.db_instance_identifier = Some(input.into());
        self
    }
    /// <p>The DB instance identifier for the DB instance to be deleted. This parameter isn't case-sensitive.</p>
    /// <p>Constraints:</p>
    /// <ul>
    /// <li> <p>Must match the name of an existing DB instance.</p> </li>
    /// </ul>
    pub fn set_db_instance_identifier(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.db_instance_identifier = input;
        self
    }
    /// <p>A value that indicates whether to skip the creation of a final DB snapshot before deleting the instance. If you enable this parameter, RDS doesn't create a DB snapshot. If you don't enable this parameter, RDS creates a DB snapshot before the DB instance is deleted. By default, skip isn't enabled, and the DB snapshot is created.</p> <note>
    /// <p>If you don't enable this parameter, you must specify the <code>FinalDBSnapshotIdentifier</code> parameter.</p>
    /// </note>
    /// <p>When a DB instance is in a failure state and has a status of <code>failed</code>, <code>incompatible-restore</code>, or <code>incompatible-network</code>, RDS can delete the instance only if you enable this parameter.</p>
    /// <p>If you delete a read replica or an RDS Custom instance, you must enable this setting.</p>
    /// <p>This setting is required for RDS Custom.</p>
    pub fn skip_final_snapshot(mut self, input: bool) -> Self {
        self.skip_final_snapshot = Some(input);
        self
    }
    /// <p>A value that indicates whether to skip the creation of a final DB snapshot before deleting the instance. If you enable this parameter, RDS doesn't create a DB snapshot. If you don't enable this parameter, RDS creates a DB snapshot before the DB instance is deleted. By default, skip isn't enabled, and the DB snapshot is created.</p> <note>
    /// <p>If you don't enable this parameter, you must specify the <code>FinalDBSnapshotIdentifier</code> parameter.</p>
    /// </note>
    /// <p>When a DB instance is in a failure state and has a status of <code>failed</code>, <code>incompatible-restore</code>, or <code>incompatible-network</code>, RDS can delete the instance only if you enable this parameter.</p>
    /// <p>If you delete a read replica or an RDS Custom instance, you must enable this setting.</p>
    /// <p>This setting is required for RDS Custom.</p>
    pub fn set_skip_final_snapshot(mut self, input: std::option::Option<bool>) -> Self {
        self.skip_final_snapshot = input;
        self
    }
    /// <p>The <code>DBSnapshotIdentifier</code> of the new <code>DBSnapshot</code> created when the <code>SkipFinalSnapshot</code> parameter is disabled.</p> <note>
    /// <p>If you enable this parameter and also enable SkipFinalShapshot, the command results in an error.</p>
    /// </note>
    /// <p>This setting doesn't apply to RDS Custom.</p>
    /// <p>Constraints:</p>
    /// <ul>
    /// <li> <p>Must be 1 to 255 letters or numbers.</p> </li>
    /// <li> <p>First character must be a letter.</p> </li>
    /// <li> <p>Can't end with a hyphen or contain two consecutive hyphens.</p> </li>
    /// <li> <p>Can't be specified when deleting a read replica.</p> </li>
    /// </ul>
    pub fn final_db_snapshot_identifier(mut self, input: impl Into<std::string::String>) -> Self {
        self.final_db_snapshot_identifier = Some(input.into());
        self
    }
    /// <p>The <code>DBSnapshotIdentifier</code> of the new <code>DBSnapshot</code> created when the <code>SkipFinalSnapshot</code> parameter is disabled.</p> <note>
    /// <p>If you enable this parameter and also enable SkipFinalShapshot, the command results in an error.</p>
    /// </note>
    /// <p>This setting doesn't apply to RDS Custom.</p>
    /// <p>Constraints:</p>
    /// <ul>
    /// <li> <p>Must be 1 to 255 letters or numbers.</p> </li>
    /// <li> <p>First character must be a letter.</p> </li>
    /// <li> <p>Can't end with a hyphen or contain two consecutive hyphens.</p> </li>
    /// <li> <p>Can't be specified when deleting a read replica.</p> </li>
    /// </ul>
    pub fn set_final_db_snapshot_identifier(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.final_db_snapshot_identifier = input;
        self
    }
    /// <p>A value that indicates whether to remove automated backups immediately after the DB instance is deleted. This parameter isn't case-sensitive. The default is to remove automated backups immediately after the DB instance is deleted.</p>
    pub fn delete_automated_backups(mut self, input: bool) -> Self {
        self.delete_automated_backups = Some(input);
        self
    }
    /// <p>A value that indicates whether to remove automated backups immediately after the DB instance is deleted. This parameter isn't case-sensitive. The default is to remove automated backups immediately after the DB instance is deleted.</p>
    pub fn set_delete_automated_backups(mut self, input: std::option::Option<bool>) -> Self {
        self.delete_automated_backups = input;
        self
    }
    /// Consumes the builder and constructs a [`DeleteDbInstanceInput`](crate::operation::delete_db_instance::DeleteDbInstanceInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::delete_db_instance::DeleteDbInstanceInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::delete_db_instance::DeleteDbInstanceInput {
                db_instance_identifier: self.db_instance_identifier,
                skip_final_snapshot: self.skip_final_snapshot.unwrap_or_default(),
                final_db_snapshot_identifier: self.final_db_snapshot_identifier,
                delete_automated_backups: self.delete_automated_backups,
            },
        )
    }
}
