// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Data returned by the <b>DescribeAccountAttributes</b> action.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DescribeAccountAttributesOutput {
    /// <p>A list of <code>AccountQuota</code> objects. Within this list, each quota has a name, a count of usage toward the quota maximum, and a maximum value for the quota.</p>
    pub account_quotas: ::std::option::Option<::std::vec::Vec<crate::types::AccountQuota>>,
    _request_id: Option<String>,
}
impl DescribeAccountAttributesOutput {
    /// <p>A list of <code>AccountQuota</code> objects. Within this list, each quota has a name, a count of usage toward the quota maximum, and a maximum value for the quota.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.account_quotas.is_none()`.
    pub fn account_quotas(&self) -> &[crate::types::AccountQuota] {
        self.account_quotas.as_deref().unwrap_or_default()
    }
}
impl ::aws_http::request_id::RequestId for DescribeAccountAttributesOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl DescribeAccountAttributesOutput {
    /// Creates a new builder-style object to manufacture [`DescribeAccountAttributesOutput`](crate::operation::describe_account_attributes::DescribeAccountAttributesOutput).
    pub fn builder() -> crate::operation::describe_account_attributes::builders::DescribeAccountAttributesOutputBuilder {
        crate::operation::describe_account_attributes::builders::DescribeAccountAttributesOutputBuilder::default()
    }
}

/// A builder for [`DescribeAccountAttributesOutput`](crate::operation::describe_account_attributes::DescribeAccountAttributesOutput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DescribeAccountAttributesOutputBuilder {
    pub(crate) account_quotas: ::std::option::Option<::std::vec::Vec<crate::types::AccountQuota>>,
    _request_id: Option<String>,
}
impl DescribeAccountAttributesOutputBuilder {
    /// Appends an item to `account_quotas`.
    ///
    /// To override the contents of this collection use [`set_account_quotas`](Self::set_account_quotas).
    ///
    /// <p>A list of <code>AccountQuota</code> objects. Within this list, each quota has a name, a count of usage toward the quota maximum, and a maximum value for the quota.</p>
    pub fn account_quotas(mut self, input: crate::types::AccountQuota) -> Self {
        let mut v = self.account_quotas.unwrap_or_default();
        v.push(input);
        self.account_quotas = ::std::option::Option::Some(v);
        self
    }
    /// <p>A list of <code>AccountQuota</code> objects. Within this list, each quota has a name, a count of usage toward the quota maximum, and a maximum value for the quota.</p>
    pub fn set_account_quotas(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::AccountQuota>>) -> Self {
        self.account_quotas = input;
        self
    }
    /// <p>A list of <code>AccountQuota</code> objects. Within this list, each quota has a name, a count of usage toward the quota maximum, and a maximum value for the quota.</p>
    pub fn get_account_quotas(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::AccountQuota>> {
        &self.account_quotas
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`DescribeAccountAttributesOutput`](crate::operation::describe_account_attributes::DescribeAccountAttributesOutput).
    pub fn build(self) -> crate::operation::describe_account_attributes::DescribeAccountAttributesOutput {
        crate::operation::describe_account_attributes::DescribeAccountAttributesOutput {
            account_quotas: self.account_quotas,
            _request_id: self._request_id,
        }
    }
}
