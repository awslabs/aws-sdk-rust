// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The metric reference details when the reference is a scalar.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ScalarReferenceDetails {
    /// <p>The value of a scalar reference.</p>
    pub value: ::std::option::Option<f64>,
}
impl ScalarReferenceDetails {
    /// <p>The value of a scalar reference.</p>
    pub fn value(&self) -> ::std::option::Option<f64> {
        self.value
    }
}
impl ScalarReferenceDetails {
    /// Creates a new builder-style object to manufacture [`ScalarReferenceDetails`](crate::types::ScalarReferenceDetails).
    pub fn builder() -> crate::types::builders::ScalarReferenceDetailsBuilder {
        crate::types::builders::ScalarReferenceDetailsBuilder::default()
    }
}

/// A builder for [`ScalarReferenceDetails`](crate::types::ScalarReferenceDetails).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ScalarReferenceDetailsBuilder {
    pub(crate) value: ::std::option::Option<f64>,
}
impl ScalarReferenceDetailsBuilder {
    /// <p>The value of a scalar reference.</p>
    pub fn value(mut self, input: f64) -> Self {
        self.value = ::std::option::Option::Some(input);
        self
    }
    /// <p>The value of a scalar reference.</p>
    pub fn set_value(mut self, input: ::std::option::Option<f64>) -> Self {
        self.value = input;
        self
    }
    /// <p>The value of a scalar reference.</p>
    pub fn get_value(&self) -> &::std::option::Option<f64> {
        &self.value
    }
    /// Consumes the builder and constructs a [`ScalarReferenceDetails`](crate::types::ScalarReferenceDetails).
    pub fn build(self) -> crate::types::ScalarReferenceDetails {
        crate::types::ScalarReferenceDetails { value: self.value }
    }
}
