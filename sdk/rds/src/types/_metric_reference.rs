// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The reference (threshold) for a metric.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct MetricReference {
    /// <p>The name of the metric reference.</p>
    pub name: ::std::option::Option<::std::string::String>,
    /// <p>The details of a performance issue.</p>
    pub reference_details: ::std::option::Option<crate::types::ReferenceDetails>,
}
impl MetricReference {
    /// <p>The name of the metric reference.</p>
    pub fn name(&self) -> ::std::option::Option<&str> {
        self.name.as_deref()
    }
    /// <p>The details of a performance issue.</p>
    pub fn reference_details(&self) -> ::std::option::Option<&crate::types::ReferenceDetails> {
        self.reference_details.as_ref()
    }
}
impl MetricReference {
    /// Creates a new builder-style object to manufacture [`MetricReference`](crate::types::MetricReference).
    pub fn builder() -> crate::types::builders::MetricReferenceBuilder {
        crate::types::builders::MetricReferenceBuilder::default()
    }
}

/// A builder for [`MetricReference`](crate::types::MetricReference).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct MetricReferenceBuilder {
    pub(crate) name: ::std::option::Option<::std::string::String>,
    pub(crate) reference_details: ::std::option::Option<crate::types::ReferenceDetails>,
}
impl MetricReferenceBuilder {
    /// <p>The name of the metric reference.</p>
    pub fn name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the metric reference.</p>
    pub fn set_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>The name of the metric reference.</p>
    pub fn get_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.name
    }
    /// <p>The details of a performance issue.</p>
    pub fn reference_details(mut self, input: crate::types::ReferenceDetails) -> Self {
        self.reference_details = ::std::option::Option::Some(input);
        self
    }
    /// <p>The details of a performance issue.</p>
    pub fn set_reference_details(mut self, input: ::std::option::Option<crate::types::ReferenceDetails>) -> Self {
        self.reference_details = input;
        self
    }
    /// <p>The details of a performance issue.</p>
    pub fn get_reference_details(&self) -> &::std::option::Option<crate::types::ReferenceDetails> {
        &self.reference_details
    }
    /// Consumes the builder and constructs a [`MetricReference`](crate::types::MetricReference).
    pub fn build(self) -> crate::types::MetricReference {
        crate::types::MetricReference {
            name: self.name,
            reference_details: self.reference_details,
        }
    }
}
