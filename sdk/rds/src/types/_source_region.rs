// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains an Amazon Web Services Region name as the result of a successful call to the <code>DescribeSourceRegions</code> action.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct SourceRegion {
    /// <p>The name of the source Amazon Web Services Region.</p>
    #[doc(hidden)]
    pub region_name: std::option::Option<std::string::String>,
    /// <p>The endpoint for the source Amazon Web Services Region endpoint.</p>
    #[doc(hidden)]
    pub endpoint: std::option::Option<std::string::String>,
    /// <p>The status of the source Amazon Web Services Region.</p>
    #[doc(hidden)]
    pub status: std::option::Option<std::string::String>,
    /// <p>Whether the source Amazon Web Services Region supports replicating automated backups to the current Amazon Web Services Region.</p>
    #[doc(hidden)]
    pub supports_db_instance_automated_backups_replication: bool,
}
impl SourceRegion {
    /// <p>The name of the source Amazon Web Services Region.</p>
    pub fn region_name(&self) -> std::option::Option<&str> {
        self.region_name.as_deref()
    }
    /// <p>The endpoint for the source Amazon Web Services Region endpoint.</p>
    pub fn endpoint(&self) -> std::option::Option<&str> {
        self.endpoint.as_deref()
    }
    /// <p>The status of the source Amazon Web Services Region.</p>
    pub fn status(&self) -> std::option::Option<&str> {
        self.status.as_deref()
    }
    /// <p>Whether the source Amazon Web Services Region supports replicating automated backups to the current Amazon Web Services Region.</p>
    pub fn supports_db_instance_automated_backups_replication(&self) -> bool {
        self.supports_db_instance_automated_backups_replication
    }
}
impl SourceRegion {
    /// Creates a new builder-style object to manufacture [`SourceRegion`](crate::types::SourceRegion).
    pub fn builder() -> crate::types::builders::SourceRegionBuilder {
        crate::types::builders::SourceRegionBuilder::default()
    }
}

/// A builder for [`SourceRegion`](crate::types::SourceRegion).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct SourceRegionBuilder {
    pub(crate) region_name: std::option::Option<std::string::String>,
    pub(crate) endpoint: std::option::Option<std::string::String>,
    pub(crate) status: std::option::Option<std::string::String>,
    pub(crate) supports_db_instance_automated_backups_replication: std::option::Option<bool>,
}
impl SourceRegionBuilder {
    /// <p>The name of the source Amazon Web Services Region.</p>
    pub fn region_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.region_name = Some(input.into());
        self
    }
    /// <p>The name of the source Amazon Web Services Region.</p>
    pub fn set_region_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.region_name = input;
        self
    }
    /// <p>The endpoint for the source Amazon Web Services Region endpoint.</p>
    pub fn endpoint(mut self, input: impl Into<std::string::String>) -> Self {
        self.endpoint = Some(input.into());
        self
    }
    /// <p>The endpoint for the source Amazon Web Services Region endpoint.</p>
    pub fn set_endpoint(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.endpoint = input;
        self
    }
    /// <p>The status of the source Amazon Web Services Region.</p>
    pub fn status(mut self, input: impl Into<std::string::String>) -> Self {
        self.status = Some(input.into());
        self
    }
    /// <p>The status of the source Amazon Web Services Region.</p>
    pub fn set_status(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.status = input;
        self
    }
    /// <p>Whether the source Amazon Web Services Region supports replicating automated backups to the current Amazon Web Services Region.</p>
    pub fn supports_db_instance_automated_backups_replication(mut self, input: bool) -> Self {
        self.supports_db_instance_automated_backups_replication = Some(input);
        self
    }
    /// <p>Whether the source Amazon Web Services Region supports replicating automated backups to the current Amazon Web Services Region.</p>
    pub fn set_supports_db_instance_automated_backups_replication(
        mut self,
        input: std::option::Option<bool>,
    ) -> Self {
        self.supports_db_instance_automated_backups_replication = input;
        self
    }
    /// Consumes the builder and constructs a [`SourceRegion`](crate::types::SourceRegion).
    pub fn build(self) -> crate::types::SourceRegion {
        crate::types::SourceRegion {
            region_name: self.region_name,
            endpoint: self.endpoint,
            status: self.status,
            supports_db_instance_automated_backups_replication: self
                .supports_db_instance_automated_backups_replication
                .unwrap_or_default(),
        }
    }
}
