// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains the results of a successful call to the <code>DescribeDBClusterSnapshotAttributes</code> API action.</p>
/// <p>Manual DB cluster snapshot attributes are used to authorize other Amazon Web Services accounts to copy or restore a manual DB cluster snapshot. For more information, see the <code>ModifyDBClusterSnapshotAttribute</code> API action.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DbClusterSnapshotAttributesResult {
    /// <p>The identifier of the manual DB cluster snapshot that the attributes apply to.</p>
    #[doc(hidden)]
    pub db_cluster_snapshot_identifier: std::option::Option<std::string::String>,
    /// <p>The list of attributes and values for the manual DB cluster snapshot.</p>
    #[doc(hidden)]
    pub db_cluster_snapshot_attributes:
        std::option::Option<std::vec::Vec<crate::types::DbClusterSnapshotAttribute>>,
}
impl DbClusterSnapshotAttributesResult {
    /// <p>The identifier of the manual DB cluster snapshot that the attributes apply to.</p>
    pub fn db_cluster_snapshot_identifier(&self) -> std::option::Option<&str> {
        self.db_cluster_snapshot_identifier.as_deref()
    }
    /// <p>The list of attributes and values for the manual DB cluster snapshot.</p>
    pub fn db_cluster_snapshot_attributes(
        &self,
    ) -> std::option::Option<&[crate::types::DbClusterSnapshotAttribute]> {
        self.db_cluster_snapshot_attributes.as_deref()
    }
}
impl DbClusterSnapshotAttributesResult {
    /// Creates a new builder-style object to manufacture [`DbClusterSnapshotAttributesResult`](crate::types::DbClusterSnapshotAttributesResult).
    pub fn builder() -> crate::types::builders::DbClusterSnapshotAttributesResultBuilder {
        crate::types::builders::DbClusterSnapshotAttributesResultBuilder::default()
    }
}

/// A builder for [`DbClusterSnapshotAttributesResult`](crate::types::DbClusterSnapshotAttributesResult).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DbClusterSnapshotAttributesResultBuilder {
    pub(crate) db_cluster_snapshot_identifier: std::option::Option<std::string::String>,
    pub(crate) db_cluster_snapshot_attributes:
        std::option::Option<std::vec::Vec<crate::types::DbClusterSnapshotAttribute>>,
}
impl DbClusterSnapshotAttributesResultBuilder {
    /// <p>The identifier of the manual DB cluster snapshot that the attributes apply to.</p>
    pub fn db_cluster_snapshot_identifier(mut self, input: impl Into<std::string::String>) -> Self {
        self.db_cluster_snapshot_identifier = Some(input.into());
        self
    }
    /// <p>The identifier of the manual DB cluster snapshot that the attributes apply to.</p>
    pub fn set_db_cluster_snapshot_identifier(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.db_cluster_snapshot_identifier = input;
        self
    }
    /// Appends an item to `db_cluster_snapshot_attributes`.
    ///
    /// To override the contents of this collection use [`set_db_cluster_snapshot_attributes`](Self::set_db_cluster_snapshot_attributes).
    ///
    /// <p>The list of attributes and values for the manual DB cluster snapshot.</p>
    pub fn db_cluster_snapshot_attributes(
        mut self,
        input: crate::types::DbClusterSnapshotAttribute,
    ) -> Self {
        let mut v = self.db_cluster_snapshot_attributes.unwrap_or_default();
        v.push(input);
        self.db_cluster_snapshot_attributes = Some(v);
        self
    }
    /// <p>The list of attributes and values for the manual DB cluster snapshot.</p>
    pub fn set_db_cluster_snapshot_attributes(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::DbClusterSnapshotAttribute>>,
    ) -> Self {
        self.db_cluster_snapshot_attributes = input;
        self
    }
    /// Consumes the builder and constructs a [`DbClusterSnapshotAttributesResult`](crate::types::DbClusterSnapshotAttributesResult).
    pub fn build(self) -> crate::types::DbClusterSnapshotAttributesResult {
        crate::types::DbClusterSnapshotAttributesResult {
            db_cluster_snapshot_identifier: self.db_cluster_snapshot_identifier,
            db_cluster_snapshot_attributes: self.db_cluster_snapshot_attributes,
        }
    }
}
