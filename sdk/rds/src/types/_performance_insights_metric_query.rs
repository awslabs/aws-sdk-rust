// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A single Performance Insights metric query to process. You must provide the metric to the query. If other parameters aren't specified, Performance Insights returns all data points for the specified metric. Optionally, you can request the data points to be aggregated by dimension group (<code>GroupBy</code>) and return only those data points that match your criteria (<code>Filter</code>).</p>
/// <p>Constraints:</p>
/// <ul>
/// <li>
/// <p>Must be a valid Performance Insights query.</p></li>
/// </ul>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct PerformanceInsightsMetricQuery {
    /// <p>A specification for how to aggregate the data points from a query result. You must specify a valid dimension group. Performance Insights will return all of the dimensions within that group, unless you provide the names of specific dimensions within that group. You can also request that Performance Insights return a limited number of values for a dimension.</p>
    pub group_by: ::std::option::Option<crate::types::PerformanceInsightsMetricDimensionGroup>,
    /// <p>The name of a Performance Insights metric to be measured.</p>
    /// <p>Valid Values:</p>
    /// <ul>
    /// <li>
    /// <p><code>db.load.avg</code> - A scaled representation of the number of active sessions for the database engine.</p></li>
    /// <li>
    /// <p><code>db.sampledload.avg</code> - The raw number of active sessions for the database engine.</p></li>
    /// <li>
    /// <p>The counter metrics listed in <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_PerfInsights_Counters.html#USER_PerfInsights_Counters.OS">Performance Insights operating system counters</a> in the <i>Amazon Aurora User Guide</i>.</p></li>
    /// </ul>
    /// <p>If the number of active sessions is less than an internal Performance Insights threshold, <code>db.load.avg</code> and <code>db.sampledload.avg</code> are the same value. If the number of active sessions is greater than the internal threshold, Performance Insights samples the active sessions, with <code>db.load.avg</code> showing the scaled values, <code>db.sampledload.avg</code> showing the raw values, and <code>db.sampledload.avg</code> less than <code>db.load.avg</code>. For most use cases, you can query <code>db.load.avg</code> only.</p>
    pub metric: ::std::option::Option<::std::string::String>,
}
impl PerformanceInsightsMetricQuery {
    /// <p>A specification for how to aggregate the data points from a query result. You must specify a valid dimension group. Performance Insights will return all of the dimensions within that group, unless you provide the names of specific dimensions within that group. You can also request that Performance Insights return a limited number of values for a dimension.</p>
    pub fn group_by(&self) -> ::std::option::Option<&crate::types::PerformanceInsightsMetricDimensionGroup> {
        self.group_by.as_ref()
    }
    /// <p>The name of a Performance Insights metric to be measured.</p>
    /// <p>Valid Values:</p>
    /// <ul>
    /// <li>
    /// <p><code>db.load.avg</code> - A scaled representation of the number of active sessions for the database engine.</p></li>
    /// <li>
    /// <p><code>db.sampledload.avg</code> - The raw number of active sessions for the database engine.</p></li>
    /// <li>
    /// <p>The counter metrics listed in <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_PerfInsights_Counters.html#USER_PerfInsights_Counters.OS">Performance Insights operating system counters</a> in the <i>Amazon Aurora User Guide</i>.</p></li>
    /// </ul>
    /// <p>If the number of active sessions is less than an internal Performance Insights threshold, <code>db.load.avg</code> and <code>db.sampledload.avg</code> are the same value. If the number of active sessions is greater than the internal threshold, Performance Insights samples the active sessions, with <code>db.load.avg</code> showing the scaled values, <code>db.sampledload.avg</code> showing the raw values, and <code>db.sampledload.avg</code> less than <code>db.load.avg</code>. For most use cases, you can query <code>db.load.avg</code> only.</p>
    pub fn metric(&self) -> ::std::option::Option<&str> {
        self.metric.as_deref()
    }
}
impl PerformanceInsightsMetricQuery {
    /// Creates a new builder-style object to manufacture [`PerformanceInsightsMetricQuery`](crate::types::PerformanceInsightsMetricQuery).
    pub fn builder() -> crate::types::builders::PerformanceInsightsMetricQueryBuilder {
        crate::types::builders::PerformanceInsightsMetricQueryBuilder::default()
    }
}

/// A builder for [`PerformanceInsightsMetricQuery`](crate::types::PerformanceInsightsMetricQuery).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct PerformanceInsightsMetricQueryBuilder {
    pub(crate) group_by: ::std::option::Option<crate::types::PerformanceInsightsMetricDimensionGroup>,
    pub(crate) metric: ::std::option::Option<::std::string::String>,
}
impl PerformanceInsightsMetricQueryBuilder {
    /// <p>A specification for how to aggregate the data points from a query result. You must specify a valid dimension group. Performance Insights will return all of the dimensions within that group, unless you provide the names of specific dimensions within that group. You can also request that Performance Insights return a limited number of values for a dimension.</p>
    pub fn group_by(mut self, input: crate::types::PerformanceInsightsMetricDimensionGroup) -> Self {
        self.group_by = ::std::option::Option::Some(input);
        self
    }
    /// <p>A specification for how to aggregate the data points from a query result. You must specify a valid dimension group. Performance Insights will return all of the dimensions within that group, unless you provide the names of specific dimensions within that group. You can also request that Performance Insights return a limited number of values for a dimension.</p>
    pub fn set_group_by(mut self, input: ::std::option::Option<crate::types::PerformanceInsightsMetricDimensionGroup>) -> Self {
        self.group_by = input;
        self
    }
    /// <p>A specification for how to aggregate the data points from a query result. You must specify a valid dimension group. Performance Insights will return all of the dimensions within that group, unless you provide the names of specific dimensions within that group. You can also request that Performance Insights return a limited number of values for a dimension.</p>
    pub fn get_group_by(&self) -> &::std::option::Option<crate::types::PerformanceInsightsMetricDimensionGroup> {
        &self.group_by
    }
    /// <p>The name of a Performance Insights metric to be measured.</p>
    /// <p>Valid Values:</p>
    /// <ul>
    /// <li>
    /// <p><code>db.load.avg</code> - A scaled representation of the number of active sessions for the database engine.</p></li>
    /// <li>
    /// <p><code>db.sampledload.avg</code> - The raw number of active sessions for the database engine.</p></li>
    /// <li>
    /// <p>The counter metrics listed in <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_PerfInsights_Counters.html#USER_PerfInsights_Counters.OS">Performance Insights operating system counters</a> in the <i>Amazon Aurora User Guide</i>.</p></li>
    /// </ul>
    /// <p>If the number of active sessions is less than an internal Performance Insights threshold, <code>db.load.avg</code> and <code>db.sampledload.avg</code> are the same value. If the number of active sessions is greater than the internal threshold, Performance Insights samples the active sessions, with <code>db.load.avg</code> showing the scaled values, <code>db.sampledload.avg</code> showing the raw values, and <code>db.sampledload.avg</code> less than <code>db.load.avg</code>. For most use cases, you can query <code>db.load.avg</code> only.</p>
    pub fn metric(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.metric = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of a Performance Insights metric to be measured.</p>
    /// <p>Valid Values:</p>
    /// <ul>
    /// <li>
    /// <p><code>db.load.avg</code> - A scaled representation of the number of active sessions for the database engine.</p></li>
    /// <li>
    /// <p><code>db.sampledload.avg</code> - The raw number of active sessions for the database engine.</p></li>
    /// <li>
    /// <p>The counter metrics listed in <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_PerfInsights_Counters.html#USER_PerfInsights_Counters.OS">Performance Insights operating system counters</a> in the <i>Amazon Aurora User Guide</i>.</p></li>
    /// </ul>
    /// <p>If the number of active sessions is less than an internal Performance Insights threshold, <code>db.load.avg</code> and <code>db.sampledload.avg</code> are the same value. If the number of active sessions is greater than the internal threshold, Performance Insights samples the active sessions, with <code>db.load.avg</code> showing the scaled values, <code>db.sampledload.avg</code> showing the raw values, and <code>db.sampledload.avg</code> less than <code>db.load.avg</code>. For most use cases, you can query <code>db.load.avg</code> only.</p>
    pub fn set_metric(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.metric = input;
        self
    }
    /// <p>The name of a Performance Insights metric to be measured.</p>
    /// <p>Valid Values:</p>
    /// <ul>
    /// <li>
    /// <p><code>db.load.avg</code> - A scaled representation of the number of active sessions for the database engine.</p></li>
    /// <li>
    /// <p><code>db.sampledload.avg</code> - The raw number of active sessions for the database engine.</p></li>
    /// <li>
    /// <p>The counter metrics listed in <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_PerfInsights_Counters.html#USER_PerfInsights_Counters.OS">Performance Insights operating system counters</a> in the <i>Amazon Aurora User Guide</i>.</p></li>
    /// </ul>
    /// <p>If the number of active sessions is less than an internal Performance Insights threshold, <code>db.load.avg</code> and <code>db.sampledload.avg</code> are the same value. If the number of active sessions is greater than the internal threshold, Performance Insights samples the active sessions, with <code>db.load.avg</code> showing the scaled values, <code>db.sampledload.avg</code> showing the raw values, and <code>db.sampledload.avg</code> less than <code>db.load.avg</code>. For most use cases, you can query <code>db.load.avg</code> only.</p>
    pub fn get_metric(&self) -> &::std::option::Option<::std::string::String> {
        &self.metric
    }
    /// Consumes the builder and constructs a [`PerformanceInsightsMetricQuery`](crate::types::PerformanceInsightsMetricQuery).
    pub fn build(self) -> crate::types::PerformanceInsightsMetricQuery {
        crate::types::PerformanceInsightsMetricQuery {
            group_by: self.group_by,
            metric: self.metric,
        }
    }
}
