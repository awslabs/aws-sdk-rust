// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The details of an issue with your DB instances, DB clusters, and DB parameter groups.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct IssueDetails {
    /// <p>A detailed description of the issue when the recommendation category is <code>performance</code>.</p>
    pub performance_issue_details: ::std::option::Option<crate::types::PerformanceIssueDetails>,
}
impl IssueDetails {
    /// <p>A detailed description of the issue when the recommendation category is <code>performance</code>.</p>
    pub fn performance_issue_details(&self) -> ::std::option::Option<&crate::types::PerformanceIssueDetails> {
        self.performance_issue_details.as_ref()
    }
}
impl IssueDetails {
    /// Creates a new builder-style object to manufacture [`IssueDetails`](crate::types::IssueDetails).
    pub fn builder() -> crate::types::builders::IssueDetailsBuilder {
        crate::types::builders::IssueDetailsBuilder::default()
    }
}

/// A builder for [`IssueDetails`](crate::types::IssueDetails).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct IssueDetailsBuilder {
    pub(crate) performance_issue_details: ::std::option::Option<crate::types::PerformanceIssueDetails>,
}
impl IssueDetailsBuilder {
    /// <p>A detailed description of the issue when the recommendation category is <code>performance</code>.</p>
    pub fn performance_issue_details(mut self, input: crate::types::PerformanceIssueDetails) -> Self {
        self.performance_issue_details = ::std::option::Option::Some(input);
        self
    }
    /// <p>A detailed description of the issue when the recommendation category is <code>performance</code>.</p>
    pub fn set_performance_issue_details(mut self, input: ::std::option::Option<crate::types::PerformanceIssueDetails>) -> Self {
        self.performance_issue_details = input;
        self
    }
    /// <p>A detailed description of the issue when the recommendation category is <code>performance</code>.</p>
    pub fn get_performance_issue_details(&self) -> &::std::option::Option<crate::types::PerformanceIssueDetails> {
        &self.performance_issue_details
    }
    /// Consumes the builder and constructs a [`IssueDetails`](crate::types::IssueDetails).
    pub fn build(self) -> crate::types::IssueDetails {
        crate::types::IssueDetails {
            performance_issue_details: self.performance_issue_details,
        }
    }
}
