// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_describe_option_groups_input_input(
    input: &crate::operation::describe_option_groups::DescribeOptionGroupsInput,
) -> Result<::aws_smithy_types::body::SdkBody, ::aws_smithy_types::error::operation::SerializationError> {
    let mut out = String::new();
    #[allow(unused_mut)]
    let mut writer = ::aws_smithy_query::QueryWriter::new(&mut out, "DescribeOptionGroups", "2014-10-31");
    #[allow(unused_mut)]
    let mut scope_1 = writer.prefix("OptionGroupName");
    if let Some(var_2) = &input.option_group_name {
        scope_1.string(var_2);
    }
    #[allow(unused_mut)]
    let mut scope_3 = writer.prefix("Filters");
    if let Some(var_4) = &input.filters {
        let mut list_6 = scope_3.start_list(false, Some("Filter"));
        for item_5 in var_4 {
            #[allow(unused_mut)]
            let mut entry_7 = list_6.entry();
            crate::protocol_serde::shape_filter::ser_filter(entry_7, item_5)?;
        }
        list_6.finish();
    }
    #[allow(unused_mut)]
    let mut scope_8 = writer.prefix("Marker");
    if let Some(var_9) = &input.marker {
        scope_8.string(var_9);
    }
    #[allow(unused_mut)]
    let mut scope_10 = writer.prefix("MaxRecords");
    if let Some(var_11) = &input.max_records {
        scope_10.number(
            #[allow(clippy::useless_conversion)]
            ::aws_smithy_types::Number::NegInt((*var_11).into()),
        );
    }
    #[allow(unused_mut)]
    let mut scope_12 = writer.prefix("EngineName");
    if let Some(var_13) = &input.engine_name {
        scope_12.string(var_13);
    }
    #[allow(unused_mut)]
    let mut scope_14 = writer.prefix("MajorEngineVersion");
    if let Some(var_15) = &input.major_engine_version {
        scope_14.string(var_15);
    }
    writer.finish();
    Ok(::aws_smithy_types::body::SdkBody::from(out))
}
