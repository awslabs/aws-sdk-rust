// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(unused_mut)]
pub fn ser_connection_pool_configuration(
    mut writer: aws_smithy_query::QueryValueWriter,
    input: &crate::types::ConnectionPoolConfiguration,
) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    #[allow(unused_mut)]
    let mut scope_1 = writer.prefix("MaxConnectionsPercent");
    if let Some(var_2) = &input.max_connections_percent {
        scope_1.number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_2).into()),
        );
    }
    #[allow(unused_mut)]
    let mut scope_3 = writer.prefix("MaxIdleConnectionsPercent");
    if let Some(var_4) = &input.max_idle_connections_percent {
        scope_3.number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_4).into()),
        );
    }
    #[allow(unused_mut)]
    let mut scope_5 = writer.prefix("ConnectionBorrowTimeout");
    if let Some(var_6) = &input.connection_borrow_timeout {
        scope_5.number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_6).into()),
        );
    }
    #[allow(unused_mut)]
    let mut scope_7 = writer.prefix("SessionPinningFilters");
    if let Some(var_8) = &input.session_pinning_filters {
        let mut list_10 = scope_7.start_list(false, None);
        for item_9 in var_8 {
            #[allow(unused_mut)]
            let mut entry_11 = list_10.entry();
            entry_11.string(item_9);
        }
        list_10.finish();
    }
    #[allow(unused_mut)]
    let mut scope_12 = writer.prefix("InitQuery");
    if let Some(var_13) = &input.init_query {
        scope_12.string(var_13);
    }
    Ok(())
}
