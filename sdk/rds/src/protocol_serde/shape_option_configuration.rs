// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(unused_mut)]
pub fn ser_option_configuration(
    mut writer: aws_smithy_query::QueryValueWriter,
    input: &crate::types::OptionConfiguration,
) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    #[allow(unused_mut)]
    let mut scope_1 = writer.prefix("OptionName");
    if let Some(var_2) = &input.option_name {
        scope_1.string(var_2);
    }
    #[allow(unused_mut)]
    let mut scope_3 = writer.prefix("Port");
    if let Some(var_4) = &input.port {
        scope_3.number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_4).into()),
        );
    }
    #[allow(unused_mut)]
    let mut scope_5 = writer.prefix("OptionVersion");
    if let Some(var_6) = &input.option_version {
        scope_5.string(var_6);
    }
    #[allow(unused_mut)]
    let mut scope_7 = writer.prefix("DBSecurityGroupMemberships");
    if let Some(var_8) = &input.db_security_group_memberships {
        let mut list_10 = scope_7.start_list(false, Some("DBSecurityGroupName"));
        for item_9 in var_8 {
            #[allow(unused_mut)]
            let mut entry_11 = list_10.entry();
            entry_11.string(item_9);
        }
        list_10.finish();
    }
    #[allow(unused_mut)]
    let mut scope_12 = writer.prefix("VpcSecurityGroupMemberships");
    if let Some(var_13) = &input.vpc_security_group_memberships {
        let mut list_15 = scope_12.start_list(false, Some("VpcSecurityGroupId"));
        for item_14 in var_13 {
            #[allow(unused_mut)]
            let mut entry_16 = list_15.entry();
            entry_16.string(item_14);
        }
        list_15.finish();
    }
    #[allow(unused_mut)]
    let mut scope_17 = writer.prefix("OptionSettings");
    if let Some(var_18) = &input.option_settings {
        let mut list_20 = scope_17.start_list(false, Some("OptionSetting"));
        for item_19 in var_18 {
            #[allow(unused_mut)]
            let mut entry_21 = list_20.entry();
            crate::protocol_serde::shape_option_setting::ser_option_setting(entry_21, item_19)?;
        }
        list_20.finish();
    }
    Ok(())
}
