// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_copy_db_snapshot_input_input(
    input: &crate::operation::copy_db_snapshot::CopyDbSnapshotInput,
) -> Result<aws_smithy_http::body::SdkBody, aws_smithy_http::operation::error::SerializationError> {
    let mut out = String::new();
    #[allow(unused_mut)]
    let mut writer = aws_smithy_query::QueryWriter::new(&mut out, "CopyDBSnapshot", "2014-10-31");
    #[allow(unused_mut)]
    let mut scope_1 = writer.prefix("SourceDBSnapshotIdentifier");
    if let Some(var_2) = &input.source_db_snapshot_identifier {
        scope_1.string(var_2);
    }
    #[allow(unused_mut)]
    let mut scope_3 = writer.prefix("TargetDBSnapshotIdentifier");
    if let Some(var_4) = &input.target_db_snapshot_identifier {
        scope_3.string(var_4);
    }
    #[allow(unused_mut)]
    let mut scope_5 = writer.prefix("KmsKeyId");
    if let Some(var_6) = &input.kms_key_id {
        scope_5.string(var_6);
    }
    #[allow(unused_mut)]
    let mut scope_7 = writer.prefix("Tags");
    if let Some(var_8) = &input.tags {
        let mut list_10 = scope_7.start_list(false, Some("Tag"));
        for item_9 in var_8 {
            #[allow(unused_mut)]
            let mut entry_11 = list_10.entry();
            crate::protocol_serde::shape_tag::ser_tag(entry_11, item_9)?;
        }
        list_10.finish();
    }
    #[allow(unused_mut)]
    let mut scope_12 = writer.prefix("CopyTags");
    if let Some(var_13) = &input.copy_tags {
        scope_12.boolean(*var_13);
    }
    #[allow(unused_mut)]
    let mut scope_14 = writer.prefix("PreSignedUrl");
    if let Some(var_15) = &input.pre_signed_url {
        scope_14.string(var_15);
    }
    #[allow(unused_mut)]
    let mut scope_16 = writer.prefix("OptionGroupName");
    if let Some(var_17) = &input.option_group_name {
        scope_16.string(var_17);
    }
    #[allow(unused_mut)]
    let mut scope_18 = writer.prefix("TargetCustomAvailabilityZone");
    if let Some(var_19) = &input.target_custom_availability_zone {
        scope_18.string(var_19);
    }
    #[allow(unused_mut)]
    let mut scope_20 = writer.prefix("CopyOptionGroup");
    if let Some(var_21) = &input.copy_option_group {
        scope_20.boolean(*var_21);
    }
    writer.finish();
    Ok(aws_smithy_http::body::SdkBody::from(out))
}
