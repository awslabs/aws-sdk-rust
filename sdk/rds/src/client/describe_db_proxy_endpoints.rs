// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeDBProxyEndpoints`](crate::operation::describe_db_proxy_endpoints::builders::DescribeDBProxyEndpointsFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::describe_db_proxy_endpoints::builders::DescribeDBProxyEndpointsFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`db_proxy_name(impl Into<String>)`](crate::operation::describe_db_proxy_endpoints::builders::DescribeDBProxyEndpointsFluentBuilder::db_proxy_name) / [`set_db_proxy_name(Option<String>)`](crate::operation::describe_db_proxy_endpoints::builders::DescribeDBProxyEndpointsFluentBuilder::set_db_proxy_name):<br>required: **false**<br><p>The name of the DB proxy whose endpoints you want to describe. If you omit this parameter, the output includes information about all DB proxy endpoints associated with all your DB proxies.</p><br>
    ///   - [`db_proxy_endpoint_name(impl Into<String>)`](crate::operation::describe_db_proxy_endpoints::builders::DescribeDBProxyEndpointsFluentBuilder::db_proxy_endpoint_name) / [`set_db_proxy_endpoint_name(Option<String>)`](crate::operation::describe_db_proxy_endpoints::builders::DescribeDBProxyEndpointsFluentBuilder::set_db_proxy_endpoint_name):<br>required: **false**<br><p>The name of a DB proxy endpoint to describe. If you omit this parameter, the output includes information about all DB proxy endpoints associated with the specified proxy.</p><br>
    ///   - [`filters(Filter)`](crate::operation::describe_db_proxy_endpoints::builders::DescribeDBProxyEndpointsFluentBuilder::filters) / [`set_filters(Option<Vec::<Filter>>)`](crate::operation::describe_db_proxy_endpoints::builders::DescribeDBProxyEndpointsFluentBuilder::set_filters):<br>required: **false**<br><p>This parameter is not currently supported.</p><br>
    ///   - [`marker(impl Into<String>)`](crate::operation::describe_db_proxy_endpoints::builders::DescribeDBProxyEndpointsFluentBuilder::marker) / [`set_marker(Option<String>)`](crate::operation::describe_db_proxy_endpoints::builders::DescribeDBProxyEndpointsFluentBuilder::set_marker):<br>required: **false**<br><p>An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.</p><br>
    ///   - [`max_records(i32)`](crate::operation::describe_db_proxy_endpoints::builders::DescribeDBProxyEndpointsFluentBuilder::max_records) / [`set_max_records(Option<i32>)`](crate::operation::describe_db_proxy_endpoints::builders::DescribeDBProxyEndpointsFluentBuilder::set_max_records):<br>required: **false**<br><p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved.</p>  <p>Default: 100</p>  <p>Constraints: Minimum 20, maximum 100.</p><br>
    /// - On success, responds with [`DescribeDbProxyEndpointsOutput`](crate::operation::describe_db_proxy_endpoints::DescribeDbProxyEndpointsOutput) with field(s):
    ///   - [`db_proxy_endpoints(Option<Vec::<DbProxyEndpoint>>)`](crate::operation::describe_db_proxy_endpoints::DescribeDbProxyEndpointsOutput::db_proxy_endpoints): <p>The list of <code>ProxyEndpoint</code> objects returned by the API operation.</p>
    ///   - [`marker(Option<String>)`](crate::operation::describe_db_proxy_endpoints::DescribeDbProxyEndpointsOutput::marker): <p>An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.</p>
    /// - On failure, responds with [`SdkError<DescribeDBProxyEndpointsError>`](crate::operation::describe_db_proxy_endpoints::DescribeDBProxyEndpointsError)
    pub fn describe_db_proxy_endpoints(&self) -> crate::operation::describe_db_proxy_endpoints::builders::DescribeDBProxyEndpointsFluentBuilder {
        crate::operation::describe_db_proxy_endpoints::builders::DescribeDBProxyEndpointsFluentBuilder::new(self.handle.clone())
    }
}
