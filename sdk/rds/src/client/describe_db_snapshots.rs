// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeDBSnapshots`](crate::operation::describe_db_snapshots::builders::DescribeDBSnapshotsFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::describe_db_snapshots::builders::DescribeDBSnapshotsFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`db_instance_identifier(impl Into<String>)`](crate::operation::describe_db_snapshots::builders::DescribeDBSnapshotsFluentBuilder::db_instance_identifier) / [`set_db_instance_identifier(Option<String>)`](crate::operation::describe_db_snapshots::builders::DescribeDBSnapshotsFluentBuilder::set_db_instance_identifier):<br>required: **false**<br><p>The ID of the DB instance to retrieve the list of DB snapshots for. This parameter isn't case-sensitive.</p>  <p>Constraints:</p>  <ul>   <li> <p>If supplied, must match the identifier of an existing DBInstance.</p> </li>  </ul><br>
    ///   - [`db_snapshot_identifier(impl Into<String>)`](crate::operation::describe_db_snapshots::builders::DescribeDBSnapshotsFluentBuilder::db_snapshot_identifier) / [`set_db_snapshot_identifier(Option<String>)`](crate::operation::describe_db_snapshots::builders::DescribeDBSnapshotsFluentBuilder::set_db_snapshot_identifier):<br>required: **false**<br><p>A specific DB snapshot identifier to describe. This value is stored as a lowercase string.</p>  <p>Constraints:</p>  <ul>   <li> <p>If supplied, must match the identifier of an existing DBSnapshot.</p> </li>   <li> <p>If this identifier is for an automated snapshot, the <code>SnapshotType</code> parameter must also be specified.</p> </li>  </ul><br>
    ///   - [`snapshot_type(impl Into<String>)`](crate::operation::describe_db_snapshots::builders::DescribeDBSnapshotsFluentBuilder::snapshot_type) / [`set_snapshot_type(Option<String>)`](crate::operation::describe_db_snapshots::builders::DescribeDBSnapshotsFluentBuilder::set_snapshot_type):<br>required: **false**<br><p>The type of snapshots to be returned. You can specify one of the following values:</p>  <ul>   <li> <p> <code>automated</code> - Return all DB snapshots that have been automatically taken by Amazon RDS for my Amazon Web Services account.</p> </li>   <li> <p> <code>manual</code> - Return all DB snapshots that have been taken by my Amazon Web Services account.</p> </li>   <li> <p> <code>shared</code> - Return all manual DB snapshots that have been shared to my Amazon Web Services account.</p> </li>   <li> <p> <code>public</code> - Return all DB snapshots that have been marked as public.</p> </li>   <li> <p> <code>awsbackup</code> - Return the DB snapshots managed by the Amazon Web Services Backup service.</p> <p>For information about Amazon Web Services Backup, see the <a href="https://docs.aws.amazon.com/aws-backup/latest/devguide/whatisbackup.html"> <i>Amazon Web Services Backup Developer Guide.</i> </a> </p> <p>The <code>awsbackup</code> type does not apply to Aurora.</p> </li>  </ul>  <p>If you don't specify a <code>SnapshotType</code> value, then both automated and manual snapshots are returned. Shared and public DB snapshots are not included in the returned results by default. You can include shared snapshots with these results by enabling the <code>IncludeShared</code> parameter. You can include public snapshots with these results by enabling the <code>IncludePublic</code> parameter.</p>  <p>The <code>IncludeShared</code> and <code>IncludePublic</code> parameters don't apply for <code>SnapshotType</code> values of <code>manual</code> or <code>automated</code>. The <code>IncludePublic</code> parameter doesn't apply when <code>SnapshotType</code> is set to <code>shared</code>. The <code>IncludeShared</code> parameter doesn't apply when <code>SnapshotType</code> is set to <code>public</code>.</p><br>
    ///   - [`filters(Filter)`](crate::operation::describe_db_snapshots::builders::DescribeDBSnapshotsFluentBuilder::filters) / [`set_filters(Option<Vec::<Filter>>)`](crate::operation::describe_db_snapshots::builders::DescribeDBSnapshotsFluentBuilder::set_filters):<br>required: **false**<br><p>A filter that specifies one or more DB snapshots to describe.</p>  <p>Supported filters:</p>  <ul>   <li> <p> <code>db-instance-id</code> - Accepts DB instance identifiers and DB instance Amazon Resource Names (ARNs).</p> </li>   <li> <p> <code>db-snapshot-id</code> - Accepts DB snapshot identifiers.</p> </li>   <li> <p> <code>dbi-resource-id</code> - Accepts identifiers of source DB instances.</p> </li>   <li> <p> <code>snapshot-type</code> - Accepts types of DB snapshots.</p> </li>   <li> <p> <code>engine</code> - Accepts names of database engines.</p> </li>  </ul><br>
    ///   - [`max_records(i32)`](crate::operation::describe_db_snapshots::builders::DescribeDBSnapshotsFluentBuilder::max_records) / [`set_max_records(Option<i32>)`](crate::operation::describe_db_snapshots::builders::DescribeDBSnapshotsFluentBuilder::set_max_records):<br>required: **false**<br><p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that you can retrieve the remaining results.</p>  <p>Default: 100</p>  <p>Constraints: Minimum 20, maximum 100.</p><br>
    ///   - [`marker(impl Into<String>)`](crate::operation::describe_db_snapshots::builders::DescribeDBSnapshotsFluentBuilder::marker) / [`set_marker(Option<String>)`](crate::operation::describe_db_snapshots::builders::DescribeDBSnapshotsFluentBuilder::set_marker):<br>required: **false**<br><p>An optional pagination token provided by a previous <code>DescribeDBSnapshots</code> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.</p><br>
    ///   - [`include_shared(bool)`](crate::operation::describe_db_snapshots::builders::DescribeDBSnapshotsFluentBuilder::include_shared) / [`set_include_shared(Option<bool>)`](crate::operation::describe_db_snapshots::builders::DescribeDBSnapshotsFluentBuilder::set_include_shared):<br>required: **false**<br><p>Specifies whether to include shared manual DB cluster snapshots from other Amazon Web Services accounts that this Amazon Web Services account has been given permission to copy or restore. By default, these snapshots are not included.</p>  <p>You can give an Amazon Web Services account permission to restore a manual DB snapshot from another Amazon Web Services account by using the <code>ModifyDBSnapshotAttribute</code> API action.</p>  <p>This setting doesn't apply to RDS Custom.</p><br>
    ///   - [`include_public(bool)`](crate::operation::describe_db_snapshots::builders::DescribeDBSnapshotsFluentBuilder::include_public) / [`set_include_public(Option<bool>)`](crate::operation::describe_db_snapshots::builders::DescribeDBSnapshotsFluentBuilder::set_include_public):<br>required: **false**<br><p>Specifies whether to include manual DB cluster snapshots that are public and can be copied or restored by any Amazon Web Services account. By default, the public snapshots are not included.</p>  <p>You can share a manual DB snapshot as public by using the <code>ModifyDBSnapshotAttribute</code> API.</p>  <p>This setting doesn't apply to RDS Custom.</p><br>
    ///   - [`dbi_resource_id(impl Into<String>)`](crate::operation::describe_db_snapshots::builders::DescribeDBSnapshotsFluentBuilder::dbi_resource_id) / [`set_dbi_resource_id(Option<String>)`](crate::operation::describe_db_snapshots::builders::DescribeDBSnapshotsFluentBuilder::set_dbi_resource_id):<br>required: **false**<br><p>A specific DB resource ID to describe.</p><br>
    /// - On success, responds with [`DescribeDbSnapshotsOutput`](crate::operation::describe_db_snapshots::DescribeDbSnapshotsOutput) with field(s):
    ///   - [`marker(Option<String>)`](crate::operation::describe_db_snapshots::DescribeDbSnapshotsOutput::marker): <p>An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.</p>
    ///   - [`db_snapshots(Option<Vec::<DbSnapshot>>)`](crate::operation::describe_db_snapshots::DescribeDbSnapshotsOutput::db_snapshots): <p>A list of <code>DBSnapshot</code> instances.</p>
    /// - On failure, responds with [`SdkError<DescribeDBSnapshotsError>`](crate::operation::describe_db_snapshots::DescribeDBSnapshotsError)
    pub fn describe_db_snapshots(&self) -> crate::operation::describe_db_snapshots::builders::DescribeDBSnapshotsFluentBuilder {
        crate::operation::describe_db_snapshots::builders::DescribeDBSnapshotsFluentBuilder::new(self.handle.clone())
    }
}
