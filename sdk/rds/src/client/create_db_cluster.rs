// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateDBCluster`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`availability_zones(impl Into<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::availability_zones) / [`set_availability_zones(Option<Vec::<String>>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::set_availability_zones):<br>required: **false**<br><p>A list of Availability Zones (AZs) where DB instances in the DB cluster can be created.</p>  <p>For information on Amazon Web Services Regions and Availability Zones, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Concepts.RegionsAndAvailabilityZones.html">Choosing the Regions and Availability Zones</a> in the <i>Amazon Aurora User Guide</i>.</p>  <p>Valid for Cluster Type: Aurora DB clusters only</p><br>
    ///   - [`backup_retention_period(i32)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::backup_retention_period) / [`set_backup_retention_period(Option<i32>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::set_backup_retention_period):<br>required: **false**<br><p>The number of days for which automated backups are retained.</p>  <p>Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters</p>  <p>Default: <code>1</code> </p>  <p>Constraints:</p>  <ul>   <li> <p>Must be a value from 1 to 35.</p> </li>  </ul><br>
    ///   - [`character_set_name(impl Into<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::character_set_name) / [`set_character_set_name(Option<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::set_character_set_name):<br>required: **false**<br><p>The name of the character set (<code>CharacterSet</code>) to associate the DB cluster with.</p>  <p>Valid for Cluster Type: Aurora DB clusters only</p><br>
    ///   - [`database_name(impl Into<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::database_name) / [`set_database_name(Option<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::set_database_name):<br>required: **false**<br><p>The name for your database of up to 64 alphanumeric characters. If you don't provide a name, Amazon RDS doesn't create a database in the DB cluster you are creating.</p>  <p>Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters</p><br>
    ///   - [`db_cluster_identifier(impl Into<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::db_cluster_identifier) / [`set_db_cluster_identifier(Option<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::set_db_cluster_identifier):<br>required: **true**<br><p>The identifier for this DB cluster. This parameter is stored as a lowercase string.</p>  <p>Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters</p>  <p>Constraints:</p>  <ul>   <li> <p>Must contain from 1 to 63 letters, numbers, or hyphens.</p> </li>   <li> <p>First character must be a letter.</p> </li>   <li> <p>Can't end with a hyphen or contain two consecutive hyphens.</p> </li>  </ul>  <p>Example: <code>my-cluster1</code> </p><br>
    ///   - [`db_cluster_parameter_group_name(impl Into<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::db_cluster_parameter_group_name) / [`set_db_cluster_parameter_group_name(Option<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::set_db_cluster_parameter_group_name):<br>required: **false**<br><p>The name of the DB cluster parameter group to associate with this DB cluster. If you don't specify a value, then the default DB cluster parameter group for the specified DB engine and version is used.</p>  <p>Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters</p>  <p>Constraints:</p>  <ul>   <li> <p>If supplied, must match the name of an existing DB cluster parameter group.</p> </li>  </ul><br>
    ///   - [`vpc_security_group_ids(impl Into<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::vpc_security_group_ids) / [`set_vpc_security_group_ids(Option<Vec::<String>>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::set_vpc_security_group_ids):<br>required: **false**<br><p>A list of EC2 VPC security groups to associate with this DB cluster.</p>  <p>Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters</p><br>
    ///   - [`db_subnet_group_name(impl Into<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::db_subnet_group_name) / [`set_db_subnet_group_name(Option<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::set_db_subnet_group_name):<br>required: **false**<br><p>A DB subnet group to associate with this DB cluster.</p>  <p>This setting is required to create a Multi-AZ DB cluster.</p>  <p>Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters</p>  <p>Constraints:</p>  <ul>   <li> <p>Must match the name of an existing DB subnet group.</p> </li>   <li> <p>Must not be <code>default</code>.</p> </li>  </ul>  <p>Example: <code>mydbsubnetgroup</code> </p><br>
    ///   - [`engine(impl Into<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::engine) / [`set_engine(Option<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::set_engine):<br>required: **true**<br><p>The database engine to use for this DB cluster.</p>  <p>Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters</p>  <p>Valid Values: <code>aurora-mysql | aurora-postgresql | mysql | postgres</code> </p><br>
    ///   - [`engine_version(impl Into<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::engine_version) / [`set_engine_version(Option<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::set_engine_version):<br>required: **false**<br><p>The version number of the database engine to use.</p>  <p>To list all of the available engine versions for Aurora MySQL version 2 (5.7-compatible) and version 3 (MySQL 8.0-compatible), use the following command:</p>  <p> <code>aws rds describe-db-engine-versions --engine aurora-mysql --query "DBEngineVersions[].EngineVersion"</code> </p>  <p>You can supply either <code>5.7</code> or <code>8.0</code> to use the default engine version for Aurora MySQL version 2 or version 3, respectively.</p>  <p>To list all of the available engine versions for Aurora PostgreSQL, use the following command:</p>  <p> <code>aws rds describe-db-engine-versions --engine aurora-postgresql --query "DBEngineVersions[].EngineVersion"</code> </p>  <p>To list all of the available engine versions for RDS for MySQL, use the following command:</p>  <p> <code>aws rds describe-db-engine-versions --engine mysql --query "DBEngineVersions[].EngineVersion"</code> </p>  <p>To list all of the available engine versions for RDS for PostgreSQL, use the following command:</p>  <p> <code>aws rds describe-db-engine-versions --engine postgres --query "DBEngineVersions[].EngineVersion"</code> </p>  <p>For information about a specific engine, see the following topics:</p>  <ul>   <li> <p>Aurora MySQL - see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/AuroraMySQL.Updates.html">Database engine updates for Amazon Aurora MySQL</a> in the <i>Amazon Aurora User Guide</i>.</p> </li>   <li> <p>Aurora PostgreSQL - see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/AuroraPostgreSQL.Updates.20180305.html">Amazon Aurora PostgreSQL releases and engine versions</a> in the <i>Amazon Aurora User Guide</i>.</p> </li>   <li> <p>RDS for MySQL - see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_MySQL.html#MySQL.Concepts.VersionMgmt">Amazon RDS for MySQL</a> in the <i>Amazon RDS User Guide</i>.</p> </li>   <li> <p>RDS for PostgreSQL - see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_PostgreSQL.html#PostgreSQL.Concepts">Amazon RDS for PostgreSQL</a> in the <i>Amazon RDS User Guide</i>.</p> </li>  </ul>  <p>Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters</p><br>
    ///   - [`port(i32)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::port) / [`set_port(Option<i32>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::set_port):<br>required: **false**<br><p>The port number on which the instances in the DB cluster accept connections.</p>  <p>Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters</p>  <p>Valid Values: <code>1150-65535</code> </p>  <p>Default:</p>  <ul>   <li> <p>RDS for MySQL and Aurora MySQL - <code>3306</code> </p> </li>   <li> <p>RDS for PostgreSQL and Aurora PostgreSQL - <code>5432</code> </p> </li>  </ul><br>
    ///   - [`master_username(impl Into<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::master_username) / [`set_master_username(Option<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::set_master_username):<br>required: **false**<br><p>The name of the master user for the DB cluster.</p>  <p>Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters</p>  <p>Constraints:</p>  <ul>   <li> <p>Must be 1 to 16 letters or numbers.</p> </li>   <li> <p>First character must be a letter.</p> </li>   <li> <p>Can't be a reserved word for the chosen database engine.</p> </li>  </ul><br>
    ///   - [`master_user_password(impl Into<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::master_user_password) / [`set_master_user_password(Option<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::set_master_user_password):<br>required: **false**<br><p>The password for the master database user.</p>  <p>Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters</p>  <p>Constraints:</p>  <ul>   <li> <p>Must contain from 8 to 41 characters.</p> </li>   <li> <p>Can contain any printable ASCII character except "/", """, or "@".</p> </li>   <li> <p>Can't be specified if <code>ManageMasterUserPassword</code> is turned on.</p> </li>  </ul><br>
    ///   - [`option_group_name(impl Into<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::option_group_name) / [`set_option_group_name(Option<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::set_option_group_name):<br>required: **false**<br><p>The option group to associate the DB cluster with.</p>  <p>DB clusters are associated with a default option group that can't be modified.</p><br>
    ///   - [`preferred_backup_window(impl Into<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::preferred_backup_window) / [`set_preferred_backup_window(Option<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::set_preferred_backup_window):<br>required: **false**<br><p>The daily time range during which automated backups are created if automated backups are enabled using the <code>BackupRetentionPeriod</code> parameter.</p>  <p>Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters</p>  <p>The default is a 30-minute window selected at random from an 8-hour block of time for each Amazon Web Services Region. To view the time blocks available, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Managing.Backups.html#Aurora.Managing.Backups.BackupWindow"> Backup window</a> in the <i>Amazon Aurora User Guide</i>.</p>  <p>Constraints:</p>  <ul>   <li> <p>Must be in the format <code>hh24:mi-hh24:mi</code>.</p> </li>   <li> <p>Must be in Universal Coordinated Time (UTC).</p> </li>   <li> <p>Must not conflict with the preferred maintenance window.</p> </li>   <li> <p>Must be at least 30 minutes.</p> </li>  </ul><br>
    ///   - [`preferred_maintenance_window(impl Into<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::preferred_maintenance_window) / [`set_preferred_maintenance_window(Option<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::set_preferred_maintenance_window):<br>required: **false**<br><p>The weekly time range during which system maintenance can occur.</p>  <p>Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters</p>  <p>The default is a 30-minute window selected at random from an 8-hour block of time for each Amazon Web Services Region, occurring on a random day of the week. To see the time blocks available, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_UpgradeDBInstance.Maintenance.html#AdjustingTheMaintenanceWindow.Aurora"> Adjusting the Preferred DB Cluster Maintenance Window</a> in the <i>Amazon Aurora User Guide</i>.</p>  <p>Constraints:</p>  <ul>   <li> <p>Must be in the format <code>ddd:hh24:mi-ddd:hh24:mi</code>.</p> </li>   <li> <p>Days must be one of <code>Mon | Tue | Wed | Thu | Fri | Sat | Sun</code>.</p> </li>   <li> <p>Must be in Universal Coordinated Time (UTC).</p> </li>   <li> <p>Must be at least 30 minutes.</p> </li>  </ul><br>
    ///   - [`replication_source_identifier(impl Into<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::replication_source_identifier) / [`set_replication_source_identifier(Option<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::set_replication_source_identifier):<br>required: **false**<br><p>The Amazon Resource Name (ARN) of the source DB instance or DB cluster if this DB cluster is created as a read replica.</p>  <p>Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters</p><br>
    ///   - [`tags(Tag)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::tags) / [`set_tags(Option<Vec::<Tag>>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::set_tags):<br>required: **false**<br><p>Tags to assign to the DB cluster.</p>  <p>Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters</p><br>
    ///   - [`storage_encrypted(bool)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::storage_encrypted) / [`set_storage_encrypted(Option<bool>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::set_storage_encrypted):<br>required: **false**<br><p>Specifies whether the DB cluster is encrypted.</p>  <p>Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters</p><br>
    ///   - [`kms_key_id(impl Into<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::kms_key_id) / [`set_kms_key_id(Option<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::set_kms_key_id):<br>required: **false**<br><p>The Amazon Web Services KMS key identifier for an encrypted DB cluster.</p>  <p>The Amazon Web Services KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the KMS key. To use a KMS key in a different Amazon Web Services account, specify the key ARN or alias ARN.</p>  <p>When a KMS key isn't specified in <code>KmsKeyId</code>:</p>  <ul>   <li> <p>If <code>ReplicationSourceIdentifier</code> identifies an encrypted source, then Amazon RDS uses the KMS key used to encrypt the source. Otherwise, Amazon RDS uses your default KMS key.</p> </li>   <li> <p>If the <code>StorageEncrypted</code> parameter is enabled and <code>ReplicationSourceIdentifier</code> isn't specified, then Amazon RDS uses your default KMS key.</p> </li>  </ul>  <p>There is a default KMS key for your Amazon Web Services account. Your Amazon Web Services account has a different default KMS key for each Amazon Web Services Region.</p>  <p>If you create a read replica of an encrypted DB cluster in another Amazon Web Services Region, make sure to set <code>KmsKeyId</code> to a KMS key identifier that is valid in the destination Amazon Web Services Region. This KMS key is used to encrypt the read replica in that Amazon Web Services Region.</p>  <p>Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters</p><br>
    ///   - [`pre_signed_url(impl Into<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::pre_signed_url) / [`set_pre_signed_url(Option<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::set_pre_signed_url):<br>required: **false**<br><p>When you are replicating a DB cluster from one Amazon Web Services GovCloud (US) Region to another, an URL that contains a Signature Version 4 signed request for the <code>CreateDBCluster</code> operation to be called in the source Amazon Web Services Region where the DB cluster is replicated from. Specify <code>PreSignedUrl</code> only when you are performing cross-Region replication from an encrypted DB cluster.</p>  <p>The presigned URL must be a valid request for the <code>CreateDBCluster</code> API operation that can run in the source Amazon Web Services Region that contains the encrypted DB cluster to copy.</p>  <p>The presigned URL request must contain the following parameter values:</p>  <ul>   <li> <p> <code>KmsKeyId</code> - The KMS key identifier for the KMS key to use to encrypt the copy of the DB cluster in the destination Amazon Web Services Region. This should refer to the same KMS key for both the <code>CreateDBCluster</code> operation that is called in the destination Amazon Web Services Region, and the operation contained in the presigned URL.</p> </li>   <li> <p> <code>DestinationRegion</code> - The name of the Amazon Web Services Region that Aurora read replica will be created in.</p> </li>   <li> <p> <code>ReplicationSourceIdentifier</code> - The DB cluster identifier for the encrypted DB cluster to be copied. This identifier must be in the Amazon Resource Name (ARN) format for the source Amazon Web Services Region. For example, if you are copying an encrypted DB cluster from the us-west-2 Amazon Web Services Region, then your <code>ReplicationSourceIdentifier</code> would look like Example: <code>arn:aws:rds:us-west-2:123456789012:cluster:aurora-cluster1</code>.</p> </li>  </ul>  <p>To learn how to generate a Signature Version 4 signed request, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/sigv4-query-string-auth.html"> Authenticating Requests: Using Query Parameters (Amazon Web Services Signature Version 4)</a> and <a href="https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html"> Signature Version 4 Signing Process</a>.</p> <note>   <p>If you are using an Amazon Web Services SDK tool or the CLI, you can specify <code>SourceRegion</code> (or <code>--source-region</code> for the CLI) instead of specifying <code>PreSignedUrl</code> manually. Specifying <code>SourceRegion</code> autogenerates a presigned URL that is a valid request for the operation that can run in the source Amazon Web Services Region.</p>  </note>  <p>Valid for Cluster Type: Aurora DB clusters only</p><br>
    ///   - [`enable_iam_database_authentication(bool)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::enable_iam_database_authentication) / [`set_enable_iam_database_authentication(Option<bool>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::set_enable_iam_database_authentication):<br>required: **false**<br><p>Specifies whether to enable mapping of Amazon Web Services Identity and Access Management (IAM) accounts to database accounts. By default, mapping isn't enabled.</p>  <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.IAMDBAuth.html"> IAM Database Authentication</a> in the <i>Amazon Aurora User Guide</i>.</p>  <p>Valid for Cluster Type: Aurora DB clusters only</p><br>
    ///   - [`backtrack_window(i64)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::backtrack_window) / [`set_backtrack_window(Option<i64>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::set_backtrack_window):<br>required: **false**<br><p>The target backtrack window, in seconds. To disable backtracking, set this value to <code>0</code>.</p>  <p>Valid for Cluster Type: Aurora MySQL DB clusters only</p>  <p>Default: <code>0</code> </p>  <p>Constraints:</p>  <ul>   <li> <p>If specified, this value must be set to a number from 0 to 259,200 (72 hours).</p> </li>  </ul><br>
    ///   - [`enable_cloudwatch_logs_exports(impl Into<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::enable_cloudwatch_logs_exports) / [`set_enable_cloudwatch_logs_exports(Option<Vec::<String>>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::set_enable_cloudwatch_logs_exports):<br>required: **false**<br><p>The list of log types that need to be enabled for exporting to CloudWatch Logs.</p>  <p>Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters</p>  <p>The following values are valid for each DB engine:</p>  <ul>   <li> <p>Aurora MySQL - <code>audit | error | general | slowquery</code> </p> </li>   <li> <p>Aurora PostgreSQL - <code>postgresql</code> </p> </li>   <li> <p>RDS for MySQL - <code>error | general | slowquery</code> </p> </li>   <li> <p>RDS for PostgreSQL - <code>postgresql | upgrade</code> </p> </li>  </ul>  <p>For more information about exporting CloudWatch Logs for Amazon RDS, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_LogAccess.html#USER_LogAccess.Procedural.UploadtoCloudWatch">Publishing Database Logs to Amazon CloudWatch Logs</a> in the <i>Amazon RDS User Guide</i>.</p>  <p>For more information about exporting CloudWatch Logs for Amazon Aurora, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_LogAccess.html#USER_LogAccess.Procedural.UploadtoCloudWatch">Publishing Database Logs to Amazon CloudWatch Logs</a> in the <i>Amazon Aurora User Guide</i>.</p><br>
    ///   - [`engine_mode(impl Into<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::engine_mode) / [`set_engine_mode(Option<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::set_engine_mode):<br>required: **false**<br><p>The DB engine mode of the DB cluster, either <code>provisioned</code> or <code>serverless</code>.</p>  <p>The <code>serverless</code> engine mode only applies for Aurora Serverless v1 DB clusters.</p>  <p>For information about limitations and requirements for Serverless DB clusters, see the following sections in the <i>Amazon Aurora User Guide</i>:</p>  <ul>   <li> <p> <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html#aurora-serverless.limitations">Limitations of Aurora Serverless v1</a> </p> </li>   <li> <p> <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless-v2.requirements.html">Requirements for Aurora Serverless v2</a> </p> </li>  </ul>  <p>Valid for Cluster Type: Aurora DB clusters only</p><br>
    ///   - [`scaling_configuration(ScalingConfiguration)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::scaling_configuration) / [`set_scaling_configuration(Option<ScalingConfiguration>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::set_scaling_configuration):<br>required: **false**<br><p>For DB clusters in <code>serverless</code> DB engine mode, the scaling properties of the DB cluster.</p>  <p>Valid for Cluster Type: Aurora DB clusters only</p><br>
    ///   - [`deletion_protection(bool)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::deletion_protection) / [`set_deletion_protection(Option<bool>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::set_deletion_protection):<br>required: **false**<br><p>Specifies whether the DB cluster has deletion protection enabled. The database can't be deleted when deletion protection is enabled. By default, deletion protection isn't enabled.</p>  <p>Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters</p><br>
    ///   - [`global_cluster_identifier(impl Into<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::global_cluster_identifier) / [`set_global_cluster_identifier(Option<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::set_global_cluster_identifier):<br>required: **false**<br><p>The global cluster ID of an Aurora cluster that becomes the primary cluster in the new global database cluster.</p>  <p>Valid for Cluster Type: Aurora DB clusters only</p><br>
    ///   - [`enable_http_endpoint(bool)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::enable_http_endpoint) / [`set_enable_http_endpoint(Option<bool>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::set_enable_http_endpoint):<br>required: **false**<br><p>Specifies whether to enable the HTTP endpoint for an Aurora Serverless v1 DB cluster. By default, the HTTP endpoint is disabled.</p>  <p>When enabled, the HTTP endpoint provides a connectionless web service API for running SQL queries on the Aurora Serverless v1 DB cluster. You can also query your database from inside the RDS console with the query editor.</p>  <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/data-api.html">Using the Data API for Aurora Serverless v1</a> in the <i>Amazon Aurora User Guide</i>.</p>  <p>Valid for Cluster Type: Aurora DB clusters only</p><br>
    ///   - [`copy_tags_to_snapshot(bool)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::copy_tags_to_snapshot) / [`set_copy_tags_to_snapshot(Option<bool>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::set_copy_tags_to_snapshot):<br>required: **false**<br><p>Specifies whether to copy all tags from the DB cluster to snapshots of the DB cluster. The default is not to copy them.</p>  <p>Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters</p><br>
    ///   - [`domain(impl Into<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::domain) / [`set_domain(Option<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::set_domain):<br>required: **false**<br><p>The Active Directory directory ID to create the DB cluster in.</p>  <p>For Amazon Aurora DB clusters, Amazon RDS can use Kerberos authentication to authenticate users that connect to the DB cluster.</p>  <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/kerberos-authentication.html">Kerberos authentication</a> in the <i>Amazon Aurora User Guide</i>.</p>  <p>Valid for Cluster Type: Aurora DB clusters only</p><br>
    ///   - [`domain_iam_role_name(impl Into<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::domain_iam_role_name) / [`set_domain_iam_role_name(Option<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::set_domain_iam_role_name):<br>required: **false**<br><p>The name of the IAM role to use when making API calls to the Directory Service.</p>  <p>Valid for Cluster Type: Aurora DB clusters only</p><br>
    ///   - [`enable_global_write_forwarding(bool)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::enable_global_write_forwarding) / [`set_enable_global_write_forwarding(Option<bool>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::set_enable_global_write_forwarding):<br>required: **false**<br><p>Specifies whether to enable this DB cluster to forward write operations to the primary cluster of a global cluster (Aurora global database). By default, write operations are not allowed on Aurora DB clusters that are secondary clusters in an Aurora global database.</p>  <p>You can set this value only on Aurora DB clusters that are members of an Aurora global database. With this parameter enabled, a secondary cluster can forward writes to the current primary cluster, and the resulting changes are replicated back to this cluster. For the primary DB cluster of an Aurora global database, this value is used immediately if the primary is demoted by a global cluster API operation, but it does nothing until then.</p>  <p>Valid for Cluster Type: Aurora DB clusters only</p><br>
    ///   - [`db_cluster_instance_class(impl Into<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::db_cluster_instance_class) / [`set_db_cluster_instance_class(Option<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::set_db_cluster_instance_class):<br>required: **false**<br><p>The compute and memory capacity of each DB instance in the Multi-AZ DB cluster, for example <code>db.m6gd.xlarge</code>. Not all DB instance classes are available in all Amazon Web Services Regions, or for all database engines.</p>  <p>For the full list of DB instance classes and availability for your engine, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html">DB instance class</a> in the <i>Amazon RDS User Guide</i>.</p>  <p>This setting is required to create a Multi-AZ DB cluster.</p>  <p>Valid for Cluster Type: Multi-AZ DB clusters only</p><br>
    ///   - [`allocated_storage(i32)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::allocated_storage) / [`set_allocated_storage(Option<i32>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::set_allocated_storage):<br>required: **false**<br><p>The amount of storage in gibibytes (GiB) to allocate to each DB instance in the Multi-AZ DB cluster.</p>  <p>Valid for Cluster Type: Multi-AZ DB clusters only</p>  <p>This setting is required to create a Multi-AZ DB cluster.</p><br>
    ///   - [`storage_type(impl Into<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::storage_type) / [`set_storage_type(Option<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::set_storage_type):<br>required: **false**<br><p>The storage type to associate with the DB cluster.</p>  <p>For information on storage types for Aurora DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Overview.StorageReliability.html#aurora-storage-type">Storage configurations for Amazon Aurora DB clusters</a>. For information on storage types for Multi-AZ DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/create-multi-az-db-cluster.html#create-multi-az-db-cluster-settings">Settings for creating Multi-AZ DB clusters</a>.</p>  <p>This setting is required to create a Multi-AZ DB cluster.</p>  <p>When specified for a Multi-AZ DB cluster, a value for the <code>Iops</code> parameter is required.</p>  <p>Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters</p>  <p>Valid Values:</p>  <ul>   <li> <p>Aurora DB clusters - <code>aurora | aurora-iopt1</code> </p> </li>   <li> <p>Multi-AZ DB clusters - <code>io1</code> </p> </li>  </ul>  <p>Default:</p>  <ul>   <li> <p>Aurora DB clusters - <code>aurora</code> </p> </li>   <li> <p>Multi-AZ DB clusters - <code>io1</code> </p> </li>  </ul> <note>   <p>When you create an Aurora DB cluster with the storage type set to <code>aurora-iopt1</code>, the storage type is returned in the response. The storage type isn't returned when you set it to <code>aurora</code>.</p>  </note><br>
    ///   - [`iops(i32)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::iops) / [`set_iops(Option<i32>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::set_iops):<br>required: **false**<br><p>The amount of Provisioned IOPS (input/output operations per second) to be initially allocated for each DB instance in the Multi-AZ DB cluster.</p>  <p>For information about valid IOPS values, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Storage.html#USER_PIOPS">Provisioned IOPS storage</a> in the <i>Amazon RDS User Guide</i>.</p>  <p>This setting is required to create a Multi-AZ DB cluster.</p>  <p>Valid for Cluster Type: Multi-AZ DB clusters only</p>  <p>Constraints:</p>  <ul>   <li> <p>Must be a multiple between .5 and 50 of the storage amount for the DB cluster.</p> </li>  </ul><br>
    ///   - [`publicly_accessible(bool)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::publicly_accessible) / [`set_publicly_accessible(Option<bool>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::set_publicly_accessible):<br>required: **false**<br><p>Specifies whether the DB cluster is publicly accessible.</p>  <p>When the DB cluster is publicly accessible, its Domain Name System (DNS) endpoint resolves to the private IP address from within the DB cluster's virtual private cloud (VPC). It resolves to the public IP address from outside of the DB cluster's VPC. Access to the DB cluster is ultimately controlled by the security group it uses. That public access isn't permitted if the security group assigned to the DB cluster doesn't permit it.</p>  <p>When the DB cluster isn't publicly accessible, it is an internal DB cluster with a DNS name that resolves to a private IP address.</p>  <p>Valid for Cluster Type: Multi-AZ DB clusters only</p>  <p>Default: The default behavior varies depending on whether <code>DBSubnetGroupName</code> is specified.</p>  <p>If <code>DBSubnetGroupName</code> isn't specified, and <code>PubliclyAccessible</code> isn't specified, the following applies:</p>  <ul>   <li> <p>If the default VPC in the target Region doesn’t have an internet gateway attached to it, the DB cluster is private.</p> </li>   <li> <p>If the default VPC in the target Region has an internet gateway attached to it, the DB cluster is public.</p> </li>  </ul>  <p>If <code>DBSubnetGroupName</code> is specified, and <code>PubliclyAccessible</code> isn't specified, the following applies:</p>  <ul>   <li> <p>If the subnets are part of a VPC that doesn’t have an internet gateway attached to it, the DB cluster is private.</p> </li>   <li> <p>If the subnets are part of a VPC that has an internet gateway attached to it, the DB cluster is public.</p> </li>  </ul><br>
    ///   - [`auto_minor_version_upgrade(bool)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::auto_minor_version_upgrade) / [`set_auto_minor_version_upgrade(Option<bool>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::set_auto_minor_version_upgrade):<br>required: **false**<br><p>Specifies whether minor engine upgrades are applied automatically to the DB cluster during the maintenance window. By default, minor engine upgrades are applied automatically.</p>  <p>Valid for Cluster Type: Multi-AZ DB clusters only</p><br>
    ///   - [`monitoring_interval(i32)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::monitoring_interval) / [`set_monitoring_interval(Option<i32>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::set_monitoring_interval):<br>required: **false**<br><p>The interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB cluster. To turn off collecting Enhanced Monitoring metrics, specify <code>0</code>.</p>  <p>If <code>MonitoringRoleArn</code> is specified, also set <code>MonitoringInterval</code> to a value other than <code>0</code>.</p>  <p>Valid for Cluster Type: Multi-AZ DB clusters only</p>  <p>Valid Values: <code>0 | 1 | 5 | 10 | 15 | 30 | 60</code> </p>  <p>Default: <code>0</code> </p><br>
    ///   - [`monitoring_role_arn(impl Into<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::monitoring_role_arn) / [`set_monitoring_role_arn(Option<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::set_monitoring_role_arn):<br>required: **false**<br><p>The Amazon Resource Name (ARN) for the IAM role that permits RDS to send Enhanced Monitoring metrics to Amazon CloudWatch Logs. An example is <code>arn:aws:iam:123456789012:role/emaccess</code>. For information on creating a monitoring role, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Monitoring.OS.html#USER_Monitoring.OS.Enabling">Setting up and enabling Enhanced Monitoring</a> in the <i>Amazon RDS User Guide</i>.</p>  <p>If <code>MonitoringInterval</code> is set to a value other than <code>0</code>, supply a <code>MonitoringRoleArn</code> value.</p>  <p>Valid for Cluster Type: Multi-AZ DB clusters only</p><br>
    ///   - [`enable_performance_insights(bool)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::enable_performance_insights) / [`set_enable_performance_insights(Option<bool>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::set_enable_performance_insights):<br>required: **false**<br><p>Specifies whether to turn on Performance Insights for the DB cluster.</p>  <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_PerfInsights.html"> Using Amazon Performance Insights</a> in the <i>Amazon RDS User Guide</i>.</p>  <p>Valid for Cluster Type: Multi-AZ DB clusters only</p><br>
    ///   - [`performance_insights_kms_key_id(impl Into<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::performance_insights_kms_key_id) / [`set_performance_insights_kms_key_id(Option<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::set_performance_insights_kms_key_id):<br>required: **false**<br><p>The Amazon Web Services KMS key identifier for encryption of Performance Insights data.</p>  <p>The Amazon Web Services KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the KMS key.</p>  <p>If you don't specify a value for <code>PerformanceInsightsKMSKeyId</code>, then Amazon RDS uses your default KMS key. There is a default KMS key for your Amazon Web Services account. Your Amazon Web Services account has a different default KMS key for each Amazon Web Services Region.</p>  <p>Valid for Cluster Type: Multi-AZ DB clusters only</p><br>
    ///   - [`performance_insights_retention_period(i32)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::performance_insights_retention_period) / [`set_performance_insights_retention_period(Option<i32>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::set_performance_insights_retention_period):<br>required: **false**<br><p>The number of days to retain Performance Insights data.</p>  <p>Valid for Cluster Type: Multi-AZ DB clusters only</p>  <p>Valid Values:</p>  <ul>   <li> <p> <code>7</code> </p> </li>   <li> <p> <i>month</i> * 31, where <i>month</i> is a number of months from 1-23. Examples: <code>93</code> (3 months * 31), <code>341</code> (11 months * 31), <code>589</code> (19 months * 31)</p> </li>   <li> <p> <code>731</code> </p> </li>  </ul>  <p>Default: <code>7</code> days</p>  <p>If you specify a retention period that isn't valid, such as <code>94</code>, Amazon RDS issues an error.</p><br>
    ///   - [`serverless_v2_scaling_configuration(ServerlessV2ScalingConfiguration)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::serverless_v2_scaling_configuration) / [`set_serverless_v2_scaling_configuration(Option<ServerlessV2ScalingConfiguration>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::set_serverless_v2_scaling_configuration):<br>required: **false**<br><p>Contains the scaling configuration of an Aurora Serverless v2 DB cluster.</p>  <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless-v2.html">Using Amazon Aurora Serverless v2</a> in the <i>Amazon Aurora User Guide</i>.</p><br>
    ///   - [`network_type(impl Into<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::network_type) / [`set_network_type(Option<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::set_network_type):<br>required: **false**<br><p>The network type of the DB cluster.</p>  <p>The network type is determined by the <code>DBSubnetGroup</code> specified for the DB cluster. A <code>DBSubnetGroup</code> can support only the IPv4 protocol or the IPv4 and the IPv6 protocols (<code>DUAL</code>).</p>  <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_VPC.WorkingWithRDSInstanceinaVPC.html"> Working with a DB instance in a VPC</a> in the <i>Amazon Aurora User Guide.</i> </p>  <p>Valid for Cluster Type: Aurora DB clusters only</p>  <p>Valid Values: <code>IPV4 | DUAL</code> </p><br>
    ///   - [`db_system_id(impl Into<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::db_system_id) / [`set_db_system_id(Option<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::set_db_system_id):<br>required: **false**<br><p>Reserved for future use.</p><br>
    ///   - [`manage_master_user_password(bool)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::manage_master_user_password) / [`set_manage_master_user_password(Option<bool>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::set_manage_master_user_password):<br>required: **false**<br><p>Specifies whether to manage the master user password with Amazon Web Services Secrets Manager.</p>  <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-secrets-manager.html">Password management with Amazon Web Services Secrets Manager</a> in the <i>Amazon RDS User Guide</i> and <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/rds-secrets-manager.html">Password management with Amazon Web Services Secrets Manager</a> in the <i>Amazon Aurora User Guide.</i> </p>  <p>Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters</p>  <p>Constraints:</p>  <ul>   <li> <p>Can't manage the master user password with Amazon Web Services Secrets Manager if <code>MasterUserPassword</code> is specified.</p> </li>  </ul><br>
    ///   - [`master_user_secret_kms_key_id(impl Into<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::master_user_secret_kms_key_id) / [`set_master_user_secret_kms_key_id(Option<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::set_master_user_secret_kms_key_id):<br>required: **false**<br><p>The Amazon Web Services KMS key identifier to encrypt a secret that is automatically generated and managed in Amazon Web Services Secrets Manager.</p>  <p>This setting is valid only if the master user password is managed by RDS in Amazon Web Services Secrets Manager for the DB cluster.</p>  <p>The Amazon Web Services KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the KMS key. To use a KMS key in a different Amazon Web Services account, specify the key ARN or alias ARN.</p>  <p>If you don't specify <code>MasterUserSecretKmsKeyId</code>, then the <code>aws/secretsmanager</code> KMS key is used to encrypt the secret. If the secret is in a different Amazon Web Services account, then you can't use the <code>aws/secretsmanager</code> KMS key to encrypt the secret, and you must use a customer managed KMS key.</p>  <p>There is a default KMS key for your Amazon Web Services account. Your Amazon Web Services account has a different default KMS key for each Amazon Web Services Region.</p>  <p>Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters</p><br>
    ///   - [`enable_local_write_forwarding(bool)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::enable_local_write_forwarding) / [`set_enable_local_write_forwarding(Option<bool>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::set_enable_local_write_forwarding):<br>required: **false**<br><p>Specifies whether read replicas can forward write operations to the writer DB instance in the DB cluster. By default, write operations aren't allowed on reader DB instances.</p>  <p>Valid for: Aurora DB clusters only</p><br>
    /// - On success, responds with [`CreateDbClusterOutput`](crate::operation::create_db_cluster::CreateDbClusterOutput) with field(s):
    ///   - [`db_cluster(Option<DbCluster>)`](crate::operation::create_db_cluster::CreateDbClusterOutput::db_cluster): <p>Contains the details of an Amazon Aurora DB cluster or Multi-AZ DB cluster.</p>  <p>For an Amazon Aurora DB cluster, this data type is used as a response element in the operations <code>CreateDBCluster</code>, <code>DeleteDBCluster</code>, <code>DescribeDBClusters</code>, <code>FailoverDBCluster</code>, <code>ModifyDBCluster</code>, <code>PromoteReadReplicaDBCluster</code>, <code>RestoreDBClusterFromS3</code>, <code>RestoreDBClusterFromSnapshot</code>, <code>RestoreDBClusterToPointInTime</code>, <code>StartDBCluster</code>, and <code>StopDBCluster</code>.</p>  <p>For a Multi-AZ DB cluster, this data type is used as a response element in the operations <code>CreateDBCluster</code>, <code>DeleteDBCluster</code>, <code>DescribeDBClusters</code>, <code>FailoverDBCluster</code>, <code>ModifyDBCluster</code>, <code>RebootDBCluster</code>, <code>RestoreDBClusterFromSnapshot</code>, and <code>RestoreDBClusterToPointInTime</code>.</p>  <p>For more information on Amazon Aurora DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html"> What is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i> </p>  <p>For more information on Multi-AZ DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/multi-az-db-clusters-concepts.html"> Multi-AZ deployments with two readable standby DB instances</a> in the <i>Amazon RDS User Guide.</i> </p>
    /// - On failure, responds with [`SdkError<CreateDBClusterError>`](crate::operation::create_db_cluster::CreateDBClusterError)
    pub fn create_db_cluster(&self) -> crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder {
        crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::new(self.handle.clone())
    }
}
