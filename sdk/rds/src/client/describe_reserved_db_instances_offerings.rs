// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeReservedDBInstancesOfferings`](crate::client::fluent_builders::DescribeReservedDBInstancesOfferings) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::DescribeReservedDBInstancesOfferings::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`reserved_db_instances_offering_id(impl Into<String>)`](crate::client::fluent_builders::DescribeReservedDBInstancesOfferings::reserved_db_instances_offering_id) / [`set_reserved_db_instances_offering_id(Option<String>)`](crate::client::fluent_builders::DescribeReservedDBInstancesOfferings::set_reserved_db_instances_offering_id): <p>The offering identifier filter value. Specify this parameter to show only the available offering that matches the specified reservation identifier.</p>  <p>Example: <code>438012d3-4052-4cc7-b2e3-8d3372e0e706</code> </p>
    ///   - [`db_instance_class(impl Into<String>)`](crate::client::fluent_builders::DescribeReservedDBInstancesOfferings::db_instance_class) / [`set_db_instance_class(Option<String>)`](crate::client::fluent_builders::DescribeReservedDBInstancesOfferings::set_db_instance_class): <p>The DB instance class filter value. Specify this parameter to show only the available offerings matching the specified DB instance class.</p>
    ///   - [`duration(impl Into<String>)`](crate::client::fluent_builders::DescribeReservedDBInstancesOfferings::duration) / [`set_duration(Option<String>)`](crate::client::fluent_builders::DescribeReservedDBInstancesOfferings::set_duration): <p>Duration filter value, specified in years or seconds. Specify this parameter to show only reservations for this duration.</p>  <p>Valid Values: <code>1 | 3 | 31536000 | 94608000</code> </p>
    ///   - [`product_description(impl Into<String>)`](crate::client::fluent_builders::DescribeReservedDBInstancesOfferings::product_description) / [`set_product_description(Option<String>)`](crate::client::fluent_builders::DescribeReservedDBInstancesOfferings::set_product_description): <p>Product description filter value. Specify this parameter to show only the available offerings that contain the specified product description.</p> <note>   <p>The results show offerings that partially match the filter value.</p>  </note>
    ///   - [`offering_type(impl Into<String>)`](crate::client::fluent_builders::DescribeReservedDBInstancesOfferings::offering_type) / [`set_offering_type(Option<String>)`](crate::client::fluent_builders::DescribeReservedDBInstancesOfferings::set_offering_type): <p>The offering type filter value. Specify this parameter to show only the available offerings matching the specified offering type.</p>  <p>Valid Values: <code>"Partial Upfront" | "All Upfront" | "No Upfront" </code> </p>
    ///   - [`multi_az(bool)`](crate::client::fluent_builders::DescribeReservedDBInstancesOfferings::multi_az) / [`set_multi_az(Option<bool>)`](crate::client::fluent_builders::DescribeReservedDBInstancesOfferings::set_multi_az): <p>A value that indicates whether to show only those reservations that support Multi-AZ.</p>
    ///   - [`filters(Vec<Filter>)`](crate::client::fluent_builders::DescribeReservedDBInstancesOfferings::filters) / [`set_filters(Option<Vec<Filter>>)`](crate::client::fluent_builders::DescribeReservedDBInstancesOfferings::set_filters): <p>This parameter isn't currently supported.</p>
    ///   - [`max_records(i32)`](crate::client::fluent_builders::DescribeReservedDBInstancesOfferings::max_records) / [`set_max_records(Option<i32>)`](crate::client::fluent_builders::DescribeReservedDBInstancesOfferings::set_max_records): <p>The maximum number of records to include in the response. If more than the <code>MaxRecords</code> value is available, a pagination token called a marker is included in the response so you can retrieve the remaining results.</p>  <p>Default: 100</p>  <p>Constraints: Minimum 20, maximum 100.</p>
    ///   - [`marker(impl Into<String>)`](crate::client::fluent_builders::DescribeReservedDBInstancesOfferings::marker) / [`set_marker(Option<String>)`](crate::client::fluent_builders::DescribeReservedDBInstancesOfferings::set_marker): <p>An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.</p>
    /// - On success, responds with [`DescribeReservedDbInstancesOfferingsOutput`](crate::output::DescribeReservedDbInstancesOfferingsOutput) with field(s):
    ///   - [`marker(Option<String>)`](crate::output::DescribeReservedDbInstancesOfferingsOutput::marker): <p>An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.</p>
    ///   - [`reserved_db_instances_offerings(Option<Vec<ReservedDbInstancesOffering>>)`](crate::output::DescribeReservedDbInstancesOfferingsOutput::reserved_db_instances_offerings): <p>A list of reserved DB instance offerings.</p>
    /// - On failure, responds with [`SdkError<DescribeReservedDBInstancesOfferingsError>`](crate::error::DescribeReservedDBInstancesOfferingsError)
    pub fn describe_reserved_db_instances_offerings(
        &self,
    ) -> crate::client::fluent_builders::DescribeReservedDBInstancesOfferings {
        crate::client::fluent_builders::DescribeReservedDBInstancesOfferings::new(
            self.handle.clone(),
        )
    }
}
