// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeDBLogFiles`](crate::operation::describe_db_log_files::builders::DescribeDBLogFilesFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::describe_db_log_files::builders::DescribeDBLogFilesFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`db_instance_identifier(impl Into<String>)`](crate::operation::describe_db_log_files::builders::DescribeDBLogFilesFluentBuilder::db_instance_identifier) / [`set_db_instance_identifier(Option<String>)`](crate::operation::describe_db_log_files::builders::DescribeDBLogFilesFluentBuilder::set_db_instance_identifier):<br>required: **true**<br><p>The customer-assigned name of the DB instance that contains the log files you want to list.</p>  <p>Constraints:</p>  <ul>   <li> <p>Must match the identifier of an existing DBInstance.</p> </li>  </ul><br>
    ///   - [`filename_contains(impl Into<String>)`](crate::operation::describe_db_log_files::builders::DescribeDBLogFilesFluentBuilder::filename_contains) / [`set_filename_contains(Option<String>)`](crate::operation::describe_db_log_files::builders::DescribeDBLogFilesFluentBuilder::set_filename_contains):<br>required: **false**<br><p>Filters the available log files for log file names that contain the specified string.</p><br>
    ///   - [`file_last_written(i64)`](crate::operation::describe_db_log_files::builders::DescribeDBLogFilesFluentBuilder::file_last_written) / [`set_file_last_written(Option<i64>)`](crate::operation::describe_db_log_files::builders::DescribeDBLogFilesFluentBuilder::set_file_last_written):<br>required: **false**<br><p>Filters the available log files for files written since the specified date, in POSIX timestamp format with milliseconds.</p><br>
    ///   - [`file_size(i64)`](crate::operation::describe_db_log_files::builders::DescribeDBLogFilesFluentBuilder::file_size) / [`set_file_size(Option<i64>)`](crate::operation::describe_db_log_files::builders::DescribeDBLogFilesFluentBuilder::set_file_size):<br>required: **false**<br><p>Filters the available log files for files larger than the specified size.</p><br>
    ///   - [`filters(Filter)`](crate::operation::describe_db_log_files::builders::DescribeDBLogFilesFluentBuilder::filters) / [`set_filters(Option<Vec::<Filter>>)`](crate::operation::describe_db_log_files::builders::DescribeDBLogFilesFluentBuilder::set_filters):<br>required: **false**<br><p>This parameter isn't currently supported.</p><br>
    ///   - [`max_records(i32)`](crate::operation::describe_db_log_files::builders::DescribeDBLogFilesFluentBuilder::max_records) / [`set_max_records(Option<i32>)`](crate::operation::describe_db_log_files::builders::DescribeDBLogFilesFluentBuilder::set_max_records):<br>required: **false**<br><p>The maximum number of records to include in the response. If more records exist than the specified MaxRecords value, a pagination token called a marker is included in the response so you can retrieve the remaining results.</p><br>
    ///   - [`marker(impl Into<String>)`](crate::operation::describe_db_log_files::builders::DescribeDBLogFilesFluentBuilder::marker) / [`set_marker(Option<String>)`](crate::operation::describe_db_log_files::builders::DescribeDBLogFilesFluentBuilder::set_marker):<br>required: **false**<br><p>The pagination token provided in the previous request. If this parameter is specified the response includes only records beyond the marker, up to MaxRecords.</p><br>
    /// - On success, responds with [`DescribeDbLogFilesOutput`](crate::operation::describe_db_log_files::DescribeDbLogFilesOutput) with field(s):
    ///   - [`describe_db_log_files(Option<Vec::<DescribeDbLogFilesDetails>>)`](crate::operation::describe_db_log_files::DescribeDbLogFilesOutput::describe_db_log_files): <p>The DB log files returned.</p>
    ///   - [`marker(Option<String>)`](crate::operation::describe_db_log_files::DescribeDbLogFilesOutput::marker): <p>A pagination token that can be used in a later <code>DescribeDBLogFiles</code> request.</p>
    /// - On failure, responds with [`SdkError<DescribeDBLogFilesError>`](crate::operation::describe_db_log_files::DescribeDBLogFilesError)
    pub fn describe_db_log_files(&self) -> crate::operation::describe_db_log_files::builders::DescribeDBLogFilesFluentBuilder {
        crate::operation::describe_db_log_files::builders::DescribeDBLogFilesFluentBuilder::new(self.handle.clone())
    }
}
