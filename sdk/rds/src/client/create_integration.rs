// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateIntegration`](crate::operation::create_integration::builders::CreateIntegrationFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`source_arn(impl Into<String>)`](crate::operation::create_integration::builders::CreateIntegrationFluentBuilder::source_arn) / [`set_source_arn(Option<String>)`](crate::operation::create_integration::builders::CreateIntegrationFluentBuilder::set_source_arn):<br>required: **true**<br><p>The Amazon Resource Name (ARN) of the Aurora DB cluster to use as the source for replication.</p><br>
    ///   - [`target_arn(impl Into<String>)`](crate::operation::create_integration::builders::CreateIntegrationFluentBuilder::target_arn) / [`set_target_arn(Option<String>)`](crate::operation::create_integration::builders::CreateIntegrationFluentBuilder::set_target_arn):<br>required: **true**<br><p>The ARN of the Redshift data warehouse to use as the target for replication.</p><br>
    ///   - [`integration_name(impl Into<String>)`](crate::operation::create_integration::builders::CreateIntegrationFluentBuilder::integration_name) / [`set_integration_name(Option<String>)`](crate::operation::create_integration::builders::CreateIntegrationFluentBuilder::set_integration_name):<br>required: **true**<br><p>The name of the integration.</p><br>
    ///   - [`kms_key_id(impl Into<String>)`](crate::operation::create_integration::builders::CreateIntegrationFluentBuilder::kms_key_id) / [`set_kms_key_id(Option<String>)`](crate::operation::create_integration::builders::CreateIntegrationFluentBuilder::set_kms_key_id):<br>required: **false**<br><p>The Amazon Web Services Key Management System (Amazon Web Services KMS) key identifier for the key to use to encrypt the integration. If you don't specify an encryption key, Aurora uses a default Amazon Web Services owned key. </p><br>
    ///   - [`additional_encryption_context(impl Into<String>, impl Into<String>)`](crate::operation::create_integration::builders::CreateIntegrationFluentBuilder::additional_encryption_context) / [`set_additional_encryption_context(Option<HashMap::<String, String>>)`](crate::operation::create_integration::builders::CreateIntegrationFluentBuilder::set_additional_encryption_context):<br>required: **false**<br><p>An optional set of non-secret keyâ€“value pairs that contains additional contextual information about the data. For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#encrypt_context">Encryption context</a> in the <i>Amazon Web Services Key Management Service Developer Guide</i>.</p>  <p>You can only include this parameter if you specify the <code>KMSKeyId</code> parameter.</p><br>
    ///   - [`tags(Tag)`](crate::operation::create_integration::builders::CreateIntegrationFluentBuilder::tags) / [`set_tags(Option<Vec::<Tag>>)`](crate::operation::create_integration::builders::CreateIntegrationFluentBuilder::set_tags):<br>required: **false**<br><p>A list of tags. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html">Tagging Amazon RDS Resources</a> in the <i>Amazon RDS User Guide.</i> </p><br>
    /// - On success, responds with [`CreateIntegrationOutput`](crate::operation::create_integration::CreateIntegrationOutput) with field(s):
    ///   - [`source_arn(Option<String>)`](crate::operation::create_integration::CreateIntegrationOutput::source_arn): <p>The Amazon Resource Name (ARN) of the Aurora DB cluster used as the source for replication.</p>
    ///   - [`target_arn(Option<String>)`](crate::operation::create_integration::CreateIntegrationOutput::target_arn): <p>The ARN of the Redshift data warehouse used as the target for replication.</p>
    ///   - [`integration_name(Option<String>)`](crate::operation::create_integration::CreateIntegrationOutput::integration_name): <p>The name of the integration.</p>
    ///   - [`integration_arn(Option<String>)`](crate::operation::create_integration::CreateIntegrationOutput::integration_arn): <p>The ARN of the integration.</p>
    ///   - [`kms_key_id(Option<String>)`](crate::operation::create_integration::CreateIntegrationOutput::kms_key_id): <p>The Amazon Web Services Key Management System (Amazon Web Services KMS) key identifier for the key used to to encrypt the integration. </p>
    ///   - [`additional_encryption_context(Option<HashMap::<String, String>>)`](crate::operation::create_integration::CreateIntegrationOutput::additional_encryption_context): <p>The encryption context for the integration. For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#encrypt_context">Encryption context</a> in the <i>Amazon Web Services Key Management Service Developer Guide</i>.</p>
    ///   - [`status(Option<IntegrationStatus>)`](crate::operation::create_integration::CreateIntegrationOutput::status): <p>The current status of the integration.</p>
    ///   - [`tags(Option<Vec::<Tag>>)`](crate::operation::create_integration::CreateIntegrationOutput::tags): <p>A list of tags. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html">Tagging Amazon RDS Resources</a> in the <i>Amazon RDS User Guide.</i> </p>
    ///   - [`create_time(Option<DateTime>)`](crate::operation::create_integration::CreateIntegrationOutput::create_time): <p>The time when the integration was created, in Universal Coordinated Time (UTC).</p>
    ///   - [`errors(Option<Vec::<IntegrationError>>)`](crate::operation::create_integration::CreateIntegrationOutput::errors): <p>Any errors associated with the integration.</p>
    /// - On failure, responds with [`SdkError<CreateIntegrationError>`](crate::operation::create_integration::CreateIntegrationError)
    pub fn create_integration(&self) -> crate::operation::create_integration::builders::CreateIntegrationFluentBuilder {
        crate::operation::create_integration::builders::CreateIntegrationFluentBuilder::new(self.handle.clone())
    }
}
