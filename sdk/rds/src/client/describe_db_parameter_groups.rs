// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeDBParameterGroups`](crate::operation::describe_db_parameter_groups::builders::DescribeDBParameterGroupsFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::describe_db_parameter_groups::builders::DescribeDBParameterGroupsFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`db_parameter_group_name(impl Into<String>)`](crate::operation::describe_db_parameter_groups::builders::DescribeDBParameterGroupsFluentBuilder::db_parameter_group_name) / [`set_db_parameter_group_name(Option<String>)`](crate::operation::describe_db_parameter_groups::builders::DescribeDBParameterGroupsFluentBuilder::set_db_parameter_group_name):<br>required: **false**<br><p>The name of a specific DB parameter group to return details for.</p>  <p>Constraints:</p>  <ul>   <li> <p>If supplied, must match the name of an existing DBClusterParameterGroup.</p> </li>  </ul><br>
    ///   - [`filters(Filter)`](crate::operation::describe_db_parameter_groups::builders::DescribeDBParameterGroupsFluentBuilder::filters) / [`set_filters(Option<Vec::<Filter>>)`](crate::operation::describe_db_parameter_groups::builders::DescribeDBParameterGroupsFluentBuilder::set_filters):<br>required: **false**<br><p>This parameter isn't currently supported.</p><br>
    ///   - [`max_records(i32)`](crate::operation::describe_db_parameter_groups::builders::DescribeDBParameterGroupsFluentBuilder::max_records) / [`set_max_records(Option<i32>)`](crate::operation::describe_db_parameter_groups::builders::DescribeDBParameterGroupsFluentBuilder::set_max_records):<br>required: **false**<br><p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that you can retrieve the remaining results.</p>  <p>Default: 100</p>  <p>Constraints: Minimum 20, maximum 100.</p><br>
    ///   - [`marker(impl Into<String>)`](crate::operation::describe_db_parameter_groups::builders::DescribeDBParameterGroupsFluentBuilder::marker) / [`set_marker(Option<String>)`](crate::operation::describe_db_parameter_groups::builders::DescribeDBParameterGroupsFluentBuilder::set_marker):<br>required: **false**<br><p>An optional pagination token provided by a previous <code>DescribeDBParameterGroups</code> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.</p><br>
    /// - On success, responds with [`DescribeDbParameterGroupsOutput`](crate::operation::describe_db_parameter_groups::DescribeDbParameterGroupsOutput) with field(s):
    ///   - [`marker(Option<String>)`](crate::operation::describe_db_parameter_groups::DescribeDbParameterGroupsOutput::marker): <p>An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.</p>
    ///   - [`db_parameter_groups(Option<Vec::<DbParameterGroup>>)`](crate::operation::describe_db_parameter_groups::DescribeDbParameterGroupsOutput::db_parameter_groups): <p>A list of <code>DBParameterGroup</code> instances.</p>
    /// - On failure, responds with [`SdkError<DescribeDBParameterGroupsError>`](crate::operation::describe_db_parameter_groups::DescribeDBParameterGroupsError)
    pub fn describe_db_parameter_groups(&self) -> crate::operation::describe_db_parameter_groups::builders::DescribeDBParameterGroupsFluentBuilder {
        crate::operation::describe_db_parameter_groups::builders::DescribeDBParameterGroupsFluentBuilder::new(self.handle.clone())
    }
}
