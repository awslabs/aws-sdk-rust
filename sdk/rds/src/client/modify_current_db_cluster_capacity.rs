// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ModifyCurrentDBClusterCapacity`](crate::operation::modify_current_db_cluster_capacity::builders::ModifyCurrentDBClusterCapacityFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`db_cluster_identifier(impl Into<String>)`](crate::operation::modify_current_db_cluster_capacity::builders::ModifyCurrentDBClusterCapacityFluentBuilder::db_cluster_identifier) / [`set_db_cluster_identifier(Option<String>)`](crate::operation::modify_current_db_cluster_capacity::builders::ModifyCurrentDBClusterCapacityFluentBuilder::set_db_cluster_identifier):<br>required: **true**<br><p>The DB cluster identifier for the cluster being modified. This parameter isn't case-sensitive.</p>  <p>Constraints:</p>  <ul>   <li> <p>Must match the identifier of an existing DB cluster.</p> </li>  </ul><br>
    ///   - [`capacity(i32)`](crate::operation::modify_current_db_cluster_capacity::builders::ModifyCurrentDBClusterCapacityFluentBuilder::capacity) / [`set_capacity(Option<i32>)`](crate::operation::modify_current_db_cluster_capacity::builders::ModifyCurrentDBClusterCapacityFluentBuilder::set_capacity):<br>required: **false**<br><p>The DB cluster capacity.</p>  <p>When you change the capacity of a paused Aurora Serverless v1 DB cluster, it automatically resumes.</p>  <p>Constraints:</p>  <ul>   <li> <p>For Aurora MySQL, valid capacity values are <code>1</code>, <code>2</code>, <code>4</code>, <code>8</code>, <code>16</code>, <code>32</code>, <code>64</code>, <code>128</code>, and <code>256</code>.</p> </li>   <li> <p>For Aurora PostgreSQL, valid capacity values are <code>2</code>, <code>4</code>, <code>8</code>, <code>16</code>, <code>32</code>, <code>64</code>, <code>192</code>, and <code>384</code>.</p> </li>  </ul><br>
    ///   - [`seconds_before_timeout(i32)`](crate::operation::modify_current_db_cluster_capacity::builders::ModifyCurrentDBClusterCapacityFluentBuilder::seconds_before_timeout) / [`set_seconds_before_timeout(Option<i32>)`](crate::operation::modify_current_db_cluster_capacity::builders::ModifyCurrentDBClusterCapacityFluentBuilder::set_seconds_before_timeout):<br>required: **false**<br><p>The amount of time, in seconds, that Aurora Serverless v1 tries to find a scaling point to perform seamless scaling before enforcing the timeout action. The default is 300.</p>  <p>Specify a value between 10 and 600 seconds.</p><br>
    ///   - [`timeout_action(impl Into<String>)`](crate::operation::modify_current_db_cluster_capacity::builders::ModifyCurrentDBClusterCapacityFluentBuilder::timeout_action) / [`set_timeout_action(Option<String>)`](crate::operation::modify_current_db_cluster_capacity::builders::ModifyCurrentDBClusterCapacityFluentBuilder::set_timeout_action):<br>required: **false**<br><p>The action to take when the timeout is reached, either <code>ForceApplyCapacityChange</code> or <code>RollbackCapacityChange</code>.</p>  <p> <code>ForceApplyCapacityChange</code>, the default, sets the capacity to the specified value as soon as possible.</p>  <p> <code>RollbackCapacityChange</code> ignores the capacity change if a scaling point isn't found in the timeout period.</p><br>
    /// - On success, responds with [`ModifyCurrentDbClusterCapacityOutput`](crate::operation::modify_current_db_cluster_capacity::ModifyCurrentDbClusterCapacityOutput) with field(s):
    ///   - [`db_cluster_identifier(Option<String>)`](crate::operation::modify_current_db_cluster_capacity::ModifyCurrentDbClusterCapacityOutput::db_cluster_identifier): <p>A user-supplied DB cluster identifier. This identifier is the unique key that identifies a DB cluster.</p>
    ///   - [`pending_capacity(Option<i32>)`](crate::operation::modify_current_db_cluster_capacity::ModifyCurrentDbClusterCapacityOutput::pending_capacity): <p>A value that specifies the capacity that the DB cluster scales to next.</p>
    ///   - [`current_capacity(Option<i32>)`](crate::operation::modify_current_db_cluster_capacity::ModifyCurrentDbClusterCapacityOutput::current_capacity): <p>The current capacity of the DB cluster.</p>
    ///   - [`seconds_before_timeout(Option<i32>)`](crate::operation::modify_current_db_cluster_capacity::ModifyCurrentDbClusterCapacityOutput::seconds_before_timeout): <p>The number of seconds before a call to <code>ModifyCurrentDBClusterCapacity</code> times out.</p>
    ///   - [`timeout_action(Option<String>)`](crate::operation::modify_current_db_cluster_capacity::ModifyCurrentDbClusterCapacityOutput::timeout_action): <p>The timeout action of a call to <code>ModifyCurrentDBClusterCapacity</code>, either <code>ForceApplyCapacityChange</code> or <code>RollbackCapacityChange</code>.</p>
    /// - On failure, responds with [`SdkError<ModifyCurrentDBClusterCapacityError>`](crate::operation::modify_current_db_cluster_capacity::ModifyCurrentDBClusterCapacityError)
    pub fn modify_current_db_cluster_capacity(
        &self,
    ) -> crate::operation::modify_current_db_cluster_capacity::builders::ModifyCurrentDBClusterCapacityFluentBuilder {
        crate::operation::modify_current_db_cluster_capacity::builders::ModifyCurrentDBClusterCapacityFluentBuilder::new(self.handle.clone())
    }
}
