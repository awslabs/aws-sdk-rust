// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`RegisterDBProxyTargets`](crate::client::fluent_builders::RegisterDBProxyTargets) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`db_proxy_name(impl Into<String>)`](crate::client::fluent_builders::RegisterDBProxyTargets::db_proxy_name) / [`set_db_proxy_name(Option<String>)`](crate::client::fluent_builders::RegisterDBProxyTargets::set_db_proxy_name): <p>The identifier of the <code>DBProxy</code> that is associated with the <code>DBProxyTargetGroup</code>.</p>
    ///   - [`target_group_name(impl Into<String>)`](crate::client::fluent_builders::RegisterDBProxyTargets::target_group_name) / [`set_target_group_name(Option<String>)`](crate::client::fluent_builders::RegisterDBProxyTargets::set_target_group_name): <p>The identifier of the <code>DBProxyTargetGroup</code>.</p>
    ///   - [`db_instance_identifiers(Vec<String>)`](crate::client::fluent_builders::RegisterDBProxyTargets::db_instance_identifiers) / [`set_db_instance_identifiers(Option<Vec<String>>)`](crate::client::fluent_builders::RegisterDBProxyTargets::set_db_instance_identifiers): <p>One or more DB instance identifiers.</p>
    ///   - [`db_cluster_identifiers(Vec<String>)`](crate::client::fluent_builders::RegisterDBProxyTargets::db_cluster_identifiers) / [`set_db_cluster_identifiers(Option<Vec<String>>)`](crate::client::fluent_builders::RegisterDBProxyTargets::set_db_cluster_identifiers): <p>One or more DB cluster identifiers.</p>
    /// - On success, responds with [`RegisterDbProxyTargetsOutput`](crate::output::RegisterDbProxyTargetsOutput) with field(s):
    ///   - [`db_proxy_targets(Option<Vec<DbProxyTarget>>)`](crate::output::RegisterDbProxyTargetsOutput::db_proxy_targets): <p>One or more <code>DBProxyTarget</code> objects that are created when you register targets with a target group.</p>
    /// - On failure, responds with [`SdkError<RegisterDBProxyTargetsError>`](crate::error::RegisterDBProxyTargetsError)
    pub fn register_db_proxy_targets(
        &self,
    ) -> crate::client::fluent_builders::RegisterDBProxyTargets {
        crate::client::fluent_builders::RegisterDBProxyTargets::new(self.handle.clone())
    }
}
