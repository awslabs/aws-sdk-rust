// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`StartExportTask`](crate::operation::start_export_task::builders::StartExportTaskFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`export_task_identifier(impl Into<String>)`](crate::operation::start_export_task::builders::StartExportTaskFluentBuilder::export_task_identifier) / [`set_export_task_identifier(Option<String>)`](crate::operation::start_export_task::builders::StartExportTaskFluentBuilder::set_export_task_identifier): <p>A unique identifier for the snapshot export task. This ID isn't an identifier for the Amazon S3 bucket where the snapshot is to be exported to.</p>
    ///   - [`source_arn(impl Into<String>)`](crate::operation::start_export_task::builders::StartExportTaskFluentBuilder::source_arn) / [`set_source_arn(Option<String>)`](crate::operation::start_export_task::builders::StartExportTaskFluentBuilder::set_source_arn): <p>The Amazon Resource Name (ARN) of the snapshot to export to Amazon S3.</p>
    ///   - [`s3_bucket_name(impl Into<String>)`](crate::operation::start_export_task::builders::StartExportTaskFluentBuilder::s3_bucket_name) / [`set_s3_bucket_name(Option<String>)`](crate::operation::start_export_task::builders::StartExportTaskFluentBuilder::set_s3_bucket_name): <p>The name of the Amazon S3 bucket to export the snapshot to.</p>
    ///   - [`iam_role_arn(impl Into<String>)`](crate::operation::start_export_task::builders::StartExportTaskFluentBuilder::iam_role_arn) / [`set_iam_role_arn(Option<String>)`](crate::operation::start_export_task::builders::StartExportTaskFluentBuilder::set_iam_role_arn): <p>The name of the IAM role to use for writing to the Amazon S3 bucket when exporting a snapshot.</p>
    ///   - [`kms_key_id(impl Into<String>)`](crate::operation::start_export_task::builders::StartExportTaskFluentBuilder::kms_key_id) / [`set_kms_key_id(Option<String>)`](crate::operation::start_export_task::builders::StartExportTaskFluentBuilder::set_kms_key_id): <p>The ID of the Amazon Web Services KMS key to use to encrypt the snapshot exported to Amazon S3. The Amazon Web Services KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the KMS key. The caller of this operation must be authorized to run the following operations. These can be set in the Amazon Web Services KMS key policy:</p>  <ul>   <li> <p>kms:Encrypt</p> </li>   <li> <p>kms:Decrypt</p> </li>   <li> <p>kms:GenerateDataKey</p> </li>   <li> <p>kms:GenerateDataKeyWithoutPlaintext</p> </li>   <li> <p>kms:ReEncryptFrom</p> </li>   <li> <p>kms:ReEncryptTo</p> </li>   <li> <p>kms:CreateGrant</p> </li>   <li> <p>kms:DescribeKey</p> </li>   <li> <p>kms:RetireGrant</p> </li>  </ul>
    ///   - [`s3_prefix(impl Into<String>)`](crate::operation::start_export_task::builders::StartExportTaskFluentBuilder::s3_prefix) / [`set_s3_prefix(Option<String>)`](crate::operation::start_export_task::builders::StartExportTaskFluentBuilder::set_s3_prefix): <p>The Amazon S3 bucket prefix to use as the file name and path of the exported snapshot.</p>
    ///   - [`export_only(Vec<String>)`](crate::operation::start_export_task::builders::StartExportTaskFluentBuilder::export_only) / [`set_export_only(Option<Vec<String>>)`](crate::operation::start_export_task::builders::StartExportTaskFluentBuilder::set_export_only): <p>The data to be exported from the snapshot. If this parameter is not provided, all the snapshot data is exported. Valid values are the following:</p>  <ul>   <li> <p> <code>database</code> - Export all the data from a specified database.</p> </li>   <li> <p> <code>database.table</code> <i>table-name</i> - Export a table of the snapshot. This format is valid only for RDS for MySQL, RDS for MariaDB, and Aurora MySQL.</p> </li>   <li> <p> <code>database.schema</code> <i>schema-name</i> - Export a database schema of the snapshot. This format is valid only for RDS for PostgreSQL and Aurora PostgreSQL.</p> </li>   <li> <p> <code>database.schema.table</code> <i>table-name</i> - Export a table of the database schema. This format is valid only for RDS for PostgreSQL and Aurora PostgreSQL.</p> </li>  </ul>
    /// - On success, responds with [`StartExportTaskOutput`](crate::operation::start_export_task::StartExportTaskOutput) with field(s):
    ///   - [`export_task_identifier(Option<String>)`](crate::operation::start_export_task::StartExportTaskOutput::export_task_identifier): <p>A unique identifier for the snapshot export task. This ID isn't an identifier for the Amazon S3 bucket where the snapshot is exported to.</p>
    ///   - [`source_arn(Option<String>)`](crate::operation::start_export_task::StartExportTaskOutput::source_arn): <p>The Amazon Resource Name (ARN) of the snapshot exported to Amazon S3.</p>
    ///   - [`export_only(Option<Vec<String>>)`](crate::operation::start_export_task::StartExportTaskOutput::export_only): <p>The data exported from the snapshot. Valid values are the following:</p>  <ul>   <li> <p> <code>database</code> - Export all the data from a specified database.</p> </li>   <li> <p> <code>database.table</code> <i>table-name</i> - Export a table of the snapshot. This format is valid only for RDS for MySQL, RDS for MariaDB, and Aurora MySQL.</p> </li>   <li> <p> <code>database.schema</code> <i>schema-name</i> - Export a database schema of the snapshot. This format is valid only for RDS for PostgreSQL and Aurora PostgreSQL.</p> </li>   <li> <p> <code>database.schema.table</code> <i>table-name</i> - Export a table of the database schema. This format is valid only for RDS for PostgreSQL and Aurora PostgreSQL.</p> </li>  </ul>
    ///   - [`snapshot_time(Option<DateTime>)`](crate::operation::start_export_task::StartExportTaskOutput::snapshot_time): <p>The time that the snapshot was created.</p>
    ///   - [`task_start_time(Option<DateTime>)`](crate::operation::start_export_task::StartExportTaskOutput::task_start_time): <p>The time that the snapshot export task started.</p>
    ///   - [`task_end_time(Option<DateTime>)`](crate::operation::start_export_task::StartExportTaskOutput::task_end_time): <p>The time that the snapshot export task completed.</p>
    ///   - [`s3_bucket(Option<String>)`](crate::operation::start_export_task::StartExportTaskOutput::s3_bucket): <p>The Amazon S3 bucket that the snapshot is exported to.</p>
    ///   - [`s3_prefix(Option<String>)`](crate::operation::start_export_task::StartExportTaskOutput::s3_prefix): <p>The Amazon S3 bucket prefix that is the file name and path of the exported snapshot.</p>
    ///   - [`iam_role_arn(Option<String>)`](crate::operation::start_export_task::StartExportTaskOutput::iam_role_arn): <p>The name of the IAM role that is used to write to Amazon S3 when exporting a snapshot.</p>
    ///   - [`kms_key_id(Option<String>)`](crate::operation::start_export_task::StartExportTaskOutput::kms_key_id): <p>The key identifier of the Amazon Web Services KMS key that is used to encrypt the snapshot when it's exported to Amazon S3. The KMS key identifier is its key ARN, key ID, alias ARN, or alias name. The IAM role used for the snapshot export must have encryption and decryption permissions to use this KMS key.</p>
    ///   - [`status(Option<String>)`](crate::operation::start_export_task::StartExportTaskOutput::status): <p>The progress status of the export task.</p>
    ///   - [`percent_progress(i32)`](crate::operation::start_export_task::StartExportTaskOutput::percent_progress): <p>The progress of the snapshot export task as a percentage.</p>
    ///   - [`total_extracted_data_in_gb(i32)`](crate::operation::start_export_task::StartExportTaskOutput::total_extracted_data_in_gb): <p>The total amount of data exported, in gigabytes.</p>
    ///   - [`failure_cause(Option<String>)`](crate::operation::start_export_task::StartExportTaskOutput::failure_cause): <p>The reason the export failed, if it failed.</p>
    ///   - [`warning_message(Option<String>)`](crate::operation::start_export_task::StartExportTaskOutput::warning_message): <p>A warning about the snapshot export task.</p>
    ///   - [`source_type(Option<ExportSourceType>)`](crate::operation::start_export_task::StartExportTaskOutput::source_type): <p>The type of source for the export.</p>
    /// - On failure, responds with [`SdkError<StartExportTaskError>`](crate::operation::start_export_task::StartExportTaskError)
    pub fn start_export_task(
        &self,
    ) -> crate::operation::start_export_task::builders::StartExportTaskFluentBuilder {
        crate::operation::start_export_task::builders::StartExportTaskFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
