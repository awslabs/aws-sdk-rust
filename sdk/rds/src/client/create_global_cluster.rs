// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateGlobalCluster`](crate::operation::create_global_cluster::builders::CreateGlobalClusterFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`global_cluster_identifier(impl Into<String>)`](crate::operation::create_global_cluster::builders::CreateGlobalClusterFluentBuilder::global_cluster_identifier) / [`set_global_cluster_identifier(Option<String>)`](crate::operation::create_global_cluster::builders::CreateGlobalClusterFluentBuilder::set_global_cluster_identifier):<br>required: **false**<br><p>The cluster identifier for this global database cluster. This parameter is stored as a lowercase string.</p><br>
    ///   - [`source_db_cluster_identifier(impl Into<String>)`](crate::operation::create_global_cluster::builders::CreateGlobalClusterFluentBuilder::source_db_cluster_identifier) / [`set_source_db_cluster_identifier(Option<String>)`](crate::operation::create_global_cluster::builders::CreateGlobalClusterFluentBuilder::set_source_db_cluster_identifier):<br>required: **false**<br><p>The Amazon Resource Name (ARN) to use as the primary cluster of the global database.</p>  <p>If you provide a value for this parameter, don't specify values for the following settings because Amazon Aurora uses the values from the specified source DB cluster:</p>  <ul>   <li> <p> <code>DatabaseName</code> </p> </li>   <li> <p> <code>Engine</code> </p> </li>   <li> <p> <code>EngineVersion</code> </p> </li>   <li> <p> <code>StorageEncrypted</code> </p> </li>  </ul><br>
    ///   - [`engine(impl Into<String>)`](crate::operation::create_global_cluster::builders::CreateGlobalClusterFluentBuilder::engine) / [`set_engine(Option<String>)`](crate::operation::create_global_cluster::builders::CreateGlobalClusterFluentBuilder::set_engine):<br>required: **false**<br><p>The database engine to use for this global database cluster.</p>  <p>Valid Values: <code>aurora-mysql | aurora-postgresql</code> </p>  <p>Constraints:</p>  <ul>   <li> <p>Can't be specified if <code>SourceDBClusterIdentifier</code> is specified. In this case, Amazon Aurora uses the engine of the source DB cluster.</p> </li>  </ul><br>
    ///   - [`engine_version(impl Into<String>)`](crate::operation::create_global_cluster::builders::CreateGlobalClusterFluentBuilder::engine_version) / [`set_engine_version(Option<String>)`](crate::operation::create_global_cluster::builders::CreateGlobalClusterFluentBuilder::set_engine_version):<br>required: **false**<br><p>The engine version to use for this global database cluster.</p>  <p>Constraints:</p>  <ul>   <li> <p>Can't be specified if <code>SourceDBClusterIdentifier</code> is specified. In this case, Amazon Aurora uses the engine version of the source DB cluster.</p> </li>  </ul><br>
    ///   - [`deletion_protection(bool)`](crate::operation::create_global_cluster::builders::CreateGlobalClusterFluentBuilder::deletion_protection) / [`set_deletion_protection(Option<bool>)`](crate::operation::create_global_cluster::builders::CreateGlobalClusterFluentBuilder::set_deletion_protection):<br>required: **false**<br><p>Specifies whether to enable deletion protection for the new global database cluster. The global database can't be deleted when deletion protection is enabled.</p><br>
    ///   - [`database_name(impl Into<String>)`](crate::operation::create_global_cluster::builders::CreateGlobalClusterFluentBuilder::database_name) / [`set_database_name(Option<String>)`](crate::operation::create_global_cluster::builders::CreateGlobalClusterFluentBuilder::set_database_name):<br>required: **false**<br><p>The name for your database of up to 64 alphanumeric characters. If you don't specify a name, Amazon Aurora doesn't create a database in the global database cluster.</p>  <p>Constraints:</p>  <ul>   <li> <p>Can't be specified if <code>SourceDBClusterIdentifier</code> is specified. In this case, Amazon Aurora uses the database name from the source DB cluster.</p> </li>  </ul><br>
    ///   - [`storage_encrypted(bool)`](crate::operation::create_global_cluster::builders::CreateGlobalClusterFluentBuilder::storage_encrypted) / [`set_storage_encrypted(Option<bool>)`](crate::operation::create_global_cluster::builders::CreateGlobalClusterFluentBuilder::set_storage_encrypted):<br>required: **false**<br><p>Specifies whether to enable storage encryption for the new global database cluster.</p>  <p>Constraints:</p>  <ul>   <li> <p>Can't be specified if <code>SourceDBClusterIdentifier</code> is specified. In this case, Amazon Aurora uses the setting from the source DB cluster.</p> </li>  </ul><br>
    /// - On success, responds with [`CreateGlobalClusterOutput`](crate::operation::create_global_cluster::CreateGlobalClusterOutput) with field(s):
    ///   - [`global_cluster(Option<GlobalCluster>)`](crate::operation::create_global_cluster::CreateGlobalClusterOutput::global_cluster): <p>A data type representing an Aurora global database.</p>
    /// - On failure, responds with [`SdkError<CreateGlobalClusterError>`](crate::operation::create_global_cluster::CreateGlobalClusterError)
    pub fn create_global_cluster(&self) -> crate::operation::create_global_cluster::builders::CreateGlobalClusterFluentBuilder {
        crate::operation::create_global_cluster::builders::CreateGlobalClusterFluentBuilder::new(self.handle.clone())
    }
}
