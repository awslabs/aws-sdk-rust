// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`AuthorizeDBSecurityGroupIngress`](crate::operation::authorize_db_security_group_ingress::builders::AuthorizeDBSecurityGroupIngressFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`db_security_group_name(impl Into<String>)`](crate::operation::authorize_db_security_group_ingress::builders::AuthorizeDBSecurityGroupIngressFluentBuilder::db_security_group_name) / [`set_db_security_group_name(Option<String>)`](crate::operation::authorize_db_security_group_ingress::builders::AuthorizeDBSecurityGroupIngressFluentBuilder::set_db_security_group_name): <p>The name of the DB security group to add authorization to.</p>
    ///   - [`cidrip(impl Into<String>)`](crate::operation::authorize_db_security_group_ingress::builders::AuthorizeDBSecurityGroupIngressFluentBuilder::cidrip) / [`set_cidrip(Option<String>)`](crate::operation::authorize_db_security_group_ingress::builders::AuthorizeDBSecurityGroupIngressFluentBuilder::set_cidrip): <p>The IP range to authorize.</p>
    ///   - [`ec2_security_group_name(impl Into<String>)`](crate::operation::authorize_db_security_group_ingress::builders::AuthorizeDBSecurityGroupIngressFluentBuilder::ec2_security_group_name) / [`set_ec2_security_group_name(Option<String>)`](crate::operation::authorize_db_security_group_ingress::builders::AuthorizeDBSecurityGroupIngressFluentBuilder::set_ec2_security_group_name): <p>Name of the EC2 security group to authorize. For VPC DB security groups, <code>EC2SecurityGroupId</code> must be provided. Otherwise, <code>EC2SecurityGroupOwnerId</code> and either <code>EC2SecurityGroupName</code> or <code>EC2SecurityGroupId</code> must be provided.</p>
    ///   - [`ec2_security_group_id(impl Into<String>)`](crate::operation::authorize_db_security_group_ingress::builders::AuthorizeDBSecurityGroupIngressFluentBuilder::ec2_security_group_id) / [`set_ec2_security_group_id(Option<String>)`](crate::operation::authorize_db_security_group_ingress::builders::AuthorizeDBSecurityGroupIngressFluentBuilder::set_ec2_security_group_id): <p>Id of the EC2 security group to authorize. For VPC DB security groups, <code>EC2SecurityGroupId</code> must be provided. Otherwise, <code>EC2SecurityGroupOwnerId</code> and either <code>EC2SecurityGroupName</code> or <code>EC2SecurityGroupId</code> must be provided.</p>
    ///   - [`ec2_security_group_owner_id(impl Into<String>)`](crate::operation::authorize_db_security_group_ingress::builders::AuthorizeDBSecurityGroupIngressFluentBuilder::ec2_security_group_owner_id) / [`set_ec2_security_group_owner_id(Option<String>)`](crate::operation::authorize_db_security_group_ingress::builders::AuthorizeDBSecurityGroupIngressFluentBuilder::set_ec2_security_group_owner_id): <p>Amazon Web Services account number of the owner of the EC2 security group specified in the <code>EC2SecurityGroupName</code> parameter. The Amazon Web Services access key ID isn't an acceptable value. For VPC DB security groups, <code>EC2SecurityGroupId</code> must be provided. Otherwise, <code>EC2SecurityGroupOwnerId</code> and either <code>EC2SecurityGroupName</code> or <code>EC2SecurityGroupId</code> must be provided.</p>
    /// - On success, responds with [`AuthorizeDbSecurityGroupIngressOutput`](crate::operation::authorize_db_security_group_ingress::AuthorizeDbSecurityGroupIngressOutput) with field(s):
    ///   - [`db_security_group(Option<DbSecurityGroup>)`](crate::operation::authorize_db_security_group_ingress::AuthorizeDbSecurityGroupIngressOutput::db_security_group): <p>Contains the details for an Amazon RDS DB security group.</p>  <p>This data type is used as a response element in the <code>DescribeDBSecurityGroups</code> action.</p>
    /// - On failure, responds with [`SdkError<AuthorizeDBSecurityGroupIngressError>`](crate::operation::authorize_db_security_group_ingress::AuthorizeDBSecurityGroupIngressError)
    pub fn authorize_db_security_group_ingress(&self) -> crate::operation::authorize_db_security_group_ingress::builders::AuthorizeDBSecurityGroupIngressFluentBuilder{
        crate::operation::authorize_db_security_group_ingress::builders::AuthorizeDBSecurityGroupIngressFluentBuilder::new(self.handle.clone())
    }
}
