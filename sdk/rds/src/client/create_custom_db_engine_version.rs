// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateCustomDBEngineVersion`](crate::operation::create_custom_db_engine_version::builders::CreateCustomDBEngineVersionFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`engine(impl Into<String>)`](crate::operation::create_custom_db_engine_version::builders::CreateCustomDBEngineVersionFluentBuilder::engine) / [`set_engine(Option<String>)`](crate::operation::create_custom_db_engine_version::builders::CreateCustomDBEngineVersionFluentBuilder::set_engine):<br>required: **true**<br><p>The database engine to use for your custom engine version (CEV). The only supported value is <code>custom-oracle-ee</code>.</p><br>
    ///   - [`engine_version(impl Into<String>)`](crate::operation::create_custom_db_engine_version::builders::CreateCustomDBEngineVersionFluentBuilder::engine_version) / [`set_engine_version(Option<String>)`](crate::operation::create_custom_db_engine_version::builders::CreateCustomDBEngineVersionFluentBuilder::set_engine_version):<br>required: **true**<br><p>The name of your CEV. The name format is 19.<i>customized_string</i>. For example, a valid CEV name is <code>19.my_cev1</code>. This setting is required for RDS Custom for Oracle, but optional for Amazon RDS. The combination of <code>Engine</code> and <code>EngineVersion</code> is unique per customer per Region.</p><br>
    ///   - [`database_installation_files_s3_bucket_name(impl Into<String>)`](crate::operation::create_custom_db_engine_version::builders::CreateCustomDBEngineVersionFluentBuilder::database_installation_files_s3_bucket_name) / [`set_database_installation_files_s3_bucket_name(Option<String>)`](crate::operation::create_custom_db_engine_version::builders::CreateCustomDBEngineVersionFluentBuilder::set_database_installation_files_s3_bucket_name):<br>required: **false**<br><p>The name of an Amazon S3 bucket that contains database installation files for your CEV. For example, a valid bucket name is <code>my-custom-installation-files</code>.</p><br>
    ///   - [`database_installation_files_s3_prefix(impl Into<String>)`](crate::operation::create_custom_db_engine_version::builders::CreateCustomDBEngineVersionFluentBuilder::database_installation_files_s3_prefix) / [`set_database_installation_files_s3_prefix(Option<String>)`](crate::operation::create_custom_db_engine_version::builders::CreateCustomDBEngineVersionFluentBuilder::set_database_installation_files_s3_prefix):<br>required: **false**<br><p>The Amazon S3 directory that contains the database installation files for your CEV. For example, a valid bucket name is <code>123456789012/cev1</code>. If this setting isn't specified, no prefix is assumed.</p><br>
    ///   - [`image_id(impl Into<String>)`](crate::operation::create_custom_db_engine_version::builders::CreateCustomDBEngineVersionFluentBuilder::image_id) / [`set_image_id(Option<String>)`](crate::operation::create_custom_db_engine_version::builders::CreateCustomDBEngineVersionFluentBuilder::set_image_id):<br>required: **false**<br><p>The ID of the Amazon Machine Image (AMI). For RDS Custom for SQL Server, an AMI ID is required to create a CEV. For RDS Custom for Oracle, the default is the most recent AMI available, but you can specify an AMI ID that was used in a different Oracle CEV. Find the AMIs used by your CEVs by calling the <a href="https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_DescribeDBEngineVersions.html">DescribeDBEngineVersions</a> operation.</p><br>
    ///   - [`kms_key_id(impl Into<String>)`](crate::operation::create_custom_db_engine_version::builders::CreateCustomDBEngineVersionFluentBuilder::kms_key_id) / [`set_kms_key_id(Option<String>)`](crate::operation::create_custom_db_engine_version::builders::CreateCustomDBEngineVersionFluentBuilder::set_kms_key_id):<br>required: **false**<br><p>The Amazon Web Services KMS key identifier for an encrypted CEV. A symmetric encryption KMS key is required for RDS Custom, but optional for Amazon RDS.</p>  <p>If you have an existing symmetric encryption KMS key in your account, you can use it with RDS Custom. No further action is necessary. If you don't already have a symmetric encryption KMS key in your account, follow the instructions in <a href="https://docs.aws.amazon.com/kms/latest/developerguide/create-keys.html#create-symmetric-cmk"> Creating a symmetric encryption KMS key</a> in the <i>Amazon Web Services Key Management Service Developer Guide</i>.</p>  <p>You can choose the same symmetric encryption key when you create a CEV and a DB instance, or choose different keys.</p><br>
    ///   - [`description(impl Into<String>)`](crate::operation::create_custom_db_engine_version::builders::CreateCustomDBEngineVersionFluentBuilder::description) / [`set_description(Option<String>)`](crate::operation::create_custom_db_engine_version::builders::CreateCustomDBEngineVersionFluentBuilder::set_description):<br>required: **false**<br><p>An optional description of your CEV.</p><br>
    ///   - [`manifest(impl Into<String>)`](crate::operation::create_custom_db_engine_version::builders::CreateCustomDBEngineVersionFluentBuilder::manifest) / [`set_manifest(Option<String>)`](crate::operation::create_custom_db_engine_version::builders::CreateCustomDBEngineVersionFluentBuilder::set_manifest):<br>required: **false**<br><p>The CEV manifest, which is a JSON document that describes the installation .zip files stored in Amazon S3. Specify the name/value pairs in a file or a quoted string. RDS Custom applies the patches in the order in which they are listed.</p>  <p>The following JSON fields are valid:</p>  <dl>   <dt>   MediaImportTemplateVersion  </dt>   <dd>    <p>Version of the CEV manifest. The date is in the format <code>YYYY-MM-DD</code>.</p>   </dd>   <dt>   databaseInstallationFileNames  </dt>   <dd>    <p>Ordered list of installation files for the CEV.</p>   </dd>   <dt>   opatchFileNames  </dt>   <dd>    <p>Ordered list of OPatch installers used for the Oracle DB engine.</p>   </dd>   <dt>   psuRuPatchFileNames  </dt>   <dd>    <p>The PSU and RU patches for this CEV.</p>   </dd>   <dt>   OtherPatchFileNames  </dt>   <dd>    <p>The patches that are not in the list of PSU and RU patches. Amazon RDS applies these patches after applying the PSU and RU patches.</p>   </dd>  </dl>  <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/custom-cev.html#custom-cev.preparing.manifest"> Creating the CEV manifest</a> in the <i>Amazon RDS User Guide</i>.</p><br>
    ///   - [`tags(Tag)`](crate::operation::create_custom_db_engine_version::builders::CreateCustomDBEngineVersionFluentBuilder::tags) / [`set_tags(Option<Vec::<Tag>>)`](crate::operation::create_custom_db_engine_version::builders::CreateCustomDBEngineVersionFluentBuilder::set_tags):<br>required: **false**<br><p>A list of tags. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html">Tagging Amazon RDS Resources</a> in the <i>Amazon RDS User Guide.</i> </p><br>
    ///   - [`source_custom_db_engine_version_identifier(impl Into<String>)`](crate::operation::create_custom_db_engine_version::builders::CreateCustomDBEngineVersionFluentBuilder::source_custom_db_engine_version_identifier) / [`set_source_custom_db_engine_version_identifier(Option<String>)`](crate::operation::create_custom_db_engine_version::builders::CreateCustomDBEngineVersionFluentBuilder::set_source_custom_db_engine_version_identifier):<br>required: **false**<br><p>Reserved for future use.</p><br>
    ///   - [`use_aws_provided_latest_image(bool)`](crate::operation::create_custom_db_engine_version::builders::CreateCustomDBEngineVersionFluentBuilder::use_aws_provided_latest_image) / [`set_use_aws_provided_latest_image(Option<bool>)`](crate::operation::create_custom_db_engine_version::builders::CreateCustomDBEngineVersionFluentBuilder::set_use_aws_provided_latest_image):<br>required: **false**<br><p>Reserved for future use.</p><br>
    /// - On success, responds with [`CreateCustomDbEngineVersionOutput`](crate::operation::create_custom_db_engine_version::CreateCustomDbEngineVersionOutput) with field(s):
    ///   - [`engine(Option<String>)`](crate::operation::create_custom_db_engine_version::CreateCustomDbEngineVersionOutput::engine): <p>The name of the database engine.</p>
    ///   - [`engine_version(Option<String>)`](crate::operation::create_custom_db_engine_version::CreateCustomDbEngineVersionOutput::engine_version): <p>The version number of the database engine.</p>
    ///   - [`db_parameter_group_family(Option<String>)`](crate::operation::create_custom_db_engine_version::CreateCustomDbEngineVersionOutput::db_parameter_group_family): <p>The name of the DB parameter group family for the database engine.</p>
    ///   - [`db_engine_description(Option<String>)`](crate::operation::create_custom_db_engine_version::CreateCustomDbEngineVersionOutput::db_engine_description): <p>The description of the database engine.</p>
    ///   - [`db_engine_version_description(Option<String>)`](crate::operation::create_custom_db_engine_version::CreateCustomDbEngineVersionOutput::db_engine_version_description): <p>The description of the database engine version.</p>
    ///   - [`default_character_set(Option<CharacterSet>)`](crate::operation::create_custom_db_engine_version::CreateCustomDbEngineVersionOutput::default_character_set): <p>The default character set for new instances of this engine version, if the <code>CharacterSetName</code> parameter of the CreateDBInstance API isn't specified.</p>
    ///   - [`image(Option<CustomDbEngineVersionAmi>)`](crate::operation::create_custom_db_engine_version::CreateCustomDbEngineVersionOutput::image): <p>The EC2 image</p>
    ///   - [`db_engine_media_type(Option<String>)`](crate::operation::create_custom_db_engine_version::CreateCustomDbEngineVersionOutput::db_engine_media_type): <p>A value that indicates the source media provider of the AMI based on the usage operation. Applicable for RDS Custom for SQL Server.</p>
    ///   - [`supported_character_sets(Option<Vec::<CharacterSet>>)`](crate::operation::create_custom_db_engine_version::CreateCustomDbEngineVersionOutput::supported_character_sets): <p>A list of the character sets supported by this engine for the <code>CharacterSetName</code> parameter of the <code>CreateDBInstance</code> operation.</p>
    ///   - [`supported_nchar_character_sets(Option<Vec::<CharacterSet>>)`](crate::operation::create_custom_db_engine_version::CreateCustomDbEngineVersionOutput::supported_nchar_character_sets): <p>A list of the character sets supported by the Oracle DB engine for the <code>NcharCharacterSetName</code> parameter of the <code>CreateDBInstance</code> operation.</p>
    ///   - [`valid_upgrade_target(Option<Vec::<UpgradeTarget>>)`](crate::operation::create_custom_db_engine_version::CreateCustomDbEngineVersionOutput::valid_upgrade_target): <p>A list of engine versions that this database engine version can be upgraded to.</p>
    ///   - [`supported_timezones(Option<Vec::<Timezone>>)`](crate::operation::create_custom_db_engine_version::CreateCustomDbEngineVersionOutput::supported_timezones): <p>A list of the time zones supported by this engine for the <code>Timezone</code> parameter of the <code>CreateDBInstance</code> action.</p>
    ///   - [`exportable_log_types(Option<Vec::<String>>)`](crate::operation::create_custom_db_engine_version::CreateCustomDbEngineVersionOutput::exportable_log_types): <p>The types of logs that the database engine has available for export to CloudWatch Logs.</p>
    ///   - [`supports_log_exports_to_cloudwatch_logs(Option<bool>)`](crate::operation::create_custom_db_engine_version::CreateCustomDbEngineVersionOutput::supports_log_exports_to_cloudwatch_logs): <p>Indicates whether the engine version supports exporting the log types specified by ExportableLogTypes to CloudWatch Logs.</p>
    ///   - [`supports_read_replica(Option<bool>)`](crate::operation::create_custom_db_engine_version::CreateCustomDbEngineVersionOutput::supports_read_replica): <p>Indicates whether the database engine version supports read replicas.</p>
    ///   - [`supported_engine_modes(Option<Vec::<String>>)`](crate::operation::create_custom_db_engine_version::CreateCustomDbEngineVersionOutput::supported_engine_modes): <p>A list of the supported DB engine modes.</p>
    ///   - [`supported_feature_names(Option<Vec::<String>>)`](crate::operation::create_custom_db_engine_version::CreateCustomDbEngineVersionOutput::supported_feature_names): <p>A list of features supported by the DB engine.</p>  <p>The supported features vary by DB engine and DB engine version.</p>  <p>To determine the supported features for a specific DB engine and DB engine version using the CLI, use the following command:</p>  <p> <code>aws rds describe-db-engine-versions --engine    <engine_name>     --engine-version     <engine_version></engine_version>   </engine_name></code> </p>  <p>For example, to determine the supported features for RDS for PostgreSQL version 13.3 using the CLI, use the following command:</p>  <p> <code>aws rds describe-db-engine-versions --engine postgres --engine-version 13.3</code> </p>  <p>The supported features are listed under <code>SupportedFeatureNames</code> in the output.</p>
    ///   - [`status(Option<String>)`](crate::operation::create_custom_db_engine_version::CreateCustomDbEngineVersionOutput::status): <p>The status of the DB engine version, either <code>available</code> or <code>deprecated</code>.</p>
    ///   - [`supports_parallel_query(Option<bool>)`](crate::operation::create_custom_db_engine_version::CreateCustomDbEngineVersionOutput::supports_parallel_query): <p>Indicates whether you can use Aurora parallel query with a specific DB engine version.</p>
    ///   - [`supports_global_databases(Option<bool>)`](crate::operation::create_custom_db_engine_version::CreateCustomDbEngineVersionOutput::supports_global_databases): <p>Indicates whether you can use Aurora global databases with a specific DB engine version.</p>
    ///   - [`major_engine_version(Option<String>)`](crate::operation::create_custom_db_engine_version::CreateCustomDbEngineVersionOutput::major_engine_version): <p>The major engine version of the CEV.</p>
    ///   - [`database_installation_files_s3_bucket_name(Option<String>)`](crate::operation::create_custom_db_engine_version::CreateCustomDbEngineVersionOutput::database_installation_files_s3_bucket_name): <p>The name of the Amazon S3 bucket that contains your database installation files.</p>
    ///   - [`database_installation_files_s3_prefix(Option<String>)`](crate::operation::create_custom_db_engine_version::CreateCustomDbEngineVersionOutput::database_installation_files_s3_prefix): <p>The Amazon S3 directory that contains the database installation files. If not specified, then no prefix is assumed.</p>
    ///   - [`db_engine_version_arn(Option<String>)`](crate::operation::create_custom_db_engine_version::CreateCustomDbEngineVersionOutput::db_engine_version_arn): <p>The ARN of the custom engine version.</p>
    ///   - [`kms_key_id(Option<String>)`](crate::operation::create_custom_db_engine_version::CreateCustomDbEngineVersionOutput::kms_key_id): <p>The Amazon Web Services KMS key identifier for an encrypted CEV. This parameter is required for RDS Custom, but optional for Amazon RDS.</p>
    ///   - [`create_time(Option<DateTime>)`](crate::operation::create_custom_db_engine_version::CreateCustomDbEngineVersionOutput::create_time): <p>The creation time of the DB engine version.</p>
    ///   - [`tag_list(Option<Vec::<Tag>>)`](crate::operation::create_custom_db_engine_version::CreateCustomDbEngineVersionOutput::tag_list): <p>A list of tags. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html">Tagging Amazon RDS Resources</a> in the <i>Amazon RDS User Guide.</i> </p>
    ///   - [`supports_babelfish(Option<bool>)`](crate::operation::create_custom_db_engine_version::CreateCustomDbEngineVersionOutput::supports_babelfish): <p>Indicates whether the engine version supports Babelfish for Aurora PostgreSQL.</p>
    ///   - [`custom_db_engine_version_manifest(Option<String>)`](crate::operation::create_custom_db_engine_version::CreateCustomDbEngineVersionOutput::custom_db_engine_version_manifest): <p>JSON string that lists the installation files and parameters that RDS Custom uses to create a custom engine version (CEV). RDS Custom applies the patches in the order in which they're listed in the manifest. You can set the Oracle home, Oracle base, and UNIX/Linux user and group using the installation parameters. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/custom-cev.preparing.html#custom-cev.preparing.manifest.fields">JSON fields in the CEV manifest</a> in the <i>Amazon RDS User Guide</i>. </p>
    ///   - [`supports_certificate_rotation_without_restart(Option<bool>)`](crate::operation::create_custom_db_engine_version::CreateCustomDbEngineVersionOutput::supports_certificate_rotation_without_restart): <p>Indicates whether the engine version supports rotating the server certificate without rebooting the DB instance.</p>
    ///   - [`supported_ca_certificate_identifiers(Option<Vec::<String>>)`](crate::operation::create_custom_db_engine_version::CreateCustomDbEngineVersionOutput::supported_ca_certificate_identifiers): <p>A list of the supported CA certificate identifiers.</p>  <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.SSL.html">Using SSL/TLS to encrypt a connection to a DB instance</a> in the <i>Amazon RDS User Guide</i> and <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.SSL.html"> Using SSL/TLS to encrypt a connection to a DB cluster</a> in the <i>Amazon Aurora User Guide</i>.</p>
    ///   - [`supports_local_write_forwarding(Option<bool>)`](crate::operation::create_custom_db_engine_version::CreateCustomDbEngineVersionOutput::supports_local_write_forwarding): <p>Indicates whether the DB engine version supports forwarding write operations from reader DB instances to the writer DB instance in the DB cluster. By default, write operations aren't allowed on reader DB instances.</p>  <p>Valid for: Aurora DB clusters only</p>
    ///   - [`supports_integrations(Option<bool>)`](crate::operation::create_custom_db_engine_version::CreateCustomDbEngineVersionOutput::supports_integrations): <p>Indicates whether the DB engine version supports Aurora zero-ETL integrations with Amazon Redshift.</p>
    /// - On failure, responds with [`SdkError<CreateCustomDBEngineVersionError>`](crate::operation::create_custom_db_engine_version::CreateCustomDBEngineVersionError)
    pub fn create_custom_db_engine_version(
        &self,
    ) -> crate::operation::create_custom_db_engine_version::builders::CreateCustomDBEngineVersionFluentBuilder {
        crate::operation::create_custom_db_engine_version::builders::CreateCustomDBEngineVersionFluentBuilder::new(self.handle.clone())
    }
}
