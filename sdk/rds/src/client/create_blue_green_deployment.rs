// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateBlueGreenDeployment`](crate::operation::create_blue_green_deployment::builders::CreateBlueGreenDeploymentFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`blue_green_deployment_name(impl Into<String>)`](crate::operation::create_blue_green_deployment::builders::CreateBlueGreenDeploymentFluentBuilder::blue_green_deployment_name) / [`set_blue_green_deployment_name(Option<String>)`](crate::operation::create_blue_green_deployment::builders::CreateBlueGreenDeploymentFluentBuilder::set_blue_green_deployment_name):<br>required: **true**<br><p>The name of the blue/green deployment.</p>  <p>Constraints:</p>  <ul>   <li> <p>Can't be the same as an existing blue/green deployment name in the same account and Amazon Web Services Region.</p> </li>  </ul><br>
    ///   - [`source(impl Into<String>)`](crate::operation::create_blue_green_deployment::builders::CreateBlueGreenDeploymentFluentBuilder::source) / [`set_source(Option<String>)`](crate::operation::create_blue_green_deployment::builders::CreateBlueGreenDeploymentFluentBuilder::set_source):<br>required: **true**<br><p>The Amazon Resource Name (ARN) of the source production database.</p>  <p>Specify the database that you want to clone. The blue/green deployment creates this database in the green environment. You can make updates to the database in the green environment, such as an engine version upgrade. When you are ready, you can switch the database in the green environment to be the production database.</p><br>
    ///   - [`target_engine_version(impl Into<String>)`](crate::operation::create_blue_green_deployment::builders::CreateBlueGreenDeploymentFluentBuilder::target_engine_version) / [`set_target_engine_version(Option<String>)`](crate::operation::create_blue_green_deployment::builders::CreateBlueGreenDeploymentFluentBuilder::set_target_engine_version):<br>required: **false**<br><p>The engine version of the database in the green environment.</p>  <p>Specify the engine version to upgrade to in the green environment.</p><br>
    ///   - [`target_db_parameter_group_name(impl Into<String>)`](crate::operation::create_blue_green_deployment::builders::CreateBlueGreenDeploymentFluentBuilder::target_db_parameter_group_name) / [`set_target_db_parameter_group_name(Option<String>)`](crate::operation::create_blue_green_deployment::builders::CreateBlueGreenDeploymentFluentBuilder::set_target_db_parameter_group_name):<br>required: **false**<br><p>The DB parameter group associated with the DB instance in the green environment.</p>  <p>To test parameter changes, specify a DB parameter group that is different from the one associated with the source DB instance.</p><br>
    ///   - [`target_db_cluster_parameter_group_name(impl Into<String>)`](crate::operation::create_blue_green_deployment::builders::CreateBlueGreenDeploymentFluentBuilder::target_db_cluster_parameter_group_name) / [`set_target_db_cluster_parameter_group_name(Option<String>)`](crate::operation::create_blue_green_deployment::builders::CreateBlueGreenDeploymentFluentBuilder::set_target_db_cluster_parameter_group_name):<br>required: **false**<br><p>The DB cluster parameter group associated with the Aurora DB cluster in the green environment.</p>  <p>To test parameter changes, specify a DB cluster parameter group that is different from the one associated with the source DB cluster.</p><br>
    ///   - [`tags(Tag)`](crate::operation::create_blue_green_deployment::builders::CreateBlueGreenDeploymentFluentBuilder::tags) / [`set_tags(Option<Vec::<Tag>>)`](crate::operation::create_blue_green_deployment::builders::CreateBlueGreenDeploymentFluentBuilder::set_tags):<br>required: **false**<br><p>Tags to assign to the blue/green deployment.</p><br>
    ///   - [`target_db_instance_class(impl Into<String>)`](crate::operation::create_blue_green_deployment::builders::CreateBlueGreenDeploymentFluentBuilder::target_db_instance_class) / [`set_target_db_instance_class(Option<String>)`](crate::operation::create_blue_green_deployment::builders::CreateBlueGreenDeploymentFluentBuilder::set_target_db_instance_class):<br>required: **false**<br><p>Specify the DB instance class for the databases in the green environment.</p><br>
    ///   - [`upgrade_target_storage_config(bool)`](crate::operation::create_blue_green_deployment::builders::CreateBlueGreenDeploymentFluentBuilder::upgrade_target_storage_config) / [`set_upgrade_target_storage_config(Option<bool>)`](crate::operation::create_blue_green_deployment::builders::CreateBlueGreenDeploymentFluentBuilder::set_upgrade_target_storage_config):<br>required: **false**<br><p>Whether to upgrade the storage file system configuration on the green database. This option migrates the green DB instance from the older 32-bit file system to the preferred configuration. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_PIOPS.StorageTypes.html#USER_PIOPS.UpgradeFileSystem">Upgrading the storage file system for a DB instance</a>.</p><br>
    /// - On success, responds with [`CreateBlueGreenDeploymentOutput`](crate::operation::create_blue_green_deployment::CreateBlueGreenDeploymentOutput) with field(s):
    ///   - [`blue_green_deployment(Option<BlueGreenDeployment>)`](crate::operation::create_blue_green_deployment::CreateBlueGreenDeploymentOutput::blue_green_deployment): <p>Details about a blue/green deployment.</p>  <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/blue-green-deployments.html">Using Amazon RDS Blue/Green Deployments for database updates</a> in the <i>Amazon RDS User Guide</i> and <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/blue-green-deployments.html">Using Amazon RDS Blue/Green Deployments for database updates</a> in the <i>Amazon Aurora User Guide</i>.</p>
    /// - On failure, responds with [`SdkError<CreateBlueGreenDeploymentError>`](crate::operation::create_blue_green_deployment::CreateBlueGreenDeploymentError)
    pub fn create_blue_green_deployment(&self) -> crate::operation::create_blue_green_deployment::builders::CreateBlueGreenDeploymentFluentBuilder {
        crate::operation::create_blue_green_deployment::builders::CreateBlueGreenDeploymentFluentBuilder::new(self.handle.clone())
    }
}
