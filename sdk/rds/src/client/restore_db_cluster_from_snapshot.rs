// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`RestoreDBClusterFromSnapshot`](crate::operation::restore_db_cluster_from_snapshot::builders::RestoreDBClusterFromSnapshotFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`availability_zones(impl Into<String>)`](crate::operation::restore_db_cluster_from_snapshot::builders::RestoreDBClusterFromSnapshotFluentBuilder::availability_zones) / [`set_availability_zones(Option<Vec::<String>>)`](crate::operation::restore_db_cluster_from_snapshot::builders::RestoreDBClusterFromSnapshotFluentBuilder::set_availability_zones):<br>required: **false**<br><p>Provides the list of Availability Zones (AZs) where instances in the restored DB cluster can be created.</p> <p>Valid for: Aurora DB clusters only</p><br>
    ///   - [`db_cluster_identifier(impl Into<String>)`](crate::operation::restore_db_cluster_from_snapshot::builders::RestoreDBClusterFromSnapshotFluentBuilder::db_cluster_identifier) / [`set_db_cluster_identifier(Option<String>)`](crate::operation::restore_db_cluster_from_snapshot::builders::RestoreDBClusterFromSnapshotFluentBuilder::set_db_cluster_identifier):<br>required: **true**<br><p>The name of the DB cluster to create from the DB snapshot or DB cluster snapshot. This parameter isn't case-sensitive.</p> <p>Constraints:</p> <ul>  <li>   <p>Must contain from 1 to 63 letters, numbers, or hyphens</p></li>  <li>   <p>First character must be a letter</p></li>  <li>   <p>Can't end with a hyphen or contain two consecutive hyphens</p></li> </ul> <p>Example: <code>my-snapshot-id</code></p> <p>Valid for: Aurora DB clusters and Multi-AZ DB clusters</p><br>
    ///   - [`snapshot_identifier(impl Into<String>)`](crate::operation::restore_db_cluster_from_snapshot::builders::RestoreDBClusterFromSnapshotFluentBuilder::snapshot_identifier) / [`set_snapshot_identifier(Option<String>)`](crate::operation::restore_db_cluster_from_snapshot::builders::RestoreDBClusterFromSnapshotFluentBuilder::set_snapshot_identifier):<br>required: **true**<br><p>The identifier for the DB snapshot or DB cluster snapshot to restore from.</p> <p>You can use either the name or the Amazon Resource Name (ARN) to specify a DB cluster snapshot. However, you can use only the ARN to specify a DB snapshot.</p> <p>Constraints:</p> <ul>  <li>   <p>Must match the identifier of an existing Snapshot.</p></li> </ul> <p>Valid for: Aurora DB clusters and Multi-AZ DB clusters</p><br>
    ///   - [`engine(impl Into<String>)`](crate::operation::restore_db_cluster_from_snapshot::builders::RestoreDBClusterFromSnapshotFluentBuilder::engine) / [`set_engine(Option<String>)`](crate::operation::restore_db_cluster_from_snapshot::builders::RestoreDBClusterFromSnapshotFluentBuilder::set_engine):<br>required: **true**<br><p>The database engine to use for the new DB cluster.</p> <p>Default: The same as source</p> <p>Constraint: Must be compatible with the engine of the source</p> <p>Valid for: Aurora DB clusters and Multi-AZ DB clusters</p><br>
    ///   - [`engine_version(impl Into<String>)`](crate::operation::restore_db_cluster_from_snapshot::builders::RestoreDBClusterFromSnapshotFluentBuilder::engine_version) / [`set_engine_version(Option<String>)`](crate::operation::restore_db_cluster_from_snapshot::builders::RestoreDBClusterFromSnapshotFluentBuilder::set_engine_version):<br>required: **false**<br><p>The version of the database engine to use for the new DB cluster. If you don't specify an engine version, the default version for the database engine in the Amazon Web Services Region is used.</p> <p>To list all of the available engine versions for Aurora MySQL, use the following command:</p> <p><code>aws rds describe-db-engine-versions --engine aurora-mysql --query "DBEngineVersions[].EngineVersion"</code></p> <p>To list all of the available engine versions for Aurora PostgreSQL, use the following command:</p> <p><code>aws rds describe-db-engine-versions --engine aurora-postgresql --query "DBEngineVersions[].EngineVersion"</code></p> <p>To list all of the available engine versions for RDS for MySQL, use the following command:</p> <p><code>aws rds describe-db-engine-versions --engine mysql --query "DBEngineVersions[].EngineVersion"</code></p> <p>To list all of the available engine versions for RDS for PostgreSQL, use the following command:</p> <p><code>aws rds describe-db-engine-versions --engine postgres --query "DBEngineVersions[].EngineVersion"</code></p> <p><b>Aurora MySQL</b></p> <p>See <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/AuroraMySQL.Updates.html">Database engine updates for Amazon Aurora MySQL</a> in the <i>Amazon Aurora User Guide</i>.</p> <p><b>Aurora PostgreSQL</b></p> <p>See <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/AuroraPostgreSQL.Updates.20180305.html">Amazon Aurora PostgreSQL releases and engine versions</a> in the <i>Amazon Aurora User Guide</i>.</p> <p><b>MySQL</b></p> <p>See <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_MySQL.html#MySQL.Concepts.VersionMgmt">Amazon RDS for MySQL</a> in the <i>Amazon RDS User Guide.</i></p> <p><b>PostgreSQL</b></p> <p>See <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_PostgreSQL.html#PostgreSQL.Concepts">Amazon RDS for PostgreSQL versions and extensions</a> in the <i>Amazon RDS User Guide.</i></p> <p>Valid for: Aurora DB clusters and Multi-AZ DB clusters</p><br>
    ///   - [`port(i32)`](crate::operation::restore_db_cluster_from_snapshot::builders::RestoreDBClusterFromSnapshotFluentBuilder::port) / [`set_port(Option<i32>)`](crate::operation::restore_db_cluster_from_snapshot::builders::RestoreDBClusterFromSnapshotFluentBuilder::set_port):<br>required: **false**<br><p>The port number on which the new DB cluster accepts connections.</p> <p>Constraints: This value must be <code>1150-65535</code></p> <p>Default: The same port as the original DB cluster.</p> <p>Valid for: Aurora DB clusters and Multi-AZ DB clusters</p><br>
    ///   - [`db_subnet_group_name(impl Into<String>)`](crate::operation::restore_db_cluster_from_snapshot::builders::RestoreDBClusterFromSnapshotFluentBuilder::db_subnet_group_name) / [`set_db_subnet_group_name(Option<String>)`](crate::operation::restore_db_cluster_from_snapshot::builders::RestoreDBClusterFromSnapshotFluentBuilder::set_db_subnet_group_name):<br>required: **false**<br><p>The name of the DB subnet group to use for the new DB cluster.</p> <p>Constraints: If supplied, must match the name of an existing DB subnet group.</p> <p>Example: <code>mydbsubnetgroup</code></p> <p>Valid for: Aurora DB clusters and Multi-AZ DB clusters</p><br>
    ///   - [`database_name(impl Into<String>)`](crate::operation::restore_db_cluster_from_snapshot::builders::RestoreDBClusterFromSnapshotFluentBuilder::database_name) / [`set_database_name(Option<String>)`](crate::operation::restore_db_cluster_from_snapshot::builders::RestoreDBClusterFromSnapshotFluentBuilder::set_database_name):<br>required: **false**<br><p>The database name for the restored DB cluster.</p> <p>Valid for: Aurora DB clusters and Multi-AZ DB clusters</p><br>
    ///   - [`option_group_name(impl Into<String>)`](crate::operation::restore_db_cluster_from_snapshot::builders::RestoreDBClusterFromSnapshotFluentBuilder::option_group_name) / [`set_option_group_name(Option<String>)`](crate::operation::restore_db_cluster_from_snapshot::builders::RestoreDBClusterFromSnapshotFluentBuilder::set_option_group_name):<br>required: **false**<br><p>The name of the option group to use for the restored DB cluster.</p> <p>DB clusters are associated with a default option group that can't be modified.</p><br>
    ///   - [`vpc_security_group_ids(impl Into<String>)`](crate::operation::restore_db_cluster_from_snapshot::builders::RestoreDBClusterFromSnapshotFluentBuilder::vpc_security_group_ids) / [`set_vpc_security_group_ids(Option<Vec::<String>>)`](crate::operation::restore_db_cluster_from_snapshot::builders::RestoreDBClusterFromSnapshotFluentBuilder::set_vpc_security_group_ids):<br>required: **false**<br><p>A list of VPC security groups that the new DB cluster will belong to.</p> <p>Valid for: Aurora DB clusters and Multi-AZ DB clusters</p><br>
    ///   - [`tags(Tag)`](crate::operation::restore_db_cluster_from_snapshot::builders::RestoreDBClusterFromSnapshotFluentBuilder::tags) / [`set_tags(Option<Vec::<Tag>>)`](crate::operation::restore_db_cluster_from_snapshot::builders::RestoreDBClusterFromSnapshotFluentBuilder::set_tags):<br>required: **false**<br><p>The tags to be assigned to the restored DB cluster.</p> <p>Valid for: Aurora DB clusters and Multi-AZ DB clusters</p><br>
    ///   - [`kms_key_id(impl Into<String>)`](crate::operation::restore_db_cluster_from_snapshot::builders::RestoreDBClusterFromSnapshotFluentBuilder::kms_key_id) / [`set_kms_key_id(Option<String>)`](crate::operation::restore_db_cluster_from_snapshot::builders::RestoreDBClusterFromSnapshotFluentBuilder::set_kms_key_id):<br>required: **false**<br><p>The Amazon Web Services KMS key identifier to use when restoring an encrypted DB cluster from a DB snapshot or DB cluster snapshot.</p> <p>The Amazon Web Services KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the KMS key. To use a KMS key in a different Amazon Web Services account, specify the key ARN or alias ARN.</p> <p>When you don't specify a value for the <code>KmsKeyId</code> parameter, then the following occurs:</p> <ul>  <li>   <p>If the DB snapshot or DB cluster snapshot in <code>SnapshotIdentifier</code> is encrypted, then the restored DB cluster is encrypted using the KMS key that was used to encrypt the DB snapshot or DB cluster snapshot.</p></li>  <li>   <p>If the DB snapshot or DB cluster snapshot in <code>SnapshotIdentifier</code> isn't encrypted, then the restored DB cluster isn't encrypted.</p></li> </ul> <p>Valid for: Aurora DB clusters and Multi-AZ DB clusters</p><br>
    ///   - [`enable_iam_database_authentication(bool)`](crate::operation::restore_db_cluster_from_snapshot::builders::RestoreDBClusterFromSnapshotFluentBuilder::enable_iam_database_authentication) / [`set_enable_iam_database_authentication(Option<bool>)`](crate::operation::restore_db_cluster_from_snapshot::builders::RestoreDBClusterFromSnapshotFluentBuilder::set_enable_iam_database_authentication):<br>required: **false**<br><p>Specifies whether to enable mapping of Amazon Web Services Identity and Access Management (IAM) accounts to database accounts. By default, mapping isn't enabled.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.IAMDBAuth.html"> IAM Database Authentication</a> in the <i>Amazon Aurora User Guide</i>.</p> <p>Valid for: Aurora DB clusters only</p><br>
    ///   - [`backtrack_window(i64)`](crate::operation::restore_db_cluster_from_snapshot::builders::RestoreDBClusterFromSnapshotFluentBuilder::backtrack_window) / [`set_backtrack_window(Option<i64>)`](crate::operation::restore_db_cluster_from_snapshot::builders::RestoreDBClusterFromSnapshotFluentBuilder::set_backtrack_window):<br>required: **false**<br><p>The target backtrack window, in seconds. To disable backtracking, set this value to 0.</p><note>  <p>Currently, Backtrack is only supported for Aurora MySQL DB clusters.</p> </note> <p>Default: 0</p> <p>Constraints:</p> <ul>  <li>   <p>If specified, this value must be set to a number from 0 to 259,200 (72 hours).</p></li> </ul> <p>Valid for: Aurora DB clusters only</p><br>
    ///   - [`enable_cloudwatch_logs_exports(impl Into<String>)`](crate::operation::restore_db_cluster_from_snapshot::builders::RestoreDBClusterFromSnapshotFluentBuilder::enable_cloudwatch_logs_exports) / [`set_enable_cloudwatch_logs_exports(Option<Vec::<String>>)`](crate::operation::restore_db_cluster_from_snapshot::builders::RestoreDBClusterFromSnapshotFluentBuilder::set_enable_cloudwatch_logs_exports):<br>required: **false**<br><p>The list of logs that the restored DB cluster is to export to Amazon CloudWatch Logs. The values in the list depend on the DB engine being used.</p> <p><b>RDS for MySQL</b></p> <p>Possible values are <code>error</code>, <code>general</code>, and <code>slowquery</code>.</p> <p><b>RDS for PostgreSQL</b></p> <p>Possible values are <code>postgresql</code> and <code>upgrade</code>.</p> <p><b>Aurora MySQL</b></p> <p>Possible values are <code>audit</code>, <code>error</code>, <code>general</code>, and <code>slowquery</code>.</p> <p><b>Aurora PostgreSQL</b></p> <p>Possible value is <code>postgresql</code>.</p> <p>For more information about exporting CloudWatch Logs for Amazon RDS, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_LogAccess.html#USER_LogAccess.Procedural.UploadtoCloudWatch">Publishing Database Logs to Amazon CloudWatch Logs</a> in the <i>Amazon RDS User Guide</i>.</p> <p>For more information about exporting CloudWatch Logs for Amazon Aurora, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_LogAccess.html#USER_LogAccess.Procedural.UploadtoCloudWatch">Publishing Database Logs to Amazon CloudWatch Logs</a> in the <i>Amazon Aurora User Guide</i>.</p> <p>Valid for: Aurora DB clusters and Multi-AZ DB clusters</p><br>
    ///   - [`engine_mode(impl Into<String>)`](crate::operation::restore_db_cluster_from_snapshot::builders::RestoreDBClusterFromSnapshotFluentBuilder::engine_mode) / [`set_engine_mode(Option<String>)`](crate::operation::restore_db_cluster_from_snapshot::builders::RestoreDBClusterFromSnapshotFluentBuilder::set_engine_mode):<br>required: **false**<br><p>The DB engine mode of the DB cluster, either <code>provisioned</code> or <code>serverless</code>.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_CreateDBCluster.html"> CreateDBCluster</a>.</p> <p>Valid for: Aurora DB clusters only</p><br>
    ///   - [`scaling_configuration(ScalingConfiguration)`](crate::operation::restore_db_cluster_from_snapshot::builders::RestoreDBClusterFromSnapshotFluentBuilder::scaling_configuration) / [`set_scaling_configuration(Option<ScalingConfiguration>)`](crate::operation::restore_db_cluster_from_snapshot::builders::RestoreDBClusterFromSnapshotFluentBuilder::set_scaling_configuration):<br>required: **false**<br><p>For DB clusters in <code>serverless</code> DB engine mode, the scaling properties of the DB cluster.</p> <p>Valid for: Aurora DB clusters only</p><br>
    ///   - [`db_cluster_parameter_group_name(impl Into<String>)`](crate::operation::restore_db_cluster_from_snapshot::builders::RestoreDBClusterFromSnapshotFluentBuilder::db_cluster_parameter_group_name) / [`set_db_cluster_parameter_group_name(Option<String>)`](crate::operation::restore_db_cluster_from_snapshot::builders::RestoreDBClusterFromSnapshotFluentBuilder::set_db_cluster_parameter_group_name):<br>required: **false**<br><p>The name of the DB cluster parameter group to associate with this DB cluster. If this argument is omitted, the default DB cluster parameter group for the specified engine is used.</p> <p>Constraints:</p> <ul>  <li>   <p>If supplied, must match the name of an existing default DB cluster parameter group.</p></li>  <li>   <p>Must be 1 to 255 letters, numbers, or hyphens.</p></li>  <li>   <p>First character must be a letter.</p></li>  <li>   <p>Can't end with a hyphen or contain two consecutive hyphens.</p></li> </ul> <p>Valid for: Aurora DB clusters and Multi-AZ DB clusters</p><br>
    ///   - [`deletion_protection(bool)`](crate::operation::restore_db_cluster_from_snapshot::builders::RestoreDBClusterFromSnapshotFluentBuilder::deletion_protection) / [`set_deletion_protection(Option<bool>)`](crate::operation::restore_db_cluster_from_snapshot::builders::RestoreDBClusterFromSnapshotFluentBuilder::set_deletion_protection):<br>required: **false**<br><p>Specifies whether to enable deletion protection for the DB cluster. The database can't be deleted when deletion protection is enabled. By default, deletion protection isn't enabled.</p> <p>Valid for: Aurora DB clusters and Multi-AZ DB clusters</p><br>
    ///   - [`copy_tags_to_snapshot(bool)`](crate::operation::restore_db_cluster_from_snapshot::builders::RestoreDBClusterFromSnapshotFluentBuilder::copy_tags_to_snapshot) / [`set_copy_tags_to_snapshot(Option<bool>)`](crate::operation::restore_db_cluster_from_snapshot::builders::RestoreDBClusterFromSnapshotFluentBuilder::set_copy_tags_to_snapshot):<br>required: **false**<br><p>Specifies whether to copy all tags from the restored DB cluster to snapshots of the restored DB cluster. The default is not to copy them.</p> <p>Valid for: Aurora DB clusters and Multi-AZ DB clusters</p><br>
    ///   - [`domain(impl Into<String>)`](crate::operation::restore_db_cluster_from_snapshot::builders::RestoreDBClusterFromSnapshotFluentBuilder::domain) / [`set_domain(Option<String>)`](crate::operation::restore_db_cluster_from_snapshot::builders::RestoreDBClusterFromSnapshotFluentBuilder::set_domain):<br>required: **false**<br><p>The Active Directory directory ID to restore the DB cluster in. The domain must be created prior to this operation. Currently, only MySQL, Microsoft SQL Server, Oracle, and PostgreSQL DB instances can be created in an Active Directory Domain.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/kerberos-authentication.html"> Kerberos Authentication</a> in the <i>Amazon RDS User Guide</i>.</p> <p>Valid for: Aurora DB clusters only</p><br>
    ///   - [`domain_iam_role_name(impl Into<String>)`](crate::operation::restore_db_cluster_from_snapshot::builders::RestoreDBClusterFromSnapshotFluentBuilder::domain_iam_role_name) / [`set_domain_iam_role_name(Option<String>)`](crate::operation::restore_db_cluster_from_snapshot::builders::RestoreDBClusterFromSnapshotFluentBuilder::set_domain_iam_role_name):<br>required: **false**<br><p>The name of the IAM role to be used when making API calls to the Directory Service.</p> <p>Valid for: Aurora DB clusters only</p><br>
    ///   - [`db_cluster_instance_class(impl Into<String>)`](crate::operation::restore_db_cluster_from_snapshot::builders::RestoreDBClusterFromSnapshotFluentBuilder::db_cluster_instance_class) / [`set_db_cluster_instance_class(Option<String>)`](crate::operation::restore_db_cluster_from_snapshot::builders::RestoreDBClusterFromSnapshotFluentBuilder::set_db_cluster_instance_class):<br>required: **false**<br><p>The compute and memory capacity of the each DB instance in the Multi-AZ DB cluster, for example db.m6gd.xlarge. Not all DB instance classes are available in all Amazon Web Services Regions, or for all database engines.</p> <p>For the full list of DB instance classes, and availability for your engine, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html">DB Instance Class</a> in the <i>Amazon RDS User Guide.</i></p> <p>Valid for: Multi-AZ DB clusters only</p><br>
    ///   - [`storage_type(impl Into<String>)`](crate::operation::restore_db_cluster_from_snapshot::builders::RestoreDBClusterFromSnapshotFluentBuilder::storage_type) / [`set_storage_type(Option<String>)`](crate::operation::restore_db_cluster_from_snapshot::builders::RestoreDBClusterFromSnapshotFluentBuilder::set_storage_type):<br>required: **false**<br><p>Specifies the storage type to be associated with the DB cluster.</p> <p>When specified for a Multi-AZ DB cluster, a value for the <code>Iops</code> parameter is required.</p> <p>Valid Values: <code>aurora</code>, <code>aurora-iopt1</code> (Aurora DB clusters); <code>io1</code> (Multi-AZ DB clusters)</p> <p>Default: <code>aurora</code> (Aurora DB clusters); <code>io1</code> (Multi-AZ DB clusters)</p> <p>Valid for: Aurora DB clusters and Multi-AZ DB clusters</p><br>
    ///   - [`iops(i32)`](crate::operation::restore_db_cluster_from_snapshot::builders::RestoreDBClusterFromSnapshotFluentBuilder::iops) / [`set_iops(Option<i32>)`](crate::operation::restore_db_cluster_from_snapshot::builders::RestoreDBClusterFromSnapshotFluentBuilder::set_iops):<br>required: **false**<br><p>The amount of Provisioned IOPS (input/output operations per second) to be initially allocated for each DB instance in the Multi-AZ DB cluster.</p> <p>For information about valid IOPS values, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Storage.html#USER_PIOPS">Amazon RDS Provisioned IOPS storage</a> in the <i>Amazon RDS User Guide</i>.</p> <p>Constraints: Must be a multiple between .5 and 50 of the storage amount for the DB instance.</p> <p>Valid for: Aurora DB clusters and Multi-AZ DB clusters</p><br>
    ///   - [`publicly_accessible(bool)`](crate::operation::restore_db_cluster_from_snapshot::builders::RestoreDBClusterFromSnapshotFluentBuilder::publicly_accessible) / [`set_publicly_accessible(Option<bool>)`](crate::operation::restore_db_cluster_from_snapshot::builders::RestoreDBClusterFromSnapshotFluentBuilder::set_publicly_accessible):<br>required: **false**<br><p>Specifies whether the DB cluster is publicly accessible.</p> <p>When the DB cluster is publicly accessible, its Domain Name System (DNS) endpoint resolves to the private IP address from within the DB cluster's virtual private cloud (VPC). It resolves to the public IP address from outside of the DB cluster's VPC. Access to the DB cluster is ultimately controlled by the security group it uses. That public access is not permitted if the security group assigned to the DB cluster doesn't permit it.</p> <p>When the DB cluster isn't publicly accessible, it is an internal DB cluster with a DNS name that resolves to a private IP address.</p> <p>Default: The default behavior varies depending on whether <code>DBSubnetGroupName</code> is specified.</p> <p>If <code>DBSubnetGroupName</code> isn't specified, and <code>PubliclyAccessible</code> isn't specified, the following applies:</p> <ul>  <li>   <p>If the default VPC in the target Region doesn’t have an internet gateway attached to it, the DB cluster is private.</p></li>  <li>   <p>If the default VPC in the target Region has an internet gateway attached to it, the DB cluster is public.</p></li> </ul> <p>If <code>DBSubnetGroupName</code> is specified, and <code>PubliclyAccessible</code> isn't specified, the following applies:</p> <ul>  <li>   <p>If the subnets are part of a VPC that doesn’t have an internet gateway attached to it, the DB cluster is private.</p></li>  <li>   <p>If the subnets are part of a VPC that has an internet gateway attached to it, the DB cluster is public.</p></li> </ul> <p>Valid for: Aurora DB clusters and Multi-AZ DB clusters</p><br>
    ///   - [`serverless_v2_scaling_configuration(ServerlessV2ScalingConfiguration)`](crate::operation::restore_db_cluster_from_snapshot::builders::RestoreDBClusterFromSnapshotFluentBuilder::serverless_v2_scaling_configuration) / [`set_serverless_v2_scaling_configuration(Option<ServerlessV2ScalingConfiguration>)`](crate::operation::restore_db_cluster_from_snapshot::builders::RestoreDBClusterFromSnapshotFluentBuilder::set_serverless_v2_scaling_configuration):<br>required: **false**<br><p>Contains the scaling configuration of an Aurora Serverless v2 DB cluster.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless-v2.html">Using Amazon Aurora Serverless v2</a> in the <i>Amazon Aurora User Guide</i>.</p><br>
    ///   - [`network_type(impl Into<String>)`](crate::operation::restore_db_cluster_from_snapshot::builders::RestoreDBClusterFromSnapshotFluentBuilder::network_type) / [`set_network_type(Option<String>)`](crate::operation::restore_db_cluster_from_snapshot::builders::RestoreDBClusterFromSnapshotFluentBuilder::set_network_type):<br>required: **false**<br><p>The network type of the DB cluster.</p> <p>Valid Values:</p> <ul>  <li>   <p><code>IPV4</code></p></li>  <li>   <p><code>DUAL</code></p></li> </ul> <p>The network type is determined by the <code>DBSubnetGroup</code> specified for the DB cluster. A <code>DBSubnetGroup</code> can support only the IPv4 protocol or the IPv4 and the IPv6 protocols (<code>DUAL</code>).</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_VPC.WorkingWithRDSInstanceinaVPC.html"> Working with a DB instance in a VPC</a> in the <i>Amazon Aurora User Guide.</i></p> <p>Valid for: Aurora DB clusters only</p><br>
    ///   - [`rds_custom_cluster_configuration(RdsCustomClusterConfiguration)`](crate::operation::restore_db_cluster_from_snapshot::builders::RestoreDBClusterFromSnapshotFluentBuilder::rds_custom_cluster_configuration) / [`set_rds_custom_cluster_configuration(Option<RdsCustomClusterConfiguration>)`](crate::operation::restore_db_cluster_from_snapshot::builders::RestoreDBClusterFromSnapshotFluentBuilder::set_rds_custom_cluster_configuration):<br>required: **false**<br><p>Reserved for future use.</p><br>
    ///   - [`engine_lifecycle_support(impl Into<String>)`](crate::operation::restore_db_cluster_from_snapshot::builders::RestoreDBClusterFromSnapshotFluentBuilder::engine_lifecycle_support) / [`set_engine_lifecycle_support(Option<String>)`](crate::operation::restore_db_cluster_from_snapshot::builders::RestoreDBClusterFromSnapshotFluentBuilder::set_engine_lifecycle_support):<br>required: **false**<br><p>The life cycle type for this DB cluster.</p><note>  <p>By default, this value is set to <code>open-source-rds-extended-support</code>, which enrolls your DB cluster into Amazon RDS Extended Support. At the end of standard support, you can avoid charges for Extended Support by setting the value to <code>open-source-rds-extended-support-disabled</code>. In this case, RDS automatically upgrades your restored DB cluster to a higher engine version, if the major engine version is past its end of standard support date.</p> </note> <p>You can use this setting to enroll your DB cluster into Amazon RDS Extended Support. With RDS Extended Support, you can run the selected major engine version on your DB cluster past the end of standard support for that engine version. For more information, see the following sections:</p> <ul>  <li>   <p>Amazon Aurora (PostgreSQL only) - <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/extended-support.html">Using Amazon RDS Extended Support</a> in the <i>Amazon Aurora User Guide</i></p></li>  <li>   <p>Amazon RDS - <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/extended-support.html">Using Amazon RDS Extended Support</a> in the <i>Amazon RDS User Guide</i></p></li> </ul> <p>Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters</p> <p>Valid Values: <code>open-source-rds-extended-support | open-source-rds-extended-support-disabled</code></p> <p>Default: <code>open-source-rds-extended-support</code></p><br>
    /// - On success, responds with [`RestoreDbClusterFromSnapshotOutput`](crate::operation::restore_db_cluster_from_snapshot::RestoreDbClusterFromSnapshotOutput) with field(s):
    ///   - [`db_cluster(Option<DbCluster>)`](crate::operation::restore_db_cluster_from_snapshot::RestoreDbClusterFromSnapshotOutput::db_cluster): <p>Contains the details of an Amazon Aurora DB cluster or Multi-AZ DB cluster.</p> <p>For an Amazon Aurora DB cluster, this data type is used as a response element in the operations <code>CreateDBCluster</code>, <code>DeleteDBCluster</code>, <code>DescribeDBClusters</code>, <code>FailoverDBCluster</code>, <code>ModifyDBCluster</code>, <code>PromoteReadReplicaDBCluster</code>, <code>RestoreDBClusterFromS3</code>, <code>RestoreDBClusterFromSnapshot</code>, <code>RestoreDBClusterToPointInTime</code>, <code>StartDBCluster</code>, and <code>StopDBCluster</code>.</p> <p>For a Multi-AZ DB cluster, this data type is used as a response element in the operations <code>CreateDBCluster</code>, <code>DeleteDBCluster</code>, <code>DescribeDBClusters</code>, <code>FailoverDBCluster</code>, <code>ModifyDBCluster</code>, <code>RebootDBCluster</code>, <code>RestoreDBClusterFromSnapshot</code>, and <code>RestoreDBClusterToPointInTime</code>.</p> <p>For more information on Amazon Aurora DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html"> What is Amazon Aurora?</a> in the <i>Amazon Aurora User Guide.</i></p> <p>For more information on Multi-AZ DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/multi-az-db-clusters-concepts.html"> Multi-AZ deployments with two readable standby DB instances</a> in the <i>Amazon RDS User Guide.</i></p>
    /// - On failure, responds with [`SdkError<RestoreDBClusterFromSnapshotError>`](crate::operation::restore_db_cluster_from_snapshot::RestoreDBClusterFromSnapshotError)
    pub fn restore_db_cluster_from_snapshot(
        &self,
    ) -> crate::operation::restore_db_cluster_from_snapshot::builders::RestoreDBClusterFromSnapshotFluentBuilder {
        crate::operation::restore_db_cluster_from_snapshot::builders::RestoreDBClusterFromSnapshotFluentBuilder::new(self.handle.clone())
    }
}
