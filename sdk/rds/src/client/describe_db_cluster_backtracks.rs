// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeDBClusterBacktracks`](crate::operation::describe_db_cluster_backtracks::builders::DescribeDBClusterBacktracksFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::describe_db_cluster_backtracks::builders::DescribeDBClusterBacktracksFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`db_cluster_identifier(impl Into<String>)`](crate::operation::describe_db_cluster_backtracks::builders::DescribeDBClusterBacktracksFluentBuilder::db_cluster_identifier) / [`set_db_cluster_identifier(Option<String>)`](crate::operation::describe_db_cluster_backtracks::builders::DescribeDBClusterBacktracksFluentBuilder::set_db_cluster_identifier): <p>The DB cluster identifier of the DB cluster to be described. This parameter is stored as a lowercase string.</p>  <p>Constraints:</p>  <ul>   <li> <p>Must contain from 1 to 63 alphanumeric characters or hyphens.</p> </li>   <li> <p>First character must be a letter.</p> </li>   <li> <p>Can't end with a hyphen or contain two consecutive hyphens.</p> </li>  </ul>  <p>Example: <code>my-cluster1</code> </p>
    ///   - [`backtrack_identifier(impl Into<String>)`](crate::operation::describe_db_cluster_backtracks::builders::DescribeDBClusterBacktracksFluentBuilder::backtrack_identifier) / [`set_backtrack_identifier(Option<String>)`](crate::operation::describe_db_cluster_backtracks::builders::DescribeDBClusterBacktracksFluentBuilder::set_backtrack_identifier): <p>If specified, this value is the backtrack identifier of the backtrack to be described.</p>  <p>Constraints:</p>  <ul>   <li> <p>Must contain a valid universally unique identifier (UUID). For more information about UUIDs, see <a href="http://www.ietf.org/rfc/rfc4122.txt">A Universally Unique Identifier (UUID) URN Namespace</a>.</p> </li>  </ul>  <p>Example: <code>123e4567-e89b-12d3-a456-426655440000</code> </p>
    ///   - [`filters(Vec<Filter>)`](crate::operation::describe_db_cluster_backtracks::builders::DescribeDBClusterBacktracksFluentBuilder::filters) / [`set_filters(Option<Vec<Filter>>)`](crate::operation::describe_db_cluster_backtracks::builders::DescribeDBClusterBacktracksFluentBuilder::set_filters): <p>A filter that specifies one or more DB clusters to describe. Supported filters include the following:</p>  <ul>   <li> <p> <code>db-cluster-backtrack-id</code> - Accepts backtrack identifiers. The results list includes information about only the backtracks identified by these identifiers.</p> </li>   <li> <p> <code>db-cluster-backtrack-status</code> - Accepts any of the following backtrack status values:</p>    <ul>     <li> <p> <code>applying</code> </p> </li>     <li> <p> <code>completed</code> </p> </li>     <li> <p> <code>failed</code> </p> </li>     <li> <p> <code>pending</code> </p> </li>    </ul> <p>The results list includes information about only the backtracks identified by these values.</p> </li>  </ul>
    ///   - [`max_records(i32)`](crate::operation::describe_db_cluster_backtracks::builders::DescribeDBClusterBacktracksFluentBuilder::max_records) / [`set_max_records(Option<i32>)`](crate::operation::describe_db_cluster_backtracks::builders::DescribeDBClusterBacktracksFluentBuilder::set_max_records): <p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so you can retrieve the remaining results.</p>  <p>Default: 100</p>  <p>Constraints: Minimum 20, maximum 100.</p>
    ///   - [`marker(impl Into<String>)`](crate::operation::describe_db_cluster_backtracks::builders::DescribeDBClusterBacktracksFluentBuilder::marker) / [`set_marker(Option<String>)`](crate::operation::describe_db_cluster_backtracks::builders::DescribeDBClusterBacktracksFluentBuilder::set_marker): <p>An optional pagination token provided by a previous <code>DescribeDBClusterBacktracks</code> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.</p>
    /// - On success, responds with [`DescribeDbClusterBacktracksOutput`](crate::operation::describe_db_cluster_backtracks::DescribeDbClusterBacktracksOutput) with field(s):
    ///   - [`marker(Option<String>)`](crate::operation::describe_db_cluster_backtracks::DescribeDbClusterBacktracksOutput::marker): <p>A pagination token that can be used in a later <code>DescribeDBClusterBacktracks</code> request.</p>
    ///   - [`db_cluster_backtracks(Option<Vec<DbClusterBacktrack>>)`](crate::operation::describe_db_cluster_backtracks::DescribeDbClusterBacktracksOutput::db_cluster_backtracks): <p>Contains a list of backtracks for the user.</p>
    /// - On failure, responds with [`SdkError<DescribeDBClusterBacktracksError>`](crate::operation::describe_db_cluster_backtracks::DescribeDBClusterBacktracksError)
    pub fn describe_db_cluster_backtracks(&self) -> crate::operation::describe_db_cluster_backtracks::builders::DescribeDBClusterBacktracksFluentBuilder{
        crate::operation::describe_db_cluster_backtracks::builders::DescribeDBClusterBacktracksFluentBuilder::new(self.handle.clone())
    }
}
