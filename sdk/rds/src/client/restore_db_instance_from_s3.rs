// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`RestoreDBInstanceFromS3`](crate::operation::restore_db_instance_from_s3::builders::RestoreDBInstanceFromS3FluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`db_name(impl Into<String>)`](crate::operation::restore_db_instance_from_s3::builders::RestoreDBInstanceFromS3FluentBuilder::db_name) / [`set_db_name(Option<String>)`](crate::operation::restore_db_instance_from_s3::builders::RestoreDBInstanceFromS3FluentBuilder::set_db_name):<br>required: **false**<br><p>The name of the database to create when the DB instance is created. Follow the naming rules specified in <code>CreateDBInstance</code>.</p><br>
    ///   - [`db_instance_identifier(impl Into<String>)`](crate::operation::restore_db_instance_from_s3::builders::RestoreDBInstanceFromS3FluentBuilder::db_instance_identifier) / [`set_db_instance_identifier(Option<String>)`](crate::operation::restore_db_instance_from_s3::builders::RestoreDBInstanceFromS3FluentBuilder::set_db_instance_identifier):<br>required: **true**<br><p>The DB instance identifier. This parameter is stored as a lowercase string.</p>  <p>Constraints:</p>  <ul>   <li> <p>Must contain from 1 to 63 letters, numbers, or hyphens.</p> </li>   <li> <p>First character must be a letter.</p> </li>   <li> <p>Can't end with a hyphen or contain two consecutive hyphens.</p> </li>  </ul>  <p>Example: <code>mydbinstance</code> </p><br>
    ///   - [`allocated_storage(i32)`](crate::operation::restore_db_instance_from_s3::builders::RestoreDBInstanceFromS3FluentBuilder::allocated_storage) / [`set_allocated_storage(Option<i32>)`](crate::operation::restore_db_instance_from_s3::builders::RestoreDBInstanceFromS3FluentBuilder::set_allocated_storage):<br>required: **false**<br><p>The amount of storage (in gibibytes) to allocate initially for the DB instance. Follow the allocation rules specified in <code>CreateDBInstance</code>.</p> <note>   <p>Be sure to allocate enough storage for your new DB instance so that the restore operation can succeed. You can also allocate additional storage for future growth.</p>  </note><br>
    ///   - [`db_instance_class(impl Into<String>)`](crate::operation::restore_db_instance_from_s3::builders::RestoreDBInstanceFromS3FluentBuilder::db_instance_class) / [`set_db_instance_class(Option<String>)`](crate::operation::restore_db_instance_from_s3::builders::RestoreDBInstanceFromS3FluentBuilder::set_db_instance_class):<br>required: **true**<br><p>The compute and memory capacity of the DB instance, for example db.m4.large. Not all DB instance classes are available in all Amazon Web Services Regions, or for all database engines. For the full list of DB instance classes, and availability for your engine, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html">DB Instance Class</a> in the <i>Amazon RDS User Guide.</i> </p>  <p>Importing from Amazon S3 isn't supported on the db.t2.micro DB instance class.</p><br>
    ///   - [`engine(impl Into<String>)`](crate::operation::restore_db_instance_from_s3::builders::RestoreDBInstanceFromS3FluentBuilder::engine) / [`set_engine(Option<String>)`](crate::operation::restore_db_instance_from_s3::builders::RestoreDBInstanceFromS3FluentBuilder::set_engine):<br>required: **true**<br><p>The name of the database engine to be used for this instance.</p>  <p>Valid Values: <code>mysql</code> </p><br>
    ///   - [`master_username(impl Into<String>)`](crate::operation::restore_db_instance_from_s3::builders::RestoreDBInstanceFromS3FluentBuilder::master_username) / [`set_master_username(Option<String>)`](crate::operation::restore_db_instance_from_s3::builders::RestoreDBInstanceFromS3FluentBuilder::set_master_username):<br>required: **false**<br><p>The name for the master user.</p>  <p>Constraints:</p>  <ul>   <li> <p>Must be 1 to 16 letters or numbers.</p> </li>   <li> <p>First character must be a letter.</p> </li>   <li> <p>Can't be a reserved word for the chosen database engine.</p> </li>  </ul><br>
    ///   - [`master_user_password(impl Into<String>)`](crate::operation::restore_db_instance_from_s3::builders::RestoreDBInstanceFromS3FluentBuilder::master_user_password) / [`set_master_user_password(Option<String>)`](crate::operation::restore_db_instance_from_s3::builders::RestoreDBInstanceFromS3FluentBuilder::set_master_user_password):<br>required: **false**<br><p>The password for the master user. The password can include any printable ASCII character except "/", """, or "@".</p>  <p>Constraints: Can't be specified if <code>ManageMasterUserPassword</code> is turned on.</p>  <p> <b>MariaDB</b> </p>  <p>Constraints: Must contain from 8 to 41 characters.</p>  <p> <b>Microsoft SQL Server</b> </p>  <p>Constraints: Must contain from 8 to 128 characters.</p>  <p> <b>MySQL</b> </p>  <p>Constraints: Must contain from 8 to 41 characters.</p>  <p> <b>Oracle</b> </p>  <p>Constraints: Must contain from 8 to 30 characters.</p>  <p> <b>PostgreSQL</b> </p>  <p>Constraints: Must contain from 8 to 128 characters.</p><br>
    ///   - [`db_security_groups(impl Into<String>)`](crate::operation::restore_db_instance_from_s3::builders::RestoreDBInstanceFromS3FluentBuilder::db_security_groups) / [`set_db_security_groups(Option<Vec::<String>>)`](crate::operation::restore_db_instance_from_s3::builders::RestoreDBInstanceFromS3FluentBuilder::set_db_security_groups):<br>required: **false**<br><p>A list of DB security groups to associate with this DB instance.</p>  <p>Default: The default DB security group for the database engine.</p><br>
    ///   - [`vpc_security_group_ids(impl Into<String>)`](crate::operation::restore_db_instance_from_s3::builders::RestoreDBInstanceFromS3FluentBuilder::vpc_security_group_ids) / [`set_vpc_security_group_ids(Option<Vec::<String>>)`](crate::operation::restore_db_instance_from_s3::builders::RestoreDBInstanceFromS3FluentBuilder::set_vpc_security_group_ids):<br>required: **false**<br><p>A list of VPC security groups to associate with this DB instance.</p><br>
    ///   - [`availability_zone(impl Into<String>)`](crate::operation::restore_db_instance_from_s3::builders::RestoreDBInstanceFromS3FluentBuilder::availability_zone) / [`set_availability_zone(Option<String>)`](crate::operation::restore_db_instance_from_s3::builders::RestoreDBInstanceFromS3FluentBuilder::set_availability_zone):<br>required: **false**<br><p>The Availability Zone that the DB instance is created in. For information about Amazon Web Services Regions and Availability Zones, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html">Regions and Availability Zones</a> in the <i>Amazon RDS User Guide.</i> </p>  <p>Default: A random, system-chosen Availability Zone in the endpoint's Amazon Web Services Region.</p>  <p>Example: <code>us-east-1d</code> </p>  <p>Constraint: The <code>AvailabilityZone</code> parameter can't be specified if the DB instance is a Multi-AZ deployment. The specified Availability Zone must be in the same Amazon Web Services Region as the current endpoint.</p><br>
    ///   - [`db_subnet_group_name(impl Into<String>)`](crate::operation::restore_db_instance_from_s3::builders::RestoreDBInstanceFromS3FluentBuilder::db_subnet_group_name) / [`set_db_subnet_group_name(Option<String>)`](crate::operation::restore_db_instance_from_s3::builders::RestoreDBInstanceFromS3FluentBuilder::set_db_subnet_group_name):<br>required: **false**<br><p>A DB subnet group to associate with this DB instance.</p>  <p>Constraints: If supplied, must match the name of an existing DBSubnetGroup.</p>  <p>Example: <code>mydbsubnetgroup</code> </p><br>
    ///   - [`preferred_maintenance_window(impl Into<String>)`](crate::operation::restore_db_instance_from_s3::builders::RestoreDBInstanceFromS3FluentBuilder::preferred_maintenance_window) / [`set_preferred_maintenance_window(Option<String>)`](crate::operation::restore_db_instance_from_s3::builders::RestoreDBInstanceFromS3FluentBuilder::set_preferred_maintenance_window):<br>required: **false**<br><p>The time range each week during which system maintenance can occur, in Universal Coordinated Time (UTC). For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_UpgradeDBInstance.Maintenance.html#Concepts.DBMaintenance">Amazon RDS Maintenance Window</a> in the <i>Amazon RDS User Guide.</i> </p>  <p>Constraints:</p>  <ul>   <li> <p>Must be in the format <code>ddd:hh24:mi-ddd:hh24:mi</code>.</p> </li>   <li> <p>Valid Days: Mon, Tue, Wed, Thu, Fri, Sat, Sun.</p> </li>   <li> <p>Must be in Universal Coordinated Time (UTC).</p> </li>   <li> <p>Must not conflict with the preferred backup window.</p> </li>   <li> <p>Must be at least 30 minutes.</p> </li>  </ul><br>
    ///   - [`db_parameter_group_name(impl Into<String>)`](crate::operation::restore_db_instance_from_s3::builders::RestoreDBInstanceFromS3FluentBuilder::db_parameter_group_name) / [`set_db_parameter_group_name(Option<String>)`](crate::operation::restore_db_instance_from_s3::builders::RestoreDBInstanceFromS3FluentBuilder::set_db_parameter_group_name):<br>required: **false**<br><p>The name of the DB parameter group to associate with this DB instance.</p>  <p>If you do not specify a value for <code>DBParameterGroupName</code>, then the default <code>DBParameterGroup</code> for the specified DB engine is used.</p><br>
    ///   - [`backup_retention_period(i32)`](crate::operation::restore_db_instance_from_s3::builders::RestoreDBInstanceFromS3FluentBuilder::backup_retention_period) / [`set_backup_retention_period(Option<i32>)`](crate::operation::restore_db_instance_from_s3::builders::RestoreDBInstanceFromS3FluentBuilder::set_backup_retention_period):<br>required: **false**<br><p>The number of days for which automated backups are retained. Setting this parameter to a positive number enables backups. For more information, see <code>CreateDBInstance</code>.</p><br>
    ///   - [`preferred_backup_window(impl Into<String>)`](crate::operation::restore_db_instance_from_s3::builders::RestoreDBInstanceFromS3FluentBuilder::preferred_backup_window) / [`set_preferred_backup_window(Option<String>)`](crate::operation::restore_db_instance_from_s3::builders::RestoreDBInstanceFromS3FluentBuilder::set_preferred_backup_window):<br>required: **false**<br><p>The time range each day during which automated backups are created if automated backups are enabled. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_WorkingWithAutomatedBackups.html#USER_WorkingWithAutomatedBackups.BackupWindow">Backup window</a> in the <i>Amazon RDS User Guide.</i> </p>  <p>Constraints:</p>  <ul>   <li> <p>Must be in the format <code>hh24:mi-hh24:mi</code>.</p> </li>   <li> <p>Must be in Universal Coordinated Time (UTC).</p> </li>   <li> <p>Must not conflict with the preferred maintenance window.</p> </li>   <li> <p>Must be at least 30 minutes.</p> </li>  </ul><br>
    ///   - [`port(i32)`](crate::operation::restore_db_instance_from_s3::builders::RestoreDBInstanceFromS3FluentBuilder::port) / [`set_port(Option<i32>)`](crate::operation::restore_db_instance_from_s3::builders::RestoreDBInstanceFromS3FluentBuilder::set_port):<br>required: **false**<br><p>The port number on which the database accepts connections.</p>  <p>Type: Integer</p>  <p>Valid Values: <code>1150</code>-<code>65535</code> </p>  <p>Default: <code>3306</code> </p><br>
    ///   - [`multi_az(bool)`](crate::operation::restore_db_instance_from_s3::builders::RestoreDBInstanceFromS3FluentBuilder::multi_az) / [`set_multi_az(Option<bool>)`](crate::operation::restore_db_instance_from_s3::builders::RestoreDBInstanceFromS3FluentBuilder::set_multi_az):<br>required: **false**<br><p>Specifies whether the DB instance is a Multi-AZ deployment. If the DB instance is a Multi-AZ deployment, you can't set the <code>AvailabilityZone</code> parameter.</p><br>
    ///   - [`engine_version(impl Into<String>)`](crate::operation::restore_db_instance_from_s3::builders::RestoreDBInstanceFromS3FluentBuilder::engine_version) / [`set_engine_version(Option<String>)`](crate::operation::restore_db_instance_from_s3::builders::RestoreDBInstanceFromS3FluentBuilder::set_engine_version):<br>required: **false**<br><p>The version number of the database engine to use. Choose the latest minor version of your database engine. For information about engine versions, see <code>CreateDBInstance</code>, or call <code>DescribeDBEngineVersions</code>.</p><br>
    ///   - [`auto_minor_version_upgrade(bool)`](crate::operation::restore_db_instance_from_s3::builders::RestoreDBInstanceFromS3FluentBuilder::auto_minor_version_upgrade) / [`set_auto_minor_version_upgrade(Option<bool>)`](crate::operation::restore_db_instance_from_s3::builders::RestoreDBInstanceFromS3FluentBuilder::set_auto_minor_version_upgrade):<br>required: **false**<br><p>Specifies whether to automatically apply minor engine upgrades to the DB instance during the maintenance window. By default, minor engine upgrades are not applied automatically.</p><br>
    ///   - [`license_model(impl Into<String>)`](crate::operation::restore_db_instance_from_s3::builders::RestoreDBInstanceFromS3FluentBuilder::license_model) / [`set_license_model(Option<String>)`](crate::operation::restore_db_instance_from_s3::builders::RestoreDBInstanceFromS3FluentBuilder::set_license_model):<br>required: **false**<br><p>The license model for this DB instance. Use <code>general-public-license</code>.</p><br>
    ///   - [`iops(i32)`](crate::operation::restore_db_instance_from_s3::builders::RestoreDBInstanceFromS3FluentBuilder::iops) / [`set_iops(Option<i32>)`](crate::operation::restore_db_instance_from_s3::builders::RestoreDBInstanceFromS3FluentBuilder::set_iops):<br>required: **false**<br><p>The amount of Provisioned IOPS (input/output operations per second) to allocate initially for the DB instance. For information about valid IOPS values, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Storage.html#USER_PIOPS">Amazon RDS Provisioned IOPS storage</a> in the <i>Amazon RDS User Guide.</i> </p><br>
    ///   - [`option_group_name(impl Into<String>)`](crate::operation::restore_db_instance_from_s3::builders::RestoreDBInstanceFromS3FluentBuilder::option_group_name) / [`set_option_group_name(Option<String>)`](crate::operation::restore_db_instance_from_s3::builders::RestoreDBInstanceFromS3FluentBuilder::set_option_group_name):<br>required: **false**<br><p>The name of the option group to associate with this DB instance. If this argument is omitted, the default option group for the specified engine is used.</p><br>
    ///   - [`publicly_accessible(bool)`](crate::operation::restore_db_instance_from_s3::builders::RestoreDBInstanceFromS3FluentBuilder::publicly_accessible) / [`set_publicly_accessible(Option<bool>)`](crate::operation::restore_db_instance_from_s3::builders::RestoreDBInstanceFromS3FluentBuilder::set_publicly_accessible):<br>required: **false**<br><p>Specifies whether the DB instance is publicly accessible.</p>  <p>When the DB instance is publicly accessible, its Domain Name System (DNS) endpoint resolves to the private IP address from within the DB instance's virtual private cloud (VPC). It resolves to the public IP address from outside of the DB instance's VPC. Access to the DB instance is ultimately controlled by the security group it uses. That public access is not permitted if the security group assigned to the DB instance doesn't permit it.</p>  <p>When the DB instance isn't publicly accessible, it is an internal DB instance with a DNS name that resolves to a private IP address.</p>  <p>For more information, see <code>CreateDBInstance</code>.</p><br>
    ///   - [`tags(Tag)`](crate::operation::restore_db_instance_from_s3::builders::RestoreDBInstanceFromS3FluentBuilder::tags) / [`set_tags(Option<Vec::<Tag>>)`](crate::operation::restore_db_instance_from_s3::builders::RestoreDBInstanceFromS3FluentBuilder::set_tags):<br>required: **false**<br><p>A list of tags to associate with this DB instance. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html">Tagging Amazon RDS Resources</a> in the <i>Amazon RDS User Guide.</i> </p><br>
    ///   - [`storage_type(impl Into<String>)`](crate::operation::restore_db_instance_from_s3::builders::RestoreDBInstanceFromS3FluentBuilder::storage_type) / [`set_storage_type(Option<String>)`](crate::operation::restore_db_instance_from_s3::builders::RestoreDBInstanceFromS3FluentBuilder::set_storage_type):<br>required: **false**<br><p>Specifies the storage type to be associated with the DB instance.</p>  <p>Valid Values: <code>gp2 | gp3 | io1 | standard</code> </p>  <p>If you specify <code>io1</code> or <code>gp3</code>, you must also include a value for the <code>Iops</code> parameter.</p>  <p>Default: <code>io1</code> if the <code>Iops</code> parameter is specified; otherwise <code>gp2</code> </p><br>
    ///   - [`storage_encrypted(bool)`](crate::operation::restore_db_instance_from_s3::builders::RestoreDBInstanceFromS3FluentBuilder::storage_encrypted) / [`set_storage_encrypted(Option<bool>)`](crate::operation::restore_db_instance_from_s3::builders::RestoreDBInstanceFromS3FluentBuilder::set_storage_encrypted):<br>required: **false**<br><p>Specifies whether the new DB instance is encrypted or not.</p><br>
    ///   - [`kms_key_id(impl Into<String>)`](crate::operation::restore_db_instance_from_s3::builders::RestoreDBInstanceFromS3FluentBuilder::kms_key_id) / [`set_kms_key_id(Option<String>)`](crate::operation::restore_db_instance_from_s3::builders::RestoreDBInstanceFromS3FluentBuilder::set_kms_key_id):<br>required: **false**<br><p>The Amazon Web Services KMS key identifier for an encrypted DB instance.</p>  <p>The Amazon Web Services KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the KMS key. To use a KMS key in a different Amazon Web Services account, specify the key ARN or alias ARN.</p>  <p>If the <code>StorageEncrypted</code> parameter is enabled, and you do not specify a value for the <code>KmsKeyId</code> parameter, then Amazon RDS will use your default KMS key. There is a default KMS key for your Amazon Web Services account. Your Amazon Web Services account has a different default KMS key for each Amazon Web Services Region.</p><br>
    ///   - [`copy_tags_to_snapshot(bool)`](crate::operation::restore_db_instance_from_s3::builders::RestoreDBInstanceFromS3FluentBuilder::copy_tags_to_snapshot) / [`set_copy_tags_to_snapshot(Option<bool>)`](crate::operation::restore_db_instance_from_s3::builders::RestoreDBInstanceFromS3FluentBuilder::set_copy_tags_to_snapshot):<br>required: **false**<br><p>Specifies whether to copy all tags from the DB instance to snapshots of the DB instance. By default, tags are not copied.</p><br>
    ///   - [`monitoring_interval(i32)`](crate::operation::restore_db_instance_from_s3::builders::RestoreDBInstanceFromS3FluentBuilder::monitoring_interval) / [`set_monitoring_interval(Option<i32>)`](crate::operation::restore_db_instance_from_s3::builders::RestoreDBInstanceFromS3FluentBuilder::set_monitoring_interval):<br>required: **false**<br><p>The interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB instance. To disable collecting Enhanced Monitoring metrics, specify 0.</p>  <p>If <code>MonitoringRoleArn</code> is specified, then you must also set <code>MonitoringInterval</code> to a value other than 0.</p>  <p>Valid Values: 0, 1, 5, 10, 15, 30, 60</p>  <p>Default: <code>0</code> </p><br>
    ///   - [`monitoring_role_arn(impl Into<String>)`](crate::operation::restore_db_instance_from_s3::builders::RestoreDBInstanceFromS3FluentBuilder::monitoring_role_arn) / [`set_monitoring_role_arn(Option<String>)`](crate::operation::restore_db_instance_from_s3::builders::RestoreDBInstanceFromS3FluentBuilder::set_monitoring_role_arn):<br>required: **false**<br><p>The ARN for the IAM role that permits RDS to send enhanced monitoring metrics to Amazon CloudWatch Logs. For example, <code>arn:aws:iam:123456789012:role/emaccess</code>. For information on creating a monitoring role, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Monitoring.OS.html#USER_Monitoring.OS.Enabling">Setting Up and Enabling Enhanced Monitoring</a> in the <i>Amazon RDS User Guide.</i> </p>  <p>If <code>MonitoringInterval</code> is set to a value other than 0, then you must supply a <code>MonitoringRoleArn</code> value.</p><br>
    ///   - [`enable_iam_database_authentication(bool)`](crate::operation::restore_db_instance_from_s3::builders::RestoreDBInstanceFromS3FluentBuilder::enable_iam_database_authentication) / [`set_enable_iam_database_authentication(Option<bool>)`](crate::operation::restore_db_instance_from_s3::builders::RestoreDBInstanceFromS3FluentBuilder::set_enable_iam_database_authentication):<br>required: **false**<br><p>Specifies whether to enable mapping of Amazon Web Services Identity and Access Management (IAM) accounts to database accounts. By default, mapping isn't enabled.</p>  <p>For more information about IAM database authentication, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.IAMDBAuth.html"> IAM Database Authentication for MySQL and PostgreSQL</a> in the <i>Amazon RDS User Guide.</i> </p><br>
    ///   - [`source_engine(impl Into<String>)`](crate::operation::restore_db_instance_from_s3::builders::RestoreDBInstanceFromS3FluentBuilder::source_engine) / [`set_source_engine(Option<String>)`](crate::operation::restore_db_instance_from_s3::builders::RestoreDBInstanceFromS3FluentBuilder::set_source_engine):<br>required: **true**<br><p>The name of the engine of your source database.</p>  <p>Valid Values: <code>mysql</code> </p><br>
    ///   - [`source_engine_version(impl Into<String>)`](crate::operation::restore_db_instance_from_s3::builders::RestoreDBInstanceFromS3FluentBuilder::source_engine_version) / [`set_source_engine_version(Option<String>)`](crate::operation::restore_db_instance_from_s3::builders::RestoreDBInstanceFromS3FluentBuilder::set_source_engine_version):<br>required: **true**<br><p>The version of the database that the backup files were created from.</p>  <p>MySQL versions 5.6 and 5.7 are supported.</p>  <p>Example: <code>5.6.40</code> </p><br>
    ///   - [`s3_bucket_name(impl Into<String>)`](crate::operation::restore_db_instance_from_s3::builders::RestoreDBInstanceFromS3FluentBuilder::s3_bucket_name) / [`set_s3_bucket_name(Option<String>)`](crate::operation::restore_db_instance_from_s3::builders::RestoreDBInstanceFromS3FluentBuilder::set_s3_bucket_name):<br>required: **true**<br><p>The name of your Amazon S3 bucket that contains your database backup file.</p><br>
    ///   - [`s3_prefix(impl Into<String>)`](crate::operation::restore_db_instance_from_s3::builders::RestoreDBInstanceFromS3FluentBuilder::s3_prefix) / [`set_s3_prefix(Option<String>)`](crate::operation::restore_db_instance_from_s3::builders::RestoreDBInstanceFromS3FluentBuilder::set_s3_prefix):<br>required: **false**<br><p>The prefix of your Amazon S3 bucket.</p><br>
    ///   - [`s3_ingestion_role_arn(impl Into<String>)`](crate::operation::restore_db_instance_from_s3::builders::RestoreDBInstanceFromS3FluentBuilder::s3_ingestion_role_arn) / [`set_s3_ingestion_role_arn(Option<String>)`](crate::operation::restore_db_instance_from_s3::builders::RestoreDBInstanceFromS3FluentBuilder::set_s3_ingestion_role_arn):<br>required: **true**<br><p>An Amazon Web Services Identity and Access Management (IAM) role to allow Amazon RDS to access your Amazon S3 bucket.</p><br>
    ///   - [`enable_performance_insights(bool)`](crate::operation::restore_db_instance_from_s3::builders::RestoreDBInstanceFromS3FluentBuilder::enable_performance_insights) / [`set_enable_performance_insights(Option<bool>)`](crate::operation::restore_db_instance_from_s3::builders::RestoreDBInstanceFromS3FluentBuilder::set_enable_performance_insights):<br>required: **false**<br><p>Specifies whether to enable Performance Insights for the DB instance.</p>  <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_PerfInsights.html">Using Amazon Performance Insights</a> in the <i>Amazon RDS User Guide</i>.</p><br>
    ///   - [`performance_insights_kms_key_id(impl Into<String>)`](crate::operation::restore_db_instance_from_s3::builders::RestoreDBInstanceFromS3FluentBuilder::performance_insights_kms_key_id) / [`set_performance_insights_kms_key_id(Option<String>)`](crate::operation::restore_db_instance_from_s3::builders::RestoreDBInstanceFromS3FluentBuilder::set_performance_insights_kms_key_id):<br>required: **false**<br><p>The Amazon Web Services KMS key identifier for encryption of Performance Insights data.</p>  <p>The Amazon Web Services KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the KMS key.</p>  <p>If you do not specify a value for <code>PerformanceInsightsKMSKeyId</code>, then Amazon RDS uses your default KMS key. There is a default KMS key for your Amazon Web Services account. Your Amazon Web Services account has a different default KMS key for each Amazon Web Services Region.</p><br>
    ///   - [`performance_insights_retention_period(i32)`](crate::operation::restore_db_instance_from_s3::builders::RestoreDBInstanceFromS3FluentBuilder::performance_insights_retention_period) / [`set_performance_insights_retention_period(Option<i32>)`](crate::operation::restore_db_instance_from_s3::builders::RestoreDBInstanceFromS3FluentBuilder::set_performance_insights_retention_period):<br>required: **false**<br><p>The number of days to retain Performance Insights data. The default is 7 days. The following values are valid:</p>  <ul>   <li> <p>7</p> </li>   <li> <p> <i>month</i> * 31, where <i>month</i> is a number of months from 1-23</p> </li>   <li> <p>731</p> </li>  </ul>  <p>For example, the following values are valid:</p>  <ul>   <li> <p>93 (3 months * 31)</p> </li>   <li> <p>341 (11 months * 31)</p> </li>   <li> <p>589 (19 months * 31)</p> </li>   <li> <p>731</p> </li>  </ul>  <p>If you specify a retention period such as 94, which isn't a valid value, RDS issues an error.</p><br>
    ///   - [`enable_cloudwatch_logs_exports(impl Into<String>)`](crate::operation::restore_db_instance_from_s3::builders::RestoreDBInstanceFromS3FluentBuilder::enable_cloudwatch_logs_exports) / [`set_enable_cloudwatch_logs_exports(Option<Vec::<String>>)`](crate::operation::restore_db_instance_from_s3::builders::RestoreDBInstanceFromS3FluentBuilder::set_enable_cloudwatch_logs_exports):<br>required: **false**<br><p>The list of logs that the restored DB instance is to export to CloudWatch Logs. The values in the list depend on the DB engine being used. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_LogAccess.html#USER_LogAccess.Procedural.UploadtoCloudWatch">Publishing Database Logs to Amazon CloudWatch Logs</a> in the <i>Amazon RDS User Guide</i>.</p><br>
    ///   - [`processor_features(ProcessorFeature)`](crate::operation::restore_db_instance_from_s3::builders::RestoreDBInstanceFromS3FluentBuilder::processor_features) / [`set_processor_features(Option<Vec::<ProcessorFeature>>)`](crate::operation::restore_db_instance_from_s3::builders::RestoreDBInstanceFromS3FluentBuilder::set_processor_features):<br>required: **false**<br><p>The number of CPU cores and the number of threads per core for the DB instance class of the DB instance.</p><br>
    ///   - [`use_default_processor_features(bool)`](crate::operation::restore_db_instance_from_s3::builders::RestoreDBInstanceFromS3FluentBuilder::use_default_processor_features) / [`set_use_default_processor_features(Option<bool>)`](crate::operation::restore_db_instance_from_s3::builders::RestoreDBInstanceFromS3FluentBuilder::set_use_default_processor_features):<br>required: **false**<br><p>Specifies whether the DB instance class of the DB instance uses its default processor features.</p><br>
    ///   - [`deletion_protection(bool)`](crate::operation::restore_db_instance_from_s3::builders::RestoreDBInstanceFromS3FluentBuilder::deletion_protection) / [`set_deletion_protection(Option<bool>)`](crate::operation::restore_db_instance_from_s3::builders::RestoreDBInstanceFromS3FluentBuilder::set_deletion_protection):<br>required: **false**<br><p>Specifies whether to enable deletion protection for the DB instance. The database can't be deleted when deletion protection is enabled. By default, deletion protection isn't enabled. For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_DeleteInstance.html"> Deleting a DB Instance</a>.</p><br>
    ///   - [`max_allocated_storage(i32)`](crate::operation::restore_db_instance_from_s3::builders::RestoreDBInstanceFromS3FluentBuilder::max_allocated_storage) / [`set_max_allocated_storage(Option<i32>)`](crate::operation::restore_db_instance_from_s3::builders::RestoreDBInstanceFromS3FluentBuilder::set_max_allocated_storage):<br>required: **false**<br><p>The upper limit in gibibytes (GiB) to which Amazon RDS can automatically scale the storage of the DB instance.</p>  <p>For more information about this setting, including limitations that apply to it, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_PIOPS.StorageTypes.html#USER_PIOPS.Autoscaling"> Managing capacity automatically with Amazon RDS storage autoscaling</a> in the <i>Amazon RDS User Guide</i>.</p><br>
    ///   - [`network_type(impl Into<String>)`](crate::operation::restore_db_instance_from_s3::builders::RestoreDBInstanceFromS3FluentBuilder::network_type) / [`set_network_type(Option<String>)`](crate::operation::restore_db_instance_from_s3::builders::RestoreDBInstanceFromS3FluentBuilder::set_network_type):<br>required: **false**<br><p>The network type of the DB instance.</p>  <p>Valid Values:</p>  <ul>   <li> <p> <code>IPV4</code> </p> </li>   <li> <p> <code>DUAL</code> </p> </li>  </ul>  <p>The network type is determined by the <code>DBSubnetGroup</code> specified for the DB instance. A <code>DBSubnetGroup</code> can support only the IPv4 protocol or the IPv4 and the IPv6 protocols (<code>DUAL</code>).</p>  <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_VPC.WorkingWithRDSInstanceinaVPC.html"> Working with a DB instance in a VPC</a> in the <i>Amazon RDS User Guide.</i> </p><br>
    ///   - [`storage_throughput(i32)`](crate::operation::restore_db_instance_from_s3::builders::RestoreDBInstanceFromS3FluentBuilder::storage_throughput) / [`set_storage_throughput(Option<i32>)`](crate::operation::restore_db_instance_from_s3::builders::RestoreDBInstanceFromS3FluentBuilder::set_storage_throughput):<br>required: **false**<br><p>Specifies the storage throughput value for the DB instance.</p>  <p>This setting doesn't apply to RDS Custom or Amazon Aurora.</p><br>
    ///   - [`manage_master_user_password(bool)`](crate::operation::restore_db_instance_from_s3::builders::RestoreDBInstanceFromS3FluentBuilder::manage_master_user_password) / [`set_manage_master_user_password(Option<bool>)`](crate::operation::restore_db_instance_from_s3::builders::RestoreDBInstanceFromS3FluentBuilder::set_manage_master_user_password):<br>required: **false**<br><p>Specifies whether to manage the master user password with Amazon Web Services Secrets Manager.</p>  <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-secrets-manager.html">Password management with Amazon Web Services Secrets Manager</a> in the <i>Amazon RDS User Guide.</i> </p>  <p>Constraints:</p>  <ul>   <li> <p>Can't manage the master user password with Amazon Web Services Secrets Manager if <code>MasterUserPassword</code> is specified.</p> </li>  </ul><br>
    ///   - [`master_user_secret_kms_key_id(impl Into<String>)`](crate::operation::restore_db_instance_from_s3::builders::RestoreDBInstanceFromS3FluentBuilder::master_user_secret_kms_key_id) / [`set_master_user_secret_kms_key_id(Option<String>)`](crate::operation::restore_db_instance_from_s3::builders::RestoreDBInstanceFromS3FluentBuilder::set_master_user_secret_kms_key_id):<br>required: **false**<br><p>The Amazon Web Services KMS key identifier to encrypt a secret that is automatically generated and managed in Amazon Web Services Secrets Manager.</p>  <p>This setting is valid only if the master user password is managed by RDS in Amazon Web Services Secrets Manager for the DB instance.</p>  <p>The Amazon Web Services KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the KMS key. To use a KMS key in a different Amazon Web Services account, specify the key ARN or alias ARN.</p>  <p>If you don't specify <code>MasterUserSecretKmsKeyId</code>, then the <code>aws/secretsmanager</code> KMS key is used to encrypt the secret. If the secret is in a different Amazon Web Services account, then you can't use the <code>aws/secretsmanager</code> KMS key to encrypt the secret, and you must use a customer managed KMS key.</p>  <p>There is a default KMS key for your Amazon Web Services account. Your Amazon Web Services account has a different default KMS key for each Amazon Web Services Region.</p><br>
    ///   - [`dedicated_log_volume(bool)`](crate::operation::restore_db_instance_from_s3::builders::RestoreDBInstanceFromS3FluentBuilder::dedicated_log_volume) / [`set_dedicated_log_volume(Option<bool>)`](crate::operation::restore_db_instance_from_s3::builders::RestoreDBInstanceFromS3FluentBuilder::set_dedicated_log_volume):<br>required: **false**<br><p>Specifies whether to enable a dedicated log volume (DLV) for the DB instance.</p><br>
    /// - On success, responds with [`RestoreDbInstanceFromS3Output`](crate::operation::restore_db_instance_from_s3::RestoreDbInstanceFromS3Output) with field(s):
    ///   - [`db_instance(Option<DbInstance>)`](crate::operation::restore_db_instance_from_s3::RestoreDbInstanceFromS3Output::db_instance): <p>Contains the details of an Amazon RDS DB instance.</p>  <p>This data type is used as a response element in the operations <code>CreateDBInstance</code>, <code>CreateDBInstanceReadReplica</code>, <code>DeleteDBInstance</code>, <code>DescribeDBInstances</code>, <code>ModifyDBInstance</code>, <code>PromoteReadReplica</code>, <code>RebootDBInstance</code>, <code>RestoreDBInstanceFromDBSnapshot</code>, <code>RestoreDBInstanceFromS3</code>, <code>RestoreDBInstanceToPointInTime</code>, <code>StartDBInstance</code>, and <code>StopDBInstance</code>.</p>
    /// - On failure, responds with [`SdkError<RestoreDBInstanceFromS3Error>`](crate::operation::restore_db_instance_from_s3::RestoreDBInstanceFromS3Error)
    pub fn restore_db_instance_from_s3(&self) -> crate::operation::restore_db_instance_from_s3::builders::RestoreDBInstanceFromS3FluentBuilder {
        crate::operation::restore_db_instance_from_s3::builders::RestoreDBInstanceFromS3FluentBuilder::new(self.handle.clone())
    }
}
