// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateDBClusterParameterGroup`](crate::client::fluent_builders::CreateDBClusterParameterGroup) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`db_cluster_parameter_group_name(impl Into<String>)`](crate::client::fluent_builders::CreateDBClusterParameterGroup::db_cluster_parameter_group_name) / [`set_db_cluster_parameter_group_name(Option<String>)`](crate::client::fluent_builders::CreateDBClusterParameterGroup::set_db_cluster_parameter_group_name): <p>The name of the DB cluster parameter group.</p>  <p>Constraints:</p>  <ul>   <li> <p>Must not match the name of an existing DB cluster parameter group.</p> </li>  </ul> <note>   <p>This value is stored as a lowercase string.</p>  </note>
    ///   - [`db_parameter_group_family(impl Into<String>)`](crate::client::fluent_builders::CreateDBClusterParameterGroup::db_parameter_group_family) / [`set_db_parameter_group_family(Option<String>)`](crate::client::fluent_builders::CreateDBClusterParameterGroup::set_db_parameter_group_family): <p>The DB cluster parameter group family name. A DB cluster parameter group can be associated with one and only one DB cluster parameter group family, and can be applied only to a DB cluster running a database engine and engine version compatible with that DB cluster parameter group family.</p>  <p> <b>Aurora MySQL</b> </p>  <p>Example: <code>aurora5.6</code>, <code>aurora-mysql5.7</code>, <code>aurora-mysql8.0</code> </p>  <p> <b>Aurora PostgreSQL</b> </p>  <p>Example: <code>aurora-postgresql9.6</code> </p>  <p> <b>RDS for MySQL</b> </p>  <p>Example: <code>mysql8.0</code> </p>  <p> <b>RDS for PostgreSQL</b> </p>  <p>Example: <code>postgres12</code> </p>  <p>To list all of the available parameter group families for a DB engine, use the following command:</p>  <p> <code>aws rds describe-db-engine-versions --query "DBEngineVersions[].DBParameterGroupFamily" --engine    <engine></engine></code> </p>  <p>For example, to list all of the available parameter group families for the Aurora PostgreSQL DB engine, use the following command:</p>  <p> <code>aws rds describe-db-engine-versions --query "DBEngineVersions[].DBParameterGroupFamily" --engine aurora-postgresql</code> </p> <note>   <p>The output contains duplicates.</p>  </note>  <p>The following are the valid DB engine values:</p>  <ul>   <li> <p> <code>aurora</code> (for MySQL 5.6-compatible Aurora)</p> </li>   <li> <p> <code>aurora-mysql</code> (for MySQL 5.7-compatible and MySQL 8.0-compatible Aurora)</p> </li>   <li> <p> <code>aurora-postgresql</code> </p> </li>   <li> <p> <code>mysql</code> </p> </li>   <li> <p> <code>postgres</code> </p> </li>  </ul>
    ///   - [`description(impl Into<String>)`](crate::client::fluent_builders::CreateDBClusterParameterGroup::description) / [`set_description(Option<String>)`](crate::client::fluent_builders::CreateDBClusterParameterGroup::set_description): <p>The description for the DB cluster parameter group.</p>
    ///   - [`tags(Vec<Tag>)`](crate::client::fluent_builders::CreateDBClusterParameterGroup::tags) / [`set_tags(Option<Vec<Tag>>)`](crate::client::fluent_builders::CreateDBClusterParameterGroup::set_tags): <p>Tags to assign to the DB cluster parameter group.</p>
    /// - On success, responds with [`CreateDbClusterParameterGroupOutput`](crate::output::CreateDbClusterParameterGroupOutput) with field(s):
    ///   - [`db_cluster_parameter_group(Option<DbClusterParameterGroup>)`](crate::output::CreateDbClusterParameterGroupOutput::db_cluster_parameter_group): <p>Contains the details of an Amazon RDS DB cluster parameter group.</p>  <p>This data type is used as a response element in the <code>DescribeDBClusterParameterGroups</code> action.</p>
    /// - On failure, responds with [`SdkError<CreateDBClusterParameterGroupError>`](crate::error::CreateDBClusterParameterGroupError)
    pub fn create_db_cluster_parameter_group(
        &self,
    ) -> crate::client::fluent_builders::CreateDBClusterParameterGroup {
        crate::client::fluent_builders::CreateDBClusterParameterGroup::new(self.handle.clone())
    }
}
