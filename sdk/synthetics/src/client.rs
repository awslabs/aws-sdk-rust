// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[doc(inline)]
pub use aws_smithy_client::Builder;
#[derive(Debug)]
pub(crate) struct Handle {
    pub(crate) client: aws_smithy_client::Client<
        aws_smithy_client::erase::DynConnector,
        aws_smithy_client::erase::DynMiddleware<aws_smithy_client::erase::DynConnector>,
    >,
    pub(crate) conf: crate::Config,
}

/// Client for Synthetics
///
/// Client for invoking operations on Synthetics. Each operation on Synthetics is a method on this
/// this struct. `.send()` MUST be invoked on the generated operations to dispatch the request to the service.
///
/// # Examples
/// **Constructing a client and invoking an operation**
/// ```rust,no_run
/// # async fn docs() {
///     // create a shared configuration. This can be used & shared between multiple service clients.
///     let shared_config = aws_config::load_from_env().await;
///     let client = aws_sdk_synthetics::Client::new(&shared_config);
///     // invoke an operation
///     /* let rsp = client
///         .<operation_name>().
///         .<param>("some value")
///         .send().await; */
/// # }
/// ```
/// **Constructing a client with custom configuration**
/// ```rust,no_run
/// use aws_config::retry::RetryConfig;
/// # async fn docs() {
/// let shared_config = aws_config::load_from_env().await;
/// let config = aws_sdk_synthetics::config::Builder::from(&shared_config)
///   .retry_config(RetryConfig::disabled())
///   .build();
/// let client = aws_sdk_synthetics::Client::from_conf(config);
/// # }
#[derive(std::fmt::Debug)]
pub struct Client {
    handle: std::sync::Arc<Handle>,
}

impl std::clone::Clone for Client {
    fn clone(&self) -> Self {
        Self {
            handle: self.handle.clone(),
        }
    }
}

impl
    From<
        aws_smithy_client::Client<
            aws_smithy_client::erase::DynConnector,
            aws_smithy_client::erase::DynMiddleware<aws_smithy_client::erase::DynConnector>,
        >,
    > for Client
{
    fn from(
        client: aws_smithy_client::Client<
            aws_smithy_client::erase::DynConnector,
            aws_smithy_client::erase::DynMiddleware<aws_smithy_client::erase::DynConnector>,
        >,
    ) -> Self {
        Self::with_config(client, crate::Config::builder().build())
    }
}

impl Client {
    /// Creates a client with the given service configuration.
    pub fn with_config(
        client: aws_smithy_client::Client<
            aws_smithy_client::erase::DynConnector,
            aws_smithy_client::erase::DynMiddleware<aws_smithy_client::erase::DynConnector>,
        >,
        conf: crate::Config,
    ) -> Self {
        Self {
            handle: std::sync::Arc::new(Handle { client, conf }),
        }
    }

    /// Returns the client's configuration.
    pub fn conf(&self) -> &crate::Config {
        &self.handle.conf
    }
}
impl Client {
    /// Constructs a fluent builder for the [`AssociateResource`](crate::client::fluent_builders::AssociateResource) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`group_identifier(impl Into<String>)`](crate::client::fluent_builders::AssociateResource::group_identifier) / [`set_group_identifier(Option<String>)`](crate::client::fluent_builders::AssociateResource::set_group_identifier): <p>Specifies the group. You can specify the group name, the ARN, or the group ID as the <code>GroupIdentifier</code>.</p>
    ///   - [`resource_arn(impl Into<String>)`](crate::client::fluent_builders::AssociateResource::resource_arn) / [`set_resource_arn(Option<String>)`](crate::client::fluent_builders::AssociateResource::set_resource_arn): <p>The ARN of the canary that you want to associate with the specified group.</p>
    /// - On success, responds with [`AssociateResourceOutput`](crate::output::AssociateResourceOutput)

    /// - On failure, responds with [`SdkError<AssociateResourceError>`](crate::error::AssociateResourceError)
    pub fn associate_resource(&self) -> crate::client::fluent_builders::AssociateResource {
        crate::client::fluent_builders::AssociateResource::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`CreateCanary`](crate::client::fluent_builders::CreateCanary) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(impl Into<String>)`](crate::client::fluent_builders::CreateCanary::name) / [`set_name(Option<String>)`](crate::client::fluent_builders::CreateCanary::set_name): <p>The name for this canary. Be sure to give it a descriptive name that distinguishes it from other canaries in your account.</p>  <p>Do not include secrets or proprietary information in your canary names. The canary name makes up part of the canary ARN, and the ARN is included in outbound calls over the internet. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/servicelens_canaries_security.html">Security Considerations for Synthetics Canaries</a>.</p>
    ///   - [`code(CanaryCodeInput)`](crate::client::fluent_builders::CreateCanary::code) / [`set_code(Option<CanaryCodeInput>)`](crate::client::fluent_builders::CreateCanary::set_code): <p>A structure that includes the entry point from which the canary should start running your script. If the script is stored in an S3 bucket, the bucket name, key, and version are also included. </p>
    ///   - [`artifact_s3_location(impl Into<String>)`](crate::client::fluent_builders::CreateCanary::artifact_s3_location) / [`set_artifact_s3_location(Option<String>)`](crate::client::fluent_builders::CreateCanary::set_artifact_s3_location): <p>The location in Amazon S3 where Synthetics stores artifacts from the test runs of this canary. Artifacts include the log file, screenshots, and HAR files. The name of the S3 bucket can't include a period (.).</p>
    ///   - [`execution_role_arn(impl Into<String>)`](crate::client::fluent_builders::CreateCanary::execution_role_arn) / [`set_execution_role_arn(Option<String>)`](crate::client::fluent_builders::CreateCanary::set_execution_role_arn): <p>The ARN of the IAM role to be used to run the canary. This role must already exist, and must include <code>lambda.amazonaws.com</code> as a principal in the trust policy. The role must also have the following permissions:</p>  <ul>   <li> <p> <code>s3:PutObject</code> </p> </li>   <li> <p> <code>s3:GetBucketLocation</code> </p> </li>   <li> <p> <code>s3:ListAllMyBuckets</code> </p> </li>   <li> <p> <code>cloudwatch:PutMetricData</code> </p> </li>   <li> <p> <code>logs:CreateLogGroup</code> </p> </li>   <li> <p> <code>logs:CreateLogStream</code> </p> </li>   <li> <p> <code>logs:PutLogEvents</code> </p> </li>  </ul>
    ///   - [`schedule(CanaryScheduleInput)`](crate::client::fluent_builders::CreateCanary::schedule) / [`set_schedule(Option<CanaryScheduleInput>)`](crate::client::fluent_builders::CreateCanary::set_schedule): <p>A structure that contains information about how often the canary is to run and when these test runs are to stop.</p>
    ///   - [`run_config(CanaryRunConfigInput)`](crate::client::fluent_builders::CreateCanary::run_config) / [`set_run_config(Option<CanaryRunConfigInput>)`](crate::client::fluent_builders::CreateCanary::set_run_config): <p>A structure that contains the configuration for individual canary runs, such as timeout value and environment variables.</p> <important>   <p>The environment variables keys and values are not encrypted. Do not store sensitive information in this field.</p>  </important>
    ///   - [`success_retention_period_in_days(i32)`](crate::client::fluent_builders::CreateCanary::success_retention_period_in_days) / [`set_success_retention_period_in_days(Option<i32>)`](crate::client::fluent_builders::CreateCanary::set_success_retention_period_in_days): <p>The number of days to retain data about successful runs of this canary. If you omit this field, the default of 31 days is used. The valid range is 1 to 455 days.</p>
    ///   - [`failure_retention_period_in_days(i32)`](crate::client::fluent_builders::CreateCanary::failure_retention_period_in_days) / [`set_failure_retention_period_in_days(Option<i32>)`](crate::client::fluent_builders::CreateCanary::set_failure_retention_period_in_days): <p>The number of days to retain data about failed runs of this canary. If you omit this field, the default of 31 days is used. The valid range is 1 to 455 days.</p>
    ///   - [`runtime_version(impl Into<String>)`](crate::client::fluent_builders::CreateCanary::runtime_version) / [`set_runtime_version(Option<String>)`](crate::client::fluent_builders::CreateCanary::set_runtime_version): <p>Specifies the runtime version to use for the canary. For a list of valid runtime versions and more information about runtime versions, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Synthetics_Canaries_Library.html"> Canary Runtime Versions</a>.</p>
    ///   - [`vpc_config(VpcConfigInput)`](crate::client::fluent_builders::CreateCanary::vpc_config) / [`set_vpc_config(Option<VpcConfigInput>)`](crate::client::fluent_builders::CreateCanary::set_vpc_config): <p>If this canary is to test an endpoint in a VPC, this structure contains information about the subnet and security groups of the VPC endpoint. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Synthetics_Canaries_VPC.html"> Running a Canary in a VPC</a>.</p>
    ///   - [`tags(HashMap<String, String>)`](crate::client::fluent_builders::CreateCanary::tags) / [`set_tags(Option<HashMap<String, String>>)`](crate::client::fluent_builders::CreateCanary::set_tags): <p>A list of key-value pairs to associate with the canary. You can associate as many as 50 tags with a canary.</p>  <p>Tags can help you organize and categorize your resources. You can also use them to scope user permissions, by granting a user permission to access or change only the resources that have certain tag values.</p>
    ///   - [`artifact_config(ArtifactConfigInput)`](crate::client::fluent_builders::CreateCanary::artifact_config) / [`set_artifact_config(Option<ArtifactConfigInput>)`](crate::client::fluent_builders::CreateCanary::set_artifact_config): <p>A structure that contains the configuration for canary artifacts, including the encryption-at-rest settings for artifacts that the canary uploads to Amazon S3.</p>
    /// - On success, responds with [`CreateCanaryOutput`](crate::output::CreateCanaryOutput) with field(s):
    ///   - [`canary(Option<Canary>)`](crate::output::CreateCanaryOutput::canary): <p>The full details about the canary you have created.</p>
    /// - On failure, responds with [`SdkError<CreateCanaryError>`](crate::error::CreateCanaryError)
    pub fn create_canary(&self) -> crate::client::fluent_builders::CreateCanary {
        crate::client::fluent_builders::CreateCanary::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`CreateGroup`](crate::client::fluent_builders::CreateGroup) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(impl Into<String>)`](crate::client::fluent_builders::CreateGroup::name) / [`set_name(Option<String>)`](crate::client::fluent_builders::CreateGroup::set_name): <p>The name for the group. It can include any Unicode characters.</p>  <p>The names for all groups in your account, across all Regions, must be unique.</p>
    ///   - [`tags(HashMap<String, String>)`](crate::client::fluent_builders::CreateGroup::tags) / [`set_tags(Option<HashMap<String, String>>)`](crate::client::fluent_builders::CreateGroup::set_tags): <p>A list of key-value pairs to associate with the group. You can associate as many as 50 tags with a group.</p>  <p>Tags can help you organize and categorize your resources. You can also use them to scope user permissions, by granting a user permission to access or change only the resources that have certain tag values.</p>
    /// - On success, responds with [`CreateGroupOutput`](crate::output::CreateGroupOutput) with field(s):
    ///   - [`group(Option<Group>)`](crate::output::CreateGroupOutput::group): <p>A structure that contains information about the group that was just created.</p>
    /// - On failure, responds with [`SdkError<CreateGroupError>`](crate::error::CreateGroupError)
    pub fn create_group(&self) -> crate::client::fluent_builders::CreateGroup {
        crate::client::fluent_builders::CreateGroup::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteCanary`](crate::client::fluent_builders::DeleteCanary) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(impl Into<String>)`](crate::client::fluent_builders::DeleteCanary::name) / [`set_name(Option<String>)`](crate::client::fluent_builders::DeleteCanary::set_name): <p>The name of the canary that you want to delete. To find the names of your canaries, use <a href="https://docs.aws.amazon.com/AmazonSynthetics/latest/APIReference/API_DescribeCanaries.html">DescribeCanaries</a>.</p>
    ///   - [`delete_lambda(bool)`](crate::client::fluent_builders::DeleteCanary::delete_lambda) / [`set_delete_lambda(bool)`](crate::client::fluent_builders::DeleteCanary::set_delete_lambda): <p>Specifies whether to also delete the Lambda functions and layers used by this canary. The default is false.</p>  <p>Type: Boolean</p>
    /// - On success, responds with [`DeleteCanaryOutput`](crate::output::DeleteCanaryOutput)

    /// - On failure, responds with [`SdkError<DeleteCanaryError>`](crate::error::DeleteCanaryError)
    pub fn delete_canary(&self) -> crate::client::fluent_builders::DeleteCanary {
        crate::client::fluent_builders::DeleteCanary::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DeleteGroup`](crate::client::fluent_builders::DeleteGroup) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`group_identifier(impl Into<String>)`](crate::client::fluent_builders::DeleteGroup::group_identifier) / [`set_group_identifier(Option<String>)`](crate::client::fluent_builders::DeleteGroup::set_group_identifier): <p>Specifies which group to delete. You can specify the group name, the ARN, or the group ID as the <code>GroupIdentifier</code>.</p>
    /// - On success, responds with [`DeleteGroupOutput`](crate::output::DeleteGroupOutput)

    /// - On failure, responds with [`SdkError<DeleteGroupError>`](crate::error::DeleteGroupError)
    pub fn delete_group(&self) -> crate::client::fluent_builders::DeleteGroup {
        crate::client::fluent_builders::DeleteGroup::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DescribeCanaries`](crate::client::fluent_builders::DescribeCanaries) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::DescribeCanaries::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::DescribeCanaries::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::DescribeCanaries::set_next_token): <p>A token that indicates that there is more data available. You can use this token in a subsequent operation to retrieve the next set of results.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::DescribeCanaries::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::DescribeCanaries::set_max_results): <p>Specify this parameter to limit how many canaries are returned each time you use the <code>DescribeCanaries</code> operation. If you omit this parameter, the default of 100 is used.</p>
    ///   - [`names(Vec<String>)`](crate::client::fluent_builders::DescribeCanaries::names) / [`set_names(Option<Vec<String>>)`](crate::client::fluent_builders::DescribeCanaries::set_names): <p>Use this parameter to return only canaries that match the names that you specify here. You can specify as many as five canary names.</p>  <p>If you specify this parameter, the operation is successful only if you have authorization to view all the canaries that you specify in your request. If you do not have permission to view any of the canaries, the request fails with a 403 response.</p>  <p>You are required to use this parameter if you are logged on to a user or role that has an IAM policy that restricts which canaries that you are allowed to view. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Synthetics_Canaries_Restricted.html"> Limiting a user to viewing specific canaries</a>.</p>
    /// - On success, responds with [`DescribeCanariesOutput`](crate::output::DescribeCanariesOutput) with field(s):
    ///   - [`canaries(Option<Vec<Canary>>)`](crate::output::DescribeCanariesOutput::canaries): <p>Returns an array. Each item in the array contains the full information about one canary.</p>
    ///   - [`next_token(Option<String>)`](crate::output::DescribeCanariesOutput::next_token): <p>A token that indicates that there is more data available. You can use this token in a subsequent <code>DescribeCanaries</code> operation to retrieve the next set of results.</p>
    /// - On failure, responds with [`SdkError<DescribeCanariesError>`](crate::error::DescribeCanariesError)
    pub fn describe_canaries(&self) -> crate::client::fluent_builders::DescribeCanaries {
        crate::client::fluent_builders::DescribeCanaries::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DescribeCanariesLastRun`](crate::client::fluent_builders::DescribeCanariesLastRun) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::DescribeCanariesLastRun::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::DescribeCanariesLastRun::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::DescribeCanariesLastRun::set_next_token): <p>A token that indicates that there is more data available. You can use this token in a subsequent <code>DescribeCanariesLastRun</code> operation to retrieve the next set of results.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::DescribeCanariesLastRun::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::DescribeCanariesLastRun::set_max_results): <p>Specify this parameter to limit how many runs are returned each time you use the <code>DescribeLastRun</code> operation. If you omit this parameter, the default of 100 is used.</p>
    ///   - [`names(Vec<String>)`](crate::client::fluent_builders::DescribeCanariesLastRun::names) / [`set_names(Option<Vec<String>>)`](crate::client::fluent_builders::DescribeCanariesLastRun::set_names): <p>Use this parameter to return only canaries that match the names that you specify here. You can specify as many as five canary names.</p>  <p>If you specify this parameter, the operation is successful only if you have authorization to view all the canaries that you specify in your request. If you do not have permission to view any of the canaries, the request fails with a 403 response.</p>  <p>You are required to use the <code>Names</code> parameter if you are logged on to a user or role that has an IAM policy that restricts which canaries that you are allowed to view. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Synthetics_Canaries_Restricted.html"> Limiting a user to viewing specific canaries</a>.</p>
    /// - On success, responds with [`DescribeCanariesLastRunOutput`](crate::output::DescribeCanariesLastRunOutput) with field(s):
    ///   - [`canaries_last_run(Option<Vec<CanaryLastRun>>)`](crate::output::DescribeCanariesLastRunOutput::canaries_last_run): <p>An array that contains the information from the most recent run of each canary.</p>
    ///   - [`next_token(Option<String>)`](crate::output::DescribeCanariesLastRunOutput::next_token): <p>A token that indicates that there is more data available. You can use this token in a subsequent <code>DescribeCanariesLastRun</code> operation to retrieve the next set of results.</p>
    /// - On failure, responds with [`SdkError<DescribeCanariesLastRunError>`](crate::error::DescribeCanariesLastRunError)
    pub fn describe_canaries_last_run(
        &self,
    ) -> crate::client::fluent_builders::DescribeCanariesLastRun {
        crate::client::fluent_builders::DescribeCanariesLastRun::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DescribeRuntimeVersions`](crate::client::fluent_builders::DescribeRuntimeVersions) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::DescribeRuntimeVersions::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::DescribeRuntimeVersions::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::DescribeRuntimeVersions::set_next_token): <p>A token that indicates that there is more data available. You can use this token in a subsequent <code>DescribeRuntimeVersions</code> operation to retrieve the next set of results.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::DescribeRuntimeVersions::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::DescribeRuntimeVersions::set_max_results): <p>Specify this parameter to limit how many runs are returned each time you use the <code>DescribeRuntimeVersions</code> operation. If you omit this parameter, the default of 100 is used.</p>
    /// - On success, responds with [`DescribeRuntimeVersionsOutput`](crate::output::DescribeRuntimeVersionsOutput) with field(s):
    ///   - [`runtime_versions(Option<Vec<RuntimeVersion>>)`](crate::output::DescribeRuntimeVersionsOutput::runtime_versions): <p>An array of objects that display the details about each Synthetics canary runtime version.</p>
    ///   - [`next_token(Option<String>)`](crate::output::DescribeRuntimeVersionsOutput::next_token): <p>A token that indicates that there is more data available. You can use this token in a subsequent <code>DescribeRuntimeVersions</code> operation to retrieve the next set of results.</p>
    /// - On failure, responds with [`SdkError<DescribeRuntimeVersionsError>`](crate::error::DescribeRuntimeVersionsError)
    pub fn describe_runtime_versions(
        &self,
    ) -> crate::client::fluent_builders::DescribeRuntimeVersions {
        crate::client::fluent_builders::DescribeRuntimeVersions::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`DisassociateResource`](crate::client::fluent_builders::DisassociateResource) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`group_identifier(impl Into<String>)`](crate::client::fluent_builders::DisassociateResource::group_identifier) / [`set_group_identifier(Option<String>)`](crate::client::fluent_builders::DisassociateResource::set_group_identifier): <p>Specifies the group. You can specify the group name, the ARN, or the group ID as the <code>GroupIdentifier</code>.</p>
    ///   - [`resource_arn(impl Into<String>)`](crate::client::fluent_builders::DisassociateResource::resource_arn) / [`set_resource_arn(Option<String>)`](crate::client::fluent_builders::DisassociateResource::set_resource_arn): <p>The ARN of the canary that you want to remove from the specified group.</p>
    /// - On success, responds with [`DisassociateResourceOutput`](crate::output::DisassociateResourceOutput)

    /// - On failure, responds with [`SdkError<DisassociateResourceError>`](crate::error::DisassociateResourceError)
    pub fn disassociate_resource(&self) -> crate::client::fluent_builders::DisassociateResource {
        crate::client::fluent_builders::DisassociateResource::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetCanary`](crate::client::fluent_builders::GetCanary) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(impl Into<String>)`](crate::client::fluent_builders::GetCanary::name) / [`set_name(Option<String>)`](crate::client::fluent_builders::GetCanary::set_name): <p>The name of the canary that you want details for.</p>
    /// - On success, responds with [`GetCanaryOutput`](crate::output::GetCanaryOutput) with field(s):
    ///   - [`canary(Option<Canary>)`](crate::output::GetCanaryOutput::canary): <p>A structure that contains the full information about the canary.</p>
    /// - On failure, responds with [`SdkError<GetCanaryError>`](crate::error::GetCanaryError)
    pub fn get_canary(&self) -> crate::client::fluent_builders::GetCanary {
        crate::client::fluent_builders::GetCanary::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetCanaryRuns`](crate::client::fluent_builders::GetCanaryRuns) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::GetCanaryRuns::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(impl Into<String>)`](crate::client::fluent_builders::GetCanaryRuns::name) / [`set_name(Option<String>)`](crate::client::fluent_builders::GetCanaryRuns::set_name): <p>The name of the canary that you want to see runs for.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::GetCanaryRuns::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::GetCanaryRuns::set_next_token): <p>A token that indicates that there is more data available. You can use this token in a subsequent <code>GetCanaryRuns</code> operation to retrieve the next set of results.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::GetCanaryRuns::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::GetCanaryRuns::set_max_results): <p>Specify this parameter to limit how many runs are returned each time you use the <code>GetCanaryRuns</code> operation. If you omit this parameter, the default of 100 is used.</p>
    /// - On success, responds with [`GetCanaryRunsOutput`](crate::output::GetCanaryRunsOutput) with field(s):
    ///   - [`canary_runs(Option<Vec<CanaryRun>>)`](crate::output::GetCanaryRunsOutput::canary_runs): <p>An array of structures. Each structure contains the details of one of the retrieved canary runs.</p>
    ///   - [`next_token(Option<String>)`](crate::output::GetCanaryRunsOutput::next_token): <p>A token that indicates that there is more data available. You can use this token in a subsequent <code>GetCanaryRuns</code> operation to retrieve the next set of results.</p>
    /// - On failure, responds with [`SdkError<GetCanaryRunsError>`](crate::error::GetCanaryRunsError)
    pub fn get_canary_runs(&self) -> crate::client::fluent_builders::GetCanaryRuns {
        crate::client::fluent_builders::GetCanaryRuns::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetGroup`](crate::client::fluent_builders::GetGroup) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`group_identifier(impl Into<String>)`](crate::client::fluent_builders::GetGroup::group_identifier) / [`set_group_identifier(Option<String>)`](crate::client::fluent_builders::GetGroup::set_group_identifier): <p>Specifies the group to return information for. You can specify the group name, the ARN, or the group ID as the <code>GroupIdentifier</code>.</p>
    /// - On success, responds with [`GetGroupOutput`](crate::output::GetGroupOutput) with field(s):
    ///   - [`group(Option<Group>)`](crate::output::GetGroupOutput::group): <p>A structure that contains information about the group.</p>
    /// - On failure, responds with [`SdkError<GetGroupError>`](crate::error::GetGroupError)
    pub fn get_group(&self) -> crate::client::fluent_builders::GetGroup {
        crate::client::fluent_builders::GetGroup::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListAssociatedGroups`](crate::client::fluent_builders::ListAssociatedGroups) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListAssociatedGroups::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListAssociatedGroups::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListAssociatedGroups::set_next_token): <p>A token that indicates that there is more data available. You can use this token in a subsequent operation to retrieve the next set of results.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListAssociatedGroups::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListAssociatedGroups::set_max_results): <p>Specify this parameter to limit how many groups are returned each time you use the <code>ListAssociatedGroups</code> operation. If you omit this parameter, the default of 20 is used.</p>
    ///   - [`resource_arn(impl Into<String>)`](crate::client::fluent_builders::ListAssociatedGroups::resource_arn) / [`set_resource_arn(Option<String>)`](crate::client::fluent_builders::ListAssociatedGroups::set_resource_arn): <p>The ARN of the canary that you want to view groups for.</p>
    /// - On success, responds with [`ListAssociatedGroupsOutput`](crate::output::ListAssociatedGroupsOutput) with field(s):
    ///   - [`groups(Option<Vec<GroupSummary>>)`](crate::output::ListAssociatedGroupsOutput::groups): <p>An array of structures that contain information about the groups that this canary is associated with.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListAssociatedGroupsOutput::next_token): <p>A token that indicates that there is more data available. You can use this token in a subsequent <code>ListAssociatedGroups</code> operation to retrieve the next set of results.</p>
    /// - On failure, responds with [`SdkError<ListAssociatedGroupsError>`](crate::error::ListAssociatedGroupsError)
    pub fn list_associated_groups(&self) -> crate::client::fluent_builders::ListAssociatedGroups {
        crate::client::fluent_builders::ListAssociatedGroups::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListGroupResources`](crate::client::fluent_builders::ListGroupResources) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListGroupResources::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListGroupResources::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListGroupResources::set_next_token): <p>A token that indicates that there is more data available. You can use this token in a subsequent operation to retrieve the next set of results.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListGroupResources::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListGroupResources::set_max_results): <p>Specify this parameter to limit how many canary ARNs are returned each time you use the <code>ListGroupResources</code> operation. If you omit this parameter, the default of 20 is used.</p>
    ///   - [`group_identifier(impl Into<String>)`](crate::client::fluent_builders::ListGroupResources::group_identifier) / [`set_group_identifier(Option<String>)`](crate::client::fluent_builders::ListGroupResources::set_group_identifier): <p>Specifies the group to return information for. You can specify the group name, the ARN, or the group ID as the <code>GroupIdentifier</code>.</p>
    /// - On success, responds with [`ListGroupResourcesOutput`](crate::output::ListGroupResourcesOutput) with field(s):
    ///   - [`resources(Option<Vec<String>>)`](crate::output::ListGroupResourcesOutput::resources): <p>An array of ARNs. These ARNs are for the canaries that are associated with the group.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListGroupResourcesOutput::next_token): <p>A token that indicates that there is more data available. You can use this token in a subsequent <code>ListGroupResources</code> operation to retrieve the next set of results.</p>
    /// - On failure, responds with [`SdkError<ListGroupResourcesError>`](crate::error::ListGroupResourcesError)
    pub fn list_group_resources(&self) -> crate::client::fluent_builders::ListGroupResources {
        crate::client::fluent_builders::ListGroupResources::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListGroups`](crate::client::fluent_builders::ListGroups) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListGroups::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListGroups::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListGroups::set_next_token): <p>A token that indicates that there is more data available. You can use this token in a subsequent operation to retrieve the next set of results.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListGroups::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListGroups::set_max_results): <p>Specify this parameter to limit how many groups are returned each time you use the <code>ListGroups</code> operation. If you omit this parameter, the default of 20 is used.</p>
    /// - On success, responds with [`ListGroupsOutput`](crate::output::ListGroupsOutput) with field(s):
    ///   - [`groups(Option<Vec<GroupSummary>>)`](crate::output::ListGroupsOutput::groups): <p>An array of structures that each contain information about one group.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListGroupsOutput::next_token): <p>A token that indicates that there is more data available. You can use this token in a subsequent <code>ListGroups</code> operation to retrieve the next set of results.</p>
    /// - On failure, responds with [`SdkError<ListGroupsError>`](crate::error::ListGroupsError)
    pub fn list_groups(&self) -> crate::client::fluent_builders::ListGroups {
        crate::client::fluent_builders::ListGroups::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListTagsForResource`](crate::client::fluent_builders::ListTagsForResource) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`resource_arn(impl Into<String>)`](crate::client::fluent_builders::ListTagsForResource::resource_arn) / [`set_resource_arn(Option<String>)`](crate::client::fluent_builders::ListTagsForResource::set_resource_arn): <p>The ARN of the canary or group that you want to view tags for.</p>  <p>The ARN format of a canary is <code>arn:aws:synthetics:<i>Region</i>:<i>account-id</i>:canary:<i>canary-name</i> </code>.</p>  <p>The ARN format of a group is <code>arn:aws:synthetics:<i>Region</i>:<i>account-id</i>:group:<i>group-name</i> </code> </p>
    /// - On success, responds with [`ListTagsForResourceOutput`](crate::output::ListTagsForResourceOutput) with field(s):
    ///   - [`tags(Option<HashMap<String, String>>)`](crate::output::ListTagsForResourceOutput::tags): <p>The list of tag keys and values associated with the resource that you specified.</p>
    /// - On failure, responds with [`SdkError<ListTagsForResourceError>`](crate::error::ListTagsForResourceError)
    pub fn list_tags_for_resource(&self) -> crate::client::fluent_builders::ListTagsForResource {
        crate::client::fluent_builders::ListTagsForResource::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`StartCanary`](crate::client::fluent_builders::StartCanary) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(impl Into<String>)`](crate::client::fluent_builders::StartCanary::name) / [`set_name(Option<String>)`](crate::client::fluent_builders::StartCanary::set_name): <p>The name of the canary that you want to run. To find canary names, use <a href="https://docs.aws.amazon.com/AmazonSynthetics/latest/APIReference/API_DescribeCanaries.html">DescribeCanaries</a>.</p>
    /// - On success, responds with [`StartCanaryOutput`](crate::output::StartCanaryOutput)

    /// - On failure, responds with [`SdkError<StartCanaryError>`](crate::error::StartCanaryError)
    pub fn start_canary(&self) -> crate::client::fluent_builders::StartCanary {
        crate::client::fluent_builders::StartCanary::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`StopCanary`](crate::client::fluent_builders::StopCanary) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(impl Into<String>)`](crate::client::fluent_builders::StopCanary::name) / [`set_name(Option<String>)`](crate::client::fluent_builders::StopCanary::set_name): <p>The name of the canary that you want to stop. To find the names of your canaries, use <a href="https://docs.aws.amazon.com/AmazonSynthetics/latest/APIReference/API_DescribeCanaries.html">ListCanaries</a>.</p>
    /// - On success, responds with [`StopCanaryOutput`](crate::output::StopCanaryOutput)

    /// - On failure, responds with [`SdkError<StopCanaryError>`](crate::error::StopCanaryError)
    pub fn stop_canary(&self) -> crate::client::fluent_builders::StopCanary {
        crate::client::fluent_builders::StopCanary::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`TagResource`](crate::client::fluent_builders::TagResource) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`resource_arn(impl Into<String>)`](crate::client::fluent_builders::TagResource::resource_arn) / [`set_resource_arn(Option<String>)`](crate::client::fluent_builders::TagResource::set_resource_arn): <p>The ARN of the canary or group that you're adding tags to.</p>  <p>The ARN format of a canary is <code>arn:aws:synthetics:<i>Region</i>:<i>account-id</i>:canary:<i>canary-name</i> </code>.</p>  <p>The ARN format of a group is <code>arn:aws:synthetics:<i>Region</i>:<i>account-id</i>:group:<i>group-name</i> </code> </p>
    ///   - [`tags(HashMap<String, String>)`](crate::client::fluent_builders::TagResource::tags) / [`set_tags(Option<HashMap<String, String>>)`](crate::client::fluent_builders::TagResource::set_tags): <p>The list of key-value pairs to associate with the resource.</p>
    /// - On success, responds with [`TagResourceOutput`](crate::output::TagResourceOutput)

    /// - On failure, responds with [`SdkError<TagResourceError>`](crate::error::TagResourceError)
    pub fn tag_resource(&self) -> crate::client::fluent_builders::TagResource {
        crate::client::fluent_builders::TagResource::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`UntagResource`](crate::client::fluent_builders::UntagResource) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`resource_arn(impl Into<String>)`](crate::client::fluent_builders::UntagResource::resource_arn) / [`set_resource_arn(Option<String>)`](crate::client::fluent_builders::UntagResource::set_resource_arn): <p>The ARN of the canary or group that you're removing tags from.</p>  <p>The ARN format of a canary is <code>arn:aws:synthetics:<i>Region</i>:<i>account-id</i>:canary:<i>canary-name</i> </code>.</p>  <p>The ARN format of a group is <code>arn:aws:synthetics:<i>Region</i>:<i>account-id</i>:group:<i>group-name</i> </code> </p>
    ///   - [`tag_keys(Vec<String>)`](crate::client::fluent_builders::UntagResource::tag_keys) / [`set_tag_keys(Option<Vec<String>>)`](crate::client::fluent_builders::UntagResource::set_tag_keys): <p>The list of tag keys to remove from the resource.</p>
    /// - On success, responds with [`UntagResourceOutput`](crate::output::UntagResourceOutput)

    /// - On failure, responds with [`SdkError<UntagResourceError>`](crate::error::UntagResourceError)
    pub fn untag_resource(&self) -> crate::client::fluent_builders::UntagResource {
        crate::client::fluent_builders::UntagResource::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`UpdateCanary`](crate::client::fluent_builders::UpdateCanary) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(impl Into<String>)`](crate::client::fluent_builders::UpdateCanary::name) / [`set_name(Option<String>)`](crate::client::fluent_builders::UpdateCanary::set_name): <p>The name of the canary that you want to update. To find the names of your canaries, use <a href="https://docs.aws.amazon.com/AmazonSynthetics/latest/APIReference/API_DescribeCanaries.html">DescribeCanaries</a>.</p>  <p>You cannot change the name of a canary that has already been created.</p>
    ///   - [`code(CanaryCodeInput)`](crate::client::fluent_builders::UpdateCanary::code) / [`set_code(Option<CanaryCodeInput>)`](crate::client::fluent_builders::UpdateCanary::set_code): <p>A structure that includes the entry point from which the canary should start running your script. If the script is stored in an S3 bucket, the bucket name, key, and version are also included. </p>
    ///   - [`execution_role_arn(impl Into<String>)`](crate::client::fluent_builders::UpdateCanary::execution_role_arn) / [`set_execution_role_arn(Option<String>)`](crate::client::fluent_builders::UpdateCanary::set_execution_role_arn): <p>The ARN of the IAM role to be used to run the canary. This role must already exist, and must include <code>lambda.amazonaws.com</code> as a principal in the trust policy. The role must also have the following permissions:</p>  <ul>   <li> <p> <code>s3:PutObject</code> </p> </li>   <li> <p> <code>s3:GetBucketLocation</code> </p> </li>   <li> <p> <code>s3:ListAllMyBuckets</code> </p> </li>   <li> <p> <code>cloudwatch:PutMetricData</code> </p> </li>   <li> <p> <code>logs:CreateLogGroup</code> </p> </li>   <li> <p> <code>logs:CreateLogStream</code> </p> </li>   <li> <p> <code>logs:CreateLogStream</code> </p> </li>  </ul>
    ///   - [`runtime_version(impl Into<String>)`](crate::client::fluent_builders::UpdateCanary::runtime_version) / [`set_runtime_version(Option<String>)`](crate::client::fluent_builders::UpdateCanary::set_runtime_version): <p>Specifies the runtime version to use for the canary. For a list of valid runtime versions and for more information about runtime versions, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Synthetics_Canaries_Library.html"> Canary Runtime Versions</a>.</p>
    ///   - [`schedule(CanaryScheduleInput)`](crate::client::fluent_builders::UpdateCanary::schedule) / [`set_schedule(Option<CanaryScheduleInput>)`](crate::client::fluent_builders::UpdateCanary::set_schedule): <p>A structure that contains information about how often the canary is to run, and when these runs are to stop.</p>
    ///   - [`run_config(CanaryRunConfigInput)`](crate::client::fluent_builders::UpdateCanary::run_config) / [`set_run_config(Option<CanaryRunConfigInput>)`](crate::client::fluent_builders::UpdateCanary::set_run_config): <p>A structure that contains the timeout value that is used for each individual run of the canary.</p> <important>   <p>The environment variables keys and values are not encrypted. Do not store sensitive information in this field.</p>  </important>
    ///   - [`success_retention_period_in_days(i32)`](crate::client::fluent_builders::UpdateCanary::success_retention_period_in_days) / [`set_success_retention_period_in_days(Option<i32>)`](crate::client::fluent_builders::UpdateCanary::set_success_retention_period_in_days): <p>The number of days to retain data about successful runs of this canary.</p>
    ///   - [`failure_retention_period_in_days(i32)`](crate::client::fluent_builders::UpdateCanary::failure_retention_period_in_days) / [`set_failure_retention_period_in_days(Option<i32>)`](crate::client::fluent_builders::UpdateCanary::set_failure_retention_period_in_days): <p>The number of days to retain data about failed runs of this canary.</p>
    ///   - [`vpc_config(VpcConfigInput)`](crate::client::fluent_builders::UpdateCanary::vpc_config) / [`set_vpc_config(Option<VpcConfigInput>)`](crate::client::fluent_builders::UpdateCanary::set_vpc_config): <p>If this canary is to test an endpoint in a VPC, this structure contains information about the subnet and security groups of the VPC endpoint. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Synthetics_Canaries_VPC.html"> Running a Canary in a VPC</a>.</p>
    ///   - [`visual_reference(VisualReferenceInput)`](crate::client::fluent_builders::UpdateCanary::visual_reference) / [`set_visual_reference(Option<VisualReferenceInput>)`](crate::client::fluent_builders::UpdateCanary::set_visual_reference): <p>Defines the screenshots to use as the baseline for comparisons during visual monitoring comparisons during future runs of this canary. If you omit this parameter, no changes are made to any baseline screenshots that the canary might be using already.</p>  <p>Visual monitoring is supported only on canaries running the <b>syn-puppeteer-node-3.2</b> runtime or later. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Synthetics_Library_SyntheticsLogger_VisualTesting.html"> Visual monitoring</a> and <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Synthetics_Canaries_Blueprints_VisualTesting.html"> Visual monitoring blueprint</a> </p>
    ///   - [`artifact_s3_location(impl Into<String>)`](crate::client::fluent_builders::UpdateCanary::artifact_s3_location) / [`set_artifact_s3_location(Option<String>)`](crate::client::fluent_builders::UpdateCanary::set_artifact_s3_location): <p>The location in Amazon S3 where Synthetics stores artifacts from the test runs of this canary. Artifacts include the log file, screenshots, and HAR files. The name of the S3 bucket can't include a period (.).</p>
    ///   - [`artifact_config(ArtifactConfigInput)`](crate::client::fluent_builders::UpdateCanary::artifact_config) / [`set_artifact_config(Option<ArtifactConfigInput>)`](crate::client::fluent_builders::UpdateCanary::set_artifact_config): <p>A structure that contains the configuration for canary artifacts, including the encryption-at-rest settings for artifacts that the canary uploads to Amazon S3.</p>
    /// - On success, responds with [`UpdateCanaryOutput`](crate::output::UpdateCanaryOutput)

    /// - On failure, responds with [`SdkError<UpdateCanaryError>`](crate::error::UpdateCanaryError)
    pub fn update_canary(&self) -> crate::client::fluent_builders::UpdateCanary {
        crate::client::fluent_builders::UpdateCanary::new(self.handle.clone())
    }
}

impl Client {
    /// Creates a new client from an [SDK Config](aws_types::sdk_config::SdkConfig).
    ///
    /// # Panics
    ///
    /// - This method will panic if the `sdk_config` is missing an async sleep implementation. If you experience this panic, set
    ///     the `sleep_impl` on the Config passed into this function to fix it.
    /// - This method will panic if the `sdk_config` is missing an HTTP connector. If you experience this panic, set the
    ///     `http_connector` on the Config passed into this function to fix it.
    pub fn new(sdk_config: &aws_types::sdk_config::SdkConfig) -> Self {
        Self::from_conf(sdk_config.into())
    }

    /// Creates a new client from the service [`Config`](crate::Config).
    ///
    /// # Panics
    ///
    /// - This method will panic if the `conf` is missing an async sleep implementation. If you experience this panic, set
    ///     the `sleep_impl` on the Config passed into this function to fix it.
    /// - This method will panic if the `conf` is missing an HTTP connector. If you experience this panic, set the
    ///     `http_connector` on the Config passed into this function to fix it.
    pub fn from_conf(conf: crate::Config) -> Self {
        let retry_config = conf
            .retry_config()
            .cloned()
            .unwrap_or_else(aws_smithy_types::retry::RetryConfig::disabled);
        let timeout_config = conf
            .timeout_config()
            .cloned()
            .unwrap_or_else(aws_smithy_types::timeout::TimeoutConfig::disabled);
        let sleep_impl = conf.sleep_impl();
        if (retry_config.has_retry() || timeout_config.has_timeouts()) && sleep_impl.is_none() {
            panic!("An async sleep implementation is required for retries or timeouts to work. \
                                    Set the `sleep_impl` on the Config passed into this function to fix this panic.");
        }

        let connector = conf.http_connector().and_then(|c| {
            let timeout_config = conf
                .timeout_config()
                .cloned()
                .unwrap_or_else(aws_smithy_types::timeout::TimeoutConfig::disabled);
            let connector_settings =
                aws_smithy_client::http_connector::ConnectorSettings::from_timeout_config(
                    &timeout_config,
                );
            c.connector(&connector_settings, conf.sleep_impl())
        });

        let builder = aws_smithy_client::Builder::new();

        let builder = match connector {
            // Use provided connector
            Some(c) => builder.connector(c),
            None => {
                #[cfg(any(feature = "rustls", feature = "native-tls"))]
                {
                    // Use default connector based on enabled features
                    builder.dyn_https_connector(
                        aws_smithy_client::http_connector::ConnectorSettings::from_timeout_config(
                            &timeout_config,
                        ),
                    )
                }
                #[cfg(not(any(feature = "rustls", feature = "native-tls")))]
                {
                    panic!("No HTTP connector was available. Enable the `rustls` or `native-tls` crate feature or set a connector to fix this.");
                }
            }
        };
        let mut builder = builder
            .middleware(aws_smithy_client::erase::DynMiddleware::new(
                crate::middleware::DefaultMiddleware::new(),
            ))
            .retry_config(retry_config.into())
            .operation_timeout_config(timeout_config.into());
        builder.set_sleep_impl(sleep_impl);
        let client = builder.build();

        Self {
            handle: std::sync::Arc::new(Handle { client, conf }),
        }
    }
}

/// Utilities to ergonomically construct a request to the service.
///
/// Fluent builders are created through the [`Client`](crate::client::Client) by calling
/// one if its operation methods. After parameters are set using the builder methods,
/// the `send` method can be called to initiate the request.
pub mod fluent_builders;
