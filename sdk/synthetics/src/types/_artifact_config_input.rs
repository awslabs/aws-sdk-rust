// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A structure that contains the configuration for canary artifacts, including the encryption-at-rest settings for artifacts that the canary uploads to Amazon S3.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ArtifactConfigInput {
    /// <p>A structure that contains the configuration of the encryption-at-rest settings for artifacts that the canary uploads to Amazon S3. Artifact encryption functionality is available only for canaries that use Synthetics runtime version syn-nodejs-puppeteer-3.3 or later. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Synthetics_artifact_encryption.html">Encrypting canary artifacts</a> </p>
    #[doc(hidden)]
    pub s3_encryption: std::option::Option<crate::types::S3EncryptionConfig>,
}
impl ArtifactConfigInput {
    /// <p>A structure that contains the configuration of the encryption-at-rest settings for artifacts that the canary uploads to Amazon S3. Artifact encryption functionality is available only for canaries that use Synthetics runtime version syn-nodejs-puppeteer-3.3 or later. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Synthetics_artifact_encryption.html">Encrypting canary artifacts</a> </p>
    pub fn s3_encryption(&self) -> std::option::Option<&crate::types::S3EncryptionConfig> {
        self.s3_encryption.as_ref()
    }
}
impl ArtifactConfigInput {
    /// Creates a new builder-style object to manufacture [`ArtifactConfigInput`](crate::types::ArtifactConfigInput).
    pub fn builder() -> crate::types::builders::ArtifactConfigInputBuilder {
        crate::types::builders::ArtifactConfigInputBuilder::default()
    }
}

/// A builder for [`ArtifactConfigInput`](crate::types::ArtifactConfigInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ArtifactConfigInputBuilder {
    pub(crate) s3_encryption: std::option::Option<crate::types::S3EncryptionConfig>,
}
impl ArtifactConfigInputBuilder {
    /// <p>A structure that contains the configuration of the encryption-at-rest settings for artifacts that the canary uploads to Amazon S3. Artifact encryption functionality is available only for canaries that use Synthetics runtime version syn-nodejs-puppeteer-3.3 or later. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Synthetics_artifact_encryption.html">Encrypting canary artifacts</a> </p>
    pub fn s3_encryption(mut self, input: crate::types::S3EncryptionConfig) -> Self {
        self.s3_encryption = Some(input);
        self
    }
    /// <p>A structure that contains the configuration of the encryption-at-rest settings for artifacts that the canary uploads to Amazon S3. Artifact encryption functionality is available only for canaries that use Synthetics runtime version syn-nodejs-puppeteer-3.3 or later. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Synthetics_artifact_encryption.html">Encrypting canary artifacts</a> </p>
    pub fn set_s3_encryption(
        mut self,
        input: std::option::Option<crate::types::S3EncryptionConfig>,
    ) -> Self {
        self.s3_encryption = input;
        self
    }
    /// Consumes the builder and constructs a [`ArtifactConfigInput`](crate::types::ArtifactConfigInput).
    pub fn build(self) -> crate::types::ArtifactConfigInput {
        crate::types::ArtifactConfigInput {
            s3_encryption: self.s3_encryption,
        }
    }
}
