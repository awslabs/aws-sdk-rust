// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq)]
pub struct DescribeAppInstanceUserEndpointInput {
    /// <p>The ARN of the <code>AppInstanceUser</code>.</p>
    #[doc(hidden)]
    pub app_instance_user_arn: std::option::Option<std::string::String>,
    /// <p>The unique identifier of the <code>AppInstanceUserEndpoint</code>.</p>
    #[doc(hidden)]
    pub endpoint_id: std::option::Option<std::string::String>,
}
impl DescribeAppInstanceUserEndpointInput {
    /// <p>The ARN of the <code>AppInstanceUser</code>.</p>
    pub fn app_instance_user_arn(&self) -> std::option::Option<&str> {
        self.app_instance_user_arn.as_deref()
    }
    /// <p>The unique identifier of the <code>AppInstanceUserEndpoint</code>.</p>
    pub fn endpoint_id(&self) -> std::option::Option<&str> {
        self.endpoint_id.as_deref()
    }
}
impl std::fmt::Debug for DescribeAppInstanceUserEndpointInput {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        let mut formatter = f.debug_struct("DescribeAppInstanceUserEndpointInput");
        formatter.field("app_instance_user_arn", &"*** Sensitive Data Redacted ***");
        formatter.field("endpoint_id", &"*** Sensitive Data Redacted ***");
        formatter.finish()
    }
}
impl DescribeAppInstanceUserEndpointInput {
    /// Creates a new builder-style object to manufacture [`DescribeAppInstanceUserEndpointInput`](crate::operation::describe_app_instance_user_endpoint::DescribeAppInstanceUserEndpointInput).
    pub fn builder() -> crate::operation::describe_app_instance_user_endpoint::builders::DescribeAppInstanceUserEndpointInputBuilder{
        crate::operation::describe_app_instance_user_endpoint::builders::DescribeAppInstanceUserEndpointInputBuilder::default()
    }
}

/// A builder for [`DescribeAppInstanceUserEndpointInput`](crate::operation::describe_app_instance_user_endpoint::DescribeAppInstanceUserEndpointInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default)]
pub struct DescribeAppInstanceUserEndpointInputBuilder {
    pub(crate) app_instance_user_arn: std::option::Option<std::string::String>,
    pub(crate) endpoint_id: std::option::Option<std::string::String>,
}
impl DescribeAppInstanceUserEndpointInputBuilder {
    /// <p>The ARN of the <code>AppInstanceUser</code>.</p>
    pub fn app_instance_user_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.app_instance_user_arn = Some(input.into());
        self
    }
    /// <p>The ARN of the <code>AppInstanceUser</code>.</p>
    pub fn set_app_instance_user_arn(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.app_instance_user_arn = input;
        self
    }
    /// <p>The unique identifier of the <code>AppInstanceUserEndpoint</code>.</p>
    pub fn endpoint_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.endpoint_id = Some(input.into());
        self
    }
    /// <p>The unique identifier of the <code>AppInstanceUserEndpoint</code>.</p>
    pub fn set_endpoint_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.endpoint_id = input;
        self
    }
    /// Consumes the builder and constructs a [`DescribeAppInstanceUserEndpointInput`](crate::operation::describe_app_instance_user_endpoint::DescribeAppInstanceUserEndpointInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::describe_app_instance_user_endpoint::DescribeAppInstanceUserEndpointInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::describe_app_instance_user_endpoint::DescribeAppInstanceUserEndpointInput {
                app_instance_user_arn: self.app_instance_user_arn
                ,
                endpoint_id: self.endpoint_id
                ,
            }
        )
    }
}
impl std::fmt::Debug for DescribeAppInstanceUserEndpointInputBuilder {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        let mut formatter = f.debug_struct("DescribeAppInstanceUserEndpointInputBuilder");
        formatter.field("app_instance_user_arn", &"*** Sensitive Data Redacted ***");
        formatter.field("endpoint_id", &"*** Sensitive Data Redacted ***");
        formatter.finish()
    }
}
