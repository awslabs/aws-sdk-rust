// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListAppInstanceUserEndpoints`](crate::client::fluent_builders::ListAppInstanceUserEndpoints) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListAppInstanceUserEndpoints::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`app_instance_user_arn(impl Into<String>)`](crate::client::fluent_builders::ListAppInstanceUserEndpoints::app_instance_user_arn) / [`set_app_instance_user_arn(Option<String>)`](crate::client::fluent_builders::ListAppInstanceUserEndpoints::set_app_instance_user_arn): <p>The ARN of the <code>AppInstanceUser</code>.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListAppInstanceUserEndpoints::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListAppInstanceUserEndpoints::set_max_results): <p>The maximum number of endpoints that you want to return.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListAppInstanceUserEndpoints::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListAppInstanceUserEndpoints::set_next_token): <p>The token passed by previous API calls until all requested endpoints are returned.</p>
    /// - On success, responds with [`ListAppInstanceUserEndpointsOutput`](crate::output::ListAppInstanceUserEndpointsOutput) with field(s):
    ///   - [`app_instance_user_endpoints(Option<Vec<AppInstanceUserEndpointSummary>>)`](crate::output::ListAppInstanceUserEndpointsOutput::app_instance_user_endpoints): <p>The information for each requested <code>AppInstanceUserEndpoint</code>.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListAppInstanceUserEndpointsOutput::next_token): <p>The token passed by previous API calls until all requested endpoints are returned.</p>
    /// - On failure, responds with [`SdkError<ListAppInstanceUserEndpointsError>`](crate::error::ListAppInstanceUserEndpointsError)
    pub fn list_app_instance_user_endpoints(
        &self,
    ) -> crate::client::fluent_builders::ListAppInstanceUserEndpoints {
        crate::client::fluent_builders::ListAppInstanceUserEndpoints::new(self.handle.clone())
    }
}
