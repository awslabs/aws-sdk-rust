// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateAppInstance`](crate::operation::create_app_instance::builders::CreateAppInstanceFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`name(impl Into<String>)`](crate::operation::create_app_instance::builders::CreateAppInstanceFluentBuilder::name) / [`set_name(Option<String>)`](crate::operation::create_app_instance::builders::CreateAppInstanceFluentBuilder::set_name): <p>The name of the <code>AppInstance</code>.</p>
    ///   - [`metadata(impl Into<String>)`](crate::operation::create_app_instance::builders::CreateAppInstanceFluentBuilder::metadata) / [`set_metadata(Option<String>)`](crate::operation::create_app_instance::builders::CreateAppInstanceFluentBuilder::set_metadata): <p>The metadata of the <code>AppInstance</code>. Limited to a 1KB string in UTF-8.</p>
    ///   - [`client_request_token(impl Into<String>)`](crate::operation::create_app_instance::builders::CreateAppInstanceFluentBuilder::client_request_token) / [`set_client_request_token(Option<String>)`](crate::operation::create_app_instance::builders::CreateAppInstanceFluentBuilder::set_client_request_token): <p>The <code>ClientRequestToken</code> of the <code>AppInstance</code>.</p>
    ///   - [`tags(Vec<Tag>)`](crate::operation::create_app_instance::builders::CreateAppInstanceFluentBuilder::tags) / [`set_tags(Option<Vec<Tag>>)`](crate::operation::create_app_instance::builders::CreateAppInstanceFluentBuilder::set_tags): <p>Tags assigned to the <code>AppInstanceUser</code>.</p>
    /// - On success, responds with [`CreateAppInstanceOutput`](crate::operation::create_app_instance::CreateAppInstanceOutput) with field(s):
    ///   - [`app_instance_arn(Option<String>)`](crate::operation::create_app_instance::CreateAppInstanceOutput::app_instance_arn): <p>The Amazon Resource Number (ARN) of the <code>AppInstance</code>.</p>
    /// - On failure, responds with [`SdkError<CreateAppInstanceError>`](crate::operation::create_app_instance::CreateAppInstanceError)
    pub fn create_app_instance(
        &self,
    ) -> crate::operation::create_app_instance::builders::CreateAppInstanceFluentBuilder {
        crate::operation::create_app_instance::builders::CreateAppInstanceFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
