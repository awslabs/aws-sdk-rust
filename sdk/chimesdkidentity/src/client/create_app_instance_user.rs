// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateAppInstanceUser`](crate::operation::create_app_instance_user::builders::CreateAppInstanceUserFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`app_instance_arn(impl Into<String>)`](crate::operation::create_app_instance_user::builders::CreateAppInstanceUserFluentBuilder::app_instance_arn) / [`set_app_instance_arn(Option<String>)`](crate::operation::create_app_instance_user::builders::CreateAppInstanceUserFluentBuilder::set_app_instance_arn):<br>required: **true**<br><p>The ARN of the <code>AppInstance</code> request.</p><br>
    ///   - [`app_instance_user_id(impl Into<String>)`](crate::operation::create_app_instance_user::builders::CreateAppInstanceUserFluentBuilder::app_instance_user_id) / [`set_app_instance_user_id(Option<String>)`](crate::operation::create_app_instance_user::builders::CreateAppInstanceUserFluentBuilder::set_app_instance_user_id):<br>required: **true**<br><p>The user ID of the <code>AppInstance</code>.</p><br>
    ///   - [`name(impl Into<String>)`](crate::operation::create_app_instance_user::builders::CreateAppInstanceUserFluentBuilder::name) / [`set_name(Option<String>)`](crate::operation::create_app_instance_user::builders::CreateAppInstanceUserFluentBuilder::set_name):<br>required: **true**<br><p>The user's name.</p><br>
    ///   - [`metadata(impl Into<String>)`](crate::operation::create_app_instance_user::builders::CreateAppInstanceUserFluentBuilder::metadata) / [`set_metadata(Option<String>)`](crate::operation::create_app_instance_user::builders::CreateAppInstanceUserFluentBuilder::set_metadata):<br>required: **false**<br><p>The request's metadata. Limited to a 1KB string in UTF-8.</p><br>
    ///   - [`client_request_token(impl Into<String>)`](crate::operation::create_app_instance_user::builders::CreateAppInstanceUserFluentBuilder::client_request_token) / [`set_client_request_token(Option<String>)`](crate::operation::create_app_instance_user::builders::CreateAppInstanceUserFluentBuilder::set_client_request_token):<br>required: **true**<br><p>The unique ID of the request. Use different tokens to request additional <code>AppInstances</code>.</p><br>
    ///   - [`tags(Tag)`](crate::operation::create_app_instance_user::builders::CreateAppInstanceUserFluentBuilder::tags) / [`set_tags(Option<Vec::<Tag>>)`](crate::operation::create_app_instance_user::builders::CreateAppInstanceUserFluentBuilder::set_tags):<br>required: **false**<br><p>Tags assigned to the <code>AppInstanceUser</code>.</p><br>
    ///   - [`expiration_settings(ExpirationSettings)`](crate::operation::create_app_instance_user::builders::CreateAppInstanceUserFluentBuilder::expiration_settings) / [`set_expiration_settings(Option<ExpirationSettings>)`](crate::operation::create_app_instance_user::builders::CreateAppInstanceUserFluentBuilder::set_expiration_settings):<br>required: **false**<br><p>Settings that control the interval after which the <code>AppInstanceUser</code> is automatically deleted.</p><br>
    /// - On success, responds with [`CreateAppInstanceUserOutput`](crate::operation::create_app_instance_user::CreateAppInstanceUserOutput) with field(s):
    ///   - [`app_instance_user_arn(Option<String>)`](crate::operation::create_app_instance_user::CreateAppInstanceUserOutput::app_instance_user_arn): <p>The user's ARN.</p>
    /// - On failure, responds with [`SdkError<CreateAppInstanceUserError>`](crate::operation::create_app_instance_user::CreateAppInstanceUserError)
    pub fn create_app_instance_user(&self) -> crate::operation::create_app_instance_user::builders::CreateAppInstanceUserFluentBuilder {
        crate::operation::create_app_instance_user::builders::CreateAppInstanceUserFluentBuilder::new(self.handle.clone())
    }
}
