// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
/// <p>Creates an Amazon Chime SDK messaging <code>AppInstance</code> under an AWS account.
/// Only SDK messaging customers use this API. <code>CreateAppInstance</code> supports
/// idempotency behavior as described in the AWS API Standard.</p>
/// <p>identity</p>
#[derive(std::default::Default, std::clone::Clone, std::fmt::Debug)]
pub struct CreateAppInstance {
    _private: (),
}
impl CreateAppInstance {
    /// Creates a new builder-style object to manufacture [`CreateAppInstanceInput`](crate::input::CreateAppInstanceInput)
    pub fn builder() -> crate::input::create_app_instance_input::Builder {
        crate::input::create_app_instance_input::Builder::default()
    }
    pub fn new() -> Self {
        Self { _private: () }
    }
}
impl smithy_http::response::ParseStrictResponse for CreateAppInstance {
    type Output = std::result::Result<
        crate::output::CreateAppInstanceOutput,
        crate::error::CreateAppInstanceError,
    >;
    fn parse(&self, response: &http::Response<bytes::Bytes>) -> Self::Output {
        if !response.status().is_success() && response.status().as_u16() != 201 {
            crate::operation_deser::parse_create_app_instance_error(response)
        } else {
            crate::operation_deser::parse_create_app_instance_response(response)
        }
    }
}

/// <p>Promotes an <code>AppInstanceUser</code> to an <code>AppInstanceAdmin</code>. The
/// promoted user can perform the following actions. </p>
/// <ul>
/// <li>
/// <p>
/// <code>ChannelModerator</code> actions across all channels in the
/// <code>AppInstance</code>.</p>
/// </li>
/// <li>
/// <p>
/// <code>DeleteChannelMessage</code> actions.</p>
/// </li>
/// </ul>
/// <p>Only an <code>AppInstanceUser</code> can be promoted to an <code>AppInstanceAdmin</code>
/// role.</p>
#[derive(std::default::Default, std::clone::Clone, std::fmt::Debug)]
pub struct CreateAppInstanceAdmin {
    _private: (),
}
impl CreateAppInstanceAdmin {
    /// Creates a new builder-style object to manufacture [`CreateAppInstanceAdminInput`](crate::input::CreateAppInstanceAdminInput)
    pub fn builder() -> crate::input::create_app_instance_admin_input::Builder {
        crate::input::create_app_instance_admin_input::Builder::default()
    }
    pub fn new() -> Self {
        Self { _private: () }
    }
}
impl smithy_http::response::ParseStrictResponse for CreateAppInstanceAdmin {
    type Output = std::result::Result<
        crate::output::CreateAppInstanceAdminOutput,
        crate::error::CreateAppInstanceAdminError,
    >;
    fn parse(&self, response: &http::Response<bytes::Bytes>) -> Self::Output {
        if !response.status().is_success() && response.status().as_u16() != 201 {
            crate::operation_deser::parse_create_app_instance_admin_error(response)
        } else {
            crate::operation_deser::parse_create_app_instance_admin_response(response)
        }
    }
}

/// <p>Creates a user under an Amazon Chime <code>AppInstance</code>. The request consists of a
/// unique <code>appInstanceUserId</code> and <code>Name</code> for that user.</p>
#[derive(std::default::Default, std::clone::Clone, std::fmt::Debug)]
pub struct CreateAppInstanceUser {
    _private: (),
}
impl CreateAppInstanceUser {
    /// Creates a new builder-style object to manufacture [`CreateAppInstanceUserInput`](crate::input::CreateAppInstanceUserInput)
    pub fn builder() -> crate::input::create_app_instance_user_input::Builder {
        crate::input::create_app_instance_user_input::Builder::default()
    }
    pub fn new() -> Self {
        Self { _private: () }
    }
}
impl smithy_http::response::ParseStrictResponse for CreateAppInstanceUser {
    type Output = std::result::Result<
        crate::output::CreateAppInstanceUserOutput,
        crate::error::CreateAppInstanceUserError,
    >;
    fn parse(&self, response: &http::Response<bytes::Bytes>) -> Self::Output {
        if !response.status().is_success() && response.status().as_u16() != 201 {
            crate::operation_deser::parse_create_app_instance_user_error(response)
        } else {
            crate::operation_deser::parse_create_app_instance_user_response(response)
        }
    }
}

/// <p>Deletes an <code>AppInstance</code> and all associated data asynchronously.</p>
#[derive(std::default::Default, std::clone::Clone, std::fmt::Debug)]
pub struct DeleteAppInstance {
    _private: (),
}
impl DeleteAppInstance {
    /// Creates a new builder-style object to manufacture [`DeleteAppInstanceInput`](crate::input::DeleteAppInstanceInput)
    pub fn builder() -> crate::input::delete_app_instance_input::Builder {
        crate::input::delete_app_instance_input::Builder::default()
    }
    pub fn new() -> Self {
        Self { _private: () }
    }
}
impl smithy_http::response::ParseStrictResponse for DeleteAppInstance {
    type Output = std::result::Result<
        crate::output::DeleteAppInstanceOutput,
        crate::error::DeleteAppInstanceError,
    >;
    fn parse(&self, response: &http::Response<bytes::Bytes>) -> Self::Output {
        if !response.status().is_success() && response.status().as_u16() != 204 {
            crate::operation_deser::parse_delete_app_instance_error(response)
        } else {
            crate::operation_deser::parse_delete_app_instance_response(response)
        }
    }
}

/// <p>Demotes an <code>AppInstanceAdmin</code> to an <code>AppInstanceUser</code>. This action
/// does not delete the user.</p>
#[derive(std::default::Default, std::clone::Clone, std::fmt::Debug)]
pub struct DeleteAppInstanceAdmin {
    _private: (),
}
impl DeleteAppInstanceAdmin {
    /// Creates a new builder-style object to manufacture [`DeleteAppInstanceAdminInput`](crate::input::DeleteAppInstanceAdminInput)
    pub fn builder() -> crate::input::delete_app_instance_admin_input::Builder {
        crate::input::delete_app_instance_admin_input::Builder::default()
    }
    pub fn new() -> Self {
        Self { _private: () }
    }
}
impl smithy_http::response::ParseStrictResponse for DeleteAppInstanceAdmin {
    type Output = std::result::Result<
        crate::output::DeleteAppInstanceAdminOutput,
        crate::error::DeleteAppInstanceAdminError,
    >;
    fn parse(&self, response: &http::Response<bytes::Bytes>) -> Self::Output {
        if !response.status().is_success() && response.status().as_u16() != 204 {
            crate::operation_deser::parse_delete_app_instance_admin_error(response)
        } else {
            crate::operation_deser::parse_delete_app_instance_admin_response(response)
        }
    }
}

/// <p>Deletes an <code>AppInstanceUser</code>.</p>
#[derive(std::default::Default, std::clone::Clone, std::fmt::Debug)]
pub struct DeleteAppInstanceUser {
    _private: (),
}
impl DeleteAppInstanceUser {
    /// Creates a new builder-style object to manufacture [`DeleteAppInstanceUserInput`](crate::input::DeleteAppInstanceUserInput)
    pub fn builder() -> crate::input::delete_app_instance_user_input::Builder {
        crate::input::delete_app_instance_user_input::Builder::default()
    }
    pub fn new() -> Self {
        Self { _private: () }
    }
}
impl smithy_http::response::ParseStrictResponse for DeleteAppInstanceUser {
    type Output = std::result::Result<
        crate::output::DeleteAppInstanceUserOutput,
        crate::error::DeleteAppInstanceUserError,
    >;
    fn parse(&self, response: &http::Response<bytes::Bytes>) -> Self::Output {
        if !response.status().is_success() && response.status().as_u16() != 204 {
            crate::operation_deser::parse_delete_app_instance_user_error(response)
        } else {
            crate::operation_deser::parse_delete_app_instance_user_response(response)
        }
    }
}

/// <p>Returns the full details of an <code>AppInstance</code>.</p>
#[derive(std::default::Default, std::clone::Clone, std::fmt::Debug)]
pub struct DescribeAppInstance {
    _private: (),
}
impl DescribeAppInstance {
    /// Creates a new builder-style object to manufacture [`DescribeAppInstanceInput`](crate::input::DescribeAppInstanceInput)
    pub fn builder() -> crate::input::describe_app_instance_input::Builder {
        crate::input::describe_app_instance_input::Builder::default()
    }
    pub fn new() -> Self {
        Self { _private: () }
    }
}
impl smithy_http::response::ParseStrictResponse for DescribeAppInstance {
    type Output = std::result::Result<
        crate::output::DescribeAppInstanceOutput,
        crate::error::DescribeAppInstanceError,
    >;
    fn parse(&self, response: &http::Response<bytes::Bytes>) -> Self::Output {
        if !response.status().is_success() && response.status().as_u16() != 200 {
            crate::operation_deser::parse_describe_app_instance_error(response)
        } else {
            crate::operation_deser::parse_describe_app_instance_response(response)
        }
    }
}

/// <p>Returns the full details of an <code>AppInstanceAdmin</code>.</p>
#[derive(std::default::Default, std::clone::Clone, std::fmt::Debug)]
pub struct DescribeAppInstanceAdmin {
    _private: (),
}
impl DescribeAppInstanceAdmin {
    /// Creates a new builder-style object to manufacture [`DescribeAppInstanceAdminInput`](crate::input::DescribeAppInstanceAdminInput)
    pub fn builder() -> crate::input::describe_app_instance_admin_input::Builder {
        crate::input::describe_app_instance_admin_input::Builder::default()
    }
    pub fn new() -> Self {
        Self { _private: () }
    }
}
impl smithy_http::response::ParseStrictResponse for DescribeAppInstanceAdmin {
    type Output = std::result::Result<
        crate::output::DescribeAppInstanceAdminOutput,
        crate::error::DescribeAppInstanceAdminError,
    >;
    fn parse(&self, response: &http::Response<bytes::Bytes>) -> Self::Output {
        if !response.status().is_success() && response.status().as_u16() != 200 {
            crate::operation_deser::parse_describe_app_instance_admin_error(response)
        } else {
            crate::operation_deser::parse_describe_app_instance_admin_response(response)
        }
    }
}

/// <p>Returns the full details of an <code>AppInstanceUser</code>.</p>
#[derive(std::default::Default, std::clone::Clone, std::fmt::Debug)]
pub struct DescribeAppInstanceUser {
    _private: (),
}
impl DescribeAppInstanceUser {
    /// Creates a new builder-style object to manufacture [`DescribeAppInstanceUserInput`](crate::input::DescribeAppInstanceUserInput)
    pub fn builder() -> crate::input::describe_app_instance_user_input::Builder {
        crate::input::describe_app_instance_user_input::Builder::default()
    }
    pub fn new() -> Self {
        Self { _private: () }
    }
}
impl smithy_http::response::ParseStrictResponse for DescribeAppInstanceUser {
    type Output = std::result::Result<
        crate::output::DescribeAppInstanceUserOutput,
        crate::error::DescribeAppInstanceUserError,
    >;
    fn parse(&self, response: &http::Response<bytes::Bytes>) -> Self::Output {
        if !response.status().is_success() && response.status().as_u16() != 200 {
            crate::operation_deser::parse_describe_app_instance_user_error(response)
        } else {
            crate::operation_deser::parse_describe_app_instance_user_response(response)
        }
    }
}

/// <p>Gets the retention settings for an <code>AppInstance</code>.</p>
#[derive(std::default::Default, std::clone::Clone, std::fmt::Debug)]
pub struct GetAppInstanceRetentionSettings {
    _private: (),
}
impl GetAppInstanceRetentionSettings {
    /// Creates a new builder-style object to manufacture [`GetAppInstanceRetentionSettingsInput`](crate::input::GetAppInstanceRetentionSettingsInput)
    pub fn builder() -> crate::input::get_app_instance_retention_settings_input::Builder {
        crate::input::get_app_instance_retention_settings_input::Builder::default()
    }
    pub fn new() -> Self {
        Self { _private: () }
    }
}
impl smithy_http::response::ParseStrictResponse for GetAppInstanceRetentionSettings {
    type Output = std::result::Result<
        crate::output::GetAppInstanceRetentionSettingsOutput,
        crate::error::GetAppInstanceRetentionSettingsError,
    >;
    fn parse(&self, response: &http::Response<bytes::Bytes>) -> Self::Output {
        if !response.status().is_success() && response.status().as_u16() != 200 {
            crate::operation_deser::parse_get_app_instance_retention_settings_error(response)
        } else {
            crate::operation_deser::parse_get_app_instance_retention_settings_response(response)
        }
    }
}

/// <p>Returns a list of the administrators in the <code>AppInstance</code>.</p>
#[derive(std::default::Default, std::clone::Clone, std::fmt::Debug)]
pub struct ListAppInstanceAdmins {
    _private: (),
}
impl ListAppInstanceAdmins {
    /// Creates a new builder-style object to manufacture [`ListAppInstanceAdminsInput`](crate::input::ListAppInstanceAdminsInput)
    pub fn builder() -> crate::input::list_app_instance_admins_input::Builder {
        crate::input::list_app_instance_admins_input::Builder::default()
    }
    pub fn new() -> Self {
        Self { _private: () }
    }
}
impl smithy_http::response::ParseStrictResponse for ListAppInstanceAdmins {
    type Output = std::result::Result<
        crate::output::ListAppInstanceAdminsOutput,
        crate::error::ListAppInstanceAdminsError,
    >;
    fn parse(&self, response: &http::Response<bytes::Bytes>) -> Self::Output {
        if !response.status().is_success() && response.status().as_u16() != 200 {
            crate::operation_deser::parse_list_app_instance_admins_error(response)
        } else {
            crate::operation_deser::parse_list_app_instance_admins_response(response)
        }
    }
}

/// <p>Lists all Amazon Chime <code>AppInstance</code>s created under a single AWS
/// account.</p>
#[derive(std::default::Default, std::clone::Clone, std::fmt::Debug)]
pub struct ListAppInstances {
    _private: (),
}
impl ListAppInstances {
    /// Creates a new builder-style object to manufacture [`ListAppInstancesInput`](crate::input::ListAppInstancesInput)
    pub fn builder() -> crate::input::list_app_instances_input::Builder {
        crate::input::list_app_instances_input::Builder::default()
    }
    pub fn new() -> Self {
        Self { _private: () }
    }
}
impl smithy_http::response::ParseStrictResponse for ListAppInstances {
    type Output = std::result::Result<
        crate::output::ListAppInstancesOutput,
        crate::error::ListAppInstancesError,
    >;
    fn parse(&self, response: &http::Response<bytes::Bytes>) -> Self::Output {
        if !response.status().is_success() && response.status().as_u16() != 200 {
            crate::operation_deser::parse_list_app_instances_error(response)
        } else {
            crate::operation_deser::parse_list_app_instances_response(response)
        }
    }
}

/// <p>List all <code>AppInstanceUsers</code> created under a single
/// <code>AppInstance</code>.</p>
#[derive(std::default::Default, std::clone::Clone, std::fmt::Debug)]
pub struct ListAppInstanceUsers {
    _private: (),
}
impl ListAppInstanceUsers {
    /// Creates a new builder-style object to manufacture [`ListAppInstanceUsersInput`](crate::input::ListAppInstanceUsersInput)
    pub fn builder() -> crate::input::list_app_instance_users_input::Builder {
        crate::input::list_app_instance_users_input::Builder::default()
    }
    pub fn new() -> Self {
        Self { _private: () }
    }
}
impl smithy_http::response::ParseStrictResponse for ListAppInstanceUsers {
    type Output = std::result::Result<
        crate::output::ListAppInstanceUsersOutput,
        crate::error::ListAppInstanceUsersError,
    >;
    fn parse(&self, response: &http::Response<bytes::Bytes>) -> Self::Output {
        if !response.status().is_success() && response.status().as_u16() != 200 {
            crate::operation_deser::parse_list_app_instance_users_error(response)
        } else {
            crate::operation_deser::parse_list_app_instance_users_response(response)
        }
    }
}

/// <p>Sets the amount of time in days that a given <code>AppInstance</code> retains
/// data.</p>
#[derive(std::default::Default, std::clone::Clone, std::fmt::Debug)]
pub struct PutAppInstanceRetentionSettings {
    _private: (),
}
impl PutAppInstanceRetentionSettings {
    /// Creates a new builder-style object to manufacture [`PutAppInstanceRetentionSettingsInput`](crate::input::PutAppInstanceRetentionSettingsInput)
    pub fn builder() -> crate::input::put_app_instance_retention_settings_input::Builder {
        crate::input::put_app_instance_retention_settings_input::Builder::default()
    }
    pub fn new() -> Self {
        Self { _private: () }
    }
}
impl smithy_http::response::ParseStrictResponse for PutAppInstanceRetentionSettings {
    type Output = std::result::Result<
        crate::output::PutAppInstanceRetentionSettingsOutput,
        crate::error::PutAppInstanceRetentionSettingsError,
    >;
    fn parse(&self, response: &http::Response<bytes::Bytes>) -> Self::Output {
        if !response.status().is_success() && response.status().as_u16() != 200 {
            crate::operation_deser::parse_put_app_instance_retention_settings_error(response)
        } else {
            crate::operation_deser::parse_put_app_instance_retention_settings_response(response)
        }
    }
}

/// <p>Updates <code>AppInstance</code> metadata.</p>
#[derive(std::default::Default, std::clone::Clone, std::fmt::Debug)]
pub struct UpdateAppInstance {
    _private: (),
}
impl UpdateAppInstance {
    /// Creates a new builder-style object to manufacture [`UpdateAppInstanceInput`](crate::input::UpdateAppInstanceInput)
    pub fn builder() -> crate::input::update_app_instance_input::Builder {
        crate::input::update_app_instance_input::Builder::default()
    }
    pub fn new() -> Self {
        Self { _private: () }
    }
}
impl smithy_http::response::ParseStrictResponse for UpdateAppInstance {
    type Output = std::result::Result<
        crate::output::UpdateAppInstanceOutput,
        crate::error::UpdateAppInstanceError,
    >;
    fn parse(&self, response: &http::Response<bytes::Bytes>) -> Self::Output {
        if !response.status().is_success() && response.status().as_u16() != 200 {
            crate::operation_deser::parse_update_app_instance_error(response)
        } else {
            crate::operation_deser::parse_update_app_instance_response(response)
        }
    }
}

/// <p>Updates the details of an <code>AppInstanceUser</code>. You can update names and
/// metadata.</p>
#[derive(std::default::Default, std::clone::Clone, std::fmt::Debug)]
pub struct UpdateAppInstanceUser {
    _private: (),
}
impl UpdateAppInstanceUser {
    /// Creates a new builder-style object to manufacture [`UpdateAppInstanceUserInput`](crate::input::UpdateAppInstanceUserInput)
    pub fn builder() -> crate::input::update_app_instance_user_input::Builder {
        crate::input::update_app_instance_user_input::Builder::default()
    }
    pub fn new() -> Self {
        Self { _private: () }
    }
}
impl smithy_http::response::ParseStrictResponse for UpdateAppInstanceUser {
    type Output = std::result::Result<
        crate::output::UpdateAppInstanceUserOutput,
        crate::error::UpdateAppInstanceUserError,
    >;
    fn parse(&self, response: &http::Response<bytes::Bytes>) -> Self::Output {
        if !response.status().is_success() && response.status().as_u16() != 200 {
            crate::operation_deser::parse_update_app_instance_user_error(response)
        } else {
            crate::operation_deser::parse_update_app_instance_user_response(response)
        }
    }
}
