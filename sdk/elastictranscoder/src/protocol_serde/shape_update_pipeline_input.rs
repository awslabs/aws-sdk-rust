// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_update_pipeline_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::update_pipeline::UpdatePipelineInput,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.aws_kms_key_arn {
        object.key("AwsKmsKeyArn").string(var_1.as_str());
    }
    if let Some(var_2) = &input.content_config {
        #[allow(unused_mut)]
        let mut object_3 = object.key("ContentConfig").start_object();
        crate::protocol_serde::shape_pipeline_output_config::ser_pipeline_output_config(&mut object_3, var_2)?;
        object_3.finish();
    }
    if let Some(var_4) = &input.input_bucket {
        object.key("InputBucket").string(var_4.as_str());
    }
    if let Some(var_5) = &input.name {
        object.key("Name").string(var_5.as_str());
    }
    if let Some(var_6) = &input.notifications {
        #[allow(unused_mut)]
        let mut object_7 = object.key("Notifications").start_object();
        crate::protocol_serde::shape_notifications::ser_notifications(&mut object_7, var_6)?;
        object_7.finish();
    }
    if let Some(var_8) = &input.role {
        object.key("Role").string(var_8.as_str());
    }
    if let Some(var_9) = &input.thumbnail_config {
        #[allow(unused_mut)]
        let mut object_10 = object.key("ThumbnailConfig").start_object();
        crate::protocol_serde::shape_pipeline_output_config::ser_pipeline_output_config(&mut object_10, var_9)?;
        object_10.finish();
    }
    Ok(())
}
