// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The <code>CreatePresetResponse</code> structure.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct CreatePresetOutput {
    /// <p>A section of the response body that provides information about the preset that is created.</p>
    #[doc(hidden)]
    pub preset: std::option::Option<crate::types::Preset>,
    /// <p>If the preset settings don't comply with the standards for the video codec but Elastic Transcoder created the preset, this message explains the reason the preset settings don't meet the standard. Elastic Transcoder created the preset because the settings might produce acceptable output.</p>
    #[doc(hidden)]
    pub warning: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl CreatePresetOutput {
    /// <p>A section of the response body that provides information about the preset that is created.</p>
    pub fn preset(&self) -> std::option::Option<&crate::types::Preset> {
        self.preset.as_ref()
    }
    /// <p>If the preset settings don't comply with the standards for the video codec but Elastic Transcoder created the preset, this message explains the reason the preset settings don't meet the standard. Elastic Transcoder created the preset because the settings might produce acceptable output.</p>
    pub fn warning(&self) -> std::option::Option<&str> {
        self.warning.as_deref()
    }
}
impl aws_http::request_id::RequestId for CreatePresetOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl CreatePresetOutput {
    /// Creates a new builder-style object to manufacture [`CreatePresetOutput`](crate::operation::create_preset::CreatePresetOutput).
    pub fn builder() -> crate::operation::create_preset::builders::CreatePresetOutputBuilder {
        crate::operation::create_preset::builders::CreatePresetOutputBuilder::default()
    }
}

/// A builder for [`CreatePresetOutput`](crate::operation::create_preset::CreatePresetOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct CreatePresetOutputBuilder {
    pub(crate) preset: std::option::Option<crate::types::Preset>,
    pub(crate) warning: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl CreatePresetOutputBuilder {
    /// <p>A section of the response body that provides information about the preset that is created.</p>
    pub fn preset(mut self, input: crate::types::Preset) -> Self {
        self.preset = Some(input);
        self
    }
    /// <p>A section of the response body that provides information about the preset that is created.</p>
    pub fn set_preset(mut self, input: std::option::Option<crate::types::Preset>) -> Self {
        self.preset = input;
        self
    }
    /// <p>If the preset settings don't comply with the standards for the video codec but Elastic Transcoder created the preset, this message explains the reason the preset settings don't meet the standard. Elastic Transcoder created the preset because the settings might produce acceptable output.</p>
    pub fn warning(mut self, input: impl Into<std::string::String>) -> Self {
        self.warning = Some(input.into());
        self
    }
    /// <p>If the preset settings don't comply with the standards for the video codec but Elastic Transcoder created the preset, this message explains the reason the preset settings don't meet the standard. Elastic Transcoder created the preset because the settings might produce acceptable output.</p>
    pub fn set_warning(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.warning = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`CreatePresetOutput`](crate::operation::create_preset::CreatePresetOutput).
    pub fn build(self) -> crate::operation::create_preset::CreatePresetOutput {
        crate::operation::create_preset::CreatePresetOutput {
            preset: self.preset,
            warning: self.warning,
            _request_id: self._request_id,
        }
    }
}
