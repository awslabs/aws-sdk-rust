// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The <code>UpdatePipelineNotificationsResponse</code> structure.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct UpdatePipelineNotificationsOutput {
    /// <p>A section of the response body that provides information about the pipeline associated with this notification.</p>
    #[doc(hidden)]
    pub pipeline: std::option::Option<crate::types::Pipeline>,
    _request_id: Option<String>,
}
impl UpdatePipelineNotificationsOutput {
    /// <p>A section of the response body that provides information about the pipeline associated with this notification.</p>
    pub fn pipeline(&self) -> std::option::Option<&crate::types::Pipeline> {
        self.pipeline.as_ref()
    }
}
impl aws_http::request_id::RequestId for UpdatePipelineNotificationsOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl UpdatePipelineNotificationsOutput {
    /// Creates a new builder-style object to manufacture [`UpdatePipelineNotificationsOutput`](crate::operation::update_pipeline_notifications::UpdatePipelineNotificationsOutput).
    pub fn builder() -> crate::operation::update_pipeline_notifications::builders::UpdatePipelineNotificationsOutputBuilder{
        crate::operation::update_pipeline_notifications::builders::UpdatePipelineNotificationsOutputBuilder::default()
    }
}

/// A builder for [`UpdatePipelineNotificationsOutput`](crate::operation::update_pipeline_notifications::UpdatePipelineNotificationsOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct UpdatePipelineNotificationsOutputBuilder {
    pub(crate) pipeline: std::option::Option<crate::types::Pipeline>,
    _request_id: Option<String>,
}
impl UpdatePipelineNotificationsOutputBuilder {
    /// <p>A section of the response body that provides information about the pipeline associated with this notification.</p>
    pub fn pipeline(mut self, input: crate::types::Pipeline) -> Self {
        self.pipeline = Some(input);
        self
    }
    /// <p>A section of the response body that provides information about the pipeline associated with this notification.</p>
    pub fn set_pipeline(mut self, input: std::option::Option<crate::types::Pipeline>) -> Self {
        self.pipeline = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`UpdatePipelineNotificationsOutput`](crate::operation::update_pipeline_notifications::UpdatePipelineNotificationsOutput).
    pub fn build(
        self,
    ) -> crate::operation::update_pipeline_notifications::UpdatePipelineNotificationsOutput {
        crate::operation::update_pipeline_notifications::UpdatePipelineNotificationsOutput {
            pipeline: self.pipeline,
            _request_id: self._request_id,
        }
    }
}
