// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The <code>ReadPresetResponse</code> structure.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ReadPresetOutput {
    /// <p>A section of the response body that provides information about the preset.</p>
    #[doc(hidden)]
    pub preset: std::option::Option<crate::types::Preset>,
    _request_id: Option<String>,
}
impl ReadPresetOutput {
    /// <p>A section of the response body that provides information about the preset.</p>
    pub fn preset(&self) -> std::option::Option<&crate::types::Preset> {
        self.preset.as_ref()
    }
}
impl aws_http::request_id::RequestId for ReadPresetOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl ReadPresetOutput {
    /// Creates a new builder-style object to manufacture [`ReadPresetOutput`](crate::operation::read_preset::ReadPresetOutput).
    pub fn builder() -> crate::operation::read_preset::builders::ReadPresetOutputBuilder {
        crate::operation::read_preset::builders::ReadPresetOutputBuilder::default()
    }
}

/// A builder for [`ReadPresetOutput`](crate::operation::read_preset::ReadPresetOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ReadPresetOutputBuilder {
    pub(crate) preset: std::option::Option<crate::types::Preset>,
    _request_id: Option<String>,
}
impl ReadPresetOutputBuilder {
    /// <p>A section of the response body that provides information about the preset.</p>
    pub fn preset(mut self, input: crate::types::Preset) -> Self {
        self.preset = Some(input);
        self
    }
    /// <p>A section of the response body that provides information about the preset.</p>
    pub fn set_preset(mut self, input: std::option::Option<crate::types::Preset>) -> Self {
        self.preset = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`ReadPresetOutput`](crate::operation::read_preset::ReadPresetOutput).
    pub fn build(self) -> crate::operation::read_preset::ReadPresetOutput {
        crate::operation::read_preset::ReadPresetOutput {
            preset: self.preset,
            _request_id: self._request_id,
        }
    }
}
