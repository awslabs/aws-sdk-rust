// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_start_lending_analysis_input(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::start_lending_analysis::StartLendingAnalysisInput,
) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    if let Some(var_1) = &input.document_location {
        #[allow(unused_mut)]
        let mut object_2 = object.key("DocumentLocation").start_object();
        crate::protocol_serde::shape_document_location::ser_document_location(
            &mut object_2,
            var_1,
        )?;
        object_2.finish();
    }
    if let Some(var_3) = &input.client_request_token {
        object.key("ClientRequestToken").string(var_3.as_str());
    }
    if let Some(var_4) = &input.job_tag {
        object.key("JobTag").string(var_4.as_str());
    }
    if let Some(var_5) = &input.notification_channel {
        #[allow(unused_mut)]
        let mut object_6 = object.key("NotificationChannel").start_object();
        crate::protocol_serde::shape_notification_channel::ser_notification_channel(
            &mut object_6,
            var_5,
        )?;
        object_6.finish();
    }
    if let Some(var_7) = &input.output_config {
        #[allow(unused_mut)]
        let mut object_8 = object.key("OutputConfig").start_object();
        crate::protocol_serde::shape_output_config::ser_output_config(&mut object_8, var_7)?;
        object_8.finish();
    }
    if let Some(var_9) = &input.kms_key_id {
        object.key("KMSKeyId").string(var_9.as_str());
    }
    Ok(())
}
