// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Structure containing both the normalized type of the extracted information and the text associated with it. These are extracted as Type and Value respectively.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct IdentityDocumentField {
    /// <p>Used to contain the information detected by an AnalyzeID operation.</p>
    #[doc(hidden)]
    pub r#type: std::option::Option<crate::types::AnalyzeIdDetections>,
    /// <p>Used to contain the information detected by an AnalyzeID operation.</p>
    #[doc(hidden)]
    pub value_detection: std::option::Option<crate::types::AnalyzeIdDetections>,
}
impl IdentityDocumentField {
    /// <p>Used to contain the information detected by an AnalyzeID operation.</p>
    pub fn r#type(&self) -> std::option::Option<&crate::types::AnalyzeIdDetections> {
        self.r#type.as_ref()
    }
    /// <p>Used to contain the information detected by an AnalyzeID operation.</p>
    pub fn value_detection(&self) -> std::option::Option<&crate::types::AnalyzeIdDetections> {
        self.value_detection.as_ref()
    }
}
impl IdentityDocumentField {
    /// Creates a new builder-style object to manufacture [`IdentityDocumentField`](crate::types::IdentityDocumentField).
    pub fn builder() -> crate::types::builders::IdentityDocumentFieldBuilder {
        crate::types::builders::IdentityDocumentFieldBuilder::default()
    }
}

/// A builder for [`IdentityDocumentField`](crate::types::IdentityDocumentField).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct IdentityDocumentFieldBuilder {
    pub(crate) r#type: std::option::Option<crate::types::AnalyzeIdDetections>,
    pub(crate) value_detection: std::option::Option<crate::types::AnalyzeIdDetections>,
}
impl IdentityDocumentFieldBuilder {
    /// <p>Used to contain the information detected by an AnalyzeID operation.</p>
    pub fn r#type(mut self, input: crate::types::AnalyzeIdDetections) -> Self {
        self.r#type = Some(input);
        self
    }
    /// <p>Used to contain the information detected by an AnalyzeID operation.</p>
    pub fn set_type(
        mut self,
        input: std::option::Option<crate::types::AnalyzeIdDetections>,
    ) -> Self {
        self.r#type = input;
        self
    }
    /// <p>Used to contain the information detected by an AnalyzeID operation.</p>
    pub fn value_detection(mut self, input: crate::types::AnalyzeIdDetections) -> Self {
        self.value_detection = Some(input);
        self
    }
    /// <p>Used to contain the information detected by an AnalyzeID operation.</p>
    pub fn set_value_detection(
        mut self,
        input: std::option::Option<crate::types::AnalyzeIdDetections>,
    ) -> Self {
        self.value_detection = input;
        self
    }
    /// Consumes the builder and constructs a [`IdentityDocumentField`](crate::types::IdentityDocumentField).
    pub fn build(self) -> crate::types::IdentityDocumentField {
        crate::types::IdentityDocumentField {
            r#type: self.r#type,
            value_detection: self.value_detection,
        }
    }
}
