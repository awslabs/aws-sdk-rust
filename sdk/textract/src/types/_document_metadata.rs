// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about the input document.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DocumentMetadata {
    /// <p>The number of pages that are detected in the document.</p>
    #[doc(hidden)]
    pub pages: std::option::Option<i32>,
}
impl DocumentMetadata {
    /// <p>The number of pages that are detected in the document.</p>
    pub fn pages(&self) -> std::option::Option<i32> {
        self.pages
    }
}
impl DocumentMetadata {
    /// Creates a new builder-style object to manufacture [`DocumentMetadata`](crate::types::DocumentMetadata).
    pub fn builder() -> crate::types::builders::DocumentMetadataBuilder {
        crate::types::builders::DocumentMetadataBuilder::default()
    }
}

/// A builder for [`DocumentMetadata`](crate::types::DocumentMetadata).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DocumentMetadataBuilder {
    pub(crate) pages: std::option::Option<i32>,
}
impl DocumentMetadataBuilder {
    /// <p>The number of pages that are detected in the document.</p>
    pub fn pages(mut self, input: i32) -> Self {
        self.pages = Some(input);
        self
    }
    /// <p>The number of pages that are detected in the document.</p>
    pub fn set_pages(mut self, input: std::option::Option<i32>) -> Self {
        self.pages = input;
        self
    }
    /// Consumes the builder and constructs a [`DocumentMetadata`](crate::types::DocumentMetadata).
    pub fn build(self) -> crate::types::DocumentMetadata {
        crate::types::DocumentMetadata { pages: self.pages }
    }
}
