// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A structure that holds information regarding a detected signature on a page.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DetectedSignature {
    /// <p>The page a detected signature was found on.</p>
    #[doc(hidden)]
    pub page: std::option::Option<i32>,
}
impl DetectedSignature {
    /// <p>The page a detected signature was found on.</p>
    pub fn page(&self) -> std::option::Option<i32> {
        self.page
    }
}
impl DetectedSignature {
    /// Creates a new builder-style object to manufacture [`DetectedSignature`](crate::types::DetectedSignature).
    pub fn builder() -> crate::types::builders::DetectedSignatureBuilder {
        crate::types::builders::DetectedSignatureBuilder::default()
    }
}

/// A builder for [`DetectedSignature`](crate::types::DetectedSignature).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DetectedSignatureBuilder {
    pub(crate) page: std::option::Option<i32>,
}
impl DetectedSignatureBuilder {
    /// <p>The page a detected signature was found on.</p>
    pub fn page(mut self, input: i32) -> Self {
        self.page = Some(input);
        self
    }
    /// <p>The page a detected signature was found on.</p>
    pub fn set_page(mut self, input: std::option::Option<i32>) -> Self {
        self.page = input;
        self
    }
    /// Consumes the builder and constructs a [`DetectedSignature`](crate::types::DetectedSignature).
    pub fn build(self) -> crate::types::DetectedSignature {
        crate::types::DetectedSignature { page: self.page }
    }
}
