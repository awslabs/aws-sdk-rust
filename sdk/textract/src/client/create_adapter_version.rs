// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateAdapterVersion`](crate::operation::create_adapter_version::builders::CreateAdapterVersionFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`adapter_id(impl Into<String>)`](crate::operation::create_adapter_version::builders::CreateAdapterVersionFluentBuilder::adapter_id) / [`set_adapter_id(Option<String>)`](crate::operation::create_adapter_version::builders::CreateAdapterVersionFluentBuilder::set_adapter_id):<br>required: **true**<br><p>A string containing a unique ID for the adapter that will receive a new version.</p><br>
    ///   - [`client_request_token(impl Into<String>)`](crate::operation::create_adapter_version::builders::CreateAdapterVersionFluentBuilder::client_request_token) / [`set_client_request_token(Option<String>)`](crate::operation::create_adapter_version::builders::CreateAdapterVersionFluentBuilder::set_client_request_token):<br>required: **false**<br><p>Idempotent token is used to recognize the request. If the same token is used with multiple CreateAdapterVersion requests, the same session is returned. This token is employed to avoid unintentionally creating the same session multiple times.</p><br>
    ///   - [`dataset_config(AdapterVersionDatasetConfig)`](crate::operation::create_adapter_version::builders::CreateAdapterVersionFluentBuilder::dataset_config) / [`set_dataset_config(Option<AdapterVersionDatasetConfig>)`](crate::operation::create_adapter_version::builders::CreateAdapterVersionFluentBuilder::set_dataset_config):<br>required: **true**<br><p>Specifies a dataset used to train a new adapter version. Takes a ManifestS3Object as the value.</p><br>
    ///   - [`kms_key_id(impl Into<String>)`](crate::operation::create_adapter_version::builders::CreateAdapterVersionFluentBuilder::kms_key_id) / [`set_kms_key_id(Option<String>)`](crate::operation::create_adapter_version::builders::CreateAdapterVersionFluentBuilder::set_kms_key_id):<br>required: **false**<br><p>The identifier for your AWS Key Management Service key (AWS KMS key). Used to encrypt your documents.</p><br>
    ///   - [`output_config(OutputConfig)`](crate::operation::create_adapter_version::builders::CreateAdapterVersionFluentBuilder::output_config) / [`set_output_config(Option<OutputConfig>)`](crate::operation::create_adapter_version::builders::CreateAdapterVersionFluentBuilder::set_output_config):<br>required: **true**<br><p>Sets whether or not your output will go to a user created bucket. Used to set the name of the bucket, and the prefix on the output file.</p>  <p> <code>OutputConfig</code> is an optional parameter which lets you adjust where your output will be placed. By default, Amazon Textract will store the results internally and can only be accessed by the Get API operations. With <code>OutputConfig</code> enabled, you can set the name of the bucket the output will be sent to the file prefix of the results where you can download your results. Additionally, you can set the <code>KMSKeyID</code> parameter to a customer master key (CMK) to encrypt your output. Without this parameter set Amazon Textract will encrypt server-side using the AWS managed CMK for Amazon S3.</p>  <p>Decryption of Customer Content is necessary for processing of the documents by Amazon Textract. If your account is opted out under an AI services opt out policy then all unencrypted Customer Content is immediately and permanently deleted after the Customer Content has been processed by the service. No copy of of the output is retained by Amazon Textract. For information about how to opt out, see <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_ai-opt-out.html"> Managing AI services opt-out policy. </a> </p>  <p>For more information on data privacy, see the <a href="https://aws.amazon.com/compliance/data-privacy-faq/">Data Privacy FAQ</a>.</p><br>
    ///   - [`tags(impl Into<String>, impl Into<String>)`](crate::operation::create_adapter_version::builders::CreateAdapterVersionFluentBuilder::tags) / [`set_tags(Option<HashMap::<String, String>>)`](crate::operation::create_adapter_version::builders::CreateAdapterVersionFluentBuilder::set_tags):<br>required: **false**<br><p>A set of tags (key-value pairs) that you want to attach to the adapter version. </p><br>
    /// - On success, responds with [`CreateAdapterVersionOutput`](crate::operation::create_adapter_version::CreateAdapterVersionOutput) with field(s):
    ///   - [`adapter_id(Option<String>)`](crate::operation::create_adapter_version::CreateAdapterVersionOutput::adapter_id): <p>A string containing the unique ID for the adapter that has received a new version.</p>
    ///   - [`adapter_version(Option<String>)`](crate::operation::create_adapter_version::CreateAdapterVersionOutput::adapter_version): <p>A string describing the new version of the adapter.</p>
    /// - On failure, responds with [`SdkError<CreateAdapterVersionError>`](crate::operation::create_adapter_version::CreateAdapterVersionError)
    pub fn create_adapter_version(&self) -> crate::operation::create_adapter_version::builders::CreateAdapterVersionFluentBuilder {
        crate::operation::create_adapter_version::builders::CreateAdapterVersionFluentBuilder::new(self.handle.clone())
    }
}
