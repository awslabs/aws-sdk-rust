// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateAdapter`](crate::operation::create_adapter::builders::CreateAdapterFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`adapter_name(impl Into<String>)`](crate::operation::create_adapter::builders::CreateAdapterFluentBuilder::adapter_name) / [`set_adapter_name(Option<String>)`](crate::operation::create_adapter::builders::CreateAdapterFluentBuilder::set_adapter_name):<br>required: **true**<br><p>The name to be assigned to the adapter being created.</p><br>
    ///   - [`client_request_token(impl Into<String>)`](crate::operation::create_adapter::builders::CreateAdapterFluentBuilder::client_request_token) / [`set_client_request_token(Option<String>)`](crate::operation::create_adapter::builders::CreateAdapterFluentBuilder::set_client_request_token):<br>required: **false**<br><p>Idempotent token is used to recognize the request. If the same token is used with multiple CreateAdapter requests, the same session is returned. This token is employed to avoid unintentionally creating the same session multiple times.</p><br>
    ///   - [`description(impl Into<String>)`](crate::operation::create_adapter::builders::CreateAdapterFluentBuilder::description) / [`set_description(Option<String>)`](crate::operation::create_adapter::builders::CreateAdapterFluentBuilder::set_description):<br>required: **false**<br><p>The description to be assigned to the adapter being created.</p><br>
    ///   - [`feature_types(FeatureType)`](crate::operation::create_adapter::builders::CreateAdapterFluentBuilder::feature_types) / [`set_feature_types(Option<Vec::<FeatureType>>)`](crate::operation::create_adapter::builders::CreateAdapterFluentBuilder::set_feature_types):<br>required: **true**<br><p>The type of feature that the adapter is being trained on. Currrenly, supported feature types are: <code>QUERIES</code> </p><br>
    ///   - [`auto_update(AutoUpdate)`](crate::operation::create_adapter::builders::CreateAdapterFluentBuilder::auto_update) / [`set_auto_update(Option<AutoUpdate>)`](crate::operation::create_adapter::builders::CreateAdapterFluentBuilder::set_auto_update):<br>required: **false**<br><p>Controls whether or not the adapter should automatically update.</p><br>
    ///   - [`tags(impl Into<String>, impl Into<String>)`](crate::operation::create_adapter::builders::CreateAdapterFluentBuilder::tags) / [`set_tags(Option<HashMap::<String, String>>)`](crate::operation::create_adapter::builders::CreateAdapterFluentBuilder::set_tags):<br>required: **false**<br><p>A list of tags to be added to the adapter.</p><br>
    /// - On success, responds with [`CreateAdapterOutput`](crate::operation::create_adapter::CreateAdapterOutput) with field(s):
    ///   - [`adapter_id(Option<String>)`](crate::operation::create_adapter::CreateAdapterOutput::adapter_id): <p>A string containing the unique ID for the adapter that has been created.</p>
    /// - On failure, responds with [`SdkError<CreateAdapterError>`](crate::operation::create_adapter::CreateAdapterError)
    pub fn create_adapter(&self) -> crate::operation::create_adapter::builders::CreateAdapterFluentBuilder {
        crate::operation::create_adapter::builders::CreateAdapterFluentBuilder::new(self.handle.clone())
    }
}
