// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AnalyzeIdInput {
    /// <p>The document being passed to AnalyzeID.</p>
    #[doc(hidden)]
    pub document_pages: std::option::Option<std::vec::Vec<crate::types::Document>>,
}
impl AnalyzeIdInput {
    /// <p>The document being passed to AnalyzeID.</p>
    pub fn document_pages(&self) -> std::option::Option<&[crate::types::Document]> {
        self.document_pages.as_deref()
    }
}
impl AnalyzeIdInput {
    /// Creates a new builder-style object to manufacture [`AnalyzeIdInput`](crate::operation::analyze_id::AnalyzeIdInput).
    pub fn builder() -> crate::operation::analyze_id::builders::AnalyzeIdInputBuilder {
        crate::operation::analyze_id::builders::AnalyzeIdInputBuilder::default()
    }
}

/// A builder for [`AnalyzeIdInput`](crate::operation::analyze_id::AnalyzeIdInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AnalyzeIdInputBuilder {
    pub(crate) document_pages: std::option::Option<std::vec::Vec<crate::types::Document>>,
}
impl AnalyzeIdInputBuilder {
    /// Appends an item to `document_pages`.
    ///
    /// To override the contents of this collection use [`set_document_pages`](Self::set_document_pages).
    ///
    /// <p>The document being passed to AnalyzeID.</p>
    pub fn document_pages(mut self, input: crate::types::Document) -> Self {
        let mut v = self.document_pages.unwrap_or_default();
        v.push(input);
        self.document_pages = Some(v);
        self
    }
    /// <p>The document being passed to AnalyzeID.</p>
    pub fn set_document_pages(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::Document>>,
    ) -> Self {
        self.document_pages = input;
        self
    }
    /// Consumes the builder and constructs a [`AnalyzeIdInput`](crate::operation::analyze_id::AnalyzeIdInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::analyze_id::AnalyzeIdInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(crate::operation::analyze_id::AnalyzeIdInput {
            document_pages: self.document_pages,
        })
    }
}
