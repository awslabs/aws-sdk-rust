// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct CreateServicePrincipalNameInput {
    /// <p>The Amazon Resource Name (ARN) that was returned when you called <a href="https://docs.aws.amazon.com/pca-connector-ad/latest/APIReference/API_CreateDirectoryRegistration.html">CreateDirectoryRegistration</a>.</p>
    pub directory_registration_arn: ::std::option::Option<::std::string::String>,
    /// <p> The Amazon Resource Name (ARN) that was returned when you called <a href="https://docs.aws.amazon.com/pca-connector-ad/latest/APIReference/API_CreateConnector.html">CreateConnector</a>.</p>
    pub connector_arn: ::std::option::Option<::std::string::String>,
    /// <p>Idempotency token.</p>
    pub client_token: ::std::option::Option<::std::string::String>,
}
impl CreateServicePrincipalNameInput {
    /// <p>The Amazon Resource Name (ARN) that was returned when you called <a href="https://docs.aws.amazon.com/pca-connector-ad/latest/APIReference/API_CreateDirectoryRegistration.html">CreateDirectoryRegistration</a>.</p>
    pub fn directory_registration_arn(&self) -> ::std::option::Option<&str> {
        self.directory_registration_arn.as_deref()
    }
    /// <p> The Amazon Resource Name (ARN) that was returned when you called <a href="https://docs.aws.amazon.com/pca-connector-ad/latest/APIReference/API_CreateConnector.html">CreateConnector</a>.</p>
    pub fn connector_arn(&self) -> ::std::option::Option<&str> {
        self.connector_arn.as_deref()
    }
    /// <p>Idempotency token.</p>
    pub fn client_token(&self) -> ::std::option::Option<&str> {
        self.client_token.as_deref()
    }
}
impl CreateServicePrincipalNameInput {
    /// Creates a new builder-style object to manufacture [`CreateServicePrincipalNameInput`](crate::operation::create_service_principal_name::CreateServicePrincipalNameInput).
    pub fn builder() -> crate::operation::create_service_principal_name::builders::CreateServicePrincipalNameInputBuilder {
        crate::operation::create_service_principal_name::builders::CreateServicePrincipalNameInputBuilder::default()
    }
}

/// A builder for [`CreateServicePrincipalNameInput`](crate::operation::create_service_principal_name::CreateServicePrincipalNameInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct CreateServicePrincipalNameInputBuilder {
    pub(crate) directory_registration_arn: ::std::option::Option<::std::string::String>,
    pub(crate) connector_arn: ::std::option::Option<::std::string::String>,
    pub(crate) client_token: ::std::option::Option<::std::string::String>,
}
impl CreateServicePrincipalNameInputBuilder {
    /// <p>The Amazon Resource Name (ARN) that was returned when you called <a href="https://docs.aws.amazon.com/pca-connector-ad/latest/APIReference/API_CreateDirectoryRegistration.html">CreateDirectoryRegistration</a>.</p>
    /// This field is required.
    pub fn directory_registration_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.directory_registration_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) that was returned when you called <a href="https://docs.aws.amazon.com/pca-connector-ad/latest/APIReference/API_CreateDirectoryRegistration.html">CreateDirectoryRegistration</a>.</p>
    pub fn set_directory_registration_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.directory_registration_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) that was returned when you called <a href="https://docs.aws.amazon.com/pca-connector-ad/latest/APIReference/API_CreateDirectoryRegistration.html">CreateDirectoryRegistration</a>.</p>
    pub fn get_directory_registration_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.directory_registration_arn
    }
    /// <p> The Amazon Resource Name (ARN) that was returned when you called <a href="https://docs.aws.amazon.com/pca-connector-ad/latest/APIReference/API_CreateConnector.html">CreateConnector</a>.</p>
    /// This field is required.
    pub fn connector_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.connector_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p> The Amazon Resource Name (ARN) that was returned when you called <a href="https://docs.aws.amazon.com/pca-connector-ad/latest/APIReference/API_CreateConnector.html">CreateConnector</a>.</p>
    pub fn set_connector_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.connector_arn = input;
        self
    }
    /// <p> The Amazon Resource Name (ARN) that was returned when you called <a href="https://docs.aws.amazon.com/pca-connector-ad/latest/APIReference/API_CreateConnector.html">CreateConnector</a>.</p>
    pub fn get_connector_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.connector_arn
    }
    /// <p>Idempotency token.</p>
    pub fn client_token(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.client_token = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Idempotency token.</p>
    pub fn set_client_token(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.client_token = input;
        self
    }
    /// <p>Idempotency token.</p>
    pub fn get_client_token(&self) -> &::std::option::Option<::std::string::String> {
        &self.client_token
    }
    /// Consumes the builder and constructs a [`CreateServicePrincipalNameInput`](crate::operation::create_service_principal_name::CreateServicePrincipalNameInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::create_service_principal_name::CreateServicePrincipalNameInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::create_service_principal_name::CreateServicePrincipalNameInput {
            directory_registration_arn: self.directory_registration_arn,
            connector_arn: self.connector_arn,
            client_token: self.client_token,
        })
    }
}
