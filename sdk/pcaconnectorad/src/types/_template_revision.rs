// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The revision version of the template. Template updates will increment the minor revision. Re-enrolling all certificate holders will increment the major revision.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct TemplateRevision {
    /// <p>The revision version of the template. Re-enrolling all certificate holders will increment the major revision.</p>
    pub major_revision: i32,
    /// <p>The revision version of the template. Re-enrolling all certificate holders will increment the major revision.</p>
    pub minor_revision: i32,
}
impl TemplateRevision {
    /// <p>The revision version of the template. Re-enrolling all certificate holders will increment the major revision.</p>
    pub fn major_revision(&self) -> i32 {
        self.major_revision
    }
    /// <p>The revision version of the template. Re-enrolling all certificate holders will increment the major revision.</p>
    pub fn minor_revision(&self) -> i32 {
        self.minor_revision
    }
}
impl TemplateRevision {
    /// Creates a new builder-style object to manufacture [`TemplateRevision`](crate::types::TemplateRevision).
    pub fn builder() -> crate::types::builders::TemplateRevisionBuilder {
        crate::types::builders::TemplateRevisionBuilder::default()
    }
}

/// A builder for [`TemplateRevision`](crate::types::TemplateRevision).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct TemplateRevisionBuilder {
    pub(crate) major_revision: ::std::option::Option<i32>,
    pub(crate) minor_revision: ::std::option::Option<i32>,
}
impl TemplateRevisionBuilder {
    /// <p>The revision version of the template. Re-enrolling all certificate holders will increment the major revision.</p>
    /// This field is required.
    pub fn major_revision(mut self, input: i32) -> Self {
        self.major_revision = ::std::option::Option::Some(input);
        self
    }
    /// <p>The revision version of the template. Re-enrolling all certificate holders will increment the major revision.</p>
    pub fn set_major_revision(mut self, input: ::std::option::Option<i32>) -> Self {
        self.major_revision = input;
        self
    }
    /// <p>The revision version of the template. Re-enrolling all certificate holders will increment the major revision.</p>
    pub fn get_major_revision(&self) -> &::std::option::Option<i32> {
        &self.major_revision
    }
    /// <p>The revision version of the template. Re-enrolling all certificate holders will increment the major revision.</p>
    /// This field is required.
    pub fn minor_revision(mut self, input: i32) -> Self {
        self.minor_revision = ::std::option::Option::Some(input);
        self
    }
    /// <p>The revision version of the template. Re-enrolling all certificate holders will increment the major revision.</p>
    pub fn set_minor_revision(mut self, input: ::std::option::Option<i32>) -> Self {
        self.minor_revision = input;
        self
    }
    /// <p>The revision version of the template. Re-enrolling all certificate holders will increment the major revision.</p>
    pub fn get_minor_revision(&self) -> &::std::option::Option<i32> {
        &self.minor_revision
    }
    /// Consumes the builder and constructs a [`TemplateRevision`](crate::types::TemplateRevision).
    /// This method will fail if any of the following fields are not set:
    /// - [`major_revision`](crate::types::builders::TemplateRevisionBuilder::major_revision)
    /// - [`minor_revision`](crate::types::builders::TemplateRevisionBuilder::minor_revision)
    pub fn build(self) -> ::std::result::Result<crate::types::TemplateRevision, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::TemplateRevision {
            major_revision: self.major_revision.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "major_revision",
                    "major_revision was not specified but it is required when building TemplateRevision",
                )
            })?,
            minor_revision: self.minor_revision.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "minor_revision",
                    "minor_revision was not specified but it is required when building TemplateRevision",
                )
            })?,
        })
    }
}
