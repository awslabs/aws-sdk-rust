// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ExchangeCodeForTokenInput {
    /// <p>The third-party provider for the token. The only valid value is <code>figma</code>.</p>
    pub provider: ::std::option::Option<crate::types::TokenProviders>,
    /// <p>Describes the configuration of the request.</p>
    pub request: ::std::option::Option<crate::types::ExchangeCodeForTokenRequestBody>,
}
impl ExchangeCodeForTokenInput {
    /// <p>The third-party provider for the token. The only valid value is <code>figma</code>.</p>
    pub fn provider(&self) -> ::std::option::Option<&crate::types::TokenProviders> {
        self.provider.as_ref()
    }
    /// <p>Describes the configuration of the request.</p>
    pub fn request(&self) -> ::std::option::Option<&crate::types::ExchangeCodeForTokenRequestBody> {
        self.request.as_ref()
    }
}
impl ExchangeCodeForTokenInput {
    /// Creates a new builder-style object to manufacture [`ExchangeCodeForTokenInput`](crate::operation::exchange_code_for_token::ExchangeCodeForTokenInput).
    pub fn builder() -> crate::operation::exchange_code_for_token::builders::ExchangeCodeForTokenInputBuilder {
        crate::operation::exchange_code_for_token::builders::ExchangeCodeForTokenInputBuilder::default()
    }
}

/// A builder for [`ExchangeCodeForTokenInput`](crate::operation::exchange_code_for_token::ExchangeCodeForTokenInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ExchangeCodeForTokenInputBuilder {
    pub(crate) provider: ::std::option::Option<crate::types::TokenProviders>,
    pub(crate) request: ::std::option::Option<crate::types::ExchangeCodeForTokenRequestBody>,
}
impl ExchangeCodeForTokenInputBuilder {
    /// <p>The third-party provider for the token. The only valid value is <code>figma</code>.</p>
    /// This field is required.
    pub fn provider(mut self, input: crate::types::TokenProviders) -> Self {
        self.provider = ::std::option::Option::Some(input);
        self
    }
    /// <p>The third-party provider for the token. The only valid value is <code>figma</code>.</p>
    pub fn set_provider(mut self, input: ::std::option::Option<crate::types::TokenProviders>) -> Self {
        self.provider = input;
        self
    }
    /// <p>The third-party provider for the token. The only valid value is <code>figma</code>.</p>
    pub fn get_provider(&self) -> &::std::option::Option<crate::types::TokenProviders> {
        &self.provider
    }
    /// <p>Describes the configuration of the request.</p>
    /// This field is required.
    pub fn request(mut self, input: crate::types::ExchangeCodeForTokenRequestBody) -> Self {
        self.request = ::std::option::Option::Some(input);
        self
    }
    /// <p>Describes the configuration of the request.</p>
    pub fn set_request(mut self, input: ::std::option::Option<crate::types::ExchangeCodeForTokenRequestBody>) -> Self {
        self.request = input;
        self
    }
    /// <p>Describes the configuration of the request.</p>
    pub fn get_request(&self) -> &::std::option::Option<crate::types::ExchangeCodeForTokenRequestBody> {
        &self.request
    }
    /// Consumes the builder and constructs a [`ExchangeCodeForTokenInput`](crate::operation::exchange_code_for_token::ExchangeCodeForTokenInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::exchange_code_for_token::ExchangeCodeForTokenInput, ::aws_smithy_types::error::operation::BuildError>
    {
        ::std::result::Result::Ok(crate::operation::exchange_code_for_token::ExchangeCodeForTokenInput {
            provider: self.provider,
            request: self.request,
        })
    }
}
