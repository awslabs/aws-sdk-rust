// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ExportComponents`](crate::operation::export_components::builders::ExportComponentsFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::export_components::builders::ExportComponentsFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`app_id(impl Into<String>)`](crate::operation::export_components::builders::ExportComponentsFluentBuilder::app_id) / [`set_app_id(Option<String>)`](crate::operation::export_components::builders::ExportComponentsFluentBuilder::set_app_id): <p>The unique ID of the Amplify app to export components to.</p>
    ///   - [`environment_name(impl Into<String>)`](crate::operation::export_components::builders::ExportComponentsFluentBuilder::environment_name) / [`set_environment_name(Option<String>)`](crate::operation::export_components::builders::ExportComponentsFluentBuilder::set_environment_name): <p>The name of the backend environment that is a part of the Amplify app.</p>
    ///   - [`next_token(impl Into<String>)`](crate::operation::export_components::builders::ExportComponentsFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::export_components::builders::ExportComponentsFluentBuilder::set_next_token): <p>The token to request the next page of results.</p>
    /// - On success, responds with [`ExportComponentsOutput`](crate::operation::export_components::ExportComponentsOutput) with field(s):
    ///   - [`entities(Option<Vec<Component>>)`](crate::operation::export_components::ExportComponentsOutput::entities): <p>Represents the configuration of the exported components.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::export_components::ExportComponentsOutput::next_token): <p>The pagination token that's included if more results are available.</p>
    /// - On failure, responds with [`SdkError<ExportComponentsError>`](crate::operation::export_components::ExportComponentsError)
    pub fn export_components(
        &self,
    ) -> crate::operation::export_components::builders::ExportComponentsFluentBuilder {
        crate::operation::export_components::builders::ExportComponentsFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
