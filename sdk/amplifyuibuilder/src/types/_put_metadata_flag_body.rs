// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Stores the metadata information about a feature on a form or view.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct PutMetadataFlagBody {
    /// <p>The new information to store.</p>
    #[doc(hidden)]
    pub new_value: std::option::Option<std::string::String>,
}
impl PutMetadataFlagBody {
    /// <p>The new information to store.</p>
    pub fn new_value(&self) -> std::option::Option<&str> {
        self.new_value.as_deref()
    }
}
impl PutMetadataFlagBody {
    /// Creates a new builder-style object to manufacture [`PutMetadataFlagBody`](crate::types::PutMetadataFlagBody).
    pub fn builder() -> crate::types::builders::PutMetadataFlagBodyBuilder {
        crate::types::builders::PutMetadataFlagBodyBuilder::default()
    }
}

/// A builder for [`PutMetadataFlagBody`](crate::types::PutMetadataFlagBody).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct PutMetadataFlagBodyBuilder {
    pub(crate) new_value: std::option::Option<std::string::String>,
}
impl PutMetadataFlagBodyBuilder {
    /// <p>The new information to store.</p>
    pub fn new_value(mut self, input: impl Into<std::string::String>) -> Self {
        self.new_value = Some(input.into());
        self
    }
    /// <p>The new information to store.</p>
    pub fn set_new_value(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.new_value = input;
        self
    }
    /// Consumes the builder and constructs a [`PutMetadataFlagBody`](crate::types::PutMetadataFlagBody).
    pub fn build(self) -> crate::types::PutMetadataFlagBody {
        crate::types::PutMetadataFlagBody {
            new_value: self.new_value,
        }
    }
}
