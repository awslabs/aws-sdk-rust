// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Describes the configuration for the form's style.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct FormStyle {
    /// <p>The spacing for the horizontal gap.</p>
    #[doc(hidden)]
    pub horizontal_gap: std::option::Option<crate::types::FormStyleConfig>,
    /// <p>The spacing for the vertical gap.</p>
    #[doc(hidden)]
    pub vertical_gap: std::option::Option<crate::types::FormStyleConfig>,
    /// <p>The size of the outer padding for the form.</p>
    #[doc(hidden)]
    pub outer_padding: std::option::Option<crate::types::FormStyleConfig>,
}
impl FormStyle {
    /// <p>The spacing for the horizontal gap.</p>
    pub fn horizontal_gap(&self) -> std::option::Option<&crate::types::FormStyleConfig> {
        self.horizontal_gap.as_ref()
    }
    /// <p>The spacing for the vertical gap.</p>
    pub fn vertical_gap(&self) -> std::option::Option<&crate::types::FormStyleConfig> {
        self.vertical_gap.as_ref()
    }
    /// <p>The size of the outer padding for the form.</p>
    pub fn outer_padding(&self) -> std::option::Option<&crate::types::FormStyleConfig> {
        self.outer_padding.as_ref()
    }
}
impl FormStyle {
    /// Creates a new builder-style object to manufacture [`FormStyle`](crate::types::FormStyle).
    pub fn builder() -> crate::types::builders::FormStyleBuilder {
        crate::types::builders::FormStyleBuilder::default()
    }
}

/// A builder for [`FormStyle`](crate::types::FormStyle).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct FormStyleBuilder {
    pub(crate) horizontal_gap: std::option::Option<crate::types::FormStyleConfig>,
    pub(crate) vertical_gap: std::option::Option<crate::types::FormStyleConfig>,
    pub(crate) outer_padding: std::option::Option<crate::types::FormStyleConfig>,
}
impl FormStyleBuilder {
    /// <p>The spacing for the horizontal gap.</p>
    pub fn horizontal_gap(mut self, input: crate::types::FormStyleConfig) -> Self {
        self.horizontal_gap = Some(input);
        self
    }
    /// <p>The spacing for the horizontal gap.</p>
    pub fn set_horizontal_gap(
        mut self,
        input: std::option::Option<crate::types::FormStyleConfig>,
    ) -> Self {
        self.horizontal_gap = input;
        self
    }
    /// <p>The spacing for the vertical gap.</p>
    pub fn vertical_gap(mut self, input: crate::types::FormStyleConfig) -> Self {
        self.vertical_gap = Some(input);
        self
    }
    /// <p>The spacing for the vertical gap.</p>
    pub fn set_vertical_gap(
        mut self,
        input: std::option::Option<crate::types::FormStyleConfig>,
    ) -> Self {
        self.vertical_gap = input;
        self
    }
    /// <p>The size of the outer padding for the form.</p>
    pub fn outer_padding(mut self, input: crate::types::FormStyleConfig) -> Self {
        self.outer_padding = Some(input);
        self
    }
    /// <p>The size of the outer padding for the form.</p>
    pub fn set_outer_padding(
        mut self,
        input: std::option::Option<crate::types::FormStyleConfig>,
    ) -> Self {
        self.outer_padding = input;
        self
    }
    /// Consumes the builder and constructs a [`FormStyle`](crate::types::FormStyle).
    pub fn build(self) -> crate::types::FormStyle {
        crate::types::FormStyle {
            horizontal_gap: self.horizontal_gap,
            vertical_gap: self.vertical_gap,
            outer_padding: self.outer_padding,
        }
    }
}
