// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Associates a component property to a binding property. This enables exposed properties on the top level component to propagate data to the component's property values.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ComponentPropertyBindingProperties {
    /// <p>The component property to bind to the data field.</p>
    #[doc(hidden)]
    pub property: std::option::Option<std::string::String>,
    /// <p>The data field to bind the property to.</p>
    #[doc(hidden)]
    pub field: std::option::Option<std::string::String>,
}
impl ComponentPropertyBindingProperties {
    /// <p>The component property to bind to the data field.</p>
    pub fn property(&self) -> std::option::Option<&str> {
        self.property.as_deref()
    }
    /// <p>The data field to bind the property to.</p>
    pub fn field(&self) -> std::option::Option<&str> {
        self.field.as_deref()
    }
}
impl ComponentPropertyBindingProperties {
    /// Creates a new builder-style object to manufacture [`ComponentPropertyBindingProperties`](crate::types::ComponentPropertyBindingProperties).
    pub fn builder() -> crate::types::builders::ComponentPropertyBindingPropertiesBuilder {
        crate::types::builders::ComponentPropertyBindingPropertiesBuilder::default()
    }
}

/// A builder for [`ComponentPropertyBindingProperties`](crate::types::ComponentPropertyBindingProperties).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ComponentPropertyBindingPropertiesBuilder {
    pub(crate) property: std::option::Option<std::string::String>,
    pub(crate) field: std::option::Option<std::string::String>,
}
impl ComponentPropertyBindingPropertiesBuilder {
    /// <p>The component property to bind to the data field.</p>
    pub fn property(mut self, input: impl Into<std::string::String>) -> Self {
        self.property = Some(input.into());
        self
    }
    /// <p>The component property to bind to the data field.</p>
    pub fn set_property(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.property = input;
        self
    }
    /// <p>The data field to bind the property to.</p>
    pub fn field(mut self, input: impl Into<std::string::String>) -> Self {
        self.field = Some(input.into());
        self
    }
    /// <p>The data field to bind the property to.</p>
    pub fn set_field(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.field = input;
        self
    }
    /// Consumes the builder and constructs a [`ComponentPropertyBindingProperties`](crate::types::ComponentPropertyBindingProperties).
    pub fn build(self) -> crate::types::ComponentPropertyBindingProperties {
        crate::types::ComponentPropertyBindingProperties {
            property: self.property,
            field: self.field,
        }
    }
}
