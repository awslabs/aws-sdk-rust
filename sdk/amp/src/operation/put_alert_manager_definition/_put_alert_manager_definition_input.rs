// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Represents the input of a PutAlertManagerDefinition operation.
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct PutAlertManagerDefinitionInput {
    /// The ID of the workspace in which to update the alert manager definition.
    #[doc(hidden)]
    pub workspace_id: std::option::Option<std::string::String>,
    /// The alert manager definition data.
    #[doc(hidden)]
    pub data: std::option::Option<aws_smithy_types::Blob>,
    /// Optional, unique, case-sensitive, user-provided identifier to ensure the idempotency of the request.
    #[doc(hidden)]
    pub client_token: std::option::Option<std::string::String>,
}
impl PutAlertManagerDefinitionInput {
    /// The ID of the workspace in which to update the alert manager definition.
    pub fn workspace_id(&self) -> std::option::Option<&str> {
        self.workspace_id.as_deref()
    }
    /// The alert manager definition data.
    pub fn data(&self) -> std::option::Option<&aws_smithy_types::Blob> {
        self.data.as_ref()
    }
    /// Optional, unique, case-sensitive, user-provided identifier to ensure the idempotency of the request.
    pub fn client_token(&self) -> std::option::Option<&str> {
        self.client_token.as_deref()
    }
}
impl PutAlertManagerDefinitionInput {
    /// Creates a new builder-style object to manufacture [`PutAlertManagerDefinitionInput`](crate::operation::put_alert_manager_definition::PutAlertManagerDefinitionInput).
    pub fn builder() -> crate::operation::put_alert_manager_definition::builders::PutAlertManagerDefinitionInputBuilder{
        crate::operation::put_alert_manager_definition::builders::PutAlertManagerDefinitionInputBuilder::default()
    }
}

/// A builder for [`PutAlertManagerDefinitionInput`](crate::operation::put_alert_manager_definition::PutAlertManagerDefinitionInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct PutAlertManagerDefinitionInputBuilder {
    pub(crate) workspace_id: std::option::Option<std::string::String>,
    pub(crate) data: std::option::Option<aws_smithy_types::Blob>,
    pub(crate) client_token: std::option::Option<std::string::String>,
}
impl PutAlertManagerDefinitionInputBuilder {
    /// The ID of the workspace in which to update the alert manager definition.
    pub fn workspace_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.workspace_id = Some(input.into());
        self
    }
    /// The ID of the workspace in which to update the alert manager definition.
    pub fn set_workspace_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.workspace_id = input;
        self
    }
    /// The alert manager definition data.
    pub fn data(mut self, input: aws_smithy_types::Blob) -> Self {
        self.data = Some(input);
        self
    }
    /// The alert manager definition data.
    pub fn set_data(mut self, input: std::option::Option<aws_smithy_types::Blob>) -> Self {
        self.data = input;
        self
    }
    /// Optional, unique, case-sensitive, user-provided identifier to ensure the idempotency of the request.
    pub fn client_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.client_token = Some(input.into());
        self
    }
    /// Optional, unique, case-sensitive, user-provided identifier to ensure the idempotency of the request.
    pub fn set_client_token(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.client_token = input;
        self
    }
    /// Consumes the builder and constructs a [`PutAlertManagerDefinitionInput`](crate::operation::put_alert_manager_definition::PutAlertManagerDefinitionInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::put_alert_manager_definition::PutAlertManagerDefinitionInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::put_alert_manager_definition::PutAlertManagerDefinitionInput {
                workspace_id: self.workspace_id,
                data: self.data,
                client_token: self.client_token,
            },
        )
    }
}
