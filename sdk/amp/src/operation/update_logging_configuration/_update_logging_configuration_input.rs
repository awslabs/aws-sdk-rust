// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Represents the input of an UpdateLoggingConfiguration operation.
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct UpdateLoggingConfigurationInput {
    /// The ID of the workspace to vend logs to.
    #[doc(hidden)]
    pub workspace_id: std::option::Option<std::string::String>,
    /// The ARN of the CW log group to which the vended log data will be published.
    #[doc(hidden)]
    pub log_group_arn: std::option::Option<std::string::String>,
    /// Optional, unique, case-sensitive, user-provided identifier to ensure the idempotency of the request.
    #[doc(hidden)]
    pub client_token: std::option::Option<std::string::String>,
}
impl UpdateLoggingConfigurationInput {
    /// The ID of the workspace to vend logs to.
    pub fn workspace_id(&self) -> std::option::Option<&str> {
        self.workspace_id.as_deref()
    }
    /// The ARN of the CW log group to which the vended log data will be published.
    pub fn log_group_arn(&self) -> std::option::Option<&str> {
        self.log_group_arn.as_deref()
    }
    /// Optional, unique, case-sensitive, user-provided identifier to ensure the idempotency of the request.
    pub fn client_token(&self) -> std::option::Option<&str> {
        self.client_token.as_deref()
    }
}
impl UpdateLoggingConfigurationInput {
    /// Creates a new builder-style object to manufacture [`UpdateLoggingConfigurationInput`](crate::operation::update_logging_configuration::UpdateLoggingConfigurationInput).
    pub fn builder() -> crate::operation::update_logging_configuration::builders::UpdateLoggingConfigurationInputBuilder{
        crate::operation::update_logging_configuration::builders::UpdateLoggingConfigurationInputBuilder::default()
    }
}

/// A builder for [`UpdateLoggingConfigurationInput`](crate::operation::update_logging_configuration::UpdateLoggingConfigurationInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct UpdateLoggingConfigurationInputBuilder {
    pub(crate) workspace_id: std::option::Option<std::string::String>,
    pub(crate) log_group_arn: std::option::Option<std::string::String>,
    pub(crate) client_token: std::option::Option<std::string::String>,
}
impl UpdateLoggingConfigurationInputBuilder {
    /// The ID of the workspace to vend logs to.
    pub fn workspace_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.workspace_id = Some(input.into());
        self
    }
    /// The ID of the workspace to vend logs to.
    pub fn set_workspace_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.workspace_id = input;
        self
    }
    /// The ARN of the CW log group to which the vended log data will be published.
    pub fn log_group_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.log_group_arn = Some(input.into());
        self
    }
    /// The ARN of the CW log group to which the vended log data will be published.
    pub fn set_log_group_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.log_group_arn = input;
        self
    }
    /// Optional, unique, case-sensitive, user-provided identifier to ensure the idempotency of the request.
    pub fn client_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.client_token = Some(input.into());
        self
    }
    /// Optional, unique, case-sensitive, user-provided identifier to ensure the idempotency of the request.
    pub fn set_client_token(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.client_token = input;
        self
    }
    /// Consumes the builder and constructs a [`UpdateLoggingConfigurationInput`](crate::operation::update_logging_configuration::UpdateLoggingConfigurationInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::update_logging_configuration::UpdateLoggingConfigurationInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::update_logging_configuration::UpdateLoggingConfigurationInput {
                workspace_id: self.workspace_id,
                log_group_arn: self.log_group_arn,
                client_token: self.client_token,
            },
        )
    }
}
