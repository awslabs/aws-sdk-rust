// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Represents the input of a DeleteRuleGroupsNamespace operation.
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DeleteRuleGroupsNamespaceInput {
    /// The ID of the workspace to delete rule group definition.
    #[doc(hidden)]
    pub workspace_id: std::option::Option<std::string::String>,
    /// The rule groups namespace name.
    #[doc(hidden)]
    pub name: std::option::Option<std::string::String>,
    /// Optional, unique, case-sensitive, user-provided identifier to ensure the idempotency of the request.
    #[doc(hidden)]
    pub client_token: std::option::Option<std::string::String>,
}
impl DeleteRuleGroupsNamespaceInput {
    /// The ID of the workspace to delete rule group definition.
    pub fn workspace_id(&self) -> std::option::Option<&str> {
        self.workspace_id.as_deref()
    }
    /// The rule groups namespace name.
    pub fn name(&self) -> std::option::Option<&str> {
        self.name.as_deref()
    }
    /// Optional, unique, case-sensitive, user-provided identifier to ensure the idempotency of the request.
    pub fn client_token(&self) -> std::option::Option<&str> {
        self.client_token.as_deref()
    }
}
impl DeleteRuleGroupsNamespaceInput {
    /// Creates a new builder-style object to manufacture [`DeleteRuleGroupsNamespaceInput`](crate::operation::delete_rule_groups_namespace::DeleteRuleGroupsNamespaceInput).
    pub fn builder() -> crate::operation::delete_rule_groups_namespace::builders::DeleteRuleGroupsNamespaceInputBuilder{
        crate::operation::delete_rule_groups_namespace::builders::DeleteRuleGroupsNamespaceInputBuilder::default()
    }
}

/// A builder for [`DeleteRuleGroupsNamespaceInput`](crate::operation::delete_rule_groups_namespace::DeleteRuleGroupsNamespaceInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DeleteRuleGroupsNamespaceInputBuilder {
    pub(crate) workspace_id: std::option::Option<std::string::String>,
    pub(crate) name: std::option::Option<std::string::String>,
    pub(crate) client_token: std::option::Option<std::string::String>,
}
impl DeleteRuleGroupsNamespaceInputBuilder {
    /// The ID of the workspace to delete rule group definition.
    pub fn workspace_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.workspace_id = Some(input.into());
        self
    }
    /// The ID of the workspace to delete rule group definition.
    pub fn set_workspace_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.workspace_id = input;
        self
    }
    /// The rule groups namespace name.
    pub fn name(mut self, input: impl Into<std::string::String>) -> Self {
        self.name = Some(input.into());
        self
    }
    /// The rule groups namespace name.
    pub fn set_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// Optional, unique, case-sensitive, user-provided identifier to ensure the idempotency of the request.
    pub fn client_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.client_token = Some(input.into());
        self
    }
    /// Optional, unique, case-sensitive, user-provided identifier to ensure the idempotency of the request.
    pub fn set_client_token(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.client_token = input;
        self
    }
    /// Consumes the builder and constructs a [`DeleteRuleGroupsNamespaceInput`](crate::operation::delete_rule_groups_namespace::DeleteRuleGroupsNamespaceInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::delete_rule_groups_namespace::DeleteRuleGroupsNamespaceInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::delete_rule_groups_namespace::DeleteRuleGroupsNamespaceInput {
                workspace_id: self.workspace_id,
                name: self.name,
                client_token: self.client_token,
            },
        )
    }
}
