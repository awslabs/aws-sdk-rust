// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateAnomalyDetector`](crate::operation::create_anomaly_detector::builders::CreateAnomalyDetectorFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`workspace_id(impl Into<String>)`](crate::operation::create_anomaly_detector::builders::CreateAnomalyDetectorFluentBuilder::workspace_id) / [`set_workspace_id(Option<String>)`](crate::operation::create_anomaly_detector::builders::CreateAnomalyDetectorFluentBuilder::set_workspace_id):<br>required: **true**<br><p>The identifier of the workspace where the anomaly detector will be created.</p><br>
    ///   - [`alias(impl Into<String>)`](crate::operation::create_anomaly_detector::builders::CreateAnomalyDetectorFluentBuilder::alias) / [`set_alias(Option<String>)`](crate::operation::create_anomaly_detector::builders::CreateAnomalyDetectorFluentBuilder::set_alias):<br>required: **true**<br><p>A user-friendly name for the anomaly detector.</p><br>
    ///   - [`evaluation_interval_in_seconds(i32)`](crate::operation::create_anomaly_detector::builders::CreateAnomalyDetectorFluentBuilder::evaluation_interval_in_seconds) / [`set_evaluation_interval_in_seconds(Option<i32>)`](crate::operation::create_anomaly_detector::builders::CreateAnomalyDetectorFluentBuilder::set_evaluation_interval_in_seconds):<br>required: **false**<br><p>The frequency, in seconds, at which the anomaly detector evaluates metrics. The default value is 60 seconds.</p><br>
    ///   - [`missing_data_action(AnomalyDetectorMissingDataAction)`](crate::operation::create_anomaly_detector::builders::CreateAnomalyDetectorFluentBuilder::missing_data_action) / [`set_missing_data_action(Option<AnomalyDetectorMissingDataAction>)`](crate::operation::create_anomaly_detector::builders::CreateAnomalyDetectorFluentBuilder::set_missing_data_action):<br>required: **false**<br><p>Specifies the action to take when data is missing during evaluation.</p><br>
    ///   - [`configuration(AnomalyDetectorConfiguration)`](crate::operation::create_anomaly_detector::builders::CreateAnomalyDetectorFluentBuilder::configuration) / [`set_configuration(Option<AnomalyDetectorConfiguration>)`](crate::operation::create_anomaly_detector::builders::CreateAnomalyDetectorFluentBuilder::set_configuration):<br>required: **true**<br><p>The algorithm configuration for the anomaly detector.</p><br>
    ///   - [`labels(impl Into<String>, impl Into<String>)`](crate::operation::create_anomaly_detector::builders::CreateAnomalyDetectorFluentBuilder::labels) / [`set_labels(Option<HashMap::<String, String>>)`](crate::operation::create_anomaly_detector::builders::CreateAnomalyDetectorFluentBuilder::set_labels):<br>required: **false**<br><p>The Amazon Managed Service for Prometheus metric labels to associate with the anomaly detector.</p><br>
    ///   - [`client_token(impl Into<String>)`](crate::operation::create_anomaly_detector::builders::CreateAnomalyDetectorFluentBuilder::client_token) / [`set_client_token(Option<String>)`](crate::operation::create_anomaly_detector::builders::CreateAnomalyDetectorFluentBuilder::set_client_token):<br>required: **false**<br><p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request.</p><br>
    ///   - [`tags(impl Into<String>, impl Into<String>)`](crate::operation::create_anomaly_detector::builders::CreateAnomalyDetectorFluentBuilder::tags) / [`set_tags(Option<HashMap::<String, String>>)`](crate::operation::create_anomaly_detector::builders::CreateAnomalyDetectorFluentBuilder::set_tags):<br>required: **false**<br><p>The metadata to apply to the anomaly detector to assist with categorization and organization.</p><br>
    /// - On success, responds with [`CreateAnomalyDetectorOutput`](crate::operation::create_anomaly_detector::CreateAnomalyDetectorOutput) with field(s):
    ///   - [`anomaly_detector_id(String)`](crate::operation::create_anomaly_detector::CreateAnomalyDetectorOutput::anomaly_detector_id): <p>The unique identifier of the created anomaly detector.</p>
    ///   - [`arn(String)`](crate::operation::create_anomaly_detector::CreateAnomalyDetectorOutput::arn): <p>The Amazon Resource Name (ARN) of the created anomaly detector.</p>
    ///   - [`status(Option<AnomalyDetectorStatus>)`](crate::operation::create_anomaly_detector::CreateAnomalyDetectorOutput::status): <p>The status information of the created anomaly detector.</p>
    ///   - [`tags(Option<HashMap::<String, String>>)`](crate::operation::create_anomaly_detector::CreateAnomalyDetectorOutput::tags): <p>The tags applied to the created anomaly detector.</p>
    /// - On failure, responds with [`SdkError<CreateAnomalyDetectorError>`](crate::operation::create_anomaly_detector::CreateAnomalyDetectorError)
    pub fn create_anomaly_detector(&self) -> crate::operation::create_anomaly_detector::builders::CreateAnomalyDetectorFluentBuilder {
        crate::operation::create_anomaly_detector::builders::CreateAnomalyDetectorFluentBuilder::new(self.handle.clone())
    }
}
