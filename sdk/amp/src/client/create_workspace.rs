// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateWorkspace`](crate::client::fluent_builders::CreateWorkspace) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`alias(impl Into<String>)`](crate::client::fluent_builders::CreateWorkspace::alias) / [`set_alias(Option<String>)`](crate::client::fluent_builders::CreateWorkspace::set_alias): An optional user-assigned alias for this workspace. This alias is for user reference and does not need to be unique.
    ///   - [`client_token(impl Into<String>)`](crate::client::fluent_builders::CreateWorkspace::client_token) / [`set_client_token(Option<String>)`](crate::client::fluent_builders::CreateWorkspace::set_client_token): Optional, unique, case-sensitive, user-provided identifier to ensure the idempotency of the request.
    ///   - [`tags(HashMap<String, String>)`](crate::client::fluent_builders::CreateWorkspace::tags) / [`set_tags(Option<HashMap<String, String>>)`](crate::client::fluent_builders::CreateWorkspace::set_tags): Optional, user-provided tags for this workspace.
    /// - On success, responds with [`CreateWorkspaceOutput`](crate::output::CreateWorkspaceOutput) with field(s):
    ///   - [`workspace_id(Option<String>)`](crate::output::CreateWorkspaceOutput::workspace_id): The generated ID of the workspace that was just created.
    ///   - [`arn(Option<String>)`](crate::output::CreateWorkspaceOutput::arn): The ARN of the workspace that was just created.
    ///   - [`status(Option<WorkspaceStatus>)`](crate::output::CreateWorkspaceOutput::status): The status of the workspace that was just created (usually CREATING).
    ///   - [`tags(Option<HashMap<String, String>>)`](crate::output::CreateWorkspaceOutput::tags): The tags of this workspace.
    /// - On failure, responds with [`SdkError<CreateWorkspaceError>`](crate::error::CreateWorkspaceError)
    pub fn create_workspace(&self) -> crate::client::fluent_builders::CreateWorkspace {
        crate::client::fluent_builders::CreateWorkspace::new(self.handle.clone())
    }
}
