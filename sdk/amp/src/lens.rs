// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) fn reflens_list_rule_groups_namespaces_output_next_token(
    input: &crate::operation::list_rule_groups_namespaces::ListRuleGroupsNamespacesOutput,
) -> ::std::option::Option<&::std::string::String> {
    let input = match &input.next_token {
        ::std::option::Option::None => return ::std::option::Option::None,
        ::std::option::Option::Some(t) => t,
    };
    ::std::option::Option::Some(input)
}

pub(crate) fn reflens_list_workspaces_output_next_token(
    input: &crate::operation::list_workspaces::ListWorkspacesOutput,
) -> ::std::option::Option<&::std::string::String> {
    let input = match &input.next_token {
        ::std::option::Option::None => return ::std::option::Option::None,
        ::std::option::Option::Some(t) => t,
    };
    ::std::option::Option::Some(input)
}

pub(crate) fn lens_list_rule_groups_namespaces_output_rule_groups_namespaces(
    input: crate::operation::list_rule_groups_namespaces::ListRuleGroupsNamespacesOutput,
) -> ::std::option::Option<::std::vec::Vec<crate::types::RuleGroupsNamespaceSummary>> {
    let input = input.rule_groups_namespaces;
    ::std::option::Option::Some(input)
}

pub(crate) fn lens_list_workspaces_output_workspaces(
    input: crate::operation::list_workspaces::ListWorkspacesOutput,
) -> ::std::option::Option<::std::vec::Vec<crate::types::WorkspaceSummary>> {
    let input = input.workspaces;
    ::std::option::Option::Some(input)
}
