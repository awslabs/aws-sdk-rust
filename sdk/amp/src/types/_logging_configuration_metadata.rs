// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Represents the properties of a logging configuration metadata.
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct LoggingConfigurationMetadata {
    /// The status of the logging configuration.
    #[doc(hidden)]
    pub status: std::option::Option<crate::types::LoggingConfigurationStatus>,
    /// The workspace where the logging configuration exists.
    #[doc(hidden)]
    pub workspace: std::option::Option<std::string::String>,
    /// The ARN of the CW log group to which the vended log data will be published.
    #[doc(hidden)]
    pub log_group_arn: std::option::Option<std::string::String>,
    /// The time when the logging configuration was created.
    #[doc(hidden)]
    pub created_at: std::option::Option<aws_smithy_types::DateTime>,
    /// The time when the logging configuration was modified.
    #[doc(hidden)]
    pub modified_at: std::option::Option<aws_smithy_types::DateTime>,
}
impl LoggingConfigurationMetadata {
    /// The status of the logging configuration.
    pub fn status(&self) -> std::option::Option<&crate::types::LoggingConfigurationStatus> {
        self.status.as_ref()
    }
    /// The workspace where the logging configuration exists.
    pub fn workspace(&self) -> std::option::Option<&str> {
        self.workspace.as_deref()
    }
    /// The ARN of the CW log group to which the vended log data will be published.
    pub fn log_group_arn(&self) -> std::option::Option<&str> {
        self.log_group_arn.as_deref()
    }
    /// The time when the logging configuration was created.
    pub fn created_at(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.created_at.as_ref()
    }
    /// The time when the logging configuration was modified.
    pub fn modified_at(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.modified_at.as_ref()
    }
}
impl LoggingConfigurationMetadata {
    /// Creates a new builder-style object to manufacture [`LoggingConfigurationMetadata`](crate::types::LoggingConfigurationMetadata).
    pub fn builder() -> crate::types::builders::LoggingConfigurationMetadataBuilder {
        crate::types::builders::LoggingConfigurationMetadataBuilder::default()
    }
}

/// A builder for [`LoggingConfigurationMetadata`](crate::types::LoggingConfigurationMetadata).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct LoggingConfigurationMetadataBuilder {
    pub(crate) status: std::option::Option<crate::types::LoggingConfigurationStatus>,
    pub(crate) workspace: std::option::Option<std::string::String>,
    pub(crate) log_group_arn: std::option::Option<std::string::String>,
    pub(crate) created_at: std::option::Option<aws_smithy_types::DateTime>,
    pub(crate) modified_at: std::option::Option<aws_smithy_types::DateTime>,
}
impl LoggingConfigurationMetadataBuilder {
    /// The status of the logging configuration.
    pub fn status(mut self, input: crate::types::LoggingConfigurationStatus) -> Self {
        self.status = Some(input);
        self
    }
    /// The status of the logging configuration.
    pub fn set_status(
        mut self,
        input: std::option::Option<crate::types::LoggingConfigurationStatus>,
    ) -> Self {
        self.status = input;
        self
    }
    /// The workspace where the logging configuration exists.
    pub fn workspace(mut self, input: impl Into<std::string::String>) -> Self {
        self.workspace = Some(input.into());
        self
    }
    /// The workspace where the logging configuration exists.
    pub fn set_workspace(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.workspace = input;
        self
    }
    /// The ARN of the CW log group to which the vended log data will be published.
    pub fn log_group_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.log_group_arn = Some(input.into());
        self
    }
    /// The ARN of the CW log group to which the vended log data will be published.
    pub fn set_log_group_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.log_group_arn = input;
        self
    }
    /// The time when the logging configuration was created.
    pub fn created_at(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.created_at = Some(input);
        self
    }
    /// The time when the logging configuration was created.
    pub fn set_created_at(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.created_at = input;
        self
    }
    /// The time when the logging configuration was modified.
    pub fn modified_at(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.modified_at = Some(input);
        self
    }
    /// The time when the logging configuration was modified.
    pub fn set_modified_at(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.modified_at = input;
        self
    }
    /// Consumes the builder and constructs a [`LoggingConfigurationMetadata`](crate::types::LoggingConfigurationMetadata).
    pub fn build(self) -> crate::types::LoggingConfigurationMetadata {
        crate::types::LoggingConfigurationMetadata {
            status: self.status,
            workspace: self.workspace,
            log_group_arn: self.log_group_arn,
            created_at: self.created_at,
            modified_at: self.modified_at,
        }
    }
}
