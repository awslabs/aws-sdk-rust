// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Represents the status of a workspace.
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct WorkspaceStatus {
    /// Status code of this workspace.
    #[doc(hidden)]
    pub status_code: std::option::Option<crate::types::WorkspaceStatusCode>,
}
impl WorkspaceStatus {
    /// Status code of this workspace.
    pub fn status_code(&self) -> std::option::Option<&crate::types::WorkspaceStatusCode> {
        self.status_code.as_ref()
    }
}
impl WorkspaceStatus {
    /// Creates a new builder-style object to manufacture [`WorkspaceStatus`](crate::types::WorkspaceStatus).
    pub fn builder() -> crate::types::builders::WorkspaceStatusBuilder {
        crate::types::builders::WorkspaceStatusBuilder::default()
    }
}

/// A builder for [`WorkspaceStatus`](crate::types::WorkspaceStatus).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct WorkspaceStatusBuilder {
    pub(crate) status_code: std::option::Option<crate::types::WorkspaceStatusCode>,
}
impl WorkspaceStatusBuilder {
    /// Status code of this workspace.
    pub fn status_code(mut self, input: crate::types::WorkspaceStatusCode) -> Self {
        self.status_code = Some(input);
        self
    }
    /// Status code of this workspace.
    pub fn set_status_code(
        mut self,
        input: std::option::Option<crate::types::WorkspaceStatusCode>,
    ) -> Self {
        self.status_code = input;
        self
    }
    /// Consumes the builder and constructs a [`WorkspaceStatus`](crate::types::WorkspaceStatus).
    pub fn build(self) -> crate::types::WorkspaceStatus {
        crate::types::WorkspaceStatus {
            status_code: self.status_code,
        }
    }
}
