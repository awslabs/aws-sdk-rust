// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`AssociateUser`](crate::operation::associate_user::builders::AssociateUserFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`username(impl Into<String>)`](crate::operation::associate_user::builders::AssociateUserFluentBuilder::username) / [`set_username(Option<String>)`](crate::operation::associate_user::builders::AssociateUserFluentBuilder::set_username):<br>required: **true**<br><p>The user name from the identity provider for the user.</p><br>
    ///   - [`instance_id(impl Into<String>)`](crate::operation::associate_user::builders::AssociateUserFluentBuilder::instance_id) / [`set_instance_id(Option<String>)`](crate::operation::associate_user::builders::AssociateUserFluentBuilder::set_instance_id):<br>required: **true**<br><p>The ID of the EC2 instance, which provides user-based subscriptions.</p><br>
    ///   - [`identity_provider(IdentityProvider)`](crate::operation::associate_user::builders::AssociateUserFluentBuilder::identity_provider) / [`set_identity_provider(Option<IdentityProvider>)`](crate::operation::associate_user::builders::AssociateUserFluentBuilder::set_identity_provider):<br>required: **true**<br><p>The identity provider of the user.</p><br>
    ///   - [`domain(impl Into<String>)`](crate::operation::associate_user::builders::AssociateUserFluentBuilder::domain) / [`set_domain(Option<String>)`](crate::operation::associate_user::builders::AssociateUserFluentBuilder::set_domain):<br>required: **false**<br><p>The domain name of the user.</p><br>
    /// - On success, responds with [`AssociateUserOutput`](crate::operation::associate_user::AssociateUserOutput) with field(s):
    ///   - [`instance_user_summary(Option<InstanceUserSummary>)`](crate::operation::associate_user::AssociateUserOutput::instance_user_summary): <p>Metadata that describes the associate user operation.</p>
    /// - On failure, responds with [`SdkError<AssociateUserError>`](crate::operation::associate_user::AssociateUserError)
    pub fn associate_user(&self) -> crate::operation::associate_user::builders::AssociateUserFluentBuilder {
        crate::operation::associate_user::builders::AssociateUserFluentBuilder::new(self.handle.clone())
    }
}
