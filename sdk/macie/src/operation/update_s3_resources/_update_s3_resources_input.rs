// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct UpdateS3ResourcesInput {
    /// <p>(Discontinued) The Amazon Web Services account ID of the Amazon Macie Classic member account whose S3 resources' classification types you want to update.</p>
    #[doc(hidden)]
    pub member_account_id: std::option::Option<std::string::String>,
    /// <p>(Discontinued) The S3 resources whose classification types you want to update.</p>
    #[doc(hidden)]
    pub s3_resources_update:
        std::option::Option<std::vec::Vec<crate::types::S3ResourceClassificationUpdate>>,
}
impl UpdateS3ResourcesInput {
    /// <p>(Discontinued) The Amazon Web Services account ID of the Amazon Macie Classic member account whose S3 resources' classification types you want to update.</p>
    pub fn member_account_id(&self) -> std::option::Option<&str> {
        self.member_account_id.as_deref()
    }
    /// <p>(Discontinued) The S3 resources whose classification types you want to update.</p>
    pub fn s3_resources_update(
        &self,
    ) -> std::option::Option<&[crate::types::S3ResourceClassificationUpdate]> {
        self.s3_resources_update.as_deref()
    }
}
impl UpdateS3ResourcesInput {
    /// Creates a new builder-style object to manufacture [`UpdateS3ResourcesInput`](crate::operation::update_s3_resources::UpdateS3ResourcesInput).
    pub fn builder(
    ) -> crate::operation::update_s3_resources::builders::UpdateS3ResourcesInputBuilder {
        crate::operation::update_s3_resources::builders::UpdateS3ResourcesInputBuilder::default()
    }
}

/// A builder for [`UpdateS3ResourcesInput`](crate::operation::update_s3_resources::UpdateS3ResourcesInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct UpdateS3ResourcesInputBuilder {
    pub(crate) member_account_id: std::option::Option<std::string::String>,
    pub(crate) s3_resources_update:
        std::option::Option<std::vec::Vec<crate::types::S3ResourceClassificationUpdate>>,
}
impl UpdateS3ResourcesInputBuilder {
    /// <p>(Discontinued) The Amazon Web Services account ID of the Amazon Macie Classic member account whose S3 resources' classification types you want to update.</p>
    pub fn member_account_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.member_account_id = Some(input.into());
        self
    }
    /// <p>(Discontinued) The Amazon Web Services account ID of the Amazon Macie Classic member account whose S3 resources' classification types you want to update.</p>
    pub fn set_member_account_id(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.member_account_id = input;
        self
    }
    /// Appends an item to `s3_resources_update`.
    ///
    /// To override the contents of this collection use [`set_s3_resources_update`](Self::set_s3_resources_update).
    ///
    /// <p>(Discontinued) The S3 resources whose classification types you want to update.</p>
    pub fn s3_resources_update(
        mut self,
        input: crate::types::S3ResourceClassificationUpdate,
    ) -> Self {
        let mut v = self.s3_resources_update.unwrap_or_default();
        v.push(input);
        self.s3_resources_update = Some(v);
        self
    }
    /// <p>(Discontinued) The S3 resources whose classification types you want to update.</p>
    pub fn set_s3_resources_update(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::S3ResourceClassificationUpdate>>,
    ) -> Self {
        self.s3_resources_update = input;
        self
    }
    /// Consumes the builder and constructs a [`UpdateS3ResourcesInput`](crate::operation::update_s3_resources::UpdateS3ResourcesInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::update_s3_resources::UpdateS3ResourcesInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::update_s3_resources::UpdateS3ResourcesInput {
                member_account_id: self.member_account_id,
                s3_resources_update: self.s3_resources_update,
            },
        )
    }
}
