// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub use crate::operation::disassociate_s3_resources::_disassociate_s3_resources_output::DisassociateS3ResourcesOutputBuilder;

pub use crate::operation::disassociate_s3_resources::_disassociate_s3_resources_input::DisassociateS3ResourcesInputBuilder;

/// Fluent builder constructing a request to `DisassociateS3Resources`.
///
/// <p>(Discontinued) Removes specified S3 resources from being monitored by Amazon Macie Classic. If <code>memberAccountId</code> isn't specified, the action removes specified S3 resources from Macie Classic for the current Macie Classic administrator account. If <code>memberAccountId</code> is specified, the action removes specified S3 resources from Macie Classic for the specified member account.</p>
#[derive(std::clone::Clone, std::fmt::Debug)]
pub struct DisassociateS3ResourcesFluentBuilder {
    handle: std::sync::Arc<crate::client::Handle>,
    inner:
        crate::operation::disassociate_s3_resources::builders::DisassociateS3ResourcesInputBuilder,
}
impl DisassociateS3ResourcesFluentBuilder {
    /// Creates a new `DisassociateS3Resources`.
    pub(crate) fn new(handle: std::sync::Arc<crate::client::Handle>) -> Self {
        Self {
            handle,
            inner: Default::default(),
        }
    }

    /// Consume this builder, creating a customizable operation that can be modified before being
    /// sent. The operation's inner [http::Request] can be modified as well.
    pub async fn customize(
        self,
    ) -> std::result::Result<
        crate::client::customize::CustomizableOperation<
            crate::operation::disassociate_s3_resources::DisassociateS3Resources,
            aws_http::retry::AwsResponseRetryClassifier,
        >,
        aws_smithy_http::result::SdkError<
            crate::operation::disassociate_s3_resources::DisassociateS3ResourcesError,
        >,
    > {
        let handle = self.handle.clone();
        let operation = self
            .inner
            .build()
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?
            .make_operation(&handle.conf)
            .await
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?;
        Ok(crate::client::customize::CustomizableOperation { handle, operation })
    }

    /// Sends the request and returns the response.
    ///
    /// If an error occurs, an `SdkError` will be returned with additional details that
    /// can be matched against.
    ///
    /// By default, any retryable failures will be retried twice. Retry behavior
    /// is configurable with the [RetryConfig](aws_smithy_types::retry::RetryConfig), which can be
    /// set when configuring the client.
    pub async fn send(
        self,
    ) -> std::result::Result<
        crate::operation::disassociate_s3_resources::DisassociateS3ResourcesOutput,
        aws_smithy_http::result::SdkError<
            crate::operation::disassociate_s3_resources::DisassociateS3ResourcesError,
        >,
    > {
        let op = self
            .inner
            .build()
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?
            .make_operation(&self.handle.conf)
            .await
            .map_err(aws_smithy_http::result::SdkError::construction_failure)?;
        self.handle.client.call(op).await
    }
    /// <p>(Discontinued) The ID of the Amazon Macie Classic member account whose resources you want to remove from being monitored by Macie Classic.</p>
    pub fn member_account_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.inner = self.inner.member_account_id(input.into());
        self
    }
    /// <p>(Discontinued) The ID of the Amazon Macie Classic member account whose resources you want to remove from being monitored by Macie Classic.</p>
    pub fn set_member_account_id(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.inner = self.inner.set_member_account_id(input);
        self
    }
    /// Appends an item to `associatedS3Resources`.
    ///
    /// To override the contents of this collection use [`set_associated_s3_resources`](Self::set_associated_s3_resources).
    ///
    /// <p>(Discontinued) The S3 resources (buckets or prefixes) that you want to remove from being monitored and classified by Amazon Macie Classic.</p>
    pub fn associated_s3_resources(mut self, input: crate::types::S3Resource) -> Self {
        self.inner = self.inner.associated_s3_resources(input);
        self
    }
    /// <p>(Discontinued) The S3 resources (buckets or prefixes) that you want to remove from being monitored and classified by Amazon Macie Classic.</p>
    pub fn set_associated_s3_resources(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::S3Resource>>,
    ) -> Self {
        self.inner = self.inner.set_associated_s3_resources(input);
        self
    }
}
