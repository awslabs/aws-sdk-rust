// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
/// <p>Associates a specified AWS account with Amazon Macie Classic as a member
/// account.</p>
#[derive(std::default::Default, std::clone::Clone, std::fmt::Debug)]
pub struct AssociateMemberAccount {
    _private: (),
}
impl AssociateMemberAccount {
    /// Creates a new builder-style object to manufacture [`AssociateMemberAccountInput`](crate::input::AssociateMemberAccountInput)
    pub fn builder() -> crate::input::associate_member_account_input::Builder {
        crate::input::associate_member_account_input::Builder::default()
    }
    pub fn new() -> Self {
        Self { _private: () }
    }
}
impl smithy_http::response::ParseStrictResponse for AssociateMemberAccount {
    type Output = std::result::Result<
        crate::output::AssociateMemberAccountOutput,
        crate::error::AssociateMemberAccountError,
    >;
    fn parse(&self, response: &http::Response<bytes::Bytes>) -> Self::Output {
        if !response.status().is_success() && response.status().as_u16() != 200 {
            crate::operation_deser::parse_associate_member_account_error(response)
        } else {
            crate::operation_deser::parse_associate_member_account_response(response)
        }
    }
}

/// <p>Associates specified S3 resources with Amazon Macie Classic for monitoring and data
/// classification. If memberAccountId isn't specified, the action associates specified S3
/// resources with Macie Classic for the current Macie Classic administrator account. If memberAccountId is specified,
/// the action associates specified S3 resources with Macie Classic for the specified member
/// account. </p>
#[derive(std::default::Default, std::clone::Clone, std::fmt::Debug)]
pub struct AssociateS3Resources {
    _private: (),
}
impl AssociateS3Resources {
    /// Creates a new builder-style object to manufacture [`AssociateS3ResourcesInput`](crate::input::AssociateS3ResourcesInput)
    pub fn builder() -> crate::input::associate_s3_resources_input::Builder {
        crate::input::associate_s3_resources_input::Builder::default()
    }
    pub fn new() -> Self {
        Self { _private: () }
    }
}
impl smithy_http::response::ParseStrictResponse for AssociateS3Resources {
    type Output = std::result::Result<
        crate::output::AssociateS3ResourcesOutput,
        crate::error::AssociateS3ResourcesError,
    >;
    fn parse(&self, response: &http::Response<bytes::Bytes>) -> Self::Output {
        if !response.status().is_success() && response.status().as_u16() != 200 {
            crate::operation_deser::parse_associate_s3_resources_error(response)
        } else {
            crate::operation_deser::parse_associate_s3_resources_response(response)
        }
    }
}

/// <p>Removes the specified member account from Amazon Macie Classic.</p>
#[derive(std::default::Default, std::clone::Clone, std::fmt::Debug)]
pub struct DisassociateMemberAccount {
    _private: (),
}
impl DisassociateMemberAccount {
    /// Creates a new builder-style object to manufacture [`DisassociateMemberAccountInput`](crate::input::DisassociateMemberAccountInput)
    pub fn builder() -> crate::input::disassociate_member_account_input::Builder {
        crate::input::disassociate_member_account_input::Builder::default()
    }
    pub fn new() -> Self {
        Self { _private: () }
    }
}
impl smithy_http::response::ParseStrictResponse for DisassociateMemberAccount {
    type Output = std::result::Result<
        crate::output::DisassociateMemberAccountOutput,
        crate::error::DisassociateMemberAccountError,
    >;
    fn parse(&self, response: &http::Response<bytes::Bytes>) -> Self::Output {
        if !response.status().is_success() && response.status().as_u16() != 200 {
            crate::operation_deser::parse_disassociate_member_account_error(response)
        } else {
            crate::operation_deser::parse_disassociate_member_account_response(response)
        }
    }
}

/// <p>Removes specified S3 resources from being monitored by Amazon Macie Classic. If
/// memberAccountId isn't specified, the action removes specified S3 resources from Macie Classic
/// for the current Macie Classic administrator account. If memberAccountId is specified, the action removes specified
/// S3 resources from Macie Classic for the specified member account.</p>
#[derive(std::default::Default, std::clone::Clone, std::fmt::Debug)]
pub struct DisassociateS3Resources {
    _private: (),
}
impl DisassociateS3Resources {
    /// Creates a new builder-style object to manufacture [`DisassociateS3ResourcesInput`](crate::input::DisassociateS3ResourcesInput)
    pub fn builder() -> crate::input::disassociate_s3_resources_input::Builder {
        crate::input::disassociate_s3_resources_input::Builder::default()
    }
    pub fn new() -> Self {
        Self { _private: () }
    }
}
impl smithy_http::response::ParseStrictResponse for DisassociateS3Resources {
    type Output = std::result::Result<
        crate::output::DisassociateS3ResourcesOutput,
        crate::error::DisassociateS3ResourcesError,
    >;
    fn parse(&self, response: &http::Response<bytes::Bytes>) -> Self::Output {
        if !response.status().is_success() && response.status().as_u16() != 200 {
            crate::operation_deser::parse_disassociate_s3_resources_error(response)
        } else {
            crate::operation_deser::parse_disassociate_s3_resources_response(response)
        }
    }
}

/// <p>Lists all Amazon Macie Classic member accounts for the current Macie Classic administrator account.</p>
#[derive(std::default::Default, std::clone::Clone, std::fmt::Debug)]
pub struct ListMemberAccounts {
    _private: (),
}
impl ListMemberAccounts {
    /// Creates a new builder-style object to manufacture [`ListMemberAccountsInput`](crate::input::ListMemberAccountsInput)
    pub fn builder() -> crate::input::list_member_accounts_input::Builder {
        crate::input::list_member_accounts_input::Builder::default()
    }
    pub fn new() -> Self {
        Self { _private: () }
    }
}
impl smithy_http::response::ParseStrictResponse for ListMemberAccounts {
    type Output = std::result::Result<
        crate::output::ListMemberAccountsOutput,
        crate::error::ListMemberAccountsError,
    >;
    fn parse(&self, response: &http::Response<bytes::Bytes>) -> Self::Output {
        if !response.status().is_success() && response.status().as_u16() != 200 {
            crate::operation_deser::parse_list_member_accounts_error(response)
        } else {
            crate::operation_deser::parse_list_member_accounts_response(response)
        }
    }
}

/// <p>Lists all the S3 resources associated with Amazon Macie Classic. If memberAccountId
/// isn't specified, the action lists the S3 resources associated with Macie Classic for
/// the current Macie Classic administrator account. If memberAccountId is specified, the action lists the S3 resources
/// associated with Macie Classic for the specified member account. </p>
#[derive(std::default::Default, std::clone::Clone, std::fmt::Debug)]
pub struct ListS3Resources {
    _private: (),
}
impl ListS3Resources {
    /// Creates a new builder-style object to manufacture [`ListS3ResourcesInput`](crate::input::ListS3ResourcesInput)
    pub fn builder() -> crate::input::list_s3_resources_input::Builder {
        crate::input::list_s3_resources_input::Builder::default()
    }
    pub fn new() -> Self {
        Self { _private: () }
    }
}
impl smithy_http::response::ParseStrictResponse for ListS3Resources {
    type Output = std::result::Result<
        crate::output::ListS3ResourcesOutput,
        crate::error::ListS3ResourcesError,
    >;
    fn parse(&self, response: &http::Response<bytes::Bytes>) -> Self::Output {
        if !response.status().is_success() && response.status().as_u16() != 200 {
            crate::operation_deser::parse_list_s3_resources_error(response)
        } else {
            crate::operation_deser::parse_list_s3_resources_response(response)
        }
    }
}

/// <p>Updates the classification types for the specified S3 resources. If memberAccountId
/// isn't specified, the action updates the classification types of the S3 resources associated
/// with Amazon Macie Classic for the current Macie Classic administrator account. If memberAccountId is specified, the
/// action updates the classification types of the S3 resources associated with Macie
/// Classic for the specified member account. </p>
#[derive(std::default::Default, std::clone::Clone, std::fmt::Debug)]
pub struct UpdateS3Resources {
    _private: (),
}
impl UpdateS3Resources {
    /// Creates a new builder-style object to manufacture [`UpdateS3ResourcesInput`](crate::input::UpdateS3ResourcesInput)
    pub fn builder() -> crate::input::update_s3_resources_input::Builder {
        crate::input::update_s3_resources_input::Builder::default()
    }
    pub fn new() -> Self {
        Self { _private: () }
    }
}
impl smithy_http::response::ParseStrictResponse for UpdateS3Resources {
    type Output = std::result::Result<
        crate::output::UpdateS3ResourcesOutput,
        crate::error::UpdateS3ResourcesError,
    >;
    fn parse(&self, response: &http::Response<bytes::Bytes>) -> Self::Output {
        if !response.status().is_success() && response.status().as_u16() != 200 {
            crate::operation_deser::parse_update_s3_resources_error(response)
        } else {
            crate::operation_deser::parse_update_s3_resources_response(response)
        }
    }
}
