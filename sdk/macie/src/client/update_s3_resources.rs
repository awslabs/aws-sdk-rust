// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateS3Resources`](crate::operation::update_s3_resources::builders::UpdateS3ResourcesFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`member_account_id(impl Into<String>)`](crate::operation::update_s3_resources::builders::UpdateS3ResourcesFluentBuilder::member_account_id) / [`set_member_account_id(Option<String>)`](crate::operation::update_s3_resources::builders::UpdateS3ResourcesFluentBuilder::set_member_account_id): <p>(Discontinued) The Amazon Web Services account ID of the Amazon Macie Classic member account whose S3 resources' classification types you want to update.</p>
    ///   - [`s3_resources_update(Vec<S3ResourceClassificationUpdate>)`](crate::operation::update_s3_resources::builders::UpdateS3ResourcesFluentBuilder::s3_resources_update) / [`set_s3_resources_update(Option<Vec<S3ResourceClassificationUpdate>>)`](crate::operation::update_s3_resources::builders::UpdateS3ResourcesFluentBuilder::set_s3_resources_update): <p>(Discontinued) The S3 resources whose classification types you want to update.</p>
    /// - On success, responds with [`UpdateS3ResourcesOutput`](crate::operation::update_s3_resources::UpdateS3ResourcesOutput) with field(s):
    ///   - [`failed_s3_resources(Option<Vec<FailedS3Resource>>)`](crate::operation::update_s3_resources::UpdateS3ResourcesOutput::failed_s3_resources): <p>(Discontinued) The S3 resources whose classification types can't be updated. An error code and an error message are provided for each failed item.</p>
    /// - On failure, responds with [`SdkError<UpdateS3ResourcesError>`](crate::operation::update_s3_resources::UpdateS3ResourcesError)
    pub fn update_s3_resources(
        &self,
    ) -> crate::operation::update_s3_resources::builders::UpdateS3ResourcesFluentBuilder {
        crate::operation::update_s3_resources::builders::UpdateS3ResourcesFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
