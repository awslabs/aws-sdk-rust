// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>(Discontinued) Contains information about the Amazon Macie Classic member account.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct MemberAccount {
    /// <p>(Discontinued) The Amazon Web Services account ID of the Amazon Macie Classic member account.</p>
    #[doc(hidden)]
    pub account_id: std::option::Option<std::string::String>,
}
impl MemberAccount {
    /// <p>(Discontinued) The Amazon Web Services account ID of the Amazon Macie Classic member account.</p>
    pub fn account_id(&self) -> std::option::Option<&str> {
        self.account_id.as_deref()
    }
}
impl MemberAccount {
    /// Creates a new builder-style object to manufacture [`MemberAccount`](crate::types::MemberAccount).
    pub fn builder() -> crate::types::builders::MemberAccountBuilder {
        crate::types::builders::MemberAccountBuilder::default()
    }
}

/// A builder for [`MemberAccount`](crate::types::MemberAccount).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct MemberAccountBuilder {
    pub(crate) account_id: std::option::Option<std::string::String>,
}
impl MemberAccountBuilder {
    /// <p>(Discontinued) The Amazon Web Services account ID of the Amazon Macie Classic member account.</p>
    pub fn account_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.account_id = Some(input.into());
        self
    }
    /// <p>(Discontinued) The Amazon Web Services account ID of the Amazon Macie Classic member account.</p>
    pub fn set_account_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.account_id = input;
        self
    }
    /// Consumes the builder and constructs a [`MemberAccount`](crate::types::MemberAccount).
    pub fn build(self) -> crate::types::MemberAccount {
        crate::types::MemberAccount {
            account_id: self.account_id,
        }
    }
}
