// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_customer_profile_attributes(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::types::CustomerProfileAttributes,
) -> ::std::result::Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.profile_id {
        object.key("profileId").string(var_1.as_str());
    }
    if let Some(var_2) = &input.profile_arn {
        object.key("profileARN").string(var_2.as_str());
    }
    if let Some(var_3) = &input.first_name {
        object.key("firstName").string(var_3.as_str());
    }
    if let Some(var_4) = &input.middle_name {
        object.key("middleName").string(var_4.as_str());
    }
    if let Some(var_5) = &input.last_name {
        object.key("lastName").string(var_5.as_str());
    }
    if let Some(var_6) = &input.account_number {
        object.key("accountNumber").string(var_6.as_str());
    }
    if let Some(var_7) = &input.email_address {
        object.key("emailAddress").string(var_7.as_str());
    }
    if let Some(var_8) = &input.phone_number {
        object.key("phoneNumber").string(var_8.as_str());
    }
    if let Some(var_9) = &input.additional_information {
        object.key("additionalInformation").string(var_9.as_str());
    }
    if let Some(var_10) = &input.party_type {
        object.key("partyType").string(var_10.as_str());
    }
    if let Some(var_11) = &input.business_name {
        object.key("businessName").string(var_11.as_str());
    }
    if let Some(var_12) = &input.birth_date {
        object.key("birthDate").string(var_12.as_str());
    }
    if let Some(var_13) = &input.gender {
        object.key("gender").string(var_13.as_str());
    }
    if let Some(var_14) = &input.mobile_phone_number {
        object.key("mobilePhoneNumber").string(var_14.as_str());
    }
    if let Some(var_15) = &input.home_phone_number {
        object.key("homePhoneNumber").string(var_15.as_str());
    }
    if let Some(var_16) = &input.business_phone_number {
        object.key("businessPhoneNumber").string(var_16.as_str());
    }
    if let Some(var_17) = &input.business_email_address {
        object.key("businessEmailAddress").string(var_17.as_str());
    }
    if let Some(var_18) = &input.address1 {
        object.key("address1").string(var_18.as_str());
    }
    if let Some(var_19) = &input.address2 {
        object.key("address2").string(var_19.as_str());
    }
    if let Some(var_20) = &input.address3 {
        object.key("address3").string(var_20.as_str());
    }
    if let Some(var_21) = &input.address4 {
        object.key("address4").string(var_21.as_str());
    }
    if let Some(var_22) = &input.city {
        object.key("city").string(var_22.as_str());
    }
    if let Some(var_23) = &input.county {
        object.key("county").string(var_23.as_str());
    }
    if let Some(var_24) = &input.country {
        object.key("country").string(var_24.as_str());
    }
    if let Some(var_25) = &input.postal_code {
        object.key("postalCode").string(var_25.as_str());
    }
    if let Some(var_26) = &input.province {
        object.key("province").string(var_26.as_str());
    }
    if let Some(var_27) = &input.state {
        object.key("state").string(var_27.as_str());
    }
    if let Some(var_28) = &input.shipping_address1 {
        object.key("shippingAddress1").string(var_28.as_str());
    }
    if let Some(var_29) = &input.shipping_address2 {
        object.key("shippingAddress2").string(var_29.as_str());
    }
    if let Some(var_30) = &input.shipping_address3 {
        object.key("shippingAddress3").string(var_30.as_str());
    }
    if let Some(var_31) = &input.shipping_address4 {
        object.key("shippingAddress4").string(var_31.as_str());
    }
    if let Some(var_32) = &input.shipping_city {
        object.key("shippingCity").string(var_32.as_str());
    }
    if let Some(var_33) = &input.shipping_county {
        object.key("shippingCounty").string(var_33.as_str());
    }
    if let Some(var_34) = &input.shipping_country {
        object.key("shippingCountry").string(var_34.as_str());
    }
    if let Some(var_35) = &input.shipping_postal_code {
        object.key("shippingPostalCode").string(var_35.as_str());
    }
    if let Some(var_36) = &input.shipping_province {
        object.key("shippingProvince").string(var_36.as_str());
    }
    if let Some(var_37) = &input.shipping_state {
        object.key("shippingState").string(var_37.as_str());
    }
    if let Some(var_38) = &input.mailing_address1 {
        object.key("mailingAddress1").string(var_38.as_str());
    }
    if let Some(var_39) = &input.mailing_address2 {
        object.key("mailingAddress2").string(var_39.as_str());
    }
    if let Some(var_40) = &input.mailing_address3 {
        object.key("mailingAddress3").string(var_40.as_str());
    }
    if let Some(var_41) = &input.mailing_address4 {
        object.key("mailingAddress4").string(var_41.as_str());
    }
    if let Some(var_42) = &input.mailing_city {
        object.key("mailingCity").string(var_42.as_str());
    }
    if let Some(var_43) = &input.mailing_county {
        object.key("mailingCounty").string(var_43.as_str());
    }
    if let Some(var_44) = &input.mailing_country {
        object.key("mailingCountry").string(var_44.as_str());
    }
    if let Some(var_45) = &input.mailing_postal_code {
        object.key("mailingPostalCode").string(var_45.as_str());
    }
    if let Some(var_46) = &input.mailing_province {
        object.key("mailingProvince").string(var_46.as_str());
    }
    if let Some(var_47) = &input.mailing_state {
        object.key("mailingState").string(var_47.as_str());
    }
    if let Some(var_48) = &input.billing_address1 {
        object.key("billingAddress1").string(var_48.as_str());
    }
    if let Some(var_49) = &input.billing_address2 {
        object.key("billingAddress2").string(var_49.as_str());
    }
    if let Some(var_50) = &input.billing_address3 {
        object.key("billingAddress3").string(var_50.as_str());
    }
    if let Some(var_51) = &input.billing_address4 {
        object.key("billingAddress4").string(var_51.as_str());
    }
    if let Some(var_52) = &input.billing_city {
        object.key("billingCity").string(var_52.as_str());
    }
    if let Some(var_53) = &input.billing_county {
        object.key("billingCounty").string(var_53.as_str());
    }
    if let Some(var_54) = &input.billing_country {
        object.key("billingCountry").string(var_54.as_str());
    }
    if let Some(var_55) = &input.billing_postal_code {
        object.key("billingPostalCode").string(var_55.as_str());
    }
    if let Some(var_56) = &input.billing_province {
        object.key("billingProvince").string(var_56.as_str());
    }
    if let Some(var_57) = &input.billing_state {
        object.key("billingState").string(var_57.as_str());
    }
    if let Some(var_58) = &input.custom {
        #[allow(unused_mut)]
        let mut object_59 = object.key("custom").start_object();
        for (key_60, value_61) in var_58 {
            {
                object_59.key(key_60.as_str()).string(value_61.as_str());
            }
        }
        object_59.finish();
    }
    Ok(())
}

pub(crate) fn de_customer_profile_attributes<'a, I>(
    tokens: &mut ::std::iter::Peekable<I>,
) -> ::std::result::Result<Option<crate::types::CustomerProfileAttributes>, ::aws_smithy_json::deserialize::error::DeserializeError>
where
    I: Iterator<Item = Result<::aws_smithy_json::deserialize::Token<'a>, ::aws_smithy_json::deserialize::error::DeserializeError>>,
{
    match tokens.next().transpose()? {
        Some(::aws_smithy_json::deserialize::Token::ValueNull { .. }) => Ok(None),
        Some(::aws_smithy_json::deserialize::Token::StartObject { .. }) => {
            #[allow(unused_mut)]
            let mut builder = crate::types::builders::CustomerProfileAttributesBuilder::default();
            loop {
                match tokens.next().transpose()? {
                    Some(::aws_smithy_json::deserialize::Token::EndObject { .. }) => break,
                    Some(::aws_smithy_json::deserialize::Token::ObjectKey { key, .. }) => match key.to_unescaped()?.as_ref() {
                        "profileId" => {
                            builder = builder.set_profile_id(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                            );
                        }
                        "profileARN" => {
                            builder = builder.set_profile_arn(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                            );
                        }
                        "firstName" => {
                            builder = builder.set_first_name(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                            );
                        }
                        "middleName" => {
                            builder = builder.set_middle_name(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                            );
                        }
                        "lastName" => {
                            builder = builder.set_last_name(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                            );
                        }
                        "accountNumber" => {
                            builder = builder.set_account_number(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                            );
                        }
                        "emailAddress" => {
                            builder = builder.set_email_address(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                            );
                        }
                        "phoneNumber" => {
                            builder = builder.set_phone_number(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                            );
                        }
                        "additionalInformation" => {
                            builder = builder.set_additional_information(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                            );
                        }
                        "partyType" => {
                            builder = builder.set_party_type(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                            );
                        }
                        "businessName" => {
                            builder = builder.set_business_name(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                            );
                        }
                        "birthDate" => {
                            builder = builder.set_birth_date(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                            );
                        }
                        "gender" => {
                            builder = builder.set_gender(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                            );
                        }
                        "mobilePhoneNumber" => {
                            builder = builder.set_mobile_phone_number(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                            );
                        }
                        "homePhoneNumber" => {
                            builder = builder.set_home_phone_number(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                            );
                        }
                        "businessPhoneNumber" => {
                            builder = builder.set_business_phone_number(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                            );
                        }
                        "businessEmailAddress" => {
                            builder = builder.set_business_email_address(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                            );
                        }
                        "address1" => {
                            builder = builder.set_address1(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                            );
                        }
                        "address2" => {
                            builder = builder.set_address2(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                            );
                        }
                        "address3" => {
                            builder = builder.set_address3(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                            );
                        }
                        "address4" => {
                            builder = builder.set_address4(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                            );
                        }
                        "city" => {
                            builder = builder.set_city(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                            );
                        }
                        "county" => {
                            builder = builder.set_county(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                            );
                        }
                        "country" => {
                            builder = builder.set_country(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                            );
                        }
                        "postalCode" => {
                            builder = builder.set_postal_code(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                            );
                        }
                        "province" => {
                            builder = builder.set_province(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                            );
                        }
                        "state" => {
                            builder = builder.set_state(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                            );
                        }
                        "shippingAddress1" => {
                            builder = builder.set_shipping_address1(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                            );
                        }
                        "shippingAddress2" => {
                            builder = builder.set_shipping_address2(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                            );
                        }
                        "shippingAddress3" => {
                            builder = builder.set_shipping_address3(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                            );
                        }
                        "shippingAddress4" => {
                            builder = builder.set_shipping_address4(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                            );
                        }
                        "shippingCity" => {
                            builder = builder.set_shipping_city(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                            );
                        }
                        "shippingCounty" => {
                            builder = builder.set_shipping_county(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                            );
                        }
                        "shippingCountry" => {
                            builder = builder.set_shipping_country(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                            );
                        }
                        "shippingPostalCode" => {
                            builder = builder.set_shipping_postal_code(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                            );
                        }
                        "shippingProvince" => {
                            builder = builder.set_shipping_province(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                            );
                        }
                        "shippingState" => {
                            builder = builder.set_shipping_state(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                            );
                        }
                        "mailingAddress1" => {
                            builder = builder.set_mailing_address1(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                            );
                        }
                        "mailingAddress2" => {
                            builder = builder.set_mailing_address2(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                            );
                        }
                        "mailingAddress3" => {
                            builder = builder.set_mailing_address3(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                            );
                        }
                        "mailingAddress4" => {
                            builder = builder.set_mailing_address4(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                            );
                        }
                        "mailingCity" => {
                            builder = builder.set_mailing_city(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                            );
                        }
                        "mailingCounty" => {
                            builder = builder.set_mailing_county(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                            );
                        }
                        "mailingCountry" => {
                            builder = builder.set_mailing_country(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                            );
                        }
                        "mailingPostalCode" => {
                            builder = builder.set_mailing_postal_code(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                            );
                        }
                        "mailingProvince" => {
                            builder = builder.set_mailing_province(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                            );
                        }
                        "mailingState" => {
                            builder = builder.set_mailing_state(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                            );
                        }
                        "billingAddress1" => {
                            builder = builder.set_billing_address1(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                            );
                        }
                        "billingAddress2" => {
                            builder = builder.set_billing_address2(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                            );
                        }
                        "billingAddress3" => {
                            builder = builder.set_billing_address3(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                            );
                        }
                        "billingAddress4" => {
                            builder = builder.set_billing_address4(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                            );
                        }
                        "billingCity" => {
                            builder = builder.set_billing_city(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                            );
                        }
                        "billingCounty" => {
                            builder = builder.set_billing_county(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                            );
                        }
                        "billingCountry" => {
                            builder = builder.set_billing_country(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                            );
                        }
                        "billingPostalCode" => {
                            builder = builder.set_billing_postal_code(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                            );
                        }
                        "billingProvince" => {
                            builder = builder.set_billing_province(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                            );
                        }
                        "billingState" => {
                            builder = builder.set_billing_state(
                                ::aws_smithy_json::deserialize::token::expect_string_or_null(tokens.next())?
                                    .map(|s| s.to_unescaped().map(|u| u.into_owned()))
                                    .transpose()?,
                            );
                        }
                        "custom" => {
                            builder = builder.set_custom(crate::protocol_serde::shape_custom_attributes::de_custom_attributes(tokens)?);
                        }
                        _ => ::aws_smithy_json::deserialize::token::skip_value(tokens)?,
                    },
                    other => {
                        return Err(::aws_smithy_json::deserialize::error::DeserializeError::custom(format!(
                            "expected object key or end object, found: {other:?}"
                        )))
                    }
                }
            }
            Ok(Some(builder.build()))
        }
        _ => Err(::aws_smithy_json::deserialize::error::DeserializeError::custom(
            "expected start object or null",
        )),
    }
}
