// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_ai_agent_configuration(
    object_3: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::types::AiAgentConfiguration,
) -> ::std::result::Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    match input {
        crate::types::AiAgentConfiguration::ManualSearchAiAgentConfiguration(inner) => {
            #[allow(unused_mut)]
            let mut object_1 = object_3.key("manualSearchAIAgentConfiguration").start_object();
            crate::protocol_serde::shape_manual_search_ai_agent_configuration::ser_manual_search_ai_agent_configuration(&mut object_1, inner)?;
            object_1.finish();
        }
        crate::types::AiAgentConfiguration::AnswerRecommendationAiAgentConfiguration(inner) => {
            #[allow(unused_mut)]
            let mut object_2 = object_3.key("answerRecommendationAIAgentConfiguration").start_object();
            crate::protocol_serde::shape_answer_recommendation_ai_agent_configuration::ser_answer_recommendation_ai_agent_configuration(
                &mut object_2,
                inner,
            )?;
            object_2.finish();
        }
        crate::types::AiAgentConfiguration::SelfServiceAiAgentConfiguration(inner) => {
            #[allow(unused_mut)]
            let mut object_3 = object_3.key("selfServiceAIAgentConfiguration").start_object();
            crate::protocol_serde::shape_self_service_ai_agent_configuration::ser_self_service_ai_agent_configuration(&mut object_3, inner)?;
            object_3.finish();
        }
        crate::types::AiAgentConfiguration::EmailResponseAiAgentConfiguration(inner) => {
            #[allow(unused_mut)]
            let mut object_4 = object_3.key("emailResponseAIAgentConfiguration").start_object();
            crate::protocol_serde::shape_email_response_ai_agent_configuration::ser_email_response_ai_agent_configuration(&mut object_4, inner)?;
            object_4.finish();
        }
        crate::types::AiAgentConfiguration::EmailOverviewAiAgentConfiguration(inner) => {
            #[allow(unused_mut)]
            let mut object_5 = object_3.key("emailOverviewAIAgentConfiguration").start_object();
            crate::protocol_serde::shape_email_overview_ai_agent_configuration::ser_email_overview_ai_agent_configuration(&mut object_5, inner)?;
            object_5.finish();
        }
        crate::types::AiAgentConfiguration::EmailGenerativeAnswerAiAgentConfiguration(inner) => {
            #[allow(unused_mut)]
            let mut object_6 = object_3.key("emailGenerativeAnswerAIAgentConfiguration").start_object();
            crate::protocol_serde::shape_email_generative_answer_ai_agent_configuration::ser_email_generative_answer_ai_agent_configuration(
                &mut object_6,
                inner,
            )?;
            object_6.finish();
        }
        crate::types::AiAgentConfiguration::Unknown => {
            return Err(::aws_smithy_types::error::operation::SerializationError::unknown_variant(
                "AiAgentConfiguration",
            ))
        }
    }
    Ok(())
}

pub(crate) fn de_ai_agent_configuration<'a, I>(
    tokens: &mut ::std::iter::Peekable<I>,
) -> ::std::result::Result<Option<crate::types::AiAgentConfiguration>, ::aws_smithy_json::deserialize::error::DeserializeError>
where
    I: Iterator<Item = Result<::aws_smithy_json::deserialize::Token<'a>, ::aws_smithy_json::deserialize::error::DeserializeError>>,
{
    let mut variant = None;
    match tokens.next().transpose()? {
        Some(::aws_smithy_json::deserialize::Token::ValueNull { .. }) => return Ok(None),
        Some(::aws_smithy_json::deserialize::Token::StartObject { .. }) => loop {
            match tokens.next().transpose()? {
                Some(::aws_smithy_json::deserialize::Token::EndObject { .. }) => break,
                Some(::aws_smithy_json::deserialize::Token::ObjectKey { key, .. }) => {
                    if let ::std::option::Option::Some(::std::result::Result::Ok(::aws_smithy_json::deserialize::Token::ValueNull { .. })) =
                        tokens.peek()
                    {
                        let _ = tokens.next().expect("peek returned a token")?;
                        continue;
                    }
                    let key = key.to_unescaped()?;
                    if key == "__type" {
                        ::aws_smithy_json::deserialize::token::skip_value(tokens)?;
                        continue;
                    }
                    if variant.is_some() {
                        return Err(::aws_smithy_json::deserialize::error::DeserializeError::custom(
                            "encountered mixed variants in union",
                        ));
                    }
                    variant = match key.as_ref() {
                            "manualSearchAIAgentConfiguration" => {
                                Some(crate::types::AiAgentConfiguration::ManualSearchAiAgentConfiguration(
                                    crate::protocol_serde::shape_manual_search_ai_agent_configuration::de_manual_search_ai_agent_configuration(tokens)?
                                    .ok_or_else(|| ::aws_smithy_json::deserialize::error::DeserializeError::custom("value for 'manualSearchAIAgentConfiguration' cannot be null"))?
                                ))
                            }
                            "answerRecommendationAIAgentConfiguration" => {
                                Some(crate::types::AiAgentConfiguration::AnswerRecommendationAiAgentConfiguration(
                                    crate::protocol_serde::shape_answer_recommendation_ai_agent_configuration::de_answer_recommendation_ai_agent_configuration(tokens)?
                                    .ok_or_else(|| ::aws_smithy_json::deserialize::error::DeserializeError::custom("value for 'answerRecommendationAIAgentConfiguration' cannot be null"))?
                                ))
                            }
                            "selfServiceAIAgentConfiguration" => {
                                Some(crate::types::AiAgentConfiguration::SelfServiceAiAgentConfiguration(
                                    crate::protocol_serde::shape_self_service_ai_agent_configuration::de_self_service_ai_agent_configuration(tokens)?
                                    .ok_or_else(|| ::aws_smithy_json::deserialize::error::DeserializeError::custom("value for 'selfServiceAIAgentConfiguration' cannot be null"))?
                                ))
                            }
                            "emailResponseAIAgentConfiguration" => {
                                Some(crate::types::AiAgentConfiguration::EmailResponseAiAgentConfiguration(
                                    crate::protocol_serde::shape_email_response_ai_agent_configuration::de_email_response_ai_agent_configuration(tokens)?
                                    .ok_or_else(|| ::aws_smithy_json::deserialize::error::DeserializeError::custom("value for 'emailResponseAIAgentConfiguration' cannot be null"))?
                                ))
                            }
                            "emailOverviewAIAgentConfiguration" => {
                                Some(crate::types::AiAgentConfiguration::EmailOverviewAiAgentConfiguration(
                                    crate::protocol_serde::shape_email_overview_ai_agent_configuration::de_email_overview_ai_agent_configuration(tokens)?
                                    .ok_or_else(|| ::aws_smithy_json::deserialize::error::DeserializeError::custom("value for 'emailOverviewAIAgentConfiguration' cannot be null"))?
                                ))
                            }
                            "emailGenerativeAnswerAIAgentConfiguration" => {
                                Some(crate::types::AiAgentConfiguration::EmailGenerativeAnswerAiAgentConfiguration(
                                    crate::protocol_serde::shape_email_generative_answer_ai_agent_configuration::de_email_generative_answer_ai_agent_configuration(tokens)?
                                    .ok_or_else(|| ::aws_smithy_json::deserialize::error::DeserializeError::custom("value for 'emailGenerativeAnswerAIAgentConfiguration' cannot be null"))?
                                ))
                            }
                            _ => {
                                                                              ::aws_smithy_json::deserialize::token::skip_value(tokens)?;
                                                                              Some(crate::types::AiAgentConfiguration::Unknown)
                                                                            }
                        };
                }
                other => {
                    return Err(::aws_smithy_json::deserialize::error::DeserializeError::custom(format!(
                        "expected object key or end object, found: {other:?}"
                    )))
                }
            }
        },
        _ => {
            return Err(::aws_smithy_json::deserialize::error::DeserializeError::custom(
                "expected start object or null",
            ))
        }
    }
    if variant.is_none() {
        return Err(::aws_smithy_json::deserialize::error::DeserializeError::custom(
            "Union did not contain a valid variant.",
        ));
    }
    Ok(variant)
}
