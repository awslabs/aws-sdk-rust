// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_message_template_attributes(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::types::MessageTemplateAttributes,
) -> ::std::result::Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.system_attributes {
        #[allow(unused_mut)]
        let mut object_2 = object.key("systemAttributes").start_object();
        crate::protocol_serde::shape_system_attributes::ser_system_attributes(&mut object_2, var_1)?;
        object_2.finish();
    }
    if let Some(var_3) = &input.agent_attributes {
        #[allow(unused_mut)]
        let mut object_4 = object.key("agentAttributes").start_object();
        crate::protocol_serde::shape_agent_attributes::ser_agent_attributes(&mut object_4, var_3)?;
        object_4.finish();
    }
    if let Some(var_5) = &input.customer_profile_attributes {
        #[allow(unused_mut)]
        let mut object_6 = object.key("customerProfileAttributes").start_object();
        crate::protocol_serde::shape_customer_profile_attributes::ser_customer_profile_attributes(&mut object_6, var_5)?;
        object_6.finish();
    }
    if let Some(var_7) = &input.custom_attributes {
        #[allow(unused_mut)]
        let mut object_8 = object.key("customAttributes").start_object();
        for (key_9, value_10) in var_7 {
            {
                object_8.key(key_9.as_str()).string(value_10.as_str());
            }
        }
        object_8.finish();
    }
    Ok(())
}

pub(crate) fn de_message_template_attributes<'a, I>(
    tokens: &mut ::std::iter::Peekable<I>,
) -> ::std::result::Result<Option<crate::types::MessageTemplateAttributes>, ::aws_smithy_json::deserialize::error::DeserializeError>
where
    I: Iterator<Item = Result<::aws_smithy_json::deserialize::Token<'a>, ::aws_smithy_json::deserialize::error::DeserializeError>>,
{
    match tokens.next().transpose()? {
        Some(::aws_smithy_json::deserialize::Token::ValueNull { .. }) => Ok(None),
        Some(::aws_smithy_json::deserialize::Token::StartObject { .. }) => {
            #[allow(unused_mut)]
            let mut builder = crate::types::builders::MessageTemplateAttributesBuilder::default();
            loop {
                match tokens.next().transpose()? {
                    Some(::aws_smithy_json::deserialize::Token::EndObject { .. }) => break,
                    Some(::aws_smithy_json::deserialize::Token::ObjectKey { key, .. }) => match key.to_unescaped()?.as_ref() {
                        "systemAttributes" => {
                            builder = builder.set_system_attributes(crate::protocol_serde::shape_system_attributes::de_system_attributes(tokens)?);
                        }
                        "agentAttributes" => {
                            builder = builder.set_agent_attributes(crate::protocol_serde::shape_agent_attributes::de_agent_attributes(tokens)?);
                        }
                        "customerProfileAttributes" => {
                            builder = builder.set_customer_profile_attributes(
                                crate::protocol_serde::shape_customer_profile_attributes::de_customer_profile_attributes(tokens)?,
                            );
                        }
                        "customAttributes" => {
                            builder = builder.set_custom_attributes(crate::protocol_serde::shape_custom_attributes::de_custom_attributes(tokens)?);
                        }
                        _ => ::aws_smithy_json::deserialize::token::skip_value(tokens)?,
                    },
                    other => {
                        return Err(::aws_smithy_json::deserialize::error::DeserializeError::custom(format!(
                            "expected object key or end object, found: {other:?}"
                        )))
                    }
                }
            }
            Ok(Some(builder.build()))
        }
        _ => Err(::aws_smithy_json::deserialize::error::DeserializeError::custom(
            "expected start object or null",
        )),
    }
}
