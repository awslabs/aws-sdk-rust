// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The configuration for the <code>ANSWER_RECOMMENDATION</code> AI Agent type.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AnswerRecommendationAiAgentConfiguration {
    /// <p>The AI Prompt identifier for the Intent Labeling prompt used by the <code>ANSWER_RECOMMENDATION</code> AI Agent.</p>
    pub intent_labeling_generation_ai_prompt_id: ::std::option::Option<::std::string::String>,
    /// <p>The AI Prompt identifier for the Query Reformulation prompt used by the <code>ANSWER_RECOMMENDATION</code> AI Agent.</p>
    pub query_reformulation_ai_prompt_id: ::std::option::Option<::std::string::String>,
    /// <p>The AI Prompt identifier for the Answer Generation prompt used by the <code>ANSWER_RECOMMENDATION</code> AI Agent.</p>
    pub answer_generation_ai_prompt_id: ::std::option::Option<::std::string::String>,
    /// <p>The AI Guardrail identifier for the Answer Generation Guardrail used by the <code>ANSWER_RECOMMENDATION</code> AI Agent.</p>
    pub answer_generation_ai_guardrail_id: ::std::option::Option<::std::string::String>,
    /// <p>The association configurations for overriding behavior on this AI Agent.</p>
    pub association_configurations: ::std::option::Option<::std::vec::Vec<crate::types::AssociationConfiguration>>,
    /// <p>The locale to which specifies the language and region settings that determine the response language for <a href="https://docs.aws.amazon.com/connect/latest/APIReference/API_amazon-q-connect_QueryAssistant.html">QueryAssistant</a>.</p><note>
    /// <p>Changing this locale to anything other than <code>en_US</code>, <code>en_GB</code>, or <code>en_AU</code> will turn off recommendations triggered by contact transcripts for agent assistance, as this feature is not supported in multiple languages.</p>
    /// </note>
    pub locale: ::std::option::Option<::std::string::String>,
}
impl AnswerRecommendationAiAgentConfiguration {
    /// <p>The AI Prompt identifier for the Intent Labeling prompt used by the <code>ANSWER_RECOMMENDATION</code> AI Agent.</p>
    pub fn intent_labeling_generation_ai_prompt_id(&self) -> ::std::option::Option<&str> {
        self.intent_labeling_generation_ai_prompt_id.as_deref()
    }
    /// <p>The AI Prompt identifier for the Query Reformulation prompt used by the <code>ANSWER_RECOMMENDATION</code> AI Agent.</p>
    pub fn query_reformulation_ai_prompt_id(&self) -> ::std::option::Option<&str> {
        self.query_reformulation_ai_prompt_id.as_deref()
    }
    /// <p>The AI Prompt identifier for the Answer Generation prompt used by the <code>ANSWER_RECOMMENDATION</code> AI Agent.</p>
    pub fn answer_generation_ai_prompt_id(&self) -> ::std::option::Option<&str> {
        self.answer_generation_ai_prompt_id.as_deref()
    }
    /// <p>The AI Guardrail identifier for the Answer Generation Guardrail used by the <code>ANSWER_RECOMMENDATION</code> AI Agent.</p>
    pub fn answer_generation_ai_guardrail_id(&self) -> ::std::option::Option<&str> {
        self.answer_generation_ai_guardrail_id.as_deref()
    }
    /// <p>The association configurations for overriding behavior on this AI Agent.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.association_configurations.is_none()`.
    pub fn association_configurations(&self) -> &[crate::types::AssociationConfiguration] {
        self.association_configurations.as_deref().unwrap_or_default()
    }
    /// <p>The locale to which specifies the language and region settings that determine the response language for <a href="https://docs.aws.amazon.com/connect/latest/APIReference/API_amazon-q-connect_QueryAssistant.html">QueryAssistant</a>.</p><note>
    /// <p>Changing this locale to anything other than <code>en_US</code>, <code>en_GB</code>, or <code>en_AU</code> will turn off recommendations triggered by contact transcripts for agent assistance, as this feature is not supported in multiple languages.</p>
    /// </note>
    pub fn locale(&self) -> ::std::option::Option<&str> {
        self.locale.as_deref()
    }
}
impl AnswerRecommendationAiAgentConfiguration {
    /// Creates a new builder-style object to manufacture [`AnswerRecommendationAiAgentConfiguration`](crate::types::AnswerRecommendationAiAgentConfiguration).
    pub fn builder() -> crate::types::builders::AnswerRecommendationAiAgentConfigurationBuilder {
        crate::types::builders::AnswerRecommendationAiAgentConfigurationBuilder::default()
    }
}

/// A builder for [`AnswerRecommendationAiAgentConfiguration`](crate::types::AnswerRecommendationAiAgentConfiguration).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct AnswerRecommendationAiAgentConfigurationBuilder {
    pub(crate) intent_labeling_generation_ai_prompt_id: ::std::option::Option<::std::string::String>,
    pub(crate) query_reformulation_ai_prompt_id: ::std::option::Option<::std::string::String>,
    pub(crate) answer_generation_ai_prompt_id: ::std::option::Option<::std::string::String>,
    pub(crate) answer_generation_ai_guardrail_id: ::std::option::Option<::std::string::String>,
    pub(crate) association_configurations: ::std::option::Option<::std::vec::Vec<crate::types::AssociationConfiguration>>,
    pub(crate) locale: ::std::option::Option<::std::string::String>,
}
impl AnswerRecommendationAiAgentConfigurationBuilder {
    /// <p>The AI Prompt identifier for the Intent Labeling prompt used by the <code>ANSWER_RECOMMENDATION</code> AI Agent.</p>
    pub fn intent_labeling_generation_ai_prompt_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.intent_labeling_generation_ai_prompt_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The AI Prompt identifier for the Intent Labeling prompt used by the <code>ANSWER_RECOMMENDATION</code> AI Agent.</p>
    pub fn set_intent_labeling_generation_ai_prompt_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.intent_labeling_generation_ai_prompt_id = input;
        self
    }
    /// <p>The AI Prompt identifier for the Intent Labeling prompt used by the <code>ANSWER_RECOMMENDATION</code> AI Agent.</p>
    pub fn get_intent_labeling_generation_ai_prompt_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.intent_labeling_generation_ai_prompt_id
    }
    /// <p>The AI Prompt identifier for the Query Reformulation prompt used by the <code>ANSWER_RECOMMENDATION</code> AI Agent.</p>
    pub fn query_reformulation_ai_prompt_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.query_reformulation_ai_prompt_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The AI Prompt identifier for the Query Reformulation prompt used by the <code>ANSWER_RECOMMENDATION</code> AI Agent.</p>
    pub fn set_query_reformulation_ai_prompt_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.query_reformulation_ai_prompt_id = input;
        self
    }
    /// <p>The AI Prompt identifier for the Query Reformulation prompt used by the <code>ANSWER_RECOMMENDATION</code> AI Agent.</p>
    pub fn get_query_reformulation_ai_prompt_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.query_reformulation_ai_prompt_id
    }
    /// <p>The AI Prompt identifier for the Answer Generation prompt used by the <code>ANSWER_RECOMMENDATION</code> AI Agent.</p>
    pub fn answer_generation_ai_prompt_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.answer_generation_ai_prompt_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The AI Prompt identifier for the Answer Generation prompt used by the <code>ANSWER_RECOMMENDATION</code> AI Agent.</p>
    pub fn set_answer_generation_ai_prompt_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.answer_generation_ai_prompt_id = input;
        self
    }
    /// <p>The AI Prompt identifier for the Answer Generation prompt used by the <code>ANSWER_RECOMMENDATION</code> AI Agent.</p>
    pub fn get_answer_generation_ai_prompt_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.answer_generation_ai_prompt_id
    }
    /// <p>The AI Guardrail identifier for the Answer Generation Guardrail used by the <code>ANSWER_RECOMMENDATION</code> AI Agent.</p>
    pub fn answer_generation_ai_guardrail_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.answer_generation_ai_guardrail_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The AI Guardrail identifier for the Answer Generation Guardrail used by the <code>ANSWER_RECOMMENDATION</code> AI Agent.</p>
    pub fn set_answer_generation_ai_guardrail_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.answer_generation_ai_guardrail_id = input;
        self
    }
    /// <p>The AI Guardrail identifier for the Answer Generation Guardrail used by the <code>ANSWER_RECOMMENDATION</code> AI Agent.</p>
    pub fn get_answer_generation_ai_guardrail_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.answer_generation_ai_guardrail_id
    }
    /// Appends an item to `association_configurations`.
    ///
    /// To override the contents of this collection use [`set_association_configurations`](Self::set_association_configurations).
    ///
    /// <p>The association configurations for overriding behavior on this AI Agent.</p>
    pub fn association_configurations(mut self, input: crate::types::AssociationConfiguration) -> Self {
        let mut v = self.association_configurations.unwrap_or_default();
        v.push(input);
        self.association_configurations = ::std::option::Option::Some(v);
        self
    }
    /// <p>The association configurations for overriding behavior on this AI Agent.</p>
    pub fn set_association_configurations(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::AssociationConfiguration>>) -> Self {
        self.association_configurations = input;
        self
    }
    /// <p>The association configurations for overriding behavior on this AI Agent.</p>
    pub fn get_association_configurations(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::AssociationConfiguration>> {
        &self.association_configurations
    }
    /// <p>The locale to which specifies the language and region settings that determine the response language for <a href="https://docs.aws.amazon.com/connect/latest/APIReference/API_amazon-q-connect_QueryAssistant.html">QueryAssistant</a>.</p><note>
    /// <p>Changing this locale to anything other than <code>en_US</code>, <code>en_GB</code>, or <code>en_AU</code> will turn off recommendations triggered by contact transcripts for agent assistance, as this feature is not supported in multiple languages.</p>
    /// </note>
    pub fn locale(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.locale = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The locale to which specifies the language and region settings that determine the response language for <a href="https://docs.aws.amazon.com/connect/latest/APIReference/API_amazon-q-connect_QueryAssistant.html">QueryAssistant</a>.</p><note>
    /// <p>Changing this locale to anything other than <code>en_US</code>, <code>en_GB</code>, or <code>en_AU</code> will turn off recommendations triggered by contact transcripts for agent assistance, as this feature is not supported in multiple languages.</p>
    /// </note>
    pub fn set_locale(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.locale = input;
        self
    }
    /// <p>The locale to which specifies the language and region settings that determine the response language for <a href="https://docs.aws.amazon.com/connect/latest/APIReference/API_amazon-q-connect_QueryAssistant.html">QueryAssistant</a>.</p><note>
    /// <p>Changing this locale to anything other than <code>en_US</code>, <code>en_GB</code>, or <code>en_AU</code> will turn off recommendations triggered by contact transcripts for agent assistance, as this feature is not supported in multiple languages.</p>
    /// </note>
    pub fn get_locale(&self) -> &::std::option::Option<::std::string::String> {
        &self.locale
    }
    /// Consumes the builder and constructs a [`AnswerRecommendationAiAgentConfiguration`](crate::types::AnswerRecommendationAiAgentConfiguration).
    pub fn build(self) -> crate::types::AnswerRecommendationAiAgentConfiguration {
        crate::types::AnswerRecommendationAiAgentConfiguration {
            intent_labeling_generation_ai_prompt_id: self.intent_labeling_generation_ai_prompt_id,
            query_reformulation_ai_prompt_id: self.query_reformulation_ai_prompt_id,
            answer_generation_ai_prompt_id: self.answer_generation_ai_prompt_id,
            answer_generation_ai_guardrail_id: self.answer_generation_ai_guardrail_id,
            association_configurations: self.association_configurations,
            locale: self.locale,
        }
    }
}
