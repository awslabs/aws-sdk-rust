// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn parse_http_error_metadata(
    response: &http::Response<bytes::Bytes>,
) -> Result<
    aws_smithy_types::error::metadata::Builder,
    aws_smithy_json::deserialize::error::DeserializeError,
> {
    crate::json_errors::parse_error_metadata(response.body(), response.headers())
}

pub(crate) mod shape_associate_license;

pub(crate) mod shape_create_workspace;

pub(crate) mod shape_create_workspace_api_key;

pub(crate) mod shape_delete_workspace;

pub(crate) mod shape_delete_workspace_api_key;

pub(crate) mod shape_describe_workspace;

pub(crate) mod shape_describe_workspace_authentication;

pub(crate) mod shape_describe_workspace_configuration;

pub(crate) mod shape_disassociate_license;

pub(crate) mod shape_list_permissions;

pub(crate) mod shape_list_tags_for_resource;

pub(crate) mod shape_list_workspaces;

pub(crate) mod shape_tag_resource;

pub(crate) mod shape_untag_resource;

pub(crate) mod shape_update_permissions;

pub(crate) mod shape_update_workspace;

pub(crate) mod shape_update_workspace_authentication;

pub(crate) mod shape_update_workspace_configuration;

pub(crate) fn or_empty_doc(data: &[u8]) -> &[u8] {
    if data.is_empty() {
        b"{}"
    } else {
        data
    }
}

pub(crate) mod shape_access_denied_exception;

pub(crate) mod shape_conflict_exception;

pub(crate) mod shape_create_workspace_api_key_input;

pub(crate) mod shape_create_workspace_input;

pub(crate) mod shape_internal_server_exception;

pub(crate) mod shape_resource_not_found_exception;

pub(crate) mod shape_service_quota_exceeded_exception;

pub(crate) mod shape_tag_resource_input;

pub(crate) mod shape_throttling_exception;

pub(crate) mod shape_update_permissions_input;

pub(crate) mod shape_update_workspace_authentication_input;

pub(crate) mod shape_update_workspace_configuration_input;

pub(crate) mod shape_update_workspace_input;

pub(crate) mod shape_validation_exception;

pub(crate) mod shape_authentication_description;

pub(crate) mod shape_permission_entry_list;

pub(crate) mod shape_saml_configuration;

pub(crate) mod shape_tag_map;

pub(crate) mod shape_update_error_list;

pub(crate) mod shape_update_instruction;

pub(crate) mod shape_validation_exception_field_list;

pub(crate) mod shape_vpc_configuration;

pub(crate) mod shape_workspace_description;

pub(crate) mod shape_workspace_list;

pub(crate) mod shape_assertion_attributes;

pub(crate) mod shape_authentication_providers;

pub(crate) mod shape_authentication_summary;

pub(crate) mod shape_aws_sso_authentication;

pub(crate) mod shape_data_source_types_list;

pub(crate) mod shape_idp_metadata;

pub(crate) mod shape_notification_destinations_list;

pub(crate) mod shape_organizational_unit_list;

pub(crate) mod shape_permission_entry;

pub(crate) mod shape_role_values;

pub(crate) mod shape_saml_authentication;

pub(crate) mod shape_update_error;

pub(crate) mod shape_user;

pub(crate) mod shape_validation_exception_field;

pub(crate) mod shape_workspace_summary;

pub(crate) mod shape_security_group_ids;

pub(crate) mod shape_subnet_ids;

pub(crate) mod shape_allowed_organizations;

pub(crate) mod shape_user_list;

pub(crate) mod shape_role_value_list;
