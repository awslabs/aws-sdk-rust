// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DisassociateLicenseInput {
    /// <p>The ID of the workspace to remove the Grafana Enterprise license from.</p>
    #[doc(hidden)]
    pub workspace_id: std::option::Option<std::string::String>,
    /// <p>The type of license to remove from the workspace.</p>
    #[doc(hidden)]
    pub license_type: std::option::Option<crate::types::LicenseType>,
}
impl DisassociateLicenseInput {
    /// <p>The ID of the workspace to remove the Grafana Enterprise license from.</p>
    pub fn workspace_id(&self) -> std::option::Option<&str> {
        self.workspace_id.as_deref()
    }
    /// <p>The type of license to remove from the workspace.</p>
    pub fn license_type(&self) -> std::option::Option<&crate::types::LicenseType> {
        self.license_type.as_ref()
    }
}
impl DisassociateLicenseInput {
    /// Creates a new builder-style object to manufacture [`DisassociateLicenseInput`](crate::operation::disassociate_license::DisassociateLicenseInput).
    pub fn builder(
    ) -> crate::operation::disassociate_license::builders::DisassociateLicenseInputBuilder {
        crate::operation::disassociate_license::builders::DisassociateLicenseInputBuilder::default()
    }
}

/// A builder for [`DisassociateLicenseInput`](crate::operation::disassociate_license::DisassociateLicenseInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DisassociateLicenseInputBuilder {
    pub(crate) workspace_id: std::option::Option<std::string::String>,
    pub(crate) license_type: std::option::Option<crate::types::LicenseType>,
}
impl DisassociateLicenseInputBuilder {
    /// <p>The ID of the workspace to remove the Grafana Enterprise license from.</p>
    pub fn workspace_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.workspace_id = Some(input.into());
        self
    }
    /// <p>The ID of the workspace to remove the Grafana Enterprise license from.</p>
    pub fn set_workspace_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.workspace_id = input;
        self
    }
    /// <p>The type of license to remove from the workspace.</p>
    pub fn license_type(mut self, input: crate::types::LicenseType) -> Self {
        self.license_type = Some(input);
        self
    }
    /// <p>The type of license to remove from the workspace.</p>
    pub fn set_license_type(
        mut self,
        input: std::option::Option<crate::types::LicenseType>,
    ) -> Self {
        self.license_type = input;
        self
    }
    /// Consumes the builder and constructs a [`DisassociateLicenseInput`](crate::operation::disassociate_license::DisassociateLicenseInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::disassociate_license::DisassociateLicenseInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::disassociate_license::DisassociateLicenseInput {
                workspace_id: self.workspace_id,
                license_type: self.license_type,
            },
        )
    }
}
