// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`AssociateLicense`](crate::client::fluent_builders::AssociateLicense) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`workspace_id(impl Into<String>)`](crate::client::fluent_builders::AssociateLicense::workspace_id) / [`set_workspace_id(Option<String>)`](crate::client::fluent_builders::AssociateLicense::set_workspace_id): <p>The ID of the workspace to associate the license with.</p>
    ///   - [`license_type(LicenseType)`](crate::client::fluent_builders::AssociateLicense::license_type) / [`set_license_type(Option<LicenseType>)`](crate::client::fluent_builders::AssociateLicense::set_license_type): <p>The type of license to associate with the workspace.</p>
    /// - On success, responds with [`AssociateLicenseOutput`](crate::output::AssociateLicenseOutput) with field(s):
    ///   - [`workspace(Option<WorkspaceDescription>)`](crate::output::AssociateLicenseOutput::workspace): <p>A structure containing data about the workspace.</p>
    /// - On failure, responds with [`SdkError<AssociateLicenseError>`](crate::error::AssociateLicenseError)
    pub fn associate_license(&self) -> crate::client::fluent_builders::AssociateLicense {
        crate::client::fluent_builders::AssociateLicense::new(self.handle.clone())
    }
}
