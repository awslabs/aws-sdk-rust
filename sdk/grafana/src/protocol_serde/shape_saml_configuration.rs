// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_saml_configuration(
    object: &mut aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::types::SamlConfiguration,
) -> Result<(), aws_smithy_http::operation::error::SerializationError> {
    if let Some(var_1) = &input.idp_metadata {
        #[allow(unused_mut)]
        let mut object_2 = object.key("idpMetadata").start_object();
        crate::protocol_serde::shape_idp_metadata::ser_idp_metadata(&mut object_2, var_1)?;
        object_2.finish();
    }
    if let Some(var_3) = &input.assertion_attributes {
        #[allow(unused_mut)]
        let mut object_4 = object.key("assertionAttributes").start_object();
        crate::protocol_serde::shape_assertion_attributes::ser_assertion_attributes(
            &mut object_4,
            var_3,
        )?;
        object_4.finish();
    }
    if let Some(var_5) = &input.role_values {
        #[allow(unused_mut)]
        let mut object_6 = object.key("roleValues").start_object();
        crate::protocol_serde::shape_role_values::ser_role_values(&mut object_6, var_5)?;
        object_6.finish();
    }
    if let Some(var_7) = &input.allowed_organizations {
        let mut array_8 = object.key("allowedOrganizations").start_array();
        for item_9 in var_7 {
            {
                array_8.value().string(item_9.as_str());
            }
        }
        array_8.finish();
    }
    if input.login_validity_duration != 0 {
        object.key("loginValidityDuration").number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((input.login_validity_duration).into()),
        );
    }
    Ok(())
}

pub(crate) fn de_saml_configuration<'a, I>(
    tokens: &mut std::iter::Peekable<I>,
) -> Result<
    Option<crate::types::SamlConfiguration>,
    aws_smithy_json::deserialize::error::DeserializeError,
>
where
    I: Iterator<
        Item = Result<
            aws_smithy_json::deserialize::Token<'a>,
            aws_smithy_json::deserialize::error::DeserializeError,
        >,
    >,
{
    match tokens.next().transpose()? {
        Some(aws_smithy_json::deserialize::Token::ValueNull { .. }) => Ok(None),
        Some(aws_smithy_json::deserialize::Token::StartObject { .. }) => {
            #[allow(unused_mut)]
            let mut builder = crate::types::builders::SamlConfigurationBuilder::default();
            loop {
                match tokens.next().transpose()? {
                    Some(aws_smithy_json::deserialize::Token::EndObject { .. }) => break,
                    Some(aws_smithy_json::deserialize::Token::ObjectKey { key, .. }) => {
                        match key.to_unescaped()?.as_ref() {
                            "idpMetadata" => {
                                builder = builder.set_idp_metadata(
                                    crate::protocol_serde::shape_idp_metadata::de_idp_metadata(
                                        tokens,
                                    )?,
                                );
                            }
                            "assertionAttributes" => {
                                builder = builder.set_assertion_attributes(
                                    crate::protocol_serde::shape_assertion_attributes::de_assertion_attributes(tokens)?
                                );
                            }
                            "roleValues" => {
                                builder = builder.set_role_values(
                                    crate::protocol_serde::shape_role_values::de_role_values(
                                        tokens,
                                    )?,
                                );
                            }
                            "allowedOrganizations" => {
                                builder = builder.set_allowed_organizations(
                                    crate::protocol_serde::shape_allowed_organizations::de_allowed_organizations(tokens)?
                                );
                            }
                            "loginValidityDuration" => {
                                builder = builder.set_login_validity_duration(
                                    aws_smithy_json::deserialize::token::expect_number_or_null(
                                        tokens.next(),
                                    )?
                                    .map(i32::try_from)
                                    .transpose()?,
                                );
                            }
                            _ => aws_smithy_json::deserialize::token::skip_value(tokens)?,
                        }
                    }
                    other => {
                        return Err(
                            aws_smithy_json::deserialize::error::DeserializeError::custom(format!(
                                "expected object key or end object, found: {:?}",
                                other
                            )),
                        )
                    }
                }
            }
            Ok(Some(builder.build()))
        }
        _ => Err(
            aws_smithy_json::deserialize::error::DeserializeError::custom(
                "expected start object or null",
            ),
        ),
    }
}
