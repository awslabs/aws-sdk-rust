// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Operating System.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct Os {
    /// <p>OS full string.</p>
    #[doc(hidden)]
    pub full_string: std::option::Option<std::string::String>,
}
impl Os {
    /// <p>OS full string.</p>
    pub fn full_string(&self) -> std::option::Option<&str> {
        self.full_string.as_deref()
    }
}
impl Os {
    /// Creates a new builder-style object to manufacture [`Os`](crate::types::Os).
    pub fn builder() -> crate::types::builders::OsBuilder {
        crate::types::builders::OsBuilder::default()
    }
}

/// A builder for [`Os`](crate::types::Os).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct OsBuilder {
    pub(crate) full_string: std::option::Option<std::string::String>,
}
impl OsBuilder {
    /// <p>OS full string.</p>
    pub fn full_string(mut self, input: impl Into<std::string::String>) -> Self {
        self.full_string = Some(input.into());
        self
    }
    /// <p>OS full string.</p>
    pub fn set_full_string(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.full_string = input;
        self
    }
    /// Consumes the builder and constructs a [`Os`](crate::types::Os).
    pub fn build(self) -> crate::types::Os {
        crate::types::Os {
            full_string: self.full_string,
        }
    }
}
