// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>List Connectors Request Filters.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ListConnectorsRequestFilters {
    /// <p>List Connectors Request Filters connector IDs.</p>
    pub connector_ids: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
}
impl ListConnectorsRequestFilters {
    /// <p>List Connectors Request Filters connector IDs.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.connector_ids.is_none()`.
    pub fn connector_ids(&self) -> &[::std::string::String] {
        self.connector_ids.as_deref().unwrap_or_default()
    }
}
impl ListConnectorsRequestFilters {
    /// Creates a new builder-style object to manufacture [`ListConnectorsRequestFilters`](crate::types::ListConnectorsRequestFilters).
    pub fn builder() -> crate::types::builders::ListConnectorsRequestFiltersBuilder {
        crate::types::builders::ListConnectorsRequestFiltersBuilder::default()
    }
}

/// A builder for [`ListConnectorsRequestFilters`](crate::types::ListConnectorsRequestFilters).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ListConnectorsRequestFiltersBuilder {
    pub(crate) connector_ids: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
}
impl ListConnectorsRequestFiltersBuilder {
    /// Appends an item to `connector_ids`.
    ///
    /// To override the contents of this collection use [`set_connector_ids`](Self::set_connector_ids).
    ///
    /// <p>List Connectors Request Filters connector IDs.</p>
    pub fn connector_ids(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        let mut v = self.connector_ids.unwrap_or_default();
        v.push(input.into());
        self.connector_ids = ::std::option::Option::Some(v);
        self
    }
    /// <p>List Connectors Request Filters connector IDs.</p>
    pub fn set_connector_ids(mut self, input: ::std::option::Option<::std::vec::Vec<::std::string::String>>) -> Self {
        self.connector_ids = input;
        self
    }
    /// <p>List Connectors Request Filters connector IDs.</p>
    pub fn get_connector_ids(&self) -> &::std::option::Option<::std::vec::Vec<::std::string::String>> {
        &self.connector_ids
    }
    /// Consumes the builder and constructs a [`ListConnectorsRequestFilters`](crate::types::ListConnectorsRequestFilters).
    pub fn build(self) -> crate::types::ListConnectorsRequestFilters {
        crate::types::ListConnectorsRequestFilters {
            connector_ids: self.connector_ids,
        }
    }
}
