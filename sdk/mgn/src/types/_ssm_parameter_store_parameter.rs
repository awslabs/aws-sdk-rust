// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>AWS Systems Manager Parameter Store parameter.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct SsmParameterStoreParameter {
    /// <p>AWS Systems Manager Parameter Store parameter type.</p>
    #[doc(hidden)]
    pub parameter_type: std::option::Option<crate::types::SsmParameterStoreParameterType>,
    /// <p>AWS Systems Manager Parameter Store parameter name.</p>
    #[doc(hidden)]
    pub parameter_name: std::option::Option<std::string::String>,
}
impl SsmParameterStoreParameter {
    /// <p>AWS Systems Manager Parameter Store parameter type.</p>
    pub fn parameter_type(
        &self,
    ) -> std::option::Option<&crate::types::SsmParameterStoreParameterType> {
        self.parameter_type.as_ref()
    }
    /// <p>AWS Systems Manager Parameter Store parameter name.</p>
    pub fn parameter_name(&self) -> std::option::Option<&str> {
        self.parameter_name.as_deref()
    }
}
impl SsmParameterStoreParameter {
    /// Creates a new builder-style object to manufacture [`SsmParameterStoreParameter`](crate::types::SsmParameterStoreParameter).
    pub fn builder() -> crate::types::builders::SsmParameterStoreParameterBuilder {
        crate::types::builders::SsmParameterStoreParameterBuilder::default()
    }
}

/// A builder for [`SsmParameterStoreParameter`](crate::types::SsmParameterStoreParameter).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct SsmParameterStoreParameterBuilder {
    pub(crate) parameter_type: std::option::Option<crate::types::SsmParameterStoreParameterType>,
    pub(crate) parameter_name: std::option::Option<std::string::String>,
}
impl SsmParameterStoreParameterBuilder {
    /// <p>AWS Systems Manager Parameter Store parameter type.</p>
    pub fn parameter_type(mut self, input: crate::types::SsmParameterStoreParameterType) -> Self {
        self.parameter_type = Some(input);
        self
    }
    /// <p>AWS Systems Manager Parameter Store parameter type.</p>
    pub fn set_parameter_type(
        mut self,
        input: std::option::Option<crate::types::SsmParameterStoreParameterType>,
    ) -> Self {
        self.parameter_type = input;
        self
    }
    /// <p>AWS Systems Manager Parameter Store parameter name.</p>
    pub fn parameter_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.parameter_name = Some(input.into());
        self
    }
    /// <p>AWS Systems Manager Parameter Store parameter name.</p>
    pub fn set_parameter_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.parameter_name = input;
        self
    }
    /// Consumes the builder and constructs a [`SsmParameterStoreParameter`](crate::types::SsmParameterStoreParameter).
    pub fn build(self) -> crate::types::SsmParameterStoreParameter {
        crate::types::SsmParameterStoreParameter {
            parameter_type: self.parameter_type,
            parameter_name: self.parameter_name,
        }
    }
}
