// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>AWS Systems Manager Parameter Store parameter.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct SsmParameterStoreParameter {
    /// <p>AWS Systems Manager Parameter Store parameter type.</p>
    pub parameter_type: crate::types::SsmParameterStoreParameterType,
    /// <p>AWS Systems Manager Parameter Store parameter name.</p>
    pub parameter_name: ::std::string::String,
}
impl SsmParameterStoreParameter {
    /// <p>AWS Systems Manager Parameter Store parameter type.</p>
    pub fn parameter_type(&self) -> &crate::types::SsmParameterStoreParameterType {
        &self.parameter_type
    }
    /// <p>AWS Systems Manager Parameter Store parameter name.</p>
    pub fn parameter_name(&self) -> &str {
        use std::ops::Deref;
        self.parameter_name.deref()
    }
}
impl SsmParameterStoreParameter {
    /// Creates a new builder-style object to manufacture [`SsmParameterStoreParameter`](crate::types::SsmParameterStoreParameter).
    pub fn builder() -> crate::types::builders::SsmParameterStoreParameterBuilder {
        crate::types::builders::SsmParameterStoreParameterBuilder::default()
    }
}

/// A builder for [`SsmParameterStoreParameter`](crate::types::SsmParameterStoreParameter).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct SsmParameterStoreParameterBuilder {
    pub(crate) parameter_type: ::std::option::Option<crate::types::SsmParameterStoreParameterType>,
    pub(crate) parameter_name: ::std::option::Option<::std::string::String>,
}
impl SsmParameterStoreParameterBuilder {
    /// <p>AWS Systems Manager Parameter Store parameter type.</p>
    /// This field is required.
    pub fn parameter_type(mut self, input: crate::types::SsmParameterStoreParameterType) -> Self {
        self.parameter_type = ::std::option::Option::Some(input);
        self
    }
    /// <p>AWS Systems Manager Parameter Store parameter type.</p>
    pub fn set_parameter_type(mut self, input: ::std::option::Option<crate::types::SsmParameterStoreParameterType>) -> Self {
        self.parameter_type = input;
        self
    }
    /// <p>AWS Systems Manager Parameter Store parameter type.</p>
    pub fn get_parameter_type(&self) -> &::std::option::Option<crate::types::SsmParameterStoreParameterType> {
        &self.parameter_type
    }
    /// <p>AWS Systems Manager Parameter Store parameter name.</p>
    /// This field is required.
    pub fn parameter_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.parameter_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>AWS Systems Manager Parameter Store parameter name.</p>
    pub fn set_parameter_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.parameter_name = input;
        self
    }
    /// <p>AWS Systems Manager Parameter Store parameter name.</p>
    pub fn get_parameter_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.parameter_name
    }
    /// Consumes the builder and constructs a [`SsmParameterStoreParameter`](crate::types::SsmParameterStoreParameter).
    /// This method will fail if any of the following fields are not set:
    /// - [`parameter_type`](crate::types::builders::SsmParameterStoreParameterBuilder::parameter_type)
    /// - [`parameter_name`](crate::types::builders::SsmParameterStoreParameterBuilder::parameter_name)
    pub fn build(self) -> ::std::result::Result<crate::types::SsmParameterStoreParameter, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::SsmParameterStoreParameter {
            parameter_type: self.parameter_type.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "parameter_type",
                    "parameter_type was not specified but it is required when building SsmParameterStoreParameter",
                )
            })?,
            parameter_name: self.parameter_name.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "parameter_name",
                    "parameter_name was not specified but it is required when building SsmParameterStoreParameter",
                )
            })?,
        })
    }
}
