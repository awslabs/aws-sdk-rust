// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Connector SSM command config.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ConnectorSsmCommandConfig {
    /// <p>Connector SSM command config S3 output enabled.</p>
    pub s3_output_enabled: bool,
    /// <p>Connector SSM command config output S3 bucket name.</p>
    pub output_s3_bucket_name: ::std::option::Option<::std::string::String>,
    /// <p>Connector SSM command config CloudWatch output enabled.</p>
    pub cloud_watch_output_enabled: bool,
    /// <p>Connector SSM command config CloudWatch log group name.</p>
    pub cloud_watch_log_group_name: ::std::option::Option<::std::string::String>,
}
impl ConnectorSsmCommandConfig {
    /// <p>Connector SSM command config S3 output enabled.</p>
    pub fn s3_output_enabled(&self) -> bool {
        self.s3_output_enabled
    }
    /// <p>Connector SSM command config output S3 bucket name.</p>
    pub fn output_s3_bucket_name(&self) -> ::std::option::Option<&str> {
        self.output_s3_bucket_name.as_deref()
    }
    /// <p>Connector SSM command config CloudWatch output enabled.</p>
    pub fn cloud_watch_output_enabled(&self) -> bool {
        self.cloud_watch_output_enabled
    }
    /// <p>Connector SSM command config CloudWatch log group name.</p>
    pub fn cloud_watch_log_group_name(&self) -> ::std::option::Option<&str> {
        self.cloud_watch_log_group_name.as_deref()
    }
}
impl ConnectorSsmCommandConfig {
    /// Creates a new builder-style object to manufacture [`ConnectorSsmCommandConfig`](crate::types::ConnectorSsmCommandConfig).
    pub fn builder() -> crate::types::builders::ConnectorSsmCommandConfigBuilder {
        crate::types::builders::ConnectorSsmCommandConfigBuilder::default()
    }
}

/// A builder for [`ConnectorSsmCommandConfig`](crate::types::ConnectorSsmCommandConfig).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ConnectorSsmCommandConfigBuilder {
    pub(crate) s3_output_enabled: ::std::option::Option<bool>,
    pub(crate) output_s3_bucket_name: ::std::option::Option<::std::string::String>,
    pub(crate) cloud_watch_output_enabled: ::std::option::Option<bool>,
    pub(crate) cloud_watch_log_group_name: ::std::option::Option<::std::string::String>,
}
impl ConnectorSsmCommandConfigBuilder {
    /// <p>Connector SSM command config S3 output enabled.</p>
    /// This field is required.
    pub fn s3_output_enabled(mut self, input: bool) -> Self {
        self.s3_output_enabled = ::std::option::Option::Some(input);
        self
    }
    /// <p>Connector SSM command config S3 output enabled.</p>
    pub fn set_s3_output_enabled(mut self, input: ::std::option::Option<bool>) -> Self {
        self.s3_output_enabled = input;
        self
    }
    /// <p>Connector SSM command config S3 output enabled.</p>
    pub fn get_s3_output_enabled(&self) -> &::std::option::Option<bool> {
        &self.s3_output_enabled
    }
    /// <p>Connector SSM command config output S3 bucket name.</p>
    pub fn output_s3_bucket_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.output_s3_bucket_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Connector SSM command config output S3 bucket name.</p>
    pub fn set_output_s3_bucket_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.output_s3_bucket_name = input;
        self
    }
    /// <p>Connector SSM command config output S3 bucket name.</p>
    pub fn get_output_s3_bucket_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.output_s3_bucket_name
    }
    /// <p>Connector SSM command config CloudWatch output enabled.</p>
    /// This field is required.
    pub fn cloud_watch_output_enabled(mut self, input: bool) -> Self {
        self.cloud_watch_output_enabled = ::std::option::Option::Some(input);
        self
    }
    /// <p>Connector SSM command config CloudWatch output enabled.</p>
    pub fn set_cloud_watch_output_enabled(mut self, input: ::std::option::Option<bool>) -> Self {
        self.cloud_watch_output_enabled = input;
        self
    }
    /// <p>Connector SSM command config CloudWatch output enabled.</p>
    pub fn get_cloud_watch_output_enabled(&self) -> &::std::option::Option<bool> {
        &self.cloud_watch_output_enabled
    }
    /// <p>Connector SSM command config CloudWatch log group name.</p>
    pub fn cloud_watch_log_group_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.cloud_watch_log_group_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Connector SSM command config CloudWatch log group name.</p>
    pub fn set_cloud_watch_log_group_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.cloud_watch_log_group_name = input;
        self
    }
    /// <p>Connector SSM command config CloudWatch log group name.</p>
    pub fn get_cloud_watch_log_group_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.cloud_watch_log_group_name
    }
    /// Consumes the builder and constructs a [`ConnectorSsmCommandConfig`](crate::types::ConnectorSsmCommandConfig).
    /// This method will fail if any of the following fields are not set:
    /// - [`s3_output_enabled`](crate::types::builders::ConnectorSsmCommandConfigBuilder::s3_output_enabled)
    /// - [`cloud_watch_output_enabled`](crate::types::builders::ConnectorSsmCommandConfigBuilder::cloud_watch_output_enabled)
    pub fn build(self) -> ::std::result::Result<crate::types::ConnectorSsmCommandConfig, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::ConnectorSsmCommandConfig {
            s3_output_enabled: self.s3_output_enabled.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "s3_output_enabled",
                    "s3_output_enabled was not specified but it is required when building ConnectorSsmCommandConfig",
                )
            })?,
            output_s3_bucket_name: self.output_s3_bucket_name,
            cloud_watch_output_enabled: self.cloud_watch_output_enabled.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "cloud_watch_output_enabled",
                    "cloud_watch_output_enabled was not specified but it is required when building ConnectorSsmCommandConfig",
                )
            })?,
            cloud_watch_log_group_name: self.cloud_watch_log_group_name,
        })
    }
}
