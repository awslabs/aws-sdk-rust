// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct UpdateSourceServerReplicationTypeInput {
    /// <p>ID of source server on which to update replication type.</p>
    #[doc(hidden)]
    pub source_server_id: std::option::Option<std::string::String>,
    /// <p>Replication type to which to update source server.</p>
    #[doc(hidden)]
    pub replication_type: std::option::Option<crate::types::ReplicationType>,
}
impl UpdateSourceServerReplicationTypeInput {
    /// <p>ID of source server on which to update replication type.</p>
    pub fn source_server_id(&self) -> std::option::Option<&str> {
        self.source_server_id.as_deref()
    }
    /// <p>Replication type to which to update source server.</p>
    pub fn replication_type(&self) -> std::option::Option<&crate::types::ReplicationType> {
        self.replication_type.as_ref()
    }
}
impl UpdateSourceServerReplicationTypeInput {
    /// Creates a new builder-style object to manufacture [`UpdateSourceServerReplicationTypeInput`](crate::operation::update_source_server_replication_type::UpdateSourceServerReplicationTypeInput).
    pub fn builder() -> crate::operation::update_source_server_replication_type::builders::UpdateSourceServerReplicationTypeInputBuilder{
        crate::operation::update_source_server_replication_type::builders::UpdateSourceServerReplicationTypeInputBuilder::default()
    }
}

/// A builder for [`UpdateSourceServerReplicationTypeInput`](crate::operation::update_source_server_replication_type::UpdateSourceServerReplicationTypeInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct UpdateSourceServerReplicationTypeInputBuilder {
    pub(crate) source_server_id: std::option::Option<std::string::String>,
    pub(crate) replication_type: std::option::Option<crate::types::ReplicationType>,
}
impl UpdateSourceServerReplicationTypeInputBuilder {
    /// <p>ID of source server on which to update replication type.</p>
    pub fn source_server_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.source_server_id = Some(input.into());
        self
    }
    /// <p>ID of source server on which to update replication type.</p>
    pub fn set_source_server_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.source_server_id = input;
        self
    }
    /// <p>Replication type to which to update source server.</p>
    pub fn replication_type(mut self, input: crate::types::ReplicationType) -> Self {
        self.replication_type = Some(input);
        self
    }
    /// <p>Replication type to which to update source server.</p>
    pub fn set_replication_type(
        mut self,
        input: std::option::Option<crate::types::ReplicationType>,
    ) -> Self {
        self.replication_type = input;
        self
    }
    /// Consumes the builder and constructs a [`UpdateSourceServerReplicationTypeInput`](crate::operation::update_source_server_replication_type::UpdateSourceServerReplicationTypeInput).
    pub fn build(self) -> Result<crate::operation::update_source_server_replication_type::UpdateSourceServerReplicationTypeInput, aws_smithy_http::operation::error::BuildError>{
        Ok(
            crate::operation::update_source_server_replication_type::UpdateSourceServerReplicationTypeInput {
                source_server_id: self.source_server_id
                ,
                replication_type: self.replication_type
                ,
            }
        )
    }
}
