// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AssociateSourceServersInput {
    /// <p>Application ID.</p>
    #[doc(hidden)]
    pub application_id: std::option::Option<std::string::String>,
    /// <p>Source server IDs list.</p>
    #[doc(hidden)]
    pub source_server_i_ds: std::option::Option<std::vec::Vec<std::string::String>>,
}
impl AssociateSourceServersInput {
    /// <p>Application ID.</p>
    pub fn application_id(&self) -> std::option::Option<&str> {
        self.application_id.as_deref()
    }
    /// <p>Source server IDs list.</p>
    pub fn source_server_i_ds(&self) -> std::option::Option<&[std::string::String]> {
        self.source_server_i_ds.as_deref()
    }
}
impl AssociateSourceServersInput {
    /// Creates a new builder-style object to manufacture [`AssociateSourceServersInput`](crate::operation::associate_source_servers::AssociateSourceServersInput).
    pub fn builder(
    ) -> crate::operation::associate_source_servers::builders::AssociateSourceServersInputBuilder
    {
        crate::operation::associate_source_servers::builders::AssociateSourceServersInputBuilder::default()
    }
}

/// A builder for [`AssociateSourceServersInput`](crate::operation::associate_source_servers::AssociateSourceServersInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AssociateSourceServersInputBuilder {
    pub(crate) application_id: std::option::Option<std::string::String>,
    pub(crate) source_server_i_ds: std::option::Option<std::vec::Vec<std::string::String>>,
}
impl AssociateSourceServersInputBuilder {
    /// <p>Application ID.</p>
    pub fn application_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.application_id = Some(input.into());
        self
    }
    /// <p>Application ID.</p>
    pub fn set_application_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.application_id = input;
        self
    }
    /// Appends an item to `source_server_i_ds`.
    ///
    /// To override the contents of this collection use [`set_source_server_i_ds`](Self::set_source_server_i_ds).
    ///
    /// <p>Source server IDs list.</p>
    pub fn source_server_i_ds(mut self, input: impl Into<std::string::String>) -> Self {
        let mut v = self.source_server_i_ds.unwrap_or_default();
        v.push(input.into());
        self.source_server_i_ds = Some(v);
        self
    }
    /// <p>Source server IDs list.</p>
    pub fn set_source_server_i_ds(
        mut self,
        input: std::option::Option<std::vec::Vec<std::string::String>>,
    ) -> Self {
        self.source_server_i_ds = input;
        self
    }
    /// Consumes the builder and constructs a [`AssociateSourceServersInput`](crate::operation::associate_source_servers::AssociateSourceServersInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::associate_source_servers::AssociateSourceServersInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::associate_source_servers::AssociateSourceServersInput {
                application_id: self.application_id,
                source_server_i_ds: self.source_server_i_ds,
            },
        )
    }
}
