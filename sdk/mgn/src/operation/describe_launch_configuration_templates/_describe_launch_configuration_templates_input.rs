// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DescribeLaunchConfigurationTemplatesInput {
    /// <p>Request to filter Launch Configuration Templates list by Launch Configuration Template ID.</p>
    #[doc(hidden)]
    pub launch_configuration_template_i_ds: std::option::Option<std::vec::Vec<std::string::String>>,
    /// <p>Maximum results to be returned in DescribeLaunchConfigurationTemplates.</p>
    #[doc(hidden)]
    pub max_results: i32,
    /// <p>Next pagination token returned from DescribeLaunchConfigurationTemplates.</p>
    #[doc(hidden)]
    pub next_token: std::option::Option<std::string::String>,
}
impl DescribeLaunchConfigurationTemplatesInput {
    /// <p>Request to filter Launch Configuration Templates list by Launch Configuration Template ID.</p>
    pub fn launch_configuration_template_i_ds(
        &self,
    ) -> std::option::Option<&[std::string::String]> {
        self.launch_configuration_template_i_ds.as_deref()
    }
    /// <p>Maximum results to be returned in DescribeLaunchConfigurationTemplates.</p>
    pub fn max_results(&self) -> i32 {
        self.max_results
    }
    /// <p>Next pagination token returned from DescribeLaunchConfigurationTemplates.</p>
    pub fn next_token(&self) -> std::option::Option<&str> {
        self.next_token.as_deref()
    }
}
impl DescribeLaunchConfigurationTemplatesInput {
    /// Creates a new builder-style object to manufacture [`DescribeLaunchConfigurationTemplatesInput`](crate::operation::describe_launch_configuration_templates::DescribeLaunchConfigurationTemplatesInput).
    pub fn builder() -> crate::operation::describe_launch_configuration_templates::builders::DescribeLaunchConfigurationTemplatesInputBuilder{
        crate::operation::describe_launch_configuration_templates::builders::DescribeLaunchConfigurationTemplatesInputBuilder::default()
    }
}

/// A builder for [`DescribeLaunchConfigurationTemplatesInput`](crate::operation::describe_launch_configuration_templates::DescribeLaunchConfigurationTemplatesInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DescribeLaunchConfigurationTemplatesInputBuilder {
    pub(crate) launch_configuration_template_i_ds:
        std::option::Option<std::vec::Vec<std::string::String>>,
    pub(crate) max_results: std::option::Option<i32>,
    pub(crate) next_token: std::option::Option<std::string::String>,
}
impl DescribeLaunchConfigurationTemplatesInputBuilder {
    /// Appends an item to `launch_configuration_template_i_ds`.
    ///
    /// To override the contents of this collection use [`set_launch_configuration_template_i_ds`](Self::set_launch_configuration_template_i_ds).
    ///
    /// <p>Request to filter Launch Configuration Templates list by Launch Configuration Template ID.</p>
    pub fn launch_configuration_template_i_ds(
        mut self,
        input: impl Into<std::string::String>,
    ) -> Self {
        let mut v = self.launch_configuration_template_i_ds.unwrap_or_default();
        v.push(input.into());
        self.launch_configuration_template_i_ds = Some(v);
        self
    }
    /// <p>Request to filter Launch Configuration Templates list by Launch Configuration Template ID.</p>
    pub fn set_launch_configuration_template_i_ds(
        mut self,
        input: std::option::Option<std::vec::Vec<std::string::String>>,
    ) -> Self {
        self.launch_configuration_template_i_ds = input;
        self
    }
    /// <p>Maximum results to be returned in DescribeLaunchConfigurationTemplates.</p>
    pub fn max_results(mut self, input: i32) -> Self {
        self.max_results = Some(input);
        self
    }
    /// <p>Maximum results to be returned in DescribeLaunchConfigurationTemplates.</p>
    pub fn set_max_results(mut self, input: std::option::Option<i32>) -> Self {
        self.max_results = input;
        self
    }
    /// <p>Next pagination token returned from DescribeLaunchConfigurationTemplates.</p>
    pub fn next_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.next_token = Some(input.into());
        self
    }
    /// <p>Next pagination token returned from DescribeLaunchConfigurationTemplates.</p>
    pub fn set_next_token(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// Consumes the builder and constructs a [`DescribeLaunchConfigurationTemplatesInput`](crate::operation::describe_launch_configuration_templates::DescribeLaunchConfigurationTemplatesInput).
    pub fn build(self) -> Result<crate::operation::describe_launch_configuration_templates::DescribeLaunchConfigurationTemplatesInput, aws_smithy_http::operation::error::BuildError>{
        Ok(
            crate::operation::describe_launch_configuration_templates::DescribeLaunchConfigurationTemplatesInput {
                launch_configuration_template_i_ds: self.launch_configuration_template_i_ds
                ,
                max_results: self.max_results
                    .unwrap_or_default()
                ,
                next_token: self.next_token
                ,
            }
        )
    }
}
