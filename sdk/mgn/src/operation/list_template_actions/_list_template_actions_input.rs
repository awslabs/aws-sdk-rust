// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ListTemplateActionsInput {
    /// <p>Launch configuration template ID.</p>
    #[doc(hidden)]
    pub launch_configuration_template_id: std::option::Option<std::string::String>,
    /// <p>Filters to apply when listing template post migration custom actions.</p>
    #[doc(hidden)]
    pub filters: std::option::Option<crate::types::TemplateActionsRequestFilters>,
    /// <p>Maximum amount of items to return when listing template post migration custom actions.</p>
    #[doc(hidden)]
    pub max_results: i32,
    /// <p>Next token to use when listing template post migration custom actions.</p>
    #[doc(hidden)]
    pub next_token: std::option::Option<std::string::String>,
}
impl ListTemplateActionsInput {
    /// <p>Launch configuration template ID.</p>
    pub fn launch_configuration_template_id(&self) -> std::option::Option<&str> {
        self.launch_configuration_template_id.as_deref()
    }
    /// <p>Filters to apply when listing template post migration custom actions.</p>
    pub fn filters(&self) -> std::option::Option<&crate::types::TemplateActionsRequestFilters> {
        self.filters.as_ref()
    }
    /// <p>Maximum amount of items to return when listing template post migration custom actions.</p>
    pub fn max_results(&self) -> i32 {
        self.max_results
    }
    /// <p>Next token to use when listing template post migration custom actions.</p>
    pub fn next_token(&self) -> std::option::Option<&str> {
        self.next_token.as_deref()
    }
}
impl ListTemplateActionsInput {
    /// Creates a new builder-style object to manufacture [`ListTemplateActionsInput`](crate::operation::list_template_actions::ListTemplateActionsInput).
    pub fn builder(
    ) -> crate::operation::list_template_actions::builders::ListTemplateActionsInputBuilder {
        crate::operation::list_template_actions::builders::ListTemplateActionsInputBuilder::default(
        )
    }
}

/// A builder for [`ListTemplateActionsInput`](crate::operation::list_template_actions::ListTemplateActionsInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ListTemplateActionsInputBuilder {
    pub(crate) launch_configuration_template_id: std::option::Option<std::string::String>,
    pub(crate) filters: std::option::Option<crate::types::TemplateActionsRequestFilters>,
    pub(crate) max_results: std::option::Option<i32>,
    pub(crate) next_token: std::option::Option<std::string::String>,
}
impl ListTemplateActionsInputBuilder {
    /// <p>Launch configuration template ID.</p>
    pub fn launch_configuration_template_id(
        mut self,
        input: impl Into<std::string::String>,
    ) -> Self {
        self.launch_configuration_template_id = Some(input.into());
        self
    }
    /// <p>Launch configuration template ID.</p>
    pub fn set_launch_configuration_template_id(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.launch_configuration_template_id = input;
        self
    }
    /// <p>Filters to apply when listing template post migration custom actions.</p>
    pub fn filters(mut self, input: crate::types::TemplateActionsRequestFilters) -> Self {
        self.filters = Some(input);
        self
    }
    /// <p>Filters to apply when listing template post migration custom actions.</p>
    pub fn set_filters(
        mut self,
        input: std::option::Option<crate::types::TemplateActionsRequestFilters>,
    ) -> Self {
        self.filters = input;
        self
    }
    /// <p>Maximum amount of items to return when listing template post migration custom actions.</p>
    pub fn max_results(mut self, input: i32) -> Self {
        self.max_results = Some(input);
        self
    }
    /// <p>Maximum amount of items to return when listing template post migration custom actions.</p>
    pub fn set_max_results(mut self, input: std::option::Option<i32>) -> Self {
        self.max_results = input;
        self
    }
    /// <p>Next token to use when listing template post migration custom actions.</p>
    pub fn next_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.next_token = Some(input.into());
        self
    }
    /// <p>Next token to use when listing template post migration custom actions.</p>
    pub fn set_next_token(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// Consumes the builder and constructs a [`ListTemplateActionsInput`](crate::operation::list_template_actions::ListTemplateActionsInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::list_template_actions::ListTemplateActionsInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::list_template_actions::ListTemplateActionsInput {
                launch_configuration_template_id: self.launch_configuration_template_id,
                filters: self.filters,
                max_results: self.max_results.unwrap_or_default(),
                next_token: self.next_token,
            },
        )
    }
}
