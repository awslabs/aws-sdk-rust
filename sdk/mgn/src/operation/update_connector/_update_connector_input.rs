// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct UpdateConnectorInput {
    /// <p>Update Connector request connector ID.</p>
    pub connector_id: ::std::option::Option<::std::string::String>,
    /// <p>Update Connector request name.</p>
    pub name: ::std::option::Option<::std::string::String>,
    /// <p>Update Connector request SSM command config.</p>
    pub ssm_command_config: ::std::option::Option<crate::types::ConnectorSsmCommandConfig>,
}
impl UpdateConnectorInput {
    /// <p>Update Connector request connector ID.</p>
    pub fn connector_id(&self) -> ::std::option::Option<&str> {
        self.connector_id.as_deref()
    }
    /// <p>Update Connector request name.</p>
    pub fn name(&self) -> ::std::option::Option<&str> {
        self.name.as_deref()
    }
    /// <p>Update Connector request SSM command config.</p>
    pub fn ssm_command_config(&self) -> ::std::option::Option<&crate::types::ConnectorSsmCommandConfig> {
        self.ssm_command_config.as_ref()
    }
}
impl UpdateConnectorInput {
    /// Creates a new builder-style object to manufacture [`UpdateConnectorInput`](crate::operation::update_connector::UpdateConnectorInput).
    pub fn builder() -> crate::operation::update_connector::builders::UpdateConnectorInputBuilder {
        crate::operation::update_connector::builders::UpdateConnectorInputBuilder::default()
    }
}

/// A builder for [`UpdateConnectorInput`](crate::operation::update_connector::UpdateConnectorInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct UpdateConnectorInputBuilder {
    pub(crate) connector_id: ::std::option::Option<::std::string::String>,
    pub(crate) name: ::std::option::Option<::std::string::String>,
    pub(crate) ssm_command_config: ::std::option::Option<crate::types::ConnectorSsmCommandConfig>,
}
impl UpdateConnectorInputBuilder {
    /// <p>Update Connector request connector ID.</p>
    /// This field is required.
    pub fn connector_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.connector_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Update Connector request connector ID.</p>
    pub fn set_connector_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.connector_id = input;
        self
    }
    /// <p>Update Connector request connector ID.</p>
    pub fn get_connector_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.connector_id
    }
    /// <p>Update Connector request name.</p>
    pub fn name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Update Connector request name.</p>
    pub fn set_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>Update Connector request name.</p>
    pub fn get_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.name
    }
    /// <p>Update Connector request SSM command config.</p>
    pub fn ssm_command_config(mut self, input: crate::types::ConnectorSsmCommandConfig) -> Self {
        self.ssm_command_config = ::std::option::Option::Some(input);
        self
    }
    /// <p>Update Connector request SSM command config.</p>
    pub fn set_ssm_command_config(mut self, input: ::std::option::Option<crate::types::ConnectorSsmCommandConfig>) -> Self {
        self.ssm_command_config = input;
        self
    }
    /// <p>Update Connector request SSM command config.</p>
    pub fn get_ssm_command_config(&self) -> &::std::option::Option<crate::types::ConnectorSsmCommandConfig> {
        &self.ssm_command_config
    }
    /// Consumes the builder and constructs a [`UpdateConnectorInput`](crate::operation::update_connector::UpdateConnectorInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::update_connector::UpdateConnectorInput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::operation::update_connector::UpdateConnectorInput {
            connector_id: self.connector_id,
            name: self.name,
            ssm_command_config: self.ssm_command_config,
        })
    }
}
