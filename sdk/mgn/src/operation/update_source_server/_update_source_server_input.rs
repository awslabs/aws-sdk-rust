// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct UpdateSourceServerInput {
    /// <p>Update Source Server request account ID.</p>
    pub account_id: ::std::option::Option<::std::string::String>,
    /// <p>Update Source Server request source server ID.</p>
    pub source_server_id: ::std::option::Option<::std::string::String>,
    /// <p>Update Source Server request connector action.</p>
    pub connector_action: ::std::option::Option<crate::types::SourceServerConnectorAction>,
}
impl UpdateSourceServerInput {
    /// <p>Update Source Server request account ID.</p>
    pub fn account_id(&self) -> ::std::option::Option<&str> {
        self.account_id.as_deref()
    }
    /// <p>Update Source Server request source server ID.</p>
    pub fn source_server_id(&self) -> ::std::option::Option<&str> {
        self.source_server_id.as_deref()
    }
    /// <p>Update Source Server request connector action.</p>
    pub fn connector_action(&self) -> ::std::option::Option<&crate::types::SourceServerConnectorAction> {
        self.connector_action.as_ref()
    }
}
impl UpdateSourceServerInput {
    /// Creates a new builder-style object to manufacture [`UpdateSourceServerInput`](crate::operation::update_source_server::UpdateSourceServerInput).
    pub fn builder() -> crate::operation::update_source_server::builders::UpdateSourceServerInputBuilder {
        crate::operation::update_source_server::builders::UpdateSourceServerInputBuilder::default()
    }
}

/// A builder for [`UpdateSourceServerInput`](crate::operation::update_source_server::UpdateSourceServerInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct UpdateSourceServerInputBuilder {
    pub(crate) account_id: ::std::option::Option<::std::string::String>,
    pub(crate) source_server_id: ::std::option::Option<::std::string::String>,
    pub(crate) connector_action: ::std::option::Option<crate::types::SourceServerConnectorAction>,
}
impl UpdateSourceServerInputBuilder {
    /// <p>Update Source Server request account ID.</p>
    pub fn account_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.account_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Update Source Server request account ID.</p>
    pub fn set_account_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.account_id = input;
        self
    }
    /// <p>Update Source Server request account ID.</p>
    pub fn get_account_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.account_id
    }
    /// <p>Update Source Server request source server ID.</p>
    /// This field is required.
    pub fn source_server_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.source_server_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Update Source Server request source server ID.</p>
    pub fn set_source_server_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.source_server_id = input;
        self
    }
    /// <p>Update Source Server request source server ID.</p>
    pub fn get_source_server_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.source_server_id
    }
    /// <p>Update Source Server request connector action.</p>
    pub fn connector_action(mut self, input: crate::types::SourceServerConnectorAction) -> Self {
        self.connector_action = ::std::option::Option::Some(input);
        self
    }
    /// <p>Update Source Server request connector action.</p>
    pub fn set_connector_action(mut self, input: ::std::option::Option<crate::types::SourceServerConnectorAction>) -> Self {
        self.connector_action = input;
        self
    }
    /// <p>Update Source Server request connector action.</p>
    pub fn get_connector_action(&self) -> &::std::option::Option<crate::types::SourceServerConnectorAction> {
        &self.connector_action
    }
    /// Consumes the builder and constructs a [`UpdateSourceServerInput`](crate::operation::update_source_server::UpdateSourceServerInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::update_source_server::UpdateSourceServerInput, ::aws_smithy_types::error::operation::BuildError>
    {
        ::std::result::Result::Ok(crate::operation::update_source_server::UpdateSourceServerInput {
            account_id: self.account_id,
            source_server_id: self.source_server_id,
            connector_action: self.connector_action,
        })
    }
}
