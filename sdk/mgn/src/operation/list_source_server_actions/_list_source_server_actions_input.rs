// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ListSourceServerActionsInput {
    /// <p>Source server ID.</p>
    #[doc(hidden)]
    pub source_server_id: std::option::Option<std::string::String>,
    /// <p>Filters to apply when listing source server post migration custom actions.</p>
    #[doc(hidden)]
    pub filters: std::option::Option<crate::types::SourceServerActionsRequestFilters>,
    /// <p>Maximum amount of items to return when listing source server post migration custom actions.</p>
    #[doc(hidden)]
    pub max_results: i32,
    /// <p>Next token to use when listing source server post migration custom actions.</p>
    #[doc(hidden)]
    pub next_token: std::option::Option<std::string::String>,
}
impl ListSourceServerActionsInput {
    /// <p>Source server ID.</p>
    pub fn source_server_id(&self) -> std::option::Option<&str> {
        self.source_server_id.as_deref()
    }
    /// <p>Filters to apply when listing source server post migration custom actions.</p>
    pub fn filters(&self) -> std::option::Option<&crate::types::SourceServerActionsRequestFilters> {
        self.filters.as_ref()
    }
    /// <p>Maximum amount of items to return when listing source server post migration custom actions.</p>
    pub fn max_results(&self) -> i32 {
        self.max_results
    }
    /// <p>Next token to use when listing source server post migration custom actions.</p>
    pub fn next_token(&self) -> std::option::Option<&str> {
        self.next_token.as_deref()
    }
}
impl ListSourceServerActionsInput {
    /// Creates a new builder-style object to manufacture [`ListSourceServerActionsInput`](crate::operation::list_source_server_actions::ListSourceServerActionsInput).
    pub fn builder(
    ) -> crate::operation::list_source_server_actions::builders::ListSourceServerActionsInputBuilder
    {
        crate::operation::list_source_server_actions::builders::ListSourceServerActionsInputBuilder::default()
    }
}

/// A builder for [`ListSourceServerActionsInput`](crate::operation::list_source_server_actions::ListSourceServerActionsInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ListSourceServerActionsInputBuilder {
    pub(crate) source_server_id: std::option::Option<std::string::String>,
    pub(crate) filters: std::option::Option<crate::types::SourceServerActionsRequestFilters>,
    pub(crate) max_results: std::option::Option<i32>,
    pub(crate) next_token: std::option::Option<std::string::String>,
}
impl ListSourceServerActionsInputBuilder {
    /// <p>Source server ID.</p>
    pub fn source_server_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.source_server_id = Some(input.into());
        self
    }
    /// <p>Source server ID.</p>
    pub fn set_source_server_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.source_server_id = input;
        self
    }
    /// <p>Filters to apply when listing source server post migration custom actions.</p>
    pub fn filters(mut self, input: crate::types::SourceServerActionsRequestFilters) -> Self {
        self.filters = Some(input);
        self
    }
    /// <p>Filters to apply when listing source server post migration custom actions.</p>
    pub fn set_filters(
        mut self,
        input: std::option::Option<crate::types::SourceServerActionsRequestFilters>,
    ) -> Self {
        self.filters = input;
        self
    }
    /// <p>Maximum amount of items to return when listing source server post migration custom actions.</p>
    pub fn max_results(mut self, input: i32) -> Self {
        self.max_results = Some(input);
        self
    }
    /// <p>Maximum amount of items to return when listing source server post migration custom actions.</p>
    pub fn set_max_results(mut self, input: std::option::Option<i32>) -> Self {
        self.max_results = input;
        self
    }
    /// <p>Next token to use when listing source server post migration custom actions.</p>
    pub fn next_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.next_token = Some(input.into());
        self
    }
    /// <p>Next token to use when listing source server post migration custom actions.</p>
    pub fn set_next_token(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// Consumes the builder and constructs a [`ListSourceServerActionsInput`](crate::operation::list_source_server_actions::ListSourceServerActionsInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::list_source_server_actions::ListSourceServerActionsInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::list_source_server_actions::ListSourceServerActionsInput {
                source_server_id: self.source_server_id,
                filters: self.filters,
                max_results: self.max_results.unwrap_or_default(),
                next_token: self.next_token,
            },
        )
    }
}
