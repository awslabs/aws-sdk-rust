// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateLaunchConfigurationTemplate`](crate::operation::update_launch_configuration_template::builders::UpdateLaunchConfigurationTemplateFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`launch_configuration_template_id(impl Into<String>)`](crate::operation::update_launch_configuration_template::builders::UpdateLaunchConfigurationTemplateFluentBuilder::launch_configuration_template_id) / [`set_launch_configuration_template_id(Option<String>)`](crate::operation::update_launch_configuration_template::builders::UpdateLaunchConfigurationTemplateFluentBuilder::set_launch_configuration_template_id): <p>Launch Configuration Template ID.</p>
    ///   - [`post_launch_actions(PostLaunchActions)`](crate::operation::update_launch_configuration_template::builders::UpdateLaunchConfigurationTemplateFluentBuilder::post_launch_actions) / [`set_post_launch_actions(Option<PostLaunchActions>)`](crate::operation::update_launch_configuration_template::builders::UpdateLaunchConfigurationTemplateFluentBuilder::set_post_launch_actions): <p>Post Launch Action to execute on the Test or Cutover instance.</p>
    ///   - [`enable_map_auto_tagging(bool)`](crate::operation::update_launch_configuration_template::builders::UpdateLaunchConfigurationTemplateFluentBuilder::enable_map_auto_tagging) / [`set_enable_map_auto_tagging(Option<bool>)`](crate::operation::update_launch_configuration_template::builders::UpdateLaunchConfigurationTemplateFluentBuilder::set_enable_map_auto_tagging): <p>Enable map auto tagging.</p>
    ///   - [`map_auto_tagging_mpe_id(impl Into<String>)`](crate::operation::update_launch_configuration_template::builders::UpdateLaunchConfigurationTemplateFluentBuilder::map_auto_tagging_mpe_id) / [`set_map_auto_tagging_mpe_id(Option<String>)`](crate::operation::update_launch_configuration_template::builders::UpdateLaunchConfigurationTemplateFluentBuilder::set_map_auto_tagging_mpe_id): <p>Launch configuration template map auto tagging MPE ID.</p>
    ///   - [`launch_disposition(LaunchDisposition)`](crate::operation::update_launch_configuration_template::builders::UpdateLaunchConfigurationTemplateFluentBuilder::launch_disposition) / [`set_launch_disposition(Option<LaunchDisposition>)`](crate::operation::update_launch_configuration_template::builders::UpdateLaunchConfigurationTemplateFluentBuilder::set_launch_disposition): <p>Launch disposition.</p>
    ///   - [`target_instance_type_right_sizing_method(TargetInstanceTypeRightSizingMethod)`](crate::operation::update_launch_configuration_template::builders::UpdateLaunchConfigurationTemplateFluentBuilder::target_instance_type_right_sizing_method) / [`set_target_instance_type_right_sizing_method(Option<TargetInstanceTypeRightSizingMethod>)`](crate::operation::update_launch_configuration_template::builders::UpdateLaunchConfigurationTemplateFluentBuilder::set_target_instance_type_right_sizing_method): <p>Target instance type right-sizing method.</p>
    ///   - [`copy_private_ip(bool)`](crate::operation::update_launch_configuration_template::builders::UpdateLaunchConfigurationTemplateFluentBuilder::copy_private_ip) / [`set_copy_private_ip(Option<bool>)`](crate::operation::update_launch_configuration_template::builders::UpdateLaunchConfigurationTemplateFluentBuilder::set_copy_private_ip): <p>Copy private Ip.</p>
    ///   - [`associate_public_ip_address(bool)`](crate::operation::update_launch_configuration_template::builders::UpdateLaunchConfigurationTemplateFluentBuilder::associate_public_ip_address) / [`set_associate_public_ip_address(Option<bool>)`](crate::operation::update_launch_configuration_template::builders::UpdateLaunchConfigurationTemplateFluentBuilder::set_associate_public_ip_address): <p>Associate public Ip address.</p>
    ///   - [`copy_tags(bool)`](crate::operation::update_launch_configuration_template::builders::UpdateLaunchConfigurationTemplateFluentBuilder::copy_tags) / [`set_copy_tags(Option<bool>)`](crate::operation::update_launch_configuration_template::builders::UpdateLaunchConfigurationTemplateFluentBuilder::set_copy_tags): <p>Copy tags.</p>
    ///   - [`licensing(Licensing)`](crate::operation::update_launch_configuration_template::builders::UpdateLaunchConfigurationTemplateFluentBuilder::licensing) / [`set_licensing(Option<Licensing>)`](crate::operation::update_launch_configuration_template::builders::UpdateLaunchConfigurationTemplateFluentBuilder::set_licensing): <p>Configure Licensing.</p>
    ///   - [`boot_mode(BootMode)`](crate::operation::update_launch_configuration_template::builders::UpdateLaunchConfigurationTemplateFluentBuilder::boot_mode) / [`set_boot_mode(Option<BootMode>)`](crate::operation::update_launch_configuration_template::builders::UpdateLaunchConfigurationTemplateFluentBuilder::set_boot_mode): <p>Launch configuration template boot mode.</p>
    ///   - [`small_volume_max_size(i64)`](crate::operation::update_launch_configuration_template::builders::UpdateLaunchConfigurationTemplateFluentBuilder::small_volume_max_size) / [`set_small_volume_max_size(i64)`](crate::operation::update_launch_configuration_template::builders::UpdateLaunchConfigurationTemplateFluentBuilder::set_small_volume_max_size): <p>Small volume maximum size.</p>
    ///   - [`small_volume_conf(LaunchTemplateDiskConf)`](crate::operation::update_launch_configuration_template::builders::UpdateLaunchConfigurationTemplateFluentBuilder::small_volume_conf) / [`set_small_volume_conf(Option<LaunchTemplateDiskConf>)`](crate::operation::update_launch_configuration_template::builders::UpdateLaunchConfigurationTemplateFluentBuilder::set_small_volume_conf): <p>Small volume config.</p>
    ///   - [`large_volume_conf(LaunchTemplateDiskConf)`](crate::operation::update_launch_configuration_template::builders::UpdateLaunchConfigurationTemplateFluentBuilder::large_volume_conf) / [`set_large_volume_conf(Option<LaunchTemplateDiskConf>)`](crate::operation::update_launch_configuration_template::builders::UpdateLaunchConfigurationTemplateFluentBuilder::set_large_volume_conf): <p>Large volume config.</p>
    /// - On success, responds with [`UpdateLaunchConfigurationTemplateOutput`](crate::operation::update_launch_configuration_template::UpdateLaunchConfigurationTemplateOutput) with field(s):
    ///   - [`launch_configuration_template_id(Option<String>)`](crate::operation::update_launch_configuration_template::UpdateLaunchConfigurationTemplateOutput::launch_configuration_template_id): <p>ID of the Launch Configuration Template.</p>
    ///   - [`arn(Option<String>)`](crate::operation::update_launch_configuration_template::UpdateLaunchConfigurationTemplateOutput::arn): <p>ARN of the Launch Configuration Template.</p>
    ///   - [`post_launch_actions(Option<PostLaunchActions>)`](crate::operation::update_launch_configuration_template::UpdateLaunchConfigurationTemplateOutput::post_launch_actions): <p>Post Launch Actions of the Launch Configuration Template.</p>
    ///   - [`enable_map_auto_tagging(Option<bool>)`](crate::operation::update_launch_configuration_template::UpdateLaunchConfigurationTemplateOutput::enable_map_auto_tagging): <p>Enable map auto tagging.</p>
    ///   - [`map_auto_tagging_mpe_id(Option<String>)`](crate::operation::update_launch_configuration_template::UpdateLaunchConfigurationTemplateOutput::map_auto_tagging_mpe_id): <p>Launch configuration template map auto tagging MPE ID.</p>
    ///   - [`tags(Option<HashMap<String, String>>)`](crate::operation::update_launch_configuration_template::UpdateLaunchConfigurationTemplateOutput::tags): <p>Tags of the Launch Configuration Template.</p>
    ///   - [`ec2_launch_template_id(Option<String>)`](crate::operation::update_launch_configuration_template::UpdateLaunchConfigurationTemplateOutput::ec2_launch_template_id): <p>EC2 launch template ID.</p>
    ///   - [`launch_disposition(Option<LaunchDisposition>)`](crate::operation::update_launch_configuration_template::UpdateLaunchConfigurationTemplateOutput::launch_disposition): <p>Launch disposition.</p>
    ///   - [`target_instance_type_right_sizing_method(Option<TargetInstanceTypeRightSizingMethod>)`](crate::operation::update_launch_configuration_template::UpdateLaunchConfigurationTemplateOutput::target_instance_type_right_sizing_method): <p>Target instance type right-sizing method.</p>
    ///   - [`copy_private_ip(Option<bool>)`](crate::operation::update_launch_configuration_template::UpdateLaunchConfigurationTemplateOutput::copy_private_ip): <p>Copy private Ip.</p>
    ///   - [`associate_public_ip_address(Option<bool>)`](crate::operation::update_launch_configuration_template::UpdateLaunchConfigurationTemplateOutput::associate_public_ip_address): <p>Associate public Ip address.</p>
    ///   - [`copy_tags(Option<bool>)`](crate::operation::update_launch_configuration_template::UpdateLaunchConfigurationTemplateOutput::copy_tags): <p>Copy tags.</p>
    ///   - [`licensing(Option<Licensing>)`](crate::operation::update_launch_configuration_template::UpdateLaunchConfigurationTemplateOutput::licensing): <p>Configure Licensing.</p>
    ///   - [`boot_mode(Option<BootMode>)`](crate::operation::update_launch_configuration_template::UpdateLaunchConfigurationTemplateOutput::boot_mode): <p>Launch configuration template boot mode.</p>
    ///   - [`small_volume_max_size(i64)`](crate::operation::update_launch_configuration_template::UpdateLaunchConfigurationTemplateOutput::small_volume_max_size): <p>Small volume maximum size.</p>
    ///   - [`small_volume_conf(Option<LaunchTemplateDiskConf>)`](crate::operation::update_launch_configuration_template::UpdateLaunchConfigurationTemplateOutput::small_volume_conf): <p>Small volume config.</p>
    ///   - [`large_volume_conf(Option<LaunchTemplateDiskConf>)`](crate::operation::update_launch_configuration_template::UpdateLaunchConfigurationTemplateOutput::large_volume_conf): <p>Large volume config.</p>
    /// - On failure, responds with [`SdkError<UpdateLaunchConfigurationTemplateError>`](crate::operation::update_launch_configuration_template::UpdateLaunchConfigurationTemplateError)
    pub fn update_launch_configuration_template(&self) -> crate::operation::update_launch_configuration_template::builders::UpdateLaunchConfigurationTemplateFluentBuilder{
        crate::operation::update_launch_configuration_template::builders::UpdateLaunchConfigurationTemplateFluentBuilder::new(self.handle.clone())
    }
}
