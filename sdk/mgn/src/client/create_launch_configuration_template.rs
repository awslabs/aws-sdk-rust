// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateLaunchConfigurationTemplate`](crate::operation::create_launch_configuration_template::builders::CreateLaunchConfigurationTemplateFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`post_launch_actions(PostLaunchActions)`](crate::operation::create_launch_configuration_template::builders::CreateLaunchConfigurationTemplateFluentBuilder::post_launch_actions) / [`set_post_launch_actions(Option<PostLaunchActions>)`](crate::operation::create_launch_configuration_template::builders::CreateLaunchConfigurationTemplateFluentBuilder::set_post_launch_actions):<br>required: **false**<br><p>Launch configuration template post launch actions.</p><br>
    ///   - [`enable_map_auto_tagging(bool)`](crate::operation::create_launch_configuration_template::builders::CreateLaunchConfigurationTemplateFluentBuilder::enable_map_auto_tagging) / [`set_enable_map_auto_tagging(Option<bool>)`](crate::operation::create_launch_configuration_template::builders::CreateLaunchConfigurationTemplateFluentBuilder::set_enable_map_auto_tagging):<br>required: **false**<br><p>Enable map auto tagging.</p><br>
    ///   - [`map_auto_tagging_mpe_id(impl Into<String>)`](crate::operation::create_launch_configuration_template::builders::CreateLaunchConfigurationTemplateFluentBuilder::map_auto_tagging_mpe_id) / [`set_map_auto_tagging_mpe_id(Option<String>)`](crate::operation::create_launch_configuration_template::builders::CreateLaunchConfigurationTemplateFluentBuilder::set_map_auto_tagging_mpe_id):<br>required: **false**<br><p>Launch configuration template map auto tagging MPE ID.</p><br>
    ///   - [`tags(impl Into<String>, impl Into<String>)`](crate::operation::create_launch_configuration_template::builders::CreateLaunchConfigurationTemplateFluentBuilder::tags) / [`set_tags(Option<HashMap::<String, String>>)`](crate::operation::create_launch_configuration_template::builders::CreateLaunchConfigurationTemplateFluentBuilder::set_tags):<br>required: **false**<br><p>Request to associate tags during creation of a Launch Configuration Template.</p><br>
    ///   - [`launch_disposition(LaunchDisposition)`](crate::operation::create_launch_configuration_template::builders::CreateLaunchConfigurationTemplateFluentBuilder::launch_disposition) / [`set_launch_disposition(Option<LaunchDisposition>)`](crate::operation::create_launch_configuration_template::builders::CreateLaunchConfigurationTemplateFluentBuilder::set_launch_disposition):<br>required: **false**<br><p>Launch disposition.</p><br>
    ///   - [`target_instance_type_right_sizing_method(TargetInstanceTypeRightSizingMethod)`](crate::operation::create_launch_configuration_template::builders::CreateLaunchConfigurationTemplateFluentBuilder::target_instance_type_right_sizing_method) / [`set_target_instance_type_right_sizing_method(Option<TargetInstanceTypeRightSizingMethod>)`](crate::operation::create_launch_configuration_template::builders::CreateLaunchConfigurationTemplateFluentBuilder::set_target_instance_type_right_sizing_method):<br>required: **false**<br><p>Target instance type right-sizing method.</p><br>
    ///   - [`copy_private_ip(bool)`](crate::operation::create_launch_configuration_template::builders::CreateLaunchConfigurationTemplateFluentBuilder::copy_private_ip) / [`set_copy_private_ip(Option<bool>)`](crate::operation::create_launch_configuration_template::builders::CreateLaunchConfigurationTemplateFluentBuilder::set_copy_private_ip):<br>required: **false**<br><p>Copy private Ip.</p><br>
    ///   - [`associate_public_ip_address(bool)`](crate::operation::create_launch_configuration_template::builders::CreateLaunchConfigurationTemplateFluentBuilder::associate_public_ip_address) / [`set_associate_public_ip_address(Option<bool>)`](crate::operation::create_launch_configuration_template::builders::CreateLaunchConfigurationTemplateFluentBuilder::set_associate_public_ip_address):<br>required: **false**<br><p>Associate public Ip address.</p><br>
    ///   - [`copy_tags(bool)`](crate::operation::create_launch_configuration_template::builders::CreateLaunchConfigurationTemplateFluentBuilder::copy_tags) / [`set_copy_tags(Option<bool>)`](crate::operation::create_launch_configuration_template::builders::CreateLaunchConfigurationTemplateFluentBuilder::set_copy_tags):<br>required: **false**<br><p>Copy tags.</p><br>
    ///   - [`licensing(Licensing)`](crate::operation::create_launch_configuration_template::builders::CreateLaunchConfigurationTemplateFluentBuilder::licensing) / [`set_licensing(Option<Licensing>)`](crate::operation::create_launch_configuration_template::builders::CreateLaunchConfigurationTemplateFluentBuilder::set_licensing):<br>required: **false**<br><p>Configure Licensing.</p><br>
    ///   - [`boot_mode(BootMode)`](crate::operation::create_launch_configuration_template::builders::CreateLaunchConfigurationTemplateFluentBuilder::boot_mode) / [`set_boot_mode(Option<BootMode>)`](crate::operation::create_launch_configuration_template::builders::CreateLaunchConfigurationTemplateFluentBuilder::set_boot_mode):<br>required: **false**<br><p>Launch configuration template boot mode.</p><br>
    ///   - [`small_volume_max_size(i64)`](crate::operation::create_launch_configuration_template::builders::CreateLaunchConfigurationTemplateFluentBuilder::small_volume_max_size) / [`set_small_volume_max_size(Option<i64>)`](crate::operation::create_launch_configuration_template::builders::CreateLaunchConfigurationTemplateFluentBuilder::set_small_volume_max_size):<br>required: **false**<br><p>Small volume maximum size.</p><br>
    ///   - [`small_volume_conf(LaunchTemplateDiskConf)`](crate::operation::create_launch_configuration_template::builders::CreateLaunchConfigurationTemplateFluentBuilder::small_volume_conf) / [`set_small_volume_conf(Option<LaunchTemplateDiskConf>)`](crate::operation::create_launch_configuration_template::builders::CreateLaunchConfigurationTemplateFluentBuilder::set_small_volume_conf):<br>required: **false**<br><p>Small volume config.</p><br>
    ///   - [`large_volume_conf(LaunchTemplateDiskConf)`](crate::operation::create_launch_configuration_template::builders::CreateLaunchConfigurationTemplateFluentBuilder::large_volume_conf) / [`set_large_volume_conf(Option<LaunchTemplateDiskConf>)`](crate::operation::create_launch_configuration_template::builders::CreateLaunchConfigurationTemplateFluentBuilder::set_large_volume_conf):<br>required: **false**<br><p>Large volume config.</p><br>
    /// - On success, responds with [`CreateLaunchConfigurationTemplateOutput`](crate::operation::create_launch_configuration_template::CreateLaunchConfigurationTemplateOutput) with field(s):
    ///   - [`launch_configuration_template_id(String)`](crate::operation::create_launch_configuration_template::CreateLaunchConfigurationTemplateOutput::launch_configuration_template_id): <p>ID of the Launch Configuration Template.</p>
    ///   - [`arn(Option<String>)`](crate::operation::create_launch_configuration_template::CreateLaunchConfigurationTemplateOutput::arn): <p>ARN of the Launch Configuration Template.</p>
    ///   - [`post_launch_actions(Option<PostLaunchActions>)`](crate::operation::create_launch_configuration_template::CreateLaunchConfigurationTemplateOutput::post_launch_actions): <p>Post Launch Actions of the Launch Configuration Template.</p>
    ///   - [`enable_map_auto_tagging(Option<bool>)`](crate::operation::create_launch_configuration_template::CreateLaunchConfigurationTemplateOutput::enable_map_auto_tagging): <p>Enable map auto tagging.</p>
    ///   - [`map_auto_tagging_mpe_id(Option<String>)`](crate::operation::create_launch_configuration_template::CreateLaunchConfigurationTemplateOutput::map_auto_tagging_mpe_id): <p>Launch configuration template map auto tagging MPE ID.</p>
    ///   - [`tags(Option<HashMap::<String, String>>)`](crate::operation::create_launch_configuration_template::CreateLaunchConfigurationTemplateOutput::tags): <p>Tags of the Launch Configuration Template.</p>
    ///   - [`ec2_launch_template_id(Option<String>)`](crate::operation::create_launch_configuration_template::CreateLaunchConfigurationTemplateOutput::ec2_launch_template_id): <p>EC2 launch template ID.</p>
    ///   - [`launch_disposition(Option<LaunchDisposition>)`](crate::operation::create_launch_configuration_template::CreateLaunchConfigurationTemplateOutput::launch_disposition): <p>Launch disposition.</p>
    ///   - [`target_instance_type_right_sizing_method(Option<TargetInstanceTypeRightSizingMethod>)`](crate::operation::create_launch_configuration_template::CreateLaunchConfigurationTemplateOutput::target_instance_type_right_sizing_method): <p>Target instance type right-sizing method.</p>
    ///   - [`copy_private_ip(Option<bool>)`](crate::operation::create_launch_configuration_template::CreateLaunchConfigurationTemplateOutput::copy_private_ip): <p>Copy private Ip.</p>
    ///   - [`associate_public_ip_address(Option<bool>)`](crate::operation::create_launch_configuration_template::CreateLaunchConfigurationTemplateOutput::associate_public_ip_address): <p>Associate public Ip address.</p>
    ///   - [`copy_tags(Option<bool>)`](crate::operation::create_launch_configuration_template::CreateLaunchConfigurationTemplateOutput::copy_tags): <p>Copy tags.</p>
    ///   - [`licensing(Option<Licensing>)`](crate::operation::create_launch_configuration_template::CreateLaunchConfigurationTemplateOutput::licensing): <p>Configure Licensing.</p>
    ///   - [`boot_mode(Option<BootMode>)`](crate::operation::create_launch_configuration_template::CreateLaunchConfigurationTemplateOutput::boot_mode): <p>Launch configuration template boot mode.</p>
    ///   - [`small_volume_max_size(i64)`](crate::operation::create_launch_configuration_template::CreateLaunchConfigurationTemplateOutput::small_volume_max_size): <p>Small volume maximum size.</p>
    ///   - [`small_volume_conf(Option<LaunchTemplateDiskConf>)`](crate::operation::create_launch_configuration_template::CreateLaunchConfigurationTemplateOutput::small_volume_conf): <p>Small volume config.</p>
    ///   - [`large_volume_conf(Option<LaunchTemplateDiskConf>)`](crate::operation::create_launch_configuration_template::CreateLaunchConfigurationTemplateOutput::large_volume_conf): <p>Large volume config.</p>
    /// - On failure, responds with [`SdkError<CreateLaunchConfigurationTemplateError>`](crate::operation::create_launch_configuration_template::CreateLaunchConfigurationTemplateError)
    pub fn create_launch_configuration_template(
        &self,
    ) -> crate::operation::create_launch_configuration_template::builders::CreateLaunchConfigurationTemplateFluentBuilder {
        crate::operation::create_launch_configuration_template::builders::CreateLaunchConfigurationTemplateFluentBuilder::new(self.handle.clone())
    }
}
