// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) fn create_launch_configuration_template_output_correct_errors(
    mut builder: crate::operation::create_launch_configuration_template::builders::CreateLaunchConfigurationTemplateOutputBuilder,
) -> crate::operation::create_launch_configuration_template::builders::CreateLaunchConfigurationTemplateOutputBuilder {
    if builder.launch_configuration_template_id.is_none() {
        builder.launch_configuration_template_id = Some(Default::default())
    }
    builder
}

pub(crate) fn create_replication_configuration_template_output_correct_errors(
    mut builder: crate::operation::create_replication_configuration_template::builders::CreateReplicationConfigurationTemplateOutputBuilder,
) -> crate::operation::create_replication_configuration_template::builders::CreateReplicationConfigurationTemplateOutputBuilder {
    if builder.replication_configuration_template_id.is_none() {
        builder.replication_configuration_template_id = Some(Default::default())
    }
    builder
}

pub(crate) fn list_managed_accounts_output_correct_errors(
    mut builder: crate::operation::list_managed_accounts::builders::ListManagedAccountsOutputBuilder,
) -> crate::operation::list_managed_accounts::builders::ListManagedAccountsOutputBuilder {
    if builder.items.is_none() {
        builder.items = Some(Default::default())
    }
    builder
}

pub(crate) fn internal_server_exception_correct_errors(
    mut builder: crate::types::error::builders::InternalServerExceptionBuilder,
) -> crate::types::error::builders::InternalServerExceptionBuilder {
    if builder.message.is_none() {
        builder.message = Some(Default::default())
    }
    builder
}

pub(crate) fn throttling_exception_correct_errors(
    mut builder: crate::types::error::builders::ThrottlingExceptionBuilder,
) -> crate::types::error::builders::ThrottlingExceptionBuilder {
    if builder.message.is_none() {
        builder.message = Some(Default::default())
    }
    builder
}

pub(crate) fn update_launch_configuration_template_output_correct_errors(
    mut builder: crate::operation::update_launch_configuration_template::builders::UpdateLaunchConfigurationTemplateOutputBuilder,
) -> crate::operation::update_launch_configuration_template::builders::UpdateLaunchConfigurationTemplateOutputBuilder {
    if builder.launch_configuration_template_id.is_none() {
        builder.launch_configuration_template_id = Some(Default::default())
    }
    builder
}

pub(crate) fn update_replication_configuration_template_output_correct_errors(
    mut builder: crate::operation::update_replication_configuration_template::builders::UpdateReplicationConfigurationTemplateOutputBuilder,
) -> crate::operation::update_replication_configuration_template::builders::UpdateReplicationConfigurationTemplateOutputBuilder {
    if builder.replication_configuration_template_id.is_none() {
        builder.replication_configuration_template_id = Some(Default::default())
    }
    builder
}

pub(crate) fn connector_ssm_command_config_correct_errors(
    mut builder: crate::types::builders::ConnectorSsmCommandConfigBuilder,
) -> crate::types::builders::ConnectorSsmCommandConfigBuilder {
    if builder.s3_output_enabled.is_none() {
        builder.s3_output_enabled = Some(Default::default())
    }
    if builder.cloud_watch_output_enabled.is_none() {
        builder.cloud_watch_output_enabled = Some(Default::default())
    }
    builder
}

pub(crate) fn job_correct_errors(mut builder: crate::types::builders::JobBuilder) -> crate::types::builders::JobBuilder {
    if builder.job_id.is_none() {
        builder.job_id = Some(Default::default())
    }
    builder
}

pub(crate) fn launch_configuration_template_correct_errors(
    mut builder: crate::types::builders::LaunchConfigurationTemplateBuilder,
) -> crate::types::builders::LaunchConfigurationTemplateBuilder {
    if builder.launch_configuration_template_id.is_none() {
        builder.launch_configuration_template_id = Some(Default::default())
    }
    builder
}

pub(crate) fn replication_configuration_template_correct_errors(
    mut builder: crate::types::builders::ReplicationConfigurationTemplateBuilder,
) -> crate::types::builders::ReplicationConfigurationTemplateBuilder {
    if builder.replication_configuration_template_id.is_none() {
        builder.replication_configuration_template_id = Some(Default::default())
    }
    builder
}

pub(crate) fn s3_bucket_source_correct_errors(
    mut builder: crate::types::builders::S3BucketSourceBuilder,
) -> crate::types::builders::S3BucketSourceBuilder {
    if builder.s3_bucket.is_none() {
        builder.s3_bucket = Some(Default::default())
    }
    if builder.s3_key.is_none() {
        builder.s3_key = Some(Default::default())
    }
    builder
}

pub(crate) fn participating_server_correct_errors(
    mut builder: crate::types::builders::ParticipatingServerBuilder,
) -> crate::types::builders::ParticipatingServerBuilder {
    if builder.source_server_id.is_none() {
        builder.source_server_id = Some(Default::default())
    }
    builder
}

pub(crate) fn ssm_document_correct_errors(mut builder: crate::types::builders::SsmDocumentBuilder) -> crate::types::builders::SsmDocumentBuilder {
    if builder.action_name.is_none() {
        builder.action_name = Some(Default::default())
    }
    if builder.ssm_document_name.is_none() {
        builder.ssm_document_name = Some(Default::default())
    }
    builder
}

pub(crate) fn ssm_parameter_store_parameter_correct_errors(
    mut builder: crate::types::builders::SsmParameterStoreParameterBuilder,
) -> crate::types::builders::SsmParameterStoreParameterBuilder {
    if builder.parameter_type.is_none() {
        builder.parameter_type = "no value was set".parse::<crate::types::SsmParameterStoreParameterType>().ok()
    }
    if builder.parameter_name.is_none() {
        builder.parameter_name = Some(Default::default())
    }
    builder
}
