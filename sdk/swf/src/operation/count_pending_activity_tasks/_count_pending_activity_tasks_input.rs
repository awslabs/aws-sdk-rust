// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct CountPendingActivityTasksInput {
    /// <p>The name of the domain that contains the task list.</p>
    #[doc(hidden)]
    pub domain: std::option::Option<std::string::String>,
    /// <p>The name of the task list.</p>
    #[doc(hidden)]
    pub task_list: std::option::Option<crate::types::TaskList>,
}
impl CountPendingActivityTasksInput {
    /// <p>The name of the domain that contains the task list.</p>
    pub fn domain(&self) -> std::option::Option<&str> {
        self.domain.as_deref()
    }
    /// <p>The name of the task list.</p>
    pub fn task_list(&self) -> std::option::Option<&crate::types::TaskList> {
        self.task_list.as_ref()
    }
}
impl CountPendingActivityTasksInput {
    /// Creates a new builder-style object to manufacture [`CountPendingActivityTasksInput`](crate::operation::count_pending_activity_tasks::CountPendingActivityTasksInput).
    pub fn builder() -> crate::operation::count_pending_activity_tasks::builders::CountPendingActivityTasksInputBuilder{
        crate::operation::count_pending_activity_tasks::builders::CountPendingActivityTasksInputBuilder::default()
    }
}

/// A builder for [`CountPendingActivityTasksInput`](crate::operation::count_pending_activity_tasks::CountPendingActivityTasksInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct CountPendingActivityTasksInputBuilder {
    pub(crate) domain: std::option::Option<std::string::String>,
    pub(crate) task_list: std::option::Option<crate::types::TaskList>,
}
impl CountPendingActivityTasksInputBuilder {
    /// <p>The name of the domain that contains the task list.</p>
    pub fn domain(mut self, input: impl Into<std::string::String>) -> Self {
        self.domain = Some(input.into());
        self
    }
    /// <p>The name of the domain that contains the task list.</p>
    pub fn set_domain(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.domain = input;
        self
    }
    /// <p>The name of the task list.</p>
    pub fn task_list(mut self, input: crate::types::TaskList) -> Self {
        self.task_list = Some(input);
        self
    }
    /// <p>The name of the task list.</p>
    pub fn set_task_list(mut self, input: std::option::Option<crate::types::TaskList>) -> Self {
        self.task_list = input;
        self
    }
    /// Consumes the builder and constructs a [`CountPendingActivityTasksInput`](crate::operation::count_pending_activity_tasks::CountPendingActivityTasksInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::count_pending_activity_tasks::CountPendingActivityTasksInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::count_pending_activity_tasks::CountPendingActivityTasksInput {
                domain: self.domain,
                task_list: self.task_list,
            },
        )
    }
}
