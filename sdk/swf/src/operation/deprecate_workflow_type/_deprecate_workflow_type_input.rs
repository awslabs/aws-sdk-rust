// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DeprecateWorkflowTypeInput {
    /// <p>The name of the domain in which the workflow type is registered.</p>
    #[doc(hidden)]
    pub domain: std::option::Option<std::string::String>,
    /// <p>The workflow type to deprecate.</p>
    #[doc(hidden)]
    pub workflow_type: std::option::Option<crate::types::WorkflowType>,
}
impl DeprecateWorkflowTypeInput {
    /// <p>The name of the domain in which the workflow type is registered.</p>
    pub fn domain(&self) -> std::option::Option<&str> {
        self.domain.as_deref()
    }
    /// <p>The workflow type to deprecate.</p>
    pub fn workflow_type(&self) -> std::option::Option<&crate::types::WorkflowType> {
        self.workflow_type.as_ref()
    }
}
impl DeprecateWorkflowTypeInput {
    /// Creates a new builder-style object to manufacture [`DeprecateWorkflowTypeInput`](crate::operation::deprecate_workflow_type::DeprecateWorkflowTypeInput).
    pub fn builder(
    ) -> crate::operation::deprecate_workflow_type::builders::DeprecateWorkflowTypeInputBuilder
    {
        crate::operation::deprecate_workflow_type::builders::DeprecateWorkflowTypeInputBuilder::default()
    }
}

/// A builder for [`DeprecateWorkflowTypeInput`](crate::operation::deprecate_workflow_type::DeprecateWorkflowTypeInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DeprecateWorkflowTypeInputBuilder {
    pub(crate) domain: std::option::Option<std::string::String>,
    pub(crate) workflow_type: std::option::Option<crate::types::WorkflowType>,
}
impl DeprecateWorkflowTypeInputBuilder {
    /// <p>The name of the domain in which the workflow type is registered.</p>
    pub fn domain(mut self, input: impl Into<std::string::String>) -> Self {
        self.domain = Some(input.into());
        self
    }
    /// <p>The name of the domain in which the workflow type is registered.</p>
    pub fn set_domain(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.domain = input;
        self
    }
    /// <p>The workflow type to deprecate.</p>
    pub fn workflow_type(mut self, input: crate::types::WorkflowType) -> Self {
        self.workflow_type = Some(input);
        self
    }
    /// <p>The workflow type to deprecate.</p>
    pub fn set_workflow_type(
        mut self,
        input: std::option::Option<crate::types::WorkflowType>,
    ) -> Self {
        self.workflow_type = input;
        self
    }
    /// Consumes the builder and constructs a [`DeprecateWorkflowTypeInput`](crate::operation::deprecate_workflow_type::DeprecateWorkflowTypeInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::deprecate_workflow_type::DeprecateWorkflowTypeInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::deprecate_workflow_type::DeprecateWorkflowTypeInput {
                domain: self.domain,
                workflow_type: self.workflow_type,
            },
        )
    }
}
