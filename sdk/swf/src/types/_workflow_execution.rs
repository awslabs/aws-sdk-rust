// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Represents a workflow execution.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct WorkflowExecution {
    /// <p>The user defined identifier associated with the workflow execution.</p>
    #[doc(hidden)]
    pub workflow_id: std::option::Option<std::string::String>,
    /// <p>A system-generated unique identifier for the workflow execution.</p>
    #[doc(hidden)]
    pub run_id: std::option::Option<std::string::String>,
}
impl WorkflowExecution {
    /// <p>The user defined identifier associated with the workflow execution.</p>
    pub fn workflow_id(&self) -> std::option::Option<&str> {
        self.workflow_id.as_deref()
    }
    /// <p>A system-generated unique identifier for the workflow execution.</p>
    pub fn run_id(&self) -> std::option::Option<&str> {
        self.run_id.as_deref()
    }
}
impl WorkflowExecution {
    /// Creates a new builder-style object to manufacture [`WorkflowExecution`](crate::types::WorkflowExecution).
    pub fn builder() -> crate::types::builders::WorkflowExecutionBuilder {
        crate::types::builders::WorkflowExecutionBuilder::default()
    }
}

/// A builder for [`WorkflowExecution`](crate::types::WorkflowExecution).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct WorkflowExecutionBuilder {
    pub(crate) workflow_id: std::option::Option<std::string::String>,
    pub(crate) run_id: std::option::Option<std::string::String>,
}
impl WorkflowExecutionBuilder {
    /// <p>The user defined identifier associated with the workflow execution.</p>
    pub fn workflow_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.workflow_id = Some(input.into());
        self
    }
    /// <p>The user defined identifier associated with the workflow execution.</p>
    pub fn set_workflow_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.workflow_id = input;
        self
    }
    /// <p>A system-generated unique identifier for the workflow execution.</p>
    pub fn run_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.run_id = Some(input.into());
        self
    }
    /// <p>A system-generated unique identifier for the workflow execution.</p>
    pub fn set_run_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.run_id = input;
        self
    }
    /// Consumes the builder and constructs a [`WorkflowExecution`](crate::types::WorkflowExecution).
    pub fn build(self) -> crate::types::WorkflowExecution {
        crate::types::WorkflowExecution {
            workflow_id: self.workflow_id,
            run_id: self.run_id,
        }
    }
}
