// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Configuration settings registered with the activity type.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ActivityTypeConfiguration {
    /// <p> The default maximum duration for tasks of an activity type specified when registering the activity type. You can override this default when scheduling a task through the <code>ScheduleActivityTask</code> <code>Decision</code>.</p>
    /// <p>The duration is specified in seconds, an integer greater than or equal to <code>0</code>. You can use <code>NONE</code> to specify unlimited duration.</p>
    #[doc(hidden)]
    pub default_task_start_to_close_timeout: std::option::Option<std::string::String>,
    /// <p> The default maximum time, in seconds, before which a worker processing a task must report progress by calling <code>RecordActivityTaskHeartbeat</code>.</p>
    /// <p>You can specify this value only when <i>registering</i> an activity type. The registered default value can be overridden when you schedule a task through the <code>ScheduleActivityTask</code> <code>Decision</code>. If the activity worker subsequently attempts to record a heartbeat or returns a result, the activity worker receives an <code>UnknownResource</code> fault. In this case, Amazon SWF no longer considers the activity task to be valid; the activity worker should clean up the activity task.</p>
    /// <p>The duration is specified in seconds, an integer greater than or equal to <code>0</code>. You can use <code>NONE</code> to specify unlimited duration.</p>
    #[doc(hidden)]
    pub default_task_heartbeat_timeout: std::option::Option<std::string::String>,
    /// <p> The default task list specified for this activity type at registration. This default is used if a task list isn't provided when a task is scheduled through the <code>ScheduleActivityTask</code> <code>Decision</code>. You can override the default registered task list when scheduling a task through the <code>ScheduleActivityTask</code> <code>Decision</code>.</p>
    #[doc(hidden)]
    pub default_task_list: std::option::Option<crate::types::TaskList>,
    /// <p> The default task priority for tasks of this activity type, specified at registration. If not set, then <code>0</code> is used as the default priority. This default can be overridden when scheduling an activity task.</p>
    /// <p>Valid values are integers that range from Java's <code>Integer.MIN_VALUE</code> (-2147483648) to <code>Integer.MAX_VALUE</code> (2147483647). Higher numbers indicate higher priority.</p>
    /// <p>For more information about setting task priority, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/programming-priority.html">Setting Task Priority</a> in the <i>Amazon SWF Developer Guide</i>.</p>
    #[doc(hidden)]
    pub default_task_priority: std::option::Option<std::string::String>,
    /// <p> The default maximum duration, specified when registering the activity type, that a task of an activity type can wait before being assigned to a worker. You can override this default when scheduling a task through the <code>ScheduleActivityTask</code> <code>Decision</code>.</p>
    /// <p>The duration is specified in seconds, an integer greater than or equal to <code>0</code>. You can use <code>NONE</code> to specify unlimited duration.</p>
    #[doc(hidden)]
    pub default_task_schedule_to_start_timeout: std::option::Option<std::string::String>,
    /// <p> The default maximum duration, specified when registering the activity type, for tasks of this activity type. You can override this default when scheduling a task through the <code>ScheduleActivityTask</code> <code>Decision</code>.</p>
    /// <p>The duration is specified in seconds, an integer greater than or equal to <code>0</code>. You can use <code>NONE</code> to specify unlimited duration.</p>
    #[doc(hidden)]
    pub default_task_schedule_to_close_timeout: std::option::Option<std::string::String>,
}
impl ActivityTypeConfiguration {
    /// <p> The default maximum duration for tasks of an activity type specified when registering the activity type. You can override this default when scheduling a task through the <code>ScheduleActivityTask</code> <code>Decision</code>.</p>
    /// <p>The duration is specified in seconds, an integer greater than or equal to <code>0</code>. You can use <code>NONE</code> to specify unlimited duration.</p>
    pub fn default_task_start_to_close_timeout(&self) -> std::option::Option<&str> {
        self.default_task_start_to_close_timeout.as_deref()
    }
    /// <p> The default maximum time, in seconds, before which a worker processing a task must report progress by calling <code>RecordActivityTaskHeartbeat</code>.</p>
    /// <p>You can specify this value only when <i>registering</i> an activity type. The registered default value can be overridden when you schedule a task through the <code>ScheduleActivityTask</code> <code>Decision</code>. If the activity worker subsequently attempts to record a heartbeat or returns a result, the activity worker receives an <code>UnknownResource</code> fault. In this case, Amazon SWF no longer considers the activity task to be valid; the activity worker should clean up the activity task.</p>
    /// <p>The duration is specified in seconds, an integer greater than or equal to <code>0</code>. You can use <code>NONE</code> to specify unlimited duration.</p>
    pub fn default_task_heartbeat_timeout(&self) -> std::option::Option<&str> {
        self.default_task_heartbeat_timeout.as_deref()
    }
    /// <p> The default task list specified for this activity type at registration. This default is used if a task list isn't provided when a task is scheduled through the <code>ScheduleActivityTask</code> <code>Decision</code>. You can override the default registered task list when scheduling a task through the <code>ScheduleActivityTask</code> <code>Decision</code>.</p>
    pub fn default_task_list(&self) -> std::option::Option<&crate::types::TaskList> {
        self.default_task_list.as_ref()
    }
    /// <p> The default task priority for tasks of this activity type, specified at registration. If not set, then <code>0</code> is used as the default priority. This default can be overridden when scheduling an activity task.</p>
    /// <p>Valid values are integers that range from Java's <code>Integer.MIN_VALUE</code> (-2147483648) to <code>Integer.MAX_VALUE</code> (2147483647). Higher numbers indicate higher priority.</p>
    /// <p>For more information about setting task priority, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/programming-priority.html">Setting Task Priority</a> in the <i>Amazon SWF Developer Guide</i>.</p>
    pub fn default_task_priority(&self) -> std::option::Option<&str> {
        self.default_task_priority.as_deref()
    }
    /// <p> The default maximum duration, specified when registering the activity type, that a task of an activity type can wait before being assigned to a worker. You can override this default when scheduling a task through the <code>ScheduleActivityTask</code> <code>Decision</code>.</p>
    /// <p>The duration is specified in seconds, an integer greater than or equal to <code>0</code>. You can use <code>NONE</code> to specify unlimited duration.</p>
    pub fn default_task_schedule_to_start_timeout(&self) -> std::option::Option<&str> {
        self.default_task_schedule_to_start_timeout.as_deref()
    }
    /// <p> The default maximum duration, specified when registering the activity type, for tasks of this activity type. You can override this default when scheduling a task through the <code>ScheduleActivityTask</code> <code>Decision</code>.</p>
    /// <p>The duration is specified in seconds, an integer greater than or equal to <code>0</code>. You can use <code>NONE</code> to specify unlimited duration.</p>
    pub fn default_task_schedule_to_close_timeout(&self) -> std::option::Option<&str> {
        self.default_task_schedule_to_close_timeout.as_deref()
    }
}
impl ActivityTypeConfiguration {
    /// Creates a new builder-style object to manufacture [`ActivityTypeConfiguration`](crate::types::ActivityTypeConfiguration).
    pub fn builder() -> crate::types::builders::ActivityTypeConfigurationBuilder {
        crate::types::builders::ActivityTypeConfigurationBuilder::default()
    }
}

/// A builder for [`ActivityTypeConfiguration`](crate::types::ActivityTypeConfiguration).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ActivityTypeConfigurationBuilder {
    pub(crate) default_task_start_to_close_timeout: std::option::Option<std::string::String>,
    pub(crate) default_task_heartbeat_timeout: std::option::Option<std::string::String>,
    pub(crate) default_task_list: std::option::Option<crate::types::TaskList>,
    pub(crate) default_task_priority: std::option::Option<std::string::String>,
    pub(crate) default_task_schedule_to_start_timeout: std::option::Option<std::string::String>,
    pub(crate) default_task_schedule_to_close_timeout: std::option::Option<std::string::String>,
}
impl ActivityTypeConfigurationBuilder {
    /// <p> The default maximum duration for tasks of an activity type specified when registering the activity type. You can override this default when scheduling a task through the <code>ScheduleActivityTask</code> <code>Decision</code>.</p>
    /// <p>The duration is specified in seconds, an integer greater than or equal to <code>0</code>. You can use <code>NONE</code> to specify unlimited duration.</p>
    pub fn default_task_start_to_close_timeout(
        mut self,
        input: impl Into<std::string::String>,
    ) -> Self {
        self.default_task_start_to_close_timeout = Some(input.into());
        self
    }
    /// <p> The default maximum duration for tasks of an activity type specified when registering the activity type. You can override this default when scheduling a task through the <code>ScheduleActivityTask</code> <code>Decision</code>.</p>
    /// <p>The duration is specified in seconds, an integer greater than or equal to <code>0</code>. You can use <code>NONE</code> to specify unlimited duration.</p>
    pub fn set_default_task_start_to_close_timeout(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.default_task_start_to_close_timeout = input;
        self
    }
    /// <p> The default maximum time, in seconds, before which a worker processing a task must report progress by calling <code>RecordActivityTaskHeartbeat</code>.</p>
    /// <p>You can specify this value only when <i>registering</i> an activity type. The registered default value can be overridden when you schedule a task through the <code>ScheduleActivityTask</code> <code>Decision</code>. If the activity worker subsequently attempts to record a heartbeat or returns a result, the activity worker receives an <code>UnknownResource</code> fault. In this case, Amazon SWF no longer considers the activity task to be valid; the activity worker should clean up the activity task.</p>
    /// <p>The duration is specified in seconds, an integer greater than or equal to <code>0</code>. You can use <code>NONE</code> to specify unlimited duration.</p>
    pub fn default_task_heartbeat_timeout(mut self, input: impl Into<std::string::String>) -> Self {
        self.default_task_heartbeat_timeout = Some(input.into());
        self
    }
    /// <p> The default maximum time, in seconds, before which a worker processing a task must report progress by calling <code>RecordActivityTaskHeartbeat</code>.</p>
    /// <p>You can specify this value only when <i>registering</i> an activity type. The registered default value can be overridden when you schedule a task through the <code>ScheduleActivityTask</code> <code>Decision</code>. If the activity worker subsequently attempts to record a heartbeat or returns a result, the activity worker receives an <code>UnknownResource</code> fault. In this case, Amazon SWF no longer considers the activity task to be valid; the activity worker should clean up the activity task.</p>
    /// <p>The duration is specified in seconds, an integer greater than or equal to <code>0</code>. You can use <code>NONE</code> to specify unlimited duration.</p>
    pub fn set_default_task_heartbeat_timeout(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.default_task_heartbeat_timeout = input;
        self
    }
    /// <p> The default task list specified for this activity type at registration. This default is used if a task list isn't provided when a task is scheduled through the <code>ScheduleActivityTask</code> <code>Decision</code>. You can override the default registered task list when scheduling a task through the <code>ScheduleActivityTask</code> <code>Decision</code>.</p>
    pub fn default_task_list(mut self, input: crate::types::TaskList) -> Self {
        self.default_task_list = Some(input);
        self
    }
    /// <p> The default task list specified for this activity type at registration. This default is used if a task list isn't provided when a task is scheduled through the <code>ScheduleActivityTask</code> <code>Decision</code>. You can override the default registered task list when scheduling a task through the <code>ScheduleActivityTask</code> <code>Decision</code>.</p>
    pub fn set_default_task_list(
        mut self,
        input: std::option::Option<crate::types::TaskList>,
    ) -> Self {
        self.default_task_list = input;
        self
    }
    /// <p> The default task priority for tasks of this activity type, specified at registration. If not set, then <code>0</code> is used as the default priority. This default can be overridden when scheduling an activity task.</p>
    /// <p>Valid values are integers that range from Java's <code>Integer.MIN_VALUE</code> (-2147483648) to <code>Integer.MAX_VALUE</code> (2147483647). Higher numbers indicate higher priority.</p>
    /// <p>For more information about setting task priority, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/programming-priority.html">Setting Task Priority</a> in the <i>Amazon SWF Developer Guide</i>.</p>
    pub fn default_task_priority(mut self, input: impl Into<std::string::String>) -> Self {
        self.default_task_priority = Some(input.into());
        self
    }
    /// <p> The default task priority for tasks of this activity type, specified at registration. If not set, then <code>0</code> is used as the default priority. This default can be overridden when scheduling an activity task.</p>
    /// <p>Valid values are integers that range from Java's <code>Integer.MIN_VALUE</code> (-2147483648) to <code>Integer.MAX_VALUE</code> (2147483647). Higher numbers indicate higher priority.</p>
    /// <p>For more information about setting task priority, see <a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/programming-priority.html">Setting Task Priority</a> in the <i>Amazon SWF Developer Guide</i>.</p>
    pub fn set_default_task_priority(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.default_task_priority = input;
        self
    }
    /// <p> The default maximum duration, specified when registering the activity type, that a task of an activity type can wait before being assigned to a worker. You can override this default when scheduling a task through the <code>ScheduleActivityTask</code> <code>Decision</code>.</p>
    /// <p>The duration is specified in seconds, an integer greater than or equal to <code>0</code>. You can use <code>NONE</code> to specify unlimited duration.</p>
    pub fn default_task_schedule_to_start_timeout(
        mut self,
        input: impl Into<std::string::String>,
    ) -> Self {
        self.default_task_schedule_to_start_timeout = Some(input.into());
        self
    }
    /// <p> The default maximum duration, specified when registering the activity type, that a task of an activity type can wait before being assigned to a worker. You can override this default when scheduling a task through the <code>ScheduleActivityTask</code> <code>Decision</code>.</p>
    /// <p>The duration is specified in seconds, an integer greater than or equal to <code>0</code>. You can use <code>NONE</code> to specify unlimited duration.</p>
    pub fn set_default_task_schedule_to_start_timeout(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.default_task_schedule_to_start_timeout = input;
        self
    }
    /// <p> The default maximum duration, specified when registering the activity type, for tasks of this activity type. You can override this default when scheduling a task through the <code>ScheduleActivityTask</code> <code>Decision</code>.</p>
    /// <p>The duration is specified in seconds, an integer greater than or equal to <code>0</code>. You can use <code>NONE</code> to specify unlimited duration.</p>
    pub fn default_task_schedule_to_close_timeout(
        mut self,
        input: impl Into<std::string::String>,
    ) -> Self {
        self.default_task_schedule_to_close_timeout = Some(input.into());
        self
    }
    /// <p> The default maximum duration, specified when registering the activity type, for tasks of this activity type. You can override this default when scheduling a task through the <code>ScheduleActivityTask</code> <code>Decision</code>.</p>
    /// <p>The duration is specified in seconds, an integer greater than or equal to <code>0</code>. You can use <code>NONE</code> to specify unlimited duration.</p>
    pub fn set_default_task_schedule_to_close_timeout(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.default_task_schedule_to_close_timeout = input;
        self
    }
    /// Consumes the builder and constructs a [`ActivityTypeConfiguration`](crate::types::ActivityTypeConfiguration).
    pub fn build(self) -> crate::types::ActivityTypeConfiguration {
        crate::types::ActivityTypeConfiguration {
            default_task_start_to_close_timeout: self.default_task_start_to_close_timeout,
            default_task_heartbeat_timeout: self.default_task_heartbeat_timeout,
            default_task_list: self.default_task_list,
            default_task_priority: self.default_task_priority,
            default_task_schedule_to_start_timeout: self.default_task_schedule_to_start_timeout,
            default_task_schedule_to_close_timeout: self.default_task_schedule_to_close_timeout,
        }
    }
}
