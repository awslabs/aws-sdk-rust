// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_poll_for_decision_task_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::poll_for_decision_task::PollForDecisionTaskInput,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.domain {
        object.key("domain").string(var_1.as_str());
    }
    if let Some(var_2) = &input.task_list {
        #[allow(unused_mut)]
        let mut object_3 = object.key("taskList").start_object();
        crate::protocol_serde::shape_task_list::ser_task_list(&mut object_3, var_2)?;
        object_3.finish();
    }
    if let Some(var_4) = &input.identity {
        object.key("identity").string(var_4.as_str());
    }
    if let Some(var_5) = &input.next_page_token {
        object.key("nextPageToken").string(var_5.as_str());
    }
    if let Some(var_6) = &input.maximum_page_size {
        object.key("maximumPageSize").number(
            #[allow(clippy::useless_conversion)]
            ::aws_smithy_types::Number::NegInt((*var_6).into()),
        );
    }
    if let Some(var_7) = &input.reverse_order {
        object.key("reverseOrder").boolean(*var_7);
    }
    if let Some(var_8) = &input.start_at_previous_started_event {
        object.key("startAtPreviousStartedEvent").boolean(*var_8);
    }
    Ok(())
}
