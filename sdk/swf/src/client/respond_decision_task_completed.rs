// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`RespondDecisionTaskCompleted`](crate::operation::respond_decision_task_completed::builders::RespondDecisionTaskCompletedFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`task_token(impl Into<String>)`](crate::operation::respond_decision_task_completed::builders::RespondDecisionTaskCompletedFluentBuilder::task_token) / [`set_task_token(Option<String>)`](crate::operation::respond_decision_task_completed::builders::RespondDecisionTaskCompletedFluentBuilder::set_task_token):<br>required: **true**<br><p>The <code>taskToken</code> from the <code>DecisionTask</code>.</p> <important>   <p> <code>taskToken</code> is generated by the service and should be treated as an opaque value. If the task is passed to another process, its <code>taskToken</code> must also be passed. This enables it to provide its progress and respond with results.</p>  </important><br>
    ///   - [`decisions(Decision)`](crate::operation::respond_decision_task_completed::builders::RespondDecisionTaskCompletedFluentBuilder::decisions) / [`set_decisions(Option<Vec::<Decision>>)`](crate::operation::respond_decision_task_completed::builders::RespondDecisionTaskCompletedFluentBuilder::set_decisions):<br>required: **false**<br><p>The list of decisions (possibly empty) made by the decider while processing this decision task. See the docs for the <code>Decision</code> structure for details.</p><br>
    ///   - [`execution_context(impl Into<String>)`](crate::operation::respond_decision_task_completed::builders::RespondDecisionTaskCompletedFluentBuilder::execution_context) / [`set_execution_context(Option<String>)`](crate::operation::respond_decision_task_completed::builders::RespondDecisionTaskCompletedFluentBuilder::set_execution_context):<br>required: **false**<br><p>User defined context to add to workflow execution.</p><br>
    ///   - [`task_list(TaskList)`](crate::operation::respond_decision_task_completed::builders::RespondDecisionTaskCompletedFluentBuilder::task_list) / [`set_task_list(Option<TaskList>)`](crate::operation::respond_decision_task_completed::builders::RespondDecisionTaskCompletedFluentBuilder::set_task_list):<br>required: **false**<br><p>The task list to use for the future decision tasks of this workflow execution. This list overrides the original task list you specified while starting the workflow execution. </p><br>
    ///   - [`task_list_schedule_to_start_timeout(impl Into<String>)`](crate::operation::respond_decision_task_completed::builders::RespondDecisionTaskCompletedFluentBuilder::task_list_schedule_to_start_timeout) / [`set_task_list_schedule_to_start_timeout(Option<String>)`](crate::operation::respond_decision_task_completed::builders::RespondDecisionTaskCompletedFluentBuilder::set_task_list_schedule_to_start_timeout):<br>required: **false**<br><p>Specifies a timeout (in seconds) for the task list override. When this parameter is missing, the task list override is permanent. This parameter makes it possible to temporarily override the task list. If a decision task scheduled on the override task list is not started within the timeout, the decision task will time out. Amazon SWF will revert the override and schedule a new decision task to the original task list.</p>  <p>If a decision task scheduled on the override task list is started within the timeout, but not completed within the start-to-close timeout, Amazon SWF will also revert the override and schedule a new decision task to the original task list.</p><br>
    /// - On success, responds with [`RespondDecisionTaskCompletedOutput`](crate::operation::respond_decision_task_completed::RespondDecisionTaskCompletedOutput)
    /// - On failure, responds with [`SdkError<RespondDecisionTaskCompletedError>`](crate::operation::respond_decision_task_completed::RespondDecisionTaskCompletedError)
    pub fn respond_decision_task_completed(
        &self,
    ) -> crate::operation::respond_decision_task_completed::builders::RespondDecisionTaskCompletedFluentBuilder {
        crate::operation::respond_decision_task_completed::builders::RespondDecisionTaskCompletedFluentBuilder::new(self.handle.clone())
    }
}
