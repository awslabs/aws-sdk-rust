// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeWorkflowType`](crate::client::fluent_builders::DescribeWorkflowType) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`domain(impl Into<String>)`](crate::client::fluent_builders::DescribeWorkflowType::domain) / [`set_domain(Option<String>)`](crate::client::fluent_builders::DescribeWorkflowType::set_domain): <p>The name of the domain in which this workflow type is registered.</p>
    ///   - [`workflow_type(WorkflowType)`](crate::client::fluent_builders::DescribeWorkflowType::workflow_type) / [`set_workflow_type(Option<WorkflowType>)`](crate::client::fluent_builders::DescribeWorkflowType::set_workflow_type): <p>The workflow type to describe.</p>
    /// - On success, responds with [`DescribeWorkflowTypeOutput`](crate::output::DescribeWorkflowTypeOutput) with field(s):
    ///   - [`type_info(Option<WorkflowTypeInfo>)`](crate::output::DescribeWorkflowTypeOutput::type_info): <p>General information about the workflow type.</p>  <p>The status of the workflow type (returned in the WorkflowTypeInfo structure) can be one of the following.</p>  <ul>   <li> <p> <code>REGISTERED</code> – The type is registered and available. Workers supporting this type should be running.</p> </li>   <li> <p> <code>DEPRECATED</code> – The type was deprecated using <code>DeprecateWorkflowType</code>, but is still in use. You should keep workers supporting this type running. You cannot create new workflow executions of this type.</p> </li>  </ul>
    ///   - [`configuration(Option<WorkflowTypeConfiguration>)`](crate::output::DescribeWorkflowTypeOutput::configuration): <p>Configuration settings of the workflow type registered through <code>RegisterWorkflowType</code> </p>
    /// - On failure, responds with [`SdkError<DescribeWorkflowTypeError>`](crate::error::DescribeWorkflowTypeError)
    pub fn describe_workflow_type(&self) -> crate::client::fluent_builders::DescribeWorkflowType {
        crate::client::fluent_builders::DescribeWorkflowType::new(self.handle.clone())
    }
}
