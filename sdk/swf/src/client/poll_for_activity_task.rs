// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`PollForActivityTask`](crate::client::fluent_builders::PollForActivityTask) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`domain(impl Into<String>)`](crate::client::fluent_builders::PollForActivityTask::domain) / [`set_domain(Option<String>)`](crate::client::fluent_builders::PollForActivityTask::set_domain): <p>The name of the domain that contains the task lists being polled.</p>
    ///   - [`task_list(TaskList)`](crate::client::fluent_builders::PollForActivityTask::task_list) / [`set_task_list(Option<TaskList>)`](crate::client::fluent_builders::PollForActivityTask::set_task_list): <p>Specifies the task list to poll for activity tasks.</p>  <p>The specified string must not start or end with whitespace. It must not contain a <code>:</code> (colon), <code>/</code> (slash), <code>|</code> (vertical bar), or any control characters (<code>\u0000-\u001f</code> | <code>\u007f-\u009f</code>). Also, it must not <i>be</i> the literal string <code>arn</code>.</p>
    ///   - [`identity(impl Into<String>)`](crate::client::fluent_builders::PollForActivityTask::identity) / [`set_identity(Option<String>)`](crate::client::fluent_builders::PollForActivityTask::set_identity): <p>Identity of the worker making the request, recorded in the <code>ActivityTaskStarted</code> event in the workflow history. This enables diagnostic tracing when problems arise. The form of this identity is user defined.</p>
    /// - On success, responds with [`PollForActivityTaskOutput`](crate::output::PollForActivityTaskOutput) with field(s):
    ///   - [`task_token(Option<String>)`](crate::output::PollForActivityTaskOutput::task_token): <p>The opaque string used as a handle on the task. This token is used by workers to communicate progress and response information back to the system about the task.</p>
    ///   - [`activity_id(Option<String>)`](crate::output::PollForActivityTaskOutput::activity_id): <p>The unique ID of the task.</p>
    ///   - [`started_event_id(i64)`](crate::output::PollForActivityTaskOutput::started_event_id): <p>The ID of the <code>ActivityTaskStarted</code> event recorded in the history.</p>
    ///   - [`workflow_execution(Option<WorkflowExecution>)`](crate::output::PollForActivityTaskOutput::workflow_execution): <p>The workflow execution that started this activity task.</p>
    ///   - [`activity_type(Option<ActivityType>)`](crate::output::PollForActivityTaskOutput::activity_type): <p>The type of this activity task.</p>
    ///   - [`input(Option<String>)`](crate::output::PollForActivityTaskOutput::input): <p>The inputs provided when the activity task was scheduled. The form of the input is user defined and should be meaningful to the activity implementation.</p>
    /// - On failure, responds with [`SdkError<PollForActivityTaskError>`](crate::error::PollForActivityTaskError)
    pub fn poll_for_activity_task(&self) -> crate::client::fluent_builders::PollForActivityTask {
        crate::client::fluent_builders::PollForActivityTask::new(self.handle.clone())
    }
}
