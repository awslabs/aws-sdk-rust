// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about Kafka Cluster to be used as source / target for replication.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct KafkaCluster {
    /// <p>Details of an Amazon MSK Cluster.</p>
    pub amazon_msk_cluster: ::std::option::Option<crate::types::AmazonMskCluster>,
    /// <p>Details of an Amazon VPC which has network connectivity to the Apache Kafka cluster.</p>
    pub vpc_config: ::std::option::Option<crate::types::KafkaClusterClientVpcConfig>,
}
impl KafkaCluster {
    /// <p>Details of an Amazon MSK Cluster.</p>
    pub fn amazon_msk_cluster(&self) -> ::std::option::Option<&crate::types::AmazonMskCluster> {
        self.amazon_msk_cluster.as_ref()
    }
    /// <p>Details of an Amazon VPC which has network connectivity to the Apache Kafka cluster.</p>
    pub fn vpc_config(&self) -> ::std::option::Option<&crate::types::KafkaClusterClientVpcConfig> {
        self.vpc_config.as_ref()
    }
}
impl KafkaCluster {
    /// Creates a new builder-style object to manufacture [`KafkaCluster`](crate::types::KafkaCluster).
    pub fn builder() -> crate::types::builders::KafkaClusterBuilder {
        crate::types::builders::KafkaClusterBuilder::default()
    }
}

/// A builder for [`KafkaCluster`](crate::types::KafkaCluster).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct KafkaClusterBuilder {
    pub(crate) amazon_msk_cluster: ::std::option::Option<crate::types::AmazonMskCluster>,
    pub(crate) vpc_config: ::std::option::Option<crate::types::KafkaClusterClientVpcConfig>,
}
impl KafkaClusterBuilder {
    /// <p>Details of an Amazon MSK Cluster.</p>
    /// This field is required.
    pub fn amazon_msk_cluster(mut self, input: crate::types::AmazonMskCluster) -> Self {
        self.amazon_msk_cluster = ::std::option::Option::Some(input);
        self
    }
    /// <p>Details of an Amazon MSK Cluster.</p>
    pub fn set_amazon_msk_cluster(mut self, input: ::std::option::Option<crate::types::AmazonMskCluster>) -> Self {
        self.amazon_msk_cluster = input;
        self
    }
    /// <p>Details of an Amazon MSK Cluster.</p>
    pub fn get_amazon_msk_cluster(&self) -> &::std::option::Option<crate::types::AmazonMskCluster> {
        &self.amazon_msk_cluster
    }
    /// <p>Details of an Amazon VPC which has network connectivity to the Apache Kafka cluster.</p>
    /// This field is required.
    pub fn vpc_config(mut self, input: crate::types::KafkaClusterClientVpcConfig) -> Self {
        self.vpc_config = ::std::option::Option::Some(input);
        self
    }
    /// <p>Details of an Amazon VPC which has network connectivity to the Apache Kafka cluster.</p>
    pub fn set_vpc_config(mut self, input: ::std::option::Option<crate::types::KafkaClusterClientVpcConfig>) -> Self {
        self.vpc_config = input;
        self
    }
    /// <p>Details of an Amazon VPC which has network connectivity to the Apache Kafka cluster.</p>
    pub fn get_vpc_config(&self) -> &::std::option::Option<crate::types::KafkaClusterClientVpcConfig> {
        &self.vpc_config
    }
    /// Consumes the builder and constructs a [`KafkaCluster`](crate::types::KafkaCluster).
    pub fn build(self) -> crate::types::KafkaCluster {
        crate::types::KafkaCluster {
            amazon_msk_cluster: self.amazon_msk_cluster,
            vpc_config: self.vpc_config,
        }
    }
}
