// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Details for client authentication using TLS.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct Tls {
    /// <p>List of ACM Certificate Authority ARNs.</p>
    #[doc(hidden)]
    pub certificate_authority_arn_list: std::option::Option<std::vec::Vec<std::string::String>>,
    /// <p>Specifies whether you want to turn on or turn off TLS authentication.</p>
    #[doc(hidden)]
    pub enabled: bool,
}
impl Tls {
    /// <p>List of ACM Certificate Authority ARNs.</p>
    pub fn certificate_authority_arn_list(&self) -> std::option::Option<&[std::string::String]> {
        self.certificate_authority_arn_list.as_deref()
    }
    /// <p>Specifies whether you want to turn on or turn off TLS authentication.</p>
    pub fn enabled(&self) -> bool {
        self.enabled
    }
}
impl Tls {
    /// Creates a new builder-style object to manufacture [`Tls`](crate::types::Tls).
    pub fn builder() -> crate::types::builders::TlsBuilder {
        crate::types::builders::TlsBuilder::default()
    }
}

/// A builder for [`Tls`](crate::types::Tls).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct TlsBuilder {
    pub(crate) certificate_authority_arn_list:
        std::option::Option<std::vec::Vec<std::string::String>>,
    pub(crate) enabled: std::option::Option<bool>,
}
impl TlsBuilder {
    /// Appends an item to `certificate_authority_arn_list`.
    ///
    /// To override the contents of this collection use [`set_certificate_authority_arn_list`](Self::set_certificate_authority_arn_list).
    ///
    /// <p>List of ACM Certificate Authority ARNs.</p>
    pub fn certificate_authority_arn_list(mut self, input: impl Into<std::string::String>) -> Self {
        let mut v = self.certificate_authority_arn_list.unwrap_or_default();
        v.push(input.into());
        self.certificate_authority_arn_list = Some(v);
        self
    }
    /// <p>List of ACM Certificate Authority ARNs.</p>
    pub fn set_certificate_authority_arn_list(
        mut self,
        input: std::option::Option<std::vec::Vec<std::string::String>>,
    ) -> Self {
        self.certificate_authority_arn_list = input;
        self
    }
    /// <p>Specifies whether you want to turn on or turn off TLS authentication.</p>
    pub fn enabled(mut self, input: bool) -> Self {
        self.enabled = Some(input);
        self
    }
    /// <p>Specifies whether you want to turn on or turn off TLS authentication.</p>
    pub fn set_enabled(mut self, input: std::option::Option<bool>) -> Self {
        self.enabled = input;
        self
    }
    /// Consumes the builder and constructs a [`Tls`](crate::types::Tls).
    pub fn build(self) -> crate::types::Tls {
        crate::types::Tls {
            certificate_authority_arn_list: self.certificate_authority_arn_list,
            enabled: self.enabled.unwrap_or_default(),
        }
    }
}
