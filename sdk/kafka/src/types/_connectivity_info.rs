// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about the broker access configuration.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ConnectivityInfo {
    /// <p>Public access control for brokers.</p>
    #[doc(hidden)]
    pub public_access: std::option::Option<crate::types::PublicAccess>,
}
impl ConnectivityInfo {
    /// <p>Public access control for brokers.</p>
    pub fn public_access(&self) -> std::option::Option<&crate::types::PublicAccess> {
        self.public_access.as_ref()
    }
}
impl ConnectivityInfo {
    /// Creates a new builder-style object to manufacture [`ConnectivityInfo`](crate::types::ConnectivityInfo).
    pub fn builder() -> crate::types::builders::ConnectivityInfoBuilder {
        crate::types::builders::ConnectivityInfoBuilder::default()
    }
}

/// A builder for [`ConnectivityInfo`](crate::types::ConnectivityInfo).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ConnectivityInfoBuilder {
    pub(crate) public_access: std::option::Option<crate::types::PublicAccess>,
}
impl ConnectivityInfoBuilder {
    /// <p>Public access control for brokers.</p>
    pub fn public_access(mut self, input: crate::types::PublicAccess) -> Self {
        self.public_access = Some(input);
        self
    }
    /// <p>Public access control for brokers.</p>
    pub fn set_public_access(
        mut self,
        input: std::option::Option<crate::types::PublicAccess>,
    ) -> Self {
        self.public_access = input;
        self
    }
    /// Consumes the builder and constructs a [`ConnectivityInfo`](crate::types::ConnectivityInfo).
    pub fn build(self) -> crate::types::ConnectivityInfo {
        crate::types::ConnectivityInfo {
            public_access: self.public_access,
        }
    }
}
