// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Configuration for specifying replicated topic names should be the same as their corresponding upstream topics or prefixed with source cluster alias.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ReplicationTopicNameConfiguration {
    /// <p>The type of replicated topic name.</p>
    pub r#type: ::std::option::Option<crate::types::ReplicationTopicNameConfigurationType>,
}
impl ReplicationTopicNameConfiguration {
    /// <p>The type of replicated topic name.</p>
    pub fn r#type(&self) -> ::std::option::Option<&crate::types::ReplicationTopicNameConfigurationType> {
        self.r#type.as_ref()
    }
}
impl ReplicationTopicNameConfiguration {
    /// Creates a new builder-style object to manufacture [`ReplicationTopicNameConfiguration`](crate::types::ReplicationTopicNameConfiguration).
    pub fn builder() -> crate::types::builders::ReplicationTopicNameConfigurationBuilder {
        crate::types::builders::ReplicationTopicNameConfigurationBuilder::default()
    }
}

/// A builder for [`ReplicationTopicNameConfiguration`](crate::types::ReplicationTopicNameConfiguration).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct ReplicationTopicNameConfigurationBuilder {
    pub(crate) r#type: ::std::option::Option<crate::types::ReplicationTopicNameConfigurationType>,
}
impl ReplicationTopicNameConfigurationBuilder {
    /// <p>The type of replicated topic name.</p>
    pub fn r#type(mut self, input: crate::types::ReplicationTopicNameConfigurationType) -> Self {
        self.r#type = ::std::option::Option::Some(input);
        self
    }
    /// <p>The type of replicated topic name.</p>
    pub fn set_type(mut self, input: ::std::option::Option<crate::types::ReplicationTopicNameConfigurationType>) -> Self {
        self.r#type = input;
        self
    }
    /// <p>The type of replicated topic name.</p>
    pub fn get_type(&self) -> &::std::option::Option<crate::types::ReplicationTopicNameConfigurationType> {
        &self.r#type
    }
    /// Consumes the builder and constructs a [`ReplicationTopicNameConfiguration`](crate::types::ReplicationTopicNameConfiguration).
    pub fn build(self) -> crate::types::ReplicationTopicNameConfiguration {
        crate::types::ReplicationTopicNameConfiguration { r#type: self.r#type }
    }
}
