// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Indicates whether you want to turn on or turn off the Node Exporter.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct NodeExporter {
    /// <p>Indicates whether you want to turn on or turn off the Node Exporter.</p>
    #[doc(hidden)]
    pub enabled_in_broker: bool,
}
impl NodeExporter {
    /// <p>Indicates whether you want to turn on or turn off the Node Exporter.</p>
    pub fn enabled_in_broker(&self) -> bool {
        self.enabled_in_broker
    }
}
impl NodeExporter {
    /// Creates a new builder-style object to manufacture [`NodeExporter`](crate::types::NodeExporter).
    pub fn builder() -> crate::types::builders::NodeExporterBuilder {
        crate::types::builders::NodeExporterBuilder::default()
    }
}

/// A builder for [`NodeExporter`](crate::types::NodeExporter).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct NodeExporterBuilder {
    pub(crate) enabled_in_broker: std::option::Option<bool>,
}
impl NodeExporterBuilder {
    /// <p>Indicates whether you want to turn on or turn off the Node Exporter.</p>
    pub fn enabled_in_broker(mut self, input: bool) -> Self {
        self.enabled_in_broker = Some(input);
        self
    }
    /// <p>Indicates whether you want to turn on or turn off the Node Exporter.</p>
    pub fn set_enabled_in_broker(mut self, input: std::option::Option<bool>) -> Self {
        self.enabled_in_broker = input;
        self
    }
    /// Consumes the builder and constructs a [`NodeExporter`](crate::types::NodeExporter).
    pub fn build(self) -> crate::types::NodeExporter {
        crate::types::NodeExporter {
            enabled_in_broker: self.enabled_in_broker.unwrap_or_default(),
        }
    }
}
