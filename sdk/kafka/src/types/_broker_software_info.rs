// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about the current software installed on the cluster.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct BrokerSoftwareInfo {
    /// <p>The Amazon Resource Name (ARN) of the configuration used for the cluster. This field isn't visible in this preview release.</p>
    #[doc(hidden)]
    pub configuration_arn: std::option::Option<std::string::String>,
    /// <p>The revision of the configuration to use. This field isn't visible in this preview release.</p>
    #[doc(hidden)]
    pub configuration_revision: i64,
    /// <p>The version of Apache Kafka.</p>
    #[doc(hidden)]
    pub kafka_version: std::option::Option<std::string::String>,
}
impl BrokerSoftwareInfo {
    /// <p>The Amazon Resource Name (ARN) of the configuration used for the cluster. This field isn't visible in this preview release.</p>
    pub fn configuration_arn(&self) -> std::option::Option<&str> {
        self.configuration_arn.as_deref()
    }
    /// <p>The revision of the configuration to use. This field isn't visible in this preview release.</p>
    pub fn configuration_revision(&self) -> i64 {
        self.configuration_revision
    }
    /// <p>The version of Apache Kafka.</p>
    pub fn kafka_version(&self) -> std::option::Option<&str> {
        self.kafka_version.as_deref()
    }
}
impl BrokerSoftwareInfo {
    /// Creates a new builder-style object to manufacture [`BrokerSoftwareInfo`](crate::types::BrokerSoftwareInfo).
    pub fn builder() -> crate::types::builders::BrokerSoftwareInfoBuilder {
        crate::types::builders::BrokerSoftwareInfoBuilder::default()
    }
}

/// A builder for [`BrokerSoftwareInfo`](crate::types::BrokerSoftwareInfo).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct BrokerSoftwareInfoBuilder {
    pub(crate) configuration_arn: std::option::Option<std::string::String>,
    pub(crate) configuration_revision: std::option::Option<i64>,
    pub(crate) kafka_version: std::option::Option<std::string::String>,
}
impl BrokerSoftwareInfoBuilder {
    /// <p>The Amazon Resource Name (ARN) of the configuration used for the cluster. This field isn't visible in this preview release.</p>
    pub fn configuration_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.configuration_arn = Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the configuration used for the cluster. This field isn't visible in this preview release.</p>
    pub fn set_configuration_arn(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.configuration_arn = input;
        self
    }
    /// <p>The revision of the configuration to use. This field isn't visible in this preview release.</p>
    pub fn configuration_revision(mut self, input: i64) -> Self {
        self.configuration_revision = Some(input);
        self
    }
    /// <p>The revision of the configuration to use. This field isn't visible in this preview release.</p>
    pub fn set_configuration_revision(mut self, input: std::option::Option<i64>) -> Self {
        self.configuration_revision = input;
        self
    }
    /// <p>The version of Apache Kafka.</p>
    pub fn kafka_version(mut self, input: impl Into<std::string::String>) -> Self {
        self.kafka_version = Some(input.into());
        self
    }
    /// <p>The version of Apache Kafka.</p>
    pub fn set_kafka_version(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.kafka_version = input;
        self
    }
    /// Consumes the builder and constructs a [`BrokerSoftwareInfo`](crate::types::BrokerSoftwareInfo).
    pub fn build(self) -> crate::types::BrokerSoftwareInfo {
        crate::types::BrokerSoftwareInfo {
            configuration_arn: self.configuration_arn,
            configuration_revision: self.configuration_revision.unwrap_or_default(),
            kafka_version: self.kafka_version,
        }
    }
}
