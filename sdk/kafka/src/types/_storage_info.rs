// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains information about storage volumes attached to MSK broker nodes.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct StorageInfo {
    /// <p>EBS volume information.</p>
    #[doc(hidden)]
    pub ebs_storage_info: std::option::Option<crate::types::EbsStorageInfo>,
}
impl StorageInfo {
    /// <p>EBS volume information.</p>
    pub fn ebs_storage_info(&self) -> std::option::Option<&crate::types::EbsStorageInfo> {
        self.ebs_storage_info.as_ref()
    }
}
impl StorageInfo {
    /// Creates a new builder-style object to manufacture [`StorageInfo`](crate::types::StorageInfo).
    pub fn builder() -> crate::types::builders::StorageInfoBuilder {
        crate::types::builders::StorageInfoBuilder::default()
    }
}

/// A builder for [`StorageInfo`](crate::types::StorageInfo).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct StorageInfoBuilder {
    pub(crate) ebs_storage_info: std::option::Option<crate::types::EbsStorageInfo>,
}
impl StorageInfoBuilder {
    /// <p>EBS volume information.</p>
    pub fn ebs_storage_info(mut self, input: crate::types::EbsStorageInfo) -> Self {
        self.ebs_storage_info = Some(input);
        self
    }
    /// <p>EBS volume information.</p>
    pub fn set_ebs_storage_info(
        mut self,
        input: std::option::Option<crate::types::EbsStorageInfo>,
    ) -> Self {
        self.ebs_storage_info = input;
        self
    }
    /// Consumes the builder and constructs a [`StorageInfo`](crate::types::StorageInfo).
    pub fn build(self) -> crate::types::StorageInfo {
        crate::types::StorageInfo {
            ebs_storage_info: self.ebs_storage_info,
        }
    }
}
