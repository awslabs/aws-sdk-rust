// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateConfiguration`](crate::client::fluent_builders::UpdateConfiguration) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`arn(impl Into<String>)`](crate::client::fluent_builders::UpdateConfiguration::arn) / [`set_arn(Option<String>)`](crate::client::fluent_builders::UpdateConfiguration::set_arn): <p>The Amazon Resource Name (ARN) of the configuration.</p>
    ///   - [`description(impl Into<String>)`](crate::client::fluent_builders::UpdateConfiguration::description) / [`set_description(Option<String>)`](crate::client::fluent_builders::UpdateConfiguration::set_description): <p>The description of the configuration revision.</p>
    ///   - [`server_properties(Blob)`](crate::client::fluent_builders::UpdateConfiguration::server_properties) / [`set_server_properties(Option<Blob>)`](crate::client::fluent_builders::UpdateConfiguration::set_server_properties): <p>Contents of the <filename>   server.properties  </filename> file. When using the API, you must ensure that the contents of the file are base64 encoded. When using the AWS Management Console, the SDK, or the AWS CLI, the contents of <filename>   server.properties  </filename> can be in plaintext.</p>
    /// - On success, responds with [`UpdateConfigurationOutput`](crate::output::UpdateConfigurationOutput) with field(s):
    ///   - [`arn(Option<String>)`](crate::output::UpdateConfigurationOutput::arn): <p>The Amazon Resource Name (ARN) of the configuration.</p>
    ///   - [`latest_revision(Option<ConfigurationRevision>)`](crate::output::UpdateConfigurationOutput::latest_revision): <p>Latest revision of the configuration.</p>
    /// - On failure, responds with [`SdkError<UpdateConfigurationError>`](crate::error::UpdateConfigurationError)
    pub fn update_configuration(&self) -> crate::client::fluent_builders::UpdateConfiguration {
        crate::client::fluent_builders::UpdateConfiguration::new(self.handle.clone())
    }
}
