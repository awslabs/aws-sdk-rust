// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateBrokerStorage`](crate::client::fluent_builders::UpdateBrokerStorage) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`cluster_arn(impl Into<String>)`](crate::client::fluent_builders::UpdateBrokerStorage::cluster_arn) / [`set_cluster_arn(Option<String>)`](crate::client::fluent_builders::UpdateBrokerStorage::set_cluster_arn): <p>The Amazon Resource Name (ARN) that uniquely identifies the cluster.</p>
    ///   - [`current_version(impl Into<String>)`](crate::client::fluent_builders::UpdateBrokerStorage::current_version) / [`set_current_version(Option<String>)`](crate::client::fluent_builders::UpdateBrokerStorage::set_current_version): <p>The version of cluster to update from. A successful operation will then generate a new version.</p>
    ///   - [`target_broker_ebs_volume_info(Vec<BrokerEbsVolumeInfo>)`](crate::client::fluent_builders::UpdateBrokerStorage::target_broker_ebs_volume_info) / [`set_target_broker_ebs_volume_info(Option<Vec<BrokerEbsVolumeInfo>>)`](crate::client::fluent_builders::UpdateBrokerStorage::set_target_broker_ebs_volume_info): <p>Describes the target volume size and the ID of the broker to apply the update to.</p>
    /// - On success, responds with [`UpdateBrokerStorageOutput`](crate::output::UpdateBrokerStorageOutput) with field(s):
    ///   - [`cluster_arn(Option<String>)`](crate::output::UpdateBrokerStorageOutput::cluster_arn): <p>The Amazon Resource Name (ARN) of the cluster.</p>
    ///   - [`cluster_operation_arn(Option<String>)`](crate::output::UpdateBrokerStorageOutput::cluster_operation_arn): <p>The Amazon Resource Name (ARN) of the cluster operation.</p>
    /// - On failure, responds with [`SdkError<UpdateBrokerStorageError>`](crate::error::UpdateBrokerStorageError)
    pub fn update_broker_storage(&self) -> crate::client::fluent_builders::UpdateBrokerStorage {
        crate::client::fluent_builders::UpdateBrokerStorage::new(self.handle.clone())
    }
}
