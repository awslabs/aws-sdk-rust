// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateConnectivity`](crate::client::fluent_builders::UpdateConnectivity) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`cluster_arn(impl Into<String>)`](crate::client::fluent_builders::UpdateConnectivity::cluster_arn) / [`set_cluster_arn(Option<String>)`](crate::client::fluent_builders::UpdateConnectivity::set_cluster_arn): <p>The Amazon Resource Name (ARN) of the configuration.</p>
    ///   - [`connectivity_info(ConnectivityInfo)`](crate::client::fluent_builders::UpdateConnectivity::connectivity_info) / [`set_connectivity_info(Option<ConnectivityInfo>)`](crate::client::fluent_builders::UpdateConnectivity::set_connectivity_info): <p>Information about the broker access configuration.</p>
    ///   - [`current_version(impl Into<String>)`](crate::client::fluent_builders::UpdateConnectivity::current_version) / [`set_current_version(Option<String>)`](crate::client::fluent_builders::UpdateConnectivity::set_current_version): <p>The version of the MSK cluster to update. Cluster versions aren't simple numbers. You can describe an MSK cluster to find its version. When this update operation is successful, it generates a new cluster version.</p>
    /// - On success, responds with [`UpdateConnectivityOutput`](crate::output::UpdateConnectivityOutput) with field(s):
    ///   - [`cluster_arn(Option<String>)`](crate::output::UpdateConnectivityOutput::cluster_arn): <p>The Amazon Resource Name (ARN) of the cluster.</p>
    ///   - [`cluster_operation_arn(Option<String>)`](crate::output::UpdateConnectivityOutput::cluster_operation_arn): <p>The Amazon Resource Name (ARN) of the cluster operation.</p>
    /// - On failure, responds with [`SdkError<UpdateConnectivityError>`](crate::error::UpdateConnectivityError)
    pub fn update_connectivity(&self) -> crate::client::fluent_builders::UpdateConnectivity {
        crate::client::fluent_builders::UpdateConnectivity::new(self.handle.clone())
    }
}
