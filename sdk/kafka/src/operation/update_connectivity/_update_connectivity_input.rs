// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Request body for UpdateConnectivity.
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct UpdateConnectivityInput {
    /// <p>The Amazon Resource Name (ARN) of the configuration.</p>
    #[doc(hidden)]
    pub cluster_arn: std::option::Option<std::string::String>,
    /// <p>Information about the broker access configuration.</p>
    #[doc(hidden)]
    pub connectivity_info: std::option::Option<crate::types::ConnectivityInfo>,
    /// <p>The version of the MSK cluster to update. Cluster versions aren't simple numbers. You can describe an MSK cluster to find its version. When this update operation is successful, it generates a new cluster version.</p>
    #[doc(hidden)]
    pub current_version: std::option::Option<std::string::String>,
}
impl UpdateConnectivityInput {
    /// <p>The Amazon Resource Name (ARN) of the configuration.</p>
    pub fn cluster_arn(&self) -> std::option::Option<&str> {
        self.cluster_arn.as_deref()
    }
    /// <p>Information about the broker access configuration.</p>
    pub fn connectivity_info(&self) -> std::option::Option<&crate::types::ConnectivityInfo> {
        self.connectivity_info.as_ref()
    }
    /// <p>The version of the MSK cluster to update. Cluster versions aren't simple numbers. You can describe an MSK cluster to find its version. When this update operation is successful, it generates a new cluster version.</p>
    pub fn current_version(&self) -> std::option::Option<&str> {
        self.current_version.as_deref()
    }
}
impl UpdateConnectivityInput {
    /// Creates a new builder-style object to manufacture [`UpdateConnectivityInput`](crate::operation::update_connectivity::UpdateConnectivityInput).
    pub fn builder(
    ) -> crate::operation::update_connectivity::builders::UpdateConnectivityInputBuilder {
        crate::operation::update_connectivity::builders::UpdateConnectivityInputBuilder::default()
    }
}

/// A builder for [`UpdateConnectivityInput`](crate::operation::update_connectivity::UpdateConnectivityInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct UpdateConnectivityInputBuilder {
    pub(crate) cluster_arn: std::option::Option<std::string::String>,
    pub(crate) connectivity_info: std::option::Option<crate::types::ConnectivityInfo>,
    pub(crate) current_version: std::option::Option<std::string::String>,
}
impl UpdateConnectivityInputBuilder {
    /// <p>The Amazon Resource Name (ARN) of the configuration.</p>
    pub fn cluster_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.cluster_arn = Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the configuration.</p>
    pub fn set_cluster_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.cluster_arn = input;
        self
    }
    /// <p>Information about the broker access configuration.</p>
    pub fn connectivity_info(mut self, input: crate::types::ConnectivityInfo) -> Self {
        self.connectivity_info = Some(input);
        self
    }
    /// <p>Information about the broker access configuration.</p>
    pub fn set_connectivity_info(
        mut self,
        input: std::option::Option<crate::types::ConnectivityInfo>,
    ) -> Self {
        self.connectivity_info = input;
        self
    }
    /// <p>The version of the MSK cluster to update. Cluster versions aren't simple numbers. You can describe an MSK cluster to find its version. When this update operation is successful, it generates a new cluster version.</p>
    pub fn current_version(mut self, input: impl Into<std::string::String>) -> Self {
        self.current_version = Some(input.into());
        self
    }
    /// <p>The version of the MSK cluster to update. Cluster versions aren't simple numbers. You can describe an MSK cluster to find its version. When this update operation is successful, it generates a new cluster version.</p>
    pub fn set_current_version(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.current_version = input;
        self
    }
    /// Consumes the builder and constructs a [`UpdateConnectivityInput`](crate::operation::update_connectivity::UpdateConnectivityInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::update_connectivity::UpdateConnectivityInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::update_connectivity::UpdateConnectivityInput {
                cluster_arn: self.cluster_arn,
                connectivity_info: self.connectivity_info,
                current_version: self.current_version,
            },
        )
    }
}
