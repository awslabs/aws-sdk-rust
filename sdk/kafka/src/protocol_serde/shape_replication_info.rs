// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_replication_info(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::types::ReplicationInfo,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.consumer_group_replication {
        #[allow(unused_mut)]
        let mut object_2 = object.key("consumerGroupReplication").start_object();
        crate::protocol_serde::shape_consumer_group_replication::ser_consumer_group_replication(&mut object_2, var_1)?;
        object_2.finish();
    }
    if let Some(var_3) = &input.source_kafka_cluster_arn {
        object.key("sourceKafkaClusterArn").string(var_3.as_str());
    }
    if let Some(var_4) = &input.target_compression_type {
        object.key("targetCompressionType").string(var_4.as_str());
    }
    if let Some(var_5) = &input.target_kafka_cluster_arn {
        object.key("targetKafkaClusterArn").string(var_5.as_str());
    }
    if let Some(var_6) = &input.topic_replication {
        #[allow(unused_mut)]
        let mut object_7 = object.key("topicReplication").start_object();
        crate::protocol_serde::shape_topic_replication::ser_topic_replication(&mut object_7, var_6)?;
        object_7.finish();
    }
    Ok(())
}
