// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_create_vpc_connection_input(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::operation::create_vpc_connection::CreateVpcConnectionInput,
) -> Result<(), ::aws_smithy_types::error::operation::SerializationError> {
    if let Some(var_1) = &input.authentication {
        object.key("authentication").string(var_1.as_str());
    }
    if let Some(var_2) = &input.client_subnets {
        let mut array_3 = object.key("clientSubnets").start_array();
        for item_4 in var_2 {
            {
                array_3.value().string(item_4.as_str());
            }
        }
        array_3.finish();
    }
    if let Some(var_5) = &input.security_groups {
        let mut array_6 = object.key("securityGroups").start_array();
        for item_7 in var_5 {
            {
                array_6.value().string(item_7.as_str());
            }
        }
        array_6.finish();
    }
    if let Some(var_8) = &input.tags {
        #[allow(unused_mut)]
        let mut object_9 = object.key("tags").start_object();
        for (key_10, value_11) in var_8 {
            {
                object_9.key(key_10.as_str()).string(value_11.as_str());
            }
        }
        object_9.finish();
    }
    if let Some(var_12) = &input.target_cluster_arn {
        object.key("targetClusterArn").string(var_12.as_str());
    }
    if let Some(var_13) = &input.vpc_id {
        object.key("vpcId").string(var_13.as_str());
    }
    Ok(())
}
