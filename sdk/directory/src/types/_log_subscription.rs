// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Represents a log subscription, which tracks real-time data from a chosen log group to a specified destination.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct LogSubscription {
    /// <p>Identifier (ID) of the directory that you want to associate with the log subscription.</p>
    #[doc(hidden)]
    pub directory_id: std::option::Option<std::string::String>,
    /// <p>The name of the log group.</p>
    #[doc(hidden)]
    pub log_group_name: std::option::Option<std::string::String>,
    /// <p>The date and time that the log subscription was created.</p>
    #[doc(hidden)]
    pub subscription_created_date_time: std::option::Option<aws_smithy_types::DateTime>,
}
impl LogSubscription {
    /// <p>Identifier (ID) of the directory that you want to associate with the log subscription.</p>
    pub fn directory_id(&self) -> std::option::Option<&str> {
        self.directory_id.as_deref()
    }
    /// <p>The name of the log group.</p>
    pub fn log_group_name(&self) -> std::option::Option<&str> {
        self.log_group_name.as_deref()
    }
    /// <p>The date and time that the log subscription was created.</p>
    pub fn subscription_created_date_time(
        &self,
    ) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.subscription_created_date_time.as_ref()
    }
}
impl LogSubscription {
    /// Creates a new builder-style object to manufacture [`LogSubscription`](crate::types::LogSubscription).
    pub fn builder() -> crate::types::builders::LogSubscriptionBuilder {
        crate::types::builders::LogSubscriptionBuilder::default()
    }
}

/// A builder for [`LogSubscription`](crate::types::LogSubscription).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct LogSubscriptionBuilder {
    pub(crate) directory_id: std::option::Option<std::string::String>,
    pub(crate) log_group_name: std::option::Option<std::string::String>,
    pub(crate) subscription_created_date_time: std::option::Option<aws_smithy_types::DateTime>,
}
impl LogSubscriptionBuilder {
    /// <p>Identifier (ID) of the directory that you want to associate with the log subscription.</p>
    pub fn directory_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.directory_id = Some(input.into());
        self
    }
    /// <p>Identifier (ID) of the directory that you want to associate with the log subscription.</p>
    pub fn set_directory_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.directory_id = input;
        self
    }
    /// <p>The name of the log group.</p>
    pub fn log_group_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.log_group_name = Some(input.into());
        self
    }
    /// <p>The name of the log group.</p>
    pub fn set_log_group_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.log_group_name = input;
        self
    }
    /// <p>The date and time that the log subscription was created.</p>
    pub fn subscription_created_date_time(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.subscription_created_date_time = Some(input);
        self
    }
    /// <p>The date and time that the log subscription was created.</p>
    pub fn set_subscription_created_date_time(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.subscription_created_date_time = input;
        self
    }
    /// Consumes the builder and constructs a [`LogSubscription`](crate::types::LogSubscription).
    pub fn build(self) -> crate::types::LogSubscription {
        crate::types::LogSubscription {
            directory_id: self.directory_id,
            log_group_name: self.log_group_name,
            subscription_created_date_time: self.subscription_created_date_time,
        }
    }
}
