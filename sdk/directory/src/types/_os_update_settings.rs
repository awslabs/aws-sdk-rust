// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p> OS version that the directory needs to be updated to. </p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct OsUpdateSettings {
    /// <p> OS version that the directory needs to be updated to. </p>
    #[doc(hidden)]
    pub os_version: std::option::Option<crate::types::OsVersion>,
}
impl OsUpdateSettings {
    /// <p> OS version that the directory needs to be updated to. </p>
    pub fn os_version(&self) -> std::option::Option<&crate::types::OsVersion> {
        self.os_version.as_ref()
    }
}
impl OsUpdateSettings {
    /// Creates a new builder-style object to manufacture [`OsUpdateSettings`](crate::types::OsUpdateSettings).
    pub fn builder() -> crate::types::builders::OsUpdateSettingsBuilder {
        crate::types::builders::OsUpdateSettingsBuilder::default()
    }
}

/// A builder for [`OsUpdateSettings`](crate::types::OsUpdateSettings).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct OsUpdateSettingsBuilder {
    pub(crate) os_version: std::option::Option<crate::types::OsVersion>,
}
impl OsUpdateSettingsBuilder {
    /// <p> OS version that the directory needs to be updated to. </p>
    pub fn os_version(mut self, input: crate::types::OsVersion) -> Self {
        self.os_version = Some(input);
        self
    }
    /// <p> OS version that the directory needs to be updated to. </p>
    pub fn set_os_version(mut self, input: std::option::Option<crate::types::OsVersion>) -> Self {
        self.os_version = input;
        self
    }
    /// Consumes the builder and constructs a [`OsUpdateSettings`](crate::types::OsUpdateSettings).
    pub fn build(self) -> crate::types::OsUpdateSettings {
        crate::types::OsUpdateSettings {
            os_version: self.os_version,
        }
    }
}
