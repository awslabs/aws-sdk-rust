// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeConditionalForwarders`](crate::operation::describe_conditional_forwarders::builders::DescribeConditionalForwardersFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`directory_id(impl Into<String>)`](crate::operation::describe_conditional_forwarders::builders::DescribeConditionalForwardersFluentBuilder::directory_id) / [`set_directory_id(Option<String>)`](crate::operation::describe_conditional_forwarders::builders::DescribeConditionalForwardersFluentBuilder::set_directory_id): <p>The directory ID for which to get the list of associated conditional forwarders.</p>
    ///   - [`remote_domain_names(Vec<String>)`](crate::operation::describe_conditional_forwarders::builders::DescribeConditionalForwardersFluentBuilder::remote_domain_names) / [`set_remote_domain_names(Option<Vec<String>>)`](crate::operation::describe_conditional_forwarders::builders::DescribeConditionalForwardersFluentBuilder::set_remote_domain_names): <p>The fully qualified domain names (FQDN) of the remote domains for which to get the list of associated conditional forwarders. If this member is null, all conditional forwarders are returned.</p>
    /// - On success, responds with [`DescribeConditionalForwardersOutput`](crate::operation::describe_conditional_forwarders::DescribeConditionalForwardersOutput) with field(s):
    ///   - [`conditional_forwarders(Option<Vec<ConditionalForwarder>>)`](crate::operation::describe_conditional_forwarders::DescribeConditionalForwardersOutput::conditional_forwarders): <p>The list of conditional forwarders that have been created.</p>
    /// - On failure, responds with [`SdkError<DescribeConditionalForwardersError>`](crate::operation::describe_conditional_forwarders::DescribeConditionalForwardersError)
    pub fn describe_conditional_forwarders(&self) -> crate::operation::describe_conditional_forwarders::builders::DescribeConditionalForwardersFluentBuilder{
        crate::operation::describe_conditional_forwarders::builders::DescribeConditionalForwardersFluentBuilder::new(self.handle.clone())
    }
}
