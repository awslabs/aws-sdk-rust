// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`RegisterCertificate`](crate::operation::register_certificate::builders::RegisterCertificateFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`directory_id(impl Into<String>)`](crate::operation::register_certificate::builders::RegisterCertificateFluentBuilder::directory_id) / [`set_directory_id(Option<String>)`](crate::operation::register_certificate::builders::RegisterCertificateFluentBuilder::set_directory_id):<br>required: **true**<br><p>The identifier of the directory.</p><br>
    ///   - [`certificate_data(impl Into<String>)`](crate::operation::register_certificate::builders::RegisterCertificateFluentBuilder::certificate_data) / [`set_certificate_data(Option<String>)`](crate::operation::register_certificate::builders::RegisterCertificateFluentBuilder::set_certificate_data):<br>required: **true**<br><p>The certificate PEM string that needs to be registered.</p><br>
    ///   - [`r#type(CertificateType)`](crate::operation::register_certificate::builders::RegisterCertificateFluentBuilder::type) / [`set_type(Option<CertificateType>)`](crate::operation::register_certificate::builders::RegisterCertificateFluentBuilder::set_type):<br>required: **false**<br><p>The function that the registered certificate performs. Valid values include <code>ClientLDAPS</code> or <code>ClientCertAuth</code>. The default value is <code>ClientLDAPS</code>.</p><br>
    ///   - [`client_cert_auth_settings(ClientCertAuthSettings)`](crate::operation::register_certificate::builders::RegisterCertificateFluentBuilder::client_cert_auth_settings) / [`set_client_cert_auth_settings(Option<ClientCertAuthSettings>)`](crate::operation::register_certificate::builders::RegisterCertificateFluentBuilder::set_client_cert_auth_settings):<br>required: **false**<br><p>A <code>ClientCertAuthSettings</code> object that contains client certificate authentication settings.</p><br>
    /// - On success, responds with [`RegisterCertificateOutput`](crate::operation::register_certificate::RegisterCertificateOutput) with field(s):
    ///   - [`certificate_id(Option<String>)`](crate::operation::register_certificate::RegisterCertificateOutput::certificate_id): <p>The identifier of the certificate.</p>
    /// - On failure, responds with [`SdkError<RegisterCertificateError>`](crate::operation::register_certificate::RegisterCertificateError)
    pub fn register_certificate(&self) -> crate::operation::register_certificate::builders::RegisterCertificateFluentBuilder {
        crate::operation::register_certificate::builders::RegisterCertificateFluentBuilder::new(self.handle.clone())
    }
}
