// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeEventTopics`](crate::operation::describe_event_topics::builders::DescribeEventTopicsFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`directory_id(impl Into<String>)`](crate::operation::describe_event_topics::builders::DescribeEventTopicsFluentBuilder::directory_id) / [`set_directory_id(Option<String>)`](crate::operation::describe_event_topics::builders::DescribeEventTopicsFluentBuilder::set_directory_id):<br>required: **false**<br><p>The Directory ID for which to get the list of associated Amazon SNS topics. If this member is null, associations for all Directory IDs are returned.</p><br>
    ///   - [`topic_names(impl Into<String>)`](crate::operation::describe_event_topics::builders::DescribeEventTopicsFluentBuilder::topic_names) / [`set_topic_names(Option<Vec::<String>>)`](crate::operation::describe_event_topics::builders::DescribeEventTopicsFluentBuilder::set_topic_names):<br>required: **false**<br><p>A list of Amazon SNS topic names for which to obtain the information. If this member is null, all associations for the specified Directory ID are returned.</p>  <p>An empty list results in an <code>InvalidParameterException</code> being thrown.</p><br>
    /// - On success, responds with [`DescribeEventTopicsOutput`](crate::operation::describe_event_topics::DescribeEventTopicsOutput) with field(s):
    ///   - [`event_topics(Option<Vec::<EventTopic>>)`](crate::operation::describe_event_topics::DescribeEventTopicsOutput::event_topics): <p>A list of Amazon SNS topic names that receive status messages from the specified Directory ID.</p>
    /// - On failure, responds with [`SdkError<DescribeEventTopicsError>`](crate::operation::describe_event_topics::DescribeEventTopicsError)
    pub fn describe_event_topics(&self) -> crate::operation::describe_event_topics::builders::DescribeEventTopicsFluentBuilder {
        crate::operation::describe_event_topics::builders::DescribeEventTopicsFluentBuilder::new(self.handle.clone())
    }
}
