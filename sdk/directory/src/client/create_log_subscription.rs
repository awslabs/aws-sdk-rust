// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateLogSubscription`](crate::operation::create_log_subscription::builders::CreateLogSubscriptionFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`directory_id(impl Into<String>)`](crate::operation::create_log_subscription::builders::CreateLogSubscriptionFluentBuilder::directory_id) / [`set_directory_id(Option<String>)`](crate::operation::create_log_subscription::builders::CreateLogSubscriptionFluentBuilder::set_directory_id): <p>Identifier of the directory to which you want to subscribe and receive real-time logs to your specified CloudWatch log group.</p>
    ///   - [`log_group_name(impl Into<String>)`](crate::operation::create_log_subscription::builders::CreateLogSubscriptionFluentBuilder::log_group_name) / [`set_log_group_name(Option<String>)`](crate::operation::create_log_subscription::builders::CreateLogSubscriptionFluentBuilder::set_log_group_name): <p>The name of the CloudWatch log group where the real-time domain controller logs are forwarded.</p>
    /// - On success, responds with [`CreateLogSubscriptionOutput`](crate::operation::create_log_subscription::CreateLogSubscriptionOutput)
    /// - On failure, responds with [`SdkError<CreateLogSubscriptionError>`](crate::operation::create_log_subscription::CreateLogSubscriptionError)
    pub fn create_log_subscription(
        &self,
    ) -> crate::operation::create_log_subscription::builders::CreateLogSubscriptionFluentBuilder
    {
        crate::operation::create_log_subscription::builders::CreateLogSubscriptionFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
