// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`StartSchemaExtension`](crate::operation::start_schema_extension::builders::StartSchemaExtensionFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`directory_id(impl Into<String>)`](crate::operation::start_schema_extension::builders::StartSchemaExtensionFluentBuilder::directory_id) / [`set_directory_id(Option<String>)`](crate::operation::start_schema_extension::builders::StartSchemaExtensionFluentBuilder::set_directory_id):<br>required: **true**<br><p>The identifier of the directory for which the schema extension will be applied to.</p><br>
    ///   - [`create_snapshot_before_schema_extension(bool)`](crate::operation::start_schema_extension::builders::StartSchemaExtensionFluentBuilder::create_snapshot_before_schema_extension) / [`set_create_snapshot_before_schema_extension(Option<bool>)`](crate::operation::start_schema_extension::builders::StartSchemaExtensionFluentBuilder::set_create_snapshot_before_schema_extension):<br>required: **true**<br><p>If true, creates a snapshot of the directory before applying the schema extension.</p><br>
    ///   - [`ldif_content(impl Into<String>)`](crate::operation::start_schema_extension::builders::StartSchemaExtensionFluentBuilder::ldif_content) / [`set_ldif_content(Option<String>)`](crate::operation::start_schema_extension::builders::StartSchemaExtensionFluentBuilder::set_ldif_content):<br>required: **true**<br><p>The LDIF file represented as a string. To construct the LdifContent string, precede each line as it would be formatted in an ldif file with \n. See the example request below for more details. The file size can be no larger than 1MB.</p><br>
    ///   - [`description(impl Into<String>)`](crate::operation::start_schema_extension::builders::StartSchemaExtensionFluentBuilder::description) / [`set_description(Option<String>)`](crate::operation::start_schema_extension::builders::StartSchemaExtensionFluentBuilder::set_description):<br>required: **true**<br><p>A description of the schema extension.</p><br>
    /// - On success, responds with [`StartSchemaExtensionOutput`](crate::operation::start_schema_extension::StartSchemaExtensionOutput) with field(s):
    ///   - [`schema_extension_id(Option<String>)`](crate::operation::start_schema_extension::StartSchemaExtensionOutput::schema_extension_id): <p>The identifier of the schema extension that will be applied.</p>
    /// - On failure, responds with [`SdkError<StartSchemaExtensionError>`](crate::operation::start_schema_extension::StartSchemaExtensionError)
    pub fn start_schema_extension(&self) -> crate::operation::start_schema_extension::builders::StartSchemaExtensionFluentBuilder {
        crate::operation::start_schema_extension::builders::StartSchemaExtensionFluentBuilder::new(self.handle.clone())
    }
}
