// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListLogSubscriptions`](crate::client::fluent_builders::ListLogSubscriptions) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListLogSubscriptions::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`directory_id(impl Into<String>)`](crate::client::fluent_builders::ListLogSubscriptions::directory_id) / [`set_directory_id(Option<String>)`](crate::client::fluent_builders::ListLogSubscriptions::set_directory_id): <p>If a <i>DirectoryID</i> is provided, lists only the log subscription associated with that directory. If no <i>DirectoryId</i> is provided, lists all log subscriptions associated with your Amazon Web Services account. If there are no log subscriptions for the Amazon Web Services account or the directory, an empty list will be returned.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListLogSubscriptions::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListLogSubscriptions::set_next_token): <p>The token for the next set of items to return.</p>
    ///   - [`limit(i32)`](crate::client::fluent_builders::ListLogSubscriptions::limit) / [`set_limit(Option<i32>)`](crate::client::fluent_builders::ListLogSubscriptions::set_limit): <p>The maximum number of items returned.</p>
    /// - On success, responds with [`ListLogSubscriptionsOutput`](crate::output::ListLogSubscriptionsOutput) with field(s):
    ///   - [`log_subscriptions(Option<Vec<LogSubscription>>)`](crate::output::ListLogSubscriptionsOutput::log_subscriptions): <p>A list of active <code>LogSubscription</code> objects for calling the Amazon Web Services account.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListLogSubscriptionsOutput::next_token): <p>The token for the next set of items to return.</p>
    /// - On failure, responds with [`SdkError<ListLogSubscriptionsError>`](crate::error::ListLogSubscriptionsError)
    pub fn list_log_subscriptions(&self) -> crate::client::fluent_builders::ListLogSubscriptions {
        crate::client::fluent_builders::ListLogSubscriptions::new(self.handle.clone())
    }
}
