// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct CancelSchemaExtensionInput {
    /// <p>The identifier of the directory whose schema extension will be canceled.</p>
    #[doc(hidden)]
    pub directory_id: std::option::Option<std::string::String>,
    /// <p>The identifier of the schema extension that will be canceled.</p>
    #[doc(hidden)]
    pub schema_extension_id: std::option::Option<std::string::String>,
}
impl CancelSchemaExtensionInput {
    /// <p>The identifier of the directory whose schema extension will be canceled.</p>
    pub fn directory_id(&self) -> std::option::Option<&str> {
        self.directory_id.as_deref()
    }
    /// <p>The identifier of the schema extension that will be canceled.</p>
    pub fn schema_extension_id(&self) -> std::option::Option<&str> {
        self.schema_extension_id.as_deref()
    }
}
impl CancelSchemaExtensionInput {
    /// Creates a new builder-style object to manufacture [`CancelSchemaExtensionInput`](crate::operation::cancel_schema_extension::CancelSchemaExtensionInput).
    pub fn builder(
    ) -> crate::operation::cancel_schema_extension::builders::CancelSchemaExtensionInputBuilder
    {
        crate::operation::cancel_schema_extension::builders::CancelSchemaExtensionInputBuilder::default()
    }
}

/// A builder for [`CancelSchemaExtensionInput`](crate::operation::cancel_schema_extension::CancelSchemaExtensionInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct CancelSchemaExtensionInputBuilder {
    pub(crate) directory_id: std::option::Option<std::string::String>,
    pub(crate) schema_extension_id: std::option::Option<std::string::String>,
}
impl CancelSchemaExtensionInputBuilder {
    /// <p>The identifier of the directory whose schema extension will be canceled.</p>
    pub fn directory_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.directory_id = Some(input.into());
        self
    }
    /// <p>The identifier of the directory whose schema extension will be canceled.</p>
    pub fn set_directory_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.directory_id = input;
        self
    }
    /// <p>The identifier of the schema extension that will be canceled.</p>
    pub fn schema_extension_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.schema_extension_id = Some(input.into());
        self
    }
    /// <p>The identifier of the schema extension that will be canceled.</p>
    pub fn set_schema_extension_id(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.schema_extension_id = input;
        self
    }
    /// Consumes the builder and constructs a [`CancelSchemaExtensionInput`](crate::operation::cancel_schema_extension::CancelSchemaExtensionInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::cancel_schema_extension::CancelSchemaExtensionInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::cancel_schema_extension::CancelSchemaExtensionInput {
                directory_id: self.directory_id,
                schema_extension_id: self.schema_extension_id,
            },
        )
    }
}
