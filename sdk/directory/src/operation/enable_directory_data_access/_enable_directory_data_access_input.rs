// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct EnableDirectoryDataAccessInput {
    /// <p>The directory identifier.</p>
    pub directory_id: ::std::option::Option<::std::string::String>,
}
impl EnableDirectoryDataAccessInput {
    /// <p>The directory identifier.</p>
    pub fn directory_id(&self) -> ::std::option::Option<&str> {
        self.directory_id.as_deref()
    }
}
impl EnableDirectoryDataAccessInput {
    /// Creates a new builder-style object to manufacture [`EnableDirectoryDataAccessInput`](crate::operation::enable_directory_data_access::EnableDirectoryDataAccessInput).
    pub fn builder() -> crate::operation::enable_directory_data_access::builders::EnableDirectoryDataAccessInputBuilder {
        crate::operation::enable_directory_data_access::builders::EnableDirectoryDataAccessInputBuilder::default()
    }
}

/// A builder for [`EnableDirectoryDataAccessInput`](crate::operation::enable_directory_data_access::EnableDirectoryDataAccessInput).
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
#[non_exhaustive]
pub struct EnableDirectoryDataAccessInputBuilder {
    pub(crate) directory_id: ::std::option::Option<::std::string::String>,
}
impl EnableDirectoryDataAccessInputBuilder {
    /// <p>The directory identifier.</p>
    /// This field is required.
    pub fn directory_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.directory_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The directory identifier.</p>
    pub fn set_directory_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.directory_id = input;
        self
    }
    /// <p>The directory identifier.</p>
    pub fn get_directory_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.directory_id
    }
    /// Consumes the builder and constructs a [`EnableDirectoryDataAccessInput`](crate::operation::enable_directory_data_access::EnableDirectoryDataAccessInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::enable_directory_data_access::EnableDirectoryDataAccessInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::enable_directory_data_access::EnableDirectoryDataAccessInput {
            directory_id: self.directory_id,
        })
    }
}
