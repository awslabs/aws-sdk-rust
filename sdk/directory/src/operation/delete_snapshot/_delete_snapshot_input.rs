// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains the inputs for the <code>DeleteSnapshot</code> operation.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DeleteSnapshotInput {
    /// <p>The identifier of the directory snapshot to be deleted.</p>
    #[doc(hidden)]
    pub snapshot_id: std::option::Option<std::string::String>,
}
impl DeleteSnapshotInput {
    /// <p>The identifier of the directory snapshot to be deleted.</p>
    pub fn snapshot_id(&self) -> std::option::Option<&str> {
        self.snapshot_id.as_deref()
    }
}
impl DeleteSnapshotInput {
    /// Creates a new builder-style object to manufacture [`DeleteSnapshotInput`](crate::operation::delete_snapshot::DeleteSnapshotInput).
    pub fn builder() -> crate::operation::delete_snapshot::builders::DeleteSnapshotInputBuilder {
        crate::operation::delete_snapshot::builders::DeleteSnapshotInputBuilder::default()
    }
}

/// A builder for [`DeleteSnapshotInput`](crate::operation::delete_snapshot::DeleteSnapshotInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DeleteSnapshotInputBuilder {
    pub(crate) snapshot_id: std::option::Option<std::string::String>,
}
impl DeleteSnapshotInputBuilder {
    /// <p>The identifier of the directory snapshot to be deleted.</p>
    pub fn snapshot_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.snapshot_id = Some(input.into());
        self
    }
    /// <p>The identifier of the directory snapshot to be deleted.</p>
    pub fn set_snapshot_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.snapshot_id = input;
        self
    }
    /// Consumes the builder and constructs a [`DeleteSnapshotInput`](crate::operation::delete_snapshot::DeleteSnapshotInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::delete_snapshot::DeleteSnapshotInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(crate::operation::delete_snapshot::DeleteSnapshotInput {
            snapshot_id: self.snapshot_id,
        })
    }
}
