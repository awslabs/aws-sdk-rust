// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The result of a DescribeConditionalForwarder request.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DescribeConditionalForwardersOutput {
    /// <p>The list of conditional forwarders that have been created.</p>
    pub conditional_forwarders: ::std::option::Option<::std::vec::Vec<crate::types::ConditionalForwarder>>,
    _request_id: Option<String>,
}
impl DescribeConditionalForwardersOutput {
    /// <p>The list of conditional forwarders that have been created.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.conditional_forwarders.is_none()`.
    pub fn conditional_forwarders(&self) -> &[crate::types::ConditionalForwarder] {
        self.conditional_forwarders.as_deref().unwrap_or_default()
    }
}
impl ::aws_http::request_id::RequestId for DescribeConditionalForwardersOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl DescribeConditionalForwardersOutput {
    /// Creates a new builder-style object to manufacture [`DescribeConditionalForwardersOutput`](crate::operation::describe_conditional_forwarders::DescribeConditionalForwardersOutput).
    pub fn builder() -> crate::operation::describe_conditional_forwarders::builders::DescribeConditionalForwardersOutputBuilder {
        crate::operation::describe_conditional_forwarders::builders::DescribeConditionalForwardersOutputBuilder::default()
    }
}

/// A builder for [`DescribeConditionalForwardersOutput`](crate::operation::describe_conditional_forwarders::DescribeConditionalForwardersOutput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DescribeConditionalForwardersOutputBuilder {
    pub(crate) conditional_forwarders: ::std::option::Option<::std::vec::Vec<crate::types::ConditionalForwarder>>,
    _request_id: Option<String>,
}
impl DescribeConditionalForwardersOutputBuilder {
    /// Appends an item to `conditional_forwarders`.
    ///
    /// To override the contents of this collection use [`set_conditional_forwarders`](Self::set_conditional_forwarders).
    ///
    /// <p>The list of conditional forwarders that have been created.</p>
    pub fn conditional_forwarders(mut self, input: crate::types::ConditionalForwarder) -> Self {
        let mut v = self.conditional_forwarders.unwrap_or_default();
        v.push(input);
        self.conditional_forwarders = ::std::option::Option::Some(v);
        self
    }
    /// <p>The list of conditional forwarders that have been created.</p>
    pub fn set_conditional_forwarders(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::ConditionalForwarder>>) -> Self {
        self.conditional_forwarders = input;
        self
    }
    /// <p>The list of conditional forwarders that have been created.</p>
    pub fn get_conditional_forwarders(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::ConditionalForwarder>> {
        &self.conditional_forwarders
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`DescribeConditionalForwardersOutput`](crate::operation::describe_conditional_forwarders::DescribeConditionalForwardersOutput).
    pub fn build(self) -> crate::operation::describe_conditional_forwarders::DescribeConditionalForwardersOutput {
        crate::operation::describe_conditional_forwarders::DescribeConditionalForwardersOutput {
            conditional_forwarders: self.conditional_forwarders,
            _request_id: self._request_id,
        }
    }
}
