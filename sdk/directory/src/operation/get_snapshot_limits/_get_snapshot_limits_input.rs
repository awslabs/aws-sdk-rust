// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains the inputs for the <code>GetSnapshotLimits</code> operation.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GetSnapshotLimitsInput {
    /// <p>Contains the identifier of the directory to obtain the limits for.</p>
    pub directory_id: ::std::option::Option<::std::string::String>,
}
impl GetSnapshotLimitsInput {
    /// <p>Contains the identifier of the directory to obtain the limits for.</p>
    pub fn directory_id(&self) -> ::std::option::Option<&str> {
        self.directory_id.as_deref()
    }
}
impl GetSnapshotLimitsInput {
    /// Creates a new builder-style object to manufacture [`GetSnapshotLimitsInput`](crate::operation::get_snapshot_limits::GetSnapshotLimitsInput).
    pub fn builder() -> crate::operation::get_snapshot_limits::builders::GetSnapshotLimitsInputBuilder {
        crate::operation::get_snapshot_limits::builders::GetSnapshotLimitsInputBuilder::default()
    }
}

/// A builder for [`GetSnapshotLimitsInput`](crate::operation::get_snapshot_limits::GetSnapshotLimitsInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct GetSnapshotLimitsInputBuilder {
    pub(crate) directory_id: ::std::option::Option<::std::string::String>,
}
impl GetSnapshotLimitsInputBuilder {
    /// <p>Contains the identifier of the directory to obtain the limits for.</p>
    /// This field is required.
    pub fn directory_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.directory_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Contains the identifier of the directory to obtain the limits for.</p>
    pub fn set_directory_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.directory_id = input;
        self
    }
    /// <p>Contains the identifier of the directory to obtain the limits for.</p>
    pub fn get_directory_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.directory_id
    }
    /// Consumes the builder and constructs a [`GetSnapshotLimitsInput`](crate::operation::get_snapshot_limits::GetSnapshotLimitsInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::get_snapshot_limits::GetSnapshotLimitsInput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::operation::get_snapshot_limits::GetSnapshotLimitsInput {
            directory_id: self.directory_id,
        })
    }
}
