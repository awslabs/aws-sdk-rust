// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DescribeUpdateDirectoryInput {
    /// <p> The unique identifier of the directory. </p>
    #[doc(hidden)]
    pub directory_id: std::option::Option<std::string::String>,
    /// <p> The type of updates you want to describe for the directory. </p>
    #[doc(hidden)]
    pub update_type: std::option::Option<crate::types::UpdateType>,
    /// <p> The name of the Region. </p>
    #[doc(hidden)]
    pub region_name: std::option::Option<std::string::String>,
    /// <p> The <code>DescribeUpdateDirectoryResult</code>. NextToken value from a previous call to <code>DescribeUpdateDirectory</code>. Pass null if this is the first call. </p>
    #[doc(hidden)]
    pub next_token: std::option::Option<std::string::String>,
}
impl DescribeUpdateDirectoryInput {
    /// <p> The unique identifier of the directory. </p>
    pub fn directory_id(&self) -> std::option::Option<&str> {
        self.directory_id.as_deref()
    }
    /// <p> The type of updates you want to describe for the directory. </p>
    pub fn update_type(&self) -> std::option::Option<&crate::types::UpdateType> {
        self.update_type.as_ref()
    }
    /// <p> The name of the Region. </p>
    pub fn region_name(&self) -> std::option::Option<&str> {
        self.region_name.as_deref()
    }
    /// <p> The <code>DescribeUpdateDirectoryResult</code>. NextToken value from a previous call to <code>DescribeUpdateDirectory</code>. Pass null if this is the first call. </p>
    pub fn next_token(&self) -> std::option::Option<&str> {
        self.next_token.as_deref()
    }
}
impl DescribeUpdateDirectoryInput {
    /// Creates a new builder-style object to manufacture [`DescribeUpdateDirectoryInput`](crate::operation::describe_update_directory::DescribeUpdateDirectoryInput).
    pub fn builder(
    ) -> crate::operation::describe_update_directory::builders::DescribeUpdateDirectoryInputBuilder
    {
        crate::operation::describe_update_directory::builders::DescribeUpdateDirectoryInputBuilder::default()
    }
}

/// A builder for [`DescribeUpdateDirectoryInput`](crate::operation::describe_update_directory::DescribeUpdateDirectoryInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DescribeUpdateDirectoryInputBuilder {
    pub(crate) directory_id: std::option::Option<std::string::String>,
    pub(crate) update_type: std::option::Option<crate::types::UpdateType>,
    pub(crate) region_name: std::option::Option<std::string::String>,
    pub(crate) next_token: std::option::Option<std::string::String>,
}
impl DescribeUpdateDirectoryInputBuilder {
    /// <p> The unique identifier of the directory. </p>
    pub fn directory_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.directory_id = Some(input.into());
        self
    }
    /// <p> The unique identifier of the directory. </p>
    pub fn set_directory_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.directory_id = input;
        self
    }
    /// <p> The type of updates you want to describe for the directory. </p>
    pub fn update_type(mut self, input: crate::types::UpdateType) -> Self {
        self.update_type = Some(input);
        self
    }
    /// <p> The type of updates you want to describe for the directory. </p>
    pub fn set_update_type(mut self, input: std::option::Option<crate::types::UpdateType>) -> Self {
        self.update_type = input;
        self
    }
    /// <p> The name of the Region. </p>
    pub fn region_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.region_name = Some(input.into());
        self
    }
    /// <p> The name of the Region. </p>
    pub fn set_region_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.region_name = input;
        self
    }
    /// <p> The <code>DescribeUpdateDirectoryResult</code>. NextToken value from a previous call to <code>DescribeUpdateDirectory</code>. Pass null if this is the first call. </p>
    pub fn next_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.next_token = Some(input.into());
        self
    }
    /// <p> The <code>DescribeUpdateDirectoryResult</code>. NextToken value from a previous call to <code>DescribeUpdateDirectory</code>. Pass null if this is the first call. </p>
    pub fn set_next_token(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// Consumes the builder and constructs a [`DescribeUpdateDirectoryInput`](crate::operation::describe_update_directory::DescribeUpdateDirectoryInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::describe_update_directory::DescribeUpdateDirectoryInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::describe_update_directory::DescribeUpdateDirectoryInput {
                directory_id: self.directory_id,
                update_type: self.update_type,
                region_name: self.region_name,
                next_token: self.next_token,
            },
        )
    }
}
