// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// GetCampaignStateBatchRequest
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GetCampaignStateBatchInput {
    /// List of CampaignId
    #[doc(hidden)]
    pub campaign_ids: std::option::Option<std::vec::Vec<std::string::String>>,
}
impl GetCampaignStateBatchInput {
    /// List of CampaignId
    pub fn campaign_ids(&self) -> std::option::Option<&[std::string::String]> {
        self.campaign_ids.as_deref()
    }
}
impl GetCampaignStateBatchInput {
    /// Creates a new builder-style object to manufacture [`GetCampaignStateBatchInput`](crate::operation::get_campaign_state_batch::GetCampaignStateBatchInput).
    pub fn builder(
    ) -> crate::operation::get_campaign_state_batch::builders::GetCampaignStateBatchInputBuilder
    {
        crate::operation::get_campaign_state_batch::builders::GetCampaignStateBatchInputBuilder::default()
    }
}

/// A builder for [`GetCampaignStateBatchInput`](crate::operation::get_campaign_state_batch::GetCampaignStateBatchInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct GetCampaignStateBatchInputBuilder {
    pub(crate) campaign_ids: std::option::Option<std::vec::Vec<std::string::String>>,
}
impl GetCampaignStateBatchInputBuilder {
    /// Appends an item to `campaign_ids`.
    ///
    /// To override the contents of this collection use [`set_campaign_ids`](Self::set_campaign_ids).
    ///
    /// List of CampaignId
    pub fn campaign_ids(mut self, input: impl Into<std::string::String>) -> Self {
        let mut v = self.campaign_ids.unwrap_or_default();
        v.push(input.into());
        self.campaign_ids = Some(v);
        self
    }
    /// List of CampaignId
    pub fn set_campaign_ids(
        mut self,
        input: std::option::Option<std::vec::Vec<std::string::String>>,
    ) -> Self {
        self.campaign_ids = input;
        self
    }
    /// Consumes the builder and constructs a [`GetCampaignStateBatchInput`](crate::operation::get_campaign_state_batch::GetCampaignStateBatchInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::get_campaign_state_batch::GetCampaignStateBatchInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::get_campaign_state_batch::GetCampaignStateBatchInput {
                campaign_ids: self.campaign_ids,
            },
        )
    }
}
