// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// UpdateCampaignOutboundCallConfigRequest
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct UpdateCampaignOutboundCallConfigInput {
    /// Identifier representing a Campaign
    pub id: ::std::option::Option<::std::string::String>,
    /// The identifier of the contact flow for the outbound call.
    pub connect_contact_flow_id: ::std::option::Option<::std::string::String>,
    /// The phone number associated with the Amazon Connect instance, in E.164 format. If you do not specify a source phone number, you must specify a queue.
    pub connect_source_phone_number: ::std::option::Option<::std::string::String>,
    /// Answering Machine Detection config
    pub answer_machine_detection_config: ::std::option::Option<crate::types::AnswerMachineDetectionConfig>,
}
impl UpdateCampaignOutboundCallConfigInput {
    /// Identifier representing a Campaign
    pub fn id(&self) -> ::std::option::Option<&str> {
        self.id.as_deref()
    }
    /// The identifier of the contact flow for the outbound call.
    pub fn connect_contact_flow_id(&self) -> ::std::option::Option<&str> {
        self.connect_contact_flow_id.as_deref()
    }
    /// The phone number associated with the Amazon Connect instance, in E.164 format. If you do not specify a source phone number, you must specify a queue.
    pub fn connect_source_phone_number(&self) -> ::std::option::Option<&str> {
        self.connect_source_phone_number.as_deref()
    }
    /// Answering Machine Detection config
    pub fn answer_machine_detection_config(&self) -> ::std::option::Option<&crate::types::AnswerMachineDetectionConfig> {
        self.answer_machine_detection_config.as_ref()
    }
}
impl UpdateCampaignOutboundCallConfigInput {
    /// Creates a new builder-style object to manufacture [`UpdateCampaignOutboundCallConfigInput`](crate::operation::update_campaign_outbound_call_config::UpdateCampaignOutboundCallConfigInput).
    pub fn builder() -> crate::operation::update_campaign_outbound_call_config::builders::UpdateCampaignOutboundCallConfigInputBuilder {
        crate::operation::update_campaign_outbound_call_config::builders::UpdateCampaignOutboundCallConfigInputBuilder::default()
    }
}

/// A builder for [`UpdateCampaignOutboundCallConfigInput`](crate::operation::update_campaign_outbound_call_config::UpdateCampaignOutboundCallConfigInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct UpdateCampaignOutboundCallConfigInputBuilder {
    pub(crate) id: ::std::option::Option<::std::string::String>,
    pub(crate) connect_contact_flow_id: ::std::option::Option<::std::string::String>,
    pub(crate) connect_source_phone_number: ::std::option::Option<::std::string::String>,
    pub(crate) answer_machine_detection_config: ::std::option::Option<crate::types::AnswerMachineDetectionConfig>,
}
impl UpdateCampaignOutboundCallConfigInputBuilder {
    /// Identifier representing a Campaign
    /// This field is required.
    pub fn id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.id = ::std::option::Option::Some(input.into());
        self
    }
    /// Identifier representing a Campaign
    pub fn set_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.id = input;
        self
    }
    /// Identifier representing a Campaign
    pub fn get_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.id
    }
    /// The identifier of the contact flow for the outbound call.
    pub fn connect_contact_flow_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.connect_contact_flow_id = ::std::option::Option::Some(input.into());
        self
    }
    /// The identifier of the contact flow for the outbound call.
    pub fn set_connect_contact_flow_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.connect_contact_flow_id = input;
        self
    }
    /// The identifier of the contact flow for the outbound call.
    pub fn get_connect_contact_flow_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.connect_contact_flow_id
    }
    /// The phone number associated with the Amazon Connect instance, in E.164 format. If you do not specify a source phone number, you must specify a queue.
    pub fn connect_source_phone_number(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.connect_source_phone_number = ::std::option::Option::Some(input.into());
        self
    }
    /// The phone number associated with the Amazon Connect instance, in E.164 format. If you do not specify a source phone number, you must specify a queue.
    pub fn set_connect_source_phone_number(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.connect_source_phone_number = input;
        self
    }
    /// The phone number associated with the Amazon Connect instance, in E.164 format. If you do not specify a source phone number, you must specify a queue.
    pub fn get_connect_source_phone_number(&self) -> &::std::option::Option<::std::string::String> {
        &self.connect_source_phone_number
    }
    /// Answering Machine Detection config
    pub fn answer_machine_detection_config(mut self, input: crate::types::AnswerMachineDetectionConfig) -> Self {
        self.answer_machine_detection_config = ::std::option::Option::Some(input);
        self
    }
    /// Answering Machine Detection config
    pub fn set_answer_machine_detection_config(mut self, input: ::std::option::Option<crate::types::AnswerMachineDetectionConfig>) -> Self {
        self.answer_machine_detection_config = input;
        self
    }
    /// Answering Machine Detection config
    pub fn get_answer_machine_detection_config(&self) -> &::std::option::Option<crate::types::AnswerMachineDetectionConfig> {
        &self.answer_machine_detection_config
    }
    /// Consumes the builder and constructs a [`UpdateCampaignOutboundCallConfigInput`](crate::operation::update_campaign_outbound_call_config::UpdateCampaignOutboundCallConfigInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::update_campaign_outbound_call_config::UpdateCampaignOutboundCallConfigInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(
            crate::operation::update_campaign_outbound_call_config::UpdateCampaignOutboundCallConfigInput {
                id: self.id,
                connect_contact_flow_id: self.connect_contact_flow_id,
                connect_source_phone_number: self.connect_source_phone_number,
                answer_machine_detection_config: self.answer_machine_detection_config,
            },
        )
    }
}
