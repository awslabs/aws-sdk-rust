// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Connect instance identifier filter
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct InstanceIdFilter {
    /// Amazon Connect Instance Id
    pub value: ::std::string::String,
    /// Operators for Connect instance identifier filter
    pub operator: crate::types::InstanceIdFilterOperator,
}
impl InstanceIdFilter {
    /// Amazon Connect Instance Id
    pub fn value(&self) -> &str {
        use std::ops::Deref;
        self.value.deref()
    }
    /// Operators for Connect instance identifier filter
    pub fn operator(&self) -> &crate::types::InstanceIdFilterOperator {
        &self.operator
    }
}
impl InstanceIdFilter {
    /// Creates a new builder-style object to manufacture [`InstanceIdFilter`](crate::types::InstanceIdFilter).
    pub fn builder() -> crate::types::builders::InstanceIdFilterBuilder {
        crate::types::builders::InstanceIdFilterBuilder::default()
    }
}

/// A builder for [`InstanceIdFilter`](crate::types::InstanceIdFilter).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct InstanceIdFilterBuilder {
    pub(crate) value: ::std::option::Option<::std::string::String>,
    pub(crate) operator: ::std::option::Option<crate::types::InstanceIdFilterOperator>,
}
impl InstanceIdFilterBuilder {
    /// Amazon Connect Instance Id
    /// This field is required.
    pub fn value(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.value = ::std::option::Option::Some(input.into());
        self
    }
    /// Amazon Connect Instance Id
    pub fn set_value(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.value = input;
        self
    }
    /// Amazon Connect Instance Id
    pub fn get_value(&self) -> &::std::option::Option<::std::string::String> {
        &self.value
    }
    /// Operators for Connect instance identifier filter
    /// This field is required.
    pub fn operator(mut self, input: crate::types::InstanceIdFilterOperator) -> Self {
        self.operator = ::std::option::Option::Some(input);
        self
    }
    /// Operators for Connect instance identifier filter
    pub fn set_operator(mut self, input: ::std::option::Option<crate::types::InstanceIdFilterOperator>) -> Self {
        self.operator = input;
        self
    }
    /// Operators for Connect instance identifier filter
    pub fn get_operator(&self) -> &::std::option::Option<crate::types::InstanceIdFilterOperator> {
        &self.operator
    }
    /// Consumes the builder and constructs a [`InstanceIdFilter`](crate::types::InstanceIdFilter).
    /// This method will fail if any of the following fields are not set:
    /// - [`value`](crate::types::builders::InstanceIdFilterBuilder::value)
    /// - [`operator`](crate::types::builders::InstanceIdFilterBuilder::operator)
    pub fn build(self) -> ::std::result::Result<crate::types::InstanceIdFilter, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::InstanceIdFilter {
            value: self.value.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "value",
                    "value was not specified but it is required when building InstanceIdFilter",
                )
            })?,
            operator: self.operator.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "operator",
                    "operator was not specified but it is required when building InstanceIdFilter",
                )
            })?,
        })
    }
}
