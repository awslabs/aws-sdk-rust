// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// An Amazon Connect campaign summary.
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct CampaignSummary {
    /// Identifier representing a Campaign
    #[doc(hidden)]
    pub id: std::option::Option<std::string::String>,
    /// The resource name of an Amazon Connect campaign.
    #[doc(hidden)]
    pub arn: std::option::Option<std::string::String>,
    /// The name of an Amazon Connect Campaign name.
    #[doc(hidden)]
    pub name: std::option::Option<std::string::String>,
    /// Amazon Connect Instance Id
    #[doc(hidden)]
    pub connect_instance_id: std::option::Option<std::string::String>,
}
impl CampaignSummary {
    /// Identifier representing a Campaign
    pub fn id(&self) -> std::option::Option<&str> {
        self.id.as_deref()
    }
    /// The resource name of an Amazon Connect campaign.
    pub fn arn(&self) -> std::option::Option<&str> {
        self.arn.as_deref()
    }
    /// The name of an Amazon Connect Campaign name.
    pub fn name(&self) -> std::option::Option<&str> {
        self.name.as_deref()
    }
    /// Amazon Connect Instance Id
    pub fn connect_instance_id(&self) -> std::option::Option<&str> {
        self.connect_instance_id.as_deref()
    }
}
impl CampaignSummary {
    /// Creates a new builder-style object to manufacture [`CampaignSummary`](crate::types::CampaignSummary).
    pub fn builder() -> crate::types::builders::CampaignSummaryBuilder {
        crate::types::builders::CampaignSummaryBuilder::default()
    }
}

/// A builder for [`CampaignSummary`](crate::types::CampaignSummary).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct CampaignSummaryBuilder {
    pub(crate) id: std::option::Option<std::string::String>,
    pub(crate) arn: std::option::Option<std::string::String>,
    pub(crate) name: std::option::Option<std::string::String>,
    pub(crate) connect_instance_id: std::option::Option<std::string::String>,
}
impl CampaignSummaryBuilder {
    /// Identifier representing a Campaign
    pub fn id(mut self, input: impl Into<std::string::String>) -> Self {
        self.id = Some(input.into());
        self
    }
    /// Identifier representing a Campaign
    pub fn set_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.id = input;
        self
    }
    /// The resource name of an Amazon Connect campaign.
    pub fn arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.arn = Some(input.into());
        self
    }
    /// The resource name of an Amazon Connect campaign.
    pub fn set_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.arn = input;
        self
    }
    /// The name of an Amazon Connect Campaign name.
    pub fn name(mut self, input: impl Into<std::string::String>) -> Self {
        self.name = Some(input.into());
        self
    }
    /// The name of an Amazon Connect Campaign name.
    pub fn set_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// Amazon Connect Instance Id
    pub fn connect_instance_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.connect_instance_id = Some(input.into());
        self
    }
    /// Amazon Connect Instance Id
    pub fn set_connect_instance_id(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.connect_instance_id = input;
        self
    }
    /// Consumes the builder and constructs a [`CampaignSummary`](crate::types::CampaignSummary).
    pub fn build(self) -> crate::types::CampaignSummary {
        crate::types::CampaignSummary {
            id: self.id,
            arn: self.arn,
            name: self.name,
            connect_instance_id: self.connect_instance_id,
        }
    }
}
