// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Instance onboarding job status object
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct InstanceOnboardingJobStatus {
    /// Amazon Connect Instance Id
    pub connect_instance_id: ::std::string::String,
    /// Enumeration of the possible states for instance onboarding job
    pub status: crate::types::InstanceOnboardingJobStatusCode,
    /// Enumeration of the possible failure codes for instance onboarding job
    pub failure_code: ::std::option::Option<crate::types::InstanceOnboardingJobFailureCode>,
}
impl InstanceOnboardingJobStatus {
    /// Amazon Connect Instance Id
    pub fn connect_instance_id(&self) -> &str {
        use std::ops::Deref;
        self.connect_instance_id.deref()
    }
    /// Enumeration of the possible states for instance onboarding job
    pub fn status(&self) -> &crate::types::InstanceOnboardingJobStatusCode {
        &self.status
    }
    /// Enumeration of the possible failure codes for instance onboarding job
    pub fn failure_code(&self) -> ::std::option::Option<&crate::types::InstanceOnboardingJobFailureCode> {
        self.failure_code.as_ref()
    }
}
impl InstanceOnboardingJobStatus {
    /// Creates a new builder-style object to manufacture [`InstanceOnboardingJobStatus`](crate::types::InstanceOnboardingJobStatus).
    pub fn builder() -> crate::types::builders::InstanceOnboardingJobStatusBuilder {
        crate::types::builders::InstanceOnboardingJobStatusBuilder::default()
    }
}

/// A builder for [`InstanceOnboardingJobStatus`](crate::types::InstanceOnboardingJobStatus).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct InstanceOnboardingJobStatusBuilder {
    pub(crate) connect_instance_id: ::std::option::Option<::std::string::String>,
    pub(crate) status: ::std::option::Option<crate::types::InstanceOnboardingJobStatusCode>,
    pub(crate) failure_code: ::std::option::Option<crate::types::InstanceOnboardingJobFailureCode>,
}
impl InstanceOnboardingJobStatusBuilder {
    /// Amazon Connect Instance Id
    /// This field is required.
    pub fn connect_instance_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.connect_instance_id = ::std::option::Option::Some(input.into());
        self
    }
    /// Amazon Connect Instance Id
    pub fn set_connect_instance_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.connect_instance_id = input;
        self
    }
    /// Amazon Connect Instance Id
    pub fn get_connect_instance_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.connect_instance_id
    }
    /// Enumeration of the possible states for instance onboarding job
    /// This field is required.
    pub fn status(mut self, input: crate::types::InstanceOnboardingJobStatusCode) -> Self {
        self.status = ::std::option::Option::Some(input);
        self
    }
    /// Enumeration of the possible states for instance onboarding job
    pub fn set_status(mut self, input: ::std::option::Option<crate::types::InstanceOnboardingJobStatusCode>) -> Self {
        self.status = input;
        self
    }
    /// Enumeration of the possible states for instance onboarding job
    pub fn get_status(&self) -> &::std::option::Option<crate::types::InstanceOnboardingJobStatusCode> {
        &self.status
    }
    /// Enumeration of the possible failure codes for instance onboarding job
    pub fn failure_code(mut self, input: crate::types::InstanceOnboardingJobFailureCode) -> Self {
        self.failure_code = ::std::option::Option::Some(input);
        self
    }
    /// Enumeration of the possible failure codes for instance onboarding job
    pub fn set_failure_code(mut self, input: ::std::option::Option<crate::types::InstanceOnboardingJobFailureCode>) -> Self {
        self.failure_code = input;
        self
    }
    /// Enumeration of the possible failure codes for instance onboarding job
    pub fn get_failure_code(&self) -> &::std::option::Option<crate::types::InstanceOnboardingJobFailureCode> {
        &self.failure_code
    }
    /// Consumes the builder and constructs a [`InstanceOnboardingJobStatus`](crate::types::InstanceOnboardingJobStatus).
    /// This method will fail if any of the following fields are not set:
    /// - [`connect_instance_id`](crate::types::builders::InstanceOnboardingJobStatusBuilder::connect_instance_id)
    /// - [`status`](crate::types::builders::InstanceOnboardingJobStatusBuilder::status)
    pub fn build(self) -> ::std::result::Result<crate::types::InstanceOnboardingJobStatus, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::InstanceOnboardingJobStatus {
            connect_instance_id: self.connect_instance_id.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "connect_instance_id",
                    "connect_instance_id was not specified but it is required when building InstanceOnboardingJobStatus",
                )
            })?,
            status: self.status.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "status",
                    "status was not specified but it is required when building InstanceOnboardingJobStatus",
                )
            })?,
            failure_code: self.failure_code,
        })
    }
}
