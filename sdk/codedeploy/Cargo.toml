# Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
[package]
name = "aws-sdk-codedeploy"
version = "0.0.17-alpha"
description = "<fullname>AWS CodeDeploy</fullname>\n        <p>AWS CodeDeploy is a deployment service that automates application deployments to\n            Amazon EC2 instances, on-premises instances running in your own facility, serverless AWS\n            Lambda functions, or applications in an Amazon ECS service.</p>\n        <p>You can deploy a nearly unlimited variety of application content, such as an updated\n            Lambda function, updated applications in an Amazon ECS service, code, web and\n            configuration files, executables, packages, scripts, multimedia files, and so on. AWS\n            CodeDeploy can deploy application content stored in Amazon S3 buckets, GitHub\n            repositories, or Bitbucket repositories. You do not need to make changes to your\n            existing code before you can use AWS CodeDeploy.</p>\n        <p>AWS CodeDeploy makes it easier for you to rapidly release new features, helps you\n            avoid downtime during application deployment, and handles the complexity of updating\n            your applications, without many of the risks associated with error-prone manual\n            deployments.</p>\n        <p>\n            <b>AWS CodeDeploy Components</b>\n        </p>\n        <p>Use the information in this guide to help you work with the following AWS CodeDeploy\n            components:</p>\n        <ul>\n            <li>\n                <p>\n                    <b>Application</b>: A name that uniquely identifies\n                    the application you want to deploy. AWS CodeDeploy uses this name, which\n                    functions as a container, to ensure the correct combination of revision,\n                    deployment configuration, and deployment group are referenced during a\n                    deployment.</p>\n            </li>\n            <li>\n                <p>\n                    <b>Deployment group</b>: A set of individual\n                    instances, CodeDeploy Lambda deployment configuration settings, or an Amazon ECS\n                    service and network details. A Lambda deployment group specifies how to route\n                    traffic to a new version of a Lambda function. An Amazon ECS deployment group\n                    specifies the service created in Amazon ECS to deploy, a load balancer, and a\n                    listener to reroute production traffic to an updated containerized application.\n                    An EC2/On-premises deployment group contains individually tagged instances,\n                    Amazon EC2 instances in Amazon EC2 Auto Scaling groups, or both. All deployment\n                    groups can specify optional trigger, alarm, and rollback settings.</p>\n            </li>\n            <li>\n                <p>\n                    <b>Deployment configuration</b>: A set of deployment\n                    rules and deployment success and failure conditions used by AWS CodeDeploy\n                    during a deployment.</p>\n            </li>\n            <li>\n                <p>\n                    <b>Deployment</b>: The process and the components used\n                    when updating a Lambda function, a containerized application in an Amazon ECS\n                    service, or of installing content on one or more instances. </p>\n            </li>\n            <li>\n                <p>\n                    <b>Application revisions</b>: For an AWS Lambda\n                    deployment, this is an AppSpec file that specifies the Lambda function to be\n                    updated and one or more functions to validate deployment lifecycle events. For\n                    an Amazon ECS deployment, this is an AppSpec file that specifies the Amazon ECS\n                    task definition, container, and port where production traffic is rerouted. For\n                    an EC2/On-premises deployment, this is an archive file that contains source\n                    content—source code, webpages, executable files, and deployment scripts—along\n                    with an AppSpec file. Revisions are stored in Amazon S3 buckets or GitHub\n                    repositories. For Amazon S3, a revision is uniquely identified by its Amazon S3\n                    object key and its ETag, version, or both. For GitHub, a revision is uniquely\n                    identified by its commit ID.</p>\n            </li>\n         </ul>\n        <p>This guide also contains information to help you get details about the instances in\n            your deployments, to make on-premises instances available for AWS CodeDeploy\n            deployments, to get details about a Lambda function deployment, and to get details about\n            Amazon ECS service deployments.</p>\n        <p>\n            <b>AWS CodeDeploy Information Resources</b>\n         </p>\n        <ul>\n            <li>\n                <p>\n                  <a href=\"https://docs.aws.amazon.com/codedeploy/latest/userguide\">AWS CodeDeploy\n                        User Guide</a>\n               </p>\n            </li>\n            <li>\n                <p>\n                  <a href=\"https://docs.aws.amazon.com/codedeploy/latest/APIReference/\">AWS\n                        CodeDeploy API Reference Guide</a>\n               </p>\n            </li>\n            <li>\n                <p>\n                  <a href=\"https://docs.aws.amazon.com/cli/latest/reference/deploy/index.html\">AWS\n                        CLI Reference for AWS CodeDeploy</a>\n               </p>\n            </li>\n            <li>\n                <p>\n                    <a href=\"https://forums.aws.amazon.com/forum.jspa?forumID=179\">AWS CodeDeploy\n                        Developer Forum</a>\n                </p>\n            </li>\n         </ul>"
authors = ["AWS Rust SDK Team <aws-sdk-rust@amazon.com>", "Russell Cohen <rcoh@amazon.com>"]
license = "Apache-2.0"
edition = "2018"
[dependencies.aws-auth]
path = "..//aws-auth"
[dependencies.aws-endpoint]
path = "..//aws-endpoint"
[dependencies.aws-http]
path = "..//aws-http"
[dependencies.aws-hyper]
path = "..//aws-hyper"
optional = true
[dependencies.aws-sig-auth]
path = "..//aws-sig-auth"
[dependencies.aws-types]
path = "..//aws-types"
[dependencies.bytes]
version = "1"
[dependencies.http]
version = "0.2"
[dependencies.smithy-client]
path = "..//smithy-client"
optional = true
[dependencies.smithy-http]
path = "..//smithy-http"
[dependencies.smithy-json]
path = "..//smithy-json"
[dependencies.smithy-types]
path = "..//smithy-types"
[features]
client = ["aws-hyper", "smithy-client"]
rustls = ["aws-hyper/rustls"]
native-tls = ["aws-hyper/native-tls"]
default = ["client", "rustls"]


