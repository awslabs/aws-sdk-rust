// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Represents the input of a <code>BatchGetApplications</code> operation.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct BatchGetApplicationsInput {
    /// <p>A list of application names separated by spaces. The maximum number of application names you can specify is 100.</p>
    #[doc(hidden)]
    pub application_names: std::option::Option<std::vec::Vec<std::string::String>>,
}
impl BatchGetApplicationsInput {
    /// <p>A list of application names separated by spaces. The maximum number of application names you can specify is 100.</p>
    pub fn application_names(&self) -> std::option::Option<&[std::string::String]> {
        self.application_names.as_deref()
    }
}
impl BatchGetApplicationsInput {
    /// Creates a new builder-style object to manufacture [`BatchGetApplicationsInput`](crate::operation::batch_get_applications::BatchGetApplicationsInput).
    pub fn builder(
    ) -> crate::operation::batch_get_applications::builders::BatchGetApplicationsInputBuilder {
        crate::operation::batch_get_applications::builders::BatchGetApplicationsInputBuilder::default()
    }
}

/// A builder for [`BatchGetApplicationsInput`](crate::operation::batch_get_applications::BatchGetApplicationsInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct BatchGetApplicationsInputBuilder {
    pub(crate) application_names: std::option::Option<std::vec::Vec<std::string::String>>,
}
impl BatchGetApplicationsInputBuilder {
    /// Appends an item to `application_names`.
    ///
    /// To override the contents of this collection use [`set_application_names`](Self::set_application_names).
    ///
    /// <p>A list of application names separated by spaces. The maximum number of application names you can specify is 100.</p>
    pub fn application_names(mut self, input: impl Into<std::string::String>) -> Self {
        let mut v = self.application_names.unwrap_or_default();
        v.push(input.into());
        self.application_names = Some(v);
        self
    }
    /// <p>A list of application names separated by spaces. The maximum number of application names you can specify is 100.</p>
    pub fn set_application_names(
        mut self,
        input: std::option::Option<std::vec::Vec<std::string::String>>,
    ) -> Self {
        self.application_names = input;
        self
    }
    /// Consumes the builder and constructs a [`BatchGetApplicationsInput`](crate::operation::batch_get_applications::BatchGetApplicationsInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::batch_get_applications::BatchGetApplicationsInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::batch_get_applications::BatchGetApplicationsInput {
                application_names: self.application_names,
            },
        )
    }
}
