// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Represents the output of a <code>ListDeploymentGroups</code> operation.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ListDeploymentGroupsOutput {
    /// <p>The application name.</p>
    pub application_name: ::std::option::Option<::std::string::String>,
    /// <p>A list of deployment group names.</p>
    pub deployment_groups: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
    /// <p>If a large amount of information is returned, an identifier is also returned. It can be used in a subsequent list deployment groups call to return the next set of deployment groups in the list.</p>
    pub next_token: ::std::option::Option<::std::string::String>,
    _request_id: Option<String>,
}
impl ListDeploymentGroupsOutput {
    /// <p>The application name.</p>
    pub fn application_name(&self) -> ::std::option::Option<&str> {
        self.application_name.as_deref()
    }
    /// <p>A list of deployment group names.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.deployment_groups.is_none()`.
    pub fn deployment_groups(&self) -> &[::std::string::String] {
        self.deployment_groups.as_deref().unwrap_or_default()
    }
    /// <p>If a large amount of information is returned, an identifier is also returned. It can be used in a subsequent list deployment groups call to return the next set of deployment groups in the list.</p>
    pub fn next_token(&self) -> ::std::option::Option<&str> {
        self.next_token.as_deref()
    }
}
impl ::aws_http::request_id::RequestId for ListDeploymentGroupsOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl ListDeploymentGroupsOutput {
    /// Creates a new builder-style object to manufacture [`ListDeploymentGroupsOutput`](crate::operation::list_deployment_groups::ListDeploymentGroupsOutput).
    pub fn builder() -> crate::operation::list_deployment_groups::builders::ListDeploymentGroupsOutputBuilder {
        crate::operation::list_deployment_groups::builders::ListDeploymentGroupsOutputBuilder::default()
    }
}

/// A builder for [`ListDeploymentGroupsOutput`](crate::operation::list_deployment_groups::ListDeploymentGroupsOutput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ListDeploymentGroupsOutputBuilder {
    pub(crate) application_name: ::std::option::Option<::std::string::String>,
    pub(crate) deployment_groups: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
    pub(crate) next_token: ::std::option::Option<::std::string::String>,
    _request_id: Option<String>,
}
impl ListDeploymentGroupsOutputBuilder {
    /// <p>The application name.</p>
    pub fn application_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.application_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The application name.</p>
    pub fn set_application_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.application_name = input;
        self
    }
    /// <p>The application name.</p>
    pub fn get_application_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.application_name
    }
    /// Appends an item to `deployment_groups`.
    ///
    /// To override the contents of this collection use [`set_deployment_groups`](Self::set_deployment_groups).
    ///
    /// <p>A list of deployment group names.</p>
    pub fn deployment_groups(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        let mut v = self.deployment_groups.unwrap_or_default();
        v.push(input.into());
        self.deployment_groups = ::std::option::Option::Some(v);
        self
    }
    /// <p>A list of deployment group names.</p>
    pub fn set_deployment_groups(mut self, input: ::std::option::Option<::std::vec::Vec<::std::string::String>>) -> Self {
        self.deployment_groups = input;
        self
    }
    /// <p>A list of deployment group names.</p>
    pub fn get_deployment_groups(&self) -> &::std::option::Option<::std::vec::Vec<::std::string::String>> {
        &self.deployment_groups
    }
    /// <p>If a large amount of information is returned, an identifier is also returned. It can be used in a subsequent list deployment groups call to return the next set of deployment groups in the list.</p>
    pub fn next_token(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.next_token = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>If a large amount of information is returned, an identifier is also returned. It can be used in a subsequent list deployment groups call to return the next set of deployment groups in the list.</p>
    pub fn set_next_token(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// <p>If a large amount of information is returned, an identifier is also returned. It can be used in a subsequent list deployment groups call to return the next set of deployment groups in the list.</p>
    pub fn get_next_token(&self) -> &::std::option::Option<::std::string::String> {
        &self.next_token
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`ListDeploymentGroupsOutput`](crate::operation::list_deployment_groups::ListDeploymentGroupsOutput).
    pub fn build(self) -> crate::operation::list_deployment_groups::ListDeploymentGroupsOutput {
        crate::operation::list_deployment_groups::ListDeploymentGroupsOutput {
            application_name: self.application_name,
            deployment_groups: self.deployment_groups,
            next_token: self.next_token,
            _request_id: self._request_id,
        }
    }
}
