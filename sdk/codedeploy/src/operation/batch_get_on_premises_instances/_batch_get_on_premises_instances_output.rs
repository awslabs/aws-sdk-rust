// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Represents the output of a <code>BatchGetOnPremisesInstances</code> operation.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct BatchGetOnPremisesInstancesOutput {
    /// <p>Information about the on-premises instances.</p>
    #[doc(hidden)]
    pub instance_infos: std::option::Option<std::vec::Vec<crate::types::InstanceInfo>>,
    _request_id: Option<String>,
}
impl BatchGetOnPremisesInstancesOutput {
    /// <p>Information about the on-premises instances.</p>
    pub fn instance_infos(&self) -> std::option::Option<&[crate::types::InstanceInfo]> {
        self.instance_infos.as_deref()
    }
}
impl aws_http::request_id::RequestId for BatchGetOnPremisesInstancesOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl BatchGetOnPremisesInstancesOutput {
    /// Creates a new builder-style object to manufacture [`BatchGetOnPremisesInstancesOutput`](crate::operation::batch_get_on_premises_instances::BatchGetOnPremisesInstancesOutput).
    pub fn builder() -> crate::operation::batch_get_on_premises_instances::builders::BatchGetOnPremisesInstancesOutputBuilder{
        crate::operation::batch_get_on_premises_instances::builders::BatchGetOnPremisesInstancesOutputBuilder::default()
    }
}

/// A builder for [`BatchGetOnPremisesInstancesOutput`](crate::operation::batch_get_on_premises_instances::BatchGetOnPremisesInstancesOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct BatchGetOnPremisesInstancesOutputBuilder {
    pub(crate) instance_infos: std::option::Option<std::vec::Vec<crate::types::InstanceInfo>>,
    _request_id: Option<String>,
}
impl BatchGetOnPremisesInstancesOutputBuilder {
    /// Appends an item to `instance_infos`.
    ///
    /// To override the contents of this collection use [`set_instance_infos`](Self::set_instance_infos).
    ///
    /// <p>Information about the on-premises instances.</p>
    pub fn instance_infos(mut self, input: crate::types::InstanceInfo) -> Self {
        let mut v = self.instance_infos.unwrap_or_default();
        v.push(input);
        self.instance_infos = Some(v);
        self
    }
    /// <p>Information about the on-premises instances.</p>
    pub fn set_instance_infos(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::InstanceInfo>>,
    ) -> Self {
        self.instance_infos = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`BatchGetOnPremisesInstancesOutput`](crate::operation::batch_get_on_premises_instances::BatchGetOnPremisesInstancesOutput).
    pub fn build(
        self,
    ) -> crate::operation::batch_get_on_premises_instances::BatchGetOnPremisesInstancesOutput {
        crate::operation::batch_get_on_premises_instances::BatchGetOnPremisesInstancesOutput {
            instance_infos: self.instance_infos,
            _request_id: self._request_id,
        }
    }
}
