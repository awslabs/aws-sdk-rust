// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Represents the output of a <code>BatchGetDeploymentGroups</code> operation.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct BatchGetDeploymentGroupsOutput {
    /// <p>Information about the deployment groups.</p>
    pub deployment_groups_info: ::std::option::Option<::std::vec::Vec<crate::types::DeploymentGroupInfo>>,
    /// <p>Information about errors that might have occurred during the API call.</p>
    pub error_message: ::std::option::Option<::std::string::String>,
    _request_id: Option<String>,
}
impl BatchGetDeploymentGroupsOutput {
    /// <p>Information about the deployment groups.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.deployment_groups_info.is_none()`.
    pub fn deployment_groups_info(&self) -> &[crate::types::DeploymentGroupInfo] {
        self.deployment_groups_info.as_deref().unwrap_or_default()
    }
    /// <p>Information about errors that might have occurred during the API call.</p>
    pub fn error_message(&self) -> ::std::option::Option<&str> {
        self.error_message.as_deref()
    }
}
impl ::aws_http::request_id::RequestId for BatchGetDeploymentGroupsOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl BatchGetDeploymentGroupsOutput {
    /// Creates a new builder-style object to manufacture [`BatchGetDeploymentGroupsOutput`](crate::operation::batch_get_deployment_groups::BatchGetDeploymentGroupsOutput).
    pub fn builder() -> crate::operation::batch_get_deployment_groups::builders::BatchGetDeploymentGroupsOutputBuilder {
        crate::operation::batch_get_deployment_groups::builders::BatchGetDeploymentGroupsOutputBuilder::default()
    }
}

/// A builder for [`BatchGetDeploymentGroupsOutput`](crate::operation::batch_get_deployment_groups::BatchGetDeploymentGroupsOutput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct BatchGetDeploymentGroupsOutputBuilder {
    pub(crate) deployment_groups_info: ::std::option::Option<::std::vec::Vec<crate::types::DeploymentGroupInfo>>,
    pub(crate) error_message: ::std::option::Option<::std::string::String>,
    _request_id: Option<String>,
}
impl BatchGetDeploymentGroupsOutputBuilder {
    /// Appends an item to `deployment_groups_info`.
    ///
    /// To override the contents of this collection use [`set_deployment_groups_info`](Self::set_deployment_groups_info).
    ///
    /// <p>Information about the deployment groups.</p>
    pub fn deployment_groups_info(mut self, input: crate::types::DeploymentGroupInfo) -> Self {
        let mut v = self.deployment_groups_info.unwrap_or_default();
        v.push(input);
        self.deployment_groups_info = ::std::option::Option::Some(v);
        self
    }
    /// <p>Information about the deployment groups.</p>
    pub fn set_deployment_groups_info(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::DeploymentGroupInfo>>) -> Self {
        self.deployment_groups_info = input;
        self
    }
    /// <p>Information about the deployment groups.</p>
    pub fn get_deployment_groups_info(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::DeploymentGroupInfo>> {
        &self.deployment_groups_info
    }
    /// <p>Information about errors that might have occurred during the API call.</p>
    pub fn error_message(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.error_message = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Information about errors that might have occurred during the API call.</p>
    pub fn set_error_message(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.error_message = input;
        self
    }
    /// <p>Information about errors that might have occurred during the API call.</p>
    pub fn get_error_message(&self) -> &::std::option::Option<::std::string::String> {
        &self.error_message
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`BatchGetDeploymentGroupsOutput`](crate::operation::batch_get_deployment_groups::BatchGetDeploymentGroupsOutput).
    pub fn build(self) -> crate::operation::batch_get_deployment_groups::BatchGetDeploymentGroupsOutput {
        crate::operation::batch_get_deployment_groups::BatchGetDeploymentGroupsOutput {
            deployment_groups_info: self.deployment_groups_info,
            error_message: self.error_message,
            _request_id: self._request_id,
        }
    }
}
