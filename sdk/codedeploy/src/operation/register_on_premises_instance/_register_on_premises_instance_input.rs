// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Represents the input of the register on-premises instance operation.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct RegisterOnPremisesInstanceInput {
    /// <p>The name of the on-premises instance to register.</p>
    #[doc(hidden)]
    pub instance_name: std::option::Option<std::string::String>,
    /// <p>The ARN of the IAM session to associate with the on-premises instance.</p>
    #[doc(hidden)]
    pub iam_session_arn: std::option::Option<std::string::String>,
    /// <p>The ARN of the IAM user to associate with the on-premises instance.</p>
    #[doc(hidden)]
    pub iam_user_arn: std::option::Option<std::string::String>,
}
impl RegisterOnPremisesInstanceInput {
    /// <p>The name of the on-premises instance to register.</p>
    pub fn instance_name(&self) -> std::option::Option<&str> {
        self.instance_name.as_deref()
    }
    /// <p>The ARN of the IAM session to associate with the on-premises instance.</p>
    pub fn iam_session_arn(&self) -> std::option::Option<&str> {
        self.iam_session_arn.as_deref()
    }
    /// <p>The ARN of the IAM user to associate with the on-premises instance.</p>
    pub fn iam_user_arn(&self) -> std::option::Option<&str> {
        self.iam_user_arn.as_deref()
    }
}
impl RegisterOnPremisesInstanceInput {
    /// Creates a new builder-style object to manufacture [`RegisterOnPremisesInstanceInput`](crate::operation::register_on_premises_instance::RegisterOnPremisesInstanceInput).
    pub fn builder() -> crate::operation::register_on_premises_instance::builders::RegisterOnPremisesInstanceInputBuilder{
        crate::operation::register_on_premises_instance::builders::RegisterOnPremisesInstanceInputBuilder::default()
    }
}

/// A builder for [`RegisterOnPremisesInstanceInput`](crate::operation::register_on_premises_instance::RegisterOnPremisesInstanceInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct RegisterOnPremisesInstanceInputBuilder {
    pub(crate) instance_name: std::option::Option<std::string::String>,
    pub(crate) iam_session_arn: std::option::Option<std::string::String>,
    pub(crate) iam_user_arn: std::option::Option<std::string::String>,
}
impl RegisterOnPremisesInstanceInputBuilder {
    /// <p>The name of the on-premises instance to register.</p>
    pub fn instance_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.instance_name = Some(input.into());
        self
    }
    /// <p>The name of the on-premises instance to register.</p>
    pub fn set_instance_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.instance_name = input;
        self
    }
    /// <p>The ARN of the IAM session to associate with the on-premises instance.</p>
    pub fn iam_session_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.iam_session_arn = Some(input.into());
        self
    }
    /// <p>The ARN of the IAM session to associate with the on-premises instance.</p>
    pub fn set_iam_session_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.iam_session_arn = input;
        self
    }
    /// <p>The ARN of the IAM user to associate with the on-premises instance.</p>
    pub fn iam_user_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.iam_user_arn = Some(input.into());
        self
    }
    /// <p>The ARN of the IAM user to associate with the on-premises instance.</p>
    pub fn set_iam_user_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.iam_user_arn = input;
        self
    }
    /// Consumes the builder and constructs a [`RegisterOnPremisesInstanceInput`](crate::operation::register_on_premises_instance::RegisterOnPremisesInstanceInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::register_on_premises_instance::RegisterOnPremisesInstanceInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::register_on_premises_instance::RegisterOnPremisesInstanceInput {
                instance_name: self.instance_name,
                iam_session_arn: self.iam_session_arn,
                iam_user_arn: self.iam_user_arn,
            },
        )
    }
}
