// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Represents the input of an <code>UpdateApplication</code> operation.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct UpdateApplicationInput {
    /// <p>The current name of the application you want to change.</p>
    #[doc(hidden)]
    pub application_name: std::option::Option<std::string::String>,
    /// <p>The new name to give the application.</p>
    #[doc(hidden)]
    pub new_application_name: std::option::Option<std::string::String>,
}
impl UpdateApplicationInput {
    /// <p>The current name of the application you want to change.</p>
    pub fn application_name(&self) -> std::option::Option<&str> {
        self.application_name.as_deref()
    }
    /// <p>The new name to give the application.</p>
    pub fn new_application_name(&self) -> std::option::Option<&str> {
        self.new_application_name.as_deref()
    }
}
impl UpdateApplicationInput {
    /// Creates a new builder-style object to manufacture [`UpdateApplicationInput`](crate::operation::update_application::UpdateApplicationInput).
    pub fn builder() -> crate::operation::update_application::builders::UpdateApplicationInputBuilder
    {
        crate::operation::update_application::builders::UpdateApplicationInputBuilder::default()
    }
}

/// A builder for [`UpdateApplicationInput`](crate::operation::update_application::UpdateApplicationInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct UpdateApplicationInputBuilder {
    pub(crate) application_name: std::option::Option<std::string::String>,
    pub(crate) new_application_name: std::option::Option<std::string::String>,
}
impl UpdateApplicationInputBuilder {
    /// <p>The current name of the application you want to change.</p>
    pub fn application_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.application_name = Some(input.into());
        self
    }
    /// <p>The current name of the application you want to change.</p>
    pub fn set_application_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.application_name = input;
        self
    }
    /// <p>The new name to give the application.</p>
    pub fn new_application_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.new_application_name = Some(input.into());
        self
    }
    /// <p>The new name to give the application.</p>
    pub fn set_new_application_name(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.new_application_name = input;
        self
    }
    /// Consumes the builder and constructs a [`UpdateApplicationInput`](crate::operation::update_application::UpdateApplicationInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::update_application::UpdateApplicationInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::update_application::UpdateApplicationInput {
                application_name: self.application_name,
                new_application_name: self.new_application_name,
            },
        )
    }
}
