// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateDeploymentGroup`](crate::operation::create_deployment_group::builders::CreateDeploymentGroupFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_name(impl Into<String>)`](crate::operation::create_deployment_group::builders::CreateDeploymentGroupFluentBuilder::application_name) / [`set_application_name(Option<String>)`](crate::operation::create_deployment_group::builders::CreateDeploymentGroupFluentBuilder::set_application_name):<br>required: **true**<br><p>The name of an CodeDeploy application associated with the user or Amazon Web Services account.</p><br>
    ///   - [`deployment_group_name(impl Into<String>)`](crate::operation::create_deployment_group::builders::CreateDeploymentGroupFluentBuilder::deployment_group_name) / [`set_deployment_group_name(Option<String>)`](crate::operation::create_deployment_group::builders::CreateDeploymentGroupFluentBuilder::set_deployment_group_name):<br>required: **true**<br><p>The name of a new deployment group for the specified application.</p><br>
    ///   - [`deployment_config_name(impl Into<String>)`](crate::operation::create_deployment_group::builders::CreateDeploymentGroupFluentBuilder::deployment_config_name) / [`set_deployment_config_name(Option<String>)`](crate::operation::create_deployment_group::builders::CreateDeploymentGroupFluentBuilder::set_deployment_config_name):<br>required: **false**<br><p>If specified, the deployment configuration name can be either one of the predefined configurations provided with CodeDeploy or a custom deployment configuration that you create by calling the create deployment configuration operation.</p>  <p> <code>CodeDeployDefault.OneAtATime</code> is the default deployment configuration. It is used if a configuration isn't specified for the deployment or deployment group.</p>  <p>For more information about the predefined deployment configurations in CodeDeploy, see <a href="https://docs.aws.amazon.com/codedeploy/latest/userguide/deployment-configurations.html">Working with Deployment Configurations in CodeDeploy</a> in the <i>CodeDeploy User Guide</i>.</p><br>
    ///   - [`ec2_tag_filters(Ec2TagFilter)`](crate::operation::create_deployment_group::builders::CreateDeploymentGroupFluentBuilder::ec2_tag_filters) / [`set_ec2_tag_filters(Option<Vec::<Ec2TagFilter>>)`](crate::operation::create_deployment_group::builders::CreateDeploymentGroupFluentBuilder::set_ec2_tag_filters):<br>required: **false**<br><p>The Amazon EC2 tags on which to filter. The deployment group includes Amazon EC2 instances with any of the specified tags. Cannot be used in the same call as ec2TagSet.</p><br>
    ///   - [`on_premises_instance_tag_filters(TagFilter)`](crate::operation::create_deployment_group::builders::CreateDeploymentGroupFluentBuilder::on_premises_instance_tag_filters) / [`set_on_premises_instance_tag_filters(Option<Vec::<TagFilter>>)`](crate::operation::create_deployment_group::builders::CreateDeploymentGroupFluentBuilder::set_on_premises_instance_tag_filters):<br>required: **false**<br><p>The on-premises instance tags on which to filter. The deployment group includes on-premises instances with any of the specified tags. Cannot be used in the same call as <code>OnPremisesTagSet</code>.</p><br>
    ///   - [`auto_scaling_groups(impl Into<String>)`](crate::operation::create_deployment_group::builders::CreateDeploymentGroupFluentBuilder::auto_scaling_groups) / [`set_auto_scaling_groups(Option<Vec::<String>>)`](crate::operation::create_deployment_group::builders::CreateDeploymentGroupFluentBuilder::set_auto_scaling_groups):<br>required: **false**<br><p>A list of associated Amazon EC2 Auto Scaling groups.</p><br>
    ///   - [`service_role_arn(impl Into<String>)`](crate::operation::create_deployment_group::builders::CreateDeploymentGroupFluentBuilder::service_role_arn) / [`set_service_role_arn(Option<String>)`](crate::operation::create_deployment_group::builders::CreateDeploymentGroupFluentBuilder::set_service_role_arn):<br>required: **true**<br><p>A service role Amazon Resource Name (ARN) that allows CodeDeploy to act on the user's behalf when interacting with Amazon Web Services services.</p><br>
    ///   - [`trigger_configurations(TriggerConfig)`](crate::operation::create_deployment_group::builders::CreateDeploymentGroupFluentBuilder::trigger_configurations) / [`set_trigger_configurations(Option<Vec::<TriggerConfig>>)`](crate::operation::create_deployment_group::builders::CreateDeploymentGroupFluentBuilder::set_trigger_configurations):<br>required: **false**<br><p>Information about triggers to create when the deployment group is created. For examples, see <a href="https://docs.aws.amazon.com/codedeploy/latest/userguide/how-to-notify-sns.html">Create a Trigger for an CodeDeploy Event</a> in the <i>CodeDeploy User Guide</i>.</p><br>
    ///   - [`alarm_configuration(AlarmConfiguration)`](crate::operation::create_deployment_group::builders::CreateDeploymentGroupFluentBuilder::alarm_configuration) / [`set_alarm_configuration(Option<AlarmConfiguration>)`](crate::operation::create_deployment_group::builders::CreateDeploymentGroupFluentBuilder::set_alarm_configuration):<br>required: **false**<br><p>Information to add about Amazon CloudWatch alarms when the deployment group is created.</p><br>
    ///   - [`auto_rollback_configuration(AutoRollbackConfiguration)`](crate::operation::create_deployment_group::builders::CreateDeploymentGroupFluentBuilder::auto_rollback_configuration) / [`set_auto_rollback_configuration(Option<AutoRollbackConfiguration>)`](crate::operation::create_deployment_group::builders::CreateDeploymentGroupFluentBuilder::set_auto_rollback_configuration):<br>required: **false**<br><p>Configuration information for an automatic rollback that is added when a deployment group is created.</p><br>
    ///   - [`outdated_instances_strategy(OutdatedInstancesStrategy)`](crate::operation::create_deployment_group::builders::CreateDeploymentGroupFluentBuilder::outdated_instances_strategy) / [`set_outdated_instances_strategy(Option<OutdatedInstancesStrategy>)`](crate::operation::create_deployment_group::builders::CreateDeploymentGroupFluentBuilder::set_outdated_instances_strategy):<br>required: **false**<br><p>Indicates what happens when new Amazon EC2 instances are launched mid-deployment and do not receive the deployed application revision.</p>  <p>If this option is set to <code>UPDATE</code> or is unspecified, CodeDeploy initiates one or more 'auto-update outdated instances' deployments to apply the deployed application revision to the new Amazon EC2 instances.</p>  <p>If this option is set to <code>IGNORE</code>, CodeDeploy does not initiate a deployment to update the new Amazon EC2 instances. This may result in instances having different revisions.</p><br>
    ///   - [`deployment_style(DeploymentStyle)`](crate::operation::create_deployment_group::builders::CreateDeploymentGroupFluentBuilder::deployment_style) / [`set_deployment_style(Option<DeploymentStyle>)`](crate::operation::create_deployment_group::builders::CreateDeploymentGroupFluentBuilder::set_deployment_style):<br>required: **false**<br><p>Information about the type of deployment, in-place or blue/green, that you want to run and whether to route deployment traffic behind a load balancer.</p><br>
    ///   - [`blue_green_deployment_configuration(BlueGreenDeploymentConfiguration)`](crate::operation::create_deployment_group::builders::CreateDeploymentGroupFluentBuilder::blue_green_deployment_configuration) / [`set_blue_green_deployment_configuration(Option<BlueGreenDeploymentConfiguration>)`](crate::operation::create_deployment_group::builders::CreateDeploymentGroupFluentBuilder::set_blue_green_deployment_configuration):<br>required: **false**<br><p>Information about blue/green deployment options for a deployment group.</p><br>
    ///   - [`load_balancer_info(LoadBalancerInfo)`](crate::operation::create_deployment_group::builders::CreateDeploymentGroupFluentBuilder::load_balancer_info) / [`set_load_balancer_info(Option<LoadBalancerInfo>)`](crate::operation::create_deployment_group::builders::CreateDeploymentGroupFluentBuilder::set_load_balancer_info):<br>required: **false**<br><p>Information about the load balancer used in a deployment.</p><br>
    ///   - [`ec2_tag_set(Ec2TagSet)`](crate::operation::create_deployment_group::builders::CreateDeploymentGroupFluentBuilder::ec2_tag_set) / [`set_ec2_tag_set(Option<Ec2TagSet>)`](crate::operation::create_deployment_group::builders::CreateDeploymentGroupFluentBuilder::set_ec2_tag_set):<br>required: **false**<br><p>Information about groups of tags applied to Amazon EC2 instances. The deployment group includes only Amazon EC2 instances identified by all the tag groups. Cannot be used in the same call as <code>ec2TagFilters</code>.</p><br>
    ///   - [`ecs_services(EcsService)`](crate::operation::create_deployment_group::builders::CreateDeploymentGroupFluentBuilder::ecs_services) / [`set_ecs_services(Option<Vec::<EcsService>>)`](crate::operation::create_deployment_group::builders::CreateDeploymentGroupFluentBuilder::set_ecs_services):<br>required: **false**<br><p> The target Amazon ECS services in the deployment group. This applies only to deployment groups that use the Amazon ECS compute platform. A target Amazon ECS service is specified as an Amazon ECS cluster and service name pair using the format <code>   <clustername>    :    <servicename></servicename>   </clustername></code>. </p><br>
    ///   - [`on_premises_tag_set(OnPremisesTagSet)`](crate::operation::create_deployment_group::builders::CreateDeploymentGroupFluentBuilder::on_premises_tag_set) / [`set_on_premises_tag_set(Option<OnPremisesTagSet>)`](crate::operation::create_deployment_group::builders::CreateDeploymentGroupFluentBuilder::set_on_premises_tag_set):<br>required: **false**<br><p>Information about groups of tags applied to on-premises instances. The deployment group includes only on-premises instances identified by all of the tag groups. Cannot be used in the same call as <code>onPremisesInstanceTagFilters</code>.</p><br>
    ///   - [`tags(Tag)`](crate::operation::create_deployment_group::builders::CreateDeploymentGroupFluentBuilder::tags) / [`set_tags(Option<Vec::<Tag>>)`](crate::operation::create_deployment_group::builders::CreateDeploymentGroupFluentBuilder::set_tags):<br>required: **false**<br><p> The metadata that you apply to CodeDeploy deployment groups to help you organize and categorize them. Each tag consists of a key and an optional value, both of which you define. </p><br>
    /// - On success, responds with [`CreateDeploymentGroupOutput`](crate::operation::create_deployment_group::CreateDeploymentGroupOutput) with field(s):
    ///   - [`deployment_group_id(Option<String>)`](crate::operation::create_deployment_group::CreateDeploymentGroupOutput::deployment_group_id): <p>A unique deployment group ID.</p>
    /// - On failure, responds with [`SdkError<CreateDeploymentGroupError>`](crate::operation::create_deployment_group::CreateDeploymentGroupError)
    pub fn create_deployment_group(&self) -> crate::operation::create_deployment_group::builders::CreateDeploymentGroupFluentBuilder {
        crate::operation::create_deployment_group::builders::CreateDeploymentGroupFluentBuilder::new(self.handle.clone())
    }
}
