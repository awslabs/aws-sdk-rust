// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`PutLifecycleEventHookExecutionStatus`](crate::operation::put_lifecycle_event_hook_execution_status::builders::PutLifecycleEventHookExecutionStatusFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`deployment_id(impl Into<String>)`](crate::operation::put_lifecycle_event_hook_execution_status::builders::PutLifecycleEventHookExecutionStatusFluentBuilder::deployment_id) / [`set_deployment_id(Option<String>)`](crate::operation::put_lifecycle_event_hook_execution_status::builders::PutLifecycleEventHookExecutionStatusFluentBuilder::set_deployment_id): <p> The unique ID of a deployment. Pass this ID to a Lambda function that validates a deployment lifecycle event. </p>
    ///   - [`lifecycle_event_hook_execution_id(impl Into<String>)`](crate::operation::put_lifecycle_event_hook_execution_status::builders::PutLifecycleEventHookExecutionStatusFluentBuilder::lifecycle_event_hook_execution_id) / [`set_lifecycle_event_hook_execution_id(Option<String>)`](crate::operation::put_lifecycle_event_hook_execution_status::builders::PutLifecycleEventHookExecutionStatusFluentBuilder::set_lifecycle_event_hook_execution_id): <p> The execution ID of a deployment's lifecycle hook. A deployment lifecycle hook is specified in the <code>hooks</code> section of the AppSpec file. </p>
    ///   - [`status(LifecycleEventStatus)`](crate::operation::put_lifecycle_event_hook_execution_status::builders::PutLifecycleEventHookExecutionStatusFluentBuilder::status) / [`set_status(Option<LifecycleEventStatus>)`](crate::operation::put_lifecycle_event_hook_execution_status::builders::PutLifecycleEventHookExecutionStatusFluentBuilder::set_status): <p>The result of a Lambda function that validates a deployment lifecycle event. The values listed in <b>Valid Values</b> are valid for lifecycle statuses in general; however, only <code>Succeeded</code> and <code>Failed</code> can be passed successfully in your API call.</p>
    /// - On success, responds with [`PutLifecycleEventHookExecutionStatusOutput`](crate::operation::put_lifecycle_event_hook_execution_status::PutLifecycleEventHookExecutionStatusOutput) with field(s):
    ///   - [`lifecycle_event_hook_execution_id(Option<String>)`](crate::operation::put_lifecycle_event_hook_execution_status::PutLifecycleEventHookExecutionStatusOutput::lifecycle_event_hook_execution_id): <p>The execution ID of the lifecycle event hook. A hook is specified in the <code>hooks</code> section of the deployment's AppSpec file.</p>
    /// - On failure, responds with [`SdkError<PutLifecycleEventHookExecutionStatusError>`](crate::operation::put_lifecycle_event_hook_execution_status::PutLifecycleEventHookExecutionStatusError)
    pub fn put_lifecycle_event_hook_execution_status(&self) -> crate::operation::put_lifecycle_event_hook_execution_status::builders::PutLifecycleEventHookExecutionStatusFluentBuilder{
        crate::operation::put_lifecycle_event_hook_execution_status::builders::PutLifecycleEventHookExecutionStatusFluentBuilder::new(self.handle.clone())
    }
}
