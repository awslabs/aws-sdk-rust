// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ContinueDeployment`](crate::client::fluent_builders::ContinueDeployment) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`deployment_id(impl Into<String>)`](crate::client::fluent_builders::ContinueDeployment::deployment_id) / [`set_deployment_id(Option<String>)`](crate::client::fluent_builders::ContinueDeployment::set_deployment_id): <p> The unique ID of a blue/green deployment for which you want to start rerouting traffic to the replacement environment. </p>
    ///   - [`deployment_wait_type(DeploymentWaitType)`](crate::client::fluent_builders::ContinueDeployment::deployment_wait_type) / [`set_deployment_wait_type(Option<DeploymentWaitType>)`](crate::client::fluent_builders::ContinueDeployment::set_deployment_wait_type): <p> The status of the deployment's waiting period. <code>READY_WAIT</code> indicates that the deployment is ready to start shifting traffic. <code>TERMINATION_WAIT</code> indicates that the traffic is shifted, but the original target is not terminated. </p>
    /// - On success, responds with [`ContinueDeploymentOutput`](crate::output::ContinueDeploymentOutput)
    /// - On failure, responds with [`SdkError<ContinueDeploymentError>`](crate::error::ContinueDeploymentError)
    pub fn continue_deployment(&self) -> crate::client::fluent_builders::ContinueDeployment {
        crate::client::fluent_builders::ContinueDeployment::new(self.handle.clone())
    }
}
