// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeleteDeploymentGroup`](crate::operation::delete_deployment_group::builders::DeleteDeploymentGroupFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`application_name(impl Into<String>)`](crate::operation::delete_deployment_group::builders::DeleteDeploymentGroupFluentBuilder::application_name) / [`set_application_name(Option<String>)`](crate::operation::delete_deployment_group::builders::DeleteDeploymentGroupFluentBuilder::set_application_name): <p>The name of an CodeDeploy application associated with the IAM user or Amazon Web Services account.</p>
    ///   - [`deployment_group_name(impl Into<String>)`](crate::operation::delete_deployment_group::builders::DeleteDeploymentGroupFluentBuilder::deployment_group_name) / [`set_deployment_group_name(Option<String>)`](crate::operation::delete_deployment_group::builders::DeleteDeploymentGroupFluentBuilder::set_deployment_group_name): <p>The name of a deployment group for the specified application.</p>
    /// - On success, responds with [`DeleteDeploymentGroupOutput`](crate::operation::delete_deployment_group::DeleteDeploymentGroupOutput) with field(s):
    ///   - [`hooks_not_cleaned_up(Option<Vec<AutoScalingGroup>>)`](crate::operation::delete_deployment_group::DeleteDeploymentGroupOutput::hooks_not_cleaned_up): <p>If the output contains no data, and the corresponding deployment group contained at least one Auto Scaling group, CodeDeploy successfully removed all corresponding Auto Scaling lifecycle event hooks from the Amazon EC2 instances in the Auto Scaling group. If the output contains data, CodeDeploy could not remove some Auto Scaling lifecycle event hooks from the Amazon EC2 instances in the Auto Scaling group.</p>
    /// - On failure, responds with [`SdkError<DeleteDeploymentGroupError>`](crate::operation::delete_deployment_group::DeleteDeploymentGroupError)
    pub fn delete_deployment_group(
        &self,
    ) -> crate::operation::delete_deployment_group::builders::DeleteDeploymentGroupFluentBuilder
    {
        crate::operation::delete_deployment_group::builders::DeleteDeploymentGroupFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
