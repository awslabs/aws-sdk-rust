// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about an Auto Scaling group.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AutoScalingGroup {
    /// <p>The Auto Scaling group name.</p>
    #[doc(hidden)]
    pub name: std::option::Option<std::string::String>,
    /// <p>An Auto Scaling lifecycle event hook name.</p>
    #[doc(hidden)]
    pub hook: std::option::Option<std::string::String>,
}
impl AutoScalingGroup {
    /// <p>The Auto Scaling group name.</p>
    pub fn name(&self) -> std::option::Option<&str> {
        self.name.as_deref()
    }
    /// <p>An Auto Scaling lifecycle event hook name.</p>
    pub fn hook(&self) -> std::option::Option<&str> {
        self.hook.as_deref()
    }
}
impl AutoScalingGroup {
    /// Creates a new builder-style object to manufacture [`AutoScalingGroup`](crate::types::AutoScalingGroup).
    pub fn builder() -> crate::types::builders::AutoScalingGroupBuilder {
        crate::types::builders::AutoScalingGroupBuilder::default()
    }
}

/// A builder for [`AutoScalingGroup`](crate::types::AutoScalingGroup).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AutoScalingGroupBuilder {
    pub(crate) name: std::option::Option<std::string::String>,
    pub(crate) hook: std::option::Option<std::string::String>,
}
impl AutoScalingGroupBuilder {
    /// <p>The Auto Scaling group name.</p>
    pub fn name(mut self, input: impl Into<std::string::String>) -> Self {
        self.name = Some(input.into());
        self
    }
    /// <p>The Auto Scaling group name.</p>
    pub fn set_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>An Auto Scaling lifecycle event hook name.</p>
    pub fn hook(mut self, input: impl Into<std::string::String>) -> Self {
        self.hook = Some(input.into());
        self
    }
    /// <p>An Auto Scaling lifecycle event hook name.</p>
    pub fn set_hook(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.hook = input;
        self
    }
    /// Consumes the builder and constructs a [`AutoScalingGroup`](crate::types::AutoScalingGroup).
    pub fn build(self) -> crate::types::AutoScalingGroup {
        crate::types::AutoScalingGroup {
            name: self.name,
            hook: self.hook,
        }
    }
}
