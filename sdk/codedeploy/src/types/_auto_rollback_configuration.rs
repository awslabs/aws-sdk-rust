// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about a configuration for automatically rolling back to a previous version of an application revision when a deployment is not completed successfully.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct AutoRollbackConfiguration {
    /// <p>Indicates whether a defined automatic rollback configuration is currently enabled.</p>
    #[doc(hidden)]
    pub enabled: bool,
    /// <p>The event type or types that trigger a rollback.</p>
    #[doc(hidden)]
    pub events: std::option::Option<std::vec::Vec<crate::types::AutoRollbackEvent>>,
}
impl AutoRollbackConfiguration {
    /// <p>Indicates whether a defined automatic rollback configuration is currently enabled.</p>
    pub fn enabled(&self) -> bool {
        self.enabled
    }
    /// <p>The event type or types that trigger a rollback.</p>
    pub fn events(&self) -> std::option::Option<&[crate::types::AutoRollbackEvent]> {
        self.events.as_deref()
    }
}
impl AutoRollbackConfiguration {
    /// Creates a new builder-style object to manufacture [`AutoRollbackConfiguration`](crate::types::AutoRollbackConfiguration).
    pub fn builder() -> crate::types::builders::AutoRollbackConfigurationBuilder {
        crate::types::builders::AutoRollbackConfigurationBuilder::default()
    }
}

/// A builder for [`AutoRollbackConfiguration`](crate::types::AutoRollbackConfiguration).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct AutoRollbackConfigurationBuilder {
    pub(crate) enabled: std::option::Option<bool>,
    pub(crate) events: std::option::Option<std::vec::Vec<crate::types::AutoRollbackEvent>>,
}
impl AutoRollbackConfigurationBuilder {
    /// <p>Indicates whether a defined automatic rollback configuration is currently enabled.</p>
    pub fn enabled(mut self, input: bool) -> Self {
        self.enabled = Some(input);
        self
    }
    /// <p>Indicates whether a defined automatic rollback configuration is currently enabled.</p>
    pub fn set_enabled(mut self, input: std::option::Option<bool>) -> Self {
        self.enabled = input;
        self
    }
    /// Appends an item to `events`.
    ///
    /// To override the contents of this collection use [`set_events`](Self::set_events).
    ///
    /// <p>The event type or types that trigger a rollback.</p>
    pub fn events(mut self, input: crate::types::AutoRollbackEvent) -> Self {
        let mut v = self.events.unwrap_or_default();
        v.push(input);
        self.events = Some(v);
        self
    }
    /// <p>The event type or types that trigger a rollback.</p>
    pub fn set_events(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::AutoRollbackEvent>>,
    ) -> Self {
        self.events = input;
        self
    }
    /// Consumes the builder and constructs a [`AutoRollbackConfiguration`](crate::types::AutoRollbackConfiguration).
    pub fn build(self) -> crate::types::AutoRollbackConfiguration {
        crate::types::AutoRollbackConfiguration {
            enabled: self.enabled.unwrap_or_default(),
            events: self.events,
        }
    }
}
