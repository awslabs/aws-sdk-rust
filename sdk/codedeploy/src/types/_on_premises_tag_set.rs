// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about groups of on-premises instance tags.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct OnPremisesTagSet {
    /// <p>A list that contains other lists of on-premises instance tag groups. For an instance to be included in the deployment group, it must be identified by all of the tag groups in the list.</p>
    #[doc(hidden)]
    pub on_premises_tag_set_list:
        std::option::Option<std::vec::Vec<std::vec::Vec<crate::types::TagFilter>>>,
}
impl OnPremisesTagSet {
    /// <p>A list that contains other lists of on-premises instance tag groups. For an instance to be included in the deployment group, it must be identified by all of the tag groups in the list.</p>
    pub fn on_premises_tag_set_list(
        &self,
    ) -> std::option::Option<&[std::vec::Vec<crate::types::TagFilter>]> {
        self.on_premises_tag_set_list.as_deref()
    }
}
impl OnPremisesTagSet {
    /// Creates a new builder-style object to manufacture [`OnPremisesTagSet`](crate::types::OnPremisesTagSet).
    pub fn builder() -> crate::types::builders::OnPremisesTagSetBuilder {
        crate::types::builders::OnPremisesTagSetBuilder::default()
    }
}

/// A builder for [`OnPremisesTagSet`](crate::types::OnPremisesTagSet).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct OnPremisesTagSetBuilder {
    pub(crate) on_premises_tag_set_list:
        std::option::Option<std::vec::Vec<std::vec::Vec<crate::types::TagFilter>>>,
}
impl OnPremisesTagSetBuilder {
    /// Appends an item to `on_premises_tag_set_list`.
    ///
    /// To override the contents of this collection use [`set_on_premises_tag_set_list`](Self::set_on_premises_tag_set_list).
    ///
    /// <p>A list that contains other lists of on-premises instance tag groups. For an instance to be included in the deployment group, it must be identified by all of the tag groups in the list.</p>
    pub fn on_premises_tag_set_list(
        mut self,
        input: std::vec::Vec<crate::types::TagFilter>,
    ) -> Self {
        let mut v = self.on_premises_tag_set_list.unwrap_or_default();
        v.push(input);
        self.on_premises_tag_set_list = Some(v);
        self
    }
    /// <p>A list that contains other lists of on-premises instance tag groups. For an instance to be included in the deployment group, it must be identified by all of the tag groups in the list.</p>
    pub fn set_on_premises_tag_set_list(
        mut self,
        input: std::option::Option<std::vec::Vec<std::vec::Vec<crate::types::TagFilter>>>,
    ) -> Self {
        self.on_premises_tag_set_list = input;
        self
    }
    /// Consumes the builder and constructs a [`OnPremisesTagSet`](crate::types::OnPremisesTagSet).
    pub fn build(self) -> crate::types::OnPremisesTagSet {
        crate::types::OnPremisesTagSet {
            on_premises_tag_set_list: self.on_premises_tag_set_list,
        }
    }
}
