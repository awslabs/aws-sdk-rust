// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Request for a list of datasets for an identity.
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ListDatasetsInput {
    /// A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE) created by Amazon Cognito. GUID generation is unique within a region.
    #[doc(hidden)]
    pub identity_pool_id: std::option::Option<std::string::String>,
    /// A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE) created by Amazon Cognito. GUID generation is unique within a region.
    #[doc(hidden)]
    pub identity_id: std::option::Option<std::string::String>,
    /// A pagination token for obtaining the next page of results.
    #[doc(hidden)]
    pub next_token: std::option::Option<std::string::String>,
    /// The maximum number of results to be returned.
    #[doc(hidden)]
    pub max_results: i32,
}
impl ListDatasetsInput {
    /// A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE) created by Amazon Cognito. GUID generation is unique within a region.
    pub fn identity_pool_id(&self) -> std::option::Option<&str> {
        self.identity_pool_id.as_deref()
    }
    /// A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE) created by Amazon Cognito. GUID generation is unique within a region.
    pub fn identity_id(&self) -> std::option::Option<&str> {
        self.identity_id.as_deref()
    }
    /// A pagination token for obtaining the next page of results.
    pub fn next_token(&self) -> std::option::Option<&str> {
        self.next_token.as_deref()
    }
    /// The maximum number of results to be returned.
    pub fn max_results(&self) -> i32 {
        self.max_results
    }
}
impl ListDatasetsInput {
    /// Creates a new builder-style object to manufacture [`ListDatasetsInput`](crate::operation::list_datasets::ListDatasetsInput).
    pub fn builder() -> crate::operation::list_datasets::builders::ListDatasetsInputBuilder {
        crate::operation::list_datasets::builders::ListDatasetsInputBuilder::default()
    }
}

/// A builder for [`ListDatasetsInput`](crate::operation::list_datasets::ListDatasetsInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ListDatasetsInputBuilder {
    pub(crate) identity_pool_id: std::option::Option<std::string::String>,
    pub(crate) identity_id: std::option::Option<std::string::String>,
    pub(crate) next_token: std::option::Option<std::string::String>,
    pub(crate) max_results: std::option::Option<i32>,
}
impl ListDatasetsInputBuilder {
    /// A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE) created by Amazon Cognito. GUID generation is unique within a region.
    pub fn identity_pool_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.identity_pool_id = Some(input.into());
        self
    }
    /// A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE) created by Amazon Cognito. GUID generation is unique within a region.
    pub fn set_identity_pool_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.identity_pool_id = input;
        self
    }
    /// A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE) created by Amazon Cognito. GUID generation is unique within a region.
    pub fn identity_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.identity_id = Some(input.into());
        self
    }
    /// A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE) created by Amazon Cognito. GUID generation is unique within a region.
    pub fn set_identity_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.identity_id = input;
        self
    }
    /// A pagination token for obtaining the next page of results.
    pub fn next_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.next_token = Some(input.into());
        self
    }
    /// A pagination token for obtaining the next page of results.
    pub fn set_next_token(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// The maximum number of results to be returned.
    pub fn max_results(mut self, input: i32) -> Self {
        self.max_results = Some(input);
        self
    }
    /// The maximum number of results to be returned.
    pub fn set_max_results(mut self, input: std::option::Option<i32>) -> Self {
        self.max_results = input;
        self
    }
    /// Consumes the builder and constructs a [`ListDatasetsInput`](crate::operation::list_datasets::ListDatasetsInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::list_datasets::ListDatasetsInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(crate::operation::list_datasets::ListDatasetsInput {
            identity_pool_id: self.identity_pool_id,
            identity_id: self.identity_id,
            next_token: self.next_token,
            max_results: self.max_results.unwrap_or_default(),
        })
    }
}
