// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The response from the GetCognitoEvents request</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GetCognitoEventsOutput {
    /// <p>The Cognito Events returned from the GetCognitoEvents request</p>
    #[doc(hidden)]
    pub events:
        std::option::Option<std::collections::HashMap<std::string::String, std::string::String>>,
    _request_id: Option<String>,
}
impl GetCognitoEventsOutput {
    /// <p>The Cognito Events returned from the GetCognitoEvents request</p>
    pub fn events(
        &self,
    ) -> std::option::Option<&std::collections::HashMap<std::string::String, std::string::String>>
    {
        self.events.as_ref()
    }
}
impl aws_http::request_id::RequestId for GetCognitoEventsOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl GetCognitoEventsOutput {
    /// Creates a new builder-style object to manufacture [`GetCognitoEventsOutput`](crate::operation::get_cognito_events::GetCognitoEventsOutput).
    pub fn builder() -> crate::operation::get_cognito_events::builders::GetCognitoEventsOutputBuilder
    {
        crate::operation::get_cognito_events::builders::GetCognitoEventsOutputBuilder::default()
    }
}

/// A builder for [`GetCognitoEventsOutput`](crate::operation::get_cognito_events::GetCognitoEventsOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct GetCognitoEventsOutputBuilder {
    pub(crate) events:
        std::option::Option<std::collections::HashMap<std::string::String, std::string::String>>,
    _request_id: Option<String>,
}
impl GetCognitoEventsOutputBuilder {
    /// Adds a key-value pair to `events`.
    ///
    /// To override the contents of this collection use [`set_events`](Self::set_events).
    ///
    /// <p>The Cognito Events returned from the GetCognitoEvents request</p>
    pub fn events(
        mut self,
        k: impl Into<std::string::String>,
        v: impl Into<std::string::String>,
    ) -> Self {
        let mut hash_map = self.events.unwrap_or_default();
        hash_map.insert(k.into(), v.into());
        self.events = Some(hash_map);
        self
    }
    /// <p>The Cognito Events returned from the GetCognitoEvents request</p>
    pub fn set_events(
        mut self,
        input: std::option::Option<
            std::collections::HashMap<std::string::String, std::string::String>,
        >,
    ) -> Self {
        self.events = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`GetCognitoEventsOutput`](crate::operation::get_cognito_events::GetCognitoEventsOutput).
    pub fn build(self) -> crate::operation::get_cognito_events::GetCognitoEventsOutput {
        crate::operation::get_cognito_events::GetCognitoEventsOutput {
            events: self.events,
            _request_id: self._request_id,
        }
    }
}
