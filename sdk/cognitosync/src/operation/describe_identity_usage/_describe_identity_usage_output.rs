// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// The response to a successful DescribeIdentityUsage request.
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DescribeIdentityUsageOutput {
    /// Usage information for the identity.
    #[doc(hidden)]
    pub identity_usage: std::option::Option<crate::types::IdentityUsage>,
    _request_id: Option<String>,
}
impl DescribeIdentityUsageOutput {
    /// Usage information for the identity.
    pub fn identity_usage(&self) -> std::option::Option<&crate::types::IdentityUsage> {
        self.identity_usage.as_ref()
    }
}
impl aws_http::request_id::RequestId for DescribeIdentityUsageOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl DescribeIdentityUsageOutput {
    /// Creates a new builder-style object to manufacture [`DescribeIdentityUsageOutput`](crate::operation::describe_identity_usage::DescribeIdentityUsageOutput).
    pub fn builder(
    ) -> crate::operation::describe_identity_usage::builders::DescribeIdentityUsageOutputBuilder
    {
        crate::operation::describe_identity_usage::builders::DescribeIdentityUsageOutputBuilder::default()
    }
}

/// A builder for [`DescribeIdentityUsageOutput`](crate::operation::describe_identity_usage::DescribeIdentityUsageOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DescribeIdentityUsageOutputBuilder {
    pub(crate) identity_usage: std::option::Option<crate::types::IdentityUsage>,
    _request_id: Option<String>,
}
impl DescribeIdentityUsageOutputBuilder {
    /// Usage information for the identity.
    pub fn identity_usage(mut self, input: crate::types::IdentityUsage) -> Self {
        self.identity_usage = Some(input);
        self
    }
    /// Usage information for the identity.
    pub fn set_identity_usage(
        mut self,
        input: std::option::Option<crate::types::IdentityUsage>,
    ) -> Self {
        self.identity_usage = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`DescribeIdentityUsageOutput`](crate::operation::describe_identity_usage::DescribeIdentityUsageOutput).
    pub fn build(self) -> crate::operation::describe_identity_usage::DescribeIdentityUsageOutput {
        crate::operation::describe_identity_usage::DescribeIdentityUsageOutput {
            identity_usage: self.identity_usage,
            _request_id: self._request_id,
        }
    }
}
