// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Usage information for the identity pool.
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct IdentityPoolUsage {
    /// A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE) created by Amazon Cognito. GUID generation is unique within a region.
    #[doc(hidden)]
    pub identity_pool_id: std::option::Option<std::string::String>,
    /// Number of sync sessions for the identity pool.
    #[doc(hidden)]
    pub sync_sessions_count: std::option::Option<i64>,
    /// Data storage information for the identity pool.
    #[doc(hidden)]
    pub data_storage: std::option::Option<i64>,
    /// Date on which the identity pool was last modified.
    #[doc(hidden)]
    pub last_modified_date: std::option::Option<aws_smithy_types::DateTime>,
}
impl IdentityPoolUsage {
    /// A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE) created by Amazon Cognito. GUID generation is unique within a region.
    pub fn identity_pool_id(&self) -> std::option::Option<&str> {
        self.identity_pool_id.as_deref()
    }
    /// Number of sync sessions for the identity pool.
    pub fn sync_sessions_count(&self) -> std::option::Option<i64> {
        self.sync_sessions_count
    }
    /// Data storage information for the identity pool.
    pub fn data_storage(&self) -> std::option::Option<i64> {
        self.data_storage
    }
    /// Date on which the identity pool was last modified.
    pub fn last_modified_date(&self) -> std::option::Option<&aws_smithy_types::DateTime> {
        self.last_modified_date.as_ref()
    }
}
impl IdentityPoolUsage {
    /// Creates a new builder-style object to manufacture [`IdentityPoolUsage`](crate::types::IdentityPoolUsage).
    pub fn builder() -> crate::types::builders::IdentityPoolUsageBuilder {
        crate::types::builders::IdentityPoolUsageBuilder::default()
    }
}

/// A builder for [`IdentityPoolUsage`](crate::types::IdentityPoolUsage).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct IdentityPoolUsageBuilder {
    pub(crate) identity_pool_id: std::option::Option<std::string::String>,
    pub(crate) sync_sessions_count: std::option::Option<i64>,
    pub(crate) data_storage: std::option::Option<i64>,
    pub(crate) last_modified_date: std::option::Option<aws_smithy_types::DateTime>,
}
impl IdentityPoolUsageBuilder {
    /// A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE) created by Amazon Cognito. GUID generation is unique within a region.
    pub fn identity_pool_id(mut self, input: impl Into<std::string::String>) -> Self {
        self.identity_pool_id = Some(input.into());
        self
    }
    /// A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE) created by Amazon Cognito. GUID generation is unique within a region.
    pub fn set_identity_pool_id(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.identity_pool_id = input;
        self
    }
    /// Number of sync sessions for the identity pool.
    pub fn sync_sessions_count(mut self, input: i64) -> Self {
        self.sync_sessions_count = Some(input);
        self
    }
    /// Number of sync sessions for the identity pool.
    pub fn set_sync_sessions_count(mut self, input: std::option::Option<i64>) -> Self {
        self.sync_sessions_count = input;
        self
    }
    /// Data storage information for the identity pool.
    pub fn data_storage(mut self, input: i64) -> Self {
        self.data_storage = Some(input);
        self
    }
    /// Data storage information for the identity pool.
    pub fn set_data_storage(mut self, input: std::option::Option<i64>) -> Self {
        self.data_storage = input;
        self
    }
    /// Date on which the identity pool was last modified.
    pub fn last_modified_date(mut self, input: aws_smithy_types::DateTime) -> Self {
        self.last_modified_date = Some(input);
        self
    }
    /// Date on which the identity pool was last modified.
    pub fn set_last_modified_date(
        mut self,
        input: std::option::Option<aws_smithy_types::DateTime>,
    ) -> Self {
        self.last_modified_date = input;
        self
    }
    /// Consumes the builder and constructs a [`IdentityPoolUsage`](crate::types::IdentityPoolUsage).
    pub fn build(self) -> crate::types::IdentityPoolUsage {
        crate::types::IdentityPoolUsage {
            identity_pool_id: self.identity_pool_id,
            sync_sessions_count: self.sync_sessions_count,
            data_storage: self.data_storage,
            last_modified_date: self.last_modified_date,
        }
    }
}
