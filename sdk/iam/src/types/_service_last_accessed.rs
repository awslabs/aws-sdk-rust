// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains details about the most recent attempt to access the service.</p>
/// <p>This data type is used as a response element in the <code>GetServiceLastAccessedDetails</code> operation.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ServiceLastAccessed {
    /// <p>The name of the service in which access was attempted.</p>
    pub service_name: ::std::string::String,
    /// <p>The date and time, in&nbsp;<a href="http://www.iso.org/iso/iso8601">ISO 8601 date-time format</a>, when an authenticated entity most recently attempted to access the service. Amazon Web Services does not report unauthenticated requests.</p>
    /// <p>This field is null if no IAM entities attempted to access the service within the <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_access-advisor.html#service-last-accessed-reporting-period">tracking period</a>.</p>
    pub last_authenticated: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>The namespace of the service in which access was attempted.</p>
    /// <p>To learn the service namespace of a service, see <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/reference_policies_actions-resources-contextkeys.html">Actions, resources, and condition keys for Amazon Web Services services</a> in the <i>Service Authorization Reference</i>. Choose the name of the service to view details for that service. In the first paragraph, find the service prefix. For example, <code>(service prefix: a4b)</code>. For more information about service namespaces, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#genref-aws-service-namespaces">Amazon Web Services Service Namespaces</a> in the&nbsp;<i>Amazon Web Services General Reference</i>.</p>
    pub service_namespace: ::std::string::String,
    /// <p>The ARN of the authenticated entity (user or role) that last attempted to access the service. Amazon Web Services does not report unauthenticated requests.</p>
    /// <p>This field is null if no IAM entities attempted to access the service within the <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_access-advisor.html#service-last-accessed-reporting-period">tracking period</a>.</p>
    pub last_authenticated_entity: ::std::option::Option<::std::string::String>,
    /// <p>The Region from which the authenticated entity (user or role) last attempted to access the service. Amazon Web Services does not report unauthenticated requests.</p>
    /// <p>This field is null if no IAM entities attempted to access the service within the <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_access-advisor.html#service-last-accessed-reporting-period">tracking period</a>.</p>
    pub last_authenticated_region: ::std::option::Option<::std::string::String>,
    /// <p>The total number of authenticated principals (root user, IAM users, or IAM roles) that have attempted to access the service.</p>
    /// <p>This field is null if no principals attempted to access the service within the <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_access-advisor.html#service-last-accessed-reporting-period">tracking period</a>.</p>
    pub total_authenticated_entities: ::std::option::Option<i32>,
    /// <p>An object that contains details about the most recent attempt to access a tracked action within the service.</p>
    /// <p>This field is null if there no tracked actions or if the principal did not use the tracked actions within the <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_access-advisor.html#service-last-accessed-reporting-period">tracking period</a>. This field is also null if the report was generated at the service level and not the action level. For more information, see the <code>Granularity</code> field in <code>GenerateServiceLastAccessedDetails</code>.</p>
    pub tracked_actions_last_accessed: ::std::option::Option<::std::vec::Vec<crate::types::TrackedActionLastAccessed>>,
}
impl ServiceLastAccessed {
    /// <p>The name of the service in which access was attempted.</p>
    pub fn service_name(&self) -> &str {
        use std::ops::Deref;
        self.service_name.deref()
    }
    /// <p>The date and time, in&nbsp;<a href="http://www.iso.org/iso/iso8601">ISO 8601 date-time format</a>, when an authenticated entity most recently attempted to access the service. Amazon Web Services does not report unauthenticated requests.</p>
    /// <p>This field is null if no IAM entities attempted to access the service within the <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_access-advisor.html#service-last-accessed-reporting-period">tracking period</a>.</p>
    pub fn last_authenticated(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.last_authenticated.as_ref()
    }
    /// <p>The namespace of the service in which access was attempted.</p>
    /// <p>To learn the service namespace of a service, see <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/reference_policies_actions-resources-contextkeys.html">Actions, resources, and condition keys for Amazon Web Services services</a> in the <i>Service Authorization Reference</i>. Choose the name of the service to view details for that service. In the first paragraph, find the service prefix. For example, <code>(service prefix: a4b)</code>. For more information about service namespaces, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#genref-aws-service-namespaces">Amazon Web Services Service Namespaces</a> in the&nbsp;<i>Amazon Web Services General Reference</i>.</p>
    pub fn service_namespace(&self) -> &str {
        use std::ops::Deref;
        self.service_namespace.deref()
    }
    /// <p>The ARN of the authenticated entity (user or role) that last attempted to access the service. Amazon Web Services does not report unauthenticated requests.</p>
    /// <p>This field is null if no IAM entities attempted to access the service within the <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_access-advisor.html#service-last-accessed-reporting-period">tracking period</a>.</p>
    pub fn last_authenticated_entity(&self) -> ::std::option::Option<&str> {
        self.last_authenticated_entity.as_deref()
    }
    /// <p>The Region from which the authenticated entity (user or role) last attempted to access the service. Amazon Web Services does not report unauthenticated requests.</p>
    /// <p>This field is null if no IAM entities attempted to access the service within the <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_access-advisor.html#service-last-accessed-reporting-period">tracking period</a>.</p>
    pub fn last_authenticated_region(&self) -> ::std::option::Option<&str> {
        self.last_authenticated_region.as_deref()
    }
    /// <p>The total number of authenticated principals (root user, IAM users, or IAM roles) that have attempted to access the service.</p>
    /// <p>This field is null if no principals attempted to access the service within the <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_access-advisor.html#service-last-accessed-reporting-period">tracking period</a>.</p>
    pub fn total_authenticated_entities(&self) -> ::std::option::Option<i32> {
        self.total_authenticated_entities
    }
    /// <p>An object that contains details about the most recent attempt to access a tracked action within the service.</p>
    /// <p>This field is null if there no tracked actions or if the principal did not use the tracked actions within the <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_access-advisor.html#service-last-accessed-reporting-period">tracking period</a>. This field is also null if the report was generated at the service level and not the action level. For more information, see the <code>Granularity</code> field in <code>GenerateServiceLastAccessedDetails</code>.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.tracked_actions_last_accessed.is_none()`.
    pub fn tracked_actions_last_accessed(&self) -> &[crate::types::TrackedActionLastAccessed] {
        self.tracked_actions_last_accessed.as_deref().unwrap_or_default()
    }
}
impl ServiceLastAccessed {
    /// Creates a new builder-style object to manufacture [`ServiceLastAccessed`](crate::types::ServiceLastAccessed).
    pub fn builder() -> crate::types::builders::ServiceLastAccessedBuilder {
        crate::types::builders::ServiceLastAccessedBuilder::default()
    }
}

/// A builder for [`ServiceLastAccessed`](crate::types::ServiceLastAccessed).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ServiceLastAccessedBuilder {
    pub(crate) service_name: ::std::option::Option<::std::string::String>,
    pub(crate) last_authenticated: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) service_namespace: ::std::option::Option<::std::string::String>,
    pub(crate) last_authenticated_entity: ::std::option::Option<::std::string::String>,
    pub(crate) last_authenticated_region: ::std::option::Option<::std::string::String>,
    pub(crate) total_authenticated_entities: ::std::option::Option<i32>,
    pub(crate) tracked_actions_last_accessed: ::std::option::Option<::std::vec::Vec<crate::types::TrackedActionLastAccessed>>,
}
impl ServiceLastAccessedBuilder {
    /// <p>The name of the service in which access was attempted.</p>
    /// This field is required.
    pub fn service_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.service_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the service in which access was attempted.</p>
    pub fn set_service_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.service_name = input;
        self
    }
    /// <p>The name of the service in which access was attempted.</p>
    pub fn get_service_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.service_name
    }
    /// <p>The date and time, in&nbsp;<a href="http://www.iso.org/iso/iso8601">ISO 8601 date-time format</a>, when an authenticated entity most recently attempted to access the service. Amazon Web Services does not report unauthenticated requests.</p>
    /// <p>This field is null if no IAM entities attempted to access the service within the <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_access-advisor.html#service-last-accessed-reporting-period">tracking period</a>.</p>
    pub fn last_authenticated(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.last_authenticated = ::std::option::Option::Some(input);
        self
    }
    /// <p>The date and time, in&nbsp;<a href="http://www.iso.org/iso/iso8601">ISO 8601 date-time format</a>, when an authenticated entity most recently attempted to access the service. Amazon Web Services does not report unauthenticated requests.</p>
    /// <p>This field is null if no IAM entities attempted to access the service within the <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_access-advisor.html#service-last-accessed-reporting-period">tracking period</a>.</p>
    pub fn set_last_authenticated(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.last_authenticated = input;
        self
    }
    /// <p>The date and time, in&nbsp;<a href="http://www.iso.org/iso/iso8601">ISO 8601 date-time format</a>, when an authenticated entity most recently attempted to access the service. Amazon Web Services does not report unauthenticated requests.</p>
    /// <p>This field is null if no IAM entities attempted to access the service within the <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_access-advisor.html#service-last-accessed-reporting-period">tracking period</a>.</p>
    pub fn get_last_authenticated(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.last_authenticated
    }
    /// <p>The namespace of the service in which access was attempted.</p>
    /// <p>To learn the service namespace of a service, see <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/reference_policies_actions-resources-contextkeys.html">Actions, resources, and condition keys for Amazon Web Services services</a> in the <i>Service Authorization Reference</i>. Choose the name of the service to view details for that service. In the first paragraph, find the service prefix. For example, <code>(service prefix: a4b)</code>. For more information about service namespaces, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#genref-aws-service-namespaces">Amazon Web Services Service Namespaces</a> in the&nbsp;<i>Amazon Web Services General Reference</i>.</p>
    /// This field is required.
    pub fn service_namespace(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.service_namespace = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The namespace of the service in which access was attempted.</p>
    /// <p>To learn the service namespace of a service, see <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/reference_policies_actions-resources-contextkeys.html">Actions, resources, and condition keys for Amazon Web Services services</a> in the <i>Service Authorization Reference</i>. Choose the name of the service to view details for that service. In the first paragraph, find the service prefix. For example, <code>(service prefix: a4b)</code>. For more information about service namespaces, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#genref-aws-service-namespaces">Amazon Web Services Service Namespaces</a> in the&nbsp;<i>Amazon Web Services General Reference</i>.</p>
    pub fn set_service_namespace(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.service_namespace = input;
        self
    }
    /// <p>The namespace of the service in which access was attempted.</p>
    /// <p>To learn the service namespace of a service, see <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/reference_policies_actions-resources-contextkeys.html">Actions, resources, and condition keys for Amazon Web Services services</a> in the <i>Service Authorization Reference</i>. Choose the name of the service to view details for that service. In the first paragraph, find the service prefix. For example, <code>(service prefix: a4b)</code>. For more information about service namespaces, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#genref-aws-service-namespaces">Amazon Web Services Service Namespaces</a> in the&nbsp;<i>Amazon Web Services General Reference</i>.</p>
    pub fn get_service_namespace(&self) -> &::std::option::Option<::std::string::String> {
        &self.service_namespace
    }
    /// <p>The ARN of the authenticated entity (user or role) that last attempted to access the service. Amazon Web Services does not report unauthenticated requests.</p>
    /// <p>This field is null if no IAM entities attempted to access the service within the <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_access-advisor.html#service-last-accessed-reporting-period">tracking period</a>.</p>
    pub fn last_authenticated_entity(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.last_authenticated_entity = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ARN of the authenticated entity (user or role) that last attempted to access the service. Amazon Web Services does not report unauthenticated requests.</p>
    /// <p>This field is null if no IAM entities attempted to access the service within the <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_access-advisor.html#service-last-accessed-reporting-period">tracking period</a>.</p>
    pub fn set_last_authenticated_entity(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.last_authenticated_entity = input;
        self
    }
    /// <p>The ARN of the authenticated entity (user or role) that last attempted to access the service. Amazon Web Services does not report unauthenticated requests.</p>
    /// <p>This field is null if no IAM entities attempted to access the service within the <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_access-advisor.html#service-last-accessed-reporting-period">tracking period</a>.</p>
    pub fn get_last_authenticated_entity(&self) -> &::std::option::Option<::std::string::String> {
        &self.last_authenticated_entity
    }
    /// <p>The Region from which the authenticated entity (user or role) last attempted to access the service. Amazon Web Services does not report unauthenticated requests.</p>
    /// <p>This field is null if no IAM entities attempted to access the service within the <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_access-advisor.html#service-last-accessed-reporting-period">tracking period</a>.</p>
    pub fn last_authenticated_region(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.last_authenticated_region = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Region from which the authenticated entity (user or role) last attempted to access the service. Amazon Web Services does not report unauthenticated requests.</p>
    /// <p>This field is null if no IAM entities attempted to access the service within the <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_access-advisor.html#service-last-accessed-reporting-period">tracking period</a>.</p>
    pub fn set_last_authenticated_region(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.last_authenticated_region = input;
        self
    }
    /// <p>The Region from which the authenticated entity (user or role) last attempted to access the service. Amazon Web Services does not report unauthenticated requests.</p>
    /// <p>This field is null if no IAM entities attempted to access the service within the <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_access-advisor.html#service-last-accessed-reporting-period">tracking period</a>.</p>
    pub fn get_last_authenticated_region(&self) -> &::std::option::Option<::std::string::String> {
        &self.last_authenticated_region
    }
    /// <p>The total number of authenticated principals (root user, IAM users, or IAM roles) that have attempted to access the service.</p>
    /// <p>This field is null if no principals attempted to access the service within the <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_access-advisor.html#service-last-accessed-reporting-period">tracking period</a>.</p>
    pub fn total_authenticated_entities(mut self, input: i32) -> Self {
        self.total_authenticated_entities = ::std::option::Option::Some(input);
        self
    }
    /// <p>The total number of authenticated principals (root user, IAM users, or IAM roles) that have attempted to access the service.</p>
    /// <p>This field is null if no principals attempted to access the service within the <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_access-advisor.html#service-last-accessed-reporting-period">tracking period</a>.</p>
    pub fn set_total_authenticated_entities(mut self, input: ::std::option::Option<i32>) -> Self {
        self.total_authenticated_entities = input;
        self
    }
    /// <p>The total number of authenticated principals (root user, IAM users, or IAM roles) that have attempted to access the service.</p>
    /// <p>This field is null if no principals attempted to access the service within the <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_access-advisor.html#service-last-accessed-reporting-period">tracking period</a>.</p>
    pub fn get_total_authenticated_entities(&self) -> &::std::option::Option<i32> {
        &self.total_authenticated_entities
    }
    /// Appends an item to `tracked_actions_last_accessed`.
    ///
    /// To override the contents of this collection use [`set_tracked_actions_last_accessed`](Self::set_tracked_actions_last_accessed).
    ///
    /// <p>An object that contains details about the most recent attempt to access a tracked action within the service.</p>
    /// <p>This field is null if there no tracked actions or if the principal did not use the tracked actions within the <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_access-advisor.html#service-last-accessed-reporting-period">tracking period</a>. This field is also null if the report was generated at the service level and not the action level. For more information, see the <code>Granularity</code> field in <code>GenerateServiceLastAccessedDetails</code>.</p>
    pub fn tracked_actions_last_accessed(mut self, input: crate::types::TrackedActionLastAccessed) -> Self {
        let mut v = self.tracked_actions_last_accessed.unwrap_or_default();
        v.push(input);
        self.tracked_actions_last_accessed = ::std::option::Option::Some(v);
        self
    }
    /// <p>An object that contains details about the most recent attempt to access a tracked action within the service.</p>
    /// <p>This field is null if there no tracked actions or if the principal did not use the tracked actions within the <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_access-advisor.html#service-last-accessed-reporting-period">tracking period</a>. This field is also null if the report was generated at the service level and not the action level. For more information, see the <code>Granularity</code> field in <code>GenerateServiceLastAccessedDetails</code>.</p>
    pub fn set_tracked_actions_last_accessed(
        mut self,
        input: ::std::option::Option<::std::vec::Vec<crate::types::TrackedActionLastAccessed>>,
    ) -> Self {
        self.tracked_actions_last_accessed = input;
        self
    }
    /// <p>An object that contains details about the most recent attempt to access a tracked action within the service.</p>
    /// <p>This field is null if there no tracked actions or if the principal did not use the tracked actions within the <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_access-advisor.html#service-last-accessed-reporting-period">tracking period</a>. This field is also null if the report was generated at the service level and not the action level. For more information, see the <code>Granularity</code> field in <code>GenerateServiceLastAccessedDetails</code>.</p>
    pub fn get_tracked_actions_last_accessed(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::TrackedActionLastAccessed>> {
        &self.tracked_actions_last_accessed
    }
    /// Consumes the builder and constructs a [`ServiceLastAccessed`](crate::types::ServiceLastAccessed).
    /// This method will fail if any of the following fields are not set:
    /// - [`service_name`](crate::types::builders::ServiceLastAccessedBuilder::service_name)
    /// - [`service_namespace`](crate::types::builders::ServiceLastAccessedBuilder::service_namespace)
    pub fn build(self) -> ::std::result::Result<crate::types::ServiceLastAccessed, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::types::ServiceLastAccessed {
            service_name: self.service_name.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "service_name",
                    "service_name was not specified but it is required when building ServiceLastAccessed",
                )
            })?,
            last_authenticated: self.last_authenticated,
            service_namespace: self.service_namespace.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "service_namespace",
                    "service_namespace was not specified but it is required when building ServiceLastAccessed",
                )
            })?,
            last_authenticated_entity: self.last_authenticated_entity,
            last_authenticated_region: self.last_authenticated_region,
            total_authenticated_entities: self.total_authenticated_entities,
            tracked_actions_last_accessed: self.tracked_actions_last_accessed,
        })
    }
}
