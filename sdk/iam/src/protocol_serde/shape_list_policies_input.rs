// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_list_policies_input_input(
    input: &crate::operation::list_policies::ListPoliciesInput,
) -> Result<aws_smithy_http::body::SdkBody, aws_smithy_http::operation::error::SerializationError> {
    let mut out = String::new();
    #[allow(unused_mut)]
    let mut writer = aws_smithy_query::QueryWriter::new(&mut out, "ListPolicies", "2010-05-08");
    #[allow(unused_mut)]
    let mut scope_1 = writer.prefix("Scope");
    if let Some(var_2) = &input.scope {
        scope_1.string(var_2.as_str());
    }
    #[allow(unused_mut)]
    let mut scope_3 = writer.prefix("OnlyAttached");
    if input.only_attached {
        scope_3.boolean(input.only_attached);
    }
    #[allow(unused_mut)]
    let mut scope_4 = writer.prefix("PathPrefix");
    if let Some(var_5) = &input.path_prefix {
        scope_4.string(var_5);
    }
    #[allow(unused_mut)]
    let mut scope_6 = writer.prefix("PolicyUsageFilter");
    if let Some(var_7) = &input.policy_usage_filter {
        scope_6.string(var_7.as_str());
    }
    #[allow(unused_mut)]
    let mut scope_8 = writer.prefix("Marker");
    if let Some(var_9) = &input.marker {
        scope_8.string(var_9);
    }
    #[allow(unused_mut)]
    let mut scope_10 = writer.prefix("MaxItems");
    if let Some(var_11) = &input.max_items {
        scope_10.number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_11).into()),
        );
    }
    writer.finish();
    Ok(aws_smithy_http::body::SdkBody::from(out))
}
