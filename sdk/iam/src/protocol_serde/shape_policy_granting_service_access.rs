// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn de_policy_granting_service_access(
    decoder: &mut aws_smithy_xml::decode::ScopedDecoder,
) -> Result<crate::types::PolicyGrantingServiceAccess, aws_smithy_xml::decode::XmlDecodeError> {
    #[allow(unused_mut)]
    let mut builder = crate::types::PolicyGrantingServiceAccess::builder();
    while let Some(mut tag) = decoder.next_tag() {
        match tag.start_el() {
            s if s.matches("PolicyName") /* PolicyName com.amazonaws.iam#PolicyGrantingServiceAccess$PolicyName */ =>  {
                let var_1 =
                    Some(
                        Result::<std::string::String, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_policy_name(var_1);
            }
            ,
            s if s.matches("PolicyType") /* PolicyType com.amazonaws.iam#PolicyGrantingServiceAccess$PolicyType */ =>  {
                let var_2 =
                    Some(
                        Result::<crate::types::PolicyType, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            crate::types::PolicyType::from(
                                aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                        )
                        ?
                    )
                ;
                builder = builder.set_policy_type(var_2);
            }
            ,
            s if s.matches("PolicyArn") /* PolicyArn com.amazonaws.iam#PolicyGrantingServiceAccess$PolicyArn */ =>  {
                let var_3 =
                    Some(
                        Result::<std::string::String, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_policy_arn(var_3);
            }
            ,
            s if s.matches("EntityType") /* EntityType com.amazonaws.iam#PolicyGrantingServiceAccess$EntityType */ =>  {
                let var_4 =
                    Some(
                        Result::<crate::types::PolicyOwnerEntityType, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            crate::types::PolicyOwnerEntityType::from(
                                aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                        )
                        ?
                    )
                ;
                builder = builder.set_entity_type(var_4);
            }
            ,
            s if s.matches("EntityName") /* EntityName com.amazonaws.iam#PolicyGrantingServiceAccess$EntityName */ =>  {
                let var_5 =
                    Some(
                        Result::<std::string::String, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_entity_name(var_5);
            }
            ,
            _ => {}
        }
    }
    Ok(builder.build())
}
