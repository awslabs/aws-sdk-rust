// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_update_account_password_policy_input_input(
    input: &crate::operation::update_account_password_policy::UpdateAccountPasswordPolicyInput,
) -> Result<aws_smithy_http::body::SdkBody, aws_smithy_http::operation::error::SerializationError> {
    let mut out = String::new();
    #[allow(unused_mut)]
    let mut writer =
        aws_smithy_query::QueryWriter::new(&mut out, "UpdateAccountPasswordPolicy", "2010-05-08");
    #[allow(unused_mut)]
    let mut scope_1 = writer.prefix("MinimumPasswordLength");
    if let Some(var_2) = &input.minimum_password_length {
        scope_1.number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_2).into()),
        );
    }
    #[allow(unused_mut)]
    let mut scope_3 = writer.prefix("RequireSymbols");
    if input.require_symbols {
        scope_3.boolean(input.require_symbols);
    }
    #[allow(unused_mut)]
    let mut scope_4 = writer.prefix("RequireNumbers");
    if input.require_numbers {
        scope_4.boolean(input.require_numbers);
    }
    #[allow(unused_mut)]
    let mut scope_5 = writer.prefix("RequireUppercaseCharacters");
    if input.require_uppercase_characters {
        scope_5.boolean(input.require_uppercase_characters);
    }
    #[allow(unused_mut)]
    let mut scope_6 = writer.prefix("RequireLowercaseCharacters");
    if input.require_lowercase_characters {
        scope_6.boolean(input.require_lowercase_characters);
    }
    #[allow(unused_mut)]
    let mut scope_7 = writer.prefix("AllowUsersToChangePassword");
    if input.allow_users_to_change_password {
        scope_7.boolean(input.allow_users_to_change_password);
    }
    #[allow(unused_mut)]
    let mut scope_8 = writer.prefix("MaxPasswordAge");
    if let Some(var_9) = &input.max_password_age {
        scope_8.number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_9).into()),
        );
    }
    #[allow(unused_mut)]
    let mut scope_10 = writer.prefix("PasswordReusePrevention");
    if let Some(var_11) = &input.password_reuse_prevention {
        scope_10.number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_11).into()),
        );
    }
    #[allow(unused_mut)]
    let mut scope_12 = writer.prefix("HardExpiry");
    if let Some(var_13) = &input.hard_expiry {
        scope_12.boolean(*var_13);
    }
    writer.finish();
    Ok(aws_smithy_http::body::SdkBody::from(out))
}
