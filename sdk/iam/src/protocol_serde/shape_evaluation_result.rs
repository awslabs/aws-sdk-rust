// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn de_evaluation_result(
    decoder: &mut aws_smithy_xml::decode::ScopedDecoder,
) -> Result<crate::types::EvaluationResult, aws_smithy_xml::decode::XmlDecodeError> {
    #[allow(unused_mut)]
    let mut builder = crate::types::EvaluationResult::builder();
    while let Some(mut tag) = decoder.next_tag() {
        match tag.start_el() {
            s if s.matches("EvalActionName") /* EvalActionName com.amazonaws.iam#EvaluationResult$EvalActionName */ =>  {
                let var_1 =
                    Some(
                        Result::<std::string::String, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_eval_action_name(var_1);
            }
            ,
            s if s.matches("EvalResourceName") /* EvalResourceName com.amazonaws.iam#EvaluationResult$EvalResourceName */ =>  {
                let var_2 =
                    Some(
                        Result::<std::string::String, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_eval_resource_name(var_2);
            }
            ,
            s if s.matches("EvalDecision") /* EvalDecision com.amazonaws.iam#EvaluationResult$EvalDecision */ =>  {
                let var_3 =
                    Some(
                        Result::<crate::types::PolicyEvaluationDecisionType, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            crate::types::PolicyEvaluationDecisionType::from(
                                aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                        )
                        ?
                    )
                ;
                builder = builder.set_eval_decision(var_3);
            }
            ,
            s if s.matches("MatchedStatements") /* MatchedStatements com.amazonaws.iam#EvaluationResult$MatchedStatements */ =>  {
                let var_4 =
                    Some(
                        crate::protocol_serde::shape_statement_list_type::de_statement_list_type(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_matched_statements(var_4);
            }
            ,
            s if s.matches("MissingContextValues") /* MissingContextValues com.amazonaws.iam#EvaluationResult$MissingContextValues */ =>  {
                let var_5 =
                    Some(
                        crate::protocol_serde::shape_context_key_names_result_list_type::de_context_key_names_result_list_type(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_missing_context_values(var_5);
            }
            ,
            s if s.matches("OrganizationsDecisionDetail") /* OrganizationsDecisionDetail com.amazonaws.iam#EvaluationResult$OrganizationsDecisionDetail */ =>  {
                let var_6 =
                    Some(
                        crate::protocol_serde::shape_organizations_decision_detail::de_organizations_decision_detail(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_organizations_decision_detail(var_6);
            }
            ,
            s if s.matches("PermissionsBoundaryDecisionDetail") /* PermissionsBoundaryDecisionDetail com.amazonaws.iam#EvaluationResult$PermissionsBoundaryDecisionDetail */ =>  {
                let var_7 =
                    Some(
                        crate::protocol_serde::shape_permissions_boundary_decision_detail::de_permissions_boundary_decision_detail(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_permissions_boundary_decision_detail(var_7);
            }
            ,
            s if s.matches("EvalDecisionDetails") /* EvalDecisionDetails com.amazonaws.iam#EvaluationResult$EvalDecisionDetails */ =>  {
                let var_8 =
                    Some(
                        crate::protocol_serde::shape_eval_decision_details_type::de_eval_decision_details_type(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_eval_decision_details(var_8);
            }
            ,
            s if s.matches("ResourceSpecificResults") /* ResourceSpecificResults com.amazonaws.iam#EvaluationResult$ResourceSpecificResults */ =>  {
                let var_9 =
                    Some(
                        crate::protocol_serde::shape_resource_specific_result_list_type::de_resource_specific_result_list_type(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_resource_specific_results(var_9);
            }
            ,
            _ => {}
        }
    }
    Ok(builder.build())
}
