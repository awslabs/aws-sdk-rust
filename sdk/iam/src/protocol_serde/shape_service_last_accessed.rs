// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn de_service_last_accessed(
    decoder: &mut aws_smithy_xml::decode::ScopedDecoder,
) -> Result<crate::types::ServiceLastAccessed, aws_smithy_xml::decode::XmlDecodeError> {
    #[allow(unused_mut)]
    let mut builder = crate::types::ServiceLastAccessed::builder();
    while let Some(mut tag) = decoder.next_tag() {
        match tag.start_el() {
            s if s.matches("ServiceName") /* ServiceName com.amazonaws.iam#ServiceLastAccessed$ServiceName */ =>  {
                let var_1 =
                    Some(
                        Result::<std::string::String, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_service_name(var_1);
            }
            ,
            s if s.matches("LastAuthenticated") /* LastAuthenticated com.amazonaws.iam#ServiceLastAccessed$LastAuthenticated */ =>  {
                let var_2 =
                    Some(
                        aws_smithy_types::DateTime::from_str(
                            aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            , aws_smithy_types::date_time::Format::DateTimeWithOffset
                        )
                        .map_err(|_|aws_smithy_xml::decode::XmlDecodeError::custom("expected (timestamp: `com.amazonaws.iam#dateType`)"))
                        ?
                    )
                ;
                builder = builder.set_last_authenticated(var_2);
            }
            ,
            s if s.matches("ServiceNamespace") /* ServiceNamespace com.amazonaws.iam#ServiceLastAccessed$ServiceNamespace */ =>  {
                let var_3 =
                    Some(
                        Result::<std::string::String, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_service_namespace(var_3);
            }
            ,
            s if s.matches("LastAuthenticatedEntity") /* LastAuthenticatedEntity com.amazonaws.iam#ServiceLastAccessed$LastAuthenticatedEntity */ =>  {
                let var_4 =
                    Some(
                        Result::<std::string::String, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_last_authenticated_entity(var_4);
            }
            ,
            s if s.matches("LastAuthenticatedRegion") /* LastAuthenticatedRegion com.amazonaws.iam#ServiceLastAccessed$LastAuthenticatedRegion */ =>  {
                let var_5 =
                    Some(
                        Result::<std::string::String, aws_smithy_xml::decode::XmlDecodeError>::Ok(
                            aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            .into()
                        )
                        ?
                    )
                ;
                builder = builder.set_last_authenticated_region(var_5);
            }
            ,
            s if s.matches("TotalAuthenticatedEntities") /* TotalAuthenticatedEntities com.amazonaws.iam#ServiceLastAccessed$TotalAuthenticatedEntities */ =>  {
                let var_6 =
                    Some(
                         {
                            <i32 as aws_smithy_types::primitive::Parse>::parse_smithy_primitive(
                                aws_smithy_xml::decode::try_data(&mut tag)?.as_ref()
                            )
                            .map_err(|_|aws_smithy_xml::decode::XmlDecodeError::custom("expected (integer: `com.amazonaws.iam#integerType`)"))
                        }
                        ?
                    )
                ;
                builder = builder.set_total_authenticated_entities(var_6);
            }
            ,
            s if s.matches("TrackedActionsLastAccessed") /* TrackedActionsLastAccessed com.amazonaws.iam#ServiceLastAccessed$TrackedActionsLastAccessed */ =>  {
                let var_7 =
                    Some(
                        crate::protocol_serde::shape_tracked_actions_last_accessed::de_tracked_actions_last_accessed(&mut tag)
                        ?
                    )
                ;
                builder = builder.set_tracked_actions_last_accessed(var_7);
            }
            ,
            _ => {}
        }
    }
    Ok(builder.build())
}
