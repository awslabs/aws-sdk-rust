// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains the response to a successful <code>GetAccountPasswordPolicy</code> request. </p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GetAccountPasswordPolicyOutput {
    /// <p>A structure that contains details about the account's password policy.</p>
    pub password_policy: ::std::option::Option<crate::types::PasswordPolicy>,
    _request_id: Option<String>,
}
impl GetAccountPasswordPolicyOutput {
    /// <p>A structure that contains details about the account's password policy.</p>
    pub fn password_policy(&self) -> ::std::option::Option<&crate::types::PasswordPolicy> {
        self.password_policy.as_ref()
    }
}
impl ::aws_http::request_id::RequestId for GetAccountPasswordPolicyOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl GetAccountPasswordPolicyOutput {
    /// Creates a new builder-style object to manufacture [`GetAccountPasswordPolicyOutput`](crate::operation::get_account_password_policy::GetAccountPasswordPolicyOutput).
    pub fn builder() -> crate::operation::get_account_password_policy::builders::GetAccountPasswordPolicyOutputBuilder {
        crate::operation::get_account_password_policy::builders::GetAccountPasswordPolicyOutputBuilder::default()
    }
}

/// A builder for [`GetAccountPasswordPolicyOutput`](crate::operation::get_account_password_policy::GetAccountPasswordPolicyOutput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct GetAccountPasswordPolicyOutputBuilder {
    pub(crate) password_policy: ::std::option::Option<crate::types::PasswordPolicy>,
    _request_id: Option<String>,
}
impl GetAccountPasswordPolicyOutputBuilder {
    /// <p>A structure that contains details about the account's password policy.</p>
    /// This field is required.
    pub fn password_policy(mut self, input: crate::types::PasswordPolicy) -> Self {
        self.password_policy = ::std::option::Option::Some(input);
        self
    }
    /// <p>A structure that contains details about the account's password policy.</p>
    pub fn set_password_policy(mut self, input: ::std::option::Option<crate::types::PasswordPolicy>) -> Self {
        self.password_policy = input;
        self
    }
    /// <p>A structure that contains details about the account's password policy.</p>
    pub fn get_password_policy(&self) -> &::std::option::Option<crate::types::PasswordPolicy> {
        &self.password_policy
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`GetAccountPasswordPolicyOutput`](crate::operation::get_account_password_policy::GetAccountPasswordPolicyOutput).
    pub fn build(self) -> crate::operation::get_account_password_policy::GetAccountPasswordPolicyOutput {
        crate::operation::get_account_password_policy::GetAccountPasswordPolicyOutput {
            password_policy: self.password_policy,
            _request_id: self._request_id,
        }
    }
}
