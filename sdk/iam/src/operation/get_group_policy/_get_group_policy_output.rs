// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains the response to a successful <code>GetGroupPolicy</code> request. </p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GetGroupPolicyOutput {
    /// <p>The group the policy is associated with.</p>
    #[doc(hidden)]
    pub group_name: std::option::Option<std::string::String>,
    /// <p>The name of the policy.</p>
    #[doc(hidden)]
    pub policy_name: std::option::Option<std::string::String>,
    /// <p>The policy document.</p>
    /// <p>IAM stores policies in JSON format. However, resources that were created using CloudFormation templates can be formatted in YAML. CloudFormation always converts a YAML policy to JSON format before submitting it to IAM.</p>
    #[doc(hidden)]
    pub policy_document: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl GetGroupPolicyOutput {
    /// <p>The group the policy is associated with.</p>
    pub fn group_name(&self) -> std::option::Option<&str> {
        self.group_name.as_deref()
    }
    /// <p>The name of the policy.</p>
    pub fn policy_name(&self) -> std::option::Option<&str> {
        self.policy_name.as_deref()
    }
    /// <p>The policy document.</p>
    /// <p>IAM stores policies in JSON format. However, resources that were created using CloudFormation templates can be formatted in YAML. CloudFormation always converts a YAML policy to JSON format before submitting it to IAM.</p>
    pub fn policy_document(&self) -> std::option::Option<&str> {
        self.policy_document.as_deref()
    }
}
impl aws_http::request_id::RequestId for GetGroupPolicyOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl GetGroupPolicyOutput {
    /// Creates a new builder-style object to manufacture [`GetGroupPolicyOutput`](crate::operation::get_group_policy::GetGroupPolicyOutput).
    pub fn builder() -> crate::operation::get_group_policy::builders::GetGroupPolicyOutputBuilder {
        crate::operation::get_group_policy::builders::GetGroupPolicyOutputBuilder::default()
    }
}

/// A builder for [`GetGroupPolicyOutput`](crate::operation::get_group_policy::GetGroupPolicyOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct GetGroupPolicyOutputBuilder {
    pub(crate) group_name: std::option::Option<std::string::String>,
    pub(crate) policy_name: std::option::Option<std::string::String>,
    pub(crate) policy_document: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl GetGroupPolicyOutputBuilder {
    /// <p>The group the policy is associated with.</p>
    pub fn group_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.group_name = Some(input.into());
        self
    }
    /// <p>The group the policy is associated with.</p>
    pub fn set_group_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.group_name = input;
        self
    }
    /// <p>The name of the policy.</p>
    pub fn policy_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.policy_name = Some(input.into());
        self
    }
    /// <p>The name of the policy.</p>
    pub fn set_policy_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.policy_name = input;
        self
    }
    /// <p>The policy document.</p>
    /// <p>IAM stores policies in JSON format. However, resources that were created using CloudFormation templates can be formatted in YAML. CloudFormation always converts a YAML policy to JSON format before submitting it to IAM.</p>
    pub fn policy_document(mut self, input: impl Into<std::string::String>) -> Self {
        self.policy_document = Some(input.into());
        self
    }
    /// <p>The policy document.</p>
    /// <p>IAM stores policies in JSON format. However, resources that were created using CloudFormation templates can be formatted in YAML. CloudFormation always converts a YAML policy to JSON format before submitting it to IAM.</p>
    pub fn set_policy_document(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.policy_document = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`GetGroupPolicyOutput`](crate::operation::get_group_policy::GetGroupPolicyOutput).
    pub fn build(self) -> crate::operation::get_group_policy::GetGroupPolicyOutput {
        crate::operation::get_group_policy::GetGroupPolicyOutput {
            group_name: self.group_name,
            policy_name: self.policy_name,
            policy_document: self.policy_document,
            _request_id: self._request_id,
        }
    }
}
