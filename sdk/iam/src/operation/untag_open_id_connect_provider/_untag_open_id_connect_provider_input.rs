// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct UntagOpenIdConnectProviderInput {
    /// <p>The ARN of the OIDC provider in IAM from which you want to remove tags.</p>
    /// <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>
    #[doc(hidden)]
    pub open_id_connect_provider_arn: std::option::Option<std::string::String>,
    /// <p>A list of key names as a simple array of strings. The tags with matching keys are removed from the specified OIDC provider.</p>
    #[doc(hidden)]
    pub tag_keys: std::option::Option<std::vec::Vec<std::string::String>>,
}
impl UntagOpenIdConnectProviderInput {
    /// <p>The ARN of the OIDC provider in IAM from which you want to remove tags.</p>
    /// <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>
    pub fn open_id_connect_provider_arn(&self) -> std::option::Option<&str> {
        self.open_id_connect_provider_arn.as_deref()
    }
    /// <p>A list of key names as a simple array of strings. The tags with matching keys are removed from the specified OIDC provider.</p>
    pub fn tag_keys(&self) -> std::option::Option<&[std::string::String]> {
        self.tag_keys.as_deref()
    }
}
impl UntagOpenIdConnectProviderInput {
    /// Creates a new builder-style object to manufacture [`UntagOpenIdConnectProviderInput`](crate::operation::untag_open_id_connect_provider::UntagOpenIdConnectProviderInput).
    pub fn builder() -> crate::operation::untag_open_id_connect_provider::builders::UntagOpenIdConnectProviderInputBuilder{
        crate::operation::untag_open_id_connect_provider::builders::UntagOpenIdConnectProviderInputBuilder::default()
    }
}

/// A builder for [`UntagOpenIdConnectProviderInput`](crate::operation::untag_open_id_connect_provider::UntagOpenIdConnectProviderInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct UntagOpenIdConnectProviderInputBuilder {
    pub(crate) open_id_connect_provider_arn: std::option::Option<std::string::String>,
    pub(crate) tag_keys: std::option::Option<std::vec::Vec<std::string::String>>,
}
impl UntagOpenIdConnectProviderInputBuilder {
    /// <p>The ARN of the OIDC provider in IAM from which you want to remove tags.</p>
    /// <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>
    pub fn open_id_connect_provider_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.open_id_connect_provider_arn = Some(input.into());
        self
    }
    /// <p>The ARN of the OIDC provider in IAM from which you want to remove tags.</p>
    /// <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>
    pub fn set_open_id_connect_provider_arn(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.open_id_connect_provider_arn = input;
        self
    }
    /// Appends an item to `tag_keys`.
    ///
    /// To override the contents of this collection use [`set_tag_keys`](Self::set_tag_keys).
    ///
    /// <p>A list of key names as a simple array of strings. The tags with matching keys are removed from the specified OIDC provider.</p>
    pub fn tag_keys(mut self, input: impl Into<std::string::String>) -> Self {
        let mut v = self.tag_keys.unwrap_or_default();
        v.push(input.into());
        self.tag_keys = Some(v);
        self
    }
    /// <p>A list of key names as a simple array of strings. The tags with matching keys are removed from the specified OIDC provider.</p>
    pub fn set_tag_keys(
        mut self,
        input: std::option::Option<std::vec::Vec<std::string::String>>,
    ) -> Self {
        self.tag_keys = input;
        self
    }
    /// Consumes the builder and constructs a [`UntagOpenIdConnectProviderInput`](crate::operation::untag_open_id_connect_provider::UntagOpenIdConnectProviderInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::untag_open_id_connect_provider::UntagOpenIdConnectProviderInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::untag_open_id_connect_provider::UntagOpenIdConnectProviderInput {
                open_id_connect_provider_arn: self.open_id_connect_provider_arn,
                tag_keys: self.tag_keys,
            },
        )
    }
}
