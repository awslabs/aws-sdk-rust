// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains the response to a successful <code>GetAccessKeyLastUsed</code> request. It is also returned as a member of the <code>AccessKeyMetaData</code> structure returned by the <code>ListAccessKeys</code> action.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GetAccessKeyLastUsedOutput {
    /// <p>The name of the IAM user that owns this access key.</p>
    /// <p></p>
    #[doc(hidden)]
    pub user_name: std::option::Option<std::string::String>,
    /// <p>Contains information about the last time the access key was used.</p>
    #[doc(hidden)]
    pub access_key_last_used: std::option::Option<crate::types::AccessKeyLastUsed>,
    _request_id: Option<String>,
}
impl GetAccessKeyLastUsedOutput {
    /// <p>The name of the IAM user that owns this access key.</p>
    /// <p></p>
    pub fn user_name(&self) -> std::option::Option<&str> {
        self.user_name.as_deref()
    }
    /// <p>Contains information about the last time the access key was used.</p>
    pub fn access_key_last_used(&self) -> std::option::Option<&crate::types::AccessKeyLastUsed> {
        self.access_key_last_used.as_ref()
    }
}
impl aws_http::request_id::RequestId for GetAccessKeyLastUsedOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl GetAccessKeyLastUsedOutput {
    /// Creates a new builder-style object to manufacture [`GetAccessKeyLastUsedOutput`](crate::operation::get_access_key_last_used::GetAccessKeyLastUsedOutput).
    pub fn builder(
    ) -> crate::operation::get_access_key_last_used::builders::GetAccessKeyLastUsedOutputBuilder
    {
        crate::operation::get_access_key_last_used::builders::GetAccessKeyLastUsedOutputBuilder::default()
    }
}

/// A builder for [`GetAccessKeyLastUsedOutput`](crate::operation::get_access_key_last_used::GetAccessKeyLastUsedOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct GetAccessKeyLastUsedOutputBuilder {
    pub(crate) user_name: std::option::Option<std::string::String>,
    pub(crate) access_key_last_used: std::option::Option<crate::types::AccessKeyLastUsed>,
    _request_id: Option<String>,
}
impl GetAccessKeyLastUsedOutputBuilder {
    /// <p>The name of the IAM user that owns this access key.</p>
    /// <p></p>
    pub fn user_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.user_name = Some(input.into());
        self
    }
    /// <p>The name of the IAM user that owns this access key.</p>
    /// <p></p>
    pub fn set_user_name(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.user_name = input;
        self
    }
    /// <p>Contains information about the last time the access key was used.</p>
    pub fn access_key_last_used(mut self, input: crate::types::AccessKeyLastUsed) -> Self {
        self.access_key_last_used = Some(input);
        self
    }
    /// <p>Contains information about the last time the access key was used.</p>
    pub fn set_access_key_last_used(
        mut self,
        input: std::option::Option<crate::types::AccessKeyLastUsed>,
    ) -> Self {
        self.access_key_last_used = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`GetAccessKeyLastUsedOutput`](crate::operation::get_access_key_last_used::GetAccessKeyLastUsedOutput).
    pub fn build(self) -> crate::operation::get_access_key_last_used::GetAccessKeyLastUsedOutput {
        crate::operation::get_access_key_last_used::GetAccessKeyLastUsedOutput {
            user_name: self.user_name,
            access_key_last_used: self.access_key_last_used,
            _request_id: self._request_id,
        }
    }
}
