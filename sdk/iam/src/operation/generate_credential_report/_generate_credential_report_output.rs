// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains the response to a successful <code>GenerateCredentialReport</code> request. </p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GenerateCredentialReportOutput {
    /// <p>Information about the state of the credential report.</p>
    #[doc(hidden)]
    pub state: std::option::Option<crate::types::ReportStateType>,
    /// <p>Information about the credential report.</p>
    #[doc(hidden)]
    pub description: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl GenerateCredentialReportOutput {
    /// <p>Information about the state of the credential report.</p>
    pub fn state(&self) -> std::option::Option<&crate::types::ReportStateType> {
        self.state.as_ref()
    }
    /// <p>Information about the credential report.</p>
    pub fn description(&self) -> std::option::Option<&str> {
        self.description.as_deref()
    }
}
impl aws_http::request_id::RequestId for GenerateCredentialReportOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl GenerateCredentialReportOutput {
    /// Creates a new builder-style object to manufacture [`GenerateCredentialReportOutput`](crate::operation::generate_credential_report::GenerateCredentialReportOutput).
    pub fn builder(
    ) -> crate::operation::generate_credential_report::builders::GenerateCredentialReportOutputBuilder
    {
        crate::operation::generate_credential_report::builders::GenerateCredentialReportOutputBuilder::default()
    }
}

/// A builder for [`GenerateCredentialReportOutput`](crate::operation::generate_credential_report::GenerateCredentialReportOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct GenerateCredentialReportOutputBuilder {
    pub(crate) state: std::option::Option<crate::types::ReportStateType>,
    pub(crate) description: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl GenerateCredentialReportOutputBuilder {
    /// <p>Information about the state of the credential report.</p>
    pub fn state(mut self, input: crate::types::ReportStateType) -> Self {
        self.state = Some(input);
        self
    }
    /// <p>Information about the state of the credential report.</p>
    pub fn set_state(mut self, input: std::option::Option<crate::types::ReportStateType>) -> Self {
        self.state = input;
        self
    }
    /// <p>Information about the credential report.</p>
    pub fn description(mut self, input: impl Into<std::string::String>) -> Self {
        self.description = Some(input.into());
        self
    }
    /// <p>Information about the credential report.</p>
    pub fn set_description(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.description = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`GenerateCredentialReportOutput`](crate::operation::generate_credential_report::GenerateCredentialReportOutput).
    pub fn build(
        self,
    ) -> crate::operation::generate_credential_report::GenerateCredentialReportOutput {
        crate::operation::generate_credential_report::GenerateCredentialReportOutput {
            state: self.state,
            description: self.description,
            _request_id: self._request_id,
        }
    }
}
