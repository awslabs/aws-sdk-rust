// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains the response to a successful <code>GetPolicyVersion</code> request. </p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GetPolicyVersionOutput {
    /// <p>A structure containing details about the policy version.</p>
    #[doc(hidden)]
    pub policy_version: std::option::Option<crate::types::PolicyVersion>,
    _request_id: Option<String>,
}
impl GetPolicyVersionOutput {
    /// <p>A structure containing details about the policy version.</p>
    pub fn policy_version(&self) -> std::option::Option<&crate::types::PolicyVersion> {
        self.policy_version.as_ref()
    }
}
impl aws_http::request_id::RequestId for GetPolicyVersionOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl GetPolicyVersionOutput {
    /// Creates a new builder-style object to manufacture [`GetPolicyVersionOutput`](crate::operation::get_policy_version::GetPolicyVersionOutput).
    pub fn builder() -> crate::operation::get_policy_version::builders::GetPolicyVersionOutputBuilder
    {
        crate::operation::get_policy_version::builders::GetPolicyVersionOutputBuilder::default()
    }
}

/// A builder for [`GetPolicyVersionOutput`](crate::operation::get_policy_version::GetPolicyVersionOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct GetPolicyVersionOutputBuilder {
    pub(crate) policy_version: std::option::Option<crate::types::PolicyVersion>,
    _request_id: Option<String>,
}
impl GetPolicyVersionOutputBuilder {
    /// <p>A structure containing details about the policy version.</p>
    pub fn policy_version(mut self, input: crate::types::PolicyVersion) -> Self {
        self.policy_version = Some(input);
        self
    }
    /// <p>A structure containing details about the policy version.</p>
    pub fn set_policy_version(
        mut self,
        input: std::option::Option<crate::types::PolicyVersion>,
    ) -> Self {
        self.policy_version = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`GetPolicyVersionOutput`](crate::operation::get_policy_version::GetPolicyVersionOutput).
    pub fn build(self) -> crate::operation::get_policy_version::GetPolicyVersionOutput {
        crate::operation::get_policy_version::GetPolicyVersionOutput {
            policy_version: self.policy_version,
            _request_id: self._request_id,
        }
    }
}
