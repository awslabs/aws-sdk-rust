// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct GenerateServiceLastAccessedDetailsInput {
    /// <p>The ARN of the IAM resource (user, group, role, or managed policy) used to generate information about when the resource was last used in an attempt to access an Amazon Web Services service.</p>
    #[doc(hidden)]
    pub arn: std::option::Option<std::string::String>,
    /// <p>The level of detail that you want to generate. You can specify whether you want to generate information about the last attempt to access services or actions. If you specify service-level granularity, this operation generates only service data. If you specify action-level granularity, it generates service and action data. If you don't include this optional parameter, the operation generates service data.</p>
    #[doc(hidden)]
    pub granularity: std::option::Option<crate::types::AccessAdvisorUsageGranularityType>,
}
impl GenerateServiceLastAccessedDetailsInput {
    /// <p>The ARN of the IAM resource (user, group, role, or managed policy) used to generate information about when the resource was last used in an attempt to access an Amazon Web Services service.</p>
    pub fn arn(&self) -> std::option::Option<&str> {
        self.arn.as_deref()
    }
    /// <p>The level of detail that you want to generate. You can specify whether you want to generate information about the last attempt to access services or actions. If you specify service-level granularity, this operation generates only service data. If you specify action-level granularity, it generates service and action data. If you don't include this optional parameter, the operation generates service data.</p>
    pub fn granularity(
        &self,
    ) -> std::option::Option<&crate::types::AccessAdvisorUsageGranularityType> {
        self.granularity.as_ref()
    }
}
impl GenerateServiceLastAccessedDetailsInput {
    /// Creates a new builder-style object to manufacture [`GenerateServiceLastAccessedDetailsInput`](crate::operation::generate_service_last_accessed_details::GenerateServiceLastAccessedDetailsInput).
    pub fn builder() -> crate::operation::generate_service_last_accessed_details::builders::GenerateServiceLastAccessedDetailsInputBuilder{
        crate::operation::generate_service_last_accessed_details::builders::GenerateServiceLastAccessedDetailsInputBuilder::default()
    }
}

/// A builder for [`GenerateServiceLastAccessedDetailsInput`](crate::operation::generate_service_last_accessed_details::GenerateServiceLastAccessedDetailsInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct GenerateServiceLastAccessedDetailsInputBuilder {
    pub(crate) arn: std::option::Option<std::string::String>,
    pub(crate) granularity: std::option::Option<crate::types::AccessAdvisorUsageGranularityType>,
}
impl GenerateServiceLastAccessedDetailsInputBuilder {
    /// <p>The ARN of the IAM resource (user, group, role, or managed policy) used to generate information about when the resource was last used in an attempt to access an Amazon Web Services service.</p>
    pub fn arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.arn = Some(input.into());
        self
    }
    /// <p>The ARN of the IAM resource (user, group, role, or managed policy) used to generate information about when the resource was last used in an attempt to access an Amazon Web Services service.</p>
    pub fn set_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.arn = input;
        self
    }
    /// <p>The level of detail that you want to generate. You can specify whether you want to generate information about the last attempt to access services or actions. If you specify service-level granularity, this operation generates only service data. If you specify action-level granularity, it generates service and action data. If you don't include this optional parameter, the operation generates service data.</p>
    pub fn granularity(mut self, input: crate::types::AccessAdvisorUsageGranularityType) -> Self {
        self.granularity = Some(input);
        self
    }
    /// <p>The level of detail that you want to generate. You can specify whether you want to generate information about the last attempt to access services or actions. If you specify service-level granularity, this operation generates only service data. If you specify action-level granularity, it generates service and action data. If you don't include this optional parameter, the operation generates service data.</p>
    pub fn set_granularity(
        mut self,
        input: std::option::Option<crate::types::AccessAdvisorUsageGranularityType>,
    ) -> Self {
        self.granularity = input;
        self
    }
    /// Consumes the builder and constructs a [`GenerateServiceLastAccessedDetailsInput`](crate::operation::generate_service_last_accessed_details::GenerateServiceLastAccessedDetailsInput).
    pub fn build(self) -> Result<crate::operation::generate_service_last_accessed_details::GenerateServiceLastAccessedDetailsInput, aws_smithy_http::operation::error::BuildError>{
        Ok(
            crate::operation::generate_service_last_accessed_details::GenerateServiceLastAccessedDetailsInput {
                arn: self.arn
                ,
                granularity: self.granularity
                ,
            }
        )
    }
}
