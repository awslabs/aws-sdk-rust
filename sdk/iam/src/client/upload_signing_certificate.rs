// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UploadSigningCertificate`](crate::operation::upload_signing_certificate::builders::UploadSigningCertificateFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`user_name(impl Into<String>)`](crate::operation::upload_signing_certificate::builders::UploadSigningCertificateFluentBuilder::user_name) / [`set_user_name(Option<String>)`](crate::operation::upload_signing_certificate::builders::UploadSigningCertificateFluentBuilder::set_user_name): <p>The name of the user the signing certificate is for.</p>  <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>
    ///   - [`certificate_body(impl Into<String>)`](crate::operation::upload_signing_certificate::builders::UploadSigningCertificateFluentBuilder::certificate_body) / [`set_certificate_body(Option<String>)`](crate::operation::upload_signing_certificate::builders::UploadSigningCertificateFluentBuilder::set_certificate_body): <p>The contents of the signing certificate.</p>  <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> used to validate this parameter is a string of characters consisting of the following:</p>  <ul>   <li> <p>Any printable ASCII character ranging from the space character (<code>\u0020</code>) through the end of the ASCII character range</p> </li>   <li> <p>The printable characters in the Basic Latin and Latin-1 Supplement character set (through <code>\u00FF</code>)</p> </li>   <li> <p>The special characters tab (<code>\u0009</code>), line feed (<code>\u000A</code>), and carriage return (<code>\u000D</code>)</p> </li>  </ul>
    /// - On success, responds with [`UploadSigningCertificateOutput`](crate::operation::upload_signing_certificate::UploadSigningCertificateOutput) with field(s):
    ///   - [`certificate(Option<SigningCertificate>)`](crate::operation::upload_signing_certificate::UploadSigningCertificateOutput::certificate): <p>Information about the certificate.</p>
    /// - On failure, responds with [`SdkError<UploadSigningCertificateError>`](crate::operation::upload_signing_certificate::UploadSigningCertificateError)
    pub fn upload_signing_certificate(
        &self,
    ) -> crate::operation::upload_signing_certificate::builders::UploadSigningCertificateFluentBuilder
    {
        crate::operation::upload_signing_certificate::builders::UploadSigningCertificateFluentBuilder::new(self.handle.clone())
    }
}
