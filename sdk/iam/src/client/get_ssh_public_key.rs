// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetSSHPublicKey`](crate::client::fluent_builders::GetSSHPublicKey) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`user_name(impl Into<String>)`](crate::client::fluent_builders::GetSSHPublicKey::user_name) / [`set_user_name(Option<String>)`](crate::client::fluent_builders::GetSSHPublicKey::set_user_name): <p>The name of the IAM user associated with the SSH public key.</p>  <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>
    ///   - [`ssh_public_key_id(impl Into<String>)`](crate::client::fluent_builders::GetSSHPublicKey::ssh_public_key_id) / [`set_ssh_public_key_id(Option<String>)`](crate::client::fluent_builders::GetSSHPublicKey::set_ssh_public_key_id): <p>The unique identifier for the SSH public key.</p>  <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters that can consist of any upper or lowercased letter or digit.</p>
    ///   - [`encoding(EncodingType)`](crate::client::fluent_builders::GetSSHPublicKey::encoding) / [`set_encoding(Option<EncodingType>)`](crate::client::fluent_builders::GetSSHPublicKey::set_encoding): <p>Specifies the public key encoding format to use in the response. To retrieve the public key in ssh-rsa format, use <code>SSH</code>. To retrieve the public key in PEM format, use <code>PEM</code>.</p>
    /// - On success, responds with [`GetSshPublicKeyOutput`](crate::output::GetSshPublicKeyOutput) with field(s):
    ///   - [`ssh_public_key(Option<SshPublicKey>)`](crate::output::GetSshPublicKeyOutput::ssh_public_key): <p>A structure containing details about the SSH public key.</p>
    /// - On failure, responds with [`SdkError<GetSSHPublicKeyError>`](crate::error::GetSSHPublicKeyError)
    pub fn get_ssh_public_key(&self) -> crate::client::fluent_builders::GetSSHPublicKey {
        crate::client::fluent_builders::GetSSHPublicKey::new(self.handle.clone())
    }
}
