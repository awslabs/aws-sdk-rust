// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ChangePassword`](crate::operation::change_password::builders::ChangePasswordFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`old_password(impl Into<String>)`](crate::operation::change_password::builders::ChangePasswordFluentBuilder::old_password) / [`set_old_password(Option<String>)`](crate::operation::change_password::builders::ChangePasswordFluentBuilder::set_old_password): <p>The IAM user's current password.</p>
    ///   - [`new_password(impl Into<String>)`](crate::operation::change_password::builders::ChangePasswordFluentBuilder::new_password) / [`set_new_password(Option<String>)`](crate::operation::change_password::builders::ChangePasswordFluentBuilder::set_new_password): <p>The new password. The new password must conform to the Amazon Web Services account's password policy, if one exists.</p>  <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> that is used to validate this parameter is a string of characters. That string can include almost any printable ASCII character from the space (<code>\u0020</code>) through the end of the ASCII character range (<code>\u00FF</code>). You can also include the tab (<code>\u0009</code>), line feed (<code>\u000A</code>), and carriage return (<code>\u000D</code>) characters. Any of these characters are valid in a password. However, many tools, such as the Amazon Web Services Management Console, might restrict the ability to type certain characters because they have special meaning within that tool.</p>
    /// - On success, responds with [`ChangePasswordOutput`](crate::operation::change_password::ChangePasswordOutput)
    /// - On failure, responds with [`SdkError<ChangePasswordError>`](crate::operation::change_password::ChangePasswordError)
    pub fn change_password(
        &self,
    ) -> crate::operation::change_password::builders::ChangePasswordFluentBuilder {
        crate::operation::change_password::builders::ChangePasswordFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
