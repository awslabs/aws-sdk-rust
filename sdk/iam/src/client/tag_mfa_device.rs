// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`TagMFADevice`](crate::operation::tag_mfa_device::builders::TagMFADeviceFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`serial_number(impl Into<String>)`](crate::operation::tag_mfa_device::builders::TagMFADeviceFluentBuilder::serial_number) / [`set_serial_number(Option<String>)`](crate::operation::tag_mfa_device::builders::TagMFADeviceFluentBuilder::set_serial_number): <p>The unique identifier for the IAM virtual MFA device to which you want to add tags. For virtual MFA devices, the serial number is the same as the ARN.</p>  <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>
    ///   - [`tags(Vec<Tag>)`](crate::operation::tag_mfa_device::builders::TagMFADeviceFluentBuilder::tags) / [`set_tags(Option<Vec<Tag>>)`](crate::operation::tag_mfa_device::builders::TagMFADeviceFluentBuilder::set_tags): <p>The list of tags that you want to attach to the IAM virtual MFA device. Each tag consists of a key name and an associated value.</p>
    /// - On success, responds with [`TagMfaDeviceOutput`](crate::operation::tag_mfa_device::TagMfaDeviceOutput)
    /// - On failure, responds with [`SdkError<TagMFADeviceError>`](crate::operation::tag_mfa_device::TagMFADeviceError)
    pub fn tag_mfa_device(
        &self,
    ) -> crate::operation::tag_mfa_device::builders::TagMFADeviceFluentBuilder {
        crate::operation::tag_mfa_device::builders::TagMFADeviceFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
