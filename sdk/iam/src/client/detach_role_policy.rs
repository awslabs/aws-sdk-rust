// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DetachRolePolicy`](crate::client::fluent_builders::DetachRolePolicy) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`role_name(impl Into<String>)`](crate::client::fluent_builders::DetachRolePolicy::role_name) / [`set_role_name(Option<String>)`](crate::client::fluent_builders::DetachRolePolicy::set_role_name): <p>The name (friendly name, not ARN) of the IAM role to detach the policy from.</p>  <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>
    ///   - [`policy_arn(impl Into<String>)`](crate::client::fluent_builders::DetachRolePolicy::policy_arn) / [`set_policy_arn(Option<String>)`](crate::client::fluent_builders::DetachRolePolicy::set_policy_arn): <p>The Amazon Resource Name (ARN) of the IAM policy you want to detach.</p>  <p>For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.</p>
    /// - On success, responds with [`DetachRolePolicyOutput`](crate::output::DetachRolePolicyOutput)
    /// - On failure, responds with [`SdkError<DetachRolePolicyError>`](crate::error::DetachRolePolicyError)
    pub fn detach_role_policy(&self) -> crate::client::fluent_builders::DetachRolePolicy {
        crate::client::fluent_builders::DetachRolePolicy::new(self.handle.clone())
    }
}
