// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DeleteUserPolicy`](crate::client::fluent_builders::DeleteUserPolicy) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`user_name(impl Into<String>)`](crate::client::fluent_builders::DeleteUserPolicy::user_name) / [`set_user_name(Option<String>)`](crate::client::fluent_builders::DeleteUserPolicy::set_user_name): <p>The name (friendly name, not ARN) identifying the user that the policy is embedded in.</p>  <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>
    ///   - [`policy_name(impl Into<String>)`](crate::client::fluent_builders::DeleteUserPolicy::policy_name) / [`set_policy_name(Option<String>)`](crate::client::fluent_builders::DeleteUserPolicy::set_policy_name): <p>The name identifying the policy document to delete.</p>  <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>
    /// - On success, responds with [`DeleteUserPolicyOutput`](crate::output::DeleteUserPolicyOutput)
    /// - On failure, responds with [`SdkError<DeleteUserPolicyError>`](crate::error::DeleteUserPolicyError)
    pub fn delete_user_policy(&self) -> crate::client::fluent_builders::DeleteUserPolicy {
        crate::client::fluent_builders::DeleteUserPolicy::new(self.handle.clone())
    }
}
