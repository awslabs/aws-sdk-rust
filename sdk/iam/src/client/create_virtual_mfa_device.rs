// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateVirtualMFADevice`](crate::operation::create_virtual_mfa_device::builders::CreateVirtualMFADeviceFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`path(impl Into<String>)`](crate::operation::create_virtual_mfa_device::builders::CreateVirtualMFADeviceFluentBuilder::path) / [`set_path(Option<String>)`](crate::operation::create_virtual_mfa_device::builders::CreateVirtualMFADeviceFluentBuilder::set_path):<br>required: **false**<br><p> The path for the virtual MFA device. For more information about paths, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM identifiers</a> in the <i>IAM User Guide</i>.</p>  <p>This parameter is optional. If it is not included, it defaults to a slash (/).</p>  <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (<code>\u0021</code>) through the DEL character (<code>\u007F</code>), including most punctuation characters, digits, and upper and lowercased letters.</p><br>
    ///   - [`virtual_mfa_device_name(impl Into<String>)`](crate::operation::create_virtual_mfa_device::builders::CreateVirtualMFADeviceFluentBuilder::virtual_mfa_device_name) / [`set_virtual_mfa_device_name(Option<String>)`](crate::operation::create_virtual_mfa_device::builders::CreateVirtualMFADeviceFluentBuilder::set_virtual_mfa_device_name):<br>required: **true**<br><p>The name of the virtual MFA device, which must be unique. Use with path to uniquely identify a virtual MFA device.</p>  <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p><br>
    ///   - [`tags(Tag)`](crate::operation::create_virtual_mfa_device::builders::CreateVirtualMFADeviceFluentBuilder::tags) / [`set_tags(Option<Vec::<Tag>>)`](crate::operation::create_virtual_mfa_device::builders::CreateVirtualMFADeviceFluentBuilder::set_tags):<br>required: **false**<br><p>A list of tags that you want to attach to the new IAM virtual MFA device. Each tag consists of a key name and an associated value. For more information about tagging, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging IAM resources</a> in the <i>IAM User Guide</i>.</p> <note>   <p>If any one of the tags is invalid or if you exceed the allowed maximum number of tags, then the entire request fails and the resource is not created.</p>  </note><br>
    /// - On success, responds with [`CreateVirtualMfaDeviceOutput`](crate::operation::create_virtual_mfa_device::CreateVirtualMfaDeviceOutput) with field(s):
    ///   - [`virtual_mfa_device(Option<VirtualMfaDevice>)`](crate::operation::create_virtual_mfa_device::CreateVirtualMfaDeviceOutput::virtual_mfa_device): <p>A structure containing details about the new virtual MFA device.</p>
    /// - On failure, responds with [`SdkError<CreateVirtualMFADeviceError>`](crate::operation::create_virtual_mfa_device::CreateVirtualMFADeviceError)
    pub fn create_virtual_mfa_device(&self) -> crate::operation::create_virtual_mfa_device::builders::CreateVirtualMFADeviceFluentBuilder {
        crate::operation::create_virtual_mfa_device::builders::CreateVirtualMFADeviceFluentBuilder::new(self.handle.clone())
    }
}
