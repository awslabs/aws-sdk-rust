// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetContextKeysForCustomPolicy`](crate::operation::get_context_keys_for_custom_policy::builders::GetContextKeysForCustomPolicyFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`policy_input_list(Vec<String>)`](crate::operation::get_context_keys_for_custom_policy::builders::GetContextKeysForCustomPolicyFluentBuilder::policy_input_list) / [`set_policy_input_list(Option<Vec<String>>)`](crate::operation::get_context_keys_for_custom_policy::builders::GetContextKeysForCustomPolicyFluentBuilder::set_policy_input_list): <p>A list of policies for which you want the list of context keys referenced in those policies. Each document is specified as a string containing the complete, valid JSON text of an IAM policy.</p>  <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> used to validate this parameter is a string of characters consisting of the following:</p>  <ul>   <li> <p>Any printable ASCII character ranging from the space character (<code>\u0020</code>) through the end of the ASCII character range</p> </li>   <li> <p>The printable characters in the Basic Latin and Latin-1 Supplement character set (through <code>\u00FF</code>)</p> </li>   <li> <p>The special characters tab (<code>\u0009</code>), line feed (<code>\u000A</code>), and carriage return (<code>\u000D</code>)</p> </li>  </ul>
    /// - On success, responds with [`GetContextKeysForCustomPolicyOutput`](crate::operation::get_context_keys_for_custom_policy::GetContextKeysForCustomPolicyOutput) with field(s):
    ///   - [`context_key_names(Option<Vec<String>>)`](crate::operation::get_context_keys_for_custom_policy::GetContextKeysForCustomPolicyOutput::context_key_names): <p>The list of context keys that are referenced in the input policies.</p>
    /// - On failure, responds with [`SdkError<GetContextKeysForCustomPolicyError>`](crate::operation::get_context_keys_for_custom_policy::GetContextKeysForCustomPolicyError)
    pub fn get_context_keys_for_custom_policy(&self) -> crate::operation::get_context_keys_for_custom_policy::builders::GetContextKeysForCustomPolicyFluentBuilder{
        crate::operation::get_context_keys_for_custom_policy::builders::GetContextKeysForCustomPolicyFluentBuilder::new(self.handle.clone())
    }
}
