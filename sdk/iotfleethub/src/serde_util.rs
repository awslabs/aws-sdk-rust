// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) fn create_application_output_correct_errors(
    mut builder: crate::operation::create_application::builders::CreateApplicationOutputBuilder,
) -> crate::operation::create_application::builders::CreateApplicationOutputBuilder {
    if builder.application_id.is_none() {
        builder.application_id = Some(Default::default())
    }
    if builder.application_arn.is_none() {
        builder.application_arn = Some(Default::default())
    }
    builder
}

pub(crate) fn describe_application_output_correct_errors(
    mut builder: crate::operation::describe_application::builders::DescribeApplicationOutputBuilder,
) -> crate::operation::describe_application::builders::DescribeApplicationOutputBuilder {
    if builder.application_id.is_none() {
        builder.application_id = Some(Default::default())
    }
    if builder.application_arn.is_none() {
        builder.application_arn = Some(Default::default())
    }
    if builder.application_name.is_none() {
        builder.application_name = Some(Default::default())
    }
    if builder.application_url.is_none() {
        builder.application_url = Some(Default::default())
    }
    if builder.application_state.is_none() {
        builder.application_state = "no value was set".parse::<crate::types::ApplicationState>().ok()
    }
    if builder.application_creation_date.is_none() {
        builder.application_creation_date = Some(Default::default())
    }
    if builder.application_last_update_date.is_none() {
        builder.application_last_update_date = Some(Default::default())
    }
    if builder.role_arn.is_none() {
        builder.role_arn = Some(Default::default())
    }
    builder
}

pub(crate) fn application_summary_correct_errors(
    mut builder: crate::types::builders::ApplicationSummaryBuilder,
) -> crate::types::builders::ApplicationSummaryBuilder {
    if builder.application_id.is_none() {
        builder.application_id = Some(Default::default())
    }
    if builder.application_name.is_none() {
        builder.application_name = Some(Default::default())
    }
    if builder.application_url.is_none() {
        builder.application_url = Some(Default::default())
    }
    builder
}
