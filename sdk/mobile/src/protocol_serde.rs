// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn parse_http_error_metadata(
    response: &http::Response<bytes::Bytes>,
) -> Result<
    aws_smithy_types::error::metadata::Builder,
    aws_smithy_json::deserialize::error::DeserializeError,
> {
    crate::json_errors::parse_error_metadata(response.body(), response.headers())
}

pub(crate) mod shape_create_project;

pub(crate) mod shape_create_project_input;

pub(crate) mod shape_delete_project;

pub(crate) mod shape_describe_bundle;

pub(crate) mod shape_describe_project;

pub(crate) mod shape_export_bundle;

pub(crate) mod shape_export_project;

pub(crate) mod shape_list_bundles;

pub(crate) mod shape_list_projects;

pub(crate) mod shape_update_project;

pub(crate) mod shape_update_project_input;

pub(crate) fn or_empty_doc(data: &[u8]) -> &[u8] {
    if data.is_empty() {
        b"{}"
    } else {
        data
    }
}

pub(crate) mod shape_account_action_required_exception;

pub(crate) mod shape_bad_request_exception;

pub(crate) mod shape_internal_failure_exception;

pub(crate) mod shape_limit_exceeded_exception;

pub(crate) mod shape_not_found_exception;

pub(crate) mod shape_service_unavailable_exception;

pub(crate) mod shape_too_many_requests_exception;

pub(crate) mod shape_unauthorized_exception;

pub(crate) mod shape_bundle_details;

pub(crate) mod shape_bundle_list;

pub(crate) mod shape_project_details;

pub(crate) mod shape_project_summaries;

pub(crate) mod shape_resources;

pub(crate) mod shape_platforms;

pub(crate) mod shape_project_summary;

pub(crate) mod shape_resource;

pub(crate) mod shape_attributes;
