// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_modify_db_instance_input_input(
    input: &crate::operation::modify_db_instance::ModifyDbInstanceInput,
) -> Result<aws_smithy_http::body::SdkBody, aws_smithy_http::operation::error::SerializationError> {
    let mut out = String::new();
    #[allow(unused_mut)]
    let mut writer = aws_smithy_query::QueryWriter::new(&mut out, "ModifyDBInstance", "2014-10-31");
    #[allow(unused_mut)]
    let mut scope_1 = writer.prefix("DBInstanceIdentifier");
    if let Some(var_2) = &input.db_instance_identifier {
        scope_1.string(var_2);
    }
    #[allow(unused_mut)]
    let mut scope_3 = writer.prefix("DBInstanceClass");
    if let Some(var_4) = &input.db_instance_class {
        scope_3.string(var_4);
    }
    #[allow(unused_mut)]
    let mut scope_5 = writer.prefix("ApplyImmediately");
    if input.apply_immediately {
        scope_5.boolean(input.apply_immediately);
    }
    #[allow(unused_mut)]
    let mut scope_6 = writer.prefix("PreferredMaintenanceWindow");
    if let Some(var_7) = &input.preferred_maintenance_window {
        scope_6.string(var_7);
    }
    #[allow(unused_mut)]
    let mut scope_8 = writer.prefix("AutoMinorVersionUpgrade");
    if let Some(var_9) = &input.auto_minor_version_upgrade {
        scope_8.boolean(*var_9);
    }
    #[allow(unused_mut)]
    let mut scope_10 = writer.prefix("NewDBInstanceIdentifier");
    if let Some(var_11) = &input.new_db_instance_identifier {
        scope_10.string(var_11);
    }
    #[allow(unused_mut)]
    let mut scope_12 = writer.prefix("CACertificateIdentifier");
    if let Some(var_13) = &input.ca_certificate_identifier {
        scope_12.string(var_13);
    }
    #[allow(unused_mut)]
    let mut scope_14 = writer.prefix("CopyTagsToSnapshot");
    if let Some(var_15) = &input.copy_tags_to_snapshot {
        scope_14.boolean(*var_15);
    }
    #[allow(unused_mut)]
    let mut scope_16 = writer.prefix("PromotionTier");
    if let Some(var_17) = &input.promotion_tier {
        scope_16.number(
            #[allow(clippy::useless_conversion)]
            aws_smithy_types::Number::NegInt((*var_17).into()),
        );
    }
    #[allow(unused_mut)]
    let mut scope_18 = writer.prefix("EnablePerformanceInsights");
    if let Some(var_19) = &input.enable_performance_insights {
        scope_18.boolean(*var_19);
    }
    #[allow(unused_mut)]
    let mut scope_20 = writer.prefix("PerformanceInsightsKMSKeyId");
    if let Some(var_21) = &input.performance_insights_kms_key_id {
        scope_20.string(var_21);
    }
    writer.finish();
    Ok(aws_smithy_http::body::SdkBody::from(out))
}
