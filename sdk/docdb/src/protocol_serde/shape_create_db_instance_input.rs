// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_create_db_instance_input_input(
    input: &crate::operation::create_db_instance::CreateDbInstanceInput,
) -> Result<::aws_smithy_types::body::SdkBody, ::aws_smithy_types::error::operation::SerializationError> {
    let mut out = String::new();
    #[allow(unused_mut)]
    let mut writer = ::aws_smithy_query::QueryWriter::new(&mut out, "CreateDBInstance", "2014-10-31");
    #[allow(unused_mut)]
    let mut scope_1 = writer.prefix("DBInstanceIdentifier");
    if let Some(var_2) = &input.db_instance_identifier {
        scope_1.string(var_2);
    }
    #[allow(unused_mut)]
    let mut scope_3 = writer.prefix("DBInstanceClass");
    if let Some(var_4) = &input.db_instance_class {
        scope_3.string(var_4);
    }
    #[allow(unused_mut)]
    let mut scope_5 = writer.prefix("Engine");
    if let Some(var_6) = &input.engine {
        scope_5.string(var_6);
    }
    #[allow(unused_mut)]
    let mut scope_7 = writer.prefix("AvailabilityZone");
    if let Some(var_8) = &input.availability_zone {
        scope_7.string(var_8);
    }
    #[allow(unused_mut)]
    let mut scope_9 = writer.prefix("PreferredMaintenanceWindow");
    if let Some(var_10) = &input.preferred_maintenance_window {
        scope_9.string(var_10);
    }
    #[allow(unused_mut)]
    let mut scope_11 = writer.prefix("AutoMinorVersionUpgrade");
    if let Some(var_12) = &input.auto_minor_version_upgrade {
        scope_11.boolean(*var_12);
    }
    #[allow(unused_mut)]
    let mut scope_13 = writer.prefix("Tags");
    if let Some(var_14) = &input.tags {
        let mut list_16 = scope_13.start_list(false, Some("Tag"));
        for item_15 in var_14 {
            #[allow(unused_mut)]
            let mut entry_17 = list_16.entry();
            crate::protocol_serde::shape_tag::ser_tag(entry_17, item_15)?;
        }
        list_16.finish();
    }
    #[allow(unused_mut)]
    let mut scope_18 = writer.prefix("DBClusterIdentifier");
    if let Some(var_19) = &input.db_cluster_identifier {
        scope_18.string(var_19);
    }
    #[allow(unused_mut)]
    let mut scope_20 = writer.prefix("CopyTagsToSnapshot");
    if let Some(var_21) = &input.copy_tags_to_snapshot {
        scope_20.boolean(*var_21);
    }
    #[allow(unused_mut)]
    let mut scope_22 = writer.prefix("PromotionTier");
    if let Some(var_23) = &input.promotion_tier {
        scope_22.number(
            #[allow(clippy::useless_conversion)]
            ::aws_smithy_types::Number::NegInt((*var_23).into()),
        );
    }
    #[allow(unused_mut)]
    let mut scope_24 = writer.prefix("EnablePerformanceInsights");
    if let Some(var_25) = &input.enable_performance_insights {
        scope_24.boolean(*var_25);
    }
    #[allow(unused_mut)]
    let mut scope_26 = writer.prefix("PerformanceInsightsKMSKeyId");
    if let Some(var_27) = &input.performance_insights_kms_key_id {
        scope_26.string(var_27);
    }
    writer.finish();
    Ok(::aws_smithy_types::body::SdkBody::from(out))
}
