// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ModifyEventSubscription`](crate::operation::modify_event_subscription::builders::ModifyEventSubscriptionFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`subscription_name(impl Into<String>)`](crate::operation::modify_event_subscription::builders::ModifyEventSubscriptionFluentBuilder::subscription_name) / [`set_subscription_name(Option<String>)`](crate::operation::modify_event_subscription::builders::ModifyEventSubscriptionFluentBuilder::set_subscription_name): <p>The name of the Amazon DocumentDB event notification subscription.</p>
    ///   - [`sns_topic_arn(impl Into<String>)`](crate::operation::modify_event_subscription::builders::ModifyEventSubscriptionFluentBuilder::sns_topic_arn) / [`set_sns_topic_arn(Option<String>)`](crate::operation::modify_event_subscription::builders::ModifyEventSubscriptionFluentBuilder::set_sns_topic_arn): <p>The Amazon Resource Name (ARN) of the SNS topic created for event notification. The ARN is created by Amazon SNS when you create a topic and subscribe to it.</p>
    ///   - [`source_type(impl Into<String>)`](crate::operation::modify_event_subscription::builders::ModifyEventSubscriptionFluentBuilder::source_type) / [`set_source_type(Option<String>)`](crate::operation::modify_event_subscription::builders::ModifyEventSubscriptionFluentBuilder::set_source_type): <p>The type of source that is generating the events. For example, if you want to be notified of events generated by an instance, set this parameter to <code>db-instance</code>. If this value is not specified, all events are returned.</p>  <p>Valid values: <code>db-instance</code>, <code>db-parameter-group</code>, <code>db-security-group</code> </p>
    ///   - [`event_categories(Vec<String>)`](crate::operation::modify_event_subscription::builders::ModifyEventSubscriptionFluentBuilder::event_categories) / [`set_event_categories(Option<Vec<String>>)`](crate::operation::modify_event_subscription::builders::ModifyEventSubscriptionFluentBuilder::set_event_categories): <p> A list of event categories for a <code>SourceType</code> that you want to subscribe to.</p>
    ///   - [`enabled(bool)`](crate::operation::modify_event_subscription::builders::ModifyEventSubscriptionFluentBuilder::enabled) / [`set_enabled(Option<bool>)`](crate::operation::modify_event_subscription::builders::ModifyEventSubscriptionFluentBuilder::set_enabled): <p> A Boolean value; set to <code>true</code> to activate the subscription. </p>
    /// - On success, responds with [`ModifyEventSubscriptionOutput`](crate::operation::modify_event_subscription::ModifyEventSubscriptionOutput) with field(s):
    ///   - [`event_subscription(Option<EventSubscription>)`](crate::operation::modify_event_subscription::ModifyEventSubscriptionOutput::event_subscription): <p>Detailed information about an event to which you have subscribed.</p>
    /// - On failure, responds with [`SdkError<ModifyEventSubscriptionError>`](crate::operation::modify_event_subscription::ModifyEventSubscriptionError)
    pub fn modify_event_subscription(
        &self,
    ) -> crate::operation::modify_event_subscription::builders::ModifyEventSubscriptionFluentBuilder
    {
        crate::operation::modify_event_subscription::builders::ModifyEventSubscriptionFluentBuilder::new(self.handle.clone())
    }
}
