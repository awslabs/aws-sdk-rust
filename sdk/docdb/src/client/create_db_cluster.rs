// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateDBCluster`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`availability_zones(impl Into<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::availability_zones) / [`set_availability_zones(Option<Vec::<String>>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::set_availability_zones):<br>required: **false**<br><p>A list of Amazon EC2 Availability Zones that instances in the cluster can be created in.</p><br>
    ///   - [`backup_retention_period(i32)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::backup_retention_period) / [`set_backup_retention_period(Option<i32>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::set_backup_retention_period):<br>required: **false**<br><p>The number of days for which automated backups are retained. You must specify a minimum value of 1.</p>  <p>Default: 1</p>  <p>Constraints:</p>  <ul>   <li> <p>Must be a value from 1 to 35.</p> </li>  </ul><br>
    ///   - [`db_cluster_identifier(impl Into<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::db_cluster_identifier) / [`set_db_cluster_identifier(Option<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::set_db_cluster_identifier):<br>required: **true**<br><p>The cluster identifier. This parameter is stored as a lowercase string.</p>  <p>Constraints:</p>  <ul>   <li> <p>Must contain from 1 to 63 letters, numbers, or hyphens. </p> </li>   <li> <p>The first character must be a letter.</p> </li>   <li> <p>Cannot end with a hyphen or contain two consecutive hyphens. </p> </li>  </ul>  <p>Example: <code>my-cluster</code> </p><br>
    ///   - [`db_cluster_parameter_group_name(impl Into<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::db_cluster_parameter_group_name) / [`set_db_cluster_parameter_group_name(Option<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::set_db_cluster_parameter_group_name):<br>required: **false**<br><p>The name of the cluster parameter group to associate with this cluster.</p><br>
    ///   - [`vpc_security_group_ids(impl Into<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::vpc_security_group_ids) / [`set_vpc_security_group_ids(Option<Vec::<String>>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::set_vpc_security_group_ids):<br>required: **false**<br><p>A list of EC2 VPC security groups to associate with this cluster. </p><br>
    ///   - [`db_subnet_group_name(impl Into<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::db_subnet_group_name) / [`set_db_subnet_group_name(Option<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::set_db_subnet_group_name):<br>required: **false**<br><p>A subnet group to associate with this cluster.</p>  <p>Constraints: Must match the name of an existing <code>DBSubnetGroup</code>. Must not be default.</p>  <p>Example: <code>mySubnetgroup</code> </p><br>
    ///   - [`engine(impl Into<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::engine) / [`set_engine(Option<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::set_engine):<br>required: **true**<br><p>The name of the database engine to be used for this cluster.</p>  <p>Valid values: <code>docdb</code> </p><br>
    ///   - [`engine_version(impl Into<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::engine_version) / [`set_engine_version(Option<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::set_engine_version):<br>required: **false**<br><p>The version number of the database engine to use. The <code>--engine-version</code> will default to the latest major engine version. For production workloads, we recommend explicitly declaring this parameter with the intended major engine version.</p><br>
    ///   - [`port(i32)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::port) / [`set_port(Option<i32>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::set_port):<br>required: **false**<br><p>The port number on which the instances in the cluster accept connections.</p><br>
    ///   - [`master_username(impl Into<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::master_username) / [`set_master_username(Option<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::set_master_username):<br>required: **false**<br><p>The name of the master user for the cluster.</p>  <p>Constraints:</p>  <ul>   <li> <p>Must be from 1 to 63 letters or numbers.</p> </li>   <li> <p>The first character must be a letter.</p> </li>   <li> <p>Cannot be a reserved word for the chosen database engine. </p> </li>  </ul><br>
    ///   - [`master_user_password(impl Into<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::master_user_password) / [`set_master_user_password(Option<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::set_master_user_password):<br>required: **false**<br><p>The password for the master database user. This password can contain any printable ASCII character except forward slash (/), double quote ("), or the "at" symbol (@).</p>  <p>Constraints: Must contain from 8 to 100 characters.</p><br>
    ///   - [`preferred_backup_window(impl Into<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::preferred_backup_window) / [`set_preferred_backup_window(Option<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::set_preferred_backup_window):<br>required: **false**<br><p>The daily time range during which automated backups are created if automated backups are enabled using the <code>BackupRetentionPeriod</code> parameter. </p>  <p>The default is a 30-minute window selected at random from an 8-hour block of time for each Amazon Web Services Region. </p>  <p>Constraints:</p>  <ul>   <li> <p>Must be in the format <code>hh24:mi-hh24:mi</code>.</p> </li>   <li> <p>Must be in Universal Coordinated Time (UTC).</p> </li>   <li> <p>Must not conflict with the preferred maintenance window. </p> </li>   <li> <p>Must be at least 30 minutes.</p> </li>  </ul><br>
    ///   - [`preferred_maintenance_window(impl Into<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::preferred_maintenance_window) / [`set_preferred_maintenance_window(Option<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::set_preferred_maintenance_window):<br>required: **false**<br><p>The weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).</p>  <p>Format: <code>ddd:hh24:mi-ddd:hh24:mi</code> </p>  <p>The default is a 30-minute window selected at random from an 8-hour block of time for each Amazon Web Services Region, occurring on a random day of the week.</p>  <p>Valid days: Mon, Tue, Wed, Thu, Fri, Sat, Sun</p>  <p>Constraints: Minimum 30-minute window.</p><br>
    ///   - [`tags(Tag)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::tags) / [`set_tags(Option<Vec::<Tag>>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::set_tags):<br>required: **false**<br><p>The tags to be assigned to the cluster.</p><br>
    ///   - [`storage_encrypted(bool)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::storage_encrypted) / [`set_storage_encrypted(Option<bool>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::set_storage_encrypted):<br>required: **false**<br><p>Specifies whether the cluster is encrypted.</p><br>
    ///   - [`kms_key_id(impl Into<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::kms_key_id) / [`set_kms_key_id(Option<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::set_kms_key_id):<br>required: **false**<br><p>The KMS key identifier for an encrypted cluster.</p>  <p>The KMS key identifier is the Amazon Resource Name (ARN) for the KMS encryption key. If you are creating a cluster using the same Amazon Web Services account that owns the KMS encryption key that is used to encrypt the new cluster, you can use the KMS key alias instead of the ARN for the KMS encryption key.</p>  <p>If an encryption key is not specified in <code>KmsKeyId</code>: </p>  <ul>   <li> <p>If the <code>StorageEncrypted</code> parameter is <code>true</code>, Amazon DocumentDB uses your default encryption key. </p> </li>  </ul>  <p>KMS creates the default encryption key for your Amazon Web Services account. Your Amazon Web Services account has a different default encryption key for each Amazon Web Services Regions.</p><br>
    ///   - [`pre_signed_url(impl Into<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::pre_signed_url) / [`set_pre_signed_url(Option<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::set_pre_signed_url):<br>required: **false**<br><p>Not currently supported. </p><br>
    ///   - [`enable_cloudwatch_logs_exports(impl Into<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::enable_cloudwatch_logs_exports) / [`set_enable_cloudwatch_logs_exports(Option<Vec::<String>>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::set_enable_cloudwatch_logs_exports):<br>required: **false**<br><p>A list of log types that need to be enabled for exporting to Amazon CloudWatch Logs. You can enable audit logs or profiler logs. For more information, see <a href="https://docs.aws.amazon.com/documentdb/latest/developerguide/event-auditing.html"> Auditing Amazon DocumentDB Events</a> and <a href="https://docs.aws.amazon.com/documentdb/latest/developerguide/profiling.html"> Profiling Amazon DocumentDB Operations</a>. </p><br>
    ///   - [`deletion_protection(bool)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::deletion_protection) / [`set_deletion_protection(Option<bool>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::set_deletion_protection):<br>required: **false**<br><p>Specifies whether this cluster can be deleted. If <code>DeletionProtection</code> is enabled, the cluster cannot be deleted unless it is modified and <code>DeletionProtection</code> is disabled. <code>DeletionProtection</code> protects clusters from being accidentally deleted.</p><br>
    ///   - [`global_cluster_identifier(impl Into<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::global_cluster_identifier) / [`set_global_cluster_identifier(Option<String>)`](crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::set_global_cluster_identifier):<br>required: **false**<br><p>The cluster identifier of the new global cluster.</p><br>
    /// - On success, responds with [`CreateDbClusterOutput`](crate::operation::create_db_cluster::CreateDbClusterOutput) with field(s):
    ///   - [`db_cluster(Option<DbCluster>)`](crate::operation::create_db_cluster::CreateDbClusterOutput::db_cluster): <p>Detailed information about a cluster. </p>
    /// - On failure, responds with [`SdkError<CreateDBClusterError>`](crate::operation::create_db_cluster::CreateDBClusterError)
    pub fn create_db_cluster(&self) -> crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder {
        crate::operation::create_db_cluster::builders::CreateDBClusterFluentBuilder::new(self.handle.clone())
    }
}
