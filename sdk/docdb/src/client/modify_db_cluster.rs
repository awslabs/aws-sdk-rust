// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ModifyDBCluster`](crate::operation::modify_db_cluster::builders::ModifyDBClusterFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`db_cluster_identifier(impl Into<String>)`](crate::operation::modify_db_cluster::builders::ModifyDBClusterFluentBuilder::db_cluster_identifier) / [`set_db_cluster_identifier(Option<String>)`](crate::operation::modify_db_cluster::builders::ModifyDBClusterFluentBuilder::set_db_cluster_identifier):<br>required: **true**<br><p>The cluster identifier for the cluster that is being modified. This parameter is not case sensitive.</p> <p>Constraints:</p> <ul>  <li>   <p>Must match the identifier of an existing <code>DBCluster</code>.</p></li> </ul><br>
    ///   - [`new_db_cluster_identifier(impl Into<String>)`](crate::operation::modify_db_cluster::builders::ModifyDBClusterFluentBuilder::new_db_cluster_identifier) / [`set_new_db_cluster_identifier(Option<String>)`](crate::operation::modify_db_cluster::builders::ModifyDBClusterFluentBuilder::set_new_db_cluster_identifier):<br>required: **false**<br><p>The new cluster identifier for the cluster when renaming a cluster. This value is stored as a lowercase string.</p> <p>Constraints:</p> <ul>  <li>   <p>Must contain from 1 to 63 letters, numbers, or hyphens.</p></li>  <li>   <p>The first character must be a letter.</p></li>  <li>   <p>Cannot end with a hyphen or contain two consecutive hyphens.</p></li> </ul> <p>Example: <code>my-cluster2</code></p><br>
    ///   - [`apply_immediately(bool)`](crate::operation::modify_db_cluster::builders::ModifyDBClusterFluentBuilder::apply_immediately) / [`set_apply_immediately(Option<bool>)`](crate::operation::modify_db_cluster::builders::ModifyDBClusterFluentBuilder::set_apply_immediately):<br>required: **false**<br><p>A value that specifies whether the changes in this request and any pending changes are asynchronously applied as soon as possible, regardless of the <code>PreferredMaintenanceWindow</code> setting for the cluster. If this parameter is set to <code>false</code>, changes to the cluster are applied during the next maintenance window.</p> <p>The <code>ApplyImmediately</code> parameter affects only the <code>NewDBClusterIdentifier</code> and <code>MasterUserPassword</code> values. If you set this parameter value to <code>false</code>, the changes to the <code>NewDBClusterIdentifier</code> and <code>MasterUserPassword</code> values are applied during the next maintenance window. All other changes are applied immediately, regardless of the value of the <code>ApplyImmediately</code> parameter.</p> <p>Default: <code>false</code></p><br>
    ///   - [`backup_retention_period(i32)`](crate::operation::modify_db_cluster::builders::ModifyDBClusterFluentBuilder::backup_retention_period) / [`set_backup_retention_period(Option<i32>)`](crate::operation::modify_db_cluster::builders::ModifyDBClusterFluentBuilder::set_backup_retention_period):<br>required: **false**<br><p>The number of days for which automated backups are retained. You must specify a minimum value of 1.</p> <p>Default: 1</p> <p>Constraints:</p> <ul>  <li>   <p>Must be a value from 1 to 35.</p></li> </ul><br>
    ///   - [`db_cluster_parameter_group_name(impl Into<String>)`](crate::operation::modify_db_cluster::builders::ModifyDBClusterFluentBuilder::db_cluster_parameter_group_name) / [`set_db_cluster_parameter_group_name(Option<String>)`](crate::operation::modify_db_cluster::builders::ModifyDBClusterFluentBuilder::set_db_cluster_parameter_group_name):<br>required: **false**<br><p>The name of the cluster parameter group to use for the cluster.</p><br>
    ///   - [`vpc_security_group_ids(impl Into<String>)`](crate::operation::modify_db_cluster::builders::ModifyDBClusterFluentBuilder::vpc_security_group_ids) / [`set_vpc_security_group_ids(Option<Vec::<String>>)`](crate::operation::modify_db_cluster::builders::ModifyDBClusterFluentBuilder::set_vpc_security_group_ids):<br>required: **false**<br><p>A list of virtual private cloud (VPC) security groups that the cluster will belong to.</p><br>
    ///   - [`port(i32)`](crate::operation::modify_db_cluster::builders::ModifyDBClusterFluentBuilder::port) / [`set_port(Option<i32>)`](crate::operation::modify_db_cluster::builders::ModifyDBClusterFluentBuilder::set_port):<br>required: **false**<br><p>The port number on which the cluster accepts connections.</p> <p>Constraints: Must be a value from <code>1150</code> to <code>65535</code>.</p> <p>Default: The same port as the original cluster.</p><br>
    ///   - [`master_user_password(impl Into<String>)`](crate::operation::modify_db_cluster::builders::ModifyDBClusterFluentBuilder::master_user_password) / [`set_master_user_password(Option<String>)`](crate::operation::modify_db_cluster::builders::ModifyDBClusterFluentBuilder::set_master_user_password):<br>required: **false**<br><p>The password for the master database user. This password can contain any printable ASCII character except forward slash (/), double quote ("), or the "at" symbol (@).</p> <p>Constraints: Must contain from 8 to 100 characters.</p><br>
    ///   - [`preferred_backup_window(impl Into<String>)`](crate::operation::modify_db_cluster::builders::ModifyDBClusterFluentBuilder::preferred_backup_window) / [`set_preferred_backup_window(Option<String>)`](crate::operation::modify_db_cluster::builders::ModifyDBClusterFluentBuilder::set_preferred_backup_window):<br>required: **false**<br><p>The daily time range during which automated backups are created if automated backups are enabled, using the <code>BackupRetentionPeriod</code> parameter.</p> <p>The default is a 30-minute window selected at random from an 8-hour block of time for each Amazon Web Services Region.</p> <p>Constraints:</p> <ul>  <li>   <p>Must be in the format <code>hh24:mi-hh24:mi</code>.</p></li>  <li>   <p>Must be in Universal Coordinated Time (UTC).</p></li>  <li>   <p>Must not conflict with the preferred maintenance window.</p></li>  <li>   <p>Must be at least 30 minutes.</p></li> </ul><br>
    ///   - [`preferred_maintenance_window(impl Into<String>)`](crate::operation::modify_db_cluster::builders::ModifyDBClusterFluentBuilder::preferred_maintenance_window) / [`set_preferred_maintenance_window(Option<String>)`](crate::operation::modify_db_cluster::builders::ModifyDBClusterFluentBuilder::set_preferred_maintenance_window):<br>required: **false**<br><p>The weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).</p> <p>Format: <code>ddd:hh24:mi-ddd:hh24:mi</code></p> <p>The default is a 30-minute window selected at random from an 8-hour block of time for each Amazon Web Services Region, occurring on a random day of the week.</p> <p>Valid days: Mon, Tue, Wed, Thu, Fri, Sat, Sun</p> <p>Constraints: Minimum 30-minute window.</p><br>
    ///   - [`cloudwatch_logs_export_configuration(CloudwatchLogsExportConfiguration)`](crate::operation::modify_db_cluster::builders::ModifyDBClusterFluentBuilder::cloudwatch_logs_export_configuration) / [`set_cloudwatch_logs_export_configuration(Option<CloudwatchLogsExportConfiguration>)`](crate::operation::modify_db_cluster::builders::ModifyDBClusterFluentBuilder::set_cloudwatch_logs_export_configuration):<br>required: **false**<br><p>The configuration setting for the log types to be enabled for export to Amazon CloudWatch Logs for a specific instance or cluster. The <code>EnableLogTypes</code> and <code>DisableLogTypes</code> arrays determine which logs are exported (or not exported) to CloudWatch Logs.</p><br>
    ///   - [`engine_version(impl Into<String>)`](crate::operation::modify_db_cluster::builders::ModifyDBClusterFluentBuilder::engine_version) / [`set_engine_version(Option<String>)`](crate::operation::modify_db_cluster::builders::ModifyDBClusterFluentBuilder::set_engine_version):<br>required: **false**<br><p>The version number of the database engine to which you want to upgrade. Changing this parameter results in an outage. The change is applied during the next maintenance window unless <code>ApplyImmediately</code> is enabled.</p> <p>To list all of the available engine versions for Amazon DocumentDB use the following command:</p> <p><code>aws docdb describe-db-engine-versions --engine docdb --query "DBEngineVersions\[\].EngineVersion"</code></p><br>
    ///   - [`allow_major_version_upgrade(bool)`](crate::operation::modify_db_cluster::builders::ModifyDBClusterFluentBuilder::allow_major_version_upgrade) / [`set_allow_major_version_upgrade(Option<bool>)`](crate::operation::modify_db_cluster::builders::ModifyDBClusterFluentBuilder::set_allow_major_version_upgrade):<br>required: **false**<br><p>A value that indicates whether major version upgrades are allowed.</p> <p>Constraints:</p> <ul>  <li>   <p>You must allow major version upgrades when specifying a value for the <code>EngineVersion</code> parameter that is a different major version than the cluster's current version.</p></li>  <li>   <p>Since some parameters are version specific, changing them requires executing a new <code>ModifyDBCluster</code> API call after the in-place MVU completes.</p></li> </ul><note>  <p>Performing an MVU directly impacts the following parameters:</p>  <ul>   <li>    <p><code>MasterUserPassword</code></p></li>   <li>    <p><code>NewDBClusterIdentifier</code></p></li>   <li>    <p><code>VpcSecurityGroupIds</code></p></li>   <li>    <p><code>Port</code></p></li>  </ul> </note><br>
    ///   - [`deletion_protection(bool)`](crate::operation::modify_db_cluster::builders::ModifyDBClusterFluentBuilder::deletion_protection) / [`set_deletion_protection(Option<bool>)`](crate::operation::modify_db_cluster::builders::ModifyDBClusterFluentBuilder::set_deletion_protection):<br>required: **false**<br><p>Specifies whether this cluster can be deleted. If <code>DeletionProtection</code> is enabled, the cluster cannot be deleted unless it is modified and <code>DeletionProtection</code> is disabled. <code>DeletionProtection</code> protects clusters from being accidentally deleted.</p><br>
    ///   - [`storage_type(impl Into<String>)`](crate::operation::modify_db_cluster::builders::ModifyDBClusterFluentBuilder::storage_type) / [`set_storage_type(Option<String>)`](crate::operation::modify_db_cluster::builders::ModifyDBClusterFluentBuilder::set_storage_type):<br>required: **false**<br><p>The storage type to associate with the DB cluster.</p> <p>For information on storage types for Amazon DocumentDB clusters, see Cluster storage configurations in the <i>Amazon DocumentDB Developer Guide</i>.</p> <p>Valid values for storage type - <code>standard | iopt1</code></p> <p>Default value is <code>standard </code></p><br>
    ///   - [`serverless_v2_scaling_configuration(ServerlessV2ScalingConfiguration)`](crate::operation::modify_db_cluster::builders::ModifyDBClusterFluentBuilder::serverless_v2_scaling_configuration) / [`set_serverless_v2_scaling_configuration(Option<ServerlessV2ScalingConfiguration>)`](crate::operation::modify_db_cluster::builders::ModifyDBClusterFluentBuilder::set_serverless_v2_scaling_configuration):<br>required: **false**<br><p>Contains the scaling configuration of an Amazon DocumentDB Serverless cluster.</p><br>
    ///   - [`manage_master_user_password(bool)`](crate::operation::modify_db_cluster::builders::ModifyDBClusterFluentBuilder::manage_master_user_password) / [`set_manage_master_user_password(Option<bool>)`](crate::operation::modify_db_cluster::builders::ModifyDBClusterFluentBuilder::set_manage_master_user_password):<br>required: **false**<br><p>Specifies whether to manage the master user password with Amazon Web Services Secrets Manager. If the cluster doesn't manage the master user password with Amazon Web Services Secrets Manager, you can turn on this management. In this case, you can't specify <code>MasterUserPassword</code>. If the cluster already manages the master user password with Amazon Web Services Secrets Manager, and you specify that the master user password is not managed with Amazon Web Services Secrets Manager, then you must specify <code>MasterUserPassword</code>. In this case, Amazon DocumentDB deletes the secret and uses the new password for the master user specified by <code>MasterUserPassword</code>.</p><br>
    ///   - [`master_user_secret_kms_key_id(impl Into<String>)`](crate::operation::modify_db_cluster::builders::ModifyDBClusterFluentBuilder::master_user_secret_kms_key_id) / [`set_master_user_secret_kms_key_id(Option<String>)`](crate::operation::modify_db_cluster::builders::ModifyDBClusterFluentBuilder::set_master_user_secret_kms_key_id):<br>required: **false**<br><p>The Amazon Web Services KMS key identifier to encrypt a secret that is automatically generated and managed in Amazon Web Services Secrets Manager.</p> <p>This setting is valid only if both of the following conditions are met:</p> <ul>  <li>   <p>The cluster doesn't manage the master user password in Amazon Web Services Secrets Manager. If the cluster already manages the master user password in Amazon Web Services Secrets Manager, you can't change the KMS key that is used to encrypt the secret.</p></li>  <li>   <p>You are enabling <code>ManageMasterUserPassword</code> to manage the master user password in Amazon Web Services Secrets Manager. If you are turning on <code>ManageMasterUserPassword</code> and don't specify <code>MasterUserSecretKmsKeyId</code>, then the <code>aws/secretsmanager</code> KMS key is used to encrypt the secret. If the secret is in a different Amazon Web Services account, then you can't use the <code>aws/secretsmanager</code> KMS key to encrypt the secret, and you must use a customer managed KMS key.</p></li> </ul> <p>The Amazon Web Services KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the KMS key. To use a KMS key in a different Amazon Web Services account, specify the key ARN or alias ARN.</p> <p>There is a default KMS key for your Amazon Web Services account. Your Amazon Web Services account has a different default KMS key for each Amazon Web Services Region.</p><br>
    ///   - [`rotate_master_user_password(bool)`](crate::operation::modify_db_cluster::builders::ModifyDBClusterFluentBuilder::rotate_master_user_password) / [`set_rotate_master_user_password(Option<bool>)`](crate::operation::modify_db_cluster::builders::ModifyDBClusterFluentBuilder::set_rotate_master_user_password):<br>required: **false**<br><p>Specifies whether to rotate the secret managed by Amazon Web Services Secrets Manager for the master user password.</p> <p>This setting is valid only if the master user password is managed by Amazon DocumentDB in Amazon Web Services Secrets Manager for the cluster. The secret value contains the updated password.</p> <p>Constraint: You must apply the change immediately when rotating the master user password.</p><br>
    ///   - [`network_type(impl Into<String>)`](crate::operation::modify_db_cluster::builders::ModifyDBClusterFluentBuilder::network_type) / [`set_network_type(Option<String>)`](crate::operation::modify_db_cluster::builders::ModifyDBClusterFluentBuilder::set_network_type):<br>required: **false**<br><p>The network type of the cluster.</p> <p>The network type is determined by the <code>DBSubnetGroup</code> specified for the cluster. A <code>DBSubnetGroup</code> can support only the IPv4 protocol or the IPv4 and the IPv6 protocols (<code>DUAL</code>).</p> <p>For more information, see <a href="https://docs.aws.amazon.com/documentdb/latest/developerguide/vpc-clusters.html">DocumentDB clusters in a VPC</a> in the Amazon DocumentDB Developer Guide.</p> <p>Valid Values: <code>IPV4</code> | <code>DUAL</code></p><br>
    /// - On success, responds with [`ModifyDbClusterOutput`](crate::operation::modify_db_cluster::ModifyDbClusterOutput) with field(s):
    ///   - [`db_cluster(Option<DbCluster>)`](crate::operation::modify_db_cluster::ModifyDbClusterOutput::db_cluster): <p>Detailed information about a cluster.</p>
    /// - On failure, responds with [`SdkError<ModifyDBClusterError>`](crate::operation::modify_db_cluster::ModifyDBClusterError)
    pub fn modify_db_cluster(&self) -> crate::operation::modify_db_cluster::builders::ModifyDBClusterFluentBuilder {
        crate::operation::modify_db_cluster::builders::ModifyDBClusterFluentBuilder::new(self.handle.clone())
    }
}
