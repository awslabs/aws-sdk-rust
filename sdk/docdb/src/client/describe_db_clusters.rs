// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeDBClusters`](crate::operation::describe_db_clusters::builders::DescribeDBClustersFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::describe_db_clusters::builders::DescribeDBClustersFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`db_cluster_identifier(impl Into<String>)`](crate::operation::describe_db_clusters::builders::DescribeDBClustersFluentBuilder::db_cluster_identifier) / [`set_db_cluster_identifier(Option<String>)`](crate::operation::describe_db_clusters::builders::DescribeDBClustersFluentBuilder::set_db_cluster_identifier): <p>The user-provided cluster identifier. If this parameter is specified, information from only the specific cluster is returned. This parameter isn't case sensitive.</p>  <p>Constraints:</p>  <ul>   <li> <p>If provided, must match an existing <code>DBClusterIdentifier</code>.</p> </li>  </ul>
    ///   - [`filters(Vec<Filter>)`](crate::operation::describe_db_clusters::builders::DescribeDBClustersFluentBuilder::filters) / [`set_filters(Option<Vec<Filter>>)`](crate::operation::describe_db_clusters::builders::DescribeDBClustersFluentBuilder::set_filters): <p>A filter that specifies one or more clusters to describe.</p>  <p>Supported filters:</p>  <ul>   <li> <p> <code>db-cluster-id</code> - Accepts cluster identifiers and cluster Amazon Resource Names (ARNs). The results list only includes information about the clusters identified by these ARNs.</p> </li>  </ul>
    ///   - [`max_records(i32)`](crate::operation::describe_db_clusters::builders::DescribeDBClustersFluentBuilder::max_records) / [`set_max_records(Option<i32>)`](crate::operation::describe_db_clusters::builders::DescribeDBClustersFluentBuilder::set_max_records): <p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token (marker) is included in the response so that the remaining results can be retrieved.</p>  <p>Default: 100</p>  <p>Constraints: Minimum 20, maximum 100.</p>
    ///   - [`marker(impl Into<String>)`](crate::operation::describe_db_clusters::builders::DescribeDBClustersFluentBuilder::marker) / [`set_marker(Option<String>)`](crate::operation::describe_db_clusters::builders::DescribeDBClustersFluentBuilder::set_marker): <p>An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.</p>
    /// - On success, responds with [`DescribeDbClustersOutput`](crate::operation::describe_db_clusters::DescribeDbClustersOutput) with field(s):
    ///   - [`marker(Option<String>)`](crate::operation::describe_db_clusters::DescribeDbClustersOutput::marker): <p>An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.</p>
    ///   - [`db_clusters(Option<Vec<DbCluster>>)`](crate::operation::describe_db_clusters::DescribeDbClustersOutput::db_clusters): <p>A list of clusters.</p>
    /// - On failure, responds with [`SdkError<DescribeDBClustersError>`](crate::operation::describe_db_clusters::DescribeDBClustersError)
    pub fn describe_db_clusters(
        &self,
    ) -> crate::operation::describe_db_clusters::builders::DescribeDBClustersFluentBuilder {
        crate::operation::describe_db_clusters::builders::DescribeDBClustersFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
