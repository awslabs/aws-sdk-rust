// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`RemoveFromGlobalCluster`](crate::operation::remove_from_global_cluster::builders::RemoveFromGlobalClusterFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`global_cluster_identifier(impl Into<String>)`](crate::operation::remove_from_global_cluster::builders::RemoveFromGlobalClusterFluentBuilder::global_cluster_identifier) / [`set_global_cluster_identifier(Option<String>)`](crate::operation::remove_from_global_cluster::builders::RemoveFromGlobalClusterFluentBuilder::set_global_cluster_identifier):<br>required: **true**<br><p>The cluster identifier to detach from the Amazon DocumentDB global cluster. </p><br>
    ///   - [`db_cluster_identifier(impl Into<String>)`](crate::operation::remove_from_global_cluster::builders::RemoveFromGlobalClusterFluentBuilder::db_cluster_identifier) / [`set_db_cluster_identifier(Option<String>)`](crate::operation::remove_from_global_cluster::builders::RemoveFromGlobalClusterFluentBuilder::set_db_cluster_identifier):<br>required: **true**<br><p>The Amazon Resource Name (ARN) identifying the cluster that was detached from the Amazon DocumentDB global cluster. </p><br>
    /// - On success, responds with [`RemoveFromGlobalClusterOutput`](crate::operation::remove_from_global_cluster::RemoveFromGlobalClusterOutput) with field(s):
    ///   - [`global_cluster(Option<GlobalCluster>)`](crate::operation::remove_from_global_cluster::RemoveFromGlobalClusterOutput::global_cluster): <p>A data type representing an Amazon DocumentDB global cluster.</p>
    /// - On failure, responds with [`SdkError<RemoveFromGlobalClusterError>`](crate::operation::remove_from_global_cluster::RemoveFromGlobalClusterError)
    pub fn remove_from_global_cluster(&self) -> crate::operation::remove_from_global_cluster::builders::RemoveFromGlobalClusterFluentBuilder {
        crate::operation::remove_from_global_cluster::builders::RemoveFromGlobalClusterFluentBuilder::new(self.handle.clone())
    }
}
