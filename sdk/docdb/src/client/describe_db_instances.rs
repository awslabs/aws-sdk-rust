// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeDBInstances`](crate::operation::describe_db_instances::builders::DescribeDBInstancesFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::describe_db_instances::builders::DescribeDBInstancesFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`db_instance_identifier(impl Into<String>)`](crate::operation::describe_db_instances::builders::DescribeDBInstancesFluentBuilder::db_instance_identifier) / [`set_db_instance_identifier(Option<String>)`](crate::operation::describe_db_instances::builders::DescribeDBInstancesFluentBuilder::set_db_instance_identifier): <p>The user-provided instance identifier. If this parameter is specified, information from only the specific instance is returned. This parameter isn't case sensitive.</p>  <p>Constraints:</p>  <ul>   <li> <p>If provided, must match the identifier of an existing <code>DBInstance</code>.</p> </li>  </ul>
    ///   - [`filters(Vec<Filter>)`](crate::operation::describe_db_instances::builders::DescribeDBInstancesFluentBuilder::filters) / [`set_filters(Option<Vec<Filter>>)`](crate::operation::describe_db_instances::builders::DescribeDBInstancesFluentBuilder::set_filters): <p>A filter that specifies one or more instances to describe.</p>  <p>Supported filters:</p>  <ul>   <li> <p> <code>db-cluster-id</code> - Accepts cluster identifiers and cluster Amazon Resource Names (ARNs). The results list includes only the information about the instances that are associated with the clusters that are identified by these ARNs.</p> </li>   <li> <p> <code>db-instance-id</code> - Accepts instance identifiers and instance ARNs. The results list includes only the information about the instances that are identified by these ARNs.</p> </li>  </ul>
    ///   - [`max_records(i32)`](crate::operation::describe_db_instances::builders::DescribeDBInstancesFluentBuilder::max_records) / [`set_max_records(Option<i32>)`](crate::operation::describe_db_instances::builders::DescribeDBInstancesFluentBuilder::set_max_records): <p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token (marker) is included in the response so that the remaining results can be retrieved.</p>  <p>Default: 100</p>  <p>Constraints: Minimum 20, maximum 100.</p>
    ///   - [`marker(impl Into<String>)`](crate::operation::describe_db_instances::builders::DescribeDBInstancesFluentBuilder::marker) / [`set_marker(Option<String>)`](crate::operation::describe_db_instances::builders::DescribeDBInstancesFluentBuilder::set_marker): <p>An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.</p>
    /// - On success, responds with [`DescribeDbInstancesOutput`](crate::operation::describe_db_instances::DescribeDbInstancesOutput) with field(s):
    ///   - [`marker(Option<String>)`](crate::operation::describe_db_instances::DescribeDbInstancesOutput::marker): <p>An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.</p>
    ///   - [`db_instances(Option<Vec<DbInstance>>)`](crate::operation::describe_db_instances::DescribeDbInstancesOutput::db_instances): <p>Detailed information about one or more instances. </p>
    /// - On failure, responds with [`SdkError<DescribeDBInstancesError>`](crate::operation::describe_db_instances::DescribeDBInstancesError)
    pub fn describe_db_instances(
        &self,
    ) -> crate::operation::describe_db_instances::builders::DescribeDBInstancesFluentBuilder {
        crate::operation::describe_db_instances::builders::DescribeDBInstancesFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
