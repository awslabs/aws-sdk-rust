// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Represents the input to <code>RemoveSourceIdentifierFromSubscription</code>.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct RemoveSourceIdentifierFromSubscriptionInput {
    /// <p>The name of the Amazon DocumentDB event notification subscription that you want to remove a source identifier from.</p>
    #[doc(hidden)]
    pub subscription_name: std::option::Option<std::string::String>,
    /// <p> The source identifier to be removed from the subscription, such as the instance identifier for an instance, or the name of a security group. </p>
    #[doc(hidden)]
    pub source_identifier: std::option::Option<std::string::String>,
}
impl RemoveSourceIdentifierFromSubscriptionInput {
    /// <p>The name of the Amazon DocumentDB event notification subscription that you want to remove a source identifier from.</p>
    pub fn subscription_name(&self) -> std::option::Option<&str> {
        self.subscription_name.as_deref()
    }
    /// <p> The source identifier to be removed from the subscription, such as the instance identifier for an instance, or the name of a security group. </p>
    pub fn source_identifier(&self) -> std::option::Option<&str> {
        self.source_identifier.as_deref()
    }
}
impl RemoveSourceIdentifierFromSubscriptionInput {
    /// Creates a new builder-style object to manufacture [`RemoveSourceIdentifierFromSubscriptionInput`](crate::operation::remove_source_identifier_from_subscription::RemoveSourceIdentifierFromSubscriptionInput).
    pub fn builder() -> crate::operation::remove_source_identifier_from_subscription::builders::RemoveSourceIdentifierFromSubscriptionInputBuilder{
        crate::operation::remove_source_identifier_from_subscription::builders::RemoveSourceIdentifierFromSubscriptionInputBuilder::default()
    }
}

/// A builder for [`RemoveSourceIdentifierFromSubscriptionInput`](crate::operation::remove_source_identifier_from_subscription::RemoveSourceIdentifierFromSubscriptionInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct RemoveSourceIdentifierFromSubscriptionInputBuilder {
    pub(crate) subscription_name: std::option::Option<std::string::String>,
    pub(crate) source_identifier: std::option::Option<std::string::String>,
}
impl RemoveSourceIdentifierFromSubscriptionInputBuilder {
    /// <p>The name of the Amazon DocumentDB event notification subscription that you want to remove a source identifier from.</p>
    pub fn subscription_name(mut self, input: impl Into<std::string::String>) -> Self {
        self.subscription_name = Some(input.into());
        self
    }
    /// <p>The name of the Amazon DocumentDB event notification subscription that you want to remove a source identifier from.</p>
    pub fn set_subscription_name(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.subscription_name = input;
        self
    }
    /// <p> The source identifier to be removed from the subscription, such as the instance identifier for an instance, or the name of a security group. </p>
    pub fn source_identifier(mut self, input: impl Into<std::string::String>) -> Self {
        self.source_identifier = Some(input.into());
        self
    }
    /// <p> The source identifier to be removed from the subscription, such as the instance identifier for an instance, or the name of a security group. </p>
    pub fn set_source_identifier(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.source_identifier = input;
        self
    }
    /// Consumes the builder and constructs a [`RemoveSourceIdentifierFromSubscriptionInput`](crate::operation::remove_source_identifier_from_subscription::RemoveSourceIdentifierFromSubscriptionInput).
    pub fn build(self) -> Result<crate::operation::remove_source_identifier_from_subscription::RemoveSourceIdentifierFromSubscriptionInput, aws_smithy_http::operation::error::BuildError>{
        Ok(
            crate::operation::remove_source_identifier_from_subscription::RemoveSourceIdentifierFromSubscriptionInput {
                subscription_name: self.subscription_name
                ,
                source_identifier: self.source_identifier
                ,
            }
        )
    }
}
