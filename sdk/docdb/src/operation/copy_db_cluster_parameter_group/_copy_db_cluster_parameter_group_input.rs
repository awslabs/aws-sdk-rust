// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Represents the input to <code>CopyDBClusterParameterGroup</code>. </p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct CopyDbClusterParameterGroupInput {
    /// <p>The identifier or Amazon Resource Name (ARN) for the source cluster parameter group.</p>
    /// <p>Constraints:</p>
    /// <ul>
    /// <li> <p>Must specify a valid cluster parameter group.</p> </li>
    /// <li> <p>If the source cluster parameter group is in the same Amazon Web Services Region as the copy, specify a valid parameter group identifier; for example, <code>my-db-cluster-param-group</code>, or a valid ARN.</p> </li>
    /// <li> <p>If the source parameter group is in a different Amazon Web Services Region than the copy, specify a valid cluster parameter group ARN; for example, <code>arn:aws:rds:us-east-1:123456789012:sample-cluster:sample-parameter-group</code>.</p> </li>
    /// </ul>
    #[doc(hidden)]
    pub source_db_cluster_parameter_group_identifier: std::option::Option<std::string::String>,
    /// <p>The identifier for the copied cluster parameter group.</p>
    /// <p>Constraints:</p>
    /// <ul>
    /// <li> <p>Cannot be null, empty, or blank.</p> </li>
    /// <li> <p>Must contain from 1 to 255 letters, numbers, or hyphens. </p> </li>
    /// <li> <p>The first character must be a letter.</p> </li>
    /// <li> <p>Cannot end with a hyphen or contain two consecutive hyphens. </p> </li>
    /// </ul>
    /// <p>Example: <code>my-cluster-param-group1</code> </p>
    #[doc(hidden)]
    pub target_db_cluster_parameter_group_identifier: std::option::Option<std::string::String>,
    /// <p>A description for the copied cluster parameter group.</p>
    #[doc(hidden)]
    pub target_db_cluster_parameter_group_description: std::option::Option<std::string::String>,
    /// <p>The tags that are to be assigned to the parameter group.</p>
    #[doc(hidden)]
    pub tags: std::option::Option<std::vec::Vec<crate::types::Tag>>,
}
impl CopyDbClusterParameterGroupInput {
    /// <p>The identifier or Amazon Resource Name (ARN) for the source cluster parameter group.</p>
    /// <p>Constraints:</p>
    /// <ul>
    /// <li> <p>Must specify a valid cluster parameter group.</p> </li>
    /// <li> <p>If the source cluster parameter group is in the same Amazon Web Services Region as the copy, specify a valid parameter group identifier; for example, <code>my-db-cluster-param-group</code>, or a valid ARN.</p> </li>
    /// <li> <p>If the source parameter group is in a different Amazon Web Services Region than the copy, specify a valid cluster parameter group ARN; for example, <code>arn:aws:rds:us-east-1:123456789012:sample-cluster:sample-parameter-group</code>.</p> </li>
    /// </ul>
    pub fn source_db_cluster_parameter_group_identifier(&self) -> std::option::Option<&str> {
        self.source_db_cluster_parameter_group_identifier.as_deref()
    }
    /// <p>The identifier for the copied cluster parameter group.</p>
    /// <p>Constraints:</p>
    /// <ul>
    /// <li> <p>Cannot be null, empty, or blank.</p> </li>
    /// <li> <p>Must contain from 1 to 255 letters, numbers, or hyphens. </p> </li>
    /// <li> <p>The first character must be a letter.</p> </li>
    /// <li> <p>Cannot end with a hyphen or contain two consecutive hyphens. </p> </li>
    /// </ul>
    /// <p>Example: <code>my-cluster-param-group1</code> </p>
    pub fn target_db_cluster_parameter_group_identifier(&self) -> std::option::Option<&str> {
        self.target_db_cluster_parameter_group_identifier.as_deref()
    }
    /// <p>A description for the copied cluster parameter group.</p>
    pub fn target_db_cluster_parameter_group_description(&self) -> std::option::Option<&str> {
        self.target_db_cluster_parameter_group_description
            .as_deref()
    }
    /// <p>The tags that are to be assigned to the parameter group.</p>
    pub fn tags(&self) -> std::option::Option<&[crate::types::Tag]> {
        self.tags.as_deref()
    }
}
impl CopyDbClusterParameterGroupInput {
    /// Creates a new builder-style object to manufacture [`CopyDbClusterParameterGroupInput`](crate::operation::copy_db_cluster_parameter_group::CopyDbClusterParameterGroupInput).
    pub fn builder() -> crate::operation::copy_db_cluster_parameter_group::builders::CopyDbClusterParameterGroupInputBuilder{
        crate::operation::copy_db_cluster_parameter_group::builders::CopyDbClusterParameterGroupInputBuilder::default()
    }
}

/// A builder for [`CopyDbClusterParameterGroupInput`](crate::operation::copy_db_cluster_parameter_group::CopyDbClusterParameterGroupInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct CopyDbClusterParameterGroupInputBuilder {
    pub(crate) source_db_cluster_parameter_group_identifier:
        std::option::Option<std::string::String>,
    pub(crate) target_db_cluster_parameter_group_identifier:
        std::option::Option<std::string::String>,
    pub(crate) target_db_cluster_parameter_group_description:
        std::option::Option<std::string::String>,
    pub(crate) tags: std::option::Option<std::vec::Vec<crate::types::Tag>>,
}
impl CopyDbClusterParameterGroupInputBuilder {
    /// <p>The identifier or Amazon Resource Name (ARN) for the source cluster parameter group.</p>
    /// <p>Constraints:</p>
    /// <ul>
    /// <li> <p>Must specify a valid cluster parameter group.</p> </li>
    /// <li> <p>If the source cluster parameter group is in the same Amazon Web Services Region as the copy, specify a valid parameter group identifier; for example, <code>my-db-cluster-param-group</code>, or a valid ARN.</p> </li>
    /// <li> <p>If the source parameter group is in a different Amazon Web Services Region than the copy, specify a valid cluster parameter group ARN; for example, <code>arn:aws:rds:us-east-1:123456789012:sample-cluster:sample-parameter-group</code>.</p> </li>
    /// </ul>
    pub fn source_db_cluster_parameter_group_identifier(
        mut self,
        input: impl Into<std::string::String>,
    ) -> Self {
        self.source_db_cluster_parameter_group_identifier = Some(input.into());
        self
    }
    /// <p>The identifier or Amazon Resource Name (ARN) for the source cluster parameter group.</p>
    /// <p>Constraints:</p>
    /// <ul>
    /// <li> <p>Must specify a valid cluster parameter group.</p> </li>
    /// <li> <p>If the source cluster parameter group is in the same Amazon Web Services Region as the copy, specify a valid parameter group identifier; for example, <code>my-db-cluster-param-group</code>, or a valid ARN.</p> </li>
    /// <li> <p>If the source parameter group is in a different Amazon Web Services Region than the copy, specify a valid cluster parameter group ARN; for example, <code>arn:aws:rds:us-east-1:123456789012:sample-cluster:sample-parameter-group</code>.</p> </li>
    /// </ul>
    pub fn set_source_db_cluster_parameter_group_identifier(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.source_db_cluster_parameter_group_identifier = input;
        self
    }
    /// <p>The identifier for the copied cluster parameter group.</p>
    /// <p>Constraints:</p>
    /// <ul>
    /// <li> <p>Cannot be null, empty, or blank.</p> </li>
    /// <li> <p>Must contain from 1 to 255 letters, numbers, or hyphens. </p> </li>
    /// <li> <p>The first character must be a letter.</p> </li>
    /// <li> <p>Cannot end with a hyphen or contain two consecutive hyphens. </p> </li>
    /// </ul>
    /// <p>Example: <code>my-cluster-param-group1</code> </p>
    pub fn target_db_cluster_parameter_group_identifier(
        mut self,
        input: impl Into<std::string::String>,
    ) -> Self {
        self.target_db_cluster_parameter_group_identifier = Some(input.into());
        self
    }
    /// <p>The identifier for the copied cluster parameter group.</p>
    /// <p>Constraints:</p>
    /// <ul>
    /// <li> <p>Cannot be null, empty, or blank.</p> </li>
    /// <li> <p>Must contain from 1 to 255 letters, numbers, or hyphens. </p> </li>
    /// <li> <p>The first character must be a letter.</p> </li>
    /// <li> <p>Cannot end with a hyphen or contain two consecutive hyphens. </p> </li>
    /// </ul>
    /// <p>Example: <code>my-cluster-param-group1</code> </p>
    pub fn set_target_db_cluster_parameter_group_identifier(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.target_db_cluster_parameter_group_identifier = input;
        self
    }
    /// <p>A description for the copied cluster parameter group.</p>
    pub fn target_db_cluster_parameter_group_description(
        mut self,
        input: impl Into<std::string::String>,
    ) -> Self {
        self.target_db_cluster_parameter_group_description = Some(input.into());
        self
    }
    /// <p>A description for the copied cluster parameter group.</p>
    pub fn set_target_db_cluster_parameter_group_description(
        mut self,
        input: std::option::Option<std::string::String>,
    ) -> Self {
        self.target_db_cluster_parameter_group_description = input;
        self
    }
    /// Appends an item to `tags`.
    ///
    /// To override the contents of this collection use [`set_tags`](Self::set_tags).
    ///
    /// <p>The tags that are to be assigned to the parameter group.</p>
    pub fn tags(mut self, input: crate::types::Tag) -> Self {
        let mut v = self.tags.unwrap_or_default();
        v.push(input);
        self.tags = Some(v);
        self
    }
    /// <p>The tags that are to be assigned to the parameter group.</p>
    pub fn set_tags(
        mut self,
        input: std::option::Option<std::vec::Vec<crate::types::Tag>>,
    ) -> Self {
        self.tags = input;
        self
    }
    /// Consumes the builder and constructs a [`CopyDbClusterParameterGroupInput`](crate::operation::copy_db_cluster_parameter_group::CopyDbClusterParameterGroupInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::copy_db_cluster_parameter_group::CopyDbClusterParameterGroupInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::copy_db_cluster_parameter_group::CopyDbClusterParameterGroupInput {
                source_db_cluster_parameter_group_identifier: self
                    .source_db_cluster_parameter_group_identifier,
                target_db_cluster_parameter_group_identifier: self
                    .target_db_cluster_parameter_group_identifier,
                target_db_cluster_parameter_group_description: self
                    .target_db_cluster_parameter_group_description,
                tags: self.tags,
            },
        )
    }
}
