// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Represents the input to <code>DeleteDBInstance</code>.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DeleteDbInstanceInput {
    /// <p>The instance identifier for the instance to be deleted. This parameter isn't case sensitive.</p>
    /// <p>Constraints:</p>
    /// <ul>
    /// <li> <p>Must match the name of an existing instance.</p> </li>
    /// </ul>
    pub db_instance_identifier: ::std::option::Option<::std::string::String>,
}
impl DeleteDbInstanceInput {
    /// <p>The instance identifier for the instance to be deleted. This parameter isn't case sensitive.</p>
    /// <p>Constraints:</p>
    /// <ul>
    /// <li> <p>Must match the name of an existing instance.</p> </li>
    /// </ul>
    pub fn db_instance_identifier(&self) -> ::std::option::Option<&str> {
        self.db_instance_identifier.as_deref()
    }
}
impl DeleteDbInstanceInput {
    /// Creates a new builder-style object to manufacture [`DeleteDbInstanceInput`](crate::operation::delete_db_instance::DeleteDbInstanceInput).
    pub fn builder() -> crate::operation::delete_db_instance::builders::DeleteDbInstanceInputBuilder {
        crate::operation::delete_db_instance::builders::DeleteDbInstanceInputBuilder::default()
    }
}

/// A builder for [`DeleteDbInstanceInput`](crate::operation::delete_db_instance::DeleteDbInstanceInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DeleteDbInstanceInputBuilder {
    pub(crate) db_instance_identifier: ::std::option::Option<::std::string::String>,
}
impl DeleteDbInstanceInputBuilder {
    /// <p>The instance identifier for the instance to be deleted. This parameter isn't case sensitive.</p>
    /// <p>Constraints:</p>
    /// <ul>
    /// <li> <p>Must match the name of an existing instance.</p> </li>
    /// </ul>
    /// This field is required.
    pub fn db_instance_identifier(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.db_instance_identifier = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The instance identifier for the instance to be deleted. This parameter isn't case sensitive.</p>
    /// <p>Constraints:</p>
    /// <ul>
    /// <li> <p>Must match the name of an existing instance.</p> </li>
    /// </ul>
    pub fn set_db_instance_identifier(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.db_instance_identifier = input;
        self
    }
    /// <p>The instance identifier for the instance to be deleted. This parameter isn't case sensitive.</p>
    /// <p>Constraints:</p>
    /// <ul>
    /// <li> <p>Must match the name of an existing instance.</p> </li>
    /// </ul>
    pub fn get_db_instance_identifier(&self) -> &::std::option::Option<::std::string::String> {
        &self.db_instance_identifier
    }
    /// Consumes the builder and constructs a [`DeleteDbInstanceInput`](crate::operation::delete_db_instance::DeleteDbInstanceInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::delete_db_instance::DeleteDbInstanceInput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(crate::operation::delete_db_instance::DeleteDbInstanceInput {
            db_instance_identifier: self.db_instance_identifier,
        })
    }
}
