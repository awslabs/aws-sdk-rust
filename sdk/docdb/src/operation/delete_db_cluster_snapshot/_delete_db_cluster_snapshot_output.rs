// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DeleteDbClusterSnapshotOutput {
    /// <p>Detailed information about a cluster snapshot. </p>
    #[doc(hidden)]
    pub db_cluster_snapshot: std::option::Option<crate::types::DbClusterSnapshot>,
    _request_id: Option<String>,
}
impl DeleteDbClusterSnapshotOutput {
    /// <p>Detailed information about a cluster snapshot. </p>
    pub fn db_cluster_snapshot(&self) -> std::option::Option<&crate::types::DbClusterSnapshot> {
        self.db_cluster_snapshot.as_ref()
    }
}
impl aws_http::request_id::RequestId for DeleteDbClusterSnapshotOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl DeleteDbClusterSnapshotOutput {
    /// Creates a new builder-style object to manufacture [`DeleteDbClusterSnapshotOutput`](crate::operation::delete_db_cluster_snapshot::DeleteDbClusterSnapshotOutput).
    pub fn builder(
    ) -> crate::operation::delete_db_cluster_snapshot::builders::DeleteDbClusterSnapshotOutputBuilder
    {
        crate::operation::delete_db_cluster_snapshot::builders::DeleteDbClusterSnapshotOutputBuilder::default()
    }
}

/// A builder for [`DeleteDbClusterSnapshotOutput`](crate::operation::delete_db_cluster_snapshot::DeleteDbClusterSnapshotOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DeleteDbClusterSnapshotOutputBuilder {
    pub(crate) db_cluster_snapshot: std::option::Option<crate::types::DbClusterSnapshot>,
    _request_id: Option<String>,
}
impl DeleteDbClusterSnapshotOutputBuilder {
    /// <p>Detailed information about a cluster snapshot. </p>
    pub fn db_cluster_snapshot(mut self, input: crate::types::DbClusterSnapshot) -> Self {
        self.db_cluster_snapshot = Some(input);
        self
    }
    /// <p>Detailed information about a cluster snapshot. </p>
    pub fn set_db_cluster_snapshot(
        mut self,
        input: std::option::Option<crate::types::DbClusterSnapshot>,
    ) -> Self {
        self.db_cluster_snapshot = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`DeleteDbClusterSnapshotOutput`](crate::operation::delete_db_cluster_snapshot::DeleteDbClusterSnapshotOutput).
    pub fn build(
        self,
    ) -> crate::operation::delete_db_cluster_snapshot::DeleteDbClusterSnapshotOutput {
        crate::operation::delete_db_cluster_snapshot::DeleteDbClusterSnapshotOutput {
            db_cluster_snapshot: self.db_cluster_snapshot,
            _request_id: self._request_id,
        }
    }
}
