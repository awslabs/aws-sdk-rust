// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The summary of the trust store.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct TrustStoreSummary {
    /// <p>The ARN of the trust store.</p>
    #[doc(hidden)]
    pub trust_store_arn: std::option::Option<std::string::String>,
}
impl TrustStoreSummary {
    /// <p>The ARN of the trust store.</p>
    pub fn trust_store_arn(&self) -> std::option::Option<&str> {
        self.trust_store_arn.as_deref()
    }
}
impl TrustStoreSummary {
    /// Creates a new builder-style object to manufacture [`TrustStoreSummary`](crate::types::TrustStoreSummary).
    pub fn builder() -> crate::types::builders::TrustStoreSummaryBuilder {
        crate::types::builders::TrustStoreSummaryBuilder::default()
    }
}

/// A builder for [`TrustStoreSummary`](crate::types::TrustStoreSummary).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct TrustStoreSummaryBuilder {
    pub(crate) trust_store_arn: std::option::Option<std::string::String>,
}
impl TrustStoreSummaryBuilder {
    /// <p>The ARN of the trust store.</p>
    pub fn trust_store_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.trust_store_arn = Some(input.into());
        self
    }
    /// <p>The ARN of the trust store.</p>
    pub fn set_trust_store_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.trust_store_arn = input;
        self
    }
    /// Consumes the builder and constructs a [`TrustStoreSummary`](crate::types::TrustStoreSummary).
    pub fn build(self) -> crate::types::TrustStoreSummary {
        crate::types::TrustStoreSummary {
            trust_store_arn: self.trust_store_arn,
        }
    }
}
