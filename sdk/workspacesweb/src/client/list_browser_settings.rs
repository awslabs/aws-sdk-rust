// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListBrowserSettings`](crate::operation::list_browser_settings::builders::ListBrowserSettingsFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::list_browser_settings::builders::ListBrowserSettingsFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`next_token(impl Into<String>)`](crate::operation::list_browser_settings::builders::ListBrowserSettingsFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::list_browser_settings::builders::ListBrowserSettingsFluentBuilder::set_next_token): <p>The pagination token used to retrieve the next page of results for this operation.</p>
    ///   - [`max_results(i32)`](crate::operation::list_browser_settings::builders::ListBrowserSettingsFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::list_browser_settings::builders::ListBrowserSettingsFluentBuilder::set_max_results): <p>The maximum number of results to be included in the next page.</p>
    /// - On success, responds with [`ListBrowserSettingsOutput`](crate::operation::list_browser_settings::ListBrowserSettingsOutput) with field(s):
    ///   - [`browser_settings(Option<Vec<BrowserSettingsSummary>>)`](crate::operation::list_browser_settings::ListBrowserSettingsOutput::browser_settings): <p>The browser settings.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::list_browser_settings::ListBrowserSettingsOutput::next_token): <p>The pagination token used to retrieve the next page of results for this operation.</p>
    /// - On failure, responds with [`SdkError<ListBrowserSettingsError>`](crate::operation::list_browser_settings::ListBrowserSettingsError)
    pub fn list_browser_settings(
        &self,
    ) -> crate::operation::list_browser_settings::builders::ListBrowserSettingsFluentBuilder {
        crate::operation::list_browser_settings::builders::ListBrowserSettingsFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
