// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateTrustStore`](crate::operation::create_trust_store::builders::CreateTrustStoreFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`certificate_list(Blob)`](crate::operation::create_trust_store::builders::CreateTrustStoreFluentBuilder::certificate_list) / [`set_certificate_list(Option<Vec::<Blob>>)`](crate::operation::create_trust_store::builders::CreateTrustStoreFluentBuilder::set_certificate_list):<br>required: **true**<br><p>A list of CA certificates to be added to the trust store.</p><br>
    ///   - [`tags(Tag)`](crate::operation::create_trust_store::builders::CreateTrustStoreFluentBuilder::tags) / [`set_tags(Option<Vec::<Tag>>)`](crate::operation::create_trust_store::builders::CreateTrustStoreFluentBuilder::set_tags):<br>required: **false**<br><p>The tags to add to the trust store. A tag is a key-value pair.</p><br>
    ///   - [`client_token(impl Into<String>)`](crate::operation::create_trust_store::builders::CreateTrustStoreFluentBuilder::client_token) / [`set_client_token(Option<String>)`](crate::operation::create_trust_store::builders::CreateTrustStoreFluentBuilder::set_client_token):<br>required: **false**<br><p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. Idempotency ensures that an API request completes only once. With an idempotent request, if the original request completes successfully, subsequent retries with the same client token returns the result from the original successful request. </p>  <p>If you do not specify a client token, one is automatically generated by the AWS SDK.</p><br>
    /// - On success, responds with [`CreateTrustStoreOutput`](crate::operation::create_trust_store::CreateTrustStoreOutput) with field(s):
    ///   - [`trust_store_arn(String)`](crate::operation::create_trust_store::CreateTrustStoreOutput::trust_store_arn): <p>The ARN of the trust store.</p>
    /// - On failure, responds with [`SdkError<CreateTrustStoreError>`](crate::operation::create_trust_store::CreateTrustStoreError)
    pub fn create_trust_store(&self) -> crate::operation::create_trust_store::builders::CreateTrustStoreFluentBuilder {
        crate::operation::create_trust_store::builders::CreateTrustStoreFluentBuilder::new(self.handle.clone())
    }
}
