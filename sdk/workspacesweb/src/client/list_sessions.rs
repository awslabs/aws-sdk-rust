// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListSessions`](crate::operation::list_sessions::builders::ListSessionsFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::list_sessions::builders::ListSessionsFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`portal_id(impl Into<String>)`](crate::operation::list_sessions::builders::ListSessionsFluentBuilder::portal_id) / [`set_portal_id(Option<String>)`](crate::operation::list_sessions::builders::ListSessionsFluentBuilder::set_portal_id):<br>required: **true**<br><p>The ID of the web portal for the sessions.</p><br>
    ///   - [`username(impl Into<String>)`](crate::operation::list_sessions::builders::ListSessionsFluentBuilder::username) / [`set_username(Option<String>)`](crate::operation::list_sessions::builders::ListSessionsFluentBuilder::set_username):<br>required: **false**<br><p>The username of the session.</p><br>
    ///   - [`session_id(impl Into<String>)`](crate::operation::list_sessions::builders::ListSessionsFluentBuilder::session_id) / [`set_session_id(Option<String>)`](crate::operation::list_sessions::builders::ListSessionsFluentBuilder::set_session_id):<br>required: **false**<br><p>The ID of the session.</p><br>
    ///   - [`sort_by(SessionSortBy)`](crate::operation::list_sessions::builders::ListSessionsFluentBuilder::sort_by) / [`set_sort_by(Option<SessionSortBy>)`](crate::operation::list_sessions::builders::ListSessionsFluentBuilder::set_sort_by):<br>required: **false**<br><p>The method in which the returned sessions should be sorted.</p><br>
    ///   - [`status(SessionStatus)`](crate::operation::list_sessions::builders::ListSessionsFluentBuilder::status) / [`set_status(Option<SessionStatus>)`](crate::operation::list_sessions::builders::ListSessionsFluentBuilder::set_status):<br>required: **false**<br><p>The status of the session.</p><br>
    ///   - [`max_results(i32)`](crate::operation::list_sessions::builders::ListSessionsFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::list_sessions::builders::ListSessionsFluentBuilder::set_max_results):<br>required: **false**<br><p>The maximum number of results to be included in the next page.</p><br>
    ///   - [`next_token(impl Into<String>)`](crate::operation::list_sessions::builders::ListSessionsFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::list_sessions::builders::ListSessionsFluentBuilder::set_next_token):<br>required: **false**<br><p>The pagination token used to retrieve the next page of results for this operation.</p><br>
    /// - On success, responds with [`ListSessionsOutput`](crate::operation::list_sessions::ListSessionsOutput) with field(s):
    ///   - [`sessions(Vec::<SessionSummary>)`](crate::operation::list_sessions::ListSessionsOutput::sessions): <p>The sessions in a list.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::list_sessions::ListSessionsOutput::next_token): <p>The pagination token used to retrieve the next page of results for this operation.</p>
    /// - On failure, responds with [`SdkError<ListSessionsError>`](crate::operation::list_sessions::ListSessionsError)
    pub fn list_sessions(&self) -> crate::operation::list_sessions::builders::ListSessionsFluentBuilder {
        crate::operation::list_sessions::builders::ListSessionsFluentBuilder::new(self.handle.clone())
    }
}
