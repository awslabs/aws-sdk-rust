// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateUserAccessLoggingSettings`](crate::client::fluent_builders::CreateUserAccessLoggingSettings) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`kinesis_stream_arn(impl Into<String>)`](crate::client::fluent_builders::CreateUserAccessLoggingSettings::kinesis_stream_arn) / [`set_kinesis_stream_arn(Option<String>)`](crate::client::fluent_builders::CreateUserAccessLoggingSettings::set_kinesis_stream_arn): <p>The ARN of the Kinesis stream.</p>
    ///   - [`tags(Vec<Tag>)`](crate::client::fluent_builders::CreateUserAccessLoggingSettings::tags) / [`set_tags(Option<Vec<Tag>>)`](crate::client::fluent_builders::CreateUserAccessLoggingSettings::set_tags): <p>The tags to add to the user settings resource. A tag is a key-value pair.</p>
    ///   - [`client_token(impl Into<String>)`](crate::client::fluent_builders::CreateUserAccessLoggingSettings::client_token) / [`set_client_token(Option<String>)`](crate::client::fluent_builders::CreateUserAccessLoggingSettings::set_client_token): <p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. Idempotency ensures that an API request completes only once. With an idempotent request, if the original request completes successfully, subsequent retries with the same client token returns the result from the original successful request. </p>  <p>If you do not specify a client token, one is automatically generated by the AWS SDK.</p>
    /// - On success, responds with [`CreateUserAccessLoggingSettingsOutput`](crate::output::CreateUserAccessLoggingSettingsOutput) with field(s):
    ///   - [`user_access_logging_settings_arn(Option<String>)`](crate::output::CreateUserAccessLoggingSettingsOutput::user_access_logging_settings_arn): <p>The ARN of the user access logging settings.</p>
    /// - On failure, responds with [`SdkError<CreateUserAccessLoggingSettingsError>`](crate::error::CreateUserAccessLoggingSettingsError)
    pub fn create_user_access_logging_settings(
        &self,
    ) -> crate::client::fluent_builders::CreateUserAccessLoggingSettings {
        crate::client::fluent_builders::CreateUserAccessLoggingSettings::new(self.handle.clone())
    }
}
