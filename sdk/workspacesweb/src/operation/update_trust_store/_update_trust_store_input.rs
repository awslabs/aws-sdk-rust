// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct UpdateTrustStoreInput {
    /// <p>The ARN of the trust store.</p>
    #[doc(hidden)]
    pub trust_store_arn: std::option::Option<std::string::String>,
    /// <p>A list of CA certificates to add to the trust store.</p>
    #[doc(hidden)]
    pub certificates_to_add: std::option::Option<std::vec::Vec<aws_smithy_types::Blob>>,
    /// <p>A list of CA certificates to delete from a trust store.</p>
    #[doc(hidden)]
    pub certificates_to_delete: std::option::Option<std::vec::Vec<std::string::String>>,
    /// <p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. Idempotency ensures that an API request completes only once. With an idempotent request, if the original request completes successfully, subsequent retries with the same client token return the result from the original successful request. </p>
    /// <p>If you do not specify a client token, one is automatically generated by the AWS SDK.</p>
    #[doc(hidden)]
    pub client_token: std::option::Option<std::string::String>,
}
impl UpdateTrustStoreInput {
    /// <p>The ARN of the trust store.</p>
    pub fn trust_store_arn(&self) -> std::option::Option<&str> {
        self.trust_store_arn.as_deref()
    }
    /// <p>A list of CA certificates to add to the trust store.</p>
    pub fn certificates_to_add(&self) -> std::option::Option<&[aws_smithy_types::Blob]> {
        self.certificates_to_add.as_deref()
    }
    /// <p>A list of CA certificates to delete from a trust store.</p>
    pub fn certificates_to_delete(&self) -> std::option::Option<&[std::string::String]> {
        self.certificates_to_delete.as_deref()
    }
    /// <p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. Idempotency ensures that an API request completes only once. With an idempotent request, if the original request completes successfully, subsequent retries with the same client token return the result from the original successful request. </p>
    /// <p>If you do not specify a client token, one is automatically generated by the AWS SDK.</p>
    pub fn client_token(&self) -> std::option::Option<&str> {
        self.client_token.as_deref()
    }
}
impl UpdateTrustStoreInput {
    /// Creates a new builder-style object to manufacture [`UpdateTrustStoreInput`](crate::operation::update_trust_store::UpdateTrustStoreInput).
    pub fn builder() -> crate::operation::update_trust_store::builders::UpdateTrustStoreInputBuilder
    {
        crate::operation::update_trust_store::builders::UpdateTrustStoreInputBuilder::default()
    }
}

/// A builder for [`UpdateTrustStoreInput`](crate::operation::update_trust_store::UpdateTrustStoreInput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct UpdateTrustStoreInputBuilder {
    pub(crate) trust_store_arn: std::option::Option<std::string::String>,
    pub(crate) certificates_to_add: std::option::Option<std::vec::Vec<aws_smithy_types::Blob>>,
    pub(crate) certificates_to_delete: std::option::Option<std::vec::Vec<std::string::String>>,
    pub(crate) client_token: std::option::Option<std::string::String>,
}
impl UpdateTrustStoreInputBuilder {
    /// <p>The ARN of the trust store.</p>
    pub fn trust_store_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.trust_store_arn = Some(input.into());
        self
    }
    /// <p>The ARN of the trust store.</p>
    pub fn set_trust_store_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.trust_store_arn = input;
        self
    }
    /// Appends an item to `certificates_to_add`.
    ///
    /// To override the contents of this collection use [`set_certificates_to_add`](Self::set_certificates_to_add).
    ///
    /// <p>A list of CA certificates to add to the trust store.</p>
    pub fn certificates_to_add(mut self, input: aws_smithy_types::Blob) -> Self {
        let mut v = self.certificates_to_add.unwrap_or_default();
        v.push(input);
        self.certificates_to_add = Some(v);
        self
    }
    /// <p>A list of CA certificates to add to the trust store.</p>
    pub fn set_certificates_to_add(
        mut self,
        input: std::option::Option<std::vec::Vec<aws_smithy_types::Blob>>,
    ) -> Self {
        self.certificates_to_add = input;
        self
    }
    /// Appends an item to `certificates_to_delete`.
    ///
    /// To override the contents of this collection use [`set_certificates_to_delete`](Self::set_certificates_to_delete).
    ///
    /// <p>A list of CA certificates to delete from a trust store.</p>
    pub fn certificates_to_delete(mut self, input: impl Into<std::string::String>) -> Self {
        let mut v = self.certificates_to_delete.unwrap_or_default();
        v.push(input.into());
        self.certificates_to_delete = Some(v);
        self
    }
    /// <p>A list of CA certificates to delete from a trust store.</p>
    pub fn set_certificates_to_delete(
        mut self,
        input: std::option::Option<std::vec::Vec<std::string::String>>,
    ) -> Self {
        self.certificates_to_delete = input;
        self
    }
    /// <p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. Idempotency ensures that an API request completes only once. With an idempotent request, if the original request completes successfully, subsequent retries with the same client token return the result from the original successful request. </p>
    /// <p>If you do not specify a client token, one is automatically generated by the AWS SDK.</p>
    pub fn client_token(mut self, input: impl Into<std::string::String>) -> Self {
        self.client_token = Some(input.into());
        self
    }
    /// <p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. Idempotency ensures that an API request completes only once. With an idempotent request, if the original request completes successfully, subsequent retries with the same client token return the result from the original successful request. </p>
    /// <p>If you do not specify a client token, one is automatically generated by the AWS SDK.</p>
    pub fn set_client_token(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.client_token = input;
        self
    }
    /// Consumes the builder and constructs a [`UpdateTrustStoreInput`](crate::operation::update_trust_store::UpdateTrustStoreInput).
    pub fn build(
        self,
    ) -> Result<
        crate::operation::update_trust_store::UpdateTrustStoreInput,
        aws_smithy_http::operation::error::BuildError,
    > {
        Ok(
            crate::operation::update_trust_store::UpdateTrustStoreInput {
                trust_store_arn: self.trust_store_arn,
                certificates_to_add: self.certificates_to_add,
                certificates_to_delete: self.certificates_to_delete,
                client_token: self.client_token,
            },
        )
    }
}
