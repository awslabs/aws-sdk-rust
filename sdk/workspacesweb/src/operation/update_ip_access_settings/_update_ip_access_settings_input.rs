// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq)]
pub struct UpdateIpAccessSettingsInput {
    /// <p>The ARN of the IP access settings.</p>
    pub ip_access_settings_arn: ::std::option::Option<::std::string::String>,
    /// <p>The display name of the IP access settings.</p>
    pub display_name: ::std::option::Option<::std::string::String>,
    /// <p>The description of the IP access settings.</p>
    pub description: ::std::option::Option<::std::string::String>,
    /// <p>The updated IP rules of the IP access settings.</p>
    pub ip_rules: ::std::option::Option<::std::vec::Vec<crate::types::IpRule>>,
    /// <p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. Idempotency ensures that an API request completes only once. With an idempotent request, if the original request completes successfully, subsequent retries with the same client token return the result from the original successful request. </p>
    /// <p>If you do not specify a client token, one is automatically generated by the AWS SDK.</p>
    pub client_token: ::std::option::Option<::std::string::String>,
}
impl UpdateIpAccessSettingsInput {
    /// <p>The ARN of the IP access settings.</p>
    pub fn ip_access_settings_arn(&self) -> ::std::option::Option<&str> {
        self.ip_access_settings_arn.as_deref()
    }
    /// <p>The display name of the IP access settings.</p>
    pub fn display_name(&self) -> ::std::option::Option<&str> {
        self.display_name.as_deref()
    }
    /// <p>The description of the IP access settings.</p>
    pub fn description(&self) -> ::std::option::Option<&str> {
        self.description.as_deref()
    }
    /// <p>The updated IP rules of the IP access settings.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.ip_rules.is_none()`.
    pub fn ip_rules(&self) -> &[crate::types::IpRule] {
        self.ip_rules.as_deref().unwrap_or_default()
    }
    /// <p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. Idempotency ensures that an API request completes only once. With an idempotent request, if the original request completes successfully, subsequent retries with the same client token return the result from the original successful request. </p>
    /// <p>If you do not specify a client token, one is automatically generated by the AWS SDK.</p>
    pub fn client_token(&self) -> ::std::option::Option<&str> {
        self.client_token.as_deref()
    }
}
impl ::std::fmt::Debug for UpdateIpAccessSettingsInput {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("UpdateIpAccessSettingsInput");
        formatter.field("ip_access_settings_arn", &self.ip_access_settings_arn);
        formatter.field("display_name", &"*** Sensitive Data Redacted ***");
        formatter.field("description", &"*** Sensitive Data Redacted ***");
        formatter.field("ip_rules", &"*** Sensitive Data Redacted ***");
        formatter.field("client_token", &self.client_token);
        formatter.finish()
    }
}
impl UpdateIpAccessSettingsInput {
    /// Creates a new builder-style object to manufacture [`UpdateIpAccessSettingsInput`](crate::operation::update_ip_access_settings::UpdateIpAccessSettingsInput).
    pub fn builder() -> crate::operation::update_ip_access_settings::builders::UpdateIpAccessSettingsInputBuilder {
        crate::operation::update_ip_access_settings::builders::UpdateIpAccessSettingsInputBuilder::default()
    }
}

/// A builder for [`UpdateIpAccessSettingsInput`](crate::operation::update_ip_access_settings::UpdateIpAccessSettingsInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default)]
pub struct UpdateIpAccessSettingsInputBuilder {
    pub(crate) ip_access_settings_arn: ::std::option::Option<::std::string::String>,
    pub(crate) display_name: ::std::option::Option<::std::string::String>,
    pub(crate) description: ::std::option::Option<::std::string::String>,
    pub(crate) ip_rules: ::std::option::Option<::std::vec::Vec<crate::types::IpRule>>,
    pub(crate) client_token: ::std::option::Option<::std::string::String>,
}
impl UpdateIpAccessSettingsInputBuilder {
    /// <p>The ARN of the IP access settings.</p>
    /// This field is required.
    pub fn ip_access_settings_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.ip_access_settings_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ARN of the IP access settings.</p>
    pub fn set_ip_access_settings_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.ip_access_settings_arn = input;
        self
    }
    /// <p>The ARN of the IP access settings.</p>
    pub fn get_ip_access_settings_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.ip_access_settings_arn
    }
    /// <p>The display name of the IP access settings.</p>
    pub fn display_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.display_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The display name of the IP access settings.</p>
    pub fn set_display_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.display_name = input;
        self
    }
    /// <p>The display name of the IP access settings.</p>
    pub fn get_display_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.display_name
    }
    /// <p>The description of the IP access settings.</p>
    pub fn description(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.description = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The description of the IP access settings.</p>
    pub fn set_description(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.description = input;
        self
    }
    /// <p>The description of the IP access settings.</p>
    pub fn get_description(&self) -> &::std::option::Option<::std::string::String> {
        &self.description
    }
    /// Appends an item to `ip_rules`.
    ///
    /// To override the contents of this collection use [`set_ip_rules`](Self::set_ip_rules).
    ///
    /// <p>The updated IP rules of the IP access settings.</p>
    pub fn ip_rules(mut self, input: crate::types::IpRule) -> Self {
        let mut v = self.ip_rules.unwrap_or_default();
        v.push(input);
        self.ip_rules = ::std::option::Option::Some(v);
        self
    }
    /// <p>The updated IP rules of the IP access settings.</p>
    pub fn set_ip_rules(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::IpRule>>) -> Self {
        self.ip_rules = input;
        self
    }
    /// <p>The updated IP rules of the IP access settings.</p>
    pub fn get_ip_rules(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::IpRule>> {
        &self.ip_rules
    }
    /// <p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. Idempotency ensures that an API request completes only once. With an idempotent request, if the original request completes successfully, subsequent retries with the same client token return the result from the original successful request. </p>
    /// <p>If you do not specify a client token, one is automatically generated by the AWS SDK.</p>
    pub fn client_token(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.client_token = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. Idempotency ensures that an API request completes only once. With an idempotent request, if the original request completes successfully, subsequent retries with the same client token return the result from the original successful request. </p>
    /// <p>If you do not specify a client token, one is automatically generated by the AWS SDK.</p>
    pub fn set_client_token(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.client_token = input;
        self
    }
    /// <p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. Idempotency ensures that an API request completes only once. With an idempotent request, if the original request completes successfully, subsequent retries with the same client token return the result from the original successful request. </p>
    /// <p>If you do not specify a client token, one is automatically generated by the AWS SDK.</p>
    pub fn get_client_token(&self) -> &::std::option::Option<::std::string::String> {
        &self.client_token
    }
    /// Consumes the builder and constructs a [`UpdateIpAccessSettingsInput`](crate::operation::update_ip_access_settings::UpdateIpAccessSettingsInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::update_ip_access_settings::UpdateIpAccessSettingsInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::update_ip_access_settings::UpdateIpAccessSettingsInput {
            ip_access_settings_arn: self.ip_access_settings_arn,
            display_name: self.display_name,
            description: self.description,
            ip_rules: self.ip_rules,
            client_token: self.client_token,
        })
    }
}
impl ::std::fmt::Debug for UpdateIpAccessSettingsInputBuilder {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("UpdateIpAccessSettingsInputBuilder");
        formatter.field("ip_access_settings_arn", &self.ip_access_settings_arn);
        formatter.field("display_name", &"*** Sensitive Data Redacted ***");
        formatter.field("description", &"*** Sensitive Data Redacted ***");
        formatter.field("ip_rules", &"*** Sensitive Data Redacted ***");
        formatter.field("client_token", &self.client_token);
        formatter.finish()
    }
}
