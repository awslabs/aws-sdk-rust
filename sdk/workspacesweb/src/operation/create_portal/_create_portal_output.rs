// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct CreatePortalOutput {
    /// <p>The ARN of the web portal.</p>
    #[doc(hidden)]
    pub portal_arn: std::option::Option<std::string::String>,
    /// <p>The endpoint URL of the web portal that users access in order to start streaming sessions.</p>
    #[doc(hidden)]
    pub portal_endpoint: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl CreatePortalOutput {
    /// <p>The ARN of the web portal.</p>
    pub fn portal_arn(&self) -> std::option::Option<&str> {
        self.portal_arn.as_deref()
    }
    /// <p>The endpoint URL of the web portal that users access in order to start streaming sessions.</p>
    pub fn portal_endpoint(&self) -> std::option::Option<&str> {
        self.portal_endpoint.as_deref()
    }
}
impl aws_http::request_id::RequestId for CreatePortalOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl CreatePortalOutput {
    /// Creates a new builder-style object to manufacture [`CreatePortalOutput`](crate::operation::create_portal::CreatePortalOutput).
    pub fn builder() -> crate::operation::create_portal::builders::CreatePortalOutputBuilder {
        crate::operation::create_portal::builders::CreatePortalOutputBuilder::default()
    }
}

/// A builder for [`CreatePortalOutput`](crate::operation::create_portal::CreatePortalOutput).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct CreatePortalOutputBuilder {
    pub(crate) portal_arn: std::option::Option<std::string::String>,
    pub(crate) portal_endpoint: std::option::Option<std::string::String>,
    _request_id: Option<String>,
}
impl CreatePortalOutputBuilder {
    /// <p>The ARN of the web portal.</p>
    pub fn portal_arn(mut self, input: impl Into<std::string::String>) -> Self {
        self.portal_arn = Some(input.into());
        self
    }
    /// <p>The ARN of the web portal.</p>
    pub fn set_portal_arn(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.portal_arn = input;
        self
    }
    /// <p>The endpoint URL of the web portal that users access in order to start streaming sessions.</p>
    pub fn portal_endpoint(mut self, input: impl Into<std::string::String>) -> Self {
        self.portal_endpoint = Some(input.into());
        self
    }
    /// <p>The endpoint URL of the web portal that users access in order to start streaming sessions.</p>
    pub fn set_portal_endpoint(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.portal_endpoint = input;
        self
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`CreatePortalOutput`](crate::operation::create_portal::CreatePortalOutput).
    pub fn build(self) -> crate::operation::create_portal::CreatePortalOutput {
        crate::operation::create_portal::CreatePortalOutput {
            portal_arn: self.portal_arn,
            portal_endpoint: self.portal_endpoint,
            _request_id: self._request_id,
        }
    }
}
