// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>An object that contains the full name, description, and unit of a metric. </p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct ResponseResourceMetric {
    /// <p>The full name of the metric.</p>
    #[doc(hidden)]
    pub metric: std::option::Option<std::string::String>,
    /// <p>The description of the metric.</p>
    #[doc(hidden)]
    pub description: std::option::Option<std::string::String>,
    /// <p>The unit of the metric.</p>
    #[doc(hidden)]
    pub unit: std::option::Option<std::string::String>,
}
impl ResponseResourceMetric {
    /// <p>The full name of the metric.</p>
    pub fn metric(&self) -> std::option::Option<&str> {
        self.metric.as_deref()
    }
    /// <p>The description of the metric.</p>
    pub fn description(&self) -> std::option::Option<&str> {
        self.description.as_deref()
    }
    /// <p>The unit of the metric.</p>
    pub fn unit(&self) -> std::option::Option<&str> {
        self.unit.as_deref()
    }
}
impl ResponseResourceMetric {
    /// Creates a new builder-style object to manufacture [`ResponseResourceMetric`](crate::types::ResponseResourceMetric).
    pub fn builder() -> crate::types::builders::ResponseResourceMetricBuilder {
        crate::types::builders::ResponseResourceMetricBuilder::default()
    }
}

/// A builder for [`ResponseResourceMetric`](crate::types::ResponseResourceMetric).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct ResponseResourceMetricBuilder {
    pub(crate) metric: std::option::Option<std::string::String>,
    pub(crate) description: std::option::Option<std::string::String>,
    pub(crate) unit: std::option::Option<std::string::String>,
}
impl ResponseResourceMetricBuilder {
    /// <p>The full name of the metric.</p>
    pub fn metric(mut self, input: impl Into<std::string::String>) -> Self {
        self.metric = Some(input.into());
        self
    }
    /// <p>The full name of the metric.</p>
    pub fn set_metric(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.metric = input;
        self
    }
    /// <p>The description of the metric.</p>
    pub fn description(mut self, input: impl Into<std::string::String>) -> Self {
        self.description = Some(input.into());
        self
    }
    /// <p>The description of the metric.</p>
    pub fn set_description(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.description = input;
        self
    }
    /// <p>The unit of the metric.</p>
    pub fn unit(mut self, input: impl Into<std::string::String>) -> Self {
        self.unit = Some(input.into());
        self
    }
    /// <p>The unit of the metric.</p>
    pub fn set_unit(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.unit = input;
        self
    }
    /// Consumes the builder and constructs a [`ResponseResourceMetric`](crate::types::ResponseResourceMetric).
    pub fn build(self) -> crate::types::ResponseResourceMetric {
        crate::types::ResponseResourceMetric {
            metric: self.metric,
            description: self.description,
            unit: self.unit,
        }
    }
}
