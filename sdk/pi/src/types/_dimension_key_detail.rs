// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>An object that describes the details for a specified dimension.</p>
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::fmt::Debug)]
pub struct DimensionKeyDetail {
    /// <p>The value of the dimension detail data. Depending on the return status, this value is either the full or truncated SQL query for the following dimensions:</p>
    /// <ul>
    /// <li> <p> <code>db.query.statement</code> (Amazon DocumentDB)</p> </li>
    /// <li> <p> <code>db.sql.statement</code> (Amazon RDS and Aurora)</p> </li>
    /// </ul>
    #[doc(hidden)]
    pub value: std::option::Option<std::string::String>,
    /// <p>The full name of the dimension. The full name includes the group name and key name. The following values are valid:</p>
    /// <ul>
    /// <li> <p> <code>db.query.statement</code> (Amazon DocumentDB)</p> </li>
    /// <li> <p> <code>db.sql.statement</code> (Amazon RDS and Aurora)</p> </li>
    /// </ul>
    #[doc(hidden)]
    pub dimension: std::option::Option<std::string::String>,
    /// <p>The status of the dimension detail data. Possible values include the following:</p>
    /// <ul>
    /// <li> <p> <code>AVAILABLE</code> - The dimension detail data is ready to be retrieved.</p> </li>
    /// <li> <p> <code>PROCESSING</code> - The dimension detail data isn't ready to be retrieved because more processing time is required. If the requested detail data has the status <code>PROCESSING</code>, Performance Insights returns the truncated query.</p> </li>
    /// <li> <p> <code>UNAVAILABLE</code> - The dimension detail data could not be collected successfully.</p> </li>
    /// </ul>
    #[doc(hidden)]
    pub status: std::option::Option<crate::types::DetailStatus>,
}
impl DimensionKeyDetail {
    /// <p>The value of the dimension detail data. Depending on the return status, this value is either the full or truncated SQL query for the following dimensions:</p>
    /// <ul>
    /// <li> <p> <code>db.query.statement</code> (Amazon DocumentDB)</p> </li>
    /// <li> <p> <code>db.sql.statement</code> (Amazon RDS and Aurora)</p> </li>
    /// </ul>
    pub fn value(&self) -> std::option::Option<&str> {
        self.value.as_deref()
    }
    /// <p>The full name of the dimension. The full name includes the group name and key name. The following values are valid:</p>
    /// <ul>
    /// <li> <p> <code>db.query.statement</code> (Amazon DocumentDB)</p> </li>
    /// <li> <p> <code>db.sql.statement</code> (Amazon RDS and Aurora)</p> </li>
    /// </ul>
    pub fn dimension(&self) -> std::option::Option<&str> {
        self.dimension.as_deref()
    }
    /// <p>The status of the dimension detail data. Possible values include the following:</p>
    /// <ul>
    /// <li> <p> <code>AVAILABLE</code> - The dimension detail data is ready to be retrieved.</p> </li>
    /// <li> <p> <code>PROCESSING</code> - The dimension detail data isn't ready to be retrieved because more processing time is required. If the requested detail data has the status <code>PROCESSING</code>, Performance Insights returns the truncated query.</p> </li>
    /// <li> <p> <code>UNAVAILABLE</code> - The dimension detail data could not be collected successfully.</p> </li>
    /// </ul>
    pub fn status(&self) -> std::option::Option<&crate::types::DetailStatus> {
        self.status.as_ref()
    }
}
impl DimensionKeyDetail {
    /// Creates a new builder-style object to manufacture [`DimensionKeyDetail`](crate::types::DimensionKeyDetail).
    pub fn builder() -> crate::types::builders::DimensionKeyDetailBuilder {
        crate::types::builders::DimensionKeyDetailBuilder::default()
    }
}

/// A builder for [`DimensionKeyDetail`](crate::types::DimensionKeyDetail).
#[non_exhaustive]
#[derive(std::clone::Clone, std::cmp::PartialEq, std::default::Default, std::fmt::Debug)]
pub struct DimensionKeyDetailBuilder {
    pub(crate) value: std::option::Option<std::string::String>,
    pub(crate) dimension: std::option::Option<std::string::String>,
    pub(crate) status: std::option::Option<crate::types::DetailStatus>,
}
impl DimensionKeyDetailBuilder {
    /// <p>The value of the dimension detail data. Depending on the return status, this value is either the full or truncated SQL query for the following dimensions:</p>
    /// <ul>
    /// <li> <p> <code>db.query.statement</code> (Amazon DocumentDB)</p> </li>
    /// <li> <p> <code>db.sql.statement</code> (Amazon RDS and Aurora)</p> </li>
    /// </ul>
    pub fn value(mut self, input: impl Into<std::string::String>) -> Self {
        self.value = Some(input.into());
        self
    }
    /// <p>The value of the dimension detail data. Depending on the return status, this value is either the full or truncated SQL query for the following dimensions:</p>
    /// <ul>
    /// <li> <p> <code>db.query.statement</code> (Amazon DocumentDB)</p> </li>
    /// <li> <p> <code>db.sql.statement</code> (Amazon RDS and Aurora)</p> </li>
    /// </ul>
    pub fn set_value(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.value = input;
        self
    }
    /// <p>The full name of the dimension. The full name includes the group name and key name. The following values are valid:</p>
    /// <ul>
    /// <li> <p> <code>db.query.statement</code> (Amazon DocumentDB)</p> </li>
    /// <li> <p> <code>db.sql.statement</code> (Amazon RDS and Aurora)</p> </li>
    /// </ul>
    pub fn dimension(mut self, input: impl Into<std::string::String>) -> Self {
        self.dimension = Some(input.into());
        self
    }
    /// <p>The full name of the dimension. The full name includes the group name and key name. The following values are valid:</p>
    /// <ul>
    /// <li> <p> <code>db.query.statement</code> (Amazon DocumentDB)</p> </li>
    /// <li> <p> <code>db.sql.statement</code> (Amazon RDS and Aurora)</p> </li>
    /// </ul>
    pub fn set_dimension(mut self, input: std::option::Option<std::string::String>) -> Self {
        self.dimension = input;
        self
    }
    /// <p>The status of the dimension detail data. Possible values include the following:</p>
    /// <ul>
    /// <li> <p> <code>AVAILABLE</code> - The dimension detail data is ready to be retrieved.</p> </li>
    /// <li> <p> <code>PROCESSING</code> - The dimension detail data isn't ready to be retrieved because more processing time is required. If the requested detail data has the status <code>PROCESSING</code>, Performance Insights returns the truncated query.</p> </li>
    /// <li> <p> <code>UNAVAILABLE</code> - The dimension detail data could not be collected successfully.</p> </li>
    /// </ul>
    pub fn status(mut self, input: crate::types::DetailStatus) -> Self {
        self.status = Some(input);
        self
    }
    /// <p>The status of the dimension detail data. Possible values include the following:</p>
    /// <ul>
    /// <li> <p> <code>AVAILABLE</code> - The dimension detail data is ready to be retrieved.</p> </li>
    /// <li> <p> <code>PROCESSING</code> - The dimension detail data isn't ready to be retrieved because more processing time is required. If the requested detail data has the status <code>PROCESSING</code>, Performance Insights returns the truncated query.</p> </li>
    /// <li> <p> <code>UNAVAILABLE</code> - The dimension detail data could not be collected successfully.</p> </li>
    /// </ul>
    pub fn set_status(mut self, input: std::option::Option<crate::types::DetailStatus>) -> Self {
        self.status = input;
        self
    }
    /// Consumes the builder and constructs a [`DimensionKeyDetail`](crate::types::DimensionKeyDetail).
    pub fn build(self) -> crate::types::DimensionKeyDetail {
        crate::types::DimensionKeyDetail {
            value: self.value,
            dimension: self.dimension,
            status: self.status,
        }
    }
}
