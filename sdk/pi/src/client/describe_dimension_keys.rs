// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`DescribeDimensionKeys`](crate::operation::describe_dimension_keys::builders::DescribeDimensionKeysFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::describe_dimension_keys::builders::DescribeDimensionKeysFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`service_type(ServiceType)`](crate::operation::describe_dimension_keys::builders::DescribeDimensionKeysFluentBuilder::service_type) / [`set_service_type(Option<ServiceType>)`](crate::operation::describe_dimension_keys::builders::DescribeDimensionKeysFluentBuilder::set_service_type): <p>The Amazon Web Services service for which Performance Insights will return metrics. Valid values are as follows:</p>  <ul>   <li> <p> <code>RDS</code> </p> </li>   <li> <p> <code>DOCDB</code> </p> </li>  </ul>
    ///   - [`identifier(impl Into<String>)`](crate::operation::describe_dimension_keys::builders::DescribeDimensionKeysFluentBuilder::identifier) / [`set_identifier(Option<String>)`](crate::operation::describe_dimension_keys::builders::DescribeDimensionKeysFluentBuilder::set_identifier): <p>An immutable, Amazon Web Services Region-unique identifier for a data source. Performance Insights gathers metrics from this data source.</p>  <p>To use an Amazon RDS instance as a data source, you specify its <code>DbiResourceId</code> value. For example, specify <code>db-FAIHNTYBKTGAUSUZQYPDS2GW4A</code>. </p>
    ///   - [`start_time(DateTime)`](crate::operation::describe_dimension_keys::builders::DescribeDimensionKeysFluentBuilder::start_time) / [`set_start_time(Option<DateTime>)`](crate::operation::describe_dimension_keys::builders::DescribeDimensionKeysFluentBuilder::set_start_time): <p>The date and time specifying the beginning of the requested time series data. You must specify a <code>StartTime</code> within the past 7 days. The value specified is <i>inclusive</i>, which means that data points equal to or greater than <code>StartTime</code> are returned. </p>  <p>The value for <code>StartTime</code> must be earlier than the value for <code>EndTime</code>. </p>
    ///   - [`end_time(DateTime)`](crate::operation::describe_dimension_keys::builders::DescribeDimensionKeysFluentBuilder::end_time) / [`set_end_time(Option<DateTime>)`](crate::operation::describe_dimension_keys::builders::DescribeDimensionKeysFluentBuilder::set_end_time): <p>The date and time specifying the end of the requested time series data. The value specified is <i>exclusive</i>, which means that data points less than (but not equal to) <code>EndTime</code> are returned.</p>  <p>The value for <code>EndTime</code> must be later than the value for <code>StartTime</code>.</p>
    ///   - [`metric(impl Into<String>)`](crate::operation::describe_dimension_keys::builders::DescribeDimensionKeysFluentBuilder::metric) / [`set_metric(Option<String>)`](crate::operation::describe_dimension_keys::builders::DescribeDimensionKeysFluentBuilder::set_metric): <p>The name of a Performance Insights metric to be measured.</p>  <p>Valid values for <code>Metric</code> are:</p>  <ul>   <li> <p> <code>db.load.avg</code> - A scaled representation of the number of active sessions for the database engine. </p> </li>   <li> <p> <code>db.sampledload.avg</code> - The raw number of active sessions for the database engine. </p> </li>  </ul>  <p>If the number of active sessions is less than an internal Performance Insights threshold, <code>db.load.avg</code> and <code>db.sampledload.avg</code> are the same value. If the number of active sessions is greater than the internal threshold, Performance Insights samples the active sessions, with <code>db.load.avg</code> showing the scaled values, <code>db.sampledload.avg</code> showing the raw values, and <code>db.sampledload.avg</code> less than <code>db.load.avg</code>. For most use cases, you can query <code>db.load.avg</code> only. </p>
    ///   - [`period_in_seconds(i32)`](crate::operation::describe_dimension_keys::builders::DescribeDimensionKeysFluentBuilder::period_in_seconds) / [`set_period_in_seconds(Option<i32>)`](crate::operation::describe_dimension_keys::builders::DescribeDimensionKeysFluentBuilder::set_period_in_seconds): <p>The granularity, in seconds, of the data points returned from Performance Insights. A period can be as short as one second, or as long as one day (86400 seconds). Valid values are: </p>  <ul>   <li> <p> <code>1</code> (one second)</p> </li>   <li> <p> <code>60</code> (one minute)</p> </li>   <li> <p> <code>300</code> (five minutes)</p> </li>   <li> <p> <code>3600</code> (one hour)</p> </li>   <li> <p> <code>86400</code> (twenty-four hours)</p> </li>  </ul>  <p>If you don't specify <code>PeriodInSeconds</code>, then Performance Insights chooses a value for you, with a goal of returning roughly 100-200 data points in the response. </p>
    ///   - [`group_by(DimensionGroup)`](crate::operation::describe_dimension_keys::builders::DescribeDimensionKeysFluentBuilder::group_by) / [`set_group_by(Option<DimensionGroup>)`](crate::operation::describe_dimension_keys::builders::DescribeDimensionKeysFluentBuilder::set_group_by): <p>A specification for how to aggregate the data points from a query result. You must specify a valid dimension group. Performance Insights returns all dimensions within this group, unless you provide the names of specific dimensions within this group. You can also request that Performance Insights return a limited number of values for a dimension. </p>
    ///   - [`additional_metrics(Vec<String>)`](crate::operation::describe_dimension_keys::builders::DescribeDimensionKeysFluentBuilder::additional_metrics) / [`set_additional_metrics(Option<Vec<String>>)`](crate::operation::describe_dimension_keys::builders::DescribeDimensionKeysFluentBuilder::set_additional_metrics): <p>Additional metrics for the top <code>N</code> dimension keys. If the specified dimension group in the <code>GroupBy</code> parameter is <code>db.sql_tokenized</code>, you can specify per-SQL metrics to get the values for the top <code>N</code> SQL digests. The response syntax is as follows: <code>"AdditionalMetrics" : { "<i>string</i>" : "<i>string</i>" }</code>. </p>
    ///   - [`partition_by(DimensionGroup)`](crate::operation::describe_dimension_keys::builders::DescribeDimensionKeysFluentBuilder::partition_by) / [`set_partition_by(Option<DimensionGroup>)`](crate::operation::describe_dimension_keys::builders::DescribeDimensionKeysFluentBuilder::set_partition_by): <p>For each dimension specified in <code>GroupBy</code>, specify a secondary dimension to further subdivide the partition keys in the response. </p>
    ///   - [`filter(HashMap<String, String>)`](crate::operation::describe_dimension_keys::builders::DescribeDimensionKeysFluentBuilder::filter) / [`set_filter(Option<HashMap<String, String>>)`](crate::operation::describe_dimension_keys::builders::DescribeDimensionKeysFluentBuilder::set_filter): <p>One or more filters to apply in the request. Restrictions:</p>  <ul>   <li> <p>Any number of filters by the same dimension, as specified in the <code>GroupBy</code> or <code>Partition</code> parameters.</p> </li>   <li> <p>A single filter for any other dimension in this dimension group.</p> </li>  </ul>
    ///   - [`max_results(i32)`](crate::operation::describe_dimension_keys::builders::DescribeDimensionKeysFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::describe_dimension_keys::builders::DescribeDimensionKeysFluentBuilder::set_max_results): <p>The maximum number of items to return in the response. If more items exist than the specified <code>MaxRecords</code> value, a pagination token is included in the response so that the remaining results can be retrieved. </p>
    ///   - [`next_token(impl Into<String>)`](crate::operation::describe_dimension_keys::builders::DescribeDimensionKeysFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::describe_dimension_keys::builders::DescribeDimensionKeysFluentBuilder::set_next_token): <p>An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the token, up to the value specified by <code>MaxRecords</code>.</p>
    /// - On success, responds with [`DescribeDimensionKeysOutput`](crate::operation::describe_dimension_keys::DescribeDimensionKeysOutput) with field(s):
    ///   - [`aligned_start_time(Option<DateTime>)`](crate::operation::describe_dimension_keys::DescribeDimensionKeysOutput::aligned_start_time): <p>The start time for the returned dimension keys, after alignment to a granular boundary (as specified by <code>PeriodInSeconds</code>). <code>AlignedStartTime</code> will be less than or equal to the value of the user-specified <code>StartTime</code>. </p>
    ///   - [`aligned_end_time(Option<DateTime>)`](crate::operation::describe_dimension_keys::DescribeDimensionKeysOutput::aligned_end_time): <p>The end time for the returned dimension keys, after alignment to a granular boundary (as specified by <code>PeriodInSeconds</code>). <code>AlignedEndTime</code> will be greater than or equal to the value of the user-specified <code>Endtime</code>. </p>
    ///   - [`partition_keys(Option<Vec<ResponsePartitionKey>>)`](crate::operation::describe_dimension_keys::DescribeDimensionKeysOutput::partition_keys): <p>If <code>PartitionBy</code> was present in the request, <code>PartitionKeys</code> contains the breakdown of dimension keys by the specified partitions. </p>
    ///   - [`keys(Option<Vec<DimensionKeyDescription>>)`](crate::operation::describe_dimension_keys::DescribeDimensionKeysOutput::keys): <p>The dimension keys that were requested.</p>
    ///   - [`next_token(Option<String>)`](crate::operation::describe_dimension_keys::DescribeDimensionKeysOutput::next_token): <p>A pagination token that indicates the response didn’t return all available records because <code>MaxRecords</code> was specified in the previous request. To get the remaining records, specify <code>NextToken</code> in a separate request with this value. </p>
    /// - On failure, responds with [`SdkError<DescribeDimensionKeysError>`](crate::operation::describe_dimension_keys::DescribeDimensionKeysError)
    pub fn describe_dimension_keys(
        &self,
    ) -> crate::operation::describe_dimension_keys::builders::DescribeDimensionKeysFluentBuilder
    {
        crate::operation::describe_dimension_keys::builders::DescribeDimensionKeysFluentBuilder::new(
            self.handle.clone(),
        )
    }
}
