// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListAvailableResourceMetrics`](crate::operation::list_available_resource_metrics::builders::ListAvailableResourceMetricsFluentBuilder) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::operation::list_available_resource_metrics::builders::ListAvailableResourceMetricsFluentBuilder::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`service_type(ServiceType)`](crate::operation::list_available_resource_metrics::builders::ListAvailableResourceMetricsFluentBuilder::service_type) / [`set_service_type(Option<ServiceType>)`](crate::operation::list_available_resource_metrics::builders::ListAvailableResourceMetricsFluentBuilder::set_service_type): <p>The Amazon Web Services service for which Performance Insights returns metrics.</p>
    ///   - [`identifier(impl Into<String>)`](crate::operation::list_available_resource_metrics::builders::ListAvailableResourceMetricsFluentBuilder::identifier) / [`set_identifier(Option<String>)`](crate::operation::list_available_resource_metrics::builders::ListAvailableResourceMetricsFluentBuilder::set_identifier): <p>An immutable identifier for a data source that is unique within an Amazon Web Services Region. Performance Insights gathers metrics from this data source. To use an Amazon RDS DB instance as a data source, specify its <code>DbiResourceId</code> value. For example, specify <code>db-ABCDEFGHIJKLMNOPQRSTU1VWZ</code>. </p>
    ///   - [`metric_types(Vec<String>)`](crate::operation::list_available_resource_metrics::builders::ListAvailableResourceMetricsFluentBuilder::metric_types) / [`set_metric_types(Option<Vec<String>>)`](crate::operation::list_available_resource_metrics::builders::ListAvailableResourceMetricsFluentBuilder::set_metric_types): <p>The types of metrics to return in the response. Valid values in the array include the following:</p>  <ul>   <li> <p> <code>os</code> (OS counter metrics) - All engines</p> </li>   <li> <p> <code>db</code> (DB load metrics) - All engines except for Amazon DocumentDB</p> </li>   <li> <p> <code>db.sql.stats</code> (per-SQL metrics) - All engines except for Amazon DocumentDB</p> </li>   <li> <p> <code>db.sql_tokenized.stats</code> (per-SQL digest metrics) - All engines except for Amazon DocumentDB</p> </li>  </ul>
    ///   - [`next_token(impl Into<String>)`](crate::operation::list_available_resource_metrics::builders::ListAvailableResourceMetricsFluentBuilder::next_token) / [`set_next_token(Option<String>)`](crate::operation::list_available_resource_metrics::builders::ListAvailableResourceMetricsFluentBuilder::set_next_token): <p>An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the token, up to the value specified by <code>MaxRecords</code>. </p>
    ///   - [`max_results(i32)`](crate::operation::list_available_resource_metrics::builders::ListAvailableResourceMetricsFluentBuilder::max_results) / [`set_max_results(Option<i32>)`](crate::operation::list_available_resource_metrics::builders::ListAvailableResourceMetricsFluentBuilder::set_max_results): <p>The maximum number of items to return. If the <code>MaxRecords</code> value is less than the number of existing items, the response includes a pagination token. </p>
    /// - On success, responds with [`ListAvailableResourceMetricsOutput`](crate::operation::list_available_resource_metrics::ListAvailableResourceMetricsOutput) with field(s):
    ///   - [`metrics(Option<Vec<ResponseResourceMetric>>)`](crate::operation::list_available_resource_metrics::ListAvailableResourceMetricsOutput::metrics): <p>An array of metrics available to query. Each array element contains the full name, description, and unit of the metric. </p>
    ///   - [`next_token(Option<String>)`](crate::operation::list_available_resource_metrics::ListAvailableResourceMetricsOutput::next_token): <p>A pagination token that indicates the response didnâ€™t return all available records because <code>MaxRecords</code> was specified in the previous request. To get the remaining records, specify <code>NextToken</code> in a separate request with this value. </p>
    /// - On failure, responds with [`SdkError<ListAvailableResourceMetricsError>`](crate::operation::list_available_resource_metrics::ListAvailableResourceMetricsError)
    pub fn list_available_resource_metrics(&self) -> crate::operation::list_available_resource_metrics::builders::ListAvailableResourceMetricsFluentBuilder{
        crate::operation::list_available_resource_metrics::builders::ListAvailableResourceMetricsFluentBuilder::new(self.handle.clone())
    }
}
