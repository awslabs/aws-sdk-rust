// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[doc(inline)]
pub use aws_smithy_client::Builder;
#[derive(Debug)]
pub(crate) struct Handle {
    pub(crate) client: aws_smithy_client::Client<
        aws_smithy_client::erase::DynConnector,
        aws_smithy_client::erase::DynMiddleware<aws_smithy_client::erase::DynConnector>,
    >,
    pub(crate) conf: crate::Config,
}

/// Client for AWS Performance Insights
///
/// Client for invoking operations on AWS Performance Insights. Each operation on AWS Performance Insights is a method on this
/// this struct. `.send()` MUST be invoked on the generated operations to dispatch the request to the service.
///
/// # Examples
/// **Constructing a client and invoking an operation**
/// ```rust,no_run
/// # async fn docs() {
///     // create a shared configuration. This can be used & shared between multiple service clients.
///     let shared_config = aws_config::load_from_env().await;
///     let client = aws_sdk_pi::Client::new(&shared_config);
///     // invoke an operation
///     /* let rsp = client
///         .<operation_name>().
///         .<param>("some value")
///         .send().await; */
/// # }
/// ```
/// **Constructing a client with custom configuration**
/// ```rust,no_run
/// use aws_config::retry::RetryConfig;
/// # async fn docs() {
/// let shared_config = aws_config::load_from_env().await;
/// let config = aws_sdk_pi::config::Builder::from(&shared_config)
///   .retry_config(RetryConfig::disabled())
///   .build();
/// let client = aws_sdk_pi::Client::from_conf(config);
/// # }
#[derive(std::fmt::Debug)]
pub struct Client {
    handle: std::sync::Arc<Handle>,
}

impl std::clone::Clone for Client {
    fn clone(&self) -> Self {
        Self {
            handle: self.handle.clone(),
        }
    }
}

impl
    From<
        aws_smithy_client::Client<
            aws_smithy_client::erase::DynConnector,
            aws_smithy_client::erase::DynMiddleware<aws_smithy_client::erase::DynConnector>,
        >,
    > for Client
{
    fn from(
        client: aws_smithy_client::Client<
            aws_smithy_client::erase::DynConnector,
            aws_smithy_client::erase::DynMiddleware<aws_smithy_client::erase::DynConnector>,
        >,
    ) -> Self {
        Self::with_config(client, crate::Config::builder().build())
    }
}

impl Client {
    /// Creates a client with the given service configuration.
    pub fn with_config(
        client: aws_smithy_client::Client<
            aws_smithy_client::erase::DynConnector,
            aws_smithy_client::erase::DynMiddleware<aws_smithy_client::erase::DynConnector>,
        >,
        conf: crate::Config,
    ) -> Self {
        Self {
            handle: std::sync::Arc::new(Handle { client, conf }),
        }
    }

    /// Returns the client's configuration.
    pub fn conf(&self) -> &crate::Config {
        &self.handle.conf
    }
}
impl Client {
    /// Constructs a fluent builder for the [`DescribeDimensionKeys`](crate::client::fluent_builders::DescribeDimensionKeys) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::DescribeDimensionKeys::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`service_type(ServiceType)`](crate::client::fluent_builders::DescribeDimensionKeys::service_type) / [`set_service_type(Option<ServiceType>)`](crate::client::fluent_builders::DescribeDimensionKeys::set_service_type): <p>The Amazon Web Services service for which Performance Insights will return metrics. Valid values are as follows:</p>  <ul>   <li> <p> <code>RDS</code> </p> </li>   <li> <p> <code>DOCDB</code> </p> </li>  </ul>
    ///   - [`identifier(impl Into<String>)`](crate::client::fluent_builders::DescribeDimensionKeys::identifier) / [`set_identifier(Option<String>)`](crate::client::fluent_builders::DescribeDimensionKeys::set_identifier): <p>An immutable, Amazon Web Services Region-unique identifier for a data source. Performance Insights gathers metrics from this data source.</p>  <p>To use an Amazon RDS instance as a data source, you specify its <code>DbiResourceId</code> value. For example, specify <code>db-FAIHNTYBKTGAUSUZQYPDS2GW4A</code>. </p>
    ///   - [`start_time(DateTime)`](crate::client::fluent_builders::DescribeDimensionKeys::start_time) / [`set_start_time(Option<DateTime>)`](crate::client::fluent_builders::DescribeDimensionKeys::set_start_time): <p>The date and time specifying the beginning of the requested time series data. You must specify a <code>StartTime</code> within the past 7 days. The value specified is <i>inclusive</i>, which means that data points equal to or greater than <code>StartTime</code> are returned. </p>  <p>The value for <code>StartTime</code> must be earlier than the value for <code>EndTime</code>. </p>
    ///   - [`end_time(DateTime)`](crate::client::fluent_builders::DescribeDimensionKeys::end_time) / [`set_end_time(Option<DateTime>)`](crate::client::fluent_builders::DescribeDimensionKeys::set_end_time): <p>The date and time specifying the end of the requested time series data. The value specified is <i>exclusive</i>, which means that data points less than (but not equal to) <code>EndTime</code> are returned.</p>  <p>The value for <code>EndTime</code> must be later than the value for <code>StartTime</code>.</p>
    ///   - [`metric(impl Into<String>)`](crate::client::fluent_builders::DescribeDimensionKeys::metric) / [`set_metric(Option<String>)`](crate::client::fluent_builders::DescribeDimensionKeys::set_metric): <p>The name of a Performance Insights metric to be measured.</p>  <p>Valid values for <code>Metric</code> are:</p>  <ul>   <li> <p> <code>db.load.avg</code> - A scaled representation of the number of active sessions for the database engine. </p> </li>   <li> <p> <code>db.sampledload.avg</code> - The raw number of active sessions for the database engine. </p> </li>  </ul>  <p>If the number of active sessions is less than an internal Performance Insights threshold, <code>db.load.avg</code> and <code>db.sampledload.avg</code> are the same value. If the number of active sessions is greater than the internal threshold, Performance Insights samples the active sessions, with <code>db.load.avg</code> showing the scaled values, <code>db.sampledload.avg</code> showing the raw values, and <code>db.sampledload.avg</code> less than <code>db.load.avg</code>. For most use cases, you can query <code>db.load.avg</code> only. </p>
    ///   - [`period_in_seconds(i32)`](crate::client::fluent_builders::DescribeDimensionKeys::period_in_seconds) / [`set_period_in_seconds(Option<i32>)`](crate::client::fluent_builders::DescribeDimensionKeys::set_period_in_seconds): <p>The granularity, in seconds, of the data points returned from Performance Insights. A period can be as short as one second, or as long as one day (86400 seconds). Valid values are: </p>  <ul>   <li> <p> <code>1</code> (one second)</p> </li>   <li> <p> <code>60</code> (one minute)</p> </li>   <li> <p> <code>300</code> (five minutes)</p> </li>   <li> <p> <code>3600</code> (one hour)</p> </li>   <li> <p> <code>86400</code> (twenty-four hours)</p> </li>  </ul>  <p>If you don't specify <code>PeriodInSeconds</code>, then Performance Insights chooses a value for you, with a goal of returning roughly 100-200 data points in the response. </p>
    ///   - [`group_by(DimensionGroup)`](crate::client::fluent_builders::DescribeDimensionKeys::group_by) / [`set_group_by(Option<DimensionGroup>)`](crate::client::fluent_builders::DescribeDimensionKeys::set_group_by): <p>A specification for how to aggregate the data points from a query result. You must specify a valid dimension group. Performance Insights returns all dimensions within this group, unless you provide the names of specific dimensions within this group. You can also request that Performance Insights return a limited number of values for a dimension. </p>
    ///   - [`additional_metrics(Vec<String>)`](crate::client::fluent_builders::DescribeDimensionKeys::additional_metrics) / [`set_additional_metrics(Option<Vec<String>>)`](crate::client::fluent_builders::DescribeDimensionKeys::set_additional_metrics): <p>Additional metrics for the top <code>N</code> dimension keys. If the specified dimension group in the <code>GroupBy</code> parameter is <code>db.sql_tokenized</code>, you can specify per-SQL metrics to get the values for the top <code>N</code> SQL digests. The response syntax is as follows: <code>"AdditionalMetrics" : { "<i>string</i>" : "<i>string</i>" }</code>. </p>
    ///   - [`partition_by(DimensionGroup)`](crate::client::fluent_builders::DescribeDimensionKeys::partition_by) / [`set_partition_by(Option<DimensionGroup>)`](crate::client::fluent_builders::DescribeDimensionKeys::set_partition_by): <p>For each dimension specified in <code>GroupBy</code>, specify a secondary dimension to further subdivide the partition keys in the response. </p>
    ///   - [`filter(HashMap<String, String>)`](crate::client::fluent_builders::DescribeDimensionKeys::filter) / [`set_filter(Option<HashMap<String, String>>)`](crate::client::fluent_builders::DescribeDimensionKeys::set_filter): <p>One or more filters to apply in the request. Restrictions:</p>  <ul>   <li> <p>Any number of filters by the same dimension, as specified in the <code>GroupBy</code> or <code>Partition</code> parameters.</p> </li>   <li> <p>A single filter for any other dimension in this dimension group.</p> </li>  </ul>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::DescribeDimensionKeys::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::DescribeDimensionKeys::set_max_results): <p>The maximum number of items to return in the response. If more items exist than the specified <code>MaxRecords</code> value, a pagination token is included in the response so that the remaining results can be retrieved. </p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::DescribeDimensionKeys::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::DescribeDimensionKeys::set_next_token): <p>An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the token, up to the value specified by <code>MaxRecords</code>.</p>
    /// - On success, responds with [`DescribeDimensionKeysOutput`](crate::output::DescribeDimensionKeysOutput) with field(s):
    ///   - [`aligned_start_time(Option<DateTime>)`](crate::output::DescribeDimensionKeysOutput::aligned_start_time): <p>The start time for the returned dimension keys, after alignment to a granular boundary (as specified by <code>PeriodInSeconds</code>). <code>AlignedStartTime</code> will be less than or equal to the value of the user-specified <code>StartTime</code>. </p>
    ///   - [`aligned_end_time(Option<DateTime>)`](crate::output::DescribeDimensionKeysOutput::aligned_end_time): <p>The end time for the returned dimension keys, after alignment to a granular boundary (as specified by <code>PeriodInSeconds</code>). <code>AlignedEndTime</code> will be greater than or equal to the value of the user-specified <code>Endtime</code>. </p>
    ///   - [`partition_keys(Option<Vec<ResponsePartitionKey>>)`](crate::output::DescribeDimensionKeysOutput::partition_keys): <p>If <code>PartitionBy</code> was present in the request, <code>PartitionKeys</code> contains the breakdown of dimension keys by the specified partitions. </p>
    ///   - [`keys(Option<Vec<DimensionKeyDescription>>)`](crate::output::DescribeDimensionKeysOutput::keys): <p>The dimension keys that were requested.</p>
    ///   - [`next_token(Option<String>)`](crate::output::DescribeDimensionKeysOutput::next_token): <p>A pagination token that indicates the response didn’t return all available records because <code>MaxRecords</code> was specified in the previous request. To get the remaining records, specify <code>NextToken</code> in a separate request with this value. </p>
    /// - On failure, responds with [`SdkError<DescribeDimensionKeysError>`](crate::error::DescribeDimensionKeysError)
    pub fn describe_dimension_keys(&self) -> crate::client::fluent_builders::DescribeDimensionKeys {
        crate::client::fluent_builders::DescribeDimensionKeys::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetDimensionKeyDetails`](crate::client::fluent_builders::GetDimensionKeyDetails) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`service_type(ServiceType)`](crate::client::fluent_builders::GetDimensionKeyDetails::service_type) / [`set_service_type(Option<ServiceType>)`](crate::client::fluent_builders::GetDimensionKeyDetails::set_service_type): <p>The Amazon Web Services service for which Performance Insights returns data. The only valid value is <code>RDS</code>.</p>
    ///   - [`identifier(impl Into<String>)`](crate::client::fluent_builders::GetDimensionKeyDetails::identifier) / [`set_identifier(Option<String>)`](crate::client::fluent_builders::GetDimensionKeyDetails::set_identifier): <p>The ID for a data source from which to gather dimension data. This ID must be immutable and unique within an Amazon Web Services Region. When a DB instance is the data source, specify its <code>DbiResourceId</code> value. For example, specify <code>db-ABCDEFGHIJKLMNOPQRSTU1VW2X</code>. </p>
    ///   - [`group(impl Into<String>)`](crate::client::fluent_builders::GetDimensionKeyDetails::group) / [`set_group(Option<String>)`](crate::client::fluent_builders::GetDimensionKeyDetails::set_group): <p>The name of the dimension group. Performance Insights searches the specified group for the dimension group ID. The following group name values are valid:</p>  <ul>   <li> <p> <code>db.query</code> (Amazon DocumentDB only)</p> </li>   <li> <p> <code>db.sql</code> (Amazon RDS and Aurora only)</p> </li>  </ul>
    ///   - [`group_identifier(impl Into<String>)`](crate::client::fluent_builders::GetDimensionKeyDetails::group_identifier) / [`set_group_identifier(Option<String>)`](crate::client::fluent_builders::GetDimensionKeyDetails::set_group_identifier): <p>The ID of the dimension group from which to retrieve dimension details. For dimension group <code>db.sql</code>, the group ID is <code>db.sql.id</code>. The following group ID values are valid:</p>  <ul>   <li> <p> <code>db.sql.id</code> for dimension group <code>db.sql</code> (Aurora and RDS only)</p> </li>   <li> <p> <code>db.query.id</code> for dimension group <code>db.query</code> (DocumentDB only)</p> </li>  </ul>
    ///   - [`requested_dimensions(Vec<String>)`](crate::client::fluent_builders::GetDimensionKeyDetails::requested_dimensions) / [`set_requested_dimensions(Option<Vec<String>>)`](crate::client::fluent_builders::GetDimensionKeyDetails::set_requested_dimensions): <p>A list of dimensions to retrieve the detail data for within the given dimension group. If you don't specify this parameter, Performance Insights returns all dimension data within the specified dimension group. Specify dimension names for the following dimension groups:</p>  <ul>   <li> <p> <code>db.sql</code> - Specify either the full dimension name <code>db.sql.statement</code> or the short dimension name <code>statement</code> (Aurora and RDS only).</p> </li>   <li> <p> <code>db.query</code> - Specify either the full dimension name <code>db.query.statement</code> or the short dimension name <code>statement</code> (DocumentDB only).</p> </li>  </ul>
    /// - On success, responds with [`GetDimensionKeyDetailsOutput`](crate::output::GetDimensionKeyDetailsOutput) with field(s):
    ///   - [`dimensions(Option<Vec<DimensionKeyDetail>>)`](crate::output::GetDimensionKeyDetailsOutput::dimensions): <p>The details for the requested dimensions.</p>
    /// - On failure, responds with [`SdkError<GetDimensionKeyDetailsError>`](crate::error::GetDimensionKeyDetailsError)
    pub fn get_dimension_key_details(
        &self,
    ) -> crate::client::fluent_builders::GetDimensionKeyDetails {
        crate::client::fluent_builders::GetDimensionKeyDetails::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetResourceMetadata`](crate::client::fluent_builders::GetResourceMetadata) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`service_type(ServiceType)`](crate::client::fluent_builders::GetResourceMetadata::service_type) / [`set_service_type(Option<ServiceType>)`](crate::client::fluent_builders::GetResourceMetadata::set_service_type): <p>The Amazon Web Services service for which Performance Insights returns metrics.</p>
    ///   - [`identifier(impl Into<String>)`](crate::client::fluent_builders::GetResourceMetadata::identifier) / [`set_identifier(Option<String>)`](crate::client::fluent_builders::GetResourceMetadata::set_identifier): <p>An immutable identifier for a data source that is unique for an Amazon Web Services Region. Performance Insights gathers metrics from this data source. To use a DB instance as a data source, specify its <code>DbiResourceId</code> value. For example, specify <code>db-ABCDEFGHIJKLMNOPQRSTU1VW2X</code>. </p>
    /// - On success, responds with [`GetResourceMetadataOutput`](crate::output::GetResourceMetadataOutput) with field(s):
    ///   - [`identifier(Option<String>)`](crate::output::GetResourceMetadataOutput::identifier): <p>An immutable identifier for a data source that is unique for an Amazon Web Services Region. Performance Insights gathers metrics from this data source. To use a DB instance as a data source, specify its <code>DbiResourceId</code> value. For example, specify <code>db-ABCDEFGHIJKLMNOPQRSTU1VW2X</code>. </p>
    ///   - [`features(Option<HashMap<String, FeatureMetadata>>)`](crate::output::GetResourceMetadataOutput::features): <p>The metadata for different features. For example, the metadata might indicate that a feature is turned on or off on a specific DB instance.</p>
    /// - On failure, responds with [`SdkError<GetResourceMetadataError>`](crate::error::GetResourceMetadataError)
    pub fn get_resource_metadata(&self) -> crate::client::fluent_builders::GetResourceMetadata {
        crate::client::fluent_builders::GetResourceMetadata::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`GetResourceMetrics`](crate::client::fluent_builders::GetResourceMetrics) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::GetResourceMetrics::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`service_type(ServiceType)`](crate::client::fluent_builders::GetResourceMetrics::service_type) / [`set_service_type(Option<ServiceType>)`](crate::client::fluent_builders::GetResourceMetrics::set_service_type): <p>The Amazon Web Services service for which Performance Insights returns metrics. Valid values are as follows:</p>  <ul>   <li> <p> <code>RDS</code> </p> </li>   <li> <p> <code>DOCDB</code> </p> </li>  </ul>
    ///   - [`identifier(impl Into<String>)`](crate::client::fluent_builders::GetResourceMetrics::identifier) / [`set_identifier(Option<String>)`](crate::client::fluent_builders::GetResourceMetrics::set_identifier): <p>An immutable identifier for a data source that is unique for an Amazon Web Services Region. Performance Insights gathers metrics from this data source. In the console, the identifier is shown as <i>ResourceID</i>. When you call <code>DescribeDBInstances</code>, the identifier is returned as <code>DbiResourceId</code>.</p>  <p>To use a DB instance as a data source, specify its <code>DbiResourceId</code> value. For example, specify <code>db-ABCDEFGHIJKLMNOPQRSTU1VW2X</code>.</p>
    ///   - [`metric_queries(Vec<MetricQuery>)`](crate::client::fluent_builders::GetResourceMetrics::metric_queries) / [`set_metric_queries(Option<Vec<MetricQuery>>)`](crate::client::fluent_builders::GetResourceMetrics::set_metric_queries): <p>An array of one or more queries to perform. Each query must specify a Performance Insights metric, and can optionally specify aggregation and filtering criteria.</p>
    ///   - [`start_time(DateTime)`](crate::client::fluent_builders::GetResourceMetrics::start_time) / [`set_start_time(Option<DateTime>)`](crate::client::fluent_builders::GetResourceMetrics::set_start_time): <p>The date and time specifying the beginning of the requested time series query range. You can't specify a <code>StartTime</code> that is earlier than 7 days ago. By default, Performance Insights has 7 days of retention, but you can extend this range up to 2 years. The value specified is <i>inclusive</i>. Thus, the command returns data points equal to or greater than <code>StartTime</code>.</p>  <p>The value for <code>StartTime</code> must be earlier than the value for <code>EndTime</code>.</p>
    ///   - [`end_time(DateTime)`](crate::client::fluent_builders::GetResourceMetrics::end_time) / [`set_end_time(Option<DateTime>)`](crate::client::fluent_builders::GetResourceMetrics::set_end_time): <p>The date and time specifying the end of the requested time series query range. The value specified is <i>exclusive</i>. Thus, the command returns data points less than (but not equal to) <code>EndTime</code>.</p>  <p>The value for <code>EndTime</code> must be later than the value for <code>StartTime</code>.</p>
    ///   - [`period_in_seconds(i32)`](crate::client::fluent_builders::GetResourceMetrics::period_in_seconds) / [`set_period_in_seconds(Option<i32>)`](crate::client::fluent_builders::GetResourceMetrics::set_period_in_seconds): <p>The granularity, in seconds, of the data points returned from Performance Insights. A period can be as short as one second, or as long as one day (86400 seconds). Valid values are:</p>  <ul>   <li> <p> <code>1</code> (one second)</p> </li>   <li> <p> <code>60</code> (one minute)</p> </li>   <li> <p> <code>300</code> (five minutes)</p> </li>   <li> <p> <code>3600</code> (one hour)</p> </li>   <li> <p> <code>86400</code> (twenty-four hours)</p> </li>  </ul>  <p>If you don't specify <code>PeriodInSeconds</code>, then Performance Insights will choose a value for you, with a goal of returning roughly 100-200 data points in the response.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::GetResourceMetrics::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::GetResourceMetrics::set_max_results): <p>The maximum number of items to return in the response. If more items exist than the specified <code>MaxRecords</code> value, a pagination token is included in the response so that the remaining results can be retrieved. </p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::GetResourceMetrics::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::GetResourceMetrics::set_next_token): <p>An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the token, up to the value specified by <code>MaxRecords</code>.</p>
    /// - On success, responds with [`GetResourceMetricsOutput`](crate::output::GetResourceMetricsOutput) with field(s):
    ///   - [`aligned_start_time(Option<DateTime>)`](crate::output::GetResourceMetricsOutput::aligned_start_time): <p>The start time for the returned metrics, after alignment to a granular boundary (as specified by <code>PeriodInSeconds</code>). <code>AlignedStartTime</code> will be less than or equal to the value of the user-specified <code>StartTime</code>.</p>
    ///   - [`aligned_end_time(Option<DateTime>)`](crate::output::GetResourceMetricsOutput::aligned_end_time): <p>The end time for the returned metrics, after alignment to a granular boundary (as specified by <code>PeriodInSeconds</code>). <code>AlignedEndTime</code> will be greater than or equal to the value of the user-specified <code>Endtime</code>.</p>
    ///   - [`identifier(Option<String>)`](crate::output::GetResourceMetricsOutput::identifier): <p>An immutable identifier for a data source that is unique for an Amazon Web Services Region. Performance Insights gathers metrics from this data source. In the console, the identifier is shown as <i>ResourceID</i>. When you call <code>DescribeDBInstances</code>, the identifier is returned as <code>DbiResourceId</code>.</p>
    ///   - [`metric_list(Option<Vec<MetricKeyDataPoints>>)`](crate::output::GetResourceMetricsOutput::metric_list): <p>An array of metric results, where each array element contains all of the data points for a particular dimension.</p>
    ///   - [`next_token(Option<String>)`](crate::output::GetResourceMetricsOutput::next_token): <p>An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the token, up to the value specified by <code>MaxRecords</code>. </p>
    /// - On failure, responds with [`SdkError<GetResourceMetricsError>`](crate::error::GetResourceMetricsError)
    pub fn get_resource_metrics(&self) -> crate::client::fluent_builders::GetResourceMetrics {
        crate::client::fluent_builders::GetResourceMetrics::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListAvailableResourceDimensions`](crate::client::fluent_builders::ListAvailableResourceDimensions) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListAvailableResourceDimensions::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`service_type(ServiceType)`](crate::client::fluent_builders::ListAvailableResourceDimensions::service_type) / [`set_service_type(Option<ServiceType>)`](crate::client::fluent_builders::ListAvailableResourceDimensions::set_service_type): <p>The Amazon Web Services service for which Performance Insights returns metrics.</p>
    ///   - [`identifier(impl Into<String>)`](crate::client::fluent_builders::ListAvailableResourceDimensions::identifier) / [`set_identifier(Option<String>)`](crate::client::fluent_builders::ListAvailableResourceDimensions::set_identifier): <p>An immutable identifier for a data source that is unique within an Amazon Web Services Region. Performance Insights gathers metrics from this data source. To use an Amazon RDS DB instance as a data source, specify its <code>DbiResourceId</code> value. For example, specify <code>db-ABCDEFGHIJKLMNOPQRSTU1VWZ</code>. </p>
    ///   - [`metrics(Vec<String>)`](crate::client::fluent_builders::ListAvailableResourceDimensions::metrics) / [`set_metrics(Option<Vec<String>>)`](crate::client::fluent_builders::ListAvailableResourceDimensions::set_metrics): <p>The types of metrics for which to retrieve dimensions. Valid values include <code>db.load</code>.</p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListAvailableResourceDimensions::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListAvailableResourceDimensions::set_max_results): <p>The maximum number of items to return in the response. If more items exist than the specified <code>MaxRecords</code> value, a pagination token is included in the response so that the remaining results can be retrieved.</p>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListAvailableResourceDimensions::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListAvailableResourceDimensions::set_next_token): <p>An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the token, up to the value specified by <code>MaxRecords</code>. </p>
    /// - On success, responds with [`ListAvailableResourceDimensionsOutput`](crate::output::ListAvailableResourceDimensionsOutput) with field(s):
    ///   - [`metric_dimensions(Option<Vec<MetricDimensionGroups>>)`](crate::output::ListAvailableResourceDimensionsOutput::metric_dimensions): <p>The dimension information returned for requested metric types.</p>
    ///   - [`next_token(Option<String>)`](crate::output::ListAvailableResourceDimensionsOutput::next_token): <p>An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the token, up to the value specified by <code>MaxRecords</code>.</p>
    /// - On failure, responds with [`SdkError<ListAvailableResourceDimensionsError>`](crate::error::ListAvailableResourceDimensionsError)
    pub fn list_available_resource_dimensions(
        &self,
    ) -> crate::client::fluent_builders::ListAvailableResourceDimensions {
        crate::client::fluent_builders::ListAvailableResourceDimensions::new(self.handle.clone())
    }
    /// Constructs a fluent builder for the [`ListAvailableResourceMetrics`](crate::client::fluent_builders::ListAvailableResourceMetrics) operation.
    /// This operation supports pagination; See [`into_paginator()`](crate::client::fluent_builders::ListAvailableResourceMetrics::into_paginator).
    ///
    /// - The fluent builder is configurable:
    ///   - [`service_type(ServiceType)`](crate::client::fluent_builders::ListAvailableResourceMetrics::service_type) / [`set_service_type(Option<ServiceType>)`](crate::client::fluent_builders::ListAvailableResourceMetrics::set_service_type): <p>The Amazon Web Services service for which Performance Insights returns metrics.</p>
    ///   - [`identifier(impl Into<String>)`](crate::client::fluent_builders::ListAvailableResourceMetrics::identifier) / [`set_identifier(Option<String>)`](crate::client::fluent_builders::ListAvailableResourceMetrics::set_identifier): <p>An immutable identifier for a data source that is unique within an Amazon Web Services Region. Performance Insights gathers metrics from this data source. To use an Amazon RDS DB instance as a data source, specify its <code>DbiResourceId</code> value. For example, specify <code>db-ABCDEFGHIJKLMNOPQRSTU1VWZ</code>. </p>
    ///   - [`metric_types(Vec<String>)`](crate::client::fluent_builders::ListAvailableResourceMetrics::metric_types) / [`set_metric_types(Option<Vec<String>>)`](crate::client::fluent_builders::ListAvailableResourceMetrics::set_metric_types): <p>The types of metrics to return in the response. Valid values in the array include the following:</p>  <ul>   <li> <p> <code>os</code> (OS counter metrics) - All engines</p> </li>   <li> <p> <code>db</code> (DB load metrics) - All engines except for Amazon DocumentDB</p> </li>   <li> <p> <code>db.sql.stats</code> (per-SQL metrics) - All engines except for Amazon DocumentDB</p> </li>   <li> <p> <code>db.sql_tokenized.stats</code> (per-SQL digest metrics) - All engines except for Amazon DocumentDB</p> </li>  </ul>
    ///   - [`next_token(impl Into<String>)`](crate::client::fluent_builders::ListAvailableResourceMetrics::next_token) / [`set_next_token(Option<String>)`](crate::client::fluent_builders::ListAvailableResourceMetrics::set_next_token): <p>An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the token, up to the value specified by <code>MaxRecords</code>. </p>
    ///   - [`max_results(i32)`](crate::client::fluent_builders::ListAvailableResourceMetrics::max_results) / [`set_max_results(Option<i32>)`](crate::client::fluent_builders::ListAvailableResourceMetrics::set_max_results): <p>The maximum number of items to return. If the <code>MaxRecords</code> value is less than the number of existing items, the response includes a pagination token. </p>
    /// - On success, responds with [`ListAvailableResourceMetricsOutput`](crate::output::ListAvailableResourceMetricsOutput) with field(s):
    ///   - [`metrics(Option<Vec<ResponseResourceMetric>>)`](crate::output::ListAvailableResourceMetricsOutput::metrics): <p>An array of metrics available to query. Each array element contains the full name, description, and unit of the metric. </p>
    ///   - [`next_token(Option<String>)`](crate::output::ListAvailableResourceMetricsOutput::next_token): <p>A pagination token that indicates the response didn’t return all available records because <code>MaxRecords</code> was specified in the previous request. To get the remaining records, specify <code>NextToken</code> in a separate request with this value. </p>
    /// - On failure, responds with [`SdkError<ListAvailableResourceMetricsError>`](crate::error::ListAvailableResourceMetricsError)
    pub fn list_available_resource_metrics(
        &self,
    ) -> crate::client::fluent_builders::ListAvailableResourceMetrics {
        crate::client::fluent_builders::ListAvailableResourceMetrics::new(self.handle.clone())
    }
}

impl Client {
    /// Creates a new client from an [SDK Config](aws_types::sdk_config::SdkConfig).
    ///
    /// # Panics
    ///
    /// - This method will panic if the `sdk_config` is missing an async sleep implementation. If you experience this panic, set
    ///     the `sleep_impl` on the Config passed into this function to fix it.
    /// - This method will panic if the `sdk_config` is missing an HTTP connector. If you experience this panic, set the
    ///     `http_connector` on the Config passed into this function to fix it.
    pub fn new(sdk_config: &aws_types::sdk_config::SdkConfig) -> Self {
        Self::from_conf(sdk_config.into())
    }

    /// Creates a new client from the service [`Config`](crate::Config).
    ///
    /// # Panics
    ///
    /// - This method will panic if the `conf` is missing an async sleep implementation. If you experience this panic, set
    ///     the `sleep_impl` on the Config passed into this function to fix it.
    /// - This method will panic if the `conf` is missing an HTTP connector. If you experience this panic, set the
    ///     `http_connector` on the Config passed into this function to fix it.
    pub fn from_conf(conf: crate::Config) -> Self {
        let retry_config = conf
            .retry_config()
            .cloned()
            .unwrap_or_else(aws_smithy_types::retry::RetryConfig::disabled);
        let timeout_config = conf
            .timeout_config()
            .cloned()
            .unwrap_or_else(aws_smithy_types::timeout::TimeoutConfig::disabled);
        let sleep_impl = conf.sleep_impl();
        if (retry_config.has_retry() || timeout_config.has_timeouts()) && sleep_impl.is_none() {
            panic!("An async sleep implementation is required for retries or timeouts to work. \
                                    Set the `sleep_impl` on the Config passed into this function to fix this panic.");
        }

        let connector = conf.http_connector().and_then(|c| {
            let timeout_config = conf
                .timeout_config()
                .cloned()
                .unwrap_or_else(aws_smithy_types::timeout::TimeoutConfig::disabled);
            let connector_settings =
                aws_smithy_client::http_connector::ConnectorSettings::from_timeout_config(
                    &timeout_config,
                );
            c.connector(&connector_settings, conf.sleep_impl())
        });

        let builder = aws_smithy_client::Builder::new();

        let builder = match connector {
            // Use provided connector
            Some(c) => builder.connector(c),
            None => {
                #[cfg(any(feature = "rustls", feature = "native-tls"))]
                {
                    // Use default connector based on enabled features
                    builder.dyn_https_connector(
                        aws_smithy_client::http_connector::ConnectorSettings::from_timeout_config(
                            &timeout_config,
                        ),
                    )
                }
                #[cfg(not(any(feature = "rustls", feature = "native-tls")))]
                {
                    panic!("No HTTP connector was available. Enable the `rustls` or `native-tls` crate feature or set a connector to fix this.");
                }
            }
        };
        let mut builder = builder
            .middleware(aws_smithy_client::erase::DynMiddleware::new(
                crate::middleware::DefaultMiddleware::new(),
            ))
            .retry_config(retry_config.into())
            .operation_timeout_config(timeout_config.into());
        builder.set_sleep_impl(sleep_impl);
        let client = builder.build();

        Self {
            handle: std::sync::Arc::new(Handle { client, conf }),
        }
    }
}

/// Utilities to ergonomically construct a request to the service.
///
/// Fluent builders are created through the [`Client`](crate::client::Client) by calling
/// one if its operation methods. After parameters are set using the builder methods,
/// the `send` method can be called to initiate the request.
pub mod fluent_builders;
