// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GetDimensionKeyDetailsOutput {
    /// <p>The details for the requested dimensions.</p>
    pub dimensions: ::std::option::Option<::std::vec::Vec<crate::types::DimensionKeyDetail>>,
    _request_id: Option<String>,
}
impl GetDimensionKeyDetailsOutput {
    /// <p>The details for the requested dimensions.</p>
    ///
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.dimensions.is_none()`.
    pub fn dimensions(&self) -> &[crate::types::DimensionKeyDetail] {
        self.dimensions.as_deref().unwrap_or_default()
    }
}
impl ::aws_http::request_id::RequestId for GetDimensionKeyDetailsOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl GetDimensionKeyDetailsOutput {
    /// Creates a new builder-style object to manufacture [`GetDimensionKeyDetailsOutput`](crate::operation::get_dimension_key_details::GetDimensionKeyDetailsOutput).
    pub fn builder() -> crate::operation::get_dimension_key_details::builders::GetDimensionKeyDetailsOutputBuilder {
        crate::operation::get_dimension_key_details::builders::GetDimensionKeyDetailsOutputBuilder::default()
    }
}

/// A builder for [`GetDimensionKeyDetailsOutput`](crate::operation::get_dimension_key_details::GetDimensionKeyDetailsOutput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct GetDimensionKeyDetailsOutputBuilder {
    pub(crate) dimensions: ::std::option::Option<::std::vec::Vec<crate::types::DimensionKeyDetail>>,
    _request_id: Option<String>,
}
impl GetDimensionKeyDetailsOutputBuilder {
    /// Appends an item to `dimensions`.
    ///
    /// To override the contents of this collection use [`set_dimensions`](Self::set_dimensions).
    ///
    /// <p>The details for the requested dimensions.</p>
    pub fn dimensions(mut self, input: crate::types::DimensionKeyDetail) -> Self {
        let mut v = self.dimensions.unwrap_or_default();
        v.push(input);
        self.dimensions = ::std::option::Option::Some(v);
        self
    }
    /// <p>The details for the requested dimensions.</p>
    pub fn set_dimensions(mut self, input: ::std::option::Option<::std::vec::Vec<crate::types::DimensionKeyDetail>>) -> Self {
        self.dimensions = input;
        self
    }
    /// <p>The details for the requested dimensions.</p>
    pub fn get_dimensions(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::DimensionKeyDetail>> {
        &self.dimensions
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`GetDimensionKeyDetailsOutput`](crate::operation::get_dimension_key_details::GetDimensionKeyDetailsOutput).
    pub fn build(self) -> crate::operation::get_dimension_key_details::GetDimensionKeyDetailsOutput {
        crate::operation::get_dimension_key_details::GetDimensionKeyDetailsOutput {
            dimensions: self.dimensions,
            _request_id: self._request_id,
        }
    }
}
